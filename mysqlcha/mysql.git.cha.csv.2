----------------------------
"WL#7316 Optimizer cost model: Command for online updating of cost model constants Implements the FLUSH OPTIMIZER_COSTS command. This command will reload the optimizer ""cost constants"" from the configuration tables into the ""cost constant"" cache. New sessions will use the updated ""cost constants"". "	b6a6075d32d734f99bb79b4782d5c32d37b239f0
----------------------------
"WL#7276 Configuration data base for Optimizer Cost Model This worklogs adds two new tables to the ""mysql"" database for storing ""cost constants"" that will be used by the optimizer cost model. The two new tables are: - server_cost: This stores cost constants for server cost model. - engine_cost: For storing cost constants for the cost model for storage engines. The tables are created by the mysql_system_tables.sql script that is run when bootstrapping and upgrading the MySQL server. "	1ff69ecb3d0a5a8fcf676039d3ea7f7d99a6a1ad
----------------------------
Pass --core-file when starting mysqld in order to catch crashes such as Bug#19505636 INNODB.LOG_FILE_SIZE FAILS WITH WRONG ERRNO 2006 Approved by Jimmy Yang. 	58cba4ddaced67999b7dcd1b54351352300626e7
----------------------------
Bug#19424197 : MYSQLSLAP --SQL-MODE OPTION OF OUT ORDER IN --HELP MESSAGE --sql-mode option was added by WL#7764 to mysqlslap tool. It was added out of order in --help message. Fixed --sql-mode option position to appear in lexical order in the --help message. 	78c2d214d5cd26979ea2608bf7581b649f7f5e90
----------------------------
Bug#19179338 GET RID OF DYNAMIC_ARRAY IN RELAY_LOG_INFO AND DEFERRED_LOG_EVENTS Bug#19191355 PB2 A NUMBER OF RPL TESTS CRASHED THE SERVER IN METHOD LOG_EVENT::APPLY_EVENT Our array abstractions should be removed, and substituted with modern data structures. Templatized vectors are: - type safe - easier to read/maintain - faster Also: fix a bug introduced by WL#6964 MTS: Support SLAVE_TRANSACTION_RETRIES in MTS mode The curr_group_da array now contains Slave_job_item structs, rather than Log_event pointers. One part of that refactoring was missed, and we were still inserting pointers into the array. Also: make code more type-safe by changing Slave_job_item::data from void* to Log_event* 	f0406babedea2268fb04cc19cf4a423d1486c7bc
----------------------------
Bug #19435077 MYSQL_UPGRADE MUST HAVE --SECURE-AUTH OPTION DEPRECATED WL#7308 introduces rewritten mysql_upgrade. Before completion of WL#7308 the WL#8006 was pushed, which makes --secure-auth option in all clients deprecated. --secure-auth option is made deprecated. 	cc88307d9e03d64b34a3bbd6a6a6db8d65f0cd13
----------------------------
Bug#19229231 INNODB.LOG_FILE_NAME FAILS SPORADICALLY ON PB2 or revisiting Bug#11763660 PLEASE ASSERT INSTEAD OF CALLING EXIT(1) On crash recovery, InnoDB was calling exit() when noticing corruption or inconsistency. This call triggered a debug assertion failure ut_ad(!m_freed) in a I/O handler thread that was trying to acquire a mutex. A better solution is to return an error to the caller of innobase_init() and letting a proper shutdown happen. innodb.log_corruption: Adjust the excepted message. We no longer trigger a crash (assertion failure) when noticing a corrupted log record. fil_op_replay_rename(): Return whether the operation was successfully processed. The operation can fail if both the old and new name exist, and the old name is for the requested tablespace_id. recv_sys_t::found_corrupt_fs: A new field, to be set when inconsistency between the redo log and the file system is detected and manual intervention is needed. fil_name_process(): Set recv_sys->found_corrupt_fs when needed. fil_name_parse(): When finding invalid contents inside a MLOG_FILE_* record, let the caller know the presumed length of the record.  When failing to replay a MLOG_FILE_RENAME operation, set recv_sys->found_corrupt_fs. recv_report_corrupt_log(): Return whether processing should continue. (If innodb_force_recovery is set, it may continue.) recv_parse_log_recs(): Return true also if processing was aborted due to corruption. This will let the caller stop the processing. recv_scan_log_recs(): Check for recv_sys->found_corrupt_fs. recv_group_scan_log_recs(): If corruption was noticed, return false. recv_recovery_from_checkpoint_start(): Return an error to the caller if recv_sys->found_corrupt_log or recv_sys->found_corrupt_fs is set. Add a missing log_mutex_exit() call to apparently uncovered error handling code. innobase_start_or_create_for_mysql(): Remove a check if pthread_mutex_trylock() works, and the associated exit() call. rb#6341 approved by Jimmy Yang 	d50a9ab252e75e5ef3bfc0bf13af6c99fa00a142
----------------------------
"BUG#17326020 ASSERTION ON SLAVE AFTER STOP/START SLAVE USING MTS+GTID REPLICATION Problem: ======= When the IO thread reconnects to a master using GTID auto positioning while in the middle of a transaction, it will left the partial transaction on the relaylog and will fully retrieve the same transaction again. If the slave is configured to use MTS, it will hit an assert ""!worker"" once reaching the ROTATE_LOG_EVENT send by the master in the IO thread reconnection. Analysis: ======== Once a slave with MTS reaches the beginning of a group (by an GTID_LOG_EVENT or QUERY(BEGIN)), it will expect to feed the same worker with events until reaching the end of the transaction. No events that should be applied synchronously (by the MTS coordinator with all workers waiting for jobs) can be applied while MTS is feeding a worker with events. The assertion exists to stop the server execution in such situations. The correct behavior of the slave once knowing that a transaction was left in the middle and will not finish (as it will be applied again from the beginning later) is to abort this transaction. STS SQL thread knows how to rollback the incomplete transaction, but MTS doesn't know how to do it yet. Fix: === The SQL slave will now check if it is going to apply a synchronous ROTATE_LOG_EVENT sent by the master during GTID auto negotiation after IO thread reconnection. Before applying this ROTATE_LOG_EVENT, the SQL slave will check also if it is in the middle of a group. If it is, it will queue to the current worker a QUERY(ROLLBACK) event to make the worker gracefully finish its work and, only then, will let the MTS coordinator to apply the ROTATE_LOG_EVENT in synchronous mode. @ sql/rpl_slave.cc Added code into exec_relay_log_event() to inject a QUERY(ROLLBACK) event if necessary to make the current worker gracefully finish its job before applying an event that needs synchronous MTS execution. "	85e4d1805752dfffaf928f6ad57d6445504696ef
----------------------------
WL#6964 MTS: Support SLAVE_TRANSACTION_RETRIES in MTS mode Removed the unnecessary statement 'SELECT @@slave_parallel_type' which would have different result and cause a test failure if LOGICAL_CLOCK was set as the default through mysqld option. 	f99c44e6dc649d31bd71ea9b72f5a587a407eeb2
----------------------------
WL#6964 MTS: Support SLAVE_TRANSACTION_RETRIES in MTS mode Postfix: Fixed the valgrind warning that trans_retries was not initialized. And a possible memory leak on the allocated Log_event if it was a Rotate_log_event or other types of event didn't belong to the transaction. 	eb76050c8b0016b21dc90ab6166d218ea40cc9c9
----------------------------
WL#6964  MTS: Support SLAVE_TRANSACTION_RETRIES in MTS mode DESCRIPTION =========== This patch implemented slave_transaction_retries feature on multi-threaded slave. Workers can retry the transactions being applied automatically if any temporary error is encountered. Basically, the behaviour of retrying transaction on multi-threaded slave is same to the behavior of retrying transaction on singled-threaded slave. Definitions of temporary error are same, and sleep policies are same too. DESIGN ====== - How To Retry The worker reads the transaction's event from relay logs and applies them. But it just reads and applies the events from the first one to the one on which temporary error happens. The following events are still in job queue, so they are not read from relay logs. - How To Know Events' Positions of The Transaction When coordinator dispatches each event to a worker, it stores the event's position (relay log name and offset) into Slave_job_item structure together with the event. To minimize the performance impact, relay log name is not stored as a string. As you know, relay log's extension is an auto-increment number. So we just store the number as a integer into Slave_job_item. Workers can construct the real relay log name by using relay_log_basename server variable and the number. NOTE: Workers may construct a wrong relay log name if users have changed relay log base name and events of the transactions are in the relay log with old basename. In this case, slave will stop with an error. 	d7c2070c7de6a899bed68717e54f07a2f4146a87
----------------------------
"Bug#17867478 BINLOG.BINLOG_SERVER_START_OPTIONS FAILING DUE TO ERROR IN SERVER LOGS Problem: An error in the logs is causing the test to fail Analysis: If one has a closer look at the issue has always been there. But since mysqld was waiting for an error, the test didn't failed when mysqld crashed because a the missing property. But i went further on the analysis and the test was not testing what was coded, which was ""if the param 'datadir' is empty then we should switch its value to point to the actual 'datadir'"" This possibly corrects also other bugs. Fix: Rewrite the mysql test to check if the modification of the variable value suceeded only on the context of rpl_make_log_name. "	79101e63ccff68391d6592857a68bf13673a4188
----------------------------
Fix for bug #19192826 and bug #19192849 * Added $basedir/sbin to the list of directories to search for mysqld * added $basedir/share/mysql/english to the list of directories to search for language * Addressed a failure to set the group id reported by Sunanda 	6e22d0fb0710a334ac8109dd17a78d948c2d6936
----------------------------
"WL#8006: remove mysql_old_password * Marked server-side --secure-auth as a ""zombie"" option: can't set it to anything but 1. Throws a warning when used. * Marked client-side --secure-auth option as a ""zombie"" option. Returns a deprecation warning when used.And returns an error is anything but 1 is specified. * Removed mysql_old_passwords server plugin * Removed mysql_old_passwords libmysql plugin * old_passwords server side option does not allow setting to 1. So it's only 0 and 2 * Removed the OLD_PASSWORD() SQL function. * Multiple internal special cases clean up from the server. * Cleanup of the test cases testing old_password * Update of the relevant test cases to cover the new functionality. * Created a macro for the deprecation warning in the client tools. * Explictly marked --secure-auth as zombie in the help text too. * Removed all the calls to mysql_options(MYSQL_SECURE_AUTH) from the client tools. * Added a check to mysql_options(MYSQL_SECURE_AUTH) to generate an error if value is anything but 1 * Removed the SKIPSECUREAUTH mysqltest connection option. * Cleaned up trailing space. * Removed references to old_plugin from scripts/ "	a7cd8b08443320a2d73279690282b5eadb300e41
----------------------------
WL#7976: Deprecate skip-innodb in 5.6, remove in 5.7. This patch marks the InnoDB plugin as mandatory, meaning that there is no way to disable it from the configuration (including command line options). Added a test case to ensure that there is no way to disable InnoDB. 	4ad284c2142afd4b20815fc6ddbdfca5925472d9
----------------------------
Fix Bug 19204759 - DAEMON_MEMCACHED_OPTION NOT SHOWN CORRECTLY rb://6072 approved by Sunny Bains 	7a2481c0c77e22957bbfd9e7bc58c1e173249b8a
----------------------------
"BUG#18652178 STOP SQL_THREAD, START SQL_THREAD CAUSES A TRX TO LOG WITH A DIFFERENT GTID BUG#18306199 START SLAVE UNTIL MASTER_LOG_POS=MIDDLE-OF-GTID-EVENT STOPS BEFORE TRANSACTION Problem: ======= Slave loses track of GTID-header group boundaries when the group spans across multiple relay log files. This means that when the transaction is retried, or if you stop the SQL thread in the middle of a transaction after some Rotates (considering that the transaction/group was spanned into multiple relay log files), the Gtid_log_event will be silently skipped on slave, and the transaction will be logged with a slave's GTID. Also, when using ""START SLAVE UNTIL MASTER_LOG_POS = x;"", if ""x"" is in the middle of a transaction, the server is supposed to complete the transaction. This works fine when GTIDs are disabled. However, when GTIDs are enabled, if ""x"" is in the middle of the Gtid_log_event, it will stop before the transaction, not considering the Gtid_log_event as the beginning of the transaction. Analysis: ======== When Rotate events are applied at the slave, the SQL thread verifies if it is not inside of a transaction to update SQL thread position. For STS, the SQL thread uses the Relay_log_info::is_in_group() function to determine if it is inside of a transaction. It was found a problem in Relay_log_info::is_in_group(). It wasn't considering a Gtid_log_event as the beginning of a group/transaction. Because of this problem, the SQL thread was updating its position when applying a Rotate_log_event that immediately follows a Gtid_log_event (i.e., in the middle of a transaction but outside BEGIN...COMMIT). This should not happen, as SQL thread position should not be updated in the middle of a transaction so it could retry (or re-apply) the transaction from the beginning in the case of failures because of InnoDB deadlock or because the transaction's execution time exceeded InnoDB's innodb_lock_wait_timeout (or in the case of a request to stop the SQL thread). For the problem with ""START SLAVE UNTIL MASTER..."", the SQL thread uses the Relay_log_info::is_until_satisfied() function to verify if the until condition is satisfied. In this function, when the until condition is UNTIL_MASTER_POS, the SQL thread will use the current transaction position if in the middle of a transaction or the current event position if not in the middle of a transaction. This verification wasn't considering an Gtid_log_event as the beginning of a transaction. Fix: === Made Relay_log_info::is_in_group() to check if the thread has a GTID set to the current transaction. If so, it will return true, stating that it is already in a group. Made Relay_log_info::is_until_satisfied() to use the is_in_group() function to verify if the SQL thread is in the middle of a transaction. With this change, is_until_satisfied() will consider the Gtid_log_event as part of the transaction. "	aca2c83266d52608548d6c687341c31f331455fd
----------------------------
"Bug#18731211  Duplicate slave server_uuid in replication forum gives no specific error message Problem & Analysis: =================== When a new slave joins to a replication forum with uuid which is exactly same as one of the existing slave's uuid, then master is confused between old slave and the newly joined slave. When com_binlog_send request comes from newly joined slave, it thinks that old slave's dump thread is zombie and kills it. After some time, old slave tries to reconnect to the master and sends com_binlog_send request to Master. Then Master thinks that newly joined slave's dump thread is zombie and kills it. This ping-pong reconnections between Master->old_slave and Master->new_slave happens continously. This is known expected behaviour but the error message in old_slave and new_slave's error log file is not clear enough to identify this situation. Information in error log file was: ""received end packet from server, apparent master shutdown"" which does not say anything about server_uuid misconfiguration in the replication forum. Fix: Changing the error message which clearly mentions all the possible causes which resulted this disconnection. New information in error log file is: ""Slave: received end packet from server due to dump thread being killed on master. Dump threads are killed for example during master shutdown, explicitly by a user, or when the master receives a binlog send request from a duplicate server UUID <server_uuid>. "" And also a NOTE is added on master's error log file with the following information when log_warnings is greater than 1. ""While initializing dump thread for slave with UUID <slave_uuid>, found a zombie dump thread with the same UUID. Master is killing the zombie dump thread."" "	2ecfd75b12541bcb70c6dd4dcd0bc2be4df63f79
----------------------------
Bug#14757009: WHEN THE GENERAL_LOG IS A SOCKET AND THE READER GOES AWAY, MYSQL QUITS WORKING. Analysis: ----------------- Issue in this bug and in bug 11907705 is, the socket file or fifo file is set for general log at command line while starting the server. But currently, only regular file can be set for the general log. Instead of reporting any error, the provided files are opened for writing and continued. Because of this issues mentioned in the bug reports are seen. As mentioned, only when any non-regular file is set for general log at command line while starting the server, these issues are seen. If general log file is set to non-regular file from CLI using system variable general_log_file then error is reported. These issues can also be faced with slow query log file, if it is set to non-regular file. Fix: ----------------- Currently while starting the server if we fail to open log file then we report an error, disable logging to file and continue. To fix issue reported code is modified to check whether file is regular file or not before opening it. If file is not a regular file then error is logged to error log and logging to file is disabled. 	e3731ef6bbe047c326d08ac20f8da14df5df91e7
----------------------------
Bug#19179338 GET RID OF DYNAMIC_ARRAY IN RELAY_LOG_INFO AND DEFERRED_LOG_EVENTS Some tests are failing when run with: --mysqld=--slave-parallel-workers=4 --mysqld=--slave-transaction-retries=0 --mysqld=--slave-parallel-type=database rpl.rpl_row_corruption rpl.rpl_row_idempotency rpl.rpl_rotate_row_trans ... Revert by doing: bzr merge -r 8421..8420 . 	685bc03861713de69f6159219288522ae7e53af7
----------------------------
"WL#6815 Adapt MySQL Cluster to 5.7 - rewrite ha_ndbcluster::records() to return the number of records in the new ""num_rows"" argument. - use the return value from update_stats() as the return value from records(), it should in most cases by a MySQL mapped error code. "	b8212a01fab9ea3d69017e7a3375e0e9cb8e0766
----------------------------
Bug#19142753 ASSERT: MODE !=LOCK_X || LOCK_TABLE_HAS(THR_GET_TRX(THR), INDEX->TABLE, LOCK_IX) WL6742-Improve InnoDB SELECT COUNT(*) performance by using handler::records() introduced new functionality in InnoDB. handler::records can now fail in ways never seen by the server before. This improved things on the InnoDB side: kevin.lewis@oracle.com-20130626194505-muocxuem7bd2wiw8 bug#16802288 - FAILING ASSERTION: PREBUILT->SQL_STAT_START || TRX->STATE == TRX_STATE_ACTIVE Add error handling for DB_DEADLOCK and DB_LOCK_TABLE_FULL to handler::records() for COUNT(*).  Also rollback transaction when handler::records receive DB_DEADLOCK, DB_LOCK_TABLE_FULL or DB_LOCK_WAIT_TIMEOUT. However: thd_mark_transaction_to_rollback() isn't enough. The optimizer needs to abort immediately for the cases mentioned above. Fix: improve error handling for all calls to handler::records() Add a new public function ha_records() which does the error checking, make handler::records() protected. 	75fd543a496cd58f5a5eb23c84bf1ead4bc83dc5
----------------------------
"Bug#16953758: PREPARED STATEMENT IS WRITTEN TO GENERAL QUERY LOG AFTER ITS EXECUTION IS FINISH When general-logging, the ""Execute"" line for prepared statements was always written after that execution. The Execute line will be written before execution, same as for other statements, for consistency, and so if something crashes, we'll be able to more easily tell what it was. audit_plugin.test: Since general-logging (and therefore the call to audit plugins) happens before execution now, the SHOW counter will be one higher now (it ""sees itself"", so to say). Expected behaviour, test adjusted. "	fe9006eb0e7edb01b161d80687058130273e6fff
----------------------------
WL#6117 InnoDB: Resize the InnoDB Buffer Pool Online - 'innodb_buffer_pool_size' is changed to 'Dynamic Variable' (The Default value is still 128M. not changed.) - able to monitor progress of resizing buffer pool (by global status 'innodb_buffer_pool_resize_status' or server error log) - 'innodb_buffer_pool_chunk_size' is a new global read-only variable, default value is 128M. The 'innodb_buffer_pool_chunk_size' unit is 1M. And the actual buffer pool size is always aligned to 'innodb_buffer_pool_chunk_size' * 'innodb_buffer_pool_instances' granularity. (rb#4225 : Approved by Vasil and Sunny) This push also contains following bug fixes: Bug#19001299 : SEGV WHILE INITIALIZING BUFFER POOL Bug#19069698 : ASSERT BTR_SEARCH_ENABLED IN PURGE AFTER SET GLOBAL INNODB_ADAPTIVE_HASH_INDEX=0 	c5e6841707828dd7b596d302ec78c43f903db4d6
----------------------------
Bug#18404381: REMOVE UNNEEDE CMAKE CHECKS AND #IFDEFS IN 5.7.5 Patch #3: This patch does the following: - Remove the HAVE_WVLA check since all used versions of GCC/Clang now supports -Wvla - Remove HAVE_GETCURRENTPROCESSORNUMBER as it is true on all supported Windows versions - Remove workaround for old Intellisense bug - Unconditionally define S_IROTH/S_IFIFO on Windows rather than doing a check with hardcoded result - Use SIGTERM/SIGINT explicitly on Windows rather than define SIGQUIT/SIGPIPE to them - Use isnan() directly on Windows, remove unneeded check - Typedef ssize_t on Windows rather than doing check with hardcoded result - Remove HAVE_SCHED_H and HAVE_PTHREAD_YIELD_ZERO_ARG checks, results not needed anymore - Remove HAVE_MMAP, always true - Remove HAVE_SCHED_YIELD, always true on non-Windows - No point in testing size of char, defined to 1 in standard - Remove inline check, explicitly define for Visual Studio in C mode instead - Combine separate C/C++ checks for builtin_unreachable as we now always use the same compiler for C/C++ - Remove HAVE_ACCESS, was never defined. Update code to work like intended. - Set SOCKET_SIZE_TYPE, size_socket and sigset_t and mode_t using typedef rather than CMake #define - Remove unused FN_NO_CASE_SENCE, ulong_to_double() and table_case_convert(). - Remove use of non-standard pthread_yield(), use POSIX standard sched_yield() instead - Remove unneeded thread pool config.h.cmake, add missing WindowsCache.cmake entry - Rewrite InnoDB CMake futex check to avoid having to do unset/remove_definitions 	2fbbc0d1ef90324f304d4c75649cf99908a5691f
----------------------------
"Bug#18757964:RPL.RPL_CIRCULAR_FOR_4_HOSTS FAILS WITH RESULT MISMATCH NON DETERMINISTIC RESULTS Problem: ======== rpl_circular_for_4_hosts  failing sporadically in pb2 regression runs. Test lead to non deterministic results in case of lower performance. If the lock of the table will be later than the inert in next session then the result may differ from the expected one. Analysis: ======== This bug is clearly reproducible in windows with MTS and --slave-parallel-type=logical_clock. Test script has circular replication like 1->2->3->4->1. As part of test they do following two steps. 1) Insert value 6 in the autoinc column on server_3 (and prevent it from replicating further using SQL_SLAVE_SKIP_COUNTER on server_4). Due to the auto_increment_offset setting, the autoinc value 6 is normally generated on server_2. When we later insert a row on server_2,we thus cause a duplicate key error on server_3. 2) Reconfigure the topology to like this 1->2->4->1,2->3. On server 4 change master is executed by taking Server 3's Exec_master_log_pos and Master_Log_File. On Server 3 Exec master position changes as per the order in which workers execute the following parallel transactions. use `test`; INSERT INTO t1(b,c) VALUES('B',2) use `mtr`; INSERT INTO test_suppressions (pattern) VALUES ( NAME_CONST('pattern',_latin1'Slave SQL.*Duplicate entry Example: Normal case: ""Server 3 pos_c is ------3639"" ""Server 3 file_c is -----slave-bin.000001"" slave-bin.000001 3554 Query  4 3639 COMMIT slave-bin.000001 3639 Query  2 3732 BEGIN slave-bin.000001 3732 Intvar 2 3764 INSERT_ID=6 slave-bin.000001 3764 Query  2 3876 use `test`; INSERT INTO t1(b,c) VALUES('B',2) slave-bin.000001 3876 Query  2 3961 COMMIT slave-bin.000001 3961 Query  3 4047 BEGIN slave-bin.000001 4047 Query  3 4294 use `mtr`; INSERT INTO test_suppressions (pattern) VALUES ( NAME_CONST Error case: ""Server 3 pos_c is ------4372"" ""Server 3 file_c is -----slave-bin.000001"" slave-bin.000001 3554 Query  4 3639 COMMIT slave-bin.000001 3639 Query  2 3732 BEGIN slave-bin.000001 3732 Intvar 2 3764 INSERT_ID=6 slave-bin.000001 3764 Query  2 3876 use `test`; INSERT INTO t1(b,c) VALUES('B',2) slave-bin.000001 3876 Query 2 3961  COMMIT slave-bin.000001 3961 Query 3 4047  BEGIN slave-bin.000001 4047 Query 3 4294  use `mtr`; INSERT INTO test_suppressions (pattern) VALUES ( NAME_CONST('pattern', _latin1'Slave SQL.*Duplicate entry .6. for key .PRIMARY.* Error_code: 1062' COLLATE 'latin1_swedish_ci')) slave-bin.000001 4294 Query 3 4372  COMMIT Because of this incorrect position in change master INSERT B gets missed in 4 & 1. Fix: === Since the main intention is to generate duplicate key error on Server 3 to make test script more deterministic moved the mtr add suppression statement to a place bit ahead where we do a proper sync up of all servers. "	df2bec7d596d23274e79b91051f0ac5cb333020d
----------------------------
Bug#19061440 CMAKE -DINNODB_PAGE_ATOMIC_REF_COUNT:BOOL=OFF IS BROKEN The configuration option cmake -DINNODB_PAGE_ATOMIC_REF_COUNT:BOOL=OFF is broken ever since WL#7682 was merged. It is also useless since WL#7655, because MySQL 5.7 can no longer be built on systems that do not support atomic memory access primitives. This patch removes the option. It should be a non-functional change, because the undocumented build-time option was ON by default. rb#5844 approved by Yasufumi Kinoshita 	d9efa4769415eba1f373deca3777ebd0a3ee9186
----------------------------
BUG#18844897:  ASSERT AT INFO.DRY_RUN A test case configured with --skip-innodb and that checks whether the slave server is able to restart and replication is able to either restart or step into a degraded mode when using slave_master_info and slave_relay_log_info tables on InnoDB, was failing with two crashes. One during the shutdown and another during recovery on server restart. The former, even though not entirely related to replication, was triggering the latter. Since the former crash was sporadic, so was the subsequent one. This was noticed in that test, because the test stops and restarts the slave server several times. The core of the problem was that the shutdown crash was causing the server not to close the binary log properly. Then, on server restart, while opening the the binary log, the server would find that it had not been closed properly. Therefore, it would engage the log for recovery and roll forward or roll back the pending prepared transactions in the engine. This results in the server scanning the binary log, collect xids - in this case none, since the tests was running with MyISAM (remeber --skip-innodb?) - and call ha_recover. But, inside, this function would run into an assert that checks whether there are sufficient parties to resume the pending prepared phases of the 2PC. Since the engine involved was MyISAM and no xid had been collected and ha_recover was called regardless, this assert would be triggered. This patch fixes this issue by checking if there are enough 2PC parties involved before calling into ha_recover. 	06b2726ae18c591bc6463c3d1437fd09557ae641
----------------------------
"Merge: 5f50793 8bc840c wl#7277: InnoDB: Bulk Load for Create Index We build index from bottom up other than by insert rows repeatedly, so that we avoid B-tree split and merge operations. We introduce a new global configuration variable ""innodb_fill_factor"". It determines percentage of space on page to be filled with data, reserving the remainder on each page as free space for future growth. Its valid range is 10 ~ 100. rb://4237 approved by Krunal & Satya. "	53218d2e5ef0de7c482fa38c2e49a9130e00e969
----------------------------
Merge: e876e45 87520c2 Bug#17873011 NO DEPRECATION WARNING FOR THREAD_CONCURRENCY Null Merge from mysql-5.6 to mysql-trunk. 	203b89cdd915450b0775ed2d07233a5b13767a80
----------------------------
Bug#17873011 NO DEPRECATION WARNING FOR THREAD_CONCURRENCY Description: THREAD_CONCURRENCY is deprecated and there is no deprecation warning message while setting this variable while starting the server. Analysis: This variable is specific to Solaris 8 and earlier systems and is ignored on all other platforms. But since many customers, who uses other than Solaris, still has this variable in their configuration file, it is important to have a deprecation warning. Fix: THREAD_CONCURRENCY deprecation warning message is added. 	e9ed72a1b9cc37904b485a892c67d461de813f00
----------------------------
Bug#18205019: RPM INSTALLATION GENERATES /USR/MY.CNF A feature added to mysql_install_db in MySQL 5.6 was to generate my.cnf config file from template. The reason was a wish to set a specific value of sql_mode option for new installations. This is useful for many systems, however for some install methods and layouts this was not needed, and for some, even not wanted. Solution is add new option --keep-my-cnf to mysql_install_db. When used mysql_install_db will not generate my.cnf from template. Patch will also resolve issue mentioned in bug #68117 and #68318. 	4aa58bff12f0e8b011e924e7d4516bdc9cba450c
----------------------------
"The AutoTest, testBitfield does not correctly word align the length of a default bit values. The length of the default value of a bit column, need to be word aligned. Incorrect alignment seems to have caused several (undetected) coredumps from testBitfield, like in: Thread 1 (Thread 0x7f159a9bf720 (LWP 869)): #0  0x0000000000431975 in u_32_value (this=0x7fffa6765988, pRow=0xb5d600) at /data0/ndbdev/autotest/build/clone-mysql-5.5-cluster-7.2-2014-06-23.24869/storage/ndb/test/src/HugoCalculator.cpp:299 #1  HugoCalculator::verifyRowValues (this=0x7fffa6765988, pRow=0xb5d600) at /data0/ndbdev/autotest/build/clone-mysql-5.5-cluster-7.2-2014-06-23.24869/storage/ndb/test/src/HugoCalculator.cpp:299 #2  0x000000000041f528 in HugoTransactions::pkReadRecords (this=0x7fffa6765930, pNdb=0xac27c0, records=1000, batch=13, lm=NdbOperation::LM_Read, _rand=0) at /data0/ndbdev/autotest/build/clone-mysql-5.5-cluster-7.2-2014-06-23.24869/storage/ndb/test/src/HugoTransactions.cpp:1078 #3  0x000000000040c23a in transactions (pNdb=0xac27c0, tab=<value optimized out>) at /data0/ndbdev/autotest/build/clone-mysql-5.5-cluster-7.2-2014-06-23.24869/storage/ndb/test/ndbapi/testBitfield.cpp:187 #4  0x000000000040dc68 in main (argc=0, argv=0xab6808) at /data0/ndbdev/autotest/build/clone-mysql-5.5-cluster-7.2-2014-06-23.24869/storage/ndb/test/ndbapi/testBitfield.cpp:99 Failures resulting in core dumps seems to be incorrectly trapped på AutoTest: The coredumping test seems to be incorrectly recorded as PASSED, and the coredump is then related to the next failing tests - Like in: http://ndbmaster.se.oracle.com/~autotest/report.pl?id=23419 Where we find: - testBitfield 	PASSED .... ~50 tests later: - testSRBank -n SR -l 300 -r 15 T1 	FAILED(TEST) 	Y The failed testSRBank has attached a coredump from testBitfield! This fix doesn't fix the incorrect reporting from AutoTest. However, it likely fix the coredump itself by correctly alligning the bit-type columns. NOTE: We also find in ha_ndbcluster.cc, which has similar code for handling bit columns: static int create_ndb_column(THD *thd, NDBCOL &col, Field *field, HA_CREATE_INFO *create_info ....... /* For bit columns, default length is rounded up to **nearest word**, ensuring all data sent    <<<< HERE! */. Uint32 defaultLen = field_used_length(field); if(field->type() == MYSQL_TYPE_BIT) defaultLen = ((defaultLen + 3) /4) * 4;      <<<<<<<< and HERE ! col.setDefaultValue(buf, defaultLen); Which is the correct way to handle length of default bit values "	48fd350575a9385ea9cceb2e1f8f9ab224d31d26
----------------------------
Bug#19060799 GET RID OF DYNAMIC_ARRAY IN MY_TMPDIR Our array abstractions should be removed, and substituted with modern data structures. Templatized vectors are: - type safe - easier to read/maintain - faster Move mysys/mf_tmpdir.c to mysys_ssl (which is a misnomer, it's the C++ part of mysys) Move mutex_lock.h to the include directory, so it can be used outside of server code. 	69d558df0e3acb96e4c580fcbd7b28cd410c219e
----------------------------
Bug#18463911 : SERVER CRASHES ON CREATING A TEMP TABLE WITH CERTAIN MAX_HEAP_TABLE_SIZE VALUES Followup patch to fix failure on Window machine. 	a95abd68faf5befcf2c7062a91b0cb711ea913e2
----------------------------
Bug#18463911 : SERVER CRASHES ON CREATING A TEMP TABLE WITH CERTAIN MAX_HEAP_TABLE_SIZE VALUES Followup patch to fix failure on Window machine. 	b36ed8188cd6f4718eaa970907752e7c227e47e5
----------------------------
Bug #18463911 : SERVER CRASHES ON CREATING A TEMP TABLE WITH CERTAIN MAX_HEAP_TABLE_SIZE VALUES Description: When the  system variable 'max_heap_table_size' is set to 20GB, the server crashes on creation of a temporary tables or tables using MEMORY storage engine. Analysis: The variable 'max_record' determines the amount heap allocated for the records of the table. This value is determined using the 'max_heap_table_size' variable. 'records_in_block' in turn uses the max_records to determine the number of records per block. When the 'max_heap_table_size' is set to 20GB, then the 'records_in_block' is calculated to a value of 2^28. The size of the block determined by multiplying the 'records_in_block' and 'recbuffer' results in overflow and hence the value becomes zero. As a result, zero bytes of the heap is allocated for the table. This will result in a server crash when the table is accessed. Fix: The variables 'records_in_block' and 'recbuffer' are typecasted to 'unsigned long' while calculating the size of the block. 	9cb278488762924febb619e40c917e8f863ccd2f
----------------------------
Merge: 8adac44 2c82605 WL#7436: Deprecate and remove timed_mutexes system variable This is the 5.7 version of the patch. Remove the timed_mutexes system variable. 	802cd3be4085b774668b7782bd855808ffff1b06
----------------------------
Merge: 76389ed 45c8ec3 WL#7436: Deprecate and remove timed_mutexes system variable Merge from mysql-5.5 to mysql-5.6 	2c82605e05d5479eb041d40dd1aba9758c6123a0
----------------------------
WL#7436: Deprecate and remove timed_mutexes system variable This is the 5.5/5.6 version of the patch. Add deprecation warning for timed_mutexes. 	45c8ec3a1bcc57bc250a33ad915f18d5c355745e
----------------------------
"WL#6671 ""Improve scalability by not using thr_lock.c locks for InnoDB tables"". Avoid scalability bottleneck associated with THR_LOCK::mutex locks for InnoDB tables by not using thr_lock.c locks for them. The patch tries to make minimal changes to SE API and locking code on SQL-layer. Further improvements in these areas enabled by this change will be done as separate WLs. Before this patch InnoDB downgraded strong TL_READ_NO_INSERT/TL_WRITE thr_lock.c locks to weaker ones compatible with each other in most cases. So it has really relied on thr_lock.c locking only in a few scenarios: 1) To isolate HANDLER READ statements from LOCK TABLES WRITE statements. 2) To isolate LOCK TABLES statements that lock tables for write implicitly or for read, both explicitly or implicitly, from concurrent DML statements. 3) Due to coding mistake thr_lock.c lock was necessary to isolate ALTER TABLE IMPORT/DISCARD TABLESPACE under LOCK TABLES from concurrent I_S queries/ open HANDLERs. 4) To indicate that InnoDB tables don't support LOCK TABLES READ LOCAL by upgrading TL_READ lock requested by statement to TL_READ_NO_INSERT After addressing these scenarios it became possible to completely abandon thr_lock.c locking for InnoDB tables. To do this this patch: 1)   Changes code for HANDLER READ statements to upgrade S metadata lock to SR metadata lock for the duration of read. This allows us properly isolate HANDLER READ from LOCK TABLES WRITE and makes metadata locking for these statements consistent with locking for other DML. 2.a) Introduces new type of metadata lock - MDL_SHARED_READ_ONLY. This lock is similar to SR lock with exception that it is not compatible with SW locks. This type of lock is used as replacement for TL_READ_NO_INSERT thr_lock.c locks for tables locked by LOCK TABLES for read (both explicitly or implicitly). To preserve backward compatibility SRO lock was assigned lower priority than SW locks (acquired by DML that modify data). This means that stream of DML can lead to starvation of LOCK TABLES READ statement. To provide a way out from such a situation, MDL subsystem was changed to respect max_write_lock_count limit for SW locks as well. Also new MDL_SHARED_WRITE_LOW_PRIO type of lock was introduced. It has lower priority than SRO locks and is used by DML with LOW_PRIORITY clause (i.e. for the same DML which had lower priority than LOCK TABLES READ before the patch). 2.b) Changes code for LOCK TABLES to acquire SNRW lock on tables implicitly locked for write to compensate for removal of TL_WRITE lock. 2.c) After 2.a) and 2.b) were implemented it became impossible to predict in which order SNRW and SRO locks will be acquired, so we no longer can rely on that ""strong"" locks are always acquired in the same order to avoid deadlocks for DDL. To solve this issue and keep behavior compatible we had to change function which chooses deadlock resolution victim to prefer waits for ""strong"" locks from LOCK TABLES over locks from other DDL (MDL subsystem was extended for this) and to ensure that attempt to acquire locks for LOCK TABLES is restarted when we get ER_LOCK_DEADLOCK error. 3)   Changes ALTER TABLE IMPORT/DISCARD TABLESPACE code to acquire X lock on table being imported/discarded even under lock tables. 4)   New storage engine flag HA_NO_READ_LOCAL_LOCK was introduced to mark storage engines which don't support LOCK TABLES READ LOCAL but don't want to use thr_lock.c locks to indicate this. LOCK TABLES READ LOCAL automatically acquires SRO locks for them. After the above steps InnoDB code was changed to indicate that InnoDB no longer needs thr_lock.c locks acquired. This was done by changing ha_innobase::lock_count() to return 0 and by ensuring that ha_innobase::store_lock() doesn't try to store type of thr_lock.c lock in MYSQL_LOCK::locks[] array it gets as a parameter. It is worth to emphasize the following non-obvious behavior changes caused by this patch: *) LOCK TABLES READ blocks and is blocked by concurrent transactions changing the table, for all storage engines, similarly to how LOCK TABLES WRITE work now. *) Tables which are implicitly used by LOCK TABLES (e.g. through view or trigger) are locked using metadata locks in addition to (all SEs except InnoDB) or instead of (InnoDB) THR_LOCK locks. This means that previous item also applies to such tables. *) Multi-update is blocking/starts to be blocked by concurrent LOCK TABLES READ on any table from its join, even though such table will be only used for reading and won't be updated. Many test cases which were relying on old behavior had to be adjusted. Particularly: *) HANDLER-related tests had to be adjusted to take into account that HANDLER READ will wait for and acquire SR lock. *) Some tests using thr_lock.c locks had to be adjusted to use statements other than LOCK TABLES READ. *) Some tests which waited until LOCK TABLES READ will block DML on thr_lock.c locks now wait for blocking on MDL. *) P_S test coverage for aggregates now either uses MyISAM tables or were updated to take into account that InnoDB doesn't acquire thr_lock.c locks. *) Coverage for new behavior and new types of MDL locks were added, as well as unit tests for the latter. "	d3b17c4af4f7378d4f2fc85f6fdcf26fc9c05c23
----------------------------
Bug #18816897- IGNORE_SERVER_IDS NOT RESETTING POST RESET SLAVE ALL RESET SLAVE ALL is supposed to clear everything that is set by CHANGE MASTER TO. Following RESET SLAVE ALL, the server should forget that it was used as a slave. Because of the buggy behaviour RESET SLAVE ALL did not clear ignore_server_ids. This followed by by a new replication set up still contained the old list of server-ids. Fixed by emptying the list contaning server-ids to ignore on RESET SLAVE ALL. 	2bf2bd989aa854159a2b608de5d6208337505827
----------------------------
Bug#18956787 LOGIN DOES NOT GOES INTO SANDBOX MODE IF M_I_DB READS USERID FROM CONFIG EDITOR fixed: Changed meaning of login-path to mean the category in an encrypted cnf file rather than the location of this file. fixed: Added new option 'login-file' to mean the location of an encrypted cnf file with login credentials. 	57c13f87b3f778e5c7be3da35d4947291efd5f57
----------------------------
Fix Bug #18816381 - INNODB MEMCACHED PLUGIN CONFIGURATION - TEST DATABASE Approved by Marko 	b770d8d1d4adb32a69cba9d42052a83dcabcb6ef
----------------------------
Fix for bug #18923685: PROPERLY INITIALIZE DB OPTION HASH TABLE We should use case sensitive db names search if lower_case_table_names=0 and case insensitive if 1 or 2. Changed initialization of the db option hash table. Test case added. 	255cd78a66b83f46ba06052c5756374a802bce86
----------------------------
BUG#18791604 SERVER HITS ER 1200 ON START SLAVE CMD, STILL HEARTBEAT_PERIOD SETS TO DEFAULT, BUG#18777899 HEARTBEAT_PERIOD AUTOMATICALLY SETS TO DEFAULT POST RESET SLAVE COMMAND, BUG#18778485 SSL_VERIFY_SERVER_CERT AUTOMATICALLY SETS TO NO POST RESET SLAVE COMMAND) Problem: ======= There are three problems we address in this patch. The cause of these is more or less the same problem. But this exhibits different symptoms as described in the three bugs listed above, namely: 1) reset slave automatically sets heartbeat_period to default. 2) reset slave automatically sets ssl_verify_server_cert to default. 3) When a server is not configured as a slave (no CHANGE MASTER done yet), START SLAVE will fail and that is fine. But this resets the heartbeat_period to default which is strange and un-intuitive. Analysis: ======== The function init_master_log_pos() reset heartbeat_period to default and ssl_verify_server_cert= 0. This was called from reset slave as: reset_slave() => clear_in_memory_info() => init_master_log_info Fix: === 1) relocated code to reset heartbeat period to default to change_receive_options() and removed ssl_verify_server_cert= 0 in init_master_log_pos(). init_master_log_pos() is a different thing altogether, it shouldn't care about heartbeat or ssl certificate at all. 2) As a side-effect of (1), on a CHANGE MASTER if host and port are given but heartbeat_period is not specified, it remains 0 which means heartbeats are disabled. While adding/switching master, we want to keep heartbeat enabled by default. So in such a situation we force heartbeat_period to default heartbeat_count= 0 and last_heartbeat_timestamp= 0 unless the user specifically chooses to disable heartbeats. 	f0c2c3539a946d45c7f703380c8424f190ca768d
----------------------------
Bug #18684389-SPAM ERROR 'FILE NOT FOUND' MSG WHEN 'DATA DIRECTORY' CLAUSE IN 'CREATE TABLE' The patch for WL7142 caused this regression in which an error message is written to the log at startup for every remote tablespace that was created with DATA DIRECTORY.  A 'strict' parameter was added to Datafile::open_read_only(strict) in order to determine if the message would be logged.  The function fil_open_single_table_tablespace() tries to find the file in three possible locations and it always looks at the default location.  If the file is not there, this strict parameter causes the spam message. But by the time the default-location filepath is attempted, fil_open_single_table_tablespace() has already tried the other two locations.  So the fix is to print the message only if the file is not found elsewhere. Approved by marko in RB#5536 	d5bff2980e2b6fa5233bf9099d2dcd8645806c22
----------------------------
Merge: 12c0f55 7c91a95 WL6559    Optimize GTIDs for passive slave - store GTIDs in table If gtid_mode is enabled, store GTIDs in table always as below: - If binlog is disabled, store transaction owned GTID in table within each transaction. - If binlog is enabled and log_slave_updates is enabled, store set of GTIDs of the last binlog in table on each binlog rotation and on server shutdown. - If binlog is enabled and log_slave_updates is disabled, do below: - slave SQL thread or slave worker stores transaction owned GTID in table within each transaction. - store set of GTIDs of the last binlog in table on each binlog rotation and on server shutdown. 	8089982819d24d1c106133c5354beffee94b8122
----------------------------
"Bug #18889568	 OUT OF SOURCE BUILDS CHANGES SOURCE DIR FOR CLUSTERJ AND NDBINFO_SQL Bug #72843	out of source builds changes source dir for clusterj and ndbinfo_sql For clusterj, CMake files are changed so that manifest.mf files, pom.xml files, and mvn_install_ndbjtie.sh are created in build dir instead of source dir. ndbinfo.sql are configured as output to build dir instead of source dir.  The file are already created in build dir. "	470ac8f0b74c7e0490049861ebe2ce991b512b0f
----------------------------
Bug 16368498 - MYSQL_CONFIG_EDITOR FORGETS ABOUT FREEING SOME MEMORY Memory tools detects memory leaks in mysql_config_editor. Fix: Closing opened files when they are not needed anymore. Reviewed by Kristofer. 	908b60e949086d27d140d9a88a59a70eea932b11
----------------------------
WL7220 Spatial Relation Check Functions WL7221 Geometry Set Operations WL7280 WKB geometry container Entire implementation of new GIS which uses Boost.Geometry(BG)'s GIS algorithm to do geometric computations. Currently we use Boost1.55.0 and some old GIS algorithms are still used if BG doesn't yet support the feature; OTOH, if BG supports a feature, we use BG's implementation. From now on server internally uses boost library, there are several implications: 1. We should follow the coding guideline when taking care of exceptions; 2. Boost is more picky to C++ compilers than existing MySQL code, so one might has to upgrade his C++ compiler. 3. You have to specify -DWITH_BOOST=/your/local/boost/root/dir when doing cmake configuration, and for only once you have to either manually download boost1.55.0 or specify -DDOWNLOAD_BOOST=1. We implemented a WKB container (WL7280) as an efficient adapter layer between MySQL GIS and BG, WKB data exchange between them has little cost(data copy/conversion is completely avoided), and this adapter is fit into existing Geometry classes to maximize code reuse and logical OO model. Based on that we reimplemented spatial relation check functions(WL7220: within, contains, intersects, disjoint, equal, touches, crosses, overlaps) and geometry set operations(WL7221: union, intersection, difference, symdifference) using BG, by dispatching to specific BG function calls according to the triplet: { operation-type, type-of-argument1, type-of-argument2}. And we implemented support for many of the triplet combinations that are not directly supported by BG but can be computed using BG's existing features. We also implemented support for geometry collection for above two groups of GIS operations indirectly using BG, because BG doesn't directly support geometry collections. We had to implement each GIS operation according to its OGC specification using BG's support for the six basic geometry types, i.e point, linestring, polygon, multipoint, multilinestring, multipolygon. We also implemented support for empty geometry collections and nested geometry collections, enabling both of them to be operand of above GIS operations, which makes GIS computation more practically usable. This is especially true for the support for empty geometry collections because in a tree of set operations any node can produce an empty geometry collection, which shouldn't stop the computation as old GIS did before, but allow operating on this empty collection and proceed GIS computation. This commit also contains some general purpose data structures and algorithms, including an Inplace_vector and its unit tests; an implementation of GIS algorithm to detect and reverse polygon ring order and its unit tests; as well as other unit tests for various functionality of new GIS. It also contains Tor's cmake build system support for using boost, which is able to download and make use of boost library, and also make use of our customized patches for multiple versions of BG as first priority over standard boost released code, by automatically choose the right version of customized patches according to the version of boost library used. It also contains Adam and Menelaos's customized BG patch for boost1.55.0. Finally, it contains QA team's entire test work which are prepared for the three GIS WLs. Some bugs that are found on old GIS are now naturally gone because we are using BG, and all bugs that are found on new GIS(WL7220, WL7221 and WL7280) are fixed. Bugs fixed: Bug #18423730 - WL7220: ASSERTION FAILED: LIST ITERATOR NOT INCREMENTABLE Bug #18701114 - WL7220: ASSERTION FAILED: (PTR != 0 && NBYTES > 0) || (PTR == 0 && NBYTES == 0), Bug #18851092 - GEOMFROMTEXT DOES NOT UNDERSTAND NESTED GEOMETRYCOLLECTIONS Bug 18408988 - WL7220 : OVERLAPPING MEMCPY CRASH IN BG_GEOMETRY_COLLECTION::CUT Bug 18408919 - WL7220 : OVERLAPPING MEMCPY CRASH IN GEOMETRY::AS_WKB Bug 18408875 - WL7220 : ASSERTION FAILED: *P == 0 || *P == 1 Bug #17168699 OPEN POLYGON LISTED IN OGC GUIDELINES BUT NOT SUPPORTED IN MYSQL Bug #17168643 GEOMETRY COLLECTION IGNORES THE PROPER GEOMETRIES FOR ONE OPEN POLYGON Bug #17167765 ST_EQUALS FUNCTION RETURNS TRUE FOR THE SPATIALLY DIFFERENT GEOMETRIES. Bug#18492266 BOOST VERSION CHECK IN 5.7.5 LAB RELEASE Bug#72172    Boost version check in 5.7.4 lab release Bug#18503366 CHANGE OF WITH_BOOST SETTING IGNORED? Bug#72186    Change of WITH_BOOST setting ignored Bug#18497231 RELATIVE PATH FOR WITH_BOOST DOESN'T WORK Bug#72185    Relative path for WITH_BOOST doesn't work Bug#18499359 Bug#72188    WITH_BOOST not shown in cmake-gui 	435cae2f75cbc41221e04e633b22e5f15a6d3e6a
----------------------------
Bug #18599198 NDB : LIMIT TIME SPENT BY SUMA WAITING FOR API CONNECTIONS IN PHASE 101 This patch adds a limit for how long Suma will wait for all subscribers to connect before continuing with suma handover during start phase 101. The root couse to why some subscribers does not connect to restarted data nodes is not found nor fixed. A new configuration parameter RestartSubscriberConnectTimeout for data nodes are added.  This timeout specifies how long Suma will wait in phase 101 for all subscribing API nodes to connect. Those API nodes that have not connected in time will be reported failed. And eventually when all those API nodes have failed, SUMA will continue handover. 	d32be25dcebf0039db0f6e0887589f397bdc40bc
----------------------------
Bug#18281535 - Updated usergroup to mysql on datadir 	8c9101fec9e4839a9d9b1554e822ca5edf0f3598
----------------------------
Bug#18281535 - Updated usergroup to mysql on datadir 	7e706177aa690b53371d6e557944d44d08fff7f4
----------------------------
Merge: cfef80a 7c77618 BUG#18830493 - REQUEST TO BACKPORT BUG#18311024 TO 5.6 mysql_config_editor: invalid write in remove_login_path when given empty path. Fix was to calculate correct indexes to copy. By the way memory check tool found memory leaks, which were easy to get fixed, so I attach them in this commit. 	600baf481b169d0cd402a1c114798ecb381dafb1
----------------------------
BUG#18830493 - REQUEST TO BACKPORT BUG#18311024 TO 5.6 mysql_config_editor: invalid write in remove_login_path when given empty path. Fix was to calculate correct indexes to copy. By the way memory check tool found memory leaks, which were easy to get fixed, so I attach them in this commit. 	7c77618238d3834f06e7b1b507005b9362f294f3
----------------------------
- WL#6965: Truncate UNDO logs. - Added new configuration variable related sys_var test. - Based on discussion adjusting the default value of innodb_max_undo_log_size = 1GB. 	d84536c1e69cb546cf4fc06e42ceafda37de306d
----------------------------
- WL#6965: Truncate UNDO logs. - Added entries to daily and weekly run to schedule run of innodb_undo suite with undo-tablespace configured Approved by: Anitha (over IM) 	bde708344ce66ee8867c7c503ddc70f3ccb330eb
----------------------------
WL7639 Ndb Active Active Manageability improvements Implementation of ndb_slave_conflict_role control variable. This control variable allows the slave role in a future asymmetric conflict detection algorithm to be modified online. No conflict algorithm supports this control yet. The roles are : NONE, SECONDARY, PRIMARY, PASS. The role can only be changed when the slave SQL thread is not running. 	fb423bb6686f5680c0374e45ac915ff0d5521543
----------------------------
Re-enable tests which now pass with updated PB2 configurations. 	eb394af365e0e156c7b363e85e149ed655cddee7
----------------------------
Bug#18718491: MSI PACKING BROKEN WITH VS2013 This patch fixes problems building MSI packages with Visual Studio 2013. VS2013 requires WiX Toolkit 3.8 and before this patch the code only worked with 3.5 and 3.6. The patch raises the minimum required version of CMake to 2.8.12 for Windows only, as this version of CMake is required for VS2013. This also allows removing a workaround for an old CMake bug (CPACK_MONOLITHIC_INSTALL). The recommended way of building ZIP and MSI packages is: 1: Run CMake as normal, specifying VS2013 as generator. 2: cmake --build . --config (e.g debug) --target package 3: cmake --build . --config (e.g. debug) --target msi 	da7a155b62db1f31483a4d77a544824da76dfaf2
----------------------------
Merge: 8679b5a 4192c35 Bug#18000079 - binlog_dump_non_block disappeared in mysql 5.6 Problem:- Before 5.6.5 or so, it was possible for a client(like Mysql-connector) to set the BINLOG_DUMP_NON_BLOCK flag in the initial handshake packet (COM_BINLOG_DUMP). Then this was (wrongly) removed, and the current patch adds it back. As such, clients connecting to a server issuing a COM_BINLOG_DUMP with the flag not set will not get an EOF when the server has sent the last event in the binary log. The connection will block. In all versions, it is possible to get the same behaviour by setting server_id=0(while is the default value of server_id). A slave server never sets the flag and never sets server_id=0, because it never needs non-blocking behaviour. Mysqlbinlog never sets the flag. If it needs the non-blocking behaviour, it sets server_id=0. In order to test the patch, we need mysqlbinlog to set the flag when it needs non-blocking behaviour. However, since mysqlbinlog also sets server_id=0, *just changing it to allow* setting the flag in mysqlbinlog will not verify the bug in an unpatched server. Currently it is possible to set the server_id used by mysqlbinlog, but only if *blocking* behaviour is requested (using mysqlbinlog --stop-never-slave-server-id=X), and then the value 0 is not allowed. Solution:- So in order to test the bug, We are introducing a new option: --connection-server-id=NUMBER When mysqlbinlog is run in blocking mode: - default is 1 - range is 1..maxint When mysqlbinlog is run in non-blocking mode: - default is 0 - range is 0..maxint The difference in default value is needed for backward compatibility. The difference in range is needed since 0 forces non-blocking mode regardless of the flag. With this in place, we can verify the bug in a non-patched server by running mysqlbinlog in non-blocking mode and set connection-server-id=1. NOTES:- A few remarks about this flag and also about the clients shipped with the server that make use of COM_BINLOG_DUMP. - An IO thread never issues (and has never issued) COM_BINLOG_DUMP with the flag set; -  Mysqlbinlog will set the flag always, unless --stop-never is specified. - The dump thread falls back to non-blocking behavior if the connecting client states that it has server_id=0; 	23d6b3fc2820afbbaf47fd84b5c22dd2ec2b8b3c
----------------------------
Bug#18000079 - binlog_dump_non_block disappeared in mysql 5.6 Problem:- Before 5.6.5 or so, it was possible for a client(like Mysql-connector) to set the BINLOG_DUMP_NON_BLOCK flag in the initial handshake packet (COM_BINLOG_DUMP). Then this was (wrongly) removed, and the current patch adds it back. As such, clients connecting to a server issuing a COM_BINLOG_DUMP with the flag not set will not get an EOF when the server has sent the last event in the binary log. The connection will block. In all versions, it is possible to get the same behaviour by setting server_id=0(while is the default value of server_id). A slave server never sets the flag and never sets server_id=0, because it never needs non-blocking behaviour. Mysqlbinlog never sets the flag. If it needs the non-blocking behaviour, it sets server_id=0. In order to test the patch, we need mysqlbinlog to set the flag when it needs non-blocking behaviour. However, since mysqlbinlog also sets server_id=0, *just changing it to allow* setting the flag in mysqlbinlog will not verify the bug in an unpatched server. Currently it is possible to set the server_id used by mysqlbinlog, but only if *blocking* behaviour is requested (using mysqlbinlog --stop-never-slave-server-id=X), and then the value 0 is not allowed. Solution:- So in order to test the bug, We are introducing a new option (available only for debug builds): --connection-server-id=NUMBER When mysqlbinlog is run in blocking mode: - default is 1 - range is 1..maxint When mysqlbinlog is run in non-blocking mode: - default is 0 - range is 0..maxint The difference in default value is needed for backward compatibility. The difference in range is needed since 0 forces non-blocking mode regardless of the flag. With this in place, we can verify the bug in a non-patched server by running mysqlbinlog in non-blocking mode and set connection-server-id=1. NOTES:- A few remarks about this flag and also about the clients shipped with the server that make use of COM_BINLOG_DUMP. - An IO thread never issues (and has never issued) COM_BINLOG_DUMP with the flag set; -  Mysqlbinlog will set the flag always, unless --stop-never is specified. - The dump thread falls back to non-blocking behavior if the connecting client states that it has server_id=0; 	4192c356cc887822e47798f042101afbbf53d107
----------------------------
"BUG#18432770 - SYS_VARS.LOG_SLOW_ADMIN_STATEMENTS_FUNC TEST IS FAILING ON WINDOWS ON 5.6 Analysis: --------- In test file ""SYS_VARS.LOG_SLOW_ADMIN_STATEMENTS_FUNC.test"", logging of slow admin statement such as ALTER, OPTIMIZE and ANALYZE operations is verified . When ""long_query_time"" is zero then admin statement which runs for  at least 1 microsecond is considered for logging. On some platforms (special on Windows) time taken for OPTIMIZE and ANALYZE table is less than 1 microsecond sometimes. So test is failed sporadically. Fix: ---- To make sure OPTIMIZE table operation take enough time so that it is logged, increased the number of rows in table. With the current changes also ANALYZE table returned within 1 microsecond sometimes.Removed ANALYZE table operation from the test to avoid sporadic failure of this test case. CHECK table is another admin table which is logged to slow log table. Added CHECK table operation to test case. To test the changes, ran SYS_VARS.LOG_SLOW_ADMIN_STATEMENTS_FUNC for many times on windows machine. "	be7afce7e9d8135857c98583fcd52d02d02ff62e
----------------------------
Merge: 05b7a91 3f06e04 Bug#11762867 DEFAULT VALUES FOR INITLOGFILEGROUP CAUSE ERROR 2350: 'INVALID CONFIGURAT - Add testcase for the new error message - Add testcase for starting cluster with InitialLogFileGroup with undo_buffer_size greater than available  SharedGlobalMemory. Check that memory was allocated for undo buffer and that the created log file group is usable. - Slight change of error message to indicate that user can choose between reducing the undo_buffer_size or increase SharedGlobalMemory - Slight change of logic in the code which (pre)allocates the memory to only peek at the undo_buffer_size value in the InitialLogFileGroup spec. This avoids duplicating all the logic from NdbCntrMain.cpp and should make the behaviour more distinct. 	d07d96439c2ee9f43487e9ae610f7c10e5205214
----------------------------
"Bug#11758766:MYSQLD CONTINUES OPERATION WITHOUT LOGGING WHEN BINLOGS CANNOT BE WRITTEN Problem: ======== If an error occurs that prevents mysqld writing to the binary logs (disk full, readonly file system, etc) then the logs are disabled and operations continue. This can lead to out of sync slaves and improper backups. Analysis: ========= When binlogging becomes impossible due to readonly file system at present the binlog gets closed along with an error message in error log which says binlog is turned off for the whole duration of the server to fix the cause shutdown the server and fix the problem. The master continues without binlogging which causes the slave to go out of sync. At present there is no way user can control the behaviour so it will be better to let the user provide an option to stop the server immediately on the error. Fix: ==== A new option ""binlogging_impossible_mode"" has been introduced whose values are ""IGNORE"" or ""ABORT"". When binlogging becomes impossible if user sets the variable to ""ABORT"" server will stop if user sets it to ""IGNORE"" binlog will be turned off and server will continue. "	06c40282a5999a94ad033d0c836876de7b7a7e7c
----------------------------
"Bug#18620520 CORRECT TYPO IN ER 1755(ER_MTS_CANT_PARALLEL) Problem ------ TYPO in ER 1755. Show Slave Status: ................ ................ Last_Errno: 1755 Last_Error: Cannot execute the current event group in the parallel mode. Encountered event Gtid, relay-log name ./slave-relay-bin.000002, position 363 which prevents execution of this event group in parallel mode. Reason: The master does not support the selected parallelization mode. It may be too old, or replication was started from an event internal to a transaaction.. Fix ------ Change in: File: log_event.cc Line number: 2894 Line: ""to a transaaction.""); "	26c9fe3c50de048088a23f15e3e95df16d3ddd12
----------------------------
"Backport from trunk: Bug #18382225 MYSQL_CONFIG CAN'T HANDLE RELOCABLE PACKAGES THAT USES ""LIB64"" OR ""-64"" SUFFIX 'lib' is hardcoded into mysql_config, so 'cmake -DINSTALL_LIBDIR=lib64' will not work. Use INSTALL_LIBDIR when generating mysql_config. mysql_config may be renamed to e.g. mysql_config-32, fix the basedir pattern matching. "	53e2e8b807c2da5ded30932303a2197ac4015529
----------------------------
Bug#11762867 - DEFAULT VALUES FOR INITLOGFILEGROUP CAUSE ERROR 2350: 'INVALID CONFIGURAT Problem: The config.ini specifies that a log file group should be created during initial start of the cluster with the help of InitialLogFileGroupSpec. When no undo_buffer_size=<size> is specified, the default value for undo_buffer_size will be used. When cluster starts initial with default values, it fails to allocate undo buffer of the requested size from the SharedGlobalMemory pool. This is very likely in 7.0-1, where defaults for SGA is 20M and undo_buffer_size is 64M. Suggested solution: 1) At initial startup, allocate the memory for the undo_buffer_size specified in the InitialLogFileGroupSpec or the default, in addition to the sga. 2)Improve the error message printed when ndbd detects that it cannot allocate the undo buffer. 	3f06e040c31da072eab35b47ce8fff75725faf77
----------------------------
"Bug #18045646 LOCAL USER CAN RUN ARBITRARY CODE IN THE CONTEXT OF THE MYSQL SERVER Description: Using the temporary file vulnerability an attacker can create a file with arbitrary content at a location of his choice. This can be used to create the file /var/lib/mysql/my.cnf, which will be read as a configuration file by MySQL, because it is located in the home directory of the mysql user. With this configuration file, the attacker can specify his own plugin_dir variable, which then allows him to load arbitrary code via ""INSTALL PLUGIN..."". Analysis: While creating the "".TMD"" file we are not checking if the file is already exits or not in mi_repair() function. And we are truncating if the "".TMD"" file exits and going ahead This is creating the security breach. Fix: We need to use O_EXCL flag along with O_RDWR and O_TRUNC which will make sure if any user creates "".TMD"" file, will fails the repair table with ""cannot create "".TMD"" file error"". Actually we are initialing ""param.tmpfile_createflag"" member with O_RDWR | O_TRUNC | O_EXCL in myisamchk_init(). And we are modifying it in ha_myisam::repair() to O_RDWR | O_TRUNC. So, we need to remove the line which is modifying the ""param.tmpfile_createflag"". "	d2154ef4535869ad5edf5863333381a8bedb26c7
----------------------------
Bug#18675099: WINDOWSCACHE.CMAKE MUST BE UPDATED FOR VS2013 WindowsCache.cmake hardcodes results for CMake configure checks so they don't have to be performed on Windows (as this is very slow). The problem was that the cache file had several values which were no longer correct. The consequence that we were using Windows specific workarounds in cases where it was no longer needed. This patch removes the outdated values from the cache file so that the checks are actually made. It also reorganizes the cache file so that it matches config.h.cmake, removes duplicate entries, removes dead entries and adds missing entries. The patch also removes some unneeded Visual Studio version checks. 	734475bd2e943f530674485f3bd216e51e0ee769
----------------------------
"Backport from trunk: Bug#18187290 ISSUE WITH BUILDING MYSQL USING CMAKE 2.8.12 We want to upgrade to VS2013 on Windows. In order to do this, we need to upgrade to cmake 2.8.12 This has introduced some incompatibilities for .pdb files, and ""make install"" no longer works. To reproduce: cmake --build . --target package --config debug The fix: Rather than installing .pdb files for static libraries, we use the /Z7 flag to store symbolic debugging information in the .obj files. "	28455666794dfb07506f420fe251b21d74e43794
----------------------------
"Backport from trunk: Bug#18187290 ISSUE WITH BUILDING MYSQL USING CMAKE 2.8.12 We want to upgrade to VS2013 on Windows. In order to do this, we need to upgrade to cmake 2.8.12 This has introduced some incompatibilities for .pdb files, and ""make install"" no longer works. To reproduce: cmake --build . --target package --config debug The fix: Rather than installing .pdb files for static libraries, we use the /Z7 flag to store symbolic debugging information in the .obj files. "	d9fd75c586c3f922ae4eafa95c08e399a6206cd5
----------------------------
"Merge: e963be1 c5849c1 BUG#17798076 - BUG#16418661 CLEANUP: REMOVE UNNECESSARY BUF_FLUSH_LIST() DURING RECOVERY Why and when the extra buf_flush_list() was added? --------------------------------------------------- The extra buf_flush_list() was added as part of Bug#16418661 CHANGING NAME IN FOR INNODB_DATA_FILE_PATH SHOULD NOT SUCCEED WITH LOG FILES. The testcase for rb#2293 failed randomly reporting inconsistent number of undo tablespaces. MTR didn't provide a way to use custom innodb_data_file_path, innodb_undo_tablespaces. See Bug#17059436. So the workaround is to use ""--exec $MYSQLD --args my.cnf"" on a empty data directory. This will create necessary files and aborts after that. The extra flush made sure that correct the number of undo tablespaces reported. This is not correct because the changes are already covered by redo. So the the ideal solution would be have been to run ""--exec $MYSQLD"" on the datadir again to apply redo or allow the bootstrapping to finish properly and exit. Fix: ---- Remove uncessary flush. Fix the inconsistent number of undo tablespaces issue by passing '--skip-grant-tables --innodb-unkown-parameter' to $MYSQLD. This would allow the bootstrapping to finish and properly exit. Another side effect of the unnecessary flush is, it masked a problem in WL#7142: Side effect Issue: ------------------ An MLOG_CHECKPOINT record for an earlier checkpoint can be mistaken as the MLOG_CHECKPOINT record for the latest checkpoint. Fix: ---- The fix is to grow the MLOG_CHECKPOINT record size from 1 to 9 bytes, so that it will contains the checkpoint LSN. On the first scan of the redo log, we will ignore MLOG_CHECKPOINT records, unless the LSN matches the latest checkpoint. SIZE_OF_MLOG_CHECKPOINT: Grow from 1 to 9. mtr_t::commit_checkpoint(), recv_parse_log_recs(), recv_scan_log_recs(): Add the parameter checkpoint_lsn. Approved by Marko, Kevin. rb#5234 rb#5320 "	b787d988ebb9d9abe1e13eb0cee470e637149208
----------------------------
"BUG#17798076 - BUG#16418661 CLEANUP: REMOVE UNNECESSARY BUF_FLUSH_LIST() DURING RECOVERY Why and when the extra buf_flush_list() was added? -------------------------------------------------- The extra buf_flush_list() was added as part of rb#2293. The testcase for rb#2293 failed randomly reporting inconsistent number of undo tablespaces. MTR didn't provide a way to use custom innodb_data_file_path, innodb_undo_tablespaces. See Bug#17059436 So the workaround is to use ""--exec $MYSQLD --args my.cnf"" on a empty data directory. This will create  necessary files and aborts after that. The extra flush made sure that correct the number of undo tablespaces reported. This is not correct because the changes are already covered by redo. So the the ideal solution would be have been to run ""--exec $MYSQLD on the datadir"" again to apply redo or allow the bootstrapping to finish properly and exit. Fix: ---- Remove uncessary flush. Fix the inconsistent number of undo tablespaces issue by passing '--skip-grant-tables --innodb-unkown-parameter' to $MYSQLD. This would allow the bootstrapping to finish and properly exit. Approved by Marko, Kevin. rb#5234, rb#5320 "	c5849c17a79911fdb49f361bf8dc0a4548da1dda
----------------------------
Fix the failing ndb_big_addnode.test which started failing after increasing ThreadConfig to 4 LDM threads. Similar changes has already been performed on the similar 'non-big' ndb_addnode.test 	82646ef2d13a473b7b9e59e7a62755a12ed1b636
----------------------------
Reduction of 'MaxNoOfConcurrentScans' in 'default_ndbd.cnf' caused ndb_bushy_joins.test to fail due to 'out of scans'. Increased this config variable in the test specific config file. Also removes the [ENV] setting as this is now included in the new default config. 	2008aa9723e894d7d3bfd6e65e22a5a77460bedf
----------------------------
Change default config for MTR tests such that the ndbmtd deamon memory footprint is reduced from ~900M to ~400M. 	7630c659a313603a6761e8cd28d8ce146e3685ee
----------------------------
Bug#18694238 REMOVE UNDOCUMENTED SCRIPT SUPPORT-FILES/BINARY-CONFIGURE.SH FROM 5.7 	a10f7a84cf9b6713ac6d69ee441e7590b513b509
----------------------------
ndb_backup_rate.test checks that we are able to recover normal operation after a 'Redo log full' situation. This is done by configuring a slow 'DiskCheckpointSpeed=1M', and letting the test program produce lots of logging by inserting and deleting rows while waiting for a 'Redo log full' error. However, when running with debug compiled binaries, the insert + delete performance could be so slow that we are unable to fill the redo log. Thus this test often failed in the 'mix-debug' part of the test. This fix disable the test when run with debug binaries. NOTE: It was already disabled for Valgrind for the same reasons. 	3c9c279df363da2cd9aee87fd9931be19395c00b
----------------------------
WL6559    Optimize GTIDs for passive slave - store GTIDs in table 1. If binlog is enabled and log_slave_updates is disabled, slave SQL thread or slave worker thread saves transaction owned gtid into table before transaction prepare. 2. Slave SQL thread or slave worker thread saves gtid into table for a DDL statement if binlog is enabled and log_slave_updates is disabled. 3. Slave SQL thread or slave worker thread adds transaction owned gtid into global executed_gtids if binlog is enabled and log_slave_updates is disabled. 4. Slave SQL thread or slave worker thread adds transaction owned gtid into global gtids_only_in_table if binlog is enabled and log_slave_updates is disabled. 5. If binlog is enabled and log_slave_updates is disabled, slave SQL thread or slave worker thread does not log a empty gtid group. 6. Write new 'rpl_gtids_table_disable_log_slave_updates.test' to cover above changes. 	028e8fe4e242b39b140314b779e96aec8e99d101
----------------------------
After the default_ndbd.cnf was changed to run with 4 LDM threads, clusterj.test has been failing due to insufficient IndexMemory. This patch introduce clusterj.cnf which overrides the default IndexMemory config for clusterj.test to 16M which has been (experimentally) determined to be sufficient. 	f46ea35eef41dc2a402e8f32cd15d1126beadabe
----------------------------
Adjust 'initial size' of tablespace used as part of ndb_restore_conv_more.test. Required by introducing more LDM threads in the ThreadConfig. 	805ccfcb0a3f044ef3fc782467ae1462ed513c77
----------------------------
"Bug#18521389 CMAKE -DFEATURE_SET=XSMALL FAILS WITH MTR BOOTSTRAPPING When building with FEATURE_SET=xsmall (or small or classic) mysql-test-run.pl will not succeed in bootstrapping the test due to default-storage-engine is InnoDB which is not included. Fix: remove feature sets, enable ""xlarge""/""community"" by default. "	6ca9e7023d030ca4ebea2c60ed2dec1bd691ca63
----------------------------
Removed the MTR test ndb_mt_recv.test: This test was introduced in order to have a minimum of testing with multiple receiver threads in the ThreadConfig. The testload itself for this test, was the ndb_basic.test As multiple receiver threads now has been made part of default_ndbd.cnf, this special variant of ndb_basic.test is obsolete. 	296585c5e148fc45cdd4e75ab071afeae3ad3d23
----------------------------
"Bug#18187290 ISSUE WITH BUILDING MYSQL USING CMAKE 2.8.12 We want to upgrade to VS2013 on Windows. In order to do this, we need to upgrade to cmake 2.8.12 This has introduced some incompatibilities for .pdb files, and ""make install"" no longer works. To reproduce: cmake --build . --target package --config debug The fix: Rather than installing .pdb files for static libraries, we use the /Z7 flag to store symbolic debugging information in the .obj files. "	26b989dc73a395977fb7f16b00c718770e82e73e
----------------------------
Bug#18599982: HAVE_DECL_FDATASYNC & HAVE_FEDISABLEEXCEPT CMAKE CONFIGURE CHECKS ARE BROKEN The problem was that the results of the HAVE_DECL_FDATASYNC and HAVE_FEDISABLEEXCEPT CMake configure checks were not stored in my_config.h due to them being absent from the config.h.cmake template. This meant that code relying on these checks was in fact broken. The affected code was used to prefer fdatasync() over fsync() and to disable floating point exceptions. The patch fixes the problem by updating config.h.cmake so that the results of these two checks are saved. The patch also reorganizes config.h.cmake to make it easier to match the file with configure.cmake and other CMake files where checks are defined. In addition, the patch removes some duplicate CMake checks and some unused items from config.h.cmake. 	922e687135ad4ff073dbeee8ef70043ad8f4968f
----------------------------
* Fixed: Use the target datadir if it is empty * Fixed: Default location for .mysql_secret is the home dir of the euid 	b695e640eeb41816e33ee712f0ef8d046db00f4e
----------------------------
"* Datadir now created with the euid owner if specified and running with sufficient priv. * Disabled default signal handler for SIGPIPE * Adjusted process handling for stability. Non-blocking mode seems to cause saturation and EPIPE failure. Using blocking mode seems to work better. * Language dir is not identified by the mandatory ""english"" subdirectory * Fixed File_exist functor so that path isn't modified if the target isn't found * introduced proper escaping of strings when creating sql * Created defines for constants * moved Access_privileges and option parser code to auth_utils.cc * moved Path helper class to path.h * Added unittest for auth_utils and Path helper class "	61d15f543c228513077c626813e36201562965c9
----------------------------
WL#7806: Detect the current system tablespace size. We still skip the test if the tablespace name differs. The reason for this is that the test would hang if --mysqld=--innodb-data-file-path is passed. This is because the parameter would override whatever is specified in the configuration file. Also, we do not escape any ; that might have been specified in --innodb-data-file-path. 	97a4d6ed3bd420a9be56ab68ddb08207e124cbd3
----------------------------
BUG#18432744: RPL_CORRUPTION TEST FAILING ON 5.6 rpl_corruption test was sporadically failing with a different slave error code then expected on PB2 when it was run with gtid-mode=ON. When gtid-mode is ON, and in particular when MASTER_AUTO_POSITION=1, slave informs master which transactions it already retrieved and applied so that master (dump thread) can move forward on binary logs until it reaches the missing transactions and send them to slave. The injected event corruption through corrupt_read_log_event debug flag was also corrupting Previous_gtids_log_event and Gtid_log_event events disallowing dump thread to walk through the binary logs what was causing the unexpected ER_MASTER_FATAL_ERROR_READING_BINLOG error. Also the injected corruption was only corrupting the first read event from binary log, since dump thread was skipping the transactions already sent to slave the corrupted read event was not sent to slave. Fixed the failure by: 1) Excluding Previous_gtids_log_event and Gtid_log_event events from the injected corruption. 2) Corrupting all read events when corrupt_read_log_event debug flag is set. 	ed1c13c9f5ce7803a2a7007581644d934c4e36f0
----------------------------
WL#7806 InnoDB: Log-based discovery of built-in tablespaces This is follow-up to WL#7142 InnoDB: Simplify tablespace discovery during crash recovery We will write MLOG_FILE_NAME for all persistent tablespaces, not only for *.ibd files. Currently, this includes the following: * The InnoDB system tablespace (ibdata*) * The InnoDB undo log tablespaces (undo*) On startup, the InnoDB system tablespace and the InnoDB redo log will be opened. If there are redo log records to be applied since the latest checkpoint, any tablespaces requiring cleanup will be opened and recovered based on MLOG_FILE_NAME records in the redo log. If the MLOG_FILE_NAME records for the system tablespace disagree with the server configuration affecting the data file names for the system tablespace, recovery will be aborted with an error message, before applying any redo log. After recovery, any undo log tablespaces for which no redo log records were applied will be opened based on existing mechanism. The system tablespace will remain open at all times. is_predefined_tablespace(): Remove. All redo-logged tablespaces will be treated in the same way. mtr_t::m_undo_space, mtr_t::set_undo_space(): New field and method, to associate an undo tablespace associate with the mini-transaction. mtr_t::m_modifies_sys_space, mtr_t::set_sys_modified(): New field and method, to note that the mini-transaction is modifying the system tablespace. mtr_t::set_spaces(): A kind of copy constructor that copies the information on modified tablespaces from another mini-transaction. mtr_t::is_undo_space(): A debug method to ensure that set_undo_space() has been called. mtr_t::Command::prepare_write(): Invoke fil_spaces_lookup() before log_mutex_enter(), to look up all tablespaces that were flagged as modified by the mini-transaction, and optimistically invoke fil_names_write() for the system tablespace. (This is equivalent to old behaviour introduced in WL#7142, with the exception that we may look up an undo tablespace and the system tablespace.) After log_mutex_enter(), truncate the log if the fil_names_write() was not needed. If an undo tablespace or the system tablespace were flagged and fil_names_dirty() holds for them, invoke fil_names_write() for them. dyn_buf_t::set_size(): New method, used for truncating unneeded MLOG_FILE_NAME records from the tail of mtr_t::log. mtr_write_log_t::m_len: Remove. We will write the entire log. The log can be truncated by dyn_buf_t::set_size(). srv_undo_tablespaces, srv_undo_tablespaces_open: Set the initial value to 0 on server startup, so that fil_space_belongs_in_lru() will behave in a predictable way during redo log apply. trx_rseg_t: Note that space,page_no are constant and need not be protected by mutex. fil_load_single_file_tablespace(): Renamed from fil_load_single_table_tablespace(). fil_space_system_check(): New function, to check that MLOG_FILE_NAME records match the system tablespace data files. fil_space_undo_check(): New function, to reopen possibly existing undo log files after redo log apply has completed. fil_spaces_lookup(): New function, to replace previous usage of fil_names_write(). At mini-transaction commit, this looks up all modified redo logged tablespaces. fil_names_write(): Renamed from fil_names_write_low(). We will get the fil_space_t* looked up by fil_spaces_lookup(). fil_name_parse(): Support undo tablespaces and multi-file system tablespace. 	45c2309bc6563d29486490b1255a4f100a9dbc2b
----------------------------
"- Bug #18511398: TRUNCATE TABLE IS WRITING PAGE-LEVEL REDO LOG RECORDS FOR THE ""DROP TABLE"" PART Truncate is done by dropping existing indexes and then re-creating the new ones. If tablespace is user-tablespace (innodb_file_per_table=1) then we can skip redo logging given that if server crashes then we don't apply redo logs instead we fix the truncate using ddl log. On successful completion log-checkpoint is done and so that, any crash post this point will not scan into previous redo-logs. Approved by: Sunny (rb#5145) "	82ed207609a3fce6d2f7487d3467ee2166b4be0b
----------------------------
Follow-up patch for Bug#13106350: MRR initialization on a derived table caused crash Updated test case by removing out-commented setting of optimizer_switch materialization to off. This was commented out due to at the time this test was back-ported to mysql-trunk, the materalization switch was not part of optimizer_switch on mysql-trunk. 	badb769333584ba0916a50325a94efdae6b7caad
----------------------------
Bug#18127243: MYSQLD --GENERAL-LOG HAS INCORRECT HELP TEXT Add missing whitespace to and clarify --general-log help text. 	ba392ababfcd06a991b16ecb71bbbbc6da8d2e4a
----------------------------
Fix for Enhancement Request Bug#18490331 DEFAULT CONFIG FOR MTR TESTS SHOULD BE MORE MULTITHREADED Set the default config for NDB datanodes such that we actually runs the test with ndbmtd *and* multiple worker threads. 	fbf1d4b6a3ff1bae80e6f3b3af15e1808d8aa52c
----------------------------
"Bug #18382225 MYSQL_CONFIG CAN'T HANDLE RELOCABLE PACKAGES THAT USES ""LIB64"" OR ""-64"" SUFFIX 'lib' is hardcoded into mysql_config, so 'cmake -DINSTALL_LIBDIR=lib64' will not work. Use INSTALL_LIBDIR when generating mysql_config. mysql_config may be renamed to e.g. mysql_config-32, fix the basedir pattern matching. "	a9c85835989341ddfa65e7b8ce3125fc397bcf19
----------------------------
Fix for bug#18490173: TEST RESULTS SHOULD NOT DEPEND ON NUMBER OF TC / LDM THREADS IN CONFIG Several MTR tests are modified such that the expected *.result file is independent of how many LDM / TC threads are configured, and on whether the ndbd or ndbmtd is used. Most changes are related to default 'partiotions' being a function of number of LDM's. Thus explicit 'partiotions <n>' spec has been added to several create table statements. A few places the test itself tests that the expected number of default partitions are created. In these places we have included 'ThreadConfig=ldm={count=1}' in the *.cnf file. Also had to increase setting of some config variable in order to account for possible more partitions being created with bigger configs. Also fixed a testcase for bug#58280 (ndb_index.test), which required that 'index_merge' access method was used to test aganst a previous defect. (Added more non-matching rows to test table to make 'index_merge' more favourable) In the join_pushdown test, I have now removed verification of some 'info_counters'. These has in the past caused several issues due to failing test, and maintaining these are IMO not worth the effort anymore. 	b269eb8af3c5b0156c0b42fc93b010a4f5dcd0f8
----------------------------
"Bug #13029450	OFF BY ONE ERROR IN INNODB_MAX_DIRTY_PAGES_PCT LOGIC If the percentage of dirty pages in the buffer pool exceeds innodb_max_dirty_pages_pct (set by the user) then we flush the pages.If user sets innodb_max_dirty_pages_pct=0,then the flushing mechanism will not kick in unless the percentage of dirty pages reaches at least 1%.For huge buffer pools even 1% of the buffer pool can be a huge number. FIX --- Flush the dirty pages in buffer pool if percentage of dirty pages is greater than zero and innodb_max_dirty_pages_pct is set to zero. [Approved by vasil #rb4776] "	5600b9e887ddf27b5a03f5b40576bf0b854c524c
----------------------------
"Merge: f3fa72d 5600b9e Bug #13029450	OFF BY ONE ERROR IN INNODB_MAX_DIRTY_PAGES_PCT LOGIC [ Null Merge since issue already fixed in trunk ] "	cfbdc8eff5ba748cdcaefcbd3a71bdb4e1527183
----------------------------
"Bug #17461625 	NDB REPLICATION : IMPROVE NDB_BINLOG_INDEX PROBLEM REPORTING Occasionally issues are seen writing to the mysql.ndb_binlog_index table, generally error 121 (duplicate key). One theory is that the --ndb-log-orig option is involved in some way so that the same epoch key values are inserted twice for some reason. To help test this theory, the logging of insert failures is improved. This should shine some light on the failures when they occur in the field. A new testcase is added which tests the operation of these warnings using error insertion. "	3f6c343f91b1a53b78f37517cfe785e460a2feba
----------------------------
WL#7142: Clean up innodb.innodb-multiple-tablespaces test. Use shutdown_server 0 for killing the server. Allow the test to run with non-debug servers, and with Valgrind. Clean up message suppressions. Remove some sleeps. Do not restart with force-recovery, but instead do a test restart that is expected to fail to start up. Then, clean up the injected error and restart normally. This test started failing after the change marko.makela@oracle.com-20140328123744-ewk9sgbtwxfmurio started to completely ignore *.isl files during redo log processing. The problem was that the redo log was being ignored for the affected tablespaces due to --innodb-force-recovery=1, and the tablespaces were corrupted. Enabling innodb_force_recovery should be a last resort, it can corrupt data also in other cases. 	40f2371fd3f97979a639bced0379af2eca58e814
----------------------------
Bug#18366909 MGMD BINARY CONFIG LOOSES SERVERPORT AND OTHER SETTINGS WITH TYPE KEY_INTERNAL - follow up fix which moves the two new config parameters up a notch to avoid conflict with already used number 634 	2470ae4e74412393ca3fadf63b02cf74b57e8c2c
----------------------------
BUG#18311024: mysql_config_editor: invalid write in remove_login_path when given empty path Fix to test. Fixed GCC error when converting const string to not const in one place. 	6ed4af7788cab4c18c8d30c2532d899a89920a17
----------------------------
BUG#18311024: mysql_config_editor: invalid write in remove_login_path when given empty path Post-push fix, broken build: error: deprecated conversion from string constant to ‘char*’ 	aee4fdbb4acc692b0aabc53b0c8d2afb49bffab0
----------------------------
Merge: 5c7fe0d 5feb5cc BUG#18311024: mysql_config_editor: invalid write in remove_login_path when given empty path There is bug resulting in access to non-accessible memory. Fix was to calculate correct indexes to copy. By the way memory check tool found memory leaks, which were easy to get fixed, so I attach them in this commit. Approved by Joro #rb4977 	5a8b70bf66256c046b5c2f689ddc7500540e69d4
----------------------------
BUG#18311024: mysql_config_editor: invalid write in remove_login_path when given empty path There is bug resulting in access to non-accessible memory. Fix was to calculate correct indexes to copy. By the way memory check tool found memory leaks, which were easy to get fixed, so I attach them in this commit. 	5feb5cc4eceace7ce147ec2c043050a5969421e5
----------------------------
Bug#17350716 INNODB-WL6045-2 FAILS ON PB2 DUE TO WARNING IN SERVER LOGS Problem: Warning message is due to small innodb_buffer_pool_size=8MB (by default) as buffer pool is getting more full when using compression. This doesn't occur with --innodb_buffer_pool_size=10MB. Fixed: suppressed the warning message. Approved by Marko over IM. 	f31698aa39ea3c694d4497770ec4d6a971a2951b
----------------------------
WL#6146 Extend Ndb conflict exceptions table The original conflict table is defined like this: CREATE TABLE original_table$EX  ( server_id INT UNSIGNED, master_server_id INT UNSIGNED, master_epoch BIGINT UNSIGNED, count INT UNSIGNED, original_table_pk_columns, [additional_columns,] PRIMARY KEY(server_id, master_server_id, master_epoch, count) ) ENGINE=NDB; Requirements ------------ 1) Support backwards compatibility so that existing conflict detection users needn't change their table schema 1.1 Mandatory columns may have any names 1.2 Main table primary key columns may have any names 1.3 Additional columns sharing names with main table columns are treated as user columns. 2) Support use of a reserved column name namespace for metacolumns, allowing an arbitrary subset of non-pk main table columns to be recorded 2.1 NDB$ prefix used for all mandatory (non main table / user data columns) 2.2 Existing mandatory columns prefixed with NDB$ 2.3 The full user table PK needn't be recorded 2.4 Matching of main table columns to exceptions table columns to be on the basis of name and type. 2.5 Informative error message to be produces when column name/types mismatch 2.5.1 NDB$ prefixed column with invalid suffix 2.5.2 Column type not matching expectation 3) Support recording rejected non-primary key after values in the exceptions table where available 3.1 None, some or all non-primary key after values may be stored. 3.2 WRITE_ROW events may not have all column after values due to i) Logging updated only on the Master ii) Master having fewer columns than the Slave 3.3 UPDATE_ROW events may not have all column after values due to i) Logging updated only on the Master ii) Master having fewer columns than the Slave 3.4 DELETE_ROW events have no after values 3.5 All non primary key main table columns must be NULLABLE or natively DEFAULTed in the Exceptions table 4) Support recording optional conflicting operation type 4.1 e.g. NDB$OP_TYPE INT UNSIGNED NOT NULL 4.2 Current types : WRITE_ROW, UPDATE_ROW, DELETE_ROW 5) Support recording optional conflict cause 5.1 e.g. NDB$CFT_CAUSE INT UNSIGNED NOT NULL 5.2 Current causes : ROW_DOES_NOT_EXIST (UPDATE_ROW, WRITE_ROW) ROW_ALREADY_EXISTS (WRITE_ROW) DATA_IN_CONFLICT   (UPDATE_ROW, DELETE_ROW) TRANS_IN_CONFLICT  (*) 5.3 Note that TRANS_IN_CONFLICT obscures per-row causation information, so perhaps warn when a table with transactional conflict detection is configured with a conflict cause column in the exceptions table 6) Support recording optional originating transaction id info 6.1 e.g. NDB$ORIG_TRANSID BIGINT UNSIGNED NOT NULL 6.2 Note that this is most likely to be useful with transactional conflict detection, so perhaps warn if it's configured for a non-transactional algorithm 7) Additional added functionality 7.1 Support for referencing old/new values of non-primary key columns <column_name>$old and <column_name>$new (same as just writing <column_name>) columns in the extended exceptions will reference old and new values in update operations. For write operations the old value will be NULL and for delete operations the new value will be NULL. Checks will be made that such columns will have to be declared as nullable or with a default value (native ndb default) and cannot be part of the primary key. 7.2 NDB$OP_TYPE will be also aligned with ENUM('WRITE_ROW','UPDATE_ROW', 'DELETE_ROW') NOT NULL 7.3  NDB$CFT_CAUSE will also be aligned with ENUM('ROW_DOES_NOT_EXIST','ROW_ALREADY_EXISTS','DATA_IN_CONFLICT','TRANS_IN_CONFLICT') NOT NULL 	d208647e0b64f74b54ee9a8e5ab5c5fa9762dd14
----------------------------
post-push test fix for bug#18167648. Query plans changed for innodb_page_size=4k require that the page size is 16k. Also added requirement that partitioning is available. 	1e374765bb229f8913dfdb1dc7525bd0c691cb3d
----------------------------
"Test push of WL#7142 InnoDB: Simplify tablespace discovery during crash recovery When the setting innodb_file_per_table=ON was introduced in MySQL 4.1, InnoDB crash recovery was changed so that the directories will be searched for *.ibd files if any redo needs to be applied. The scanning and opening of all *.ibd files (including ones for which no redo log needs to be applied) can be very slow, especially on deployments that contain a large number of *.ibd files. Furthermore, if we allow a more liberal placement of tablespace files in the file system, we might have to extend the search to an even broader range of directories. This worklog eliminates the *.ibd file scan by guaranteeing the following: If there are redo log records for any non-predefined tablespace, there will also be an MLOG_FILE_NAME record. The InnoDB redo log format will be changed as follows: MLOG_FILE_NAME(space_id, filename): A new redo log record. Replaces MLOG_FILE_CREATE, MLOG_FILE_CREATE2. MLOG_FILE_RENAME2(space_id, old, new): The names will be file names (directory/databasename/tablename.ibd). Replaces MLOG_FILE_RENAME, which used table names (databasename/tablename). NOTE: We will write MLOG_FILE_NAME once since the latest redo log checkpoint. Immediately after a checkpoint, the log may contain some MLOG_FILE_NAME records that were ""copied across the checkpoint"" and a MLOG_CHECKPOINT marker to signal the end of a checkpoint. On redo log apply during crash recovery, we will scan the log up to three times: Recovery scan 1: Look for the first MLOG_FILE_CHECKPOINT marker since the latest checkpoint. If there is no MLOG_FILE_CHECKPOINT, we will skip the entire log. The data files will correspond to the system state as of the checkpoint. Recovery scan 2: Read the redo log since the latest checkpoint. Copy scanned records to recv_sys->addr_hash, and construct a map of recv_spaces, based on MLOG_FILE_NAME and MLOG_FILE_DELETE records. Before applying the records from recv_sys->addr_hash, we will check if any tablespace files are missing. If there are missing tablespaces, we will refuse to start up, so that the DBA can intervene, for example to manually rename files. This new safeguard of WL#7142 can be disabled by setting innodb_force_recovery. If not all redo log records in recv_sys->addr_hash, we will need a third log scan: Recovery scan 3: Read the redo log since the latest checkpoint. If recv_sys->addr_hash fills up, apply the batch of log records and read a new one. mlog_id_t: Remove MLOG_FILE_CREATE, MLOG_FILE_CREATE2, MLOG_FILE_RENAME. Add MLOG_FILE_NAME, MLOG_FILE_RENAME2, MLOG_CHECKPOINT. MLOG_FILE_FLAG_TEMP: Remove. This was a flag for MLOG_FILE_CREATE*. enum dict_check_t: Remove DICT_CHECK_ALL_LOADED. Crash recovery no longer loads all tablespaces. mtr_t::m_named_space: Associates a tablespace with a mini-transaction. A mini-transaction may be associated with up to one non-predefined tablespace. It may also modify predefined tablespaces for change buffering and undo logging. mtr_t::set_named_space(ulint space): Sets m_named_space. mtr_t::is_named_space(ulint space): Checks if the mini-transaction is associated with a given tablespace. mtr_t::Command::prepare_write(): Write an MLOG_FILE_NAME record if needed. This is executed as part of mtr_commit(). mtr_t::commit_checkpoint(): A special method to emit redo log records to the redo log buffer when the caller already invoked log_mutex_enter(). This is only used by fil_names_clear(). fil_space_t::max_lsn: LSN of the most recent fil_names_write() call, or 0 if the tablespace has not been dirtied since fil_names_clear(). fil_space_t::named_spaces, fil_system_t::named_spaces: List of tablespaces for which MLOG_FILE_NAME has been written since the latest checkpoint. recv_sys_t: mlog_checkpoint_lsn: The LSN of the first scanned MLOG_CHECKPOINT record, or 0 if none was read yet. fil_space_get(): Look up a tablespace. This is invoked during mtr_t::Command::prepare_write() while not holding the log mutex, to prepare for a fil_names_write() call. The idea is to minimize the log_mutex hold time. fil_space_create(): Add an output parameter for returning a duplicate tablespace (same space_id). fil_space_free(): Make this an externally callable function, to free a tablespace from the cache when applying MLOG_FILE_DELETE. fil_space_free_low(): Renamed from fil_space_free(). The new wrapper fil_space_free() will acquire fil_system->mutex. fil_op_log_parse_or_replay(): Change the order of parameters. Remove log_flags, and rename parse_only to replay. We no longer attempt to replay log records of a multi-item mini-transaction, unless the MLOG_MULTI_REC_END was seen. fil_rename_tablespace(): Change the function signature. Take old_path, new_name, new_path_in. MLOG_FILE_RENAME2 is logging file names, not table names like MLOG_FILE_RENAME was. Also invoke fil_name_write(). enum fil_load_status: Outcomes of fil_load_single_table_tablespace(). fil_load_single_table_tablespace(): Do not exit on failure. Instead, return a status value to the caller. fil_load_single_table_tablespaces(): Remove. We no longer try to load all *.ibd files. fil_create_new_single_table_tablespace(): Do not write any MLOG_FILE_CREATE or MLOG_FILE_CREATE2. Instead, invoke fil_name_write() to write MLOG_FILE_NAME. fil_mtr_rename_log(): Change the signature. Take dict_table_t instead of names. Take a tmp_name. fil_names_write_low(): Write MLOG_FILE_NAME record(s) for a tablespace. fil_names_write(): Write MLOG_FILE_NAME record(s) for a tablespace if not already written since the latest checkpoint. fil_names_clear(): Write MLOG_FILE_NAME records and MLOG_CHECKPOINT on a log checkpoint or at system startup. If do_write=true, writes MLOG_CHECKPOINT even if no MLOG_FILE_NAME was written. Reset those fil_space_t::max_lsn for which fil_names_write() has not been invoked after the checkpoint LSN. Return true to the caller if any redo log was written. fil_op_write_log(): Replace log_flags with first_page_no, and replace table names with file paths. The parameter first_page_no is currently being passed as 0, because we do not have non-predefined multi-file tablespaces yet. fil_name_write(): Write an MLOG_FILE_NAME record for a file. Datafile::open_read_only(): Add the parameter bool strict. fsp_names_write(): Wrapper for mtr->set_named_space(). This must be called when a mini-transaction is going to modify a non-predefined tablespace. is_predefined_tablespace(): Check if a tablespace is a predefined one (system tablespace, undo tablespace or shared temporary tablespace). enum recv_addr_state: Add RECV_DISCARDED, so that buffered redo log records can be retroactively deleted if an MLOG_FILE_DELETE was later recovered for a tablespace. btr_free_but_not_root(), btr_free_root(): Call fsp_names_write(). btr_cur_ins_lock_and_undo(), btr_cur_optimistic_insert(), btr_cur_pessimistic_insert(), btr_cur_update_in_place(), btr_cur_optimistic_update(), btr_cur_pessimistic_update(), btr_cur_del_mark_set_clust_rec_log(), btr_cur_del_mark_set_clust_rec(), btr_cur_optimistic_delete_func(), btr_cur_pessimistic_delete(): Call fsp_names_write() after successful locking and undo logging. btr_store_big_rec_extern_fields(), btr_free_externally_stored_field(), row_ins_index_entry_big_rec_func(): Call fsp_names_write(). dict_build_tablespace(), dict_create_index_tree_step(), dict_recreate_index_tree(), fil_reinit_space_header(): Call fsp_names_write(). page_cur_insert_rec_write_log(), page_copy_rec_list_to_created_page_write(), page_cur_delete_rec_write_log(), page_cur_delete_rec(), page_create(): Assert that fsp_names_write() has been called. dict_table_rename_in_cache(): Pass old_path to fil_rename_tablespace(). dict_check_tablespaces_and_store_max_id(): Remove the logic for DICT_CHECK_ALL_LOADED. We could probably remove this entire function, given that the maximum is also stored in the DICT_HDR page. mlog_write_initial_log_record_for_file_op(): Replaced by mlog_write_initial_log_record_low(). log_checkpoint(): Before invoking log_write_up_to(), invoke fil_names_clear() to copy any MLOG_FILE_NAME records across the checkpoint. Flush the log up to the MLOG_CHECKPOINT marker, instead of only up to the checkpoint LSN. Without this step, the log between oldest_lsn and log_sys->lsn would be essentially corrupted (missing MLOG_FILE_NAME records on redo log apply). When the redo log scanner sees the first MLOG_CHECKPOINT since the latest checkpoint, it knows that there must be no missing MLOG_FILE_NAME record for any page operation on a non-predefined tablespace. If the MLOG_CHECKPOINT marker is missing, no redo log will be applied, and the system would be at the state of the checkpoint. fil_name_parse(): New function, to update the recv_spaces map based on MLOG_FILE_NAME and MLOG_FILE_DELETE records during recovery. recv_parse_or_apply_log_rec_body(), recv_parse_log_rec(): Add the parameter ""apply"". Do not apply file-level redo log records unless the entire mini-transaction has been recovered. Fail if an MLOG_FILE_NAME record is missing for a page-level operation. recv_recover_page_func(): Assert that no LSN is after the latest scanned redo log LSN. recv_parse_log_rec(): Check for some more log corruption. recv_parse_log_recs(): Add a parameter ""store_to_hash"" to control whether the records should be stored into recv_sys->addr_hash. Add a parameter ""apply"" to specify whether log records should be applied (apply=false during the first scan for MLOG_CHECKPOINT). Return true if an MLOG_CHECKPOINT record was seen for the first time. Improve DBUG_PRINT output, and detect some more log corruption. recv_scan_log_recs(): Add a parameter ""store_to_hash"" to control whether the records should be stored into recv_sys->addr_hash. recv_group_scan_log_recs(): Initialize the variables and data structures to begin reading redo log records. Add a parameter ""last_phase"" that is set when a multi-pass recovery is needed and we are scanning the redo log for a third time. In last_phase, we will invoke recv_apply_hashed_log_recs() to empty recv_sys->addr_hash between passes. If last_phase=false, we would stop filling recv_sys->addr_hash, only processing file-level redo log records. recv_init_crash_recovery(): Split some code into recv_init_crash_recovery_spaces(), to be invoked after the first call to recv_group_scan_log_recs(). recv_recovery_from_checkpoint_start(): Invoke recv_group_scan_log_recs() up to 3 times if needed. After processing all redo log, write an MLOG_CHECKPOINT marker so that in case we will crash before making a checkpoint, the log will be replayed by subsequent crash recovery. checkpoint_now_set(): Avoid an infinite loop in case an MLOG_CHECKPOINT marker is the only thing that was written since the latest checkpoint. rb#4700r6 "	21175a7b2a341b3dc7baf49bc8df3173e4a120f7
----------------------------
WL#6813: Intra-schema MTS: ordered commits (sequential consistency) DESCRIPTION =========== This worklog ensures that the commits by slave worker threads running in parallel are done in the same order as on the master. This also means that the slave will never externalize a database state which was never externalized by the master. DESIGN ====== - slave_preserve_commit_order The behavior is optional. Users can control it through a new system variable named slave_preserve_commit_order. - Commit_order_manager We implement a commit order manager which maintains a queue of transactions which are applying by workers. Coordinator registers them into the queue when dispatching them to a worker. So the transactions in the queue have the order as they are in the relay log. All the transactions should go into the flush stage(see Binlog Group commit) in the queue sequence. When a worker commits its transaction(before the transaction goes into flush stage), it must wait until it becomes the queue head. It does means all transactions before it have entered into flush stage. Once the transaction enters flush stage, It is popped from the queue and signals the next transaction to go ahead. The feature is for only intra-schema multi-threaded slave, but not database partitioned multi-threaded slave. And it is not supported when log_bin or log_slave_updates is OFF. 	2c117d4822738a6f142c27c23c1b4fe6dfb45836
----------------------------
Fix for Bug#11746486 CLUSTER RELATED PARAMETERS CANNOT BE SET IN MY.CNF The config parameters ndb_index_stat_cache_entries and ndb_index_stat_update_freq has been deprecated, but was not completely removed from the set of variables. This fix removes these variables. NOTE: The bug report also mention multi_read_range and ndb_use_transactions. These will require a document update, see bug report. 	8047d8018527348dc5a1db40487c69dec8ae87c8
----------------------------
"ndb - revert test configuration for testFK With the fix for Bug #18082045	 TESTFK CREATEDROPWITHDATA NEED HIGH MAXNOOFCONCURRENTSCANS AND MAXNOOFLOCALSCANS the higher MaxNoOfConcurrentScans are no longer needed for testFK -n CreateDropWithData introduced in revision-id: mauritz.sundell@oracle.com-20140110163326-48yzitisfij7y26m message: ndb - test: testFK -n CreateDropWithData T1 needs higher MaxNoOfConcurrentScans Raising to MaxNoOfConcurrentScans = 300. Experiments gave that ~257 is needed. "	b00ed9c4739682ad4a9221a00e0593ba6433f6c8
----------------------------
Bug#18403670 VERIFY THAT ENUM VALUE IN BINARY CONFIG ARE CONSECUTIVELY ASCENDING 	a3831a654bfadd957e4279aec8d573e4a9681e86
----------------------------
Bug#18366909 MGMD BINARY CONFIG LOOSES SERVERPORT AND OTHER SETTINGS WITH TYPE KEY_INTERNAL - Neither ServerPort or TcpBind_INADDR_ANY ended up in the binary config since they was marked as internal. This was probably done intentionally since both these settings are only used to calculate values which end up in other places of the config. But it's hard to reverse engineer and thus it's better to add both the original value and the calculated value to the binary config. There are more options marked as internal but they are either deprecated or undocumented. - Fix by giving the two options a proper value and ass testcase to show the values with ndb_config. 	58f1363240522a09733732e72da61868cfd308a2
----------------------------
Bug #13029450  OFF BY ONE ERROR IN INNODB_MAX_DIRTY_PAGES_PCT LOGIC Corrected the format specifier in the warning message. 	2d3096e73be8e5aee4cf26bbe166cec67719b1e3
----------------------------
Bug #13029450  OFF BY ONE ERROR IN INNODB_MAX_DIRTY_PAGES_PCT LOGIC Fixed compilation warning in linux. 	933defaebe0c00d4ba31daf661ca7e497b42e689
----------------------------
Bug #13029450  OFF BY ONE ERROR IN INNODB_MAX_DIRTY_PAGES_PCT LOGIC If the percentage of dirty pages in the buffer pool exceeds innodb_max_dirty_pages_pct (set by the user) then we flush the pages.If user sets innodb_max_dirty_pages_pct=0,then the flushing mechanism will not kick in unless the percentage of dirty pages reaches at least 1%.For huge buffer pools even 1% of the buffer pool can be a huge number. FIX --- Flush the dirty pages in buffer pool if percentage of dirty pages equals innodb_max_dirty_pages_pct or exceeds it. We have changed the innodb_max_dirty_pages_pct and innodb_max_dirty_pages_pct_lwm to double value,so that user can fine tune the percentage of dirty pages in the buffer pool. [ Approved by vasil #rb4778 ] 	7ee041cfba5f7943764ac319f529b75239f0db68
----------------------------
Bug#18383169: QUERIES WITH RANDOM_BYTES() ENTER QUERY CACHE The problem was that queries using RANDOM_BYTES, AES_ENCRYPT or AES_DECRYPT could be cached in the query cache. RANDOM_BYTES is random and AES_* are dependent on block_encryption_mode system variable. This patch fixes the problem by tagging queries using these functions as unsafe to cache. 	bf58abbcff3eaa4cee56961b20ed25f7956b6799
----------------------------
Merge: 295db0a 85c1b83 Merged the changeset for: Bug#18145032: NO EMPTY TRANSACTION IS CREATED FOR A FILTERED CREATE TEMPORARY TABLE WITH GTIDS Bug#18095502: NO EMPTY TRANSACTION IS CREATED FOR REPLICATE-IGNORE-DB OR REPLICATE-DO-DB from 5.6 to trunk. 	089482aeb926ebc71c3a11192f81d998f26a2c23
----------------------------
Bug#18145032: NO EMPTY TRANSACTION IS CREATED FOR A FILTERED CREATE TEMPORARY TABLE WITH GTIDS Bug#18095502: NO EMPTY TRANSACTION IS CREATED FOR REPLICATE-IGNORE-DB OR REPLICATE-DO-DB Background: When gtid_mode=on, and a transaction is filtered out on the slave, the GTID of the transaction is still logged on the slave as a so-called empty transaction (just a GTID followed by BEGIN and then COMMIT). This is necessary to prevent the transaction from being re-transmitted next time the slave reconnects or does a fail-over. Symptom: 1. If a CREATE TEMPORARY TABLE or DROP TEMPORARY TABLE statement was filtered out, no empty transaction was generated. 2. If the slave has a database filter (--replicate-[do|ignore]-db), no empty transaction was generated. Analysis: 1. Empty transactions are normally generated after a committing statement ends, i.e., after an explicit COMMIT statement or after a statement that causes an implicit commit. However, CREATE TEMPORARY TABLE and DROP TEMPORARY TABLE have very special semantics when it comes to implicit commit. The statements do not have the implicit commit flag set and will not commit an ongoing transaction. However, they cannot be rolled back. So when executed out of transactional context, they effectively perform a commit after execution. When GTID_MODE=ON, these statements are only allowed outside transactional context, and they are not written to the binary log within BEGIN/COMMIT statements. Therefore, when such a statement has been executed and filtered out, an empty transaction must be explicitly committed. The reason for the bug is that the current condition for checking if empty transaction should be generated is that stmt_causes_implicit_commit returns true. 2. Empty transactions are generated in mysql_parse. However, database filters were evaluated before mysql_parse was even called. Fix: 1. When checking if an empty transaction should be generated, also check explicitly for CREATE/DROP TEMPORARY. 2. Move database filter checking into mysql_parse. Further bugs: 3. In the special case that a statement has an 'unexpected' error code according to the check in log_event.cc:unexpected_error_code(), mysql_parse() is not executed and instead mysql_test_parse_for_slave() is executed. This is for the sole purpose of parsing without executing, so that an error is only generated on the slave for non-filtered tables. Thus, when moving the filter rule checking from do_apply_event() into mysql_parse(), we also need to perform the same check in mysql_test_parse_for_slave(). Test framework fixes: - To ease testing of this and other GTID-related bugs, I added the test framework files gtid_step_reset.inc and gtid_step_assert.inc. gtid_step_assert.inc asserts that the statements executed since last gtid_step_reset.inc generated a given number of GTIDs. This in turn needed some extra functions in gtid_utils.inc, and I also cleaned up and simplified gtid_utils a little and added a test case for it. - Small improvement in mysql-test/include/wait_for_slave_sql_to_stop.inc to allow comments after the error code(s). 	85c1b8306968ba8c54db1970748ce9976f071956
----------------------------
Bug#18312967 REMOVE RECV_MAX_PARSED_PAGE_NO The variable recv_max_parsed_page_no is only being used in a diagnostic message when not all redo log records were applied to user pages. It might have been more useful before MySQL 4.1 introduced the innodb_file_per_table setting. With multiple tablespaces, the variable has limited usefulness. rb#4837 approved by Vasil Dimov 	19a4e8e305bc49558dca539297969ca124d35254
----------------------------
WL#6120 -post push fix Testing relay log numbers with gtids in the test situation is non-deterministic. So, this test will fail on gtid-mode=on. Disabled the test with gtid-mode=on. 	9314418c80e221a812a9571453e54c24dd05ca14
----------------------------
Bug #18324650- BINLOG.BINLOG_SPURIOUS_DDL_ERRORS FAILS WITH GTID ON After WL#7205 mtr tests are run with gtid-mode in daily and weekly. This test was disabled when the WL was pushed and hence this was not caught. The test relies on CREATE..SELECT which is unsafe with gtids. Disabled the test with gtid-mode=on. 	cd849efb029fd64f522e099f188d4ca0c8fcc098
----------------------------
WL#6885: Flag to indicate session state In order to ensure session migration from one server to another we need a means to know if there is any session context available so that the context can be migrated to the target server. This worklog will implement a means to let the connectors/fabric know that there is a change in session state by sending a tracker(flag) to the client in the OK packet. A session state is considered to change in following cases: - user defined variable assignment - successful session specific value for server configuration variables assignment - temporary tables created, altered or deleted - prepared statements added or removed - change of the current database 	44ac242164a726c7420661ab96028f5c45533331
----------------------------
Bug#17986385:LOG-WARNINGS=2 UNUSABLE ON SLAVE WITH FILTERS Retaining the error log to identify the test behaviour. 	3b4c70921b238180545c08a2819a8292cf0dae39
----------------------------
WL#6120 -post push fix After WL#7205 was pushed, mtr tests are also run in gtid-mode with auto_position=1. The chaged tests here had CHANGE MASTER TO a file/position related field which failed saying this can not be done with auto_positio=1. Fixed by saving the auto_position value in the beginning of the test, setting auto_position= 0 explicitly before using file/position related options in the test and restoring auto_position value at the end of the test. 	d76b67c71d1d23276210738b87d8cecc5db875f3
----------------------------
Bug#17730320: REMOVE UNNEEDE CMAKE CHECKS AND #IFDEFS IN 5.7.4 Patch #3. This patch removes the following: HAVE_SETENV - always true HAVE_DECL_SHM_HUGETLB - use HAVE_LARGE_PAGES instead HUGETLB_USE_PROC_MEMINFO - use HAVE_LARGE_PAGES instead HAVE_LARGE_PAGE_OPTION - use HAVE_LARGE_PAGES || HAVE_SOLARIS_LARGE_PAGES instead HAVE_RWLOCK_T - never used HAVE_DECL_MHA_MAPSIZE_CA - use HAVE_SOLARIS_LARGE_PAGES instead HAVE_SYS_IPC_H - always true (where used) HAVE_SYS_SHM_H - always true (where used) Removed _MSC_VER checks where they are not relevant as we require Visual Studio 2010 (which has _MSC_VER = 1600). Also added CMake check which aborts configuration if an older version of Visual Studio is used. Removed HAVE_PREAD checks where they are not relevant. HAVE_PREAD is always true for non-Windows supported platforms (POSIX). 	2eb5f1473be2433762cd4ff48a270578e14f8b24
----------------------------
Merge: bc18bfd 04b4479 WL#6120- Change master without stopping slave Currently, the way we move from a topology M1->S to M2->S is: a) STOP SLAVE b) SHOW SLAVE STATUS to get (Read_Master_Log_Pos, Master_Log_File) c) START SLAVE UNTIL <position> d) SELECT MASTER_POS_WAIT(<position>) e) CHANGE MASTER <new master> f) START SLAVE The proposal is to reduce these steps to just CHANGE MASTER <new master> wherever applicable. See points (a-d) below regarding these rules. a) If IO thread is running and SQL thread is stopped: - CHANGE MASTER TO RELAY_LOG_FILE/RELAY_LOG_POS/MASTER_DELAY will be allowed. - All other CHANGE MASTER options will be disallowed b) If SQL thread is running and IO thread is stopped: - CHANGE MASTER TO RELAY_LOG_FILE/RELAY_LOG_POS/MASTER_DELAY will be disallowed - All other CHANGE MASTER options will be allowed. c) CHANGE MASTER TO MASTER_AUTO_POSITION=1 will be allowed only if both IO and SQL threads are stopped. d) If the receiver/applier is running and the slave has open temporary tables, we print a warning on CHANGE MASTER. 2) In the above mentioned change, there could be an instant of time when the IO thread is reading from M2 and the SQL thread is executing events that had been received from M1, *both at the same time*. Also there is no overhead of killing and spawning new threads. 3) Currently, CHANGE MASTER purges relay log files unless the command uses RELAY_LOG_FILE/RELAY_LOG_POS option. This behavior will be kept intact when the both thread are stopped. The reason for this is that we can't remove the relay log(s) with a running SQL thread. When any one thread is running while we do a CHANGE MASTER, we dont delete relaylogs. The relaylog deletion can be handled by using the relay-log-purge option. 4) With Statement based replication (SBR), we don't recommend using temporary tables. One reason is that there is a possibility that the temporary tables are left open forever on a failover. To warn users that there could be such a situation we introduce warnings in the error log when one does a change master or stop slave. More precisely, we follow the following rules: 4.1 change master should never drop temp tables 4.2 We introduce a new command to drop temp tables. This will be done in WL#7441. 4.3 The options under change master can be grouped under three groups: a) To change a connection configuration but remain connected to the same master. b) To change positions in binary or relay log(eg: master_log_pos). c) To change the master you are replicating from. Change master should generate a warning if there are open temp tables in cases a and b above. 4.4 Stop slave should generate a warning if there are open temp tables. 	a5f30d5da25d667efdcc85fa9b9c2e70a4b21a27
----------------------------
WL#7628 - Remove innodb_use_sys_malloc & innodb_additional_mem_pool_size system variables in 5.7 This effort involves deleting and changing the following code, code files and test files. * Global setting innodb_use_sys_malloc * Test suite/sys_vars/innodb_use_sys_malloc_basic * Global setting innodb_additional_mem_pool_size * Test suite/sys_vars/innodb_additional_mem_pool_size_basic * The common memory pool and all the code that implements memory pools in mem0pool.cc, mem0pool.h, mem0pool.ic * Rename test innodb_use_sys_malloc to innodb-large-prefix and delete the portion of this test that relates to the innodb_use_sys_malloc setting. * Change ut_malloc() so that it always attempts the malloc() 60 times in 60 seconds. Previously, it would try only one malloc() with innodb_use_sys_malloc=ON. If OFF, it used to do the 60 tries in 60 seconds using the common memory pool. * Change ut_realloc so that it always attempts the realloc() 60 times in 60 seconds. Previously, it would try only one realloc() with innodb_use_sys_malloc=ON. If OFF, it used call ut_malloc() for a new buffer and ut_free() for the old buffer. * Deleted metadata_pool_size from information_schema.innodb_metrics * Deleted all UNIV_MEM_DEBUG code. * Greatly simplified mem_heap_validate and mem_heap_check().  All other parts of mem0dbg are removed * Removed all code under MEM_PERIODIC_CHECK and all calls to mem_analyze_corruption(). * Changed some conditional calls to ib_logf(FATAL,...) to just an assert so that the system will stop all threads sooner after a memory corruption. Approved in rb#4512 by Marko 	7d8e9c7c9ce35c59da2e7dc654f4941f46a4d9e3
----------------------------
Bug#18236612: I_S.INNODB_TEMP_TABLE_INFO AND SLAVE_OPEN_TEMP_TABLES SHOWS DIFFERENT RESULTS Problem: With gtid-mode=on, STOP SLAVE followed by START SLAVE resulted in a mismatch between I_S.INNODB_TEMP_TABLE_INFO and SLAVE_OPEN_TEMP_TABLES. The innodb table shows that no such table exists but the slave_open_temp_table variable is non-zero. The mismatch was also seen with gtid-mode=off with STOP SLAVE, CHANGE MASTER TO, START SLAVE. Analysis: Start_log_event_v3::do_apply_event(rli) calls close_temporary_tables(thd) which cleans thd->temporary_tables but does not set the slave_open_temp_tables to 0. Fix: Set slave_open_temp_tables=0 and thd->temporary=NULL in close_temporary_tables(thd). 	5b1138e49e5eae92490c78f34fa32212c9bc6f88
----------------------------
"WL#7646 Improve ndbcluster Ndb_component usage - Returning an error from ndbcluster_init() will only lead to a warning being printed by the MySQL Server and the next plugin to be loaded. I.e the error is more or less silently ignored. - Handle the problem by printing an error to the log and then exit the MySQL Server in case an error is detected in ndbcluster_init(). Errors like this should be rare, but better to have a disctinct behaviour than allowing the MySQL Server to continue start. - Workaround is to start the server ""anyway"" is to use --skip-ndbcluster - Remove code which tries to cleanup failed ndbcluster_init "	eff03d0307ea047fba117aa65f4351d7a2762c93
----------------------------
"WL#7646 Improve ndbcluster Ndb_component usage(binlog thread part) - Rely solely on Ndb_component start/stop for Ndb_binlog_thread startup and shutdown, this involves: -- use is_stop_requested() to check if time to stop thread -- implement stop() (just for having a place the put the comment about not waking up) -- remove ""running"" since that state is implemented in baseclass -- remove ""ndbcluster_binlog_terminating"" "	2b069de18f4b645549bcc33985dd709079ef0711
----------------------------
"WL#7646 Improve ndbcluster Ndb_component usage (util thread part) - Rely solely on Ndb_component start/stop for Ndb_util_thread startup and shutdown, this involves: -- use is_stop_requested() to check if time to stop thread -- implement stop() which first wakes the thread from potential sleep before continuing in baseclass stop function -- remove ""running"" since that state is implemented in baseclass -- remove ""COND_ready"" since the case where thread started up but ""failed"" is unlikely and not handled properly anyway. (The two returns in early phase of Ndb_util_thread::do_run() will be removed later when util thread get rid of THD and Thd_ndb dependency.) -- furthermore there are still a few case in all ndbcluster daemon threads where they silently exit... "	c604e4a04a08234943264cad49e6203690920ab2
----------------------------
"WL#7646 Improve ndbcluster Ndb_component usage (index stat part) - Rely solely on Ndb_component start/stop for Ndb_index_stat_thread startup and shutdown, this involves: -- use is_stop_requested() to check if time to stop thread -- implement stop() which first wakes the thread from potential sleep before continuing in baseclas stop function -- implement wakeup() which tells the thread that there are work to do. -- remove ""running"" since that state is implemented in baseclass -- remove ""COND_ready"" since the case where thread starteed up but ""failed"" does not happen in the index_stat_thread. -- move ""ndb_index_stat_waiter"" global variable to Ndb_index_stat_thread - Remove extern declaration of ndb_index_stat_thread instance from ha_ndbcluster.h but add that same declaration to ndb_index_stat.cc since implementation still uses it's own instance. "	2d24400e74d2334038e5fbfc7758f32aefda1ac6
----------------------------
Bug#18235669 MYSQL_CONFIG TO PROVIDE R FLAG ON SOLARIS 'mysql_config --libs' outputs -L/path/to/library on SunOS we also want it to output '-R/path/to/library' in order to find libraries at runtime. 	14ecc25532496014973bc01e54123d2b4771612e
----------------------------
Merge: 1c10a5a 57c2f73 Manual Merge BUG#17632285 SLAVE CAN'T CONTINUE REPLICATION AFTER MASTER'S CRASH RECOVERY Binary events might be sent to slaves before they are flushed to disk on master, even sync_binlog is set to 1. It can cause two problems if the master restarts after an OS crash. * Replication cannot continue because the slaves are requesting to replication the events don't exist on master. * Data exists on slaves, but not exists on the master. The problems are expected on less durable settings( sync_binlog != 1), but it should not happen on durable setting(sync_binlog = 1). Since 5.7 LOCK_log is removed from dump thread. Dump threads can read the binary events before binlog_end_pos simultaneously, even it is not synced to disk. To fixing the problem on durable setting, binlog_end_pos is updated after binlog is flushed to disk. 	1eed3ac02a49b79d4f2b75bf24f20a2687a2470b
----------------------------
BUG#17632285 SLAVE CAN'T CONTINUE REPLICATION AFTER MASTER'S CRASH RECOVERY Binary events might be sent to slaves before they are flushed to disk on master, even sync_binlog is set to 1. It can cause two problems if the master restarts after an OS crash. * Replication cannot continue because the slaves are requesting to replication the events don't exist on master. * Data exists on slaves, but not exists on the master. The problems are expected on less durable settings( sync_binlog != 1), but it should not happen on durable setting(sync_binlog = 1). Since 5.6 binlog group commit implementation, binlog write and sync have been protected by separate mutexes. So dump threads can read the binary events simultaneously or even before it is synced to disk. To fixing the problem on durable setting, LOCK_log is hold in sync stage and it is released after the binary events are synced to disk. 	57c2f739d8348e5152c81e92e9215c7fb8e00815
----------------------------
WL#6781: Support multiple AES Encryption modes * Implemented 128,192 and 256 ECB and CBC for YaSSL * Implemented 128,192 and 256 ECB,CBC,cfb1,cfb8,cfb128 and ofb modes for OpenSSL * added an enum session/global/config/command line variable block_encryption_mode that takes <cipher>-<bits>-<block-mode> values * added an function to generate random byte strings using the ssl library random generator : RANDOM_BYTES(bytelen). * added an optional second parameter for the initialization vector to aes_encrypt() and aes_decrypt(). * updated config editor to use the proper extended C apis. * added tests * fixed the type of the opmode session variable holder * fixed test case failures and compilation errors on linux * fixed IV buffers to account for the terminating 0 * now IV is checked only if needed by the cipher/block size combo. * if IV is not needed by the combo and is supplied a warning is generated * handled bug #18259229 * Added extra tests created during QA 	a7b541c5c2d0492e08ece74ad9982e8715ea9508
----------------------------
ndb - pass handlerton* directly to ndbcluster_binlog_init() instead of using global variable - remove yet another circular dependcy on ndbcluster_hton 	a3c6d65cdd40911119b1a9e9830676283946512b
----------------------------
WL#7646 Improve ndbcluster Ndb_component usage - fix problem in ndb binlog thread looking at the wrong variable to determine if it should shut down the thread 	2b44b0d97b0399e99f3a394922f52ef8ba5bebe5
----------------------------
WL#7646 Improve ndbcluster Ndb_component usage - add ndb_binlog_thread.cc to the build 	ddd83e9749c816004776459dc6170e6babee5825
----------------------------
WL#7646 Improve ndbcluster Ndb_component usage - Add proper DBUG_VOID_RETURN in do_run() functions 	3d72a670f2e76d0f6e7860d45e1d7ea237d2af43
----------------------------
WL#7646 Improve ndbcluster Ndb_component usage - remove usage of instance variable name from member functions of Ndb_index_stat_thread 	97c9a35d7c03d6dd763fa49b0f4ab556bd8ee4af
----------------------------
"WL#7646 Improve ndbcluster Ndb_component usage - Add ""name"" to Ndb_component - Add logging functionality to be used from each component which print out the component name and desired log message to server log file - Extend logging in the components making it possible to see what each component is doing or waiting for - partiularly the startup/shutdown stages - Add ndb_log_* logging functions, encapsulating the sql_print_* functions "	ebcc3aaa7ed747f0d06ddbc432b238159d5e5cd7
----------------------------
WL#7646 Improve ndbcluster Ndb_component usage - remove usage of instance variable name from member functions of Ndb_util_thread 	d3927655e5f7c6c3bcec990f71834dd224ad3890
----------------------------
"WL#7646 Improve ndbcluster Ndb_component usage - convert ndb_binlog_thread_func into a Ndb_component - rename ""ndb_binlog_thread_running"" to ""Ndb_binlog_thread:running"" "	68f3634760d318b212922b6ad669de33b64db43d
----------------------------
WL#7571 Reduce dependency of THD in ndbcluster - remove unused THD arg to ha_ndbcluster::alter_frm() 	64762b2a6e3f4354bf1b0bc6757b84a4ca5d6c77
----------------------------
WL#7571Reduce dependency of THD in ndbcluster - reduce ndbcluster_show_status_binlog() to return a string which the caller may print. This avoid the need for THD, stat_print etc in the ndbcluster_show_status_binlog() function and it's declaration. 	ec2080c5477441f24ac6743dc6ee134c2474319c
----------------------------
WL#7570 Remove ifdefs which are not necessary since trunk has it all - ha_ndbcluster have only two use cases for close_cached_tables(), either it closes alll tables or a specifc named table. The other parameters used are always the same. - implement ndb_tdc_close_cached_table() and ndb_tdc_close_cached_tables() for interfacing with MySQL Server's table defintion cache - use the two new functions throughout ha_ndbcluster and ha_ndbinfo - remove the 'close_cached_tables' backwards compatibilty function 	e874e7a047add0a36dc0b0cc7558ac9c82665f4a
----------------------------
Follow up fix for BUG#18180057: MANUAL DOES NOT EXPLAIN UPPER LIMIT FOR INNODB_FT_RESULT_CACHE_LIMIT VALUE Build error in some 32-bit platform handler/ha_innodb.cc:15819:1: error: this decimal constant is unsigned only in ISO C90 [-Werror] Approved by Jimmy.Yang in IM. 	5d64150320c71098b6eecc3e272ca536063c0059
----------------------------
"Bug#17581990:SLAVE SQL: COULD NOT EXECUTE QUERY EVENT. DETAILED ERROR: ;, ERROR_CODE: 0 Problem: ======== Setting slave-skip-errors=all on the slave will make mysql slave error log to grow continuously with the following warnings. [Warning] Slave SQL: Could not execute Query event. Detailed error: ;, Error_code: 0 Analysis: ======== This warning is generated during execution of Query event from the following peace of code. else if ((expected_error == actual_error && !concurrency_error_code(expected_error)) || ignored_error_code(actual_error)) { DBUG_PRINT(""info"",(""error ignored"")); if (log_warnings > 1 && ignored_error_code(actual_error)) rli->report(WARNING_LEVEL, actual_error,... The warning mainly depends on two parameters named ""expected_error"" and ""actual_error"". These two variables are initialised to zero by default. During the execution when there is no change in their values their values will remain as zeroes. Condition1: becomes true Condition2: It considers 0 as non concurrency related error code causing condition 2 to become true. condition3: 0 is considered as ignored error code. Hence the whole condition becomes true and warning gets generated. Fix: === Having ""actual == expected == 0"" must not be considered as a valid error condition. Hence if non zero value exists for this variable only then it should be checked for ignored error. "	75edea6490d287567033f0909761f0e9cd441886
----------------------------
BUG# 13975227: ONLINE OPTIMIZE TABLE FOR INNODB TABLES Analysis: -------- OPTIMIZE TABLE on INNODB or PARTITIONED INNODB tables doesn't allow concurrent changes to the same table, thus causing down time in user applications. OPTIMIZE TABLE for INNODB or PARTITIONED INNODB tables uses ALTER TABLE FORCE operation internally to address the fragmentation problem. This operations involves a table copy and taking a strong lock on SQL-layer which blocks all concurrent changes to the table. The downtime is high while performing the operation for large tables. Fix: ---- MySQL supports online rebuilding of tables within the storage engine for INNODB or PARTITIONED INNODB tables starting from MySQL 5.6.4. With this patch, the operations listed below will trigger online rebuild of table. a) OPTIMIZE TABLE. b) ALTER TABLE FORCE and c) ALTER TABLE ENGINE= INNODB(Same engine during creation) The online rebuild involves taking strong lock only for brief interval of time thus reducing the downtime for the operations. Concurrent changes to the table are allowed and the time taken to complete the operation is reduced considerably. Note that these operations will continue to use table copy under any of the below conditions: a) 'old_alter_table' system variable is turned ON. b) 'skip-new' mysqld option is enabled and OPTIMIZE TABLE operation is performed. c) Algorithm COPY is explicitly specified for the ALTER TABLE operations. 	f4611b1c650ee8bc3e9229bae562cf3ef4ed8c73
----------------------------
Bug#17986385:LOG-WARNINGS=2 UNUSABLE ON SLAVE WITH FILTERS Fixing a post push test issue. 	ceeb04ded10af687084906a892976fdddd673e8a
----------------------------
BUG#18180057: MANUAL DOES NOT EXPLAIN UPPER LIMIT FOR INNODB_FT_RESULT_CACHE_LIMIT VALUE Analysis: We set max value of fts_result_cache_limit to ~0UL(max value of ulong), but ulong is 4 bytes on windows, the max value is 4294967295(2**32 -1), which is not consistent with linux(2**64 -1). Solution: We explicitly set the max value to 4294967295. rb://4651 approved by Jimmy.Yang 	bea37de20fe9273fc8ce16740781a20c44f30d8a
----------------------------
WL#5608 Assert that all distributed files follow the principle of most restrictive permission possible Add logic to run mysql_secure_installation after initial server configuration. 	9ba3aa38221dbf9e47e5e35b763af3add4ff85e1
----------------------------
Remove ha_ndbcluster_push dependency on ndbcluster_hton - circular, ndbcluster_hton is the singleton instance 	5e4f8360a7ec08bb5228479a5989b9d6c2744133
----------------------------
WL#5608 Assert that all distributed files follow the principle of most restrictive permission possible Add logic to run mysql_secure_installation after initial server configuration. 	b51af914845190c4c06b2a84f4a11cb0345d7a6b
----------------------------
WL6559    Optimize GTIDs for passive slave - store GTIDs in table Remove options '--enforce-gtid-consistency --log-slave-updates --gtid-mode=ON' and replace '--sync_slave_with_master' with 'sync_slave_sql_with_master.inc' 	9dd4249905ede0d53b0026b810584eb8c5d49caf
----------------------------
Added clarification to the text during password validation configuration. 	34aecc0faa2b677d685810de6a5557630a79343d
----------------------------
Bug#18192896: USE NOMINMAX WHEN BUILDING ON WINDOWS Set NOMINMAX by using ADD_DEFINTIONS() in CMake rather than in config.h.cmake as this makes sure NOMINMAX is set even without including my_config.h The patch also removes workarounds that are no longer needed. The workarounds fixed Windows compilation errors, but they in several places caused windows.h macros to be used instead of std::min / std::max. 	c979d42e25a11ae9423c9534a679dc08717bf551
----------------------------
"Merge: 6dffca3 a110887 Bug#17495562 WRONG DESCRIPTION OF LENGTH OF AUTH-PLUGIN-DATA IN PROTOCOL::HANDSHAKEV10 Unclear requirements on how auth-plugin-data is sent to the client in the initial server-packet leads to situations where the client can't authenticate to a server. This patch introduces an incompatible change to fix this. A concrete example when this happens is when Connector/J 5.1.18 and server option  --default-authentication-plugin=sha256_password  is used. Background: The sha256_password plugin wants to send a 20-bytes salt to the client which is split into 8 + 12 bytes according to http://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::HandshakeV10 The 2nd part (12 bytes) + the auth-plugin-name looks like ...KHe8SY[]bP9rsha256_password\0 If default-authentication-plugin would be left at its default value ""mysql_native_password"" the same data would look like: ...KHe8SY[]bP9r\0mysql_native_password\0 (note the extra \0 before mysql_native_password) If a client connects that doesn't understand the CLIENT_PLUGIN_AUTH capability (like C/J 5.1.18) they will read up to the terminating \0 and will use the scramble to authenticate. Other older connectors like libmysql-5.1 always only read 12 bytes and ignore everything after that. Therefore they are not affected by the missing \0 character. One could argue that reading always 12 bytes is the correct way, but that doesn't match what the 5.1 (and earlier) server send: ...KHe8SY[]bP9r\0 If it would be fixed size, there would be no need for the \0. Whatever the original intent was there are two ways to parse this data: 1) read up to the \0 byte 2) read 12 bytes, ignore the rest All connectors that take the route of 1) break in the mysql-server configuration described above. Bug has the PIG-stamp-of-approval. "	33f6e47e9fc823d94e6022e4da14ebf1ca9f77d4
----------------------------
"Bug#17495562 WRONG DESCRIPTION OF LENGTH OF AUTH-PLUGIN-DATA IN PROTOCOL::HANDSHAKEV10 Unclear requirements on how auth-plugin-data is sent to the client in the initial server-packet leads to situations where the client can't authenticate to a server. This patch introduces an incompatible change to fix this. A concrete example when this happens is when Connector/J 5.1.18 and server option  --default-authentication-plugin=sha256_password  is used. Background: The sha256_password plugin wants to send a 20-bytes salt to the client which is split into 8 + 12 bytes according to http://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::HandshakeV10 The 2nd part (12 bytes) + the auth-plugin-name looks like ...KHe8SY[]bP9rsha256_password\0 If default-authentication-plugin would be left at its default value ""mysql_native_password"" the same data would look like: ...KHe8SY[]bP9r\0mysql_native_password\0 (note the extra \0 before mysql_native_password) If a client connects that doesn't understand the CLIENT_PLUGIN_AUTH capability (like C/J 5.1.18) they will read up to the terminating \0 and will use the scramble to authenticate. Other older connectors like libmysql-5.1 always only read 12 bytes and ignore everything after that. Therefore they are not affected by the missing \0 character. One could argue that reading always 12 bytes is the correct way, but that doesn't match what the 5.1 (and earlier) server send: ...KHe8SY[]bP9r\0 If it would be fixed size, there would be no need for the \0. Whatever the original intent was there are two ways to parse this data: 1) read up to the \0 byte 2) read 12 bytes, ignore the rest All connectors that take the route of 1) break in the mysql-server configuration described above. Bug has the PIG-stamp-of-approval. "	ac8754632830b5b2335317cd0bad7436d6d2a531
----------------------------
"Bug#17495562 WRONG DESCRIPTION OF LENGTH OF AUTH-PLUGIN-DATA IN PROTOCOL::HANDSHAKEV10 Unclear requirements on how auth-plugin-data is sent to the client in the initial server-packet leads to situations where the client can't authenticate to a server. This patch introduces an incompatible change to fix this. A concrete example when this happens is when Connector/J 5.1.18 and server option  --default-authentication-plugin=sha256_password  is used. Background: The sha256_password plugin wants to send a 20-bytes salt to the client which is split into 8 + 12 bytes according to http://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::HandshakeV10 The 2nd part (12 bytes) + the auth-plugin-name looks like ...KHe8SY[]bP9rsha256_password\0 If default-authentication-plugin would be left at its default value ""mysql_native_password"" the same data would look like: ...KHe8SY[]bP9r\0mysql_native_password\0 (note the extra \0 before mysql_native_password) If a client connects that doesn't understand the CLIENT_PLUGIN_AUTH capability (like C/J 5.1.18) they will read up to the terminating \0 and will use the scramble to authenticate. Other older connectors like libmysql-5.1 always only read 12 bytes and ignore everything after that. Therefore they are not affected by the missing \0 character. One could argue that reading always 12 bytes is the correct way, but that doesn't match what the 5.1 (and earlier) server send: ...KHe8SY[]bP9r\0 If it would be fixed size, there would be no need for the \0. Whatever the original intent was there are two ways to parse this data: 1) read up to the \0 byte 2) read 12 bytes, ignore the rest All connectors that take the route of 1) break in the mysql-server configuration described above. Bug has the PIG-stamp-of-approval. "	a11088710a2e8775a97406a60ecbb2eda1ce3d13
----------------------------
Bug #18174719: P_S.REPLICATION_CONNECTION_CONFIGURATION'S COL SSL_CRL_PATH THROWS WARNING 1366 Problem: The ssl_crl_path option was not set properly for replication PS table. We have a temporary variable where we have copied values and intended to copy the temporary variable back to the crl_path. Instead of memcpy(destination, source, len), the code contained memcpy(detination, destination, len) and hence the garbage value+warning. Fix: - Correct the memcpy() call. - Made changes in the test accordingly. - Minor cleanups in test. 	9e238c7455b8ac5b6dcac358f844edf30799291f
----------------------------
"Merge: 10009b1 5380312 Bug#11751526 / Bug#42421 - MYSQL_INSTALL_DB.PL NOT RELOCATABLE ON WINDOWS Merge from 5.5->5.6 In addition, changes are - Use the "".ini"" file extension for config files on Windows - Set the default system config file path - In addition, search the top directory for config files on Windows "	986af43da3e67e0d5d0f91fd9a30fa8a6792acc0
----------------------------
"Merge: d8c7a46 95c72a7 Bug#17495562 WRONG DESCRIPTION OF LENGTH OF AUTH-PLUGIN-DATA IN PROTOCOL::HANDSHAKEV10 Unclear requirements on how auth-plugin-data is sent to the client in the initial server-packet leads to situations where the client can't authenticate to a server. This patch introduces an incompatible change to fix this. A concrete example when this happens is when Connector/J 5.1.18 and server option --default-authentication-plugin=sha256_password is used. Background: The sha256_password plugin wants to send a 20-bytes salt to the client which is split into 8 + 12 bytes according to http://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::HandshakeV10 The 2nd part (12 bytes) + the auth-plugin-name looks like ...KHe8SY[]bP9rsha256_password\0 If default-authentication-plugin would be left at its default value ""mysql_native_password"" the same data would look like: ...KHe8SY[]bP9r\0mysql_native_password\0 (note the extra \0 before mysql_native_password) If a client connects that doesn't understand the CLIENT_PLUGIN_AUTH capability (like C/J 5.1.18) they will read up to the terminating \0 and will use the scramble to authenticate. Other older connectors like libmysql-5.1 always only read 12 bytes and ignore everything after that. Therefore they are not affected by the missing \0 character. One could argue that reading always 12 bytes is the correct way, but that doesn't match what the 5.1 (and earlier) server send: ...KHe8SY[]bP9r\0 If it would be fixed size, there would be no need for the \0. Whatever the original intent was there are two ways to parse this data: 1) read up to the \0 byte 2) read 12 bytes, ignore the rest All connectors that take the route of 1) break in the mysql-server configuration described above. Bug has the PIG-stamp-of-approval. "	03c220e0467fe480758fb4022b4afa48d4d22c00
----------------------------
"It's a follow-up patch for the WL#7193 (Decouple THD and st_transactions). - remove the usage of WITH_NDBCLUSTER_STORAGE_ENGINE define from ""new"" code "	f27589a847fe3720b472e994d5e6053beb0a4dc0
----------------------------
WL#5768 : PERFORMANCE SCHEMA, prepared statements instrumentation. Details: - Made max_prepared_stmt_count to be read early as it would be used for sizing hint in P_S. 	5cd5f9bd963387a748d44040b69486b4ea4e3440
----------------------------
Bug #18146422 WHEN BUILDING WITH GCC ON SOLARIS, MAKE EXTRA COPY OF MYSQL_CONFIG Set a variable in mysql_release.cmake so this only applies to release builds, devel builds should not need this. If variable set, then just copy the generated mysql_config. Also, mysql_config matches its own name to find basedir, make that more generic so mysql_server_config also finds itself. 	5d07bba442535ce07d6541f7317be81fd28e6f37
----------------------------
Merge: 63454f2 db1072c Bug#16723046 MYSQLDUMP: UNKNOWN OPTION '--SECURE-AUTH' Problem: Since after 5.6.xx the secure-auth option was by default set to true from false in mysql clients. But the support for this option was added only in mysql client. Other client tools were missing this option and hence were resulting in the error, Unknown option '--secure-auth' Solution: The secure-auth parameter was added to the mysql client utilities which connect to the server i.e., Mysqldump, Mysqladmin, Mysqlcheck, Mysqlbinlog, MysqlImport, Mysqlslap, Mysqlshow, which avoids the error now. 	986e586486514c5b73b219c2be21feb1e30a4e48
----------------------------
Bug#16723046 MYSQLDUMP: UNKNOWN OPTION '--SECURE-AUTH' Problem: Since after 5.6.7 the secure-auth option was by default set to true from false in mysql clients. But the support for this option was added only in mysql client. Other client tools were missing this option and hence were resulting in the error, Unknown option '--secure-auth', when trying to connect to the server Solution: The secure-auth parameter was added to the mysql client utilities which connect to the server i.e., Mysqldump, Mysqladmin, Mysqlcheck, Mysqlbinlog, MysqlImport, Mysqlslap, Mysqlshow, and also mysql_client_fw which now prevents the error. 	db1072c39872b22432faf338ecdefc923d8f128e
----------------------------
Bug#17986385:LOG-WARNINGS=2 UNUSABLE ON SLAVE WITH FILTERS Fixing a post push test failure. 	63454f2e421076f81eb8a8c1f0aae22cf31dc80a
----------------------------
Merge: f41104f 16eb938 Bug#14117012 - CHILD PROCESS MYSQL UTILITIES PICKING UP LOCAL CONFIG FILES CAUSES TEST Merging from 5.6 to trunk. 	edb6aa1db463a9c749ce764b326d906d83879fc2
----------------------------
Merge: 7463a8d 2e1f305 Bug#14117012 - CHILD PROCESS MYSQL UTILITIES PICKING UP LOCAL CONFIG FILES CAUSES TEST Merging from 5.5 to 5.6. 	16eb938d477d964a0991c36b6d07eae7ad5d35cd
----------------------------
"Bug#14117012 - CHILD PROCESS MYSQL UTILITIES PICKING UP LOCAL CONFIG FILES CAUSES TEST Utility as ""mysql_upgrade"" forks ""mysql""/""mysqlcheck"". Attaching ""mysql_upgrade"" shows following calls after forking ""mysql"" or ""mysql_check"" when configuration file information is passed as first argument to ""mysql_upgrade"". strace -f ./mysql_upgrade --defaults-file=../pdb/my.cnf --socket=../pdb/mysql.sock -f [pid  6254] stat(""/etc/my.cnf"", 0x7fff8e772680) = -1 ENOENT (No such file or directory) [pid  6254] stat(""/etc/mysql/my.cnf"", 0x7fff8e772680) = -1 ENOENT (No such file or directory) [pid  6254] stat(""/usr/local/mysql/etc/my.cnf"", 0x7fff8e772680) = -1 ENOENT (No such file or directory) [pid  6254] stat(""/home/user_name/.my.cnf"", {st_mode=S_IFREG|0664, st_size=19, ...}) = 0 [pid  6254] open(""/home/user_name/.my.cnf"", O_RDONLY) = 3 But when tool forks ""mysqlcheck""/""mysql"", ""--no-defaults"" is passed as first argument. Before forking, in function ""find_tool"" of ""mysql_upgrade"", check is made to verify whether tool can be executable or not by calling ""mysqlcheck --help"" and ""mysql --help"". But argument ""--no-defaults"", ""--defaults-file"" or ""defaults-extra-file"" is not passed to ""mysql"" and ""mysqlcheck"". So my.cnf is searched in default paths. Fix: ------ Modified code to pass ""--no-defaults"" as first argument to ""mysql"" and ""mysqlcheck"" while checking tool can be executed or not. "	2e1f305a7379059470d9746cc58b9d4b3398233d
----------------------------
"Bug#17986385:LOG-WARNINGS=2 UNUSABLE ON SLAVE WITH FILTERS Problem: ======== If a slave is configured with replication filters, and log-warnings=2, every statement which is filtered writes an entry to the error log: [Warning] Slave SQL: Could not execute Query event. Detailed error: Slave SQL thread ignored the query because of replicate-*-table rules. For busy servers which generate a lot of statements that get filtered, the result is an error log which can quickly grow into the GB range. Analysis: ======== This warning appears when log_warnings > 1 along with error ER_SLAVE_IGNORE_TABLE. This causes the error log to grow very quickly. Fix: === ""Error_log_throttle"" is used to fix the issue. ""Error_log_throttle"" is a time based way to control the error messages. Throttle is used for errors which are generated very frequently. For such errors first a log_throttle is defined and a time window_size is specified. For example when window is set to 1 min, for every 1 min an error message will be printed which says that this particular error has occurred n number of times. "	0c8057d867c7c022e4bea0442ba5758cae6ae575
----------------------------
Bug#18147458: CONFIGURE.CMAKE IMPROPERLY CHECKS FOR C++ HEADER CXXABI.H The problem was that CHECK_INCLUDE_FILES() was used to check for the presence of the cxxabi.h header file during configure. But as this is a C++ header file, CHECK_INCLUDE_FILE_CXX() should have been used instead. 	c7f52efb02b4dcee18cd5f2b01b1cab519770638
----------------------------
Bug#18003651 VALGRIND: MEMORY LEAK AT THE TIME OF SERVER START UP The race conditions during server shutdown are gone, so cleanup of of pfs_instr_config_array is simply a matter of deleting all allocated objects. Swich from DYNAMIC_ARRAY to Prealloced_array: it is faster, and it is type safe. Remove valgrind suppressions related pfs_instr_config_array. 	62815b83dabc788a673a484c381dbe706f8b692f
----------------------------
"Bug#17495562 WRONG DESCRIPTION OF LENGTH OF AUTH-PLUGIN-DATA IN PROTOCOL::HANDSHAKEV10 Unclear requirements on how auth-plugin-data is sent to the client in the initial server-packet leads to situations where the client can't authenticate to a server. This patch introduces an incompatible change to fix this. A concrete example when this happens is when Connector/J 5.1.18 and server option  --default-authentication-plugin=sha256_password  is used. Background: The sha256_password plugin wants to send a 20-bytes salt to the client which is split into 8 + 12 bytes according to http://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::HandshakeV10 The 2nd part (12 bytes) + the auth-plugin-name looks like ...KHe8SY[]bP9rsha256_password\0 If default-authentication-plugin would be left at its default value ""mysql_native_password"" the same data would look like: ...KHe8SY[]bP9r\0mysql_native_password\0 (note the extra \0 before mysql_native_password) If a client connects that doesn't understand the CLIENT_PLUGIN_AUTH capability (like C/J 5.1.18) they will read up to the terminating \0 and will use the scramble to authenticate. Other older connectors like libmysql-5.1 always only read 12 bytes and ignore everything after that. Therefore they are not affected by the missing \0 character. One could argue that reading always 12 bytes is the correct way, but that doesn't match what the 5.1 (and earlier) server send: ...KHe8SY[]bP9r\0 If it would be fixed size, there would be no need for the \0. Whatever the original intent was there are two ways to parse this data: 1) read up to the \0 byte 2) read 12 bytes, ignore the rest All connectors that take the route of 1) break in the mysql-server configuration described above. Bug has the PIG-stamp-of-approval. "	ade1c94f734f1471175df9f311c7ba96f99b2377
----------------------------
WL#7205 - Make the MTR rpl suite GTID_MODE agnostic This worklog aims at making the MTR rpl suite GTID_MODE agnostic, so that we can have run it daily on pushbuild with --gtid-mode=ON. 	c34ab84e4f594504781b9b784b2fd6c41abd172a
----------------------------
Bug#17922198 REMOVE OBSOLETE IFDEF HAVE_PURIFY CODE. Patch #13 Remove some obsolete HAVE purify/valgrind code from ha_ndbcluster/opt_range Approved by the cluster team. 	e36be417d517a80c622a9d071658d015d7bf14af
----------------------------
Merge: bf11794 b36dc8b BUG 18117322 - DEFINE INNODB_THREAD_SLEEP_DELAY MAX VALUE The maximum value for innodb_thread_sleep_delay is 4294967295 (32-bit) or 18446744073709551615 (64-bit) microseconds. This is way too big, since the max value of innodb_thread_sleep_delay is limited by innodb_adaptive_max_sleep_delay if that value is set to non-zero value (its default is 150,000). Solution The maximum value of innodb_thread_sleep_delay should be the same as the maximum value of innodb_adaptive_max_sleep_delay, which is 1000000. Approved by Jimmy, rb#4429 	639ec724e3c0452aa4f1b19c6bf8e25e9161c5c4
----------------------------
Merge: 5f265fe 8ac3933 BUG 18117322 - DEFINE INNODB_THREAD_SLEEP_DELAY MAX VALUE The maximum value for innodb_thread_sleep_delay is 4294967295 (32-bit) or 18446744073709551615 (64-bit) microseconds. This is way too big, since the max value of innodb_thread_sleep_delay is limited by innodb_adaptive_max_sleep_delay if that value is set to non-zero value (its default is 150,000). Solution The maximum value of innodb_thread_sleep_delay should be the same as the maximum value of innodb_adaptive_max_sleep_delay, which is 1000000. Approved by Jimmy, rb#4429 	b36dc8bb4a4ded9428ee99d1c8d9563f9b45268b
----------------------------
BUG 18117322 - DEFINE INNODB_THREAD_SLEEP_DELAY MAX VALUE The maximum value for innodb_thread_sleep_delay is 4294967295 (32-bit) or 18446744073709551615 (64-bit) microseconds. This is way too big, since the max value of innodb_thread_sleep_delay is limited by innodb_adaptive_max_sleep_delay if that value is set to non-zero value (its default is 150,000). Solution The maximum value of innodb_thread_sleep_delay should be the same as the maximum value of innodb_adaptive_max_sleep_delay, which is 1000000. Approved by Jimmy, rb#4429 	8ac393341c6da15be98c66ac91849c97c1be42ec
----------------------------
Bug#18021493: PLEASE BACKPORT FIX FOR 15909788 TO 5.6 Description: ------------ Please backport this bugfix to 5.6.  Running out of tmpdir space can cripple a server. Bug 15909788 - TEMPORARY FILES CREATED BY BINARY LOG CACHE ARE NOT PURGED AFTER TRANSACTION COM. 	65378edfc8f244dcecbb5c8bb3d74dbdfc9299b2
----------------------------
Follow up to wl7342 which refactored the tablespace class in InnoDB.  There were some regressions in the embedded runs of pushbuild.  Most were unforseen changes in the testcases.  But there was one issure in the way InnoDB converted a filepath to lower case on Windows.  The solution is to store the filepath with the case provided and compare to other filepaths as case insensitive if lower_case_table_names is not 0. 	a0a475ec686f8301857060b9d1c16294c3dc2eed
----------------------------
Bug#18082702 LIBMYSQLD.A KEEPS ON GROWING AND GROWING AND GROWING AND .... Remove duplicates when merging several libraries into one. Initialize MYSQLD_STATIC_EMBEDDED_PLUGIN_LIBS before CONFIGURE_PLUGINS() 	bc3508024389a42667192301ef906ea8a028d2a4
----------------------------
Bug#17922198 REMOVE OBSOLETE IFDEF HAVE_PURIFY CODE. Patch #10 In ha_ndbcluster.cc: s/HAVE_purify/HAVE_VALGRIND/ In opt_range.cc: Enable ifdef'ed code only for ndbcluster. 	30beff203d20e94a1dab463cc39708ff0f271bf4
----------------------------
Bug#18102839 MYSQL_CONFIG SHOULD NOT REPORT EMBEDDED LIBS IF CONFIGURED WITHOUT_SERVER=1 	30280c6510e3577b43809621cfb737ea5ad19c6d
----------------------------
WL#6120- Change master without stopping slave - Moved code to set 'need_relay_log_purge' variable from change_execute_options() to have_execute_option(). - Removed 'ret' variable from change_master(). - Removed mysql_cond_broadcast(&mi->data_cond); This has no listener. - Modified the signature of set_password(). The second argument was not being used so removed it. The callers always make sure NULL is not being passed as password, so added an assert for the same. - Improved tests comments. - Fixed indentation issues. 	a0b3da054932a6ea35f1278b837c31980abd6b51
----------------------------
Bug#18094360 COLUMN ORDER IN INDEX NOT CHECKED WHEN CREATING FK - The column order checks are correct already but the error message returned differ comapred to the legacy engine. - Change the error message to be same as legacy engine. - Note that ndbcluster allow creating foregin keys referencing unique indexes in parent table with different column order than the child table. This is ok as long as the unique index covers all columns wherea there will only be one or zero rows regardless of column order. - Add test showing that legacy and ndb have the same error code when non matching parent are found 	6ddd13e18a28734525af4282154af013ea93d1d6
----------------------------
Bug#16316074 RFE: MAKE TMPDIR A BUILD-TIME CONFIGURABLE OPTION Bug#68338    RFE: make tmpdir a build-time configurable option Post-push fix: windows needs DEFAULT_TMPDIR as well. 	a7cdd02ccdacb30dcafc8850ceb05fe639ff5315
----------------------------
Bug#14298560: DOCUMENTATION FOR SOURCE CONFIGURATION SHOULD LIST COMPLIATION_COMMENT Change configure.pl so that it uses the correct CMake optin COMPILATION_COMMENT and not the outdated WITH_COMMENT. 	a9a0cee23c8b48ff13960ea586aa7aef04c4e6e8
----------------------------
Bug#16316074 RFE: MAKE TMPDIR A BUILD-TIME CONFIGURABLE OPTION Bug#68338    RFE: make tmpdir a build-time configurable option Post-push fix: 'cmake -LH | grep TMP' showed TMPDIR as a BOOL option, which was a bit confusing: show it as a PATH instead. 	6b1066db900cd74feca14fe6b0e61b98bbececdb
----------------------------
Bug #17415203  MYSQL_SECURE_INSTALLATION CRASHED WHILE CONNECTING WITH USER PASSWORD EXPIRED Problem: mysql_secure_installation crashes when the password for root has expired. It occurs only on windows. Solution: The cause for the bug is that 'shared_memory_base_name' is freed in mysql_close_free_options when the connection fails on calling mysql_real_connect. Hence there will be a segmentation fault when a connection is retried. A patch is made to init the connection options once again before the attempt to reconnect. 	32fc83f1eebfe7f8aac1c1fe79538e69bac234bf
----------------------------
Fixing the failure for binlog.binlog_checksum.test triggered by wl 7411. The test main.ctype_gbk_binlog.test was not properly cleaned up. Adding the cleanup statement: --remove_file $MYSQLD_DATADIR/master-bin.saved as the file $MYSQLD_DATADIR/master-bin.saved is used in other tests as well. 	779df1c1df8aa484ae6cb5d2847300f07720b25d
----------------------------
Bug#17959689: MAKE GCC AND CLANG GIVE CONSISTENT COMPILATION WARNINGS Post-push fix: On some OS X configurations we use different compilers for C and C++ code. The original patch could cause problems for such configurations as it used the C compiler to check if -Wvla was supported and then applied the flag to both the C and C++ compiler. So if clang was used as C compiler (supports the flag) and G++ 4.2 was used as C++ compiler (does not support the flag), the build broke. This patch fixes the problem by doing the check twice, once for the C compiler and once for the C++ compiler. 	f44c8b2ff462d304eff26b096e2b1f115b4c1970
----------------------------
"POTENTIALLY SERIOUS COMPILER WARNING: ""_FILE_OFFSET_BITS"" REDEFINED '_FILE_OFFSET_BITS' is defined in my_config.h to either 32 or 64 depending on wheteher configure determines that 32 or 64 bits file offsets should be used by the filesystem calls. (Like 'offs' argumet to lseek()) If not defined, and compiled as 32 bit binaries, some OS'es assume that 32 bit offsets will be used and thus provides the default '#define _FILE_OFFSET_BITS 32'. If 'my_config.h' is included to late (or my_global.h / ndb_global.h which include 'config'), '_FILE_OFFSET_BITS 32' will first be defined, and then later redefined to '64' by my_config.h. This could result in undefined behaviour by using a mix of normal, and the 'large' filesystem calls. In addition to silence this warning, this fix also seems to fix an issue where several tests in the main suite fails with errno=29. (ESPIPE 29 /* Illegal seek */ ) "	de328a1877f3fcffe53add55e1a9ab31a4c0fdad
----------------------------
"Fix for bug#18053050  POTENTIALLY SERIOUS COMPILER WARNING: ""_FILE_OFFSET_BITS"" REDEFINED '_FILE_OFFSET_BITS' is defined in my_global.h to either 32 or 64 depending on wheteher configure determines that 32 or 64 bits file offsets should be supported by lseek(). If not defined, and compiled as 32 bit binaries, some OS'es assume that 32 bit lseek() will be used, and thus provides the default '#define _FILE_OFFSET_BITS 32'. If 'my_global.h' is included to late, '_FILE_OFFSET_BITS 32' will first be defined, and then later redefined to '64' by my_global.h. This could result in part of the code using 32 bit lseek() while later part use 64 bit lseek(). In addition to silence this warning, this fix also seems to fix an issue where several tests in the main suite fails with errno=29 (ESPIPE 29 /* Illegal seek */ ) "	88f5a8a74d86fecbae930f854bf6596aa0f9a9b0
----------------------------
Merge: 9d0efa6 b689a32 Bug#16287752    INNODB_DATA_FILE_PATH MINIMUM SIZE IN DOCUMENTATION [Merge from 5.6] 	baacab195207f2f18cf236933742b9f2ab25e8c3
----------------------------
Merge: 386d1f8 970a705 Bug#16287752    INNODB_DATA_FILE_PATH MINIMUM SIZE IN DOCUMENTATION [ Merge from 5.5 ] 	b689a32757a9daac3420d305790fd9262aa78112
----------------------------
Bug#16287752    INNODB_DATA_FILE_PATH MINIMUM SIZE IN DOCUMENTATION Problem ------- The documentation says that we support 'K' prefix while specifiying size for innodb datafile in the server variable for innodb_data_file_path ,but the function srv_parse_megabytes() only handles only 'M' (megabytes) and 'G' (gigabytes) . Fix --- Modify srv_parse_megabytes() to handle Kilobytes. Add in documentation that while specifying size in KB it should be mentioned in multiples of 1024 other wise they will be rounded off to nearest MB (megabyte) boundry .(eg if size mentioned as 2313KB will be considered as 2 MB ). [ Approved by Marko #rb 2387 ] 	970a7058ba4fc34f87ad52e1dbe9aafe0677efd3
----------------------------
Merge: f8697f9 386d1f8 Bug#16715064 MYSQL COMMUNITY UTILITIES CANNOT CONNECT TO MYSQL ENTERPRISE WITH SSL ENABLED Problem: It was reported that MySQL community utilities cannot connect to a MySQL Enterprise 5.6.x server with SSL configured. We can reproduce the issue when we try to connect an MySQL Enterprise Server with a MySQL Client with --ssl-ca parameter enabled. We get an ERROR 2026 (HY000): SSL connection error: unknown error number. Solution: The root cause of the problem was determined to be the difference in handling of the certificates by OpenSSL(Enterprise) and yaSSL(Community). OpenSSL expects a blank certificate to be sent when a parameter (ssl-ca, or ssl-cert or ssl-key) has not been specified.On the other hand yaSSL doesn't send any certificate and since OpenSSL does not expect this behaviour it returns an Unknown SSL error. The issue was resolved by yaSSL adding capability to send blank certificate when any of the parameter is missing. 	7becc5d6332031f6db4d5f7d1035b72aff148699
----------------------------
Bug#16715064 MYSQL COMMUNITY UTILITIES CANNOT CONNECT TO MYSQL ENTERPRISE WITH SSL ENABLED Problem: It was reported that MySQL community utilities cannot connect to a MySQL Enterprise 5.6.x server with SSL configured. We can reproduce the issue when we try to connect an MySQL Enterprise Server with a MySQL Client with --ssl-ca parameter enabled. We get an ERROR 2026 (HY000): SSL connection error: unknown error number. Solution: The root cause of the problem was determined to be the difference in handling of the certificates by OpenSSL(Enterprise) and yaSSL(Community). OpenSSL expects a blank certificate to be sent when a parameter (ssl-ca, or ssl-cert or ssl-key) has not been specified.On the other hand yaSSL doesn't send any certificate and since OpenSSL does not expect this behaviour it returns an Unknown SSL error. The issue was resolved by yaSSL adding capability to send blank certificate when any of the parameter is missing. 	386d1f81225ce9ba25a0357f53fee7c75a48e212
----------------------------
"Bug#18046811 COMPILATION ERRORS WHILE BUILDING MYSQL-5.6.16 ON SOLARIS 10 Include my_config.h before any system headers, to avoid Warning (Anachronism): Attempt to redefine _FILE_OFFSET_BITS without using #undef. Include <stdio.h> before <vector> to avoid ""/usr/include/floatingpoint.h"", line 164: Error: FILE is not defined."" ""/usr/include/stdio.h"", line 82: Error: Multiple declaration for std::FILE."" (this must be a bug in the solaris header files) "	d8d3342fb2ca690c9d6c02b1a74acea68cdd32ba
----------------------------
Bug#16715064 MYSQL COMMUNITY UTILITIES CANNOT CONNECT TO MYSQL ENTERPRISE WITH SSL ENABLED Problem: It was reported that MySQL community utilities cannot connect to a MySQL Enterprise 5.6.x server with SSL configured. We can reproduce the issue when we try to connect an MySQL Enterprise Server with a MySQL Client with --ssl-ca parameter enabled. We get an ERROR 2026 (HY000): SSL connection error: unknown error number. Solution: The root cause of the problem was determined to be the difference in handling of the certificates by OpenSSL(Enterprise) and yaSSL(Community). OpenSSL expects a blank certificate to be sent when a parameter (ssl-ca, or ssl-cert or ssl-key) has not been specified.On the other hand yaSSL doesn't send any certificate and since OpenSSL does not expect this behaviour it returns an Unknown SSL error. The issue was resolved by yaSSL adding capability to send blank certificate when any of the parameter is missing. 	f67ccf469d8d89b7c0be2e79c4f39d46bdd9f17b
----------------------------
"Bug#18046811 COMPILATION ERRORS WHILE BUILDING MYSQL-5.6.16 ON SOLARIS 10 Include my_config.h before any system headers, to avoid Warning (Anachronism): Attempt to redefine _FILE_OFFSET_BITS without using #undef. Include <stdio.h> before <vector> to avoid ""/usr/include/floatingpoint.h"", line 164: Error: FILE is not defined."" ""/usr/include/stdio.h"", line 82: Error: Multiple declaration for std::FILE."" (this must be a bug in the solaris header files) "	2d1f41fad3c87764450aee37d5dc4383a581370f
----------------------------
Merge: 7c00c7e f67ccf4 Bug#16715064 MYSQL COMMUNITY UTILITIES CANNOT CONNECT TO MYSQL ENTERPRISE WITH SSL ENABLED Problem: It was reported that MySQL community utilities cannot connect to a MySQL Enterprise 5.6.x server with SSL configured. We can reproduce the issue when we try to connect an MySQL Enterprise Server with a MySQL Client with --ssl-ca parameter enabled. We get an ERROR 2026 (HY000): SSL connection error: unknown error number. Solution: The root cause of the problem was determined to be the difference in handling of the certificates by OpenSSL(Enterprise) and yaSSL(Community). OpenSSL expects a blank certificate to be sent when a parameter (ssl-ca, or ssl-cert or ssl-key) has not been specified.On the other hand yaSSL doesn't send any certificate and since OpenSSL does not expect this behaviour it returns an Unknown SSL error. The issue was resolved by yaSSL adding capability to send blank certificate when any of the parameter is missing. 	0d63353b56e7e3284e84c54a5b43f4367da96506
----------------------------
Merge: bdf3f52 0d63353 Bug#16715064 MYSQL COMMUNITY UTILITIES CANNOT CONNECT TO MYSQL ENTERPRISE WITH SSL ENABLED Problem: It was reported that MySQL community utilities cannot connect to a MySQL Enterprise 5.6.x server with SSL configured. We can reproduce the issue when we try to connect an MySQL Enterprise Server with a MySQL Client with --ssl-ca parameter enabled. We get an ERROR 2026 (HY000): SSL connection error: unknown error number. Solution: The root cause of the problem was determined to be the difference in handling of the certificates by OpenSSL(Enterprise) and yaSSL(Community). OpenSSL expects a blank certificate to be sent when a parameter (ssl-ca, or ssl-cert or ssl-key) has not been specified.On the other hand yaSSL doesn't send any certificate and since OpenSSL does not expect this behaviour it returns an Unknown SSL error. The issue was resolved by yaSSL adding capability to send blank certificate when any of the parameter is missing. 	d0e6480d5487af5297793a162d4b55481be47270
----------------------------
Bug#17959689: MAKE GCC AND CLANG GIVE CONSISTENT COMPILATION WARNINGS This patch sets the same compiler warning flags when using Clang as for GCC regardless of debug or release build. With the exception of -Werror which is still only set for GCC when using MYSQL_MAINTAINER_MODE (default ON when building debug versions). This makes it easier to avoid introducing GCC build breaks when using Clang as compiler (e.g. on OS X). The patch also moves setting of some warning flags from configure.cmake to cmake/maintainer.cmake where the rest of the flags are set. Also note that after this patch, the list of warning flags listed during configuration is the list of flags actually used for compiling the server (excluding memcached and cluster). In addition, the following warning flag changes are done: * -Wformat-security is added for both GCC/Clang. This is desidered by Fedora (https://fedoraproject.org/wiki/Format-Security-FAQ). Compiling trunk gives no new warnings with this flag added. * -Wwrite-strings is only set for C code. It has different meaning for C++ where it is default on anyway. * CMake check for -Wdeclaration-after-statement is removed as this flag is supported by all current versions of GCC/Clang. * -Wunused is removed as it included with -Wall and -Wextra. * -Wno-strict-aliasing is removed as it has no effect when compiling with -fno-strict-aliasing. If -fno-strict-aliasing at some point in the future is removed, we will very likely want to get strict alias warnings reported. * -Wno-compare-distinct-pointer-types is now set when compiling GUnit to silence warnings for code we don't control. * COMPILE_FLAG_WERROR is removed as it is unused. 	cd61aed74ee7d972d62d54282c92e8a5ba0ad86e
----------------------------
Fix for bug#16620938  SOL 10/11 X64 32BIT FAILING TO BUILD NDBMTD '#if defines' in mt-asm.h didn't check for 32bit x86 platforms '__i386' Inluded this as suggested in bug report by Laasya Moduludu. Also change configure and makefiles such that we always try to compile 'WITH_NDBMTD' - As 'ndbmtd' is a mandatory part of our deliveries, and failure to build this should *not* be ignored. 	4ff5e2d5ca7fc8a0d392b278552741f377e949ba
----------------------------
Bug #17503460 MYSQL READ ONLY DOESN'T WORK FOR DROP TRIGGER Problem: Drop Trigger succeeds even after setting read_only variable to ON. Fix: Fix is to report the standard error (ER_OPTION_PREVENTS_STATEMENT)when global read_only variable is set to ON. 	08e6dee9144842486ea5934505233a81159a5b83
----------------------------
Bug#18004599 LINKTEST FAILURES ON SOLARIS SPARC AND LINUX 64 BIT PLATFORMS scripts/mysql_config depends on client and server targets, so ADD_SUBDIRECTORY(scripts) after all source code directories. 	0b7cf9f789915b226c2594de574e8534485a6ada
----------------------------
"Bug#17510411: AN INDEPENDENT INSTANCE WITH SEMISYNC ENABLED STILL NEED ACK FROM SLAVE Problem: ======== When Semi synchronous replication is configured on an independent server without any slave and ""rpl_semi_sync_master_wait_no_slave"" is set to ""off"" the master still waits for an ack from the slave. Analysis: ======== As per the documentation if the value of the variable ""rpl_semi_sync_master_wait_no_slave"" is set to OFF, the master reverts to normal replication if the slave count drops to zero during the time out period. But in the existing code the above changes are not implemented. Fix: === When ""rpl_semi_sync_master_wait_no_slave"" is set to off check if semi sync is switched on or not if on then check if any slaves are connected or not. If not connected switch_off the semi sync and turn it on when user sets the variable to on. "	da0e47d1d1e66dc12736f63845ab6c48819f7436
----------------------------
Fix for Bug#17857442: MULTITHREADED JOB SCHEDULER SHOULD HANDLE LEAPS IN CLOCK TIME We have seen customer bug reports, like bug 17475425, where it looks like delayed signal processing from the 'time_queue' comes completely out of control: There seems to be two scenarios: - Processing of delayes signals stops completely for a long periode, or forever. This will cause issues like the disk write speed throttling to completely halt any disk activity (Local checkpoints stop) - We see a burst of signals which should have been delayed relatively to each other, executed withing the same clock second. Inspecting the mt-scheduler code, we find that this may happen if the NdbTick clock moves forward or backwards in large leaps. When the time moved backwards, it will stop the time_queue handling until the same amount of clock time has passed again. A forward leap will force the scheduler to simulate that the same amount of time passing by expiring all time_queue event in the elapsed periode. Such timer leaps might happen if the platform does not support monotonic timers, or we didn't implement the usage of these on the specific platform. Windows used to be such a platform prior to fixing bug 17647637. However, there are still such platforms, OSX seems to be one of these, and possible some Linux variants. Furthermore there seems to be several OS/HW/VM bugs related to monotonic timers not always being monotonic after all. And there might be time leaps due to CPU starvation such that we are stuck for a long time - So this has to be expected and handled somehow. Looking at the single threaded scheduler we find that it actually handle such leaps - see ThreadConfig::scanTimeQueue(). This logic doesn't seem to have been ported to the mt-version !! The single threaded handling is to accept a backtick as the new current time. A forward leap of more than 1500ms will be consumed by resetting the current time to 'now-1000'ms and continue from there. This fix introduce the same handling in the MT-scheduler. Furthermore, we also found that the mt-scheduler allowed itself to yield CPU, or wait for receiving signals, even if it has possibly expired event to handle from the time_queue. (see: 'lagging_timers') We are not sure about whether this has any ill effects - However, it doesn't seem like a good idea to let possible expired signals linger any longer than necessary - also fixed. Also removed a ndbout_c() which was a leftover from previous debugging. 	a05b20e58c79d123d804485127550ac3b83b5d08
----------------------------
"Bug#17287443	ERROR(1030): GOT ERROR -1 FROM STORAGE ENGINE PROBLEM ------- When we try to do DML operations in innodb force recovery mode.we get a cryptic error message. ERROR(1030): GOT ERROR -1 FROM STORAGE ENGINE FIX --- Introduced a new error ER_INNODB_FORCE_RECOVERY which will print proper error message. [Approved by Kevin and Krunal #rb4095 and rb#4137] "	bc2dc7163ba9df215056c491451fbacd1a4a8423
----------------------------
Clusterj create mvn pom.xml files Change configure and cmake files to create mvn pom.xml files with proper version numbers and optional suffix, e.g. -SNAPSHOT 	7b00f2fe5b26384dccbe78c95e2578420dd54d56
----------------------------
"ndb - remove some test from default.daily ndb.ndb_share, ndb_rpl.ndb_rpl_slave_lsu, and ndb_rpl.ndb_rpl_slave_lsu_anyval starts some mysqld without log-bin enabled and fails with [ERROR] You need to use --log-bin to make --binlog-format work. for runs in default.daily that sets binlog-format. The error is changed to warning for 5.5/7.2 and up as fix of Bug #11751903	 42928: BINLOG-FORMAT SETTING PREVENTS SERVER FROM START IF BINARY LOGGING IS DIS "	0c269434a275a2fab8cc2d168cd9b07c6507fecf
----------------------------
ndb - re-record test result for main.ctype_cp932_binlog_row Test is not run without adding --mysqld=--binlog-format=row to mtr command line. log event Write_rows changed to Write_rows_v1 by revision-id: frazer.clement@oracle.com-20110921101158-0js4hali1q25aa1e timestamp: Wed 2011-09-21 11:11:58 +0100 message: WL5353 : Implement v2 of Binlog row events 	acf576e655ac4ccfddb5567efae63c1ea4a2e326
----------------------------
Bug#16316074 RFE: MAKE TMPDIR A BUILD-TIME CONFIGURABLE OPTION Bug#68338    RFE: make tmpdir a build-time configurable option Background: Some distributions use tmpfs for mounting /tmp by default, which has some advantages, but brings also new issues. Fedora started using tmpfs on /tmp in version 18 for example. If not configured otherwise in my.cnf, MySQL uses system's constant P_tmpdir expanded to /tmp on Linux. This can introduce some problems with limited space in /tmp and also some data loss in case of replication slave [1]. In case distributions would like to use /var/tmp, which should be better for MySQL purposes, then we have to patch the source or change tmpdir option in my.cnf, which is however not updated in case it has already existed. Thus, it would be useful to be able to specify default tmpdir path using a configure option, while using P_tmpdir in case it is not defined explicitly. Based on a contribution from Honza Horak 	08d5b6a53e457835c37054d5056f77b7a80afc2e
----------------------------
"The fix for Bug#16249481 was not enabled for builds. ""#cmakedefine INNODB_PAGE_ATOMIC_REF_COUNT"" is added to config.h.cmake Patch made by Sunny Bains (by mail) Approved by Yasufumi Kinoshita * revno: 5677 * committer: Sunny Bains <Sunny.Bains@Oracle.Com> * branch nick: 5.6 * timestamp: Tue 2013-12-10 14:30:34 +0530 * message: *  Bug#16249481 - INNODB DOES NOT SCALE WELL ON 12 CORE SYSTEM FOR SPECIFIC ALL IN MEMORY SELECT * *  Add a new build option: INNODB_PAGE_ATOMIC_REF_COUNT, default is ON. * *  If this option is enabled then use atomic reference counting to track *  block use. If it is off then use the old way. * *  Approved by Yasufumi Kinoshita rb#3958. "	d01a7fe365c3b5bea60b24f3b6676efec093fa26
----------------------------
ndb - adopt server bugfix to maintained version of ha_ndbcluster.cc revision-id: jon.hauglid@oracle.com-20131030232243-vyz4pd5yihqlmnjx parent: sivert.sorumgaard@oracle.com-20131030120943-g0i7td24pbfv1wjj committer: Jon Olav Hauglid <jon.hauglid@oracle.com> branch nick: mysql-5.6-bug17696705 timestamp: Thu 2013-10-31 00:22:43 +0100 message: Bug#17647863: MYSQL DOES NOT COMPILE ON OSX 10.9 GM Rename test() macro to MY_TEST() to avoid conflict with libc++. 	3b0b729c4f2311bd3b49dbdf1ee36bbe264ef085
----------------------------
Bug #17513341 : >=4G JOIN_BUFFER_SIZE CRASH WHEN JOINING TABLES, VIEWS. Post-push fix : Fixed valgrind reported leak issue. Reason wrong merge from 5.6 to trunk has misplaced DBUG_EXECUTE_IF after my_malloc in JOIN_CACHE::alloc_buffer. Fixed the same. 	c551dda3e7a68ac51c472127341149840424f945
----------------------------
Merge: 86a59dc e14dd76 Bug #17513341 : >=4G JOIN_BUFFER_SIZE CRASH WHEN JOINING TABLES, VIEWS. Merge from 5.6 to trunk 	2621831bf7a16a8725785154ae8e9066ac3041e0
----------------------------
Bug #17513341 : >=4G JOIN_BUFFER_SIZE CRASH WHEN JOINING TABLES, VIEWS ISSUE         : 1. Offset address from a join buffer of size >=4gb can be >4 bytes long. But we have only considered offsets upto 4bytes long. This will lead to invalid buffer read and memory corruption henceforth. 2. If we fail to allocate join buffer then we are not freeing the JOIN_CACHE_X instance. Now next join buffer will wrongly take this unfreed JOIN_CACHE_X instance as its previous cache. Hence in incremental join buffer implementation there will be a chance for unallocated memory access. Solution      : 1. Now for join buffer >=4gb we have made offest address size = 8 bytes. 2. If we fail to allocate the join buffer we free the JOIN_CACHE_X instance also. 	e14dd7657d97b32401e0613b372baba8e8d44d87
----------------------------
"Addendum to fix for Bug#17875885 ""ONE MYSQL ACCESS SERVER IS HUNG"". THD::~THD() will in some cases call Thd_ndb::~Thd_ndb() which used 'curret_thd', leading to the crash below (triggered by the ndb_dist_priv MTR test). This commit fixes that, by using Thd_ndb::m_thd instead of 'current_thd'. Stack from core dump: #0  0x00007fd46ddb7f8c in pthread_kill () from /lib/x86_64-linux-gnu/libpthread.so.0 #1  0x0000000000950360 in my_write_core (sig=11) at /export/home/tmp/jw159207/mysql/repo/mysql-5.5-cluster-7.2/mysys/stacktrace.c:433 #2  0x00000000007dd31c in handle_fatal_signal (sig=11) at /export/home/tmp/jw159207/mysql/repo/mysql-5.5-cluster-7.2/sql/signal_handler.cc:247 #3  <signal handler called> #4  Thd_ndb::~Thd_ndb (this=0x29f2b30, __in_chrg=<optimized out>) at /export/home/tmp/jw159207/mysql/repo/mysql-5.5-cluster-7.2/sql/ha_ndbcluster.cc:1231 #5  0x0000000000a1d423 in Thd_ndb::release (thd_ndb=0x29f2b30) at /export/home/tmp/jw159207/mysql/repo/mysql-5.5-cluster-7.2/sql/ndb_thd_ndb.cc:58 #6  0x00000000009db5e0 in ndbcluster_close_connection (hton=0x245bac0, thd=0x2a9c610) at /export/home/tmp/jw159207/mysql/repo/mysql-5.5-cluster-7.2/sql/ha_ndbcluster.cc:11138 #7  0x00000000007decac in closecon_handlerton (thd=0x2a9c610, plugin=0x7fffed70a898, unused=0x0) at /export/home/tmp/jw159207/mysql/repo/mysql-5.5-cluster-7.2/sql/handler.cc:725 #8  0x000000000068875a in plugin_foreach_with_mask (thd=0x2a9c610, func=0x7dec32 <closecon_handlerton(THD*, plugin_ref, void*)>, type=1, state_mask=4294967287, arg=0x0) at /export/home/tmp/jw159207/mysql/repo/mysql-5.5-cluster-7.2/sql/sql_plugin.cc:2024 #9  0x00000000007decf8 in ha_close_connection (thd=0x2a9c610) at /export/home/tmp/jw159207/mysql/repo/mysql-5.5-cluster-7.2/sql/handler.cc:739 #10 0x00000000006439b9 in THD::~THD (this=0x2a9c610, __in_chrg=<optimized out>) at /export/home/tmp/jw159207/mysql/repo/mysql-5.5-cluster-7.2/sql/sql_class.cc:1396 #11 0x0000000000643c62 in THD::~THD (this=0x2a9c610, __in_chrg=<optimized out>) at /export/home/tmp/jw159207/mysql/repo/mysql-5.5-cluster-7.2/sql/sql_class.cc:1427 #12 0x00000000009ddb3c in ndb_wait_setup_func_impl (max_wait=119) at /export/home/tmp/jw159207/mysql/repo/mysql-5.5-cluster-7.2/sql/ha_ndbcluster.cc:11822 #13 0x00000000005dd3d9 in mysqld_main (argc=53, argv=0x248d908) at /export/home/tmp/jw159207/mysql/repo/mysql-5.5-cluster-7.2/sql/mysqld.cc:4701 #14 0x00000000005d6674 in main (argc=9, argv=0x7fffed70ab08) at /export/home/tmp/jw159207/mysql/repo/mysql-5.5-cluster-7.2/sql/main.cc:25 "	c7746c2efbd91fadc65bf9a39bcdea4fb779421f
----------------------------
Bug#17400967 MYSQL_CONFIG FAILS TO FILTER OUT SOME WARNING FLAG For clang and gcc we set some warning flags when compiling the server. Remove them when generating the script mysqld_config. 	8be6bfd8c31ccca30ac07c43184537be7ab6a516
----------------------------
WL#7377: Unbreak the test on Windows. Thanks to Mattias Jonsson for helping me with this. Windows needs --no-console in order to obey --log-error. There is some variation in the shutdown message too. (One test is checking that InnoDB is not displaying anything between startup and shutdown.) 	d48347b836ca9b767590f85c39a6313fb6c4dec8
----------------------------
WL#7377 Deprecate the innodb_*monitor tables. InnoDB has a few hardcoded special table names: CREATE TABLE on one of these names will set flags inside InnoDB to enable additional debug output to the error log. DROP TABLE will clear the flags and stop the output. We are deprecating this awkward mechanism. Replacements are available as follows: innodb_monitor: Replace with SET GLOBAL innodb_status_output=ON|OFF; innodb_lock_monitor: Replace with SET GLOBAL innodb_status_output=ON|OFF; SET GLOBAL innodb_status_output_locks=ON|OFF; (CREATE/DROP TABLE innodb_lock_monitor is affecting both flags.) innodb_tablespace_monitor: innodb_table_monitor: There is no direct replacement for these. Use INFORMATION_SCHEMA.INNODB_SYS_* tables. innodb_mem_validate: Remove. This depends on UNIV_MEM_DEBUG, which is not normally enabled even in debug builds. 	434b50e0f051787eedf1fcdf91f821611b5d80e6
----------------------------
BUG#16321920 : CREATE A SEPARATE INNODB_ZIP TEST SUITE Fix : ------- Created separate suites called innodb_zip ans i_innodb_zip that contain all compression tests. Running the new suites with following compression-related parameters : * innodb_compression_level = {1/9} * innodb_log_compressed_pages = {ON/OFF} 	e095fe022af113d94de199fd7d8649b19d955210
----------------------------
BUG#16321920 : CREATE A SEPARATE INNODB_ZIP TEST SUITE Fix : ------- Created separate suites called innodb_zip ans i_innodb_zip that contain all compression tests. Running the new suites with following compression-related parameters : * innodb_compression_level = {1/9} * innodb_log_compressed_pages = {ON/OFF} 	9c470ccb85edbf9de4d0f7a2ffdcaebd1b6d67fc
----------------------------
Merge: cd968cb d3e3a45 Bug #16344230 - DROP --INNODB_FAST_SHUTDOWN=2 FOR FIRST MTR (BOOTSTRAP) STARTUP 	5b13fb4e51a2287c3ea6c9f3cd922559678da8c6
----------------------------
Bug #17168602 MYSQL_PLUGIN REMOVES NON-DIRECTORY TYPE FILES SPECIFIED WITH THE BASEDIR OPTION Description: The mysql_plugin client attempts to remove any filename specified to the --basedir option. The problem is that if the filename does not end with a slash, it will attempt to unlink it, which succeeds for files, but not for directories. Analysis: When we are starting mysql_plugin with basedir option and if we are giving path of a file as basedir, it deletes that file. It was because it uses a function my_delete which unlinks the file path given. Fix:  As a fix we replace that line using another function my_free, which will only free the  pointer which is having that file path. 	c96b67a2a99ac583c1c7e8633fd3373cfce021fe
----------------------------
bug#17703157  HAVE_BINLOG_ROWS_QUERY.INC : IMPLEMENTATION LOGIC DOES NOT MATCH PURPOSE The 'have_binlog_rows_query.inc' and 'have_binlog_rows_query.require' are introduced to ensure that the server is running with binlog_rows_query_log_events on for rpl_row_ignorable_event.test. However, the current implementation is as following: 1) Fetch variable binlog_rows_query_log_events 2) Replace ON by OFF in the result 3) Check if result value is OFF The purpose and implementation are not aligned. Actually the 'have_binlog_rows_query.inc' and 'have_binlog_rows_query.require' are not necessary as we already enabled binlog-rows-query-log-events option in rpl_row_ignorable_event-master.opt. So we remove the redundent two files. 	5f59b8f5db722b68545ee474ff96186655544773
----------------------------
Bug#17826757 CMAKE SUPPORT FOR GCC ON SOLARIS For gcc on solaris, we must add suport for - finding libstdc++ and libgcc_s - installing the same libraries - propagating library paths to the mysql_config script We should also change the package name. Also: bump cmake minimum required version. Also: use 64bit build by default (for gcc and sun studio) 	ed81139f47b100ef658d10c18095f16f2c44e422
----------------------------
"Bug#17774971 MOVE ""THD_MARK_TRANSACTION_FOR_ROLLBACK"" DEFINITION FROM HA_INNODB.H TO PLUGIN.H A post push fix for bug#16041903 modified ha_ndbcluster.cc to call THD::mark_transaction_to_rollback instead. The Cluster team requested that the function should be defined as part of the API in include/mysql/plugin.h. There is a corresponding function in sql/sql_class.cc. The function is used by InnoDB, and is defined in ha_innodb.h. Thus, the suggested refactoring is to: 1. Move the definition of thd_mark_transaction_to_rollback from ha_innodb.h to plugin.h 2. Change the type of the paramter ""all"" from bool to int, because it is now defined in plugin.h which is compiled as both C and C++, and the type ""my_bool"" is not available in plugin.h 3. Change ha_ndbcluster.cc to call the above function. 4. Change ha_innodb.cc to submit int rather than ibool for the ""all"" parameter 5. Change the implemntation in sql_class.cc to test for (all != 0) explicitly when calling the THD member function "	c0e780eb63d403a00cbe4714b024d2bb867b0b79
----------------------------
Merge: b6fc90d 9177962 Bug #17708621 : EXCEEDING SORT_BUFFER_SIZE (FILE SORT) WITH SORT ABORTED LEAKS FILE DESCRIPTORS Merge from 5.6 to trunk 	46c9a970467e05a3992990b48b65374dac59fb4e
----------------------------
Merge: fa31d1f d694bc7 Bug #17708621 : EXCEEDING SORT_BUFFER_SIZE (FILE SORT) WITH SORT ABORTED LEAKS FILE DESCRIPTORS Merge from 5.5 to 5.6 	9177962298af3ed663eab040e8601f7a0aa1f742
----------------------------
Bug #17708621 : EXCEEDING SORT_BUFFER_SIZE (FILE SORT) WITH SORT ABORTED LEAKS FILE DESCRIPTORS ISSUE : IO_CACHE used for index_merge quick select is freed only on successful retrieval of all rows from index merge. Suppose if there is a interrupt( or failure) to this operation of row retrieval (let it be a KILL_QUERY signal) then we are not freeing the IO_CACHE resources allocated by index_merge quick select. And hence temp file associated with it is also not closed. This lead to a file descriptor leak. SOLUTION : As part of file sort operation now we always free the IO_CACHE allocated by index_merge quick select. 	d694bc7d27e92340822f3ef663709e5075af28b7
----------------------------
Part1 of fix for bug#17647637: Refactor of NdbTick as prep for real fix My rational for this refactoring is that I want a safer interface for calculating elapsed time and doing timeout calculation. The general pattern in this patch is that the common code sequence: Ex1. NDB_TICKS start = NdbTick_CurrentMillisecond(); ... Do some work ... NDB_TICKS end = NdbTicks_CurrentMillisecond(); Uint64 elapsed = (end - start); Has been refactored into: Ex2: NDB_TICKS start = NdbTick_getCurrentTicks(); ... Do some work ... NDB_TICKS end = NdbTicks_getCurrentTicks(); Uint64 elapsed = NdbTick_ElapsedMilliseconds(start,end); As part of this, NDB_TICKS has been redefined into an opague type with the max 'tick resolution' the underlying hardware can provide. No assumption about the resolution of a single tick is exposed through the interface. Thus, it is not any longer an int, and all interval calculations has to go through the new NdbTick_Elapsed() function. (There are also Micro, Nano and Second variants which all can be calculated from the same NDB_TICKS). Asserts has also been included into these functions such that uninitialized 'ticks' are being asserted, and negative intervals resulting from mixing start-end arguments(Bug#17739131) or non-monotonic timers. (Bug#17647637) The problems I try to rectify in this patch are: 1) NdbTick.h defined 'typedef Uint64 NDB_TICKS' which was the type returned from NdbTick_CurrentMillisecond(), NdbTick_CurrentMicrosecond, NdbTick_CurrentSecond and NdbTick_CurrentNanosecond. This provided no type safety, and was quite often mixed with using plain Uint64 such that it didn't really offer anything of value. Furthermore it did not protect against misuse as: start = NdbTick_CurrentMillisecond() ... do some end = NdbTick_CurrentMicrosecond; << Mix ms / us elapsed = (end - start); or: elapsed = (start - end)  << bug#17739131 2) Catch 'elapsed time' calculation based on uninitialized timers - Several bugs had been filed and fixes as a result of this 3) Avoid precision loss due to timer rollover: Depending on the underlying platform, the timers might have resolution in the microsecond range. By converting into milliseconds as we usually did, we get less accuracy as this extra precision is truncated, considder: t1 = 1000 us -> truncates to 1ms t2 = 1999 us -> truncates to 1ms t3 = 2001 us -> truncates to 2ms t4 = 2999 us -> truncates to 2ms So calculating intervals between these time ticks using the old NdbTick_CurrentMillisecond(), we will get: (t2-t1) = 0ms ... Sort of correct as it is < 1ms (t3-t2) = 1ms ... Not what you would expect !!! 4) Get rid of 'struct MicroSecondTimer', NdbTick_getMicroTimer(), NdbTick_getMicrosPassed() and NdbTick_getMillisecond(). This was just another timer mechanism which partly overlapped the functionality provided by NDB_TICKS. In places where both a Milli- and Microseconds timer was required, it even caused that the system clock had to be read twice (ThreadConfig.cpp) or we had to convert between timers represented either as a 'MicroSecondTimer' or a NDB_TICKS. 	6f43ad9aadc2a7a7335e4ddc90dafbf6d398b7cd
----------------------------
Fix for bug#17739131 JOB SCHEDULER IN SINGLE THREADED NDBD DOES NOT 'YIELD' CPU AS INTENDED When the internal single threaded job scheduler is configured to use 'RealTimeScheduler=1', it is intended to temporary lower its scheduling priority to 'normal' every 10ms. This will allow other, non realtime threads, to get a chance to run, and thus avoid CPU starvation of these. However, the arguments to the function which calculated elapsed time singe last yield where swapped. Thus, '0' was always returned as elapsed time from this function, and the CPU never yielded as intended. 	594fc5a93e96ed9d7d0c02ae77c1e8693e866f64
----------------------------
Bug#17675622 INNODB MEMCACHED LEAKS MEMORY IF INNODB_API_ENABLE_BINLOG = 1 The binlog name of current transaction is stored into thread buffer when the events are flushed into binlog. It is used by semisync later. Thread buffer is freed automatically after each server command(e.g COM_QUEYR). But Innodb memcached doesn't use server command, hence the thread buffer is not freed until the THD object is freed. So the thread buffer takes more and more memory after every binlog flush. To fix it, strcpy is used to replace strdup_root. For memcached, buffer for m_trans_fixed_log_file is allocated only once when it is used first time and following binlog operations just copy binlog name into m_trans_fixed_log_file. char[] cannot allocate from thread buffer by using new operator. So it is replaced by alloc_root. 	e03965a2210062901ae33fce80132b89df969c10
----------------------------
"Bug#11756699 : MYSQL-TEST MAIN.LOG_TABLES-BIG FAILS ON 5.1.40 Fix : Added ""set @@global.log_output = 'TABLE';"" line so that the details of SQL statements that take more than long_query_time seconds to execute are stored in mysql.slow_log table. "	6758370248cfadba31e79c5a4f329add0142ebce
----------------------------
Bug#17796161 UNUSED DEFINE NDB_MGMAPI IN CONFIGINFO - Remove unused NDB_MGMAPI define since ConfigInfo is no longer compiled as part of mgmapi 	ff758f7e5eb7d39b7c2163b510b93ca3a99db65c
----------------------------
"- Bug #17779822 INNODB COMPRESSED TEMPORARY TABLE SHOWS 'TABLE FULL' ERROR WHEN UNDO LOG IS FULL DML action on table (temporary + non-temporary) results in generation of UNDO log. This UNDO log resides in either system/temporary/dedicated undo tablespace. UNDO Log page allocation can fail if filesystem reaches its limit or tablespace file[s] is configured to restrict to certain size (w/o autoextension). In configuration where-in table file is different from undo log file error like ""Table is full"" can be mis-leading. Fix help in generating proper error message if undo log page allocation fails so that user knows what to look for. Approved by: Sunny (rb#3882) "	f192b6e35e641e84872c5c0e6adc4d1558de8058
----------------------------
"Bug#17740390 COMPILE MYSQL WITH GCC ON SPARC This patch fixes build and execution problems detected when building with gcc 4.8.1 in 32bit mode on sparc. Build Problems fixed: - missing dependency on -lsocket for mysys_ssl - link api_test.c as a C++ application (missing C++ symbols) - Always include ""my_config.h"" before any C/C++ headers (to get correct definition of  _FILE_OFFSET_BITS) - SEQ_UNINIT is manipulated as an int8, so must be an LL constant compile warning: right shift count >= width of type - extern declarations of C functions (getpagesizes et.al) must use 'extern ""C""' Execution Prolems fixed (BUS errors): - Alignment problems in Prealloced_array and Item_func_group_concat::Item_func_group_concat() - va_list problem (int vs ha_rows) in mysql_audit_general_log() "	1f5f8b0879fb41d5df3d28cac6921a2a4a1ec1e1
----------------------------
Bug#13924750 -  PARTITION_LOCKING_4.TEST LOOSES THE CONNECTION Description: The test fails with the error message 'MySQL server has gone away'. Analysis: The test sets value of innodb_lock_wait_timeout and lock_wait_timeout variable as 1. The test also sets wait_timeout variable value as 1. So, client is disconnected before it can get the error message ER_LOCK_WAIT_TIMEOUT from the server. Test executes successfully if the the value of wait_timeout is increased. FIX : Test will not set the value of wait_timeout variable. Updated result file according to the test. 	8a1747997ae0c118b4f64b5e5148fe6035dac898
----------------------------
Bug#13924750 -  PARTITION_LOCKING_4.TEST LOOSES THE CONNECTION Description: The test fails with the error message 'MySQL server has gone away'. Analysis: The test sets value of innodb_lock_wait_timeout and lock_wait_timeout variable as 1. The test also sets wait_timeout variable value as 1. So, client is disconnected before it can get the error message ER_LOCK_WAIT_TIMEOUT from the server. Test executes successfully if the the value of wait_timeout is increased. FIX : Test will not set the value of wait_timeout variable. Updated result file according to the test. 	1da0b88d810aba1152feb37e29ceae9b4e5ee3ab
----------------------------
Bug #16344230 - DROP --INNODB_FAST_SHUTDOWN=2 FOR FIRST MTR (BOOTSTRAP) STARTUP 	d3e3a450e3c719b7b9757b80bf2adce65e8a7d7d
----------------------------
Bug#17617945 BUFFER OVERFLOW IN GET_MERGE_MANY_BUFFS_COST WITH SMALL SORT_BUFFER_SIZE Post-push fix of unittest (broken for -DMERGE_UNITTESTS=0) 	65420581b28a05d5bbdd09ff6c309083828e62c5
----------------------------
crund -- misc configs, properties, scripts updates 	b703aa64ca7e8252a6764875022534aa057cd6e0
----------------------------
Bug#17617945 BUFFER OVERFLOW IN GET_MERGE_MANY_BUFFS_COST WITH SMALL SORT_BUFFER_SIZE get_cost_calc_buff_size() could return wrong value for the size of imerge_cost_buff. 	7a244e2777a24a5a219cb3cddcee8429d1b28c6a
----------------------------
Bug#17720496: Test failure in innodb.innodb_mysql with query cache This is a regression after WL#6987. The problem can be reproduced with the following test: ./mysql-test-run --mem main.view \ --mysqld=--query_cache_type=1 --mysqld=--query_cache_size=1M The problem was a missing rewrite of a query cache update for LOAD statements, so that the query cache assumed a view was updated and not the underlying base table. The fix is to use the same query cache invalidate function as INSERT does. 	f8170a4d52031be58eeac6656382de7abca469ad
----------------------------
Bug#16041903 CONTINUE HANDLER NOT INVOKED IN A STORED FUNCTION AFTER A LOCK WAIT TIMEOUT Broke ndbcluster build in mysql-trunk. Post push fix. 	4190e4fcb1255580aa6e37f944120952237df9b3
----------------------------
"Bug#16041903 CONTINUE HANDLER NOT INVOKED IN A STORED FUNCTION AFTER A LOCK WAIT TIMEOUT Overview -------- When the SQL layer is executing a sub statement (stored function or trigger), some errors cannot be safely recovered until we leave sub statement mode. This is the case for e.g. ER_LOCK_WAIT_TIMEOUT. When this error is caught, the handler does a callback to ""mark_transaction_for_rollback()"" in the SQL layer, which makes the transaction be rolled back implicitly. In ""mark_transaction_for_rollback()"", the flag ""THD::is_fatal_sub_stmt_error"" is set. This flag is used to effectievly disable the execution of a condition handler in a stored function while handling the error. The flag is reset when leaving sub statement mode, in ""restore_sub_statement_state()"", if leaving the last level of sub statements (i.e., nested sub statements are handled by keeping the value of the flag when going to the previous ""stack frame""). The problem here is that the flag is set in ""mark_transaction_for_rollback()"" even if the SQL layer is not in sub statement mode. If this happens, and the transaction afterwards calls a stored function with a condition handler, the handler will be disabled since the flag is already set when calling the function. Suggested fix ------------- The suggested fix is to set ""is_fatal_sub_stmt_error"" in ""mark_transaction_for_rollback()"" only in the case where the SQL layer is currently executing a sub statement (""in_sub_stmt==true""). If not in a sub statement, setting the ""is_fatal_sub_stmt_error"" flag really has no meaning. Additionally, when the flag is set when the SQL layer is not actually in a sub statement, the flag is never cleared since this happens only in ""THD::restore_sub_statement_state()"" when leaving sub statement mode. "	9eaf4437659df7da8ea9368a19378c5a1f831705
----------------------------
WL#6791 : Redefine client --ssl option to imply enforced encryption # Changed the meaning of the --ssl=1 option of all client binaries to mean force ssl, not try ssl and fail over to eunecrypted # Added a new MYSQL_OPT_SSL_ENFORCE mysql_options() option to specify that an ssl connection is required. # Added a new macro SSL_SET_OPTIONS() to the client SSL handling headers that sets all the relevant SSL options at once. # Revamped all of the current native clients to use the new macro # Removed some Windows line endings. # Added proper handling of the new option into the ssl helper headers. # If SSL is mandatory assume that the media is secure enough for the sha256 plugin to do unencrypted password exchange even before establishing a connection. # Set the default ssl cipher to DHE-RSA-AES256-SHA if none is specified. # updated test cases that require a non-default cipher to spawn a mysql command line tool binary since mysqltest has no support for specifying ciphers. # updated the replication slave connection code to always enforce SSL if any of the SSL config options is present. # test cases added and updated. # added a mysql_get_option() API to return mysql_options() values. Used the new API inside the sha256 plugin. # Fixed compilation warnings because of unused variables. # Fixed test failures (mysql_ssl and bug13115401) # Fixed whitespace issues. # Fully implemented the mysql_get_option() function. # Added a test case for mysql_get_option() # fixed some trailing whitespace issues # fixed some uint/int warnings in mysql_client_test.c # removed shared memory option from non-windows get_options tests # moved MYSQL_OPT_LOCAL_INFILE to the uint options 	a9303d90ff5390c39dc5997ac5178b80fa9e0118
----------------------------
Bug#17617945 BUFFER OVERFLOW IN GET_MERGE_MANY_BUFFS_COST WITH SMALL SORT_BUFFER_SIZE Introduce Bounds_checked_array to catch that get_cost_calc_buff_size() returns wrong value for the size of imerge_cost_buff. 	86f2760aec0411800d4bd1b0ca20dc38e1527a60
----------------------------
Bug #16944177: IGNORE-DB-DIR GIVES AN ERROR WHEN FED VIA MY.CNF Duplicate directory names specified via multiple --ignore-db-dir options are causing the server to exit. Fixed by making these duplicates be ignored (and a warning be printed in the server log). The server will still fail to start on other errors like e.g. out of memory etc while processing the ignore db directories option. Test case added. Explicit type conversion added. Fixed the algorithm to generate the CSV out of the dirs list 	859165f71225f031e830934fbf779af8a63234fe
----------------------------
Bug#17669652 UNUSED DEFINE SNPRINTF_RETURN_TRUNC - Remove the now unused code - the define used to be set by configure.in 	5bb91447b26c45a6b5aba5a8c85c5039b4932e85
----------------------------
Merge: 65f5d5f 42ac9a4 BUG#16245498 SERVER CRASH WITH INNODB_BUFFER_POOL_SIZE<8M OR SMALL INNODB_SYNC_ARRAY_SIZE == Analysis == There are two different bugs(defects) here: 1. sync_array_reserve_cell will ut_error 2. sync_array_init will trigger ut_a(n_threads > srv_sync_array_size) == Solution == For 1, sync_array_reserve_cell should return true if a free cell is found, otherwise false, then the callers will choose another sync_array to reserve a free cell For 2, the assertion is too strict. Since the sync_wait_array doesn't require that each array has more than one slot, the assertion can be replaced by ut_a(n_threads > 0), how to use sync_array efficiently depends on users Also, this patch backports the fix for BUG#16884077 - ASSERT FAILURE IN SERVER WHEN LARGE NUMBER OF CLIENT EXECUTES QUERY(rb#2956). After this backport there shall not be any relationship between innodb_buffer_pool_size and number of threads. max_connections is introduced to get the max number of threads. rb#2464, approved by Jimmy. 	e29372b3f5db5dfe9ec06cf919cc6df6d680645e
----------------------------
BUG#16245498 SERVER CRASH WITH INNODB_BUFFER_POOL_SIZE<8M OR SMALL INNODB_SYNC_ARRAY_SIZE == Analysis == There are two different bugs(defects) here: 1. sync_array_reserve_cell will ut_error 2. sync_array_init will trigger ut_a(n_threads > srv_sync_array_size) == Solution == For 1, sync_array_reserve_cell should return true if a free cell is found, otherwise false, then the callers will choose another sync_array to reserve a free cell For 2, the assertion is too strict. Since the sync_wait_array doesn't require that each array has more than one slot, the assertion can be replaced by ut_a(n_threads > 0), how to use sync_array efficiently depends on users Also, this patch backports the fix for BUG#16884077 - ASSERT FAILURE IN SERVER WHEN LARGE NUMBER OF CLIENT EXECUTES QUERY(rb#2956). After this backport there shall not be any relationship between innodb_buffer_pool_size and number of threads. max_connections is introduced to get the max number of threads. rb#2464, approved by Jimmy. 	42ac9a4b694a2bd080529ee73553b93fb789c02b
----------------------------
Bug 16344230 - DROP --INNODB_FAST_SHUTDOWN=2 FOR FIRST MTR (BOOTSTRAP) STARTUP 	9e299aa4f3738dc14e68e6690340277e45cc2fee
----------------------------
"Fifth follow up fix for ""Bug17258782 MASTER DIDN'T WRITE ERROR MESSAGE IN THE LOG FILE FOR INCIDENT"" - ignore the warnings produced by ndbcluster's binlog thread when the mysqld is restarted. These warnings are expected. "	90aff1337abb0a158b0e0d7f8dfef6c03eb23416
----------------------------
"Bug#17500866 -	SELECT COUNT(DISTINCT ..) RETURNS WRONG RESULT WHEN TEMP TABLE SIZE IS LOW Problem: When running a simple COUNT(DISTINCT) query on a table that contains a large number of distinct values, the query can return a wrong result. In most cases the query will return 0 or an empty result. This is most likely to happen when the maximum size of internal temporary tables are set to a low value by setting either tmp_table_size or max_heap_table_size to a low value. Analysis: Suppose the table contains records where the field for doing COUNT(DISTINCT) on has the following values: -->1 1 9 5 4 1 0 8 11 7 12 3 6 Assume that tmp_table_size is set to 16 in this example. First we find the first 4 unique value and put it is a file in a sorted order (why 4? because size of field is 4 and tmp_table_size is 16) that is 1 4 5 9-->f1 then second 0 1 8 11-->f2 third will have 3 6 7 12-->f3 NOTE:f1,f2,f3 are pointing to same file after fetching whole record we Doing the COUNT(DISTINCT) is done by Unique::walk() which in this case will call merge_walk() to do the main job. In merge_walk() the first elements from each file: f1--> 1 4 f2--> 0 1 f3--> 3 6 here we compare the first value, which ever is least remove it(and all other which have same value from the queue and increment the count distinct counter. like in this we will remove 0 from f2.then we have like f1--> 1 4 f2--> 1 f3--> 3 6 then we will remove 1 from f1, f2  and fetch remaining value for f2 it will be like this f1--> 4 f2--> 8 11 f3--> 3 6 Like this we will get count distinct value. When counting the distinct values in merge_walk() a merge buffer is used. This buffer must be able to store one record from each of the file pointer (f1, f2, f3 above). The merge_buffer is allocated in Unique::walk() and  with a size that is equal to MIN(tmp_table_size, max_heap_table_size). When tmp_table_size or max_heap_table_size is very small, there might be a large number of file pointers to read from. In the case where this bug occurs, the number of files is so large that there is not enough space to store one record from each file pointer. This situation is detected in merge_walk() and handled by just returning an error status. The COUNT(DISTINCT) operation is not done and this causes 0 to be returned as the result. Solution: Try to allocate the merge buffer with a size where it have space to store atleast one record from each file pointers. Note: Till now we are not taking care of the cases, where situation is same but we can't able to allocate that much memory. In those cases again we will give result as zero. "	03ce2dc552dd5c84fbc8e29e3d3e62f4f061366d
----------------------------
"Fourth  follow up fix for ""Bug17258782 MASTER DIDN'T WRITE ERROR MESSAGE IN THE LOG FILE FOR INCIDENT"" - ignore the warnings produced by ndbcluster's binlog thread when the mysqld is restarted. These warnings are expected. "	944deea84d51888aea7f5593fd5edd456829da40
----------------------------
Bug #17324516 SLAVE ASSERTS AFTER 5.6 UPGRADE Problem: In place upgrade of slave from mysql-5.5 to mysql-5.6.12 fails with assertion (lines >= LINES_IN_RELAY_LOG_INFO_WITH_ID && internal_id == 1). Analysis: mysql-5.5's relay-log.info format is different from mysql-5.6's format. mysql-5.5 version does not have some information like the number of lines in the file(1st line), sql_delay (6th line), number of parallel workers which is used when MTS is enabled (7th line), internal_id which is also used when MTS is enabled (8th line). While a mysql-5.6 slave server is coming up, it parses relay-log.info file (if already available) and regenerates a new content if the format is old (i.e., mysql-5.5's format). In the process of regeneration, a local variable temp_internal_id with a default value 0 is declared. If the file content is new format, then the value was read into temp_internal_id and Rpl_info::internal_id is assigned with this local temp_internal_id. If the file content is old format, then the default value '0' was assigned to Rpl_info::internal_id which is wrong value. Fix: Initialize temp_internal_id with Rpl_info::internal_id which is having the default value '1'. 	9a7d4a8068d2083c0f004a9f4a39d86efcabe894
----------------------------
Bug#16877045 5.6-CLUSTER-7.3 WIN32 SQL_YACC.CC BUILD PROBLEM - Somewhat circular dependency caused by the configured files sql_builtin.cc  being included as part of the files to generate in sql/ - Move sql_builtin.cc out of GEN_SOURCES variable. - Create new variable CONF_SOURCES to be used for configured files. - Fix minor out of source build problem where the generated  libmysql.ver wasn't found 	a3fc998932e66b266b55e9feecbcb7f26523c222
----------------------------
BUG#17460821: ASSERTION ERROR WHEN STOPPING SLAVE AFTER SEMI-SYNC ON MASTER IS DISABLED The assertion happens when: (i) the master and slave are configured to use the semisync plugin; (ii) the DBA disables semisync on the master; (iii) and he also unsets the option to wait for slaves ACK even if the semisync slave count reaches 0 during the waiting period. This combination of factors makes the server run into an assertion as soon as the last semisync slave disconnects and its dump thread exits. The root of the problem is the fact that when the dump thread disconnects and calls the observer hook transmit_stop, which ends up calling ReplSemiSyncMaster::remove_slave, there is no check whether the master has already disabled semisync or not. If it has, the then a second call to the switch_off member function must be avoided. The quick fix is to avoid calling switch_off if the DBA has disabled the semisync plugin interactively on the master. Also, the switch_off member function should only be called if the plugin has not been switched off already. This is basically the pattern throughout the rest of the semisync plugin and no other calls seem vulnerable to similar crashes/assertions. (This a backport of the patch to 5.5, which is also vulnerable.) 	59471a662096a1152712445acd8fff316e3ec75e
----------------------------
"WL#7050 - InnoDB: Refactor redo log write code for better performance - This is rewrite of log_write_up_to() to improve its performance in case where innodb_flush_log_at_trx_commit = 2. In log_write_up_to(): * Remove wait mode. We always wait with one exception. And that is when doing log sync from master thread. It makes that synchronous as well because that happens only once per second. * Because we only have one log group therefore we don't need two flush_events. * Remove unnecessary fields like written_to_some_lsn, written_to_all_lsn. * If only write is requested we don't have to acquire the log_sys::mutex after we release it. We currently do that only to do event handling but event handling is really only needed in case where flush is requested i.e.: a thread should be waiting on the event iff it is interested in flushing. Writes are serialized under log_sys::mutex. This patch was originally written by Inaam Rana. rb#2389 Approved by Sunny and Yasufumi =========== Adjustment for performance was done therough inherited rb#3373 - optimize log_write_up_to() more * remove the second log_sys->mutex obtain also for ""innodb_flush_log_at_trx_commit = 1"" path * remove unnecessary ut_memcpy. (because log_group_write_buf() is protected by log_sys->mutex) * remove dirty-read from flush_to_disk=true case. (to avoid regression at some cases) (to keep current arbitration for write/fsync contention between log and data file) * fix wrong handling of O_DSYNC - revive log_buffer_sync_in_background(). (because it needs to be used) "	1daac9fcae1daeba48a285071b6079e88d03ea1c
----------------------------
Non-functional cleanup issues collected from recent work; 1) Recent compiler warnings in ha_innodb.cc and i_s.cc that occur on VS2010-64. 2) Converted some fprintf(stderr,...) mesages to ib_logf() in fil0fil.cc 3) Fixed innodb_bug16066351 so that it will only run on lower_case_table_names=0 machines instead of trying to skip windows and certain versions of MacOS.  It did not list MacOS 10.8 and was failing there. 4) A message in srv/srv0space.cc Tablespace::check_file_spec() was not displaying the correct info.  Fixed in the code and in innodb-log-file.test. 5) A couple other minor cleanups. Approved in rb:3616 by Marko 	121491cdde53f76002769124d66d13745a4f30a3
----------------------------
Correct the merge from mysql-5.5 to mysql-5.6 of Bug#17446090 TESTCASE INNODB_BUG16752251.TEST FAILS RANDOMLY ON PB2 dict_stats_update_transient_for_index(): Skip the statistics on secondary indexes if innodb_change_buffering_debug (ibuf_debug) is set. This should get rid of change buffering test failures when using PERSISTENT_STATS=0 on MySQL 5.6 and later. Approved on IM by Kevin Lewis 	339825b2c6c21c3b4ace751aa3795a3d3f9f3945
----------------------------
"Third follow up fix for ""Bug17258782 MASTER DIDN'T WRITE ERROR MESSAGE IN THE LOG FILE FOR INCIDENT"" - ignore the warnings produced by ndbcluster's binlog thread when the mysqld is restarted. These warnings are expected. "	54ebfd0a77103a135b67a79d7a456cd9ac323cd3
----------------------------
"Another follow up fix for ""Bug17258782 MASTER DIDN'T WRITE ERROR MESSAGE IN THE LOG FILE FOR INCIDENT"" - ignore the warnings produced by ndbcluster's binlog thread when the cluster is restarted. These warnings are expected. "	5df518b025541d25b594f4f0680f9d75bd66faae
----------------------------
Bug #17503460 MYSQL READ ONLY DOESN'T WORK FOR DROP TRIGGER Problem: Drop Trigger succeeds even after setting read_only variable to ON. Fix: Fix is to report the standard error (ER_OPTION_PREVENTS_STATEMENT) when global read_only variable is set to ON. 	19b53ddaa9fa21b91b43b535a7919a55589395ef
----------------------------
"This is a fix for Bug#16426805 (ON FAILURE OF MGMT NODE, STATUS DOESNT GET UPDATED FOR MORE THAN 5 MIN). The problem was that the variable holding the interval (in milliseconds) between MGMD to MGMD heart beat messages was never assigned a suitable value. Instead it was set to 0 minus a small constant, such that it wrapped around to a value close to 2^32. To fix this, a new config variable has been defined, ""HeartbeatIntervalMgmdMgmd"", with a default value of 1500ms. An mgmd process will then detect the death of another mgmd after about 6000ms. In addition this commit adds some extra comments and asserts, and removes a useless destructor. "	885f86f593f369baf758d92a285434926e7d2159
----------------------------
"Follow up fix for ""Bug #17258782 MASTER DIDN'T WRITE ERROR MESSAGE IN THE LOG FILE FOR INCIDENT"" - ignore the warnings produced by ndbcluster's binlog thread when the mysqld is restarted or cluster is restarted. These warnings are expected. "	4dc6f2591dc22458125653c2409ef75ff922d2f2
----------------------------
BUG#17483582 - EXCESSIVE MEMORY USAGE WHEN QUERYING INFORMATION_SCHEMA.INNODB_FT_INDEX Analysis & Solution: We first fetch all fts index records into memory and then store them into myisam temp table, so it will consumes huge memory when the fts index is big enough. In this patch, we limit the memory usage by INNODB_FT_RESULT_CACHE_LIMIT. When we reach the limit, do more fetches until we have all records rb://3398 approved by Jimmy.Yang 	36deaf9869f6ebe261b8815b4f2eb48b09e317a1
----------------------------
Fix for bug#16961971, NDB : REALTIMESCHEDULER REGRESSION ON NDBMTD, introducing more options to ThreadConfig configuration variable for realtime, spintime and cpusets 	36e090aaa7e08130675a3bd3b50152edebeabed3
----------------------------
Fix for bug#16961971, NDB : REALTIMESCHEDULER REGRESSION ON NDBMTD, introducing more options to ThreadConfig configuration variable for realtime, spintime and cpusets 	2194dff2aa56b0fcfc253ad73a05be210afbaba9
----------------------------
Fix for bug#16961971, NDB : REALTIMESCHEDULER REGRESSION ON NDBMTD, introducing more options to ThreadConfig configuration variable for realtime, spintime and cpusets 	9864b6eb36f49e30bba6d3ee4fd320c970ee8cde
----------------------------
Fix for bug#16961971, NDB : REALTIMESCHEDULER REGRESSION ON NDBMTD, introducing more options to ThreadConfig configuration variable for realtime, spintime and cpusets 	4102de31d212ff5a8fb7c9e8819c064b49a12688
----------------------------
Restore behaviuor of mtr.pl to enable ndbcluster when mysqld supports ndbcluster - Nothing is built with ndbcluster by default except in MySQL Cluster trees. - Use --skip-ndbcluster to disable 	428ecd1fc5eecaf5c8500cc5a292e52a5d7a17a8
----------------------------
Bug#16894092: PERFORMANCE REGRESSION IN 5.6.6+ FOR INSERT INTO .... SELECT ... FROM Problem: The performance regression is related to writing the temporary table into MyISAM. If we configure tmp_table_size and max_heap_table_size sufficiently high (in this case setting them to 96M) in order to ensure that the temporary table can be stored in the Memory engine, the performance regression is no longer present. Regression source was found to be WL#6071. Analysis: While creating temporary table, a random scan is initialized. This initialization internally frees buffers in case of myisam. As a result writes/reads happen to disk rather than cache. And hence the performance hit when we try to create tmp table in myisam. Solution: Initialize the scan without freeing buffers which can be done by calling ha_rnd_init(1). 	4d05a3d936dd184d8784ff40804bee45ebd2c9fe
----------------------------
Bug#16960133 MYSQLBINLOG VERBOSE OUTPUT, INVALID MEMORY ACCESS IN MY_B_WRITE_QUOTED Analysis: IN RBR mode and binlog_row_image is set to MINIMAL, only the changed columns are logged in binlog. And the meta data (eg: null bytes) will also be written only for these effected columns. `mysqlbinlog` tool in verbose mode (-v) skips these null bytes before reading the actual row. This tool assumes that for each column in the table there is one null bit which is not always true(eg: binlog_row_image=minimal) and calculates the number of total null bytes written in the binlog wrongly (ie., skips wrong number of bytes) and finally ends up in interpreting the row in wrong way. This problem could lead to invalid memory reads. The formula used to calculate the metadata bytes was ((number of columns in the table + 7) /8). For example, if we have 9 columns in a table and if there is a two columns insert/update event, master would have written two bits (i.e., one byte) in row metadata. If we calculate based on number of columns in table, it results 2 bytes instead of 1 byte. Fix: The formula should be based on the number of columns written in the event instead of the total number of columns in the table. Changed new formula is ((number of columns written in the event) + 7)/8) 	a8a30d89598f88137a5b43e57fc067f18d0c7c81
----------------------------
"Bug#17298829 	INNODB_WL6326_BIG FAILS WITH INNODB_PAGE_SIZE 4K AND 8K + SPORADIC FAILURES 1. Make the expected results independent of actual InnoDB page size. 2. Reordering of sub tests etc. in order to avoid the sporadic failures. 3. Minor cleanup in the test and especially comments. 4. Remove the test from disabled.def and add it to default.experimental because the test might stay risky. "	ec710c4968677bd0152b1a7989f6f9a4fcf7281e
----------------------------
Bug #16630410 NDB:LCP FRAGMENT SCAN WATCHDOG SHOULD BE CONFIGURABLE The LCP fragment scan watchdog periodically checks for lack of progress in a fragment scan performed as part of a local checkpoint. The watchdog was hard-coded to shut down the node if there was no progress for 60 seconds. Added a configuration parameter LcpScanProgressTimeout to set the maximum time for which the local checkpoint can be stalled before the LCP fragment scan watchdog shuts down the node. A parameter value of 0 disables the LCP fragment scan watchdog. Added a unit test to set the parameter value to 0 and verify that the LCP fragment scan watchdog is disabled. 	7dc090c064cc73deeea23e780915034e200fc9b6
----------------------------
BUG#11748566 - MYSQL SHOWS WRONG DEFAULT VALUE FOR PK IF NOT NULL NOT SPECIFIED DESCRIPTION: Two different, but equivalent ways of declaring a column as primary key does not end-up with the same result. When the column is declared primary key inline as: CREATE TABLE t (a INT PRIMARY KEY) it has no default value. In this case the flag NO_DEFAULT_VALUE_FLAG for the column is set while parsing. On the other hand, in the second case when column is declared primary key as index: CREATE TABLE t (a INT, PRIMARY KEY(a)) the flag is not set. This results in a default value for the primary key column. FIX: When a column is declared as primary key as index, the flag NO_DEFAULT_VALUE_FLAG is set for that column if user has not provided an explicit default value for the column. For the TIMESTAMP/DATETIME fields, if explicit_defaults_for_timestamp variable is not set, default value assigned due to first timestamp column promotion is retained. Default constant value assigned due to implicit promotion of second timestamp column is removed. 	dbc76697e13695f5efe79cb5d05f4819859a0f44
----------------------------
Bug #17253499 INNODB STATS INTERFERES WITH INNODB FORCE RECOVERY AND DROP/CREATE TABLES Problem: During force recovery (SRV_FORCE_NO_TRX_UNDO), create and drop table is not working. Solution: The semantics of the force recovery level SRV_FORCE_NO_TRX_UNDO has been misinterpreted.  The force recovery level SRV_FORCE_NO_TRX_UNDO means that rollback of recovered transactions must not be done.  This should not prevent other transactions being assigned a rollback segment.  So while assigning rollback segments, do not check the level of innodb_force_recovery. Also, when the innodb_force_recovery is greater than SRV_FORCE_NO_TRX_UNDO we now make InnoDB to become read only. rb#3473 approved by Marko 	84b0b2a0cd3e4e24f561500754503468984f08cb
----------------------------
"Temp fix for bug#16961971, NDB : REALTIMESCHEDULER REGRESSION ON NDBMTD This fix disables RealTimeScheduler if the MT scheduler (ndbmtd) is used. A warning will be printed: ""Configuration contains RealTimeScheduler setting, not currently supported with ndbmtd (bug# 16961971). Disabling."" "	f4954d8706c867028452ed4ce901b9a4c0fb39d7
----------------------------
Fix for bug#15907515 RECEIVER THREAD COULD BLOCK/BUSY WAIT WHILE HOLDING RECEIVER MUTEX This fix removes the waiting for more job buffers to become available inside performReceive() (or actually: mt_checkDoJob() called from it). This was bad as the receive mutex was held during this wait. Furthermore, mt_checkDoJob() was also sleep-loop waiting for job buffers to be freed. Which could end up as a busy wait if the receive thread was running under RealTime priority !! ::performReceive() will now instead return with a 'full' status to the receive thread without further waiting/retry. The receive mutex will then be unlocked and the receiver thread will yield() on the 'thr_job_queue_head::m_waiter' condition. Later, 'm_waiter' will be signaled, and the receive thread awakened, when more job buffers are available. (After being consumed by the worker thread.) Furthermore this fix also removes a bug where a negative return from the initial check_job_buffer() call in the receive thread, prevented the call of ::performReceive(). Thus, ::performReceive() did not call TCP_Transporter::doReceive() which would ofload received data from OS TCP-buffers into local 'ReceiveBufferMemory'. This could probably cause premature communication blockage, or at least the configured ReceiveBufferMemory to not fully being used to ofload the OS TCP buffer as intended. NOTE: 'check job_buffer outcome' is not relevant for ::performReceive() until *after* it has done a ::doReceive() on all TCP transporters having avail data. 	918470555c1ef537a6f9d36cba156dc5921969ac
----------------------------
Fix for Bug#15907122 INCORRECT HANDLING OF JOB-BUFFERS ALMOST FULL - 'SLEEPLOOP 10' The internal mt-job scheduler (mt.cpp) has the function update_sched_config() which is supposed to calculate how many signals we are allowed to execute in the next scheduling round. Allowed number of signals are restricted by available job-buffers (aka 'signal buffers') for the block-threads we may communicate with. If the available job-buffers for *any* such thread are below a critical threshold, update_sched_config() will wait for more job buffers to become available. The wait is implemented with the yield() function which takes a 'thr_wait*' argument (Think of this as a condition). A 'wakeup(thr_wait*)' (from another thread) will later restart the suspended thread. However, the 'thr_wait*' argument used in these yield() / wakeup() was the one used for signal that *incomming* signals has become available. This is the opposite of what we want to wait for. The effect of this was that these yields waited the maximum timeout (1ms) before execution was resumed. This fix introduce an additional 'thr_wait*' which is signaled when job buffers are released and thus becomes available. This fix is a collection of the following sub patches: - Add dump of job buffer utilization before we crash due to 'job buffer full' - Change the signature of the yield() function such that it can take a more general '*check_callback()' function as arguments. Change the existing functions currently used as 'callbacks' to the new (relaxed) signature. -  Refactor: Splitt out compute_free_buffers_in_queue() from compute_max_signals_to_execute(). New function contains common code intended for reuse in later patches. - (Fix) update_sched_config() will 'yield' the CPU and wait for more job buffers to become available when it is about to run out of job buffers. The yield() call will wait on a 'thr_wait' object, which may be sent a 'wakeup()' when the waiting condition has been resolved (by another thread) However, update_sched_config() yield'ed on the incorrect 'thr_wait' object intended to be used to wait for more *incomming signal* - What we actually have to wait for are signals to be *consumed* by the destination thread. Luckily there is also defined a 'max wait' of 1ms which currently will wakeup the thread. Thus, we never waited forever, but added latency could be expected. This patch introduce a new 'thr_wait' object which is signaled by the consumer, and update_sched_config() will now wait on this object. Furthermore the patch also avoid a situation where a thread could end up waiting for itself. 	2bf0e17fe9f5b9c7bebb3b98427ad5cd65f76db9
----------------------------
"BUG#11763963 - BINARY LOG ACTIVATION SETS SERVER_ID IMPLICITLY, BUT REPLICATION FAILS Problem: When one enables binary logging without setting a server id, letting it default to 0, the server changes it to 1, but replication does not work. According to the documentation, a server id > 0, should be a legal configuration to allow slave to connect and replication to work. Analysis: Apparently, this happens since the dawn of time as a design decision, meaning that binlog => server_id. In mysqld.cc::main() [...] if (opt_bin_log && server_id == 0) { server_id= 1; #ifdef EXTRA_DEBUG sql_print_warning(""You have enabled the binary log, but you haven't set "" ""server-id to a non-zero value: we force server id to 1; "" ""updates will be logged to the binary log, but "" ""connections from slaves will not be accepted.""); #endif } [...] What happened is that, when a slave tried to connect, it would get an error stating that the master was misconfigured, even with server-id = 1. After some testing we concluded that not even the documentation was accurate enough. The test conducted were: 1) Start master with no options. Make sure that slave cannot connect (control experience) 2) Start master with only binlog active. Make sure that slave cannot connect (the bug situation) 3) Start master with binlog active and server-id == 0 in the command line. Make sure that slave cannot connect. (as documented) 4) Start master with binlog active and server-id == 1 in the command line. Change server_id to 0 using SQL before connecting slave. Make sure that slave cannot connect.(as documented) Situations 1) and 2) are OK and according with expected and analyzed behavior. With 3) and 4) things are not as documented. In Situation 3) the server starts and implicitly sets server id to 1. When one starts a slave after configuring the master, there is no error in ""SHOW SLAVE STATUS"". It connects and works. Bin and Relay log have a server id of 1. In Situation 4) in which one explicitly change the server_id in runtime, the behavior is the same as in Situation 3). Contents of the relay log and bin log have a server id == 0 Fix: For trunk only the decision was: - Server_id must be explicitly set if binlog is active. If not, the server will not start. - if you set server_id=0, no slaves can connect, but your statements will be binlogged with the provided server_id. - if no server_id is set, it will have the default configured value and have the same behaviour as the above, if the default is 0. This patch will bring the code closer to which is documented. The dynamic change of server-id was not addressed here. For the previous version, one thinks that the documentation should be augmented according to the information detailed in the bug page. "	5621b3f291845bb6d9a5e48cb8eec756f80e85de
----------------------------
BUG#17460821: ASSERTION ERROR WHEN STOPPING SLAVE AFTER SEMI-SYNC ON MASTER IS DISABLED The crash happens when: (i) the master and slave are configured to use the semisync plugin; (ii) the DBA disables semisync on the master; (iii) and he also unsets the option to wait for slaves ACK even if the semisync slave count reaches 0 during the waiting period. This combination of factors makes the server run into an assertion and crash as soon as the last semisync slave disconnects and its dump thread exits. The root of the problem is the fact that when the dump thread disconnects and calls the observer hook transmit_stop, which ends up calling ReplSemiSyncMaster::remove_slave, there is no check whether the master has already disabled semisync or not. If it has, the then a second call to the switch_off member function must be avoided. The quick fix is to avoid calling switch_off if the DBA has disabled the semisync plugin interactively on the master. Also, the switch_off member function should only be called if the plugin has not been switched off already. This is basically the pattern throughout the rest of the semisync plugin and no other calls seem vulnerable to similar crashes/assertions. 	415bc3be0b13cf51791a3e2951e622edcd42c0b3
----------------------------
Added default.weekly.basic. This defines reduced suite for tier3/3 platforms Following changes to default.weekly: * Improved comments * Fixed typos * Restricted binlog-checksum=CRC32 runs to rpl and binlog suites * Removed run with ps-protocol for rpl and binlog suites. This is already covered by the ps-protocol run of default suites 	d5ecb8daa00323b4bc68ea49924903020f660c6f
----------------------------
Bug#17468295   ADD MISSING OUT-OF-BOUND TESTS FOR VARIABLES IN SYS_VAR SUITE Fix: ---- This bug is a repreat of Bug#13875534. But there were missing tests in Bug#13875534. Reviewed the entire sys_vars suite and added missing testcases in following tests. mysql-test/suite/sys_vars/t/auto_increment_increment_basic.test mysql-test/suite/sys_vars/t/auto_increment_offset_basic.t     Bug#17468295   ADD MISSING OUT-OF-BOUND TESTS FOR VARIABLES IN SYS_VAR SUITE Fix: ---- This bug is a repreat of Bug#13875534. But there were missing tests in Bug#13875534. Reviewed the entire sys_vars suite and added missing testcases in following tests. mysql-test/suite/sys_vars/t/auto_increment_increment_basic.test mysql-test/suite/sys_vars/t/auto_increment_offset_basic.test mysql-test/suite/sys_vars/t/binlog_max_flush_queue_time_basic.test mysql-test/suite/sys_vars/t/connect_timeout_basic.test mysql-test/suite/sys_vars/t/host_cache_size_basic.test mysql-test/suite/sys_vars/t/innodb_adaptive_flushing_lwm_basic.test mysql-test/suite/sys_vars/t/innodb_adaptive_max_sleep_delay_basic.test mysql-test/suite/sys_vars/t/innodb_api_bk_commit_interval_basic.test mysql-test/suite/sys_vars/t/innodb_max_dirty_pages_pct_basic.test mysql-test/suite/sys_vars/t/interactive_timeout_basic.test mysql-test/suite/sys_vars/t/key_cache_block_size_basic.test mysql-test/suite/sys_vars/t/lock_wait_timeout_basic.test mysql-test/suite/sys_vars/t/read_rnd_buffer_size_basic.test mysql-test/suite/sys_vars/t/table_open_cache_basic.testest mysql-test/suite/sys_vars/t/binlog_max_flush_queue_time_basic.test mysql-test/suite/sys_vars/t/connect_timeout_basic.test mysql-test/suite/sys_vars/t/host_cache_size_basic.test mysql-test/suite/sys_vars/t/innodb_adaptive_flushing_lwm_basic.test mysql-test/suite/sys_vars/t/innodb_adaptive_max_sleep_delay_basic.test mysql-test/suite/sys_vars/t/innodb_api_bk_commit_interval_basic.test mysql-test/suite/sys_vars/t/innodb_max_dirty_pages_pct_basic.test mysql-test/suite/sys_vars/t/interactive_timeout_basic.test mysql-test/suite/sys_vars/t/key_cache_block_size_basic.test mysql-test/suite/sys_vars/t/lock_wait_timeout_basic.test mysql-test/suite/sys_vars/t/read_rnd_buffer_size_basic.test mysql-test/suite/sys_vars/t/table_open_cache_basic.test 	d6b9c831ed6627afdd6567605230b5676c522d73
----------------------------
Bug#17358875 MEMCACHED: THE BINLOG SEQUENCE IS NOT CORRECT Approved by Jimmy on rb://3213. This bug is because we commit innodb transaction before write binlog. This will cause other thread write its binlog before current thread. The fix patch is moving write binlog before commit transaction. It'll guarantee binlog is written according to transaction commit order. This patch also contains a follow up patch for Bug#16498810 WRONG FILENAME IN ERROR MESSAGE FOR INNODB MEMCACHED CONFIG. 	feaac132ecd485a82f345165fe2742f2b8570cd9
----------------------------
Bug#11752792  NDB_ERROR_REPORTER DOES NOT INCLUDE CLUSTER LOG WHEN LOGDESTINATION IS US Backporting latest fixes for ndb_error_reporter and its mtr test to 6.3. Bug#11764570 Parse log filename from LogDestination, defaulting to ndb_<nodeid>* Bug#16765651 Add * to scp command to include all log files Bug#16602002 Add --connection-timeout, --skip-nodegroup and --dry-scp options In 6.3, the nodegroups cannot be queried using ndb_config since the 'Nodegroup' config parameter is not present. Therefore an 'ndb_mgm -e show' command is used to get the nodegroups for the --skip-nodegroup option. Bug#11756666 Add --help 	01b47a6635af4133316c7ec40ab7ca0374145b85
----------------------------
ndb - test: NDBT_find_binary_from_path failed to check last path this made ndb.test_mgmd to fail if runned from installed mysql-test where ndb_mgmd is installed in $basedir/bin/. 	73f545c8d93c72a1d7df6b8b18837647edc3543e
----------------------------
Bug#16602002 PROVIDE OPTION TO SKIP NODEGROUP=65536 NODES FROM NDB_ERROR_REPORTER Fixed the scp command in ndb_error_reporter to handle the case where DataDir is not defined. 	50dadcf844d04028f6ffd04e9e54e37c61c6381c
----------------------------
"ndb - removes valgrind warnings in ndbcluster_find_files Backport of: ------------------------------------------------------------ revision-id: magnus.blaudd@oracle.com-20130909114637-8e30ptt4o8xxc239 parent: magnus.blaudd@oracle.com-20130909105843-hd2snu2chv81c7jl committer: magnus.blaudd@oracle.com branch nick: 7.3 timestamp: Mon 2013-09-09 13:46:37 +0200 message: Remove valgrind warnings bying rewriting fix for skipping ""setup of binlog"" in ndbcluster_find_files() to avoid relying on uninitialized variables and magic flags. - removes valgrind warnings "	1a01e08db51af7002c38ae612c6ce40626675085
----------------------------
Merge: 65dc61c 093d863 WL#6661 log_error_verbosity --bootstrap and --help still change the default verbosity from 3 to 1 but may now be overridden on the command line with an explicit --log-error-verbosity=... Remember that this is a positional option. 	a0c04c0c7581cc590fa3feb0db947f13752efdeb
----------------------------
WL#7198 Add SSL support for mysqlbinlog Bug#11751199 SUPPORT FOR SSL OPTIONS NOT INCLUDED IN MYSQLBINLOG Problem: ======= Unlike other client programs (mysqldump, mysqladmin, ...) mysqlbinlog does not support SSL options. Users cannot use secure channels to query binlog of a remote server. Analysis: ======== All MySQL client tools supporting SSL use the same set of SSL options to configure SSL support into a MySQL client connection with a given MySQL server. The code for supporting these SSL options in command line parameters, for creating SSL options variables (using its defaults) and for handling the SSL options during command line options evaluation already exists and is distributed in three include files. Fix: === Included in mysqlbinlog references to sslopt-longopts.h, sslopt-vars.h and sslopt-case.h. Also, added the SSL options to the MySQL connection, so the client could effectively use SSL on its connection. 	9c76de357e55504abc3ccbe11f529b5eccb5b7a3
----------------------------
Bug#11756666 RFE: NDB_ERROR_REPORTER NEEDS --HELP Added --help to ndb_error_reporter and modified error-handling to print the usage message before exiting when the config file is not found. 	117cd991def306affcb245468dccf01c122b3bd5
----------------------------
"Bug #17277744 ERROR 1777 IN CHANGE TO MASTER_AUTO_POSITION = 0 WHEN AUTO_POSITION =1 Problem: If Master-Slave are using GTID based replication and the dump protocol was configured to use GTIDs and if that slave is restarted with gtid_mode=OFF, initialization on slave which is required for replication is failing with error ER_AUTO_POSITION_REQUIRES_GTID_MODE_ON(1777). And any further commands like ""start slave"" or ""change master"" are also throwing the same ER_AUTO_POSITION_REQUIRES_GTID_MODE_ON(1777) error. Analysis: When the slave server is restarted, it goes into initialization phase and reads master info file. Slave server was throwing error if it find Auto_position is 1 and gtid_mode is off and stops rest of the initialization required for replication. Fix: Slave server should not throw error if auto_position is 1 and gtid_mode is off. Instead, Server forces(resets) the auto_position value to 0. "	f33127fa8707cd76dfcd82bbb5b1a9b89eeb9306
----------------------------
Bug#17420109: SETTING SLAVE_PARALLEL_TYPE=DEFAULT CRASH IN CHECK_UPDATE_MTS_TYPE Problem: setting the value of slave-parallel-type variable on a standalone server may cause the server to exit. On a server, not configured as slave active_mi is null and accessing it may cause failures. Fix: fixed the issue by taking proper locks and checking if active_mi is not null 	9c5f4edd31086be36bca76e896de01be2db493aa
----------------------------
"Remove valgrind warnings bying rewriting fix for skipping ""setup of binlog"" in ndbcluster_find_files() to avoid relying on uninitialized variables and magic flags. - removes valgrind warnings "	d6b1c4798441abc53e4f03ed028e7da038dee145
----------------------------
Remove abbreviated spelling of arguments to programs and in my.cnf file(s) - traditionally it's been allowed to pass arguments to programs using short form as long as there are no other argument which starts with the same letters. - this featuresd is being removed in the future and thus, the syntax used in our test suite is adapted. Fixes: * --core -> --core-file * --promote-attribute -> --promote-attributes * SendBuffer -> SendBufferMemory * mysql -> mysqld * --p -> -p (uses the short form option instead of long form --parsable) 	c6a549008f577da680e52fe9ce387954b95813f7
----------------------------
Merge: e2e157d e1428e7 Bug #17168602 MYSQL_PLUGIN REMOVES NON-DIRECTORY TYPE FILES SPECIFIED WITH THE BASEDIR OPTION Null Merge 	6eae7d71b66b46bb19dd570ffc3f96b4571cb519
----------------------------
Merge: b5d6145 a6783f4 Bug #17168602 MYSQL_PLUGIN REMOVES NON-DIRECTORY TYPE FILES SPECIFIED WITH THE BASEDIR OPTION Reverting the patch. Because asked for second review. Merging from 5.5 to 5.6 	e1428e72f5671fce75dd80c60a952291c8da6ab5
----------------------------
Bug #17168602 MYSQL_PLUGIN REMOVES NON-DIRECTORY TYPE FILES SPECIFIED WITH THE BASEDIR OPTION Reverting the patch. Because asked for second review. 	a6783f4c74b7f135d5305206913d09e96cab034a
----------------------------
"Merge: 4865129 d19babc BUG#16032946 - PLEASE GIVE A MESSAGE FOR ""THREAD_CONCURRENCY DOESN'T DO WHAT YOU EXPECT"" Merge from 5.6 to trunk. "	0768cdf5959aa9f7c20ddd2fd66b3785cebb8e90
----------------------------
"Merge: a1ca040 46dc4af BUG#16032946 - PLEASE GIVE A MESSAGE FOR ""THREAD_CONCURRENCY DOESN'T DO WHAT YOU EXPECT"" Null merge from 5.5 to 5.6 "	d19babca71d649e643f6905e2a31d47ffc10172e
----------------------------
"BUG#16032946 - PLEASE GIVE A MESSAGE FOR ""THREAD_CONCURRENCY DOESN'T DO WHAT YOU EXPECT"" Fix info: -------- Backport of the deprecation bug fix (WL#5265) for global variable 'THREAD_CONCURRENCY' from mysql-5.6 to mysql-5.5 Note: With this backport, certain additional deprecation warnings would be reported under error conditions while setting the global/session variables. "	46dc4afcdd94652369bd48669eae9698193d6fe5
----------------------------
Merge: fc4bb11 049dab5 Bug #17168602 MYSQL_PLUGIN REMOVES NON-DIRECTORY TYPE FILES SPECIFIED WITH THE BASEDIR OPTION Reverting the patch. Because asked for second review. Merging from 5.6 to trunk 	d9e43b22ac66455b0293b2063910eab74af8c87e
----------------------------
Merge: a1ca040 08db593 Bug #17168602 MYSQL_PLUGIN REMOVES NON-DIRECTORY TYPE FILES SPECIFIED WITH THE BASEDIR OPTION Reverting the patch. Because asked for second review. Merging from 5.5 to 5.6 	049dab5dfc9a5b7f0631515a0cfc7e05bb7b763f
----------------------------
Bug #17168602 MYSQL_PLUGIN REMOVES NON-DIRECTORY TYPE FILES SPECIFIED WITH THE BASEDIR OPTION Reverting the patch. Because asked for second review. 	08db5938a628e0147869d51bdc96ee252ef18396
----------------------------
"Merge: 09ee764 ff4e038 BUG#16032946 - PLEASE GIVE A MESSAGE FOR ""THREAD_CONCURRENCY DOESN'T DO WHAT YOU EXPECT"" Merge changes from 5.6 to trunk. "	1b225defb4b2446e6a4c0919c5cc6b64bff9f5e3
----------------------------
"Merge: a1ca040 6e30fae BUG#16032946 - PLEASE GIVE A MESSAGE FOR ""THREAD_CONCURRENCY DOESN'T DO WHAT YOU EXPECT"" Null merge from 5.5 to 5.6 "	ff4e038248f30625a9192a8c500525a586671c0f
----------------------------
"BUG#16032946 - PLEASE GIVE A MESSAGE FOR ""THREAD_CONCURRENCY DOESN'T DO WHAT YOU EXPECT"" Fix info: -------- Backport of the deprecation bug fix (WL#5265) for global variable 'THREAD_CONCURRENCY' from mysql-5.6 to mysql-5.5 Note: With this backport, certain additional deprecation warnings would be reported under error conditions while setting the global/session variables. "	6e30fae1200b3601bc803ab739b352289d98d848
----------------------------
ndb - Fix differing .result file due to deprecation warning for option prefix - i.e when you have the option --core-file it was traditinally possible to give that option as --core as long as there was no other option startig with --core. This possibility has now been scheduled for removal and thus it's better to use the full option. - replace --core=0 with --core-file=0 Copied from fix for 7.3 revision-id: magnus.blaudd@oracle.com-20130828115048-x5uqoxm5nb2xal2q 	b5b6cdba2a17571ab01e3e5263ca73f724724ab7
----------------------------
Merge: 3f801e0 a3824bd Bug #17168602 MYSQL_PLUGIN REMOVES NON-DIRECTORY TYPE FILES SPECIFIED WITH THE BASEDIR OPTION Merging from mysql-5.6 to mysql-trunk 	378708b5ded90eda06f4c07e1e8e74463d0f8bce
----------------------------
Merge: 0b856bb e2f9086 Bug #17168602 MYSQL_PLUGIN REMOVES NON-DIRECTORY TYPE FILES SPECIFIED WITH THE BASEDIR OPTION Merging from mysql-5.5 to mysql-5.6 	a3824bdce21b22b2bf81761db2f867198e701416
----------------------------
Bug #17168602 MYSQL_PLUGIN REMOVES NON-DIRECTORY TYPE FILES SPECIFIED WITH THE BASEDIR OPTION Description: The mysql_plugin client attempts to remove any filename specified to the --basedir option. The problem is that if the filename does not end with a slash, it will attempt to unlink it, which succeeds for files, but not for directories. Analysis: When we are starting mysql_plugin with basedir option and if we are giving path of a file as basedir, it deletes that file. It was because it uses a function my_delete which unlinks the file path given. Fix:  As a fix we replace that line using another function my_free, which will only free the  pointer which is having that file path. 	e2f9086e8dfc1acd79b91cfd6255a6d2c7b7529a
----------------------------
Fixed build break in NDBCluster (MDL instrumentation) 	8f470efb7026a0f18086a0b4ea477736d17f1af1
----------------------------
Remove unwanted innodb_file_format_max check and force_myisam_default.inc call. 	aca40770fc3f95587ec880fdb407d381b4caa2fd
----------------------------
Bug#17339221 'MYSQL' IS INCLUDED IN READABLE CONF FILE GROUPS IN MYSQL_SECURE_INSTALLATION Problem: 'mysql' is a part of the array which has the list of groups which can be read while accessing a config file for mysql_secure_installation. Hence all the options which can be listed under mysql should be accepted by mysql_secure_installation, which is not the case. So the program exits when there are unrecognised options in config file. Solution: Removed 'mysql' from the list and added 'mysql_secure_installation'. User will be able to give the options through this new tag. 'client' tag is retained. Changes are made to support --password option. The supported tags now on will be 'client' and 'mysql_secure_installation'. 	4f0bb4a8591e96e1387732f1dc599f4b61302ae1
----------------------------
Fix result difference in cleanup for innodb_file_format_max variable. 	224f42f872613df634a9b3cbd1f7b5b4a88d1cb4
----------------------------
Fix differing .result file due to deprecation warning for option prefix - i.e when you have the option --core-file it was traditinally possible to give that option as --core as long as there was no other option startig with --core. This possibility has now been scheduled for removal and thus it's better to use the full option. - replace --core=0 with --core-file=0 	1279e928d3312670b0c137b2a05f509edddf2440
----------------------------
"Merge: 4c935a0 0901e81 Merged fix for bug #17356954 ""CANNOT USE SAVEPOINTS AFTER ER_LOCK_DEADLOCK OR ER_LOCK_WAIT_TIMEOUT"" into mysql-5.6 tree. "	5080016fd0ae86b449fb565eefcf5236356867b0
----------------------------
"Fix for bug #17356954 ""CANNOT USE SAVEPOINTS AFTER ER_LOCK_DEADLOCK OR ER_LOCK_WAIT_TIMEOUT"". The problem was that after changes caused by fix bug 14188793 ""DEADLOCK CAUSED BY ALTER TABLE DOEN'T CLEAR STATUS OF ROLLBACKED TRANSACTION""/ bug 17054007 ""TRANSACTION IS NOT FULLY ROLLED BACK IN CASE OF INNODB DEADLOCK implicit rollback of transaction which occurred on ER_LOCK_DEADLOCK (and ER_LOCK_WAIT_TIMEOUT if innodb_rollback_on_timeout option was set) didn't start new transaction in @@autocommit=1 mode. Such behavior although consistent with behavior of explicit ROLLBACK has broken expectations of users and backward compatibility assumptions. This patch fixes problem by reverting to starting new transaction in 5.5/5.6. The plan is to keep new behavior in trunk so the code change from this patch is to be null-merged there. "	0901e817f3227aa27db732d1d218a59b75019fed
----------------------------
Bug#17315083 - SUPPORT INTEGER KEY/VALUE FOR MEMCACHED TABLE Bug#17203937 THE MEMCACHED PLUGIN CAN BE INITIALIZED WITH AN INTEGER PK. Approved by Jimmy on rb://3082. This patch is for fixing 2 bugs, bug#17203937 and bug#17315083. In the bug17203937, the reason that the memcached plugin still can be initialized is, there's a correct config row in containers. This config row is inserted by the innodb_memcache_config.sql script. We should allow the plugin can be installed, even if there're some of rows in containers are not correct. For the not correct rows in containers, we need print some information about what's wrong with it. For bug17315083, we add support for integer columns. Not only the key column can be int, the value column can be int also. The code of this part is based on Jimmy's patch on rb://3083. 	0ea540903894c019028e0c50a0a7dabb87f5c194
----------------------------
Merge: 21781d0 1790fc4 Bug#16807641 MEMORY LEAK OF JOIN_BUFFER_SIZE IN JOIN_CACHE::ALLOC_BUFFER Null merge 5.6 => trunk. 	1c86582df3c38170ab0124ed0cbd88aef323d26e
----------------------------
Bug#16807641 MEMORY LEAK OF JOIN_BUFFER_SIZE IN JOIN_CACHE::ALLOC_BUFFER This is a regression caused by the fix for bug #15875919. Problem: When removing subquery clauses that are not needed, some statements may cause memory leaks. When remove_redundant_subquery_clauses() removes subqueries, the corresponding st_select_lex_unit and st_select_lex objects are unlinked from the query. When processing is over, free_underlaid_joins() loops through the st_select_lex_unit and st_select_lex objects of the tree and calls cleanup(). The removed objects are not cleaned up, which means that the corresponding JOIN objects aren't cleaned up either. Fix: Split st_select_lex_unit::cleanup() and st_select_lex::cleanup() into two functions each: cleanup_level() for cleaning up only that level, and cleanup() for recursive cleanup. Call these when removing query blocks in st_select_lex_unit::exclude_tree() and exclude_level(). 	1790fc49426477f77818cec4ac40b4e52dfc4e7a
----------------------------
BUG#16884077 - ASSERT FAILURE IN SERVER WHEN LARGE NUMBER OF CLIENT EXECUTES QUERY Problem: The size of the wait slot array for MySQL threads which can wait inside InnoDB, i.e, srv_max_n_threads variable is hardcoded, and depended on innodb_buffer_pool size.So when large no. of client connects and execute the query lead to server crash as  running out of sync array slots. Solution: 1) srv_max_n_threads is independent on innodb_buffer_pool_size. 2) Configure the size of wait slot array, i.e, srv_max_n_threads with the summation of maximum connections & innodb background threads. Approved by Jimmy. (rb#2956) 	f26286f85901c341a0af95c0bae95760e84638a1
----------------------------
Bug#12560151 61132: infinite loop in buf_page_get_gen() when handling compressed pages After loading a compressed-only page in buf_page_get_gen() we allocate a new block for decompression. The problem is that the compressed page is neither buffer-fixed nor I/O-fixed by the time we call buf_LRU_get_free_block(), so it may end up being evicted and returned back as a new block. buf_page_get_gen(): Temporarily buffer-fix the compressed-only block while allocating memory for an uncompressed page frame. This should prevent this form of the infinite loop, which is more likely with a small innodb_buffer_pool_size. rb#2511 approved by Jimmy Yang, Sunny Bains 	560a560e18949bd6fdce4785ced546e38c84b6c7
----------------------------
Bug#16862316 QUERY RETURNS DIFFERENT RESULTS DEPENDING ON WHETHER INDEX_MERGE SETTING Problem: When set optimizer_switch='index-merge=on', the optimizer was requesting ha_partition::clone() to clone the partition. During cloning we were not initiliazing the m_pkey_is_clustered variable which is required by the ordered index scan to return correct results. Fix: when cloning the partition handler set the m_pkey_is_clustered from the original partition handler. rb#3077 approved by Mattias Jonsson Patch by Aditya A. 	7c2511b20cf332b8e6d8be2bba057ed2906f8e95
----------------------------
Bug#16418661 - CHANGING NAME IN FOR INNODB_DATA_FILE_PATH SHOULD NOT SUCCEED WITH LOG FILES Bug#16691130 - ASSERT WHEN INNODB_LOG_GROUP_HOME_DIR DOES NOT EXIST. When InnoDB creates system tablespace, it should not continue when there are inconsistent system tablespaces (ibdata*) or undo tablespaces (undo*) or with redo log files(ib_logfile*) Also fixed Bug#16691130, when the log group directory doesn't exist, it now aborts with error message instead of assert. Approved by Marko, Kevin. rb#2293, rb#2963 	72215d3c79b094033abf5fc388f70e590b121e8d
----------------------------
Bug#16661195: REMOVE UNNEEDED CMAKE CHECKS Additional patch #4. Remove HAVE_GMTIME_R, HAVE_LOCALTIME_R, HAVE_PTHREAD_KEY_DELETE, HAVE_PTHREAD_ATTR_SETSTACKSIZE, HAVE_PTHREAD_ATTR_GETSTACKSIZE. All are part of POSIX and available on all non-Windows supported platforms. For Windows we have replacement implementations. Also remove HAVE_THR_SETCONCURRENCY and the already deprecated thread_concurrency server system variable. Finally, remove unused non-Windows replacement implementation for localtime_r as well as various thread_safe_add/_sub macros. 	aacfc9bcbbdaeec65c94f0fb4022bdfdf0a96b2b
----------------------------
WL6314: Prepared transactions parallel slave applier follow-up patch Disabled rpl_mts_logical_clock_recovery for crash safe slave/master since we need relay_log_recovery=ON for complete crash safety, but it is not supported by START SLAVE UNTIL SQL_AFTER_MTS_GAPS. MTS supports its own recovery algorithm and this test is not required to run with crash slave master/slave 	fe500dc72d5731fd86298f9b8c5328ba8064ef1e
----------------------------
"BUG#16498740 - CREATE/ALTER: INCORRECT ERROR MSG. SEPARATE UNSUPPORTED OPS FROM OTHER FAILURES BACKGROUND: CREATE or ALTER table can fail due to unsupported options OR if the user forgot to specify something in the command. In this particular case in the bug report, ALTER table failed because the user forgot to specify tablespace for ndb during create table time. While performing alter table, the current error message said ""doesn't have this option"" which can be misleading to the user. The given option is supported but the user forgot to specify tablespace during create time. Instead of misleading error message we can print a useful error message to the user. ANALYSIS: On failure of Alter table, HA_WRONG_CREATE_OPTION was invoked which mapped to ER_ILLEGAL_HA in handler::print_error. This change was done in Bug#13840553. ER_ILLEGAL_HA can be misunderstood by user that storage engine (in this case ndbcluster) does not support altering column storage from main memory to disk whereas the problem is user forgot to specify tablespace for ndb during create table. FIX: To fix this bug, a new handler error HA_MISSING_CREATE_OPTION is added and it is returned when ALTER fails which is then mapped to newly introduced error code ER_MISSING_HA_CREATE_OPTION in handler::print_error() function. "	7e5257056ca356ba8fc29787ec3faae92dcd5f3d
----------------------------
Bug#12593774 NDB_MGMD TAKES TO LONG TO CONNECT TO THE DATA NODES - In setups where the ndbd was configured to use dynamic listening ports for accepting connections from api nodes, the dynamic port number was reported serially from ndbd to ndb_mgmd. This caused one roundtrip per configured api node and thus the time required for ndbd to connect to ndb_mgmd grew linearly with the number of configured api nodes. The ndbd will now report all dynamic ports at once using a new command in ndb_mgmd(if ndb_mgmd supports the new command). 	6a13a83e2e742f4e46ab83aca9829a06d859dc7d
----------------------------
"Merge: 589bece 624f679 Bug #16776528 RACE CONDITION CAN CAUSE MYSQLD TO REMOVE SOCKET FILE ERRANTLY Problem Description: A mysqld_safe instance is started. An InnoDB crash recovery begins which takes few seconds to complete. During this crash recovery process happening, another mysqld_safe instance is started with the same server startup parameters. Since the mysqld's pid file is absent during the crash recovery process the second instance assumes there is no other process and tries to acquire a lock on the ibdata files in the datadir.  But this step fails and the 2nd instance keeps retrying 100 times each with a delay of 1 second. Now after the 100 attempts, the server goes down, but while going down it hits the mysqld_safe script's cleanup section and without any check it blindly deletes the socket and pid files. Since no lock is placed on the socket file, it gets deleted. Solution: We create a mysqld_safe.pid file in the datadir, which protects the presence server instance resources by storing the mysqld_safe's process id in it. We place a check if the mysqld_safe.pid file is existing in the datadir. If yes then we check if the pid it contains is an active pid or not. If yes again, then the scripts logs an error saying ""A mysqld_safe instance is already running"". Otherwise it will log the present mysqld_safe's pid into the mysqld_safe.pid file. "	98067ad3e28048a90017ebe868681bf8217663fc
----------------------------
"Merge: de03831 90b9a7e Bug #16776528 RACE CONDITION CAN CAUSE MYSQLD TO REMOVE SOCKET FILE ERRANTLY Problem Description: A mysqld_safe instance is started. An InnoDB crash recovery begins which takes few seconds to complete. During this crash recovery process happening, another mysqld_safe instance is started with the same server startup parameters. Since the mysqld's pid file is absent during the crash recovery process the second instance assumes there is no other process and tries to acquire a lock on the ibdata files in the datadir.  But this step fails and the 2nd instance keeps retrying 100 times each with a delay of 1 second. Now after the 100 attempts, the server goes down, but while going down it hits the mysqld_safe script's cleanup section and without any check it blindly deletes the socket and pid files. Since no lock is placed on the socket file, it gets deleted. Solution: We create a mysqld_safe.pid file in the datadir, which protects the presence server instance resources by storing the mysqld_safe's process id in it. We place a check if the mysqld_safe.pid file is existing in the datadir. If yes then we check if the pid it contains is an active pid or not. If yes again, then the scripts logs an error saying ""A mysqld_safe instance is already running"". Otherwise it will log the present mysqld_safe's pid into the mysqld_safe.pid file. "	624f679f9cf0409877383bd354fd65edaae7ae63
----------------------------
"Merge: 3b1375f 1383d0a Bug #16776528 RACE CONDITION CAN CAUSE MYSQLD TO REMOVE SOCKET FILE ERRANTLY Problem Description: A mysqld_safe instance is started. An InnoDB crash recovery begins which takes few seconds to complete. During this crash recovery process happening, another mysqld_safe instance is started with the same server startup parameters. Since the mysqld's pid file is absent during the crash recovery process the second instance assumes there is no other process and tries to acquire a lock on the ibdata files in the datadir.  But this step fails and the 2nd instance keeps retrying 100 times each with a delay of 1 second. Now after the 100 attempts, the server goes down, but while going down it hits the mysqld_safe script's cleanup section and without any check it blindly deletes the socket and pid files. Since no lock is placed on the socket file, it gets deleted. Solution: We create a mysqld_safe.pid file in the datadir, which protects the presence server instance resources by storing the mysqld_safe's process id in it. We place a check if the mysqld_safe.pid file is existing in the datadir. If yes then we check if the pid it contains is an active pid or not. If yes again, then the scripts logs an error saying ""A mysqld_safe instance is already running"". Otherwise it will log the present mysqld_safe's pid into the mysqld_safe.pid file. "	90b9a7ed005dace38e1d07f8cb810b673f2b5d8c
----------------------------
"Bug #16776528 RACE CONDITION CAN CAUSE MYSQLD TO REMOVE SOCKET FILE ERRANTLY Problem Description: A mysqld_safe instance is started. An InnoDB crash recovery begins which takes few seconds to complete. During this crash recovery process happening, another mysqld_safe instance is started with the same server startup parameters. Since the mysqld's pid file is absent during the crash recovery process the second instance assumes there is no other process and tries to acquire a lock on the ibdata files in the datadir.  But this step fails and the 2nd instance keeps retrying 100 times each with a delay of 1 second. Now after the 100 attempts, the server goes down, but while going down it hits the mysqld_safe script's cleanup section and without any check it blindly deletes the socket and pid files. Since no lock is placed on the socket file, it gets deleted. Solution: We create a mysqld_safe.pid file in the datadir, which protects the presence server instance resources by storing the mysqld_safe's process id in it. We place a check if the mysqld_safe.pid file is existing in the datadir. If yes then we check if the pid it contains is an active pid or not. If yes again, then the scripts logs an error saying ""A mysqld_safe instance is already running"". Otherwise it will log the present mysqld_safe's pid into the mysqld_safe.pid file. "	1383d0a9e642b88d52ed261917a9450dfc7a65b0
----------------------------
Post push fix for WL#6606 When mysqld is started with --skip-networking option, it should listen on unix socket to accept connections. In the current code, no initialization of unix sockets happens if opt_disable_networking flag is enabled. This patch fixes this problem. 	9f31c34f16a7e5335bc2e38929b43b76303f3bbb
----------------------------
Bug#17165034 - EXTENDING SYSTEM OR TEMPORARY TABLESPACE DOES NOT WORK Extending/Adding system or temporary tablespaces is broken on trunk. Example for extending system tablespaces: 1. Database is created with innodb_data_file_path=ibdata1:10M 2. change the innodb_data_file_path to ibdata:10M;ibdata2:10M;ibdata3:10M:autoextend 3. start the server 4. New data files ibdata2,ibdata3 should be created. This works fine on 5.6 but broken on trunk. Also InnoDB refuses to start if there multi-file tablespaces(>2) Issues fixed in the patch: -------------------------- 1. Extending tablespaces 2. creation of multi-file tablespaces(>2) 3. Removed an assert to allow graceful exit by printing error message when an ibdata file is missing Approved by Kevin. rb#2915 	a6959b104288b61185420cba9b75c8a51ccc41de
----------------------------
"WL#6606 - Offload THD and network initialization to worker thread. Initialization of THD and vio/net initialization happens in the acceptor thread that accepts the connection. THD and network initialization involves acquiring locks, memory allocation of various structures and system calls which are compute-bound as well as tasks that may block. The acceptor thread is an event loop that waits for new connection events from clients. To maximize the number of connections that can be handled per unit of time, the acceptor thread should spend as much of its time listening for new connections. This means thd and vio/net initialization should be offloaded from the accept event loop and delegated to worker threads that handle the client connections. This worklog provides a generic framework which offloads THD initialization and net/vio initialization to worker threads for all types of communication channels (shared memory, named pipes and sockets) that clients connect with server. In addition, this worklog refactored the existing interfaces of the struct scheduler_functions into an object oriented API, refactored and moved code related to connection handling and its management into a separate directory and files that contain implementations of specific related functionality. This resulted in removal of unnecessary #defines, modularity, better code clarity and readability in addition to performance improvements made in the worklog. As result of changes in this worklog, the follow bugs have been fixed: Bug#12951536 - THD INITIALIZATION TOO EXPENSIVE FOR ACCEPT() THREAD. Bug#12951595 - TOO MUCH NETWORK INITIALIZATION DONE IN ACCEPT() THREAD. Bug#12951605 - ACCEPT() SOCKET GETS TOO MUCH OF FCNTL()S. User Visible Changes: The system variables ""bind_address"", ""thread_handling"", """"thread_cache_size"" and status variables ""threads_cached"", ""Slow_launch_threads"" are no longer visible in embedded server mode (where they have no effect). "	b3b6e23f2fa4df51e1d9225a22afaf825403e4ce
----------------------------
Merge: c22929a a6d6767 WL#3656:PERFORMANCE SCHEMA table for SHOW SLAVE STATUS Implemented following Performance Schema tables for replication monitoring: 1) replication_connection_configuration 2) replication_connection_status 3) replication_execute_configuration 4) replication_execute_status 5) replication_execute_status_by_coordinator 6) replication_execute_status_by_worker 	081265129babd2a833c6cf7f9110038fbaee7324
----------------------------
"Bug#16587369: HANDLER FOR SQLEXCEPTION NOT CATCHING ERROR 1452 (FK CONSTRAINT) FOR UPDATE Overview -------- This is a bug regarding the handling of fatal errors. A fatal error is an error that should not be caught by a condition handler in a stored procedure. The issues described in the bug report are that: 1. The same error is handled differently for different statements. 2. Seemingly trivial errors are treated as fatal. It should be noted that in the context of this bug report (and bug fix), only handler errors are relevant to consider. There are two important issues regarding handler errors in the source code: 1. Deciding whether a handler error is to be considered fatal. 2. Ensuring that the handler error is indeed treated as fatal. For the first issue, ""is_fatal_error()"" is provided by the handler api, and returns true for handler errors that are fatal. The second issue can be handled in various ways; the most common is to call ""print_error()"" with a flag indicating that the handler error is to be considered fatal. Inspecting how the source code handles these two issues, in light of the problems reported, reveals three shortcomings in the implementation: 1. Handler errors are in fact fatal by default, as defined by the ""is_fatal_error()"" function. 2. When an error is returned from the handler api, the caller does not always check if the error is fatal. 3. The presence of a fatal error is not always flagged when calling ""print_error()"". Suggested fix ------------- The scope and ambition for the fix is to treat handler errors consistently for DML statements (update, insert, delete) by making sure ""is_fatal_error()"" is called before calling ""print_error()"", and to provide the ""ME_FATALERROR"" flag as appopriate. This alone does not fix the bug that is reported, since handler errors are fatal by default, hence, we also need to extend the function ""is_fatal_error()"" to recognize more handler errors as being non-fatal. An attempt was made to consider handler errors non-fatal by default, but this made a large number of tests fail in not very obvious ways, so this solution was not pursued further. Instead, a switch for catching non-fatal errors was added to ""is_fatal_error()"", currently catching: - HA_ERR_NO_REFERENCED_ROW: The error originally addressed by the bug report considered here. - HA_ERR_ROW_IS_REFERENCED: Another FK constraint violation error, an obvious extension of the bug we are addressing. - HA_ERR_LOCK_WAIT_TIMEOUT: See below. Changing the implementation of ""is_fatal_error()"" has a potential impact on the non-DML source code, which also calls this function; however, no damage has been observed in the testing that has been done. On the other hand, tests failed for other reasons: 1. Some tests expected a fatal outcome in situations where the error is now non-fatal (e.g. for foreign key constraint violations). The fix for this was to modify the test. 2. Some tests expected a non-fatal outcome where the error is now fatal due to the changed implementation of DML statements where we ensure that errors are treated the way they ought to. The fix for this was to extend ""is_fatal_error()"" to consider the error in question as non fatal (the error here was lock wait timeout). Re-considering which handler errors should be considered fatal is still a relevant task, but is considered beyond the scope of this bug fix. Additionally, such a task might be the responsibility of the storage engine teams. "	c8e6040cea617f3454279ceb35de22cf70fffe7d
----------------------------
"BUG#15909788-TEMPORARY FILES CREATED BY BINARY LOG CACHE ARE NOT PURGED AFTER TRANSACTION COM Problem: When you modify a large amout of data inside a transaction, for example a big LOAD DATA INFILE, and the size overcomes the binary log cache it will create temporary files in the tmp partition. Those files don't disappear until you close the connection, thus potentially filling up all available disk space in MySQL configured temp directory. Analysis: The binlog uses an internal cache implementation (IOCACHE) to store operations which have not yet been commited, as such, not yet written in the Binlog file. As stated in the bug, that cache is created per connected client, since all commit operations are intercepted by the binlog if it is active. When binlog_cache_size overflows, a file is created in the configured temporary directory by IOCACHE and it can grow up until max_binlog_cache_size (4GB). It has a ""greedy"" optimized approach, meaning that the create temp file is reused after a commit, having its only file seek cursor back to 0 (mf_iocache.c::reinit_io_cache(...)), but will take the size of the largest transaction ever made by that client. When a client leaves, and as stated in the bug, IOCACHE is closed and the temporary file is deleted. Fix: The implementation was refactored in order to be intelligent and regain resources by reducing the file size to 0 without deleting it in the reset() method of the binlog_cache_data class, which is called after COMMIT or ROLLBACK operations. "	bac04819cd2c56a30d3f245bd9d88e85d7753391
----------------------------
ndb - remove my_decimal-t from configure 	98b4c580caf89a01afc67b1a33bca4eb5f95ab74
----------------------------
Merge: 6b6a885 6407568 Merge NdbWaitGroup v2 working => 7.2 Add doxygen config file for storage/ndb/test 	6b107dfd048bfa915b43d6f60067031dcb2e37db
----------------------------
"BUG#16290902 DROP TEMP TABLE IF EXISTS CAN CAUSE POINT IN TIME RECOVERY FAILURE ON SLAVES Problem: DROP TEMP TABLE IF EXISTS commands can cause point in time recovery (re-applying binlog) failures. Analyses: In RBR, 'DROP TEMPORARY TABLE' commands are always binlogged by adding 'IF EXISTS' clauses. Also, the slave SQL thread will not check replicate.* filter rules for ""DROP TEMPORARY TABLE IF EXISTS"" queries. If log-slave-updates is enabled on slave, these queries will be binlogged in the format of ""USE `db`; DROP TEMPORARY TABLE IF EXISTS `t1`;"" irrespective of filtering rules and irrespective of the `db` existence. When users try to recover slave from it's own binlog, use `db` command might fail if `db` is not present on slave. Fix: At the time of writing the 'DROP TEMPORARY TABLE IF EXISTS' query into the binlog, 'use `db`' will not be present and the table name in the query will be a fully qualified table name. Eg: 'USE `db`; DROP TEMPORARY TABLE IF EXISTS `t1`;' will be logged as 'DROP TEMPORARY TABLE IF EXISTS `db`.`t1`;'. "	f3a777d6d59308a4dfb5012d7f3667e98e5948f6
----------------------------
wl#6244 locase.diff lower case FK names if lower_case_table_names fixes bug#14826778 bug#15841628 bug#16988205 	cbc58fd3b12a092a05caf89bb0a5c49ed61c58b5
----------------------------
BUG#16662771: MULTIPLE RPL TESTS FAILING ON WINDOWS DUE TO CRASH AT PROTOCOL::STORE() The problem manifests itself when a user thread is issuing a SHOW SLAVE STATUS while at the same time the slave IO thread is being terminated because of some error (in the case analyzed, the error was because the IO thread had received a packet bigger than slave_max_allowed_packet). Looking at handle_slave_io, specifically at the part that handles errors, one can find that the THD structure is deleted before mi->info_thd is set to NULL. That is not an issue in itself, but the fact that the deletion happens while it is not guarded by mi->info_thd_lock makes it a problem. As a consequence, a race for the THD memory area, between the user thread and the IO thread that is shutting down and cleaning its data structures, can happen. To be precise, if the user thread accesses THD memory through mi->info_thd and before that the IO thread frees the memory but has not yet set the info_thd to NULL, then the server can crash. To fix this problem the deletion of the data structure while the IO thread is shutting down is moved to a later stage of this process, i.e., after setting mi->info_thd to NULL. 	6d21db0b1c85048ca6c291488e0bd61b2cab6bdb
----------------------------
Bug#17156507 SUCCESSFUL CONNECTION ATTEMPT DOESN'T RESET THE SUM_CONNECT_ERRORS COUNTER Before this fix, a successful connection failed to reset the per IP address counter used to count successive connection failures, that can possibly cause a host to be blocked, when reaching max_connect_errors. This counter is reset by function reset_host_connect_errors(). This function is called only when connect_errors is non zero, as a performance optimization, to avoid locking the host cache for nothing. The problem was that the connect_error counter was not returned by ip_to_hostname(), so that reset_host_connect_errors() was never called for successful connections. A related minor bug was fixed also: the comparison with max_connect_error was off by one, the comparison should use greater or equal instead of strictly greater. 	1f02c5ad496105d91c8bbbf18351042d36d786e3
----------------------------
Merge: bb3836b a13db2c BUG#12535301- SYS_VARS.RPL_INIT_SLAVE_FUNC MISMATCHES IN DAILY-5.5 upmerge mysql-5.6->mysql-trunk 	75cbf6874758e00dbf526114dbc35a7c1e80b779
----------------------------
Merge: 0ac9ddd 030b9fc BUG#12535301- SYS_VARS.RPL_INIT_SLAVE_FUNC MISMATCHES IN DAILY-5.5 upmerge 5.5->5.6 	a13db2c3250cb224c749bbaf689f9fc5954e6a2e
----------------------------
Merge: 10b1b21 774556e BUG#12535301- SYS_VARS.RPL_INIT_SLAVE_FUNC MISMATCHES IN DAILY-5.5 Problem: sys_vars.rpl_init_slave_func test was failing sporadically on 5.5+. Fix: Added assert condition after wait for checks. Recorded test and enabled it. 	030b9fc6ac8285494889a438cfd6db13b4f50d75
----------------------------
BUG#16295518 - SYS_VARS.RPL_INIT_SLAVE_FUNC IS FAILING ON MYSQL-5.1 BUG#12535301- SYS_VARS.RPL_INIT_SLAVE_FUNC MISMATCHES IN DAILY-5.5 Problem: sys_vars.rpl_init_slave_func test was not recorded after the last edit. It was disabled on 5.1 after seeing failures due to the above reason. No old failures as this suite never ran with pb2 on 5.1 Fix: Added assert condition after wait for checks. Recorded test and enabled it. 	774556ef3c312a908539a87254090ebdc8aa9d49
----------------------------
"BUG#17160671: SLAVE_PARALLEL_WORKERS INCOMPATIBLE WITH RELAY_LOG_INFO_FILE When setting relay-log-info-file and slave-parallel-workers > 0, then the slave will use the value set through relay-log-info-file to create each worker thread relay-log.info file. However, currently the slave is concatenating the string ""worker-"" with the contents of relay-log-info-file, regardless whether it is a full path or not. This patch fixes the problem by extracting the directory part of the value set for relay-log-info-file and uses it as a prefix for the string ""worker-"". Then the part of the value that is not a directory is used as a prefix for naming the worker relay-log.info file: dirpart(relay-log-info-file)+""worker-""+namepart(relay-log-info-file) If dirpart(relay-log-info-file) is empty, then the worker info files will be created in the the datadir. "	dfd78fd4e156a0d74e7e58b195b1ac5364e4a579
----------------------------
"BUG#16662990 - I_INNODB.INNODB_BUG16097753 FAILING SPORADICALLY ON WINDOWS Analysis: The root cause is ""end_utime_of_query"" and ""utime_after_lock"" could be equal in microsecond when long_query_time is zero. Solution: Sleep 1 millisecond when waking up from lock wait using DBUG_EXECUTE_IF. rb://2926 approved by Jimmy Yang. "	f8d169cef64f35a425f70284c6a07395e0bc8786
----------------------------
Fixed i_rpl.rpl_stop_slave_timeout test failure caused after a merge with mysql-trunk. 	6f9787cbddb2aaf9e31f0fc06b9e55e43dfefd97
----------------------------
Merge: 0e3be15 e30f24b BUG#15880018 - MISLEADING MESSAGES AT STARTUP TIME DESCRIPTION: When the MySQL server starts, it checks for the file containing list of all the MySQL error messages. This file by default is 'errmsg.sys'. The location of the error-message file can be specified by the server option '--lc-messages-dir'. If MySQL server can not find the file at the location specified by the user, an error message is displayed and server does not start. The Error message is general and does not point user in the right direction. FIX : Changed the error message so that user can check '--lc-messages-dir' configuration directive too if MySQL server can not find the 'errmsg.sys' file. 	52094f8ae567e3a7ce41977986a84bebbdba3309
----------------------------
Bug#11748074 USE PTHREAD_ATTR_GETGUARDSIZE FOR BETTER ROBUSTNESS OF STACK THREAD SIZES Bug#35019 Use pthread_attr_getguardsize for better robustness of stack thread sizes Account for the extra stack guard by doing: pthread_attr_setstacksize(&thr_attr, my_thread_stack_size + guardize); Tested on: ppc64 GNU/Linux  guardize 65536 ia64 GNU/Linux   guardize 16384 x86_64 GNU/Linux guardize 4096 sun4u sparc      guardize 8192 	cf1226a48dea689048f571b6b626405e968409c8
----------------------------
BUG#17154390 - CRASHING WHEN EXECUTING SELECT ON NEW PFS TABLES WITHOUT REPLICATION Problem: ======== There is a test in perfschema suite which tests the same. But the issue was not caught because mtr starts the server with server-id=1. Now the code says: if(server-id!=0) init_slave(); Since server-id=1, init_slave is called and active_mi is declared and thus dereferencing an attribute of active_mi is fine. When server is started manually, server-id=0. Hence, init_slave() is not called, so active_mi is not declared. So, de-referencing an attribute of active_mi lead to a server crash. Fix: === Fixed the issue by checking for NULL before dereferencing. 	a71b613a37adae60c622349f00e1a2feeca87abd
----------------------------
Mcc FreeSSHD: Install services for all processes on windows, and use the service to keep the processes running after the ssh connection is closed. Send separate requests to start each process. Add log-error to save output from mysqlds. 	e5c3205718ff32b687b7347f7d92c99b55351caa
----------------------------
WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS Implemented following PS tables for replication monitoring: 1) replication_connection_configuration 2) replication_connection_status 3) replication_execute_configuration 4) replication_execute_status 5) replication_execute_status_by_coordinator 6) replication_execute_status_by_worker In this patch: fixed rpl_perfschema_* tests failing on pb2 WL branch 	d33e13cec4830f08ddab4a21c1b1fe30eb629866
----------------------------
"WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS Implemented following PS tables for replication monitoring: 1) replication_connection_configuration 2) replication_connection_status 3) replication_execute_configuration 4) replication_execute_status 5) replication_execute_status_by_coordinator 6) replication_execute_status_by_worker In this patch: Addressed comments from Marc - fixed windows build failure on pb2. - added #include ""my_global.h"" in all added .cc - worked on  more tests in perfschema suite - applied patch for Bug#17041705 "	242a9ff760753bf4f87f6aa76bf9991eeb92b2e9
----------------------------
WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS Implemented following PS tables for replication monitoring: 1) replication_connection_configuration 2) replication_connection_status 3) replication_execute_configuration 4) replication_execute_status 5) replication_execute_status_by_coordinator 6) replication_execute_status_by_worker In this patch: Fixed rpl_perfschema_execute_status_by_coordinator.test faling on PB2 WL branch 	0c9832632ffab4aebec20246c3b303768f5c64c3
----------------------------
WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS Implemented following PS tables for replication monitoring: 1) replication_connection_configuration 2) replication_connection_status 3) replication_execute_configuration 4) replication_execute_status 5) replication_execute_status_by_coordinator 6) replication_execute_status_by_worker In this patch: 1) Added helper functions in class Relay_log_info a) To get worker count b) Pointer to Slave worker object at index n in workers array 2) Added #ifndef EMBEDDED_LIBRARY macros 	70d40ad5f66ac58567627371b10b21a600d72159
----------------------------
Bug#15831300 SLAVE_TYPE_CONVERSIONS=ALL_NON_LOSSY NOT WORKING AS EXPECTED Merging fix from mysql-5.6 	f32487cfbccdec9444b15469f01e1b36ce964b2b
----------------------------
"Bug #13927679 	TEMPORARY ERROR 899 'ROWID ALREADY ALLOCATED' FROM NDBCLUSTER The TUP component of the data node handles ROWID allocation, and is involved in query processing. When INSERTing a row, TUP must allocate a fixed-size slot in a fragment, denoted by a ROWID, as well as any required variable-sized space, disk space etc. When INSERTing, UPDATing or DELETing rows, TUP must update any ordered indices. Bugs were found in the handling of errors in 2 situations : 1.  When ordered index update fails due to the ordered index being unable to allocate storage space for index nodes. 2.  When disk space allocation fails due to the Tablespace being full. In these situations, the TUP error handling did not correctly release the fixed-size slot in the fragment.  This leak wasted space, which could only be reclaimed by restarting the data node. Where NoOfReplicas >= 2, there are multiple replicas of every fragment. For INSERT, the primary replica chooses a free fixed sized slot, referenced by a ROWID.  It then forwards the INSERT to the backup replica(s), who must use the same ROWID. Where the backup replica discovers that the ROWID is not available, it will return error 899, indicating a mismatch between Primary and Backup. The Primary and Backup roles can switch around due to node failure and recovery. Where the backup fragment replica has some leaked ROWID slots, these cause problems when the Primary replica uses them and asks the backup to do the same. Where the primary fragment replica has some leaked ROWID slots, these should not cause problems as it will not attempt to use them for INSERTs. This patch fixes the error handling for these scenarios, and enhances an existing testcase (testBasic -n TupError) to expose the problem and verify the fix. This fixes all currently known causes of error 899. "	a275e40d46d029f3c78a41fb68b4de8b9995976c
----------------------------
WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS Implemented following PS tables for replication monitoring: 1) replication_connection_configuration 2) replication_connection_status 3) replication_execute_configuration 4) replication_execute_status 5) replication_execute_status_by_coordinator 6) replication_execute_status_by_worker In this patch: fix to handle failure of test perfschema.information_schema on pb2 WL branch. The issue was: In case MTS(mi->rli->workers) was not set, the get_row_count() function returned a uninitialized value. 	4f1ade30b9b0919b1a71105ed0b4f107900ea2d5
----------------------------
"Bug#11759578 ERROR MESSAGE REFERENCES INTERNAL VARIABLE NAME INNOBASE_BUFFER_POOL_SIZE Problem: For 32 bit machine, when the value of innodb_buffer_pool_size provided is too big ,then the error refers to the internal variable(innobase_buffer_pool_size), instead of the server startup variable(innodb_buffer_pool_size). Fixed: change error message from ""innobase_buffer_pool_size can't be over 4GB"" to ""innodb_buffer_pool_size can't be over 4GB"" Approved by: Marko(rb#1341) "	b1b596a94a72056e970230ce71a04c7323ab5728
----------------------------
WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS Implemented following PS tables for replication monitoring: 1) replication_connection_configuration 2) replication_connection_status 3) replication_execute_configuration 4) replication_execute_status 5) replication_execute_status_by_coordinator 6) replication_execute_status_by_worker 	8716787a40d6f6024c09f19080c34195404ecdd5
----------------------------
Bug#16792349: YET MORE UNUSED #IFDEFS Additional patch #3: Remove HAVE_NAMED_PIPE and _CUSTOMCONFIG_ Also remove HAVE_SMEM by converting it into _WIN32 && !EMBEDDED_LIBRARY (rather than having serveral #define and #undef). 	47363320c99e3c3fb5f066499f631e3eaf791eb9
----------------------------
Memcache: configurable settings in 7.3 scheduler 	59f99f88ade4fb666ae7009cef1fd7c6a154ad19
----------------------------
bug#16802288 - FAILING ASSERTION: PREBUILT->SQL_STAT_START || TRX->STATE == TRX_STATE_ACTIVE Add error handling for DB_DEADLOCK and DB_LOCK_TABLE_FULL to handler::records() for COUNT(*).  Also rollback transaction when handler::records receive DB_DEADLOCK, DB_LOCK_TABLE_FULL or DB_LOCK_WAIT_TIMEOUT. Approved by Sunny at rb#2714 	205b3d64887bd6b1cc91f1d95263183add24ecc6
----------------------------
Fix unit tests for data node CPU configuration 	d71150ec21699a32cf7a4b9214d6b34eb7c5b05d
----------------------------
Merge: 64edde6 b52fbc5 Bug#15831300 SLAVE_TYPE_CONVERSIONS=ALL_NON_LOSSY NOT WORKING AS EXPECTED Null merge from mysql-5.6 	d52a5ff76ca086c0c76b6206ce40092c4a2a95d2
----------------------------
Bug#15831300 SLAVE_TYPE_CONVERSIONS=ALL_NON_LOSSY NOT WORKING AS EXPECTED Problem: In RBR format, slave_type_conversions='ALL_NON_LOSSY' was not working properly in some cases like 'int unsigned' column at master was altered directly on slave into 'bigint signed/bigint unsigned'. Analysis: In RBR format, when there is a datatype mismatch and it is smaller datatype->larger datatype, slave checks whether `slave_type_conversions` set contains 'ALL_NON_LOSSY' or not. If it contains 'ALL_NON_LOSSY', it allows the conversion. In the process of converting the data from smaller datatype value to larger datatype value, slave prepares a conversion temporary table for all the mismatched columns. The column signedness information is not transferred from master to slave. Hence for this temporary table columns, slave treated signedness of the column as 'signed' for all the columns. Due to this treatment, any data for unsigned column at master was creating issues at slave (correct data was not getting inserted). Fix: Introduced two values in slave_type_conversions set 'ALL_SIGNED' and 'ALL_UNSIGNED'. This value tells the slave how to treat the values which are coming from master If 'ALL_SIGNED' is set, then treat all integer type column data as signed values (default behaviour). If 'ALL_UNSIGNED' is set, then treat all integer type column data as unsigned values. If both 'ALL_SIGNED','ALL_UNSIGNED' are specified, then 'ALL_SIGNED' will take higher priority than 'ALL_UNSIGNED'. Eg: SET slave_type_conversions='ALL_NON_LOSSY,ALL_UNSIGNED'. 	b52fbc5f1adc38aa6d0992593c25b4f3dc7a8efe
----------------------------
- bug#16752546: Hitting assert (trx)->in_ro_trx_list == ((trx)->read_only || !(trx)->rsegs.m_redo.rseg) Purge thread is trying to associate a lock with an existing trx that is owned by parallel running INSERT .... SELECT stmt. Debug assert validate state of trx before placing the lock even though purge thread don't plan to use member variables that it is trying to validate. Fixed by making the debug validation conditional. -------------- trx_set_rw_mode() promotes ro trx to rw trx. For this it acquires trx_sys->mutex as it needs to move trx from ro list to rw list. API as of now doesn't acquire trx->mutex but in future if there is other thread that is trying to access the trx that is being promoted then these 2 threads should be synced using trx->mutex. Approved by: Sunny (rb#2617) 	6ad68648a31d1d7358ede06efdd51c7b1bbd1b9b
----------------------------
Bug#16792349: YET MORE UNUSED #IFDEFS Additional patch #2, remove the following #ifdefs: __bsdi__ __EMX__ __IBMC__ __IBMCPP__ __LCC__ __OpenBSD__ __STDC_EXT__ _CUSTOMSTARTUPCONFIG_ CANT_OPEN_FILES_TWICE CHECK_KEYS COMPILE_STOPWORDS_IN DEAD_CODE DONT_USE_RW_LOCKS FAST FORCE_PRIMARY_KEY N_MAXKEY NEW_HASH_FUNCTION NOT_ANYMORE NOT_REALLY_USED_YET NOT_YET_READY_FOR_8_BYTE_POINTERS UNSAFE_LOCKING USE_RELOC USING_SECOND_APPROACH XXX_SUPERCEDED_BY_WL2952 	66871c7ee9f681213b3fff3a6c133bbbc1750f46
----------------------------
Removing and recreatinmg the following tests in mysql-trunk to match the corresponding file IDS from mysql-5.6 mysql-test/r/host_cache_size_functionality.result mysql-test/r/table_definition_cache_functionality.result mysql-test/t/host_cache_size_functionality.test mysql-test/t/sort_buffer_size_functionality.test mysql-test/t/table_definition_cache_functionality.test mysql-test/r/sort_buffer_size_functionality.result mysql-test/t/query_cache_size_functionality.test mysql-test/t/query_cache_type_functionality.test mysql-test/r/query_cache_size_functionality.result mysql-test/r/query_cache_type_functionality.result mysql-test/t/table_open_cache_functionality.test mysql-test/r/table_open_cache_functionality.result 	dd4ae9579e9e6db735132bb2ba8069ddb6b6d1aa
----------------------------
Removing and recreatinmg the following tests in mysql-trunk to match the corresponding file IDS from mysql-5.6 mysql-test/r/host_cache_size_functionality.result mysql-test/r/table_definition_cache_functionality.result mysql-test/t/host_cache_size_functionality.test mysql-test/t/sort_buffer_size_functionality.test mysql-test/t/table_definition_cache_functionality.test mysql-test/r/sort_buffer_size_functionality.result mysql-test/t/query_cache_size_functionality.test mysql-test/t/query_cache_type_functionality.test mysql-test/r/query_cache_size_functionality.result mysql-test/r/query_cache_type_functionality.result mysql-test/t/table_open_cache_functionality.test mysql-test/r/table_open_cache_functionality.result 	0a04703c690c899f9de388a99bcc430145aa54ce
----------------------------
WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS Implemented following PS tables for replication monitoring: 1) replication_connection_configuration 2) replication_connection_status 3) replication_execute_configuration 4) replication_execute_status 5) replication_execute_status_by_coordinator 6) replication_execute_status_by_worker Change in this patch: -------------------- Fixed failures seen in pb2 WL branch(mysql-trunk-wl3656) 	054584eff0e35c51d0c7f88afadd24bee41eaad7
----------------------------
WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS Implemented following PS tables for replication monitoring: 1) replication_connection_configuration 2) replication_connection_status 3) replication_execute_configuration 4) replication_execute_status 5) replication_execute_status_by_coordinator 6) replication_execute_status_by_worker Change in this patch: -------------------- Addressed code-review comments from Marc Alff. (rb#2599) 	b3cc96feb1b33e43c8a721f4cf81d71e033d711e
----------------------------
"Bug#16078943: ZERO DATE CAN BE INSERTED IN STRICT NO-ZERO MODE THROUGH A DEFAULT VALUE. Analysis: ------------- The problem was that the default values for a table were checked for consistency only at CREATE TABLE time. The consistency checks very much depend on the sql_mode value. The default values were not checked at the INSERT/UPDATE time. Thus, if sql_mode became strict in the middle between CREATE TABLE and INSERT/UPDATE, inconsistent data can be put into the table. So here, when sql_mode='NO_ZERO_DATE,NO_ZERO_IN_DATE, STRICT_ALL_TABLE'(strict mode) then creating table with default ""value 0"" or default ""value having 0 in date"" for field types DATE/DATETIME/TIMESTAMP"" is not allowed. But when sql_mode is ""NO_ZERO_IN_DATE,NO_ZERO_DATE"" or """" (non-strict mode), tables can be created. If table with default ""value 0"" or default ""value having 0 in date"" for field DATE/DATETIME/TIMESTAMP is created in non-strict mode and tuple for the table is inserted with default for DATE/DATETIME/TIMESTAMP fields in strict mode then no error or warning is generated. While inserting/updating tuple(s), we are not validating the default values. While creating the table the default value set might be correct but same values might not be correct while inserting/updating the tuple (one of the reason is sql_mode). Fix: ------------- Added a logic to verify the default values while inserting or updating a tuple. Currently the TIMESTAMP data type differs in nonstandard ways from other data types. But this behavior can be turned off using ""explicit_defaults_for_timestamp"" system variable at server startup. With this patch, old behavior of TIMESTAMP data type is not changed. But with ""explicit_defaults_for_timestamp"", logic is added to verify the default value while inserting or updating a tuple. With this, behavior of insert or update with default values for DATE/DATETIME/TIMESTAMP is as below, +---------------+------------+----------------+-------------+ |               |            |                |             | |TYPE/sql_mode  | """"         |NO_ZERO_DATE/   |strict_mode  | |        value  |            |NO_ZERO_IN_DATE |             | |---------------+------------+----------------+-------------| |DATE           | Success    | Warning        | Error       | |---------------|------------|----------------|-------------| |DATETIME       | Success    | Warning        | Error       | |---------------|------------|----------------|-------------| |TIMESTAMP      |            |                |             | |+ explicit_-   |            |                |             | |  defaults_-   |            |                |             | |  for_-        | Success    | Success        | Success     | |  timestamp    |            |                |             | |  = false      |            |                |             | |(for           |            |                |             | | backward      |            |                |             | | compatibility)|            |                |             | |---------------|------------|----------------|-------------| |TIMESTAMP      |            |                |             | |+ explicit_-   |            |                |             | |  defaults_-   | Success    | Warning        | Error       | |  for_-        |            |                |             | |  timestamp    |            |                |             | |  = true       |            |                |             | |               |            |                |             | +-----------------------------------------------------------+ Summary of discussion on impact on Replication: ----------------------------------------------- *. Found following impact on replication if this issue is fixed, Older master (bug is there) --> Newer slave (bug is fixed) Let's assume sql_mode is propagated properly between the master and slaves. I.e. at any point in time the master and slaves have the same sql_mode value. The following sequence is permitted on the master: - sql_mode = '' - CREATE TABLE t1 (f1 int, f2 DATE DEFAULT 0, f3 DATETIME DEFAULT 0, f4 TIMESTAMP DEFAULT 0); - set sql_mode='NO_ZERO_DATE,NO_ZERO_IN_DATE, STRICT_ALL_TABLES'; - INSERT INTO t1(f1) VALUES (10); The result of this sequence on the master is a new record: { 0, 0, 0, 0 } (that is the bug, because of effective NO_ZERO_DATE & NO_ZERO_IN_DATE). On the slave, the INSERT statement will fail (because the bug is fixed on the slave), thus the replication will stop. *. Approaches identified after discussing with Replication team, Runtime team and support are, 1. Introduce a switch to relax the sql_mode during an upgrade on the slave. But: - This switch is effectively overriding the SQL_MODE from the master, thence all sorts of different things can go wrong. - This switch is only necessary for upgrades, which have a solid workarounds: using RBR or relaxing the SQL_MODE on the master. - Introducing another switch requires double testing and is error prone, since users may use it for other cases than upgrades and then we will get all sort of weird bug reports... - This approach does not scale in terms of development and maintenance. The use case does not seem to be worth it this kind of approach. 2. Introduce another switch as in suggestion #1, that makes the slave behave as the master just for the sole purpose of a set of SQL_MODE combinations. Same problems as suggestion #1. 3. Document that during upgrades, the master needs to relax the sql_mode or switch to RBR, but note the following restrictions: - user needs to wait for the old binary logs to be consumed before actually be able to upgrade the slaves (so that there is no slave still replicating ""old"" binlogs after it is upgraded) - user needs to cope with side effects of relaxing the sql_mode or use RBR during the upgrade period. After considering the risk involved in the approach 1 and 2, its decided to go with approach 3. Attached discussion mails in the bug report. "	b2aa181dc20cd307faa51fc6bc36506cd0f8ea31
----------------------------
BUG#16906827-CAN'T SET QUERY_CACHE_TYPE TO 0 WHEN IT IS ALREADY 0 BACKGROUND: The crux of the problem reported in the bug report is User does not want to see the error message when the server is started with query cache disabled and User is disabling the query cache by setting query_cache_type to 0 during runtime (in client session). ANALYSIS: The check in check_query_cache_type() function was throwing error for all three values 0, 1 or 2 when query cache is disabled. According to the bug or user requirement, User wants to bypass this error check when we are setting query_cache_type to 0 (or OFF) during runtime when it is already disabled 0 (or OFF) during startup. FIX: As a fix for this bug, the check in check_query_cache_type() function is modified to take into account to *NOT* throw the error when we are setting it 0 (or OFF) when query cache is already disabled. 	5914688245347168b2094f6b07876ae53739e757
----------------------------
Bug#16945618 PERFORMANCE SCHEMA, DEGRADATION UNDER STRESS WHEN INTERNAL BUFFERS ARE FULL The performance schema uses internal buffers of a fixed size. The size comes from configuration options. When the sizing is adequate for the workload, things work properly. When the sizing is too tight for the workload, the performance schema spends a lot of time in an internal spin loop to attempt to allocate a memory buffer, and fails. Before this bug, this spin loop would happen for each call to instrument an object, which can be a very frequent operation. With this fix, when a failure to allocate memory is noticed, a flag is set that indicates the corresponding buffer is full. Subsequent call to allocate memory from the same buffer will fail immediately, avoiding the need for a spin loop that fill fail anyway. When an object is released, the corresponding buffer is not flagged as full any more, indicating that memory allocation can be attempted again. With this fix, when running the performance schema with undersized buffers, the functional result is unchanged: some events are lost and reported as such. What is changed is that the performance degradation in this mode, which could be catastrophic in some cases, is now avoided. 	ec252ec5961dfb3c699d420e4a6a26d14572251e
----------------------------
WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS Implemented following PS tables for replication monitoring: 1) replication_connection_configuration 2) replication_connection_status 3) replication_execute_configuration 4) replication_execute_status 5) replication_execute_status_by_coordinator 6) replication_execute_status_by_worker Change in this patch: -------------------- Changed data type of timestamp fields from string to timestamp. Updated tests accordingly. 	240128b2f06fd5649f9362fef329a0062d95754e
----------------------------
Bail if building in PB2 and MCC_PYTHON_TO_BUNDLE is not set. Install mcc_config.py as FILE (not PROGRAM) 	9d892661cb223206a1e2030e9e12f7b292b7e422
----------------------------
Bug#69172 Wasted work in method Config::illegal_change() 	70fe6dfd686fa12854c05b436237d9c70674dde7
----------------------------
WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS Implemented following PS tables for replication monitoring: 1) replication_connection_configuration 2) replication_connection_status 3) replication_execute_configuration 4) replication_execute_status 5) replication_execute_status_by_coordinator 6) replication_execute_status_by_worker 	e79e82a92c2f62559453de679371e835675226b9
----------------------------
BUG#16918216: RPL.RPL_ALTER_REPOSITORY TEST FAILING FOR 5.6 rpl_alter_repository was failing sporadically because a previous test, rpl_stm_mixed_mts_rec_crash_safe_small, didn't clean all configurations changes during its execution, these changes were causing result content mismatch on rpl_alter_repository. To ensure that all configurations are reverted, now we restart servers after rpl_*_mts_*_crash_safe_* tests. 	e5688b16c8a9061a8377c40802339aeef2d7c9ac
----------------------------
Bug #16917425  -DBUILD_CONFIG=MYSQL_RELEASE -DWITH_DEBUG=ON FAILS 4 AND SKIPS 27 MTR TESTS Revert fix since it caused mtr tests to not run in pushbuild. 	9061e736b14dadaeae1c2e9c9a241895906437a3
----------------------------
Bug #16917425  -DBUILD_CONFIG=MYSQL_RELEASE -DWITH_DEBUG=ON FAILS 4 AND SKIPS 27 MTR TESTS 	a5c18dddefef982281743796c721f514261ca9c6
----------------------------
BUG#15880018 - MISLEADING MESSAGES AT STARTUP TIME DESCRIPTION: When the MySQL server starts, it checks for the file containing list of all the MySQL error messages. This file by default is 'errmsg.sys'. The location of the error-message file can be specified by the server option '--lc-messages-dir'. If MySQL server can not find the file at the location specified by the user, an error message is displayed and server does not start. The Error message is general and does not point user in the right direction. FIX : Changed the error message so that user can check '--lc-messages-dir' configuration directive too if MySQL server can not find the 'errmsg.sys' file. 	e30f24be13378e08a17db4490aa1007d3ad314af
----------------------------
Bug#16898807 workaround: Temporarily change NDB memcached default scheduler from S (which uses multi-wait) to Stockholm (which does not). Since Stockholm does not support onine reconfiguration, 9 out of 18 ndb_memcache mtr tests must be temporarily disabled. 	74528be9becf82bdce6f6cc50dac1580f3a6a266
----------------------------
- bug#16631778: CRASH WHEN TRYING TO DROP TABLE WITH INNODB_FORCE_RECOVERY >=3 SET With innodb_force_recovery mode set to >= 3 server should block only DML, DDL is allowed. In order to ensure DDL ops are allowed we need to remove dependency of rseg assignment from srv_force_recovery mode. Respective API will ensure blocking of DML even if rseg is assigned for such trx. Approved by: Sunny (rb#2471) 	056466a8effede983261eb7f13280f7644f63879
----------------------------
"ndb fk no fk - remove sorted_result for those queries which have only one warning - turn off @@ndb_show_foreign_key_mock_tables before dropping databases since the tables are dropped in hash order(which varies) and thus different number of ""mock table warnings are generated"". This solves the problem with more warnings than expected generated from drop database "	406b1e384cb0bf74a648c4625f2811e810263e71
----------------------------
"Merge: 9b8a0d6 c7fc800 BUG#16460123- NOTE ABOUT ""MASTER.INFO REPOSITORY"" ON CHANGE MASTER TO IS MISLEADING BUG#16461303- WARNING ISSUED ABOUT MASTER.INFO WHEN USING MASTER-INFO-REPOSITORY=TABLE uperge 5.6 to trunk "	c5644b8eac4906e4612cc3699a0bb156ef12c5c4
----------------------------
"BUG#16460123- NOTE ABOUT ""MASTER.INFO REPOSITORY"" ON CHANGE MASTER TO IS MISLEADING BUG#16461303- WARNING ISSUED ABOUT MASTER.INFO WHEN USING MASTER-INFO-REPOSITORY=TABLE Problem: When executing CHANGE MASTER TO on MySQL 5.6 with either MASTER_USER or MASTER_PASSWORD options, MySQL issues a warning: Level: Note Code: 1760 Message: Storing MySQL user name or password information in the master.info repository is not secure and is therefore not recommended. Please see the MySQL Manual for more about this issue and possible alternatives. This appears to suggest that ""master.info"" is insecure, which may lead the reader to believe that they should use master-info-repository=table instead of master-info-repository=file. However, this warning is issued when using both types of master info repository. Also, the suggestion to see the MySQL Manual is not pointing to any specific section in the Manual for user's convenience. Fix: This Note is changed to specify that master info repository is insecure to store USERNAME or PASSWORD and thence points to the START SLAVE section of MYSQL Manual for reference. "	c7fc800c2d7a872b40ad607bcd1c84f2ae390b8e
----------------------------
Remove index.html which only redirected to welcome.html and make welcome.html the default start page for mcc. Introduce a new file ndb_setup.py which is always used to start mcc. ndb_setup.py imports a generated mcc_config.py which describes the installation. The now obsolete ndb_setup and ndb_setup.py.in have been removed. 	7d3bf5e622706f176998c0c16bfd17560d168103
----------------------------
- Bug #16664150: INNODB.INNODB-WL6445-2 FAILS - MYSQLD FAILED DURING TEST RUN Trying to start innodb instance in read only mode when previous instance was not shutdown properly will result in error. Previous instance is shutdown using shutdown_server <timeout> command. Time taken by server to shutdown on most machines if <= 10 secs and so default used when test is written. weekly-trunk test frmk exercises lot of tcs with more than feasible parallelism and on machines that seems to be dead-slow. In other words 10 secs is not enough so increasing it to 60 so that TCs passes on all machine configuration. Approved by: Sunny (over IM) 	9e45044ef74161a90de77f1109b0e2b6dfbfd0d7
----------------------------
Building on multiple platforms from the same source tree is currently broken. The reason is that some of the configuration dependent files that cmake generates are written into the source tree rather than the build tree. These files are then overwritten whenever you run cmake for a new platform. This commit fixes this problem. 	ce52757f460247f1edcbcd31f0d67bc058ca19a2
----------------------------
"Bug#16765278 DELETE SQL_LOAD_MB* FILE (TEMP FILE) CREATED BY BINLOG_KILLED_SIMULATE.TEST 'mysqbinlog' tool creates a temporary file while preparing LOAD DATA QUERY. These files needs to be deleted at the end of the test script otherwise these files are left out in the daily-run machines, causing ""no space on device issues"" Fix: Delete them at the end of these test scripts 1) execute mysqlbinlog with --local-load option to create these files in a specified tmpdir 2) delete the tmpdir at the end of the test script "	a3e9daf85d517847713ac98c7dcdfe7941c85035
----------------------------
ndb - need to use m_local_config_mutex when accessing m_local_config. In < 7.3 this worked by accident due to TTFM...but now that mutex isn't global any longer... 	51e8ee7cb5a40930ca2e6bdcb777bf84df3216d5
----------------------------
"Bug#16387720: BLOCKED WITH FLUSH TABLES WITH READ LOCK + SHOW SLAVE STATUS Problem: ======= If a client thread on a slave does FLUSH TABLES WITH READ LOCK; then master does some updates, SHOW SLAVE STATUS in the same client will be blocked. If the blocked slave server is killed and restarted when GTID's are enabled, one GTID gets missed leaving the slave in an out of sync state. Using 'relay-log-recovery=1' should do a crash safe slave recovery but it is not happening. Analysis: ======== RPL info tables ""slave_master_info"" and ""slave_relay_log_info"" are used to store slave's thread's positions.  When a FTWRL is issued on slave this command blocks all operations on tables. Hence when some update operations are done on master the slave thread will be able to open the tables but while closing, an internal commit operation will be blocked. These blocked info tables make the ""SHOW SLAVE STATUS"" to hang. When ""relay-log-recovery=1"" during crash recovery all the partial written events will be discarded the master info table is initialised with the information read from relay log info table. The ""Retrieved GTID"" set should be cleared so that partial read events are discarded and they are fetched once again. Since this is not happening ""The Retried GTID"" is considered to be executed and the actual transaction is skipped. Fix: === Info tables should be made independent of global read lock. At the time of opening the RPL info tables the following ""MYSQL_OPEN_IGNORE_GLOBAL_READ_LOCK"" flag is set to make the info tables not to block when the FTWRL is in progress. Hence a similar flag is introduced in ""ha_commit_trans"" code which will allow commit to complete even if a global read lock is active. This flag can be used to allow changes to internal tables (e.g. slave status tables). To fix the missing GTID issue using ""relay-log-recovery"" option, during recovery process retrieved GTID set is cleared. "	bf20e5c93fdab9737cdefcb0395eed622e3cb728
----------------------------
Fix for Bug#16749788 : ASSERTION: !USES_BLOB_VALUE(TABLE->READ_SET) IN MULTI_RANGE_START_RETRIEVALS Starting with MySQL-5.6-cluster-7.3.1, (bug 16020945) columns in 'read_set' required due to implementation specific details of each handler is not any more calculated (read: 'guessed') by the optimizer.  Instead additional columns may be added to the read_set by each handler before the table access is init'ed. ha_ndbcluster::get_read_set() was introduced for this purpose. However, the native MRR implementation in Cluster called get_read_set() too late. Thus we failed to detect Blob colums being part of the read set, which should have forced is to use use the default MRR impl. instead of the native NDB MRR impl.. This caused us to later hit the assert mentioned in the bug synopsis 	75909ebbed68f5c09118c40c0a28897a1978fbc0
----------------------------
BUG#16247110 - ASSERT FAIL IN PROTOCOL::END_STATEMENT AFTER DELETE ANALYSIS : When an UPDATE or DELETE statement is being executed and another connection happens to hold locks being accessed by this thread, then multi_range_read_next() called by the range optimizer could fail with HA_ERR_LOCK_DEADLOCK or HA_ERR_LOCK_WAIT_TIMEOUT. However, this was not detected by mysql_update() and no error was reported to the Diagnostics Area. Hence an assertion would be triggered in Protocol::end_statement() when trying to send OK or ERROR to the client. On release builds the bug caused OK to be sent to the client for a statement that had in fact failed. FIX : If call to select->quick->reset() in mysql_update() or mysql_delete() fails then an error is reported using file->print_error() to set DA to a proper state. This bug is fixed in mysql-trunk by bug#16366994. This patch backports the patch in mysql-5.6. Test case added. 	a2b0d1679285b230c24364c9cefa6bf351319502
----------------------------
Bug#16748528: CMAKE: ASSUME C STANDARD LIBRARY HEADER FILES EXIST Remove 11 CMake checks for C standard library header files. Since all supported platforms have the C standard library, these checks are pointless. This patch also removes duplicate lines from config.h.cmake as well as a number of lines without a corresponding configure.cmake check. The patch also removes some ifdefs which are always set to 1 in configure.cmake and/or config.h.cmake. 	a45335f3fc6e54e4b4a2ae537a2d44c5c2edb172
----------------------------
Bug #16411457  MASTER THREAD CANNOT EXIT FLUSH_LOOP WHEN INNODB_FAST_SHUTDOWN IS 2 Problem: When innodb_fast_shutdown is set to 2 and the master thread enters flush loop, under some circumstances it will not be able to exit it. This may lead to a shutdown hanging. This is happening because of the following: 1. In the flush_loop block of code, if the srv_fast_shutdown is equal to 2 (very fast shutdown), then we do not flush dirty pages in buffer pool to disk. 2. In the same flush_loop block of code, if the number of dirty pages is more than user specified limit, we go to step 1. This results in infinite loop. Solution: When we are in the process of doing a very fast shutdown, don't do step 2 above. rb#2328 approved by Inaam. 	8eca03210835e21e72c3d1a85734f32fa654f0a8
----------------------------
Fix for Bug#16744050 DUPLICATED ROWS RETURNED FROM IN-SUBQUERY When ha_ndbcluster::position() copy VARCHAR fields into ref_key buffer, only the actuall length of the VARCHAR fields should be copied and the rest of the VARCHAR zero-padded in order to create a predictable binary representation of the position snapshot. This is due to the MySQL Execution Engine, at least from ver5.6, assumes that two position-instances of the same primary key are binary comparable. Similar zero padding of the position snapshot is already present in ha_innodb::position(). Only affect (AFAIK) execution correctness for versions >= 7.3 where it fails due to the new 'duplicate weedout' algorithm. However, the fix is pushed from 7.0 -> as there is a bug in ha_ndbcluster::position(). Testcase will be added as part of merge to 7.3. 	2d58e785b79f6c18cfcb811035a5a730b68af76d
----------------------------
"bug#16553132: The original test connot more run in PB as too stong dependent on the configuration of the OS (ulimit -n). The test has now been put into the suite ""max_parts"" and is running under Hudson control regularly. "	93f6dfda9eb4476d27b6d1bf2e28da657535455f
----------------------------
Bug #16244691 SERVER GONE AWAY ERROR OCCURS DEPENDING ON THE NUMBER OF TABLE/KEY RELATIONS Problem: When there are many tables, linked together through the foreign key constraints, then loading one table will recursively open other tables.  This can sometimes lead to thread stack overflow.  In such situations the server will exit. I see the stack overflow problem when the thread_stack is 196608 (the default value for 32-bit systems).  I don't see the problem when the thread_stack is set to 262144 (the default value for 64-bit systems). Solution: The recursive approach to load tables related via foreign key is replaced with an iterative approach. Previously the cascade operations were also done in recursive manner. Now it is changed to be done in an iterative manner using an explicit stack. rb#2089 approved by Marko 	2e7320ddfbfadcdffd7546be7ccb07a05d6d0412
----------------------------
Merge: 83cd1b6 ca31ee5 WL#6906 - Improve locality of reference by allocating trx_t in blocks Allocate memory in configurable sized blocks that are a multiple of sizeof(trx_t). Put the trx_t instances on a priority queue that is ordered on their memory addresses so that when we allocate trx_t instances from the pool they are close together. When a transaction is freed the instance is released back into the pool. rb#2129 Approved by Inaam Rana and Jimmy Yang. 	8f2c33bc52616e37ce9bb44858a31beb1301213a
----------------------------
Bug#14555359 - EXTRASENDBUFFERMEMORY NOT CONFIGURABLE FOR MYSQLD/API/MGMD 	e4607fa07b44bfd255a766b549b7f6972be31acf
----------------------------
WL#7010: Remove unused --basedir and --datadir options from mysql_upgrade Removed the unused options. Added a test case. 	6f41ba1236157d54d519951aef694114cbd63d7c
----------------------------
BUG#11759306 - !INCLUDEDIR DOES NOT READ ALL .CNF FILES DESCRIPTION: Any configuration files to be included using !includedir directive is checked for valid extensions. While checking extensions, MySQL considered everything after the first dot (extension character) after the directory name as the extension for that file. FIX: Changed the function to check the extensions as everything after the last dot ('.') after the directory name. This will make possible to use dot is the configuration file name. 	2964dec8578fadde4f083033103be720ad961d72
----------------------------
BUG#11763934- DELETE AN OLD FILE WHEN CREATE_FILE_LOG_EVENT::DO_APPLY_EVENT FAILS Problem: When Create_file_log_event::do_apply_event or Execute_log_event::do_apply_event fails, the temporary files, created in tmpdir, are not getting deleted. Analysis: Such files are not reused and we can delete them incase of failure happens. Fix:Execute mysql_file_delete() on those temporary files(.info and .data files). 	3185576235001478b96fc344345acc40d9b840b2
----------------------------
WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS Implemented following PS tables for replication monitoring: 1) replication_connection_config_by_channel 2) replication_connection_status_by_channel 3) replication_execute_config_by_channel 4) replication_execute_status_by_channel 5) replication_execute_status_by_coordinator 6) replication_execute_status_by_executor Updated tests in perfschema suite accordingly. TODO: - Some fields in the above tables have hardcoded values. - Extend tables to contain multiple rows. - Write mtr scrpits to test the printed values. 	ed0cb1af634781fa134ac9db0aefd767475c583c
----------------------------
Merge: a10920c ce8fb3a WL#6045 - Improve Innochecksum This WL is to enhance the functionality of innochecksum utility. Implemention done for all features as mention for WL. R01 - It shall be possible to specify the checksum algorithm to innochecksum utility. R02 - innochecksum shall provide option to rewrite the current checksum using the specified algorithm. R03 - innochecksum shall provide option to rewrite checksum even if the current checksum is invalid. R04 - innochecksum shall allow to configure the maximum checksum mismatch allowed before terminating the program. R05 - innochecksum shall operate on multiple tablespace files. R06 - innochecksum shall operate on multiple files in the same tablespace. R07 - innochecksum shall operate on files greater than 2GB. R08 - Innochecksum shall chart out page type summaries for each page in the filespace, and would dump the info on standard output(stdout) or standard error(stderr) as it goes. R09 - Debug option for innochecksum tool shall change & must work similar as mysqld debug option works. Approved by Kevin and Satya. rb#1997 	65211e7298890e3e9d9ccbb2f851b1b50247a335
----------------------------
Bug #14095855 FOREIGN_KEY_CHECKS SHOULD APPLY TO NDB TABLES This is a patch for supporting toggling on/off of foreign key checking in ndb. Innodb supports set foreign_key_checks = 0; to immediately disable all foreign key checking, even if set inside an ongoing transaction. All operations prior to the setting will have foreign key constraints checked and all operations after will not. For Innodb these checks are done immediately, but for Ndb the setting set ndb_deferred_constraints = 1; will defer the foreign key checks until commit time. The setting of foreign_key_checks = 0; inside a transaction will only affect operations executed after the change, operations done before will cause foreign keys to be checked. The setting of foreign_key_checks = 0 will of course also disable any defined cascade of deletes or updates. The implementation disables Ndb's internal triggers for foreign key checking inside TUP so it will also have a performance improvement during restoring backups with foreign key checks disabled. 	b72b0513aeb8ee7188c9feb3f806286c65fc8a72
----------------------------
wl#6244 bugXXZ This patch fixes a bug in ha_ndbcluster::find_matching_index causing ndb(mt)d to crash when creating an FK. It also fixes so that DICT properly verifies this and returns error back instead of the later crash. 	30b7e3823a58cee043f92ba499962016154c0221
----------------------------
Bug#16720368 INNODB IGNORES *.IBD FILE BREAKAGE AT STARTUP After a clean shutdown, InnoDB will not check the *.ibd file headers, for maximum performance. This is unchanged before and after this patch. What this fix addresses is the case when crash recovery is needed. Previously, InnoDB could load a corrupted tablespace file. buf_page_is_corrupted(): Add the parameter check_lsn. fil_check_first_page(): New function, to perform a consistency check on the first page of a file. This can be overridden by setting innodb_force_recovery. fil_read_first_page(), fil_open_single_table_tablespace(), fil_load_single_table_tablespace(): Invoke fil_check_first_page(). open_or_create_data_files(): Check the status of fil_open_single_table_tablespace(). rb#2352 approved by Jimmy Yang 	a946cffd413c51ff637a43b4089a1cde9f818b3f
----------------------------
BUG#16532543: MYSQLBINLOG + MULTIPLE GTID BINLOGS + MYSQL => UNABLE TO APPLY LOGS: ERROR 1837 When using mysqlbinlog and mysql client to roll forward two (or more) binary logs with GTIDs enabled, the server will report an error when switching from the first to the second binary log. This happens because the variable GTID_NEXT is not properly reset when the first log file ends. Therefore, when executing the format description event of the second log file, GTID_NEXT will still be set to the last transaction identifier from the first log. Ultimately, this results in the following error: 1837. The fix is to make mysqlbinlog to output SET @@SESSION.GTID_NEXT=AUTOMATIC when processing a non-fake rotate event. Furthermore, even though transactions do not span multiple binary log files, they can span multiple relay-log files. Therefore, the resetting of GTID_NEXT should only occur if mysqlbinlog is not handling a rotate event in the middle of a transaction (as it may be the case when parsing relay-logs). In this patch, I also fixed: 1. a few replace_regex in some .inc files 2. some result files that had strange results after the defective regex kicked in 	b0d6cb2c2a6bc3812b91ff932e92cb9d1122916c
----------------------------
Fix for bug#16678033: IN-SUBQUERY WITH TRUE/FALSE/UNKNOWN TEST MAY RETURN INCORRECT RESULT OR ASSERT We failed to set an endpoint in ha_ndbcluster::index_read() when it was used to read an EQ_RANGE. When used to read from an 'UNIQUE HASH INDEX', *and* the key contained NULL values, this will be executed as a table scan and the range will be used to construct a scan_filter. The missing endpoint caused this scan to incorrectly return the first row after the requested row if it didn't exists. This in turn caused subselect_indexsubquery_engine::exec() to incorrectly conclude that it found a row with NULL valued key and return incorrect results. 	2d270bd3a0c878894154deac55919c494cf0a183
----------------------------
"Bug #16666456 	A REGRESSION IN 5.6 CRASH RECOVERY ATOMICITY A crash commit error causes the last transaction to loss in an InnoDB table after RESET MASTER. The root cause is that the prepare phase causes fsync while the commit phase does not cause fsync inside InnoDB. That means the last transaction is not fsynced inside InnoDB. But RESET MASTER erases binlog events of the last transaction. In the following crash commit error, InnoDB has the last prepared row on recovery and calls server on how to deal with the prepared row and server does not find relevant binlog events from binary log file and rolls it back finally. To fix the problem, RESET MASTER should cause to flush logs for storage engines, so that the last transaction is fsynced inside storage engines. The same solution to internal EXPIRE_LOGS_DAYS. There is not the problem with PURGE BINARY LOGS TO, as the binlog events of last transaction in current binlog file is not purged. "	0ecbe97ef83e20febe10f1348c8e18dbbb1b55bb
----------------------------
Bug #16680313: CLIENT DOESN'T READ PLUGIN-DIR FROM MY.CNF SET BY MYSQL_READ_DEFAULT_FILE Parsing of the plugin-dir config file option was not working due to a typo. Fixed the typo. No test case can be added due to lack of support for defaults-exitra-file testing in mysql-test-run.pl. Thanks to Sinisa for contributing the fix. 	2179357c1b0c3ffe3db4eb70eba1aa3d535a4e58
----------------------------
Bug #16244691 SERVER GONE AWAY ERROR OCCURS DEPENDING ON THE NUMBER OF TABLE/KEY RELATIONS Problem: When there are many tables, linked together through the foreign key constraints, then loading one table will recursively open other tables.  This can sometimes lead to thread stack overflow.  In such situations the server will exit. I see the stack overflow problem when the thread_stack is 196608 (the default value for 32-bit systems).  I don't see the problem when the thread_stack is set to 262144 (the default value for 64-bit systems). Solution: The recursive approach to load tables related via foreign key is replaced with an iterative approach. Previously the cascade operations were also done in recursive manner. Now it is changed to be done in an iterative manner using an explicit stack. rb#2089 approved by Marko 	0338c667dc9162bac96c5337feb55d73c4adfc1c
----------------------------
Fixing datadir and installdir in HostInfo 	3dad24e5e2083831149da08c57bb9c1289732e4b
----------------------------
configure.js fixes 	d57966e6b71da81277b85eba89a90c9effb9c6ab
----------------------------
configure.js fix 	7df69a7825afb69ad9ab14c131e2a6febc8dd30d
----------------------------
configure script improvements 	a3f4046cbe26d16bd051ac671af5b158b7764d12
----------------------------
Bug#16267120 - PAGE REORGANIZE ASSUMES INNODB_LOG_COMPRESSED_PAGES=OFF Push the missing innodb_log_checkpoint_now_basic.test in sys_vars suite 	50e2ff00fd743007c45313cee2f7659d08841e4e
----------------------------
Bug#16267120 - PAGE REORGANIZE ASSUMES INNODB_LOG_COMPRESSED_PAGES=OFF btr_page_reorganize() reorganizes a B-tree page to get more available space for inserting a record. For compressed pages, this is being logged as a logical operation. This is wrong, because the zlib version or the compression parameters could change between the time the MLOG_COMP_PAGE_REORGANIZE redo log record is written and it is applied during a crash recovery. MySQL 5.6 introduces the parameter innodb_compression_level and innodb_log_compressed_pages. The problem is that page reorganize is always being logged as MLOG_ZIP_PAGE_REORGANIZE (with the compression level as a parameter), which is correct with innodb_log_compressed_pages=OFF. If innodb_log_compressed_pages=ON, page reorganize should log the compressed page image. Fix: --- If innodb_log_compressed_pages=ON, log the compressed page and do not write a MLOG_COMP_PAGE_REORGANIZE redolog record. Approved by Marko. rb#1974 	2fd41bb720e642903e59014686d7d68294ee78d9
----------------------------
Merge: 55e1f11 4cf6067 merge 5.6 => trunk, add readline config changes to storage/ndb as well 	dbff42f3d50b5fb08cd903803c8dfb73b9608818
----------------------------
Bug #14483484 INSERT ... ON DUPLICATE KEY UPDATE + INNODB_AUTOINC_LOCK_MODE=1 IS BROKEN Problem: When a multi-row INSERT ... ON DUPLICATE KEY UPDATE statement begins execution it reserves the required number of auto increment values. When one of the insert fails because of duplicate key error, then it will become an update operation.  The auto increment value of this update operation will determine the auto increment values used for subsequent inserts.  This can result in duplicate auto increment values. Solution: When an insert operation of a multi-row INSERT ... ON DUPLICATE KEY UPDATE statement fails, check if the update clause explicitly updates the auto increment value. If an explicit value is given for an auto increment field, then check if it will conflict with the values that we have reserved.  If it might conflict then return an error. Also, the update clause will not bump the auto increment value for the rows inserted in the multi-row INSERT ... ON DUPLICATE KEY. rb#2219 approved by Guilhem and Dmitry Shulga. 	ed49453ec5aaf9c87bae72735f55949db257a75a
----------------------------
Bug #14483484 INSERT ... ON DUPLICATE KEY UPDATE + INNODB_AUTOINC_LOCK_MODE=1 IS BROKEN Problem: When a multi-row INSERT ... ON DUPLICATE KEY UPDATE statement begins execution it reserves the required number of auto increment values. When one of the insert fails because of duplicate key error, then it will become an update operation.  The auto increment value of this update operation will determine the auto increment values used for subsequent inserts.  This can result in duplicate auto increment values. Solution: When an insert operation of a multi-row INSERT ... ON DUPLICATE KEY UPDATE statement fails, check if the update clause explicitly updates the auto increment value. If an explicit value is given for an auto increment field, then check if it will conflict with the values that we have reserved.  If it might conflict then return an error. Also, the update clause will not bump the auto increment value for the rows inserted in the multi-row INSERT ... ON DUPLICATE KEY. rb#2219 approved by Guilhem and Dmitry Shulga. 	e40133c020186c2d1403d24c8bc404cce2a99d45
----------------------------
Bug#16661195: REMOVE UNNEEDED CMAKE CHECKS This patch removes 48 CMake checks for which the results were never used. This reduces the time needed to run CMake and simplifies our CMake configuration files. 	2ad1e5a4225ea3173af1cc142959a064b083d9a1
----------------------------
Fix for Bug#16485658 'PUSHDOWN JOIN WITH BKA PRUNED SCAN' The BKA implementation in mysql-5.6 has introduce the new member variable 'mrr_length_per_rec' in 'class ha_statistics'. The BKA implementation use it to predict whether the MRR buffer used by the BKA algorithm will become full if we batch another row. This variable was assumed to be initialized by handler::info() but this change was not implemented in ha_ndbcluster::info(). Furthermore, the variable was not initialized by the ha_statistics C'tor so it contained garbage causing unpredictable behaviour of the 'BKA full' detection. This could cause the BKA algorithm to incorrectly detecting the 'full' condition after only a single row had been batched. Effectively disabling the entire batch logic and causing excessively extra Mysql <-> NDB roundtrips. 	64399b30d7bb422a2539daa71cb85efd186e7f53
----------------------------
The below tests does not exist in MTR hence removing them from the disabled list: i_rpl.rpl_max_allowed_packet_stress funcs_1.charset_collation_1 	7f04b483417036717733462b4114078f1a26b5db
----------------------------
"Bug#16346443: EMPTY PASSWORDS ARE ALLOWED WITH VALIDATE-PASSWORD-POLICY SET. PROBLEM: Able to create/grant with a blank password even if validate_password plugin is active. SOLUTION: Password strength is checked by calling validate_password plugin (if installed) in case when ""identified by"" clause is not present in CREATE/GRANT query. Password strength is also checked for empty password in ""indentified by password"" clause. "	069f7c18ce9941306a9e796f5d08819ea7fd1199
----------------------------
crund - cleanup, simplified configuring dependencies, removed unused code, improved benchmarking scripts, updated copyright headers 	1386929b107c8432ac8de598aadee04ed90e2616
----------------------------
"New setup scheme Now run ""node configure.js"" to get started "	60c8d3274a763c50be870d0718ea69ba885c8d19
----------------------------
- WL#6915: 1. expanded tc coverage to cover sceanrio with different value of innodb_undo_logs. 2. fixed issue of assigning non-redo logging. 	7e0add4db100814d87267e9596752298d20ff8bb
----------------------------
Free Value Object on GC Make sure the NdbRecordObject, Buffer, and Column Proxies are deleted when JS no longer needs the Value Object. The patch also does this for Record and NdbClusterConnection, which however are expected to have much longer lifetimes. 	a285d513c4cb8cd35b8b51410fdf441069c0b4e6
----------------------------
Bug #16401597 - MTR V1 RETURNS INCORRECT PATH TO VARIABLE @@BASEDIR 	77c2756db55752bec5de9eb2b42f745f9b320600
----------------------------
Add the ability to skip certain tests via config file 	67361794dbb90970eeb91c9c5629b04155ebd33d
----------------------------
"ndbcluster - remove unused argument ""tab"" to create_fks() "	5ce946941a0e97207e149cd02f569370c33d4113
----------------------------
"Bug #14397360 TEST FAILURES WHILE RUNNING WITH ""--LOWER_CASE_TABLE_NAMES=1"" Problem: ------ The below tests fail when run with --lower_case_table_names=1 option 1)rpl.rpl_lcase_tblnames_rewrite_db 2)rpl.rpl_row_lcase_tblnames 3)main.lowercase_fs_off 4)main.mysql_locale_posix Analysis: -------- In the two rpl tests listed there are test cases to check whether creating tables with upper case names on master results in lower case table names on slave.So the databases/tables on the master should be in upper-case. But when these tests are run with --lower_case_table_names=1 the names are stored lower case and causes result content mismatch failure. The two main suite tests listed use have_case_sensitive_file_system.inc file as these tests are specific for case sensitive file systems. --lower_case_table_names=1 option is not case sensitive. So for these four tests --lower_case_table_names=1 option is not valid. Fix: --- Added ""-- source include/have_lowercase0.inc"" in the two main suite test files. With this include file these tests are skipped when run with --lower_case_table_names=1 and --lower_case_table_names=2 mysqld options. These two are case insensitive options. Created an include file (not_lowercase1.inc) and added this to the two rpl tests mentioned. This will skip the tests if the tests are run with option --lower_case_table_names=1. These tests run when the value of this option is anything other than 1. "	22b1acfae5bd3ecda96772025392b48e266e58fe
----------------------------
"Bug #12546953   ""SHOW VARIABLES LIKE 'DATADIR';"" RETURN EMPTY. Post push fix "	d0b9711eb32c975a97ddc8470dffa49b19501034
----------------------------
Bug #16244691 SERVER GONE AWAY ERROR OCCURS DEPENDING ON THE NUMBER OF TABLE/KEY RELATIONS Problem: When there are many tables, linked together through the foreign key constraints, then loading one table will recursively open other tables.  This can sometimes lead to thread stack overflow.  In such situations the server will exit. I see the stack overflow problem when the thread_stack is 196608 (the default value for 32-bit systems).  I don't see the problem when the thread_stack is set to 262144 (the default value for 64-bit systems). Solution: Currently, in InnoDB, there is a macro DICT_FK_MAX_RECURSIVE_LOAD which defines the maximum number of tables that will be loaded recursively because of foreign key relations.  This is currently set to 250.  We can reduce this number to 33 (anything more than 33 does not solve the problem for the default value).  We can keep it small enough so that thread stack overflow does not happen for the default values.  Reducing the DICT_FK_MAX_RECURSIVE_LOAD will not affect the functionality of InnoDB.  The tables will eventually be loaded. rb#2058 approved by Marko 	f51229ab9fcaaea234716cc09222299a58e1957a
----------------------------
Merge: 91811c9 3043e17 BUG#16541422: LOG-SLAVE-UPDATES + REPLICATE-WILD-IGNORE-TABLE FAILS FOR USER VARIABLES Merge from mysql-5.6 into mysql-trunk. 	f6d2ef76549b5588c224dd06b019397373993612
----------------------------
Merge: 972ef12 995fc64 BUG#16541422: LOG-SLAVE-UPDATES + REPLICATE-WILD-IGNORE-TABLE FAILS FOR USER VARIABLES Merge from mysql-5.5 into mysql-5.6 	3043e173648afa255b7831dfce557f41d17a492c
----------------------------
Merge: 1928d6f b0cf2b6 BUG#16541422: LOG-SLAVE-UPDATES + REPLICATE-WILD-IGNORE-TABLE FAILS FOR USER VARIABLES Merge from mysql-5.1 into mysql-5.5. 	995fc6432a0bef95a2c9fc46ed1737f483dfc4a4
----------------------------
BUG#16541422: LOG-SLAVE-UPDATES + REPLICATE-WILD-IGNORE-TABLE FAILS FOR USER VARIABLES Fixed possible uninitialized variable. 	b0cf2b6a58ff68248dc8a4acd7e7e9321b89eff3
----------------------------
"Bug#11829838: ALTER TABLE NOT BINLOGGED WITH --BINLOG-IGNORE-DB AND FULLY QUALIFIED TABLE Problem: ======= An ALTER TABLE statement is not written to binlog if server started with ""--binlog-ignore-db some database"" and 'fully qualified' table names are used in the ALTER TABLE statement altering table different from current database context. Analysis: ======== The above mentioned problem not only affects ""ALTER TABLE"" statements but also to all kind of statements. Once the current default database becomes ""NULL"" none of the statements will be binlogged. The current behaviour is such that if the user has specified restrictions on which database needs to be replicated and the default db is not specified, then do not replicate. This means that ""NULL"" is considered to be equivalent to everything (default db = null implied ignore don't log the statement). Fix: === ""NULL"" should not be considered as equivalent to everything. Since the filtering criteria is not equal to ""NULL"" the statement should be logged into binlog. "	0f4195fa0cea3493ee4debf8a841913759d436f6
----------------------------
Bug #16244691 SERVER GONE AWAY ERROR OCCURS DEPENDING ON THE NUMBER OF TABLE/KEY RELATIONS Problem: When there are many tables, linked together through the foreign key constraints, then loading one table will recursively open other tables.  This can sometimes lead to thread stack overflow.  In such situations the server will exit. I see the stack overflow problem when the thread_stack is 196608 (the default value for 32-bit systems).  I don't see the problem when the thread_stack is set to 262144 (the default value for 64-bit systems). Solution: Currently, in InnoDB, there is a macro DICT_FK_MAX_RECURSIVE_LOAD which defines the maximum number of tables that will be loaded recursively because of foreign key relations.  This is currently set to 250.  We can reduce this number to 33 (anything more than 33 does not solve the problem for the default value).  We can keep it small enough so that thread stack overflow does not happen for the default values.  Reducing the DICT_FK_MAX_RECURSIVE_LOAD will not affect the functionality of InnoDB.  The tables will eventually be loaded. rb#2058 approved by Marko 	01c06bc50ba98f5695b6f5503d053f2927212879
----------------------------
Bug#16541422 LOG-SLAVE-UPDATES + REPLICATE-WILD-IGNORE-TABLE FAILS FOR USER VARIABLES At logging a first Query referring a user var, the slave missed to log the user var. It appears that at execution of a Uservar event the slaver applier thought of the variable as already logged. The reason of misjudgement is in coincidence of query id:s: of one that the thread holds at Uservar execution and another one that the thread sees at the Query applying. While the two are naturally different in the regular execution branch (as two computational events are separated as individual events), in the deferred applying case the User var execution effectively belongs to its Query processing. Fixed with storing the Uservar parsing time (where desicion to defer is taken) query id to temporarily substitute with it the actual query id at the Uservar execution time (along with its query). Such manipulation mimics behaviour of the regular applying branch. 	6c47bd279fa515604eca36377c59e26cfa838e09
----------------------------
Don't run new binlog test in embedded configurations. 	f3d97fb496290a661e50fa904a90745b2075ba0c
----------------------------
Bug#16203623 NDB : IMPROVE HANDLING OF LAGGING ROW CHANGE EVENT SUBSCRIBERS: Setting size of GCP pool to the value of MaxBufferedEpochs and introduced new config parameter MaxBufferedEpochBytes. Added new DUMP 8013 to display lagging subscribers 	1a87543019189186daaf87995118f8ced91b4987
----------------------------
Fix Bug #16498810 - WRONG FILENAME IN ERROR MESSAGE FOR INNODB MEMCACHED CONFIG rb://2216 approved by Kevin 	decd7489ce27beb08b44d93856907f5614a38221
----------------------------
Merge: 2a2cb2e d38dd4e BUG#16438800 - SLAVE_MAX_ALLOWED_PACKET NOT HONORED ON SLAVE IO CONNECT Merge from mysql-5.6 -> mysql-trunk 	6262ce6bfbe01ae5883f2e6ed3b822df9597be37
----------------------------
Merge: c977035 1a3bbaf BUG#16438800 - SLAVE_MAX_ALLOWED_PACKET NOT HONORED ON SLAVE IO CONNECT Merge from mysql-5.5 -> mysql-5.6 	d38dd4ee599f1279d598f304eb4a5194a0c132ee
----------------------------
BUG#16438800 - SLAVE_MAX_ALLOWED_PACKET NOT HONORED ON SLAVE IO CONNECT Problem - When the slave was disconnected from the master, under certain conditions, upon reconnect, it will report that it received a packet larger the slave_max_allowed_packet which causes the replication to stop. Analysis -The reason of this failure is that on reconnect the slave sets the max_allowed_packet from the master's mi->mysql object which keeps the max_allowed_packet as 1MB. This causes the slave to report such error on recieving packet bigger than 1MB. START SLAVE on the slave fixes the problem since it restarts slave threads which initializes the max_allowed_packet to slave_max_allowed_packet. Fix - The problem is fixed by some code refactoring and introduction of a new function which updates the max_allowed_packet for the THD object of the slave thread and the mysql->options max_allowed_packet. 	1a3bbafdb9a8e9da1d592883871eb4108e7eefea
----------------------------
Bug#16430532 WRONG SIZING HINTS USED IN THE PERFORMANCE SCHEMA Before this fix, the server did perform the following actions during startup. 1) Retrieve the value of - max_connections - table_definition_cache - table_open_cache - open_files_limit from the user configuration provided in my.cnf, and use this settings as a base to compute performance_schema auto sized variables. 2) Then, later in the startup process: - max_connections could be trimmed down - table_definition_cache default value could be changed - open_files_limit could be either computed (replacing the 0 value) or adjusted. Because of the order used, the performance schema automated sizing was based on incorrect data. With this fix, the server startup code has been changed to perform part 2) first, and only when all the proper sizing parameters are finally computed and adjusted, then perform the performance schema initialization in part 1) Also, the code performing 2) has been cleaned up to be maintainable. Clarity in this complicated process (due to related dependencies between configuration settings) is critical here. 	3f7a80ac3d3a14cc15331a6a164b5aa1ba3c5380
----------------------------
Improve configuration file handling for jscrund jscrund add error handling for configuration file fix bug in configuration file options handling allow configuration file for all adapters, not just mysql and ndb jscrund_config.dist fix comment line to allow setting options jscrund_sql handle properties passed in options translate options.properties to felix properties 	94585183c2e2270848094164c00b9cdea5624460
----------------------------
Bug#16387243 FEATURE CREEP FOR NDBCLUSTER IN OPT_RANGE.CC - Remove the two usages of WITH_NDBCLUSTER_STORAGE_ENGINE in opt_range.cc 	9215eaecbeb4e16152e3f7efcbbceed198ab80ae
----------------------------
"BUG#16460978 - MYSQL CRASHES TRYING TO START SLAVE Problem - ======== P1. At the time the slave threads are started (during server startup) there is no THD context. Thence, current_thd cannot be used. However it is being used transitively through ER(ER_SLAVE_FATAL_ERROR), therefore, the access to invalid memory. P2. Both errors reported exhibit the same error message, specifically ""master info"". Fix - ==== S1. Insted of using ER(X) if no THD context is available we use ER_DEFAULT(x) which prevents server crash. S2. Also the error message has been made more verbose ie. different for the master-info and relay-log-info creation problem. "	b32d4e842f96f315f85f6792fe3385089b0b20ca
----------------------------
Bug#15987941: REMOVE HAVE_NDB_BINLOG IN RPL CODE - adapt build of ndbcluster by defining HAVE_NDB_BINLOG for the ndbcluster plugin library. NOte that the ndbcluster_embedded still is built without 	e23274032c6b0819901e6a8d19cafef8f7f77214
----------------------------
Bug #16316828 WL 5092 'REDUCED BINLOG SIZE FOR RBR' CAUSES NDB CONFLICT RESOLUTION FAILURES For initial releases of mysql-5.6-cluster-7.3, we do not support the binlog_row_image option - it should have no effect for cluster tables. We implement this by setting the HTON_NO_BINLOG_ROW_OPT flag which should stop the replication layer from acting on the binlog row image option. However, our tests show that this option continues to take effect. This patch adds a further check in the binlog.cc::binlog_prepare_row_images function to ensure that no trimming of the write_set occurs when writing rows to the Binlog, if the handler involved does not have the flag set. Testing can be done by running with a handler with this flag set, varying the binlog row image flag, and checking that the recorded events are unaffected.  This testing will be pushed separately to cluster trees. 	6142c90125820632c94eeecc704e2430594521b8
----------------------------
better use of jscrund config file 	60b38bac153bf8aa98b9f2468294d22725f0674b
----------------------------
"Bug#16492529 FIX BROKEN BUILD WITH SOLARIS/GCC 32BIT MODE On solaris/32bit it is important to do this: // First include (the generated) my_config.h, to get correct platform defines. #include ""my_config.h"" before including any system headers. The problem was that the FILE_OFFSET_BITS got redefined. "	be3266b9b562827cde8436c7f725c219509afd74
----------------------------
perftest: jscrund reads connection properties from jscrund.config 	fff2546f770120bc5c7c553c394ad44db72e1362
----------------------------
ndbcluster  - remove unused function no_uncommitted_rows_reset 	392387b9d8f31255471bac695f9c0f12d7be8c18
----------------------------
ndbcluster - forced STATEMENT logging workaround - pretend to be STATEMENT capable when opening one of the distributed privilege tables since all operations on those are force to be logged in STATEMENT format 	ca19172f43ab17809127d9c3f73dcea5520f08eb
----------------------------
BUG#16366994 - DBUG_ASSERT HIT WHILE EXECUTING UPDATE OR DELETE STATEMENT ANALYSIS : When an UPDATE or DELETE statement is being executed and another connection happens to hold locks being accessed by this thread, then multi_range_read_next() called by the range optimizer could fail with HA_ERR_LOCK_DEADLOCK or HA_ERR_LOCK_WAIT_TIMEOUT. However, this was not detected by mysql_update() and no error was reported to the Diagnostics Area. Hence an assertion would be triggered in Protocol::end_statement() when trying to send OK or ERROR to the client. On release builds the bug caused OK to be sent to the client for a statement that had in fact failed. FIX : If call to select->quick->reset() in mysql_update() or mysql_delete() fails then an error is reported using file->print_error() to set DA to a proper state. 	6c53cb7049cb0c6b24bf8b13ddca28aa32517fc6
----------------------------
Fix regression after push of fix for bug16020945 HA_NDBCLUSTER ADAPTION TO 5.6 RBWR Partitioning columns need to be included in read_set for update & delete which use partition pruning. 	63415646f700e97af2012a529605becfa0bfc259
----------------------------
BUG#16366881 - LOCK TIMEOUT DURING FILESORT CAUSES ASSERT ANALYSIS : When a query is being executed and another connection happens to hold locks being accessed by this thread, then multi_range_read_next() called by the range optimizer could fail with HA_ERR_LOCK_DEADLOCK or HA_ERR_LOCK_WAIT_TIMEOUT. However, this was not detected by find_all_keys() and no error was reported to the Diagnostics Area. Hence an assertion would be triggered in filesort(). On release builds the consequence of this bug was that the ER_FILSORT_ABORT error was sent to the client rather than the real error reported by the storage engine. FIX : If call to select->quick->reset() in find_all_keys() fails then an error is reported using file->print_error() to set DA to a proper state. 	a425a0aebdf442e284db8ad1a1d9cc7354cb223c
----------------------------
Fix for Bug#14554519 SHOULD NOT SET SOCKET OPTIONS 'SO_RCVBUF' AND 'SO_SNDBUF' WHEN NOT CONFIGURED This fix will only conditionally set the socket options SO_RCVBUF, and SO_SNDBUF if they was specified in config.ini. If these config parameters was not specified, the OS is free to choose the size on its own. The default value of resp. 70080/71540 for the Rcv/snd buffer is also removed, and this change has to be reflected in the MySQL Cluster documentation. 	f1e847a1445101923b2cd62c41ef331629f05712
----------------------------
Fix for Bug#16020945 HA_NDBCLUSTER ADAPTION TO 5.6 RBWR RBWR (Read Before Write Removal) previously relied on the optimizer calculating the 'read_set' for which rows requiring to be read as part of an update or delete operation. The handler::table_flags() returned HA_PRIMARY_KEY_REQUIRED_FOR_DELETE which caused the optimizer to add primary key columns to the read_set for update and delete operations. The problem with this approach is that the optimizer has insufficient information about how the handler will perform the read & update/delete operation at this stage. A conservative strategy was thus used which in several cases added the primary key column even when not required. This later prevented RBWR to 'remove' the read where this would have been possible. This fix removes returning HA_PRIMARY_KEY_REQUIRED_FOR_DELETE from ha_ndbcluster::table_flags(). Thus the RBWR optimizer will only see the read_set required by the runtime to evaluate any conditions and the new updated values. Any additional columns required by ha_ndbcluster in order to update or delete the rows and BLOB columns are now added to read_set inside the handler after RBWR has been decided. 	2412358c7d1546c9b3d7feac56eeaa26dc8b6a3d
----------------------------
"ndb_rbwr - parameter driven test for read before write removal in ndbcluster - disabled until patch for ""ndbcluster adaption to 5.6 rbwr"" is pushed "	e283b10bca649025cfda33c8a7e09fa7fe047840
----------------------------
"BUG#15930031 - SETTING SLOW_QUERY_LOG_FILE TO A VALUE WITHOUT A ""="" SIGN ENABLES GENERAL LOG DESCRIPTION: While checking server startup options from configuration file, MySQL checks if the option is a struct option, by finding dot ('.') and checking if dot lies before or after '='. If dot is before '=' then the startup option will be just after dot. If dot lies after '=' then it is a part of argument for startup option. If '=' is not in the startup option and dot is there, then check_struct_option() should return pointer to the begin of startup option. But in practice even if the argument of startup option has a '.', check_struct_option() treats it as key_name. For example if ""slow_query_log_file slow1.general_log"" is in configuration file, general log will be turned on. FIX: Condition added to make sure that dot is considered as a part of startup option only if it is before '=' sign and there is no space before dot. "	68459c20ad6ed8651f743565493ac7b5337a7605
----------------------------
Add less rows in non temp table when innodb_change_buffering is set to none 	c272ba401e67c8ea8a713f700856d6c63e1f1a52
----------------------------
BUG#16069598 - SERVER CRASH BY NULL POINTER DEREFERENCING IN MEM_HEAP_CREATE_BLOCK() PROBLEM ------- If we give start mysqld with the option --innodb_log_buffer_size=50GB ,then  mem_area_alloc() function fails to allocate memory and returns NULL.In debug version we assert at this point,but there is no check in release version and we get a segmentation fault. FIX --- Added a log message saying that we are unable to allocate memory. After this message we assert. [Approved by Kevin http://rb.no.oracle.com/rb/r/2065 ] 	3e3b0ee0a819dc6d08ba8dceaf9a9544c63b8457
----------------------------
ndbcluster - remove unnecessary extern declaration 	ed924f4e32398a14bd0f04c0d124acccd53578fb
----------------------------
ndbcluster - fix warning about truncation from int to bool - initialize const variables once and mark them const - remove unused variable 	73c732c68950f53eb58975387097a47575f0d5d7
----------------------------
Fix Bug #16409494 - INNODB_FT_CONFIG TABLE DOES NOT APPEAR TO UPDATE rb://2102 approved by Sunny Bains 	90f2cfba60327589ed8c411b424521a47d51e1d7
----------------------------
"Enabled embedded run for the following tests as ""Bug #16029012 MTR SHOULD USE INNODB AS THE DEFAULT STORAGE ENGINE FOR EMBEDDED SERVERS"" is fixed. 1) partition_exch_qa_2 2) character_set_database_func 3) collation_database_func 4) collation_server_func 5) log_slow_admin_statements_func 6) max_seeks_for_key_func 7) sql_quote_show_create_func "	1a450ac4b858427f98c0d2623b37c640bee03f53
----------------------------
"BUG#16062608: REPLICATION COMMANDS IMPLICIT COMMIT AND SET GTID_NEXT=""UUID:X"" When @@SESSION.GTID_NEXT is set to ""UUID:X"" and a statement that implicit commits but does not log changes is executed, like START SLAVE, that GTID is logged as a empty transaction, when on the same scenario with gtid-mode=OFF nothing is logged. This situation is not desirable since it may cause inconsistency problems: 1) DBA is performing a restore or recovery; 2) She/he is applying some empty transactions on slave to avoid problematic transactions from master; 3) Made a mistake and set a not need to skip GTID and didn't revert it. 4) Start slave. 5) That logged GTID, which will cause that the transaction from master will be skipped, will eventually cause inconsistency problems. To avoid that kind of mistakes, when a command that causes a implicit commit but does not change data is executed when @@SESSION.GTID_NEXT is different from AUTOMATIC, a error is thrown saying that this command is not allowed. "	00a9c56d9725122a35e6a5c76b7a456ec77f753e
----------------------------
ndbcluster - no need to set m_lock_tuple to false if it's already false 	4697cad099d9dec156ad5faa54537e9c430cb181
----------------------------
ndbcluster - remove superflous semicolon at end of line 	936a08a3c9b910588890e70fc7270589587c2d31
----------------------------
Merge: 41bbe85 171cac5 Bug #16197860 MYSQL_INTALL_DB DOES NOT WORK IN SOLARIS 10 SPARSE ROOT ZONES Bug #68117 mysql_intall_db does not work in solaris 10 sparse root zones Do not abort if unable to write config file, but remember and write an appropriate warning instead of usual text at end. 	735edc90390d715027b5bb75abf4b5a9c01b8199
----------------------------
"ndbcluster - remove unused argument ""buf"" from generate_scan_filter_from_key "	ff3b887103e2d21da2ae58e4b8baf497e6861f28
----------------------------
ndbcluster - mark functions as const 	d909ad9941aff13cceec543ae1537e6dcd0310c3
----------------------------
Bug #16197860 MYSQL_INTALL_DB DOES NOT WORK IN SOLARIS 10 SPARSE ROOT ZONES Bug #68117 mysql_intall_db does not work in solaris 10 sparse root zones Do not abort if unable to write config file, but remember and write an appropriate warning instead of usual text at end. 	171cac54865ee8b6fe49c30b7011571264d63f9e
----------------------------
ndbcluster - assert that multi range read does not use blobs insted of just bragging about it - fix comments after end of line 	51697768369f6e56905414b8aacceff033ae36a7
----------------------------
ndbcluster - remove useless cast(from and to same type) 	01b0298789932a4094a2cffe8e202c1855b9b75c
----------------------------
ndbcluster - remove cake on a cake (m_active_cursor || m_active_query) is used to determine if scan is already active 	a903e909c4bab251c3d98b9a3c4d1b4dcde01cbc
----------------------------
"Bug #16394472 TIMESTAMP LOGIC REMAINS PARTLY NON-STANDARD WITH EXPLICIT_DEFAULTS_FOR_TIMESTAMP http://dev.mysql.com/doc/refman/5.6/en/timestamp-initialization.html says ""In addition, you can initialize or update any TIMESTAMP column to the current date and time by assigning it a NULL value, unless it has been defined with the NULL attribute to permit NULL values. "". This behaviour is documented and we need to keep it for backward compatibility. However, if the option explicit_defaults_for_timestamp is on (option which was introduced in 5.6), we here introduce a better, standard-compliant behavior: in that case, if inserting NULL in a TIMESTAMP NOT NULL column, we return an error, like we already do for other types. "	abeae9626a7d603e9105ece5b721b8c46a0cf4f1
----------------------------
ndbcluster - remove unnecessary variable 	8c50b871105017793f6d65625147c5d86a87f09e
----------------------------
ndbcluster - emove bogus purecov comments 	14a0cd2297254140ff3bf9f78b511f100bb5220d
----------------------------
ndbcluster - remove old unecessary workaround for m_thd_ndb in close_scan being NULL, testcase still pass - Move variable declarations to just before they are used 	b9e37da4145f6d99d94348389fcd7f344ef7dc7e
----------------------------
Bug #13010061/Bug # 14506305:   SERVER SHOULD WARN WHEN NEEDED AUTHENTICATION  PLUGIN IS NOT LOADED This fix fixes the above two bugs by introducing a new check at server startup and FLUSH PRIVILEGES that iterates  over the list of the user accounts, checks if one of the   conditions described in the above two bugs is met and  logs an appropriate warning in the server log.  In particular warnings will be generated for users with sha256 and server started without ssl/rsa config. The check will slow down FLUSH PRIVILEGES and server  startup, so a new boolean command line option --validate-user-plugins=[ON|OFF], default ON is added to allow turning it off for installations that don't need this additional safety net. Test cases for various combinations of options added. Existing test results updated as needed. 	28decda679880f17b3c6ff2244d70884c8f36f11
----------------------------
Bug#16409223: Remove HAVE_RTREE_KEYS, BIG_TABLES and OPTIMIZER_SWITCH_ALL #ifdefs This patch removes the HAVE_RTREE_KEYS, BIG_TABLES and OPTIMIZER_SWITCH_ALL #ifdefs. They were always set and we don't support turning them off. 	77b99649b0848f0f860f589880738109a142a25d
----------------------------
Bug#16372927: STACK OVERFLOW WITH LONG DATABASE NAME IN GRANT STATEMENT Description: A missing length check causes problem while copying source to destination when lower_case_table_names is set to a value other than 0. This patch fixes the issue by ensuring that requried bound check is performed. 	367e98173f500a34c3b0870ea947fb3184afc2de
----------------------------
Fix for Bug#16328373 ASSERTION FAILED: ROWIDS_BUF < ROWIDS_BUF_END The assert in DsMrr_impl::dsmrr_fill_buffer() fires due to the buffer space to use for sort buffer is too small to store a single primary key. The primary key is in this case large since it contains the prefix of a BLOB. The buffer space to use for sort buffer is provided by the BKA implementation. The query is run with a very small join buffer of only 128 bytes. When BKA is used, the first part of the join buffer is used for storing the fields from the first table while the last part is used as sort buffer for the DS-MRR implementation. In JOIN_CACHE::set_constants() there is already code for handling the situation when the specified join buffer is too small. The code adjusts the size of the join buffer if the size specified by join_buffer_size is so small that it can not store a single record. This code does not take into account that there needs to be room in the join buffer for the DS-MRR sort buffer when BKA or BKA-unique is used. The fix for this problem is to extend JOIN_CACHE::set_constants() so that when it computes the minimum size the join buffer can have, it will include space for a minimal DS-MRR sort buffer. 	9de49c571a7dec2b50d1bfa3b44d72f6e3106b72
----------------------------
"Merge: b2ccd1a e7d8c08 BUG#11745049 - LOG_ERROR VARIABLE IS BLANK WHEN NOT EXPLICITLY STATED IN MY.CNF DESCRIPTION: log_error global variable shows empty string ("""") if not specified at server startup or in configuration file. This is reported for *nix platform. On windows, it shows ./HOSTNAME.err as its output. ANALYSIS : Error output on *nix platforms is by default STDERR. On Windows it is by default in file, and the default file is ./HOSTNAME.err. If both --log-error and --console is used on windows, the value of log_error is shown but the output is directed to stderr. FIX : Changed the value of log_error variable to ""STDERR"" whenever output is directed to the STDERR. "	75d94953bf1eccdefa9c4ef186efac9d996d5c76
----------------------------
ndbcluster - change the DUG_PRINT's in check_default_value into sql_print_error in order to get some clue about what failed when this function fails 	44414be851494d2a247d273a3e1618c8fbee6638
----------------------------
ndbcluster - fix warnings concerning wrong type used in return - init variables only once and mark them const - Remove usage of #ifdef DBUG_OFF where not necessary - move some variables to scope 	7b1c23b044e3dab5f9773b5ffc81ea2f8cd17b6b
----------------------------
ndbcluster - fix warnings by removing unused code 	1fa399a7fd58d43f769fd039fbc9abb76b7b52a4
----------------------------
ndbcluster - move transaction_checks to Thd_ndb where the data it's using is located 	ab88e9fa0960f3a9ec5c264808cb8dba5830760c
----------------------------
ndbcluster - move add_row_check_if_batch_full() to Thd_ndb where the data it's using is located 	93579139e9fd2e4363b77ccfd759987e963dbd8b
----------------------------
ndbcluster - remove unimplemented and unused ha_ndbcluster::records_update() 	c54bd7a33de91ab430553df58c90ef6d58d2302b
----------------------------
ndbcluster - remove unused ha_ndbcluster::no_uncommitted_rows_reset( 	0f373b4039430e63931f3e10cbc7be2623c521cb
----------------------------
"ndbcluster - Implement Thd_ndb::is_slave_thread() which caches the value of thd->slave_thread. - Use Thd_ndb::is_slave_thread in execute_no_commit() and execute_commit() - remove now unnecessary argument ""thd"" to execute_no_commit() and execute_commit() "	5ec03f7ec39d29f35623d17edb04f5da46dd9979
----------------------------
ndbcluster - remove redundant declarations of functions - mark functions used only in ha_ndbcluster.cc as static - remove one extra semicolon 	5dee1768d81a3e6cd00b75d879b329feb94e837b
----------------------------
"Bug#16021884 REPLACE .. SELECT CRASH USING NULL POINTER IN APPLYING_BINLOG - Crash occured in ha_ndbcluster::applying_binlog(),  m_thd_ndb was NULL since the extra(HA_EXTRA_WRITE_CAN_REPLACE) call comes before table has been locked. It's thus not possible to use m_thd_ndb in any function being called from ha_ndbcluster::extra() - Utilize that the new pseudo_slave_mode variable  deletes the rli_fake* when mysqlbinlog is done executing binlog. Thus the thd->rli_fake can realiably be used to determine wheter ""applying_binlog"" should return true. - Move applying_binlog to ndb_thd.h since it's now a THD* only function. - Enable disabled testcase - Improve the usage of applying_binlog() in ndbcluster_commit by reading it's result into a variable named ""ignore_error"" since that is what the function is used for. - Remove unused ndb_mi_get_in_relay_log_statement() "	7ad52d2ef5b5869ec4d84589c541dd59753877b2
----------------------------
"Bug #16248315: mysql_secure_installation cannot verify newly set password with expired flag the mysql command line binary would only turn on the MYSQL_OPT_CAN_HANDLE_EXPIRED_PASSWORD option when the client is interactive. This makes any scripting that tries to deal with password expiration impossible. Added a new mysql command line/config file option to override setting this: --connect-expired-password When this option is supplied it will cause mysql to always connect to the server, but be in ""sandbox"" mode if connecting with an expired password. Updated the mysql_secure_installation script to use the new option. test cases added. "	be7d0cb24f385f3a3430daf364c739487ffcaa4c
----------------------------
ndbcluster - cleanup comments - remove unnecessary variable 	ce5c1240f3e70896783613e542102f1140d7004f
----------------------------
ndbcluster - remove one HAVE_NDB_BINLOG by declaring variable with default value outside of define 	ebf6a3eae1c570628aa05c80ec7763281439b615
----------------------------
"WL#6808 - InnoDB: Deprecate and remove innodb_mirrored_log_groups Throw deprecation message in 5.6 and remove completely in 5.7 When innodb_mirrored_log_groups == 1, WARN and continue with the following error message ""Innodb_mirrored_log_groups is an unimplemented feature and the variable will be completely removed in a future version."" When innodb_mirrored_log_groups !=1, ABORT with the following error message ""Innodb_mirrored_log_groups is an unimplemented feature and the variable will be completely removed in a future version. Using values other than 1 is not supported."" Approved by Marko. rb#1941 "	a8be7c8e15eca352d80a36a7e0ae9788c6f9aca5
----------------------------
- WL#6469: - reverting back changes for temp-tablespace location fix. - here is (hopefully the final) change list: - temp-tablespace default name is ibtmp1 - temp-tablespace would reside in data-dir - user using relative path while specifying innodb_temp_data_file_path can move temp-tablespace from data-dir to other directory. - temp-tablespace will be removed on normal shutdown and on start-up. this also means on crash is user re-starts the server with same configuration temp-tablespace left over by crash will be removed. - user can continue to use multiple-instance on same machine as temp-table now reside in data-dir by default which has to be different for each instance. 	4ea44c7081282d99106a16dba0909c0c12973997
----------------------------
"BUG#16191895- Show relaylog events in non-existing relay-log file=wrong error msg text Description: Doing a show relaylog events at slave with a non-existing relay-log file, reports an error with the text: ""failed: 1220: Error when executing command SHOW BINLOG EVENTS: Could not find target log "" Fix: Changed the error text to- ""Error when executing command SHOW RELAYLOG EVENTS: Could not find target log "	e9e9e12f34d6f704e51c741214e75383a3fc915c
----------------------------
"Merge: 6214d73 dfb9437 Bug #12546953: ""SHOW VARIABLES LIKE 'DATADIR';"" RETURN EMPTY. Null Merge from mysql-5.6 "	372d7259aea6f1c3a3c5d69fc8826e757f72f904
----------------------------
"Merge: c9ab56a ddd3744 Bug #12546953: ""SHOW VARIABLES LIKE 'DATADIR';"" RETURN EMPTY. Merge from mysql-5.5 "	dfb943760b919a8dabcf0ec5b341ba5bdc1013b1
----------------------------
"Bug #12546953   ""SHOW VARIABLES LIKE 'DATADIR';"" RETURN EMPTY. Problem: =========================================================== If mysqld daemon is started without a --datadir option option, and we issue the SHOW VARIABLES LIKE 'DATADIR';SQL command at the client it returns an empty path. This is because mysql_real_data_home_ptr is being reset to NULL by Sys_var_charptr constructor call when the datadir is not given either through configuration file (no-defaults) or through mysqld parameters. Solution: =========================================================== mysql_real_data_home is an array which stores the path of the datadir and mysql_real_data_home_ptr is the pointer to it. The pointer is being set to NULL at the Sys_datadir, which is of type Sys_var_charptr, constructor call. This is because at Sys_datadir call the def_val parameter was being passed with DEFAULT(0) which is now replaced with DEFAULT(mysql_real_data_home). The patch has been tested manually as it is not possible to start mtr without a default config file. "	ddd37445514f91a255fe5ff074f222a14ba723f9
----------------------------
"Merge: f9ef12b cd9182e Bug #12546953: ""SHOW VARIABLES LIKE 'DATADIR';"" RETURN EMPTY. Null Merge from mysql-5.6 "	6214d734803aabe37c01bab760650cbb346d71a2
----------------------------
"Merge: 8850c8e a629b6a Bug #12546953: ""SHOW VARIABLES LIKE 'DATADIR';"" RETURN EMPTY. Merge from mysql-5.5 "	cd9182e631ddc32c3675b4282654f597f77cf6ea
----------------------------
"Bug #12546953   ""SHOW VARIABLES LIKE 'DATADIR';"" RETURN EMPTY. Problem: =========================================================== If mysqld daemon is started without a --datadir option option, and we issue the SHOW VARIABLES LIKE 'DATADIR';SQL command at the client it returns an empty path. This is because mysql_real_data_home_ptr is being reset to NULL by Sys_var_charptr constructor call when the datadir is not given either through configuration file (no-defaults) or through mysqld parameters. Solution: =========================================================== mysql_real_data_home is an array which stores the path of the datadir and mysql_real_data_home_ptr is the pointer to it. The pointer is being set to NULL at the Sys_datadir, which is of type Sys_var_charptr, constructor call. This is because at Sys_datadir call the def_val parameter was being passed with DEFAULT(0) which is now replaced with DEFAULT(mysql_real_data_home). The patch has been tested manually as it is not possible to start mtr without a default config file. "	a629b6afcfbad7e23e59898d30d9f14f5dd09da5
----------------------------
BUG#15965353- RPL.RPL_ROW_UNTIL FAILS ON PB2, PLATFORM= MACOSX10.6 X86_64 MAX Problem: The test was failing on pb2's mac machine because it was not cleaned up properly. The test checks if the command 'start slave until' throws a proper error when issued with a wrong number/type of parameters. After this,the replication stream was stopped using the include file 'rpl_end.inc'. The errors thrown earlier left the slave in an inconsistent state to be closed by the include file which was caught by the mac machine. Fix: Started slave by invoking start_slave.inc to have a working slave before calling rpl_reset.inc Problem: The test file was not in a good shape. It tested start slave until relay log file/pos combination wrongly. A couple of commands were executed at master and replicated at slave. Next, the coordinates in terms of relay log file and pos were noted down followed by reset slave and start slave until saved relay log file/pos. Reset slave deletes  all relay log files and makes the slave forget its replication position. So, using the saved coordiantes after reset slave is wrong. Fix: Split the test in two parts: a) Test for start slave until master log file/pos and checking for correct errors in the failure scenarios. b) Test for start slave until relay log file/pos. Problem: The variables auto_increment_increment and auto_increment_offset were set in the the include file rpl_init.inc. This was only configured for some connections that are rarely used by test cases, so likely that it will cause confusion. If replication tests want to setup these variables they should do so explicitly. Fix: a) Removed code to set the variables auto_increment_increment and auto_increment_offset in the include file. b) Updated tests files using the same. 	a449c0a908c2ff7d7b564adbedf62af35a063ffd
----------------------------
Bug#16342793 MYSQL 5.6 FAILS TO BUILD WITH LIBWRAP SUPPORT ENABLED Before this fix, building a server with HAVE_LIBWRAP failed. The problem is that a variable renaming was missed, causing code to not compile in sql/mysqld.cc However, such failure should have been detected, and in fact was hidden by another problem. In the cmake files, the end user can specify WITH_LIBWRAP. The Makefile then attempts to build a small test program to verify libwrap is available, but silently fail and still produce code that does build, with HAVE_LIBWRAP undefined, producing a binary that does not use libwrap. For the cmake test to pass, both: - the tcpd.h header file - the libwrap library need to be installed. The header and the library are deployed in different packages on some OS distributions, so that having the libwrap runtime alone is not sufficient. As a result, builds where: - the end user ask for WITH_LIBWRAP - the libwrap library *is* installed - the tcpd.h header is missing would build, but not with #define HAVE_LIBWRAP, producing a binary without failures and without libwrap. This fix resolves two issues: - the build break in sql/mysqld.cc has been resolved - the configure.cmake now fails with a hard failure, returning an error, if the end user asked WITH_LIBWRAP but the makefile can not find a working libwrap. The most reliable way to verify how a binary is build is to check: ldd mysqld | grep libwrap to make sure the library is called. Verified manually that the build is now proper. 	cbd46d8ad0a2adad8355e301d52149bf33e3402e
----------------------------
Improve stop cluster functionality for configuration gui 	0d0f3e6b225b0745d925609889c844cde853a916
----------------------------
Bug#16314780 - INNODB.INNODB-WL6445: FAILING ASSERTION: !SRV_READ_ONLY_MODE WITH QC ON Fix a corner case that was missed in bug#14729365. Approved by Inaam over IM. 	c5b5de13cd7047cb6879d9a4bb46fdaa1297941a
----------------------------
Remove config.gypi -- from now on it will be created dynamically after the user runs setup/build 	20d15c8fb9c85b9e53e961c694dd1094ee7ad9e2
----------------------------
Add help text for configuration gui 	7bbe0e46f55d598b7945af50da89210503c4c7ff
----------------------------
WL#6663: Make the MTR binlog suite GTID_MODE agnostic Added missing RESET MASTER to binlog_start_comment test to avoid that a replayed dump of the test current binary log with gtid-mode=on is skipped, since those GTIDs were already logged. 	669caa4cec2c253320c06cde30c16a8871e2cb27
----------------------------
Bug#16200717 WRONG OUTPUT FROM MYSQL_CONFIG --LIBS Post-push fix: we have the 'dtrace' executable on darwin, but no cmake code for actually using it. This resulted in the generation of illegal 'ar r' commands. 	808c28f43a1d18495ce249dd6053828b7b278807
----------------------------
Move main binding.gyp from Adapter/impl up to top level. In adapter_config.js, search for both Release and Debug builds. 	498fbc1f1a4c6904d959ff9e74cc9af8d5193b82
----------------------------
Bug #16295905: ALTER USER PASSWORD EXPIRE WILL CAUSE CRASH WHEN START WITH SKIP-GRANT_TABLES Added a check for skip-grant-tables to ALTER USER. 	a4f9c13ccf5cb0775869c77e87090d7069710b31
----------------------------
Make util thread wait binlog to setup schema_ndb - Fix problem caused by  the ndbcluster threads now starting at the same time which casues util thread trying to access schema_ndb pointer before it has been created by the binlog thread and thus return an ugly error during creation of the ndb_schema table. - In short, ndb util thread should wait until ndb binlog thread has created schema_ndb 	bf9c840e43c82db15cd58a0b7f91b1fc85c2e6ba
----------------------------
"Fix Bug#16249500 INNODB SILENTLY SWITCHES TO 1 BUFFER POOL INSTANCE IF SIZE IS < 1GB Note: the following ratiocination assumes the user will not start mysqld with --innodb-buffer-pool-instances=0. If he does, then we will not emit a warning to him that the value is adjusted to 1 or 8, depending on the buffer pool size. This is a limitation in the MySQL config subsystem - we cannot tell whether the user explicitly set the config knob to its default value or did not specify it at all in my.cnf or command line. Exploit the value of 0 as a default value for innodb_buffer_pool_instances. This way we can tell if the user tried to set it to something != 1 when the buffer pool size is less than 1 GiB. We use the following logic to set innodb_buffer_pool_size: If the size of the BP >= 1 GiB and --innodb-buffer-pool-instances= was not specified on the command line, and this is not win32, then set to 8, if it is win32, then set to buffer pool size / 128 MiB. If the size of the BP < 1 GiB and --innodb-buffer-pool-instances= was not specified on the command line, then set to 1. If the size of the BP < 1 GiB and --innodb-buffer-pool-instances=N was specified on the command line and N != 1, then set to 1 and emit a warning. Reviewed by:	Kevin, Inaam (rb:1984) "	8808190c5755dbe54d696119f541d9b52f536e9f
----------------------------
Bug#16200717 WRONG OUTPUT FROM MYSQL_CONFIG --LIBS Output from 'mysql_config --libs' included: -lpthread -lprobes_mysql -lm -lrt -lssl -lcrypto -ldl For some build configurations, we merge ssl libraries into the client libs. For these builds, -lssl and -lcrypto should not be mentioned. The 'probes_mysql' should also go away (there is no such library) 	6f357e5caf1271d108be24a9af40dce094777cfb
----------------------------
Bug#15977433: --SECURE-AUTH OPTIONS ALLOWS CLIENT TO SEND PASSWORD IN OLD FORMAT (PRE-4.1) Description: Fixed test failures in auth_sec suite. 	a9be2ae64c5252e3486a98a9f8cb78b66d4be31d
----------------------------
Merge: 67504bd 37f67b9 WL#6663: Make the MTR binlog suite GTID_MODE agnostic Due to several problems, the binlog suite is not fully gtid-mode=on compliant. These problems range from the fact that MTR is result file oriented to the fact that some tests not even have binlog turned on ever. This patch fixes the binlog suite so that in the future we might be able to run (most of) it with gtid-mode=on. The tests left out should be those that don't make sense with gtid-mode=on. 	7833d1b27a05fd282830bd77616b48dd17e23cea
----------------------------
WL#6663: Make the MTR binlog suite GTID_MODE agnostic Due to several problems, the binlog suite is not fully gtid-mode=on compliant. These problems range from the fact that MTR is result file oriented to the fact that some tests not even have binlog turned on ever. This patch fixes the binlog suite so that in the future we might be able to run (most of) it with gtid-mode=on. The tests left out should be those that don't make sense with gtid-mode=on. 	37f67b92fe0e170f597bc3d190bf1e6df5dd8c23
----------------------------
Merge: 78e9175 30b02d7 Bug#15977433: --SECURE-AUTH OPTIONS ALLOWS CLIENT TO SEND PASSWORD IN OLD FORMAT (PRE-4.1) Description: Merge from mysql-5.6 to mysql-trunk. 	0f14a6977b9e3c5d5708dc41967808512a7c5f9c
----------------------------
Bug#15977433: --SECURE-AUTH OPTIONS ALLOWS CLIENT TO SEND PASSWORD IN OLD FORMAT (PRE-4.1) Description: If --secure-auth client option is used, client should raise an error if connection is using mysql_old_password stype password hash. However, at present client does not throw any error and if server is not running in secure_auth mode, connection is successfully established. Solution: Introduce a check in client code that makes sure that whenever --secure-auth option is specified on client side, an error is raised if connection is trying to use mysql_old_password hash. 	30b02d79c1493420adcc4ae7651e4cce6c992fe3
----------------------------
Merge: a25e408 a9be2ae Bug#15977433: --SECURE-AUTH OPTIONS ALLOWS CLIENT TO SEND PASSWORD IN OLD FORMAT (PRE-4.1) Description: Merge from mysql-5.6 to mysql-trunk - fixed test failures in auth_sec suite 	4558e2f276746c1abff231e71e5a0689b5c4008a
----------------------------
"A patch for Bug#16035522: THE RANGE OF A TRANSPORT-LAYER PORT"" IS [0, 65535] (UNSIGNED SHORT). The problem was that the 'port' and 'report-port' server options had wrong upper limit (UINT_MAX), while the actual limit is 65535. The patch fixes the upper limit. "	408e7b2cac25cf0734c8c436b4560cbad02fcc5b
----------------------------
Bug #11766693: LOG-SLOW-ADMIN-STATEMENTS AND LOG-SLOW-SLAVE-STATEMENTS NOT DISPLAYED Added both log_slow_admin_statements and log_slow_slave_statements as server system variables, that can now be dynamically set at run time and are now available via SHOW GLOBAL VARIABLES. These behave otherwise in the same way as the --log-slow-admin-statements and --log-slow-slave-statements server command options. There is no need to restart the slave SQL thread for the value of log_slow_slave_statements to be picked up, as the global variable is re-read with each successful event applied by the SQL thread. 	400f131f7844c2f8d397fb2508b81dedcba4aa08
----------------------------
bug#14163155 COM_CHANGE_USER DOESN'T WORK WITH CHARACTER-SET-SERVER=UCS2 IN 5.1 SERVER Problem was caused by the COM_CHANGE_USER parsing code. That code ignored character set number passed in COM_CHANGE_USER packet. Instead character_set_client values was used. User name was not converted at all. Fixed by using passed character set number to convert both db and user names. If COM_CHANGE_USER does not contain character set number then character_set_client is used to convert both names. 	f7285a71d0310bbb867d969d58b01b992e9f88f6
----------------------------
ndbcluster - remove redunant semicolons 	263c3b605b9ca73c127e4b5d6d570328d1e0adb6
----------------------------
ndbcluster - remove usage of WITH_NDBCLUSTER_STORAGE_ENGINE in ha_ndbcluster code, thus reserving the few usages of that to be used in MySQL Server 	4f48d5f21705fa542aa8b449055e525238e0cb52
----------------------------
Bug#16287411 MYSQLD CRASH WHEN INNODB_API_ENABLE_MDL IS OFF commit_try_rebuild(): Instead of letting the assertion fail, return ERROR 1205 (HY000): Lock wait timeout exceeded; try restarting transaction to the ALTER TABLE statement if another thread is accessing the table (bypassing the MySQL meta-data locking). Approved and tested by Jimmy Yang 	bbb17843d6a09b509f839ae2cb44d1cee28bcaef
----------------------------
Bug#14606334 INNODB UNABLE TO MERGE IBUF INTO PAGE Bug#14774779 CRASH RECOVERY FAILED, UNABLE TO COMPRESS A PAGE Whenever we successfully reorganize or compress a compressed secondary index page, ensure that the IBUF_BITMAP_FREE bits will be updated accordingly. Also, slightly change the definition of IBUF_BITMAP_FREE in compressed pages. Instead of considering the free space on the uncompressed page *after* reorganize, use the *before* value, so that a buffered insert can be merged without reorganizing or even recompressing the page. btr_page_reorganize_low(), btr_page_reorganize(), btr_cur_update_alloc_zip_func(), btr_cur_insert_if_possible(), page_cur_tuple_insert(), page_cur_rec_insert(), page_cur_insert_rec_zip(), page_copy_rec_list_end_to_created_page(), page_copy_rec_list_end_no_locks(), page_copy_rec_list_end(), page_copy_rec_list_start(), page_move_rec_list_end(), page_move_rec_list_start(): Note that the caller should keep IBUF_BITMAP_FREE up to date. btr_page_split_and_insert(): On failure, reset the IBUF_BITMAP_FREE bits on both pages. btr_cur_optimistic_delete_func(): Do not update the IBUF_BITMAP_FREE on compressed pages any more, because according to the updated definition, it will not increase by purging records without reorganizing the page. btr_cur_optimistic_insert(), btr_cur_update_in_place(), btr_cur_optimistic_update(), btr_cur_pessimistic_update(): After a failed attempt to modify a compressed page, reset the IBUF_BITMAP_FREE bits, because we may already have reorganized the page. btr_cur_update_in_place(), btr_cur_optimistic_update(): Implement the flag BTR_KEEP_IBUF_BITMAP for suppressing the IBUF_BITMAP_FREE updates, so that btr_cur_pessimistic_update() can invoke btr_cur_compress_if_useful() without violating the latching order (further pages cannot be latched after latching a change buffer bitmap page). ibuf_index_page_calc_free_zip(): Consider the maximum insert size on the uncompressed page without reorganizing the page, so that ibuf_insert_to_index_page_low() will succeed without reorganizing or recompressing the page. Fix a recovery problem in innodb_log_compressed_pages=OFF and reintroduce the parameter innodb_log_compressed_pages=OFF (ON by default). Also, whenever a page becomes empty, create the page from the scratch. This should hopefully generate less redo log, and it will reduce the cases where we are compressing garbage. This is also necessary in order to avoid an infinite page split with the rest of this patch. page_compression_level: Renamed to page_zip_level. page_log_compressed_pages: Renamed to page_zip_log_pages. innodb_compression_level_update(): Remove. Declare page_zip_level directly with a compatible data type. page_is_empty(): A new predicate, similar to page_is_leaf(), for checking PAGE_N_RECS == 0 without adjusting the endianness. page_has_garbage(): New predicate for checking if PAGE_GARBAGE is nonzero. page_create_empty(): New function, to replace a B-tree page with an empty page. page_create_zip(): Add a parameter for PAGE_MAX_TRX_ID, so that we can recreate a page without zeroing out the field. This field only needs to be nonzero on nonempty secondary index leaf pages. page_cur_insert_rec_zip_reorg(): Remove (merge to the only caller). page_cur_insert_rec_zip(): Take 'cursor' as a parameter. When not in crash recovery (applying redo log), modify the behaviour if there is not enough room in the page modification log (that is, page_zip_available() fails). If the page is logically empty, invoke page_create_zip() to physically empty the page. Otherwise, if the page contains no garbage and no modification log, give up. Otherwise, if innodb_log_compressed_pages=OFF, first do btr_page_reorganize_low() and only then attempt an insert followed by compressing the whole page. If innodb_log_compressed_pages=ON, insert into the uncompressed page only, and then invoke page_zip_reorganize(). In this way, whenever we have to recompress, we will always end up with a reorganized page with 1 or 0 record in the page modification log. page_cur_delete_rec(), page_delete_rec_list_end(), page_delete_rec_list_start(): If the page would become logically empty, invoke page_create_empty() to physically empty it. btr_page_reorganize_low(): Replace the 'block' parameter with 'page_cur', and position the cursor on the same record, so that the caller will avoid the repositioning. Do not write a redo log record unless the operation succeeds. btr_cur_insert_if_possible(): Pass the cursor to btr_page_reorganize(), avoiding the costly page_cur_search() call. btr_cur_optimistic_insert(): After a failed page_cur_tuple_insert(), do not attempt page reorganize on a compressed page. The page_cur_tuple_insert() will already have attempted it, in vain. On uncompressed pages, pass the cursor to btr_page_reorganize() to avoid the page_cur_search() call. btr_cur_update_alloc_zip_func(): Renmed from btr_cur_update_alloc_zip(). Make offsets a debug-only parameter. Replace 'block' with 'cursor'. If there is not enough place, reorganize the page (to get rid of garbage in the PAGE_FREE list) rather than just recompress it. Give up if there is neither garbage in the PAGE_FREE list nor any modification log. btr_cur_update_in_place(): Make 'offsets' non-const, because btr_cur_update_alloc_zip() can now change the rec_offs_validate() information when it is reorganizing the page. NOTE: If we were free to change the redo log format, we could do the following when there is not enough place in the modification log to log an insert or update: * Reorganize the uncompressed page only. * Make the modification on the uncompressed page only. (These would need new redo log entry types.) * Compress the entire page. Redo logged as MLOG_ZIP_PAGE_COMPRESS_NO_DATA. If the compress operation fails, none of the redo log must be written, and we will have to restore the uncompressed page from the compressed page and refuse the operation. rb#1761 approved by Inaam Rana 	78a9e433f22aab74acb9bb7c7e7bf65f57e4f4de
----------------------------
ndb - adding configuration parameter DefaultHashmapSize a configuration parameter DefaultHashmapSize is introduced in api/mysqld and ndbd section of config.ini 	a92a9584b1eccd5232fcb53f0434c1f337da5000
----------------------------
ndb - test TestNdbApiConfig remove function cleanup on failure since on failure the test environment are reset anyway 	312deff575bfffd605e42371bdfcdd7b756e6414
----------------------------
ndb - Create large hashmaps in 7.0 and 7.1 This patch adds a build time flag to make 7.0 and 7.1 to create large hashmaps (3840 buckets) as 7.2 do. That make it possible to have more even distribution of data than possible with only 240 buckets in hashmaps in some configuration. Benefits, 1) bigger hashmaps implies more evenly distributed data if the number of partitions does not divide 240 evenly. 2) make it possible to downgrade from 7.2.7 and above even if tables or indexes are created or altered so they use large hashmaps. Drawbacks, 1) it is a new build time flag, so it needs a custom rebuild to be enabled. 2) will not be possible to upgrade or downgrade to release builds of 7.0 and 7.1 if the new flag is used How to use When building use one of the following to enable large hashmaps: a) ./configure --with-ndb-ccflags=-DNDB_LARGE_DEFAULT_HASHMAPS b) storage/ndb/compile-cluster --with-ndb-ccflags=-DNDB_LARGE_DEFAULT_HASHMAPS c) make NDB_EXTRA_FLAGS=-DNDB_LARGE_DEFAULT_HASHMAPS to verify that the build creates large hashmaps (3840 entries instead of 240), start an initial cluster and do ndb_show_tables, then a hashmap named DEFAULT-HASHMAP-3840-NN should show up, where NN is the number of nodegroups. 	f12d7ad337596dc4a110e18aeeda6fa9d16f6d65
----------------------------
ndbcluster - fix warnings in ndbcluster_binlog_log_query - add comment describing functions purpose - remove unnecessary variables and assignments - remove unused code 	65e98ffc23ca6412c4b382d9391d2eb21ab0d65a
----------------------------
WL#6045 Improve Innochecksum Done Implementation:: R01 - It shall be possible to specify the checksum algorithm to innochecksum utility. R02 - innochecksum shall provide option to rewrite the current checksum using the specified algorithm. R03 - innochecksum shall provide option to rewrite checksum even if the current checksum is invalid. R04 - innochecksum shall allow to configure the maximum checksum mismatch allowed before terminating the program. R05 - innochecksum shall operate on multiple tablespace files. R06 - innochecksum shall operate on multiple files in the same tablespace. R07 - innochecksum shall operate on files greater than 2GB. R08 - innochecksum shall work online on a running database. R09 - Innochecksum shall chart out page type summaries for each page in the filespace, and would dump the info on standard output(stdout) or standard error(stderr) as it goes. R10 - Debug option for innochecksum tool shall change & must work similar as mysqld debug option works. 	67a739b5837968a00e6fd54fa23b5b5cbe83c261
----------------------------
Add host_info/config.h.in as config.h.cmake which is not in .bzrignore 	3c12da1c1dccee0d9edcc0d230f4bfdb2709375e
----------------------------
BUG#16196591 - CLIENTS CANNOT CONNECT TO MYSQL PROBLEM: When large number of connections are continuously made with wait_timeout of 600 seconds for  some hours, some connections remain after wait_timeout expired and also new connections get struck under the configuration and the scenario reported in bug#16196591. FIX: The cause of this bug is the issue identified  and fixed in the BUG#16088658 in 5.6.Also LOCK_thread_count contention issue fixed in BUG#15921866 in 5.6 need to be in 5.5 as well. Since the issue is not reproducible, it has been verified at customer configuration the issue could not be reproduced after a 48-hour test with a non-debug build which includes the above two fixes backported. 	97cbe84f4462bc58d1249cdc45115c3f12e2e55c
----------------------------
Adapt MySQL Cluster to 5.7 - Include log.h in a few places since that file is no longer implicitliy included in the other header files used by ndbcluster - Move get_ndb_blob_values into the only file where it's used, should be made part of Ndb_binlog_component class eventually 	e7427920e9acec82650aee694418e9ec467b1d86
----------------------------
"Bug#16210894 SERVER_ID IN INFORMATIONAL MESSAGE WRAPS DUE TO WRONG PRINTF SPECIFIER Problem: ======= With a slave having large server-id of (e.g. 4294967291), the message printed on master when slave starts binlog dump and log_warnings>1: [Note] Start binlog_dump to slave_server(-5), pos(test-bin.000002, 107) Analysis: ======== As per the documentation server_id can be from 0 .. 4294967295. The server_id is declared as ""uint32"" type. But during printing this value the format specifier is given as ""%d"" which is incorrect. ""%d"" is only good enough for signed int output. Fix: === As part of fix ""%d"" has been replaced with ""%u"". "	72af8c87775025a7779be6f0162dfa5c01dd9415
----------------------------
fix Bug #15907954 - SETTING INNODB_MIRRORED_LOG_GROUPS = 2 LEADS TO SERVER CRASH rb://1888 approved by Marko 	160ec28570d579eab1d6b2b72db6b0842c57ac20
----------------------------
In adapter_config.js, detect the type of build and set build_dir accordingly. 	0b36e1f87c4b4768a72b4818e65556e53e2f8f0b
----------------------------
Bug#16169638 INNODB DEADLOCK DETECTION RETURNS FALSE NEGATIVES IN SOME CASES There is a bug in the positioning of the iterator on the first lock and the next lock. Move !srv_read_only_mode assertion to the caller, There cannot be any lock waits when InnoDB is running in read only mode. Approved by Jimmy Yang rb#1876. 	0c8390b3d67e307d1ff08ec42960556bf928568d
----------------------------
Bug#16183892 - INNODB PURGE BUFFERING IS NOT CRASH-SAFE With innodb_change_buffering enabled, Innodb buffers all modifications to secondary index leaf pages when the leaf pages are not in buffer pool. Crash InnoDB while an IBUF_OP_DELETE is being applied. Restart and note that the same record can be applied again which may lead to crash. Mark the change buffer record processed, so that it will not be merged again in case the server crashes between the following mtr_commit() and the subsequent mtr_commit() of deleting the change buffer record. Testcase: No testcase because it is difficult to get the timing right with the two asyncronous task purge and change buffering Approved by Marko. rb#1893 	239cdbfdfe6163994ba76c8d82d637cf818fd202
----------------------------
Bug#16227539 INCORRECT CHECK FOR INNODB_READ_ONLY IN ALTER TABLE At the start of ha_innobase::prepare_inplace_alter_table() and ha_innobase::inplace_alter_table() there is a check for srv_read_only_mode. If InnoDB is in read-only mode, these methods would return a successful status and do nothing. But, the srv_read_only_mode=true should have been blocked already in ha_innobase::check_if_supported_inplace_alter(). Replace the bogus conditions with debug assertions similar to that in ha_innobase::commit_inplace_alter_table(). 	784947cdd72e8795007c763faaca6a7c1fbda06e
----------------------------
"BUG#11745049 - LOG_ERROR VARIABLE IS BLANK WHEN NOT EXPLICITLY STATED IN MY.CNF DESCRIPTION: log_error global variable shows empty string ("""") if not specified at server startup or in configuration file. This is reported for *nix platform. On windows, it shows ./HOSTNAME.err as its output. ANALYSIS : Error output on *nix platforms is by default STDERR. On Windows it is by default in file, and the default file is ./HOSTNAME.err. If both --log-error and --console is used on windows, the value of log_error is shown but the output is directed to stderr. FIX : Changed the value of log_error variable to ""STDERR"" whenever output is directed to the STDERR. "	e7d8c08fd4965362280c518241f598b10d7668ab
----------------------------
Merge: 0129c3b bfbdbc7 Bug #11752803  SERVER CRASHES IF MAX_CONNECTIONS DECREASED BELOW CERTAIN LEVEL Merging from 5.6 to trunk 	02e1f6744c43863ca0cd7c67f6c3e1edf270beef
----------------------------
Merge: d8419b1 468831f Bug #11752803  SERVER CRASHES IF MAX_CONNECTIONS DECREASED BELOW CERTAIN LEVEL Merging from 5.5 to 5.6 	bfbdbc792634abb1d8f9e313dcedd5b818b14c76
----------------------------
Merge: e0c3978 e998798 Bug #11752803  SERVER CRASHES IF MAX_CONNECTIONS DECREASED BELOW CERTAIN LEVEL Merging from 5.1 to 5.5 	468831f393ac3b97a21ed758d820b4dc5fa327eb
----------------------------
"Bug #11752803  SERVER CRASHES IF MAX_CONNECTIONS DECREASED BELOW CERTAIN LEVEL Problem description: mysqld crashes when we update the max_connections variable to lesser value than the number of currently open connections. Analysis: The ""alarm_queue.max_elements"" size will be decided at the server start time and it will get modified if we change max_connections value. In the current scenario the value of ""alarm_queue.max_elements"" is decremented when the max_connections is set to 2. When updating the ""alarm_queue.max_elements"" value we are not updating ""max_used_alarms"" value. Hence, instead of getting the warning ""thr_alarm queue is full"" it is ending up in asserting the server at the time of inserting new elements in the queue. Fix: the fix is to dynamically increase the size of the alarm_queue. In order to do that, queue_insert_safe() should be used instead if queue_insert(). "	e99879824a3ddb1f97ce05de3fe003adcc5b48ee
----------------------------
"Bug#16061982:REPLICATION BETWEEN A LINUX MASTER AND WINDOWS SLAVE, WITH MIXED CASE BREAKS Problem: ======= Replication between a Linux master and Windows slave, with mixed case database/table names, fails after a replicated table is opened locally on the slave. ""FLUSH TABLES"" command needs to be issued on the salve to see the latest updates that are applied on slave. The master and the slave should have the following case settings. Linux master: lower_case_table_names=0 Windows slave: lower_case_table_names=2 Analysis: ======== When ""lower_case_table_names"" is set to 1 or 2 in a general scenario without replication the database names and the table names are converted to lower case. The following two function check for ""lower_case_table_names>0"" and convert the db and table name to lower case. ""check_and_convert_db_name"" and ""st_select_lex::add_table_to_list"" But when replication is enabled dabase names and table names are reassigned once again as per the events that are received from the binlog without checking for ""lower_case_table_names=2"". For example if the database name is ""TestME"" when the table is opened locally on windows a new table cache entry is created ""testme.testnumberone"" and when opened through replication another table cache entry ""TestME.testnumberone"" is created. Because of this problem users will not be able see the latest updates. ""Flush Tables"" flushes both the cache entries hence they are able to see the updates. Fix: === Existing code checks only for ""if (lower_case_table_names == 1)"". This has been replaced with ""if (lower_case_table_names)"". "	f5d4acdceef6780b0871b060bb2219f3af08a48f
----------------------------
Merge: d603fbf 9cae601 - WL#6560: InnoDB: separate tablespace for innodb-temp-tables. - enable separate tablespace for temp-tables. - as part of overal temp-table optimization we are limiting logging and so during crash-recovery for complete cleanup we need this separate tablespace. - semantics or behavioral changes enabled: - temp-tablespace is configurable using cnf using innodb_temp_data_file_path. all semantics are same as innodb_data_file_path except no use of raw device. - temp-tablespace get dynamically generate space-id. - temp-tablespace is always re-created on server start. - non-compressed temp-tables resides in temp-tablespace. compressed temp-tables continue to operate as is. Test-Case: innodb_wl6560, innodb_wl6560_debug, innodb_wl6560_1. Testing: pb2 on mysql-trunk-stage found passing. Approved by: Sunny/Jimmy (rb#1472). 	8e4e576ed4124c95404be112d0f8b4c4fd73cb9c
----------------------------
"Merge: f3ac163 f653f38 Bug#16014394:  DEFAULT-AUTHENTICATION-PLUGIN NOT SETTING ""OLD_PASSWORDS"" IN SYNC WITH PLUGIN Description: Merge from mysql-5.6 to mysql-trunk. "	6cef10e24a8a7eceb275f2aef3275cca29b25e66
----------------------------
"Bug#16014394:  DEFAULT-AUTHENTICATION-PLUGIN NOT SETTING ""OLD_PASSWORDS"" IN SYNC WITH PLUGIN Description: Server option --default-authentication-plugin should accept either ""mysql_native_password"" or ""sha256_password"" as valid values. However, at present server accepts any value and sets default_authentication_plugin to point to it. Value of old_passwords is updated only if plugin name matches with ""sha256_password"". Solution: Fix is to make sure that server accepts one of the two valid values or raise an error. "	f653f38d4910a668836f4b2125f559343849c0cf
----------------------------
Bug#11762107 HAVE_MLOCK NEVER SET BY CONFIGURE, AND IF SET BREAKS COMPILATION Before this fix, mysys source code contained memory locking apis: - my_malloc_lock - my_free_lock The implementation for these api was in fact never built, as the code had a build break for 64 bit platforms since it was last changed, around 2007-05-10. The fix is to simply remove this dead code. See the bug report for further comments. Other components may use mlock() and mlockall() directly, so the cmake checks for HAVE_MLOCK and HAVE_MLOCKALL are preserved. 	3b10b741796e473f242efffce3b4828495a2a468
----------------------------
Merge: 5b58fe4 46c3077 Bug #15985752  --CHARACTER-SET-SERVER OPTION CAN SET UNSUPPORTED CLIENT/CONNECTION CHARSET Problem was caused by init_common_variables() function which uses --character-set-server value to assign default_charset_info global variable and 5 charset variables in global_system_variables structure. Fixed by checking if charset value is acceptable for client-related variables. is_supported_parser_charset() function used for the check. Additional check implemented in thd_init_client_charset() - if client charset is not supported then error is generated. parse_client_handshake_packet() fixed to use global_system_variables.character_set_client instead of default_charset_info when client does not provide its character set 	5e5b43b4b979c3eb81029a2aa9d0d7d600227127
----------------------------
Bug #15985752  --CHARACTER-SET-SERVER OPTION CAN SET UNSUPPORTED CLIENT/CONNECTION CHARSET Problem was caused by init_common_variables() function which uses --character-set-server value to assign default_charset_info global variable and 5 charset variables in global_system_variables structure. Fixed by checking if charset value is acceptable for client-related variables. is_supported_parser_charset() function used for the check. Additional check implemented in thd_init_client_charset() - if client charset is not supported then error is generated. parse_client_handshake_packet() fixed to use global_system_variables.character_set_client instead of default_charset_info when client does not provide its character set 	46c3077620a4201e723de59b3b73a9d897169252
----------------------------
Bug#14629979 - INNODB_SYNC_ARRAY_SIZE SHOULD NOT BE CONFIGURABLE AT RUNTIME The variable should be read-only. The data structures are allocated on startup and destroyed on shutdown. They cannot be changed dynamically. Approved by Calvin on IM. 	0cf10711de072902c628b7edca3a1a81cee98d36
----------------------------
Bug#16038656 - INNODB_FT_USER_STOPWORD_TABLE BECOMES CORRUPT, CAUSES SERVER CRASH Bug#16051857 : REPLICATION FAIL TO START AFTER PROVISIONING SERVER FROM BACK DATADIR WITH GTIDS Bug#16066243 PB2 FAILURES I_MAIN.BUG15912213 AND I_MAIN.CTYPE_UTF8 FOR MACOSX10.6 FOR 5.1 Merged from 5.6 to 5.6.10-release 	f7b3a5eeb1c9d1a9dc69121f58f6f45dc6051d88
----------------------------
BUG#16066150 - SIGNAL_WITH_VIO_SHUTDOWN IS ALWAYS SET IN CMAKE DESCRIPTION: SIGNAL_WITH_VIO_SHUTDOWN is not used as it is hard-coded to 1 in CMake configuration, hence its existence is of no merit. FIX : All references to SIGNAL_WITH_VIO_SHUTDOWN has been removed. 	5ae2bb44b354291650783ef4d4276393a3e419b3
----------------------------
Bug#16038656 - INNODB_FT_USER_STOPWORD_TABLE BECOMES CORRUPT, CAUSES SERVER CRASH rb://1789 Approved by Sunny. The session level dynamic variable stores an char*, but memory that this char* point to has been freed. A flag PLUGIN_VAR_MEMALLOC is provided for this situation. For string variable of plugin, sql_plugin manager the memory allocation and free by itself, so we don't need to manage memory in function innodb_session_stopword_table. So the solution is set the PLUGIN_VAR_MEMALLOC flag for ft_user_stopword_table, and remove function innodb_session_stopword_table. 	9c64483d2c99d458edb8c02b1d70bb9713b81fb5
----------------------------
Bug#16051857 : REPLICATION FAIL TO START AFTER PROVISIONING SERVER FROM BACK DATADIR WITH GTIDS Problem ========= 1) Dump thread always sends a Fake rotate event to the slave to make it update to the new binary log file. This is irrespective of the explicit ROTATE event on binary log. 2) In cases, where an explicit ROTATE event is not written at the binary log end and if the last event is skipped, dump thread sends a HeartBeat event just before sending a FORMAT DESCRIPTION EVENT of the next  binary log (Due to fix for Bug#14775893). If there is an explicit ROTATE event, the dump thread reads and sends it to the slave making it an unskipped event. 3) If a slave IO received *only* a fake rotate event, it's position is updated to the latest binary log file. Next, Slave IO expects a Format description event to update the binary log version. Instead it gets a Heartbeat event of the previous binary log file. 4) The following check in the rpl_slave.cc:queue_event() succeeds: if (mi->get_mi_description_event()->binlog_version < 4 && event_type != FORMAT_DESCRIPTION_EVENT /* a way to escape */) This is because, whenever a rotate event happens as in step 3), a default format  description event with a binary log version 3 is created in rpl_slave.cc:process_io_rotate(). A next Format description event should update it to 4. 5) Since the check in 4) succeeds because of a Hearbeat event, the slave IO thinks that binary log is of old version and goes into queue_old_event().  However, this code path doesnot recognise Heartbeat event  in rpl_slave.cc:queue_binlog_ver3_event() and IO stops  further reading  of events. Solution ======== 1) Send last skippped group heartbeat event only if the event type is not a Format description event. This ensures that Format descrption event is the first event of the binary log file to be sent to the slave and the last skipped heartbeat always corresponds to the latest binary log file. 2) This patch also prevents a possible but harmless and redundant Heartbeat event corresponding to the EOF of the binary log file. 	b955b844804a153b08c23019bec8628333d766ac
----------------------------
Merge: 1122abd 15b29e5 Correct year range in 'mysql_config_editor' test result file 	2ff59699732a57ab85c8ac315ce767acee7d17b0
----------------------------
Correct year range in 'mysql_config_editor' test result file 	15b29e569724f0279974c9223a5e6be9dcfa5dcd
----------------------------
Bug#16060864 SEGMENTATION FAULT IN PERFORMANCE_SCHEMA WITH HISTORY SIZE 0 Before this fix, configuring the server with: - performance_schema_events_waits_history_size=0 - performance_schema_events_waits_history_long_size=0 could cause a crash in the performance schema. These settings to 0 are intended to be valid and supported, and are in fact working properly in mysql 5.6 and up already. This fix backports the code fix and test cases from mysql 5.6 to the mysql 5.5 release. 	ea8135d8df7b8da2701956640fa4251c7533dbbb
----------------------------
Merge: 33e2f10 2922419 BUG#14792410 - INCONSISTENCY ABOUT MESSAGEFILE PATH NAME STYLE IN MTR ON ALL PLATFORMS DESCRIPTION: Errors are printed in the Server logs when a directory containg errmsg.sys is specified directly through the --lc-messages-dir or --language parameter. FIX : Improved the messaging and changed sql_print_error() to sql_print_warning(). 	c13923d59b3d47b9a236de1c7a9f7923c28b3f0b
----------------------------
BUG#14792410 - INCONSISTENCY ABOUT MESSAGEFILE PATH NAME STYLE IN MTR ON ALL PLATFORMS DESCRIPTION: Errors are printed in the Server logs when a directory containg errmsg.sys is specified directly through the --lc-messages-dir or --language parameter. FIX : Improved the messaging and changed sql_print_error() to sql_print_warning(). 	2922419233b6c4e0dd195d83602970e63b5fea06
----------------------------
- WL#6560: - updated code to move default location of temp-tablespace from data-dir to tmp-dir. - given that tmp-dir can take multiple value, system-temp-tablespace will always reside in 1st tmp-dir only. this is non-configurable. 	1de790cff31957e53285115541227ab0949b3692
----------------------------
- WL#6560: - normal shutdown: remove temp-tablespace. - abort during init: remove temp-tablespace. (this generally can happen due to some wrong/invalid startup options). - crash: DBA need to remove the file manually (unless server is re-started with same configuration that will remove the file during server-startup). 	16dd0399b5830762a1bbe8aae4bcfb3bce7b4b8d
----------------------------
Bug 15851247 MYSQL_CONFIG_EDITOR Problem: mysql_config_editor does not support providing socket and port as a part of login arguments. It creates problems if multiple instances of server are running on different ports and sockets. Solution: port and socket are also added as command line options just the way other options are implemented. 	1ca02fa721d292cbb421ef72a3b7aba66ddfe7a2
----------------------------
Fix mysql_config_editor test after new copyright year 	cb82c1ee41b93fd80dc36a893b7b4a3a0f76a886
----------------------------
Remove the MCP for problem with ha_binlog_end not being called in embedded server - don't fiddle with ndbcluster_end and ndbcluster_binlog_end...yet 	3bddfd73defd3e15b0d0b0073476e9db5fb85762
----------------------------
"Fix Bug#13463493 INNODB PLUGIN WERE CHANGED, BUT STILL USE THE SAME VERSION NUMBER 1.0.17 Now that InnoDB/InnoDB Plugin is no longer separately developed and distributed from the MySQL server it does not need its own version number. Thus use the MySQL version instead. ""Removing"" the version altogether is not feasible because the config variable 'innodb_version' cannot be removed in GA branches. Reviewed by:	Marko (rb#1751) "	031e6c47bf12d8d9204d49aee28a5249894edb8e
----------------------------
Bug #14748587 INNODB.INNODB_BUG11766634 FAILING ON DAILY-5.6 The test case innodb_bug11766634.test has been written with the assumption that innodb_file_per_table is OFF, which was the default value for versions <= 5.6.5.  But the default value of innodb_file_per_table is ON for MySQL versions >= 5.6.6.  So this configuration variable is explicitly set to OFF in the test case. 	9584f32941f447d642d9f676c2fcabe2c09656ba
----------------------------
Bug#14258884 RPL.RPL_HEARTBEAT_BASIC FAILS SPORADICALLY ON PB2 Bug#13627066 RPL.RPL_DEADLOCK_INNODB FAILS ON PB2 SPRADICALLY Sporadic and long time standing mismatch at the test run include/start_slave.inc SET @@global.event_scheduler=1; -Number of received heartbeat events: 0 +Number of received heartbeat events: 1 was caused by a incorrect assumption the no hearbeat event should be sent in the context of that test's snippet. In fact, there is no guarantee that empty binlog status won't last over the hearbeat period. Even though period of scheduled by the server scheduler UPDATE queries is 1/5 th of the heartbeat period, the actual time in between of two successive bin-logging actions can last as long as the HB period. That's what PB run proves in practice. Fixed with removing ineffecient piece of the test. Bug#13627066 RPL.RPL_DEADLOCK_INNODB FAILS ON PB2 SPRADICALLY A possible reason of SQL thread to fail to increment slave_transaction_retries status is a failure to start the slave threads that went unnoticible thanks to unblocking style of the slave start. combined with also small of innodb_lock_wait_timeout. That could allow a race of the SQL thread retrying after timeout and the mtr user thread counting through polling in a interval. Attempted to fix with correcting the start slave. A separate failure in this test that radomly happens on PB near source include/wait_for_slave_sql_error.inc; is addressed with adding a debug print-outs via rpl_debug=1. Extra info will be necessary to actually tackle this issue (to be repoted once the extra info will be available in PB saved test logs). 	3a159d9f975174826bab6cc1cc6fac6a1b1b079a
----------------------------
Bug #14748587 INNODB.INNODB_BUG11766634 FAILING ON DAILY-5.6 The test case innodb_bug11766634.test has been written with the assumption that innodb_file_per_table is OFF, which was the default value for versions <= 5.6.5.  But the default value of innodb_file_per_table is ON for MySQL versions >= 5.6.6.  So this configuration variable is explicitly set to OFF in the test case. 	42cb65b52ff4c6a131c480a0d7d66b7c42bc6185
----------------------------
"Bug#15996571: WARNING RECOMMENDS TO USE A DEPRECATED OR NON-EXISTING OPTION The problem was that if the startup options --log-slow-admin-statements, --log-queries-not-using-indexes or --log-slow-slave-statements were used without specifying --slow-query-log, a warning message referring to the removed ""--log_slow_queries"" would be given instead of using the current name ""--slow-query-log"". This patch fixes the problem by updating the warning message. The patch also fixes similar problems with warning messages given if --general-log-file or --slow-query-log-file are used with --log-output=table (and not =file). "	aa30c48c0a72b941c38cbae54106bfedbe8dcfdd
----------------------------
Bug#14774779 CRASH RECOVERY FAILED, UNABLE TO COMPRESS A PAGE rb://1721 approved by: Marko Makela The bug was introduced by WL6344 in the innodb_log_compressed_pages part. If we don't log compressed pages then we need to do compression during recovery which requires that the uncompressed pages must be deterministically same during recovery but they can differ in garbage bytes potentially causing compression during recovery to fail. This bug will manifest itself only when recovery is done in multiple batches of redo apply. This workaround is to take away innodb_log_compressed_pages option. Note it is not a full revert of WL6344 	2b155007f2ff07ff7fa2e57cc423f6be29780fce
----------------------------
BUG#15907706 : RPL.RPL_INSERT_ID TEST FAILS ON SOLARIS PLATFORM IN PB2 Problem : rpl.rpl_insert_id fails on PB2 everyday and only on solaris platform. The problem was that the thread_stack value available for the test seems to be less when the test executes on the solaris machines. On other platforms the default value 196608 for 32 bit machines and 262144 bytes for 64 big machines seems to be enough. But on linux the error reports that the the thread_stack value required is beyond the specified limit on the respective platforms. Fix - The problem is fixed by passing the PB_HOST_SPECIFIC_MYSQLD_ARGS host specific arguments to the slave. 	85638d6207ae0484b68266d6a9e04bfed3a98d5d
----------------------------
Merging from 5.5 to 5.6 for bug#11761752 In addition to changes from 5.5, the fix for 5.6 contains additional checks for InnoDB option innodb_buffer_pool_filename. This option does not exists in 5.5 or 5.1. 	29a378b21ca24d6f471ae1d9be6211bc53244a1c
----------------------------
bug#11761752: DO NOT ALLOW USE OF ALTERNATE DATA STREAMS ON NTFS FILESYSTEM. File names with colon are being disallowed because of the Alternate Data Stream (ADS) feature of NTFS that could be misused. ADS allows data to be written to alternate streams of a normal file. The data in alternate streams cannot be seen by normal tools on Windows (explorer, cmd.exe). As a result someone can use this feature to hide large amount of data in alternate streams and admins will have no easy way of figuring out the files that are using that disk space. The fix also disallows ADS in the scenarios where file name is passed as some dynamic variable. An important thing about the fix is that it DOES NOT disallow ADS file names if they are not dynamic (i.e. if the file is created by using some option that needs local access to the MySQL server, for example error log file). The reasoning is that if some MySQL option related to files requires access to the local machine (it is not dynamic), then user can very well create data in ADS by some other means. This fixes only those scenarios which can allow users to create data in ADS over the wire. File names with colon are being disallowed only on Windows. UNIX (Linux in particular) supports NTFS, but it will not be a common scenario for someone to configure a NTFS file system to store MySQL data on Linux. Changes in file bug11761752-master.opt are needed due to bug number 15937938. 	233330773398bd75d65c06c8e3dc533e32ba165c
----------------------------
Bug#15980626 POSSIBLE REPLICATION PERFORMANCE DEGRADATION THROUGH RLI->FLUSH_INFO(TRUE) Problem:sync_relay_log_info was being ignored when transactional tables were updated. No matter what number was set, relay log info file was synced upon committing. This was causing the performance degradation. Fix: Sync(or update relay log info table) after each transaction should happen only when both data and relay log info are stored in transactional tables. Only this scenario will guarantee crash safety. 	696b66dc3918a6e794bd383af3628a741c88fe0e
----------------------------
Merge: d18db5f a8eaf05 Bug#14494893 : INNODB_FILE_PER_TABLE DOES NOT PERMIT ON/OFF AT STARTUP Details : Merge : 5.6->trunk 	61d6c6cc1ff4c500d617e10fb92606d31a4addcf
----------------------------
Bug#14494893 : INNODB_FILE_PER_TABLE DOES NOT PERMIT ON/OFF AT STARTUP Details : - During server initialization, when boolean values 1/true OR 0/false are given, then they were accpected but if on/off were given then they were being considered wrong. Reason : - During server initialization, while checking for the valid values for boolean parameters, only 1/true AND 0/false were being checked. Solution : - Added code to check for On/Off and if found, make them valid values. Test case innodb_file_per_table_basic.test is already there to check this parameter. So no new test case required. I just added --innodb_file_per_table in master.opt files with value On (Default) so that at startup this fix could be verified. 	a8eaf0503f12d7c84122590297913c3589a8b138
----------------------------
ndbcluster - move NDB_ALTER_DATA into implementation to avoid exposing unnecessary implementation details in the header files 	f5f2864649e6ef79fe9e8a8040500f2ec62d9116
----------------------------
BUG#15971607: BINLOG IS DISABLED WHEN SERVER IS STARTED WITH --SKIP-INNODB When server was started with both --log-bin and --skip-innodb, binlog was incorrectly disabled, what caused that no events were logged at all. This happened because binlog was used only when two handlertons were registered. This didn't take in account that we can only have one handlerton, the case where InnoDB is disabled and binlog enabled. Fixed logging initialization to also consider the case where InnoDB is disabled and binlog enabled. 	fb2aeab35cc69b7d85f0f47c23fe1c4143c000d9
----------------------------
Bug#15953730 NDB : SLAVE_ALLOW_BATCHING BROKEN IN 7.2 The fix for this bug was merged up from mysql-5.5-cluster-7.2 to mysql-5.6-cluster-7.3. However, in 7.2, this was an MCP patch on Server code. In 7.3, there is no MCP patch, the fix is upstream in the server code. So rather than fix as an MCP patch in 7.3, we'd prefer to fix this in the upstream (5.6) server code, and merge down. For this reason, the merged fix in 7.3 is backed-out (here), but the testcase (ndb_rpl_batch) is left in. This testcase will remain red until a fix can be merged-down from a 5.6 tree. 	7b3d18ecf89b5bba371bd85d27f05950af13f7b3
----------------------------
Spec file for ULN RPMs: Handle new files of 5.6, including the changed config file template (WL#6055). This finishes the fixes for Bug#15972480. 	2cea3e8dead25b05cf815b6ac89c31bc5cd58903
----------------------------
Bug#15953730 NDB : SLAVE_ALLOW_BATCHING BROKEN IN 7.2: Fixed incorrect merge, test case generates extra warning (regenerated) 	1176fd1095b28cdf2df19ad630b68caccf6a622d
----------------------------
"Bug #15953730 	NDB : SLAVE_ALLOW_BATCHING BROKEN IN 7.2 Fix in cluster 7.2.  Server code setting thd local variable from global option was only hit once per transaction, rather than once per event. Therefore it was set on the first row in the transaction, and not thereafter. This is a merge error from 7.1->7.2 / 5.1->5.5. New testcase added in previous commit tests this scenario. "	02d536723dd7d3b8ce142114ac664abe4ac40740
----------------------------
"Bug #15953730 	NDB : SLAVE_ALLOW_BATCHING BROKEN IN 7.2 This commit adds a new testcase, ndb_rpl_batch which aims to show that slave_allow_batching=ON has a positive effect. This is committed to 7.0 and merged up, giving some protection against future regressions there. In 7.2 it will be joined by the fix. "	e2ff538925f15a3c6bd56540e649ca6bf9ec2837
----------------------------
WL#6587 : Protocol support for password expiration Initial implementation. * added a new capabilities flag CLIENT_CAN_HANDLE_EXPIRED_PASSWORDS * Added a new server option (and a read only global variable) disconnect-on-expired-password. Defailt is on. When off it will cause old clients to get a connection against an expired password account and get an error for every query that they try to execute that's not SET PASSWORD. * server will check for expired passwords at login and will refuse the login if the client didn't set CLIENT_CAN_HANDLE_EXPIRED_PASSWORDS in the client hello packet and if the disconnect_on_expired_password server side option is set. A detailed error (ER_MUST_CHANGE_PASSWORD) will be sent in this case. * server always sets CLIENT_CAN_HANDLE_EXPIRED_PASSWORDS in the server hello packet. libmysql never checks for it. * new mysql_options() option MYSQL_OPT_CAN_HANDLE_EXPIRED_PASSWORDS to set the CLIENT_CAN_HANDLE_EXPIRED_PASSWORDS flag. * mysql binary sets MYSQL_OPT_CAN_HANDLE_EXPIRED_PASSWORDS if run in interactive mode * mysqladmin sets MYSQL_OPT_CAN_HANDLE_EXPIRED_PASSWORDS if the first command is 'password' or 'old_password' * mysqltest sets MYSQL_OPT_CAN_HANDLE_EXPIRED_PASSWORDS * test cases added (both mtr tests and some C test code) * existing test case results updated to reflect the new server command line option. * fixed the linux compilation problems and test failures 	83e9e94baf36df935feb5435924eee8b30e01af2
----------------------------
Fix for Bug#15908684: Job threads may 'sleep' without pending messages being sent This fix correct the calculation of the 'pending' argument to update_sched_config() such that both previously failed 'pending_send', and currently available unsent 'send_sum' together forms the number of 'pending' signals. 	86bffc43952d90574c1ee43ae6930d53a9afbfb3
----------------------------
Fix for Bug#15908684: Job threads may 'sleep' without pending messages being sent This fix correct the calculation of the 'pending' argument to update_sched_config() such that both previously failed 'pending_send', and currently available unsent 'send_sum' together forms the number of 'pending' signals. 	ac8247ce6293dc79adf83df7e2c1d2a2d881fe3d
----------------------------
BUG#14059662 - DDL ON EVENT SCHEDULER MEMORY LEAK WITH SKIP-GRANT-TABLES ENABLED BACKGROUND: When MySQL server is started with --skip-grant-tables option Event Scheduler is disabled,i.e the event scheduler is rendered nonoperational. At low level, Event_queue and Event_scheduler object are not instantiated. When an event DDL like Create Event or Alter Event is performed during this time, it is added in mysql.event table and appropriate operations either create or update are done respectively. Then memory is allocated for the event queue element to be created, But it is not put in the event queue since event queue object has not been instantiated in the beginning itself. While doing server shutdown, when it cleans up scheduler's resources The memory for the Event Queue Element which is created is not deallocated, destructor for it is not called and it hogs the memory without deleting the element. Valgrind reported memory leak because of this issue. FIX: As a fix for this bug, A Check has been added in Create and Update event code. If the Event Scheduler is in DISABLED state, Memory for the event queue element is not allocated. We are allowed to create the event even when the scheduler is DISABLED. Later When the server is restarted again without skip-grant-tables, it picks up the event from mysql.event table and starts executing the event normally. 	384ff4c9927429a92e0e64995471649006e47047
----------------------------
"Bug#11753843:BINARY AND RELAY LOG FILE NAMES DEPEND ON PID FILE NAME Problem: ======= When Binary and relay log names are not specified by user, the default binary log .NNNNNN and .index files are created in the data directory using the PID file as basename. The same is true for the relay log file, slow log file and query log file. According to the documentation, the default names should be based on the hostname. Analysis: ======== ""rpl_make_log_name"" is the function which constructs the basenames for binary and relay log files.   This function takes three arguments, first the ""basename"" supplied by user through option, second the ""pid-file"" name and third the extension to the file name. The second argument ""pid-file"" is used as basename in the absence of user specified basename value. Fix: === In ""rpl_make_log_name"" function call second parameter i.e ""pid-file"" is being replaced with ""default_logfile_name"". ""default_logfile_name"" holds the hostname. While testing the above fix another problem was observed. When user specifies the option like ""slow_query_log_file="" or ""general_log_file="" in the conf file without specifying the file name it causes an invalid memory free. The code snippet is given below. if (!VAR || !*VAR) { my_free(VAR); /* it could be an allocated empty string """" */ VAR= ALT; } Memory for all options are allocated by using ""malloc"" within a memroot. When user specifies ""empty"" string for ""slowlog"" and ""querylog"" files the above code tries to free the memory for the empty string and reassign the pointer. Freeing a part of memory within a memroot is incorrect this causes the invalid memory free error. Since it is an empty string and memroots are automatically cleared upon exit the above ""my_free"" call is not required. Hence removed. "	640c501f8906a490c43b46b022cafc8529ccae98
----------------------------
"BUG#15833516 - SQL_SLAVE_SKIP_COUNTER DOES NOT SKIP ERRORS WITH GTID_MODE ON === Problem === 'SET GLOBAL sql_slave_skip_counter = N' skips the next N events from the master. This is useful for recovering from replication stops caused by a statement. But this works only with a server not running in GTID mode. When a server is configured to run in GTID mode, empty transactions have to be executed to do the same. 'sql_slave_skip_counter' should not be used with GTIDs. It will not work the way a user would expect it to. In particular, after a failover or reconnect, the skipped transaction will be re-executed again, which is consistent and unavoidable with GTID logic, but clearly not what the user wanted. The correct way to skip transactions when GTIDs are enabled is to execute an empty transaction, i.e.: 1. Get the GTID of the failing transaction; 2. Execute SET GTID_NEXT = '<gtid of failing transaction>'; (Note that the server skips transactions if GTID_NEXT is set to a GTID that already exists in GTID_DONE.) 3. Execute COMMIT; This will make the transaction be skipped permanently. === Fix === The bug is fixed by generating an error message when a user tries to set sql_slave_skip_counter when gtid_mode = ON. 1) Created a macro ""ER_SQL_SLAVE_SKIP_COUNTER_NOT_SETTABLE_IN_GTID_MODE"". 2) Added a check under check_slave_skip_counter() to check if GTID mode is set. If yes, an error is generated at the client. "	2bb58b5522597d09ea4ab654923e95724f0b189b
----------------------------
"BUG#15833516 - SQL_SLAVE_SKIP_COUNTER DOES NOT SKIP ERRORS WITH GTID_MODE ON === Problem === 'SET GLOBAL sql_slave_skip_counter = N' skips the next N events from the master. This is useful for recovering from replication stops caused by a statement. But this works only with a server not running in GTID mode. When a server is configured to run in GTID mode, empty transactions have to be executed to do the same. 'sql_slave_skip_counter' should not be used with GTIDs. It will not work the way a user would expect it to. In particular, after a failover or reconnect, the skipped transaction will be re-executed again, which is consistent and unavoidable with GTID logic, but clearly not what the user wanted. The correct way to skip transactions when GTIDs are enabled is to execute an empty transaction, i.e.: 1. Get the GTID of the failing transaction; 2. Execute SET GTID_NEXT = '<gtid of failing transaction>'; (Note that the server skips transactions if GTID_NEXT is set to a GTID that already exists in GTID_DONE.) 3. Execute COMMIT; This will make the transaction be skipped permanently. === Fix === The bug is fixed by generating an error message when a user tries to set sql_slave_skip_counter when gtid_mode = ON. 1) Created a macro ""ER_SQL_SLAVE_SKIP_COUNTER_NOT_SETTABLE_IN_GTID_MODE"". 2) Added a check under check_slave_skip_counter() to check if GTID mode is set. If yes, an error is generated at the client. "	e4891c64ade29051b51024acce66354896e614f1
----------------------------
Bug#14827952: PARTITION BY LIST AND RANGE FAILS TO PRUNE IN NDB Problem is that bug#14672885 disabled pruning of all NDB tables, including those with user defined partitioning. Solution is to let the server do the (read) pruning for NDB tables with user defined partitioning. Also removed two unused members from partition_info class. This patch also disables explicit partition selection for NDB tables. I.e. 'select * from t1 PARTITION (p1)' To enable it, implement a good name -> part_id function that works with both ha_partition (which uses a name hash in the table share) and ha_ndbcluster, and modify the changes done to sql/partition_info.cc. 	5b505c9755ded5e2b14a9c152b21a7dd804e4f18
----------------------------
BUG#14737388: STOP EVENT ON MTS MAY CAUSE DUPLICATE RELAY LOG PURGE When Multi-Threaded Slave (MTS) is ON and slave is restarted just before applying the last transaction read from relay log and relay log contains a Stop event, on server start following sequence of actions happens: 1) Purge until relay log slave-relay-bin.000021 (included) when slave status was: group_master: master-bin.000001; pos: 1912 group_relay: ./slave-relay-bin.000021; pos: 515 (EOF) event:       ./slave-relay-bin.000021; pos: 515 2) Purge again until relay log slave-relay-bin.000021 (not included) when status was: group_master: master-bin.000001; pos: 2120 group_relay: ./slave-relay-bin.000021; pos: 492 (Stop event) event:       ./slave-relay-bin.000022; pos: 173 The events on slave-relay-bin.000021 are: # at 492 #121109 15:29:02 server id 2  end_log_pos 515 CRC32 0x77a8b05e  Stop DELIMITER ; # End of log file ROLLBACK /* added by mysqlbinlog */; /*!50003 SET COMPLETION_TYPE=@OLD_COMPLETION_TYPE*/; This walk backwards on slave-relay-bin.000021 positions is caused by how Stop event updates positions on Stop_log_event::do_update_pos(). Stop-event was processed by Coordinator concurrently, what caused relay positions mismatch. To fix this behaviour, the group position is always unchanged in MTS mode when Stop event is applied and instead it is updated on group closing events or end of file. 	f010ae313f7b2f50d988e1ed89827ca0c9022fbc
----------------------------
Bug 15930138 - SIMULATE_DISK_FULL_AT_FLUSH_PENDING HANGS SERVER WITH IT STARTED WITH GTID ON Description: ------------ i_binlog.binlog_close_conn_assert hangs soon after simulate_disk_full_at_flush_pending extension code was executed. At its inspection  in binlog_cache_data::write_event() it was found that though the simulation never meant to be reentrant it actually is. So a thread could cross it more times with unpredictable results. How to repeat: -------------- mtr --mysqld=--binlog-format=row --mysqld=--enforce-gtid-consistency --mysqld=--gtid-mode=on --mysqld=--log-slave-updates i_binlog.binlog_close_conn_assert to see hanging. Fixed with correcting simulation to cease being active once its task is done. A second phase of simulaton has to activated and deactivated. 	16f3f0d185601e4a1c761e73a98726dd2e788a23
----------------------------
Merge: 94b56ab 6202380 ndb - ConfigValues warnings, refactor, and bug 	f5d2a12fe64086008b5d93884cedd784621bef9f
----------------------------
ndb - refactor ConfigValues added asserts to verify that data area start and end is aligned with both Uint32 and char* added range tests removed unused member m_data added method to do inplace construction corrected a bug putting the first string-pointer above intended data-area, it had no effect before since we allocated more than intended. 	6202380dd750d5cf0f7d563129c0712801252fb8
----------------------------
WL#6226 - Protocol tracing - client side This patch defines a new type of client-side plugins, MYSQL_CLIENT_TRACE_PLUGIN, and an infrastructure for sending to such a plugin, if one is loaded into libmysql, various trace events related to client-server communication. Trace plugins are defined in include/mysql/plugin_trace.h. This file also contains a list of available trace events and a list of protocol stages which are reported to a plugin so that it can correctly interpret these events. Trace events are generated using trace hooks inside libmysql code - these are macros MYSQL_TRACE() and MYSQL_TRACE_STAGE() defined in libmysql/mysql_trace.h. The hooks are added in appropriate places in libmysql/libmysql.c and sql-common/client.c. Code used by the tracing infrastructure is in libmysql/mysql_trace.c. Plugin loading code in sql-common/client_plugin.c is modified to correctly recognize trace plugins and arrange for sending trace events to them. File libmysql/test_trace_plugin.cc contains implementation of a test trace plugin which can be used to test the infrastructure. This plugin is built into libmysql (and pre-loaded) if WITH_TEST_TRACE_PLUGIN build option was selected during build configuration. This option is disabled by default. 	da5de3ee10e0bd93b405612460b33637462e1e6a
----------------------------
"Bug #15908907 	NDB : ALL REPORT BACKUP HITS ERROR WITH MULTITHREADED DATA NODES Multithreaded data nodes have multiple Backup 'block' instances. This confused the MGMD implementation of ALL REPORT BACKUP, which expected one report per node. This patch adds some aggregation in the BackupProxy block so that only one report is returned. A configuration covering this scenario is added to ndb_mgm test. "	b8087f18a2ed29a6d00d742ca74130c1c5e2a86b
----------------------------
Bug#15927744 - DEFAULT P_S CONFIGURATION WASTES CPU ON A BUSY SERVER Prior to this fix, performance schema configuration variables that can be automatically sized by the server were given incorrect values in some cases. Performance overhead can increase significantly with some pathological cases created by incorrect sizing, causing this bug to have a real impact. For example, for 50,000 tables in the table open cache, the performance schema estimated that a value of 20,000 table handles was adequate. This is wrong, a proper value should be 100,000 in this case. The problem is that the heuristic used values that got altered by a 'sanitizing' step, supposed to prevent bad usages. The fix is to simply remove this sanitizing step, because: - it does not resolve any problem by itself, only creates more, - it introduces hard coded values which are not based on real deployments in production With this fix, heuristics computed by the performance schema for automated sizing are expected to be more adequate, for high end configurations. 	2ec7190b644f53532c13c10f39fad088d23ec374
----------------------------
- WL#6560: mysqld --bootstrap --innodb_page_size=4K was failing. ISSUE-1: read_lsn can be avoided if we are creating new db ISSUE-2: tablespace attribute viz. page-size + space-id should be verified only for first file and not all files of tablespace. 	17f74557f5c756389e249b8363bcacdd35e19a2b
----------------------------
Bug#15883071 - WINDOWS: ASSERT DUE TO INCORRECTLY AUTOSIZED INNODB_BUFFER_POOL_INSTANCES The changes for WL#6216 (Changes to Server defaults in 5.6) introduced a Windows-only calculation for the number of buffer pool instances when the buffer pool size became greater than 1.3Gb. This is needed on Windows 32-bit systems because it was found that they have trouble allocating blocks of memory to mysqld.exe in chunks greater than 1.3 Gb. This calculation set the number of instances by dividing the total buffer pool size by 128Mb, which was determined to be an acceptable buffer pool instance size. Even though this calculation is only needed for 32-bit systems it used the macro _WIN32 which is also defined for 64-bit Windows.  This extra adjustment to the number of buffer pool instances is not needed on 64-bit Windows systems.  So this patch uses #if defined(__WIN__) && !defined(_WIN64) to enclose the extra 32-bit Windows calculation. In addition, it uses ut_min(MAX_BUFFER_POOLS, ...) in case that number is ever changed to something less than what is allowed on a 32-bit system (4G buffer pool/128M per pool=32 instances, currently, MAX_BUFFER_POOLS==64) Approved by Sunny Bains at http://rb.no.oracle.com/rb/r/1579/ 	c75238d706d4ff20426b1545a0b866175228ec9e
----------------------------
ndbcluster - mark local functions with static 	ed31830f3d03dc0e3af2f642fbdd60f73c823bc8
----------------------------
Adapt MySQL Cluster to 5.6 - all versions which ndbcluster is compiled against now have support for online or inplace alter, remove support for compiling wihtout it 	4921f5a850be0dbcd99fdc2dff4f240712f3fe31
----------------------------
ndbcluster - remove NDB_WITHOUT_JOIN_PUSHDOWN since feature is now supported everywhere 	75c365e3f9dc4407755fe6116f485310f11c0dec
----------------------------
"Adapt MySQL Cluster to trunk - the signature of build_table_filename() has changed in the future. Backwards compatibility function was added but has been declared inline(thus only working if you include sql_table.h) - since ndb_local_schema is ndbclusters wrapper for working with tables and dbs, it's OK to include sql_table.h instead of writing local wrapper functions to handle the version incompatibilities. - remove ""ugly"" extern reference to build_table_filename "	dc39e17bcd196c4159891f2e62f7eba2d6a3832d
----------------------------
Fix for bug#15908684: Job threads may 'sleep' without pending messages being sent This fix correct the calculation of the 'pending' argument to update_sched_config() such that both previously failed 'pending_send', and currently available unsent 'send_sum' together forms the number of 'pending' signals. 	d43f0d25e0ba3763ca1d52afb86407c09d36e598
----------------------------
Fix for Bug#15907122 INCORRECT HANDLING OF JOB-BUFFERS ALMOST FULL - 'SLEEPLOOP 10' This fix introduce a 'thr_wait*' (Sort of a condition/mutex) which is used to wait for job buffers to become available when we are in an 'job buffers almost full' situation. This 'thr_wait' will be signaled when a job buffer has been consumed & freed. This fix is a collection of the following 5 sub patches: ****** Fix mixed up comment & naming wrt. whether 'm_recv_transporters' and 'm_has_data_transporters' is a bitmask of NodeId or Tranporters. (It *is* NodeId bitmasks) ****** Add dump of job buffer utilization before we crash due to 'job buffer full', and to 'sleeploop 10' reports where we have to wait due to almost full job buffers. ****** Change the signature of the yield() function such that it can take a more general '*check_callback()' function as arguments. Change the existing functions currently used as 'callbacks' to the new (relaxed) signature. ****** Refactor: Splitt out compute_free_buffers_in_queue() from compute_max_signals_to_execute(). New function contains common code intended for reuse in later patches. ****** update_sched_config() will 'yield' the CPU and wait for more job buffers to become available when it is about to run out of job buffers. The yield() call will wait on a 'thr_wait' object, which may be sent a 'wakeup()' when the waiting condition has been resolved (by another thread) However, update_schec_config() used the 'thr_wait' object intended to be used to wait for more *incomming signal* - What we actually have to wait for are signals to be *consumed* by the destination thread. Luckily there is also defined a 'max wait' of 1ms which currently will wakeup the thread . This patch introduce a own 'thr_wait' object which which is signaled by the consumer, and we now wait on this object. Furthermore the patch also avoid a situation where a thread could end up waiting for itself. 	bcfcb092524b40c8eb248cbd9c77a804ffabea6f
----------------------------
- WL#6560: Further enhanced test-coverage by adding --innodb_read_only scenario 	9ec9528677aa24b468f45bde9749cd5a490191f3
----------------------------
Bug#15882860 - WINDOWS: DEBUG BUILD CAN'T HANDLE LARGE INNODB_LOG_FILE_SIZE The change for WL6494 (InnoDB: Handle redo log file size mismatch), exposed an existing problem on Windows 64-bit platforms where any _stat() call will fail on any file larger than 4Gb.  This became evident when setting -innodb-log-file-size=4G or larger.  The patch mentioned above started using os_file_rename_func() for redo log files.  That function makes calls to os_file_status() in debug using ut_ad() to make sure that the source name exists and the destination name does not. An assert, ut_ad(exists), failed because the call to _stat failed, since the file was too big to store the size in a 4 byte integer. The fix is to exchange _stat with _stat64 in two places where _stat() is called by Windows-only code.  The function _stat64() works on both 32-bit and 64-bit versions of Windows and the compatibility list goes all the way back to Windows 95. Approved at http://rb.no.oracle.com/rb/r/1583/ by Marko 	eabded176fa580af6dc3f52819b09793eca00f1c
----------------------------
clusterj - look for java before starting to care about what's in classpath - theoretically we could use java to check if classpath is correct by doing configure style tests written in java. Would avoid need to duplicate classpath parsing(which won't have the same rules as in java anyway) 	42496c08c03a93eaabd2d149ecb56d3b34e5be09
----------------------------
"ndb - compile ha_ndbcluster withtout support for ""global schema lock"" in non cluster version "	6e0c44b505a17a121fd9e23480f083288b37c477
----------------------------
compile-cluster - hardcode a few more configure args necessary for 5.1 based 	bd59664a6517c5d4a12d67463b8e340ae998f70a
----------------------------
ndb -backport ha_ndbcluster_connection.cc compiler warning fixes from 7.0 	cd17b17657ace5e09e17bfd002f2076f8d376d0d
----------------------------
Adapt MySQl Cluster to 5.6 - fix existing tests and utility scripts since mysql.host has been removed - fix existing .results since a lot more Errors and Warnings are printed when an error is provoked. - remove code to handle a few old LOGCOM_ command since those are never  used. Of course keep the SOT_ commands intact to avoid upgrade problems. - Add hack preventing db to be NULL when calling ndbcluster_log_schema_op() - Add long comment describing why the above hack is needed and that it works anyway. - Add new testcases which checks that binlog, data and functionality on remote mysqld end up looking the same way as when system tables are local(i.e in default engine). Same testcase and .result file is run two times with different configs and the result should be same. - remove NDB_WITHOUT_DIST_PRIV define 	3cbbaa50617a63302ac2f06d623fa66d2b8998b0
----------------------------
Merge: aec35ad fd13e43 bug#13994567 PLUGIN-DIR OPTION NOT HONOURED WHEN PRE-LOADING PLUGINS WITH LIBMYSQL_PLUGINS Not loading pre-loading plugins was caused by the fact that during pre-loading process there is no access to plugin-dir value. So the only path available for searching pre-loading plugins was default value (PLUGINDIR macro). Fixed by introducing LIBMYSQL_PLUGIN_DIR environment variable which can contain user-defined path to plugins. mysql_load_plugin_v function modified to use LIBMSQL_PLUGIN_DIR value if it exists and if plugin-dir option value is not available. Thus if LIBMYSQL_PLUGIN_DIR does not exists then behaviour does not change. If LIBMYSQL_PLUGIN_DIR exists then it unconditionally affects pre-loading plugins and it affects other (loaded on connect) plugins only if --plugin-dir option is not specified. After the patch --plugin-dir option still has no effect on pre-loading plugins. But user can specify plugin search path with LIBMSQL_PLUGIN_DIR environment variable. 	bbe601e96036cd868dc639d0b588414ccd15ae94
----------------------------
bug#13994567 PLUGIN-DIR OPTION NOT HONOURED WHEN PRE-LOADING PLUGINS WITH LIBMYSQL_PLUGINS Not loading pre-loading plugins was caused by the fact that during pre-loading process there is no access to plugin-dir value. So the only path available for searching pre-loading plugins was default value (PLUGINDIR macro). Fixed by introducing LIBMYSQL_PLUGIN_DIR environment variable which can contain user-defined path to plugins. mysql_load_plugin_v function modified to use LIBMSQL_PLUGIN_DIR value if it exists and if plugin-dir option value is not available. Thus if LIBMYSQL_PLUGIN_DIR does not exists then behaviour does not change. If LIBMYSQL_PLUGIN_DIR exists then it unconditionally affects pre-loading plugins and it affects other (loaded on connect) plugins only if --plugin-dir option is not specified. After the patch --plugin-dir option still has no effect on pre-loading plugins. But user can specify plugin search path with LIBMSQL_PLUGIN_DIR environment variable. 	fd13e435357904c6de6c6b0cbcaf38fe7023b342
----------------------------
Bug #14826854 MYSQL 5.6 CRASHES WITH DATA FILES DERIVED FROM MYSQL 5.1 Issue: MySQL 5.6 crashes with SIGSEGV when a direct live upgrade to mysql-5.6 is performed on mysql-5.1. Though currently it is not a supported transaction, the server should either give out a proper failure message, or support the live upgrade. The bug can be reproduced by running mysql-5.6 server, with 5.1 data given as datadir arguement. Analysis: The column names of mysql.user table are maintained as an enum within the source code of mysql-5.6 and the table is modified/filled accordingly when a server is started on a particular database. Version 5.5 doesn't implement this enum, but fills the tables by running an iterator. The column 'Create_tablespace_priv' is added in the version 5.5 and while implementing it as an enum in 5.6, it is not appended to the existing list, but was added in between. Hence the one to one mapping is broken in case of mysql-5.1 to 5.6 upgrade. Upgrade from 5.1 to 5.5 has no issues as there is no enum implementation at all, but an iterator runs to create/modify the columns. Hence adding a column did not make any difference. Solution: The MYSQL_USER_FIELD_MAX_USER_CONNECTIONS'th position of table->field which is used in my_bool acl_load function, does not exist and is causing the segmentation fault. Since MYSQL_USER_FIELD_MAX_USER_CONNECTIONS does not correspond to any existing field when mapped to column names of 5.1 user table, accessing this position is prevented using an if condition, which enables live upgrade of 5.1 without disturbing any of the existing features. 	34765fa7b7e5934c3c069ffa665ec9f7b9f7e36c
----------------------------
Merge: 842dd52 ae3cd53 Bug#11753779: MAX_CONNECT_ERRORS WORKS ONLY WHEN 1ST INC_HOST_ERRORS() IS CALLED. Description: null merge from 5.6 to trunk 	68c2875dcff3e1835309d1c83dfd474c5f6800cd
----------------------------
Merge: 5bb18bd 9e89414 Bug#11753779: MAX_CONNECT_ERRORS WORKS ONLY WHEN 1ST INC_HOST_ERRORS() IS CALLED. Description: Null merge from 5.5 to 5.6 	ae3cd5395346abd44b9651afbc74d057fe961420
----------------------------
Merge: cda63d8 2ce2329 Bug#11753779: MAX_CONNECT_ERRORS WORKS ONLY WHEN 1ST INC_HOST_ERRORS() IS CALLED. Description: Null merge from 5.1 to 5.5 	9e8941421e6681ead8c8886c0f5bc0b74329944e
----------------------------
remove usage of --skip-ndb from collections - no need to use --skip-ndb in collections files anymore, since long but more clear logic after recent mtr.pl fixes. ndb tests are never run in MySQL Server unless explicitly requested - remove sys_vars.ndb_log_update_as_write_basic.test and sys_vars.ndb_log_updated_only_basic.result since MySQL Server does not have those options. - Only sys_vars.have_ndbcluster_basic left since MySQL Server has that variable hardcoded. 	d3a79419c78823ae8686eeb5939a39183476849a
----------------------------
ndb - Restore config after TestNdbApiConfig 	016bd5799da6713bfb200381665590002722f526
----------------------------
"Bug #14827923 	RPL TEST RPL_PARALLEL_CHANGE_MASTER FAILS WITH WARNING ON FIRST EXECUTION IN PB2 The slave server emitted unexpected warnings because of MTR's. At execution of two tests ./mtr --mysqld=--binlog-format=row --big-test  rpl_row_mts_crash_safe \ rpl_parallel_change_master the 2nd test unexpectedly makes the slave server to initially start with --relay-log-info-repository=TABLE. The option is apparently borrowed from the first test's env. Nothing would not be noticed, similarly to --relay-log-info-repository FILE default case where no issues exist, but MTR play another little trick at the slave server restarts required by rpl_parallel_change_master. This time the borrowed --relay-log-info-repository=TABLE is missed out, to mean repository migration which was not expected at all. Finally, one time the same warning is not displayed ... yes thanks to Bug_15858271. Given the tests sequence rpl_parallel_change_master running slave should 've warned already in its bootstap, at least when mtr runs in MTS, because TABLE repository of the former test with non-zero workers would have to migrate to FILE as demanded by the default value of --relay-log-info-repository. Fixed with 1. reporting MTR's bug 2. deploying suppression to stay until Bug_15858271 is fixed 3. enforcing rpl_mts_crash_safe cleanup to record zero workers into TABLE repository so the slaver server at any following test could migrate the info repository in background without any warning. "	706f3bbe3b2ebd75643b3b8681e220b02e2d224f
----------------------------
Merge: 7989eb6 c2890fd ndb - bugfix: Use configured value for parameter DefaultOperationRedoProblemAction Bug #15855588   SETTING [API] DEFAULTOPERATIONREDOPROBLEMACTION HAVE NO EFFECT The parameters configured value was ignored, the effective value was always abort. 	c6e33aa455acfdd4231967d11a8e92c700580046
----------------------------
ndb - bugfix: Use configured value for parameter DefaultOperationRedoProblemAction Bug #15855588   SETTING [API] DEFAULTOPERATIONREDOPROBLEMACTION HAVE NO EFFECT The parameters configured value was ignored, the effective value was always abort. 	c2890fd28349603197ba3959b68be66ebbcf6d14
----------------------------
ndb - new test TestNdbApiConfig check that NdbApi actually read and use values set in mgm run with: testNdbMgm -n TestNdbApiConfig 	edeb942e5b3614b0c4ee3086d34e4381f422b660
----------------------------
ndb - test ndb_backup_rate need DefaultOperationRedoProblemAction=abort But due to bug the effective value was always abort even if other value was configured. 	ecee760a76db22ccb976ee5b948380bab2dcba58
----------------------------
"ndb - remove NDB_WITHOUT_COLUMN_FORMAT since all versions of MySQL Server which ndbcluster compiles against now supports ""field->column_format"" and ""field->storage_type"" "	16788243ba114f31cb4d65250f38fc2e41a3ed44
----------------------------
ndb - remove NDB_WITHOUT_SERVER_ID_BITS since all versions of MySQL Server which ndbcluster compiles against now supports --server-id-bits 	859151229480ff3b7f618a8d6ec74d2cf2d72f09
----------------------------
ndb - remove NDB_WITHOUT_SERVER_ID_BITS since all versions of MySQL Server which ndbcluster compiles against now supports --server-id-bits 	1eb0cf72457f1d6087fe1d36605e37c5482f70c8
----------------------------
ndb - Configure MSVC to print full path to file in warning messages 	cc4ba2782b44be5f5d3848b6cd3b1aba6a663e16
----------------------------
ndb - add warning parsing functionality to compile-cluster - backport  --vanilla, -just-print and --just-configure - add --autotest 	c89200d3de7771890d9d6d24f0d9efd507153d79
----------------------------
Fix broken MTR tests due to error code renumbering: - main.insert - rpl.rpl_stm_loaddata_concurrent - i_rpl.rpl_enforce_gtid_consistency 	0624865b3d18037b993194c8d5c09d5ed80ebfcc
----------------------------
Bug#11748945 MAKE KILL RELIABLE (MAIN.KILL FAILS RANDOMLY) Analysis: For OSX, POLLHUP event is not implemented for poll(). As a result, shutdown() / close() system call does not break poll(). As client end of the socket is closed, connection is broken from the client side whereas server side service socket is kept open as poll() waits for 28800 secs (default interactive_timeout and read_timeout value). Sleep calls in kill.test are changed to debug sync under rev-2875.109.79. It fixed all the sporiadic issues related to kill connection. This issue is regression of WL#4896 found only in OSX. There are no failures found on pb2 for platforms except OSX. Fix: Use select() instead of poll() only for OSX as select() breaks when close() system call is invoked on the service socket. 	82dbfdacd5a122ffe944564b9da0b0c6d87b02c5
----------------------------
"Fixed merge problems between mysql-5.6 and mysql-trunk. The error ER_READ_ONLY_MODE was not numbered the same way in 5.6 and trunk (5.7), causing discrepancies in error numbering. This is a bug, as it impacts compatibility between 5.6 and later versions. This fix moved ER_READ_ONLY_MODE from the ""new in 5.7"" to the ""new in 5.6"" section, because this error is also present in 5.6. As a mechanical result, the following errors have been renumbered: #define ER_READ_ONLY_MODE 1836 #define ER_GTID_NEXT_TYPE_UNDEFINED_GROUP 1837 #define ER_VARIABLE_NOT_SETTABLE_IN_SP 1838 #define ER_CANT_SET_GTID_PURGED_WHEN_GTID_MODE_IS_OFF 1839 #define ER_CANT_SET_GTID_PURGED_WHEN_GTID_EXECUTED_IS_NOT_EMPTY 1840 #define ER_CANT_SET_GTID_PURGED_WHEN_OWNED_GTIDS_IS_NOT_EMPTY 1841 #define ER_GTID_PURGED_WAS_CHANGED 1842 #define ER_GTID_EXECUTED_WAS_CHANGED 1843 #define ER_BINLOG_STMT_MODE_AND_NO_REPL_TABLES 1844 #define ER_FILE_CORRUPT 1845 #define ER_ERROR_ON_MASTER 1846 #define ER_INCONSISTENT_ERROR 1847 #define ER_STORAGE_ENGINE_NOT_LOADED 1848 #define ER_GET_STACKED_DA_WITHOUT_ACTIVE_HANDLER 1849 #define ER_WARN_LEGACY_SYNTAX_CONVERTED 1850 #define ER_ERROR_LAST 1850 Test scripts have been adjusted accordingly. "	bfe49f6760a01effc56d676fc14c7a222d36841d
----------------------------
Bug#14741537 - MYSQL 5.6, GTID AND PERFORMANCE_SCHEMA Before this fix, statements using performance_schema tables: - were marked as unsafe for replication, - did cause warnings during execution, - were written to the binlog, either in STATEMENT or ROW format. When using replication with the new GTID feature, unsafe warnings are elevated to errors, which prevents to use both the performance_schema and GTID together. The root cause of the problem is not related to raising warnings/errors in some special cases, but deeper: statements involving the performance schema should not even be written to the binary log in the first place, because the content of the performance schema tables is 'local' to a server instance, and may differ greatly between nodes in a replication topology. In particular, the DBA should be able to configure (INSERT, UPDATE, DELETE) or flush (TRUNCATE) performance schema tables on one node, without affecting other nodes. This fix introduces the concept of a 'non-replicated' or 'local' table, and adjusts the replication logic to ignore tables that are not replicated when deciding if or how to log a statement to the binlog. Note that while this issue was detected using the performance_schema, other tables are also affected by the same problem. This fix define as 'local' the following tables, which are then never replicated: - performance_schema.* - mysql.general_log - mysql.slow_log - mysql.slave_relay_log_info - mysql.slave_master_info - mysql.slave_worker_info Existing behavior for information_schema.* is unchanged by this fix, to limit the scope of changes. Coding wise, this fix implements the following changes: 1) Performance schema tables are not using any replication flags, since performance schema tables are not replicated. 2) In open_table_from_share(), tables with no replication capabilities (performance_schema.*), tables with TABLE_CATEGORY_LOG (logs) and tables with TABLE_CATEGORY_RPL_INFO (replication) are marked as non replicated, with TABLE::no_replicate 3) A new THD member, THD::m_binlog_filter_state, indicate if the current statement is written to the binlog (normal cases for most statements), or is to be discarded (because the statements affects non replicated tables). 4) In THD::decide_logging_format(), the replication logic is changed to take into account non replicated tables. Statements that affect only non replicated tables are executed normally (no warning or errors), but not written to the binlog. Statements that affect (i.e., write to) a replicated table while also using (i.e., reading from or writing to) a non replicated table are executed normally in MIXED and ROW binlog format, and cause a new error in STATEMENT binlog format. THD::decide_logging_format() uses THD::m_binlog_filter_state to indicate if a statement is to be ignored, when writing to the binlog. 5) In THD::binlog_query(), statements marked as ignored are not written to the binary log. 6) For row based replication, the existing test for 'table->no_replicate', has been moved from binlog_log_row() to check_table_binlog_row_based(). 	d685045a46917d6eea015a0c2375329891259029
----------------------------
Merge: d8fc525 43e73d3 BUG#14666177 - TIME DIFF BETWEEN LAST 2 RECONNECTS IS COMING > @@GLOBAL.NET_READ_TIMEOUT * 2 merge from 5.6 into trunk 	36f3d4763cc7929993433febeb92f9702a432606
----------------------------
BUG#14666177 - TIME DIFF BETWEEN LAST 2 RECONNECTS IS COMING > @@GLOBAL.NET_READ_TIMEOUT * 2 === Problem === The test checks if the slave tries to reconnect before the value of slave_net_timeout. The check was done using the two variables: 1) ts_last: timestamp of last reconnect-attempt by slave, 2) ts_prev: timestamp of the second last reconnect-attempt by slave. The slave threads were killed using --source include/stop_slave.inc If the above statement is delayed due to CPU scheduling, the slave would get enough time to try two reconnects. If not, the slave threads would be killed after a single reconection attempt by the slave.In this case, ts_last=ts_prev. There was an assert condition given by: assert(@ts_last-@ts_prev >= slave_net_timeout where slave_net_timeout=10. In the above case, ts_last-ts_prev=0 which is less than slave_net_timeout. So, the assert condition fired and the test failed. === Fix === 1) Deleted the line --source include/stop_slave.inc which killed the slave threads earlier. 2) The assert condition is replaced by a wait condition which makes sure that the slave makes two reconnection attempts. 	43e73d3a0df6aa8c1218ed0c32597a0a7d678cfd
----------------------------
mtr.pl - improve the logic that decides when ndbcluster should be enabled and the extra test suites for MySQL Cluster should be added. Should be consistent and logical now ;) 	ae286e453f4693b03ede0f988014de24b92fc77a
----------------------------
"WL#6561 ""Deprecate and remove support for .sym files (custom symlink implementation)"". Starting from Vista/Server 2008 a native symlinking mechanism is supported by Windows (through MKLINK command). Since starting from 5.6 we don't plan to support Windows XP/Server 2003 this makes MySQL Server implementation of symbolic links for Windows (based on custom .sym files) redundant. Therefore it is a good idea first to deprecate and then completely remove code implementing custom symbolic links. Note that having this custom implementation around is a bad idea not only from code complexity view point, but it also creates performance problems in some scenarios and is cause behind some bugs. This patch is the second step in this WL which completely removes this custom implementation. To do this it: * Removes USE_SYMDIR macro and all code withing #ifdef USE_SYMDIR. * Replaces usage of my_disable_symlinks with my_enable_symlinks to facilitate the next step. * Removes my_use_symdir global variable. In places where it is used to check if DATA/INDEX DIRECTORY clause should be supported we use my_enable_symlinks instead. Uses my_enable_symlinks to store value of --symbolic-links start-up option. After this change --symbolic-links option doesn't have any effect on Windows. But it still controls behavior for DATA/INDEX DIRECTORY clauses for MyISAM and Archive tables on Unix platforms. "	9e5dad6246121d44c4b823e53c41e18744f6c3fb
----------------------------
"Fix Bug #14747671  PKG UPGRADE RERUNS MYSQL_INSTALL_DB DURING UPGRADE Change the ""postinstall"" scriptlet for Solaris so that it first tests whether the directory ""$mydatadir/mysql"" (the one holding the system tables, especially ""mysql.user"") already exists: If yes, we assume this is an upgrade, and only if it didn't exist before the script is running this is a new installation for which ""mysql_install_db"" must be run. "	5b76cbbb6bdd976ec38befcf44a1f9e5d64f8358
----------------------------
ndb - only turn of the part which autdetects that ndbcluster should be default plugin when doing --vanilla build 	abdc96a93a9efcf86c276457da39e94054250623
----------------------------
ndb - add proper #ifdef's in MCP to fix build without ndbcluster and NDB 	683fb545d521edca98b586c169a045d769e5131a
----------------------------
"ndb - don't reset query_cache_size or query_cache_type to default since that is not the same as ""the value which the server was started with"" "	77215ae517606c8839fad3f4c048879c66e5a9c6
----------------------------
Merge in fix for ndb_cache test which requires a MySQL Server with dynamically configurable query cache 	ebdd491af1e693cd5733d5ad2100a828f2a578ac
----------------------------
"Adapt MySQL Cluster to ""WL#6372 : Post-Iris changes to Server defaults"" - The query_cache has been changed to only allow dynamic configuration if the server is started with query caching turned on. - Add .cnf files for all tests which need to have a MySQL Server where the query cache size and type can be dynamically modified. The .cnf file tells the server(s) to start with query caching on, but set size to 0. "	e91ab19d4bd8cae93ad03c0a581640b2041da685
----------------------------
Merge: ec25cd2 9807247 BUG#11754894: MYISAMCHK ERROR HAS INCORRECT REFERENCE TO 'MYISAM_SORT_BUFFER_SIZE' Null Merge from 5.6 to trunk 	16b722b2cc93acf8dd2eaaa726657842d4143108
----------------------------
Merge: 4cec95f 43e9d64 BUG#11754894: MYISAMCHK ERROR HAS INCORRECT REFERENCE TO 'MYISAM_SORT_BUFFER_SIZE' Null Merge from 5.5 to 5.6 	98072475561bb250c1ba8531d11362c145c08aa7
----------------------------
Merge: f5a1354 675971a BUG#11754894: MYISAMCHK ERROR HAS INCORRECT REFERENCE TO MYISAM_SORT_BUFFER_SIZE Null Merge from 5.1 to 5.5 	43e9d641a696c02074b40e452f341663a713b4cb
----------------------------
Merge: 08aa4bc c94a6e0 BUG#11754894: MYISAMCHK ERROR HAS INCORRECT REFERENCE TO 'MYISAM_SORT_BUFFER_SIZE' Merging from 5.6 to trunk 	bc9a31fd84c20ef138826e2ef9122e212c01c9b1
----------------------------
Merge: a7a6da7 f5a1354 BUG#11754894: MYISAMCHK ERROR HAS INCORRECT REFERENCE TO 'MYISAM_SORT_BUFFER_SIZE' Merging from 5.5 to 5.6 	c94a6e0037f7d06630f3b7776d8e77a7d1639014
----------------------------
Merge: efd171f a034f52 BUG#11754894: MYISAMCHK ERROR HAS INCORRECT REFERENCE TO 'MYISAM_SORT_BUFFER_SIZE' Merging from 5.1 to 5.5 	f5a135405fc3c63ab5174a7a022c83dc6c00b3f6
----------------------------
BUG#11754894: MYISAMCHK ERROR HAS INCORRECT REFERENCE TO 'MYISAM_SORT_BUFFER_SIZE' Problem: 'myisam_sort_buffer_size' is a parameter used by mysqld program only whereas 'sort_buffer_size' is used by mysqld and myisamchk programs. But the error message printed when myisamchk program is run with insufficient buffer size is myisam_sort_buffer_size is too small which may mislead to the server parameter myisam_sort_buffer_size. SOLUTION: A parameter 'myisam_sort_buffer_size' is added as an alias for 'sort_buffer_size' and the 'sort_buffer_size' parameter is marked as deprecated. So myisamchk also has both the parameters with the same role. 	675971a846f7da63ff847d30680d89aa555588a6
----------------------------
BUG#11754894: MYISAMCHK ERROR HAS INCORRECT REFERENCE TO 'MYISAM_SORT_BUFFER_SIZE' Problem: 'myisam_sort_buffer_size' is a parameter used by mysqld program only whereas 'sort_buffer_size' is used by mysqld and myisamchk programs. But the error message printed when myisamchk program is run with insufficient buffer size is myisam_sort_buffer_size is too small which may mislead to the server parameter myisam_sort_buffer_size. SOLUTION: A parameter 'myisam_sort_buffer_size' is added as an alias for 'sort_buffer_size' and the 'sort_buffer_size' parameter is marked as deprecated. So myisamchk also has both the parameters with the same role. 	a034f52e6268c9bc4943d6e0888ebce0ba4564dd
----------------------------
Bug#14547920 I_MAIN.BUG13115401 CAUSING VALGRIND REPORT FAILURE ON PB2 Issue: The test i_main.bug13115401 which was added to fix the bug #13115401 has introduced a sporadic valgrind failure report on pushbuild specific to yaSSL build. It being a sporadic issue, it can be reproduced once or twice when the command below is run for around 50 times. perl mysql-test-run.pl --timer --debug-server --force --comment=n_mix-debug --vardir=var-n_mix --mysqld=--binlog-format=mixed --experimental=collections/default.experimental --skip-ndb --skip-test-list=collections/disabled-per-push.list --unit-tests --valgrind --valgrind-option=--gen-suppressions=all --valgrind-option=--show-reachable=yes Solution: The problem arises on a multi-threaded scenario when a thread tries to create a session object from GetSessions() method as another thread is already doing a creation. As the memory allocated in first thread is overridden by memory allocated by the second thread, the memory allocated by the first thread will be a leak in this case. This is because the yassl session instance is not thread safe. To make this instance creation process compatible with multi-threading, a new instance is created by with the help of yassl_pthread_once, which will essentially check if the function used for creating an instance is already called previously or not. 	e7aa07a9fd3bd76f99174aa20148f670d9755230
----------------------------
Bug#14547920 I_MAIN.BUG13115401 CAUSING VALGRIND REPORT FAILURE ON PB2 Issue: The test i_main.bug13115401 which was added to fix the bug #13115401 has introduced a sporadic valgrind failure report on pushbuild specific to yaSSL build. It being a sporadic issue, it can be reproduced once or twice when the command below is run for around 50 times. perl mysql-test-run.pl --timer --debug-server --force --comment=n_mix-debug --vardir=var-n_mix --mysqld=--binlog-format=mixed --experimental=collections/default.experimental --skip-ndb --skip-test-list=collections/disabled-per-push.list --unit-tests --valgrind --valgrind-option=--gen-suppressions=all --valgrind-option=--show-reachable=yes Solution: The problem arises on a multi-threaded scenario when a thread tries to create a session object from GetSessions() method as another thread is already doing a creation. As the memory allocated in first thread is overridden by memory allocated by the second thread, the memory allocated by the first thread will be a leak in this case. This is because the yassl session instance is not thread safe. To make this instance creation process compatible with multi-threading, a new instance is created by with the help of yassl_pthread_once, which will essentially check if the function used for creating an instance is already called previously or not. 	41497f4eec68f7caadcf2010b1a9240f6c584899
----------------------------
BUG#14722659: MAKE GTIDS WORK WITH NON-TRANSACTIONAL TABLES When gtid_mode=ON and --enforce_gtid_consistency options were used all statements that modify non-transactional tables were forbidden. This caused numerous problems when we want to insert or change data on system tables, since them are non-transactional and changed through DML. --enforce_gtid_consistency now allows simple statements updates that do not mix non-transaction and transactional engines. 	080e161b44a7a8b537338dd311ba43d997dfd662
----------------------------
Bug#14826660 WRITE_RESULT_TO_FILE.INC USES WRONG MYSQLD - Extact port and socket from current connection instead of trying to deduce which group suffix to use by magic formula. This makes the include file work also in other configurations. 	10860fb5c2a17cb9bb684762fe64007db95fa931
----------------------------
Bug#14505672 MYSQL_CONFIG_EDITOR REMOVE --ALL FAILS Bug#14545999 MYSQL_CONFIG_EDITOR SET -ALL BAD BEHAVIOR Bug#14545989 MCE DOES NOT WARN ON WRITE FAILURE This patch modifies the way options are handled by MCE. The options now are divided and handled in 2 different categories. The 1st set of options are program options while the 2nd set being specific to MCE commands. In order to bring in support for commands in the option handling routine, handle_options(), some extra logic has been added to stop option processing when a non- options string matches with a command specified through the new command_list parameter. Also, added the support for --user, --password, --host options for remove command, which could not be added before due to the option handling design constraints. Added test cases to test the added functionalities. 	c3254ce7ea135e3133c1edb3162454696b1ff20c
----------------------------
"Bug#11753308: MYSQL_KILL() AND COM_PROCESS_KILL ONLY HANDLE 32-BIT IDS The connection ID / ""thread-ID"" is currently 32 bit on the wire, but may be 64 bit in the API, depending on the definition of ulong on a given platform. If we silently drop half the bits on the floor, mysql_thread_id() in Connector-C may give incorrect results, and mysql_kill() might ask for the wrong (and usually long expired) thread to be terminated, even if a 64-bitly correct ID were obtained with ""SELECT connection_ID()"". We now guard against some 32/64 issues. We do this in both the client and the server to address mixed scenarios of old server / new client and vice versa. Using SQL instead of the C API (SELECT CONNECTION_ID() / KILL CONNECTION ...) should produce better results. mysqladmin already does this. Docs implications: - Discourage use mysql_thread_id() / mysql_kill(). current status is that they produce incorrect results / try to kill the wrong thread once more than 2^32 threads are created (IOW, this only affects extremely busy servers or those with an extreme uptime. The server also needs to use 64-bit thread_IDs for this to apply. This is platform specific, not a mysqld configurable.) Patched status is that the calls will work normally as long as thread_IDs are in safe range (< 2^32), but will throw an error a) if mysql_kill() in Connector-C is called with a value >= 2^32, or b) if mysql_kill() is used at all, even with ostentably correct values, once thread_ID in the server has exceeded what can be expressed within 32 bits. - encourage use of the SQL equivalents, SELECT connection_ID() / KILL CONNECTION ... - mysqladmin already does this, and is therefore safe. - mysql_kill() will throw CR_INVALID_CONN_HANDLE if it is given a larger value than can be expressed in the 32-bit wire protocol. - mysqld will throw ER_DATA_OUT_OF_RANGE on mysql_kill() once thread_ID in mysqld exceeds 32-bits. Backport from 5.7. "	e512ffb42d3ad397502e88dc0e4ce3648006b83b
----------------------------
"- initial checkin to enable separate tablespace for storing non-compressed temp-tables. - Temp-Tablespace is a new tablespace for storing non-compressed temp-tables - Compressed temp-tables continue to operate in same fashion as before. - Temp-Tablesapce is configurable is using options same as innodb_data_file_path. These options are picked from newly added variable name: innodb_temp_data_file_path. Option syntax and meaning remain same as innodb_data_file_path. - Temp-Tablespace can't reside on raw devices. - Failure in creating temp-tablespace is treated as fatal error. - Temp-Tablespace uses dynamically generated space-id. This also aids in achieving backward compatibility that is when this mysql version is used with existing db. - Temp-Tablespace is re-created on every server re-start. - Same as system/shared tablespace, temp-tablespace entry is not done to SYS_DATAFILES. - Name/Path of temp-tablespace shouldn't be same as system-tablespace. This is error: -innodb_data_file_path=""ibdata1:20M;ibdata2:30M:autoextend"" --innodb_temp_data_file_path=""ibdata1:20M;ibdatatmp2:30M:autoextend"" - temp-tablespace is left as is when server is started in read-only mode. "	230b11cfbb0bd160bdeb3e3f206f80ae247a0057
----------------------------
"BUG#14775984 - RENAME GTID IDENTIFIERS The following GTID identifiers have been renamed based on the discussion with the documentation team. Before the fix                         After the fix ================                       =============== GTID_DONE 				 GTID_EXECUTED GTID_LOST 				 GTID_PURGED disable-gtid-unsafe-statements 	         enforce-gtid-consistency SQL_THREAD_WAIT_AFTER_GTIDS 		 WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS The results file of the affected tests has also been updated. "	aeb1ade7cd6655cb39335dfd9978b21eb16428d2
----------------------------
rpl_ndb - Add section specifying that second mysqld should be part of slave cluster, at least conceptually this is important for mtr.pl when creating the physical configuration 	878bbe50dd1c1489bedad011c8443d1f79b59b6e
----------------------------
Bug#14792821: CRASH IN WARNING_INFO::RESERVE_SPACE() WHEN RESIGNAL WITH MAX_ERROR_COUNT=0 This crash occured if RESIGNAL with condition value was used when max_error_count was 0. It happened because we try to make room in the error list for the new condition RESIGNAL will raise. However, we did not check if the error list actually had enough conditions to remove. So we ended up trying to remove an element from a list that was already empty. This patch fixes the problem by checking if the error list actually has any elements before trying to remove. 	5ddb90d5675581d0dfff247296c3f53393b95ecd
----------------------------
cleaned mysql-test/r/thread_cache_size_functionality.result 	957aaf0231819e7f1b47e2a73bed73e9cf0808ab
----------------------------
"BUG#14683107 - TRUNCATED VALUE FOR THREAD_CACHE_SIZE DIFFERS WHILE SERVER STARTUP DESCRIPTION: When mysqld is started with a negative thread_cache_size parameter, the thread_cache_size Global variable is reset to 16384 (MAX SIZE). Whereas when thread_cache_size is manually set using SET GLOBAL command with a negative value, the value of ""thread_cache_size"" is reset to 0, which is an inconsistent behaviour. ANALYSIS : In case of manually setting ""thread_cache_size"" using SET GLOBAL command, sys_var::do_check() takes care of sanitizing a negative input to 0 on unsigned variables, hence ""thread_cache_size"" is reset to 0. However during startup ""thread_cache_size"" is initialized by getopt_ull() passing the input string prefixed by '-' sign. This is then passed to eval_num_suffix() which uses strtoll() to convert string to numeric value. This disregards the return type and return 0xFFFFFFFFFFFFFFFF for -1 and hence this is assigned to the Global variable and it is truncated to 16384. FIX : getopt_ull() now checks to see if the input argument contains a '-' sign and if so 0 is returned. "	5f95cd51bcdc22c875941f0b265973eee577cf5d
----------------------------
Bug#14236124: WRONG CONNECTION ID (THREAD ID) IN THE GENERAL AND SLOW QUER Optional add-on to previous patch which corrected logging to file) wherein we change width of thread-ID field in slow and general log tables from INT to BIGINT (4 to 8 bytes), for correct logging of very large thread-IDs. Thread-IDs can get very large; patch adjusts general-logging and slow query logging to reflect that and log those IDs correctly. Backport to 5.6. 	3014f1deb97454fa3d54b2bb3b6d0622d535b45d
----------------------------
bug#14207773 - MYSQLD --CONSOLE DON'T SHOW ANYTHINGS In the 5.1 version of MySQL if both --console and --log-error options were given, messages from mysqld.exe were shown on the console. However after 5.3, if both options were specified, output did not go to console. This happened due to some code re factoring in revision 2876.75.1. opt_error_log variable controls whether the data sent to stderr should be redirected to the log file or not. After the refactoring this variable is being set to 1 even if the the --console option is specified. As a result output to console is redirected to log file and nothing is seen on console. Proposed fix sets opt_error_log flag only if the console option is not specified or mysqld.exe is running as a service. The changes also contains fix for some test cases that failed. The test cases failed because they depend on the creation of log file (--log-error option). The log file was not getting created because MTR by default passes --console option to MTR. I have added the --no-console option for failing test cases so that the error log file gets created. This is a windows only bug. 	73b3fbafd9ef1c34c67b0b69cb468e7a57e5d99e
----------------------------
WL#6224 Adapt MySQL Cluster to 5.6 - Two new warnings printed on master when rolling back temporary table DROP or CREATE. Only master should get the warning and it's silenced on the slave. - Compared to rpl_ddl.result but unfortunately that test does not currently run so it's not up to date. Filed bug about that. - Also examined .trace file to make sure that ha_ndbcluster does not cause the warnings to be printed 	b60a136e1b32cfe37961003638320cb138471f8f
----------------------------
Bug#14730537    NDB_MGMD --CONFIG-CACHE=FALSE OFTEN HANGS IN SHUTDOWN - Problem in mysys on certain MySQL versions where the thread id is used as the thread identifier. Since the thread id may be reused by another thread(when the current thread exits) one may end up waiting for the wrong thread. - Workaround by using a HANDLE which is opened by thread itself in 'ndb_thread_wrapper' and subsequently used to wait for the thread in 'NdbThread_WaitFor'. 	68d57da36e9b09894993feb6171de49e2c5edd9e
----------------------------
Worklog #6073: Remove INSERT DELAYED: removed delayed_insert_limit_func.result 	185426d659c48a211f883c4720c2f1368cb9f7cd
----------------------------
Bug#14741880: Sporadic query cache related crash in pthread_rwlock_init() Bug 67156: Sporadic query cache related crash in pthread_rwlock_init() Reinitializing the query cache might lead to a crash inside pthread_rwlock_init() on Mac OS X. Mac OS X's pthread_rwlock_init() implements a check to detect attempts to reinitialize a previously initialized but not yet destroyed read/write lock. This check works by looking for a signature within the rwlock object and, if the signature matches, some pointer variables within the object are dereferenced. When MySQL's query cache is resized (e.g. SET query_cache_size = ...), or simply deinitialized, the memory used to allocate blocks is freed without explicitly deinitializing the allocated blocks. In particular, 'queries blocks' contain rwlock objects that are not properly destroyed. If the query cache is resized, and the same memory region is used, and a new query block is allocated in the same position, attempting to initialize the block's read/write lock might crash if the read-write lock object signature was preserved but yet somehow some of its fields were corrupted. The solution is to properly destroy the used read-write lock objects. 	402a4c9d88b7a68622e014611c1fcb998a198df1
----------------------------
Bug#11763795 ORPHAN FILES LEFT AFTER RENAME OR DROP ON A PARTITIONED TABLE Problem: The problem is that RENAME TABLE and DROP TABLE command succeeds on tables with partition even when mysqld is started with --skip-partition option. Analysis: do_rename() and mysql_rm_table_no_locks() invoke function ha_resolve_by_legacy_type() to get the handlerton* based on FRM's legacy_db_type. These functions continue to process even when the handlerton returned is NULL. The consequence is that, RENAME and DROP commands succeeds removing only FRM files and leaving *.par files related to partitions. There are side-effects on these files not being removed. Ex: CREATE TABLE fail if mysqld is started without --skip-partition, and if the table name is same as RENAME'ed or DROP'ed table name. Fix: Check for handlerton returned by ha_resolve_by_legacy_type() call during execution of RENAME, DROP TABLE and TRUNCATE table command's and throw error if handlerton is NULL, because such plugin is not installed. 	3ce2cc46b220f0d8c9153d2db7ee8a7e57b21c96
----------------------------
Bug #4671934 - NDB_CONFIG: DEFAULT VALUES MISSING FOR PARAMETERS 	57f6b33d13513c32dad61692969ee71d515df520
----------------------------
WL #6055 New default config file in MySQL 5.6 Forgot to add new and remove old files 	8f261bce1552412e8f834626c1c8404aab2cbdfc
----------------------------
WL #6055 New default config file in MySQL 5.6 Bug #14725217 PLEASE ADD SQL_MODE=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES TO Bug #14729792 NO WARNING WHEN MY.CNF EXISTS IN /ETC/MYSQL Bug #14735440 WRONG WARNING MESSAGES SHOWN WHEN MYSQL_INSTALL_DB IS RUN Bug #14735448 NEW MY.CNF NOT CREATED WHEN --DEFAULTS-FILE IS USED WITH MYSQL_INSTALL_DB Extending mysql_install_db to install new default Handle cases where it exists already, or system file like /etc/my.cnf does 	690b65fc4ea84b067942f5888ef60fa94f6487fa
----------------------------
Bug #14211140: CRASH WHEN GRANTING OR REVOKING PROXY PRIVILEGES Description: (user,host) pair from security context is used privilege checking at the time of granting or revoking proxy privileges. This creates problem when server is started with --skip-name-resolve option because host will not contain any value. Checks should be dependent on consistent values regardless the way server is started. Further, privilege check should use (priv_user,priv_host) pair rather than values obtained from inbound connection because this pair represents the correct account context obtained from mysql.user table. 	41d06374b5ba34d117052be6400887e6ff8a77a7
----------------------------
"Bug #14731457  	MYSQL_INSTALL_DB FAILES WHEN DATADIR IS NESTED DIRECTORIES (WHICH DON'T EXIST) The Perl variant of ""mysql_install_db"" does not create the path leading to the datadir if it does not exist, the shell variant did so (silently) by ""mkdir -p"". The bug report contains the explanation why this implicit creation is considered wrong, users should create such a non-standard path. (Installation following the manual will never encounter this.) If the script is called with a datadir option whose parent directory does not exist, it will now give an error message. "	4bc1bfee4b069d72106046d5ffc4f790c5fd0809
----------------------------
WL#6372 : Post-Iris changes to Server defaults Details: - Implemented default changes for: - table_open_cache - table_definition_cache - open_files_limit - thread_cache_size - host_cache_size - query_cache_size - query_cache_type 	85407e526a83bf3a3fdf93da4b26651e873a4b75
----------------------------
ndbcluster - Disable follow up patch for Bug#13840553 by marking it with MCP tags until also 5.6 based cluster has got this patch and the .result files can be changed there 	c8f10551a097ca8f77ff9047a531d13bcf465a86
----------------------------
"Bug #14704659 ABSTRACT_QUERY_PLAN FIXES AFTER MATERIALIZED_SJ The abstract_query_plan interface which is used by ha_ndbcluster to examine a join plan while doing join push down has unfortunately been broken by the patches for materialized semi joins. 1) JOIN::join_tab array includes sj_materialized tables at the end - abstract_query_plan is currently only interested in the primary input tables and to avoid that abstract_query_plan examines the sj materialized tables at the end of the array, it should set up table accesses using JOIN::primary_tables instead of JOIN::tables. It already know how to handle the const tables which are at the fron of the join_tab array. 2) JOIN::positions and JOIN::best_positions arrays invalidated - The positions and best_positions arrays with statistics about the costs for each part of the join are invalid(set to NULL) after JOIN has been optimized. The statistics have been copied to JOIN_TAB::position and abstract_query_plan can retreive them from there when calculating the ""fan_out"" for example. "	0c5fa1ba836dcd4898013d7a54f10999dbd2b86d
----------------------------
"Bug#14274066 INNODB-MULTIPLE-TABLESPACES ""MOVE_FILE"" FAILED WITH ERROR 1 ON LINUX After several adjustments to this test case, we found that --move_file is still failing on systems that have tmpdir on a separate mount point.  The failure happens when this test tries to move a tablespace file from tmpdir to datadir, or between mount points.  This seems to be a limitation of mysql-test-run.  To get around this we tried replacing --move_file with --copy_file and --remove_file, which seemed to work. Patch suggested, tested and approved by Nuno Carvalho. "	661897fcbe7b80a48e46e07996d57acddbcdf900
----------------------------
"Bug#14665052: OPTIMIZER TRACE DIFFERS WITH QUERY_CACHE ENABLED AND QUERY_CACHE_SIZE=1M With optimizer_tracing enabled, INFORMATION_SCHEMA.OPTIMIZER_TRACE can be queried to find tracing information about the last statements. The problem was that if a query was executed by retrieving results from the query cache, no tracing information would not be added. This meant that querying INFORMATION_SCHEMA.OPTIMIZER_TRACE could give confusing results as it would omit information about queries where the result was retrieved form the query cache. This patch fixes the problem by adding an optimizer tracing information entry (""query_result_read_from_cache"") in case of a query cache hit. "	6ec156aa8b0a75f98661467316c801765b00efa5
----------------------------
"BUG#14576423 - NO WARNING WHEN THE SERVER IS STARTED WITH INVALID VALUE FOR QUERY_CACHE_SIZE DESCRIPTION: When mysqld is started with an invalid query-cache-size parameter (less than 40K according to documentation), query caching is non-functional, however the global variable ""query_cache_size"" still contains the invalid value and no warnings are displayed. Whereas when query_cache is manually set using SET GLOBAL command with an invalid value, a warning is thrown and the value of ""query_cache_size"" is reset to 0. ANALYSIS : In case of manually setting ""query_cache_size"" using SET GLOBAL command, fix_query_cache_size() is fired which is the ON_UPDATE callback for Sys_query_cache_size, this callback checks if resizing the query cache was successful and throws a warning and resets ""query_cache_size"" to 0 if an failure occurred. However during startup Query Cache is initialized in init_server_components() which does not check if Query Cache initialization failed, hence no warning is thrown and the ""query_cache_size"" global variable is not reset and happens to contain the same invalid value as passed from the command line. FIX : A new function init_server_query_cache() has been introduced which initializes Query Cache and it also shows a warning and resets ""query_cache_size"" to 0 if initialization fails. "	601ceebed1b547556766f6755005e9cd2e5fd079
----------------------------
Use small values for innodb_log_file_size in test. 	6f7e99c76cdcdae30d6b32f3cec7ebe98d9704d1
----------------------------
Fix(marko's change) Bug#14681799 CRASH RECOVERY WARNINGS ON MAC OS X  and test failure (of grep on error log and  Added size check forinnodb_log_files_in_group in test) 	40020dbb445c5b44f46dc30717e1f235c951c349
----------------------------
Merge: 711f817 c49e1f9 Bug#11753779: MAX_CONNECT_ERRORS WORKS ONLY WHEN 1ST INC_HOST_ERRORS() IS CALLED. Description: Null merge from mysql-5.6 to mysql-trunk. 	75bd06fffcfd50b406f901f290c296c30a369004
----------------------------
Merge: a63e6fd 03d2ba0 Bug#11753779: MAX_CONNECT_ERRORS WORKS ONLY WHEN 1ST INC_HOST_ERRORS() IS CALLED. Description: Null merge from mysql-5.5 to mysql-5.6 	c49e1f97ef4a459f74ccb5c82444b3a925fb948d
----------------------------
Write a proper help string for innodb_force_recovery_crash. 	4408a3cce6ed737c99223494d0478a103591dd8d
----------------------------
Cherrypick fix for ha_ndbcluster::calculate_key_hash_value from 7.0 	704eba873ea189dbb3417bbf0b027a5acc32db19
----------------------------
WL#6224 Adapt MySQL Cluster to 5.6 - Remove unnecessary usage of m_thd_ndb in ha_ndbcluster::calculate_key_hash_value, thus allowing the function to be called before m_thd_ndb has been assigned - Function still requirtes that tables has been opened 	23fee07baac2314f4f0ab3db90f1a94ca68fc7a6
----------------------------
"Description: ------------ sys_vars.all_vars fails on Windows 32 and 64 bit on daily trunk commercial branch with multiple combinations. Failure snippet- sys_vars.all_vars                        w1 [ fail ] Test ended at 2012-08-22 09:20:13 CURRENT_TEST: sys_vars.all_vars 'diff' is not recognized as an internal or external command, operable program or batch file. --- G:/pb2/test/sb_1-6672625-1345599364.71/mysql-advanced-5.7.0-m10-winx64/mysql-t est/suite/sys_vars/r/all_vars.result	2012-08-22 01:05:07.000000000 +0300 +++ G:\pb2\test\sb_1-6672625-1345599364.71\mysql-advanced-5.7.0-m10-winx64\mysql-t est\suite\sys_vars\r\all_vars.reject	2012-08-22 10:20:13.251978100 +0300 @@ -12,5 +12,7 @@ select variable_name as `There should be *no* variables listed below:` from t2 left join t1 on variable_name=test_name where test_name is null ORDER BY variable_name; There should be *no* variables listed below: +LOG_THROTTLE_QUERIES_NOT_USING_INDEXES +LOG_THROTTLE_QUERIES_NOT_USING_INDEXES drop table t1; drop table t2; mysqltest: Result length mismatch How to repeat: -------------- Seen on daily trunk commercial. mysql-test-run.pl  --timer --force --parallel=8 --comment=n_mix_4k_size --vardir=var-n_mix --mysqld=--binlog-format=mixed --experimental=collections/default.experimental --skip-ndb --skip-test-list=collections/disabled-per-push.list --mysqld=--innodb-page-size=4k --skip-test=innodb_ignore_builtin Suggested fix: -------------- The purpose of all_vars.test is to make sure that there are tests for all system variables. In daily trunk commercial it is failing because it could find test for a system variable called log_throttle_queries_not_using_indexes. In windows platform the test-name is truncated to log_throttle_queries_not_using_indexes_basic.tes Hence all_vars.test couldn't find a .test file for the above variable. Inorder to get rid of the truncation, suggested fix is to change the name of the test to a smaller name which is log_throttle_qni_basic.test Also changing the file-name must happen in conjunction with another alias-rewrite: update t2 set variable_name= replace(variable_name, ""_THROTTLE_QUERIES_NOT_USING_INDEXES"", ""_THROTTLE_QNI""); "	d233b6b5d2ec6b970c7d24a0d3ee8768833183a9
----------------------------
WL#6494 clean-up suggested in code review innobase_log_files_in_group: Remove. Bind srv_n_log_files directly to the parameter innodb_log_files_in_group. SRV_N_LOG_FILES_MAX: The maximum value of innobase_log_files_in_group. 	67f55c9d7194323a936b841555b1eea01485106c
----------------------------
WL#6494 cleanup: Remove a bogus recommendation in the help message of innodb_log_files_in_group. 	1d94a72c7fe2c61f62cab2cf50f8f91ebdcbef29
----------------------------
ndbcluster - replace use of ndbcluster_hton global variable in ha_ndbcluster::start_statement with the handlerton pointer from handler::ht 	69ed4002a10f02840cf3b4d2212c446af76d1279
----------------------------
WL#6494 crash injection for server startup (innodb_force_recovery_crash) RECOVERY_CRASH(x): A macro for crashing the server if innodb_force_recovery_crash is set to a particular value. create_log_files(), create_log_files_rename(), innobase_start_or_create_for_mysql(): Add RECOVERY_CRASH() injection. 	e013752dce718f52c18df26eba288163de5f6299
----------------------------
Test Framework changes: Rename Driver.js to driver.js Move harness.js and its README into test/lib/ Implement support for customized test environment properties -- these are configured in the file test_connection.js, which, if not present, will be created from the template in lib/test_connection_js.dist. 	c14a3dfb5af72a9dde3e92baf6860199e2ced6a2
----------------------------
Fix so that ctrl-c in configure.js really skips node-waf 	301982b674513a96ab278c2bef88db1d5d2acc6f
----------------------------
"BUG# 12793893 - binlog_innodb timed out in pushbuild. === Description === The test contained a transaction that ran a loop 2000 times. In every iteration, a row was being being inserted into a table. 2000 iterations to build up the long transaction sometimes proved to be too costly on slow platforms.The purpose behind 2000 iterations was to make sure that the transaction used the temporary binary log cache and also exceeded the value of ""binlog_cache_size"". === Fix === I toned down the loop at the same time I made sure it did not break the purpose. 1) Made the loop run 600 times. 2) Decreased the value of ""binlog_cache_size"" to 4096, the minimum allowed value defined in the manual. "	16b4e02de41cd69c9c9436440c3437654012f85e
----------------------------
WL#6494: Make innodb_log_file_size=48M the new default. mysql-test-run: Explicitly specify the old default innodb_log_file_size=5M. This can be overridden by --mysqld=--innodb-log-file-size=48M. 	264d3866d0043d79985aadbd89a553ca34bc5f41
----------------------------
WL#6494: Replace redo logs when needed. fil_close_log_files(): Close all redo log files. Forked from fil_close_all_files(). innobase_start_or_create_for_mysql(): Replace the redo log files if their current size or amount differs from the configuration. 	b527a2e5e4544b2ca7da949ce165ef0032d85180
----------------------------
Merge: a221a5a 29fdd94 Merge from mysql-trunk-wl6445. Allow InnoDB to work on read-only media e.g., DVD, CDROM . Introduce a new configuration parameter: --innodb-read-only When this configuration parameter is set: 1. Open ALL the tables in read-only mode 2. If the system was not shutdown cleanly then refuse to start. 3. Disable all background threads except the IO read threads. In a 100% pure RO workload deadlocks should not happen. 4. Disable writes to temp files, InnoDB uses temp files to log information like deadlocks, monitor output, SHOW ENGINE INNODB STATUS etc. 5. If there are entries in the UNDO log  we should  still be able to start normal operation. Purge will not remove the delete marked entries from the tables and will not trim the UNDO logs because the purge thread(s) will be disabled. 6. Refuse to start if there are entries in the change buffer. The user must do a slow shutdown or disable change buffering when creating the database that is going to be shipped on RO media. --innodb-change_buffering=OFF 7. Users should ensure that they set the REDO log file to the smallest size possible (1M) before moving to read-only media. The REDO log is only used to check whether the database was shutdown cleanly or not. 8. Some optimisations that are not done yet. 1. Disable read view creation and deletion. 2. Transaction start and commit, running in AUTO-COMMIT mode should achieve a similar effect for now. 9. Should be possible to run multiple RO instances against the same set of (shared) RO files. 10. This new parameter is independent of --read-only which is a server layer parameter Limitations: SHOW ENGINE INNODB STATUS; wont work, it will return an empty set. 	7b63164e5f8be2b331f3d07b6d03e241648f1e89
----------------------------
WL#6494 preparation: Refactor the redo log open/create. srv_log_file_size_requested: A copy of srv_log_file_size. srv_log_file_size: The actual size of the redo log files, in pages. open_or_create_log_file(): Refactor into create_log_file() and open_log_file(). innobase_start_or_create_for_mysql(): If ib_logfile0 cannot be found, create log files. Otherwise, open the log files and ensure that every file is of the same size, which is a multiple of the page size. innobase_start_or_create_for_mysql(): After processing the redo log files, if the number or size of redo log files disagrees with the configured number or size, crash the server. (This is a placeholder for the code that will replace the logs.) 	b7badc40f89b3fbf8f75b38487e7ca4d6482487f
----------------------------
BUG#11763447: 'YOU CANNOT 'ALTER' A LOG TABLE IF LOGGING IS ENABLED' EVEN IF I LOG TO FILE. Analysis: ---------- MYSQL_UPGRADE of the master breaks the replication when the query logging is enabled with FILE/NONE 'log-output' option on the slave. mysql_upgrade modifies the 'general_log' and 'slow_log' tables after the logging is disabled as below: SET @old_log_state = @@global.general_log; SET GLOBAL general_log = 'OFF'; ALTER TABLE general_log MODIFY event_time TIMESTAMP NOT NULL, ( .... ); SET GLOBAL general_log = @old_log_state; and SET @old_log_state = @@global.slow_query_log; SET GLOBAL slow_query_log = 'OFF'; ALTER TABLE slow_log MODIFY start_time TIMESTAMP NOT NULL, ( .... ); SET GLOBAL slow_query_log = @old_log_state; In the binary log, only the ALTER statements are logged but not the SET statements which turns ON/OFF the logging. So when the slave replays the binary log,the ALTER of LOG tables throws an error since the logging is enabled. Also the 'log-output' option is not checked to determine whether to allow/disallow the ALTER operation. Fix: ---- The 'log-output' option is included in the check while determining whether the query logging happens using the log tables. 	44364ed9e933552d514ba01d7d4b16e0be32c439
----------------------------
Do not try innodb_change_buffering_debug=2. 	bff1135ce06a0702674d5c6ec96e6af3ec2e4efe
----------------------------
Merge: 50406af 15602ed Bug#11753779: MAX_CONNECT_ERRORS WORKS ONLY WHEN 1ST INC_HOST_ERRORS() IS CALLED. Description: Null merge from mysql-5.6 to mysql-trunk 	b852f2c0b205814d151126a4718c912ab8dee49e
----------------------------
Merge: b8cebd7 42eac7d Bug#11753779: MAX_CONNECT_ERRORS WORKS ONLY WHEN 1ST INC_HOST_ERRORS() IS CALLED. Description: Null merge from mysql-5.5 to mysql-5.6. 	15602ed3f3867f5dad9a22fdd4b60e618517f4b0
----------------------------
Merge: 3b48d80 9f07278 Bug#11753779: MAX_CONNECT_ERRORS WORKS ONLY WHEN 1ST INC_HOST_ERRORS() IS CALLED. Description : Merge from MySQL-5.1 to MySQL-5.5 	42eac7dfc1d95ec14fa80263ee6157759d495088
----------------------------
Bug#11753779: MAX_CONNECT_ERRORS WORKS ONLY WHEN 1ST INC_HOST_ERRORS() IS CALLED. Issue       : Sequence of calling inc_host_errors() and reset_host_errors() required some changes in order to maintain correct connection error count. Solution    : Call to reset_host_errors() is shifted to a location after which no calls to inc_host_errors() are made. 	9f0727804c34d792c6fb7ee40941a5ab2b57821f
----------------------------
Additional fix for bug#14577463 CONCURRENT DDL & DML LOAD MAY CRASH MYSQLD The previous fix for this bug was not sufficient, so the bug was reopened. This fix takes care of another problem related to ref-counting and freeing of the NDB_SHARE object: If a NDB_SHARE becomes 'trailing' (It has state==NSS_DROPPED, but there are still other active operations which are using the 'to be dropped NDB_SHARE') then the NDB_SHARE will both be in the 'ndbcluster_dropped_tables' and 'ndbcluster_open_tables'. ndbcluster_real_free_share() must therefore always my_hash_delete() a 'NSS_DROPPED share' from both 'dropped' and 'open' tables before it can destruct the NDB_SHARE object. This fix is relevant for Cluster 7.2 --> only as there are no 'dropped table' hash in 7.0. 	592716f3573021622edae283708f709a74c7d3fb
----------------------------
WL#6445 - OS_AIO_SYNC is a valid mode when reading in data. Map it to the os_aio_read_array when srv_read_only_mode is set. 	a247aee5abc578a99d09e193b2592b74c9b4113c
----------------------------
"Bug #14472648 	CONFIGURED DISKCHECKPOINTSPEED EXCEEDED WHEN BACKUPMAXWRITESIZE SET TO HIGH VALU The DiskCheckpointSpeed mechanism is implemented using 100 millisecond periods, which each have 1/10th of the configured quota available. A period is allowed to overflow its quota, with the excess being taken from the next period's quota. However, this overflow was limited to the next period, after that, any further overflow was ignored. In cases where large overflows were possible, relative to the 1/10 DiskCheckPointSpeed quota, this could result in excessive disk writing, and CPU overhead as a result. Setting a larger-than standard MaxBackupWriteSize is the primary means of causing larger-than 2* quota overflows and triggering this bug. This bug is fixed by using as many subsequent periods as necessary to 'pay off' the quota overflow. This will result in the data node staying within its quota. This fix may result in slower LCP in some systems, and reduced CPU usage during LCP. A testcase, and an internal DiskCheckPointSpeed verification mechanism are added to avoid future regressions. "	9d9be9ff38e5256652e1046b436fbc735376aa03
----------------------------
Merge: 34bede8 41a7ea8 Merge 7.1 -> 7.2 of fix for bug#14577463 There has been significant changes in the alter table code from 5.1 to 5.5, thus a refactored version of this fix is required for Cluster-7.2 The main changes are due to handle_trailing_share() has now been removed from ndbcluster_create_binlog_setup() which is called as part of ndb_create_table_from_engine(). Therefore I had to add a call to handle_trailing_share() to handle_offline_alter_table_commit() itself. (Also removed the comment: '...ndb_create_table_from_engine() may delete what share is pointing to ...' as that was incorrect.) NOTE: handle_trailing_share() *is* required instead of the single free_share() it effectively replaces: We have to ensure that all (trailing) referrences to this share goes away such that the later ndb_create_table_from_engine() correctly recreates a new share instance. (Instead if reusing the old which may still exist if it had other referres) Upon request from Reviewer (Magnus), the previous suppression of warning: '...Moving away for safety, but possible memleak' thrown in ha_ndbcluster.cc has been removed. Instead we 'call mtr.add_suppression(...) in the MTR test. There might be such suppressions missing from other tests, but I intend to clean that up in a seperate commit. 	517c6cd87d2a7517921550a4ab6e80e70a2d92c9
----------------------------
Fix for bug#14524939 NDBMTD CRASH AT STARTUP IF CONFIGURED WITH MULTIPLE RECEIVER THREADS Fix ensures that idx[i] is initialized even if we break the init-loop 'if (!recvdata.m_transporters.get(node_id))' Tescase is running the ndb_basic.test with a config specifying multiple receiver threads. 	cdd371f571b6057df28c375d7bfd5c33861d02dc
----------------------------
WL#6445 - Fix some #define comments. If srv_read_only_mode is set then force all segment requests to map to the read array, in windows mode. 	346f5342b3198437adaa3480040367bbb5339ec9
----------------------------
Bug#14596888 MAX_SORT_LENGTH SHOULD BE IGNORED FOR INT/FLOAT/DECIMAL/TIME DATA TYPES Ignore variables.max_sort_length settings for int/float/decimal/time columns. 	b3e0128687709af010dbb5be6815ec996314ce5b
----------------------------
ndb - remove unused functions in LocalConfig 	cd4a2ed1ebd2ce5e4b6e0aa60316465f4aed3835
----------------------------
Move require udebug from test_config to adapter_config Annotations: save mynode.constructor and mynode.mapping Add a bit of debugging to DBTableHandler.js Change test framework to use constructor instead of prototype for mapping Explicitly map all fields of t_basic to columns Change UserConfig.js to require constructor instead of prototype Add --detail flag to Driver for detail logging 	5c7f63b1c5f67af1926ec4735ec5a52e01a8f087
----------------------------
Bug#14550945 - MTS RECOVERY CRASHES AFTER THE SERVER RESTART WHEN REPOSITORY TYPE WAS CHANGED Bug#14578740 - MTS WITH --RELAY_LOG_INFO_REPOSITORY='FILE' REDUCES WORKERS TO SCREW-UP Bug#14550905 - RECOVERY TABLES FOR MTS DON'T REFLECT CHANGES TO NUMBER OF WORKERS (Post-itch-and-review changes) The Bug#14550945 reason is that the replication part of the server bootstrap erroneously changed Relay-log info repository type and do not the same to the MTS Worker info. That made two tightly related piece of info be logically split which led to a crash when in the following START SLAVE was issued. Fixed with conducting not letting to migration whenever Worker repositories type is found to be different than the requested through the new --relay_log_info_repository value. whether to migrate to another repository type. Migration is denied and a warning is issued that the value of --relay_log_info_repository option is altered by the server. As an extra grace, this patch improves error reporting out of init_slave() failing branches. Also a former policy of tolerating error checking of the source or the destination repositories is changed to conservative. If either of the two found unusable at checking run in init_slave(), the runtime repositories won't be initialized at all to prevent running replication slave role on that server. Bug#14578740 fixes aim at refining and simplifying logics of the file type repository locating and manipulating. Fixed with providing necessary context to compose a correct file name which existence is reliably checked etc. Bug#14550905 refines post-gaps filling Worker repositories cleanup when extra Workers info from the last slave session finally becomes redundant. It is deleted as the extra table records so as extra worker files, unambiguously now thanks to Bug#14578740 fixes. 	fddcbed4cd74e180340e96e2ad98c0a3fc3b58d2
----------------------------
Bug#14593123 CONFIGURE.PL WITH CMAKE2.8 BREAKS THE BUILD Ignore --with-client-ldflags it's not supported by the cmake scripts anyways. Ignore --with-mysqld-ldflags it's only used with --with-mysqld-ldflags=-static and that doesn't work. 	e17c7b2b0b84f114fa3b5650612f0e7ad77099bd
----------------------------
This commit will (again hopefully) fix the errors that prevent the ndb_big suite from running in this branch. Obsolete engine-condition-pushdown configuration variable was replaced by set optimizer_switch = 'engine_condition_pushdown=on' 	3d5e6bfb1ae3c54baf9edcbd038b399e5076a5b2
----------------------------
This commit will (hopefully) fix the errors that prevent the ndb_big test suite from running in this branch: * Obsolete engine-condition-pushdown configuration variable was removed. * Obsolete ---system MTR command replaced with --exec. 	6214eb330dd8e823b977ab0f474ca8098768d7c2
----------------------------
"BUG#11758505: MISSING RELAY LOG FROM INDEX FILE MESSAGE ON STARTUP NOT EXPLICIT ENOUGH Problem: The error message thrown when a relay-log file is missing from the relay_log index file, is not explicit enough to inform the user that the relay-log file is not found in the index file. Old error mesaage: ""Could not find target log during relay log initialization"" Solution: We changed the error message to make sure the correct information is conveyed to the user. New error message: ""Could not find target log file mentioned in relay log info in the index file '<index_file_name>' during relay log initialization."" "	9ed9b10e38ff954309fa364b473d70c2b779f330
----------------------------
engine-condition-pushdown is deprecated, so trying to set it causes the ndb_big test suite to fail. Also condition pushdown is now enabled by default. 	a2561898d7270e8846ae0464efaeef747f5cc5db
----------------------------
WL#6445 - Rename --innodb-read-only-mode to --innodb-read-only, add sys_vars test for the new config variable. 	b81d188191e5ec2d1cdfcce05e61069a84418d8a
----------------------------
WL#6445 - Fix whitespace. Change checks for srv_read_only_mode to debug assertions in fts0opt.cc. 	cbb9deee3085d592b95a23120d1a7991f32e38aa
----------------------------
WL#6445 - Test Linux AIO read-only availability on ib_logfile0 when srv_read_only_mode is set. 	7a51d782a3aa2c8fd8c1601edcd32471b4ee49c4
----------------------------
Bug#14494275 HEAP CORRUPTION IN DECIMAL2BIN WITH LOW MAX_SORT_LENGTH The problem was that if the user sets a very small max_sort_length this value was honored by the function sortlength() but later ignored by make_sortkey(). This can result in buffer overrun. Solution one: always stay within the bounds of max_sort_length as specified by the user. This is what we have always done, even if the documentation says it is only done for strings/blobs. Sorting results may be a bit strange, since we use only the first few bytes of int/float/decimal/time. 	2e244455fb84f88ff49089e5c6db53cb18283677
----------------------------
WL#6445 - Don't dump the buffer pool if srv_read_only_mode is set. Code cleanup. 	08cfc96c088a70d58b008805a06414f6e594714b
----------------------------
WL#6445 - Map ibuf and log page read requests to the READ IO threads if InnoDB is configured to run in read-only mode. 	de3846ba6d9efa0bc89ad75d7a34cc84fb854713
----------------------------
Fix Bug#14525151 DATAFILES TOUCHED BY 5.6 ARE NOT READABLE BY 5.5 Revert parts of sergey.vojtovich@oracle.com-20120529064458-va87z5ccpanrv3xi in order to restore the default value of innodb_checksum_algorithm to 'innodb'. 	e8d30794fba978a00ff3c0eadfb2da085602633c
----------------------------
Bug #13548161: MYSQLD_SAFE IMPROVEMENTS FOR 5.5 ALLWAYS SETS PLUGIN_DIR TO DEFAULT IGNOR The test in mysqld_safe for the presence of the --plugin-dir and assigning a default value to it were performed before the actual argument parsing. This is wrong, as PLUGIN_DIR mysqld_safe code also uses MY_BASEDIR_VERSION to look for version specific plugin directory if present. Fixed by moving the PLUGIN_DIR logic after the parse_arguments() call. 	92d2f60e1265c6c0c71d0eef90dde919e4981ba7
----------------------------
part of WL#6347 InnoDB: Index level compression stats Run innodb_cmp_per_index_enabled_basic.test only on 16k page sizes since we create a table with an option KEY_BLOCK_SIZE=8k which only works with 16k or 8k page sizes. There is no way to run the test on 8k or 16k pages, but not on 4k, thus we run it only on 16k pages. 	774ccd0d39ab01c3c9cbeb31a61efe471db25088
----------------------------
WL#6445 - Change fprintf() to ib_logf(). If srv_read_ony_mode is set then all IO is handled by the background read IO threads and disable the creation of the IBUF, LOG and WRITER threads. Disable persistent statistics calculation if srv_read_only_mode in ha_innodb.cc. Move printing of the CRC32 setting to srv0start.cc. Change scope to GLOBAL for ut_crc32_sse2_enabled in ut0crc32.cc. 	78e5341c7cb4f3f6826cfa56ef3e1a13bfd72c67
----------------------------
WL#6445 - Add check for srv_read_only_mode. 	7746f1b14ff843601363ca79f008753e904b1a87
----------------------------
WL#6445 - Remove bogus paramaters to callback function.  Don't initiate rollback of recovered transactions on start if srv_read_only_mode is set. 	ea7c0695f84ba65a37c6f0224b5c143d296f6509
----------------------------
Bug#13897025 - SLAVE_PARALLEL_WORKERS DEGRADES REPLICATION PERFORMANCE The reason of degradation appeared to be two-fold. The load of the test report contained FK-related databases with rather aggressive load to them forcing MTS frequently switching to sequential execution which is somewhat expensive. The other reason turns out to be a mistake in the source code in resetting a multiplier to the Coordinator nap. The multiplier is computed as a number of excessive events counting from a certain overrun level of the Worker queue. It was not reset to zero that made the multiplier grow over time which manifested in the observed slave execution slowdown. Fixed with correcting the nap factor computing. An assert is deployed to prove the correct resetting in the case of one Worker. In order to hunt over possible performance reports more statistics is made to printed into error log with --log-warnings=2. 	188ecb84e75d1a9dbb85320ff3fd3180f6e4e8e5
----------------------------
Bug#14498355: DEPRECATION WARNINGS SHOULD NOT CONTAIN MYSQL VERSION NUMBERS If a system variable was declared as deprecated without mention of an alternative, the message would look funny, e.g. for @@delayed_insert_limit: Warning 1287 '@@delayed_insert_limit' is deprecated and will be removed in MySQL . The message was meant to display the version number, but it's not possible to give one when declaring a system variable. The fix does two things: 1) The definition of the message ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT is changed so that it does not display a version number. I.e. in English the message now reads: Warning 1287 The syntax '@@delayed_insert_limit' is deprecated and will be removed in a future version. 2) The message ER_WARN_DEPRECATED_SYNTAX_WITH_VER is discontinued in favor of ER_WARN_DEPRECATED_SYNTAX for system variables. This change was already done in versions 5.6 and above as part of wl#5265. This part is simply back-ported from the worklog. 	905e458433b826bee4c73ba49227e44050e7ec36
----------------------------
Patch for Bug#14483430 (RECONSIDER MYSQL 5.6.6 BIND-ADDRESS BEHAVIOUR WHEN CONFIGURED AS DEFAULT *). The bug was introduced by WL#6301 (Change default value for the 'bind-address' option). The user visible problem was that the server didn't start with the default value of bind-address, which is '*'. The star means that the server should choose '::' or '0.0.0.0' depending on whether IPv6 is available on the box or not. The IPv6 detection was implemented by calling getaddrinfo() for the IPv6-address. It turned out, it is not enough -- getaddrinfo() might successfully return, but later OS failed to create an IPv6-socket. This problem is platform dependent (reproduced on CentOS 5.2). The fix is to make the check more strict -- try to create a dummy IPv6-socket after getaddrinfo() succeeds. No test case for the bug since it is platform specific. 	da66e3850d0b186a3c86e06daa4bc3208ad5cc62
----------------------------
WL#6344 Make compression level and logging of compressed pages configurable Backport from trunk:inaam.rana@oracle.com-20120726094441-lrqs0hi6dy629713 The following test cases which were part of the original push to trunk but were not directly related to the WL are not backported in this push and will be pushed separately. mysql-test/suite/innodb/t/innodb_crash_recov_log_compressed_after_commit_0.test mysql-test/suite/innodb/t/innodb_crash_recov_log_compressed_after_commit_1.test mysql-test/suite/innodb/t/innodb_crash_recov_log_compressed_before_commit_0.test mysql-test/suite/innodb/t/innodb_crash_recov_log_compressed_before_commit_1.test 	72d656acdf082d5ead1cc1be84f2fd68ab6a65a9
----------------------------
WL#6445 - Disable the writer/ibuf/sync threads if srv_read_only_mode is set. 	68ebb5fd14c6945d9bf0f372864175e6bd03dd13
----------------------------
BUG#14259744 - RPL.RPL_PACKET TEST FAILS ON PB2 AFTER WL#5924 CHANGES Problem : The basic reason for the failure was the change in the connection attributes introduced as a part of WL#5924. The lenght of packet with information that was sent over when a client's connected to the server was changed as a part of this worklog. But the packet information that is sent across from the client to the server is of greater length in case of windows compared to the information sent in case of linux which was caused due to the WL5924 implementation. This is because apart from the all the common information was added on the client connect string (WL5924) we also have few extra parameters specifically for windows platform : Only on windows: _command_line : the process command line _thread : the calling thread id from GetCurrentThreadId() In this test the value of max_allowed_packet is reduced when the server starts using the option passed in the .opt file. So when mysqltest tries to connect to the server, on windows the client information that is sent exceeds the max_allowed_packet of the server which causes the failure. Fix : The problem is fixed by appropriately modifying the max_allowed_packet of two servers and modifying the test accordingly. 	d1c1cc9c1f74360452c77e754fdadb136537b68b
----------------------------
Bug#11754304 INNODB CALLS FSYNC FOR WRITES WITH INNODB_FLUSH_METHOD=O_DIRECT rb://1226 approved by: Sunny Bains Add a new possible value O_DIRECT_NO_FSYNC to innodb_flush_method. This value will implies that the user wants to use O_DIRECT with no fsync() which is different from existing O_DIRECT which means use O_DIRECT but also call fsync() to cover unknown/unexpected behaviour of FS. 	970a6c3fa83b38f6ca4e279fa4649dda78a25505
----------------------------
WL#6445 - HA_ERR_TABLE_READ_ONLY should have been HA_ERR_TABLE_READONLY. 	92ee04485e25dd71131b6c4265d4d69eaf175435
----------------------------
WL#6455 - Repace HA_ERR_READ_ONLY_TRANSACTION with HA_ERR_TABLE_READ_ONLY. 	5b2dc8c4ea65f3ae7e77d9403e7939d46a2e3220
----------------------------
WL#6445 - Return HA_ERR_TABLE_READONLY instead of HA_ERR_READ_ONLY_TRANSACTION. 	fdd9b68ff7723e632bf35fcede603b48993cfd0c
----------------------------
Bug #14399795 : ISSUES RELATED TO SETTING AUDIT_LOG_STRATEGY DURING SERVER STARTUP The options parser now correctly checks for ambiguous prefixes in enumerated variables and emits an error when the value supplied is ambiguous. No test added since mysql-test-run.pl can't handle server startup failures as an expected state. 	ab3862b814070d8bbfa8a71601d86034488ccd52
----------------------------
Bug #14503692: -SSL-CRL AND --SSL-CRLPATH HAVE A WRONG OPTION ID Fixed the ids of the command line options to use the correct option ids. 	a2b16770da6a888753d04483413c27cf8288e333
----------------------------
"Fix for Bug#14489398 CLUSTER BACKUP FAILS WHEN USING NDBMTD AND CONFIGURED MULTIPLE LQHS Fix regression introduced by push: 3923 Ole John Aske	2012-05-23 This is the improved 'save_mem.patch' from Mikael R. patch set That push tried to save memory used for interthread communication buffers by not allocated buffers between those threads which was assumed to not communicate. LDM <-> LDM communication was one of the places where such buffers where removed. However, the BACKUP-block is part of the LDM thread, and during backup the first BACKUP instance in LDM thread#1 will act as client/coordinator. Thus it *will* communicate with other LDM threads! This fix introduce special handling of LDM thread#1, and 'opens up' communication between that thread and other LDM threads. Instead of writing a completely new testcase to cover this fix, I have introduced 'ndb_restore_misc.cnf' which overrides 'MaxNoOfExecutionThreads=4' - Such that at least one of the existing backup-restore tests are run with multiple LDM threads. If the BACKUP is later made full multithreaded, the changes to mt.cpp in this patch should be reverted. "	59058bd4806bfb114e85ca6373500d8dcabdd326
----------------------------
"Bug#13596613:SHOW SLAVE STATUS GIVES WRONG OUTPUT WITH MASTER-MASTER AND USING SET USE Problem: ======= In a master-master set-up, a master can show a wrong 'SHOW SLAVE STATUS' output. Requirements: - master-master - log_slave_updates This is caused when using SET user-variables and then using it to perform writes. From then on the master that performed the insert will have a SHOW SLAVE STATUS that is wrong and it will never get updated until a write happens on the other master. On""Master A"" the ""exec_master_log_pos"" is not getting updated. Analysis: ======== Slave receives a ""User_var"" event from the master and after applying the event, when ""log_slave_updates"" option is enabled the slave tries to write this applied event into its own binary log. At the time of writing this event the slave should use the ""originating server-id"". But in the above case the sever always logs the  ""user var events"" by using its global server-id. Due to this in a ""master-master"" replication when the event comes back to the originating server the ""User_var_event"" doesn't get skipped. ""User_var_events"" are context based events and they always follow with a query event which marks their end of group. Due to the above mentioned problem with ""User_var_event"" logging the ""User_var_event"" never gets skipped where as its corresponding ""query_event"" gets skipped. Hence the ""User_var"" event always waits for the next ""query event"" and the ""Exec_master_log_position"" does not get updated properly. Fix: === `MYSQL_BIN_LOG::write' function is used to write events into binary log. Within this function a new object for ""User_var_log_event"" is created and this new object is used to write the ""User_var"" event in the binlog. ""User var"" event is inherited from ""Log_event"". This ""Log_event"" has different overloaded constructors. When a ""THD"" object is present ""Log_event(thd,...)"" constructor should be used to initialise the objects and in the absence of a valid ""THD"" object ""Log_event()"" minimal constructor should be used. In the above mentioned problem always default minimal constructor was used which is incorrect. This minimal constructor is replaced with ""Log_event(thd,...)"". "	c6d8569d4116f7d9e78e4e48af26337f2b38208f
----------------------------
Bug#14175020 INCONSISTENT NAME FOR INNODB_MAX_IO_CAPACITY OPTION rb://1185 approved by: Marko Makela Rename innodb_max_io_capacity to innodb_io_capacity_max so that it is alphabetically closer to innodb_io_capacity. Makes for better documentation. 	1cc335ef16d39ec9b4f94e5341dec30e0c96e599
----------------------------
Merge: d646af0 a6ae434 Bug #13115401: -SSL-KEY VALUE IS NOT VALIDATED AND IT ALLOWS INSECURE CONNECTIONS IF SPE Merged from mysql-5.6 to mysql-trunk 	7a5dcd119fe71fd16de88ea12fee121090e18848
----------------------------
Merge: de47ad6 cd5a420 Bug #13115401: -SSL-KEY VALUE IS NOT VALIDATED AND IT ALLOWS INSECURE CONNECTIONS IF SPE Merged from mysql-5.5 to mysql-5.6 	a6ae434da16d634570093b144733e40573482623
----------------------------
Merge: ec766b5 40319e9 Bug #13115401: -SSL-KEY VALUE IS NOT VALIDATED AND IT ALLOWS INSECURE CONNECTIONS IF SPE Merged from mysql-5.1 to mysql-5.5 	cd5a42085fc9596de66933c77cb2107b20331502
----------------------------
Bug #13115401: -SSL-KEY VALUE IS NOT VALIDATED AND IT ALLOWS INSECURE CONNECTIONS IF SPE Problem description: -ssl-key value is not validated, you can assign any bogus text to --ssl-key and it is not verified that it exists, and more importantly, it allows the client to connect to mysqld. Fix: Added proper validations checks for --ssl-key. Note: 1) Documentation changes require for 5.1, 5.5, 5.6 and trunk in the sections listed below and the details are : http://dev.mysql.com/doc/refman/5.6/en/ssl-options.html#option_general_ssl and REQUIRE SSL section of http://dev.mysql.com/doc/refman/5.6/en/grant.html 2) Client having with option '--ssl', should able to get ssl connection. This will be implemented as part of separate fix in 5.6 and trunk. 	40319e9b44d778d570bd146d4a43e1d1842bb357
----------------------------
Added innodb_autoextend_increment=8 to the default variables for DB Install subroutine 	12f7b6e97025eac5def8a9ade043b6286d9c4e7e
----------------------------
"Bug#13058122 - DML, LOCK/UNLOCK TABLES AND SELECT LEAD TO FOREVER MDL LOCK Analysis: ---------- While granting MDL lock for the lock requests in wait queue, first the lock is granted to the high priority lock types and then to the low priority lock types. MDL Priority Matrix, +-------------+----+---+---+---+----+-----+ | Locks       |    |   |   |   |    |     | | has Priority|    |   |   |   |    |     | | over --->   |  S | SR| SW| SU| SNW| SNRW| +-------------+----+---+---+---+----+-----+ | X           |  + | + | + | + | +  | +   | +-------------|----|---|---|---|----|-----| | SNRW        |  - | + | + | - | -  | -   | +-------------|----|---|---|---|----|-----| | SNW         |  - | - | + | - | -  | -   | +-------------+----+---+---+---+----+-----+ Here '+' means, Lock priority is higher. '-' means, Has same priority In the scenario where, *. Lock wait queue has requests of type S/SR/SW/SU. *. And locks of high priority X/SNRW/SNW are requested continuously. In this case, while granting lock, always first high priority lock requests(X/SNRW/SNW) are considered. Low priority locks(S/SR/SW/SU) will not get chance and they will wait forever. In the scenario for which this bug is reported, application executed many LOCK TABLES ... WRITE statements concurrently. These statements request SNRW lock. Also there were some connections trying to execute DML statements requesting SR lock. Since SNRW lock request has higher priority (and as they were too many waiting SNRW requests) lock is always granted to it. So, lock request SR will wait forever, resulting in DML starvation. How is this handled in 5.1? --------------------------- Even in 5.1 we have low priority lock starvation issue. But, in 5.1 thread locking, system variable ""max_write_lock_count"" can be configured to grant some pending read lock requests. After ""max_write_lock_count"" of write lock grants all the low priority locks are granted. Why this issue is seen in 5.5/trunk? --------------------------------- In 5.5/trunk MDL locking, ""max_write_lock_count"" system variable exists but not used in MDL, only thread lock uses it. So no effect of ""max_write_lock_count"" in MDL locking. This means that starvation of metadata locks is possible even if max_write_lock_count is used. Looks like, customer was using ""max_write_lock_count"" in 5.1 and when upgraded to 5.5, starvation is seen because of not having effect of ""max_write_lock_count"" in MDL. Fix: ---------- As a fix, support for max_write_lock_count is added to MDL. To maintain write lock counter per MDL_lock object, new member ""m_hog_lock_count"" is added in MDL_lock. And following logic is added to increment the counter in function reschedule_waiters, (reschedule_waiters function is called while thread is releasing the lock) - After granting lock request from the wait queue. -  Check if there are any S/SR/SU/SW exists in the wait queue - If yes then increment the ""m_hog_lock_count"" And following logic is added in the same function to handle pending S/SU/SR/SW locks - Before granting locks - Check if max_write_lock_count <= m_hog_lock_count - If Yes, then try to grant S/SR/SW/SU locks. (Since all of these has same priority, all locks are granted together. But some lock grant may fail because of grant incompatibility) - Reset m_hog_lock_count if there no low priority lock requests in wait queue. - return Note: -------------------------- In the lock priority matrix explained above, though X has priority over the SNW and SNRW. X locks is taken mostly for RENAME, TRUNCATE, CREATE ... operations. So lock type X may not be requested in loop continuously in real world applications, as compared to other lock request types. So, lock request of type SNW and SNRW are not starved. So, we can grant all S/SR/SU/SW in one shot, without considering SNW & SNRW lock request starvation. ALTER table operations take SU lock first and then upgrade to SNW if required. All S, SR, SW, SU have same lock priority. So while granting SU, request of types SR, SW, S are also granted in one shot. So, lock request of type SU->SNW in loop will not make other low priority lock request to starve. But, when there is request for lock of type SNRW, lock requests of lower priority types are not granted. And if SNRW is requested in loop continuously then all S, SR, SW, SU are starved. This patch addresses the latter scenario. When we have S/SR/SW/SU in wait queue and if there are - Continuous SNRW lock requests - OR one or more X and Continuous SNRW lock requests. - OR one SNW and Continuous SNRW lock requests. - OR one SNW, one or more X and continuous SNRW lock requests. in wait queue then, S/SR/SW/SU lock request are starved. "	da244123e6588d82a096dfae9189d8aa063bf9c0
----------------------------
part of WL#6347 InnoDB: Index level compression stats Extend the test innodb_cmp_per_index_enabled_basic by trying to set some non-allowed values to the boolean config knob. 	765bd25681e80b5a25e9dce4fce169f29f3639ec
----------------------------
Bug#14392699: WHEN DEFAULTS-FILE USED, CLIENT CONNECTIONS HANG AFTER 'INSTALL PLUGIN' The server uses whatever is the current working directory at startup time to read the configuration files etc. Then it chdir's to the data directory for a number of valid reasons. So, when it's time to re-read the arguments at plugin load time the relative paths won't work as expected any more. This is correctly detected by the plugin loading code and an error is generated. Unfortunately when this error is propagated up the stack one lock is not unlocked. This causes normal server operation to be impossible. Fixed by correctly releasing the lock in case of an error. Also, made a minor change in the default option handling to make sure that defaults file's path doesn't get re-evaluated. Automated testing not really possible, since pb2 and mtr have non-constant test directories relative layouts. Also, its currently not feasible to start a mysqld instance with a defaults file (with a non-absolute file name) and then use it to execute queries that make server to re-read the specified config file. 	7fb617b009dbd07b485a48401e97d601fa180790
----------------------------
Bug#14409088 - MAKE --EXPLICIT_DEFAULTS_FOR_TIMESTAMP SETTING VISIBLE TO USERS WL6292 introduced --explicit_defaults_for_timestamp server option. This option causes (when set) CREATE TABLE to create all TIMESTAMP columns as NULL with DEFAULT NULL attribute, Without this option, TIMESTAMP columns are NOT NULL and have implicit DEFAULT clauses. The old behavior is deprecated. The problem is that --explicit_defaults_for_timestamp option is not currently visible for users. This make it hard for users to make runtime decision that depends on knowing how the server is going to handle TIMESTAMP columns. This fix makes it visible to users. 	1c54bea048f390fd54a76825149dd72a6db5cac0
----------------------------
BUG#11749055 - INSERT SELECT ON DUPLICATE KEY UPDATE, LOAD DATA REPLACE WRONG LOCK BACKGROUND: INSERT SELECT ON DUPLICATE KEY UPDATE and LOAD DATA CONCURRENT REPLACE uses TL_WRITE_CONCURRENT_INSERT lock though it either update/inserts or deletes/inserts a row respectively. ANALYSIS: When a SELECT SUM(column_name) UNION SELECT SUM(column_name) query is issued and while it is running if following two commands are run 1. INSERT SELECT ON DUPLICATE KEY UPDATE 2. LOAD DATA CONCURRENT REPLACE Second SELECT SUM(column_name) gets different values from the first SELECT query as the tuples in the table have either been updated/inserted OR deleted/inserted in the table repectively, when the above SELECT..UNION query is running Same issue exists with simple INSERT.. ON DUPLICATE KEY UPDATE when it is used in stored function or trigger. This behaviour is not desired i.e Both SELECT's in this union query should have the same view of the table when it starts. The root cause for this bug INSERT or INSERT SELECT with ON DUPLICATE KEY UPDATE clause and LOAD DATA CONCURRENT REPLACE should not be doing updates/deletes respectively with TL_WRITE_CONCURRENT_INSERT lock. FIX: This bug is fixed by changing the default lock type of INSERT or INSERT..SELECT statement to TL_WRITE_DEFAULT lock in the parser itself when they are issued with ON DUPLICATE KEY UPDATE clause. Same is taken care for LOAD DATA CONCURRENT REPLACE statement as well. NOTE: When CONCURRENT is specified with REPLACE in LOAD DATA statement CONCURRENT is overridden by REPLACE. 	b3b8022dd5d8d27926f731aea6319a03a63af20c
----------------------------
Bug#14315223 - INNODB ASSERT IN TRX0RSEG.CC FOR MYSQL_INSTALL_DB The assert in this bug happens because ibdata1 was initialized like this; innodb_data_file_path=ibdata1:10M:autoextend:max:10M InnoDB asserts when there is not enough space in the system tablespace to allocate all pages needed at bootstrap. A maximum size of 10 Mb works in 5.1 because the initial requires size of ibdata1 was less than 10M. But in 5.5, a change was made to allocate all 128 rollback segments at bootstrap.  Since then, the initial size has been 10M + the default autoextend size of 8M.  If we were to make the default initial size of ibdata1 to be just 11M instead of 10M, it would not autoextend during bootstrap and the initial size of each ibdata1 file would be 11M. This patch simply changes it to 12M to make room for a few small tables before it does the first autoextend.  This will help MTR run faster. In 5.6, worklog 6216 changes the autoextend size from 8M to 64M. This changes the initial size of ibdata1 from 18M in 5.5 and earlier releases of 5.6 to 74M in the current mysql-5.6 and mysql-trunk. So this change is especially needed in 5.6. This patch does not fix the possibility of the assert in this bug. But it makes it less likely that someone would use a senseless startup setting like that by declaring a more appropriate initial size for the system tablespace. RB:1173 approved by Sunny and also reviewed by Jimmy. 	38c3f2340a2acfd6edb8a952d4a16c7c7fac8520
----------------------------
"Merge: 25a404e 17ef817 Bug#11753308: MYSQL_KILL() AND COM_PROCESS_KILL ONLY HANDLE 32-BIT IDS The connection ID / ""thread-ID"" is currently 32 bit on the wire, but may be 64 bit in the API, depending on the definition of ulong on a given platform. If we silently drop half the bits on the floor, mysql_thread_id() in Connector-C may give incorrect results, and mysql_kill() might ask for the wrong (and usually long expired) thread to be terminated, even if a 64-bitly correct ID were obtained with ""SELECT connection_ID()"". We now guard against some 32/64 issues. We do this in both the client and the server to address mixed scenarios of old server / new client and vice versa. Using SQL instead of the C API (SELECT CONNECTION_ID() / KILL CONNECTION ...) should produce better results. mysqladmin already does this. Docs implications: - Discourage use mysql_thread_id() / mysql_kill(). current status is that they produce incorrect results / try to kill the wrong thread once more than 2^32 threads are created (IOW, this only affects extremely busy servers or those with an extreme uptime. The server also needs to use 64-bit thread_IDs for this to apply. This is platform specific, not a mysqld configurable.) Patched status is that the calls will work normally as long as thread_IDs are in safe range (< 2^32), but will throw an error a) if mysql_kill() in Connector-C is called with a value >= 2^32, or b) if mysql_kill() is used at all, even with ostentably correct values, once thread_ID in the server has exceeded what can be expressed within 32 bits. - encourage use of the SQL equivalents, SELECT connection_ID() / KILL CONNECTION ... - mysqladmin already does this, and is therefore safe. - mysql_kill() will throw CR_INVALID_CONN_HANDLE if it is given a larger value than can be expressed in the 32-bit wire protocol. - mysqld will throw ER_DATA_OUT_OF_RANGE on mysql_kill() once thread_ID in mysqld exceeds 32-bits. "	b422dacab886ed01e2f8a9f7e31eae0a214cb4ee
----------------------------
part of WL#6347 InnoDB: Index level compression stats Add mtr test for innodb_cmp_per_index_enabled. 	0a2c253cf2d7ed07f3cbfd05e55540ccf041970f
----------------------------
"part of WL#6347 InnoDB: Index level compression stats Reset per index zip stats when innodb_cmp_per_index_enabled is set, but only if it was not set beforehand. Also save the value of ""save"" into ""srv_cmp_per_index_enabled"", otherwise the SET GLOBAL innodb_cmp_per_index_enabled=...; commands have no effect. Suggested by:	Inaam (http://bur03.no.oracle.com/rb/r/1116/) "	818d082d33c357aab62c83e3788b853efab51f13
----------------------------
WL#6344 Make compression level and logging of compressed pages configurable rb://1111 approved by: Sunny Bains (based on facebook contribution) New Parameters: =============== innodb_compression_level: default 6 range 0 - 9. dynamic. specifies the compression level used by zlib. innodb_log_compressed pages: default true (same as current behaviour): specifies whether or not we need to store compressed index page images in the redo after we make such a change that causes recompression. This patch introduces two new redo log rec types: +#define MLOG_ZIP_PAGE_COMPRESS_NO_DATA         ((byte)52)/*!< compress an index page +                                               without logging it's image */ +#define MLOG_ZIP_PAGE_REORGANIZE ((byte)53)    /*!< reorganize a compressed +                                               page */ 	dfef501534e0d71f04f1570c75c98e0829fe9832
----------------------------
Bug#13699303 - THREAD POOL PLUGIN IGNORES TIMEOUT. PROBLEM: mysql provides a feature where in a session which is idle for a period specified by the wait_timeout variable (whose value is in seconds), the session is closed This feature is not present when we use thread pool. FIX: This patch implements the interface functions which is required to implement the wait_timeout functionality in the thread pool plugin. 	436c0b04cb6c2163c558adef033518b01de8251c
----------------------------
Merge: b467dd4 2f2e0d9 BUG#14364558 - ASSERT `TABLE_LIST->PRELOCKING_PLACEHOLDER == FALSE' FAILED IN CHECK_LOCK_AND_START_STMT Problem: rqg_signal_resignal test hits the assert DBUG_ASSERT(table_list->prelocking_placeholder == false), in check_lock_and_start_stmt(); Analysis: The above assert was added as part of fix for Bug#13036505, to capture the fact that prelocking_placeholder should always be false in check_lock_and_start_stmt() in theory. But in practice, this assertion is hit. Even without the fix Bug#13036505 this problem exists. So, this problem is not an effect to Bug#13036505, and hence can be treated as a new issue. For now we shall remove this assert which will keep the old behavior. And we keep this bug open, so as to dig into the issue more and provide proper fix. Current observation is that, the problem is not reproducible with --threads=[<=3] and could be due to concurrent operations. perl runall.pl --threads=10 --queries=1M --duration=300 --grammar=conf/runtime/signal_resignal.yy --mysqld=--max-sp-recursion-depth=10 --reporters=Deadlock,ErrorLog,Backtrace,Shutdown --basedir=$BASEDIR --vardir=vardir  --mysqld=--log-output=file --mysqld=--loose-lock-wait-timeout=1 --mysqld=--loose-innodb-lock-wait-timeout=1 --testname=rqg_signal_resignal 	4d9fb4f0b1817cd6c7e83c7d6dec388f80389299
----------------------------
BUG#14364558 - ASSERT `TABLE_LIST->PRELOCKING_PLACEHOLDER == FALSE' FAILED IN CHECK_LOCK_AND_START_STMT Problem: rqg_signal_resignal test hits the assert DBUG_ASSERT(table_list->prelocking_placeholder == false), in check_lock_and_start_stmt(); Analysis: The above assert was added as part of fix for Bug#13036505, to capture the fact that prelocking_placeholder should always be false in check_lock_and_start_stmt() in theory. But in practice, this assertion is hit. Even without the fix Bug#13036505 this problem exists. So, this problem is not an effect to Bug#13036505, and hence can be treated as a new issue. For now we shall remove this assert which will keep the old behavior. And we keep this bug open, so as to dig into the issue more and provide proper fix. Current observation is that, the problem is not reproducible with --threads=[<=3] and could be due to concurrent operations. perl runall.pl --threads=10 --queries=1M --duration=300 --grammar=conf/runtime/signal_resignal.yy --mysqld=--max-sp-recursion-depth=10 --reporters=Deadlock,ErrorLog,Backtrace,Shutdown --basedir=$BASEDIR --vardir=vardir  --mysqld=--log-output=file --mysqld=--loose-lock-wait-timeout=1 --mysqld=--loose-innodb-lock-wait-timeout=1 --testname=rqg_signal_resignal 	2f2e0d9cc11ecd08552c4c9102b45744e140becc
----------------------------
Bug#13699303 - THREAD POOL PLUGIN IGNORES TIMEOUT. PROBLEM: mysql provides a feature where in a session which is idle for a period specified by the wait_timeout variable (whose value is in seconds), the session is closed This feature is not present when we use thread pool. FIX: This patch implements the interface functions which is required to implement the wait_timeout functionality in the thread pool plugin. 	89a52fffe434e96b181f1b00bca0d52b740cdf40
----------------------------
BUG#14298750: SLAVE_MASTER_INFO NOT UPDATED WHEN SLAVE ATTACHED TO MASTER Problem: When setting up replication on a master and slave where the slave is using master-info-repository=TABLE, the table is not updated when replication is started. This is because the table mysql.slave_master_info is not synchronized automatically when @@GLOBAL.sync_master_info=0 and this causes applications reading this table to fail or behave incorrectly. Solution: We fix this problem by synchronizing mysql.slave_master_info during CHANGE MASTER command. 	2a75648ac5b0ceeabea437604decf732cc664127
----------------------------
"Bug#13961678:MULTI-STATEMENT TRANSACTION REQUIRED MORE THAN 'MAX_BINLOG_CACHE_SIZE' ERROR Problem: ======= MySQL returns following error in win64. ""ERROR 1197 (HY000): Multi-statement transaction required more than 'max_binlog_cache_size' bytes of storage; increase this mysqld variable and try again"" when user tries to load >4G file even if max_binlog_cache_size set to maximum value. On Linux everything works fine. Analysis: ======== The `max_binlog_cache_size' variable is of type `ulonglong'.  This value is set to `ULONGLONG_MAX' at the time of server start up. The above value is stored in an intermediate variable named `saved_max_binlog_cache_size' which is of type `ulong'. In visual c++ complier the `ulong' type is of 4bytes in size and hence the value is getting truncated to '4GB' and the cache is not able to grow beyond 4GB size. The same limitation is observed with ""max_binlog_stmt_cache_size"" as well. Similar fix has been applied. Fix: === As part of fix the type ""ulong"" is replaced with ""my_off_t"" which is of type ""ulonglong"". "	f9e6613bd4f118eab00881900b1f2c6ef0554e7f
----------------------------
"Some test restructuring: Create test_config.js Move ""Suite"" implementation from Driver.js into harness Move harness into test/lib/ and create test_utils.js there Move fail_openSession from Driver.js into test_utils Systematize test files and names under spi/ Move annotations test (not an spi test) from spi to t_basic "	ea5652fd26d632df306e61eb852f3216a00866ce
----------------------------
Reverting broken configure/make stuff 	3fb225252a98ab4494c425a01663c1fa7476f768
----------------------------
Bug #14035452 - MODULARIZE MYSQL_CLIENT_TEST Added new minimal client using same framework Added internal test using it Small changes to top level make/configure/cmake to have it built 	1a6ce811fdbb93c974ecd75e6951dca30bbc6262
----------------------------
"Attempt to fix Bug#14278519 CRASH OBSERVED IN INNODB.INNODB_STATS_AUTO_RECALC_LOTS ON VALGRIND RUN IN PB2 Do not declare the bpage arg to buf_flush_try_yield() to be nonnull since it can be NULL actually and the suspicion is that the compiler has optimized away the check whether bpage is NULL inside that function. From the GCC doc on nonnull attribute: ""The compiler may also choose to make optimizations based on the knowledge that certain function arguments will not be null."" The current code (before this commit) is compiled to: (gdb) disas buf_flush_try_yield Dump of assembler code for function buf_flush_try_yield: 0x00000000009a9950 <buf_flush_try_yield+0>:	push   %rbp 0x00000000009a9951 <buf_flush_try_yield+1>:	mov    %rsp,%rbp 0x00000000009a9954 <buf_flush_try_yield+4>:	mov    %r12,0xfffffffffffffff0(%rbp) 0x00000000009a9958 <buf_flush_try_yield+8>:	mov    %r13,0xfffffffffffffff8(%rbp) 0x00000000009a995c <buf_flush_try_yield+12>:	mov    %rsi,%r12 0x00000000009a995f <buf_flush_try_yield+15>:	mov    %rbx,0xffffffffffffffe8(%rbp) 0x00000000009a9963 <buf_flush_try_yield+19>:	sub    $0x20,%rsp 0x00000000009a9967 <buf_flush_try_yield+23>:	cmp    $0x3ff,%rdx 0x00000000009a996e <buf_flush_try_yield+30>:	mov    %rdi,%r13 0x00000000009a9971 <buf_flush_try_yield+33>:	ja     0x9a9983 <buf_flush_try_yield+51> 0x00000000009a9973 <buf_flush_try_yield+35>:	xor    %eax,%eax 0x00000000009a9975 <buf_flush_try_yield+37>:	mov    0xffffffffffffffe8(%rbp),%rbx 0x00000000009a9979 <buf_flush_try_yield+41>:	mov    0xfffffffffffffff0(%rbp),%r12 0x00000000009a997d <buf_flush_try_yield+45>:	mov    0xfffffffffffffff8(%rbp),%r13 0x00000000009a9981 <buf_flush_try_yield+49>:	leaveq 0x00000000009a9982 <buf_flush_try_yield+50>:	retq 0x00000000009a9983 <buf_flush_try_yield+51>:	mov    %rsi,%rdi 0x00000000009a9986 <buf_flush_try_yield+54>:	callq  0x9a6950 <buf_page_get_io_fix> 0x00000000009a998b <buf_flush_try_yield+59>:	test   %eax,%eax 0x00000000009a998d <buf_flush_try_yield+61>:	jne    0x9a9973 <buf_flush_try_yield+35> 0x00000000009a998f <buf_flush_try_yield+63>:	lea    0x1f8(%r13),%rbx 0x00000000009a9996 <buf_flush_try_yield+70>:	mov    %rbx,%rdi 0x00000000009a9999 <buf_flush_try_yield+73>:	callq  0x9a7670 <pfs_mutex_exit_func> 0x00000000009a999e <buf_flush_try_yield+78>:	mov    %r12,%rsi 0x00000000009a99a1 <buf_flush_try_yield+81>:	mov    %r13,%rdi 0x00000000009a99a4 <buf_flush_try_yield+84>:	callq  0x9a98b0 <buf_flush_yield> 0x00000000009a99a9 <buf_flush_try_yield+89>:	lea    2028424(%rip),%rsi        # 0xb98d38 <field_ref_zero+9144> 0x00000000009a99b0 <buf_flush_try_yield+96>:	mov    $0x1a6,%edx 0x00000000009a99b5 <buf_flush_try_yield+101>:	mov    %rbx,%rdi 0x00000000009a99b8 <buf_flush_try_yield+104>:	callq  0x9a6cf0 <pfs_mutex_enter_func> 0x00000000009a99bd <buf_flush_try_yield+109>:	mov    $0x1,%eax 0x00000000009a99c2 <buf_flush_try_yield+114>:	jmp    0x9a9975 <buf_flush_try_yield+37> End of assembler dump. "	b479d90398a47059bc50224a55f8a6b05584705c
----------------------------
"Bug#13058122 - DML, LOCK/UNLOCK TABLES AND SELECT LEAD TO FOREVER MDL LOCK Analysis: ---------- While granting MDL lock for the lock requests in wait queue, first the lock is granted to the high priority lock types and then to the low priority lock types. MDL Priority Matrix, +-------------+----+---+---+---+----+-----+ | Locks       |    |   |   |   |    |     | | has Priority|    |   |   |   |    |     | | over --->   |  S | SR| SW| SU| SNW| SNRW| +-------------+----+---+---+---+----+-----+ | X           |  + | + | + | + | +  | +   | +-------------|----|---|---|---|----|-----| | SNRW        |  - | + | + | - | -  | -   | +-------------|----|---|---|---|----|-----| | SNW         |  - | - | + | - | -  | -   | +-------------+----+---+---+---+----+-----+ Here '+' means, Lock priority is higher. '-' means, Has same priority In the scenario where, *. Lock wait queue has requests of type S/SR/SW/SU. *. And locks of high priority X/SNRW/SNW are requested continuously. In this case, while granting lock, always first high priority lock requests(X/SNRW/SNW) are considered. Low priority locks(S/SR/SW/SU) will not get chance and they will wait forever. In the scenario for which this bug is reported, application executed many LOCK TABLES ... WRITE statements concurrently. These statements request SNRW lock. Also there were some connections trying to execute DML statements requesting SR lock. Since SNRW lock request has higher priority (and as they were too many waiting SNRW requests) lock is always granted to it. So, lock request SR will wait forever, resulting in DML starvation. How is this handled in 5.1? --------------------------- Even in 5.1 we have low priority lock starvation issue. But, in 5.1 thread locking, system variable ""max_write_lock_count"" can be configured to grant some pending read lock requests. After ""max_write_lock_count"" of write lock grants all the low priority locks are granted. Why this issue is seen in 5.5/trunk? --------------------------------- In 5.5/trunk MDL locking, ""max_write_lock_count"" system variable exists but not used in MDL, only thread lock uses it. So no effect of ""max_write_lock_count"" in MDL locking. This means that starvation of metadata locks is possible even if max_write_lock_count is used. Looks like, customer was using ""max_write_lock_count"" in 5.1 and when upgraded to 5.5, starvation is seen because of not having effect of ""max_write_lock_count"" in MDL. Fix: ---------- As a fix, support for max_write_lock_count is added to MDL. To maintain write lock counter per MDL_lock object, new member ""m_hog_lock_count"" is added in MDL_lock. And following logic is added to increment the counter in function reschedule_waiters, (reschedule_waiters function is called while thread is releasing the lock) - After granting lock request from the wait queue. -  Check if there are any S/SR/SU/SW exists in the wait queue - If yes then increment the ""m_hog_lock_count"" And following logic is added in the same function to handle pending S/SU/SR/SW locks - Before granting locks - Check if max_write_lock_count <= m_hog_lock_count - If Yes, then try to grant S/SR/SW/SU locks. (Since all of these has same priority, all locks are granted together. But some lock grant may fail because of grant incompatibility) - Reset m_hog_lock_count if there no low priority lock requests in wait queue. - return Note: -------------------------- In the lock priority matrix explained above, though X has priority over the SNW and SNRW. X locks is taken mostly for RENAME, TRUNCATE, CREATE ... operations. So lock type X may not be requested in loop continuously in real world applications, as compared to other lock request types. So, lock request of type SNW and SNRW are not starved. So, we can grant all S/SR/SU/SW in one shot, without considering SNW & SNRW lock request starvation. ALTER table operations take SU lock first and then upgrade to SNW if required. All S, SR, SW, SU have same lock priority. So while granting SU, request of types SR, SW, S are also granted in one shot. So, lock request of type SU->SNW in loop will not make other low priority lock request to starve. But, when there is request for lock of type SNRW, lock requests of lower priority types are not granted. And if SNRW is requested in loop continuously then all S, SR, SW, SU are starved. This patch addresses the latter scenario. When we have S/SR/SW/SU in wait queue and if there are - Continuous SNRW lock requests - OR one or more X and Continuous SNRW lock requests. - OR one SNW and Continuous SNRW lock requests. - OR one SNW, one or more X and continuous SNRW lock requests. in wait queue then, S/SR/SW/SU lock request are starved. "	590daa47da2a05b061a8da2dbffcfa377e452f95
----------------------------
WL#6345 Dynamic padding to reduce compression failure rate rb://1106 approved by: Sunny Bains Based on facebook contribution. Allows to 'pad' uncompressed data pages i.e.: leave empty space in the uncompressed data page in an attempt to reduce failures when the uncompressed page is compressed. The heuristic is build on a per-index basis though the parameters are global. Here is how it works: * A single 'round' of activity is 128 compression ops (hard coded) on a given index. * For each complete round if the compression failure rate is above the user defined threshold then a 'pad' (hardcoded to 128 bytes) is added to the uncompressed page. * If certain number of 'rounds' (hard coded to 5) go through without touching the threshold then 'pad' is removed from the uncompressed page i.e.: allowing more space in the page to be used for data. Config Parameters: ================== innodb_compression_failure_threshold_pct: default 5, range 0 - 100, dynamic, implies the percentage of compress ops to fail before we start using to padding. Value 0 has a special meaning of disabling the padding. innodb_compression_pad_pct_max: default 50, range 0 - 75, dynamic, the maximum percentage of uncompressed data page that can be reserved as pad i.e.: UNIV_PAGE_SIZE - the above percent will always be available for data. 	f62376297b04877d4046feff3767495b3ec6158e
----------------------------
"Add the man page for the ""mysql_config_editor"" to the RPM spec file. "	53637eb11f789961e2d61335516fcb3f5be713c4
----------------------------
Bug 14333093 - MYSQL 5.6 - WINDOWS INSTALLER DOES PROPERLY INSTALL DEFAULT DATABASE FILES - Ensure that the User Configuration data directory WiX resource is produced before duplicate features are removed by CMake 	45eb7ccde93a1e3edf4e541f19c3038ec75db5de
----------------------------
BUG#14232958: MTS AND REPLICATE_REWRITE_DB OPTION MIGHT BREAK INTEGRITY OF DATA Rewrite databases rules were not considered on database assignment to multi-threaded slave workers could break data integrity due to non deterministic execution order. Improved multi-threaded slave workers assignment to also consider rewrite databases rules. @ internal/mysql-test/suite/i_rpl/r/rpl_mts_replicate_rewrite_db.result Test to check that execution order is preserved on regular tables when MTS and replicate-rewrite-db option are used together. @ internal/mysql-test/suite/i_rpl/t/rpl_mts_replicate_rewrite_db-slave.opt Test to check that execution order is preserved on regular tables when MTS and replicate-rewrite-db option are used together. @ internal/mysql-test/suite/i_rpl/t/rpl_mts_replicate_rewrite_db.test Test to check that execution order is preserved on regular tables when MTS and replicate-rewrite-db option are used together. @ internal/mysql-test/suite/i_rpl/r/rpl_mts_replicate_rewrite_db_tmp_table.result Test to check that execution order is preserved on temporary tables when MTS and replicate-rewrite-db option are used together. @ internal/mysql-test/suite/i_rpl/t/rpl_mts_replicate_rewrite_db_tmp_table-slave.opt Test to check that execution order is preserved on temporary tables when MTS and replicate-rewrite-db option are used together. @ internal/mysql-test/suite/i_rpl/t/rpl_mts_replicate_rewrite_db_tmp_table.test Test to check that execution order is preserved on temporary tables when MTS and replicate-rewrite-db option are used together. @ sql/log_event.h Fixed database assignment to multi-threaded slave workers when rewrite database rules are used. @ sql/log_event.cc Fixed database assignment to multi-threaded slave workers when rewrite database rules and temporary tables are used. @ sql/rpl_filter.h Added method Rpl_filter::is_rewrite_empty(). @ sql/rpl_filter.cc Added method Rpl_filter::is_rewrite_empty(). 	fb78626a0b490b1ab5afe3c4268207fb572b5e37
----------------------------
"Merge: f4047bf 2647f38 Upmerge from 5.6 (new man page ""mysql_config_editor"" in the spec file). "	3dd7feb4adb2a30660cc12603470b3b6a4e11e25
----------------------------
"Add the man page for the ""mysql_config_editor"" to the RPM spec file. "	2647f38416049c0074883e159c22242f38447332
----------------------------
Add a debug assertion in buf_page_get_io_fix() to help nail down Bug#14278519 CRASH OBSERVED IN INNODB.INNODB_STATS_AUTO_RECALC_LOTS ON VALGRIND RUN IN PB2 It would crash later (trying to dereference bpage) so this assertion is a non functional change. Also check if bpage is non NULL separately because buf_page_get_io_fix() really should not have been called here (buf_flush_try_yield(), buf0lru.cc): 408         if (bpage != 0 409             && processed >= BUF_LRU_DROP_SEARCH_SIZE 410             && buf_page_get_io_fix(bpage) == BUF_IO_NONE) { if bpage is NULL. If this changeset fixes Bug#14278519 (the test stops failing on PB2), then line 410 must have been executed before line 408! 	b04b3d028c80a75c303c77381e38194b30ac76e2
----------------------------
"BUG#13939940: SESSION-LEVEL LOW_PRIORITY_UPDATES DOES NOT WORK FOR INSERT BACKGROUND: As Per documentation low_priority_updates variable/option lowers priority of table modifying operations INSERT, UPDATE and DELETE as compared to SELECT queries. However, it was not working for INSERT statements (while it works fine for UPDATE and DELETE). ANALYSIS: At the parsing stage for tables to be modified by UPDATE or DELETE statements TL_WRITE_DEFAULT lock type is set. Before tables are locked, this type of lock is converted either to TL_WRITE or TL_WRITE_LOW_PRIORITY, depending on session's low_priority_updates value. For INSERT statement TL_WRITE_CONCURRENT_INSERT type of lock is set at the parsing stage and no similar conversion to TL_WRITE_LOW_PRIORITY happens depending on low_priority_updates value. FIX: This bug is fixed by introducing a new type of lock similar to TL_WRITE_DEFAULT -- TL_WRITE_CONCURRENT_DEFAULT, which is used in INSERT if no explicit lock type was specified, and is converted to TL_WRITE_CONCURRENT_INSERT or TL_WRITE_LOW_PRIORITY depending on low_priority_updates value, similarly to how it is done for TL_WRITE_DEFAULT. NOTE: Introducing a new lock type is required to override the effect of low_priority_updates when CONCURRENT is explicitly specified in the statement. For e.g LOAD DATA CONCURRENT, here overrides the effect of low_priority_updates. This is done to adhere to the principle that locks which are explicitly specified in the statement override locks which are implicitly prescribed by low_priority_updates. Quoting MySQL manual: ""If you specify HIGH_PRIORITY, it overrides the effect of the --low-priority-updates option if the server was started with that option."" "	0edcb309872adfe6053ccf8165df2c6933fb973a
----------------------------
Bug #14213784 FAILING ASSERTION: DICT_TF2_FLAG_IS_SET(INDEX->TABLE, DICT_TF2_TEMPORARY) Internal DDL transactions run (separately) within a read-only session should not inherit the session read only flag. Add trx_t::ddl (bool). Currently only set for row_drop_table_for_mysql() and trx_start_for_ddl(). It is reset at trx_commit(). If the flag is set then we clear the trx_t::read_only flag. rb://1164 Approved by Jimmy Yang. 	acc59c185a51a20ac55f4bedb0a10133e1bf813c
----------------------------
"BUG#11759333: SBR LOGGING WARNING MESSAGES FOR PRIMARY KEY UPDATES WITH A LIMIT OF 1 Problem: The unsafety warning for statements such as update...limit1 where pk=1 are thrown when binlog-format = STATEMENT,despite of the fact that such statements are actually safe. this leads to filling up of the disk space with false warnings. Solution: This is not a complete fix for the problem, but prevents the disks from getting filled up. This should therefore be regarded as a workaround. In the future this should be overriden by server general suppress/filtering framework. It should also be noted that another worklog is supposed to defeat this case's artificial unsafety. We use a warning suppression mechanism to detect warning flood, enable the suppression, and disable this when the average warnings/second has reduced to acceptable limits. Activation: The supression for LIMIT unsafe statements are activated when the last 50 warnings were logged in less than 50 seconds. Supression: Once activated this supression will prevent the individual warnings to be logged in the error log, but print the warning for every 50 warnings with the note: ""The last warning was repeated N times in last S seconds"" Noteworthy is the fact that this supression works only on the error logs and the warnings seen by the clients will remain as it is (i.e. one warning/ unsafe statement) Deactivation: The supression will be deactivated once the average # of warnings/sec have gone down to the acceptable limits. "	abf4b3fa6aab3dac2d532361b237ccbf6a1e633d
----------------------------
Fix for Bug #13111584 PERFORMANCE REGRESSION DUE TO SUBQUERY MATERIALIZATION: when there is choice between IN(subquery)->EXISTS and subquery materialization, 5.6.5 always chose the latter; this patch introduces a cost-based choice, controlled by a new switch: optimizer_switch='subquery_materialization_cost_based=on/off'; ON (the default): do cost-based choice; OFF: do subquery materialization (as in 5.6.5). See commit comment of item_subselect.cc for details. 	cedf0269d5b698278067397392bd57633c1a66d5
----------------------------
Bug#14218867 FAILING ASSERTION: !(TRX)->READ_ONLY IN SHOW ENGINE ALL STATUS XA transactions can be read-only and in prepared state. Approved by Jimmy Yang over IM. 	99cf381f823cec66c6fafae0084294903f18175c
----------------------------
"BUG#11759333: SBR LOGGING WARNING MESSAGES FOR PRIMARY KEY UPDATES WITH A LIMIT OF 1 Problem: The unsafety warning for statements such as update...limit1 where pk=1 are thrown when binlog-format = STATEMENT,despite of the fact that such statements are actually safe. this leads to filling up of the disk space with false warnings. Solution: This is not a complete fix for the problem, but prevents the disks from getting filled up. This should therefore be regarded as a workaround. In the future this should be overriden by server general suppress/filtering framework. It should also be noted that another worklog is supposed to defeat this case's artificial unsafety. We use a warning suppression mechanism to detect warning flood, enable the suppression, and disable this when the average warnings/second has reduced to acceptable limits. Activation: The supression for LIMIT unsafe statements are activated when the last 50 warnings were logged in less than 50 seconds. Supression: Once activated this supression will prevent the individual warnings to be logged in the error log, but print the warning for every 50 warnings with the note: ""The last warning was repeated N times in last S seconds"" Noteworthy is the fact that this supression works only on the error logs and the warnings seen by the clients will remain as it is (i.e. one warning/ unsafe statement) Deactivation: The supression will be deactivated once the average # of warnings/sec have gone down to the acceptable limits. "	d5163c901282e3ede01c3c28b4f1fe4246620c93
----------------------------
Bug #13789417: CHANGE SECURE_AUTH DEFAULT FROM FALSE TO TRUE IN MYSQL CLIENTS 1. The default for the MYSQL_SECURE_AUTH mysql_options() option is now TRUE. 2. The default for --secure-auth in mysql, the command line client, is now ON/TRUE. 	ef3723981ccfde6f0db416df56f3e7460f5d15aa
----------------------------
BUG#13969578: TEMPORARY TABLE IN A DATABASE ON A READ-ONLY INSTANCE CAN BE OVERWRITTEN Analysis: -------- Creation or modification of a persistent table by a non-super user is NOT ALLOWED in read_only mode. Only TEMPORARY tables are allowed to be created or modified in read_only mode. But the creation of a persistent table was being allowed when a temporary table of the same name existed. The routine which denies updating a non-temporary table in a read_only mode does not handle the case of creation of a regular table when a temporary table of the same exists. Fix: --- Handled the condition where an attempt is made to create a persistent table having the same name as that of the temporary table. Hence the creation of a persistent table by a non-super user when a temporary table of the same exists is denied under read_only mode. 	615163edd16b2c98734b16d68b8cf76ec87701e8
----------------------------
BUG#14272672: ALLOW NON-TRANSACTIONAL DML ON TEMPORARY TABLES WHEN ROW BINLOG FORMAT IS USED It should be possible to execute non-transactional DML on temporary tables when row binlog format is used since on that case updates are not logged. These updates were disallowed because all non-transactional DML generate error ER_GTID_UNSAFE_NON_TRANSACTIONAL_TABLE. Allow updates on non-transactional temporary tables with gtid-mode=ON and --disable-gtid-unsafe-statements when row binlog format is used and all non-transactional tables are temporary. 	173393875506bdd549f37d40e104bcc48ecccc89
----------------------------
"Bug #12998841: libmysql divulges plaintext password upon request in 5.5 1. Clear text password client plugin disabled by default. 2. Added an environment variable LIBMYSQL_ENABLE_CLEARTEXT_PLUGIN, that when set to something starting with '1', 'Y' or 'y' will enable the clear text plugin for all connections. 3. Added a new mysql_options() option : MYSQL_ENABLE_CLEARTEXT_PLUGIN that takes an my_bool argument. When the value of the argument is non-zero the clear text plugin is enabled for this connection only. 4. Added an enable-cleartext-plugin config file option that takes a numeric argument. If the numeric value of the numeric argument is non-zero the clear text plugin is enabled for the connection 5. Added a boolean command line option ""--enable_cleartext_plugin"" to mysql, mysqlslap and mysqladmin. When specified it will call mysql_options with the effect of #3 6. Added a new CLEARTEXT option to the connect command in mysqltest. When specified it will enable the cleartext plugin for usage. 7. Added test cases and updated existing ones that need the clear text plugin. "	31a9208bd09afd16ce540be2cd66c7059b7bdeb8
----------------------------
Merge: 57e3569 015cef1 merged bug 13007062. null-merged anitha's test config file change 	57d88403707881bdf890b9c0736b8dba631c1b9c
----------------------------
"ndb - fix ndb_blob_big to show only the variable where text is exactly ""max_allowwd_packet""(no prefix or suffix allowed) - this is a forward compatibility fix against 5.6 which add more variables with ""max_allowed_packet"" in the name "	6ee93c8ebbff13bbc6a19b7840d926dfbea72018
----------------------------
There used to be a system variable named @@engine-condition-pushdown and it was removed in 5.6 by WL#5185 'Remove deprecated 5.1 features' in magne.mahre@oracle.com-20101102115354-vxcaxminmzglzalk . Some old, useless traces of this variable remained in code, I delete them. 	10669ca5887ce0b6b3a37bc1682908c6a56ea1b8
----------------------------
Fix Bug 14228928 - TURN INNODB_FT_ENABLE_DIAG_PRINT TO OFF BY DEFAULT rb://1122, approved by Sunny Bains 	743955c39acc4eb0cf57d8a18b1f26dc0069ae84
----------------------------
"Bug #11760365: SLAVE_SQL_ERRNO IS SOMETIMES SET TO MY_ERRNO Follow up patch to fix failing ""i_rpl.rpl_slave_init_errchk"" test script to work with ""rpl_crash_safe_relay-debug"" mode. Problem: ======= ""i_rpl.rpl_slave_init_errchk"" test script is failing on daily trunk under ""rpl_crash_safe_relay-debug"" combination as shown below perl mysql-test-run.pl --force --timer --debug-server --parallel=auto --experimental=collections/default.experimental --comment=rpl_crash_safe_relay-debug --vardir=var-rpl_crash_safe_relay-debug --suite=rpl --mysqld=--relay-log-info-repository=TABLE --skip-test-list=collections/disabled-daily.list Fix: ==== The above script tries to simulate error during slave init operation. And the debug simulataion was added only in ""sql/rpl_info_file.cc"" as shown below. bool Rpl_info_file::do_update_is_transactional() { DBUG_EXECUTE_IF(""simulate_update_is_transactional_error"", { return TRUE; }); return FALSE; } But when the test is invoked with above mentioned command line arguments the script was entering the following code  ""sql/rpl_info_table.cc"" and the debug simulation was missing over there and hence the test script was not able to catch the reported error. Added the missing debug error simulation statements. bool Rpl_info_table::do_update_is_transactional() "	39b33cd4f98204e6370b60c3a00dfd4e662de4d2
----------------------------
Bug#14236124: WRONG CONNECTION ID (THREAD ID) IN THE GENERAL AND SLOW QUERY LOGS Thread-IDs can get very large; patch adjusts general-logging and slow query logging to reflect that and log those IDs correctly. 	aeb811f6f8e26977d24729af098841b0f8a50f54
----------------------------
"BUG#11765698: MYISAM SELECTS LOCKS INSERTS INSIDE PROCEDURE ONLY BUG#11757947: QUERY CACHE INVALIDATED IN INSERT...SELECT IF NO ROWS INSERTED BACKGROUND: When INSERTS to a large MyISAM table are coming from a stored procedure and a SELECT query is also running concurrently INSERTS gets locked by the select which should not have happened. When a normal INSERT is coming it does not get locked by the SELECT statement which is correct. ANALYSIS: This bug can be fixed by reverting two (rather complete) changes made by Sanja's fix for bug 14767 ""INSERT in SF + concurrent SELECTs may result in wrong data in query cache"" (revid: ""sp1r-bell@book.local-20060315171552-49188""). Change#1 in sql_yacc.yy: ------------------------ The fix for bug 14767 upgraded the lock type from TL_WRITE_CONCURRENT_INSERT to TL_WRITE_DEFAULT for inserts which were used in stored routines if we had a query cache enabled. In other words, it disabled concurrent inserts from stored routines in this case. This was necessary to prevent a race condition, when a concurrent SELECT sneaked in between the point where query cache was invalidated by insert in stored routine and the moment when statement that has called this routine unlocked tables, making insert results visible to other connections. In such a situation SELECT didn't see insert results, but still was stored in query cache and stayed there even after unlock, making SELECTs which followed to return stale results. The above change for bug 14767 is no longer required, as it was obsoleted by Davi's patch for bug 41098 ""Query Cache returns wrong result with concurrent insert"" (revid: ""davi.arnaut@sun.com-20090219210935-9vilvcisyyieffxl""). The latter disables caching of SELECTs for tables which have some concurrent inserts going on, thus making race described above impossible. So there is no need for disabling concurrent inserts from stored routines anymore. Change#2 in sql_parse.cc: ------------------------ The fix for bug 14767 also tried to address a race, similar to the one described above, which occurred for INSERT ... SELECT, in case when concurrent SELECT sneaked in between query_cache_invalidate3(), which happens in select_insert::send_eof(), and unlocking of tables  which back then has happened in dispatch_command(). This was done by calling for INSERT ... SELECTs which used concurrent inserts additional query_cache_invalidate() that was immediately followed by mysql_unlock_tables() (i.e. by making window for race condition smaller). Since fix for bug 41098 addresses this scenario as well (and in more correct way) this part of patch also became redundant. NOTE: ------------------------------------------------------------------- Additionally, if we remove this change#2 this bug BUG#11757947: QUERY CACHE INVALIDATED IN INSERT...SELECT IF NO ROWS INSERTED is also handled automatically. BACKGROUND OF BUG#11757947: When the query cache is enabled and an INSERT...SELECT query is executed that does not actually insert any rows, the query cache entries for the table mentioned in the INSERT still get invalidated. This is unnecessary and makes the query cache less effective. ANALYSIS: Change#2 made by the fix for bug 14767 is cause for this bug. Since this change#2 can be safely reverted as mentioned above, this bug is handled automatically. FIX OF BUG#11757947: Change#2 has been removed since this is no longer required as the patch for bug 41098 obsoletes the race mentioned above as well. ------------------------------------------------------------------ FIX FOR BUG#11765698: From above discussion, we can safely revert complete patch of bug 14767. However, one of the change from this patch is just refactoring a piece of code in sql_insert.cc file, which we can retain. The effect of this fix is to make inserts always concurrent with selects. "	e6f1fe6c07fcbccb09323a308cc0d03df5f23b69
----------------------------
Bug#14136937 SERVER DOESN'T WARN ABOUT STARTING WITH --SKIP-SECURE-AUTH No warning message gets generated at server start if it is started with secure_auth disabled. Fixed by adding appropriate logic to emit a warning message when server is started with --skip-secure-auth. Note : There is no test case for this bug, tested manually. 	4a51ca462672f3c7ce1c296b573a6f735ee809a2
----------------------------
Bug #14213568 ASSERTION FAILURE IN RENAME TABLE AFTER DISCARD TABLESPACE The design and intent of WL5522 and Online Index Rebuild is that a tablespace can be renamed and the dictionary restructured while it is discarded. The assertion found in this bug happened during Online Index Rebuild of a clustered index.  In order to support this, the attempt to update SYS_DATAFILES is skipped during the rename file portion of row_merge_rename_tables() which is part of ha_innobase:: commit_inplace_alter_table(). The RENAME TABLE command already worked while the tablespace is discarded.  Everything in the dictionary is renamed, but fil_rename_tablespace() is not called in dict_table_rename_in_cache() when the tablespace is discarded. Since a table can be renamed while discarded, it became obvious that whenever a remote tablespace is discarded, the associated link file should also be deleted. Previously, in the WL5980 patch, the link file was left behind when a tablespace was discarded. But since the discarded tablespace can be renamed it really makes no sense to leave a link file pointing to a tablespace file that does not exist. There was another assert during TRUNCATE so I had to add a protection in row_truncate_table_for_mysql() so that it does not attempt to truncate a tablespace that is discarded or missing. When adding a test script for this into innodb-wl5980-discard, I tried many different statements against local and remmote tablespaces that are both discarded and just plain missing. Tablespace configurations ========================= Local, Discarded Remote, Discarded Local, Missing Remote, Missing SQL Statements tried ==================== SELECT SHOW CREATE TABLE INSERT RENAME TABLE TRUNCATE TABLE ALTER TABLE ADD PRIMARY KEY, ALGORITHM=COPY ALTER TABLE ADD PRIMARY KEY, ALGORITHM=INPLACE ALTER TABLE KEY ROW_FORMAT=REDUNDANT, ALGORITHM=COPY ALTER TABLE KEY ROW_FORMAT=REDUNDANT, ALGORITHM=INPLACE ALTER TABLE KEY ROW_FORMAT=REDUNDANT, ALGORITHM=COPY ALTER TABLE KEY ROW_FORMAT=REDUNDANT, ALGORITHM=INPLACE The result file show that none of the statements above work on a tablespace that is missing.  But the follwong SQL work on a discarded tablespace; SHOW CREATE TABLE RENAME TABLE ALTER TABLE ADD PRIMARY KEY, ALGORITHM=INPLACE ALTER TABLE KEY ROW_FORMAT=REDUNDANT, ALGORITHM=INPLACE ALTER TABLE KEY ROW_FORMAT=REDUNDANT, ALGORITHM=INPLACE In fact, the inplace alter statements will create a new empty tablespace which is no longer marked as discarded. Approved by Sunny in rb:1120 	e7b4066e9a768a6c3b46e165faea901ab6263e4c
----------------------------
Updated internal/mysql-test/suite/i_rpl/t/disabled.def, with the eventum request# for rpl_max_allowed_packet_stress.test and also removed the entry for this test from disabled.def from rpl suite under non-internal directory. 	9639e60a658f85c868142e51973dd276fcdbd77f
----------------------------
BUG#14221043: MYSQL_UPGRADE FAILS WHEN SERVER IS RUNNING WITH GTID-MODE=ON mysql_upgrade fails when server is running with gtid_mode=ON and --disable-gtid-unsafe-statements because system tables are stored using MyISAM. Changed default logging behaviour of mysql_upgrade, disabling it by default. Logging can still be enable using the option --write-binlog. Actions taken by mysql_upgrade depend on the server version, them should not be replicated to slaves. 	61d587dc02f07968814b6a68cda34625776a5d70
----------------------------
WL#6224 Adapt MySQL Cluster to 5.6 - use memset() in favor of bzero in ha_ndbcluster 	0752579c05d008c6c2d585f7fb3810a66e877dc3
----------------------------
Fix test case so that we compare the file size and not dump the absolute size of the ibdata1 file. The absolute size can change due to different page size configuration. 	b856767f488b26fc3d29618eb1232a1a13472856
----------------------------
"Following changes included- Sunny's fix for to fix the timeout and assertion failure, added ""eits-tests-innodb-engine-debug"" to default.push, added rpl_max_allowed_packet_stress to disabled.def under i_rpl "	b798603d78c6933eadaa825ebe62f96b8f087003
----------------------------
"ndb test - remove unused ""own nodeid"" argument from NdbConfig (and thus NdbBackup) constructor. - remove unneccessary confusing construct when trying to figure out which nodeid to pass "	a8d6da9491eea2d56047652529a4f8cb5d7e58f7
----------------------------
Fixed more tests affected by sql-mode and binlog-row-event-max-size default change (WL#6216). 	0cd2ad151594b16be1e428ba9d2216ec94cc8033
----------------------------
Disabling rpl_max_allowed_packet_stress test on all platforms. 	db296c24997256b69b4668f480ca791d747edc51
----------------------------
WL#6292 - Make TIMESTAMP columns nullable by default. This worklog implements new behavior for TIMESTAMP columns, defined by CREATE TABLE, ALTER TABLE and CREATE SELECT commands. This is in effort to make TIMESTAMP columns behavior to be more closer to SQL standard. The change in behavior is as described below, Current behavior: ================= 1) Unlike all the other types, TIMESTAMP columns which are not explicitly specified as NULLable automatically get NOT NULL as attribute. 2) If the first TIMESTAMP column in table is not specified as NULLable and doesn't have explicit DEFAULT or ON UPDATE value specified it automatically gets DEFAULT NOW() ON UPDATE NOW() as attributes. 3) All other TIMESTAMP columns which are not NULLable and don't have explicit default specified get '0' as default value and treated as having explicit default value after that (i.e. if you don't provide explicit value for such a column when inserting into table no warning or error is emitted). New behavior: ============= 1) TIMESTAMP columns which are not explicitly specified as NOT NULL become NULLable. 2) No TIMESTAMP columns get DEFAULT NOW() or ON UPDATE NOW() attributes automatically, without them being explicitly specified. 3) Non-NULLable TIMESTAMP columns without explicit default value treated as having no default value. I.e. warning or error is emitted (depends on sql_mode) if we insert a row without providing and explicit value for such a column. In case when warning is emitted and not an error such a column will still get '0' if no explicit value was specified for it. A new command line option '--explicit_defaults_for_timestamp' is introduced for MySQL server to enable new behavior. The old behavior is kept as default, so that the existing applications assuming old semantics work without any changes. Replication slave applier thread is extended with new interface, such that the slave applies the logs with old behavior, if the logs are generated by master with older version than slave. MySQL system table definitions at scripts/* were updated, such that they work fine with old and new behavior with any change. MTR tests which use TIMESTAMP columns are also updated, such that the test works both in old and new behavior. This should help easy transition to new behavior going forward. This worklog addresses Bug#11762529 and Bug#13344629. 	daa4dddcdb11dea7324cb81efbfcaa0272c1199f
----------------------------
Patch for WL#6301 (Change default value for the 'bind-address' option). The patch consists of two parts: - the patch introduces a new special value for the bind-address option: * (a star). This value means, the server should listen to all network addresses, both IPv6 (if available) and IPv4. - the patch changes the bind-address default value to star (*). 	bd7374a4277dabda1e2118592f9d4dd778e3d9a9
----------------------------
Increase MaxNoOfConcurrentOperations in 'suite/ndb_big/my.cnf' in order to reduce failure rates for 'ndb_big.rqg_spj' which repeateadly encounters: 'Got temporary error 233 'Out of operation records in transaction coordinator (increase MaxNoOfConcurrentOperations)' ... Jonas has previously suggested to increase this in config file. 	e68b59d0b17e7b941a1305ffc138b0fb2d64cd2b
----------------------------
BUG#14136654: ASSERTION FAILED ON BINLOG.WRITE_ONE_EMPTY_GROUP_TO_CACHE() When a GTID was across multiple relay logs: RELAY LOG (X) GTID (EOF) RELAY LOG (X + 1) BEGIN INSERT COMMIT it was wrongly interpreted as a empty group. This happened when crash slave was used, on which configuration when PURGE logs is executed (on log rotate) a commit is done to ensure consistency of relay info, that when presented with only a GTID on group cache logged a empty group. Fixed MYSQL_BIN_LOG::commit() method to correctly handle the case where a GTID may start on relay log and end on different relay log file. 	cbe7cbf8fe2ad58595252c378b10c231ba25423c
----------------------------
Fix for Bug#14053325 DUPLICATED RESULTS ROWS WHEN SEMIJOIN USE LOOSESCAN STRATEGY 'Semijoin LooseScan strategy' is based on skiping key duplicates after the 'first match' for each key is found. Thus reading of the tables has to return the result in sorted order as defined by the index being used. Such 'sorted' read is specified with the 'sorted' argument to handler::ha_index_init(). As we failed to enforce 'sorted=true' for SJ_OPT_LOOSE_SCAN, it is left to each SE-handler to return the rows sorted or unsorted. Partitioned tables and ndbcluster tables will not be sorted without 'sorted' being set to 'true'. The skipreading in LooseScan will therefore fail to correctly eliminate duplicates, and we get to many rows in the result set. 	d44efc5d0d077ec4c937583937b04081d75dbf35
----------------------------
Merge: 5d2958a 7dce976 Bug#11753779: MAX_CONNECT_ERRORS WORKS ONLY WHEN 1ST INC_HOST_ERRORS() IS CALLED. Description: Null merge from MySQL 5.5 to MySQL Trunk 	ec0ace5dd76d3d61c78619408b7bf09775113b92
----------------------------
Merge: 36b2d45 78dce2d5 Bug#11753779: MAX_CONNECT_ERRORS WORKS ONLY WHEN 1ST INC_HOST_ERRORS() IS CALLED. Description: Merge from MySQL 5.1 to MySQL 5.5 Reverting patch 3869 for bug#11753779 	7dce976744d947e537d570eac6f89cc6efa6b7e1
----------------------------
Bug#11753779: MAX_CONNECT_ERRORS WORKS ONLY WHEN 1ST INC_HOST_ERRORS() IS CALLED. Description: Reverting patch 3755 for bug#11753779 	78dce2d5c2e891151829724131953d14857f1167
----------------------------
part of WL#6347 InnoDB: Index level compression stats Introduce a config variable to enable/disable INFORMATION_SCHEMA.innodb_cmp_per_index (and INFORMATION_SCHEMA.innodb_cmp_per_index_reset). Collecting stats for those tables may have negative impact on performance so we switch them OFF by default. 	3fce7c2733711d80b96ab2a70b4ca564d716f1fa
----------------------------
Disabling rpl_max_allowed_packet_stress test on Solaris and Darwin,because it require around 6GB of free space and causing other tests to fail. 	a7e84b9a08707eb63d54348c4b9ec9a1bde227ae
----------------------------
Remove Instance Config Wizard and it's associated UI elements from the Windows MSI package. 	8bf01e012f40a7c669265041cb823b06dfa2a18b
----------------------------
BUG#12400221 - 60926: BINARY LOG EVENTS LARGER THAN MAX_ALLOWED_PACKET Description: fixing some failing tests on PB2. 	200753cbd6d7edc7501b197c1ee63cd553bc89a4
----------------------------
Merge: d6bf824 4a6211d Bug#11753779: MAX_CONNECT_ERRORS WORKS ONLY WHEN 1ST INC_HOST_ERRORS() IS CALLED. Description: Null merge from MySQL-5.5 to MySQL-Trunk 	e1b9102544dfdcadb52d26e52d7784df0a770f33
----------------------------
ndb - add #include of ndb_global.h in ha_ndbcluster.cc to get NDB_ARRAY_SIZE and MIN/MAX 	6f4554d852dfc0d07eb32ecfb91b098ee1b595aa
----------------------------
Merge: 5f658ee 27fede5 Manual merge from mysql-trunk. Note: failing i_rpl.rpl_row_max_allowed_packet test. 	c2484a4f645d50eaf72d8b6a87481bd683269cb7
----------------------------
Merge: 6c04186 3ec0a7e Bug#11753779: MAX_CONNECT_ERRORS WORKS ONLY WHEN 1ST INC_HOST_ERRORS() IS CALLED. Description: Merge from MySQL-5.1 to MySQL-5.5 	4a6211dd3c3203404b0dd485ab9e0bdbceca2b52
----------------------------
Merge: f87a4a5 6c04186 BUG#12400221 - 60926: BINARY LOG EVENTS LARGER THAN MAX_ALLOWED_PACKET Null merge from mysql-5.5->mysql-trunk 	6ea0b51115c26a39af411cb4b75685bf20e64e7d
----------------------------
Merge: 6aab1ce 1211b5d BUG#12400221 - 60926: BINARY LOG EVENTS LARGER THAN MAX_ALLOWED_PACKET Null merge from mysql-5.1->mysql-5.5 	6c04186299ddfdfb5ca1d237965fca3f07c7d888
----------------------------
Bug#11753779: MAX_CONNECT_ERRORS WORKS ONLY WHEN 1ST INC_HOST_ERRORS() IS CALLED. Issue       : Sequence of calling inc_host_errors() and reset_host_errors() required some changes in order to maintain correct connection error count. Solution    : Call to reset_host_errors() is shifted to a location after which no calls to inc_host_errors() are made. 	3ec0a7eb045d027cdf860228fa9b4d88f1f52b4e
----------------------------
WL#6255 rb:1105 Problem 20,21 fix. Check the maximum column prefix length when changing ROW_FORMAT or KEY_BLOCK_SIZE. innobase_check_column_length(): Replace table with max_col_len. ha_innobase::prepare_inplace_alter_table(): Compute max_col_len by invoking innobase_table_flags() when needed. Enforce the max_col_len also in existing indexes of the table. innobase_table_flags(): Remove the parameter name. Do not complain about badly formed FTS_DOC_ID_INDEX, unless the table is also to have FULLTEXT indexes. When complaining, use the dedicated error code ER_INNODB_FT_WRONG_DOCID_INDEX instead of the generic and misleading ER_WRONG_NAME_FOR_INDEX. prepare_inplace_alter_table_dict(): Add the parameters flags, flags2, so that innobase_table_flags() does not need to be invoked again. Its outcome can change if innodb_file_format is changed between calls. 	0f522c257c0d23517bc46198ccf7fdabeae28774
----------------------------
Merge: 8061765 46ca66b BUG#12400221 - 60926: BINARY LOG EVENTS LARGER THAN MAX_ALLOWED_PACKET Null merge from mysql-5.5 -> mysql-trunk 	0366c62369192156b81ed3b12eaeb2420c0b26d0
----------------------------
"Still work on getting the ""SPECIFIC-ULN/"" files into the build. ""INSTALL"" was wrong, happens too late, but ""CONFIGURE_FILES(... COPYONLY)"" should hopefully do it. Traditional RPMs need to be checked, the above might fix their issues. "	e28785eb2fd780fd16ce2d7803dfc7c8152bf06b
----------------------------
Merge: cf251d5 29c3f36 BUG#12400221 - 60926: BINARY LOG EVENTS LARGER THAN MAX_ALLOWED_PACKET Upmerge from mysql-5.5 -> mysql-trunk. 	cdc162ff7436c38c3be900407253cff46b30d6c9
----------------------------
Merge: 4f10632 6c03d09 BUG#12400221 - 60926: BINARY LOG EVENTS LARGER THAN MAX_ALLOWED_PACKET Upmerge from mysql-5.1 -> mysql-5.5 	46ca66b9f85e6c74532b52da688b3bce970c08d2
----------------------------
Merge: 0a8ae68 9aa79dc BUG#12400221 - 60926: BINARY LOG EVENTS LARGER THAN MAX_ALLOWED_PACKET Problem ======== Replication breaks in the cases if the event length exceeds the size of master Dump thread's max_allowed_packet. The reason why this failure is occuring is because the event length is more than the total size of the max_allowed_packet, on addition of the max_event_header length exceeds the max_allowed_packet of the DUMP thread. This causes the Dump thread to break replication and throw an error. That can happen e.g with row-based replication in Update_rows event. Fix ==== The problem is fixed in 2 steps: 1.) The Dump thread limit to read event is increased to the upper limit i.e. Dump thread reads whatever gets logged in the binary log. 2.) On the slave side we increase the the max_allowed_packet for the slave's threads (IO/SQL) by increasing it to 1GB. This is done using the new server option (slave_max_allowed_packet) included, is used to regulate the max_allowed_packet of the slave thread (IO/SQL) by the DBA, and facilitates the sending of large packets from the master to the slave. This causes the large packets to be received by the slave and apply it successfully. 	1211b5d50bb00935d07fb9eda2dd6821d8f1cac5
----------------------------
ndb - Add two new ndbcluster variables exposing the version of NDB which ndbcluster was compiled against. - ndb_version contains the composite version number - ndb_version_string contains a version string on the form ndb-Y.Y.Y[-status] - These variables are primarily useful when masking .result files but just as well be useful in debugging and writing applications for multiple versions of MySQl Cluster - Added new macro(s) to ndb_version.h which concats the version numbers for NDB into constant strings so it can be used without thread synchronization problems(like ndbGetOwnVersionString()). 	fccf18bb134ac93076c9613460790eb9e6a47d65
----------------------------
BUG#12980522 - MULTI-UPDATE REFERENCING VIEW IS BLOCKED BY --READ-ONLY WITHOUT GOOD REASON BACKGROUND: Multi-update which references view in its main JOIN but doesn't update it, can be blocked by --read-only/@@read_only=1 mode even though it updates only temporary tables. This should not be happening (and is not happening if the view is replaced by normal table). ANALYSIS: In mysql_multi_update_prepare() function, updating variable is correctly set to 0 for all non-temporary tables that are not getting updated. But for view this is not happening. This value is not correctly set for views. FIX: This bug is fixed by correctly setting the updating variable to 0 if the table is a view as it is correctly set for the tables comprising the view. 	d95a606de6877c491561e2cdb14ddd248d943a03
----------------------------
Bug#14101563 - ASSERTION WHEN TABLE CANNOT BE CREATED DUE TO WARNINGS. PROBLEM: When table is created under innodb with innodb_file_per_table=0 and row_format=dynamic, an assertion is triggered under the debug build.In the case of release builds, error is returned instead of of a warning. FIX: The root cause for cause of assertion is because the status of the diagnostic area is set to DA_ERROR. This happens because when sql_mode is set to STRICT_TRANS_TABLES, we set the flag thd->abort_on_warning. In ha_innobase::create, the create options are validated only when innodb_strict_mode is on and error is propagated. When an warning is logged for row_file_format being off when row_format is dynamic, the thd->abort_on_warning and sql mode being STRICT_TRANS_TABLES causes DA_ERROR to be set in the diagnostic area and the innodb table creation continues assuming row_format=compact and success is returned.When my_ok is called, it asserts under debug builds since DA_ERROR is set in diagnostic area. The fix for the bug is to not to set thd->abort_on_warning irrespective of whether sql_mode is set to STRICT_TRANS_TABLES or not for innodb create. For validation of create option under innodb, innodb_strict_mode needs to be set. 	96b0961abebfc6a30202fe0e7f349c626f8e614b
----------------------------
"WL#6161 Integrating with InnoDB codebase in MySQL 5.5 Changes in the InnoDB codebase required to compile and integrate the MEB codebase with MySQL 5.5. @ storage/innobase/btr/btr0btr.c Excluded buffer pool usage from MEB build. buf_pool_from_bpage calls are in buf0buf.ic, and the buffer pool functions from that file are disabled in MEB. @ storage/innobase/buf/buf0buf.c Disabling more buffer pool functions unused in MEB. @ storage/innobase/dict/dict0dict.c Disabling dict_ind_free that is unused in MEB. @ storage/innobase/dict/dict0mem.c The include #include ""ha_prototypes.h"" Was causing conflicts with definitions in my_global.h Linking C executable mysqlbackup libinnodb.a(dict0mem.c.o): In function `dict_mem_foreign_table_name_lookup_set': dict0mem.c:(.text+0x91c): undefined reference to `innobase_get_lower_case_table_names' libinnodb.a(dict0mem.c.o): In function `dict_mem_referenced_table_name_lookup_set': dict0mem.c:(.text+0x9fc): undefined reference to `innobase_get_lower_case_table_names' libinnodb.a(dict0mem.c.o): In function `dict_mem_foreign_table_name_lookup_set': dict0mem.c:(.text+0x96e): undefined reference to `innobase_casedn_str' libinnodb.a(dict0mem.c.o): In function `dict_mem_referenced_table_name_lookup_set': dict0mem.c:(.text+0xa4e): undefined reference to `innobase_casedn_str' collect2: ld returned 1 exit status make[2]: *** [mysqlbackup] Error 1 innobase_get_lower_case_table_names innobase_casedn_str are functions that are part of ha_innodb.cc that is not part of the build dict_mem_foreign_table_name_lookup_set function is not there in the current codebase, meaning we do not use it in MEB. @ storage/innobase/fil/fil0fil.c The srv_fast_shutdown variable is declared in srv0srv.c that is not compiled in the mysqlbackup codebase. This throws an undeclared error. From the Manual --------------- innodb_fast_shutdown -------------------- The InnoDB shutdown mode. The default value is 1 as of MySQL 3.23.50, which causes a Ã¢â‚¬Å“fastÃ¢â‚¬ï¿½ shutdown (the normal type of shutdown). If the value is 0, InnoDB does a full purge and an insert buffer merge before a shutdown. These operations can take minutes, or even hours in extreme cases. If the value is 1, InnoDB skips these operations at shutdown. This ideally does not matter from mysqlbackup @ storage/innobase/ha/ha0ha.c In file included from /home/narayanan/mysql-server/mysql-5.5-meb-rel3.8-innodb-integration-1/storage/innobase/ha/ha0ha.c:34:0: /home/narayanan/mysql-server/mysql-5.5-meb-rel3.8-innodb-integration-1/storage/innobase/include/btr0sea.h:286:17: error: expected Ã¢â‚¬Ëœ=Ã¢â‚¬â„¢, Ã¢â‚¬Ëœ,Ã¢â‚¬â„¢, Ã¢â‚¬Ëœ;Ã¢â‚¬â„¢, Ã¢â‚¬ËœasmÃ¢â‚¬â„¢ or Ã¢â‚¬Ëœ__attribute__Ã¢â‚¬â„¢ before Ã¢â‚¬Ëœ*Ã¢â‚¬â„¢ token make[2]: *** [CMakeFiles/innodb.dir/home/narayanan/mysql-server/mysql-5.5-meb-rel3.8-innodb-integration-1/storage/innobase/ha/ha0ha.c.o] Error 1 make[1]: *** [CMakeFiles/innodb.dir/all] Error 2 make: *** [all] Error 2 # include ""sync0rw.h"" is excluded from hotbackup compilation in dict0dict.h This causes extern rw_lock_t*	btr_search_latch_temp; to throw a failure because the definition of rw_lock_t is not found. @ storage/innobase/include/buf0buf.h Excluding buffer pool functions that are unused from the MEB codebase. @ storage/innobase/include/buf0buf.ic replicated the exclusion of #include ""buf0flu.h"" #include ""buf0lru.h"" #include ""buf0rea.h"" by looking at the current codebase in <meb-trunk>/src/innodb @ storage/innobase/include/dict0dict.h dict_table_x_lock_indexes, dict_table_x_unlock_indexes, dict_table_is_corrupted, dict_index_is_corrupted, buf_block_buf_fix_inc_func are unused in MEB and was leading to compilation errors and hence excluded. @ storage/innobase/include/dict0dict.ic dict_table_x_lock_indexes, dict_table_x_unlock_indexes, dict_table_is_corrupted, dict_index_is_corrupted, buf_block_buf_fix_inc_func are unused in MEB and was leading to compilation errors and hence excluded. @ storage/innobase/include/log0log.h /home/narayanan/mysql-server/mysql-5.5-meb-rel3.8-innodb-integration-1/storage/innobase/include/log0log.h: At top level: /home/narayanan/mysql-server/mysql-5.5-meb-rel3.8-innodb-integration-1/storage/innobase/include/log0log.h:767:2: error: expected specifier-qualifier-list before Ã¢â  ‚¬Ëœmutex_tÃ¢â‚¬â„¢ mutex_t definitions were excluded as seen from ambient code hence excluding definition for log_flush_order_mutex also. @ storage/innobase/include/os0file.h Bug in InnoDB code, create_mode should have been create. @ storage/innobase/include/srv0srv.h In file included from /home/narayanan/mysql-server/mysql-5.5-meb-rel3.8-innodb-integration-1/storage/innobase/buf/buf0buf.c:50:0: /home/narayanan/mysql-server/mysql-5.5-meb-rel3.8-innodb-integration-1/storage/innobase/include/srv0srv.h: At top level: /home/narayanan/mysql-server/mysql-5.5-meb-rel3.8-innodb-integration-1/storage/innobase/include/srv0srv.h:120:16: error: expected Ã¢â‚¬Ëœ=Ã¢â‚¬â„¢, Ã¢â‚¬Ëœ,Ã¢â‚¬â„¢, Ã¢â‚¬Ëœ;Ã¢â‚¬â„¢, Ã¢â‚¬ËœasmÃ¢â‚¬â„¢ or Ã¢â‚¬Ëœ__attribute__Ã¢â‚¬â„¢ before Ã¢â‚¬Ëœsrv_use_native_aioÃ¢â‚¬â„¢ srv_use_native_aio - we do not use native aio of the OS anyway from MEB. MEB does not compile InnoDB with this option. Hence disabling it. @ storage/innobase/include/trx0sys.h [ 56%] Building C object CMakeFiles/innodb.dir/home/narayanan/mysql-server/mysql-5.5-meb-rel3.8-innodb-integration-1/storage/innobase/trx/trx0sys.c.o /home/narayanan/mysql-server/mysql-5.5-meb-rel3.8-innodb-integration-1/storage/innobase/trx/trx0sys.c: In function Ã¢â‚¬Ëœtrx_sys_read_file_format_idÃ¢â‚¬â„¢: /home/narayanan/mysql-server/mysql-5.5-meb-rel3.8-innodb-integration-1/storage/innobase/trx/trx0sys.c:1499:20: error: Ã¢â‚¬ËœTRX_SYS_FILE_FORMAT_TAG_MAGIC_NÃ¢â‚¬â„¢   undeclared (first use in this function) /home/narayanan/mysql-server/mysql-5.5-meb-rel3.8-innodb-integration-1/storage/innobase/trx/trx0sys.c:1499:20: note: each undeclared identifier is reported only once for  each function it appears in /home/narayanan/mysql-server/mysql-5.5-meb-rel3.8-innodb-integration-1/storage/innobase/trx/trx0sys.c: At top level: /home/narayanan/mysql-server/mysql-5.5-meb-rel3.8-innodb-integration-1/storage/innobase/include/buf0buf.h:607:1: warning: Ã¢â‚¬Ëœbuf_block_buf_fix_inc_funcÃ¢â‚¬â„¢ declared Ã¢â‚¬ËœstaticÃ¢â‚¬â„¢ but never defined make[2]: *** [CMakeFiles/innodb.dir/home/narayanan/mysql-server/mysql-5.5-meb-rel3.8-innodb-integration-1/storage/innobase/trx/trx0sys.c.o] Error 1 unused calls excluded to enable compilation @ storage/innobase/mem/mem0dbg.c excluding #include ""ha_prototypes.h"" that lead to definitions in ha_innodb.cc @ storage/innobase/os/os0file.c InnoDB not compiled with aio support from MEB anyway. Hence excluding this from the compilation. @ storage/innobase/page/page0zip.c page0zip.c:(.text+0x4e9e): undefined reference to `buf_pool_from_block' collect2: ld returned 1 exit status buf_pool_from_block defined in buf0buf.ic, most of the file is excluded for compilation of MEB @ storage/innobase/ut/ut0dbg.c excluding #include ""ha_prototypes.h"" since it leads to definitions in ha_innodb.cc innobase_basename(file) is defined in ha_innodb.cc. Hence excluding that also. @ storage/innobase/ut/ut0ut.c cal_tm unused from MEB, was leading to earnings, hence disabling for MEB. "	f29bfa7eee2edc9e54b1468937ee508e5131dd8b
----------------------------
Change classification of SPJ 'out of memory/resources' error from 'permanent' to 'temporary' resource errors. Also change error text for SOJ-error 20006 to contain 'LongMessageBuffer' as this is the config variable which has to be adjusted to avoid this error. 	d2a49fdfc27b62c9cf9b6ed778d2a304b70510f4
----------------------------
"Ignore (bzr) the new component ""client/mysql_config_editor"", helpful for those who build within the source tree. "	8b6560af1df2118f59df10c7ccce71c9b4584b72
----------------------------
Merge: 1bf83fa 6c03d09 BUG#12400221 - 60926: BINARY LOG EVENTS LARGER THAN MAX_ALLOWED_PACKET Upmerge from mysql-5.1 -> mysql-5.5 	29c3f369737d342bab49c2efd3dfc7363d72eae7
----------------------------
WL#6255 ALTER_ADD_COLUMN (ALTER TABLE ... ADD COLUMN) innobase_build_col_map_add(): Convert a default value of an ADD COLUMN to the InnoDB format. ha_innobase_inplace_ctx(): Add add_cols. innobase_build_col_map(), row_merge_build_indexes(), row_log_table_apply(), row_build(), row_log_table_apply_convert_mrec(), row_log_table_apply_insert(), row_log_table_apply_update(), row_log_table_apply_op(), row_log_table_apply_ops(), row_merge_read_clustered_index(): Add the parameter add_cols. prepare_inplace_alter_table_dict(): When rebuilding a table, make it a *.ibd file if the original table was in an *.ibd file, or if innodb_file_per_table=1. 	61edd4daf370728236e4f1a45ae5a887298fe64b
----------------------------
WL#6003 Support silent slave transaction retries - return the new error code in a warning from ha_ndbcluster to trigger the slave to retry transaction 	540329f1512c4924d609e93aaa2a3feaac191f81
----------------------------
"Bug#13604447 61064: SELECT QUERIES USING ESCAPE SYNTAX FAIL - Add function to Item_func_like making it possible to determine if the item represents an ""expr LIKE pat"" or ""expr LIKE pat ESCAPE 'escape_char'"" - The above function is used by ha_ndbcluster to avoid pushing down LIKE queries with non default escape characters(only the default escape character '\' is supported by NDB currently) "	7f30138ecb9894dc708575184124d780b975c0c7
----------------------------
WL#4443: Remove scalability problem with many lock's and external lock's on partitioned tables with many partitions. Fixed code in partition_info.cc to be easier to cover. Removed extra parentheses in ha_ndbcluster.cc. Removed the feature specific push test collection. 	99839550d4704a3bc5218f958d3fb5da90e1d2dc
----------------------------
WL#5223 follow up - transaction.on renamed to transaction.flags.enabled - fix usage in ha_ndbcluster.cc 	0a39235d60de79578ad1f38cf217d8dc48bc8f02
----------------------------
WL#6301: Change default value for the 'bind-address' option. The patch temporarily reverts the default value to 0.0.0.0. 	55e020cb03ddcb505266d9665196e8f36f8ee2f6
----------------------------
WL#6216 - Changes to Server defaults in 5.6 General changes: back_log, flush_time, join_buffer_size, max_allowed_packet, max_connect_errors, sql_mode. 	94943075ebc01c452adb15ac0b9aa0345f3daa14
----------------------------
Patch for WL#6301 (Change default value for the 'bind-address' option). The patch changes the bind-address default value (from '0.0.0.0' to '::') and does the following cosmetic changes: - it adds a startup warning if the server failed to reset the IPV6_V6ONLY flag on the server socket; - it uses vio_getnameinfo() instead of vio_get_normalized_ip_string() to print out IP addresses on startup. That's needed in order to output IPv4-mapped IPv6 addresses properly (vio_get_normalized_ip_string() converts an IPv4-mapped IPv6 address to regular IPv4 address). 	7f203d10f1744cd47d3d25e01a708d6eccbea75f
----------------------------
WL#6082 Improve the Disk-Sweep Multi-Range Read cost model Patch 6: The DS-MRR model assumes everything on disk DS-MRR can improve performance when most of the data for the query needs to be read from a hard disk. When all data is in memory the extra sorting will just add overhead. The relative overhead will be largest for small queries reading few records due to the need for setting up an extra handler to the storage engine, configure and allocate the sort buffer, and sort the records. With the current cost model we do not know whether data is in memory or on disk. So to avoid that DS-MRR is used when it is likely that the data is in memory the following heuristic is implemented: The cost based DS-MRR will not be used when: -the size of the table is smaller than the memory buffer of the storage engine (or smaller than 100 MB if we do not have information about the storage engine buffer). -the scan will retrieve less than 50 records. 	77059678d803dd8ba71a2823d5282d76a84d2887
----------------------------
Bug #13485416: CRASH WITH SMALL MAX_SORT_LENGTH AND GROUP BY AND LIMIT Sort keys for e.g. filesort are created by Field::sort_string(uchar*,uint), where the uint argument is ignored. But the three callers of the function obviously assume the opposite: when max_sort_length is less than the pack size of the value to be sorted by, there will always be a buffer overrun. The fix is to: - Rename Field::sort_string() to Field::make_sort_key(), because the latter describes what the function does. - Make sure we always respect the length argument for all implementations of the interface Field_*::make_sort_key(). - Test all implementations of make_sort_key with unit tests. Some implementations need to be rewritten (i.e. code in platform dependent #ifdef's) in order to be completely tested. 	854d4b0eb3c83ef804e4515f6ee2d2bc1cf74b24
----------------------------
Merge: 35d4c18 9aa79dc BUG#12400221 - 60926: BINARY LOG EVENTS LARGER THAN MAX_ALLOWED_PACKET Problem ======== Replication breaks in the cases if the event length exceeds the size of master Dump thread's max_allowed_packet. The reason why this failure is occuring is because the event length is more than the total size of the max_allowed_packet, on addition of the max_event_header length exceeds the max_allowed_packet of the DUMP thread. This causes the Dump thread to break replication and throw an error. That can happen e.g with row-based replication in Update_rows event. Fix ==== The problem is fixed in 2 steps: 1.) The Dump thread limit to read event is increased to the upper limit i.e. Dump thread reads whatever gets logged in the binary log. 2.) On the slave side we increase the the max_allowed_packet for the slave's threads (IO/SQL) by increasing it to 1GB. This is done using the new server option (slave_max_allowed_packet) included, is used to regulate the max_allowed_packet of the slave thread (IO/SQL) by the DBA, and facilitates the sending of large packets from the master to the slave. This causes the large packets to be received by the slave and apply it successfully. 	6c03d09e2e96bed671675f1882e6ab1ff821d50c
----------------------------
WL#5666: Tuning adaptive flushing rb://1000 approved by: Sunny Bains Changes in adaptive flushing based on work by Dimtri. New Parameters: =============== innodb_adaptive_flushing_lwm: low water mark in %age of log capacity at which adaptive flushing kicks in. Default 10: Range 0 - 70 (note it is %age of log_capacity instead of max_async_age for user friendliness) innodb_max_dirty_pages_pct_lwm: low water mark of dirty pages in %age where preflushing to control dirty page ratio kicks in. Default 0 (which has the special meaning of this value having no effect). Range 0 - 99 innodb_max_io_capacity: The limit upto which we are allowed to stretch io_capacity in case of emergency. Default: 400 (which is 2X of default innodb_io_capacity). Range 100 - ~0 innodb_flushing_avg_loops: Number of iterations for which we keep the previously calculated snapshot of the flushing state. This variable is roughly a measure of how smooth you want the transition in the flushing activity to be. The higher the value the smoother will be the transition in flushing in face of rapidly changing workload. A lower value implies that the flushing algorithm is more responsive but it also means that flushing acitivity can become spiky when confronted with a quickly changing workload. Default value is 30 and permissible range is 1 – 1000. All parameters are dynamic. Existing Parameters: ==================== innodb_adaptive_flushing: same as before. Only now it will use the new formula. innodb_io_capacity: same as before. But now tied to innodb_max_io_capacity. If user sets innodb_max_io_capacity < innodb_io_capacity a warning will be issued and innodb_max_io_capacity will be set equal to innodb_io_capacity. If user sets innodb_io_capacity > innodb_max_io_capacity a warning will be issued and innodb_io_capacity will be set equal to innodb_max_io_capacity. innodb_max_dirty_pages_pct: same as before. But now tied to innodb_max_dirty_pages_pct_lwm. If user sets innodb_max_dirty_pct < innodb_max_dirty_pages_pct_lwm a warning will be issued and innodb_max_dirty_pages_pct_lwm will be lowered to new innodb_max_dirty_pages_pct. If user sets innodb_max_dirty_pct_lwm > innodb_max_dirty_pages_pct a warning will be issued and innodb_max_dirty_pages_pct_lwm will be set equal to innodb_max_dirty_pages_pct. 	7c8e9b5fdbb95f2948adb8ae78b634c2db0e140e
----------------------------
"part of WL#6189 Turn InnoDB persistent statistics ON by default Split the two statements out of ""check_stats"" in innodb_stats_auto_recalc_on_nonexistent.test It emits this error on linux/gcov only: innodb.innodb_stats_auto_recalc_on_nonexistent w5 [ fail ] Test ended at 2012-05-29 18:40:37 CURRENT_TEST: innodb.innodb_stats_auto_recalc_on_nonexistent mysqltest: At line 16: query '$check_stats' failed: 1064: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'SELECT COUNT(*) FROM mysql.innodb_index_stats WHERE table_name = 't'' at line 1 The result from queries just before the failure was: Test with default setting CREATE TABLE t (a INT, PRIMARY KEY (a)) ENGINE=INNODB; - saving '/ramdisk/mtr-752/var-ps/5/log/innodb.innodb_stats_auto_recalc_on_nonexistent/' to '/ramdisk/mtr-752/var-ps/log/innodb.innodb_stats_auto_recalc_on_nonexistent/' "	ef1479a9933ff1d0df25e6cf37071fd6d2ff5a7a
----------------------------
part of WL#6189 Turn InnoDB persistent statistics ON by default Enable innodb_stats_auto_recalc_on_nonexistent on non-16k pages too because it does not print any numbers which depend on the page size. 	ef4e1dffef34a97fd40a0fd260ac07c887a0b313
----------------------------
WL#6223 Cluster zerodiff - since silent retries now are handled by returning an error code the string which used to be string matched can now be moved down into ha_ndbcluster.cc 	127bb5fd3753477978f345486d20096091cc1a58
----------------------------
Bug#14003080:65104: MAX_USER_CONNECTIONS WITH PROCESSLIST EMPTY Analysis: ------------- If server is started with limit of MAX_CONNECTIONS and MAX_USER_CONNECTIONS then only MAX_USER_CONNECTIONS of any particular users can be connected to server and total MAX_CONNECTIONS of client can be connected to server. Server maintains a counter for total CONNECTIONS and total CONNECTIONS from particular user. Here, MAX_CONNECTIONS of connections are created to server. Out of this MAX_CONNECTIONS, connections from particular user (say USER1) are also created. The connections from USER1 is lesser than MAX_USER_CONNECTIONS. After that there was one more connection request from USER1. Since USER1 can still create connections as he havent reached MAX_USER_CONNECTIONS, server increments counter of CONNECTIONS per user. As server already has MAX_CONNECTIONS of connections, next check to total CONNECTION count fails. In this case control is returned WITHOUT decrementing the CONNECTIONS per user. So the counter per user CONNECTIONS goes on incrementing for each attempt until current connections are closed. And because of this counter per CONNECTIONS reached MAX_USER_CONNECTIONS. So, next connections form USER1 user always returns with MAX_USER_CONNECTION limit error, even when total connection to sever are less than MAX_CONNECTIONS. Fix: ------------- This issue is occurred because of not handling counters properly in the server. Changed the code to handle per user connection counters properly. 	ca9a3a8915455ad2069572235f743a3dff1f6d5e
----------------------------
Bug#14003080:65104: MAX_USER_CONNECTIONS WITH PROCESSLIST EMPTY Analysis: ------------- If server is started with limit of MAX_CONNECTIONS and MAX_USER_CONNECTIONS then only MAX_USER_CONNECTIONS of any particular users can be connected to server and total MAX_CONNECTIONS of client can be connected to server. Server maintains a counter for total CONNECTIONS and total CONNECTIONS from particular user. Here, MAX_CONNECTIONS of connections are created to server. Out of this MAX_CONNECTIONS, connections from particular user (say USER1) are also created. The connections from USER1 is lesser than MAX_USER_CONNECTIONS. After that there was one more connection request from USER1. Since USER1 can still create connections as he havent reached MAX_USER_CONNECTIONS, server increments counter of CONNECTIONS per user. As server already has MAX_CONNECTIONS of connections, next check to total CONNECTION count fails. In this case control is returned WITHOUT decrementing the CONNECTIONS per user. So the counter per user CONNECTIONS goes on incrementing for each attempt until current connections are closed. And because of this counter per CONNECTIONS reached MAX_USER_CONNECTIONS. So, next connections form USER1 user always returns with MAX_USER_CONNECTION limit error, even when total connection to sever are less than MAX_CONNECTIONS. Fix: ------------- This issue is occurred because of not handling counters properly in the server. Changed the code to handle per user connection counters properly. 	17117e1774e7a523f55c6a13a32f4c41a63b6ee6
----------------------------
"Use a dedicated trx in dict_stats_drop_index() instead of prebuilt->trx because prebuilt->trx is not committed and the following scenario causes a lock wait timeout: SET GLOBAL innodb_stats_persistent=1; CREATE TABLE t1 (i INT PRIMARY KEY) ENGINE=InnoDB; CREATE TABLE t2 (i INT, FOREIGN KEY (i) REFERENCES t1 (i)) ENGINE=InnoDB; CREATE INDEX ind2 ON t2(i); The CREATE INDEX command drops the implicitly added index ""i"" on t2 and tries to add a new index before committing the trx. So we end up with DELETE FROM mysql.innodb_index_stats dangling uncommitted and later INSERT/UPDATE in another trx by dict_stats_save() which causes lock wait timeout. With this change all code that deals with mysql.innodb_table_stats or mysql.innodb_index_stats creates a dedicated trx locally and commits it. "	ed3cd1a774fac0133b5908362cbaf6dccd98c50d
----------------------------
part of WL#6189 Turn InnoDB persistent statistics ON by default Extend innodb_stats_auto_recalc.test with a DELETE statement. 	6e0d695df0f8a294bdbac6ae45f64f6a122c245a
----------------------------
Bug#14108709 - WITH READ ONLY TRANSACTION AND XA ROLLBACK: FAILING ASSERTION: !(TRX)->READ_ONLY XA transactions can be read only, they can't be auto-commit. rb://1090 Approved by Jimmy Yang. 	ea9329770aed52f1bea33f23756112db22641a76
----------------------------
Merge: 66f9bfe c021753 Merge 7.1 -> 7.2 Fixed the other place in ha_ndbcluster_cond for BUG#14106592 	e5d44a14391818729df147eeff845257e1eb6b50
----------------------------
Merge: 8857803 77fcf72 WL#6311 Remove --safe-mode Null merge 5.5->trunk 	c66565fefc0c6e667805f97345fb1e1f38ea751d
----------------------------
WL#6311 Remove --safe-mode Remove the --safe-mode command line option. An error message about an invalid command line option will be printed if mysqld is started with this option. Also removes the SPECIAL_SAFE_MODE flag and all tests for it. 	88578030c2ed1f7824910c438d02704a4c2de6db
----------------------------
WL#6311 Remove --safe-mode Print deprecation warning if the --safe-mode command line option is used. 	77fcf72cf42f651bf87e3b6300d6d0ccd48b8e9c
----------------------------
"Bug #12752572 61579: REPLICATION FAILURE WHILE INNODB_AUTOINC_LOCK_MODE=1 AND USING TRIGGER When an insert stmt like ""insert into t values (1),(2),(3)"" is executed, the autoincrement values assigned to these three rows are expected to be contiguous.  In the given lock mode (innodb_autoinc_lock_mode=1), the auto inc lock will be released before the end of the statement.  So to make the autoincrement contiguous for a given statement, we need to reserve the auto inc values at the beginning of the statement. Modified the fix based on review comment by Svoj. "	3fcd55f687cba3a0082c34b4508545031c232082
----------------------------
BUG#12400221 - 60926: BINARY LOG EVENTS LARGER THAN MAX_ALLOWED_PACKET Problem ======== SQL statements close to the size of max_allowed_packet produce binary log events larger than max_allowed_packet. The reason why this failure is occuring is because the event length is more than the total size of the max_allowed_packet + max_event_header length. Now since the event length exceeds this size master Dump thread is unable to send the packet on to the slave. That can happen e.g with row-based replication in Update_rows event. Fix ==== The problem was fixed by increasing the max_allowed_packet for the slave's threads (IO/SQL) by increasing it to 1GB. This is done using the new server option included which is used to regulate the max_allowed_packet of the slave thread (IO/SQL). This causes the large packets to be received by the slave and apply it successfully. 	9aa79dc5966b6bba74c772d110265161a018cbf2
----------------------------
Fix for Bug#13798956 : fix for flush_neighbors behavior to flush only contiguous pages innodb_flush_neighbors option is extended for supporting also the previous method 	721ce2201f8d06d536223fe99a48ae2801306e31
----------------------------
WL#5223: Used std::pair as return type in function sync_binlog_file as requested in the review process. 	7f7bbb2de71ba1625ed4de07cf271bad941db080
----------------------------
BUG#13992602: BINLOGGING STATEMENTS WITH GTID CRASHES IN BOOTSTRAP MODE Bootstrap mode should only be used to initialize a new datadir with mysql_install_db, this initialization steps should not generate GTIDs because this steps are only meant for this server. When server is started on bootstrap mode, GTIDs and replication are automatically disabled. 	cfc41cd167bc36c9bca390ab5084ddf6c11e93b8
----------------------------
WL#5223: . Merged sync_binlog_file() and flush_and_sync() to avoid duplicated code. . Removed unused functions after the prepare_commit_mutex: mysql_bin_log_file_name() and mysql_bin_log_file_pos(). . Removed unused function remove_pending_rows_event(). 	fdafcb78300b95a0dc323b5fe4c8e5f12f23db2b
----------------------------
"BUG#13812961 - ASSERT: 'REMOVE_TYPE == TDC_RT_REMOVE_UNUSED..' TDC_REMOVE_TABLE / LOCK_IO_CACHE Analysis: ------------- When creating a view, exclusive metadata lock should be taken on the view name. If CREATE VIEW has SELECT with ""LOCK IN SHARE MODE"" set then shared lock should be taken on all the table names used in SELECT. The TABLE_LIST object of view is part of the LEX->current_select while creating the view. So while requesting the shared lock for all tables of ""LEX->current_select"", shared lock MDL request is made on view also. Lock type of the VIEW was therefore by mistake reset for EXCLUSIVE to SHARED. Since, the lock on view should be exclusive lock, in ""tdc_remove_table"" function, assert to check lock type fails. Even create view with ""SELECT...... FOR UPDATE"" also cause this issue. Users should not be allowed to create view when database is in ""read_only"" mode. But because of this bug, users are allowed to CREATE VIEW. Fix: ------------- While creating the table as below, CREATE TABLE t1 AS SELECT * FROM t1 LOCK IN SHARED MODE OR CREATE TABLE t1 AS SELECT * FROM t1 FOR UPDATE After parsing table ""t1"", exclusive lock is taken on t1. Then while parsing SELECT query, if ""LOCK IN SHARED MODE"" or ""FOR UPDATE"" is found then all the non-select tables are removed from the ""LEX->current_select->table_list"". Lock Type ""Shared Lock"" in case ""LOCK IN SHARED MODE"" and ""WRITE LOCK"" is set in case ""FOR UPDATE"" on only tables of SELECT query. After completion of SELECT query parsing, all non-select tables are pushed to the front of ""LEX->current_select->table_list"". Similarly to fix this issue, parsing code is changed to remove non-select view tables from the ""LEX->current_select->table_list"". Required MDL Lock type is set on the select tables only. Once select query parsing is over then view table is pushed to the front of ""LEX->current_select->table_list"". Setting proper lock type for CREATE VIEW table(/view) names also fixes the issue of, creating a view while database is in ""read_only"" mode. "	fbc0aaa131ade41896de80e2047cbd3add045b30
----------------------------
Bug #13943231: ALTER TABLE AFTER DISCARD MAY CRASH THE SERVER The following scenario crashes our mysql server: 1.  set global innodb_file_per_table=1; 2.  create table t1(c1 int) engine=innodb; 3.  alter table t1 discard tablespace; 4.  alter table t1 add unique index(c1); Step 4 crashes the server.  This patch introduces a check on discarded tablespace to avoid the crash. rb://1041 approved by Marko Makela 	8ce4d1007c797b721f5d2ae6f4ec04b930cf93e3
----------------------------
"Bug #13955256: KEYCACHE CRASHES, CORRUPTIONS/HANGS WITH, FULLTEXT INDEX AND CONCURRENT DML. Problem Statement: ------------------ 1) Create a table with FT index. 2) Enable concurrent inserts. 3) In multiple threads do below operations repeatedly a) truncate table b) insert into table .... c) select ... match .. against .. non-boolean/boolean mode After some time we could observe two different assert core dumps Analysis: -------- 1)assert core dump at key_read_cache(): Two select threads operating in-parallel on same key root block. 1st select thread block->status is set to BLOCK_ERROR because the my_pread() in read_block() is returning '0'. Truncate table made the index file size as 1024 and pread was asked to get the block of count bytes(1024 bytes) from offset of 1024 which it cannot read since its ""end of file"" and retuning '0' setting ""my_errno= HA_ERR_FILE_TOO_SHORT"" and the key_file_length, key_root[0] is same i.e. 1024. Since block status has BLOCK_ERROR the 1st select thread enter into the free_block() and will be under wait on conditional mutex by making status as BLOCK_REASSIGNED and goes for wait_on_readers(). Other select thread will also work on the same block and sees the status as BLOCK_ERROR and enters into free_block(), checks for BLOCK_REASSIGNED and asserting the server. 2)assert core dump at key_write_cache(): One select thread and One insert thread. Select thread gets the unlocks the 'keycache->cache_lock', which allows other threads to continue and gets the pread() return value as'0'(please see the explanation above) and tries to get the lock on 'keycache->cache_lock' and waits there for the lock. Insert thread requests for the block, block will be assigned from the hash list and makes the page_status as 'PAGE_WAIT_TO_BE_READ' and goes for the read_block(), waits in the queue since there are some other threads performing reads on the same block. Select thread which was waiting for the 'keycache->cache_lock' mutex in the read_block() will continue after getting the my_pread() value as '0' and sets the block status as BLOCK_ERROR and goes to the free_block() and go to the wait_for_readers(). Now the insert thread will awake and continues. and checks block->status as not BLOCK_READ and it asserts. Fix: --- In the full text code, multiple readers of index file is not guarded. Hence added below below code in _ft2_search() and walk_and_match(). to lock the key_root I have used below code in _ft2_search() if (info->s->concurrent_insert) mysql_rwlock_rdlock(&share->key_root_lock[0]); and to unlock if (info->s->concurrent_insert) mysql_rwlock_unlock(&share->key_root_lock[0]); "	4ff100e69d7b9c56d51be9985b3da3077bc09a27
----------------------------
Bug #13943231: ALTER TABLE AFTER DISCARD MAY CRASH THE SERVER The following scenario crashes our mysql server: 1.  set global innodb_file_per_table=1; 2.  create table t1(c1 int) engine=innodb; 3.  alter table t1 discard tablespace; 4.  alter table t1 add unique index(c1); Step 4 crashes the server.  This patch introduces a check on discarded tablespace to avoid the crash. rb://1041 approved by Marko Makela 	9a753ef5ab39de0c6f4d8ebd02a1ac7d0c66fd7e
----------------------------
ndb 7.3-fk mysql-alter-fk This patch adds sql support for adding/dropping foreign keys as part of offline alter table The code is...as it is... (but i've seen worse...once... in ha_ndbcluster_binlog.cc :-) NOTE: - ndb foreign keys support online adding/dropping but this patch makes no attempt at fixing this... online = no table copy, no read/write table-locks short read-locks taken while verifying that FK is consistent 	c56181bbf320c73cdfbef8f6be716ecdf8d4a984
----------------------------
"Bug #13955256: KEYCACHE CRASHES, CORRUPTIONS/HANGS WITH, FULLTEXT INDEX AND CONCURRENT DML. Problem Statement: ------------------ 1) Create a table with FT index. 2) Enable concurrent inserts. 3) In multiple threads do below operations repeatedly a) truncate table b) insert into table .... c) select ... match .. against .. non-boolean/boolean mode After some time we could observe two different assert core dumps Analysis: -------- 1)assert core dump at key_read_cache(): Two select threads operating in-parallel on same key root block. 1st select thread block->status is set to BLOCK_ERROR because the my_pread() in read_block() is returning '0'. Truncate table made the index file size as 1024 and pread was asked to get the block of count bytes(1024 bytes) from offset of 1024 which it cannot read since its ""end of file"" and retuning '0' setting ""my_errno= HA_ERR_FILE_TOO_SHORT"" and the key_file_length, key_root[0] is same i.e. 1024. Since block status has BLOCK_ERROR the 1st select thread enter into the free_block() and will be under wait on conditional mutex by making status as BLOCK_REASSIGNED and goes for wait_on_readers(). Other select thread will also work on the same block and sees the status as BLOCK_ERROR and enters into free_block(), checks for BLOCK_REASSIGNED and asserting the server. 2)assert core dump at key_write_cache(): One select thread and One insert thread. Select thread gets the unlocks the 'keycache->cache_lock', which allows other threads to continue and gets the pread() return value as'0'(please see the explanation above) and tries to get the lock on 'keycache->cache_lock' and waits there for the lock. Insert thread requests for the block, block will be assigned from the hash list and makes the page_status as 'PAGE_WAIT_TO_BE_READ' and goes for the read_block(), waits in the queue since there are some other threads performing reads on the same block. Select thread which was waiting for the 'keycache->cache_lock' mutex in the read_block() will continue after getting the my_pread() value as '0' and sets the block status as BLOCK_ERROR and goes to the free_block() and go to the wait_for_readers(). Now the insert thread will awake and continues. and checks block->status as not BLOCK_READ and it asserts. Fix: --- In the full text code, multiple readers of index file is not guarded. Hence added below below code in _ft2_search() and walk_and_match(). to lock the key_root I have used below code in _ft2_search() if (info->s->concurrent_insert) mysql_rwlock_rdlock(&share->key_root_lock[0]); and to unlock if (info->s->concurrent_insert) mysql_rwlock_unlock(&share->key_root_lock[0]); "	db2ad645ef27250b933b1a7d6802b196cedca135
----------------------------
"Bug #12752572 61579: REPLICATION FAILURE WHILE INNODB_AUTOINC_LOCK_MODE=1 AND USING TRIGGER When an insert stmt like ""insert into t values (1),(2),(3)"" is executed, the autoincrement values assigned to these three rows are expected to be contiguous.  In the given lock mode (innodb_autoinc_lock_mode=1), the auto inc lock will be released before the end of the statement.  So to make the autoincrement contiguous for a given statement, we need to reserve the auto inc values at the beginning of the statement. rb://1074 approved by Alexander Nozdrin "	f23215ee9cb78d3e1baacfc3bfd5941bdede1f9d
----------------------------
Fixed result file for mysqld--help-win.test and configured rpl_stm_mts_crash_safe as a big test. 	b0f7cf97068410bb54968c0c6d268bc56924c73c
----------------------------
part of WL#6189 Turn InnoDB persistent statistics ON by default Add a mtr test to confirm that the global innodb_stats_persistent_sample_pages or the per-table option STATS_SAMPLE_PAGES is used when expected. 	1bb5893f268fe28e55c11254506ca6e43e185e0a
----------------------------
Bug#14034087 - FIX FALSE CACHELINE SHARING IN 5.6 1. Reduce false sharing 2. Reduce the overhead of cache coherency 3. Remove redundant code 4. Remove bogus stats printfs that were only enabled when UNIV_DEBUG was set Add a class ib_counter_t that splits the counter into N slots. Currently hard coded to 64 slots. It pads the slots on 64 bytes, again currently hard coded. We may in the future make these configurable once there is a platform independent and reliable way to get the necessary information. There is an implementation that uses the Linux function cpu_getsched() instead of the OS thread id. It is currently not used. Group all the stats variables in srv_stats_t. rb://1028 Approved by Inaam Rana. 	44cdd60f4b16f13b752833c2ac78212be003d500
----------------------------
ha_ndbcluster::read_first_row() was once implemented as part of the SPJ project as we then had plans for pushing queries with 'system' tables as root operation. (JT_SYSTEM is the only use case for ::read_first_row()) It was later decided that we should not push such queries, but ha_ndbcluster::read_first_row() has remained in the code since then. There is a default implementation of this method (handler::read_first_row()) which is almost identical, except that it does not call ha_rnd_end() / ha_index_end() before returning. These calls was removed in our ha_ndbcluster::read_first_row() as pushed joins required the resultset to stay 'open' due to the child operations. However: - We do not push queries with 'system' tables so such a change is not required. - As part of fixing bug#13901890 'SQL NODE CRASHES DURING INSERT SELECT' we identified part of the root cause to be an overridden ::index_read_idx_map() which also omitted calling rnd_end()/index_end() before returning. This fix removes this obsolete, and potential evil code. 	917833dd29ded20daa29de609006b7cf660e5970
----------------------------
WL#5917 Appending data to Rows_log_event Overview -------- This feature implements new 'version 2' Binlog row events for the existing WRITE_ROW, UPDATE_ROW, DELETE_ROW events.  Version 2 Binlog row events become the default. These new 'version 2' Binlog row events can transport extra information *with* each row event. A Master can optionally generate 'version 1' Binlog row events by setting the --log-bin-use-v1-row-events=1 MySQLD option/variable.  This is necessary during an upgrade where the Master is upgraded before the Slave. Motivation ---------- This feature is primarily motivated by WL5353 Reflecting GCI, which uses the extra row event data to transport per-row event transaction identities. Details ------- - 3 new event types added - Existing row events renamed with _v1 suffix - log-bin-use-v1-row-events option added - Existing row event classes reused - Extra row info is one use case of new 'v2' extensible row event format.  Should be no need for 'v3'. - Binlog injector Api enhanced to allow info to be passed in - THD Api enhanced to expose info to storage engine running as Slave SQL thread - mysqlbinlog tool enhanced to show extra info in --verbose mode. - New testcases : rpl_extra_row_data, log_bin_use_v1_row_events_basic - Enhanced testcase : binlog_old_versions - Various corrected / adjusted testcases 	49922abfa832aeb301c296d831f61773d704187d
----------------------------
part of WL#6189 Turn InnoDB persistent statistics ON by default Add basic mtr test for the new global config knob innodb_stats_auto_recalc 	19ca9b1b5d145481992e15807714f885dd7426d5
----------------------------
Fix bug where the ndb_engine would log to stderr even if some other logger was configured in memcached. 	c8bb4a731f8edaba040b87f1adbdf50fdf7259fc
----------------------------
WL#5223: Binary Log Group Commit Patch to improve the number of transactions being written at each sync by reading repeatedly from the queue for the flush stage until it is empty or a timeout is reached. The patch adds the variable binlog-max-flush-queue-time to configure the timeout. 	712aa732b404796ecfbafcd0341f2f7c33501d1a
----------------------------
"Third attempt to do a follow-up for Bug#12762885 - 61713: MYSQL WILL NOT BIND TO ""LOCALHOST"" IF LOCALHOST IS BOTH IPV4/IPV6 ENABLED. Previous commit comments were wrong. The default value has always been NULL. The original patch for Bug#12762885 just makes it visible in the logs. This patch uses ""0.0.0.0"" string if bind-address is not set. "	bcc3d5ce252cbc90b2c190f12484ca453c69538a
----------------------------
"Proper follow-up for Bug#12762885 - 61713: MYSQL WILL NOT BIND TO ""LOCALHOST"" IF LOCALHOST IS BOTH IPV4/IPV6 ENABLED. The original patch removed default value of the bind-address option. So, the default value became NULL. By coincedence NULL resolves to 0.0.0.0 and ::, and since the server chooses first IPv4-address, 0.0.0.0 is choosen. So, there was no change in the behaviour. This patch restores default value of the bind-address option to ""0.0.0.0"". "	3885dc55ddf494e6917f30aa7bd638d0fd63811f
----------------------------
"Follow-up for Bug#12762885 - 61713: MYSQL WILL NOT BIND TO ""LOCALHOST"" IF LOCALHOST IS BOTH IPV4/IPV6 ENABLED. The original patch removed default value of the bind-address option. So, the default value became NULL. By coincedence NULL resolves to 0.0.0.0 and ::, and since the server chooses first IPv4-address, 0.0.0.0 is choosen. So, there was no change in the behaviour. This patch restores default value of the bind-address option to ""0.0.0.0"". "	cb4490919ba28b5b88044de78f27617a930db386
----------------------------
WL5602 - fixed test failures due to differences in yassl vs openssl configuration. 	96e3860907060a1ca3348e5128c236288850c1d5
----------------------------
WL#5960 Start memcached from mysql-test-run.pl - Additional review fixes - remove hardcoded portnumber for memcached(s), portnumber is now generated by ConfigFactory.pm - Make it possible to configure  ndb_connectstring and max_connections in my.cnf - Add environement variable NDB_MEMCACHE_1_PORT holding the value of the port used by memcached.1, change all tests to use that env var. - Add more comments and print the name of the memcached being started - Pass the value of opt_verbose to SafeProcess->new so that args to memcached are printed if running mtr.pl with --verbose --verbose - Use different name of log files for each memcached 	827b70f0ec18fb31b155fccfd0086e70732f803e
----------------------------
part of WL#6189 Turn InnoDB persistent statistics ON by default Add a new global boolean config setting innodb_stats_auto_recalc with a default value ON. The setting has no effect (yet). 	924b385e8350f08d4212e71330d41e7066af8d8c
----------------------------
"Implement WL#6175 Introduce persistent statistics ON/OFF switch A new table_option is added, similarly to e.g. DELAY_KEY_WRITE. Modified files are: include/my_base.h sql/handler.h sql/lex.h sql/sql_show.cc sql/sql_table.cc sql/sql_yacc.yy The addition of the new option is purely mechanical - copy every occurence of DELAY_KEY_WRITE and rename it to the new STATS_PERSISTENT option. The .frm file format is not changed. In the code before this WL the logic was: every time stats would be updated in pre-PS MySQL (e.g. MySQL 5.5) do this: try to fetch stats for that table from persistent stats tables (e.g. check if PS is ON for that table), if fetch succeeds, then this is it. If fetch fails (due to e.g. no rows for that table in the stats storage, PS is OFF) then calculate the stats using the old transient statistics method. Below by ""PS enabled table"" or ""table has PS set to ON"" we mean that either it been explicitly flagged as STATS_PERSISTENT=1 by CREATE/ALTER TABLE or that its STATS_PERSISTENT= flag is not set ('default') and the global innodb_stats_persistent is ON. With this WL we change the logic to: every time stats would be updated in pre-PS MySQL do this: check if the table has PS flag set to ON, if yes, then do nothing (except if the stats are not initialized (e.g. first open table), in which case fetch them from disk), else calculate the stats using the old transient method. So we introduce a new per-table flag and store it in the .frm file. Upon open table we copy that flag into dict_table_t::stat_persistent to ease checking the value from InnoDB internal code. We introduce a new state for a table and its indexes' stats: 'unknown' which means that stats have not been calculated after opening the table and should not be accessed when in this state. It is also unknown whether the table's persistent stats flag is ON or OFF. This idea comes from Marko and is based on the fact that stats are only needed by MySQL and are requested after a call to ::open(). So whenever we open a table internally in InnoDB (table not being opened by MySQL) we leave the stats in 'unknown' state. When ::open() is called, then we peek the value of the PS flag from table->s->db_create_options, save it in the newly introduced table->stat_persistent and do the corresponding action to initialize the stats - either fetch them from disk if PS=ON or recalc them if PS=OFF. This is done by the newly introduced function dict_stats_init(). The new 'unknown' state is designated by table->stat_initialized being FALSE. When the PS flag is changed by the user with ALTER TABLE, we need to set the new value in table->stat_persistent - this is done by the new function dict_stats_set_persistent() which is also used to set the value of the flag initially from inside dict_stats_init() (called from ::open() and ::create()). A new function is introduced: dict_stats_is_persistent_enabled(table) which checks whether PS is switched ON/OFF for the given table. This function is very fast because it just checks if the bits are set in table->stat_persistent (compared to the slow SELECTing from the stats tables that was done before). In row_update_statistics_if_needed() if this is PS-enabled table, then do nothing. This function may be called very often. Also do nothing if the stats are in 'unknown' state - this may happen when the table has been opened internally from within InnoDB (e.g. SYS_TABLES or a foreign key table, not opened by MySQL) and heavy DML is being done on it. ha_innobase::info() -> ::info_low() indirection is no loner needed and is removed. With this WL we have just one method - ::info() which checks if the executed command is ANALYZE and does its logic internally. Given that stats initialization is now done in ::open() and ::create() after a call to dict_table_open_on_name() and not in that latter function, this means that this function becomes the same as dict_table_open_on_name_low() and dict_table_open_on_name_no_stats() is no longer needed. Thus, remove dict_table_open_on_name() and dict_table_open_on_name_no_stats() and rename dict_table_open_on_name_low() to dict_table_open_on_name(). The option innodb_analyze_is_persistent is no longer needed and is removed. Approved by:	Jimmy (rb:912) "	664057ceebc08b961ead65be6ffc5d826c1a7f50
----------------------------
ndb - don't convert  ONLINE to INPLACE until ndbcluster supports inplace 	5c584f3e0d27adf9998f965101f909c65b64bd9b
----------------------------
BUG#13893310 fixing two post-push issues: 1. Valgrind report ==26329==    by 0xA3AE2E: my_malloc (my_malloc.c:38) ==26329==    by 0xA1A881: init_io_cache (mf_iocache.c:232) ==26329==    by 0xA0D883: Rpl_info_file::do_init_info(unsigned long const*, unsigned int) (rpl_info_file.cc:95) ==26329==    by 0x9FC69D: Rpl_info_handler::init_info(unsigned long const*, unsigned int) (rpl_info_handler.h:45) ==26329==    by 0x9FBE37: Master_info::init_info() (rpl_mi.cc:303) ==26329==    by 0x9F6278: init_info(Master_info*, bool, int) (rpl_slave.cc:459) ==26329==    by 0x9F96F9: init_slave() (rpl_slave.cc:316) 2. A race condition in rpl_parallel_change_master indicated with mysqltest: At line 86: query 'CHANGE MASTER TO RELAY_LOG_FILE='$relay_file', RELAY_LOG_POS=$relay_pos' succeeded - should have failed with errno 1801. 	7edfe1df8dc9e0c7be3dca9010c76ad9efc04a34
----------------------------
BUG#13971348 - FAILURE WHILE CONFIGURING REPLICATION CAUSES THE SERVER TO SHUTDOWN If something went wrong while setting up replication's objects (i.e. slave objects), the server was brought off-line. For some specific errors, one could provide --skip-slave-start to try to avoid shutting down the server. This was a drastic measure as the replication is just one of the services provided by the server. With this patch, we just print out some error messages on the problem and let the server continue its execution. 	0ccee7b9c18d3c0c15c60335c45371cb8b3674e4
----------------------------
ndb - fix comipilation error in ha_ndbcluster_binlog.cc due to recent proper interface to the global threads list in MySQl Server fix 	abfc13429f77abe46d0e6f4d1d2a19cc7e6bffb6
----------------------------
Fix for bug#13901890 SQL NODE CRASHES DURING INSERT SELECT There was a bug in the lifetime handling of NdbQuery objects where the 'root' of the pushed join had 'type == const' As part of integrating the pushed join feature into the ha_ndbcluster handler implementation, the default implementation of handler::index_read_idx_map() was redefined. This method is used as the access function to read the (single) row when a table is const'ified by the optimizer. Basically handler::index_read_idx_map() does (ignoring error handling): index_init(index, 0);  // Open table for access index_read_map();      // Virtual method reading single row index_end();           // Return table to 'closed' state + release As the above 'index_end' would also destruct the resultset from the pushed join, including the child result, we could not do that for a pushed join. Therefore, ha_ndblcluster::index_read_idx_map() was implemented *without* the final index_end() call - Our investigation at that time indicated that this could be omitted as the open tables was cleaned up anyway, either by the next operation on the handler instance, or when the NdbTransaction was terminated. However, this bugs uncovers that there are codepaths where we both: - Terminate NdbTransaction, which destruct the NdbQuery object. - Then call ha_ndbcluster::reset() to clean up the handler, which will result in NdbQuery::close() to be called -> Crash! Working with this problem I realized that: - In order to increase pushability we have already introduced the handler::test_push_flag(HA_PUSH_BLOCK_CONST_TABLE) inside the optimizer which will block the const'ifying during optimize. - It will then only be confusing to still explain these query plan having a type == 'const' as they are now really executed as an eq_ref - Override ::index_read_idx_map() to suite pushed join execution is obsolete if we instead handle these queries as an eq_ref. These changes does *not* affect the pushability of the queries, nor changes number of handler call required to retrieve the data. However, several EXPLAINS will change where 'type == const' will now show 'type==eq_ref' instead which IMHO is more correct. Also fixes incorrect destruction of NdbQueryImpl objects if construction of these fails in NdbQueryImpl::buildQuery(). In order to ensure propper cleanup of these we should use NdbQueryImpl::release() instead of deleting them directly. 	6bb31d68ccdef3080d2d09c1c09e8c17c03753e1
----------------------------
"WL#6236: Allow SHOW MASTER LOGS and SHOW BINARY LOGS with REPLICATION CLIENT Currently SHOW MASTER LOGS and SHOW BINARY LOGS require the SUPER privilege. Monitoring tools (such as MEM) often want to check this output - for instance MEM generates the SUM of the sizes of the logs reported here, and puts that in the Replication overview within the MEM Dashboard. However, because of the SUPER requirement, these tools often have an account that holds open the connection whilst monitoring, and can lock out administrators when the server gets overloaded and reaches max_connections - there is already another SUPER privileged account connected, the ""monitor"". As SHOW MASTER STATUS, and all other replication related statements, return with either REPLICATION CLIENT or SUPER privileges, this worklog is to make SHOW MASTER LOGS and SHOW BINARY LOGS be consistent with this as well, and allow both of these commands with either SUPER or REPLICATION CLIENT. This allows monitoring tools to not require a SUPER privilege any more, so is safer in overloaded situations, as well as being more secure, as lighter privileges can be given to users of such tools or scripts. "	a9a7e6ea248d411921a12f1c1f5f9e23a464602c
----------------------------
Bug#13955083 ALLOW IN-PLACE DDL OPERATIONS ON MISSING OR DISCARDED TABLESPACES Allow in-place ALTER TABLE operations even if the tablespace is missing or it has been discarded. Add a test for ensuring that DISCARD TABLESPACE is being blocked by an in-place ALTER operation. (The DISCARD TABLESPACE will time out the meta-data lock upgrade at the end of the ALTER, but that is a separate matter.) ha_innobase::check_if_supported_inplace_alter(): Check for innodb_force_recovery and innodb_data_file_path=newraw already here and not in the prepare step. ha_innobase::prepare_inplace_alter_table(), inplace_alter_table(): Move the update_thd() and trx_search_latch_release_if_reserved() calls already to the check_if phase. prepare_inplace_alter_table_dict(): If the tablespace is missing, skip the row_log_allocate(). ha_innobase::inplace_alter_table(): Skip the row_merge_build_indexes() if the tablespace is missing. rb:1032 approved by Jimmy Yang 	ef74a4ae0ba6574cb6760b3d9485cbcf2c8b08f0
----------------------------
ndb - make ndb_config --configinfo --xml print the allowed values to set for config variables of enum type 	a965d46b076e5d36b4da21ed68526aeab9a62cdc
----------------------------
WL#5522 - The space id can 0 for temp tables if innodb_file_per_table=0. Remove bogus assertion and comment. 	5007a6390547e138926d13367f209021cd666c4b
----------------------------
Bug#13893363 - MTS IS MISSING THE ABILITY TO STOP A SLAVE AFTER PROCESSING GAPS BUG#13893310 checkpoint_group size wrong at recovery after cold restart This is combined patch for 3 issues. Bug#13893363. The new UNTIL condition is an important feature to have because of --relay-log-recovery=1 and Change-Master can *not* run in presence of gaps. The user would have to execute START SLAVE SQL_THREAD UNTIL SQL_AFTER_MTS_GAPS if he needed to switch from the parallel to the sequential execution mode after slave SQL thread or Worker threads errored out in the parallel mode. Thus UNTIL SQL_AFTER_MTS_GAPS gives the user a facility to find out the exact after gaps position automatically instead of having to figure it out of relay logs and infos himself. Also, a separate issue of incorrect demotion of DEADLOCK/WAIT_FOR_LOCK errors into warning is fixed because at Worker execution slave does not retry.  And a todo to relocate SQL_AFTER_MTS_GAPS and other post-exec/schedule until options checking at the end of read-execute loop (instead of to have them right after read phase which can lead to unnecessary hanging when a condition is actually met). Bug#13893310. The issue with checkpoint_group at MTS recovery is that after the server restart MTS recovery gaps collecting algorithm initialized the recovery bitmap with the default 512 size rather than with a correct one with size of not less than of Worker group_executed of the last slave session. That is corrected. The max possible size is used in the gaps collecting.  opt_mts_checkpoint_group 's update step is made as 8 (bits).  Some refactoring in rpl_info*, rpl_rli_pdb is done, MTS recovery gaps collecting is deployed on a common to START-SLAVE and --skip-start-slave=0 execution path. Few found small bugs fixed along the way, incl. demotion of Worker DEADLOCK/WAIT_FOR_LOCK errors into warning. An associated to the bug valgrind issue is fixed, see the stack below, vai deploying handler->end_info() in the error branch of RLI::init_info(). http://pb2.no.oracle.com/?template=mysql_show_test_failure&test_failure_id=4266844 rpl.rpl_parallel_change_master           w5 [ fail ]  Found warnings/errors in server log file! Test ended at 2012-04-02 05:18:16 line ==15911== 8,192 bytes in 1 blocks are definitely lost in loss record 130 of 179 ==15911==    at 0x4C216FB: malloc (vg_replace_malloc.c:236) ==15911==    by 0xA29FE2: my_malloc (my_malloc.c:38) ==15911==    by 0xA09EFD: init_io_cache (mf_iocache.c:232) ==15911==    by 0x9FD1E3: Rpl_info_file::do_init_info(unsigned long const*, unsigned int) (rpl_info_file.cc:95) ==15911==    by 0x9EC97B: Rpl_info_handler::init_info(unsigned long const*, unsigned int) (rpl_info_handler.h:45) ==15911==    by 0x9F153E: Relay_log_info::init_info() (rpl_rli.cc:1676) ==15911==    by 0x9E688B: init_info(Master_info*, bool, int) (rpl_slave.cc:468) ==15911==    by 0x9E9AB1: init_slave() (rpl_slave.cc:316) ==15911==    by 0x5CFE18: mysqld_main(int, char**) (mysqld.cc:5083) 	d6397485755e76a3f732ee0bf31fcf568e007547
----------------------------
ndb - backport fix for storage/ndb/CMakeLists.txt to properly determine if ndbcluster is build and thus all of storage.ndb should be built - improve comments describing the logic 	e33807e9c5c7dfc7624268c322638fff03b1ccf2
----------------------------
BUG#13917335 - ASSERTION `REPORT_PORT != 0' FAILED IN NETWORK_INIT () Problem - The cause of the failure is mainly due to the assert added in the code as a result of the fix of the BUG-13333431. When we start the server with the --skip-networking option enabled we have the mysqld_port explicitly to 0. Since the value of report_port is set to mysqld_port, the assertion that (report_port!= 0) fails. Fix - the fix of the problem is to assert the not zero value of report_port only in the case the --skip-networking option is not used to start the mysqld server. 	d3782bffbdd2c5cdda3d6760acfaebfe9549aeef
----------------------------
Disable the test innodb_buffer_pool_filename_basic on Windows. It is a bug in mtr that the test is executed without mysqld being restarted even though --force-restart is specified in mysql-test/suite/sys_vars/t/innodb_buffer_pool_filename_basic-master.opt Without the restart we get a rare, sporadic, nondeterministic failures, see the .test file for more details on why the restart is needed. 	ab747398cde7b732fcdff73423094a84785d455e
----------------------------
"Merge: 83673cb aab9623 Bug#12762885: 61713: MYSQL WILL NOT BIND TO ""LOCALHOST"" IF LOCALHOST IS BOTH IPV4/IPV6 ENABLED Merge from 5.5 to 5.6(trunk) Analysis: ---------------------- The problem was that if a hostname resolves to more than one IP-address, the server (5.5) does not start due to an error. In 5.1 the server used to take some IP-address and start. It's a regression and should be fixed. 5.5 supports IPv6, while 5.1 does not. However, that should not prevent the server from start -- if a hostname has both IPv4 and IPv6 addresses, the server should choose some IPv4-address and start. It's been decided to prefer IPv4-address to be backward compatible with 5.1. Another problem was that the 5.6 server did not report proper error message when the specified hostname could not be resolved. So, the code has been changed to report proper error message. Switch case ""OPT_BIND_ADDRESS"" was dead code, so removed it. Testing ================================ TRUNK ============================= invalid hostname (localhos): => Following error message reported. 120308 16:14:20 [Note] Server hostname (bind-address): 'localhos'; port: 4000 120308 16:14:22 [ERROR] Can't create IP socket: No such file or directory 120308 16:14:22 [ERROR] Can't start server: cannot resolve hostname! invalid ip_address: => Following error message reported. 120308 16:17:50 [Note] Server hostname (bind-address): '123.123.123.123'; port: 4000 120308 16:17:50 [Note]   - '123.123.123.123' resolves to '123.123.123.123'; 120308 16:17:50 [Note] Server socket created on IP: '123.123.123.123'. 120308 16:17:50 [ERROR] Can't start server: Bind on TCP/IP port: Cannot assign requested address Only ipv4 host configured: => Following message logged 120308 16:22:42 [Note] Server hostname (bind-address): 'localhost'; port: 4000 120308 16:22:42 [Note]   - 'localhost' resolves to '127.0.0.1'; 120308 16:22:42 [Note] Server socket created on IP: '127.0.0.1'. Only ipv6 host configured: => Following message logged 120308 16:23:57 [Note] Server hostname (bind-address): 'localhost'; port: 4000 120308 16:23:57 [Note]   - 'localhost' resolves to '::1'; 120308 16:23:57 [Note] Server socket created on IP: '::1'. ipv4 and ipv6 host configured: => Following message logged 120308 16:19:00 [Note] Server hostname (bind-address): 'localhost'; port: 4000 120308 16:19:00 [Note]   - 'localhost' resolves to '::1'; 120308 16:19:00 [Note]   - 'localhost' resolves to '127.0.0.1'; 120308 16:19:00 [Note] Server socket created on IP: '127.0.0.1'. => Non localhost address 120308 16:15:19 [Note] Server hostname (bind-address): 'mysql_addr'; port: 4000 120308 16:15:19 [Note]   - 'mysql_addr' resolves to '10.178.58.216'; 120308 16:15:19 [Note]   - 'mysql_addr' resolves to 'fe80::120b:a9ff:fe69:59ec'; 120308 16:15:19 [Note] Server socket created on IP: '10.178.58.216'. More than one entry for ipv4 and ipv6 address: => Following message logged 120308 16:26:30 [Note]   - 'localhost' resolves to '::1'; 120308 16:26:30 [Note]   - 'localhost' resolves to '::1'; 120308 16:26:30 [Note]   - 'localhost' resolves to '127.0.0.1'; 120308 16:26:30 [Note]   - 'localhost' resolves to '127.0.0.1'; 120308 16:26:30 [Note] Server socket created on IP: '127.0.0.1'. "	0829f67a56d9918981cbf4d35cb939ede34212d4
----------------------------
"Bug#12762885: 61713: MYSQL WILL NOT BIND TO ""LOCALHOST"" IF LOCALHOST IS BOTH IPV4/IPV6 ENABLED Analysis: ---------------------- The problem was that if a hostname resolves to more than one IP-address, the server (5.5) does not start due to an error. In 5.1 the server used to take some IP-address and start. It's a regression and should be fixed. 5.5 supports IPv6, while 5.1 does not. However, that should not prevent the server from start -- if a hostname has both IPv4 and IPv6 addresses, the server should choose some IPv4-address and start. It's been decided to prefer IPv4-address to be backward compatible with 5.1. Another problem was that the 5.6 server did not report proper error message when the specified hostname could not be resolved. So, the code has been changed to report proper error message. Testing ================================ 5.5 ============================= invalid hostname (localhos): => Following error message reported. 120308 15:52:09 [ERROR] Can't start server: cannot resolve hostname! 120308 15:52:09 [ERROR] Aborting invalid ip_address: => Following error message reported. 120308 15:56:06 [Note] Server hostname (bind-address): '123.123.123.123'; port: 3306 120308 15:56:06 [Note]   - '123.123.123.123' resolves to '123.123.123.123'; 120308 15:56:06 [Note] Server socket created on IP: '123.123.123.123'. 120308 15:56:06 [ERROR] Can't start server: Bind on TCP/IP port: Cannot assign requested address Only ipv4 host configured: => Following message logged 120308 16:02:50 [Note] Server hostname (bind-address): 'localhost'; port: 3306 120308 16:02:50 [Note]   - 'localhost' resolves to '127.0.0.1'; 120308 16:02:50 [Note] Server socket created on IP: '127.0.0.1' Only ipv6 host configured: => Following message logged 120308 16:04:03 [Note] Server hostname (bind-address): 'localhost'; port: 3306 120308 16:04:03 [Note]   - 'localhost' resolves to '::1'; 120308 16:04:03 [Note] Server socket created on IP: '::1'. ipv4 and ipv6 host configured: => Following message logged 120308 16:05:02 [Note] Server hostname (bind-address): 'localhost'; port: 3306 120308 16:05:02 [Note]   - 'localhost' resolves to '::1'; 120308 16:05:02 [Note]   - 'localhost' resolves to '127.0.0.1'; 120308 16:05:02 [Note] Server socket created on IP: '127.0.0.1'. => Non localhost address 120308 16:08:20 [Note] Server hostname (bind-address): 'mysql_addr'; port: 3306 120308 16:08:20 [Note]   - 'mysql_addr' resolves to '10.178.58.216'; 120308 16:08:20 [Note]   - 'mysql_addr' resolves to 'fe80::120b:a9ff:fe69:59ec'; 120308 16:08:20 [Note] Server socket created on IP: '10.178.58.216'. More than one entry for ipv4 and ipv6 address: => Following message logged 120308 16:06:19 [Note] Server hostname (bind-address): 'localhost'; port: 3306 120308 16:06:19 [Note]   - 'localhost' resolves to '::1'; 120308 16:06:19 [Note]   - 'localhost' resolves to '::1'; 120308 16:06:19 [Note]   - 'localhost' resolves to '127.0.0.1'; 120308 16:06:19 [Note]   - 'localhost' resolves to '127.0.0.1'; 120308 16:06:19 [Note] Server socket created on IP: '127.0.0.1'. "	aab9623a8dce2c19c1cb1af90ff5967e2977a240
----------------------------
BUG#13779291: RACE CONDITION AROUND ROTATE RELAY LOGS & FLUSH LOGS This is part 7 of the patch. Updated rpl_stress_flush_rotate_relay_log.test to only change debug flag when slave is stopped. Updated rpl_stress_flush_rotate_relay_log.result in order to ignore warnings id. Added missing lock/unlock to rpl_slave.wait_for_relay_log_space(). Only rotate log when slave is configured in sql_reload.reload_acl_and_cache() like past behaviour. 	a3c6aa86b86c4bedfe1efa4f854cc01359ece030
----------------------------
WL#5924: Fix suite failures #3 Updated the variables.test to not have max_allowed_packet set to a non-default value during connects as on some boxes running the server using a long command line this may cause the login packet to exceed the threshhold set by max_allowed_packet and cause login failures. 	5ba6bc91f93e288e534a5a649af163a35dc89fbf
----------------------------
WL#6224 Adapt MySQL Cluster to 5.6 - don't configure the rpl_ndb and ndb_rpl suites to skip innodb - don't set myisam as default storage engine 	409be84b19d1f471e3ff63afd1b39d765b3d72df
----------------------------
Bug #13817703 - auto_increment_offset != 1 + innodb_autoinc_lock_mode=1 => bulk inserts fail Fix the calculation of the next autoinc value when offset > 1. Some of the results have changed due to the changes in the allocation calculation. The new calculation will result in slightly bigger gaps for bulk inserts. rb://866 Approved by Jimmy Yang. Backported from mysql-trunk (5.6) 	90436a096c4ec21376752713a89d2b8997b15757
----------------------------
Bug#12995174 - MTS: UNEXPECTED RECOVERY ATTEMPT ENDS WITH ER_MASTER_INFO OR ASSERTION FAILURE Bug#13840948 - CHANGE MASTER MODIFIES RELAY_LOG_PURGE OPTION VALUE. The patch coveres a bunch of issues. 0. The reported problem itself turned out to be unnecessary recalculation of rli->group_master_log_* coordinates. In case of relay-log purging for Change-Master is not done the coordinates may be safely reused. Otherwise, as it had been before this patch, the new values may not correspond to the actual execution state because the executed were set optimistically to the lastest that IO thread had been read. Fixed with avoiding recalculation to reuse existing rli->group_master_log_* coordinates for the mentioned no-purging branches of Change-Master. 1. In presence of MTS recovery gaps CHANGE MASTER now errors out with a new error code. 2. Similar intolerance to MTS gaps is implemented for --relay-log-recovery handling as the option is logically equivalent to RESET SLAVE plus CHANGE MASTER. 3. Bug#13840948: In some of its branches change_master() overrides an existing startup time option value. Fixed with reverting temporarily modified --relay-log-purge's value. 4. @@global.relay_log_recovery was not read-only though it should have been. Fixed to be converted into read-only. 5. fixing signature of few mts functions to pass a mutex is locked indication. 	926cb329723b89440fbd0b7f9cb951b603b4e848
----------------------------
"Bug#11763507 - 56224: FUNCTION NAME IS CASE-SENSITIVE Analysis: ------------------------------- According to the Manual (http://dev.mysql.com/doc/refman/5.1/en/identifier-case-sensitivity.html): ""Column, index, stored routine, and event names are not case sensitive on any platform, nor are column aliases."" In other words, 'lower_case_table_names' does not affect the behaviour of those identifiers. On the other hand, trigger names are case sensitive on some platforms, and case insensitive on others. 'lower_case_table_names' does not affect the behaviour of trigger names either. The bug was that SHOW statements did case sensitive comparison for stored procedure / stored function / event names. Fix: Modified the code so that comparison in case insensitive for routines and events for ""SHOW"" operation. As part of this commit, only fixing the test failures due to the actual code fix. "	19c375c94c26b76d486c7755ada2dc748111f805
----------------------------
"Bug#11763507 - 56224: FUNCTION NAME IS CASE-SENSITIVE Analysis: ------------------------------- According to the Manual (http://dev.mysql.com/doc/refman/5.1/en/identifier-case-sensitivity.html): ""Column, index, stored routine, and event names are not case sensitive on any platform, nor are column aliases."" In other words, 'lower_case_table_names' does not affect the behaviour of those identifiers. On the other hand, trigger names are case sensitive on some platforms, and case insensitive on others. 'lower_case_table_names' does not affect the behaviour of trigger names either. The bug was that SHOW statements did case sensitive comparison for stored procedure / stored function / event names. Fix: Modified the code so that comparison in case insensitive for routines and events for ""SHOW"" operation. "	7ed197c95f07212dac0f81213b9972a050563d75
----------------------------
Revert changes to configure.cmake from some release branch 	cbca73691c6b60d025781188c18e9a2332e8a84c
----------------------------
BUG#13702397 - 64211: 'CREATE TABLE ... LIKE ...' FAILS TO KEEP CASE BACKGROUND: Regular Create Table Statements properly keep the case on a case insensitive file system like Windows or Mac OS X when lower_case_table_names= 2 whereas while creating tables LIKE another (create table <tablename> LIKE <tablename>), the table name case is ignored on a case insensitive file system when lower_case_table_names= 2. This problem is mentioned as part of this bug report. This behaviour was annoying and not consistent with the documentation. FIX: This bug is fixed by populating the alias in local_create_info structure in mysql_create_like_table function when create table <tablename> LIKE <tablename> query is issued equal to alias information that is stored in create_info structure.This assignment was missing due to which this bug was happening. Also a testcase has been written in lowercase_table2.test and the corresponding result file has also been updated. 	166f5123ff0ce5ddbb396f0a711a8d25892973f6
----------------------------
bug#13714648 MYSQL CLUSTER ALTER TABLE REORGANIZE PARTITION UNDEFINED BEHAVIOR Background ALTER ONLINE TABLE REORGANIZE PARTITION (ATRP) is used to create new table partitions (fragments), usually after new empty nodes have been added to a cluster. ATRP determines the number of fragments to create automatically, and if it determines that no new fragments are required, then no new fragments will be created. Tables are sometimes created with the MAX_ROWS option set.  This can be used to indicate to Ndb that extra fragments should be created to store the large number of rows. If MAX_ROWS was specified when a table was created, then ATRP will use it to decide the number of partitions required, which will be the same, so no new fragments will be created.  The table will not be rebalanced, and the new nodes remain empty. One option considered was to scale the configured MAX_ROWs with the relative increase in the number of nodes, but this results in different numbers of partitions depending on when a table is created. Solution The solution implemented here is to support ALTER ONLINE TABLE MAX_ROWS=<bigger_value> (ATMR).  Where the bigger MAX_ROWS value implies that more fragments are required, these will be allocated on the new data nodes, restoring table balance. For tables with MAX_ROWS explicitly defined, ATRP does not work. ndb_add_partition and ndb_addnode are modified to test the new mechanism. 	9916594a018ad046ebe06c0c26e163b9773b3d2c
----------------------------
Merge: 73c1a1c 58d29ed ndbcluster - move the debug only variable which ndbcluster installs into ndb_dbg_ namespace, making it easier to write test cases which does not depend on them 	128a1a7aa680fbfbb765b462cb7d2e97c432779f
----------------------------
"BUG#13857301 NDB_MGMD NOT STARTING WHEN USING --SKIP-CONFIG-CACHE OPTION - Problem occured when ndb_mgmd was started with --initial and --skip-config-cache. The function used to delete any old saved configs returned false when running without configdir. Changed the function to return true for the above case. - Also spotted a problem with --skip-config-cache and fetching the config from another mgmd, it would eventually have tried to save the config in the non existing configdir. - Added testcases for ""--initial --skip-config-cache"" and ""--skip-config-cache + fetch"" "	73c1a1c417ad189d0a0b865963b73c532dc6dcf4
----------------------------
"Bug#13595996 CREATE A CONSISTENT DEVELOPMENT CMAKE OPTION SET AND MAKE IT A DEFAULT The goal of this fix is that developers and pushbuild should do (roughly) the same when compiling the source code. - same set of compiler switches - same set of features built - same set of tests enabled/executed To this end, mysql_release.cmake has been split in three: compiler_options.cmake standardized compiler flags -O has been removed from Debug build (developers don't want anything optimized away when debugging) feature_set.cmake standardized feature set built is ""community"" mysql_release.cmake things needed by pushbuild, in particular DEBUG_EXTNAME Most of the scripts in BUILD have been removed. Exceptions are compile-dist         still used by PB compile-pentium-gcov still used by PB Some compile-pentium-xxx have been re-written, and are left as examples of how to configure cmake for gprof/valgrind debug/optimized. "	23fee0f53a9907ece079bf0cffc6d4f52489da59
----------------------------
ndbcluster - move the debug only variable which ndbcluster installs into ndb_dbg_ namespace, making it easier to write test cases which does not depend on them 	58d29ed0148e91b6d2e171933aadb244f303ed52
----------------------------
"Do not compile ndbcluster for ""make dist"" "	e888b65d6abcc44b70cc4da497eb8ea8f9a4c98f
----------------------------
"Bug#12400313 - RELAY_LOG_SPACE_LIMIT IS NOT WORKING IN MANY CASES Post-push fixes to correct rli->sql_force_rotate_relay pattern of the main patch in MTS case. Similarly to STS case rotation of the over-sized relay-log is allowed only if there is no transaction ""transiting"" to the next log. "	1dd20a8bf358bfcb2d8e6c28f5a8818044d13374
----------------------------
set correct name on versioned configured mysql.spec file 	07245d1dc766f7679e26710c86b16de39b0d4f12
----------------------------
Bug#54854 Can't find good position for replication break between DDL statements This is part 2 of 2 patches to mysql-trunk (see revno #3745 for part 1): Simplify configuration of DDL-idempotency per mysqld option. To replay (partly applied) sequences of DDL statements, slave shall ignore DDL errors about missing/existing schema objects. The mysqld skip-errors option is extended to accept an alias slave-skip-errors=ddl_exist_errors,... as a shortcut for 10 individual ddl error codes slave-skip-errors=1007,1008,1050,1051,1054,1060,1061,1068,1091,1146,... A brief cli test verifies the correct resolution of the error alias. 	87f155077ce07e9d33d30a9c7f3eec27b5ddd786
----------------------------
Post-push fix for BUG#13538891. rpl_alter_repository restarts mysql with different options and mtr uses the latest configuration to start servers on new tests. This behavior has made rpl_checksum_cache to run after rpl_alter_repository with replication system tables although its use has not been requested. Apart from running a replication test with unexpected configuration, the scenario should not have led to any problem. However, a bug in rpl_alter_repository was corrupting the replication system tables and leading to the failure of the rpl_checksum_cache. Specifically, rpl_alter_repository was dropping columns from some replication tables to inject faults and adding them back to fix the failures. Unfortunately, the procedure was changing the order of the columns making replication to fail. The problem was not noticeable before BUG#13538891 due to MyIsam's permissive behavior which does automatic conversions. To fix the problems, we have changed rpl_alter_repository as follows: . At the end of the test, the server is restarted with an empty configuration. . Only the last column of the table is dropped. 	911f24e7428bf4f6b9605fd8fb067fca66077167
----------------------------
"BUG#13504281 - FOLLOW UP 'LIVE UPGRADE FAILS BETWEEN 5.5 -> 5.6.4 (BUG#13427444) Replication objects are always created so repositories are checked in the initialization routine even when --server-id is equal to ""0"" (i.e. default value), although a valid --server-id (i.e. not equal to the default value) is a requirement to use either a master or slave. This may cause confusion in live upgrades when an user tries to migrate from 5.5 to 5.6 because the operation stops with an error and asking users to provide --skip-slave-start in order to avoid the problem. To avoid this scenario, we only create the replication objects when a valid --server-id is provided. "	a497e03fbc4b2e4cd0e4498d70a2d6a4a54aabbd
----------------------------
Add memc251_w_batch_6.test to test daemon_memcached_w_batch_size to be set to the maximum value (1048576). 	9819155a1001152d931e36a51b06da0462a70db4
----------------------------
Port merge cleanup for WL#5259 performance schema host cache. Renamed columns / system variables for consistency with existing names. - COUNT_MAX_USER_CONNECTION_ERRORS --> COUNT_MAX_USER_CONNECTIONS_ERRORS - COUNT_MAX_USER_CONNECTION_PER_HOUR_ERRORS --> COUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORS - Connection_errors_max_connection --> Connection_errors_max_connections 	75a3806a51e3d4cde598504f68b1e567561bf4f4
----------------------------
Port merge cleanup for WL#5259 performance schema host cache. Renamed columns / system variables for consistency with existing names. - COUNT_MAX_USER_CONNECTION_ERRORS --> COUNT_MAX_USER_CONNECTIONS_ERRORS - COUNT_MAX_USER_CONNECTION_PER_HOUR_ERRORS --> COUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORS - Connection_errors_max_connection --> Connection_errors_max_connections 	950e234db729a1fdcc0732b2ae0abe5649828224
----------------------------
Bug#13428909 CONFLICT DETECTION OPERATION EXECUTION ERROR HANDLING INCOMPLETE - Error handling in some conflict detection/resolution scenarios was incomplete - This patch improves error handling and reporting - Also, reporting of misconfiguration is improved. - Infrastructure for manual testing is added, automated testing not setup yet. 	bb0b0156c61f42bfb03d17518307ff57d14cfdbd
----------------------------
ndb - disable all test which depends on ha_ndbcluster adaption to WL#946 	d35c29486848e06ee965b9536aba995d89636c12
----------------------------
ndb - disable all ndb_memcahce test since the table for ndb_memcahe can't be created unti ha_ndbcluster has been adapted to WL#946 	6409d99a0c722c2a7fa77a18b87a5fa9957ece78
----------------------------
BUG#12400313 RELAY_LOG_SPACE_LIMIT IS NOT WORKING IN MANY CASES BUG#64503: mysql frequently ignores --relay-log-space-limit When the SQL thread goes to sleep, waiting for more events, it sets the flag ignore_log_space_limit to true. This gives the IO thread a chance to queue some more events and ultimately the SQL thread will be able to purge the log once it is rotated. By then the SQL thread resets the ignore_log_space_limit to false. However, between the time the SQL thread has set the ignore flag and the time it resets it, the IO thread will be queuing events in the relay log, possibly going way over the limit. This patch makes the IO and SQL thread to synchronize when they reach the space limit and only ask for one event at a time. Thus the SQL thread sets ignore_log_space_limit flag and the IO thread resets it to false everytime it processes one more event. In addition, everytime the SQL thread processes the next event, and the limit has been reached, it checks if the IO thread should rotate. If it should, it instructs the IO thread to rotate, giving the SQL thread a chance to purge the logs (freeing space). Finally, this patch removes the resetting of the ignore_log_space_limit flag from purge_first_log, because this is now reset by the IO thread every time it processes the next event when the limit has been reached. If the SQL thread is in a transaction, it cannot purge so, there is no point in asking the IO thread to rotate. The only thing it can do is to ask for more events until the transaction is over (then it can ask the IO to rotate and purge the log right away). Otherwise, there would be a deadlock (SQL would not be able to purge and IO thread would not be able to queue events so that the SQL would finish the transaction). 	5360c4e5bcb29d90c36c775a5f874fefaa4a671b
----------------------------
"BUG#13820370 - RPL_GTID_MODE FAILS IN PB The test case rpl_gtid_mode.test is doing the following steps to check whether the server fails while starting up as supposed to be or not: . starting slave with gtid-mode=ON; . issuing ""CHANGE MASTER TO AUTO_POSITION=1""; . shutting down slave; . trying to restart slave with gtid-mode=OFF. However, when the slave fails in the startup routine, it tries to print out an error message with ER(X) which uses ""current_thread"". This variable is not defined though as there is no thread causing a segmentation fault. To fix the problem, we replace ER(X) by my_error(). "	a9b580319c326e84798f7706d4dd2f8dba7be3e4
----------------------------
Bug#54854 Can't find good position for replication break between DDL statements Part 1 of patches to mysql-trunk. Overall fix has two parts : 1) Improve Ndb replication channel cutover with precise next-position-after-epoch-trans in the mysql.ndb_binlog_index table. 2) Simplify configuration of DDL-idempotency with a new MySQL Server option Part 1) of the fix includes patches affecting the generic MySQL Server (this commit) and patches affecting the Ndb storage engine. Part 2) of the fix includes patches affecting the generic MySQL Server. This commit adds a THD member which records the next Binlog position (filename and offset) after the last Binlog event recorded by the thread. This information is exposed via an extension to the Binlog injector Api. Further patches to be pushed to the MySQL Cluster branches make use of this functionality to fix bug#54854. In mysql-trunk builds, this functionality has no externally visible effect, and therefore no specific testcase. Testcases are added in branches merging this branch and MySQL Cluster. 	6b7ea50c7d964b0f477c6086e6a6b9668cd2a26e
----------------------------
Bug #13817703 - auto_increment_offset != 1 + innodb_autoinc_lock_mode=1 => bulk inserts fail Follow up to fix: If offset > max_value then we return max_value. 	38d034d9e7c3e311b008cad6846eb8361414d54d
----------------------------
Bug #13817703 - auto_increment_offset != 1 + innodb_autoinc_lock_mode=1 => bulk inserts fail Fix the calculation of the next autoinc value when offset > 1. Some of the results have changed due to the changes in the allocation calculation. The new calculation will result in slightly bigger gaps for bulk inserts. rb://866 Approved by Jimmy Yang. 	7a99aace1e855119caee2f1a558895a42eb6d806
----------------------------
Fix memory leaks in Config_v1. 	8cce35ce8b0ceab3b04cf745d7e18ea6bbd6ce16
----------------------------
"ndbcluster - remove setting of timestamp columns since that is now done by the server - include the new global_threads.h file to be able to add ndb_binlog thread to ""threads"" "	612fc1c4491d5e82f1b6f196b1e7869efa209024
----------------------------
Use NdbRecord-formatted data buffer to store values for domain model Both the original Object[ ] implementation and the NdbRecord implementation are available, statically configured via a -D option or system environment Improve error reporting for tests NdbRecord domain model is implemented for insert, delete, update, and write Optimized use of NdbRecord domain model for find, query, load is not yet implemented 	6a2937d54a80c86395c1f4e41e33ba68ca99c7a8
----------------------------
BUG#13681205: REPLICATION FAILS DURING SLAVE WORKERS INITIALIZATION, CRASHES SLAVE The maximum set for the option slave_checkpoint_group was off by 7. Since this field, when stored in a table, is stored as a blob, then its value must be 1 < slave_checkpoint_group < 2^16*8. However it was wrongly set to 2^16*8-1 (524287) instead of 2^16*8-8 (524280). Furthermore, when the slave failed to initialize the info repository, it would crash sometimes because the worker jobs queue might point to some random memory. We fix this by correcting the MTS_MAX_BITS_IN_GROUP and by freeing the jobs queue only if it is flagged as initialized. 	f920205a38c6bb90b2cc1248b73fb34a98e80a57
----------------------------
"Bug #13428853	DONT CHECK/CREATE CONFIG-DIR WHEN SKIP-CONFIG-CACHE IS USED - Skip check and create of config dir if no config cache is being used - Add test case "	516de36390459dc1c262687e40d16b20f39acafd
----------------------------
"Consolidate locking API for ""innodb_api_disable_rowlock"" configure parameter. "	a2e9795260a398a2c997cd32669fd666b8150a50
----------------------------
"WL#5968: Implement START TRANSACTION READ (WRITE|ONLY); This worklog implements support for explicitly or implicitly starting read-only transactions. During a read-only transaction all DDL statements as well as inserts, updates and deletions of data in non-temporary tables will return an error message: ""Cannot execute statement in a READ ONLY transaction."" The reason for implementing support for read-only transactions is that it allows engine optimizations that will result in performance improvements for read-only workloads. Read-only transactions can be explicitly started using the new START TRANSACTION READ ONLY syntax. Similarly, read-write transactions can be explicitly started using START TRANSACTION READ WRITE. Read-only transactions can be implicitly started by first changing the default access mode to read-only using: *) SET [GLOBAL|SESSION] TRANSACTION READ ONLY (READ WRITE is also supported) *) Global/session dynamic server variable ""tx_read_only"". This has the same effect as SET GLOBAL/SESSION TRANSACTION. *) Server startup option --transaction-read-only and then starting a transaction without explicit access mode. Note that read-write is the default access mode (matching existing behavior before this worklog). Note that SET TRANSACTION READ ONLY (or READ WRITE) sets the access mode for the next (and only next) transaction, while SET SESSION sets the session server variable which will affect all following transactions. The worklog also updates the client/server protocol by adding a new SERVER_STATUS_IN_TRANS_READONLY server status flag. This allows clients to examine the access mode of any current transaction. Incompatible change: SET TRANSACTION is now a separate statement from SET. This means that it is now longer possible to execute e.g. SET @a= 1, TRANSACTION ISOLATION LEVEL SERIALIZABLE. "	c63e26d66d94d41b8dda2787646b9defbe012bf1
----------------------------
WL#5824: Added a test for daemon_memcached_option. 	06de50e8f7f59667f718691c4b8461ddccc96a64
----------------------------
Increase the default mysql-test-run --debug-sync-timeout from 5 to 10 minutes, so that innodb.innodb-index-online will not fail on slow hosts, such as Solaris SPARC. 	777408153aba409e673d68a3cbe3d3dee5458a52
----------------------------
"Merge: 381cd04 1a6b866 WL#5259 PERFORMANCE_SCHEMA HOST_CACHE Merge of performance_schema.host_cache (mysql-trunk-wl5259) to mysql-trunk. This feature is also related to: MySQL Bug#22821  Adding ""SHOW HOST_CACHE"" patch from Jeremy Cole Bug#11746048 - 22821: ADDING ""SHOW HOST_CACHE"" PATCH FROM JEREMY COLE MySQL Bug#24906  No command to monitor blocked hosts Bug#11746269 - 24906: NO COMMAND TO MONITOR BLOCKED HOSTS MySQL Bug#45817  Please add SHOW command for inc_host_errors(max_connect_errors) Bug#11754244 - 45817: PLEASE ADD SHOW COMMAND FOR INC_HOST_ERRORS(MAX_CONNECT_ERRORS) MySQL Bug#59404  More info from host cache Bug#11766316 - 59404: MORE INFO FROM HOST CACHE "	646f74dddc642ab1afa8219dfcab309555f9226c
----------------------------
Merge: 25e6ee1 be866ad BUG#13333431 - INCORRECT DEFAULT PORT IN 'SHOW SLAVE HOSTS' OUTPUT Problem - The default port number shown in SHOW SLAVE HOSTS is always 3306 though the slave is actually listening on a different port number. This is a problem as the user can not be sure whether this port value can be trusted and so client trying to read replication topology can get confused. Fix - 3306 ceases to be the default value of report-port. Moreover report-port does not have a static default any longer. Instead we initialize report-port to 0 as the new default value and change it based on two checks : 1) If report_port is not set, the slave reports the port number its listening on. (i.e. if report-port is not set we get the actual value of the slave's port number). 2) If report-port is set, we show the value report-port is set to, as the slave's port number. 	6dcba774ed8119243a0991997bb54e48bb7ce441
----------------------------
Merge: 91bd28c 83c8b19 BUG#13333431 - INCORRECT DEFAULT PORT IN 'SHOW SLAVE HOSTS' OUTPUT Problem - The default port number shown in SHOW SLAVE HOSTS is always 3306 though the slave is actually listening on a different port number. This is a problem as the user can not be sure whether this port value can be trusted and so client trying to read replication topology can get confused. Fix - 3306 ceases to be the default value of report-port. Moreover report-port does not have a static default any longer. Instead we initialize report-port to 0 as the new default value and change it based on two checks : 1) If report_port is not set, the slave reports the port number its listening on. (i.e. if report-port is not set we get the actual value of the slave's port number). 2) If report-port is set, we show the value report-port is set to, as the slave's port number. 	be866add0622db4258a0659c1e01ea7ae2fb5445
----------------------------
WL#3584 Fix for rpl_gtid_mode.test wich fails in innodb_page_size=4K and in innodb_page_size=8K collections. The test stops and starts the server manually, but it does not set the innodb_page_size correctly. Thus when restarting the server without specifying the page size that was used before stopping the server, makes the test case fail when the page size was different from the default value. We fix this by including in the options passed to the mysqld, at restart time, the original value of innodb_page_size. 	cbda446e30b72b4972a6df8fd314056d59c85d79
----------------------------
BUG#13738296 - INSUFFICIENT SIZE OF MAX_ALLOWED_PACKET ON MASTER CAUSING SLAVE TO FAILED ON WIN Transactions' changes are gathered in caches which upon commit are written to the binary log. This cache however does not support seek operations and an attempt to issue a seek operation against it may corrupt the binary log. This happens when the content of the cache does not fit in-memory and a swap are is used. In this case, when a seek is issued the content of the swap are is not read back to memory so that any attempt to write the in-memory part back to the swap are will write garbage into it. In the WL#3584, we used a seek to reposition the cursor on the file and rewrite the GTID thus leading to a corrupted binary log. To fix the problem, we flush the in-memory part of the cache to the swap area, call reinit_io_cache to reposition the cursor and read the correct content back to memory, update the gtid and flush the memory back to disk. This solution though has a performance drawback as a flush to the swap area is required even when there is enough memory to accommodate all transaction's changes. 	00cd821d5d42630087a7b928f1f011d18c962fb5
----------------------------
"Fix for bug#13567414 -- memcached segfaults if ""ndbmemcache"" config database does not exist. "	75ee1e9ae853e940c66e979092bac30e9e84e44a
----------------------------
Add WITH_INNODB_MEMCACHED compilation configure option 	86c2e189c6b5c5d4476e3a157669b0507117ba20
----------------------------
Followup to the merge from mysql-5.5 (vasil.dimov@oracle.com-20120220113532-7v6j14nj1p3o57u3) The help text for --ignore-builtin-innodb is different in mysql-trunk. 	fa5b18e7c41edc3ddd37eadc09123cafbad4a317
----------------------------
Adjust .result files of mysqld--help-notwin and mysqld--help-win mtr tests. This is a followup to vasil.dimov@oracle.com-20120217130947-03319op732dsf4m2 which added a deprecation notice to ignore-builtin-innodb 	923bf1462deeafe51cc076b1eeee11e58af38f2e
----------------------------
"Add support for MDL locking support. User can enable MDL locking by turning on ""innodb_api_enable_mdl"". "	fe353c69fb82949afb7c125862511adfc84eabfd
----------------------------
Merge: 8927639 a45b4c6 Merge mysql-5.5 -> mysql-trunk In addition to emitting a warning when ignore-builtin-innodb is used, in 5.6 we ignore that option and start with InnoDB even when it is specified. 	63f0e7d92fe5271c8ada6a2faf4dab719ff5e0c6
----------------------------
"Print a deprecation warning when ignore-builtin-innodb is used This is part of Bug#13586262 INNODB - HIBISCUS: ISSUE DEPRECATION WARNINGS FOR VARIABLES Reviewed by:	Mark Alff "	a45b4c61558b915bcf3ef4f368cd73b0069b5c37
----------------------------
Bug#13721257 RACE CONDITION IN UPDATES OR INSERTS OF WIDE RECORDS This bug was originally filed and fixed as Bug#12612184. The original fix was buggy, and it was patched by Bug#12704861. Also that patch was buggy (potentially breaking crash recovery), and both fixes were reverted. This fix was not ported to the built-in InnoDB of MySQL 5.1, because the function signatures of many core functions are different from InnoDB Plugin and later versions. The block allocation routines and their callers would have to changed so that they handle block descriptors instead of page frames. When a record is updated so that its size grows, non-updated columns can be selected for external (off-page) storage. The bug is that the initially inserted updated record contains an all-zero BLOB pointer to the field that was not updated. Only after the BLOB pages have been allocated and written, the valid pointer can be written to the record. Between the release of the page latch in mtr_commit(mtr) after btr_cur_pessimistic_update() and the re-latching of the page in btr_pcur_restore_position(), other threads can see the invalid BLOB pointer consisting of 20 zero bytes. Moreover, if the system crashes at this point, the situation could persist after crash recovery, and the contents of the non-updated column would be permanently lost. The problem is amplified by the ROW_FORMAT=DYNAMIC and ROW_FORMAT=COMPRESSED that were introduced in innodb_file_format=barracuda in InnoDB Plugin, but the bug does exist in all InnoDB versions. The fix is as follows. After a pessimistic B-tree operation that needs to write out off-page columns, allocate the pages for these columns in the mini-transaction that performed the B-tree operation (btr_mtr), but write the pages in a separate mini-transaction (blob_mtr). Do mtr_commit(blob_mtr) before mtr_commit(btr_mtr). A quirk: Do not reuse pages that were previously freed in btr_mtr. Only write the off-page columns to 'fresh' pages. In this way, crash recovery will see redo log entries for blob_mtr before any redo log entry for btr_mtr. It will apply the BLOB page writes to pages that were marked free at that point. If crash recovery fails to see all of the btr_mtr redo log, there will be some unreachable BLOB data in free pages, but the B-tree will be in a consistent state. btr_page_alloc_low(): Renamed from btr_page_alloc(). Add the parameter init_mtr. Return an allocated block, or NULL. If init_mtr!=mtr but the page was already X-latched in mtr, do not initialize the page. btr_page_alloc(): Wrapper for btr_page_alloc_for_ibuf() and btr_page_alloc_low(). btr_page_free(): Add a debug assertion that the page was a B-tree page. btr_lift_page_up(): Return the father block. btr_compress(), btr_cur_compress_if_useful(): Add the parameter ibool adjust, for adjusting the cursor position. btr_cur_pessimistic_update(): Preserve the cursor position when big_rec will be written and the new flag BTR_KEEP_POS_FLAG is defined. Remove a duplicate rec_get_offsets() call. Keep the X-latch on index->lock when big_rec is needed. btr_store_big_rec_extern_fields(): Replace update_inplace with an operation code, and local_mtr with btr_mtr. When not doing a fresh insert and btr_mtr has freed pages, put aside any pages that were previously X-latched in btr_mtr, and free the pages after writing out all data. The data must be written to 'fresh' pages, because btr_mtr will be committed and written to the redo log after the BLOB writes have been written to the redo log. btr_blob_op_is_update(): Check if an operation passed to btr_store_big_rec_extern_fields() is an update or insert-by-update. fseg_alloc_free_page_low(), fsp_alloc_free_page(), fseg_alloc_free_extent(), fseg_alloc_free_page_general(): Add the parameter init_mtr. Return an allocated block, or NULL. If init_mtr!=mtr but the page was already X-latched in mtr, do not initialize the page. xdes_get_descriptor_with_space_hdr(): Assert that the file space header is being X-latched. fsp_alloc_from_free_frag(): Refactored from fsp_alloc_free_page(). fsp_page_create(): New function, for allocating, X-latching and potentially initializing a page. If init_mtr!=mtr but the page was already X-latched in mtr, do not initialize the page. fsp_free_page(): Add ut_ad(0) to the error outcomes. fsp_free_page(), fseg_free_page_low(): Increment mtr->n_freed_pages. fsp_alloc_seg_inode_page(), fseg_create_general(): Assert that the page was not previously X-latched in the mini-transaction. A file segment or inode page should never be allocated in the middle of an mini-transaction that frees pages, such as btr_cur_pessimistic_delete(). fseg_alloc_free_page_low(): If the hinted page was allocated, skip the check if the tablespace should be extended. Return NULL instead of FIL_NULL on failure. Remove the flag frag_page_allocated. Instead, return directly, because the page would already have been initialized. fseg_find_free_frag_page_slot() would return ULINT_UNDEFINED on error, not FIL_NULL. Correct a bogus assertion. fseg_alloc_free_page(): Redefine as a wrapper macro around fseg_alloc_free_page_general(). buf_block_buf_fix_inc(): Move the definition from the buf0buf.ic to buf0buf.h, so that it can be called from other modules. mtr_t: Add n_freed_pages (number of pages that have been freed). page_rec_get_nth_const(), page_rec_get_nth(): The inverse function of page_rec_get_n_recs_before(), get the nth record of the record list. This is faster than iterating the linked list. Refactored from page_get_middle_rec(). trx_undo_rec_copy(): Add a debug assertion for the length. trx_undo_add_page(): Return a block descriptor or NULL instead of a page number or FIL_NULL. trx_undo_report_row_operation(): Add debug assertions. trx_sys_create_doublewrite_buf(): Assert that each page was not previously X-latched. page_cur_insert_rec_zip_reorg(): Make use of page_rec_get_nth(). row_ins_clust_index_entry_by_modify(): Pass BTR_KEEP_POS_FLAG, so that the repositioning of the cursor can be avoided. row_ins_index_entry_low(): Add DEBUG_SYNC points before and after writing off-page columns. If inserting by updating a delete-marked record, do not reposition the cursor or commit the mini-transaction before writing the off-page columns. row_build(): Tighten a debug assertion about null BLOB pointers. row_upd_clust_rec(): Add DEBUG_SYNC points before and after writing off-page columns. Do not reposition the cursor or commit the mini-transaction before writing the off-page columns. rb:939 approved by Jimmy Yang 	ae309bd33675543bbe9b0d5e0f19040a74a7157e
----------------------------
BUG#11766817: CRASH ON MYSQLD STARTUP WHEN USING LOG-BIN (STRMAKE ISSUE?) BUG#12929941: SEGFAULT IN STRMAKE/CONVERT_DIRNAME WHEN USING --RELAY-LOG=SLAVE-RELAY-BIN Problem Description: The global variable 'char *mysql_real_data_home_ptr' is declared and initialized to the address of the global buffer char mysql_real_data_home[] in mysqld.cc. Then, the constructor for Sys_datadir overwrites mysql_real_data_home_ptr with NULL. In the case when value datadir is not given in both command-line as well as in cnf file and the default path (<basedir>/data) needs to be used, the mysql_real_data_home_ptr is not made to point to mysql_real_data_home and still has NULL value. After WL#5465, we use mysql_real_data_home_ptr when it still holds NULL as no cli or cnf file arguments were given. In particular, rpl_make_log_name passes mysql_real_data_home_ptr to fn_format. This caused a coredump because fn_format did not expect NULL. The following combinations caused the core dump 1.unspecified but existing empty default data dir and --log-bin 2.unspecified but existing empty default data dir and --relay-log=<some name for relay log> Solution: We solve this problem by making mysql_real_data_home_ptr to point to the mysql_real_data_home if it is null before passing it to fn_format function because by this time we know that mysql_real_data_home is correctly initialized and holds the final value of datadir path. We have also added asserts in fn_format() to check if the dir is null. 	72bf0c8db4dada0e74a3aa2fadfed7713db2caec
----------------------------
Merge: 49a9ec4 663f525 Merge from mysql-trunk to mysql-trunk-wl5534-stage Text conflict in mysql-test/r/lock.result Text conflict in mysql-test/suite/innodb/r/innodb_monitor.result Text conflict in mysql-test/suite/sys_vars/r/innodb_monitor_disable_basic.result Text conflict in mysql-test/suite/sys_vars/r/innodb_monitor_enable_basic.result Text conflict in mysql-test/suite/sys_vars/r/innodb_monitor_reset_all_basic.result Text conflict in mysql-test/suite/sys_vars/r/innodb_monitor_reset_basic.result 	f3255a84712669293514d2b220aa9095070589fc
----------------------------
"Bug#12407434	60776: INNODB MAX PURGE LAG SETTING IS WRONGLY DESIGNED Add new configuration variable: --innodb-max-purge-lag-delay := 0...100000000 in micro-seconds 1. The check for oldest view would cause the DML delay from not being set, if there was a purge lag. Removing the check will now force all transactions to be delayed if there is a purge lag. 2. The maxmum possible delay value of ~0UL makes it open ended, the delay can keep increasing to a point where it brings everything to a halt. Introduce a configuration variable that can cap the max delay. The maximum value for now is 10seconds default is 0 which should cause a context switch. Approved by Jimmy Yang over IM. "	09b13edc3a7123ad4e2d7c9025c47a21e58986f5
----------------------------
Bug#13615873 - REMOVE CODE THAT DOES A PURGE VIA THE MASTER THREAD InnoDB now has background threads to do purge. They were introduced because the master thread was doing too many things already and purge was being delayed due to insert buffer merge, flushing etc. It is also cumbersome to control purge behaviour if purge is done via the master thread. We need to stop and resume purge for WL#5522. The default setting of innodb_purge_threads will change from 0 to 1. rb://905 Approved by Inaam Rana. 	42f36919584e82c621dbec1e69fd05ab023c54c6
----------------------------
Bug#13633383 63183: SMALL SORT_BUFFER_SIZE CRASH IN MERGE_BUFFERS This patch is a backport of some of the cleanups/refactorings that were done as part of WL#1393 Optimizing filesort with small limit. 	8e5d9991d19d26b6be9a7d9ef13516e14a69e8c4
----------------------------
"Patch for bug#11764747 (formerly known as 57612): SET GLOBAL READ_ONLY=1 cannot progress when a table is locked with LOCK TABLES. The reason for the bug was that mysql server makes a flush of all open tables during handling of statement 'SET GLOBAL READ_ONLY=1'. Therefore if some of these tables were locked by ""LOCK TABLE ... READ"" from a different connection, then execution of statement 'SET GLOBAL READ_ONLY=1' would be waiting for the lock for such table even if the table was locked in a compatible read mode. Flushing of all open tables before setting of read_only system variable is inherited from 5.1 implementation since this was the only possible approach to ensure that there isn't any pending write operations on open tables. Start from version 5.5 and above such behaviour is guaranteed by the fact that we acquire global_read_lock before setting read_only flag. Since acquiring of global_read_lock is successful only when there isn't any active write operation then we can remove flushing of open tables from processing of SET GLOBAL READ_ONLY=1. This modification changes the server behavior so that read locks held by other connections (LOCK TABLE ... READ) no longer will block attempts to enable read_only. "	9a9dc2f342df2f29ae6a3c297ea3b061fc40f3fd
----------------------------
"Fix for Bug #13688248 	CRASH IN DIAGNOSTICS_AREA::SET_OK_STATUS WHEN USING DEBUG_SYNC. And, to test the above, I had to fix Bug #13688015 	THE OPTION --LOOSE-DEBUG-SYNC-TIMEOUT IS PLACED WRONG "	bbc19d45fdfb126f480a553c7ae0b8e28da26936
----------------------------
Bug 13689818 - ASSERTION OWNED_GTIDS.GET_OWNER(GTID) != THD->THREAD_ID SQL applier thread did not handle properly successive GTID_NEXT events which led to asserts in running rpl_ignore_table, rpl_alter_repository with ./mtr --mysqld=--gtid-mode=ON --mysqld=--log-bin --mysqld=--log-slave-updates  \ --mysqld=--disable-gtid-unsafe-statements  \ --mysqld=--debug=+d,allow_gtid_unsafe_non_transactional_updates 	efc3e1e9cab7955db4750a6cb4866a018887dec0
----------------------------
"Fix Bug#11754376 45976: INNODB LOST FILES FOR TEMPORARY TABLES ON GRACEFUL SHUTDOWN During startup mysql picks up .frm files from the tmpdir directory and tries to drop those tables in the storage engine. The problem is that when tmpdir ends in / then ha_innobase::delete_table() is passed a string like ""/var/tmp//#sql123"", then it wrongly normalizes it to ""/#sql123"" and calls row_drop_table_for_mysql() which of course fails to delete the table entry from the InnoDB dictionary cache. ha_innobase::delete_table() returns an error but nevertheless mysql wipes away the .frm file and the entry in the InnoDB dictionary cache remains orphaned with no easy way to remove it. The ""no easy"" way to remove it is to create a similar temporary table again, copy its .frm file to tmpdir under ""#sql123.frm"" and restart mysqld with tmpdir=/var/tmp (no trailing slash) - this way mysql will pick the .frm file after restart and will try to issue drop table for ""/var/tmp/#sql123"" (notice do double slash), ha_innobase::delete_table() will normalize it to ""tmp/#sql123"" and row_drop_table_for_mysql() will successfully remove the table entry from the dictionary cache. The solution is to fix normalize_table_name_low() to normalize things like ""/var/tmp//table"" correctly to ""tmp/table"". This patch also adds a test function which invokes normalize_table_name_low() with various inputs to make sure it works correctly and a mtr test that calls this test function. Reviewed by:	Marko (http://bur03.no.oracle.com/rb/r/929/) "	17afdb9051aef9e819fd72a6e4f3daa89d96d384
----------------------------
Merge: 2ff79c7 2da7111 Merge from mysql-trunk to mysql-trunk-wl5534-stage Text conflict in mysql-test/suite/innodb/r/innodb_monitor.result Text conflict in mysql-test/suite/sys_vars/r/innodb_monitor_disable_basic.result Text conflict in mysql-test/suite/sys_vars/r/innodb_monitor_enable_basic.result Text conflict in mysql-test/suite/sys_vars/r/innodb_monitor_reset_all_basic.result Text conflict in mysql-test/suite/sys_vars/r/innodb_monitor_reset_basic.result Text conflict in sql/sql_table.cc Text conflict in storage/innobase/row/row0merge.cc 	f6daa1f33c5a0614ddddb892d653120bfb284a7d
----------------------------
Increase --debug-sync-timeout if --valgrind. 	57999a9bd37ac60e346626bce6dbede6bed5dc12
----------------------------
BUG#11754145 - 45702: IMPOSSIBE TO SPECIFY MYISAM_SORT_BUFFER > 4GB ON 64 BIT MACHINES PROBLEM: When sorting index during repair of myisam tables, due to improper casting of buffer size variables value of myisam_ sort_buffer_size is not set greater than 4GB. SOLUTION: Proper casting of buffer size variable. myisam_buffer_size changed to unsigned long long to handle size > 4GB on linux as well as windows. 	c2fb2fb0744c40ef5e325713356346ffe238575b
----------------------------
WL#5767 Performance Schema, Statements Digest Details: - Implemented FIRST_SEEN/LAST_SEEN, Column. Getting Wrong dates, need to see. - Changed Digest COLUMN size from varchar(64) to varchar(32). - tried to fix statements_digest_long_query by specifying big value of thread_stack. 	d406f167a27d38c23851c758b7a10d9f4ef00b09
----------------------------
WL#3584 bugfixes - Add assertions - Make disable_gtid_unsafe_statements ineffective when sql_log_bin=0 - Test one more error condition related to GTID_NEXT. 	38842a3b3e47d21b23763dc1f42e320e8f0e9ae2
----------------------------
ndb - revert change to ndb_index_stat_enable, as it had other races... 	6ce85ad8c75c0e6a6fb485ccbc997cc10e9b8e1b
----------------------------
"InnoDB: WL#5526 online ADD INDEX, WL#5548 online DROP INDEX === First part: Replace the old ALTER TABLE API (WL#5534). Replace add_index(), prepare_drop_index() and final_drop_index() with the generic DDL methods implemented in WL#5534. This allows us to support things like ADD INDEX i(i), DROP INDEX i without problems. The new methods are roughly used as follows: ha_innobase::check_if_supported_inplace_alter_table(): Check if the operation is at all supported, and what kind of lock is needed. Creating a PRIMARY KEY or a FULLTEXT INDEX requires the table to be X-locked. All other supported operations can be done 'online', allowing concurrent modification of the table. ha_innobase::prepare_inplace_alter_table(): For index creation, start a dictionary transaction and create the data dictionary objects. For all operations, check if it is allowed. ha_innobase::inplace_alter_table(): Create any indexes, if index creation was requested.  Otherwise, do nothing. This method will be invoked for both online and offline index creation. If the operation is online, allocate a modification log for the secondary index(es) that will be created. If the operation is offline for any reason, do not allocate modification logs. This method will also notice and report any duplicate key errors. ha_innobase::commit_inplace_alter_table(): Commit or roll back the operation. Rollback may be initiated after a failed operation, or after a successfull operation when MySQL fails to upgrade the meta-data lock for rewriting the .frm file. If commit=true, drop the indexes that were requested to be dropped (WL#5548). Before dropping, rename the indexes to start with ""\377"" so that crash recovery will flag it as an incomplete index and drop it. If a successful index creation needs to be rolled back, we cannot immediately drop the index(es), because the table will typically be in use by other threads (this is what timed out the MDL upgrade in the first place). Instead, we mark the index as 'aborted' or 'zombie' and will attempt to drop it when we get the chance (reference count has dropped to zero, or the index is being evicted from the data dictionary cache). innobase_alter_table_flags(), check_column_being_renamed(), column_is_being_renamed(), foreign_key_column_is_being_renamed(): Remove. Remove the column rename changes from ha_innobase::check_if_incompatible_data(). All these checks will be performed as part of check_if_supported_inplace_alter_table(). add_index(), final_add_index(), prepare_drop_index(), final_drop_index(): Remove. These are replaced by the prepare_inplace_alter_table(), inplace_alter_table(), and commit_inplace_alter_table(). innodb_online_alter_log_max_size (srv_online_max_size): New parameter for limiting the amount of modification log that is allowed to accumulate during online index creation. Add DB_ONLINE_LOG_TOO_BIG to enum db_err for exceeding this. === Second part: online index creation (WL#5534). The algorithm: (1) row_log_allocate() creates a temporary file for each index being created * a logical variant of the InnoDB change (insert) buffer * row_log_online_op(index, tuple, trx_id, enum row_op op) * enum row_op: INSERT, DELETE_MARK, DELETE_UNMARK, PURGE * invoked by DML, rollback, and purge, just like the InnoDB change buffer * update invokes (INSERT,new_value), (DELETE_MARK,old_value) (2) row_merge_read_clustered_index() scans the clustered index of the table * For every index being created, write an index entry to a merge sort file (3) row_merge_sort() the buffers (one for every index being created) (4) Insert the sorted entries to the new index B-tree(s) (5) row_log_apply() the change logs to the index B-tree(s) * this will 'publish' the index inside InnoDB (6) MySQL upgrades the meta-data lock (7) commit_inplace_alter_table(commit=true) will rename the created index to non-temporary name, and drop any indexes that were requested to be dropped Steps (2), (3), (4) are unaffected by this change. There is an anomaly. Between steps (5) and (7), a DML operation can fail due to a uniqueness violation in a created UNIQUE INDEX. The index exists in InnoDB at that point, but not in MySQL. Thus, we cannot report the index name to MySQL. It is somewhat wrong to report a duplicate key for DML before the DDL has fully finished. Other types of uniqueness violation observed during index creation would be reported to the DDL thread. Another anomaly is that when step (6) fails to upgrade the meta-data lock, MySQL will invoke commit_inplace_alter_table(commit=false) to drop any created indexes. These cannot be dropped immediately, because failure to upgrade the meta-data lock means that other threads must be operating on the table, and potentially accessing the index trees. Therefore, we must merely flag the indexes ONLINE_INDEX_ABORTED or ONLINE_INDEX_ABORTED_DROPPED. For such indexes, DML threads will invoke row_log_online_op() as if the index was still being created online. That function would do nothing, returning 'it was buffered' to the DML thread. If online index creation completed successfully, the function would return 'it was not buffered', and the DML thread would insert to the B-tree as usual. Online index creation can also be aborted when the log file written by row_log_online_op() exceeds the new parameter innodb_online_alter_log_max_size (a new error DB_ONLINE_LOG_TOO_BIG). In this case, DML threads will continue business as usual, and the DDL operation will fail. === Third part: new counters for INFORMATION_SCHEMA.INNODB_METRICS ddl_background_drop_indexes Number of indexes waiting to be dropped after failed index creation ddl_online_create_index Number of indexes being created online ddl_pending_alter_table Number of ALTER TABLE, CREATE INDEX, DROP INDEX in progress === Detailed change description dict_index_get_online_status(), dict_index_set_online_status(): New functions, for determining the status of index creation (enum online_index_status): ONLINE_INDEX_COMPLETE: the index is complete and ready for access ONLINE_INDEX_CREATION: the index is being created online (allowing concurrent modifications, not allowing index lookups) ONLINE_INDEX_ABORTED: online index creation was aborted and the index should be dropped as soon as index->table->n_ref_count reaches 0 ONLINE_INDEX_ABORTED_DROPPED: the online index creation was aborted, the index was dropped from the data dictionary and the tablespace, and it should be dropped from the data dictionary cache as soon as index->table->n_ref_count reaches 0 dict_index_is_online_ddl(): Determine if the index is or was being created online (TRUE) or it is useable for lookups (FALSE). dict_index_online_log(): Wrapper for row_log_online_op(), to resolve circular include file dependencies. dict_index_online_trylog(): Try logging an operation during online index creation. If the index is complete, return FALSE so that the operation will be performed directly on the index. dict_index_struct: Remove to_be_dropped, and add online_status. Add a union around search_info and a new member, online_log. The adaptive hash index will not be used during online index creation. dict_table_struct: Add the field drop_aborted, for noting that the table may contain 'aborted' or 'zombie' indexes that have to be dropped as soon as possible. btr_root_raise_and_insert(), btr_page_split_and_insert(), btr_attach_half_pages(), btr_insert_on_non_leaf_level(): Add undo logging and locking flags. Add the flag BTR_CREATE_FLAG, which allows operations to bypass row_log_online_op() when an index is being created online. btr_validate_index(): Skip indexes that are being created online. btr_cur_latch_leaves(): Add the latch_mode BTR_MODIFY_TREE_APPLY_LOG, to be invoked from row_log_apply(). It can skip most of the latching, because the log will be applied by a single thread. enum btr_latch_mode: Add BTR_MODIFY_TREE_APPLY_LOG and BTR_MODIFY_LEAF_APPLY_LOG, exclusively reserved for row_log_apply(), which is single-threaded for any given index that is being created online. btr_cur_search_to_nth_level(): Add the latch_mode BTR_MODIFY_TREE_APPLY_LOG and BTR_MODIFY_LEAF_APPLY_LOG. Do not update the adaptive hash index for indexes that are being built online. btr_cur_open_at_index_side(), btr_cur_open_at_rnd_pos(): Disallow the latch_mode BTR_MODIFY_TREE_APPLY_LOG and BTR_MODIFY_LEAF_APPLY_LOG. These functions are not to be called during online index creation. btr_cur_ins_lock_and_undo(), btr_cur_optimistic_insert(), btr_cur_pessimistic_insert(), btr_cur_upd_lock_and_undo(), btr_cur_update_in_place(), btr_cur_optimistic_update(), btr_cur_pessimistic_update(), btr_cur_optimistic_delete(), btr_cur_pessimistic_delete() : Assert that the index is not being built online, or the BTR_CREATE_FLAG is being passed (from row_log_apply()). btr_cur_update_in_place(), btr_cur_optimistic_update(), btr_cur_pessimistic_update(): Add a separate parameter for trx_id, so that row_log_apply() can pass thr=NULL. row_upd_write_sys_vals_to_log(), btr_cur_update_in_place_log(), btr_cur_del_mark_set_clust_rec_log(), btr_cur_trx_report(): Replace trx with trx_id. btr_search_drop_page_hash_index(), btr_search_build_page_hash_index(), btr_search_get_info(): Assert that the index is not being created online. dict_build_index_def_step(): Record only the first table_id created in the transaction. Crash recovery would drop that table if the data dictionary transaction is found to be incomplete. dict_table_try_drop_aborted(), dict_table_try_drop_aborted_and_mutex_exit(): Try to drop any 'aborted' or 'zombie' indexes. dict_table_close(), dict_table_open_on_id(), dict_table_open_on_name_low(), dict_table_open_on_name(), dict_table_open_on_name_no_stats(): Add the parameter try_drop, for trying to drop incomplete indexes when dict_locked=FALSE. dict_table_remove_from_cache_low(): Try to drop 'aborted' or 'zombie' indexes. dict_index_add_to_cache(): Assert that the index is not being created online. The flag would be set later. dict_index_remove_from_cache_low(): Clean up after aborted online index creation. dict_table_get_foreign_constraint(): Consider both referencing and referenced indexes. dict_foreign_find_index(): Add const qualifiers. Remove the reference to index->to_be_dropped. This will be checked elsewhere. dict_foreign_find_equiv_index(): Replaced by dict_foreign_find_index(). dict_table_replace_index_in_foreign_list(): Renamed to dict_foreign_replace_index(). This will not work properly until WL#6049 (meta-data locking for foreign key checks) has been implemented. dict_table_check_for_dup_indexes(): Replace the parameter ibool tmp_ok with enum check_name: CHECK_ALL_COMPLETE, CHECK_ABORTED_OK, CHECK_PARTIAL_OK. dict_lru_validate(), dict_lru_find_table(): Make static. dict_load_columns(): Check errors from dict_load_column_low() a little earlier. dict_stats_update_transient_for_index(): Refactored from dict_stats_update_transient(). We need to be able to update the statistics for a particular index, once the index has been created. dict_stats_update_persistent(): Skip indexes that are corrupted or being created online. dict_stats_fetch_from_ps_for_index(): dict_stats_update_for_index(): New functions, for updating index statistics after index creation. dict_stats_delete_index_stats(): Take the table and index name as the parameter, instead of taking a dict_index_t. We will drop the statistics after the object has been freed. innobase_index_reserve_name: A global constant for the predefined name GEN_CLUST_INDEX. convert_error_code_to_mysql(): Make static in ha_innodb.cc. The ALTER TABLE code in handler0alter.cc will invoke a new function my_error_innodb() instead, so that my_error() will be invoked exactly once for each error. ha_innobase::info_low(): Ignore indexes that are being created online. ha_innobase::check(): Ignore indexes that are being created or dropped. my_error_innodb(): Error reporting for most conditions in DDL operations (except old_alter_table=1 or CREATE TABLE or DROP TABLE). The errors DB_DUPLICATE_KEY, DB_TABLESPACE_ALREADY_EXISTS, and DB_ONLINE_LOG_TOO_BIG must be handled by the caller. innobase_check_index_keys(): Replace key_info[], num_of_keys with Alter_inplace_info. innobase_create_index_field_def(): Add const qualifiers. innobase_create_index_def(): Add const qualifiers. Rename key_primary to key_clustered, because we do create a new clustered index also when creating the FTS_DOC_ID column. innobase_copy_index_field_def(): Remove. When creating the clustered index (and rebuilding the table), all index definitions will be copied from the MySQL data dictionary, not from the InnoDB data dictionary. innobase_fts_check_doc_id_col(), innobase_fts_check_doc_id_index_in_def(): Add const qualifiers. innobase_fts_check_doc_id_index(): Add ha_alter_info, for checking indexes that are to be added. innobase_create_key_def(): Rename to innobase_create_key_defs(). Move some handling of full-text index creation to the caller. innobase_check_column_length(): Change the return type from int to bool. innobase_find_equiv_index(): Similar to_foreign_find_index(), but searches the to-be-added indexes instead of existing ones. innobase_create_fts_doc_id_idx(): Add the parameter new_clustered. innobase_add_index_cleanup(): Remove. online_retry_drop_indexes_low(), online_retry_drop_indexes(): Drop 'aborted' or 'zombie' indexes.  Invoked by prepare_inplace_alter_table() while sufficient locks are being held. prepare_inplace_alter_table_dict(): Prepare the data dictionary for inplace ALTER TABLE (or CREATE INDEX or DROP INDEX). i_s_fts_index_table_fill_one_index(), i_s_fts_config_fill(): Assert that the index is not being created online. Fulltext indexes are never being created online. row_upd_build_sec_rec_difference_binary(): Take the rec offsets as a parameter, to avoid having to recompute it. Remove the parameter trx. ins_node_create_entry_list(): Make static. struct trx_struct: Correct the comment of trx->table_id.  It was wrong already when index creation was implemented in the InnoDB Plugin. lock_clust_rec_cons_read_sees(), lock_rec_create(), lock_rec_enqueue_waiting(), lock_rec_add_to_queue(), lock_rec_lock_fast(), lock_rec_lock_slow(), lock_rec_lock(), lock_rec_queue_validate(), lock_rec_convert_impl_to_expl(), lock_sec_rec_read_check_and_lock(), lock_clust_rec_read_check_and_lock(), lock_get_table(), lock_rec_get_index(), lock_rec_get_index_name(), lock_table_locks_lookup(): Assert that the index is not being created online. These assertions should not be reached for DML threads, because they should be buffering the changes with row_log_online_op(). The row_log_apply() thread will be passing BTR_NO_LOCKING_FLAG, skipping the locking. lock_rec_insert_check_and_lock(), lock_sec_rec_modify_check_and_lock(): Assert that the index is not being created online, or BTR_CREATE_FLAG is being passed. lock_rec_insert_check_and_lock(): Remove a bogus assertion about LOCK_S during index creation. Index creation is passing the BTR_NO_LOCKING_FLAG, skipping locking altogether. opt_calc_index_goodness(): Ignore indexes that are being created online. row_ins_must_modify_rec(): Update a comment about the uniqueness of node pointers. row_purge_parse_undo_rec(), row_undo_mod_upd_exist_sec(), row_upd(): Proceed if there are any indexes being created online. row_ins_index_entry(), row_purge_remove_sec_if_poss(), row_undo_ins_remove_sec_rec(), row_undo_mod_del_mark_or_remove_sec(), row_undo_mod_del_mark_or_remove_sec(), row_undo_mod_del_unmark_sec_and_undo_update(): Invoke dict_index_online_trylog(). row_upd_sec_online(): Auxiliary function for logging the update or delete of a record whose index is being created online. Invoked by row_upd_sec_step(). row_create_table_for_mysql(), row_drop_table_for_mysql(): Assert that at most one table is being created or dropped per transaction, or the table is an auxiliary table for full-text search index. rec_offs_any_null_extern(): Make available in non-debug builds. This will be called when scanning all rows during index creation, in row_merge_read_clustered_index(). row_log_allocate(), row_log_free(), row_log_online_op(), row_log_get_max_trx(), row_log_apply(): The modification log for buffering changes during online index creation. enum row_op: Index record modification operations buffered by row_log_online_op(): ROW_OP_INSERT, ROW_OP_DELETE_MARK, ROW_OP_DELETE_UNMARK, ROW_OP_PURGE, ROW_OP_DELETE_PURGE. merge_index_def_struct: Add key_number for the MySQL key number that is being created, or ULINT_UNDEFINED if none. row_merge_dup_report(), row_merge_file_create_low(), row_merge_file_destroy_low(): Make public, so that these can be called from row0log.cc. row_merge_drop_index(): Replace with row_merge_drop_indexes_dict() and row_merge_drop_indexes(). row_merge_rename_index_to_add(), row_merge_rename_index_to_drop(): New functions, used in commit_inplace_alter_table() to guarantee somewhat satisfactory crash recovery. row_merge_build_indexes(): Add the flag 'online'. Add key_numbers[]. If online index creation fails, flag all created indexes as 'aborted' or 'zombie'. row_merge_buf_encode(): Refactored from row_merge_buf_write(). row_merge_insert_index_tuples(): Replace trx with trx_id. Remove the parameter 'table'. Remove the dummy query graph and invoke the b-tree functions directly. row_merge_drop_temp_indexes(): Use direct SQL to drop all temporary indexes. row_merge_read_clustered_index(): Do not commit the mini-transaction when switching pages except when there is a lock wait on the clustered index tree lock. MONITOR_MUTEX_INC(), MONITOR_MUTEX_DEC(): New macros, to be used when the mutex protecting the counter is to be acquired and released. MONITOR_ATOMIC_INC(), MONITOR_ATOMIC_DEC(): Define these for non-atomic builds as well. Use a new mutex (monitor_mutex) for protection in that case. row_ins_index_entry_big_rec(): A new function, for inserting the externally stored fields (off-page columns) of a clustered index entry. rb:854 approved by Jimmy Yang "	6dd8e27ba69934e6aefbf8eb00f8cc24b43f3386
----------------------------
ndb - forgot to update ndb_index_stat/ndb_index_stat_restart which also uses ndb_index_stat_enable.inc 	f4bef42fdd4134e18070ca7956f546bbf784c911
----------------------------
ndb - fix ndb_index_stat_enable so that it doesnt drop tables at end of test, if they existed when test started 	667a5c089191131df6742fb15044bedbdde1481f
----------------------------
WL#6146 Extend Ndb conflict exceptions table Initial refactoring The ndb_rpl_conflict_basic testcase is extended to give better coverage. An unnecessary call to ndbcluster_read_binlog_replication() is removed. A new ExceptionsWriter class is created. Conflict detection/handling code is moved out into ndb_conflict.h and ndb_conflict.cc. No functional change. 	525db62aab0d9b16bf03d319a6f38c10f70a758d
----------------------------
Merge: 9927dcf 475e16f merge opt-backporting => opt-team, enabling OPTIMIZER_SWITCH_ALL 	9f534408512a567f44602af54754665f5f9cc594
----------------------------
ndb - make sure that mt_thr_config works also with 7.2 	220d95ff0294d2683049a4bb5fe3a32cadd8a9ca
----------------------------
Bug #13586336: SRVGEN - HIBISCUS: ISSUE DEPRECATION WARNING FOR LEGACY AUTHENTICATION METHOD Added warnings as follows : 1) Make the server option secure_auth ON per default and issue a warning stating that legacy passwords are deprecated if it is ever overridden. 2) Issue a deprecation warning if a new user account ever is created or otherwise configured to use the mysql_old_password plugin. 3) When upgrading an old system, issue deprecation warnings if an old password hash digest is found in the password field. Added tests for the new warnings and updated existing tests to either set secure_auth back to FALSE or adjust the result where this is not possible. 	8a1cfee7aa88e3da317c126479e09e6c98595eb8
----------------------------
"Bug#11764651-57510:Comparing uninitialized values in CTYPE-BIN.c The first part of the problem reported in the bug, is  fixed in the patch for Bug#11766212.This fix is for the second part of the problem reported. PROBLEM: The following query results in an invalid read when run with valgrind select left(geomfromtext(""point(0 0)""),1) not in ( @@global.query_cache_type,1 not between -1 and ""a"", elt(1,'',1,1,1), geomfromtext(""point(1 -1)"") in (""bbbbbbbbb""),1); 5.5.8-debug valgrind output: Invalid read of size 1 at: my_strnncollsp_utf8 (ctype-utf8.c:2590) by: sortcmp (sql_string.cc:668) by: cmp_item_sort_string::cmp (item_cmpfunc.h:1019) by: Item_func_in::val_int (item_cmpfunc.cc:4130) by: Item::send (item.cc:5864) by: Protocol::send_result_set_row (protocol.cc:848) by: select_send::send_data (sql_class.cc:1789) by: JOIN::exec (sql_select.cc:1857) by: mysql_select (sql_select.cc:2568) by: handle_select (sql_select.cc:296) by: execute_sqlcom_select (sql_parse.cc:4464) by: mysql_execute_command (sql_parse.cc:2066) by: mysql_parse (sql_parse.cc:5500) by: dispatch_command (sql_parse.cc:1030) by: do_command (sql_parse.cc:770) by: do_handle_one_connection (sql_connect.cc:745) by: handle_one_connection (sql_connect.cc:684) by: start_thread (pthread_create.c:301) Problem Analysis: The above mentioned invalid read can be reproduced using a simplified query like this one: select left(geomfromtext(""point(0 0)""),1) in (@@global.query_cache_type,1,""""); Problem is present in cmp_item_sort_string::store_value, because it does not make its own copy of the value evaluated. Instead tries to refer to a temporary value that could be changed or deleted by other functions. Hence while reusing the evaluated value in case of Item_func_in::val_int, we get a valgrind error saying Invalid read. With respect to the above query, this is what happens: a) To be compared with @@global.query_cache_type, function left() is evaluated in ""string"" context. This evaluation modifies Item_func_left::tmp_value, and returns a pointer to this tmp_value. The ""comparator object"" (cmp_item) stores the returned pointer in cmp_item::value_res and then the comparison is done. b) To be compared with 1, left() is evaluated in ""real number"" context, which modifies Item_func_left::tmp_value again. Comparison is done with the real value. c) To be compared with """", left() is NOT evaluated again because cmp_item already has a pointer to the value of left() in string context (from (a)). However, this value was a pointer to Item_func_left::tmp_value, and (b) has modified this String. So we would be  looking at out-of-date data. Hence while reusing the evaluated value in case of Item_func_in::val_int, we get a valgrind error saying Invalid read. Solution: The fix it to make a copy of the value retured from val_str() in cmp_item_sort_string::store_value(). "	977a27c6ae30d8c6600088e1cddd54da3d4e0aec
----------------------------
Fixed problem in rpl_row_crash_safe. By mistake the option --relay-log-recovery was removed thus causing problems when running --mysqld=--master-info-repository=TABLE as sync-master-info is not enabled. Basically, this leads to events being retrieved twice from the master. 	5e9ba547ea5f4e10e4c3209769c8ffbb08c25066
----------------------------
Bug#13440472 MANY VALGRIND FAILURES ON DAILY-TRUNK Deallocate the array of PFS instrument configuration values during server shutdown to avoid Valgrind errors. 	d1e05b0993971fce997a8dbc6dc85af38eff1424
----------------------------
Fix for bug#13330645 'MRR_SORTED' IS NOT USED EVEN IF HANDLER NATIVELY SUPPORTS 'HA_MRR_SORTED' There was an assumption that only the default MRR implementation is able to produce 'HA_MRR_SORTED' results. This has lead to the bad codestyle of either setting  'param.force_default_mrr= true' or specifying the HA_MRR_USE_DEFAULT_IMPL flag whenever we wanted a sorted MRR resultset. This fix leaves the decision of using either the native or the default MRR implementation to the handler itself based on its capabilities. Furthermore, mostly due to skip_sort_order not being decided until JOIN::exec(), the handler will also set the (new) HA_MRR_SUPPORT_SORTED flag to signal if its is 'Using MRR' if its multi_range_read_init() is called with the HA_MRR_SORTED flag - This has the sole purpose of getting the EXPLAIN correct. This part of the fix might become obsolete if/when the planned reshuffle of skip_sort_order (Into JOIN::optimize) has been completed. There was also a problem with DsMrr_impl::dsmrr_init() not checking the OPTIMIZER_SWITCH_MRR when deciding to init() either the DS-MRR or default MRR implementation. (There are cases where ::dsmrr_init() is called wo/ ::dsmrr_info[_const]() being called first). 	8c8d06b6492ffcbd700d45dc6cd8f4a5b2f209ae
----------------------------
Bug#13610358 innodb_sort_buf_size should be called innodb_sort_buffer_size for consistency 	f3f07f7dca38b2479f5f555eff793c9ecfafb193
----------------------------
Bug#13440472 MANY VALGRIND FAILURES ON DAILY-TRUNK Deallocate the array of PFS instrument configuration values during server shutdown to avoid Valgrind errors. 	8058656b51e4161b1133a26d848303a29e18f7bb
----------------------------
Fixed bug#11753187 (formerly known as bug 44585): SP_CACHE BEHAVES AS MEMORY LEAK. Background: - There are caches for stored functions and stored procedures (SP-cache); - There is no similar cache for events; - Triggers are cached together with TABLE objects; - Those SP-caches are per-session (i.e. specific to each session); - A stored routine is represented by a sp_head-instance internally; - SP-cache basically contains sp_head-objects of stored routines, which have been executed in a session; - sp_head-object is added into the SP-cache before the corresponding stored routine is executed; - SP-cache is flushed in the end of the session. The problem was that SP-cache might grow without any limit. Although this was not a pure memory leak (the SP-cache is flushed when session is closed), this is still a problem, because the user might take much memory by executing many stored routines. The patch fixes this problem in the least-intrusive way. A soft limit (similar to the size of table definition cache) is introduced. To represent such limit the new runtime configuration parameter 'stored_program_cache' is introduced. The value of this parameter is stored in the new global variable stored_program_cache_size that used to control the size of SP-cache to overflow. The parameter 'stored_program_cache' limits number of cached routines for each thread. It has the following min/default/max values given from support: min = 256, default = 256, max = 512 * 1024. Also it should be noted that this parameter limits the size of each cache (for stored procedures and for stored functions) separately. The SP-cache size is checked after top-level statement is parsed. If SP-cache size exceeds the limit specified by parameter 'stored_program_cache' then SP-cache is flushed and memory allocated for cache objects is freed. Such approach allows to flush cache safely when there are dependencies among stored routines. 	d460f1689da6081ea06ee25e0c7553c74dd50c30
----------------------------
Bug #13604034 SET GLOBAL INNODB_UNDO_LOGS=0 SUCCEEDS BUT LEADS TO AN ASSERT MAX_UNDO_LOGS > 0 The min value was not checked, while setting the value of innodb_undo_logs config value.  This was fixed.  Also, the max value and the default value is not fixed in the case of innodb_undo_logs.  So after starting innodb, the max and default value of the innodb_undo_logs config will be reset to the proper value based on the srv_available_undo_logs variable. This system variable framework does not support doing the validation for default value (because the boundaries min and max is not fixed).  Because of this limitation of the framework, we needed to adjust the max and default value of the config object. 	e5ec83d55bfdd07183a53fd19c9e9321699dc20b
----------------------------
WL#3584: fix disable_gtid_unsafe_statements - re-enable the check for non-transactional tables - add a debug symbol that suppresses the check - restrict the check to tables that are written (ignore reads) 	3f03cf7d5100e555e2331f089297d6dd0419d33e
----------------------------
Addendum to the fix for bug #11754014 - Fixed the checks to properly check for plugin_dir containing a trailing slash or backslash. - Fixed a under-configuration in udf_skip_grants that was preventing the test from running even when there was a udf plugin. 	93d123d789fa4ba3315bdc762b33883d2bfca9f6
----------------------------
Bug#11765450 58421: INNODB TEMPORARY TABLE CRASH WHEN TMPDIR ON LINUX TMPFS rb://898 approved by: Marko Makela On some kernel versions native aio operations are not supported on tmpfs. Check this during start up and fall back to simulated aio. 	0da310b69db3a39ba2e6d63ff62ef3c027cd63ff
----------------------------
WL#3584 bugfixes and refactorings - fix logic of is_stmt_gtid_compatible / disable_gtid_unsafe_statements - minor fixes - tests for gtid_mode 	ced8e82feee36a6d18c1e20e61087e4327d57266
----------------------------
Bug #11754014: 45549: udf plugin_dir path separator inconsistency and cryptic error 1126 message The problem was that dlopen() related code was using just a subset of the path normalization routines used in other places. Fixed the expansion of the pre-dlopen() behavior for plugins and UDFs to use a platform-dependent consistent encoding of the paths. Fixed the error dlopen() error handling to take the correct error message and strip off the trailing newline character(s). Fixed tests to do a platform independent replace of directories and to account for the traling slash. 	0e48b69cba704bf18e1fccb7b44eb6b991401790
----------------------------
Bug#11748572: ALLOCATING A LARGE QUERY CACHE IS NOT DETERMINISTIC Moving query_cache_size_basic_32.test and query_cache_size_basic_64.test from experimental to disabled as a solution has still not been found. 	43721f354a19acb1f3d65fb542c17c8a7363ff4e
----------------------------
bug#13559728 -- memcached crashes if only one [API] slot available in config. 	ec74eb70803c7701201e8020b75b44f2b31c6364
----------------------------
Bug #13255225: THE VALUE OF INNODB_UNDO_LOGS IN MY.CNF IS IGNORED Introduced a new read only status variable srv_available_undo_logs. During startup, this variable will be set to the total available number of rollback segments.  Users can access this variable to find out the available number of rollback segments.  The innodb_undo_logs will contain the number of active rollback segments. Review Board link: http://bur03.no.oracle.com/rb/r/862/ 	fc58dc578a4255b8008b27bdced2de2f45797189
----------------------------
"BUG#11764724 - 57586: UNKNOWN TABLE WHEN TRYING TO DROP A TABLE AND NO AVAILABLE UNDO SLOTS LEFT Description: If you attempt to drop an existing InnoDB table, but you do not have any available undo slots open, then you will receive an ""unknown table"" error. mysql> DROP TABLE test.innodb_table_monitor; ERROR 1051 (42S02): Unknown table 'innodb_table_monitor' How To Repeat: <first> make sure max_connections > 1024 </first> use test; create table t (id int) engine=innodb; create table innodb_table_monitor (id int) engine=innodb; Run following script: <? $db_arr=array(); for ($i = 1; $i <= 1024; $i++) { $db=$db_arr[$i]=mysql_connect(""localhost:3307"",""root"",""pass"",1); mysql_select_db(""test"",$db); mysql_query(""BEGIN"",$db) or die(mysql_error()); mysql_query(""INSERT INTO t VALUES ($i)"",$db) or die(mysql_error()); } $db=$db_arr[$i]=mysql_connect(""localhost:3307"",""root"",""pass"",1); mysql_select_db(""test"",$db); mysql_query(""DROP TABLE test.innodb_table_monitor"",$db) or die(mysql_error()); sleep(60); ?> After the above script, it will throw the following error: Unknown table 'innodb_table_monitor' Analysis: Here, max number of concurrent transactions/connections are started and then the next transaction to drop a table is initiated. Since, system has already max number of transactions running, next transaction to ""drop table"" was not started and innodb returned error ""DB_TOO_MANY_CONCURRENT_TRXS"". But this error was not handled properly in sql layer because of which ""drop table"" operation was throwing wrong error message. Fix: As a fix, I have added check in sql (in function ""mysql_rm_table_part2"") to handle error code ""HA_ERR_TOO_MANY_CONCURRENT_TRXS"" and throw proper error message. Ouput of drop command after fix (with max number of concurrent transaction running) mysql> drop table test; ERROR 177 (HY000): Too many active concurrent transactions To reproduce this issue, max_connections should be set to value greater than 1024 and 1024 connections/transactions need to be started. Since, this process consumes lot of time and resource, I havent added test case in mysql_test. But I will update but list with request of QA assistance to verify fix. "	d8a1cef1ca5f45ca0b190a89ca318b8f6a808960
----------------------------
Add more error handling for memcached mapped table configuration. And a few minor cleanup from last merge with mysql-trunk. 	f29cc40abf71293f03589ccbd84ce414fb3d73d4
----------------------------
ndb - disable also query_cache_size_basic_64 fails all the time on sol10-cmt 	880423883f89fc512ea20fa812b72f1d23f48afc
----------------------------
"Bug#11866367	FPE WHEN SETTING INNODB_SPIN_WAIT_DELAY rb://865 approved by: Jimmy Integer overflow causes division by zero. "	2cdcb18bf4f7a68fcb05e50a66e0689a513b49e2
----------------------------
"WL#5825 Using C++ Standard Library with MySQL code Post-push cleanup: the min/max macros are gone, so don't comment about them. It is still a good idea to include ""my_config.h"" before anything else. "	a6d8a5ec9571508c1e3320a90cf67bfae337b55a
----------------------------
BUG#12964649 fixing slave_checkpoint_group_basic. 	e52111c782b61baa8136af9ce0ef2842563631e4
----------------------------
bug#12964649 MTS memory is not freed Not-released memory after stop-slave was caused by skipping MTS cleanup in case the Workers initialization fails. It could fail for instance because of imcompatibility of max of opt_mts_checkpoint_group and sizeof(mysql.slave_worker_info.Checkpoint_group_bitmap) when the former allowed a value over the size (fixed by Bug@12979420). Fixed with refining MTS stop procedure, in particular making sure that cleanup of Coordinator related objects is done even though Workers might not have been threaded. Also @@slave_checkpoint_group system var is made cacheble into rli->checkpoint_group at slave start same way as slave_parallel_workers. That is a new slave session will use the last available value of @@slave_checkpoint_group on the eve of START-SLAVE, and changes to the variable won't have any effect to the running slave session. 	cf8032de689f33c501a47ff9b6c0cb87b354a46f
----------------------------
Use C linkage for the variable timed_mutexes. 	6c17d403440262f0ec646272421eb4101ec90cf4
----------------------------
ndb - disable query_cache_size_basic_32, fails always on win64 	8af09bbb80a08616e709a9ab6c1084f983c43503
----------------------------
Addendum to the fix for bug #11754011: fixed a testcase result to include the new --slow-start-timeout option's help output 	e2268b8e1ef9f62258ee85225265d4afa9ad340f
----------------------------
ndb - properly free all resources allocated for the NDB_SHARE whem ndbcluster_binlog_init_share fails 	c1b4607bc2c5ff17546332df806c03c42094f261
----------------------------
Bug#11754011: 45546: START WINDOWS SERVICE, THEN EXECUTE WHAT IS NEEDED. Added a global read-only option slow-start-timeout to control the Windows service control manager's service start timeout, that was currently hard-coded to be 15 seconds. The default of the new option is 15 seconds. The timeout can also be set to 0 (to mean no timeout applicable). 	0906ae77415ceb4388a5bc73c7fe91d72ca6a646
----------------------------
ndb - add bool argument to mt_thr_config::do_bindings() instead of having it magically deduce value itself 	cf5ff0ab3625a4f81dd93dddf0fddb8f47e83fae
----------------------------
BUG#13427444: LIVE UPGRADE FAILS BETWEEN 5.5.18 -> 5.6.4 When doing a live upgrade from a 5.5 into a 5.6, the server would refuse to startup because the new replication metadata tables were not created.  In addition, the error message was mostly unhelpful. In fact if the user is convinced that the server should start, he can turn on the option slave-skip-start which also bypasses the replication metadata checks on startup. Then the user is able to fix the problem. In this patch we extend the error and warning messages to make it clear that the problem may be related to the live upgrade and also to suggest using skip-slave-start, to bypass the startup problem. The user can then resort to mysql_upgrade to fix not only this but other problems in system tables that are due to the live upgrade. 	5c7d9346057e06d2914adf54735d9491d61a90e8
----------------------------
Bug#13494672 Remove special tables innodb_sql and innodb_mem_validate The special table name innodb_sql was added in branches/fts r624 as a debug feature. It should never have been tested for unless the debug flag is present at compilation time. It may have been used for debugging in the early stages of full-text-search development. Remove the table. The special table name innodb_mem_validate does not trigger any useful action unless UNIV_MEM_DEBUG is defined at compilation time and innodb_use_sys_malloc=0 is being used at runtime. Enclose the tests for it inside UNIV_MEM_DEBUG. rb:851 approved by Jimmy Yang 	6756b010d6a66103d4fdc54d6344a0241eb4a0c6
----------------------------
ndb - use MIN instead of min for simple value comparisons in ha_ndbcluster.cc 	4b1123cede26e4d5e520bfd952f364d84a18a689
----------------------------
"Fix for BUG#12912171 - ASSERTION FAILED: QUICK->HEAD->READ_SET == SAVE_READ_SET and BUG#13256446 - ASSERTION QUICK->HEAD->READ_SET == SAVE_READ_SET' FAILED IN OPT_RANGE.CC:1606 When fixing Bug 12698916, the assertions DBUG_ASSERT(quick->head->read_set == save_read_set); DBUG_ASSERT(quick->head->write_set == save_write_set); were added to QUICK_ROR_INTERSECT_SELECT::init_ror_merged_scan(). Indeed, a QUICK_ROR_INTERSECT_SELECT is the intersection of several QUICK_RANGE_SELECT; each QUICK_RANGE_SELECT has its own ""private bitmap of columns"" (QUICK_RANGE_SELECT::column_bitmap) which it copies to table->read_set when it operates (the idea is that each QUICK_RANGE_SELECT may be on a different index, so needs to do reads of a different set of columns, so needs to set table->read_set to that set before it does a read). QUICK_ROR_INTERSECT_SELECT::init_ror_merged_scan() calls QUICK_RANGE_SELECT::init_ror_merged_scan() on each QUICK_RANGE_SELECT: the assertions want to verify that each QUICK_RANGE_SELECT keeps its ""read_set change"" local to itself, does not ""leak"" it outside. The present bug is about those new assertions firing in various UPDATE statements which all use this block of code of mysql_update(): if (used_key_is_modified || order) { modify table->read_set/table->write_set; //(A) use a ""quick"" (range optimizer object): call reset() (thus init_ror_merged_scan()), or get_next(), or the destructor } QUICK_RANGE_SELECT is designed like this: - constructor: save table->read_set (a pointer) into member save_read_set - init_ror_merged_scan(): point table->read_set to member column_bitmaps, open a dedicated ""handler"" object, restore table->read_set upon exit (restore *to member save_read_set*) - get_next(): point table->read_set to member column_bitmaps, read index entry, restore table->read_set upon exit (restore *to member save_read_set*) - destructor: restore table->read_set *to member save_read_set*. The same happens for table->write_set. The problem is that ""restore to member save_read_set"" may be incorrect: what if table->read_set was modified, by some non-range-optimizer code, between construction and destruction of the QUICK_RANGE_SELECT? Then ""restore to member save_read_set"" would cancel the modification. And it happens in the if() block above: - before the if(), a check_quick() call creates a ""quick"" object (constructor call) - in the if(), line ""A"" changes table->read_set from &table->def_read_set to either &table->tmp_set or &table->s->all_set. - in the if(), some calls on ""quick"" happens: reset() (thus init_ror_merged_scan()), info.read_record(&info) (thus get_next()), set_quick() (thus destructor) and explicit 'delete' (thus destructor). So the assertions fire, because they find that table->read_set is not the same before and after init_ror_merged_scan() (before: it is &table->tmp_set or &table->s->all_set as set by (A); after: it is the ""quick""'s save_read_set member i.e. &table->def_read_set, the pointer value of before (A)). So we have 3 suspicious functions; I added assertions in each of them to detect when they ""restored to an out-of-date bitmap"", and ran the entire testsuite, and all spotted problems were confined to the above if() block in mysql_update(). To fix the 3 crashing queries added in range.inc, it is sufficient to modify init_ror_merged_scan(): restore table->read_set to what it was *when the function was entered*, not to the save_read_set member. This is done in the patch. However, I find that leaving the ""restore behaviour"" in the two other functions (get_next() and destructor) is not a good idea. There is no logical reason why a get_next() (more or less just an index read) should permanently modify the table->read_set pointer. As to the destructor, I don't see a logical reason either; moreover, doing a restore in the destructor looks like ""RAII"", but given that ""quick"" objects are on the heap their destruction isn't an automatic thing, it happens at the code line where the developer wrote 'delete', which may be moved to earlier or later as code evolves... This is not safe. So I decided to do additional changes. First, I modified get_next(): restore table->read_set to what it was *when the function was entered*, not to the save_read_set member. So far, no problem happened. Then, I modified the destructor: removed the ""restore"" code out of it (and thus remove the save_read_set/save_write_set member). This last modification had consequences. Let's look again at the unchanged code. In the if() block of mysql_update(), the destructor is called in two places: 'select->set_quick()' and an explicit 'delete select' call. This restores table->read_set to what it was before (A). There is also other code which explicitely restores: if (table->key_read) table->restore_column_maps_after_mark_index(); That gives 3 possible paths which restore read_set. Sometimes, set_quick() is called, sometimes the destructor is called, sometimes table->key_read is true: in short, sometimes table->read_set is restored to what it was before (A). Other times, 'select' is NULL and table->key_read is false: table->read_set is *not* restored so we leave the ""if(used_key_is_modified||order)"" block with table->read_set equal to how (A) set it. The three crashing queries are examples where table->read_set is restored. This one below is an example where table->read_set is not restored (remains == &table->s->all_set): create table t1 (a int not null, b int not null, key (a)); insert into t1 values (1,1),(1,2),(1,3),(3,1),(3,2),(3,3),(3,1),(3,2),(3,3),(2,1),(2,2),(2,3); explain update t1 set b=1 order by a; +----+-------------+-------+------+---------------+------+---------+------+------+----------------+ | id | select_type | table | type | possible_keys | key  | key_len | ref  | rows | Extra          | +----+-------------+-------+------+---------------+------+---------+------+------+----------------+ |  1 | SIMPLE      | t1    | ALL  | a             | NULL | NULL    | NULL |   12 | Using filesort | +----+-------------+-------+------+---------------+------+---------+------+------+----------------+ In this case, in the if() block, select==NULL and we do a table scan (ha_rnd_next() calls); ""table scan"" implies table->key_read is false (I think this variable is true when we do an index scan). Sometimes table->read_set is restored, other times table->read_set is not restored... sounds suspicious. I asked myself: what is the correct behaviour: restore or not restore? The intention of code in mysql_update() is, to my interpretation: if(used_key_is_modified||order) { // can't update rows on the fly, must gather all row ids first modify table->read_set ; (A) scan table (sometimes using range scan, sometimes using table scan) and gather row ids; point the ""update-rows loop"" to this set of row ids } // Now the ""update-rows loop"": while (!(error=info.read_record(&info)) && !thd->killed) update rows (on the fly or using row ids above) I am convinced that modifications done by (A) serve only to satisfy the scanning, and thus should not ""leak"" outside of their if(used_key_is_modified||order) block. In the unchanged code, sometimes they leaked, other times they didn't leak. By removing the ""restore"" code of the destructor, I increased the proportion of ""leaks"". So I have eliminated all leaks by changing this code at the end of the if() block: if (table->key_read) table->restore_column_maps_after_mark_index(); I made it be unconditionally executed (=> always restore). By modifying the destructor, I potentially affect all code using the range optimizer, even outside of UPDATE. But, as written earlier, the fact that the destructor, in the entire testsuite, seemed to do real restoring only when in the if(used_key_is_modified||order) block, suggests that we can limit our study to this block. After doing all modifications above, innodb_explain_non_select_* tests failed: indeed, they had a case where modifications done by (A) leaked; my code changes blocked this leak. Let's study one of the failures, assuming no code changes. This query: EXPLAIN EXTENDED UPDATE t2 SET d = 10 WHERE b = 10 ORDER BY a, c LIMIT 5; id	select_type	table	type	possible_keys	key	key_len	ref	rows	filtered	Extra 1	SIMPLE	t2	ALL	a	NULL	NULL	NULL	26	100.00	Using where; Using filesort has table->read_set set to &table->s->all_set in the if() block, this is leaked outside of the if() block, so we start the ""update-rows loop"" with all_set: this reads all columns of the row; the loop has this: if (!records_are_comparable(table) || compare_records(table)) ha_update_row() Because all columns are read, records_are_comparable() is true, so a record which has b=10 and already has d=10 will be recognized as ""no update needed"" (compare_records()==false): so handler_update (count of handler::update_row() calls) is 0. On the other hand, if ORDER BY is removed, then the if() block is not entered, table->read_set is not all_set, it's only ""b"", so ""d"" is not read, so records_are_comparable() is false, so we update the row: handler_update is 1. With my change, UPDATE ORDER BY does not leak all_set out, so UPDATE ORDER BY now behaves more like UPDATE does. I don't find that it's a bad change: it will save column reads at the cost of more updates; can be good or bad depending on circumstances. Moreover, the leak concerned write_set too: if write_set is left to all_set, we will update more columns than necessary. Finally, I don't think that the current behaviour of leaking all_set is intentional (as some other, different UPDATE ORDER BY had some read_set restoring...). I have added to update.test some tests to verify that UPDATE and UPDATE ORDER BY now behave the same regarding handler_update (queries copied from innodb_explain_non_select*.test). Blocking the leak has one good consequence on row-based-replication; indeed, the leak of write_set=all_set makes RBR believe that all columns are changed by the UPDATE, and so RBR writes all ""after-update"" values of all columns into the binary log; when @@binlog-row-image is equal to ""minimal"", this is not correct: http://dev.mysql.com/doc/refman/5.6/en/replication-options-binary-log.html#sysvar_binlog_row_image I have added a test to rpl_row_img_sanity; with my fix, the first column is not in the ""after image"", which is a good thing. Without my fix, it is in the ""after image"" ('mysqlbinlog -v' then shows it as +### UPDATE test.t +### WHERE +###   @1=30 +###   @2=40 +### SET +###   @1=30    <<<<< this is the first column, in the ""after image"" +###   @2=100 ); this is bad as it's an unneeded value. A final note: if I don't do any changes to the code, but remove the read_set/write_set modifications of line (A), no test fails... Looking at revision history, this line was introduced in 2001 as ""innodb fixes"". I still prefer to keep it for now. NDB has shown to be sensitive to read_set/write_set, it is the engine which uses those bitmaps the most. MyISAM just ignores them (always read/writes all columns); InnoDB ignores them if the table is to be updated (then reads/writes all columns). "	313ab5b02d4cdcd68d853a17a78a4b028b07e182
----------------------------
"Bug #13116225 	LIVE DOWNGRADE CRASHES WITH INNODB_PAGE_SIZE=4K This bug ensures that a live downgrade from an InnoDB 5.6 with WL5756 and a database created with innodb-page-size=8k or 4k will make a version 5.5 installation politely refuse to start. Instead of crashing or giving some indication about a corrupted database, it will indicate the page size difference. This patch takes only that part of the Wl5756 patch that is needed to protect against opening a tablespace that is stamped with a different page size. It also contains the change in dict_index_find_on_id_low() just in case a database with another page size is created by recompiling a pre-WL5756 InnoDB. "	ab7a8ceb317986ffab64f3230691efd1b1aed0bb
----------------------------
Bug#11759044 - 51325: DROPPING AN EMPTY INNODB TABLE TAKES A LONG TIME WITH LARGE BUFFER POOL (Note: this a backport of revno:3472 from mysql-trunk) rb://845 approved by: Marko When dropping a table (with an .ibd file i.e.: with innodb_file_per_table set) we scan entire LRU to invalidate pages from that table. This can be painful in case of large buffer pools as we hold the buf_pool->mutex for the scan. Note that gravity of the problem does not depend on the size of the table. Even with an empty table but a large and filled up buffer pool we'll end up scanning a very long LRU list. The fix is to scan flush_list and just remove the blocks belonging to the table from the flush_list, marking them as non-dirty. The blocks are left in the LRU list for eventual eviction due to aging. The flush_list is typically much smaller than the LRU list but for cases where it is very long we have the solution of releasing the buf_pool->mutex after scanning 1K pages. buf_page_[set|unset]_sticky(): Use new IO-state BUF_IO_PIN to ensure that a block stays in the flush_list and LRU list when we release buf_pool->mutex. Previously we have been abusing BUF_IO_READ to achieve this. 	d9a3a6ed1977ae34bf7b5ac7572ad346c2eea993
----------------------------
bug#12561297: Issue: - when mysql_embedded executable is invoked from mtr, instead of taking server options generated by mtr (in my.cnf file), it was taking default options (which are not set like datadir etc.), so was failing/crashing. Details: - modified test case to make mysql_embedded executable to use my.cnf generated by mtr during test execution. ****** # 	df177322b1738c9060e5f6a14f06e90e305e8b16
----------------------------
BUG#11745230 Making the test case work when relay-log.info data is stored in a table. The test case assumed that the relay-log.info data to be fixed was stored in a file. However, it can be stored in a table as well. For completeness, we fix this the test case to make it work in such cases as well. 	fdd04a481c9b8fbb84576c39e7cd19ddbd720b8a
----------------------------
BUG#11745230 Post-push fix for the test in mysql-trunk. The entry for the relay-log filename in relay-log.info file is on the line and not on the first one as in mysql-5.5. This made the test case fail because the relay-log.info was not correctly rewritten. In addition, I've added the warnings due to the inclusion of master-slave.inc into the result file (after WL 4143, mysql-trunk throws these warnings when the password is stored in the master.info). 	f15a749a8d753c3346ad96e8e6cdc892e6c74db5
----------------------------
Bug#13414773 -INNODB_FAST_SHUTDOWN=2, ASSERT STATE == BUF_BLOCK_ZIP_PAGE We can have dirty pages during a fast shutdown. Relax the assertion. 	943085828b53201d2560bd72b5c4c92f19542ee2
----------------------------
Bug#13414773 -INNODB_FAST_SHUTDOWN=2, ASSERT STATE == BUF_BLOCK_ZIP_PAGE We can have dirty pages during a fast shutdown. Relax the assertion. 	62ba947b2456396018197c37e8e9d9dba7e232d9
----------------------------
Fix for Bug#13430436 PERFORMANCE DEGRADATION IN SYSBENCH ON INNODB DUE TO ICP When running sysbench on InnoDB there is a performance degradation due to index condition pushdown (ICP). Several of the queries in sysbench have a WHERE condition that the optimizer uses for executing these queries as range scans. The upper and lower limit of the range scan will ensure that the WHERE condition is fulfilled. Still, the WHERE condition is part of the queries' condition and if ICP is enabled the condition will be pushed down to InnoDB as an index condition. Due to the range scan's upper and lower limits ensure that the WHERE condition is fulfilled, the pushed index condition will not filter out any records. As a result the use of ICP for these queries results in a performance overhead for sysbench. This overhead comes from using resources for determining the part of the condition that can be pushed down to InnoDB and overhead in InnoDB for executing the pushed index condition. With the default configuration for sysbench the range scans will use the primary key. This is a clustered index in InnoDB. Using ICP on a clustered index provides the lowest performance benefit since the entire record is part of the clustered index and in InnoDB it has the highest relative overhead for executing the pushed index condition. The fix for removing the overhead ICP introduces when running sysbench is to disable use of ICP when the index used by the query is a clustered index. When WL#6061 is implemented this change should be re-evaluated. 	a00d8515bdbf516b4f253026b101ea49df9cda55
----------------------------
ndb - bug#13436216 - add new config, MinFreePct to ensure that we don't get database so full that we can't restart 	55893bf192d5037c36a20de8a4ed743425165011
----------------------------
Bug#11756764 48726: MYSQLD KEEPS CRASHING WITH SIGSEGV WITH MYISAM_USE_MMAP ENABLED MySQL server can crash due to segmentation fault when started with myisam_use_mmap. The reason behind this being, while making a request to unmap (munmap) the previously mapped memory (mmap), the size passed was 7 bytes larger than the size requested at the time of mapping. This can eventually unmap the adjacent memory mapped block, belonging to some other memory-map pool. Hence the subsequent call to mmap can map a region which was still a valid memory mapped area. Fixed by removing the extra 7-byte margin which was erroneously added to the size, used for unmappping. 	c9761d0872366e79e7a17c726a1d4fcb14e8f663
----------------------------
Bug#12979420 - MTS: REPLICATION BREAKS IF RELAY REPOSITORY = TABLE AND CHECKPOINT_GROUP>=524288 Bug#12969454 - SET REASONABLE LIMITS ON SLAVE_* PARAMETERS RELATED TO MTS Bug#13062867 - VALGRIND FAILURE IN RPL.RPL_CIRCULAR_FOR_4_HOSTS The first bug is the main sub-case of Bug#12969454. The max value for @@global.slave_checkpoint_group is reduced to become the max bytes in BLOB field (see mysql.slave_worker_info table) times 8. The three more MTS configuration parameters maximum does not need any more refinements. Anyway sys_vars suite tests are edited. The issue with Bug#13062867 appears to deal with timing of reaching a state by Coordinator where an extra warning is printed out. The worker errors out correctly as specified by the test's logics. 	1c35cdd1d5cb2271711e272db642be9d1a8b37bc
----------------------------
BUG#11745230: 12133: MASTER.INDEX FILE KEEPS MYSQLD FROM STARTING IF BIN LOG HAS BEEN MOVED When moving the binary/relay log files from one location to another and restarting the server with a different log-bin or relay-log paths, would cause the startup process to abort. The root cause was that the server would not be able to find the log files because it would consider old paths for entries in the index file instead of the new location.  What's even worse, the relative paths would not be considered relative to the path provided in log-bin and relay-log, but to mysql_data_dir. We fix the cases where the server contains relative paths. When the server is reading from the index file, it checks whether the entry contains relative paths. If it does, we replace it with the absolute path set in log-bin/relay-log option. Absolute paths remain unchanged and the index must be manually edited to consider the new log-bin and/or relay-log path (this should be documented). This is a fix for a GA version, that does not break behavior (that much). For development versions, we should go with Zhenxing's approach that removes paths altogether from index files. 	67791697e4303355260fa97f5e4493b20e55c49b
----------------------------
BUG#13427949: CHANGE MASTER TO USER='' (EMPTY USER) CAUSES ERRORS ON VALGRING When passing an empty user to the connect function will cause valgrind warnings. Seems that the client code is not prepared to handle empty users. On 5.6 this can even be triggered by START SLAVE PASSWORD='...'; i.e., without setting USER='...' on the START SLAVE command (see WL#4143 for details on the new additional START SLAVE commands). To fix this, we disallow empty users when configuring the slave connection parameters (this decision might be revisited if the client code accepts empty users in the future). 	ce52bc978780830b89bef3a258d39a812ee7b355
----------------------------
ndb - bug#13400021 Dead lock with ndbcluster_binlog_index_purge_file The problem is that the disabling of binlog didn't work properly binlog-code acquired a mutex to check if statement needed to be binlogged (which it didn't). But..since the ndbcluster_binlog_index_purge_file is called with mutex held, this meant that it could deadlock The fix: if binlog-format is set to ROW, the code will discover that it doesn't need binlogging eariler, wo/ taking the problematic mutex. This is very weird...and indeed, in 5.5 this has been adressed so that the thread-local OPTION_BIN_LOG variable is checked prior to taking any mutexes. (hence this fix will null-merge to 7.2) 	c788bc432fde160f463b8ada6de5d5f1be06251e
----------------------------
"Fix for Bug#13249966 MRR: RANDOM ERROR DUE TO UNINITIALIZED RES WITH SMALL READ_RND_BUFFER_SIZE This bug is triggered by setting the system variable read_rnd_buffer_size so low that the created sort buffer used by DS-MRR is too small to fit a single key. When the range scan using DS-MRR starts, it is unable to store any keys in the sort buffer and an uninitialized return value is returned. This return value would have been given its initial value when the first record was read from the index. This causes either a random error value or wrong results from the range scan (zero records). The patch fixes two bugs in the DS-MRR implementation. Bug 1 (the original problem): The cause for this failure is found in DsMrr_impl::choose_mrr_impl(). One of its arguments is the buffer size which is initially specified by read_rnd_buffer_size. Before this is used as argument in the call to get_disk_sweep_mrr_cost() the following is subtracted from the buffer size: table->key_info[keyno].key_length + h->ref_length; The buffer size is stored as an unsigned integer and if it is smaller than the above expression, the result of the subtraction becomes a very large number. When get_disk_sweep_mrr_cost() is called with this huge buffer size, it concludes that there are plenty of room for storing keys in this buffer when it should have concluded that the buffer was too small for storing a single key. This causes the choose_mrr_impl() to return that DS-MRR should be used when it should have returned that the default MRR implementation should have been used due to too small buffer size. The subtraction (the above expression) from the buffer size in DsMrr_impl::choose_mrr_impl() was originally done because an early version of the DsMrr implementation used the sort buffer to store the current position of the scan each time it had filled the sort buffer. This was needed in order to be able to restart the scan next time it should fill the sort buffer. The subtraction was done to count for the space needed for storing the current position. This implementation has since been changed to use a second handler object for scanning the index. With this is place, there was no need for storing the current position in the sort buffer. The code for storing and reading the current scan position to/from the sort buffer has been removed but the reservation of space for it in DsMrr_impl::choose_mrr_impl() has been left in the code. The fix for avoiding that the buffer size is assigned a wrong value is to remove this subtraction. Bug 2: This fix solved the original bug but caused several query plans to wrongly change from using MRR or BKA to not using these. This was caused by a bug in DsMrr_impl::dsmrr_info(). This function first computes the cost for using the default MRR strategy by calling handler::multi_range_read_info(). This takes as one of its arguments a pointer to the buffer size. Since the default MRR implementation does not need a sort buffer, it sets the buffer size to zero. To avoid that this overwrites the original buffer size, a local variable def_bufsz is used in DsMrr_impl::dsmrr_info(). After the call to handler::multi_range_read_info() this will thus always be zero. The bug is that this local variable is used as argument when calling choose_mrr_impl() instead of the original buffer size stored in *bufsz. This causes choose_mrr_impl() to be called with a buffer size of 0 bytes, and as a result it will return that the default MRR implementation should be used (since the zery byte buffer size is too small). The reason this bug has not surfaced earlier is that it has been ""hidden"" by the first bug. When calling choose_mrr_impl() with a buffer size of 0 the subtraction in choose_mrr_impl() would (wrongly) change this to a very large buffer size that was large enough to use for DS-MRR (or in another way: this second bug sets the supplied buffer size to 0 in DsMrr_impl::dsmrr_info() and then the first bug compensated by changing the 0 byte buffer size to a very large buffer size in choose_mrr_impl()). The fix for this is to replace the bufsz and flags arguments in the call to choose_mrr_impl() to use the original values instead of the values in the local variables def_flags and def_bufsz. After this fix the implementation of DsMrr_impl::dsmrr_info() is similar to the corresponding implementation in DsMrr_impl::dsmrr_info_const(). "	fb41887c07529d8946cd03d41fd8568815e61f57
----------------------------
Fix innodb_lru_scan_depth_basic test as we change the value for mtr runs to 100 from 1024 	902156f3ad7509e6ef1aecec132151e90b826904
----------------------------
Make InnoDB LRU eviction less aggressive when the buffer pool is small by setting the value of innodb_lru_scan_depth lower. Aggressive eviction results in test failures which rely on certain pages to be in the buffer pool e.g.: innodb_information_schema 	e0964f20ebd90770fb8ca72eeacc256d806df733
----------------------------
Disable innodb_corrupt_bit.test on windows, issues with innodb_change_buffering_debug prevents creating the Dup Key scenario on windows 	8dab993a28cb523a3da0db82773519fec14959e4
----------------------------
"ndb index stat This patch adds a ""is_setup_complete"" method to Ndb_index_stat_thread The makes ndb-wait-setup also wait for ndb_index_stat_allow() == true if index-stat is enabled. This is good for several reasons, but not complete! We should later also check that not only ""ndb_index_stat_allow() == true"" but that the actual tables has been created, and that the listener is setup. However, all of this can be coded inside Ndb_index_stat_thread::is_setup_complete "	85526d624b6cd489d4ce89d709b2276aa56de95b
----------------------------
Bug#11748572:ALLOCATING A LARGE QUERY CACHE IS NOT DETERMINISTIC Setting query_cache_size to larger values might fail depending on the memory pressure being put on the system. This can be seen on pushbuild as the test case query_cache_size_basic tries to allocate a +3GB query cache, which succeeds in some machines and fails in others. So this part of the code where the test case tries to allocate +3GB query cache has been disabled for now to get the test running on pb2. 	922b3adcf89ef276304cc2e30596d0a783c4d169
----------------------------
"WL#6046 - Special handling of read-only transactions Split the trx_sys_t::trx_list into two: 1. trx_sys_t::ro_trx_list 2. trx_sys_t::rw_trx_list The debug flag that checks for list membership has been split into two too. The new rules around list membership and the new transaction state transitions can be found in trx0trx.h. The read view that is required for MVCC to work uses the trx_sys_t::rw_trx_list. Read-only transactions don't need to be considered in the this read view because they don't make any changes. An additional optimisation is to detect whether the SQL query is an aut-commit non-locking select. Such transactions don't go on either of the trx lists. This reduces the contention on the trx_sys_t::mutex further. Auto-commit non-locking selects set the trx_t::start_time once every 32 times, this is to further reduce system calls from trx_start_low(). These ac-nl-selects currently will not be displayed via ""SHOW ENGINE INNODB STATUS"" but only via the Information Schema. Add two new columns to the Information_schema.innodb_trx table. 1. trx_is_read_only 2. trx_autocommit_non_locking This WL depends on WL#5968 START TRANSACTION [READ (WRITE | ONLY)];, currently the function to query the read-only status of a transaction will always return FALSE. The function is there as stub only: thd_trx_is_read_only(); rb://800 Approved by Marko. "	511754f6851b85b55582e0fe67172b9c91ebec67
----------------------------
WL#5461 PERFORMANCE_SCHEMA MY.CNF Default Setup For the performance_schema_instrument configuration option: - Simplify code for trimming trailing spaces - Improve gcov coverage by adding trailing space to option value 	693ee947c4cd18f747d27e21433ef13c2e5e5eee
----------------------------
WL#5881 - Revert impl. of slave_allow_batching to default behaviour, allowing it to be changed although slave sql thread is running - Prefix variable with opt_ - Update test cases - Move opt_slave_allow_batching together with the other slave_ variables 	8470890d6d404db1a8cb428d6f158efa1c951049
----------------------------
WL#5881 - adapt test case to new(original) behaviour of slave_allow_batching 	1ab4078f60f48d415006037887d7ba1b727bffb9
----------------------------
"WL#5881 - revert to original functionality of ""slave_allow_batching"" thus allowing it to be changed also while slave sql thread is running - prefix the option variable with opt_ - move the code together with the other slave variables(thus inside HAVE_REPLICATION) "	57e59d8c1de850bcc70bf364f3e8941a8b2b28cd
----------------------------
WL#5461 PERFORMANCE_SCHEMA MY.CNF Default Setup Changes per code review: - Make new test cases platform- and compile option-generic - Issue warnings for invalid configuration options - Improve configuration option descriptions - Misc code tweaks 	53634c2929c9dcc3741e01f65b616be3eff4b80a
----------------------------
Fix bug #13400194 INNODB FTS SUPPORT: INNODB_FTS_LARGE_RECORDS DO NOT COMPLETE RUN ON WINDOWS. Also misc test cleanup: 1) add sys_vars test for newly added FTS configure varaibles 2) removed fulltext_plugin.test 	b9de03406589eedb2c8f9947a88ea9be895476d8
----------------------------
WL#5461 PERFORMANCE_SCHEMA MY.CNF Default Setup Changes per code review: - Support event name wildcards for performance_schema_instrument config option - Move my_getopt.c reformatting to separate commit - Handle default configuration for global events: idle, table io, table locks - Enable all instruments in default_mysqld.cnf 	4a85c9c1ad85806ca800153ff6bc5f1e2578f6c2
----------------------------
WL#5881 - cherrypick fix not to run test for slave_allow_batching with embedded 	72a44297e02e19b393be3ea61f87da007ad166d2
----------------------------
WL#5581 - skip test for slave_allow_batching in embedded mode 	0a18315acce6e9ba95a743e77fa7135abf3c9390
----------------------------
ndbcluster - cherrypick warning fixes from trunk-cluster 	51a9889550223266007e2cea6e9ad7bedef06c3b
----------------------------
WL#5881 - adapt the patch for slave_allow_batching from 5.5 to trunk 	48c34bc13a303b968946303c88397317140f2ca2
----------------------------
WL#5881 - cherrypick latest patch for slave_allow_batching from 5.5-cluster - remove MCP tags 	bdcfded9b09a78caf1473109188f3985b6a7d643
----------------------------
WL#5881 - improve the slave_allow_batching patch after review comments - add test case 	a57bdeae66aafec32a65ce736921dec00587c434
----------------------------
WL#5881 - move extern declarations for opt_server_id_bits and ot_server_id_mask to mysqld.h 	1e7b123426623f24798e9220e9e2ccc22be4f0ad
----------------------------
Fixed a problem in the new MRR implementation which caused ha_ndbcluster::multi_range_read_next() to loop forever when it was iterating an empty set of ranges. 	b140bc27e9c3178ea05b85f6daa8da5e9f44dcb4
----------------------------
WL#5881 - Add support for building ndbcluster without GSL hook 	0465c2d78f22b0e94a74277c30242555802079a3
----------------------------
WL#5881 - Fix support to build ndbcluster without COLUMN_FORMAT support 	5bbb1f3bece98b12b150f21c25f94310988f189b
----------------------------
ndb - lqh++ - this patch takes parts of mikaels patch to allow more then 4 lqh threads. Namely adds infrastructure to make redo-log-parts configurable 	c4c7e20cfc45dc59bc089fdf96df9856fa69b088
----------------------------
WL#5881 - remove the MCP patch for BUG#59948 and instead patch the problem in ha_ndbcluster::print_error (cherrypick fix from 5.5-cluster) 	38272703ba2ff8e7c9e06b0a4eb34171a119932c
----------------------------
WL#5881 - remove MCP_NDB_BUILD_INTEGRATION patch from cmake/configure.pl - remove small changes in BUILD/ 	332002d9d2e1a1001b17f7b54041bc18f0610dcc
----------------------------
MRR refactoring of ha_ndbcluster::multi_range_read_info() and ha_ndbcluster::multi_range_read_info_const() to use the same pattern as the DS-MRR implementation of these methods (DsMrr_impl::dsmrr_info_[const]) This should simplify future maintenance if this code if/when it changes. 	59089a1c618af0089506f3e619fca2a1710354a7
----------------------------
ndb - add optimizer_search_depth=10 to see if this helps daily RQG not to timeout 	ac2121835f2128cf46e2625231df9ca28e7f7129
----------------------------
"BUG#11761014 - 53466: END_CONNECTION() SHOULD REFERENCE GLOBAL_SYSTEM_VARIABLES.LOG_WARNINGS BACKGROUND: end_connection prints out messages like this, depending on *session* log_warnings value: Aborted connection 2 to db: 'unconnected' user: 'root' host: '' (Got timeout reading communication packets). This is wrong because it allows a minimally privileged user to write copious amounts of errors to the .err file, unless he is restricted by the number of MAX_CONNECTIONS_PER_HOUR in his user account. FIX: ""Aborted connection..."" messages are now printed based on the *global* log_warnings value. Since this was the only real remaining use of the session value of log_warnings, the log_warnings system variable has now been made to a global only variable. This is a change of behavior and must be reflected in the documentation. "	243bbc947d6d125bdd4a19e0358fe4014d25ee32
----------------------------
Fix for bug#13355055: CLUSTER INTERNALS FAILS TO TERMINATE BATCH AT MAX 'BATCHBYTESIZE' We have observed SCANREQs with a surprisingly small 'BatchSize' argument as part of debugging and tuning SPJ. Where we expected 'BatchSize=64' (Default) we have observed values around ~10. This directly translated into suboptimal performance. When debugging this, we found the root cause in NdbRecord::calculate_batch_size(), which returns the batchsize (#rows) and  arguments for the SCANREQ signal. It contained the following questionable logic: 1) Calculate the worst case record length based on that *all columns* are selected from a table, and all varchar() columns being filled to their *max limit*. 2) If that record length is such that 'batchsize * recLength' > , reduce batchsize such that batchbytesize would never be exceeded. This effectively put ::calculate_batch_size() in control of the batchbytesize logic. The negative impact if that logic was that 'batchsize' could be severely restricted in cases where we could have delivered a lot more rows in that batch. However, there are logic in LQH+TUP which are intended to keep the delivered batches withing the batchsize limits. This is a much better place to control this as LQH & TUP knows the exact size of the TRANSID_AI payload being delivered, taking actual varchar length and only the selected columns into acount. Debugging that logic, it turned out that it contained bugs in how the produced batchsize was counted: Actually a mixup between whether the 'length' was in specified in number of bytes or Uint32. - So the above questionable ::calculate_batch_size() logic seems to have been invented only to circumvent this bug...... Fixing that bug allowed us to now leave the entire batch control to the LQH block. - ::calculate_batch_size could then be significantly simplified. - The specified BatchSize & BatchByteSize arguments could be used as specified directly as args in SCANREQ signals. - Will likely give better performance (larger effective batches) when scanning a table with 'max record length > BatchByteSize / BatchSize' (~500 bytes with default config) Fix number of bytes/Uint32 mixup in how m_curr_batch_size_bytes is counted ****** Fix number of bytes/Uint32 mixup in how the SPJ adaptive parallelism count m_totalBytes ****** Simplify ::calculate_batch_size() as LQH now correctly will stay within the specified batch_size rows/bytes limits ****** Remove NdbRecord::m_max_transid_ai_bytes which is now obsolete ****** Remove unused args from NdbRecord::calculate_batch_size() ****** Fix SPJs adaptive paralellism logic to also handle batchsize termination due to BatchByteSize being exhausted 	49a6bec8ee517f57defdf0946650873c1fac16a7
----------------------------
ndb schema dist - first step towards determing in one place if NDB_SHARE should subscribe to events - move as much as possible for initializing share into 'NDB_SHARE::create' - share pointer is required both in 'ndbcluster_create_event' and 'ndbcluster_create_event_ops' 	af823eb0319ba459aef103f39aae42114db44455
----------------------------
WL#5825 Using C++ Standard Library with MySQL code Post-push fix: scripts/mysql_config* must distinguish between cflags and cxxflags. 	5ae60850cbafc9996e16700d953ca1429feaac5d
----------------------------
ndb schema dist - add Ndb_schema_event_handler::is_local_table and use instead of 'ndbcluster_check_if_local_table' 	bf97d2d080e9aca44eb3f7f6e52ff51dd94d125f
----------------------------
Bug#11748783 37359: FILESORT CAN BE MORE EFFICIENT Post-push fix: sort_buffer_size depends on platform (32 vs 64 bit) 	0d5a40d9a9912a9abe05d6bc365c12ff3d329f08
----------------------------
ndbcluster - move 'cmpfrm' to ndb_ndbapi_util.h 	306a5e422d69e4912aca2aa5db7d58384ace9ae4
----------------------------
ndbcluster - remove the need for MCP_BUG59948 by trapping the problematic cornercase in ha_ndbcluster::print_error instead of hardcoding it into 'handler::get_dup_key' 	a9120e520768a074ccfd3e32f5229a1bf48c7bcd
----------------------------
ndbcluster - remove uneccessary lock of ndbcluster_mutex and instead don't use the have_lock argument to 'get_share' 	9dcd551996f3ae645cf16ae7d744097d6589a38f
----------------------------
Fix for memory leaks in Record and in Config_v1 configuration reader. 	948eb2e1115e3881c6182f17afee1001e32ae3e7
----------------------------
WL#5461 PERFORMANCE_SCHEMA MY.CNF Default Setup Second phase of prototype with support for the following configuration option: pfs_instrument = '<instrument name> = <ON|TRUE|1|ENABLED|OFF|FALSE|0|DISABLED|COUNTED>' where ON = TRUE = 1 = ENABLED and OFF = FALSE = 0 = DISABLED and where ON  = timed, counted OFF = not timed, not counted COUNTED = not timed, counted This option is read-only. The effect of the option can only be seen in the SETUP_INSTRUMENTS table. It is not visible via SHOW GLOBAL VARIABLES. 	ac617bfb44672566315344cba47c177ba9c25664
----------------------------
ndbcluster - add class fucntion for destroying NDB_SHARE object 	fdbc876c510f13f06216e21e43adfd66b72c9e47
----------------------------
"ndbcluster - move the logic for ""have_lock"" out of 'ndbcluster_get_share' "	f7bcae233324b1462db6d4f4820d0a509808e8e4
----------------------------
ndb schema dist - hide the logic to check if ndb schema dist is ready into function 'ndb_schema_dist_is_ready' and use that function from all places but ha_ndbcluster_binlog.cc 	4e6e9ab217437b3b48a76632f2fe6408a1b995f6
----------------------------
"ndb schema dist - remove ""have_lock"" argument from ndb_schema_object functions - remove lock of ""ndbcluster_mutex"" before getting the ndb_schema_object, that is handled in the ndb_schema_object functions - no need to check if ndb_schema_object is NULL before releasing it, code would have crashed loong before if it was. - add call to release the ndb_schema_object in the CLEAR_SLOCK handler "	de719a63648bf92c3f2db4804c96d9944b5ac4d1
----------------------------
ndbcluster - fix faulty DBUG_PRINT, create_ordered_index -> create_index 	e34bfb943bb74682508cbc8b135a34c775d8f2be
----------------------------
ndbcluster - mark a few member functions as const to prevent that they fiddel with ha_ndbcluster too much 	b3c9d9b8187fab9b68a95572add06fb80fb1fec1
----------------------------
ndb schema dist - remove declaration of 'ndbcluster_log_schema_op' from ha_ndbcluster_binlog.h (should have been done as part of moving it to ndb_schema_dist.h) 	e8eb641edc2595eaa05c2c50137b2a7394cd463c
----------------------------
ndbcluster - move Ndb_binlog_type enum in to the only file where it's used 	c8b38049e52ad5ea1fa4853e4dc7ab46f8c344ff
----------------------------
ndb test - fix suppression in  ndb_share.test and remove the global suppression - the suppression is only active on the mysqld where it's inserted into the suppression table, thus it need to be done only for mysqld3 and mysqld4 which are run without --log-bin in this setup 	5d70ed881f88a588cb2bea02d4a116d6fcbaa5ba
----------------------------
ndbcluster - remove THD arg for 'Thd_ndb::recycle_ndb' since Thd_ndb already have member variable m_thd - make 'Thd_ndb::valid_ndb' const 	486025dbb07b1d0b5cf216f1b520f165b0d69e76
----------------------------
Merge: 37121da f0564a4 Merge in latest ndbcluster with schema dist refactorings 	ccc56666b586aa454e78d6004d500f7746735d3c
----------------------------
ndb schema dist - move 'ndbcluster_check_if_local_tables_in_db' into the Ndb_schema_event_handler class 	f0564a4878cf4ebaf06e89a374183c826343d6ab
----------------------------
ndb schema dist - change 'Ndb_schema_event_handler::ndbcluster_update_slock' to print warning to log instead of pushing it to thd, since this is a daemon thread no one would see those warnings. 	7167b4cf3d24eea4bc608397c5c7a090bf02fe4a
----------------------------
"ndbcluster - rename 'print_warning_list' to 'thd_print_warning_list'  and move it  to ndb_thd.h/cc since this has changed again in the ""future"" - remove glue code since abstraction is now on a h igher level "	bf422965985efb6076528d203de607d103d710e9
----------------------------
update mysql-test/suite/ndb/r/ndb_config.result to match configuration 	2aa1c0690dd58d432eb946a044c6c0028421021b
----------------------------
"ndb schema dist - pass own nodeid to constructor of Ndb_schema_event_handler and use it as ""own_nodeid"" to avoid hardcoded dependency on g_ndbcluster_connection "	d0b2c82bb94699e4cce8a68038516416f2b38f88
----------------------------
Default value for sort_buffer_size changed from 2M to 256K 	549db432645d68f5a193d8d9a751f939d6be06ff
----------------------------
ndb schema dist - change 'ndbcluster_get_schema' (which  is a function to unpack a schema_op from event_data) to become private function on Ndb_schema_op and rename it to 'unpack_event' - create new static function Ndb_schema_op::create for creating and unpacking a Ndb_schema_op from event_data - use the new functions 	fbe5538321fd84ca3cbc439bc37451ad2a72e852
----------------------------
ndbcluster - make 'ndbcluster_print_error' static, move it before the two places where it's used. 	4ae805c09be166d1a450523c8736f73743668031
----------------------------
ndbcluster - make ndbcluster_table_exists_in_engine static 	3873bd798007d84c56494efcb00ced0fa1b0cd2c
----------------------------
ndbcluster - Make 'ndbcluster_discover' function static, only called as handlerton callback 	ec5e5825efec92e28bc6ac0a2d0873178e125cf5
----------------------------
ndbcluster - forward portability fix, remove use of COND in favor of Item 	d00e8bd949c02998f9ccdfb6c5914456910f7fc7
----------------------------
ndbcluster - make the share memeber of Ndb_tuple_id_range_guard private 	65a9aa95f794050ca9731d6bb177f6cf1c489c2a
----------------------------
ndbcluster - move Ndb_tuple_id_range_guard into the only file where it's used 	99758ae6244ef63a092049ab7e19633d21ecc655
----------------------------
ndbcluster - move Ndb_binlog_extra_row_info to it's own file 	d51be5d08f03bf4d79e9abc8670acfe44f43bce4
----------------------------
Bug#13113222 RQG_SIGNAL_RESIGNAL FAILED WITH ASSERTION. The triggered assert checks that a matching condition is found inside the diagnostics area when a handler is activated. It was triggered in this case if the diagnostics area was full when the condition was reported (e.g. the area already contains max_error_count conditions). This meant that the diagnostics area did not contain a matching condition when the handler code tried to look for it. This was a regression introduced by WL#5986. This patch fixes the problem by temporarily making a condition in such cases so it can be handled properly. Test case added to sp-error.test. 	f296cd1942923cc31cebdef6541a1a99d2356b0e
----------------------------
ndbcluster - move' ndbcluster_find_all_files' to the only place where it's used in ha_ndbcluster_binlog.cc and make it static 	0b25a5a82b335441620e9ebe117a61288fba128c
----------------------------
ndbcluster - move prototypes for functions operating on NDB_SHARE to ndb_share.h - implementation of the above mentioned functions are still in ha_ndbcluster.cc(wonder why...) 	cc4103a62755e1a149236c11ffcfd42aefbcd923
----------------------------
ndbcluster - remove unused function 'set_binlog_flags' - NOTE, there is static function set_binlog_flags in ha_ndbcluster_binlog.cc with different args 	709336c60e0dccb8d201fd3380898cecd28fd623
----------------------------
ndbcluster - move  functions for setting of flags in NDB_SHARE to ndb_share.h 	0b11002d663ccbf5cd43911b4fa627a4db5b671f
----------------------------
ndbcluster - move NdbValue,  'ndb_pack_varchar' and 'get_ndb_blobs_value' to ndb_ndbapi_util.h - change use of ERR_RETURN -> DBUG_RETURN(-1), callers only check for 0 as in success anyway. 	f16040e89b3045f6e6a86bbfd1cb57470b9de944
----------------------------
ndb binlog - rename do_ndbcluster_binlog_close_connection to binlog_thread_state - declare the enum values inline in the function scope where it's used 	f83dcbfffbfad1db27f6e9402f10e036537a9746
----------------------------
Removed old MRR implementation from ha_ndbcluster (Dead code) 	b05aaac94aa929ba651fb53c42188c2e6f8cbd4b
----------------------------
The logic for counting 'm_pushed_queries_dropped' was duplicated in ha_ndbcluster::read_multi_range_first which caused that counter to be incremented twice. 	898ad328a0146dfb31ee1a2101f59eda377db8b0
----------------------------
ndb - further cmake (install) fixes - have_clusterj_inc - adopt to 5.5 install layout (?) - add shared lib version - install clusterj jars - move NDB_GET_CONFIG_VALUE into own file (used from several locations) 	b9be15c31ca63e0bfc501178818f7acac5f3f519
----------------------------
ndb schema dist - rename 'ndbcluster_binlog_close_table' to 'ndb_binlog_close_shadow_table' 	87f4afe290557f680aa8676d046c02223d29c9d6
----------------------------
BUG#11757032 - 49030: OPTIMIZE TABLE BREAKS MYISAM TABLE WHEN USING MYISAM_USE_MMAP ON WINDOWS When OPTIMIZE/REPAIR TABLE is switching to new data file, old data file is removed while memory mapping is still active. With 5.1 implementation of nt_share_delete() it is not permitted to remove mmaped file. This fix disables memory mapping for mi_repair() operations. 	3e0491c75802d0d0fcef6b7dc6fc242e456ece87
----------------------------
"Bug#13102538 : COMPILE ERROR ON SOLARIS WHEN COMPILING WITH LIBEDIT Libedit won't build on platforms that do not provide ""sys/cdefs.h"". Removed the inclusion of cdefs.h from all files other that sys.h, which includes this file only when the header is found while configuring. "	96abfdfd22f5cadd73de376e7fa5aa75ce5176da
----------------------------
ndb - readd the MCP hacks for cmake/configure.pl 	45bad56992c9a498378d2fc4a2e962d76be5feaa
----------------------------
ndb - remove MCP hacks from cmake/configure.pl - revert changes to BUILD/compile-ndb-autotest and BUILD/compile-pentium-debug-max-no-ndb 	8f4e5ffd15aa1c862a64a3f5a71c9256bcd7688d
----------------------------
ndb - fail the script if srcdir is already configured 	473e42d6164c2696f1fd8b621343850f10d0dca9
----------------------------
"ndb - rewrite compile-cluster to not depend on cmake/configure.pl - add --just-print and --just-configure - fix problem with ""make"" in out of source build - Remove old CMakeCache.txt before configuring "	018c78d01c298b4b3d166e757230911435694b4f
----------------------------
BUG#12402875 - BUG#60902: MYSQLDUMP DOES NOT DUMP THE REPLICATION *_INFO TABLES When WL#2775 was developed we decided to follow the pattern used by log tables where direct updates are forbidden. The idea was to later on provide users with the necessary commands to execute maintenance tasks against the replication tables such as changing the engine in use or dumping data. However, after pushing the WL#2775, we have realized that this would unnecessarily duplicate code, i.e. functionality. So, in this patch, we revert the code that follows the behavior adopted by log tables and allow any sort of statement to be executed against the replication tables. This change causes a side effect that it is worth noticing. It has made the relay-log-info file or not-transactional tables being updated optimistically prior to committing an user transaction that is being executed. This may lead to data loss if a crash happens as the user transaction can be rolled back but it won't be re-applied automatically upon restart. This patch also makes sure that the server fails gracefully if some unexpected changes are executed against the tables. For example, if some columns are dropped. 	86f0118fefcaf5924597c8ca85f70b15003d247b
----------------------------
Bug#11750518 41090: ORDER BY TRUNCATES GROUP_CONCAT RESULT When temporary tables is used for result sorting result field for gconcat function is created using group_concat_max_len size. It leads to result truncation when character_set_results is multi-byte character set due to insufficient tmp table field size. The fix is to increase temporary table field size for gconcat. Method make_string_field() is overloaded for Item_func_group_concat class and uses max_characters * collation.collation->mbmaxlen size for result field. max_characters is maximum number of characters what can fit into max_length size. 	b195e6f9433d7d293faadd834af6edee79133278
----------------------------
Add --build and --no-build switch to allow for only configuring 	cd48dd850841d81cfe94d13b4ed1ae2ada168d58
----------------------------
"BUG#11765553 - 58534: MYSQL_INSTALL_DB PRINTS INCOMPLETE OPTION NAME BACKGROUND: ""--skip-grant"" is an incomplete option name. It should be ""--skip-grant-tables"" in mysql_install_db.sh.Besides,full option name should be displayed, not some arbitrary shorthand. FIX: One change has been made in file mysql_install_db.sh at line 408 where ""shell> $mysqld --skip-grant &"" is replaced by ""shell> $mysqld --skip-grant-tables &"" to complete the option name. "	db82f53cb459d88feeae4e38fec7f3a89a4da110
----------------------------
"Merge: 6f0574d 4e21719 Backmerge the changes of the 5.6.3 build into main ""trunk"". This brings the following changesets: Marc Alff 2011-09-26 BUG#12993572 - P_S STANDBY MODE CAUSES PERFORMANCE DROP Guilhem Bichot 2011-09-23 Fix for Bug#13009176 ""USE DATABASE BREAKS OPTIMIZER TRACE IF THERE IS A VIEW IN THE SCHEMA"" Luis Soares 2011-09-22 BUG#12987771: REPLICATED STATEMENTS ARE DUPLICATED Olav Sandstaa 2011-09-20 Fix for Bug#12976163 ""CRASH IN INDEX CONDITION PUSHDOWN CODE AGAINST Evgeny Potemkin 2011-09-19 Bug#12977203: SERVER CRASH ON A DERIVED TABLE WITH QUERY CACHE ENABLED Sunny Bains 2011-09-17 Bug 12982772 - SERVER DOES NOT START WITH INNODB_UNDO_TABLESPACES (SYSTEM ERROR 32 FILE IN USE) Evgeny Potemkin 2011-09-15 Bug#12910006: MRR initialization on a derived table caused crash. Georgi Kodinov 2011-09-13 Bug #12925024: MYSQLD_SAFE IGNORES THE VALUE OF PLUGIN_DIR FROM MY.CNF Gleb Shchepa 2011-09-09 Bug #12949629: CLIENT LOSES CONNECTION AFTER EXECUTING Andrei Elkin 2011-09-09 Bug#12947451 - MTS: ERROR LOG GETS FLOODED WITH SYNCHRONIZATION-RELATED MESSAGES (NOTES) Oystein Grovlen 2011-09-07 WL#5285 Guilhem Bichot 2011-08-31 1) fix for BUG#12905521 - ASSERT IN OPT_TRACE_STMT::SYNTAX_ERROR ON SELECT DISTINCT/MIN/JOIN/SUBQ QUERY Jonathan Perkin 2011-08-30 Bump milestone. Joerg Bruehe 2011-08-30 [merge] Merge a RPM packaging bugfix into the 5.6.3 release clone. hery.ramilison@or... 2011-08-29 Applying patch from vasil.dimov@oracle.com for OS X build failure Conflicts: Text conflict in VERSION Text conflict in mysql-test/include/icp_tests.inc Text conflict in mysql-test/r/derived.result Text conflict in mysql-test/r/innodb_icp.result Text conflict in mysql-test/r/innodb_icp_none.result Contents conflict in mysql-test/r/join_cache_bka_nobnl.result Contents conflict in mysql-test/r/join_nested_bka_nobnl.result Contents conflict in mysql-test/r/join_outer_bka_nobnl.result Text conflict in mysql-test/r/myisam_icp.result Text conflict in mysql-test/r/myisam_icp_none.result Contents conflict in mysql-test/r/select_all_bka_nobnl.result Contents conflict in mysql-test/r/select_icp_mrr_bka_nobnl.result Contents conflict in mysql-test/r/select_none_bka_nobnl.result Contents conflict in mysql-test/r/subquery_all_bka_nobnl.result Contents conflict in mysql-test/r/subquery_nomat_nosj_bka_nobnl.result Contents conflict in mysql-test/r/subquery_none_bka_nobnl.result Contents conflict in mysql-test/r/subquery_sj_all_bka_nobnl.result Contents conflict in mysql-test/r/subquery_sj_dupsweed_bka_nobnl.result Contents conflict in mysql-test/r/subquery_sj_firstmatch_bka_nobnl.result Contents conflict in mysql-test/r/subquery_sj_innodb_all_bka_nobnl.result Contents conflict in mysql-test/r/subquery_sj_innodb_none_bka_nobnl.result Contents conflict in mysql-test/r/subquery_sj_loosescan_bka_nobnl.result Contents conflict in mysql-test/r/subquery_sj_mat_bka_nobnl.result Contents conflict in mysql-test/r/subquery_sj_none_bka_nobnl.result Text conflict in mysql-test/suite/opt_trace/r/general_no_prot_all.result Text conflict in mysql-test/suite/opt_trace/r/general_no_prot_none.result Text conflict in mysql-test/suite/opt_trace/r/general_ps_prot_all.result Text conflict in mysql-test/suite/opt_trace/r/general_ps_prot_none.result Text conflict in mysql-test/t/derived.test Contents conflict in mysql-test/t/join_cache_bka_nobnl.test Contents conflict in mysql-test/t/join_nested_bka_nobnl.test Contents conflict in mysql-test/t/join_outer_bka_nobnl.test Contents conflict in mysql-test/t/select_all_bka_nobnl.test Contents conflict in mysql-test/t/select_icp_mrr_bka_nobnl.test Contents conflict in mysql-test/t/select_none_bka_nobnl.test Contents conflict in mysql-test/t/subquery_all_bka_nobnl.test Contents conflict in mysql-test/t/subquery_nomat_nosj_bka_nobnl.test Contents conflict in mysql-test/t/subquery_none_bka_nobnl.test Contents conflict in mysql-test/t/subquery_sj_all_bka_nobnl.test Contents conflict in mysql-test/t/subquery_sj_dupsweed_bka_nobnl.test Contents conflict in mysql-test/t/subquery_sj_firstmatch_bka_nobnl.test Contents conflict in mysql-test/t/subquery_sj_innodb_all_bka_nobnl.test Contents conflict in mysql-test/t/subquery_sj_innodb_none_bka_nobnl.test Contents conflict in mysql-test/t/subquery_sj_loosescan_bka_nobnl.test Contents conflict in mysql-test/t/subquery_sj_mat_bka_nobnl.test Contents conflict in mysql-test/t/subquery_sj_none_bka_nobnl.test Text conflict in sql/rpl_rli_pdb.cc 47 conflicts encountered. "	de224bbdc1ea11593a8473eccc34bf855f039880
----------------------------
Merge: b495935 9c68ca6 Bug #12844282 62075: MTR TESTS SHOULD NOT HAVE TO SAVE & RESET INNODB_FILE_FORMAT_CHECK This is a redo for 5.5 Added 'innodb_file_format_max' as variable to ignore change to. Tests that had to restore this amended Two tests assumed it to be Antelope, make sure these run on a freshly started server 	3d2eff9715210d991b5924042be36a52dfc1fe3d
----------------------------
ndb - remove the setting of NDB_WITHOUT_SERVER_ID_BITS based on MySQL version (unifying with trunk-cluster) - it will be set in storage/ndb/CMakelists.txt if server does not have the feature 	2921fd649ebcf9db71bdb2dba1dc8f38863ac9b3
----------------------------
Bug#12664445: Added test cases for the variables: -INNODB_ANALYZE_IS_PERSISTENT -INNODB_MONITOR_DISABLE -INNODB_MONITOR_ENABLE -INNODB_MONITOR_RESET -INNODB_MONITOR_RESET_ALL -INNODB_PRINT_ALL_DEADLOCKS -INNODB_STATS_PERSISTENT_SAMPLE_PAGES -INNODB_STATS_TRANSIENT_SAMPLE_PAGES -INNODB_SYNC_ARRAY_SIZE Now the sys_vars.all_vars result file does not have any variables listed in it. 	efe43b515a721ed5c189c690bda35f2e3fa559a6
----------------------------
"Fix bug#11886309: RPM UPGRADE OF MYSQL ADVANCED GPL TO MYSQL SERVER ADVANCED DOES NOT WORK Change the RPM spec file so that each RPM ""obsoletes"" the corresponding RPMs of all (other) configurations, so a ""server"" RPM of any configuration can replace the ""server"" RPM of any other configuration on a ""rpm -U"". "	961f0fd0fc0b29f8519661ba75f78a989886710c
----------------------------
Bug#11759044 - 51325: DROPPING AN EMPTY INNODB TABLE TAKES A LONG TIME WITH LARGE BUFFER POOL rb://767 approved by: Marko When dropping a table (with an .ibd file i.e.: with innodb_file_per_table set) we scan entire LRU to invalidate pages from that table. This can be painful in case of large buffer pools as we hold the buf_pool->mutex for the scan. Note that gravity of the problem does not depend on the size of the table. Even with an empty table but a large and filled up buffer pool we'll end up scanning a very long LRU list. The fix is to scan flush_list and just remove the blocks belonging to the table from the flush_list, marking them as non-dirty. The blocks are left in the LRU list for eventual eviction due to aging. The flush_list is typically much smaller than the LRU list but for cases where it is very long we have the solution of releasing the buf_pool->mutex after scanning 1K pages. buf_page_[set|unset]_sticky(): Use new IO-state BUF_IO_PIN to ensure that a block stays in the flush_list and LRU list when we release buf_pool->mutex. Previously we have been abusing BUF_IO_READ to achieve this. 	2563f7103a246bb530dfd39d20015d69ba9fdf7f
----------------------------
"ndb - exclude generated header files ndb_version.h, ndb_types.h and ndb_config.h from ""make dist"" "	55f5fdc1b6c370877bfb982bc955cb8345b733f9
----------------------------
"BUG#11747866:REPLICATE-REWRITE-DB DOESN'T WORK WITH SINGLE CHARACTER DATABASE NAMES Problem: replicate-rewrite-db option doesnot work with single character database names. The last character was being trimmed from the ""from"" database name. Background: Since the loop handling the option, has to handle invalid arguments for the option,while stripping the whitespaces, it was stripping one character from the ""from"" database name. In case where there was only one character, this threw an error as ""empty from database name"". Fix. Revamped the loop handling this option. Made sure that the whitespaces are suitably trimmed and the correct ""to"" and ""from"" databases names are passed to the function handling the replicate_rewrite_db functionality. "	0fc3303193992709fd9e3ee0937698bba44a9c43
----------------------------
Online reconfiguration. This revision compiles and passes the test suite on my laptop. 	d1118dba84807632f2752742a42debf49e71c2d4
----------------------------
ndb/memcache Configuration -- small fixes 	0c459f5a781a4752192b35c8066e38204729c8c2
----------------------------
Changes to online reconfiguration in S Scheduler. Online reconfig is actually thread-safe now, protected by a read/write lock. Online reconfig in the scheduler now *only* udpates the Configuration pointer, the generation number, and the list of QueryPlans. So it is not currently possible to add a cluster or to grow the pool of Ndb objects using online reconfig. This change also adapts both schedulers to use ConnQueryPlanSet. 	baedba759c54ea57941d6e9b189787bbd8463dad
----------------------------
ndb - remove include of rpl_mi.h from ha_ndbcluster_push.cc, it's not accesing any server internals for replication 	707cc217a9bced2cf20185780dbafd0f22e5b773
----------------------------
ndb - make it possible to compile ndbcluster without AQP - revert previous changes to AQP - remove ending braces comments(which mostly were wrong) 	36943bd42e9e92d0e5eaa329edf7eb7bb96a455c
----------------------------
memcache: Rather than keeping an Ndb object (and eventually leaking it), Configuration and Config_v1 allocate an Ndb on the stack when they need one. 	914ea4da26c7ac0706a91af52144d2d0720118a3
----------------------------
ndb - add missing release of ndbcluster_dropped_tables, found in valgrind PB2\! 	8cf90ec0b9a9e3d525a25acf880b01f65953fb22
----------------------------
"Add ""innodb_direct_access_enable_binlog"" configure option and its related APIs to allow applications using InnoDB API to decide whether binlog option is turned on or not. "	d498a9f33bba2b9fa15e81412ca84092ccc6100b
----------------------------
Refactor how the ndb_memcache test suite uses & checks for online reconfiguration. 	9fc60d00295449aec63a402ede07716f8e73fe90
----------------------------
"Data alignment issue: Configuration needs to obtain key buffers and row buffers using malloc(), which will be ""suitably aligned for any purpose,"" rather than C++ new char[] which might not be. "	17f6cce373e7e40d078ce5fb9e11bebddbf9a729
----------------------------
ndb - build AQP as part of ndbcluster - build ndbcluster without join pushdown 	1a0620c3b0bdc2fc67a47df5c148b0c567f2bb4a
----------------------------
ndb - resurrect abstract_query_plan.h/.cc, they are part of ndbcluster until adopted by server team 	b32ecf45513bfc8fddb395ace839562179b080dd
----------------------------
ndb - make it possible to compile ndbcluster without koin pushdown - make it possible to compile AQP as part of ndbcluster(used in MySQL Server version which does not yet have AQP) 	79b501b89a6d4ac1449e81928681ad390de30e0b
----------------------------
ndb - rewrite ha_ndbcluster::is_primary_key_clustered() to not need a new index flag defined in handler.h. Instead simply look at the index type and if it's an ordered index type return true. 	3d205a20f1274f3f73302c657ac8a5809e1602b4
----------------------------
MCP - remove MCP tags from ha_ndbcluster(no need to MCP tags in there) 	47a430421a1842ac4e1d32575dfb75c375345306
----------------------------
MCP - remove MCP patch for WL#4080 since ha_ndbcluster has been rewritten to store the master_epoch in an internal structure 	f4a7576ad7618b2d9fb3d9d0f132e3363f7bec7c
----------------------------
BUG#11758062 - 50206: ER_TOO_BIG_SELECT REFERS TO OUTMODED SYSTEM VARIABLE NAME SQL_MAX_JOIN_SI BACKGROUND: ER_TOO_BIG_SELECT refers to SQL_MAX_JOIN_SIZE, which is the old name for MAX_JOIN_SIZE. FIX: Support for old name SQL_MAX_JOIN_SIZE is removed in MySQL 5.6 and is renamed as MAX_JOIN_SIZE.So the errmsg.txt and mysql.cc files have been updated and the corresponding result files have also been updated. 	92d96d143751121e37fa69efd06ea4a877f3040d
----------------------------
Bug #12844282 62075: MTR TESTS SHOULD NOT HAVE TO SAVE & RESET INNODB_FILE_FORMAT_CHECK Added 'innodb_file_format_check' as variable to ignore change to. Tests that had to restore this amended Two tests assumed it to be Antelope, make sure these run on a freshly started server For 5.5, apparently innodb_file_format_max is the one to ignore 	d2e2260d4b516ccc4e5d280f4238668bb5fc016b
----------------------------
ndb - remove locking of m_local_config_mutex in MgmtSrvr::start as this introduces a lockdep assertion 	96b5ef3a9c91af590a769de9735f58d26c92df1b
----------------------------
ndb - This patch adds a few new NdbClusterConnectionConnect tests, and adds them to daily-basic 	a101e91397f4010ccb70eb5aacd1e0ba27643c0a
----------------------------
Fixed test sys_vars.all_vars: innodb_large_prefix no longer missing 	ae41b0073ba1e3eb04e6a7e56a52f47bcd27c2fe
----------------------------
ndb - make it possible to compile ndbcluster with ot without online alter support 	97613832b54b643c146ca4487645ba6bc8857c32
----------------------------
ndb - add config part (still only explicit, using ThreadConfig) of MT-TC - remove ThreadConfig-printout from ndbd (single threaded) 	dc7d28107e53c63693d73e626f9676a636bd4232
----------------------------
ndb - fix incorrect code in spj, blocking multi instance spj config 	fb03b35e0e6198cccfda36c2b8f01687bd1fd40c
----------------------------
"ndb - bug#12543299 - increase default values of ndb-wait-connected and ndb-wait-setup to 30 from 0 and 15 resp. This is there previously was a ""hidden"" wait of 30s that now has been removed "	56d4afa4bad5de73b7fc42640cfccdf14289919e
----------------------------
ndb - move the plugin code first in file so it's possible to build the NDB binaries only when building ha_ndbcluster. MYSQL_ADD_PLUGIN will set WITH_NDBCLUSTER variable which is used to tell wheter to build or not. - unfortunate sideeffect is that all of NDB is built with sql/, regex/ and SSL_INCLUDE_DIRS as include directories. Workaround one problem caused by this where taocrypt/include/file.hpp collides with ndb/include/util/File.hpp 	a331009d08c0a4fd07cb8316cb61457a060aa230
----------------------------
"ndb dist priv - make sure binlog format is switched back to stmt before binlogging create/drop user. Wo/ this it crashed with ""./mtr --mem --mysqld=--binlog-format=mixed rpl_ndb.rpl_ndb_dist_priv"" "	a335e26d1189f7b46db1bdfcefcd6c4701c9d70f
----------------------------
WL5353 : Implement v2 of Binlog row events WL5353 introduced a new optional Binlog row event format containing 'extra row information'.  This is used to transfer row transaction ids.  The addition of extra row information was not backwards compatible, so it was possible for user error to result in a Slave crash for example. To ensure that inadvertant use of the new row event format does not cause any problems, this patch modifies the row event ids, so that old Slaves which do not understand the new format will not attempt to process the events. To ensure that online upgrades are possible, a new MySQLD option is added. --log-bin-use-v1-row-events=1 will cause MySQLD to use the original 'v1' Binlog row events, which older slaves will understand. --log-bin-use-v1-row-events=0 will cause MySQLD to use the new 'v2' Binlog row events, which are capable of carrying row transaction ids. The --ndb-log-transaction-id option can only be set to on when v2 row events are being generated, e.g. when --log-bin-use-v1-row-events=0. By default, mysql-5.1-telco-7.0 and mysql-5.1-telco-7.1 generate v1 row events (--log-bin-use-v1-row-events=1).  mysql-5.5-cluster (7.2) generates v2 events (--log-bin-use-v1-row-events=0).  This implies that row based replication from a mysql-5.5-cluster Master to an old mysql-5.1-telco-7.[0|1] Slave will not work, unless the mysql-5.5-cluster Master has --log-bin-use-v1-row-events=1 set explicitly. Note that this option is only required for replicating to _old_ servers, without support for v2 Binlog events. 	54ad3ba4605030bbd12953c12405d098f0b12bc5
----------------------------
Memcached exits with clear message if config tables are not found. Install memcache-api directory with README file and sandbox script. 	4cb28674fe162766adb4b008cfec2175b1d674b7
----------------------------
Bug#13002546 OBSOLETE CONFIG.INI FILES FOR MYSQL CLUSTER IN SUPPORT-FILES/ - remove the four .ini files from bzr and CMakeLists.txt 	110372922fef914007045caea1b896529b1f99b1
----------------------------
ndb - choose RelWithDebinfo as default build configuration on Windows 	01c172b414aaacad47cf3e0da71fee059c75b9e6
----------------------------
Bug 11766870 - 60097: NDB_CONFIG TO DUMP CONFIG VERSION FOR DATA NODES-Testfix 	41d9f6ea39d1b82c10b07727155ce202e2b9b353
----------------------------
"ndbapi -Fix problem where Ndb_cluster_connection::connect always returned -1 when it failed to allocate nodeid. Now returns 1 if the error is not fatal. - Fix a problem where Ndb_cluster_connectin::connect had hardcoded values for ""no_retries""  and ""retry_delay_in_seconds"". Now those two values how long the function will retry both connect and alloc nodeid - Fix bug in ConfigRetriever::allocNodeId, where the return code of ndb_mgm_connect was interpreted wrong, causing the function to return or retry even if the connect suceeded. Refactor function slightly. -  Add testcase for Ndb_cluster_connection::connect() returning 1 when it can't connect to ndb_mgmd and also when it get a non fatal error returned while allocating nodeid. "	93c2882cbdaf5701dfc8873280cd20dc577c0666
----------------------------
"Add configure system variable ""daemon_memcached_enable_binlog"" to control the InnoDB memcached's binlog activity. "	04127690b51d3c9ca83123bb40a224de1deae53d
----------------------------
Merge: 5976065 fe1335d Merge: CMake fixes: don't redefine GCC_ATOMIC detection; help linker find ndb libraries. Also remove ndbmemcache_config.h from bzr (it is generated by cmake) 	03d9f9f8e2e18968244ae9945be47ffcb0e5845e
----------------------------
CMake fixes: don't redefine GCC_ATOMIC detection; help linker find ndb libraries. Also remove ndbmemcache_config.h from bzr (it is generated by cmake) 	fe1335ddf7f97dacfb36e99295298b5426be223a
----------------------------
Bug 12982772 - SERVER DOES NOT START WITH INNODB_UNDO_TABLESPACES (SYSTEM ERROR 32 FILE IN USE) The bug is that we don't close the file after filling it wil zeros. This is a bug on all OSes but showed up under Windows. Do not print warnings when the on_error_silent flag is set under Windows. Approved by Inaam over IM. 	5f20040308f2b3d41e30b3fba44f36d5bfe8d86a
----------------------------
Merge: d52cfbe 76f3c25 Fix for auth_rpl test. The test is fixed to provide correct password for the account using test authentication plugin. Also, the --master-retry-count option which is now obsolete is replaced by a corresponding clause of CHANGE MASTER TO command. 	1f51766163428dbbaec77f9899aa2d50ef1f5468
----------------------------
"First batch of changes to implement memcached binlog operations. The binlog operation is now controlled by ""innodb_eng->enable_binlog"", but will link to a InnoDB memcached configure variable in the next checkin. "	340070e804b350147353dfa1abfdce1bd60d7b3e
----------------------------
Bug#11755237 Got error 4350 'Transaction already aborted' from NDBCLUSTER: AUTO_INCREMENT not set properly for INSERT IGNORE causing DBUG_ASSERT in handler.cc 	ace4b52e53aeed2dfa8a48f035ad5b90ba8d9c5b
----------------------------
BUG#12981684 - MTS KEEPS COMPLAINING ABOUT MISSING RELAY-LOG.INFO WITH REPOSITORY = TABLE Removed code that was introduced to track down BUG 11766392. We have figured out that the problem was an issue in the environment. 	fd3e4d87bcf35d1d4b73b41ef8201d7d6db9d75f
----------------------------
ndb - testMgm fix 1: allow get_config_from(X) where X == id of ndb_mgmd that you connect to 	f2d3179d0e0373baf0f03c7e8b1408eb0f88cd54
----------------------------
Prevent InnoDB system stats tables to be created in MyISAM format if mysqld is running with --skip-innodb and --default-storage-engine=myisam This tweak comes as a response to Bug#12958616 HIDDEN CHANGE IN SERVER CONFIGURATION/INSTALLATION PROCESS (PERSISTENT STATS) 	b0d62efbbb5ef1e302b0a76f334405fa4660b0a7
----------------------------
Bug #12925024: MYSQLD_SAFE IGNORES THE VALUE OF PLUGIN_DIR FROM MY.CNF Fixed the order of variable initialization in mysqld_safe by moving the inteligence around guessing the plugin-dir after reading the config files so any specification in any of the config files would be taken into account. 	0bdcc0d2051e32936ec8c4d2d412480a588a9b74
----------------------------
WL5353 Primary Cluster conflict resolution - transactional - A new --ndb-log-transaction-id option is added to the MySQL Server - A new NDB$EPOCH_TRANS() conflict detection algorithm is added - Five new status variables for tracking the behaviour of transactional conflict detection. The NDB$EPOCH_TRANS() function is similar to NDB$EPOCH, except that detected conflicts result in rejection and realignment of not just the conflicting rows, but their transactions, and any transactions transitively depending on them.  This gives eventually consistent asynchronous replication with cross-row transaction consistency. 	9074018eedbbf2c3b091482b6aeaced08f1b907b
----------------------------
Configurable timer in the NDB API send thread (from 1 ms to 10 ms) 	0dbd6fc246b7642bc636c03b74e0566d24d68282
----------------------------
BUG#12929345 : Execution aborts without any messages (Windows only) This patch corrects an unsafe string concatenation for a Windows-specific code segment. The symptoms were, under certain conditions like specifying the location of my-print-defaults and the basedir, and run on a release build, the client would exit without printing any messages. 	5acc7cacae5be0153487092dc47869a07f70da14
----------------------------
Updated MTR test ndb_gis to use the new syntax: 'set @@optimizer_switch = 'engine_condition_pushdown=on'. Accepted new .result file which has changed due to trunk optimizer changes. 	9599d172d8a55cdd04e88157cd942538c17b85cd
----------------------------
"WL#5285 Change optimizer_switch flag ""batch_key_access"" to ""batched_key_access"". Similar change for EXPLAIN output. "	f92077323b31a825379025a72e0736452e5fe5a3
----------------------------
Rename WITH_COMPILER_HINTS to INNODB_COMPILER_HINTS. Remove COMPILER_HINTS_ENABLED Both errors were introduced when adding the build configuration option: --innodb-compiler-hints := on|off Spotted by Marko and approved by Marko over IM. 	dea08170dcbf639af7d4855576335b67ab758975
----------------------------
BUG#11766826: TEST RPL.RPL_SLAVE_LOAD_REMOVE_TMPFILE AGAIN FAILS WITH --MEM The test case rpl_slave_load_remove_tmpfile checks if the slave fails gracefully when the temporary file used for processing LOAD DATA is removed when it is about to be used. Now... Fix for BUG 11765751 changed the server behavior due to security reasons. The logic that must be enforced is: 1. normalize the string 2. check against pattern 3. check file. However, in the case of broken symlinks the server/slave will not be able to normalize the path, thus will end up mathching normalized against non-normalized paths. Eventually, it will end up with an error stating that LOAD FILE operation is not allowed because it does not match the slave-load-tmpdir pattern. We fix the test case by adding the error code 1290 to the list of expected errors. 	a55b75e2720ae0daaad19ff02b020acfe2191d4a
----------------------------
ndb - allow configure/cmake to use environment variable CLASSPATH if --with-classpath has not been provided 	4b4d5eb04ee5ed72d2317f4675326df8a0d254b8
----------------------------
Bug 12866669 - COMPILER HINTS CAUSE PERFORMANCE TO DROP Make the compiler hints optional during a build. Introduce config variable: --innodb-compiler-hints := on|off The default value is still ON. Changing it to OFF we will do separately. With this change at least we have a mechanism to test whether they are useful or not. So far they have been shown to cause minor regression instead of improving performance. It is possible that they were useful in the past. rb://742 Approved by Jimmy Yang. 	d7a1a4d66bd64fafa5d67ed80b205cb95c5bca67
----------------------------
ndb - fix unit test of mt_thr_config 	cdbb09378eb1d48b004d07dc2d6d1cb36d1a7da6
----------------------------
ndb - Add ThreadConfig variable 	4d1944151f6b45ce04b13494aab2c615c7242361
----------------------------
BUG#11766870 60097: NDB_CONFIG TO DUMP CONFIG VERSION FOR DATA NODES - additional fixes 	8abd5305fea8f800e0b770022cd4e3708d73a2b6
----------------------------
This commit concerns pushed queries (i.e. using NdbQueryOperation etc.) with child scan operations. This commit does the following: 1) Earlier, the api would try to set batch size (in bytes and rows) high enough to run child scans with full parallelism, even if this meant exceeding configuration limits (as set by BatchByteSize, BatchSize, and MaxScanBatchSize). The downside of this was that you could potentially get very large batches. (With 64 fragments and 10k records you could get 64x64x10k=40M.) Since sequential child scans (+ adaptive parallelism) have now been implemented we no longer need to run child scans with full parallelism. Therefore, we no longer need to exceed the limits from the configuration. This commit  therefore use the batch size (in bytes and rows) that NdbReceiver::calculate_batch_size() suggests. Child scans may then run with reduced parallelism if the allowed number of rows is lower that the number of fragments. (But the user may increase BatchByteSize and MaxScanBatchSize to counter this.) 2) This commit changes how QueryNodeParameters::batchSize is used. Instead of 16 bits for number of rows and 16 for number of bytes, there is now 11 bits for number of rows and 21 for number of bytes. The maximal values for the BatchByteSize and BatchSize configuration variables are 1 megabyte and 992 rows, so 16 bits was not enough for representing all legal values (large values were silently truncated). 	8f117e5924995d08eebcb2b86ec166cf275eb12a
----------------------------
ndb - fix windows problems in mt_thr_config 	10b1df649e1cd31735eefcee6a69a509bff1289d
----------------------------
ndb - change to use THRConfig for thread-config (not yet cpu-bindings) 	92be1072aacf1204181cb25892a89de4bc579690
----------------------------
ndb - setupConfiguration prior to get_multithreaded_config (prep for THRConfig usage) 	d1289f63b30332b69cf41407d1665948927a7141
----------------------------
ndb - add new config parameter for unified thread-config 	7a9b4dd21f2d35b994005053aae6cc9a38688fb1
----------------------------
"Change innodb_ft_min_token_size and innodb_ft_max_token_size from ""byte"" based to ""character"" based. Also change ""uft8"" field in fts_string_t to ""f_str"", as we now deal with various character strings other than ""utf8"". "	0d742e9af59447569459cfacd36713ac063e5524
----------------------------
Rearrange code so that it compiles with MEB. 1. Move the checksum config variable definition to buf0checksum.c 2. Move the checksum config variable declaration to buf0types.h 3. Move the UNDO tablespace parameters outside the #ifndef UNIV_HOTBACKUP 4. srv_file_per_table is hard coded as 1 for MEB, removed from dodgy UNIV_HOTBACK #ifdef in srv0srv.h 5. Move the UNDO tablespace config parameters out of the !UNIV_HOTBACKUP #ifdef block. Approved by Marko rb://753 	ec4e44011c5200f37e80660f67803acf37f5ed90
----------------------------
Bug# 12906961 MTR CHECK FAILS AFTER PARTITION_INNODB TEST DUE TO INNODB_THREAD_SLEEP_DELAY When InnoDB thread concurrency throttling is enabled, by default it will use the adaptive sleep delay feature. To make the result deterministic, save and restore the default sleep delay in the test. Approved by Jimmy over IM. 	9677f3d149b2a7106361db607778bb6d24c01531
----------------------------
Remove the vestige of timed_mutexes for the UNIV_DEBUG case. 	3a455b55329b90fd0cc02595ab8ed1bb309de155
----------------------------
ndb - move thread configuration out into own class. currently it's in ndbd.cpp and mt.cpp new class implements old behaviour as well as method suggested on dev-ndb (which everyone seems to be happy with...that has spoken) new class is intended to be used by both ndbmtd and ndb_mgmd so that thread-configuration can be verified by ndb_mgmd when reading config.ini (currently it's just ignored in ndbmtd if it's incorrect) This patch just introduces class, including tap-test but does not use it in neither ndbmtd nor ndb_mgmd... that is next patch(es) 	d1fbc7e1d7c3b86f197de876a51d65843d42df41
----------------------------
ndb - remove some obfsuscation in Configuration.cpp wrt lock-to-cpu handling 	d8a20f1bd988efee190cf07b96cae8b61693dacc
----------------------------
ndb - set ndb_index_stat_enable=TRUE in >= 7.2.0 	fbe3414badab8fbf71bdd14fcfc9c82f3202cf93
----------------------------
Fix deprecation messages for innodb_additional_mem_pool_size and innodb_use_sys_malloc - mention innodb_use_sys_malloc in the message for innodb_additional_mem_pool_size, not the other way around. 	bef60160e67c74919ed1b9ba067e36b2756ef443
----------------------------
Implement WL#5652 InnoDB: Use HW CRC32 + Introduce a new option innodb_checksum_algorithm that may have the following values: * crc32 Write CRC32 to both checksum fields (calculated using CPU instructions if supported). When reading allow any of the valid checksums to match (flexible allowing old files to be read, but increases the possibility for announcing a corrupted page to be valid). Still if one of the two fields contains CRC32, the other one must contain CRC32 too. * strict_crc32 Write CRC32 to both checksum fields When reading allow only CRC32 to match (will announce old files as corrupted, but minimizes the possibility to announce a corrupted page as valid). * innodb Write InnoDB calculated (custom algorithm) checksum to both checksum fields (different algo is used for each field). When reading allow any of the valid checksums to match. * strict_innodb Write InnoDB calculated (custom algorithm) checksum to both checksum fields (different algo is used for each field). When reading allow only InnoDB algorithm to match. * none Write a constant magic number to both fields When reading do not do any checks on the checksum fields (same as setting innodb_checksums=OFF) * strict_none Write a constant magic number to both fields When reading allow only the constant magic number to match. + Deprecate innodb_checksums (use innodb_checksum_algorithm=NONE instead) + Remove copy-pasted InnoDB source from extra/innochecksum.c and link the innochecksum executable with libinnobase.a + For the above to work extract the functions innochecksum needs in a dedicated files + Add the Facebook contributed CRC32 implementation into ut0crc32.c 	17e497bdb793bc6b8360aa1c626dcd8bb5cfad1b
----------------------------
"Fix bug#37165 ""((Generic rpm)) fail to install on Fedora 9 x86_64"" On Fedora, certain accesses to ""/var/lib/mysql/HOSTNAME.err"" were blocked by SELinux policy, this made the server start fail with the message Manager of pid-file quit without updating file Calling ""/sbin/restorecon -R /var/lib/mysql"" fixes this. "	b2648c9036058ae323ca032f3b09a91270405b6e
----------------------------
"WL#5596 MTS Here is the total cset combining all revisions done since Sep 2010. Comments from the original commits are pasted in reverse chronological order. ------------------------------------------------------------ revno: 3364 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-08-18 17:09:22 +0300 message: wl#5569 MTS Refining rpl_rotate_logs that could not produce deterministic output. The list of binlogs contained one binlog more than expected. @ mysql-test/suite/rpl/r/rpl_rotate_logs.result results updated. @ mysql-test/suite/rpl/t/rpl_rotate_logs.test Refining a method of verification of the binlog rotation due to its max size: we check if the first log has been rotated by comparing its name before and after feeding load to the master. Notice, that as the former so the new current proof methods are not perfect as that part of the test really needs to demostrate every binlog file is less than @@max_binlog_size. ------------------------------------------------------------ revno: 3363 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-08-18 14:56:01 +0300 message: updating result files that were left incorrect by the last merge. ------------------------------------------------------------ revno: 3362 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-08-18 14:44:59 +0300 message: wl#5569 MTS Failure in recovery when binlog-checksum is active. The reason of the failure was in that parsing of relay log by MTS recovery gaps computing did not make sure to use the relay-log own FormatDescriptor events that contain checksumming info for all events in the log. Fixed with taking care to find out the checksum algorithm for every relay log as the first step of MTS recovery gaps computing. @ mysql-test/suite/rpl/t/rpl_mixed_mts_rec_crash_safe_checksum-master.opt forcing master to checksum. @ mysql-test/suite/rpl/t/rpl_mixed_mts_rec_crash_safe_checksum-slave.opt forcing slave to *not* checksum. @ mysql-test/suite/rpl/t/rpl_mixed_mts_rec_crash_safe_checksum.test same as rpl_mixed_mts_rec_crash_safe but to run in master with checksum and slave without own checksum. The test verifies that checksum does not affect recovery. Lack of own checksumming on slave allows to test more scenarios. @ sql/rpl_slave.cc Search for the checksum algorithm FD is added. Notice that the first three events to read is enough to find out the master side checksum alg. ------------------------------------------------------------ revno: 3361 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-08-17 11:21:23 +0300 message: merge from trunk forced to resolve few semantical conflicts caused by changes in THD::enter_cond() of the trunk. ------------------------------------------------------------ revno: 3360 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-07-27 08:56:14 +0100 message: Fixed failure in test rpl_mts_check_concurrency when running in the mts collection. ------------------------------------------------------------ revno: 3359 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-26 19:46:41 +0100 message: Added a test case that checks if MTS allows to concurrently access the replication tables, and as such, concurrently commit transactions that update different databases. ------------------------------------------------------------ revno: 3358 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-22 20:08:43 +0100 message: Configured rpl_parallel_switch_sequential to run in row and mixed mode to avoid cluttering the error log with messages on unsafe execution. ------------------------------------------------------------ revno: 3357 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-22 19:02:14 +0100 message: This patch contains the following fixes: . Removed suppressed warning introduced in the wrong test case (i.e. rpl_corruption) and put it in the correct one (i.e. rpl_row_corruption). . Introduced variable to avoid clutering the error log with several warning messages on unsafe execution. ------------------------------------------------------------ revno: 3356 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-22 11:01:12 +0100 message: This patch has the following changes: . Specific directories were created for the MTS runs in the default.push. . Warning message was suppressed in the rpl_corruption.test. . Annoying debug outputs were removed from the error log. However, this is a temporary solution as it forbids to enable traces. ------------------------------------------------------------ revno: 3355 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-07-20 11:56:40 +0100 message: merge mysql-trunk --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3354 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-19 22:26:30 +0300 message: wl#5569 MTS valgrind reported a stack on rpl_savepoint. The problem appears to be in that at computing slave_sql_running_state in show_mater_info() the sql thread proc_info pointer could refer to a value in a stack that has already gone. Fixed with making proc_info to point to a string literal. ------------------------------------------------------------ revno: 3353 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-19 17:46:43 +0100 message: Suppressed warning messages that could potentially cause problems while running mts crash safe test cases. ------------------------------------------------------------ revno: 3352 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-07-18 21:46:45 +0300 message: wl#5569 MTS Cosmetic changes are done to address readability and clearness of source code of the MTS patch. @ sql/binlog.cc Comments improved. @ sql/log_event.cc Warning text is improved. @ sql/log_event.h More comments are added. @ sql/rpl_rli.h More comments are added. @ sql/rpl_slave.cc Error constant was changed. @ sql/share/errmsg-utf8.txt Error constant is changed. ------------------------------------------------------------ revno: 3351 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-07-18 14:52:44 +0300 message: wl#5569 MTS Inadvertently introduced hunk two rev:s back is reverted to please rpl_*_mts_crash_safe. ------------------------------------------------------------ revno: 3350 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-07-17 00:51:45 +0300 message: wl#5569 MTS fixing build issue for embedded. Public visibility for Rows_log_event::do_apply_event() is restored. ------------------------------------------------------------ revno: 3349 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-07-16 20:08:31 +0300 message: wl#5569 MTS The patch contains improvements after code review. Changes are mostly consmetic. @ mysql-test/suite/rpl/r/rpl_parallel_start_stop.result results updated. @ sql/binlog.cc correcting comments. @ sql/field.cc renaming. @ sql/log_event.cc renaming and separating out a block of code in Log_event::get_slave_worker() into a new method of Slave_job_group class; some cleanup. @ sql/log_event.h Extending and improving comments; renaming to follow is_, get_, set_ pattern; restoring the private access to do_apply_event() in Rows_log_event. @ sql/mysqld.cc removing extra declaration. @ sql/rpl_info_factory.cc Minor comments is added. @ sql/rpl_rli.cc renaming to make _cnt suffix to all entities that have counter meaning in mts; improving comments. @ sql/rpl_rli.h Renaming, and improving comments for the new members to Relay_log_info. @ sql/rpl_rli_pdb.cc remaning. @ sql/rpl_rli_pdb.h Improving comments readability through adding legengs defining MTS specific abbreviations. @ sql/rpl_slave.cc Renaming; minor cleanup in sql_slave_killed(); adding comments on Seconds_behind_master update policy with MTS. @ sql/share/errmsg-utf8.txt Improving text of few errors. ------------------------------------------------------------ revno: 3348 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-07-16 02:11:11 +0300 message: bug#12755663 MTS: RPL_CIRCULAR_FOR_4_HOSTS FAILS: CANT EXECUTE THE CURRENT EVENT GROUP MTS stopped with an error in the middle of the test. The reason is that a group of events from the slave itself was processed partly to modify the group position. In the following restart the wrong group bondary made slave either to error out or assert. Fixed with locating a possible race condition allowin Coordinator to ignore actual failed status of a Worker. So in the case of the test, the slave server group can't be started. Notice, this is a trial patch since I can't catch the failure on available to me hosts at all. @ sql/rpl_rli_pdb.cc Changing the running status of the Worker before it releases assigned entries. That ensure that the waiting in wait_for_workers_to_finish() Coordinator exits the function with a negative result and therefore stops without attempting to apply an event due to which it attempted synchronization. Couple of diagnostics into error log are added. They may be removed in short while but currently might be helpful to provide details if the failure won't disappear after this push. ------------------------------------------------------------ revno: 3347 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-07-14 12:40:06 +0300 message: WL#5569 MTS further extensive rpl_circular_for_4_hosts exersices with --repeat 10 --parallel=8 revealed a race condition in that Coordinator might miss to catch not-running status for a Worker. That made Coordinator to skip only a part of a group of the slave server own events so the slave stops at not the bondary of a group. Fixed with moving marking of the errored-out Worker as failed prior to its APH entries release. TODO: notice there can be a possibility to stop at not the boundary due to graceful STOP SLAVE if one is run at time of skipping self-originated events. However this issue belongs to STS and might be similar with BUG@12604951 and BUG@12728160. @ mysql-test/suite/rpl/r/rpl_circular_for_4_hosts.result results are updated. @ mysql-test/suite/rpl/t/rpl_circular_for_4_hosts.test tests is updated with a new text of a suppression. @ sql/log_event.cc Adding clarifying text to an error message when parallel execution fails. @ sql/rpl_rli_pdb.cc Moving marking of the errored-out Worker as failed prior to its APH entries release. That ensures Coordinator always finds the non-running status in a case it has to know that (wait_for_workers_to_finish()). @ sql/share/errmsg-utf8.txt Adding a format specifier for a clarifying text. ------------------------------------------------------------ revno: 3346 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-07-14 08:03:55 +0100 message: Post-push fixes for WL#5569 Injecting faults while updating a myisam table requires to flush the changes before committing suicide. So we have introduced the follwing code: DBUG_EXECUTE_IF(""crash_after_commit_and_update_pos"", -                       DBUG_SUICIDE();); +           sql_print_information(""Crashing crash_after_commit_and_update_pos.""); +           flush_info(TRUE); +           DBUG_SUICIDE(); Besides we improved some comments. ------------------------------------------------------------ revno: 3345 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-07-13 16:23:57 +0100 message: WL#5569 @ mysql-test/extra/rpl_tests/rpl_mts_crash_safe.inc Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository. @ mysql-test/include/not_slave_worker_info_table.inc Removed this feature as option --slave-worker-info-repository was removed too. @ mysql-test/suite/rpl/t/rpl_mixed_mts_crash_safe-slave.opt Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository. @ mysql-test/suite/rpl/t/rpl_mixed_mts_rec_crash_safe-slave.opt Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository. @ mysql-test/suite/rpl/t/rpl_row_crash_safe-slave.opt Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository. @ mysql-test/suite/rpl/t/rpl_row_mts_crash_safe-slave.opt Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository. @ mysql-test/suite/rpl/t/rpl_row_mts_rec_crash_safe-slave.opt Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository. @ mysql-test/suite/rpl/t/rpl_stm_mixed_crash_safe-slave.opt Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository. @ mysql-test/suite/rpl/t/rpl_stm_mts_crash_safe-slave.opt Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository. @ mysql-test/suite/rpl/t/rpl_stm_mts_rec_crash_safe-slave.opt Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository. @ mysql-test/suite/sys_vars/t/slave_worker_info_repository_basic.test Removed this test case as option --slave-worker-info-repository was removed too. @ sql/binlog.cc Improved code as requested by reviewers. @ sql/lock.cc Removed mistake that got into sql/lock.cc after merging with trunk. @ sql/log_event.cc Introduced parameter force in commit_positions function to determine if flush must be executed regardless of sync options. @ sql/rpl_info.h Updated doxygen comments and removed a change to avoid conflicts when merging with trunk. @ sql/rpl_info_factory.h Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository. @ sql/rpl_rli.cc Introduced parameter force in commit_positions function to determine if flush must be executed regardless of sync options. @ sql/rpl_rli_pdb.cc Improved the code and introduced parameter force in commit_positions function to determine if flush must be executed regardless of sync options. @ sql/rpl_rli_pdb.h Introduced parameter force in commit_positions function to determine if flush must be executed regardless of sync options. @ sql/rpl_slave.cc Removed duplicated code. @ sql/sql_parse.cc Reintroduced flag removed by mistake when merging with trunk. See also sql/lock.cc. @ sql/sys_vars.cc Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository. ------------------------------------------------------------ revno: 3344 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-07-13 00:10:43 +0300 message: wl#5569 MTS merge trunk -> wl5569-tree ------------------------------------------------------------ revno: 3343 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-12 23:36:17 +0300 message: wl#5569 MTS adding suppression due to expected warning to rpl_circurlar_for_4_hosts; decreasing a loop limit in rpl_parallel_switch_sequential in case of statement format. ------------------------------------------------------------ revno: 3342 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-12 14:46:23 +0300 message: WL#5569 MTS Fixing code and test due to rpl.rpl_circular_for_4_hosts  mismatch failure, like http://pb2.norway.sun.com/?action=archive_download&archive_id=3608382. The reason of the mismatch was that when having two group of events to execute, the first for a Worker and the 2nd for Coordinator, Coordinator waited for the 1st group completion but did not verify success of synchronization. So in a case of the failed applying of the 1st group processing of the 2nd could find an inconsistent state to end up with a segfault (even though only the mismatch has been seen so far). @ mysql-test/suite/rpl/r/rpl_circular_for_4_hosts.result results are updated. @ mysql-test/suite/rpl/t/rpl_circular_for_4_hosts.test Test is updated to include a part specific to MTS. While all former conditions hold, the new section makes sure B server has two group of events to send which was not previously guaraneed nor necessary. Further, when the first of the two fails with Duplicate entry at applying of the 2nd Coordinator senses the first failure and gives out the 2nd. The first error remains to be seen in show-slave-status. @ sql/log_event.cc Checking wait_for_workers_to_finish() return code in case Coordinator executes a sequential-mode event. Comments are deployed in few other places where that is unnecessary to do. @ sql/rpl_rli_pdb.cc Worker marks itself as failed to apply which fact is reported to Coordinator also through wait_for_workers_to_finish(). Coodinator shall check the error code in a branch of a sequential event applying. @ sql/rpl_rli_pdb.h Adding a new state that Worker sets itself to indiate its failure to apply. @ sql/rpl_slave.cc Refining an assert as consequence of the new state and its actual setting by Worker. ------------------------------------------------------------ revno: 3341 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-07-10 22:40:01 +0100 message: Avoiding busy waiting when running mts recovery tests. ------------------------------------------------------------ revno: 3340 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-07-09 23:11:58 +0100 message: Removed --slave-checkpoint-period from MTS test cases. ------------------------------------------------------------ revno: 3339 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-07-09 23:08:07 +0100 message: Improved test cases for the WL#5569. ------------------------------------------------------------ revno: 3338 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-08 22:40:52 +0300 message: wl#5569 MTS The patch refines logics of applying phase of MTS-recovery to always applying events that are for Coordinator; fixes few tests to make them passable on PB; makes GAQ size to be of checkpoint_group value. @ mysql-test/suite/rpl/t/rpl_parallel_switch_sequential.test attempting to decrease execution time that currently might be too much for some PB hosts. @ mysql-test/suite/rpl/t/rpl_row_crash_safe-slave.opt Making the test to run in parallel mode with Workers having the table as their info storage. @ mysql-test/suite/sys_vars/r/slave_checkpoint_period_basic.result results updated. @ mysql-test/suite/sys_vars/t/slave_checkpoint_period_basic.test masking out the actual value of slave_checkpoint_period. @ sql/log_event.cc Never skip events that are for Coordinator as indicated by mts_execution_mode(). @ sql/rpl_rli.h Improving comments. @ sql/rpl_slave.cc Simplifying while condition of the GAQ-progress loop and deploying an assert ensuring checkpoint_group parameter and GAQ state are combined correctly. ------------------------------------------------------------ revno: 3337 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-08 07:54:34 +0100 message: Reduced the timeout period to run the checkpoint routine by setting slave-checkpoint-period to 30. ------------------------------------------------------------ revno: 3336 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-08 07:44:35 +0100 message: merge mysql-trunk --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3335 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-07-06 12:46:05 +0300 message: wl#5569 MTS refining wait for db-hash entry release at event distribution. The graceful STOP is not accepted at this point so Coordinator continues to stay in a loop. ------------------------------------------------------------ revno: 3334 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-05 20:43:04 +0300 message: bug#12719875 possible MTS recovery issue. MTS stopped with an error after failing to apply an event. It turned out that the event was sceduled incorrectly due to earlier stop by Single-Threaded Slave not at the group boundary but rather in the middle of it. Fixed with forcing CREATE..SELECT be logged as two groups. The CREATE-TABLE group is surrounded with its own BEGIN/COMMIT braces. @ mysql-test/suite/rpl/r/rpl_parallel_switch_sequential.result new results file is added. @ mysql-test/suite/rpl/t/rpl_parallel_switch_sequential-slave.opt transaction retry is not supported yet by MTS. @ mysql-test/suite/rpl/t/rpl_parallel_switch_sequential.test Regression test for bug#12719875 is added. Notice, created tables engine is Innodb also because with MyISAM stop-slave can be actually in the middle a group of myisam table events so the following restart fails with a dup key error. CREATE-SELECT is not tested according to another bug as commented. @ sql/log_event.cc changing error report style to be actually effective: rli->report() does not make rli->info_thd to return from is_error() true. my_error() message eventually gets to the show-slave-status sql-error at the end of slave sql thread. @ sql/rpl_slave.cc fixing a possible hanging that can happen due to errored-out worker at time of gaq is full and the worker was the first to update it; refining  asserts; shifting stop_workers() routine to a point where slave sql has not reset its errors which pleases a refined assert in slave_stop_workers(rli). ------------------------------------------------------------ revno: 3333 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-07-04 18:14:09 +0300 message: wl#5569 MTS Adding a rule to run PB with all suites in MTS with binlog-format ROW. @ .bzr-mysql/default.conf restoring commits@. @ mysql-test/collections/default.push adding a rule to run all suites in MTS with binlog-format ROW. ------------------------------------------------------------ revno: 3332 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-07-03 23:29:34 +0300 message: wl5569 MTS cleanup in one file. @ sql/rpl_rli.cc removing traces of a mutex that was served in prototyping support for temporary tables. ------------------------------------------------------------ revno: 3331 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-07-03 23:16:02 +0300 message: wl5569 MTS bzr commit mail address changed; a minor cleanup to make mts_is_worker() with const argument; releasing a test to run in MTS. ------------------------------------------------------------ revno: 3330 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-07-02 08:58:56 +0100 message: Fixed use of the performance schema in the replication code and concurrency issue in the IO Thread. In particular, the IO Thread was calling flush_master_info without grabbing locks. ------------------------------------------------------------ revno: 3329 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-01 16:41:35 +0300 message: wl5569 MTS merging from the main repo. ------------------------------------------------------------ revno: 3328 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-01 15:48:25 +0300 message: wl#5569 MTS the final cleanup patch. There are few glitches that were considered as tolerable at least for time of the total wl's code is being reviewed. That includes: - no support to old load-data events - no support for FK to add to the list, there are few places in the patch that suggests to deploy error branches each time flush_info() is called. @ sql/log_event.h cleanup. @ sql/rpl_reporting.cc introducing a new public method in order to be callable from Slave_worker executed code. @ sql/rpl_reporting.h the earlier do_report is renamed and a new do_report() is made a way to allow child classes to redefine its own way. The child class is suppose to call child->report() and to have child::do_report() 's designed behaviour. @ sql/rpl_rli_pdb.cc addressing an OOM issue at delete of curr_group_exec_parts. @ sql/rpl_rli_pdb.h deploying do_`method' pattern. @ sql/rpl_slave.cc cleanup. ------------------------------------------------------------ revno: 3327 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-01 13:16:52 +0300 message: wl#5569 MTS The patch cleans up some host of code. @ sql/log_event.cc cleanup, comments improved, logics of decision in Log_event::apply_event on mts execution mode is simplified. Moving flush_info() of Rotate_log_event::do_update_pos() into inc_group_relay_log_pos(). @ sql/log_event.h cleanup and merging logics of former mts_async_exec_by_coordinator() with mts_sequential_exec() which is turned to be called from a new mts_execution_mode(). Reducing visibility of mts members of Log_event hierarchy to match the needs. @ sql/rpl_rli.cc cleanup, renames and moving flush_info() inside inc_group_relay_log_pos(). @ sql/rpl_rli.h Cleanup and comments improved. @ sql/rpl_rli_pdb.cc Cleanup; renames; comments; a new Slave_worker::init_worker() is defined to be called at starting the Worker pool per each worker. Its initialization instructions are migrated from from slave_start_single_worker(). @ sql/rpl_rli_pdb.h Cleanup and comments improved. @ sql/rpl_slave.cc cleanup; replacing collection of initializations for a Worker in slave_start_single_worker() into a new Worker::init_worker(). @ sql/sql_class.h cleanup. ------------------------------------------------------------ revno: 3326 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-28 11:30:18 +0300 message: wl#5569 MTS replacing views with regular tables for consistency verification in rpl_parallel_innodb. Also a minor cleanup in rpl_parallel is done. ------------------------------------------------------------ revno: 3325 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-27 20:31:45 +0300 message: wl#5569 MTS Cleanup and addressing sporadic rpl_temp_table_mix_row failure in post-execution mtr.check_testcase(). The check of the test failure was caused by faulty optimization in avoiding to migrate temporary tables from Coordinator to Workers in case of rows-event assignement. while it's correct with the homogenous rows-event only load, the mixture can fail. Fixed with removing the optimization so map_db_to_worker() always relocates which is somewhat suboptimal and should be improved in future. @ mysql-test/suite/rpl/t/rpl_temp_table_mix_row.test Adding slave synchronization. @ sql/log_event.cc cleanup to move circular_buffer releated definitions into rpl_rli_pdb that is specialized on objects dealing with Worker, its assignement etc. improving comments; also instead of former separate flag indicating a T-event requires post-scheduling synchronization with the Worker is turned into a bit of existing Log_event::flags which also avoids ungliness of #if/#endif:s. @ sql/log_event.h instead of former separate flag indicating a T-event requires post-scheduling synchronization with the Worker is turned into a bit of existing Log_event::flags; @ sql/rpl_rli.cc cleanup: renaming. @ sql/rpl_rli.h cleanup: renaming, more comments. The former mts_wqs_overrun is converted into two: the statistics parameter mts_wq_overrun_cnt and the internal control parameter mts_wq_excess. @ sql/rpl_rli_pdb.cc Included rpl_slave.h that holds two necessary declarations; Cleanup: accepting circular_buffer related definitions migrated from log_event, improved comments, renaming, removing dead code @ sql/rpl_rli_pdb.h Cleanup: renaming and more comments are added. @ sql/rpl_slave.cc Augmenting print-out of statistics at the end of MTS session; cleanup: renaming. @ sql/rpl_slave.h Introducing two constants to define range of worker_id domain and a magic value of undefined worker. @ sql/sys_vars.cc replacing a literal int value with a symbilic constant. ------------------------------------------------------------ revno: 3324 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-27 13:12:52 +0100 message: Ensured that updates to the worker_info_repository are transactional and fixed the slave_checkpoint_group_basic test case. ------------------------------------------------------------ revno: 3323 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-26 13:02:59 +0100 message: Fixed test case. ------------------------------------------------------------ revno: 3322 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-06-25 15:14:24 +0100 message: Introduced test case for recovery with MTS and fixed bugs in recovery. ------------------------------------------------------------ revno: 3321 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-24 15:38:19 +0300 message: wl#5569 MTS This patch makes a bit of cleanup, addresses one memory-allocation todo and completes fixing valgrind report (rpl_parallel_start_stop) due to strings allocation in Slave_job_group items. ------------------------------------------------------------ revno: 3320 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-24 12:38:34 +0300 message: wl#5569 MTS this patch completes the previous one to fixes a result file and make the innodb specific test verification to base on tables not views. ------------------------------------------------------------ revno: 3319 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-24 00:11:22 +0300 message: wl#5569 MTS this is an exploratory patch to sort out if verification method what was based on views has its own not related to mts flaw. The patch calls verification macro on the tables that required some adjustment. ------------------------------------------------------------ revno: 3318 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-06-23 07:56:15 +0300 message: wl#5569 MTS fixing results of mysqld--help-win. ------------------------------------------------------------ revno: 3317 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-22 19:20:40 +0100 message: merge mysql-next-mr-wl5569 (local) --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3316 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-22 19:17:43 +0100 message: In some platforms, such as Windows, thread's wait time is stored in 100ns units. However, when computing the difference between two values, the result value was not multiplied by 100. Besides, there was a casting problem when the aforementioned result value was assigned to an ulong. ------------------------------------------------------------ revno: 3315 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-22 18:54:23 +0100 message: Fixed how mts copes with recovery. ------------------------------------------------------------ revno: 3314 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-21 19:10:54 +0300 message: wl#5569 MTS Fixing valgrind warnings. @ sql/log_event.cc w->running_status is verfied to find out the actually sought running status of a Worker. THD can be unavainlable that's what a valgrind report was about. @ sql/rpl_rli_pdb.cc commenting out an assert that valgrind does not like. @ sql/rpl_rli_pdb.h new method is added to be invoked at MTS shutdown. @ sql/rpl_slave.cc Invoking gaq cleanup at the end of MTS session. ------------------------------------------------------------ revno: 3313 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-21 18:15:43 +0300 message: wl#5569 MTS rpl_parallel_start_stop.test could fail sporadicaly with timeout. @ mysql-test/include/wait_for_slave_param.inc Correcting comments and handling of passed by caller $slave_timeout to make sure the unit of 1 second really holds. Introduced symbolic default_timeout, sleep_freq(uency) to procude time to sleep in between of two polls. @ mysql-test/suite/rpl/t/rpl_parallel_start_stop.test Since the default time to wait is less than one for innodb's wait for lock, the time to wait for error is set explicitly. ------------------------------------------------------------ revno: 3312 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-20 23:21:56 +0100 message: merge mysql-next-mr-wl5569 (local) --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3311 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-20 23:19:06 +0100 message: Fixed error when computing the Lower-Water-Mark. If two or more jobs were removed from the Group of assigned jobs and one of the jobs had a non-empty group relay log but the last one had an empty group relay log. The Lower-Water-Mark was not correctly updated, because the algorithm assumed that the group relay log was null. ------------------------------------------------------------ revno: 3310 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-20 11:52:44 +0100 message: Fixed valgrind errors. Slave_job_group was silently being cast to LOG_POS_COORD while calling sort_dynamic(&above_lwm_jobs, (qsort_cmp) mts_event_coord_cmp) and by consequence mts_event_coord_cmp(LOG_POS_COORD *, LOG_POS_COORD *). This had two problems: . The first two entries in the Slave_job_group were not a pointer to a char * and my_offset. . Even if the first two entries were char * and my_offset, such casting could lead to alignment problems. To fix the problem, we avoid this casting. ------------------------------------------------------------ revno: 3309 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-19 19:14:50 +0300 message: wl#5569 MTS fixing slave_transaction_retries_basic_64.result ------------------------------------------------------------ revno: 3308 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-19 16:11:25 +0300 message: wl#5569 MTS fixing tests. @ mysql-test/extra/rpl_tests/rpl_extra_col_master.test MTS-supperssion is necessary because the test is supposed to stop slave due to an error. @ mysql-test/extra/rpl_tests/rpl_relayrotate.test Load decreasing to prove a warning was caused by slow environment so waiting to accept the killed status by SQL thread was ended by 1 min timeout. @ mysql-test/suite/rpl/r/rpl_relayrotate.result results updated. @ mysql-test/suite/rpl/t/rpl_stm_000001.test A macro is expanded in order to isolate which branch of two activities a suffered timeout failure belongs in. @ mysql-test/suite/sys_vars/r/slave_transaction_retries_basic_64.result Fixing results of 64 version of the test that was editted in the prev push. ------------------------------------------------------------ revno: 3307 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-19 12:33:36 +0300 message: wl#5569 MTS Fixing rpl.rpl_mixed_binlog_max_cache_size that revealed incorrect asynchronous handling of a Rotate event which does not split the current group and therefore has to be executed after all previously scheduled events. Fixing sensetivity of two other tests to mtr's invocation environment that includes inital values of slave_parallel_workers and slave_transaction_retries. @ mysql-test/suite/sys_vars/inc/slave_transaction_retries_basic.inc made test insensetive to the value of slave_transaction_retries in mtr env. @ mysql-test/suite/sys_vars/r/slave_parallel_workers_basic.result made test insensetive to the value of slave_parallel_workers in mtr env. @ mysql-test/suite/sys_vars/r/slave_transaction_retries_basic_32.result made test insensetive to the value of slave_transaction_retries in mtr env. @ mysql-test/suite/sys_vars/t/slave_parallel_workers_basic.test made test insensetive to the value of slave_parallel_workers in mtr env. @ sql/log_event.cc get_slave_worker() passes need_temps argument as FALSE is case of rows-events. Correcting the actual value of `mts_in_group' of mts_async_exec_by_coordinator(). ------------------------------------------------------------ revno: 3306 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-19 09:04:19 +0100 message: Fixed some windows failures. ------------------------------------------------------------ revno: 3305 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-06-18 19:58:21 +0100 message: Fixed some recovery issues. ------------------------------------------------------------ revno: 3304 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-17 21:01:58 +0300 message: wl#5569 MTS fixing tests and a segfault at the end of handle_slave_sql() happened after worker initialization failed (e.g rpl_row_log on win). @ mysql-test/extra/rpl_tests/rpl_loaddata.test MTS-suppression is added. @ mysql-test/suite/rpl/r/rpl_loaddata.result MTS-suppression is added. @ mysql-test/suite/rpl/r/rpl_stm_loaddata_concurrent.result MTS-suppression is added. @ mysql-test/suite/sys_vars/t/disabled.def constant nuisanse is disabled in the feature tree. Todo: do not merge it when pushing to the main tree. @ sql/rpl_slave.cc Moved workers initialization after one of the coordinator so that failure in the former routine is handled with a proper state of coordinator. . This fix eliminates segfault at the end of handle_slave_sql() for few tests but does not address the reason of worker initialization failure, like in rpl_row_log on win: 110616  7:37:57 [Note] Info file G:\pb2\test\sb_1-3486364-1308189142.46\mysql-5.6.3-m5-win-x86_64-test\mysql-test\var-rpl-ps_row\4\mysqld.2\data\relay-log.info.0 cannot be accessed (errno 13). Most likely this is a new slave or you are  changing the repository type. 110616  7:37:57 [ERROR] G:/pb2/test/sb_1-3486364-1308189142.46/mysql-5.6.3-m5-win-x86_64-test/sql/Debug/mysqld.exe: File 'G:\pb2\test\sb_1-3486364-1308189142.46\mysql-5.6.3-m5-win-x86_64-test\mysql-test\var-rpl-ps_row\4\mysqld.2\data\relay-log.info.0' not found (Errcode: 13) 110616  7:37:57 [ERROR] Failed to create a new info file (file 'G:\pb2\test\sb_1-3486364-1308189142.46\mysql-5.6.3-m5-win-x86_64-test\mysql-test\var-rpl-ps_row\4\mysqld.2\data\relay-log.info.0', errno 13) 110616  7:37:57 [ERROR] Error reading slave worker configuration 110616  7:37:57 [ERROR] Failed during slave worker thread create 110616  7:37:57 [ERROR] Slave SQL: Failed during slave workers initialization, Error_code: 1593 ------------------------------------------------------------ revno: 3303 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-17 18:34:16 +0300 message: wl#5569 MTS fixing tests. @ mysql-test/extra/rpl_tests/rpl_parallel_benchmark_load.test making aux file names unique to please mtr, pb. @ mysql-test/extra/rpl_tests/rpl_parallel_load_innodb.test making aux file names unique to please mtr, pb. @ mysql-test/suite/rpl/r/rpl_filter_tables_not_exist.result MTS-suppression is added. @ mysql-test/suite/rpl/r/rpl_mixed_binlog_max_cache_size.result MTS-suppression is added. @ mysql-test/suite/rpl/r/rpl_parallel_benchmark.result making aux file names unique to please mtr, pb. @ mysql-test/suite/rpl/r/rpl_parallel_innodb.result making aux file names unique to please mtr, pb. @ mysql-test/suite/rpl/r/rpl_stm_binlog_max_cache_size.result MTS-suppression is added. @ mysql-test/suite/rpl/r/rpl_typeconv.result MTS-suppression is added. @ mysql-test/suite/rpl/t/rpl_filter_tables_not_exist.test MTS-suppression is added. @ mysql-test/suite/rpl/t/rpl_parallel_benchmark-slave.opt cleanup. @ mysql-test/suite/rpl/t/rpl_typeconv.test MTS-suppression is added. @ mysql-test/suite/sys_vars/r/slave_parallel_workers_basic.result results updated. @ sql/sql_class.h Cleanup to remove early debug-related options. @ sql/sys_vars.cc Fixating slave_parallel_workers' max as 1024. Cleanup to remove early debug-related options. ------------------------------------------------------------ revno: 3302 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-17 14:00:41 +0300 message: wl#5569 MTS fixing rpl_row_basic_3innodb similarly to the previous patch. @ mysql-test/suite/rpl/r/rpl_row_basic_3innodb.result a suppression is added. ------------------------------------------------------------ revno: 3301 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-17 13:51:59 +0300 message: wl#5569 MTS fixing few tests. 1. Policy is implemented for reacting with a warning in a case of failing worker leaves the total slave state with gaps thereby inconsistent. 2. Two tests that were used to time out due to reset master/slave was disabled in there. @ mysql-test/extra/rpl_tests/rpl_binlog_max_cache_size.test a suppression is added. @ mysql-test/extra/rpl_tests/rpl_row_basic.test a suppression is added. @ mysql-test/suite/rpl/r/rpl_known_bugs_detection.result a suppression is added. @ mysql-test/suite/rpl/r/rpl_row_basic_2myisam.result a suppression is added. @ mysql-test/suite/rpl/r/rpl_row_binlog_max_cache_size.result a suppression is added. @ mysql-test/suite/rpl/r/rpl_row_event_max_size.result a suppression is added. @ mysql-test/suite/rpl/r/rpl_row_idempotency.result a suppression is added. @ mysql-test/suite/rpl/t/rpl_known_bugs_detection.test a suppression is added. @ mysql-test/suite/rpl/t/rpl_parallel_benchmark-slave.opt removing unnecessary options causing test to fail. @ mysql-test/suite/rpl/t/rpl_parallel_benchmark.test removing an erronous assignment. The former disabling of reset was intended for benchmarking w/o binlog on the slave to please master-slave.inc. @ mysql-test/suite/rpl/t/rpl_parallel_innodb-slave.opt removing unnecessary options causing test to fail. @ mysql-test/suite/rpl/t/rpl_parallel_innodb.test removing an erronous assignment. The former disabling of reset was intended for benchmarking w/o binlog on the slave to please master-slave.inc. @ mysql-test/suite/rpl/t/rpl_row_event_max_size.test a suppression is added. @ mysql-test/suite/rpl/t/rpl_row_idempotency.test a suppression is added. @ sql/rpl_slave.cc Downgrading error to warning in a case of Coordinator fails due to a Worker error. Improving messages. Merging two if:s to have just one report(). @ sql/share/errmsg-utf8.txt Improved the text of an error; Added a new error code. ------------------------------------------------------------ revno: 3300 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-17 02:24:59 +0100 message: Removed unnecessary test cases and augment others in order to test recovery. ------------------------------------------------------------ revno: 3299 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-06-16 19:46:22 +0300 message: wl#5569 MTS fixing slave_parallel_workers_basic and rpl_stop_middle_group which cant run in MTS ------------------------------------------------------------ revno: 3298 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-06-16 11:29:53 +0300 message: wl#5569 MTS adding new tests to sys_vars.\ ------------------------------------------------------------ revno: 3297 committer: Luis Soares <luis.soares@oracle.com> branch nick: mysql-trunk-wl5569 timestamp: Thu 2011-06-16 01:41:32 +0100 message: WL#5569 Adding a global suppression for the warning that may appear when stopping the slave sql thread in the middle of a group. This should affect MTS mode only. ------------------------------------------------------------ revno: 3296 committer: Luis Soares <luis.soares@oracle.com> branch nick: mysql-trunk-wl5569 timestamp: Thu 2011-06-16 01:40:41 +0100 message: WL#5569 Renames worker-info-repository to slave-worker-info-repository in some tests option files. ------------------------------------------------------------ revno: 3295 committer: Luis Soares <luis.soares@oracle.com> branch nick: mysql-trunk-wl5569 timestamp: Thu 2011-06-16 01:32:37 +0100 message: WL#5569 More test fixes. Removing remaining prefixes 'mts' from mts variables, which have been renamed recently. ------------------------------------------------------------ revno: 3294 committer: Luis Soares <luis.soares@oracle.com> branch nick: mysql-trunk-wl5569 timestamp: Thu 2011-06-16 00:27:20 +0100 message: WL#5569 Fixing rpl_parallel result file. ------------------------------------------------------------ revno: 3293 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-15 20:41:33 +0300 message: wl#5569 MTS correcting --slave-parallel-workers in few more files ------------------------------------------------------------ revno: 3292 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-15 20:31:46 +0300 message: wl#5569 MTS correcting --slave-parallel-workers in collections/default.push ------------------------------------------------------------ revno: 3291 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-15 20:12:11 +0300 message: wl#5569 MTS Cleanup, including 1. decreasing number and renaming system variables. Important for debugging command line options are replaced with reasonble constant values and only necessary are retained. 2. Small encapsulation in ha_blackhole.cc is done. @ mysql-test/extra/rpl_tests/rpl_parallel_benchmark_load.test cleanup. @ mysql-test/extra/rpl_tests/rpl_parallel_load.test cleanup. @ mysql-test/extra/rpl_tests/rpl_parallel_load_innodb.test cleanup. @ mysql-test/r/mysqld--help-notwin.result cleanup. @ mysql-test/suite/rpl/r/rpl_parallel_benchmark.result cleanup. @ mysql-test/suite/rpl/r/rpl_parallel_conf_limits.result cleanup. @ mysql-test/suite/rpl/r/rpl_parallel_conflicts.result cleanup. @ mysql-test/suite/rpl/r/rpl_parallel_ddl.result cleanup. @ mysql-test/suite/rpl/r/rpl_parallel_multi_db.result cleanup. @ mysql-test/suite/rpl/r/rpl_parallel_seconds_behind_master.result cleanup. @ mysql-test/suite/rpl/r/rpl_parallel_start_stop.result cleanup. @ mysql-test/suite/rpl/r/rpl_parallel_temp_query.result cleanup. @ mysql-test/suite/rpl/t/rpl_parallel.test cleanup. @ mysql-test/suite/rpl/t/rpl_parallel_benchmark.test cleanup. @ mysql-test/suite/rpl/t/rpl_parallel_conf_limits.test cleanup. @ mysql-test/suite/rpl/t/rpl_parallel_conflicts.test cleanup. @ mysql-test/suite/rpl/t/rpl_parallel_ddl.test cleanup. @ mysql-test/suite/rpl/t/rpl_parallel_innodb.test cleanup. @ mysql-test/suite/rpl/t/rpl_parallel_multi_db.test cleanup. @ mysql-test/suite/rpl/t/rpl_parallel_seconds_behind_master.test cleanup. @ mysql-test/suite/rpl/t/rpl_parallel_start_stop.test cleanup. @ mysql-test/suite/rpl/t/rpl_parallel_temp_query.test cleanup. @ mysql-test/suite/sys_vars/r/all_vars.result cleanup. @ mysql-test/suite/sys_vars/r/slave_checkpoint_group_basic.result cleanup. @ mysql-test/suite/sys_vars/r/slave_checkpoint_period_basic.result cleanup. @ mysql-test/suite/sys_vars/r/slave_worker_info_repository_basic.result cleanup. @ mysql-test/suite/sys_vars/t/slave_checkpoint_group_basic.test cleanup. @ mysql-test/suite/sys_vars/t/slave_checkpoint_period_basic.test cleanup. @ sql/log_event.cc removing experimental (for benchmarking) mts_slave_local_timestamp option. @ sql/mysqld.cc few debugging time options are replaced with constants. Interface-variables are non needed anymore. @ sql/mysqld.h few debugging time options are replaced with constants. Interface-variables are non needed anymore. @ sql/rpl_rli_pdb.cc few debugging time options are replaced with constants. @ sql/rpl_slave.cc few debugging time options are replaced with constants. @ sql/sys_vars.cc few debugging time options are replaced with constants; renaming the rest that deal with MTS to be prefixed with `slave_'. ------------------------------------------------------------ revno: 3290 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-15 15:59:23 +0100 message: Fixed replication valgring failures caused by the MTS. ------------------------------------------------------------ revno: 3289 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-14 21:23:13 +0300 message: wl#5569 MTS wl#5754 Query event parallel execution Fixing failing tests and a failure in gathering accessed databases that was caused by a recent merge from trunk. @ mysql-test/suite/rpl/r/rpl_parallel_multi_db.result results updated. @ mysql-test/suite/rpl/r/rpl_parallel_seconds_behind_master.result results updated. @ mysql-test/suite/rpl/r/rpl_parallel_start_stop.result results updated. @ mysql-test/suite/rpl/t/rpl_parallel_multi_db.test moving mtr.add_supp to eliminate possibility of warning in the slave's error; adding graceful termination lines the test. @ mysql-test/suite/rpl/t/rpl_parallel_seconds_behind_master.test moving mtr.add_supp to eliminate possibility of warning in the slave's error. @ mysql-test/suite/rpl/t/rpl_parallel_start_stop.test Suppression are added for errors that are expected by test logics; adding graceful termination lines the test. @ sql/log_event.cc fixing the last argument to report() which should be c-string; fixing gathering of db:s on the master side. Because of a query can be preceeded in binlog by engineered BEGIN (the current pattern of logging from the trunk) resetting in Query::write() can't be any longer. However another reset point exists at the end of the top-level query and that suffices. @ sql/rpl_rli.h is_mts_in_group() to mimic STS' is_in_group() is added though semantics are different. @ sql/rpl_slave.cc further cleanup in sql_slave_killed() as requested by reviewers. ------------------------------------------------------------ revno: 3288 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-14 13:35:20 +0300 message: merge from trunk ------------------------------------------------------------ revno: 3287 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-14 12:27:38 +0300 message: wl#5569 MTS Fixing failing tests due to a. a flaw in `isolated parallel' mode implementation. Isolation applies to a group of event rather than to an instance. And event that contains over-max accessed db:s or event from Old master trigger marking the current being scheduled group. Such group will be executed having all prior scheduled done and nomore will be scheduled until the group is done. b. Notification to Coordinator about errored-out Worker is corrected. @ sql/log_event.cc isolation applies to a group of event rather than to an instance. Logics of isolation while the group is still executed by a Worker is refined through use of `bool curr_group_isolated' that lasts the group sceduling time and is set and reset in Log_event::get_slave_worker_id(). Assert is added to monitor tmp tables correct migration. . get_slave_worker() is called with `need_temp_tables' set to TRUE. @ sql/log_event.h Renaming to indicate that isolation applies to a group of event. Adding more candidate event to mts_do_isolate_group() assert. @ sql/rpl_rli.h Isolation mode related declaration. @ sql/rpl_rli_pdb.cc Refining notification logics. Coordinator needs both its THD::KILLED and signalling to slave_worker_hash_cond. @ sql/rpl_slave.cc Isolation mode related init-ion. ------------------------------------------------------------ revno: 3286 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-12 22:33:32 +0300 message: wl#5569 MTS making default.push to run rpl suite with non-default --mts-slave-parallel-workers > 0 in all three format/mode (row,stmt, mixed). The default is run for all suites in mixed mode and rpl suites with row+ps, stmt formats. ------------------------------------------------------------ revno: 3285 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-12 22:05:05 +0300 message: wl#5569 MTS manual merge with few fixes for segfault of the last merge from the trunk etc, compilation issue on embedded. ------------------------------------------------------------ revno: 3284 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-06-09 18:35:59 +0100 message: Post-fixes for merge. Fixed compilation in Windows and removed an used options. ------------------------------------------------------------ revno: 3283 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-06-09 16:27:47 +0100 message: merge mysql-trunk --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3282 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-06 13:51:19 +0300 message: wl#5569 MTS STOP SLAVE now stops consistently w/o gaps, KILL shall be used for an urgent stop, an error case behaves like the killed. For instance, a Worker errors out, it sends KILL to Coordinator through THD::awake(), and Coordinator kill the rest through setting a special Worker-running status to killed (which breaks the read-exec loop of a Worker). @ sql/log_event.cc Changing style of computing mts-in-group bool arg into mts_async_exec_by_coordinator(). @ sql/rpl_rli.cc Changing style of computing mts-in-group arg of an if in stmt_done(). @ sql/rpl_rli.h Adding more states to Coordinator's MTS-group view. @ sql/rpl_rli_pdb.cc Relocating notification of a Worker's failure by the Worker into the error-branch of a functioning releasing common resources (entries of APH hash). The failed Worker trying awakening possibly waiting for the signal Coordinator. The latter's behaviour in it's turn is refined to not enter the waiting phase when it has been already killed. @ sql/rpl_slave.cc sql_slave_killed() is made of two flavors of the error branches. STOPped MTS coordinator does not give out too early and wait till its MTS-group state allows that. Notification with kill to Coordinator  from the errored-out or killed worker is moved into a functioning releasing common resources (entries of APH hash). This case designates a hard stop. In case of the soft (SLAVE-STOPped) MTS, Coordinator is made to wait for Workers' assignements full completion before to mark their running status for stopping. ------------------------------------------------------------ revno: 3281 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-05 20:01:51 +0300 message: wl#5569 MTS More cleanup, fixes due to found issues when running tests, some improvements incl in stopping Workers to make routine to distinguish between killed and gracefully stopped cases so in the end STOP SLAVE will guarantee consistent state (some todo remains still). @ mysql-test/extra/rpl_tests/rpl_parallel_benchmark_load.test decreasing execution time. @ mysql-test/suite/rpl/t/rpl_begin_commit_rollback.test Marking the test as limited to Single-Thread-Slave. @ mysql-test/suite/rpl/t/rpl_deadlock_innodb.test Marking the test as limited to Single-Thread-Slave. @ mysql-test/suite/rpl/t/rpl_slave_skip.test Marking the test as limited to Single-Thread-Slave. @ sql/log_event.cc addressing few reviewing comments; asserting do_update_pos() can't run by Workers; cleaning up and separating Slave_worker *Log_event::get_slave_worker_id() and its caller's interest to rli-> last_assigned_worker; Deploying MTS group status marking in Log_event::apply_event(); Making Worker's exec loop break to obey to a new Worker's running status too; Deploying mts_checkpoint_routine() in Rotate_log_event::do_update_pos() (sim action for FD event's handler); Fixing relay-log update notification in Log_event::get_slave_worker_id(); @ sql/log_event.h renaming and re-typing of func:s as suggested by reviewer; leaving  a todo item for the final cleanup; correcting logics of mts_async_exec_by_coordinator(); @ sql/rpl_rli.cc Initialization of a new MTS group status proverty: mts_group_status(MTS_NOT_IN_GROUP); asserting Relay_log_info::stmt_done() can't be run by Workers; deploying mts_checkpoint_routine() alike Rotate_log_event::do_update_pos() this time in Relay_log_info::stmt_done() to cover FD-event case and consulting mts_group_status in order to decide which branch to follow; @ sql/rpl_rli.h Augmenting Relay_log_info with mts_group_status to contain MTS group status; @ sql/rpl_rli_pdb.cc Slave_worker::commit_positions() is fixed to carry update relay-log info further to the following checkpoint routine action; Slave_worker *get_slave_worker() was cleaned, interfaces improved, few asserts corrected; Slave_worker::slave_worker_ends_group() cleaned a bit, and now frees extra memory of CGEP dynarray. wait_for_workers_to_finish() is made to set the Coordinator's state as not in MTS group after synchronization with all workers; @ sql/rpl_rli_pdb.h Slave_jobs_queue is augmented with  running_status member. @ sql/rpl_slave.cc apply_event_and_update_pos(): corrects asserts, synch with *all* Workers at the end of dynamically marked as End of group event (mts_is_event_isolated() -> TRUE); exec_relay_log_event(): correts NULL event read out case; slave_stop_workers(): simplifying logics of stopping Workers, to mark them with w->running_status= Slave_worker::KILLED instead of killing workers' thd. . slave_stop_workers() finilizes reset of Coordinator's state with rli->mts_group_status= Relay_log_info::MTS_NOT_IN_GROUP to make sure a next restart will proceed with the reset value. ------------------------------------------------------------ revno: 3280 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-05-30 13:05:07 +0300 message: WL#5569 MTS WL#5754 Query event parallel applying ----------------------------------------------------------------- Aggregating 7 commits that are not pushed yet to the wl5569 repo. Find comments for each cset below. ------------------------------------------------------------------ The current patch addresses concurrent updating slave_open_temp_tables status counter. The former declaration of the underlying server variable is changed from ulong to int32. While that might affect (shrink) the actual range, there has been no specified range and now after the number of bits is the same on all platforms the range cat be set to be [0, max(int32)] ****** wl#5569 MTS Wl#5754 Query event parallel appying wl#5599 MTS recovery The patch includes some cleanup, including one for temp tables support, realization of few todo:s. ****** wl#5569 MTS wl#5754 Query event parallel applying More cleanup is done; Fixing temp tables manipulation. Asserting an impossible to support use case of group of events not wrapped with BEGIN/COMMIT. Todo: recognize old master binlog to refuse to run in parallel. ****** wl#5569 MTS Implementation of giving out the applier role to Worker for all cases but ones dealing with the Coordinators state. That includes Query event with over-max-db:s and Load-data related events. The current patch also makes old master binlog be handled by MTS though sometimes e.g for Query event to switch to the sequential mode. Fixing a race condition making C to wait endlessly if a Worker has exitted due to its applying error. ****** wl#5569 MTS correcting an assert that was used to fire as warned in the previous commit. Parallel feature tests pass now. ****** wl#5569 MTS This patch contains cleanup and simplification of logics of handling some events sequentially by Coordinator and adds memory-allocation failure branch to workers starting routine. ****** wl#5569 MTS An intermediate patch to address few issues raised by reviewers. To sum up, it's about cleanup and logics simplification of event distribution to Worker and consequent actions. Some efforts were paid to support Old Master Begin-less group of events. @ mysql-test/extra/rpl_tests/rpl_parallel_load_innodb.test Elaborated version of rpl_parallel_load generator still narrowed down to test performance with Innodb. @ mysql-test/suite/rpl/r/rpl_parallel_ddl.result results updated. @ mysql-test/suite/rpl/r/rpl_parallel_multi_db.result results updated. @ mysql-test/suite/rpl/r/rpl_parallel_temp_query.result results got updated. ****** results updated. @ mysql-test/suite/rpl/t/disabled.def Disabling few tests that triggers the assert installed in log_event.cc of this commit. . ****** Restoring tree tests as this patch makes them runable. @ mysql-test/suite/rpl/t/rpl_deadlock_innodb.test test can't run in MTS because of trans retry. @ mysql-test/suite/rpl/t/rpl_dual_pos_advance.test test can't run in MTS because of Until option of START SLAVE is not yet supported by  MTS. @ mysql-test/suite/rpl/t/rpl_parallel_ddl-slave.opt rpl_parallel tests need --slave-transaction-retries=0 @ mysql-test/suite/rpl/t/rpl_parallel_innodb-master.opt new test opt file is added. @ mysql-test/suite/rpl/t/rpl_parallel_innodb-slave.opt new test opt file is added. ****** rpl_parallel tests need --slave-transaction-retries=0 @ mysql-test/suite/rpl/t/rpl_parallel_innodb.test Elaborated version of rpl_parallel narrowed down to test performance with Innodb. @ mysql-test/suite/rpl/t/rpl_parallel_multi_db-slave.opt rpl_parallel tests need --slave-transaction-retries=0 @ mysql-test/suite/rpl/t/rpl_parallel_temp_query-slave.opt rpl_parallel tests need --slave-transaction-retries=0 @ mysql-test/suite/rpl/t/rpl_parallel_temp_query.test Adding logics to watch Slave_open_temp_tables in face of its concurrent updating. @ sql/event_parse_data.cc Pleasing some tests. @ sql/field.cc Restoring asserts that were before changes to sql_base.cc. . ****** Old master binlog events can't be run in parallel for few reasons. Therefore that paticular branch of code is irrelevant for MTS. @ sql/handler.cc Restoring assert that were before changes to sql_base.cc. @ sql/log_event.cc cleanup, incl restoration of the trunk version of some pieces of code. passing future_event_relay_log_pos to Worker to stike out a todo in rpl_rli.cc. . ****** Asserting a not-implemented support of group of events not braced with BEGIN/COMMIT(Xid). Such groups are possible in stored routine logging and when an old server binlog file is adopted by MTS-aware slave. . ****** Making a group of event w/o B/C braces be handled by Worker. Such group can happen from an old master or the current master bilogging some SP queries. Also over-max db:s events are made to be handled by Worker. Coordinator only handles asyncrounously events dealing with Relay-log state and synchrounously events dealing with checkpoint changes (master-group coordinates). Also few types of events from OM are left to Coordinator to execute. . . ****** Cleanup and simplification of logics of handling some events sequentially by Coordinator. An event is marked as parallel or sequential through C's rli that affects commit to info table by C as well as the event's destruction. . ****** Cleanup and logics simplification in Log_event::get_slave_worker_id(), Log_event::apply_event(). The essense is: a. to return back to apply_event_and_update_pos() event associated either with the single-threaded sql-thread rli, or one of Coord or Worker. b. while the beginning of a group and corresponding actions are left to Log_event::get_slave_worker_id(), other actions including passing the event to a Worker and the final closure of the current group is moved into apply_event_and_update_pos(). . Correcting Query_log_event::at-,de-tach_temp_tables() to expect the magic ""-empty string name db partition through which the applier thread receives temp tables. @ sql/log_event.h Leaving in mts_sequential_exec() only events that either can deal with Coordinator state, or are from old master. Making  Query_log_event::mts_get_dbs  to return a list with a magic """"-empty string partition name in case of over-max db:s query. The empty magic is converted into a record to APH to indicate the whole hash records lock. ****** More members are added to Log_event a. to associate the event with applier. b. to provide marking a B-less group of events (old master, select sf()). @ sql/mysqld.cc Turning slave_open_temp_tables from ulong to int32 and adding atomic locks declaration for the counter updating. @ sql/mysqld.h Extern-lizing slave_open_temp_tables_lock; @ sql/rpl_rli.cc Initializing/destorying slave_open_temp_tables lock at the same time with Workers. ****** passing future_event_relay_log_pos is done via an assignment to Worker's member in slave_worker_exec_job(). @ sql/rpl_rli.h restoring the original version of get_table_data() though no real changes. . ****** simplified (curr_group_is_parallel + curr_group_split) into curr_*event*_is_parallel. ****** Removing rli members that aren't necessary any longer. @ sql/rpl_rli_pdb.cc cleanup. ****** Removing redundant my_hash_update; cleanup; Fixing temp tables related issue of leaving wait_for_worker without all entries of APH given out their temp tables. ****** Changes due to redifining an object responsible to hold assigned partitions in few methods incl  Slave_worker::slave_worker_ends_group(). Some cleanup in get_slave_worker(). ****** cleanup, a new assert, and init of an debug-related member. @ sql/rpl_rli_pdb.h Redifining an object responsible to hold assigned partitions. Now it's a Dyn-array holding *pointers* to records on Assigned Partition Hash. That simplifies few routines for Worker. E.g search for the records (entries of APH) by Worker at time of committing. . ****** Adding GAQ memory-allocation failure notification. ****** Memorizing last deleted event for debugging purpose. @ sql/rpl_slave.cc Adding info message to the error log; improving comments. ****** Restoring original sequential mode version of assert in sql_slave_killed. Worker is not supposed to run this function. Testing of skipping logics is left to the rpl suite be run in the parallel mode. Cleanup. Marking recovery related todo items explicitly. Setting up guards to guarantee sequential mode in requested points of the code. . ****** Streamlining Workers state identification with a boolean running_status; worker start and stop are controlled by means of the disignator. . ****** simplified (curr_group_is_parallel + curr_group_split) into curr_event_is_parallel; GAQ memory-allocation failure branch is added to workers starting routine. ****** Cleanup and, moving append_item_to_jobs() invocation into  apply_event_and_update_pos() as well as other actions mentioned in log_event.cc comments; changing signature of apply_event_and_update_pos() to return NULL in place of referrenced pointer in case the event is handed over to a Worker; checking of the pointer value is done in places dealing with update-pos and event's destruction. @ sql/sql_base.cc Replacing slave opened temp tables counter incr/decr with a function perfoming atomic locking in case Worker runs it. ****** removing unnecessary return value in incr_slave_open_temp_tables def. ****** Func is renamed. Removing all traces of previous idea to return value out of modify_slave_open_temp_tables. @ sql/sql_parse.cc cleanup. ------------------------------------------------------------ revno: 3279 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-05-24 17:29:35 +0300 message: WL#5569 MTS WL#5754 Query parallel appying Changing implementation of temporary tables support in MTS. Cleanup, fixing few todo:s and few potential issues found. @ mysql-test/suite/rpl/t/rpl_parallel.test commetting failure in /include/rpl_end.inc (todo: explore and fix). @ mysql-test/suite/rpl/t/rpl_parallel_fallback.test The only Rows_query_log_event case of testing is no longer valid because the event is parallizable now. The test is removed. @ mysql-test/suite/rpl/t/rpl_parallel_multi_db.test Adding comments about possible issue of somewhat loose behaviour of sync_slave_with_master in parallel mode. TODO: investigate and fix. @ sql/binlog.cc Renaming only. @ sql/events.cc Renaming only. @ sql/log_event.cc Fixing found issues, cleanup and temp tables support. . The assigned partition as represented by an entry is passed through the assigned Worker. via Log_event::get_slave_worker(). The method attaches the entry to the Query event which do_exec_event() calls new attach and detach methods that grabs temp tables list on each involved db and returns possibly updated lists back to APH at the end of Query event applying. @ sql/log_event.h Mostly renaming. @ sql/rpl_rli.cc relocating mts_get_coordinator_thd() definition. @ sql/rpl_rli.h re-defining mts_is_worker() through SYSTEM_THREAD_SLAVE_WORKER. @ sql/rpl_rli_pdb.cc Changes mostly due to temp table support. Coordinator disaccosiates temporary tables of a being schedule db-partition from its thd and attaches the list to APH's entry. In the following the Worker finds the list and adopts it to return possibly updated version back to the entry at the end of the query. The list resides most of time in either APH's passive (usage == 0) entry, or in Worker's thd->temporary_tables. It can be relocated back to the Coordinator's repository via wait_for_workers_to_finish() that is called in case an event requires the sequential execution. . Few auxiliary functions are defined dealing with migration and merging temp tables. @ sql/rpl_rli_pdb.h Adding TABLE* pointer to list of temp tables in entry of Assigned Partition Hash. The entry pointer carries temp tables from C to W and backward. Changes in few function signitures motivated by temp table support. Adding auxiliary funcs to help with temp tables manipulations. @ sql/rpl_slave.cc renaming, cleanup and improving Worker identification. @ sql/rpl_slave.h cleanup. @ sql/rpl_utility.h cleanup. @ sql/sql_base.cc removing a hack to access temp tables in MTS. @ sql/sql_class.cc Renaming only. @ sql/sql_class.h Renaming only. @ sql/sql_rename.cc Renaming only. @ sql/sql_table.cc Renaming only. @ sql/sql_view.cc Renaming only. ------------------------------------------------------------ revno: 3278 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-05-19 12:36:28 +0300 message: wl#5569 MTS Support for ROWS_QUERY_LOG_EVENT is added. It required refactoring of its handling in the canonical sequential mode. The event life suggests its behavior similar to objects associated with Table_map, in particural, its destoying to occur at the end-of-statement time. Tested against existing ROWS_QUERY_LOG_EVENT feature tests incl rpl_row_ignorable_event in both sequential and parallel mode. @ sql/log_event.cc cleanup of MTS code; relocating handle_rows_query_log_event() logics into a. do_apply_event() and b. rli->cleanup_context(). @ sql/log_event.h cleanup of MTS code; @ sql/rpl_rli.cc Deploying ROWS_QUERY_LOG_EVENT destruction in context_cleanup(). @ sql/rpl_rli.h cleanup of MTS code; @ sql/rpl_slave.cc cleanup of MTS code; @ sql/sql_binlog.cc Simplifying ROWS_QUERY_LOG_EVENT handling in the case of BINLOG pseudo-query. ------------------------------------------------------------ revno: 3277 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-05-16 22:43:58 +0300 message: wl#5569 MTS Simplifying Coordinator-Worker interfaces. In essence after this patch Worker execute events in its private context (class Slave_worker :public Relay_log_info). The only exception is Query referring to temporary table. The temp:s are maintained in the Coordinator's ""central"" rli; removing some dead code; performing a lot of cleanup. There are few todo items incl: 1. To implement several todo:s scattered across MTS' code and tests (e.g to restore protected for few members of RLI of rpl_rli.h); 2. to cover Rows_query_log_event that currently can cause hanging (e.g rpl_parallel_fallback) 3. To sort out names of classes based on Rpl_info, possibly remove  Rpl_info_worker @ mysql-test/suite/rpl/t/rpl_parallel_start_stop.test The test as most of rpl_parallel* bunch can't yet stand `include/rpl_end.inc'. @ sql/log_event.cc Defining the default Log_event::do_apply_event_worker() that simply executes canonical do_apply_event() however supplying Slave_worker intance reference that is critical in order to execute different rli->methods(), e.g `report'. Xid_log_event::do_apply_event_worker() runs the Worker version of Xid commit; simplifying Rows event parallel applying to remove or elaborate some host of the early prototype code incl. rli->get_tables_to_lock() and related logics; @ sql/log_event.h Adding virtual int do_apply_event_worker() to Log_event and specializing it for Xid class; @ sql/rpl_reporting.cc Spliting report() into two methods in order to make possible to call the functional part of the two  with va_list as an arg be called from Slave_worker class. @ sql/rpl_reporting.h New  va_list version of report method is declared. @ sql/rpl_rli.cc removing early prototype time support to Rows-event parallel execution. The new scheme of applying is almost equivalent to the standard sequential algorith thanks to Slave_worker :public Relay_log_info inheritence implementation. @ sql/rpl_rli.h Removing unnecessary interfaces; TODO: restore `protected' for few members. @ sql/rpl_rli_pdb.cc Some cleanup and defining Slave_worker::report() to eventially call the Coordinator's rli->report() and exploit a fact that the latter was designed for concurrent use. @ sql/rpl_rli_pdb.h Changing base class for Slave_worker to make it behaving as Relay_log_info when needed; Removing some dead code; Adding report() methods to run it in do_apply_event(). @ sql/rpl_slave.cc Removed UNTIL todo as it's actually not supported with a warning; Removed a todo for cleanup of error-out statement format transaction because  w->cleanup_context() impelements it indeed; Cleanup or transition from w->w_rli (of Relay_log_info) to w (of Slave_worker); Adding forgotten unlock_mutex; Simplifying definitions of few func:s (mts_is_worker() etc); ------------------------------------------------------------ revno: 3276 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-05-06 21:33:32 +0300 message: wl#5569 MTS improving benchmarking test. ------------------------------------------------------------ revno: 3275 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-04-06 15:51:58 +0300 message: wl#5569 MTS Statistics for Workers and Coordinator incl waiting times, sleeping is reported now into the error log as slave stopping time. @ sql/log_event.cc statistics addded. @ sql/rpl_rli.h statistics added. @ sql/rpl_slave.cc print-out mts statistics into the error log at stopping the slave. ------------------------------------------------------------ revno: 3274 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-04-05 19:26:37 +0300 message: wl#5569 MTS restoring previous 4 default workers that rpl_parallel works with. ------------------------------------------------------------ revno: 3273 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-04-03 13:07:30 +0300 message: wl#5569 MTS Benchmarking related patch uniforms rpl_parallel to be run with arbitrary number of workers, db:s, tables, etc. TODO: to restore the final constinency check which is given out temporary while i could not find a way to leave it surrounded with  a --dis/en-able* stanza. @ mysql-test/extra/rpl_tests/rpl_parallel_load.test making the load generator to be indifferent to all parameters incl the number of db:s. Have to comment out the final consistency check sinc could not find a way to hide the verified table(s) line out of the results. @ mysql-test/suite/rpl/r/rpl_parallel.result results got updated. @ mysql-test/suite/rpl/r/rpl_sequential.result results got updated. @ mysql-test/suite/rpl/t/rpl_parallel-slave.opt the test caller has to supply -mysqld=--mts-slave-parallel-workers=[:num:]. With :num: == 0 the test is equivalent to rpl_sequential. @ mysql-test/suite/rpl/t/rpl_parallel.test removed traces of the number of workers that can vary in [0 - ..] range. The test caller has to supply -mysqld=--mts-slave-parallel-workers=[:num:]. With :num: == 0 the test is equivalent to rpl_sequential. ------------------------------------------------------------ revno: 3272 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-04-02 14:32:02 +0300 message: wl#5569 MTS a test file for benchmarking is added. Benchmarking results can be gained by extracting the master side generating and the slave side applying times like in the following loop: workers=6; for n in `seq 1 3`; do echo; echo loop: $n; echo; my_mtr.sh --mysqld=--mts-slave-parallel-workers=$workers  \ rpl_parallel_benchmark --mysqld=--binlog-format=statement \ && cat /dev/shm/var/mysqld.2/data/test/delta.out >> p${workers}_stmt.out 2>&1; done @ mysql-test/extra/rpl_tests/rpl_parallel_benchmark_load.test the load generator for a test file for benchmarking is added. @ mysql-test/suite/rpl/r/rpl_parallel_benchmark.result a new results file is added. @ mysql-test/suite/rpl/t/rpl_parallel_benchmark-slave.opt slave does to log into binary log. The number of workers is supposed to set via --mysqld at mtr invocation. @ mysql-test/suite/rpl/t/rpl_parallel_benchmark.test a test file for benchmarking is added. ------------------------------------------------------------ revno: 3271 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-03-30 17:11:24 +0300 message: wl#5754 Query event parallel execution Small cleanup for comments as requested by reviewer. @ sql/log_event.cc only comments cleanup. @ sql/rpl_slave.cc only comments cleanup. ------------------------------------------------------------ revno: 3270 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-02-27 19:35:25 +0200 message: WL#5754 Query event parallel execution Bundling together implementation the whole DML+DDL Query parallel support. That includes: The earlierst four rev:s to cut off the DML stage of the parallel query project from the following devoted to DDL. The four skeleton parallel applying of Queries containing a temporary table, and implement a core of the design that is the DML queries. Queries can contain arbitrary features including temp tables. The DDL part also refined few items related to the general low-level design. In particular,  of the mark of the over-max db:s in the updated-db:s status var is turned to be another new constant value. The very last patch to the bundle addresses the last review mail notes. @ mysql-test/r/mysqld--help-notwin.result results get updated. ****** results gets updated. @ mysql-test/suite/rpl/r/rpl_packet.result results updated. @ mysql-test/suite/rpl/r/rpl_parallel_ddl.result the new test results are added. . ****** results get updated. @ mysql-test/suite/rpl/r/rpl_parallel_multi_db.result new result file is added. ****** results get updated. @ mysql-test/suite/rpl/r/rpl_parallel_start_stop.result results get updated. @ mysql-test/suite/rpl/r/rpl_parallel_temp_query.result a new results file ****** new result file is added. @ mysql-test/suite/rpl/t/rpl_packet.test making a hashing fixes in order the test to pass. todo: refine logics of max_allowed_packed for master & slave. @ mysql-test/suite/rpl/t/rpl_parallel_ddl.test DDL specifics for parallelization tests are added. ****** added over-the-max updated db:s case through RENAME tables. ****** added remained DDL set members to test. @ mysql-test/suite/rpl/t/rpl_parallel_fallback.test Marked a todo. @ mysql-test/suite/rpl/t/rpl_parallel_multi_db.test multi-db DML query test is added. todo: add triggers, sf(), SP. ****** adding stored routines testing. ****** increased the number of db:s. Notice that forces to change the default of --thread-stack size; added over-the-max updated db:s case through multi-updates. @ mysql-test/suite/rpl/t/rpl_parallel_start_stop.test removed explicit log pos from the results. @ mysql-test/suite/rpl/t/rpl_parallel_temp_query.test query with temporary tables testing. @ mysql-test/suite/sys_vars/r/all_vars.result results get updated. @ sql/binlog.cc gathering to be updated db in the DML case. Over-MAX_DBS_IN_QUERY_MTS-sized list won't be shipped to the slave. ****** correcting memory allocation to be in thd's memroot. ****** separating out multiple db gathering into a THD method to be invoked as for DML so for few cases of DDL. ****** Changed location of comparisions against MAX_DBS_IN_QUERY_MTS to be inside the adding to db list method; refined logics of gathering db in decide_(): *all* db:s whenever there is at least one table to update are picked up. ****** Comments are added, other changes are due to MAX_DBS_IN_QUERY_MTS + 1 ceased to be the over-max mark. @ sql/events.cc gathering updated dbs for create/drop events. @ sql/field.cc relaxing an assert (todo: add to it more specific claim field->table is temp). ****** adding comments to asserts. ****** improved comments. @ sql/handler.cc relaxing an assert (todo: add to it more specific claim table is temp). ****** adding comments to asserts. @ sql/log_event.cc master and slave (Coord's and Worker's) handling of updated db:s. The Coordinator's distribution changed to involve a loop per db, similaraly for the Worker at applying. ****** adding comments and correcting clearence of binlog_updated_db_names to not let BEGIN, COMMIT in particular to get the updated list. ****** removed an extraneous assert. ****** cleaned some parts of the code; improved comments; refined an assert; turned Coordinator to use a specific new mem-root; other changes are due to MAX_DBS_IN_QUERY_MTS + 1 ceased to be the over-max mark. @ sql/log_event.h Hardcoding the max updated db:s. Static allocation for updated db:s in Query log event is motivated by the fact of the event is shared by both C and W and the standard malloc/free can't be a reasonble choice either. Added a new status and changed dependent info. Added a new method to return the *list* of updated db:s which in all but Query case is just a wrapper over get_db(). . ****** adding commits, and interfaces to helper functions. ****** updated some comments. ****** added OVER_MAX_DBS_IN_QUERY_MTS to serve as the over-max db:s mark instead of the former MAX_DBS_IN_QUERY_MTS + 1; mts_get_dbs() receives a mem-root arg supplied by Worker or Coord. @ sql/mysqld.cc removed opt_mts_master_updated_dbs_max. @ sql/mysqld.h removed opt_mts_master_updated_dbs_max. @ sql/rpl_rli.cc a new temp table mutex init, destroy and a set of helper functions providing access to C,W's thd:s in arbitrary place of the server code are added. ****** fixing an error. ****** relocalating helper functions to rpl_slave.cc. @ sql/rpl_rli.h a new temp table mutex is added to RLI class. ****** improving comments. ****** A memroot for the Coordiator is placed into rli. @ sql/rpl_slave.cc SLAVE_THD_WORKER appeared to be redundant. Worker's thd->system_thread is set to the same as the Coordinator thread constant. ****** Added a work-around/cleanup needed by the standard temp table closing algorithm. ****** comments explaining close_temp_tables() not to run by Workers. Accepting relocated functions. ****** init alloc and the final destuction of the Coord rli->mts_coor_mem_root mem-root. @ sql/rpl_slave.h declarations of auxiliary func:s defined in rpl_slave.cc are moved from log_event.h. @ sql/share/errmsg-utf8.txt Added a new error/warning on master specific to Query parallel replication. @ sql/sp.cc covering db gathering for create/drop SP. @ sql/sql_base.cc replacing refs to thd->temporary with an appropriate one corresponding to the Coord's thd->t_t:s. Also surrounding critical sections of codes dealing with opening, finding, closing or changing temproray_tables' list with a specific mutex lock/unlock. ****** Correcting and simplifying logics for the temp table parallel support. In particular close_temporary_tables() does not need to know about thd of the caller. . ****** simplified the temp table support related addons. The double ref to thd->temporary_table is needed only in one place. @ sql/sql_class.cc master side gathering updated db:s new memeber initializations. ****** Correcting logics of merging the updated db:s of a child to the parent's top-level. ****** removed dead-comments. @ sql/sql_class.h master side gathering updated db:s list and accessor members. ****** adding a necessary cleanup method. ****** adding two base methods of db gathering: one for a queries that can update only one db, and the other for multiple db:s. . ****** added more comments, removed dead-codes. @ sql/sql_db.cc create/drop database case of db gathering. @ sql/sql_rename.cc rename table(s) case of db gathering. @ sql/sql_table.cc create, drop, alter cases of db gathering. ****** Changed location of comparisions against MAX_DBS_IN_QUERY_MTS to be inside the adding to db list method. @ sql/sql_trigger.cc create/drop trigger case of db gathering. @ sql/sql_view.cc support for CREATE/DROP views is added. @ sql/sys_vars.cc Added a system variable (todo/fixme: may turn out to be unnecessary though). . ****** removed ealier added variable. ------------------------------------------------------------ revno: 3269 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-01-12 01:01:02 +0200 message: merging from mysql-trunk ------------------------------------------------------------ revno: 3268 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-01-12 00:54:12 +0200 message: wl#5569 MTS fixing the worker threads start/stop. @ sql/rpl_rli.h adding RLI::opt_slave_parallel_workers to cache the server's namesake global var. @ sql/rpl_slave.cc moving rli->recovery_parallel_workers resetting down to the exit point from starting routine. ------------------------------------------------------------ revno: 3267 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-27 18:54:41 +0000 message: merge mysql-trunk --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3266 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-24 01:57:03 +0200 message: wl#5569 MTS the timed-wait loop of SQL thread required a break-through parameter in case the signal missed in action and just timeout would be reported ------------------------------------------------------------ revno: 3265 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 19:03:42 +0200 message: merging from the repo wl5569 ------------------------------------------------------------ revno: 3264 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 17:49:19 +0200 message: wl#5569 MTS fixing corner cases that mtr-testing with mts workers against stardard suites reveal. @ sql/log_event.cc removing COMMIT Query event from a set of ones containing the partition info. @ sql/log_event.h ROLLBACK TO can be inside of a replicated trans. ------------------------------------------------------------ revno: 3263 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 16:00:28 +0200 message: wl#5569 MTS: refining another assert that can force C to delete events that are skipped with the slave skip counter ------------------------------------------------------------ revno: 3262 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 15:34:02 +0200 message: wl#5569 MTS Correcting an assert that is hit by few tests. @ sql/rpl_rli_pdb.cc Indeed, Coordinator can be awakened with abort_slave flag UP and not being killed. ------------------------------------------------------------ revno: 3261 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 13:27:15 +0200 message: wl#5569 MTS merging from the repo. ------------------------------------------------------------ revno: 3260 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 13:25:31 +0200 message: wl#5569 MTS fixing failing tests. @ sql/rpl_slave.cc fixing an issue where a Rotate event could appear in between of events of a group. That case should not force any rli->flush_info() but rather normal relay log coordinates incr. ------------------------------------------------------------ revno: 3259 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-22 20:34:26 +0200 message: wl#5569 MTS merging from the repo. ------------------------------------------------------------ revno: 3258 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-22 20:31:13 +0200 message: wl#5569 MTS fixing tests failure when mtr runs --mts_slave_parallel_workers != 0. rpl000010 is a representative. Fixed with identifying, marking, running carefully ev->update_pos() and destroying an event that can split a group of events to force part to be in different relay logs. @ sql/log_event.cc Identifying and marking an event that can split a group of events to force part to be in different relay logs. @ sql/log_event.h FD and Rotate both can be the group splitter but only if they are ""artificial"". @ sql/rpl_rli.h a marker flag to be set when the group splitter such as FD is spotted. @ sql/rpl_slave.cc identifying, marking, running carefully ev->update_pos() and destroying an event that can split a group of events. ------------------------------------------------------------ revno: 3257 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-22 13:57:18 +0200 message: wl#5569 MTS and wl#5599 MTS recovery The general recovery implementation is finished by this patch. Tested against  ./mtr rpl_parallel_conf_limits. Warning, ./mtr rpl_parallel_conf_limits rpl_parallel_conf_limits ... can fail at the 2nd etc test because of no removal of Worker tables happens at RESET SLAVE. @ sql/log_event.cc adding a special to mts-recovery branch to the event scheduling routine located in Log_event::apply_event(). todo: think about rli->flush_info() at the end of gap-filling. @ sql/rpl_rli.cc to be recovered group counter and a running index on the recovery bitmap are init-ed, also renaming. In recovery phase Coordinator can execute rows-events now. @ sql/rpl_rli.h to be recovered group counter and a running index on the recovery bitmap is added. @ sql/rpl_slave.cc engaging to be recovered group counter in mts_recovery_groups() in the end of which the recovery bitmap is ready and rli->mts_recovery_group_cnt counted how many bits of interest in there. . No actual recovery case is followed by rli->recovery_parallel_workers= rli->slave_parallel_workers at Workers startup time. ------------------------------------------------------------ revno: 3256 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-21 22:12:30 +0200 message: wl#5569 MTS slave_worker_info def is updated in the system db. ------------------------------------------------------------ revno: 3255 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-21 21:34:58 +0200 message: merging with repo ------------------------------------------------------------ revno: 3254 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-21 21:31:29 +0200 message: wl#5569 MTS Recovery routine part I: gathering the group recovery bitmap. @ sql/log_event.h Introducing a typedef for getting frequently used struct. @ sql/rpl_rli_pdb.cc checkpoint_seqno is added to the Worker table to index of the last committed group in the bitmap; Init, read, write, propagation of its value are addressed. @ sql/rpl_rli_pdb.h Worker class gets checkpoint_seqno members. @ sql/rpl_slave.cc mts_recovery_groups() is refined to follow a simpler design scheme. Checkpoint info that Worker must have at recovery consists of seqno, bitmap and the master binlog coordinates. ------------------------------------------------------------ revno: 3253 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-20 22:18:33 +0000 message: WL#5599 Fixed routine to compute the bitmap of executed events. ------------------------------------------------------------ revno: 3252 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-20 21:37:48 +0200 message: wl#5569 MTS adding checkpoint relay_log_name,pos as necessary part to locate a relay-log for recovery. Tested with rpl_parallel. @ mysql-test/extra/rpl_tests/rpl_parallel_load.test restoring $iter to 1k as it was used to be. @ sql/log_event.cc adding checkpoint relay_log_name,pos @ sql/rpl_rli_pdb.cc adding checkpoint relay_log_name,pos @ sql/rpl_rli_pdb.h adding checkpoint relay_log_name,pos ------------------------------------------------------------ revno: 3251 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-20 17:58:58 +0200 message: wl#5569 MTS manual merging from the repo and correcting GAQ processing with introducing a volatile byte to indicate whether an item is busy or released. ------------------------------------------------------------ revno: 3250 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-12-18 21:00:23 +0200 message: wl#5569 MTS fixing --mts-exp-slave-run-query-in-parallel=1 case when Query-log-event can be run in parallel incl DML and DDL. The feature is `exp'erimental still can be tried while there are no temp tables involved neither a db different than the session's default is modified by the query. Tested: Changes sustain mtr rpl_parallel --mysqld=--mts-exp-slave-run-query-in-parallel=1 --mysqld=--binlog-format=statement @ sql/log_event.cc making a single-query group such as DDL to be distributed to Workers. ------------------------------------------------------------ revno: 3249 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-17 14:46:15 +0200 message: wl#5569 MTS fixing PB2 failures, incl valgrind issues, long exec time and asserting in a test. @ mysql-test/extra/rpl_tests/rpl_parallel_load.test Making slow win machines happy on PB2 to lessen load. @ mysql-test/suite/rpl/t/rpl_parallel_start_stop.test adding an assert and print out if one will fire. @ sql/rpl_rli_pdb.cc the \0 term char was not allocated. @ sql/rpl_slave.cc missed initialization is added. ------------------------------------------------------------ revno: 3248 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-17 00:00:47 +0200 message: merge from  wl#5569 repo to local branch rpl_sequential opt files are added to avoid mtr give up to process a bulk of unsafe warnings. ------------------------------------------------------------ revno: 3247 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-16 23:41:45 +0200 message: wl#5569 MTS Adding transparent support/fallback to the sequential execution cases of 1. Query-log-event 2. Rows_query_log_event info event Both cases can be fully parallelized in future project. Fixing an issue in move_queue_head() that was surficed as an assert in Slave_worker::slave_worker_group_ends(). Fixing destoying an event by Worker. @ mysql-test/extra/rpl_tests/rpl_parallel_load.test Edited to compare all involved tables, add explicitly multi-statement transaction, and letting verification even in a case of statement format events. @ mysql-test/suite/rpl/r/rpl_parallel_fallback.result new results file is added. @ mysql-test/suite/rpl/t/rpl_parallel.test is changed to run with all formats because it starts verifying the transparent fallback to sequential for Query-log-event and related. @ mysql-test/suite/rpl/t/rpl_parallel_fallback.test A new test file is added to contain  cases of transparent fallback to the sequential execution. Rows_query_log_event case is placed there. Notice, the Query-log-event fallback is largely tested by rpl_parallel. @ sql/log_event.cc Refining event distribution logics in order to support fallback to the sequential execution. The following definions are framed out . curr_group_is_parallel - indicates a Worker is engaged for all operation incl dectruction for all events of the group. The value lasts till a next group is decided to be ""pure"" sequential so that C will execute it, update rli synchronously and destroy the events. curr_group_seen_begin  - indicates if the current group is started with a B-event (BEGIN query). The value lasts till T-event is distributed. . Deploying a w/a for  Rows_query_log_event that involves a nap to protect from a case of multiple Rows_query_log in one group. Notice, a specific (w/a as well) rule of destroying the event. @ sql/log_event.h Rows_query_log_event fallback to sequential support is added. @ sql/rpl_rli.cc Rows_query_log_event fallback to sequential support is added. @ sql/rpl_rli.h curr_group_isolated is defined to be a parallel group that is executed in isolation from any other ahead and behind workers. Coordinator is supposed to provide such environment, the new member is a facility to control it. @ sql/rpl_rli_pdb.cc Fixing usage of circular_buffer_queue::gt() to deploy an assert suggested by the heading comments. Refining logics of finding a gap in GAQ. Adding 2nd arg to wait_for_workers...() to cover the 2nd use case of waiting Workers by C. The two are: wait for all, and wait for all but not one being currently scheduled. @ sql/rpl_slave.cc Refining logics of C's commit to the main rli due to a pure sequential event (e.g FD, Rotate), similarly refining logics of freeing. Deploying a w/a for Rows_query_log_event. ------------------------------------------------------------ revno: 3246 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-14 16:46:20 +0200 message: merge from wl5569 repo ------------------------------------------------------------ revno: 3245 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-14 10:57:16 +0200 message: wl#5569 MTS a light cleanup to arrange the option/system var names properly - mts_-prefixing, and _exp prefixing for experimental features needed for benchmarking (mts_exp_slave_local_timestamp) or suppored limitly (mts_exp_slave_run_query_in_parallel for Query-log-event). Fixing GAQ size. It might be too tight e.g in case of the max WQ length of 1; tested with running rpl_parallel supplying --mts-slave-worker-queue-len-max=1. @ sql/rpl_slave.cc Fixing GAQ size. It might be too tight e.g in case of the max WQ length of 1. ------------------------------------------------------------ revno: 3244 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-13 18:53:32 +0200 message: wl#5569 MTS fixing a valgrind stack cauased by extra pfs-keys/cond_var. Those are removed with Alfranio`s consent ------------------------------------------------------------ revno: 3243 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-13 17:57:01 +0200 message: wl#5569 MTS fixing a set of valgrind warning cauased by a c&p ------------------------------------------------------------ revno: 3242 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-13 16:52:50 +0200 message: wl#5569 MTS updating results for few tests. ------------------------------------------------------------ revno: 3241 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-12-11 21:00:47 +0200 message: wl#5569 MTS 1. Fixing recovery related issue of DBUG_ASSERT(rli->get_event_relay_log_pos() >= BIN_LOG_HEADER_SIZE); at slave start with shifting mts_recovery_routine() at front of the assert. 2. Making SKIP-ed event to commit to the central RLI. That is correct since Workers are not executing anything at this time. 3. Fixing the default for mts_checkpoint_period which should not be zero normally. Zero makes sense solely for debugging (so we may stress that through VALID_RANGE(1,...). 4. Introduced a general mts-unsupported error/warning to apply to cases of non-zero parallel workers and a feature that parallelization can't work with. @ mysql-test/suite/rpl/r/rpl_parallel_start_stop.result results are updated. @ mysql-test/suite/rpl/t/rpl_parallel_start_stop.test Extending the test to cover UNTIL, SKIP, a temporary to the regular error escalation. ------------------------------------------------------------ revno: 3240 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-10 18:25:27 +0200 message: merge from wl5569 repo to a local branch ------------------------------------------------------------ revno: 3239 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-10 17:50:03 +0200 message: wl#5569 MTS Improving GAQ in a) limit size to be capable to hold items while all WQ:s are full b) move_queue_head() contained a flaw to make no progress falsely c) never let to enque in GAQ while it's full @ sql/log_event.cc Fixing impossible gaq_idx == -1. GAQ may not be full at this point. The total counter of executed groups starts from 1, that is nothing is done yet when 0. @ sql/rpl_rli_pdb.cc move_queue_head() contained a flaw to break the progress loop falsely. Fixed with comparing the current index with the Worker::last_group_done_index instead of this->last_done. The latter changed to become of pure statictics character and to contain the total seqno which is guaranteed to grow monotonically by its ulonglong size. @ sql/rpl_rli_pdb.h changes due to last_done turned into statistics holder. @ sql/rpl_slave.cc Improving GAQ in limit size to be capable to hold items while all WQ:s are full. Wait to release item at checkpoint() when GAQ is full. @ sql/sys_vars.cc opt_mts_coordinator_basic_nap is set to non-zero 5 msecs default value. ------------------------------------------------------------ revno: 3238 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-09 19:46:27 +0200 message: merge from wl5569 repo to a local branch ------------------------------------------------------------ revno: 3237 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-09 19:45:02 +0200 message: wl#5569 MTS Integration with wl#5599 recovery for MTS and fixing two asserts. One is due to missed cleanup of errored-out rows-events; the other is a work-around on w->curr_group_exec_parts->dynamic_ids is initialized to have one partition on the Worker startup, but it should not. @ sql/log_event.cc Propagating CP related info from C to W. @ sql/rpl_rli.cc Added a part of CP info from C to W propagation. @ sql/rpl_rli.h New members to RLI due to CP info from C to W propagation. @ sql/rpl_rli_pdb.cc Worker stores the new CP to mention it in flush_info() along with (todo) a bitmap of the executed groups within the checkpoint interval. @ sql/rpl_rli_pdb.h New members to a transport and the Worker class due to CP info. @ sql/rpl_slave.cc missed cleanup of errored-out rows-events; work-around on w->curr_group_exec_parts->dynamic_ids is initialized to have one partition on the Worker startup, but it should not. ------------------------------------------------------------ revno: 3236 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-08 13:59:07 +0000 message: WL#5599 Fixed warning messages. ------------------------------------------------------------ revno: 3235 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-08 12:59:07 +0000 message: WL#5599 Fixed test cases. ------------------------------------------------------------ revno: 3234 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-08 01:30:32 +0000 message: WL#5599 Fixed failures in test cases. ------------------------------------------------------------ revno: 3233 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-08 00:33:48 +0000 message: merge mysql-trunk --> mysql-next-mr-wl5569 Conflicts: . mysql-test/r/log_tables_upgrade.result . mysql-test/r/mysql_upgrade.result . mysql-test/r/mysql_upgrade_ssl.result . mysql-test/r/mysqlcheck.result . mysql-test/suite/perfschema/r/pfs_upgrade_lc0.result . mysql-test/suite/rpl/t/disabled.def . mysql-test/suite/sys_vars/r/all_vars.result . mysql-test/t/system_mysql_db_fix40123.test . mysql-test/t/system_mysql_db_fix50030.test . mysql-test/t/system_mysql_db_fix50117.test . sql/log_event.cc . sql/log_event.h . sql/rpl_mi.h . sql/rpl_slave.cc . sql/share/errmsg-utf8.txt ------------------------------------------------------------ revno: 3232 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-07 20:01:39 +0200 message: manual merge with a piece of recovery support on repo. rpl_parallel hits an assert that Alfranio is fixing ------------------------------------------------------------ revno: 3231 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-07 19:35:16 +0200 message: wl#5569 MTS Testing related fixes incl master_pos_wait() support and thereafter replacing sleeps with the functioning sync_slave_with_master; Fixing the limitted Q-log-event parallelization. After the fixing mixture of rows- and Q- transactions can run concurrently. Q-transaction will be treated sequentially by default. @ mysql-test/suite/rpl/r/rpl_parallel.result results updated. @ mysql-test/suite/rpl/r/rpl_sequential.result results updated. @ mysql-test/suite/rpl/t/disabled.def a nuisance test gets disabled. @ mysql-test/suite/rpl/t/rpl_parallel_conf_limits.test sleeps go away. @ mysql-test/suite/rpl/t/rpl_parallel_conflicts.test sleeps go away. @ mysql-test/suite/rpl/t/rpl_parallel_start_stop.test sleeps go away. @ sql/log_event.cc Fullfiling long perding time todo:s wrt update_pos and delete ev, update_pos() is redundant being superseded by a special commit of the Worker; Addressing {B, Q, T} not-parallel case. The issue was due to unability to support Q-log-event as quickly as Rows- parallelization. @ sql/rpl_rli_pdb.cc circular_buffer_queue::de_tail() a very specific method is motivated by the limitted support for Q-log-ev parallelization. It may happen to be unnessary once Q has become parallel. @ sql/rpl_slave.cc Implementing CP in successful read branch. ------------------------------------------------------------ revno: 3230 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2010-12-05 22:04:17 +0200 message: wl#5569 WL#5599 MTS & recovery Refining and correcting two wl:s integration. The main achievement is events execution status is consistently recorded into the Worker and the central RL recovery tables. That was tested manually in rather agressive env where IO was used to reconnect randomly and load from Master contained Rotate events. TODO: to fix: rpl.rpl_parallel_conf_limits may not pass to address: Multi-stmt Query-log-event transaction case (see todo in sources). to destruct by Workers their executed events (was deferred until ev->update_pos started working). (Alfranio) to deploy mts_checkpoint_routine() call inside the successful event read branch of next_event(). Otherwise no calling happens when Coord is constanly busy with read/distribute. ------------------------------------------------------------ revno: 3229 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-12-04 19:14:50 +0200 message: merging from the repo wl5569 ------------------------------------------------------------ revno: 3228 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-12-04 15:45:02 +0000 message: Added mutex to the checkpoint_routine. ------------------------------------------------------------ revno: 3227 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-03 16:56:11 +0000 message: Implemented periodic checkpoint if parallel slave is enabled. ------------------------------------------------------------ revno: 3226 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-03 10:15:45 +0000 message: Fixed commit_positions() and removed unnecessary checkpoint thread. ------------------------------------------------------------ revno: 3225 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-02 20:13:12 +0200 message: manual merge to wl#5569 tree ------------------------------------------------------------ revno: 3224 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-02 19:46:46 +0200 message: wl#5569 MTS User interface related: set @@global.slave_parallel_workers= `non-zero` following with `START SLAVE` starts slave with so many Worker threads. That is non-zero value is defacto the slave parallel execution mode. Earlier introduced enum enum_slave_exec_mode  SLAVE_EXEC_MODE_PARALLEL is withdrawn. Fixes rli->mts_pending_jobs_size statistics which might cause assert-crash otherwise. a silly c&p mistake of relay-log name change notification. Made a little clean-up including relocation of init-ion of workers related stuff into start_slave_workers(). Many changes in tests due to SLAVE_EXEC_MODE_PARALLEL and not only. @ sql/log_event.cc few asserts are motivated by a silly c&p mistake of relay-log name change notification. Fixing rli->mts_pending_jobs_size statistics which might cause assert-crash otherwise. @ sql/rpl_rli.cc relocating Worker related stuff from init at RLI constructor to the start slave workers; Intruduced a public Relay_log_info::reset_notified_relay_log_change() to call when C discovers the relay log name change (next_event). @ sql/rpl_rli.h the server @@global.slave_parallel_workers has affect only when the slave is stopped. At start the var's value is copied to rli::slave_parallel_workers and this value is in used in the slave session time. Refining is_parallel_exec() to base on the rli's value; @ sql/rpl_rli_pdb.cc Fixing a c&p bug for relay-log name; @ sql/rpl_slave.cc removing ealier intruduced extra rli->slave_worker_is_error; relocating Worker related stuff from init at RLI constructor to the start slave workers; @ sql/sql_class.h removing explicit slave exec paral mode. @ sql/sys_vars.cc changing default 4 to 0 for slave_parallel_workers. Non-zero value means so many Worker threads is launched. Conversely zero is the sequential slave execution mode. Fixing the name of the server var: mts_partition_hash_soft_max. ------------------------------------------------------------ revno: 3223 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-01 19:08:21 +0200 message: wl#5569 MTS The limit conditions such as WQ len, total WQ:s size related changes. Also a new test file is added. @ mysql-test/suite/rpl/r/rpl_parallel_conf_limits.result new results file. @ mysql-test/suite/rpl/r/rpl_parallel_conflicts.result results updated. @ mysql-test/suite/rpl/t/rpl_parallel_conf_limits.test Testing two RAM usage by Workers limit parameters. @ mysql-test/suite/rpl/t/rpl_parallel_conflicts.test Converting an assert into wait for that condition. Todo: improve the test to let it run with slave_run_query_in_parallel. @ sql/log_event.cc limit condition (wq len, total wql sizes) related changes. fixing a compilation warn. @ sql/mysqld.cc renaming. @ sql/mysqld.h renaming. @ sql/rpl_rli.cc renaming. @ sql/rpl_rli.h s / slave_max_pending_jobs / opt_mts_slave_worker_queue_len_max / the new name is supposed to indicate the purpose of the entity more clearly. @ sql/rpl_slave.cc renaming. @ sql/sys_vars.cc renaming. ------------------------------------------------------------ revno: 3222 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-11-30 16:39:40 +0200 message: merging from from wl#5569 repo containing wl#5599 integration ------------------------------------------------------------ revno: 3221 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-11-30 16:02:15 +0200 message: wl#5569 MTS Fixing group_relay_log_name change propagation from C to W; Garbage collection in the Partition-to-Worker hash is added with a parameter of how many records in the hash are tolerated w/o checking of the usage counter. Adding C-W synchronization due to: - overall WQ:s data max - hitting the limit of a WQ length Adding Flow Control infrastructure with - level of the hungry Worker forcing Coordinator to distribute eagerly symmetrically a Worker whose load is more than 100 % - hungry level is considered as fed-up. - nap time for C in case all WQ:s lengths are above the level. - a weight param to the base nap as a function of the number of fed-up W:s. TODO: UNTIL to force sequential exec; To fix ROWS_QUERY_LOG_EVENT corner case; to fix commented out // if (!ev) delete ev; after wl#5599 is merged (ev->update_pos() is done). @ sql/log_event.cc changes due to FC and WQ:s data size and WQ-lenght synch-ions; @ sql/mysqld.cc placeholders for few mts user interfaces variables are added. @ sql/mysqld.h mts user interfaces variables are interfaced. @ sql/rpl_rli.cc Correcting a cast that otherwise would not let relay log change be seen by Worker. @ sql/rpl_rli.h A set of user options is reflected by new members of the central RLI. A user var propagates its value into RLI at slave sys startup and can't affect the running slave anymore until the slave is stopped. @ sql/rpl_rli_pdb.cc Garbage collection in the Partition-to-Worker hash. @ sql/rpl_rli_pdb.h Exetending Slave_jobs_queue::waited_overfill. and Slave_worker::wq_overrun_set. . Overfill is seen as the queue's property whereas wq_overrun_set is about C-W flow-control. @ sql/rpl_slave.cc Initialization of the mts user option in the central RLI is added. Fixing a cast; Todo about ROWS_QUERY_LOG_EVENT; Comments on UNTIL forcing the sequential exec; @ sql/sys_vars.cc A set of mts related user options is added. ------------------------------------------------------------ revno: 3220 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-11-27 17:36:50 +0200 message: wl#5569 Providing relay-log name for wl#5599. Protocol of action on the C and W sides is described in rpl_rli_pdb.h. Erroring out in case of parallel exec and ROWS_QUERY_LOG_EVENT. (todo: the native sequential mode for the event needs some revision, in particular `delete ev' shall happen *always* in rli->cleanup_context not in two places as of current). @ sql/log_event.cc Erroring out in case of parallel exec and ROWS_QUERY_LOG_EVENT; Deploying C role of handling relay-log name change; @ sql/rpl_rli_pdb.cc Providing relay-log name for wl#5599. Freeing allocated memory for relay-log name at the end of the group execution by Worker. @ sql/rpl_rli_pdb.h Protocol of action on the C and W sides is here. Removing current_binlog; Adding a pointer group_relay_log_name member to st_slave_job_group. ------------------------------------------------------------ revno: 3219 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-11-26 23:08:30 +0200 message: wl#5569 MTS Partitioning conflict detection and handling is implemented. A new option to run Query in parallel though incompatibly with Rows- case in that the default db not the actual db:s are used as the partition key. User interface gained the global var and the cmd line opt: slave_run_query_in_parallel (Welcome to the set! :-) @ mysql-test/suite/rpl/r/rpl_parallel_conflicts.result new tests result file is added. @ mysql-test/suite/rpl/t/rpl_parallel_conflicts.test Partitioning conflicts detection, handling basic initial test is added. @ sql/log_event.cc Refining parallel vs sequential decider to cover optional support for Query parallelization. @ sql/log_event.h Refining only_serial_exec() with providing hints through two new args. @ sql/mysqld.cc new Query limited parallelization support related. @ sql/mysqld.h new Query limited parallelization support related. @ sql/rpl_rli.h changed are due to new Query limited parallelization support. @ sql/rpl_rli_pdb.cc Conflict detection, waiting, partition release is implemented. ------------------------------------------------------------ revno: 3218 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-andrei timestamp: Fri 2010-11-26 16:15:37 +0000 message: There was a mismatching between the number of fields read and write and by consequence the read was failing for the Slave_worker. ------------------------------------------------------------ revno: 3217 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-11-25 11:03:54 +0200 message: wl#5569 merging with wl#5599 piece of code ------------------------------------------------------------ revno: 3216 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-11-25 10:47:39 +0200 message: wl#5569 Converting the prototype time db2w hash to be concurrent; Necessary inruduction of the least occupied Worker notion. It's currently computed as Worker having the least number of distributed partitions. Adding parallel support for Query_log_event; caution: 1. the session/default not the actual db as the key 2. may not have been tested against all use cases (e.g int vars) Fixing slave stop issues. @ sql/log_event.cc dding parallel support for Query_log_event that forces changes in both Coord and Worker scopes; a query can have both B and g parallel properties. @ sql/rpl_rli.h Changes necessary for the concurrent hash. Although east occupied defined as one having the least number of partitions atm, that may be too coarse so a method basing on distributed jobs can be deployed in a while. @ sql/rpl_rli_pdb.cc Least occupied defined as one having the least number of partitions atm (may be too coarse so a method basing on distributed jobs can be deployed in a while). @ sql/rpl_rli_pdb.h Changes necessary for the concurrent hash and the parallelizable query-log-event. @ sql/rpl_slave.cc rli->least_occupied_workers is prepared to be used in the least occupied calc as a finer option. Improving Workers stop. ------------------------------------------------------------ revno: 3215 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-11-22 20:57:13 +0200 message: wl#5569 extinding futher interfaces to wl#5599 with propagating future_event_relay_log_pos to the Worker exec context. @ sql/log_event.cc extract the stored future_event_relay_log_pos to copy to worker rli. @ sql/rpl_slave.cc Store future_event_relay_log_pos into event member. ------------------------------------------------------------ revno: 3214 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-11-20 19:23:42 +0200 message: wl#5569 MTS Worker pool start, stop, kills, error out implementation. @ mysql-test/extra/rpl_tests/rpl_parallel_load.test increasing the load param to get more reliable benchmarking data out of the test. @ mysql-test/suite/rpl/r/rpl_parallel_start_stop.result a new tests results. @ mysql-test/suite/rpl/t/rpl_parallel_start_stop.test worker pool start, stop, kills, errors testing. @ sql/log_event.cc removing a false and unnessary extention-arg to exit_cond(); Refining start-stop alg to base on the Worker private info, not the common info. In particular handshakes organized through magic value of length of the Worker private queue to is set by an initiator. @ sql/rpl_slave.cc Starting a worker thread with passing its Slave_worker * pointer. Simplifying and refining start-stop. @ sql/sql_class.h removing a false and unnessary extention-arg to exit_cond(); @ sql/sys_vars.cc Reckoning a magic value outside of the valid range for pending_jobs. ------------------------------------------------------------ revno: 3213 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-11-19 16:51:58 +0200 message: wl#5569 recovery interfaces for wl#5599 implementation. The essence of this patch is to provide GAQ object implimentation and valid life cycle. The checkpoint handler prior to call store methods of wl#5599 is supposed to invoke rli->gaq->move_queue_head(&rli->workers). See a simulation of that near ev->update_pos() of the mail sql thread loop. The checkpoint info is composed as instance of Slave_job_group to reside as rli->gap->lwm. Todo: uncomment +  // delete ev;  // after ev->update_pos() event is garbage once the real checkpoint has been done. Todo: the real implemention needs to take care of filing Slave_job_group::update_current_binlog as initially so at time of executing Rotate/FD methods. +  // experimental checkpoint per each scheduling attempt +  // logics of next_event() + +    rli->gaq->move_queue_head(&rli->workers); @ sql/log_event.cc Log_event::get_slave_worker_id() got shaped more to the final version with elements necessary to rli->gaq lify cycle. @ sql/log_event.h Log_event::mts_group_cnt is added as a part of GAQ index propagation path from C to W. @ sql/rpl_rli.h Further extension to RLI necessary to the distribution hash function (APH). @ sql/rpl_rli_pdb.cc Implementing circular_buffer_queue::*queue and few other methods incl ulong Slave_committed_queue::move_queue_head() the main concern for checkpoint. @ sql/rpl_rli_pdb.h Extending classes with few new member definitions necessary for GAQ interface / checkpoint / recovery. @ sql/rpl_slave.cc Simulation of the lwm-checkpoint and changes due to rpl_rli_pdb classes extensions. ------------------------------------------------------------ revno: 3212 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-11-18 16:50:54 +0200 message: wl#5569 wl#5599 Recovery related. Prototyping the worker RLI instantiation, to be elaborated on. ------------------------------------------------------------ revno: 3211 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-11-18 16:00:52 +0200 message: wl#5569 MTS Extending the wl#5563 prototype gradually. This commit addresses: 1. recovery interface (a new Worker rli plus rli->gaq and pseudo-code for checkpoint to update GAQ and the central RLI recovery table. Wrt rli, C and W execute do_apply_event(c_rli) where c_rli is the central instance. C executes update_pos(c_rli), but W update_pos(w_rli). others: - decreased processing time for rpl_parallel, serial. @ sql/log_event.cc Enhance Log_event::get_slave_worker_id() to classify events by set of parallelization properties; Presence of a property in an event forces some actions both on C and W side. en_queue etc are prepared to turn into circular_buffer_queue methods. Pseudo-coded numerious todo:s wrt to low-level-design implementation. Deployed changes due to Worker private rli. Annotated on Deferred Array for B,p,r property events. . delete ev is moved from C to W which is fault-prone but it could not be kept any longer as a part of de_queue() that transits into cir_buf_queue class. @ sql/log_event.h removed `soiled' that was used to make delete ev run safely. Added Log_event methods identifying the parallelization properties, incl - contains_partition_info() to identify events containing info to be processed by the partition hash func - starts,ends_group() - also updated the list of only_serial(). @ sql/rpl_rli.cc Only Coordinator can destroy Workers dynarray; Relay_log_info::get_current_worker() turned out to become more complicated, see comments; Reminder to migrate rli->future... into  ev-> future_event_relay_log_pos which would make Worker to find the value out the event's context; Prototyped //  w->flush_info() in stmt_done; @ sql/rpl_rli.h The worker RLI has `this_worker' pointing to the actual worker instance. @ sql/rpl_rli_pdb.cc Annotated with fine details APH etc implementation. @ sql/rpl_rli_pdb.h Trasformed earlier queue struct into a family of classes. Recovery interface: last_group_done_index of Slave_worker to be filled in with an index of GAQ queue by W. To poll the value by C at checkpoint. Added CGEP to W context (sim to CGAP of C). @ sql/rpl_slave.cc Simplified the Worker poll. Deployed worker rli initialization. Recovery: rli->gaq is instantiated by C at worker poll activization. Recovery: pseudo-code for checkpoint in next_event(). @ sql/sys_vars.cc editted help lines for slave_max_pending_jobs. ------------------------------------------------------------ revno: 3210 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2010-11-14 11:55:32 +0000 message: Post-push fix for WL#5599. ------------------------------------------------------------ revno: 3209 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-11-12 17:58:12 +0000 message: Post-push fix for WL#5599. ------------------------------------------------------------ revno: 3208 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-11-11 11:53:01 +0000 message: WL#5599 The patch changed the handler's functions, i.e. init_info, check_info, flush_info, remove_info and end_info and the related private member functions, in both file and table handlers, to accept an index that identifies the information that will be read or written. This is necessary now because the handlers will be used by the workers to read and write information from file(s) and table and there may be several workers running at the same time and thus an index is used to identify the worker that is accessing information. This change is also necessary for the multi-master replication as information from each master must be uniquely identified. @ sql/binlog.cc Changed the calls to init_info, check_info, flush_info, remove_info and end_info and the related private member functions. @ sql/log_event.cc Changed the calls to init_info, check_info, flush_info, remove_info and end_info and the related private member functions. @ sql/rpl_constants.h Introduced an array and a variable that states the array's size and are used as parameters to init_info, check_info, flush_info, remove_info and end_info. . This is ok for now as we assume a single master and uses slave's id to identify entries in a system table, if there is any. However, this code needs to be changed when we start handling multi-master replication. @ sql/rpl_info.cc Introduced an array and a variable that states the array's size and are used as parameters to init_info, check_info, flush_info, remove_info and end_info. . This is ok for now as we assume a single master and uses slave's id to identify entries in a system table, if there is any. However, this code needs to be changed when we start handling multi-master replication. @ sql/rpl_info.h Changed the calls to init_info, check_info, flush_info, remove_info and end_info and the related private member functions. @ sql/rpl_info_factory.cc Changed the calls to init_info, check_info, flush_info, remove_info and end_info and the related private member functions. . Removed static references to field indexes used as primary key. @ sql/rpl_info_factory.h Removed static references to field indexes used as primary key. @ sql/rpl_info_file.cc Changed the calls to init_info, check_info, flush_info, remove_info and end_info and the related private member functions. @ sql/rpl_info_file.h Changed the calls to init_info, check_info, flush_info, remove_info and end_info and the related private member functions. @ sql/rpl_info_handler.h Changed the calls to init_info, check_info, flush_info, remove_info and end_info and the related private member functions. @ sql/rpl_info_table.cc Changed the calls to init_info, check_info, flush_info, remove_info and end_info and the related private member functions. . Changed the calls to find_info_for_server_id. @ sql/rpl_info_table.h Changed the calls to init_info, check_info, flush_info, remove_info and end_info and the related private member functions. @ sql/rpl_info_table_access.cc Changed the funciton find_info_server_id in order to put the cursor at a row identified by uidx which is an array of fields that composes a primary key. . The name of the function was also changed to reflect the new behavior. @ sql/rpl_info_table_access.h Changed the funciton find_info_server_id in order to put the cursor at a row identified by uidx which is an array of fields that composes a primary key. . The name of the function was also changed to reflect the new behavior. @ sql/rpl_mi.cc Changed the calls to init_info, check_info, flush_info, remove_info and end_info and the related private member functions. . Moved the call to handler->flush_info from write_info to flush_info in order to avoid passing uidx and idx as parameters. @ sql/rpl_mi.h Changed the calls to init_info, check_info, flush_info, remove_info and end_info and the related private member functions. @ sql/rpl_rli.cc Changed the calls to init_info, check_info, flush_info, remove_info and end_info and the related private member functions. @ sql/rpl_rli.h Changed the calls to init_info, check_info, flush_info, remove_info and end_info and the related private member functions. @ sql/rpl_rli_pdb.cc Changed the calls to init_info, check_info, flush_info, remove_info and end_info and the related private member functions. . Moved the call to handler->flush_info from write_info to flush_info in order to avoid passing uidx and idx as parameters. @ sql/rpl_rli_pdb.h Changed the calls to init_info, check_info, flush_info, remove_info and end_info and the related private member functions. @ sql/rpl_slave.cc Changed the calls to init_info, check_info, flush_info, remove_info and end_info and the related private member functions. ------------------------------------------------------------ revno: 3207 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-11-10 10:57:13 +0000 message: Refactory to start work on WL#5599. ------------------------------------------------------------ revno: 3206 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-11-09 13:34:18 +0000 message: Removed mysql-test/collections/mysql-next-mr.crash-safe.* in the WL#5569. ------------------------------------------------------------ revno: 3205 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-11-09 13:04:14 +0000 message: merge mysql-next-mr.crash-safe --> mysql-next-mr-wl5569 Conflicts: . sql/CMakeLists.txt . sql/Makefile.am . sql/sql_class.h . sql/rpl_slave.cc ------------------------------------------------------------ revno: 3204 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-11-09 11:39:37 +0000 message: merge mysql-next-mr-wl5563-labs --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3203 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-17 23:33:37 +0300 message: wl#5563 simplifying memory handling for the Coor-Workers transport to avoid sporadic crashes ------------------------------------------------------------ revno: 3202 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-17 21:19:56 +0300 message: wl#5563 leaving out a fine garbage collection. That task is unnessary to solve at prototyping time. Update-pos routine to be implemented is going to eliminated that piece of code ------------------------------------------------------------ revno: 3201 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-17 20:38:35 +0300 message: wl#5563 Extending the tests base to split the former rpl_parallel into two to run in serial exec mode as well. @ sql/log_event.cc Condition-out few debug purpose print:s. ------------------------------------------------------------ revno: 3200 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-17 11:49:00 +0300 message: wl#5563 improved test; fixed a delete issue that was used to crash; added @@global.slave_local_timestamp to fill in timestamp col slave clock value. Performance growth can be seen through the test. todo: merge with Alfranio work on hashing and dyn alloc of PFS obj:s. ------------------------------------------------------------ revno: 3199 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Wed 2010-09-15 14:51:49 +0300 message: wl#5563 tests for the wl. Number of workers and iterations can be tuned. todo: convert as param:s to pass to the test through mtr ------------------------------------------------------------ revno: 3198 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Mon 2010-09-13 18:22:41 +0300 message: wl#5563 adding an ingeneous no-stress-attempting-yet test that also fired an assert. Refined the Worker instance ref computing because cleanup_context() is executed by the sql-thread the coordinator as well ------------------------------------------------------------ revno: 3197 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Mon 2010-09-13 13:15:38 +0300 message: wl#5563 Rows-event parallelization basically is implemented although tested shallowly. Write access to rli central stuct by workers may not be eliminated fully at this phase. E.g that relates to errors. todo: to prove rli gets out of Worker scope todo: to provide a stress test @ sql/log_event.cc changing from the direct to api-based access to RBR-applying context. @ sql/rpl_rli.cc implementation of RBR-applying context api. @ sql/rpl_rli.h copying RBR applying part of context info from rli to the Worker class; RLI gets accessor methods to RBR applying context to choose a right object from either the central (RLI) or the Worker repository. ------------------------------------------------------------ revno: 3196 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Sat 2010-09-11 17:00:08 +0300 message: wl#5563 adding Rows-event limitted to one Worker support. Deferred deletion did not check emptyness of the list ------------------------------------------------------------ revno: 3195 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-10 20:36:07 +0300 message: wl#5563 correcting comments to indicate less limitations ------------------------------------------------------------ revno: 3194 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-10 20:32:39 +0300 message: WL#5563 Prototype for Slave parallelized by db name More progress to the WL in that the STMT binlog-format works while the conceptual limits are held. That is no query/transaction is allowed to deal with more than one db. Addressed a complication in that update pos method that is run by Coordinator belongs to Log_event hierarchy and therefore the event deletion now by Worker must be careful. Todo: 1. (High prior) fix Row-format complications 2. (Hight prior) Elaborate on the hash function to be a function on db text name 3. (Optional)  Consider moving update_pos to the RLI class to get rid of the delete logics complication. How-to-use: The instuction can be found in comments of the previous commit, see there for more details. In brief though, the db names have to follow a pattern: `test[0-9]'. E.g test0, test1, test2, test3 for the default four Worker threads. Slave side has to set @@global.slave_exec_mode=PARALLEL; before START SLAVE. @ sql/log_event.cc Hashing function is refined to circumvent lack of db info in associated with a query event internal events; Executed event can't be just delete-d by Worker since SQL-thread needs it to update positions. Hence a piece of code added to defer delete till time SQL has marked the event as `soiled'. @ sql/log_event.h A new member to allow deletion of an executed event. @ sql/rpl_rli.h A new member to Worker class for deferred delete of the exec-d event. A new member to RLI class to memorize the last time assigned worker. @ sql/rpl_slave.cc Setting marks on event by SQL coord thread. ------------------------------------------------------------ revno: 3193 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Thu 2010-09-09 21:43:16 +0300 message: WL#5563 Prototype for Slave parallelized by db name This is an intermediate commit that indicates some progress. Namely, the worker pool operates correctly and with signs of scalable performance. How to test: connection master; set @@global.binlog_format=statement; connection slave; set @@global.slave_exec_mode=PARALLEL; set @@global.binlog_format=mixed; show processlist; => IO, SQL threads + 4 workers by default change master to ... connection master; create database test0; create database test1; create database test2; create database test3; # create databases with magic names ""test[0-9]+"", where the number will index # a worker. create database test0; create database test1; create database test2; create database test3; # create tables. they are only of MyISAM type for now use test0; create table tm_1(a int, b int) engine=myisam; use ... # DML on tables: use test[0-3]; insert into tm_1 values (1,0); ... ... connection slave; # monitor CPU (visually this time: top etc) # check correctness e.g select count(*) from test[0-3].tm_1; connection master; select count(*) from test[0-3].tm_1; @ sql/log_event.cc mts coordinator (C) and worker (W) code is added. C - fills in a job assignment and queues it to a selected via get_slave_worker_id (todo: to elaborate on) W private queue; W - spins in wait-extract-exec loop of slave_worker_exec_job(); Redefining Log_event::apply_event() to continue serving as the usual serial applier and making it to distribute events between Workers. @ sql/log_event.h Log_event accepted get_slave_worker_id() to assign a worker basing on hashing function implemented in the method, only_serial_exec() to filter out not-parallelizable events; do_apply_event() made of public scope; @ sql/mysqld.cc PSI interfaces required to add keys for all mutex:s, cond:s that MTS introduces to sources. Only for the prototype implementation declaration contain explicit max index in arrays (16) - to be elaborated on in following patches. `slave_parallel_workers' as placeholder of the value for a new glob sysvar is added. @ sql/mysqld.h externalization to access `slave_parallel_workers' and the PSI keys in other parts of the code. @ sql/rpl_rli.cc Instantiations, initial allocations and destruction for RLI members added by MTS; @ sql/rpl_rli.h Definitions for the Worker, its communication with Coordinator and gathering statistics; is_parallel_exec() is a compromize because of unreported yet bug (see comments). @ sql/rpl_slave.cc Added the worker pool initialization, termination. Added the thread handler for Worker. @ sql/rpl_utility.h macros that can be used in near future are added. @ sql/sql_class.h More values to the slave_exec_mode set (which mistakenly is defined as sys_var_enum); refining exit_cond() to allow the mutex not be released. The default behaviour when one arg supplied is not changed. @ sql/sys_vars.cc A new global sysvar for number of workers. Is supposed to be updatedable in run time. todo: (bug report) notice static enum Slave_exec_mode - it should be Sys_var_*set*. ****** wl#5569 MTS fixing explicit error code in rpl_parallel_start_stop that changed due to merge with trunk. ****** WL#5596 MTS Here is the total cset combining all revisions done since Sep 2010. Comments from the original commits are pasted in reverse chronological order. ------------------------------------------------------------ revno: 3364 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-08-18 17:09:22 +0300 message: wl#5569 MTS Refining rpl_rotate_logs that could not produce deterministic output. The list of binlogs contained one binlog more than expected. ------------------------------------------------------------ revno: 3363 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-08-18 14:56:01 +0300 message: updating result files that were left incorrect by the last merge. ------------------------------------------------------------ revno: 3362 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-08-18 14:44:59 +0300 message: wl#5569 MTS Failure in recovery when binlog-checksum is active. The reason of the failure was in that parsing of relay log by MTS recovery gaps computing did not make sure to use the relay-log own FormatDescriptor events that contain checksumming info for all events in the log. Fixed with taking care to find out the checksum algorithm for every relay log as the first step of MTS recovery gaps computing. ------------------------------------------------------------ revno: 3361 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-08-17 11:21:23 +0300 message: merge from trunk forced to resolve few semantical conflicts caused by changes in THD::enter_cond() of the trunk. ------------------------------------------------------------ revno: 3360 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-07-27 08:56:14 +0100 message: Fixed failure in test rpl_mts_check_concurrency when running in the mts collection. ------------------------------------------------------------ revno: 3359 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-26 19:46:41 +0100 message: Added a test case that checks if MTS allows to concurrently access the replication tables, and as such, concurrently commit transactions that update different databases. ------------------------------------------------------------ revno: 3358 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-22 20:08:43 +0100 message: Configured rpl_parallel_switch_sequential to run in row and mixed mode to avoid cluttering the error log with messages on unsafe execution. ------------------------------------------------------------ revno: 3357 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-22 19:02:14 +0100 message: This patch contains the following fixes: . Removed suppressed warning introduced in the wrong test case (i.e. rpl_corruption) and put it in the correct one (i.e. rpl_row_corruption). . Introduced variable to avoid clutering the error log with several warning messages on unsafe execution. ------------------------------------------------------------ revno: 3356 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-22 11:01:12 +0100 message: This patch has the following changes: . Specific directories were created for the MTS runs in the default.push. . Warning message was suppressed in the rpl_corruption.test. . Annoying debug outputs were removed from the error log. However, this is a temporary solution as it forbids to enable traces. ------------------------------------------------------------ revno: 3355 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-07-20 11:56:40 +0100 message: merge mysql-trunk --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3354 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-19 22:26:30 +0300 message: wl#5569 MTS valgrind reported a stack on rpl_savepoint. The problem appears to be in that at computing slave_sql_running_state in show_mater_info() the sql thread proc_info pointer could refer to a value in a stack that has already gone. Fixed with making proc_info to point to a string literal. ------------------------------------------------------------ revno: 3353 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-19 17:46:43 +0100 message: Suppressed warning messages that could potentially cause problems while running mts crash safe test cases. ------------------------------------------------------------ revno: 3352 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-07-18 21:46:45 +0300 message: wl#5569 MTS Cosmetic changes are done to address readability and clearness of source code of the MTS patch. ------------------------------------------------------------ revno: 3351 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-07-18 14:52:44 +0300 message: wl#5569 MTS Inadvertently introduced hunk two rev:s back is reverted to please rpl_*_mts_crash_safe. ------------------------------------------------------------ revno: 3350 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-07-17 00:51:45 +0300 message: wl#5569 MTS fixing build issue for embedded. Public visibility for Rows_log_event::do_apply_event() is restored. ------------------------------------------------------------ revno: 3349 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-07-16 20:08:31 +0300 message: wl#5569 MTS The patch contains improvements after code review. Changes are mostly consmetic. ------------------------------------------------------------ revno: 3348 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-07-16 02:11:11 +0300 message: bug#12755663 MTS: RPL_CIRCULAR_FOR_4_HOSTS FAILS: CANT EXECUTE THE CURRENT EVENT GROUP MTS stopped with an error in the middle of the test. The reason is that a group of events from the slave itself was processed partly to modify the group position. In the following restart the wrong group bondary made slave either to error out or assert. Fixed with locating a possible race condition allowin Coordinator to ignore actual failed status of a Worker. So in the case of the test, the slave server group can't be started. Notice, this is a trial patch since I can't catch the failure on available to me hosts at all. ------------------------------------------------------------ revno: 3347 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-07-14 12:40:06 +0300 message: WL#5569 MTS further extensive rpl_circular_for_4_hosts exersices with --repeat 10 --parallel=8 revealed a race condition in that Coordinator might miss to catch not-running status for a Worker. That made Coordinator to skip only a part of a group of the slave server own events so the slave stops at not the bondary of a group. Fixed with moving marking of the errored-out Worker as failed prior to its APH entries release. TODO: notice there can be a possibility to stop at not the boundary due to graceful STOP SLAVE if one is run at time of skipping self-originated events. However this issue belongs to STS and might be similar with BUG@12604951 and BUG@12728160. ------------------------------------------------------------ revno: 3346 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-07-14 08:03:55 +0100 message: Post-push fixes for WL#5569 Injecting faults while updating a myisam table requires to flush the changes before committing suicide. So we have introduced the follwing code: DBUG_EXECUTE_IF(""crash_after_commit_and_update_pos"", -                       DBUG_SUICIDE();); +           sql_print_information(""Crashing crash_after_commit_and_update_pos.""); +           flush_info(TRUE); +           DBUG_SUICIDE(); Besides we improved some comments. ------------------------------------------------------------ revno: 3345 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-07-13 16:23:57 +0100 message: WL#5569 ------------------------------------------------------------ revno: 3344 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-07-13 00:10:43 +0300 message: wl#5569 MTS merge trunk -> wl5569-tree ------------------------------------------------------------ revno: 3343 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-12 23:36:17 +0300 message: wl#5569 MTS adding suppression due to expected warning to rpl_circurlar_for_4_hosts; decreasing a loop limit in rpl_parallel_switch_sequential in case of statement format. ------------------------------------------------------------ revno: 3342 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-12 14:46:23 +0300 message: WL#5569 MTS Fixing code and test due to rpl.rpl_circular_for_4_hosts  mismatch failure, like http://pb2.norway.sun.com/?action=archive_download&archive_id=3608382. The reason of the mismatch was that when having two group of events to execute, the first for a Worker and the 2nd for Coordinator, Coordinator waited for the 1st group completion but did not verify success of synchronization. So in a case of the failed applying of the 1st group processing of the 2nd could find an inconsistent state to end up with a segfault (even though only the mismatch has been seen so far). ------------------------------------------------------------ revno: 3341 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-07-10 22:40:01 +0100 message: Avoiding busy waiting when running mts recovery tests. ------------------------------------------------------------ revno: 3340 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-07-09 23:11:58 +0100 message: Removed --slave-checkpoint-period from MTS test cases. ------------------------------------------------------------ revno: 3339 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-07-09 23:08:07 +0100 message: Improved test cases for the WL#5569. ------------------------------------------------------------ revno: 3338 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-08 22:40:52 +0300 message: wl#5569 MTS The patch refines logics of applying phase of MTS-recovery to always applying events that are for Coordinator; fixes few tests to make them passable on PB; makes GAQ size to be of checkpoint_group value. ------------------------------------------------------------ revno: 3337 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-08 07:54:34 +0100 message: Reduced the timeout period to run the checkpoint routine by setting slave-checkpoint-period to 30. ------------------------------------------------------------ revno: 3336 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-08 07:44:35 +0100 message: merge mysql-trunk --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3335 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-07-06 12:46:05 +0300 message: wl#5569 MTS refining wait for db-hash entry release at event distribution. The graceful STOP is not accepted at this point so Coordinator continues to stay in a loop. ------------------------------------------------------------ revno: 3334 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-05 20:43:04 +0300 message: bug#12719875 possible MTS recovery issue. MTS stopped with an error after failing to apply an event. It turned out that the event was sceduled incorrectly due to earlier stop by Single-Threaded Slave not at the group boundary but rather in the middle of it. Fixed with forcing CREATE..SELECT be logged as two groups. The CREATE-TABLE group is surrounded with its own BEGIN/COMMIT braces. ------------------------------------------------------------ revno: 3333 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-07-04 18:14:09 +0300 message: wl#5569 MTS Adding a rule to run PB with all suites in MTS with binlog-format ROW. ------------------------------------------------------------ revno: 3332 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-07-03 23:29:34 +0300 message: wl5569 MTS cleanup in one file. ------------------------------------------------------------ revno: 3331 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-07-03 23:16:02 +0300 message: wl5569 MTS bzr commit mail address changed; a minor cleanup to make mts_is_worker() with const argument; releasing a test to run in MTS. ------------------------------------------------------------ revno: 3330 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-07-02 08:58:56 +0100 message: Fixed use of the performance schema in the replication code and concurrency issue in the IO Thread. In particular, the IO Thread was calling flush_master_info without grabbing locks. ------------------------------------------------------------ revno: 3329 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-01 16:41:35 +0300 message: wl5569 MTS merging from the main repo. ------------------------------------------------------------ revno: 3328 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-01 15:48:25 +0300 message: wl#5569 MTS the final cleanup patch. There are few glitches that were considered as tolerable at least for time of the total wl's code is being reviewed. That includes: - no support to old load-data events - no support for FK to add to the list, there are few places in the patch that suggests to deploy error branches each time flush_info() is called. ------------------------------------------------------------ revno: 3327 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-01 13:16:52 +0300 message: wl#5569 MTS The patch cleans up some host of code. ------------------------------------------------------------ revno: 3326 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-28 11:30:18 +0300 message: wl#5569 MTS replacing views with regular tables for consistency verification in rpl_parallel_innodb. Also a minor cleanup in rpl_parallel is done. ------------------------------------------------------------ revno: 3325 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-27 20:31:45 +0300 message: wl#5569 MTS Cleanup and addressing sporadic rpl_temp_table_mix_row failure in post-execution mtr.check_testcase(). The check of the test failure was caused by faulty optimization in avoiding to migrate temporary tables from Coordinator to Workers in case of rows-event assignement. while it's correct with the homogenous rows-event only load, the mixture can fail. Fixed with removing the optimization so map_db_to_worker() always relocates which is somewhat suboptimal and should be improved in future. ------------------------------------------------------------ revno: 3324 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-27 13:12:52 +0100 message: Ensured that updates to the worker_info_repository are transactional and fixed the slave_checkpoint_group_basic test case. ------------------------------------------------------------ revno: 3323 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-26 13:02:59 +0100 message: Fixed test case. ------------------------------------------------------------ revno: 3322 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-06-25 15:14:24 +0100 message: Introduced test case for recovery with MTS and fixed bugs in recovery. ------------------------------------------------------------ revno: 3321 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-24 15:38:19 +0300 message: wl#5569 MTS This patch makes a bit of cleanup, addresses one memory-allocation todo and completes fixing valgrind report (rpl_parallel_start_stop) due to strings allocation in Slave_job_group items. ------------------------------------------------------------ revno: 3320 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-24 12:38:34 +0300 message: wl#5569 MTS this patch completes the previous one to fixes a result file and make the innodb specific test verification to base on tables not views. ------------------------------------------------------------ revno: 3319 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-24 00:11:22 +0300 message: wl#5569 MTS this is an exploratory patch to sort out if verification method what was based on views has its own not related to mts flaw. The patch calls verification macro on the tables that required some adjustment. ------------------------------------------------------------ revno: 3318 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-06-23 07:56:15 +0300 message: wl#5569 MTS fixing results of mysqld--help-win. ------------------------------------------------------------ revno: 3317 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-22 19:20:40 +0100 message: merge mysql-next-mr-wl5569 (local) --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3316 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-22 19:17:43 +0100 message: In some platforms, such as Windows, thread's wait time is stored in 100ns units. However, when computing the difference between two values, the result value was not multiplied by 100. Besides, there was a casting problem when the aforementioned result value was assigned to an ulong. ------------------------------------------------------------ revno: 3315 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-22 18:54:23 +0100 message: Fixed how mts copes with recovery. ------------------------------------------------------------ revno: 3314 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-21 19:10:54 +0300 message: wl#5569 MTS Fixing valgrind warnings. ------------------------------------------------------------ revno: 3313 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-21 18:15:43 +0300 message: wl#5569 MTS rpl_parallel_start_stop.test could fail sporadicaly with timeout. ------------------------------------------------------------ revno: 3312 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-20 23:21:56 +0100 message: merge mysql-next-mr-wl5569 (local) --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3311 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-20 23:19:06 +0100 message: Fixed error when computing the Lower-Water-Mark. If two or more jobs were removed from the Group of assigned jobs and one of the jobs had a non-empty group relay log but the last one had an empty group relay log. The Lower-Water-Mark was not correctly updated, because the algorithm assumed that the group relay log was null. ------------------------------------------------------------ revno: 3310 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-20 11:52:44 +0100 message: Fixed valgrind errors. Slave_job_group was silently being cast to LOG_POS_COORD while calling sort_dynamic(&above_lwm_jobs, (qsort_cmp) mts_event_coord_cmp) and by consequence mts_event_coord_cmp(LOG_POS_COORD *, LOG_POS_COORD *). This had two problems: . The first two entries in the Slave_job_group were not a pointer to a char * and my_offset. . Even if the first two entries were char * and my_offset, such casting could lead to alignment problems. To fix the problem, we avoid this casting. ------------------------------------------------------------ revno: 3309 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-19 19:14:50 +0300 message: wl#5569 MTS fixing slave_transaction_retries_basic_64.result ------------------------------------------------------------ revno: 3308 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-19 16:11:25 +0300 message: wl#5569 MTS fixing tests. ------------------------------------------------------------ revno: 3307 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-19 12:33:36 +0300 message: wl#5569 MTS Fixing rpl.rpl_mixed_binlog_max_cache_size that revealed incorrect asynchronous handling of a Rotate event which does not split the current group and therefore has to be executed after all previously scheduled events. Fixing sensetivity of two other tests to mtr's invocation environment that includes inital values of slave_parallel_workers and slave_transaction_retries. ------------------------------------------------------------ revno: 3306 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-19 09:04:19 +0100 message: Fixed some windows failures. ------------------------------------------------------------ revno: 3305 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-06-18 19:58:21 +0100 message: Fixed some recovery issues. ------------------------------------------------------------ revno: 3304 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-17 21:01:58 +0300 message: wl#5569 MTS fixing tests and a segfault at the end of handle_slave_sql() happened after worker initialization failed (e.g rpl_row_log on win). ------------------------------------------------------------ revno: 3303 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-17 18:34:16 +0300 message: wl#5569 MTS fixing tests. ------------------------------------------------------------ revno: 3302 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-17 14:00:41 +0300 message: wl#5569 MTS fixing rpl_row_basic_3innodb similarly to the previous patch. ------------------------------------------------------------ revno: 3301 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-17 13:51:59 +0300 message: wl#5569 MTS fixing few tests. 1. Policy is implemented for reacting with a warning in a case of failing worker leaves the total slave state with gaps thereby inconsistent. 2. Two tests that were used to time out due to reset master/slave was disabled in there. ------------------------------------------------------------ revno: 3300 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-17 02:24:59 +0100 message: Removed unnecessary test cases and augment others in order to test recovery. ------------------------------------------------------------ revno: 3299 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-06-16 19:46:22 +0300 message: wl#5569 MTS fixing slave_parallel_workers_basic and rpl_stop_middle_group which cant run in MTS ------------------------------------------------------------ revno: 3298 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-06-16 11:29:53 +0300 message: wl#5569 MTS adding new tests to sys_vars.\ ------------------------------------------------------------ revno: 3297 committer: Luis Soares <luis.soares@oracle.com> branch nick: mysql-trunk-wl5569 timestamp: Thu 2011-06-16 01:41:32 +0100 message: WL#5569 Adding a global suppression for the warning that may appear when stopping the slave sql thread in the middle of a group. This should affect MTS mode only. ------------------------------------------------------------ revno: 3296 committer: Luis Soares <luis.soares@oracle.com> branch nick: mysql-trunk-wl5569 timestamp: Thu 2011-06-16 01:40:41 +0100 message: WL#5569 Renames worker-info-repository to slave-worker-info-repository in some tests option files. ------------------------------------------------------------ revno: 3295 committer: Luis Soares <luis.soares@oracle.com> branch nick: mysql-trunk-wl5569 timestamp: Thu 2011-06-16 01:32:37 +0100 message: WL#5569 More test fixes. Removing remaining prefixes 'mts' from mts variables, which have been renamed recently. ------------------------------------------------------------ revno: 3294 committer: Luis Soares <luis.soares@oracle.com> branch nick: mysql-trunk-wl5569 timestamp: Thu 2011-06-16 00:27:20 +0100 message: WL#5569 Fixing rpl_parallel result file. ------------------------------------------------------------ revno: 3293 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-15 20:41:33 +0300 message: wl#5569 MTS correcting --slave-parallel-workers in few more files ------------------------------------------------------------ revno: 3292 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-15 20:31:46 +0300 message: wl#5569 MTS correcting --slave-parallel-workers in collections/default.push ------------------------------------------------------------ revno: 3291 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-15 20:12:11 +0300 message: wl#5569 MTS Cleanup, including 1. decreasing number and renaming system variables. Important for debugging command line options are replaced with reasonble constant values and only necessary are retained. 2. Small encapsulation in ha_blackhole.cc is done. ------------------------------------------------------------ revno: 3290 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-15 15:59:23 +0100 message: Fixed replication valgring failures caused by the MTS. ------------------------------------------------------------ revno: 3289 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-14 21:23:13 +0300 message: wl#5569 MTS wl#5754 Query event parallel execution Fixing failing tests and a failure in gathering accessed databases that was caused by a recent merge from trunk. ------------------------------------------------------------ revno: 3288 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-14 13:35:20 +0300 message: merge from trunk ------------------------------------------------------------ revno: 3287 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-14 12:27:38 +0300 message: wl#5569 MTS Fixing failing tests due to a. a flaw in `isolated parallel' mode implementation. Isolation applies to a group of event rather than to an instance. And event that contains over-max accessed db:s or event from Old master trigger marking the current being scheduled group. Such group will be executed having all prior scheduled done and nomore will be scheduled until the group is done. b. Notification to Coordinator about errored-out Worker is corrected. ------------------------------------------------------------ revno: 3286 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-12 22:33:32 +0300 message: wl#5569 MTS making default.push to run rpl suite with non-default --mts-slave-parallel-workers > 0 in all three format/mode (row,stmt, mixed). The default is run for all suites in mixed mode and rpl suites with row+ps, stmt formats. ------------------------------------------------------------ revno: 3285 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-12 22:05:05 +0300 message: wl#5569 MTS manual merge with few fixes for segfault of the last merge from the trunk etc, compilation issue on embedded. ------------------------------------------------------------ revno: 3284 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-06-09 18:35:59 +0100 message: Post-fixes for merge. Fixed compilation in Windows and removed an used options. ------------------------------------------------------------ revno: 3283 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-06-09 16:27:47 +0100 message: merge mysql-trunk --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3282 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-06 13:51:19 +0300 message: wl#5569 MTS STOP SLAVE now stops consistently w/o gaps, KILL shall be used for an urgent stop, an error case behaves like the killed. For instance, a Worker errors out, it sends KILL to Coordinator through THD::awake(), and Coordinator kill the rest through setting a special Worker-running status to killed (which breaks the read-exec loop of a Worker). ------------------------------------------------------------ revno: 3281 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-05 20:01:51 +0300 message: wl#5569 MTS More cleanup, fixes due to found issues when running tests, some improvements incl in stopping Workers to make routine to distinguish between killed and gracefully stopped cases so in the end STOP SLAVE will guarantee consistent state (some todo remains still). ------------------------------------------------------------ revno: 3280 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-05-30 13:05:07 +0300 message: WL#5569 MTS WL#5754 Query event parallel applying ----------------------------------------------------------------- Aggregating 7 commits that are not pushed yet to the wl5569 repo. Find comments for each cset below. ------------------------------------------------------------------ The current patch addresses concurrent updating slave_open_temp_tables status counter. The former declaration of the underlying server variable is changed from ulong to int32. While that might affect (shrink) the actual range, there has been no specified range and now after the number of bits is the same on all platforms the range cat be set to be [0, max(int32)] ****** wl#5569 MTS Wl#5754 Query event parallel appying wl#5599 MTS recovery The patch includes some cleanup, including one for temp tables support, realization of few todo:s. ****** wl#5569 MTS wl#5754 Query event parallel applying More cleanup is done; Fixing temp tables manipulation. Asserting an impossible to support use case of group of events not wrapped with BEGIN/COMMIT. Todo: recognize old master binlog to refuse to run in parallel. ****** wl#5569 MTS Implementation of giving out the applier role to Worker for all cases but ones dealing with the Coordinators state. That includes Query event with over-max-db:s and Load-data related events. The current patch also makes old master binlog be handled by MTS though sometimes e.g for Query event to switch to the sequential mode. Fixing a race condition making C to wait endlessly if a Worker has exitted due to its applying error. ****** wl#5569 MTS correcting an assert that was used to fire as warned in the previous commit. Parallel feature tests pass now. ****** wl#5569 MTS This patch contains cleanup and simplification of logics of handling some events sequentially by Coordinator and adds memory-allocation failure branch to workers starting routine. ****** wl#5569 MTS An intermediate patch to address few issues raised by reviewers. To sum up, it's about cleanup and logics simplification of event distribution to Worker and consequent actions. Some efforts were paid to support Old Master Begin-less group of events. ------------------------------------------------------------ revno: 3279 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-05-24 17:29:35 +0300 message: WL#5569 MTS WL#5754 Query parallel appying Changing implementation of temporary tables support in MTS. Cleanup, fixing few todo:s and few potential issues found. ------------------------------------------------------------ revno: 3278 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-05-19 12:36:28 +0300 message: wl#5569 MTS Support for ROWS_QUERY_LOG_EVENT is added. It required refactoring of its handling in the canonical sequential mode. The event life suggests its behavior similar to objects associated with Table_map, in particural, its destoying to occur at the end-of-statement time. Tested against existing ROWS_QUERY_LOG_EVENT feature tests incl rpl_row_ignorable_event in both sequential and parallel mode. ------------------------------------------------------------ revno: 3277 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-05-16 22:43:58 +0300 message: wl#5569 MTS Simplifying Coordinator-Worker interfaces. In essence after this patch Worker execute events in its private context (class Slave_worker :public Relay_log_info). The only exception is Query referring to temporary table. The temp:s are maintained in the Coordinator's ""central"" rli; removing some dead code; performing a lot of cleanup. There are few todo items incl: 1. To implement several todo:s scattered across MTS' code and tests (e.g to restore protected for few members of RLI of rpl_rli.h); 2. to cover Rows_query_log_event that currently can cause hanging (e.g rpl_parallel_fallback) 3. To sort out names of classes based on Rpl_info, possibly remove  Rpl_info_worker ------------------------------------------------------------ revno: 3276 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-05-06 21:33:32 +0300 message: wl#5569 MTS improving benchmarking test. ------------------------------------------------------------ revno: 3275 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-04-06 15:51:58 +0300 message: wl#5569 MTS Statistics for Workers and Coordinator incl waiting times, sleeping is reported now into the error log as slave stopping time. ------------------------------------------------------------ revno: 3274 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-04-05 19:26:37 +0300 message: wl#5569 MTS restoring previous 4 default workers that rpl_parallel works with. ------------------------------------------------------------ revno: 3273 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-04-03 13:07:30 +0300 message: wl#5569 MTS Benchmarking related patch uniforms rpl_parallel to be run with arbitrary number of workers, db:s, tables, etc. TODO: to restore the final constinency check which is given out temporary while i could not find a way to leave it surrounded with  a --dis/en-able* stanza. ------------------------------------------------------------ revno: 3272 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-04-02 14:32:02 +0300 message: wl#5569 MTS a test file for benchmarking is added. Benchmarking results can be gained by extracting the master side generating and the slave side applying times like in the following loop: workers=6; for n in `seq 1 3`; do echo; echo loop: $n; echo; my_mtr.sh --mysqld=--mts-slave-parallel-workers=$workers  \ rpl_parallel_benchmark --mysqld=--binlog-format=statement \ && cat /dev/shm/var/mysqld.2/data/test/delta.out >> p${workers}_stmt.out 2>&1; done ------------------------------------------------------------ revno: 3271 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-03-30 17:11:24 +0300 message: wl#5754 Query event parallel execution Small cleanup for comments as requested by reviewer. ------------------------------------------------------------ revno: 3270 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-02-27 19:35:25 +0200 message: WL#5754 Query event parallel execution Bundling together implementation the whole DML+DDL Query parallel support. That includes: The earlierst four rev:s to cut off the DML stage of the parallel query project from the following devoted to DDL. The four skeleton parallel applying of Queries containing a temporary table, and implement a core of the design that is the DML queries. Queries can contain arbitrary features including temp tables. The DDL part also refined few items related to the general low-level design. In particular,  of the mark of the over-max db:s in the updated-db:s status var is turned to be another new constant value. The very last patch to the bundle addresses the last review mail notes. ------------------------------------------------------------ revno: 3269 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-01-12 01:01:02 +0200 message: merging from mysql-trunk ------------------------------------------------------------ revno: 3268 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-01-12 00:54:12 +0200 message: wl#5569 MTS fixing the worker threads start/stop. ------------------------------------------------------------ revno: 3267 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-27 18:54:41 +0000 message: merge mysql-trunk --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3266 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-24 01:57:03 +0200 message: wl#5569 MTS the timed-wait loop of SQL thread required a break-through parameter in case the signal missed in action and just timeout would be reported ------------------------------------------------------------ revno: 3265 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 19:03:42 +0200 message: merging from the repo wl5569 ------------------------------------------------------------ revno: 3264 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 17:49:19 +0200 message: wl#5569 MTS fixing corner cases that mtr-testing with mts workers against stardard suites reveal. ------------------------------------------------------------ revno: 3263 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 16:00:28 +0200 message: wl#5569 MTS: refining another assert that can force C to delete events that are skipped with the slave skip counter ------------------------------------------------------------ revno: 3262 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 15:34:02 +0200 message: wl#5569 MTS Correcting an assert that is hit by few tests. ------------------------------------------------------------ revno: 3261 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 13:27:15 +0200 message: wl#5569 MTS merging from the repo. ------------------------------------------------------------ revno: 3260 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 13:25:31 +0200 message: wl#5569 MTS fixing failing tests. ------------------------------------------------------------ revno: 3259 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-22 20:34:26 +0200 message: wl#5569 MTS merging from the repo. ------------------------------------------------------------ revno: 3258 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-22 20:31:13 +0200 message: wl#5569 MTS fixing tests failure when mtr runs --mts_slave_parallel_workers != 0. rpl000010 is a representative. Fixed with identifying, marking, running carefully ev->update_pos() and destroying an event that can split a group of events to force part to be in different relay logs. ------------------------------------------------------------ revno: 3257 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-22 13:57:18 +0200 message: wl#5569 MTS and wl#5599 MTS recovery The general recovery implementation is finished by this patch. Tested against  ./mtr rpl_parallel_conf_limits. Warning, ./mtr rpl_parallel_conf_limits rpl_parallel_conf_limits ... can fail at the 2nd etc test because of no removal of Worker tables happens at RESET SLAVE. ------------------------------------------------------------ revno: 3256 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-21 22:12:30 +0200 message: wl#5569 MTS slave_worker_info def is updated in the system db. ------------------------------------------------------------ revno: 3255 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-21 21:34:58 +0200 message: merging with repo ------------------------------------------------------------ revno: 3254 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-21 21:31:29 +0200 message: wl#5569 MTS Recovery routine part I: gathering the group recovery bitmap. ------------------------------------------------------------ revno: 3253 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-20 22:18:33 +0000 message: WL#5599 Fixed routine to compute the bitmap of executed events. ------------------------------------------------------------ revno: 3252 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-20 21:37:48 +0200 message: wl#5569 MTS adding checkpoint relay_log_name,pos as necessary part to locate a relay-log for recovery. Tested with rpl_parallel. ------------------------------------------------------------ revno: 3251 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-20 17:58:58 +0200 message: wl#5569 MTS manual merging from the repo and correcting GAQ processing with introducing a volatile byte to indicate whether an item is busy or released. ------------------------------------------------------------ revno: 3250 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-12-18 21:00:23 +0200 message: wl#5569 MTS fixing --mts-exp-slave-run-query-in-parallel=1 case when Query-log-event can be run in parallel incl DML and DDL. The feature is `exp'erimental still can be tried while there are no temp tables involved neither a db different than the session's default is modified by the query. Tested: Changes sustain mtr rpl_parallel --mysqld=--mts-exp-slave-run-query-in-parallel=1 --mysqld=--binlog-format=statement ------------------------------------------------------------ revno: 3249 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-17 14:46:15 +0200 message: wl#5569 MTS fixing PB2 failures, incl valgrind issues, long exec time and asserting in a test. ------------------------------------------------------------ revno: 3248 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-17 00:00:47 +0200 message: merge from  wl#5569 repo to local branch rpl_sequential opt files are added to avoid mtr give up to process a bulk of unsafe warnings. ------------------------------------------------------------ revno: 3247 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-16 23:41:45 +0200 message: wl#5569 MTS Adding transparent support/fallback to the sequential execution cases of 1. Query-log-event 2. Rows_query_log_event info event Both cases can be fully parallelized in future project. Fixing an issue in move_queue_head() that was surficed as an assert in Slave_worker::slave_worker_group_ends(). Fixing destoying an event by Worker. ------------------------------------------------------------ revno: 3246 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-14 16:46:20 +0200 message: merge from wl5569 repo ------------------------------------------------------------ revno: 3245 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-14 10:57:16 +0200 message: wl#5569 MTS a light cleanup to arrange the option/system var names properly - mts_-prefixing, and _exp prefixing for experimental features needed for benchmarking (mts_exp_slave_local_timestamp) or suppored limitly (mts_exp_slave_run_query_in_parallel for Query-log-event). Fixing GAQ size. It might be too tight e.g in case of the max WQ length of 1; tested with running rpl_parallel supplying --mts-slave-worker-queue-len-max=1. ------------------------------------------------------------ revno: 3244 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-13 18:53:32 +0200 message: wl#5569 MTS fixing a valgrind stack cauased by extra pfs-keys/cond_var. Those are removed with Alfranio`s consent ------------------------------------------------------------ revno: 3243 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-13 17:57:01 +0200 message: wl#5569 MTS fixing a set of valgrind warning cauased by a c&p ------------------------------------------------------------ revno: 3242 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-13 16:52:50 +0200 message: wl#5569 MTS updating results for few tests. ------------------------------------------------------------ revno: 3241 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-12-11 21:00:47 +0200 message: wl#5569 MTS 1. Fixing recovery related issue of DBUG_ASSERT(rli->get_event_relay_log_pos() >= BIN_LOG_HEADER_SIZE); at slave start with shifting mts_recovery_routine() at front of the assert. 2. Making SKIP-ed event to commit to the central RLI. That is correct since Workers are not executing anything at this time. 3. Fixing the default for mts_checkpoint_period which should not be zero normally. Zero makes sense solely for debugging (so we may stress that through VALID_RANGE(1,...). 4. Introduced a general mts-unsupported error/warning to apply to cases of non-zero parallel workers and a feature that parallelization can't work with. ------------------------------------------------------------ revno: 3240 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-10 18:25:27 +0200 message: merge from wl5569 repo to a local branch ------------------------------------------------------------ revno: 3239 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-10 17:50:03 +0200 message: wl#5569 MTS Improving GAQ in a) limit size to be capable to hold items while all WQ:s are full b) move_queue_head() contained a flaw to make no progress falsely c) never let to enque in GAQ while it's full ------------------------------------------------------------ revno: 3238 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-09 19:46:27 +0200 message: merge from wl5569 repo to a local branch ------------------------------------------------------------ revno: 3237 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-09 19:45:02 +0200 message: wl#5569 MTS Integration with wl#5599 recovery for MTS and fixing two asserts. One is due to missed cleanup of errored-out rows-events; the other is a work-around on w->curr_group_exec_parts->dynamic_ids is initialized to have one partition on the Worker startup, but it should not. ------------------------------------------------------------ revno: 3236 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-08 13:59:07 +0000 message: WL#5599 Fixed warning messages. ------------------------------------------------------------ revno: 3235 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-08 12:59:07 +0000 message: WL#5599 Fixed test cases. ------------------------------------------------------------ revno: 3234 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-08 01:30:32 +0000 message: WL#5599 Fixed failures in test cases. ------------------------------------------------------------ revno: 3233 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-08 00:33:48 +0000 message: merge mysql-trunk --> mysql-next-mr-wl5569 Conflicts: . mysql-test/r/log_tables_upgrade.result . mysql-test/r/mysql_upgrade.result . mysql-test/r/mysql_upgrade_ssl.result . mysql-test/r/mysqlcheck.result . mysql-test/suite/perfschema/r/pfs_upgrade_lc0.result . mysql-test/suite/rpl/t/disabled.def . mysql-test/suite/sys_vars/r/all_vars.result . mysql-test/t/system_mysql_db_fix40123.test . mysql-test/t/system_mysql_db_fix50030.test . mysql-test/t/system_mysql_db_fix50117.test . sql/log_event.cc . sql/log_event.h . sql/rpl_mi.h . sql/rpl_slave.cc . sql/share/errmsg-utf8.txt ------------------------------------------------------------ revno: 3232 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-07 20:01:39 +0200 message: manual merge with a piece of recovery support on repo. rpl_parallel hits an assert that Alfranio is fixing ------------------------------------------------------------ revno: 3231 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-07 19:35:16 +0200 message: wl#5569 MTS Testing related fixes incl master_pos_wait() support and thereafter replacing sleeps with the functioning sync_slave_with_master; Fixing the limitted Q-log-event parallelization. After the fixing mixture of rows- and Q- transactions can run concurrently. Q-transaction will be treated sequentially by default. ------------------------------------------------------------ revno: 3230 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2010-12-05 22:04:17 +0200 message: wl#5569 WL#5599 MTS & recovery Refining and correcting two wl:s integration. The main achievement is events execution status is consistently recorded into the Worker and the central RL recovery tables. That was tested manually in rather agressive env where IO was used to reconnect randomly and load from Master contained Rotate events. TODO: to fix: rpl.rpl_parallel_conf_limits may not pass to address: Multi-stmt Query-log-event transaction case (see todo in sources). to destruct by Workers their executed events (was deferred until ev->update_pos started working). (Alfranio) to deploy mts_checkpoint_routine() call inside the successful event read branch of next_event(). Otherwise no calling happens when Coord is constanly busy with read/distribute. ------------------------------------------------------------ revno: 3229 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-12-04 19:14:50 +0200 message: merging from the repo wl5569 ------------------------------------------------------------ revno: 3228 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-12-04 15:45:02 +0000 message: Added mutex to the checkpoint_routine. ------------------------------------------------------------ revno: 3227 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-03 16:56:11 +0000 message: Implemented periodic checkpoint if parallel slave is enabled. ------------------------------------------------------------ revno: 3226 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-03 10:15:45 +0000 message: Fixed commit_positions() and removed unnecessary checkpoint thread. ------------------------------------------------------------ revno: 3225 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-02 20:13:12 +0200 message: manual merge to wl#5569 tree ------------------------------------------------------------ revno: 3224 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-02 19:46:46 +0200 message: wl#5569 MTS User interface related: set @@global.slave_parallel_workers= `non-zero` following with `START SLAVE` starts slave with so many Worker threads. That is non-zero value is defacto the slave parallel execution mode. Earlier introduced enum enum_slave_exec_mode  SLAVE_EXEC_MODE_PARALLEL is withdrawn. Fixes rli->mts_pending_jobs_size statistics which might cause assert-crash otherwise. a silly c&p mistake of relay-log name change notification. Made a little clean-up including relocation of init-ion of workers related stuff into start_slave_workers(). Many changes in tests due to SLAVE_EXEC_MODE_PARALLEL and not only. ------------------------------------------------------------ revno: 3223 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-01 19:08:21 +0200 message: wl#5569 MTS The limit conditions such as WQ len, total WQ:s size related changes. Also a new test file is added. ------------------------------------------------------------ revno: 3222 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-11-30 16:39:40 +0200 message: merging from from wl#5569 repo containing wl#5599 integration ------------------------------------------------------------ revno: 3221 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-11-30 16:02:15 +0200 message: wl#5569 MTS Fixing group_relay_log_name change propagation from C to W; Garbage collection in the Partition-to-Worker hash is added with a parameter of how many records in the hash are tolerated w/o checking of the usage counter. Adding C-W synchronization due to: - overall WQ:s data max - hitting the limit of a WQ length Adding Flow Control infrastructure with - level of the hungry Worker forcing Coordinator to distribute eagerly symmetrically a Worker whose load is more than 100 % - hungry level is considered as fed-up. - nap time for C in case all WQ:s lengths are above the level. - a weight param to the base nap as a function of the number of fed-up W:s. TODO: UNTIL to force sequential exec; To fix ROWS_QUERY_LOG_EVENT corner case; to fix commented out // if (!ev) delete ev; after wl#5599 is merged (ev->update_pos() is done). ------------------------------------------------------------ revno: 3220 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-11-27 17:36:50 +0200 message: wl#5569 Providing relay-log name for wl#5599. Protocol of action on the C and W sides is described in rpl_rli_pdb.h. Erroring out in case of parallel exec and ROWS_QUERY_LOG_EVENT. (todo: the native sequential mode for the event needs some revision, in particular `delete ev' shall happen *always* in rli->cleanup_context not in two places as of current). ------------------------------------------------------------ revno: 3219 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-11-26 23:08:30 +0200 message: wl#5569 MTS Partitioning conflict detection and handling is implemented. A new option to run Query in parallel though incompatibly with Rows- case in that the default db not the actual db:s are used as the partition key. User interface gained the global var and the cmd line opt: slave_run_query_in_parallel (Welcome to the set! :-) ------------------------------------------------------------ revno: 3218 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-andrei timestamp: Fri 2010-11-26 16:15:37 +0000 message: There was a mismatching between the number of fields read and write and by consequence the read was failing for the Slave_worker. ------------------------------------------------------------ revno: 3217 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-11-25 11:03:54 +0200 message: wl#5569 merging with wl#5599 piece of code ------------------------------------------------------------ revno: 3216 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-11-25 10:47:39 +0200 message: wl#5569 Converting the prototype time db2w hash to be concurrent; Necessary inruduction of the least occupied Worker notion. It's currently computed as Worker having the least number of distributed partitions. Adding parallel support for Query_log_event; caution: 1. the session/default not the actual db as the key 2. may not have been tested against all use cases (e.g int vars) Fixing slave stop issues. ------------------------------------------------------------ revno: 3215 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-11-22 20:57:13 +0200 message: wl#5569 extinding futher interfaces to wl#5599 with propagating future_event_relay_log_pos to the Worker exec context. ------------------------------------------------------------ revno: 3214 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-11-20 19:23:42 +0200 message: wl#5569 MTS Worker pool start, stop, kills, error out implementation. ------------------------------------------------------------ revno: 3213 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-11-19 16:51:58 +0200 message: wl#5569 recovery interfaces for wl#5599 implementation. The essence of this patch is to provide GAQ object implimentation and valid life cycle. The checkpoint handler prior to call store methods of wl#5599 is supposed to invoke rli->gaq->move_queue_head(&rli->workers). See a simulation of that near ev->update_pos() of the mail sql thread loop. The checkpoint info is composed as instance of Slave_job_group to reside as rli->gap->lwm. Todo: uncomment +  // delete ev;  // after ev->update_pos() event is garbage once the real checkpoint has been done. Todo: the real implemention needs to take care of filing Slave_job_group::update_current_binlog as initially so at time of executing Rotate/FD methods. +  // experimental checkpoint per each scheduling attempt +  // logics of next_event() + +    rli->gaq->move_queue_head(&rli->workers); ------------------------------------------------------------ revno: 3212 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-11-18 16:50:54 +0200 message: wl#5569 wl#5599 Recovery related. Prototyping the worker RLI instantiation, to be elaborated on. ------------------------------------------------------------ revno: 3211 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-11-18 16:00:52 +0200 message: wl#5569 MTS Extending the wl#5563 prototype gradually. This commit addresses: 1. recovery interface (a new Worker rli plus rli->gaq and pseudo-code for checkpoint to update GAQ and the central RLI recovery table. Wrt rli, C and W execute do_apply_event(c_rli) where c_rli is the central instance. C executes update_pos(c_rli), but W update_pos(w_rli). others: - decreased processing time for rpl_parallel, serial. ------------------------------------------------------------ revno: 3210 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2010-11-14 11:55:32 +0000 message: Post-push fix for WL#5599. ------------------------------------------------------------ revno: 3209 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-11-12 17:58:12 +0000 message: Post-push fix for WL#5599. ------------------------------------------------------------ revno: 3208 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-11-11 11:53:01 +0000 message: WL#5599 The patch changed the handler's functions, i.e. init_info, check_info, flush_info, remove_info and end_info and the related private member functions, in both file and table handlers, to accept an index that identifies the information that will be read or written. This is necessary now because the handlers will be used by the workers to read and write information from file(s) and table and there may be several workers running at the same time and thus an index is used to identify the worker that is accessing information. This change is also necessary for the multi-master replication as information from each master must be uniquely identified. ------------------------------------------------------------ revno: 3207 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-11-10 10:57:13 +0000 message: Refactory to start work on WL#5599. ------------------------------------------------------------ revno: 3206 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-11-09 13:34:18 +0000 message: Removed mysql-test/collections/mysql-next-mr.crash-safe.* in the WL#5569. ------------------------------------------------------------ revno: 3205 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-11-09 13:04:14 +0000 message: merge mysql-next-mr.crash-safe --> mysql-next-mr-wl5569 Conflicts: . sql/CMakeLists.txt . sql/Makefile.am . sql/sql_class.h . sql/rpl_slave.cc ------------------------------------------------------------ revno: 3204 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-11-09 11:39:37 +0000 message: merge mysql-next-mr-wl5563-labs --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3203 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-17 23:33:37 +0300 message: wl#5563 simplifying memory handling for the Coor-Workers transport to avoid sporadic crashes ------------------------------------------------------------ revno: 3202 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-17 21:19:56 +0300 message: wl#5563 leaving out a fine garbage collection. That task is unnessary to solve at prototyping time. Update-pos routine to be implemented is going to eliminated that piece of code ------------------------------------------------------------ revno: 3201 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-17 20:38:35 +0300 message: wl#5563 Extending the tests base to split the former rpl_parallel into two to run in serial exec mode as well. ------------------------------------------------------------ revno: 3200 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-17 11:49:00 +0300 message: wl#5563 improved test; fixed a delete issue that was used to crash; added @@global.slave_local_timestamp to fill in timestamp col slave clock value. Performance growth can be seen through the test. todo: merge with Alfranio work on hashing and dyn alloc of PFS obj:s. ------------------------------------------------------------ revno: 3199 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Wed 2010-09-15 14:51:49 +0300 message: wl#5563 tests for the wl. Number of workers and iterations can be tuned. todo: convert as param:s to pass to the test through mtr ------------------------------------------------------------ revno: 3198 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Mon 2010-09-13 18:22:41 +0300 message: wl#5563 adding an ingeneous no-stress-attempting-yet test that also fired an assert. Refined the Worker instance ref computing because cleanup_context() is executed by the sql-thread the coordinator as well ------------------------------------------------------------ revno: 3197 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Mon 2010-09-13 13:15:38 +0300 message: wl#5563 Rows-event parallelization basically is implemented although tested shallowly. Write access to rli central stuct by workers may not be eliminated fully at this phase. E.g that relates to errors. todo: to prove rli gets out of Worker scope todo: to provide a stress test ------------------------------------------------------------ revno: 3196 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Sat 2010-09-11 17:00:08 +0300 message: wl#5563 adding Rows-event limitted to one Worker support. Deferred deletion did not check emptyness of the list ------------------------------------------------------------ revno: 3195 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-10 20:36:07 +0300 message: wl#5563 correcting comments to indicate less limitations ------------------------------------------------------------ revno: 3194 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-10 20:32:39 +0300 message: WL#5563 Prototype for Slave parallelized by db name More progress to the WL in that the STMT binlog-format works while the conceptual limits are held. That is no query/transaction is allowed to deal with more than one db. Addressed a complication in that update pos method that is run by Coordinator belongs to Log_event hierarchy and therefore the event deletion now by Worker must be careful. Todo: 1. (High prior) fix Row-format complications 2. (Hight prior) Elaborate on the hash function to be a function on db text name 3. (Optional)  Consider moving update_pos to the RLI class to get rid of the delete logics complication. How-to-use: The instuction can be found in comments of the previous commit, see there for more details. In brief though, the db names have to follow a pattern: `test[0-9]'. E.g test0, test1, test2, test3 for the default four Worker threads. Slave side has to set @@global.slave_exec_mode=PARALLEL; before START SLAVE. ------------------------------------------------------------ revno: 3193 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Thu 2010-09-09 21:43:16 +0300 message: WL#5563 Prototype for Slave parallelized by db name This is an intermediate commit that indicates some progress. Namely, the worker pool operates correctly and with signs of scalable performance. How to test: connection master; set @@global.binlog_format=statement; connection slave; set @@global.slave_exec_mode=PARALLEL; set @@global.binlog_format=mixed; show processlist; => IO, SQL threads + 4 workers by default change master to ... connection master; create database test0; create database test1; create database test2; create database test3; # create databases with magic names ""test[0-9]+"", where the number will index # a worker. create database test0; create database test1; create database test2; create database test3; # create tables. they are only of MyISAM type for now use test0; create table tm_1(a int, b int) engine=myisam; use ... # DML on tables: use test[0-3]; insert into tm_1 values (1,0); ... ... connection slave; # monitor CPU (visually this time: top etc) # check correctness e.g select count(*) from test[0-3].tm_1; connection master; select count(*) from test[0-3].tm_1; ****** ------------------------------------------------------------ revno: 3364 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-08-18 17:09:22 +0300 message: wl#5569 MTS Refining rpl_rotate_logs that could not produce deterministic output. The list of binlogs contained one binlog more than expected. ------------------------------------------------------------ revno: 3363 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-08-18 14:56:01 +0300 message: updating result files that were left incorrect by the last merge. ------------------------------------------------------------ revno: 3362 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-08-18 14:44:59 +0300 message: wl#5569 MTS Failure in recovery when binlog-checksum is active. The reason of the failure was in that parsing of relay log by MTS recovery gaps computing did not make sure to use the relay-log own FormatDescriptor events that contain checksumming info for all events in the log. Fixed with taking care to find out the checksum algorithm for every relay log as the first step of MTS recovery gaps computing. ------------------------------------------------------------ revno: 3361 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-08-17 11:21:23 +0300 message: merge from trunk forced to resolve few semantical conflicts caused by changes in THD::enter_cond() of the trunk. ------------------------------------------------------------ revno: 3360 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-07-27 08:56:14 +0100 message: Fixed failure in test rpl_mts_check_concurrency when running in the mts collection. ------------------------------------------------------------ revno: 3359 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-26 19:46:41 +0100 message: Added a test case that checks if MTS allows to concurrently access the replication tables, and as such, concurrently commit transactions that update different databases. ------------------------------------------------------------ revno: 3358 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-22 20:08:43 +0100 message: Configured rpl_parallel_switch_sequential to run in row and mixed mode to avoid cluttering the error log with messages on unsafe execution. ------------------------------------------------------------ revno: 3357 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-22 19:02:14 +0100 message: This patch contains the following fixes: . Removed suppressed warning introduced in the wrong test case (i.e. rpl_corruption) and put it in the correct one (i.e. rpl_row_corruption). . Introduced variable to avoid clutering the error log with several warning messages on unsafe execution. ------------------------------------------------------------ revno: 3356 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-22 11:01:12 +0100 message: This patch has the following changes: . Specific directories were created for the MTS runs in the default.push. . Warning message was suppressed in the rpl_corruption.test. . Annoying debug outputs were removed from the error log. However, this is a temporary solution as it forbids to enable traces. ------------------------------------------------------------ revno: 3355 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-07-20 11:56:40 +0100 message: merge mysql-trunk --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3354 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-19 22:26:30 +0300 message: wl#5569 MTS valgrind reported a stack on rpl_savepoint. The problem appears to be in that at computing slave_sql_running_state in show_mater_info() the sql thread proc_info pointer could refer to a value in a stack that has already gone. Fixed with making proc_info to point to a string literal. ------------------------------------------------------------ revno: 3353 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-19 17:46:43 +0100 message: Suppressed warning messages that could potentially cause problems while running mts crash safe test cases. ------------------------------------------------------------ revno: 3352 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-07-18 21:46:45 +0300 message: wl#5569 MTS Cosmetic changes are done to address readability and clearness of source code of the MTS patch. ------------------------------------------------------------ revno: 3351 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-07-18 14:52:44 +0300 message: wl#5569 MTS Inadvertently introduced hunk two rev:s back is reverted to please rpl_*_mts_crash_safe. ------------------------------------------------------------ revno: 3350 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-07-17 00:51:45 +0300 message: wl#5569 MTS fixing build issue for embedded. Public visibility for Rows_log_event::do_apply_event() is restored. ------------------------------------------------------------ revno: 3349 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-07-16 20:08:31 +0300 message: wl#5569 MTS The patch contains improvements after code review. Changes are mostly consmetic. ------------------------------------------------------------ revno: 3348 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-07-16 02:11:11 +0300 message: bug#12755663 MTS: RPL_CIRCULAR_FOR_4_HOSTS FAILS: CANT EXECUTE THE CURRENT EVENT GROUP MTS stopped with an error in the middle of the test. The reason is that a group of events from the slave itself was processed partly to modify the group position. In the following restart the wrong group bondary made slave either to error out or assert. Fixed with locating a possible race condition allowin Coordinator to ignore actual failed status of a Worker. So in the case of the test, the slave server group can't be started. Notice, this is a trial patch since I can't catch the failure on available to me hosts at all. ------------------------------------------------------------ revno: 3347 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-07-14 12:40:06 +0300 message: WL#5569 MTS further extensive rpl_circular_for_4_hosts exersices with --repeat 10 --parallel=8 revealed a race condition in that Coordinator might miss to catch not-running status for a Worker. That made Coordinator to skip only a part of a group of the slave server own events so the slave stops at not the bondary of a group. Fixed with moving marking of the errored-out Worker as failed prior to its APH entries release. TODO: notice there can be a possibility to stop at not the boundary due to graceful STOP SLAVE if one is run at time of skipping self-originated events. However this issue belongs to STS and might be similar with BUG@12604951 and BUG@12728160. ------------------------------------------------------------ revno: 3346 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-07-14 08:03:55 +0100 message: Post-push fixes for WL#5569 Injecting faults while updating a myisam table requires to flush the changes before committing suicide. So we have introduced the follwing code: DBUG_EXECUTE_IF(""crash_after_commit_and_update_pos"", -                       DBUG_SUICIDE();); +           sql_print_information(""Crashing crash_after_commit_and_update_pos.""); +           flush_info(TRUE); +           DBUG_SUICIDE(); Besides we improved some comments. ------------------------------------------------------------ revno: 3345 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-07-13 16:23:57 +0100 message: WL#5569 ------------------------------------------------------------ revno: 3344 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-07-13 00:10:43 +0300 message: wl#5569 MTS merge trunk -> wl5569-tree ------------------------------------------------------------ revno: 3343 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-12 23:36:17 +0300 message: wl#5569 MTS adding suppression due to expected warning to rpl_circurlar_for_4_hosts; decreasing a loop limit in rpl_parallel_switch_sequential in case of statement format. ------------------------------------------------------------ revno: 3342 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-12 14:46:23 +0300 message: WL#5569 MTS Fixing code and test due to rpl.rpl_circular_for_4_hosts  mismatch failure, like http://pb2.norway.sun.com/?action=archive_download&archive_id=3608382. The reason of the mismatch was that when having two group of events to execute, the first for a Worker and the 2nd for Coordinator, Coordinator waited for the 1st group completion but did not verify success of synchronization. So in a case of the failed applying of the 1st group processing of the 2nd could find an inconsistent state to end up with a segfault (even though only the mismatch has been seen so far). ------------------------------------------------------------ revno: 3341 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-07-10 22:40:01 +0100 message: Avoiding busy waiting when running mts recovery tests. ------------------------------------------------------------ revno: 3340 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-07-09 23:11:58 +0100 message: Removed --slave-checkpoint-period from MTS test cases. ------------------------------------------------------------ revno: 3339 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-07-09 23:08:07 +0100 message: Improved test cases for the WL#5569. ------------------------------------------------------------ revno: 3338 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-08 22:40:52 +0300 message: wl#5569 MTS The patch refines logics of applying phase of MTS-recovery to always applying events that are for Coordinator; fixes few tests to make them passable on PB; makes GAQ size to be of checkpoint_group value. ------------------------------------------------------------ revno: 3337 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-08 07:54:34 +0100 message: Reduced the timeout period to run the checkpoint routine by setting slave-checkpoint-period to 30. ------------------------------------------------------------ revno: 3336 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-08 07:44:35 +0100 message: merge mysql-trunk --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3335 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-07-06 12:46:05 +0300 message: wl#5569 MTS refining wait for db-hash entry release at event distribution. The graceful STOP is not accepted at this point so Coordinator continues to stay in a loop. ------------------------------------------------------------ revno: 3334 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-05 20:43:04 +0300 message: bug#12719875 possible MTS recovery issue. MTS stopped with an error after failing to apply an event. It turned out that the event was sceduled incorrectly due to earlier stop by Single-Threaded Slave not at the group boundary but rather in the middle of it. Fixed with forcing CREATE..SELECT be logged as two groups. The CREATE-TABLE group is surrounded with its own BEGIN/COMMIT braces. ------------------------------------------------------------ revno: 3333 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-07-04 18:14:09 +0300 message: wl#5569 MTS Adding a rule to run PB with all suites in MTS with binlog-format ROW. ------------------------------------------------------------ revno: 3332 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-07-03 23:29:34 +0300 message: wl5569 MTS cleanup in one file. ------------------------------------------------------------ revno: 3331 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-07-03 23:16:02 +0300 message: wl5569 MTS bzr commit mail address changed; a minor cleanup to make mts_is_worker() with const argument; releasing a test to run in MTS. ------------------------------------------------------------ revno: 3330 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-07-02 08:58:56 +0100 message: Fixed use of the performance schema in the replication code and concurrency issue in the IO Thread. In particular, the IO Thread was calling flush_master_info without grabbing locks. ------------------------------------------------------------ revno: 3329 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-01 16:41:35 +0300 message: wl5569 MTS merging from the main repo. ------------------------------------------------------------ revno: 3328 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-01 15:48:25 +0300 message: wl#5569 MTS the final cleanup patch. There are few glitches that were considered as tolerable at least for time of the total wl's code is being reviewed. That includes: - no support to old load-data events - no support for FK to add to the list, there are few places in the patch that suggests to deploy error branches each time flush_info() is called. ------------------------------------------------------------ revno: 3327 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-01 13:16:52 +0300 message: wl#5569 MTS The patch cleans up some host of code. ------------------------------------------------------------ revno: 3326 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-28 11:30:18 +0300 message: wl#5569 MTS replacing views with regular tables for consistency verification in rpl_parallel_innodb. Also a minor cleanup in rpl_parallel is done. ------------------------------------------------------------ revno: 3325 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-27 20:31:45 +0300 message: wl#5569 MTS Cleanup and addressing sporadic rpl_temp_table_mix_row failure in post-execution mtr.check_testcase(). The check of the test failure was caused by faulty optimization in avoiding to migrate temporary tables from Coordinator to Workers in case of rows-event assignement. while it's correct with the homogenous rows-event only load, the mixture can fail. Fixed with removing the optimization so map_db_to_worker() always relocates which is somewhat suboptimal and should be improved in future. ------------------------------------------------------------ revno: 3324 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-27 13:12:52 +0100 message: Ensured that updates to the worker_info_repository are transactional and fixed the slave_checkpoint_group_basic test case. ------------------------------------------------------------ revno: 3323 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-26 13:02:59 +0100 message: Fixed test case. ------------------------------------------------------------ revno: 3322 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-06-25 15:14:24 +0100 message: Introduced test case for recovery with MTS and fixed bugs in recovery. ------------------------------------------------------------ revno: 3321 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-24 15:38:19 +0300 message: wl#5569 MTS This patch makes a bit of cleanup, addresses one memory-allocation todo and completes fixing valgrind report (rpl_parallel_start_stop) due to strings allocation in Slave_job_group items. ------------------------------------------------------------ revno: 3320 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-24 12:38:34 +0300 message: wl#5569 MTS this patch completes the previous one to fixes a result file and make the innodb specific test verification to base on tables not views. ------------------------------------------------------------ revno: 3319 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-24 00:11:22 +0300 message: wl#5569 MTS this is an exploratory patch to sort out if verification method what was based on views has its own not related to mts flaw. The patch calls verification macro on the tables that required some adjustment. ------------------------------------------------------------ revno: 3318 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-06-23 07:56:15 +0300 message: wl#5569 MTS fixing results of mysqld--help-win. ------------------------------------------------------------ revno: 3317 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-22 19:20:40 +0100 message: merge mysql-next-mr-wl5569 (local) --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3316 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-22 19:17:43 +0100 message: In some platforms, such as Windows, thread's wait time is stored in 100ns units. However, when computing the difference between two values, the result value was not multiplied by 100. Besides, there was a casting problem when the aforementioned result value was assigned to an ulong. ------------------------------------------------------------ revno: 3315 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-22 18:54:23 +0100 message: Fixed how mts copes with recovery. ------------------------------------------------------------ revno: 3314 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-21 19:10:54 +0300 message: wl#5569 MTS Fixing valgrind warnings. ------------------------------------------------------------ revno: 3313 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-21 18:15:43 +0300 message: wl#5569 MTS rpl_parallel_start_stop.test could fail sporadicaly with timeout. ------------------------------------------------------------ revno: 3312 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-20 23:21:56 +0100 message: merge mysql-next-mr-wl5569 (local) --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3311 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-20 23:19:06 +0100 message: Fixed error when computing the Lower-Water-Mark. If two or more jobs were removed from the Group of assigned jobs and one of the jobs had a non-empty group relay log but the last one had an empty group relay log. The Lower-Water-Mark was not correctly updated, because the algorithm assumed that the group relay log was null. ------------------------------------------------------------ revno: 3310 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-20 11:52:44 +0100 message: Fixed valgrind errors. Slave_job_group was silently being cast to LOG_POS_COORD while calling sort_dynamic(&above_lwm_jobs, (qsort_cmp) mts_event_coord_cmp) and by consequence mts_event_coord_cmp(LOG_POS_COORD *, LOG_POS_COORD *). This had two problems: . The first two entries in the Slave_job_group were not a pointer to a char * and my_offset. . Even if the first two entries were char * and my_offset, such casting could lead to alignment problems. To fix the problem, we avoid this casting. ------------------------------------------------------------ revno: 3309 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-19 19:14:50 +0300 message: wl#5569 MTS fixing slave_transaction_retries_basic_64.result ------------------------------------------------------------ revno: 3308 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-19 16:11:25 +0300 message: wl#5569 MTS fixing tests. ------------------------------------------------------------ revno: 3307 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-19 12:33:36 +0300 message: wl#5569 MTS Fixing rpl.rpl_mixed_binlog_max_cache_size that revealed incorrect asynchronous handling of a Rotate event which does not split the current group and therefore has to be executed after all previously scheduled events. Fixing sensetivity of two other tests to mtr's invocation environment that includes inital values of slave_parallel_workers and slave_transaction_retries. ------------------------------------------------------------ revno: 3306 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-19 09:04:19 +0100 message: Fixed some windows failures. ------------------------------------------------------------ revno: 3305 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-06-18 19:58:21 +0100 message: Fixed some recovery issues. ------------------------------------------------------------ revno: 3304 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-17 21:01:58 +0300 message: wl#5569 MTS fixing tests and a segfault at the end of handle_slave_sql() happened after worker initialization failed (e.g rpl_row_log on win). ------------------------------------------------------------ revno: 3303 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-17 18:34:16 +0300 message: wl#5569 MTS fixing tests. ------------------------------------------------------------ revno: 3302 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-17 14:00:41 +0300 message: wl#5569 MTS fixing rpl_row_basic_3innodb similarly to the previous patch. ------------------------------------------------------------ revno: 3301 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-17 13:51:59 +0300 message: wl#5569 MTS fixing few tests. 1. Policy is implemented for reacting with a warning in a case of failing worker leaves the total slave state with gaps thereby inconsistent. 2. Two tests that were used to time out due to reset master/slave was disabled in there. ------------------------------------------------------------ revno: 3300 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-17 02:24:59 +0100 message: Removed unnecessary test cases and augment others in order to test recovery. ------------------------------------------------------------ revno: 3299 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-06-16 19:46:22 +0300 message: wl#5569 MTS fixing slave_parallel_workers_basic and rpl_stop_middle_group which cant run in MTS ------------------------------------------------------------ revno: 3298 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-06-16 11:29:53 +0300 message: wl#5569 MTS adding new tests to sys_vars.\ ------------------------------------------------------------ revno: 3297 committer: Luis Soares <luis.soares@oracle.com> branch nick: mysql-trunk-wl5569 timestamp: Thu 2011-06-16 01:41:32 +0100 message: WL#5569 Adding a global suppression for the warning that may appear when stopping the slave sql thread in the middle of a group. This should affect MTS mode only. ------------------------------------------------------------ revno: 3296 committer: Luis Soares <luis.soares@oracle.com> branch nick: mysql-trunk-wl5569 timestamp: Thu 2011-06-16 01:40:41 +0100 message: WL#5569 Renames worker-info-repository to slave-worker-info-repository in some tests option files. ------------------------------------------------------------ revno: 3295 committer: Luis Soares <luis.soares@oracle.com> branch nick: mysql-trunk-wl5569 timestamp: Thu 2011-06-16 01:32:37 +0100 message: WL#5569 More test fixes. Removing remaining prefixes 'mts' from mts variables, which have been renamed recently. ------------------------------------------------------------ revno: 3294 committer: Luis Soares <luis.soares@oracle.com> branch nick: mysql-trunk-wl5569 timestamp: Thu 2011-06-16 00:27:20 +0100 message: WL#5569 Fixing rpl_parallel result file. ------------------------------------------------------------ revno: 3293 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-15 20:41:33 +0300 message: wl#5569 MTS correcting --slave-parallel-workers in few more files ------------------------------------------------------------ revno: 3292 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-15 20:31:46 +0300 message: wl#5569 MTS correcting --slave-parallel-workers in collections/default.push ------------------------------------------------------------ revno: 3291 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-15 20:12:11 +0300 message: wl#5569 MTS Cleanup, including 1. decreasing number and renaming system variables. Important for debugging command line options are replaced with reasonble constant values and only necessary are retained. 2. Small encapsulation in ha_blackhole.cc is done. ------------------------------------------------------------ revno: 3290 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-15 15:59:23 +0100 message: Fixed replication valgring failures caused by the MTS. ------------------------------------------------------------ revno: 3289 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-14 21:23:13 +0300 message: wl#5569 MTS wl#5754 Query event parallel execution Fixing failing tests and a failure in gathering accessed databases that was caused by a recent merge from trunk. ------------------------------------------------------------ revno: 3288 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-14 13:35:20 +0300 message: merge from trunk ------------------------------------------------------------ revno: 3287 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-14 12:27:38 +0300 message: wl#5569 MTS Fixing failing tests due to a. a flaw in `isolated parallel' mode implementation. Isolation applies to a group of event rather than to an instance. And event that contains over-max accessed db:s or event from Old master trigger marking the current being scheduled group. Such group will be executed having all prior scheduled done and nomore will be scheduled until the group is done. b. Notification to Coordinator about errored-out Worker is corrected. ------------------------------------------------------------ revno: 3286 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-12 22:33:32 +0300 message: wl#5569 MTS making default.push to run rpl suite with non-default --mts-slave-parallel-workers > 0 in all three format/mode (row,stmt, mixed). The default is run for all suites in mixed mode and rpl suites with row+ps, stmt formats. ------------------------------------------------------------ revno: 3285 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-12 22:05:05 +0300 message: wl#5569 MTS manual merge with few fixes for segfault of the last merge from the trunk etc, compilation issue on embedded. ------------------------------------------------------------ revno: 3284 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-06-09 18:35:59 +0100 message: Post-fixes for merge. Fixed compilation in Windows and removed an used options. ------------------------------------------------------------ revno: 3283 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-06-09 16:27:47 +0100 message: merge mysql-trunk --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3282 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-06 13:51:19 +0300 message: wl#5569 MTS STOP SLAVE now stops consistently w/o gaps, KILL shall be used for an urgent stop, an error case behaves like the killed. For instance, a Worker errors out, it sends KILL to Coordinator through THD::awake(), and Coordinator kill the rest through setting a special Worker-running status to killed (which breaks the read-exec loop of a Worker). ------------------------------------------------------------ revno: 3281 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-05 20:01:51 +0300 message: wl#5569 MTS More cleanup, fixes due to found issues when running tests, some improvements incl in stopping Workers to make routine to distinguish between killed and gracefully stopped cases so in the end STOP SLAVE will guarantee consistent state (some todo remains still). ------------------------------------------------------------ revno: 3280 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-05-30 13:05:07 +0300 message: WL#5569 MTS WL#5754 Query event parallel applying ----------------------------------------------------------------- Aggregating 7 commits that are not pushed yet to the wl5569 repo. Find comments for each cset below. ------------------------------------------------------------------ The current patch addresses concurrent updating slave_open_temp_tables status counter. The former declaration of the underlying server variable is changed from ulong to int32. While that might affect (shrink) the actual range, there has been no specified range and now after the number of bits is the same on all platforms the range cat be set to be [0, max(int32)] ****** wl#5569 MTS Wl#5754 Query event parallel appying wl#5599 MTS recovery The patch includes some cleanup, including one for temp tables support, realization of few todo:s. ****** wl#5569 MTS wl#5754 Query event parallel applying More cleanup is done; Fixing temp tables manipulation. Asserting an impossible to support use case of group of events not wrapped with BEGIN/COMMIT. Todo: recognize old master binlog to refuse to run in parallel. ****** wl#5569 MTS Implementation of giving out the applier role to Worker for all cases but ones dealing with the Coordinators state. That includes Query event with over-max-db:s and Load-data related events. The current patch also makes old master binlog be handled by MTS though sometimes e.g for Query event to switch to the sequential mode. Fixing a race condition making C to wait endlessly if a Worker has exitted due to its applying error. ****** wl#5569 MTS correcting an assert that was used to fire as warned in the previous commit. Parallel feature tests pass now. ****** wl#5569 MTS This patch contains cleanup and simplification of logics of handling some events sequentially by Coordinator and adds memory-allocation failure branch to workers starting routine. ****** wl#5569 MTS An intermediate patch to address few issues raised by reviewers. To sum up, it's about cleanup and logics simplification of event distribution to Worker and consequent actions. Some efforts were paid to support Old Master Begin-less group of events. ------------------------------------------------------------ revno: 3279 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-05-24 17:29:35 +0300 message: WL#5569 MTS WL#5754 Query parallel appying Changing implementation of temporary tables support in MTS. Cleanup, fixing few todo:s and few potential issues found. ------------------------------------------------------------ revno: 3278 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-05-19 12:36:28 +0300 message: wl#5569 MTS Support for ROWS_QUERY_LOG_EVENT is added. It required refactoring of its handling in the canonical sequential mode. The event life suggests its behavior similar to objects associated with Table_map, in particural, its destoying to occur at the end-of-statement time. Tested against existing ROWS_QUERY_LOG_EVENT feature tests incl rpl_row_ignorable_event in both sequential and parallel mode. ------------------------------------------------------------ revno: 3277 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-05-16 22:43:58 +0300 message: wl#5569 MTS Simplifying Coordinator-Worker interfaces. In essence after this patch Worker execute events in its private context (class Slave_worker :public Relay_log_info). The only exception is Query referring to temporary table. The temp:s are maintained in the Coordinator's ""central"" rli; removing some dead code; performing a lot of cleanup. There are few todo items incl: 1. To implement several todo:s scattered across MTS' code and tests (e.g to restore protected for few members of RLI of rpl_rli.h); 2. to cover Rows_query_log_event that currently can cause hanging (e.g rpl_parallel_fallback) 3. To sort out names of classes based on Rpl_info, possibly remove  Rpl_info_worker ------------------------------------------------------------ revno: 3276 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-05-06 21:33:32 +0300 message: wl#5569 MTS improving benchmarking test. ------------------------------------------------------------ revno: 3275 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-04-06 15:51:58 +0300 message: wl#5569 MTS Statistics for Workers and Coordinator incl waiting times, sleeping is reported now into the error log as slave stopping time. ------------------------------------------------------------ revno: 3274 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-04-05 19:26:37 +0300 message: wl#5569 MTS restoring previous 4 default workers that rpl_parallel works with. ------------------------------------------------------------ revno: 3273 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-04-03 13:07:30 +0300 message: wl#5569 MTS Benchmarking related patch uniforms rpl_parallel to be run with arbitrary number of workers, db:s, tables, etc. TODO: to restore the final constinency check which is given out temporary while i could not find a way to leave it surrounded with  a --dis/en-able* stanza. ------------------------------------------------------------ revno: 3272 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-04-02 14:32:02 +0300 message: wl#5569 MTS a test file for benchmarking is added. Benchmarking results can be gained by extracting the master side generating and the slave side applying times like in the following loop: workers=6; for n in `seq 1 3`; do echo; echo loop: $n; echo; my_mtr.sh --mysqld=--mts-slave-parallel-workers=$workers  \ rpl_parallel_benchmark --mysqld=--binlog-format=statement \ && cat /dev/shm/var/mysqld.2/data/test/delta.out >> p${workers}_stmt.out 2>&1; done ------------------------------------------------------------ revno: 3271 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-03-30 17:11:24 +0300 message: wl#5754 Query event parallel execution Small cleanup for comments as requested by reviewer. ------------------------------------------------------------ revno: 3270 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-02-27 19:35:25 +0200 message: WL#5754 Query event parallel execution Bundling together implementation the whole DML+DDL Query parallel support. That includes: The earlierst four rev:s to cut off the DML stage of the parallel query project from the following devoted to DDL. The four skeleton parallel applying of Queries containing a temporary table, and implement a core of the design that is the DML queries. Queries can contain arbitrary features including temp tables. The DDL part also refined few items related to the general low-level design. In particular,  of the mark of the over-max db:s in the updated-db:s status var is turned to be another new constant value. The very last patch to the bundle addresses the last review mail notes. ------------------------------------------------------------ revno: 3269 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-01-12 01:01:02 +0200 message: merging from mysql-trunk ------------------------------------------------------------ revno: 3268 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-01-12 00:54:12 +0200 message: wl#5569 MTS fixing the worker threads start/stop. ------------------------------------------------------------ revno: 3267 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-27 18:54:41 +0000 message: merge mysql-trunk --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3266 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-24 01:57:03 +0200 message: wl#5569 MTS the timed-wait loop of SQL thread required a break-through parameter in case the signal missed in action and just timeout would be reported ------------------------------------------------------------ revno: 3265 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 19:03:42 +0200 message: merging from the repo wl5569 ------------------------------------------------------------ revno: 3264 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 17:49:19 +0200 message: wl#5569 MTS fixing corner cases that mtr-testing with mts workers against stardard suites reveal. ------------------------------------------------------------ revno: 3263 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 16:00:28 +0200 message: wl#5569 MTS: refining another assert that can force C to delete events that are skipped with the slave skip counter ------------------------------------------------------------ revno: 3262 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 15:34:02 +0200 message: wl#5569 MTS Correcting an assert that is hit by few tests. ------------------------------------------------------------ revno: 3261 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 13:27:15 +0200 message: wl#5569 MTS merging from the repo. ------------------------------------------------------------ revno: 3260 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 13:25:31 +0200 message: wl#5569 MTS fixing failing tests. ------------------------------------------------------------ revno: 3259 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-22 20:34:26 +0200 message: wl#5569 MTS merging from the repo. ------------------------------------------------------------ revno: 3258 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-22 20:31:13 +0200 message: wl#5569 MTS fixing tests failure when mtr runs --mts_slave_parallel_workers != 0. rpl000010 is a representative. Fixed with identifying, marking, running carefully ev->update_pos() and destroying an event that can split a group of events to force part to be in different relay logs. ------------------------------------------------------------ revno: 3257 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-22 13:57:18 +0200 message: wl#5569 MTS and wl#5599 MTS recovery The general recovery implementation is finished by this patch. Tested against  ./mtr rpl_parallel_conf_limits. Warning, ./mtr rpl_parallel_conf_limits rpl_parallel_conf_limits ... can fail at the 2nd etc test because of no removal of Worker tables happens at RESET SLAVE. ------------------------------------------------------------ revno: 3256 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-21 22:12:30 +0200 message: wl#5569 MTS slave_worker_info def is updated in the system db. ------------------------------------------------------------ revno: 3255 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-21 21:34:58 +0200 message: merging with repo ------------------------------------------------------------ revno: 3254 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-21 21:31:29 +0200 message: wl#5569 MTS Recovery routine part I: gathering the group recovery bitmap. ------------------------------------------------------------ revno: 3253 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-20 22:18:33 +0000 message: WL#5599 Fixed routine to compute the bitmap of executed events. ------------------------------------------------------------ revno: 3252 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-20 21:37:48 +0200 message: wl#5569 MTS adding checkpoint relay_log_name,pos as necessary part to locate a relay-log for recovery. Tested with rpl_parallel. ------------------------------------------------------------ revno: 3251 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-20 17:58:58 +0200 message: wl#5569 MTS manual merging from the repo and correcting GAQ processing with introducing a volatile byte to indicate whether an item is busy or released. ------------------------------------------------------------ revno: 3250 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-12-18 21:00:23 +0200 message: wl#5569 MTS fixing --mts-exp-slave-run-query-in-parallel=1 case when Query-log-event can be run in parallel incl DML and DDL. The feature is `exp'erimental still can be tried while there are no temp tables involved neither a db different than the session's default is modified by the query. Tested: Changes sustain mtr rpl_parallel --mysqld=--mts-exp-slave-run-query-in-parallel=1 --mysqld=--binlog-format=statement ------------------------------------------------------------ revno: 3249 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-17 14:46:15 +0200 message: wl#5569 MTS fixing PB2 failures, incl valgrind issues, long exec time and asserting in a test. ------------------------------------------------------------ revno: 3248 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-17 00:00:47 +0200 message: merge from  wl#5569 repo to local branch rpl_sequential opt files are added to avoid mtr give up to process a bulk of unsafe warnings. ------------------------------------------------------------ revno: 3247 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-16 23:41:45 +0200 message: wl#5569 MTS Adding transparent support/fallback to the sequential execution cases of 1. Query-log-event 2. Rows_query_log_event info event Both cases can be fully parallelized in future project. Fixing an issue in move_queue_head() that was surficed as an assert in Slave_worker::slave_worker_group_ends(). Fixing destoying an event by Worker. ------------------------------------------------------------ revno: 3246 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-14 16:46:20 +0200 message: merge from wl5569 repo ------------------------------------------------------------ revno: 3245 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-14 10:57:16 +0200 message: wl#5569 MTS a light cleanup to arrange the option/system var names properly - mts_-prefixing, and _exp prefixing for experimental features needed for benchmarking (mts_exp_slave_local_timestamp) or suppored limitly (mts_exp_slave_run_query_in_parallel for Query-log-event). Fixing GAQ size. It might be too tight e.g in case of the max WQ length of 1; tested with running rpl_parallel supplying --mts-slave-worker-queue-len-max=1. ------------------------------------------------------------ revno: 3244 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-13 18:53:32 +0200 message: wl#5569 MTS fixing a valgrind stack cauased by extra pfs-keys/cond_var. Those are removed with Alfranio`s consent ------------------------------------------------------------ revno: 3243 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-13 17:57:01 +0200 message: wl#5569 MTS fixing a set of valgrind warning cauased by a c&p ------------------------------------------------------------ revno: 3242 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-13 16:52:50 +0200 message: wl#5569 MTS updating results for few tests. ------------------------------------------------------------ revno: 3241 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-12-11 21:00:47 +0200 message: wl#5569 MTS 1. Fixing recovery related issue of DBUG_ASSERT(rli->get_event_relay_log_pos() >= BIN_LOG_HEADER_SIZE); at slave start with shifting mts_recovery_routine() at front of the assert. 2. Making SKIP-ed event to commit to the central RLI. That is correct since Workers are not executing anything at this time. 3. Fixing the default for mts_checkpoint_period which should not be zero normally. Zero makes sense solely for debugging (so we may stress that through VALID_RANGE(1,...). 4. Introduced a general mts-unsupported error/warning to apply to cases of non-zero parallel workers and a feature that parallelization can't work with. ------------------------------------------------------------ revno: 3240 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-10 18:25:27 +0200 message: merge from wl5569 repo to a local branch ------------------------------------------------------------ revno: 3239 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-10 17:50:03 +0200 message: wl#5569 MTS Improving GAQ in a) limit size to be capable to hold items while all WQ:s are full b) move_queue_head() contained a flaw to make no progress falsely c) never let to enque in GAQ while it's full ------------------------------------------------------------ revno: 3238 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-09 19:46:27 +0200 message: merge from wl5569 repo to a local branch ------------------------------------------------------------ revno: 3237 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-09 19:45:02 +0200 message: wl#5569 MTS Integration with wl#5599 recovery for MTS and fixing two asserts. One is due to missed cleanup of errored-out rows-events; the other is a work-around on w->curr_group_exec_parts->dynamic_ids is initialized to have one partition on the Worker startup, but it should not. ------------------------------------------------------------ revno: 3236 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-08 13:59:07 +0000 message: WL#5599 Fixed warning messages. ------------------------------------------------------------ revno: 3235 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-08 12:59:07 +0000 message: WL#5599 Fixed test cases. ------------------------------------------------------------ revno: 3234 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-08 01:30:32 +0000 message: WL#5599 Fixed failures in test cases. ------------------------------------------------------------ revno: 3233 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-08 00:33:48 +0000 message: merge mysql-trunk --> mysql-next-mr-wl5569 Conflicts: . mysql-test/r/log_tables_upgrade.result . mysql-test/r/mysql_upgrade.result . mysql-test/r/mysql_upgrade_ssl.result . mysql-test/r/mysqlcheck.result . mysql-test/suite/perfschema/r/pfs_upgrade_lc0.result . mysql-test/suite/rpl/t/disabled.def . mysql-test/suite/sys_vars/r/all_vars.result . mysql-test/t/system_mysql_db_fix40123.test . mysql-test/t/system_mysql_db_fix50030.test . mysql-test/t/system_mysql_db_fix50117.test . sql/log_event.cc . sql/log_event.h . sql/rpl_mi.h . sql/rpl_slave.cc . sql/share/errmsg-utf8.txt ------------------------------------------------------------ revno: 3232 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-07 20:01:39 +0200 message: manual merge with a piece of recovery support on repo. rpl_parallel hits an assert that Alfranio is fixing ------------------------------------------------------------ revno: 3231 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-07 19:35:16 +0200 message: wl#5569 MTS Testing related fixes incl master_pos_wait() support and thereafter replacing sleeps with the functioning sync_slave_with_master; Fixing the limitted Q-log-event parallelization. After the fixing mixture of rows- and Q- transactions can run concurrently. Q-transaction will be treated sequentially by default. ------------------------------------------------------------ revno: 3230 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2010-12-05 22:04:17 +0200 message: wl#5569 WL#5599 MTS & recovery Refining and correcting two wl:s integration. The main achievement is events execution status is consistently recorded into the Worker and the central RL recovery tables. That was tested manually in rather agressive env where IO was used to reconnect randomly and load from Master contained Rotate events. TODO: to fix: rpl.rpl_parallel_conf_limits may not pass to address: Multi-stmt Query-log-event transaction case (see todo in sources). to destruct by Workers their executed events (was deferred until ev->update_pos started working). (Alfranio) to deploy mts_checkpoint_routine() call inside the successful event read branch of next_event(). Otherwise no calling happens when Coord is constanly busy with read/distribute. ------------------------------------------------------------ revno: 3229 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-12-04 19:14:50 +0200 message: merging from the repo wl5569 ------------------------------------------------------------ revno: 3228 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-12-04 15:45:02 +0000 message: Added mutex to the checkpoint_routine. ------------------------------------------------------------ revno: 3227 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-03 16:56:11 +0000 message: Implemented periodic checkpoint if parallel slave is enabled. ------------------------------------------------------------ revno: 3226 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-03 10:15:45 +0000 message: Fixed commit_positions() and removed unnecessary checkpoint thread. ------------------------------------------------------------ revno: 3225 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-02 20:13:12 +0200 message: manual merge to wl#5569 tree ------------------------------------------------------------ revno: 3224 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-02 19:46:46 +0200 message: wl#5569 MTS User interface related: set @@global.slave_parallel_workers= `non-zero` following with `START SLAVE` starts slave with so many Worker threads. That is non-zero value is defacto the slave parallel execution mode. Earlier introduced enum enum_slave_exec_mode  SLAVE_EXEC_MODE_PARALLEL is withdrawn. Fixes rli->mts_pending_jobs_size statistics which might cause assert-crash otherwise. a silly c&p mistake of relay-log name change notification. Made a little clean-up including relocation of init-ion of workers related stuff into start_slave_workers(). Many changes in tests due to SLAVE_EXEC_MODE_PARALLEL and not only. ------------------------------------------------------------ revno: 3223 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-01 19:08:21 +0200 message: wl#5569 MTS The limit conditions such as WQ len, total WQ:s size related changes. Also a new test file is added. ------------------------------------------------------------ revno: 3222 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-11-30 16:39:40 +0200 message: merging from from wl#5569 repo containing wl#5599 integration ------------------------------------------------------------ revno: 3221 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-11-30 16:02:15 +0200 message: wl#5569 MTS Fixing group_relay_log_name change propagation from C to W; Garbage collection in the Partition-to-Worker hash is added with a parameter of how many records in the hash are tolerated w/o checking of the usage counter. Adding C-W synchronization due to: - overall WQ:s data max - hitting the limit of a WQ length Adding Flow Control infrastructure with - level of the hungry Worker forcing Coordinator to distribute eagerly symmetrically a Worker whose load is more than 100 % - hungry level is considered as fed-up. - nap time for C in case all WQ:s lengths are above the level. - a weight param to the base nap as a function of the number of fed-up W:s. TODO: UNTIL to force sequential exec; To fix ROWS_QUERY_LOG_EVENT corner case; to fix commented out // if (!ev) delete ev; after wl#5599 is merged (ev->update_pos() is done). ------------------------------------------------------------ revno: 3220 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-11-27 17:36:50 +0200 message: wl#5569 Providing relay-log name for wl#5599. Protocol of action on the C and W sides is described in rpl_rli_pdb.h. Erroring out in case of parallel exec and ROWS_QUERY_LOG_EVENT. (todo: the native sequential mode for the event needs some revision, in particular `delete ev' shall happen *always* in rli->cleanup_context not in two places as of current). ------------------------------------------------------------ revno: 3219 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-11-26 23:08:30 +0200 message: wl#5569 MTS Partitioning conflict detection and handling is implemented. A new option to run Query in parallel though incompatibly with Rows- case in that the default db not the actual db:s are used as the partition key. User interface gained the global var and the cmd line opt: slave_run_query_in_parallel (Welcome to the set! :-) ------------------------------------------------------------ revno: 3218 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-andrei timestamp: Fri 2010-11-26 16:15:37 +0000 message: There was a mismatching between the number of fields read and write and by consequence the read was failing for the Slave_worker. ------------------------------------------------------------ revno: 3217 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-11-25 11:03:54 +0200 message: wl#5569 merging with wl#5599 piece of code ------------------------------------------------------------ revno: 3216 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-11-25 10:47:39 +0200 message: wl#5569 Converting the prototype time db2w hash to be concurrent; Necessary inruduction of the least occupied Worker notion. It's currently computed as Worker having the least number of distributed partitions. Adding parallel support for Query_log_event; caution: 1. the session/default not the actual db as the key 2. may not have been tested against all use cases (e.g int vars) Fixing slave stop issues. ------------------------------------------------------------ revno: 3215 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-11-22 20:57:13 +0200 message: wl#5569 extinding futher interfaces to wl#5599 with propagating future_event_relay_log_pos to the Worker exec context. ------------------------------------------------------------ revno: 3214 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-11-20 19:23:42 +0200 message: wl#5569 MTS Worker pool start, stop, kills, error out implementation. ------------------------------------------------------------ revno: 3213 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-11-19 16:51:58 +0200 message: wl#5569 recovery interfaces for wl#5599 implementation. The essence of this patch is to provide GAQ object implimentation and valid life cycle. The checkpoint handler prior to call store methods of wl#5599 is supposed to invoke rli->gaq->move_queue_head(&rli->workers). See a simulation of that near ev->update_pos() of the mail sql thread loop. The checkpoint info is composed as instance of Slave_job_group to reside as rli->gap->lwm. Todo: uncomment +  // delete ev;  // after ev->update_pos() event is garbage once the real checkpoint has been done. Todo: the real implemention needs to take care of filing Slave_job_group::update_current_binlog as initially so at time of executing Rotate/FD methods. +  // experimental checkpoint per each scheduling attempt +  // logics of next_event() + +    rli->gaq->move_queue_head(&rli->workers); ------------------------------------------------------------ revno: 3212 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-11-18 16:50:54 +0200 message: wl#5569 wl#5599 Recovery related. Prototyping the worker RLI instantiation, to be elaborated on. ------------------------------------------------------------ revno: 3211 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-11-18 16:00:52 +0200 message: wl#5569 MTS Extending the wl#5563 prototype gradually. This commit addresses: 1. recovery interface (a new Worker rli plus rli->gaq and pseudo-code for checkpoint to update GAQ and the central RLI recovery table. Wrt rli, C and W execute do_apply_event(c_rli) where c_rli is the central instance. C executes update_pos(c_rli), but W update_pos(w_rli). others: - decreased processing time for rpl_parallel, serial. ------------------------------------------------------------ revno: 3210 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2010-11-14 11:55:32 +0000 message: Post-push fix for WL#5599. ------------------------------------------------------------ revno: 3209 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-11-12 17:58:12 +0000 message: Post-push fix for WL#5599. ------------------------------------------------------------ revno: 3208 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-11-11 11:53:01 +0000 message: WL#5599 The patch changed the handler's functions, i.e. init_info, check_info, flush_info, remove_info and end_info and the related private member functions, in both file and table handlers, to accept an index that identifies the information that will be read or written. This is necessary now because the handlers will be used by the workers to read and write information from file(s) and table and there may be several workers running at the same time and thus an index is used to identify the worker that is accessing information. This change is also necessary for the multi-master replication as information from each master must be uniquely identified. ------------------------------------------------------------ revno: 3207 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-11-10 10:57:13 +0000 message: Refactory to start work on WL#5599. ------------------------------------------------------------ revno: 3206 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-11-09 13:34:18 +0000 message: Removed mysql-test/collections/mysql-next-mr.crash-safe.* in the WL#5569. ------------------------------------------------------------ revno: 3205 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-11-09 13:04:14 +0000 message: merge mysql-next-mr.crash-safe --> mysql-next-mr-wl5569 Conflicts: . sql/CMakeLists.txt . sql/Makefile.am . sql/sql_class.h . sql/rpl_slave.cc ------------------------------------------------------------ revno: 3204 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-11-09 11:39:37 +0000 message: merge mysql-next-mr-wl5563-labs --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3203 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-17 23:33:37 +0300 message: wl#5563 simplifying memory handling for the Coor-Workers transport to avoid sporadic crashes ------------------------------------------------------------ revno: 3202 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-17 21:19:56 +0300 message: wl#5563 leaving out a fine garbage collection. That task is unnessary to solve at prototyping time. Update-pos routine to be implemented is going to eliminated that piece of code ------------------------------------------------------------ revno: 3201 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-17 20:38:35 +0300 message: wl#5563 Extending the tests base to split the former rpl_parallel into two to run in serial exec mode as well. ------------------------------------------------------------ revno: 3200 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-17 11:49:00 +0300 message: wl#5563 improved test; fixed a delete issue that was used to crash; added @@global.slave_local_timestamp to fill in timestamp col slave clock value. Performance growth can be seen through the test. todo: merge with Alfranio work on hashing and dyn alloc of PFS obj:s. ------------------------------------------------------------ revno: 3199 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Wed 2010-09-15 14:51:49 +0300 message: wl#5563 tests for the wl. Number of workers and iterations can be tuned. todo: convert as param:s to pass to the test through mtr ------------------------------------------------------------ revno: 3198 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Mon 2010-09-13 18:22:41 +0300 message: wl#5563 adding an ingeneous no-stress-attempting-yet test that also fired an assert. Refined the Worker instance ref computing because cleanup_context() is executed by the sql-thread the coordinator as well ------------------------------------------------------------ revno: 3197 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Mon 2010-09-13 13:15:38 +0300 message: wl#5563 Rows-event parallelization basically is implemented although tested shallowly. Write access to rli central stuct by workers may not be eliminated fully at this phase. E.g that relates to errors. todo: to prove rli gets out of Worker scope todo: to provide a stress test ------------------------------------------------------------ revno: 3196 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Sat 2010-09-11 17:00:08 +0300 message: wl#5563 adding Rows-event limitted to one Worker support. Deferred deletion did not check emptyness of the list ------------------------------------------------------------ revno: 3195 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-10 20:36:07 +0300 message: wl#5563 correcting comments to indicate less limitations ------------------------------------------------------------ revno: 3194 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-10 20:32:39 +0300 message: WL#5563 Prototype for Slave parallelized by db name More progress to the WL in that the STMT binlog-format works while the conceptual limits are held. That is no query/transaction is allowed to deal with more than one db. Addressed a complication in that update pos method that is run by Coordinator belongs to Log_event hierarchy and therefore the event deletion now by Worker must be careful. Todo: 1. (High prior) fix Row-format complications 2. (Hight prior) Elaborate on the hash function to be a function on db text name 3. (Optional)  Consider moving update_pos to the RLI class to get rid of the delete logics complication. How-to-use: The instuction can be found in comments of the previous commit, see there for more details. In brief though, the db names have to follow a pattern: `test[0-9]'. E.g test0, test1, test2, test3 for the default four Worker threads. Slave side has to set @@global.slave_exec_mode=PARALLEL; before START SLAVE. ------------------------------------------------------------ revno: 3193 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Thu 2010-09-09 21:43:16 +0300 message: WL#5563 Prototype for Slave parallelized by db name This is an intermediate commit that indicates some progress. Namely, the worker pool operates correctly and with signs of scalable performance. How to test: connection master; set @@global.binlog_format=statement; connection slave; set @@global.slave_exec_mode=PARALLEL; set @@global.binlog_format=mixed; show processlist; => IO, SQL threads + 4 workers by default change master to ... connection master; create database test0; create database test1; create database test2; create database test3; # create databases with magic names ""test[0-9]+"", where the number will index # a worker. create database test0; create database test1; create database test2; create database test3; # create tables. they are only of MyISAM type for now use test0; create table tm_1(a int, b int) engine=myisam; use ... # DML on tables: use test[0-3]; insert into tm_1 values (1,0); ... ... connection slave; # monitor CPU (visually this time: top etc) # check correctness e.g select count(*) from test[0-3].tm_1; connection master; select count(*) from test[0-3].tm_1; ****** ------------------------------------------------------------ revno: 3364 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-08-18 17:09:22 +0300 message: wl#5569 MTS Refining rpl_rotate_logs that could not produce deterministic output. The list of binlogs contained one binlog more than expected. ------------------------------------------------------------ revno: 3363 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-08-18 14:56:01 +0300 message: updating result files that were left incorrect by the last merge. ------------------------------------------------------------ revno: 3362 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-08-18 14:44:59 +0300 message: wl#5569 MTS Failure in recovery when binlog-checksum is active. The reason of the failure was in that parsing of relay log by MTS recovery gaps computing did not make sure to use the relay-log own FormatDescriptor events that contain checksumming info for all events in the log. Fixed with taking care to find out the checksum algorithm for every relay log as the first step of MTS recovery gaps computing. ------------------------------------------------------------ revno: 3361 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-08-17 11:21:23 +0300 message: merge from trunk forced to resolve few semantical conflicts caused by changes in THD::enter_cond() of the trunk. ------------------------------------------------------------ revno: 3360 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-07-27 08:56:14 +0100 message: Fixed failure in test rpl_mts_check_concurrency when running in the mts collection. ------------------------------------------------------------ revno: 3359 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-26 19:46:41 +0100 message: Added a test case that checks if MTS allows to concurrently access the replication tables, and as such, concurrently commit transactions that update different databases. ------------------------------------------------------------ revno: 3358 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-22 20:08:43 +0100 message: Configured rpl_parallel_switch_sequential to run in row and mixed mode to avoid cluttering the error log with messages on unsafe execution. ------------------------------------------------------------ revno: 3357 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-22 19:02:14 +0100 message: This patch contains the following fixes: . Removed suppressed warning introduced in the wrong test case (i.e. rpl_corruption) and put it in the correct one (i.e. rpl_row_corruption). . Introduced variable to avoid clutering the error log with several warning messages on unsafe execution. ------------------------------------------------------------ revno: 3356 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-22 11:01:12 +0100 message: This patch has the following changes: . Specific directories were created for the MTS runs in the default.push. . Warning message was suppressed in the rpl_corruption.test. . Annoying debug outputs were removed from the error log. However, this is a temporary solution as it forbids to enable traces. ------------------------------------------------------------ revno: 3355 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-07-20 11:56:40 +0100 message: merge mysql-trunk --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3354 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-19 22:26:30 +0300 message: wl#5569 MTS valgrind reported a stack on rpl_savepoint. The problem appears to be in that at computing slave_sql_running_state in show_mater_info() the sql thread proc_info pointer could refer to a value in a stack that has already gone. Fixed with making proc_info to point to a string literal. ------------------------------------------------------------ revno: 3353 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-19 17:46:43 +0100 message: Suppressed warning messages that could potentially cause problems while running mts crash safe test cases. ------------------------------------------------------------ revno: 3352 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-07-18 21:46:45 +0300 message: wl#5569 MTS Cosmetic changes are done to address readability and clearness of source code of the MTS patch. ------------------------------------------------------------ revno: 3351 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-07-18 14:52:44 +0300 message: wl#5569 MTS Inadvertently introduced hunk two rev:s back is reverted to please rpl_*_mts_crash_safe. ------------------------------------------------------------ revno: 3350 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-07-17 00:51:45 +0300 message: wl#5569 MTS fixing build issue for embedded. Public visibility for Rows_log_event::do_apply_event() is restored. ------------------------------------------------------------ revno: 3349 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-07-16 20:08:31 +0300 message: wl#5569 MTS The patch contains improvements after code review. Changes are mostly consmetic. ------------------------------------------------------------ revno: 3348 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-07-16 02:11:11 +0300 message: bug#12755663 MTS: RPL_CIRCULAR_FOR_4_HOSTS FAILS: CANT EXECUTE THE CURRENT EVENT GROUP MTS stopped with an error in the middle of the test. The reason is that a group of events from the slave itself was processed partly to modify the group position. In the following restart the wrong group bondary made slave either to error out or assert. Fixed with locating a possible race condition allowin Coordinator to ignore actual failed status of a Worker. So in the case of the test, the slave server group can't be started. Notice, this is a trial patch since I can't catch the failure on available to me hosts at all. ------------------------------------------------------------ revno: 3347 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-07-14 12:40:06 +0300 message: WL#5569 MTS further extensive rpl_circular_for_4_hosts exersices with --repeat 10 --parallel=8 revealed a race condition in that Coordinator might miss to catch not-running status for a Worker. That made Coordinator to skip only a part of a group of the slave server own events so the slave stops at not the bondary of a group. Fixed with moving marking of the errored-out Worker as failed prior to its APH entries release. TODO: notice there can be a possibility to stop at not the boundary due to graceful STOP SLAVE if one is run at time of skipping self-originated events. However this issue belongs to STS and might be similar with BUG@12604951 and BUG@12728160. ------------------------------------------------------------ revno: 3346 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-07-14 08:03:55 +0100 message: Post-push fixes for WL#5569 Injecting faults while updating a myisam table requires to flush the changes before committing suicide. So we have introduced the follwing code: DBUG_EXECUTE_IF(""crash_after_commit_and_update_pos"", -                       DBUG_SUICIDE();); +           sql_print_information(""Crashing crash_after_commit_and_update_pos.""); +           flush_info(TRUE); +           DBUG_SUICIDE(); Besides we improved some comments. ------------------------------------------------------------ revno: 3345 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-07-13 16:23:57 +0100 message: WL#5569 ------------------------------------------------------------ revno: 3344 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-07-13 00:10:43 +0300 message: wl#5569 MTS merge trunk -> wl5569-tree ------------------------------------------------------------ revno: 3343 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-12 23:36:17 +0300 message: wl#5569 MTS adding suppression due to expected warning to rpl_circurlar_for_4_hosts; decreasing a loop limit in rpl_parallel_switch_sequential in case of statement format. ------------------------------------------------------------ revno: 3342 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-12 14:46:23 +0300 message: WL#5569 MTS Fixing code and test due to rpl.rpl_circular_for_4_hosts  mismatch failure, like http://pb2.norway.sun.com/?action=archive_download&archive_id=3608382. The reason of the mismatch was that when having two group of events to execute, the first for a Worker and the 2nd for Coordinator, Coordinator waited for the 1st group completion but did not verify success of synchronization. So in a case of the failed applying of the 1st group processing of the 2nd could find an inconsistent state to end up with a segfault (even though only the mismatch has been seen so far). ------------------------------------------------------------ revno: 3341 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-07-10 22:40:01 +0100 message: Avoiding busy waiting when running mts recovery tests. ------------------------------------------------------------ revno: 3340 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-07-09 23:11:58 +0100 message: Removed --slave-checkpoint-period from MTS test cases. ------------------------------------------------------------ revno: 3339 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-07-09 23:08:07 +0100 message: Improved test cases for the WL#5569. ------------------------------------------------------------ revno: 3338 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-08 22:40:52 +0300 message: wl#5569 MTS The patch refines logics of applying phase of MTS-recovery to always applying events that are for Coordinator; fixes few tests to make them passable on PB; makes GAQ size to be of checkpoint_group value. ------------------------------------------------------------ revno: 3337 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-08 07:54:34 +0100 message: Reduced the timeout period to run the checkpoint routine by setting slave-checkpoint-period to 30. ------------------------------------------------------------ revno: 3336 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-08 07:44:35 +0100 message: merge mysql-trunk --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3335 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-07-06 12:46:05 +0300 message: wl#5569 MTS refining wait for db-hash entry release at event distribution. The graceful STOP is not accepted at this point so Coordinator continues to stay in a loop. ------------------------------------------------------------ revno: 3334 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-05 20:43:04 +0300 message: bug#12719875 possible MTS recovery issue. MTS stopped with an error after failing to apply an event. It turned out that the event was sceduled incorrectly due to earlier stop by Single-Threaded Slave not at the group boundary but rather in the middle of it. Fixed with forcing CREATE..SELECT be logged as two groups. The CREATE-TABLE group is surrounded with its own BEGIN/COMMIT braces. ------------------------------------------------------------ revno: 3333 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-07-04 18:14:09 +0300 message: wl#5569 MTS Adding a rule to run PB with all suites in MTS with binlog-format ROW. ------------------------------------------------------------ revno: 3332 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-07-03 23:29:34 +0300 message: wl5569 MTS cleanup in one file. ------------------------------------------------------------ revno: 3331 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-07-03 23:16:02 +0300 message: wl5569 MTS bzr commit mail address changed; a minor cleanup to make mts_is_worker() with const argument; releasing a test to run in MTS. ------------------------------------------------------------ revno: 3330 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-07-02 08:58:56 +0100 message: Fixed use of the performance schema in the replication code and concurrency issue in the IO Thread. In particular, the IO Thread was calling flush_master_info without grabbing locks. ------------------------------------------------------------ revno: 3329 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-01 16:41:35 +0300 message: wl5569 MTS merging from the main repo. ------------------------------------------------------------ revno: 3328 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-01 15:48:25 +0300 message: wl#5569 MTS the final cleanup patch. There are few glitches that were considered as tolerable at least for time of the total wl's code is being reviewed. That includes: - no support to old load-data events - no support for FK to add to the list, there are few places in the patch that suggests to deploy error branches each time flush_info() is called. ------------------------------------------------------------ revno: 3327 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-01 13:16:52 +0300 message: wl#5569 MTS The patch cleans up some host of code. ------------------------------------------------------------ revno: 3326 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-28 11:30:18 +0300 message: wl#5569 MTS replacing views with regular tables for consistency verification in rpl_parallel_innodb. Also a minor cleanup in rpl_parallel is done. ------------------------------------------------------------ revno: 3325 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-27 20:31:45 +0300 message: wl#5569 MTS Cleanup and addressing sporadic rpl_temp_table_mix_row failure in post-execution mtr.check_testcase(). The check of the test failure was caused by faulty optimization in avoiding to migrate temporary tables from Coordinator to Workers in case of rows-event assignement. while it's correct with the homogenous rows-event only load, the mixture can fail. Fixed with removing the optimization so map_db_to_worker() always relocates which is somewhat suboptimal and should be improved in future. ------------------------------------------------------------ revno: 3324 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-27 13:12:52 +0100 message: Ensured that updates to the worker_info_repository are transactional and fixed the slave_checkpoint_group_basic test case. ------------------------------------------------------------ revno: 3323 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-26 13:02:59 +0100 message: Fixed test case. ------------------------------------------------------------ revno: 3322 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-06-25 15:14:24 +0100 message: Introduced test case for recovery with MTS and fixed bugs in recovery. ------------------------------------------------------------ revno: 3321 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-24 15:38:19 +0300 message: wl#5569 MTS This patch makes a bit of cleanup, addresses one memory-allocation todo and completes fixing valgrind report (rpl_parallel_start_stop) due to strings allocation in Slave_job_group items. ------------------------------------------------------------ revno: 3320 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-24 12:38:34 +0300 message: wl#5569 MTS this patch completes the previous one to fixes a result file and make the innodb specific test verification to base on tables not views. ------------------------------------------------------------ revno: 3319 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-24 00:11:22 +0300 message: wl#5569 MTS this is an exploratory patch to sort out if verification method what was based on views has its own not related to mts flaw. The patch calls verification macro on the tables that required some adjustment. ------------------------------------------------------------ revno: 3318 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-06-23 07:56:15 +0300 message: wl#5569 MTS fixing results of mysqld--help-win. ------------------------------------------------------------ revno: 3317 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-22 19:20:40 +0100 message: merge mysql-next-mr-wl5569 (local) --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3316 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-22 19:17:43 +0100 message: In some platforms, such as Windows, thread's wait time is stored in 100ns units. However, when computing the difference between two values, the result value was not multiplied by 100. Besides, there was a casting problem when the aforementioned result value was assigned to an ulong. ------------------------------------------------------------ revno: 3315 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-22 18:54:23 +0100 message: Fixed how mts copes with recovery. ------------------------------------------------------------ revno: 3314 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-21 19:10:54 +0300 message: wl#5569 MTS Fixing valgrind warnings. ------------------------------------------------------------ revno: 3313 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-21 18:15:43 +0300 message: wl#5569 MTS rpl_parallel_start_stop.test could fail sporadicaly with timeout. ------------------------------------------------------------ revno: 3312 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-20 23:21:56 +0100 message: merge mysql-next-mr-wl5569 (local) --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3311 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-20 23:19:06 +0100 message: Fixed error when computing the Lower-Water-Mark. If two or more jobs were removed from the Group of assigned jobs and one of the jobs had a non-empty group relay log but the last one had an empty group relay log. The Lower-Water-Mark was not correctly updated, because the algorithm assumed that the group relay log was null. ------------------------------------------------------------ revno: 3310 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-20 11:52:44 +0100 message: Fixed valgrind errors. Slave_job_group was silently being cast to LOG_POS_COORD while calling sort_dynamic(&above_lwm_jobs, (qsort_cmp) mts_event_coord_cmp) and by consequence mts_event_coord_cmp(LOG_POS_COORD *, LOG_POS_COORD *). This had two problems: . The first two entries in the Slave_job_group were not a pointer to a char * and my_offset. . Even if the first two entries were char * and my_offset, such casting could lead to alignment problems. To fix the problem, we avoid this casting. ------------------------------------------------------------ revno: 3309 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-19 19:14:50 +0300 message: wl#5569 MTS fixing slave_transaction_retries_basic_64.result ------------------------------------------------------------ revno: 3308 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-19 16:11:25 +0300 message: wl#5569 MTS fixing tests. ------------------------------------------------------------ revno: 3307 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-19 12:33:36 +0300 message: wl#5569 MTS Fixing rpl.rpl_mixed_binlog_max_cache_size that revealed incorrect asynchronous handling of a Rotate event which does not split the current group and therefore has to be executed after all previously scheduled events. Fixing sensetivity of two other tests to mtr's invocation environment that includes inital values of slave_parallel_workers and slave_transaction_retries. ------------------------------------------------------------ revno: 3306 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-19 09:04:19 +0100 message: Fixed some windows failures. ------------------------------------------------------------ revno: 3305 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-06-18 19:58:21 +0100 message: Fixed some recovery issues. ------------------------------------------------------------ revno: 3304 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-17 21:01:58 +0300 message: wl#5569 MTS fixing tests and a segfault at the end of handle_slave_sql() happened after worker initialization failed (e.g rpl_row_log on win). ------------------------------------------------------------ revno: 3303 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-17 18:34:16 +0300 message: wl#5569 MTS fixing tests. ------------------------------------------------------------ revno: 3302 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-17 14:00:41 +0300 message: wl#5569 MTS fixing rpl_row_basic_3innodb similarly to the previous patch. ------------------------------------------------------------ revno: 3301 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-17 13:51:59 +0300 message: wl#5569 MTS fixing few tests. 1. Policy is implemented for reacting with a warning in a case of failing worker leaves the total slave state with gaps thereby inconsistent. 2. Two tests that were used to time out due to reset master/slave was disabled in there. ------------------------------------------------------------ revno: 3300 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-17 02:24:59 +0100 message: Removed unnecessary test cases and augment others in order to test recovery. ------------------------------------------------------------ revno: 3299 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-06-16 19:46:22 +0300 message: wl#5569 MTS fixing slave_parallel_workers_basic and rpl_stop_middle_group which cant run in MTS ------------------------------------------------------------ revno: 3298 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-06-16 11:29:53 +0300 message: wl#5569 MTS adding new tests to sys_vars.\ ------------------------------------------------------------ revno: 3297 committer: Luis Soares <luis.soares@oracle.com> branch nick: mysql-trunk-wl5569 timestamp: Thu 2011-06-16 01:41:32 +0100 message: WL#5569 Adding a global suppression for the warning that may appear when stopping the slave sql thread in the middle of a group. This should affect MTS mode only. ------------------------------------------------------------ revno: 3296 committer: Luis Soares <luis.soares@oracle.com> branch nick: mysql-trunk-wl5569 timestamp: Thu 2011-06-16 01:40:41 +0100 message: WL#5569 Renames worker-info-repository to slave-worker-info-repository in some tests option files. ------------------------------------------------------------ revno: 3295 committer: Luis Soares <luis.soares@oracle.com> branch nick: mysql-trunk-wl5569 timestamp: Thu 2011-06-16 01:32:37 +0100 message: WL#5569 More test fixes. Removing remaining prefixes 'mts' from mts variables, which have been renamed recently. ------------------------------------------------------------ revno: 3294 committer: Luis Soares <luis.soares@oracle.com> branch nick: mysql-trunk-wl5569 timestamp: Thu 2011-06-16 00:27:20 +0100 message: WL#5569 Fixing rpl_parallel result file. ------------------------------------------------------------ revno: 3293 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-15 20:41:33 +0300 message: wl#5569 MTS correcting --slave-parallel-workers in few more files ------------------------------------------------------------ revno: 3292 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-15 20:31:46 +0300 message: wl#5569 MTS correcting --slave-parallel-workers in collections/default.push ------------------------------------------------------------ revno: 3291 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-15 20:12:11 +0300 message: wl#5569 MTS Cleanup, including 1. decreasing number and renaming system variables. Important for debugging command line options are replaced with reasonble constant values and only necessary are retained. 2. Small encapsulation in ha_blackhole.cc is done. ------------------------------------------------------------ revno: 3290 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-15 15:59:23 +0100 message: Fixed replication valgring failures caused by the MTS. ------------------------------------------------------------ revno: 3289 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-14 21:23:13 +0300 message: wl#5569 MTS wl#5754 Query event parallel execution Fixing failing tests and a failure in gathering accessed databases that was caused by a recent merge from trunk. ------------------------------------------------------------ revno: 3288 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-14 13:35:20 +0300 message: merge from trunk ------------------------------------------------------------ revno: 3287 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-14 12:27:38 +0300 message: wl#5569 MTS Fixing failing tests due to a. a flaw in `isolated parallel' mode implementation. Isolation applies to a group of event rather than to an instance. And event that contains over-max accessed db:s or event from Old master trigger marking the current being scheduled group. Such group will be executed having all prior scheduled done and nomore will be scheduled until the group is done. b. Notification to Coordinator about errored-out Worker is corrected. ------------------------------------------------------------ revno: 3286 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-12 22:33:32 +0300 message: wl#5569 MTS making default.push to run rpl suite with non-default --mts-slave-parallel-workers > 0 in all three format/mode (row,stmt, mixed). The default is run for all suites in mixed mode and rpl suites with row+ps, stmt formats. ------------------------------------------------------------ revno: 3285 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-12 22:05:05 +0300 message: wl#5569 MTS manual merge with few fixes for segfault of the last merge from the trunk etc, compilation issue on embedded. ------------------------------------------------------------ revno: 3284 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-06-09 18:35:59 +0100 message: Post-fixes for merge. Fixed compilation in Windows and removed an used options. ------------------------------------------------------------ revno: 3283 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-06-09 16:27:47 +0100 message: merge mysql-trunk --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3282 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-06 13:51:19 +0300 message: wl#5569 MTS STOP SLAVE now stops consistently w/o gaps, KILL shall be used for an urgent stop, an error case behaves like the killed. For instance, a Worker errors out, it sends KILL to Coordinator through THD::awake(), and Coordinator kill the rest through setting a special Worker-running status to killed (which breaks the read-exec loop of a Worker). ------------------------------------------------------------ revno: 3281 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-05 20:01:51 +0300 message: wl#5569 MTS More cleanup, fixes due to found issues when running tests, some improvements incl in stopping Workers to make routine to distinguish between killed and gracefully stopped cases so in the end STOP SLAVE will guarantee consistent state (some todo remains still). ------------------------------------------------------------ revno: 3280 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-05-30 13:05:07 +0300 message: WL#5569 MTS WL#5754 Query event parallel applying ----------------------------------------------------------------- Aggregating 7 commits that are not pushed yet to the wl5569 repo. Find comments for each cset below. ------------------------------------------------------------------ The current patch addresses concurrent updating slave_open_temp_tables status counter. The former declaration of the underlying server variable is changed from ulong to int32. While that might affect (shrink) the actual range, there has been no specified range and now after the number of bits is the same on all platforms the range cat be set to be [0, max(int32)] ****** wl#5569 MTS Wl#5754 Query event parallel appying wl#5599 MTS recovery The patch includes some cleanup, including one for temp tables support, realization of few todo:s. ****** wl#5569 MTS wl#5754 Query event parallel applying More cleanup is done; Fixing temp tables manipulation. Asserting an impossible to support use case of group of events not wrapped with BEGIN/COMMIT. Todo: recognize old master binlog to refuse to run in parallel. ****** wl#5569 MTS Implementation of giving out the applier role to Worker for all cases but ones dealing with the Coordinators state. That includes Query event with over-max-db:s and Load-data related events. The current patch also makes old master binlog be handled by MTS though sometimes e.g for Query event to switch to the sequential mode. Fixing a race condition making C to wait endlessly if a Worker has exitted due to its applying error. ****** wl#5569 MTS correcting an assert that was used to fire as warned in the previous commit. Parallel feature tests pass now. ****** wl#5569 MTS This patch contains cleanup and simplification of logics of handling some events sequentially by Coordinator and adds memory-allocation failure branch to workers starting routine. ****** wl#5569 MTS An intermediate patch to address few issues raised by reviewers. To sum up, it's about cleanup and logics simplification of event distribution to Worker and consequent actions. Some efforts were paid to support Old Master Begin-less group of events. ------------------------------------------------------------ revno: 3279 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-05-24 17:29:35 +0300 message: WL#5569 MTS WL#5754 Query parallel appying Changing implementation of temporary tables support in MTS. Cleanup, fixing few todo:s and few potential issues found. ------------------------------------------------------------ revno: 3278 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-05-19 12:36:28 +0300 message: wl#5569 MTS Support for ROWS_QUERY_LOG_EVENT is added. It required refactoring of its handling in the canonical sequential mode. The event life suggests its behavior similar to objects associated with Table_map, in particural, its destoying to occur at the end-of-statement time. Tested against existing ROWS_QUERY_LOG_EVENT feature tests incl rpl_row_ignorable_event in both sequential and parallel mode. ------------------------------------------------------------ revno: 3277 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-05-16 22:43:58 +0300 message: wl#5569 MTS Simplifying Coordinator-Worker interfaces. In essence after this patch Worker execute events in its private context (class Slave_worker :public Relay_log_info). The only exception is Query referring to temporary table. The temp:s are maintained in the Coordinator's ""central"" rli; removing some dead code; performing a lot of cleanup. There are few todo items incl: 1. To implement several todo:s scattered across MTS' code and tests (e.g to restore protected for few members of RLI of rpl_rli.h); 2. to cover Rows_query_log_event that currently can cause hanging (e.g rpl_parallel_fallback) 3. To sort out names of classes based on Rpl_info, possibly remove  Rpl_info_worker ------------------------------------------------------------ revno: 3276 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-05-06 21:33:32 +0300 message: wl#5569 MTS improving benchmarking test. ------------------------------------------------------------ revno: 3275 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-04-06 15:51:58 +0300 message: wl#5569 MTS Statistics for Workers and Coordinator incl waiting times, sleeping is reported now into the error log as slave stopping time. ------------------------------------------------------------ revno: 3274 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-04-05 19:26:37 +0300 message: wl#5569 MTS restoring previous 4 default workers that rpl_parallel works with. ------------------------------------------------------------ revno: 3273 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-04-03 13:07:30 +0300 message: wl#5569 MTS Benchmarking related patch uniforms rpl_parallel to be run with arbitrary number of workers, db:s, tables, etc. TODO: to restore the final constinency check which is given out temporary while i could not find a way to leave it surrounded with  a --dis/en-able* stanza. ------------------------------------------------------------ revno: 3272 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-04-02 14:32:02 +0300 message: wl#5569 MTS a test file for benchmarking is added. Benchmarking results can be gained by extracting the master side generating and the slave side applying times like in the following loop: workers=6; for n in `seq 1 3`; do echo; echo loop: $n; echo; my_mtr.sh --mysqld=--mts-slave-parallel-workers=$workers  \ rpl_parallel_benchmark --mysqld=--binlog-format=statement \ && cat /dev/shm/var/mysqld.2/data/test/delta.out >> p${workers}_stmt.out 2>&1; done ------------------------------------------------------------ revno: 3271 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-03-30 17:11:24 +0300 message: wl#5754 Query event parallel execution Small cleanup for comments as requested by reviewer. ------------------------------------------------------------ revno: 3270 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-02-27 19:35:25 +0200 message: WL#5754 Query event parallel execution Bundling together implementation the whole DML+DDL Query parallel support. That includes: The earlierst four rev:s to cut off the DML stage of the parallel query project from the following devoted to DDL. The four skeleton parallel applying of Queries containing a temporary table, and implement a core of the design that is the DML queries. Queries can contain arbitrary features including temp tables. The DDL part also refined few items related to the general low-level design. In particular,  of the mark of the over-max db:s in the updated-db:s status var is turned to be another new constant value. The very last patch to the bundle addresses the last review mail notes. ------------------------------------------------------------ revno: 3269 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-01-12 01:01:02 +0200 message: merging from mysql-trunk ------------------------------------------------------------ revno: 3268 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-01-12 00:54:12 +0200 message: wl#5569 MTS fixing the worker threads start/stop. ------------------------------------------------------------ revno: 3267 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-27 18:54:41 +0000 message: merge mysql-trunk --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3266 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-24 01:57:03 +0200 message: wl#5569 MTS the timed-wait loop of SQL thread required a break-through parameter in case the signal missed in action and just timeout would be reported ------------------------------------------------------------ revno: 3265 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 19:03:42 +0200 message: merging from the repo wl5569 ------------------------------------------------------------ revno: 3264 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 17:49:19 +0200 message: wl#5569 MTS fixing corner cases that mtr-testing with mts workers against stardard suites reveal. ------------------------------------------------------------ revno: 3263 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 16:00:28 +0200 message: wl#5569 MTS: refining another assert that can force C to delete events that are skipped with the slave skip counter ------------------------------------------------------------ revno: 3262 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 15:34:02 +0200 message: wl#5569 MTS Correcting an assert that is hit by few tests. ------------------------------------------------------------ revno: 3261 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 13:27:15 +0200 message: wl#5569 MTS merging from the repo. ------------------------------------------------------------ revno: 3260 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 13:25:31 +0200 message: wl#5569 MTS fixing failing tests. ------------------------------------------------------------ revno: 3259 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-22 20:34:26 +0200 message: wl#5569 MTS merging from the repo. ------------------------------------------------------------ revno: 3258 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-22 20:31:13 +0200 message: wl#5569 MTS fixing tests failure when mtr runs --mts_slave_parallel_workers != 0. rpl000010 is a representative. Fixed with identifying, marking, running carefully ev->update_pos() and destroying an event that can split a group of events to force part to be in different relay logs. ------------------------------------------------------------ revno: 3257 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-22 13:57:18 +0200 message: wl#5569 MTS and wl#5599 MTS recovery The general recovery implementation is finished by this patch. Tested against  ./mtr rpl_parallel_conf_limits. Warning, ./mtr rpl_parallel_conf_limits rpl_parallel_conf_limits ... can fail at the 2nd etc test because of no removal of Worker tables happens at RESET SLAVE. ------------------------------------------------------------ revno: 3256 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-21 22:12:30 +0200 message: wl#5569 MTS slave_worker_info def is updated in the system db. ------------------------------------------------------------ revno: 3255 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-21 21:34:58 +0200 message: merging with repo ------------------------------------------------------------ revno: 3254 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-21 21:31:29 +0200 message: wl#5569 MTS Recovery routine part I: gathering the group recovery bitmap. ------------------------------------------------------------ revno: 3253 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-20 22:18:33 +0000 message: WL#5599 Fixed routine to compute the bitmap of executed events. ------------------------------------------------------------ revno: 3252 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-20 21:37:48 +0200 message: wl#5569 MTS adding checkpoint relay_log_name,pos as necessary part to locate a relay-log for recovery. Tested with rpl_parallel. ------------------------------------------------------------ revno: 3251 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-20 17:58:58 +0200 message: wl#5569 MTS manual merging from the repo and correcting GAQ processing with introducing a volatile byte to indicate whether an item is busy or released. ------------------------------------------------------------ revno: 3250 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-12-18 21:00:23 +0200 message: wl#5569 MTS fixing --mts-exp-slave-run-query-in-parallel=1 case when Query-log-event can be run in parallel incl DML and DDL. The feature is `exp'erimental still can be tried while there are no temp tables involved neither a db different than the session's default is modified by the query. Tested: Changes sustain mtr rpl_parallel --mysqld=--mts-exp-slave-run-query-in-parallel=1 --mysqld=--binlog-format=statement ------------------------------------------------------------ revno: 3249 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-17 14:46:15 +0200 message: wl#5569 MTS fixing PB2 failures, incl valgrind issues, long exec time and asserting in a test. ------------------------------------------------------------ revno: 3248 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-17 00:00:47 +0200 message: merge from  wl#5569 repo to local branch rpl_sequential opt files are added to avoid mtr give up to process a bulk of unsafe warnings. ------------------------------------------------------------ revno: 3247 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-16 23:41:45 +0200 message: wl#5569 MTS Adding transparent support/fallback to the sequential execution cases of 1. Query-log-event 2. Rows_query_log_event info event Both cases can be fully parallelized in future project. Fixing an issue in move_queue_head() that was surficed as an assert in Slave_worker::slave_worker_group_ends(). Fixing destoying an event by Worker. ------------------------------------------------------------ revno: 3246 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-14 16:46:20 +0200 message: merge from wl5569 repo ------------------------------------------------------------ revno: 3245 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-14 10:57:16 +0200 message: wl#5569 MTS a light cleanup to arrange the option/system var names properly - mts_-prefixing, and _exp prefixing for experimental features needed for benchmarking (mts_exp_slave_local_timestamp) or suppored limitly (mts_exp_slave_run_query_in_parallel for Query-log-event). Fixing GAQ size. It might be too tight e.g in case of the max WQ length of 1; tested with running rpl_parallel supplying --mts-slave-worker-queue-len-max=1. ------------------------------------------------------------ revno: 3244 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-13 18:53:32 +0200 message: wl#5569 MTS fixing a valgrind stack cauased by extra pfs-keys/cond_var. Those are removed with Alfranio`s consent ------------------------------------------------------------ revno: 3243 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-13 17:57:01 +0200 message: wl#5569 MTS fixing a set of valgrind warning cauased by a c&p ------------------------------------------------------------ revno: 3242 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-13 16:52:50 +0200 message: wl#5569 MTS updating results for few tests. ------------------------------------------------------------ revno: 3241 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-12-11 21:00:47 +0200 message: wl#5569 MTS 1. Fixing recovery related issue of DBUG_ASSERT(rli->get_event_relay_log_pos() >= BIN_LOG_HEADER_SIZE); at slave start with shifting mts_recovery_routine() at front of the assert. 2. Making SKIP-ed event to commit to the central RLI. That is correct since Workers are not executing anything at this time. 3. Fixing the default for mts_checkpoint_period which should not be zero normally. Zero makes sense solely for debugging (so we may stress that through VALID_RANGE(1,...). 4. Introduced a general mts-unsupported error/warning to apply to cases of non-zero parallel workers and a feature that parallelization can't work with. ------------------------------------------------------------ revno: 3240 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-10 18:25:27 +0200 message: merge from wl5569 repo to a local branch ------------------------------------------------------------ revno: 3239 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-10 17:50:03 +0200 message: wl#5569 MTS Improving GAQ in a) limit size to be capable to hold items while all WQ:s are full b) move_queue_head() contained a flaw to make no progress falsely c) never let to enque in GAQ while it's full ------------------------------------------------------------ revno: 3238 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-09 19:46:27 +0200 message: merge from wl5569 repo to a local branch ------------------------------------------------------------ revno: 3237 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-09 19:45:02 +0200 message: wl#5569 MTS Integration with wl#5599 recovery for MTS and fixing two asserts. One is due to missed cleanup of errored-out rows-events; the other is a work-around on w->curr_group_exec_parts->dynamic_ids is initialized to have one partition on the Worker startup, but it should not. ------------------------------------------------------------ revno: 3236 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-08 13:59:07 +0000 message: WL#5599 Fixed warning messages. ------------------------------------------------------------ revno: 3235 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-08 12:59:07 +0000 message: WL#5599 Fixed test cases. ------------------------------------------------------------ revno: 3234 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-08 01:30:32 +0000 message: WL#5599 Fixed failures in test cases. ------------------------------------------------------------ revno: 3233 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-08 00:33:48 +0000 message: merge mysql-trunk --> mysql-next-mr-wl5569 Conflicts: . mysql-test/r/log_tables_upgrade.result . mysql-test/r/mysql_upgrade.result . mysql-test/r/mysql_upgrade_ssl.result . mysql-test/r/mysqlcheck.result . mysql-test/suite/perfschema/r/pfs_upgrade_lc0.result . mysql-test/suite/rpl/t/disabled.def . mysql-test/suite/sys_vars/r/all_vars.result . mysql-test/t/system_mysql_db_fix40123.test . mysql-test/t/system_mysql_db_fix50030.test . mysql-test/t/system_mysql_db_fix50117.test . sql/log_event.cc . sql/log_event.h . sql/rpl_mi.h . sql/rpl_slave.cc . sql/share/errmsg-utf8.txt ------------------------------------------------------------ revno: 3232 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-07 20:01:39 +0200 message: manual merge with a piece of recovery support on repo. rpl_parallel hits an assert that Alfranio is fixing ------------------------------------------------------------ revno: 3231 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-07 19:35:16 +0200 message: wl#5569 MTS Testing related fixes incl master_pos_wait() support and thereafter replacing sleeps with the functioning sync_slave_with_master; Fixing the limitted Q-log-event parallelization. After the fixing mixture of rows- and Q- transactions can run concurrently. Q-transaction will be treated sequentially by default. ------------------------------------------------------------ revno: 3230 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2010-12-05 22:04:17 +0200 message: wl#5569 WL#5599 MTS & recovery Refining and correcting two wl:s integration. The main achievement is events execution status is consistently recorded into the Worker and the central RL recovery tables. That was tested manually in rather agressive env where IO was used to reconnect randomly and load from Master contained Rotate events. TODO: to fix: rpl.rpl_parallel_conf_limits may not pass to address: Multi-stmt Query-log-event transaction case (see todo in sources). to destruct by Workers their executed events (was deferred until ev->update_pos started working). (Alfranio) to deploy mts_checkpoint_routine() call inside the successful event read branch of next_event(). Otherwise no calling happens when Coord is constanly busy with read/distribute. ------------------------------------------------------------ revno: 3229 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-12-04 19:14:50 +0200 message: merging from the repo wl5569 ------------------------------------------------------------ revno: 3228 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-12-04 15:45:02 +0000 message: Added mutex to the checkpoint_routine. ------------------------------------------------------------ revno: 3227 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-03 16:56:11 +0000 message: Implemented periodic checkpoint if parallel slave is enabled. ------------------------------------------------------------ revno: 3226 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-03 10:15:45 +0000 message: Fixed commit_positions() and removed unnecessary checkpoint thread. ------------------------------------------------------------ revno: 3225 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-02 20:13:12 +0200 message: manual merge to wl#5569 tree ------------------------------------------------------------ revno: 3224 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-02 19:46:46 +0200 message: wl#5569 MTS User interface related: set @@global.slave_parallel_workers= `non-zero` following with `START SLAVE` starts slave with so many Worker threads. That is non-zero value is defacto the slave parallel execution mode. Earlier introduced enum enum_slave_exec_mode  SLAVE_EXEC_MODE_PARALLEL is withdrawn. Fixes rli->mts_pending_jobs_size statistics which might cause assert-crash otherwise. a silly c&p mistake of relay-log name change notification. Made a little clean-up including relocation of init-ion of workers related stuff into start_slave_workers(). Many changes in tests due to SLAVE_EXEC_MODE_PARALLEL and not only. ------------------------------------------------------------ revno: 3223 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-01 19:08:21 +0200 message: wl#5569 MTS The limit conditions such as WQ len, total WQ:s size related changes. Also a new test file is added. ------------------------------------------------------------ revno: 3222 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-11-30 16:39:40 +0200 message: merging from from wl#5569 repo containing wl#5599 integration ------------------------------------------------------------ revno: 3221 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-11-30 16:02:15 +0200 message: wl#5569 MTS Fixing group_relay_log_name change propagation from C to W; Garbage collection in the Partition-to-Worker hash is added with a parameter of how many records in the hash are tolerated w/o checking of the usage counter. Adding C-W synchronization due to: - overall WQ:s data max - hitting the limit of a WQ length Adding Flow Control infrastructure with - level of the hungry Worker forcing Coordinator to distribute eagerly symmetrically a Worker whose load is more than 100 % - hungry level is considered as fed-up. - nap time for C in case all WQ:s lengths are above the level. - a weight param to the base nap as a function of the number of fed-up W:s. TODO: UNTIL to force sequential exec; To fix ROWS_QUERY_LOG_EVENT corner case; to fix commented out // if (!ev) delete ev; after wl#5599 is merged (ev->update_pos() is done). ------------------------------------------------------------ revno: 3220 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-11-27 17:36:50 +0200 message: wl#5569 Providing relay-log name for wl#5599. Protocol of action on the C and W sides is described in rpl_rli_pdb.h. Erroring out in case of parallel exec and ROWS_QUERY_LOG_EVENT. (todo: the native sequential mode for the event needs some revision, in particular `delete ev' shall happen *always* in rli->cleanup_context not in two places as of current). ------------------------------------------------------------ revno: 3219 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-11-26 23:08:30 +0200 message: wl#5569 MTS Partitioning conflict detection and handling is implemented. A new option to run Query in parallel though incompatibly with Rows- case in that the default db not the actual db:s are used as the partition key. User interface gained the global var and the cmd line opt: slave_run_query_in_parallel (Welcome to the set! :-) ------------------------------------------------------------ revno: 3218 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-andrei timestamp: Fri 2010-11-26 16:15:37 +0000 message: There was a mismatching between the number of fields read and write and by consequence the read was failing for the Slave_worker. ------------------------------------------------------------ revno: 3217 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-11-25 11:03:54 +0200 message: wl#5569 merging with wl#5599 piece of code ------------------------------------------------------------ revno: 3216 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-11-25 10:47:39 +0200 message: wl#5569 Converting the prototype time db2w hash to be concurrent; Necessary inruduction of the least occupied Worker notion. It's currently computed as Worker having the least number of distributed partitions. Adding parallel support for Query_log_event; caution: 1. the session/default not the actual db as the key 2. may not have been tested against all use cases (e.g int vars) Fixing slave stop issues. ------------------------------------------------------------ revno: 3215 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-11-22 20:57:13 +0200 message: wl#5569 extinding futher interfaces to wl#5599 with propagating future_event_relay_log_pos to the Worker exec context. ------------------------------------------------------------ revno: 3214 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-11-20 19:23:42 +0200 message: wl#5569 MTS Worker pool start, stop, kills, error out implementation. ------------------------------------------------------------ revno: 3213 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-11-19 16:51:58 +0200 message: wl#5569 recovery interfaces for wl#5599 implementation. The essence of this patch is to provide GAQ object implimentation and valid life cycle. The checkpoint handler prior to call store methods of wl#5599 is supposed to invoke rli->gaq->move_queue_head(&rli->workers). See a simulation of that near ev->update_pos() of the mail sql thread loop. The checkpoint info is composed as instance of Slave_job_group to reside as rli->gap->lwm. Todo: uncomment +  // delete ev;  // after ev->update_pos() event is garbage once the real checkpoint has been done. Todo: the real implemention needs to take care of filing Slave_job_group::update_current_binlog as initially so at time of executing Rotate/FD methods. +  // experimental checkpoint per each scheduling attempt +  // logics of next_event() + +    rli->gaq->move_queue_head(&rli->workers); ------------------------------------------------------------ revno: 3212 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-11-18 16:50:54 +0200 message: wl#5569 wl#5599 Recovery related. Prototyping the worker RLI instantiation, to be elaborated on. ------------------------------------------------------------ revno: 3211 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-11-18 16:00:52 +0200 message: wl#5569 MTS Extending the wl#5563 prototype gradually. This commit addresses: 1. recovery interface (a new Worker rli plus rli->gaq and pseudo-code for checkpoint to update GAQ and the central RLI recovery table. Wrt rli, C and W execute do_apply_event(c_rli) where c_rli is the central instance. C executes update_pos(c_rli), but W update_pos(w_rli). others: - decreased processing time for rpl_parallel, serial. ------------------------------------------------------------ revno: 3210 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2010-11-14 11:55:32 +0000 message: Post-push fix for WL#5599. ------------------------------------------------------------ revno: 3209 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-11-12 17:58:12 +0000 message: Post-push fix for WL#5599. ------------------------------------------------------------ revno: 3208 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-11-11 11:53:01 +0000 message: WL#5599 The patch changed the handler's functions, i.e. init_info, check_info, flush_info, remove_info and end_info and the related private member functions, in both file and table handlers, to accept an index that identifies the information that will be read or written. This is necessary now because the handlers will be used by the workers to read and write information from file(s) and table and there may be several workers running at the same time and thus an index is used to identify the worker that is accessing information. This change is also necessary for the multi-master replication as information from each master must be uniquely identified. ------------------------------------------------------------ revno: 3207 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-11-10 10:57:13 +0000 message: Refactory to start work on WL#5599. ------------------------------------------------------------ revno: 3206 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-11-09 13:34:18 +0000 message: Removed mysql-test/collections/mysql-next-mr.crash-safe.* in the WL#5569. ------------------------------------------------------------ revno: 3205 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-11-09 13:04:14 +0000 message: merge mysql-next-mr.crash-safe --> mysql-next-mr-wl5569 Conflicts: . sql/CMakeLists.txt . sql/Makefile.am . sql/sql_class.h . sql/rpl_slave.cc ------------------------------------------------------------ revno: 3204 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-11-09 11:39:37 +0000 message: merge mysql-next-mr-wl5563-labs --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3203 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-17 23:33:37 +0300 message: wl#5563 simplifying memory handling for the Coor-Workers transport to avoid sporadic crashes ------------------------------------------------------------ revno: 3202 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-17 21:19:56 +0300 message: wl#5563 leaving out a fine garbage collection. That task is unnessary to solve at prototyping time. Update-pos routine to be implemented is going to eliminated that piece of code ------------------------------------------------------------ revno: 3201 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-17 20:38:35 +0300 message: wl#5563 Extending the tests base to split the former rpl_parallel into two to run in serial exec mode as well. ------------------------------------------------------------ revno: 3200 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-17 11:49:00 +0300 message: wl#5563 improved test; fixed a delete issue that was used to crash; added @@global.slave_local_timestamp to fill in timestamp col slave clock value. Performance growth can be seen through the test. todo: merge with Alfranio work on hashing and dyn alloc of PFS obj:s. ------------------------------------------------------------ revno: 3199 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Wed 2010-09-15 14:51:49 +0300 message: wl#5563 tests for the wl. Number of workers and iterations can be tuned. todo: convert as param:s to pass to the test through mtr ------------------------------------------------------------ revno: 3198 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Mon 2010-09-13 18:22:41 +0300 message: wl#5563 adding an ingeneous no-stress-attempting-yet test that also fired an assert. Refined the Worker instance ref computing because cleanup_context() is executed by the sql-thread the coordinator as well ------------------------------------------------------------ revno: 3197 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Mon 2010-09-13 13:15:38 +0300 message: wl#5563 Rows-event parallelization basically is implemented although tested shallowly. Write access to rli central stuct by workers may not be eliminated fully at this phase. E.g that relates to errors. todo: to prove rli gets out of Worker scope todo: to provide a stress test ------------------------------------------------------------ revno: 3196 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Sat 2010-09-11 17:00:08 +0300 message: wl#5563 adding Rows-event limitted to one Worker support. Deferred deletion did not check emptyness of the list ------------------------------------------------------------ revno: 3195 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-10 20:36:07 +0300 message: wl#5563 correcting comments to indicate less limitations ------------------------------------------------------------ revno: 3194 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-10 20:32:39 +0300 message: WL#5563 Prototype for Slave parallelized by db name More progress to the WL in that the STMT binlog-format works while the conceptual limits are held. That is no query/transaction is allowed to deal with more than one db. Addressed a complication in that update pos method that is run by Coordinator belongs to Log_event hierarchy and therefore the event deletion now by Worker must be careful. Todo: 1. (High prior) fix Row-format complications 2. (Hight prior) Elaborate on the hash function to be a function on db text name 3. (Optional)  Consider moving update_pos to the RLI class to get rid of the delete logics complication. How-to-use: The instuction can be found in comments of the previous commit, see there for more details. In brief though, the db names have to follow a pattern: `test[0-9]'. E.g test0, test1, test2, test3 for the default four Worker threads. Slave side has to set @@global.slave_exec_mode=PARALLEL; before START SLAVE. ------------------------------------------------------------ revno: 3193 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Thu 2010-09-09 21:43:16 +0300 message: WL#5563 Prototype for Slave parallelized by db name This is an intermediate commit that indicates some progress. Namely, the worker pool operates correctly and with signs of scalable performance. How to test: connection master; set @@global.binlog_format=statement; connection slave; set @@global.slave_exec_mode=PARALLEL; set @@global.binlog_format=mixed; show processlist; => IO, SQL threads + 4 workers by default change master to ... connection master; create database test0; create database test1; create database test2; create database test3; # create databases with magic names ""test[0-9]+"", where the number will index # a worker. create database test0; create database test1; create database test2; create database test3; # create tables. they are only of MyISAM type for now use test0; create table tm_1(a int, b int) engine=myisam; use ... # DML on tables: use test[0-3]; insert into tm_1 values (1,0); ... ... connection slave; # monitor CPU (visually this time: top etc) # check correctness e.g select count(*) from test[0-3].tm_1; connection master; select count(*) from test[0-3].tm_1; ****** wl#5569 MTS merging a compined bundle cset to mysql-trunk. "	328b6c0b19fe08557cf410a2023e100a4599e3a4
----------------------------
WL#5758: Improve Thread Scheduling Use atomics where available to enforce concurrency limit. The atomics version of the scheduling code doesn't use an explicit queue that guarantees eventual progress and a total order on the waiters. Instead it uses os_thread_sleep() to force the threads to wait. ie. the newi scheduling is not starvation free and imposes no order on the entering transactions. Introduce new config variable: innodb_adaptive_max_sleep_delay := 0..1000000 in micro-seconds If the value is greater than 0 (which implies that it is enabled)  then the innodb_thread_sleep_delay will be adjusted dynamically based on the system load. The aim is to make it converge on the optimal sleep delay when concurrency thread limit is active. The new configuration variable is an upper limit that will be imposed when determining the optimal value of innodb_thread_sleep_delay. As in the old version which is enabled on platforms that don't support atomic builtins this scheduling of threads will be activated based on the settings of innodb_thread_concurrency. The optimal value for innodb_thread_concurrency is difficult to standardise. Experimental observations suggest that on hardware that has greater than 8 cores the setting it to the number of cores seems to work best. But on hosts that have 8 cores (but with faster CPUs) the optimal value needs to be determined empirically. On the hosts tested the best Sysbench results were obtained with a setting innodb_thread_concurrency=96 for both RO/RW. Aproved by Inaam/Marko rb://651 	87d3cddebaada2645f6c11d7cafcd1925bf0b4d4
----------------------------
WL#5285  Enable BKA and simplify user visible setting for optimizer_join_cache_level Follow-up: Tests classified as experimental has been renamed 	c6cf2241ca816881b8cf9f1926c89eb8c347113d
----------------------------
Addendum to the suite for bug #11766001 : 59026: ALLOW MULTIPLE --PLUGIN-LOAD OPTIONS 1. Use the correct case for the mysql.plugin table reference in tests. 2. Add a note into the mysql-test.run.pl docs comments for PLUGVAR_LOAD_ADD. 	d0d9c835c806f82621a066a1a39d117b42c00bb9
----------------------------
WL#5285  Enable BKA and simplify user visible setting for optimizer_join_cache_level Addendum:  Added and renamed test and result files were lost during merge.  Re-added and re-renamed. 	e296660481254ab41443b300df4478314b6596b0
----------------------------
"Bug #11766001: 59026: ALLOW MULTIPLE --PLUGIN-LOAD OPTIONS Implemented support for a new command line option : --plugin-load-add=<comma-separated-name-equals-value-list> This option takes the same type of arguments that --plugin-load does and complements --plugin-load (that continues to operate as before) by appending its argument to the list specified by --plugin-load. So --plugin-load can be considered a composite option consisting of resetting the plugin load list and then calling --plugin-load-add to process the argument. Note that the order in which you specify --plugin-load and --plugin-load-add is important : ""--plugin-load=x --plugin-load-add=y"" will be equivalent to ""--plugin-load=x,y"" whereas ""--plugin-load-add=y --plugin-load=x"" will be equivalent to ""plugin-load=x"". Incompatible change : the --help --verbose command will no longer print the --plugin-load variable's values (as it doesn't have one). Otherwise both --plugin-load and --plugin-load-add are mentioned in it. Added few test cases to test different combinations. Added an extension to mysql-test-run.pl to add variables for --plugin-load-add similarly to what it does for --plugin-load. Moved the includes on top of the files. "	13fef20fa4723ade4f906e6976e356e9471ae1fc
----------------------------
Bug #11746029: 22615: MYSQL SERVER INCORRECTLY CATOGORIZES THE LOST+FOUND DIRECTORY AS A DATABA Implemented an --ignore-db-dir option that takes a valid file name or an empty string. You can specify multiple options. When a non-empty string is specified it's added as a directory name to the list of directories to ignore when executing SHOW commands and filling in INFORMATION_SCHEMA tables. When an empty string is specified as an argument the list is reset to empty. Note that the above list of ignored directories doesn't affect other SQL commands like e.g. USE or SELECT etc. Added a read-only global @@ignore_db_dirs system variable that will contain the current list in effect. In addition to the list above the server will always ignore the directories starting with a dot (.). This is safe because since mysql-5.1 a name of a database directory can't start with a dot (.) thanks to the fact that we encode database and table names. Added a test case. Fixed the affected test cases. Fixed the memory handling when converting the directories array to a hash fails for some reason. 	8332455930310f16c14f7bee8f6d2908bc10d6ee
----------------------------
WL#5706/Bug#11746378/Bug#25851: Passwords are visible in logs Don't log queries as they come in; parse them first to see what they're about. If they contain passwords, obfuscate them. Then log (before query execution), so that general, binary, and slow query log will not contain clear-text passwords. --log-raw option disables this for general log (un-rewritten queries will be logged, before parsing rather than after). Can be extended to do any other rewriting. 	a513d2b55a464e8f0064f115b3dbadf06b3b2f03
----------------------------
ndb - The last crusade of the trailing share - remove dependency on LOCK_open in ndbcluster_create_binlog_setup, allow it to be used from anywhere. Use share->mutex to serialize the actual binlog setup. Patch for 5.5, plan to backport after test results 	e17bff6d46ecdcec782660ea41d0ac471484b05f
----------------------------
Bug #11769332 PLUGIN TESTS FAIL ON WINDOWS WHEN USING DEBUG SERVER AND PLUGINS (DAILY-TRUNK) Modification to previous patch Build server as mysqld-debug in debug builds, but only if extra flag is used:  cmake .... -DDEBUG_EXTNAME=ON Turn this on for BUILD_CONFIG=mysql_release Also removed disabling of tests for daily 	ded76c8ae8d8a470b0b109bd0a5e5b09a051c594
----------------------------
WL#5285 -  Simplify user visible setting for optimizer_join_cache_level Addendum: Change ordering of optimizer_switch constants Update result files 	c6a24c5c563936fb29c578b5887f2201cc04895b
----------------------------
"Add two tests for ""innodb_large_prefix"" and ""innodb_force_load_corrupted"" in sys_vars test suite. "	8b72b93611554b8b8e4fbd763edb3545adeced98
----------------------------
"Fix bug #11830883, SUPPORT ""CORRUPTED"" BIT FOR INNODB TABLES AND INDEXES. Also addressed issues in bug #11745133, where we could mark a table corrupted instead of crashing the server when found a corrupted buffer/page if the table created with innodb_file_per_table on. "	177d8b0c125b841c0650d27d735e3b87509dc286
----------------------------
"Bug #11759877 52223: TEST ""PLUGIN_DIR_BASIC"" DOES NOT SUPPORT RPM BUILD (TEST) DIRECTORY STRUC Undo previous fix, it is not reliable Drop setting $MYSQL_LIBDIR, mtr can't be sure anyway Test is set to override plugin-dir to some known existing dir "	41859de6211b56451c38ab52582975b9b0fe5887
----------------------------
"Merge: 80afd97 72daf26 Null-merge, conflict on ""configure.in"" which is gone from 5.5. No change. "	29222665222ecc4ab66bd6fd9f7103ab2f8ed01d
----------------------------
Merge: 337d793 f24f0b9 Committing Change On behalf Of Sneha Modi Bug#12664445 - SYS_VARS.ALL_VARS: WRONG RESULTS RECORDED IN RESULT FILE - TEST CASES MISSING! The bug had missing test cases for three system variables. Test cases have been added for these variables: 'INNODB_FILE_FORMAT_MAX' 'INNODB_ROLLBACK_SEGMENTS' 'INNODB_STATS_METHOD' The 'sys_vars.all_vars' result file now looks like this: select variable_name as `There should be *no* variables listed below:` from t2 left join t1 on variable_name=test_name where test_name is null; There should be *no* variables listed below: INNODB_LARGE_PREFIX INNODB_LARGE_PREFIX The variable 'INNODB_LARGE_PREFIX' is a newly added variable for MySQL 5.6.3 and the test will be added later by the developer. 	24b4f40bf67f423c9ec9da4d74597385a2d97787
----------------------------
WL5580: Changes to LRU flushing (InnoDB) Approved by: Marko, Sunny rb://589 This work is performance related. The idea is to off load flushing activity that happens in the LRU list from user threads to the background thread i.e.: the page_cleaner. Also included in the scope is simpler and may be better heuristic for LRU flushing. Summary of Changes: New Config Options: =================== innodb_lru_scan_depth (default 1024): dynamic, min:100, max:~0 innodb_flush_neighbors (default TRUE): dynamic innodb_doublewrite_batch_size (default 120) static, min 1, max 127 (undocumented for internal testing only. enabled when UNIV_PERF_DEBUG is defined) New LRU flushing algorithm: =========================== * LRU flushing happens only in page_cleaner thread * LRU flushing includes cleaning the tail of LRU list AND putting blocks to the free list * When a user threads can't find a block in free list or a clean block in the tail of LRU then it triggers a new type of flush called BUF_FLUSH_SINGLE_PAGE in which it tries to flush a single page from LRU list instead of triggering a batch. Page eviction algorithm: ======================== * iteration 0: * get a block from free list, success:done * if there is an LRU flush batch in progress: * wait for batch to end: retry free list * if buf_pool->try_LRU_scan is set * scan LRU up to srv_LRU_scan_depth to find a clean block * the above will put the block on free list * success:retry the free list * flush one dirty page from tail of LRU to disk * the above will put the block on free list * success: retry the free list * iteration 1: * same as iteration 0 except: * scan whole LRU list * scan LRU list even if buf_pool->try_LRU_scan is not set * iteration > 1: * same as iteration 1 but sleep 100ms Note that potential convoy problem where all user threads try to find a clean page in the tail of the LRU list when there is none is resolved by introducing buf_pool->try_LRU_scan flag which is set to TRUE when an LRU batch is completed and is set to FALSE when an LRU scan fails to find a clean page. Doublewrite buffer changes: =========================== The doublewrite buffer is split into two parts. First part is used for batch flushing (e.g.: LRU flushing and flush_list flushing) while the second part is used for single page flushes. The logic for the batch flushing remains same. For the single page flushing we use a flag to indicate if a slot is in use and we force a write to the disk after writing to the doublewrite buffer right away. There is an undocumented hidden config parameter innodb_doublewrite_batch_size which is visible only with UNIV_PERF_DEBUG or UNIV_DEBUG. The value determines how much of doublewrite is to be used for batch flushing. The default is 120 and allowable values are 1 - 127. It is a static variable. LRU batch size: =============== The size of an LRU batch depends on how deep we scan the LRU list i.e.: innodb_LRU_scan_depth. But since user threads wait for an LRU batch to finish and since the size of doublewrite buffer is 128 it makes sense to divide one big LRU batch into multiple chunks. PAGE_CLEANER_LRU_BATCH_CHUNK_SIZE == 100 does that i.e.: after flushing 100 pages the page cleaner signals waiting user threads to proceed to grab a free page. 	b2b5ef13807e2a9db57e46be41fbbf809a7c4696
----------------------------
Implement part of WL#5533 Deprecate features in Fuchsia Print a deprecation warning if innodb_use_sys_malloc is set to FALSE or if innodb_additional_mem_pool_size is used. 	0a0dd7037894f8cbec0f9ec4a341b401dbc0cb25
----------------------------
BUG#12827509 - BNL/BKA: SELECT LEFT/RIGHT JOIN QUERY GIVES DIFFERENT OUTPUT ON BNL=OFF+BKA=ON This is a test case for a duplicate of 12722133. This test case is added because it fails for a different combination of optimizer_switch settings for block_nested_loop and batch_key_access. 	d8b93ad29b8349372a53a5a1838a4fc99d607de4
----------------------------
Implement part of WL#5533 Deprecate features in Fuchsia Print a deprecation warning if innodb_stats_sample_pages is used. 	6613c68cda0bb2f8e52c586d8b622426f4154bba
----------------------------
Adding FTS tests for innodb_ft_enable_stopword, innodb_ft_server_stopword_table,innodb_ft_user_stopword_table variables 	bd14d1bb850d87b37d6f72b8a8b00fd0a9d398ba
----------------------------
Minor cleanups in FTS stopword handling. Make sure the user specified stopword table is registerred in the CONFIG table, and being re-used when server reboot. 	cce5a3c5ff8029bf8774b2102a504fd1d6af75fe
----------------------------
"Change InnoDB FTS related Information schema table name from ""innodb_fts_*"" to ""innodb_ft_*"", so that they are consistent in naming with that of system configure variables. "	d5d2702fc8b74f859006972a01aca552a09e81b0
----------------------------
Yet another attempt to fix Bug 12783900 - INNODB_BUFFER_POOL_FILENAME IS SOMETIMES NOT POPULATED BY THE EXPECTED TIME The value of INNODB_BUFFER_POOL_DUMP_STATUS could have been left to 'buffer pool dump completed' from previous runs of tests on the same mysqld instance. Add an .opt file to ask MTR for mysqld restart before the test is run (thanks, davi!) 	6b3482a982bf89a67b0215d7b5d46f575624f061
----------------------------
Do not allow innodb_buffer_pool_filename to be set to NULL. Without this validation, if one does SET GLOBAL innodb_buffer_pool_filename=NULL; then mysqld would crash somewhere inside mysql code, trying to do strlen() on a NULL pointer. 	9c7f337e3d009e6d87fe2ca277522bb623a27768
----------------------------
Implement part of WL#5533 Deprecate features in Fuchsia Print a deprecation warning if innodb_locks_unsafe_for_binlog is used. 	537d5f3d44db1ada58267d502105cb517c7a530f
----------------------------
"Add a missing ""END_OF_ST_FIELD_INFO"" to INFORMATION_SCHEMA FTS_CONFIG table column define. "	498728f3e4685ca4035d4b132e04b497d24ed6f3
----------------------------
"Address two minor issues: 1) change ""innodb_ft_enable_sort_o_direct"" to ""innodb_disable_sort_file_cache"" 2) Error out the Doc ID if user tries to re-use a Doc ID when they manage their own Doc ID by using the FTS_DOC_ID column "	3200f547f8b837655c02663b42b4bd7403ec4fd9
----------------------------
Add a server configure variable so that user can turn off OS file system cache by enabling O_DIRECT. This is to avoid additional memory consumed by OS file system cache during sort merge phase. 	f2bc3d0591b9f876d5812ae7831c5f8751e883b6
----------------------------
Fix Bug#12783900 INNODB_BUFFER_POOL_FILENAME IS SOMETIMES NOT POPULATED BY THE EXPECTED TIME The bug in the test was that the dump status from the previous dump would remain and would satisfy the condition that is expected to wait for the second dump to complete. Thus the flow continued without the second dump completing and the second --file_exists failed. 	a7ff3f34dbe157a030cd5cf9cbc6a9de9b8fba76
----------------------------
Bug #12774208: DEFAULT_TEMP_STORAGE_ENGINE SHOULD BE NAMED DEFAULT_TMP_STORAGE_ENGINE Remaned the option to be more consistent with other existing options. 	0b6f256428a8c2de46ee3570d68e71a3708fd5a2
----------------------------
Add innodb_rollback_segments to the all_vars.result file. This variable doesn't need a dedicated test of its own because it is an alias for innodb_undo_logs. 	a49cb51140e02e4312851483a0bfe0a9c2e63b95
----------------------------
WL#5535 renamed innodb_rollback_segments to innodb_undo_logs. Create an alias for backward compatibility. Approved by Jimmy over IM. 	f84be601f38d8bed7d8a9f48b517513e7a8d3254
----------------------------
Bug #12767683 : SERVER START FAILS IN THE PKGVER TEST ON WINDOWS Added an --default-temp-storage-engine=mysiam to complement the --default-storage-engine option already present. Removed a duplicate --default-storage-engine. 	92c10baa49828aafb35437bf63cf99cfa27559d2
----------------------------
Bug #11747191: 31224: SUPPORT FOR SSL CERTIFICATE REVOCATION LISTS Added support for --ssl-crl and --ssl-crlpath to all client and server binaries that work with OpenSSL.   You can specify none, one or both of the above. --ssl-crl takes a file path for a PEM encoded Certificate revocation lists. The relevant file is parsed and loaded into the X509 store of the SSL context. --ssl-crlpath takes a directory path. This directory must contain PEM encoded CRL (or other) files that are named by their hash value, .e.g. <hash_value>.r[0-9] See OpenSSL's X509_STORE_load_locations() for more details of the above. Note that if none of the --ssl-crl* options is specified no CRL checks will be performed, even if the -capath contains certificate revocation lists. Added Master_SSL_crl and Master_SSL_CRLPATH to CNANGE MASTER command. Added new columns Ssl_crl and Ssl_crlpath to mysql.slave_master_info system table. Reengineered mysql_ssl_set() in the C API into a number of mysql_options calls as follows (while keeping mysql_ssl_set()): mysql_ssl_set(mysql, key, cert, ca, capath, cipher) { mysql_options(mysql, MYSQL_OPT_SSL_KEY,    key) mysql_options(mysql, MYSQL_OPT_SSL_CERT,   cert) mysql_options(mysql, MYSQL_OPT_SSL_CA,     ca) mysql_options(mysql, MYSQL_OPT_SSL_CAPATH, capath) mysql_options(mysql, MYSQL_OPT_SSL_CIPHER, cipher) } Added two new mysql_options that correspond to the command line calls : MYSQL_OPT_SSL_CRL  and MYSQL_OPT_SSL_CRLPATH. Made sure these play nicely with the ABI by using the extension. Added tests and a set of cryptographic keys and crls to test the new options. Extended the mtr ssl check to find the new tests. Made sure that on yaSSL these options are a no-op for the server. 	c038bcb7cd0063657a7ddf35b1fb4e12eed9095a
----------------------------
Fix a bug in FTS optimize when FTS_OPTIMIZE_MAX_WORDS is reached, it would jump to the next index partition even the current partition has not been exhausted. Also change FTS_OPTIMIZE_MAX_WORDS to a configurable parameter 	d0fbb2a97e73a4fd4d1b1fd11aeba268d32eafb0
----------------------------
Bug 12356373 - PERFORMANCE REGRESSION FROM 5.1 TO 5.5 : GROUP BY: The title of the bug is a little confusing. The actual fix is to reintroduce random readahead inside InnoDB with a dynamic, global switch innodb_random_read_ahead [default = off]. Approved by: Sunny Bains rb://696 	41258f8e6c46d06e817d55921c66309ae9701799
----------------------------
BUG#12707948 : mysql_plugin cannot run on Windows Patch fixes an issue with reading basedir on Windows. It fixes how the code interprets opt_basedir on Windows by adding the correct path separators and quotes for paths with spaces. BUG#12664302 : mysql_plugin cannot recognize the plugin config file Patch fixes an issue with reading a plugin config file. It adds more information to the error messages to ensure the user is using the options correctly. Also deals with paths with spacs on Windows. 	2efc47aad3959cb0aad014158ad3ca87e75ac22a
----------------------------
WL#5710 : Enable and disable plugins (mysql_plugin) This patch changes the plugin configuration file format to make it easier to add new plugins and remove complexity. It also adds more information when plugin configuration file reads fail. 	d037148151936cc4a647be96ac4f86ec591c2982
----------------------------
WL#5710 : mysql_plugin - enable or disable plugins This patch adds a new client utility that enables or disables plugin features. The utility disables or enables a plugin using values (name, soname, and symbols) provided via a configuration file by the same name. For example, to ENABLE the daemon_example plugin, the utility will read the daemon_example.ini configuration file and use the values contained to enable or disable the plugin. 	6119cc2bba0604de317d86fb9919dc2a86404843
----------------------------
Fix broken sys_vars.all_vars test. In WL#5535 innodb_rollback_segments was renamed innodb_undo_segments, but the result file for sys_vars.all_vars was not updated. This patch fixes the problem. 	aa97d0af6fb6cba874fb251f177e0cf1d5b09129
----------------------------
"WL#5535 - Separate tablespace(s) for the InnoDB undo log Allow users to move the additional UNDO logs to separate tablespaces. For this we introduce 3 new parameters and rename an existing parameter. 1. innodb_undo_directory (string) Path to rollback tablespace directory, default is ""."". Value can be any file path. If it is not absolue then create the rollback tablespaces relative to the server CWD. 2. innodb_undo_tablespaces (ulint) We allow 1-1 mapping and 1-N mapping between rollback segments and tablespaces. ie. we can create multiple segments in one or more tablespaces. 3. innodb_undo_logs (ulint) Default is TRX_SYS_NRSEGS, if value is greater than current rollback segments then create the additional rollback log segments. If innodb_undo_tablespaces > 0 then they will be created outside ibdata1 otherwise in ibdata1. Rename innodb_rollback_segments to innodb_undo_segments so that names are consistent. Refuse to startup if innodb_undo_tablespaces doesn't match what InnoDB can access. Change the os0file.c create mode parameter from #defines to an enum. Reduce the scope of srv_file_per_table to table creation code in dict0crea.c. Rather than access the (global) variable in os0file.c we note the setting and pass the OS_FILE_ON_ERROR_NO_EXIT flag down the call stack. Users cannot add new UNDO tablespaces after database creation. Creating the UNDO tablespaces is a one time affair. The segments however can be added to existing UNDO tablespaces or to the system tablespace if no UNDO tablespaces exist. NOTE: Databases created with the above options enabled cannot be opened by previous versions of InnoDB. The file format is not an issue, the problem is that there are several assumptions in the code that will not hold. To use this feature the config vaiable innodb_undo_tablespaces must be set to a value > 0 when a new database is created. Users cannot add new UNDO tablespaces after database creation. Creating the UNDO tablespaces is a one time affair. The segments however can be added to existing UNDO tablespaces or to the system tablespace if no UNDO tablespaces exist. HotBackup ramifications: The new variables need to be defined and set correctly in HB code. By default this feature is disabled. rb://561 Approved by Marko "	e96f23d20dcf5bcc0b6826e33898e683f4867e1a
----------------------------
BUG#12604951 - RBR BREAKS IF SQL THREAD IS RESTARTED WHILE EXECUTING AN EVENT This a regression caused by BUG#11763126 what introduced new flags and procedures to track down changes that are unsafe to be rolled back. In particular, after BUG#11763126 the trans_commit_stmt() propagates unsafe rollback flags from statement to transaction level. However, we cannot use this at the slave when row format is configured as several events can be processed before trans_commit_stmt() is called. This happens because trans_commit_stmt() is called only when the latest event generated by a statement is processed. Unfortunately, there are upper level functions that execute per event and check transaction's status. So if the unsafe rollback flags are not propagated at the end of every event, this can lead to errors. To fix the problem, we propagate unsafe rollback flags from statement to transaction level after processing every event if row format is in use. 	8fb740aa94959422f2380a1276014a458a77fba9
----------------------------
Minor type change for newly added configure variable to address compilation error on windows 	2b4546bf308e7979aaecf4b9fe81dd2158b6033f
----------------------------
"Add a system varaible ""innodb_optimize_fulltext_only"", so that we will overload ""optimize table"" to optimize the fulltext index on a table. And we shall rely mostly on this command to optimize FTS rather than using the background thread. "	40f4817222e753df5a3eb8c36ab76d6718519e98
----------------------------
Remove unnecessary test config 	aca13f650a9093f18ecc16b1f269dc42296cb9e1
----------------------------
"Fix Bug #47337: innochecksum not built for --with-plugin-innodb_plugin --without-plugin-innobase In 5.1, we can have the traditional ""innobase"" code (built-in) or the new version ""innodb"" (plugin). The help tool ""innochecksum"" is useful for both, but its generation was coupled to ""innobase"" only. Fix this by treating both ""innobase"" and ""innodb"" equivalent in the configure phase, this affects both ""innochecksum"" and the InnoDB documentation. This patch was proposed by Mark Callaghan. "	98a7cb95e08d789b02a014d67996cd7d30dff90d
----------------------------
WL#5285 -  Simplify user visible setting for optimizer_join_cache_level Follow-up:  Update documentation for setup_join_buffering() 	07100c29db0d49bbc803f3a23949c77d890b511b
----------------------------
WL5353 Primary Cluster Conflict Detection : NDB$EPOCH() row based function Ndb handler is modified to set the NDB$AUTHOR pseudo column to 1 when writing, or updating a row from the slave. The NDB$AUTHOR pseudo column defaults to zero on every update, so with this change, it acts as an indicator of whether a row was last updated by the Slave (NDB$AUTHOR == 1), or not (NDB$AUTHOR == 0). To support > 2 clusters replicating, we should support > 1 bit NDB$AUTHOR, with some scheme for mapping from ServerId to Author bits. Reflected GCI/Max_rep_epoch The Ndb_slave_max_replicated_epoch status variable tracks the highest local-cluster epoch which was applied *before* the replicated remote-cluster updates currently being applied by the slave. This acts as a kind of 'confirmation' of application of each epoch on the remote cluster. Additionally, it indicates the closure of the window of risk of replicated updates arriving from the remote cluster which conflict with updates committed in a given epoch.  Once a particular epoch has been applied remotely, later updates received from the remote slave are by definition applied at the remote slave *after* that epoch was applied, and therefore are *not* in conflict. NDB$EPOCH() This information is used by NDB$EPOCH().  When applying a replicated remote update, the existing (if any) row's commit-epoch is checked to determine whether it is less than or equal to the current Ndb_slave_max_rep_epoch value.  If it is less that or equal to the current value, then the received update is not in conflict.  If it is greater than the current value, then it is in conflict. When replicated remote updates are committed, the row's commit epoch naturally changes to the current system epoch.  This could cause further updates from the remote cluster to appear to be in-conflict, when in reality they are not.  To avoid this case, rows written by the slave are marked (via their NDB$AUTHOR column).  The value of the NDB$AUTHOR column is also checked when looking for conflicts.  If the NDB$AUTHOR column indicates that the row was last written by the slave, then *by definition*, it is not in conflict with a locally sourced update. Therefore, the pushed program for conflict detection has the following pseudo code : if (NDB$AUTHOR == 0) // Last update was local { if (NDB$GCI64 > Ndb_slave_max_rep_epoch) { return row_in_conflict; } } return row_not_in_conflict; Epoch resolution A Cluster epoch is a 64 bit number comprised of 2 32-bit components, GCI_hi and GCI_lo.  GCI_hi starts at 1 after an initial cluster start, and increments periodically, according to the configured Global Checkpoint period, normally every 2s. GCI_lo also increments periodically, according to the configured epoch timeout period, normally every 100 millis. GCI_lo is reset when GCI_hi increments. For the default configuration, this would suggest that normally there could be up to 2000/100 = 20 GCI_lo values per GCI_hi value. Note that GCI_hi is incremented by a Global-checkpoint-save round completing, where Redo log files for a particular global checkpoint are successfully flushed to disk.  Where disk IO is in short supply, this can take some time, and the period between increments can be extended.  In this case, there can be more GCI_lo increments per GCI_hi increment than the division of the configured periods would suggest. The ROW_GCI64 pseudo column is implemented using the existing 32-bit ROW_GCI to retrieve the GCI_hi component, and using a variable bit-width column to store the n lsbs of GCI_lo.  As described above, storing the full 64 bits for each row would be wasteful.  The number of bits to use to store the GCI_lo component can be controlled by users as a conflict function parameter.  Where it is not supplied, it defaults to 6, giving 26 values = 64. If GCP Save is too slow, it could be that there are more than 2^n GCI_lo values per GCI_hi.  GCI_lo values above 2^n -1 cannot be recorded in the database.  This is problematic as if we just saturate at 2^n -1 then we cannot tell the difference between rows updated at 2^n -1 and 2^n + x.  When the highest replicated epoch reached 2^n - 1, we will assume that everything committed in the current GCI_hi value has been replicated, and may miss some conflicts. To avoid this scenario, we treat the max value of GCI_lo (2^n -1) as if it were 232 -1, e.g. 0xffffffff.  So for a 3-bit GCI_lo, the values can be : 0 1 2 3 4 5 6 0xffffffff Note that the value 7 is not available - it is used to convey 'saturation'. Where a row is updated with GCI_lo at 7 or above, when GCI_64 is read back, the bottom word will be 0xffffffff.  This indicates a 'later' epoch than the actual epoch, but has the safety property that we need.  When ndb_apply_status reflection causes the Max Replicated Epoch to reach GCI_lo of 7 (ndb_apply_status is not affected by this bit limitation), we will not consider these rows to be 'replicated'.  It is only when we see that the next GCI_hi value has been replicated, that these rows are considered to be replicated. In this way we avoid the risk of missing a conflict, but risk false conflicts. Another risk here is that if the system quiesces after this saturation, then we may not get the replication traffic necessary to determine that the next GCI_hi value has been replicated, and so the window of conflict stays open until some further replication traffic occurs. For these reasons, the number of bits used should not be pared too low, as it will result in more conflicts. Asymmetry/Non-determinism Existing conflict detection algorithms assume that conflicts are symmetric.  For example, with NDB$MAX() if Cluster 1 updates a row with timestamp 6 and Cluster 2 updates it with timestamp 7, then, when applying the replicated updates : At Cluster 1 Received timestamp (7) > Existing timestamp (6), APPLY At Cluster 2 Received timestamp (6) < Existing timestamp (7), DISCARD So  Cluster 2 wins. NDB$EPOCH does not have the same guaranteed symmetry.  Two Clusters replicating circularly may update the same row(s) 'semi-simultaneously', one may detect the updates as in-conflict, while the other may not.  One reason for this is imprecision in the conflict detection, due to the limited ordering in the Cluster Binlog, as described below.  The effect of this is that to get a deterministic result, we need to have only one cluster determining when conflicts have occurred, and taking action.  As only one Cluster is detecting conflicts, other clusters are accepting changes in the order they arrive, and may contain divergent data.  The conflict-detecting Cluster (The Primary Cluster) must therefore take steps to realign other Clusters in the case of conflicts. Realigning the Secondary Cluster Realignment is achieved by logging events in the Primary Cluster Binlog which will force the Secondary into alignment when applied by the Secondary's Slave.  The NdbApi refreshTuple() mechanism is used to generate these events in the Binlog.  refreshTuple() has the following semantics : - If row exists Lock exclusively Produce Insert NdbApi event with all column contents as after image - If row does not exist Lock exclusively (by pretending it does exist!) Produce Delete NdbApi event with primary key only This results in WRITE_ROW and DELETE_ROW events for conflicting rows appearing in the Binlog.  These events are Binlogged in the Primary epoch transaction where the results of applying the Secondary epoch transaction (if any) are Binlogged. As the realignment is a 'force' operation, it is important that the WRITE_ROW and DELETE_ROW events are applied at the Secondary as 'idempotent' operations. The WRITE_ROW should act as an Insert if the row does not exist, and as an update otherwise.  The Delete row should ignore the case where the row does not exist. This behaviour is the default for replication, except where a conflict algorithm is defined for a table, so it is important that the Secondary have no conflict algorithm defined for tables which can be realigned by this mechanism.  (This could be circumvented if necessary). Within the Primary Cluster Slave, the algorithm is as follows : BEGIN while (rows_remain_in_secondary_epoch_transaction) { do { define conflict op with interpreted program } while (space_left_in_batch) execute(no_commit) for_each_op_result { if conflict_detected define refresh_row operation } execute(no_commit) check_refresh_op_errors } COMMIT Conflict handling occurs at the end of each Slave batch - detected conflicts result in refresh row operations being executed, before continuing with the next batch of operations.  Commit occurs once all conflict handling has completed. Handling multiple conflicts It is important that once a conflict is detected between a Primary Cluster update and a Secondary Cluster update, any further Secondary Cluster updates to the same row are also regarded as in-conflict, whether they occur within the same Secondary Cluster epoch transaction as the initial conflict, or in some later transaction. Within the application of a Secondary Cluster epoch transaction in the Primary Cluster Slave, there can be multiple batches of execution, each with its own post-execute conflict handling stage. Where a Secondary epoch transaction has multiple conflicting updates to a row, they can be applied in the same or separate batches. e.g. BEGIN update row 1 set a='First'; update row 1 set b='Second'; #execute(NoCommit) + handle conflicts update row 2 set a='Third'; #execute(NoCommit) + handle conflicts COMMIT In this case, the first and second conflicting operations will detect the conflict based on the committed epoch of the row, and the author column.  They will each issue a refreshTuple operation at the end of the batch. The first refreshTuple operation will result in Binlog event generation, and the row's epoch being updated to the current epoch at commit time. The second refreshTuple operation will fail, as it is not allowed for a refreshTuple to be followed by any other operation on a row in a transaction. This 'operation after refresh' error is used to indicate a conflict - the row is already being refreshed, so no need to take any further steps. When the third operation is executed, it will also hit the 'operation after refresh' scenario, although it will be an update operation rather than a refresh operation. Using the 'no operation after refresh' mechanism in this way avoids the need for the slave to 'remember' which rows in the current transaction have suffered conflicts. Delete conflict issues Delete conflicts are problematic as by definition, a row delete removes the information necessary to detect further conflicts (epoch, author etc). Normally, a DELETE from the Secondary which finds the row missing would be considered a conflict, and result in a refresh.  However, this is not effective, as the fact that the row has been refreshed, and should therefore record conflicts for any further Secondary modifications until the refresh has replicated, cannot be recorded in the database. Additionally, if a refresh is issued for a deleted row, then there are different behaviours within the transaction depending on batching.  If we receive a DELETE followed by an INSERT from the Secondary, and the row does not exist on the Primary, then the DELETE indicates a conflict, but the behaviour varies depending on whether the INSERT is executed in the same batch as the DELETE.  If it's in the same batch then it will succeed. If it's in a later batch then it will hit the no-operation-after-refresh check.  If it's in a following transaction, then it will succeed, as the delete conflict was not recorded. To avoid this strange inconsistency, DELETE-DELETE conflicts do not result in a refreshTuple operation being issued, and we state that we cannot currently avoid divergence where DELETE-DELETE conflicts are possible. Between epoch transactions Where the same conflicting row is updated by the Secondary Slave in separate Secondary Slave epoch transactions, the normal epoch/author conflict detection mechanism is used to detect the conflict.  The commit of the refreshTuple operation from the first transaction updates the row's epoch to the current system epoch, so that any further updates from the Secondary, occurring before the refresh Tuple has been replicated, are detected as in-conflict. In this way, detecting a conflict, and refreshing the row, extends the window of potential conflicts, until the refresh operation has also been 'reflected' from the Secondary. Background Conflict Detection Imprecision The Ndb Binlog is recorded as a result of events received over the NdbApi event Api.  The event Api supports limited ordering within an epoch, only guaranteeing that events for multiple transactions affecting the same row will be received in order. Events for different rows can be received in different orders on different Api nodes. A consequence of this is that when a Slave MySQLD applies an epoch transaction, the generated events for its ndb_apply_status update, and other row updates may arrive at any order (within the epoch) of Binlogging MySQLDs. The ndb_apply_status event is used to flag that an epoch has been applied by including it in the Slave Cluster's Binlog (as part of an epoch) which is 'reflected' back to the 'Master'.  However, due to the vague Binlog ordering, we can only know that our epoch can be considered 'applied' once we have fully applied the Slave's 'reflected' epoch transaction, as some row update from our epoch may be the last event recorded in the Slave's epoch transaction. This problem is handled by the mechanism for updating Ndb_slave_max_rep_epoch in the Slave, where it is only updated to the highest seen value after committing a slave transaction (containing a slave epoch).  This ensures that when Ndb_slave_max_rep_epoch advances, all subsequently applied events occurred after the epoch in question was applied. The main downside of this imprecision is that it can cause false conflicts to be detected.  Where a local epoch was applied at the slave before a slave-local update to the same row, if both are binlogged in the same slave epoch then the slave-local update will be detected as in-conflict, even though it occurred after the applied update. Example : Primary              Primary Binlog          Secondary                  Secondary Binlog 'Epoch 44 start' Set T1 row 1 to A 'Epoch 44 end' BEGIN WR apply_status (Primary,44) WR T1 (1, A) COMMIT 'Epoch 222 start' Set T1 row 1 to B BEGIN # Slave Set apply_status row to 44 Write (1,A) into T1 COMMIT Set T1 row 1 to C 'Epoch 222 end' BEGIN WR apply_status (Secondary, 222) WR T1 (1,B) WR T1 (1,A) WR apply_status (Primary, 44) WR T1 (1,C) COMMIT In this example, looking at the order of events on the Secondary, we can say that in theory, the write of B to T1 row 1 occurred before the application of the replicated epoch 44, and the write of C to T1 row 1 occurred afterwards. However, the Binlog contents only guarantee order between updates to the same row, so the relative order of the T1 and apply_status updates is not guaranteed. In this case, the apply_status update is logged *after* the corresponding T1 update. Due to this uncertainty, we can only be *sure* that Primary epoch 44 has been fully applied, at the end of the Secondary epoch (222).  This 'rounding up' or imprecision, causes us to consider the second write by the Secondary to T1 row 1 as also being in conflict, as we cannot tell whether it occurred before or after the application of the primary epoch. Note that other orders are possible within the Secondary Binlog.  The limitations are : 1) The locally generated apply status write row event will be first. 2) Updates to the same row (Table, PK pair) will be in-order. Possible Binlog order combinations : ('In order') (As above) WR AS S 222  WR AS S 222  WR AS S 222  WR AS S 222 WR AS P 44   WR T1 1 B    WR T1 1 B    WR T1 1 B WR T1 1 B    WR AS P 44   WR T1 1 A    WR T1 1 A WR T1 1 A    WR T1 1 A    WR AS P 44   WR T1 1 C WR T1 1 C    WR T1 1 C    WR T1 1 C    WR AS P 44 As the number of writes, rows and epochs involved goes up, the possible combinations expand. When applying the above Binlog transaction in the Primary, the Primary Slave will note the WR AS P 44 row as a new 'Max replicated epoch' for the Primary as it applies it. However, as it cannot be sure of the Binlog ordering, it is only safe to use this as the Max replicated epoch once the received Binlog transaction has been committed. The NDB$EPOCH function does not support tables with Blob columns. Two reasons currently : 1) Not clear how well adding an interpreted program to a Blob update/delete operation works in practice (This affects the other conflict algorithms as well) 2) No implementation of refreshTuple() for Blobs yet Normal refreshTuple will refresh the main table row only, not the part table(s) rows. 	e93473e7824122fbc039f72189bf65227390d387
----------------------------
Fix for bug#11766256, and particularly its relatives/duplicates bug#11751026 and bug#11765274. Fixes the problem that complex queries containing a lot of EQ_REF'ed joined tables takes 'forever' to produce a query plan. The fix depends on the fact that when a table is joined by an unique key there is a 1::1 relation between the rows being joined. Assuming we have multiple such 1::1 (star-)joined relations in a sequence, without other join types inbetween. Then all of these 'eq_ref-joins' will be calculated to return the excact same #rows and having identical 'cost' (or 'read_time'). This leads to that we can append such a contigous sequence of eq_ref-joins to a partial plan in any order without affecting the total cost of the query plan. Exploring the different permutations of these eq_refs in the 'greedy' optimizations will simply be a waste of precious CPU cycles. This chain of eq_refs can further be handled as a single entity wrt. the full 'greedy' exploration of the possible join plans. This will reduce the 'N' in the O(N!) complexity of the full greedy search. The method ::eq_ref_extension_by_limited_search() has been implemented doing as described above. Once an EQ_REF joined table is encountered, it is invoked to append any remaining EQ_REFs to the join plan. This chain of EQ_REFs will then act like a single entity in the further exploration of possible join plans. It should be noted that ::best_extension_by_limited_search() will still explore the other plans starting with non-EQ_REF operations as possibly better alternatives to the EQ_REF-extended query plan. Usage of ::eq_ref_extension_by_limited_search() is controlled by 'optimizer_prune_level=1'. This fix also introduce the method ::plan_is_complete() which contains common functionality between ::best_extension_by_limited_search() and ::eq_ref_extension_by_limited_search() greedy_optimizer.test has been extensively extended with new testcases containing lots of EQ_REF's. No existing test/query plans are expected to change as result of this fix. It should only produce the 'best' plan (a lot!) faster. - Like the testcase for bug#58225 which now completes the QEP in ~0.05s in my DEBUG compiled sandbox (With 'optimizer_search_depth= 62'). This previously took  63min+42.437s :-o This extention to the greedy optimizer has been implemented by Ole John Aske. 	a0372c4112c5fa3567ca4368b060693ba92d1722
----------------------------
"add suppression for running with ""--mysqld=--binlog-format=mixed"" as pb-swei does "	ac181debe8cbfdded446879eab894a9843016aa4
----------------------------
WL#5285 -  Simplify user visible setting for optimizer_join_cache_level Part 7:  Remove optimizer_join_cache_level variable Removed definition of variable from code. Removed use of variable in tests. Removed tests/include files related to optimizer_join_cache_level. Updated comments in code that referred to this variable. (Did not update comments in tests, most of them refer to titles of bug reports.) 	291b6bb880c9d1e95592dfb954ba7553e08c84c0
----------------------------
WL#5285 -  Simplify user visible setting for optimizer_join_cache_level Part 6:  Replace use of optimizer_join_cache_level with optimizer_switch='batch_key_access' Code now tests for new optimizer_switch batch_key_access instead of optimizer_join_cache_level.  Added debug flag test_bka_unique to be able to still test this algorithm. Added new tests with suffix _bka_nobl.test to test with BNL off and BKA on. 	59613ce1188e9de54a0bf3d34b4956b399f7daeb
----------------------------
ndb - global plugin variables are now called ndb_ instead of ndbcluster_ in 6.3 	d8022df260647c7a9d00ba34f11d2b057bcb3f54
----------------------------
WL#5285 -  Simplify user visible setting for optimizer_join_cache_level Part 5:  Replace use of optimizer_join_cache_level with optimizer_switch='block_nested_loop' In all cases where optimizer_join_cache_level was checked for whether to use Block Nested Loop, we now check the new optimizer_switch block_nested_loop instead. JOIN_TAB objects are no longer used to store which join buffering algorithms are enabled.  This is now computed on-the-fly by checking optimizer_switch (and temporarily optimizer_join_cache_level). Note that temporarily, block_nested_loop will also need to be on for BKA to be selected. 	cb09ac568033a2e22920a397c1f3f620e99534a4
----------------------------
A few miscellaneous fixes: 1) Add 3 error messages for InnoDB specific FT error return 2) Convert some defines to innodb configurable variables 3) Remove unused function fts_get_next_token() 	5dc38680ff75cfedff7e79b1038cfa95c0c1eb72
----------------------------
60097: NDB_CONFIG TO DUMP CONFIG VERSION FOR DATA NODES 	5905df55f711aeb8034f414300ad4783d4e2f7e9
----------------------------
Bug #11757091 49093: 5.1 CONFIGURE SCRIPT SHOULD WARN ABOUT MYSQL CLUSTER NOT BEING MAINTAINED Added a conditional echo at end of configure.in 	be8f64ff294644759202ca24e8d44e8d1a257410
----------------------------
Refactoring intended to move more of the 'PUSHED_JOIN' specific code from ha_ndbcluster.* into ha_ndbcluster_push.* Two new methods has been created as member of ndb_pushed_join: - ::match_definition() check that the NdbQueryDef encapsulated as part of this ndb_pushed_join object match the execution request as specified by the arguments. (Access type, index usage, ordered) - ::make_query_instance() instantiate another executable NdbQuery from the definition contained in this ndb_psuhed_join object. These new methods now contain a lot of the code previously found in ha_ndbcluster::check_if_pushable() and ::create_pushed_join(). 	0507aaadfb5eaf8af92c4876b44c8889d6620935
----------------------------
WL#5285 -  Simplify user visible setting for optimizer_join_cache_level Part 4: Test suite modifications - Drop all tests with suffix _jcl1, _jcl2, _jcl3, _jcl5, _jcl8 - Rename all tests with suffix _jcl0 to suffix _nojb - Rename all tests with suffix _jcl4 to suffix _bnl - Rename all tests with suffix _jcl6 to suffix _bka - Rename all tests with suffix _jcl7 to suffix _bkaunique 	7706ed2328daf89ab02d72b01f50a76fd36f9ca1
----------------------------
Bug#12637786 Wrong secondary index entries on CHAR and VARCHAR columns row_build_index_entry(): In innodb_file_format=Barracuda (ROW_FORMAT=DYNAMIC or ROW_FORMAT=COMPRESSED), a secondary index on a full column can refer to a field that is stored off-page in the clustered index record. Take that into account. rb:692 approved by Jimmy Yang 	7759826ea96c0ae627b63cf398238cde50a8b5bf
----------------------------
Extended ha_ndbcluster::check_if_pushable() to also reject 'MultiScanQuery' as push-executable when the resultset has been requested to be ordered. No testcase as this will not happen in 5.1 based code. However when MRR is disabled in 'trunk-cluster-spj', one of the existing tests in ndb_join_pushdown.test without this fix. 	210486c1f8996ebd904fd0378417ecce5282241c
----------------------------
ndb - add opt-file for ndb_autodiscover3 and ndb_discover_db which requires log-bin and binlog-format=row 	152a1df8778ab9854dd090bc89ee01e2a25e776d
----------------------------
ndb - rename ndb_configre.m4 to VERSION (since only version is kept there) 	7d27f2e5e6e8b0328de553cc9ca2bbb1ea929ebd
----------------------------
ndb 55 - extend cmake/configure.pl with ndb specific configure options 	329c19699c814ee49c2e451667112171834acb61
----------------------------
Bug#12699505 Memory leak in row_create_index_for_mysql() DB_COL_APPEARS_TWICE_IN_INDEX: Remove. This condition is already checked and reported by MySQL before passing the index definition to the storage engine. row_create_index_for_mysql(): Remove the redundant check for DB_COL_APPEARS_TWICE_IN_INDEX. When enforcing the column prefix index limit, invoke dict_mem_index_free(index) to plug the memory leak. In the loop, use index->n_def instead of dict_index_get_n_fields(index), because the latter would be 0 for indexes that have not been copied to the data dictionary cache. innodb-use-sys-malloc.test: Add test cases for attempting to trigger the error checks in row_create_index_for_mysql(). Before MySQL 5.5 and WL#5743, the leak is only reproducible if ha_innobase::max_supported_key_part_length() returned a higher limit than the one used in row_create_index_for_mysql(). In MySQL 5.5 and later, the leak is reproducible with innodb_large_prefix=true. rb:688 approved by Jimmy Yang 	37282cc6bdaec20ce2a8775336dc5b4a228d71fe
----------------------------
WL#5285 -  Simplify user visible setting for optimizer_join_cache_level Part 3: Add new optimizer_switch variables, block_nested_loop and batch_key_access. Added two new optimizer switches: block_nested_loop and batch_key_access. Temporarily map settings to optimizer_join_cache_level. Defaults are: block_nested_loop=on, batch_key_access=off Turned off block_nested_loop in some join_cache test files in order to still be able to test levels 0-3. Updated similar test files for levels 4 and 6 to use the new switches instead of optimizer_join_cache_level. Updated corresponding result files plus result files for tests that outputs list of all optimizer switches. 	57066b24f5c678bde18530b7871a81ce82d444fd
----------------------------
ndb - use @@optimizer_switch='engine_condition_pushdown=on' instead of engine_condition_pushdown=on 	9693c1546d881293a5b93a65b09ace7962e830e6
----------------------------
WL#5285 -  Simplify user visible setting for optimizer_join_cache_level Part 2: Drop support for regular join buffers Only incremental join buffers are now supported, and all non-zero values for optimizer_join_cache_level will now give incremental join buffers. Drop all special handling of odd values for optimizer_join_cache_level, which earlier forced use of regular join buffers.  Adjust comments that refer to regular (or non-linked) buffers Update test cases for queries that can do join buffering only when incremental buffers are used. 	45f97a70dd84871cc611adc9a45a963f973d1c8c
----------------------------
WL#5285 -  Simplify user visible setting for optimizer_join_cache_level Part 1: Changed EXPLAIN output for join buffering Drop references to incremental/regular buffers since support regular buffers will be dropped. Use spelled out names for Block Nested Loop and Batch Key Access. 	48f48d482676bbf38a50715b525dfe32dca9f8cc
----------------------------
ndb - remove uneccessary typedef st_ndbcluster_share - use NDB_SHARE everywhere 	5b96edb872130cb0f7a176167033d1b091b0089b
----------------------------
"BUG# 11757216: 49232: --STORAGE-ENGINE SHOULD BE DECOUPLED FROM DEFAULT TEMPTABLE TYPE Implemented a --default-temp-storage_engine variable to complement the --default-storage-engine. It's default value is the same as of --default-storage-engine. But it's totally independent from --default-storage-engine. The value of --default-temp-storage-engine affects only the tables created by CREATE TEMPORARY TABLE. All other internally created temp tables are not affected by it. The special storage engine name ""DEFAULT"", when applied to such temporary tables work as an alias of the default temp table storage engine. Extended mysql-test-run.pl to issue --default-temp-storage-engine=myisam as a complement to --default-storage-engine=myisam. Test case added. Affected test cases updated. "	d164af1a122c10cec8b488060b4608feba2e332d
----------------------------
"Bug#12694147 COMPILING WITH -DWITHOUT_PARTITION_STORAGE_ENGINE=1 AND WITHOUT -O FAILS! (formerly known as 61625) The problem was that the server would not compile if partitioning was disabled. This was caused by two calls to the partition_key_modified() function which is only defined if partitioning support is enabled. This regression was caused by the patch for Bug#11762751. This patch fixes the problem by wrapping the offending calls in #ifdef WITH_PARTITION_STORAGE_ENGINE / #endif. The patch also fixes a test case which used partitioning without having ""--source include/have_partition.inc"". This meant that the test case would fail on servers configured without partitioning. No test case added. "	3c76093d938a1452d04a363ec30ba86ec476a4fa
----------------------------
SPJ: Changed lifetime of NdbQueryDef objects allocated from ha_ndbcluster. To avoid excessive memory consumption for long running transactions, we have shortened the lifetime of NdbQueryDef objects such that they no longer live until the Transaction ends. NdbQueryDefs will now be deleted when the ndb_pushed_join object which created it is destructed. This also means that the ndb_query_def_list wasn't needed anymore and has been removed. 	9856ec90f96c19c12814f7d008407e2faac57636
----------------------------
Improved on the internal Doc ID management. Got rid of the FTS_DOC_ID_STEP and we no longer need to update Doc ID to the CONFIG table every FTS_DOC_ID_STEP, which could be costly. Doc ID are now mostly an in memory counter, and be sync-ed only when FTS cache sync-ed to auxiliary tables. The Doc ID is initialized when we create FTS cache at the table load time, its initial value is determined by consulting ADDED table and CONFIG table. 	2b7141fa99c697e2ed01671f412bfdb063ef6f56
----------------------------
"ndb spj - move ""push-code"" down in ha_ndbcluster to avoid merge conflicts from main-line. This patch only moves code...but looks terrible in bzr diff "	099b58d77cff4b3957008bd91db058d27c3c4571
----------------------------
ndb - bug#12589613 - add new config MaxDMLOperationsPerTransaction to limits transactions 	032cab1b1c7b111f4b0d93da7c86c1e91c110261
----------------------------
"Fix for Bug#12546542 ""MISSING ROW WHEN USING OPTIMIZER_JOIN_CACHE_LEVEL>=3"" Join cache code forgot to reset JOIN_TAB::first_unmatched in some cases. "	072bc702482599865f815b3f3a78b1b5737af238
----------------------------
ndb - fix compile error for configs which does not have rmb/wmb 	27bd8b4367881d52461d0f462cdba7b203e4c512
----------------------------
"Bug#12584161 - 43861: MAIN.QUERY_CACHE_28249 FAILS SPORADICALLY This test case was failing on 5.5 and trunk for two reasons. 1) It waited for the ""Waiting for table level lock"" process state while this state was renamed ""Waiting for table metadata lock"" with the introduction of MDL in 5.5. 2) SET GLOBAL query_cache_size= 100000; gave a warning since query_cache_size is supposed to be multiples of 1024. This patch fixes these two issues and re-enables the test case. "	cc4530f92d31cc163257efd2fc2d1e4ccb33c35b
----------------------------
"Added build target run.clusterjdbc which uses JdbcLoad with clusterjdbc configuration Added ""include"" property to specify which operations to run, overriding ""exclude"" Provided for java.util.logging configuration to be set up in any crund properties file "	0ddb1c9703329182273e92e4bcc36f5734faea92
----------------------------
"Fixed bug#11840395 (formerly known as bug#60347: THE STRING ""VERSIONDATA"" SEEMS TO BE 'LEAKING' INTO THE SCHEMA NAME SPACE) and bug#12428824 (Parser stack overflow and crash in sp_add_used_routine with obscure query). The first problem was that attempts to call a stored function by its fully qualified name ended up with unwarranted error ""ERROR 1305 (42000): FUNCTION someMixedCaseDb.my_function_name does not exist"" if this function belonged to a schema that had uppercase letters in its name AND --lower_case_table_names was equal to either 1 or 2. The second problem was that 5.5 version of MySQL server might have crashed when a user tried to call stored function with too long name or too long database name (i.e if a function and database name combined occupied more than 2*3*64 bytes in utf8). This issue didn't affect versions of server < 5.5. The first problem was caused by the fact that in cases when a stored function was called by its fully qualified name we didn't lowercase name of its schema before performing look up of the function in mysql.proc table even although lower_case_table_names mode was on. As result we were unable to find this function since during its creation we store lowercased version of schema name in the system table in this mode and field for schema name uses binary collation. Calls to stored functions were unaffected by this problem since for them schema name is converted to lowercase as necessary. The reason for the second bug was that MySQL Server didn't check length of function name and database name before proceeding with execution of stored function. As a consequence too long database name or function name caused buffer overruns in places where the code assumes that their length is within fixed limits, like mdl_key_init() in 5.5. Again this issue didn't affect calls to stored procedures as for them length of schema name and procedure name are properly checked. This patch fixes both these bugs by adding calls to check_db_name() and check_routine_name() to grammar rule which corresponds to a call to a stored function. These functions ensure that length of database name and function name for routine called is within standard limit. Moreover call to check_db_name() handles conversion of database name to lowercase if --lower_case_table_names mode is on. Note that even although the second issue seems to be only reproducible in 5.5 we still add code fixing it to 5.1 to be on the safe side (and make code a bit more robust against possible future changes). "	639605a91937681fa7256d0f5a2e216046d33d92
----------------------------
WL#5906 read before write removal (RBWR) - Add MCP patch for read removal in MySQL Servers update and delete loops. - Slightly modified version compared to 7.0 where this version checks the limitations of the algorithm in the MySQL Server code and only the limitations of NDB is done in ha_ndbcluster - Update test result slightly after merging in patch for bug#37153 rewrite 	3ef0c7956ede902069c0386687d62ae210de6b68
----------------------------
WL#5185 Remove deprecated 5.1 features - follow up patch to WL#5185 which makes mysqltest.cc select from information_schema.engines instead of looking at the removed have_ndbcluster variable. 	0418f49e1f951126c164886c26f339053bf3bbbe
----------------------------
Bug#12316645: Wrong cost calculation with optimizer_join_cache_level settings best_access_path() did not take properly into account the setting of optimizer_join_cache_level when calculating the access path that gives the smallest cost to access a given table. There are three changes applied in this bug fix: - best_access_path() properly accounts for join cache level 0, ie do not use join caching. - best_access_path() does account for join cache level greater than 2 when a table is outer-joined to the current join prefix. - best_access_path() does account for join cache level greater than 2 when a table is semi-joined to the current join prefix. Static properties for setting join buffering have been centralized to a new function set_join_buffer_properties(). Further on, setting of join cache level is changed. check_join_cache_usage() is renamed to setup_join_buffering(). Cost calculation for joins with join buffering is better than it used to be, but it is still not fair. Sometimes, cost is calculated using join buffering, but the decision has to be reverted later. Cost calculation for BKA join strategy is also not considered properly (but this patch does not change the cost calculations for BKA). mysql-test/t/join_cache_jcl0.test Added test cases for joins where join buffering is turned off. mysql-test/r/join_cache_jcl0.result Added test case results for joins where join buffering is turned off. mysql-test/r/count_distinct.result mysql-test/r/distinct.result mysql-test/r/group_by.result mysql-test/r/join_cache_jcl1.result mysql-test/r/join_cache_jcl2.result mysql-test/r/join_cache_jcl3.result mysql-test/r/join_cache_jcl4.result mysql-test/r/join_cache_jcl5.result mysql-test/r/join_cache_jcl6.result mysql-test/r/join_cache_jcl7.result mysql-test/r/join_cache_jcl8.result mysql-test/r/join_nested.result mysql-test/r/join_nested_jcl6.result mysql-test/r/join_outer.result mysql-test/r/join_outer_jcl6.result mysql-test/r/null_key_all.result mysql-test/r/null_key_icp.result mysql-test/r/null_key_none.result mysql-test/r/order_by_all.result mysql-test/r/order_by_icp_mrr.result mysql-test/r/order_by_none.result mysql-test/r/select_all.result mysql-test/r/select_all_jcl6.result mysql-test/r/select_icp_mrr.result mysql-test/r/select_icp_mrr_jcl6.result mysql-test/r/select_none.result mysql-test/r/select_none_jcl6.result mysql-test/r/subquery_sj_all.result mysql-test/r/subquery_sj_all_jcl6.result mysql-test/r/subquery_sj_all_jcl7.result mysql-test/r/subquery_sj_firstmatch.result mysql-test/r/subquery_sj_firstmatch_jcl6.result mysql-test/r/subquery_sj_firstmatch_jcl7.result mysql-test/r/subquery_sj_mat.result mysql-test/r/subquery_sj_mat_jcl6.result mysql-test/r/subquery_sj_mat_jcl7.result mysql-test/r/subselect_innodb.result Lots of changed plans for bug#12316645. Generally the new costing will benefit BNL join buffering, sometimes over ref access. count_distinct.result: Changed result because of non-deterministic query. sql/sql_select.cc Modified the argument disable_jbuf locally in best_access_path() according to join cache level setting, and whether the table to be added is outer-joined or semi-joined. Added function set_join_buffer_properties() that calculates whether join buffering can be used for the tables of a query. check_join_cache_usage() is renamed to setup_join_buffering(). Checks for join buffering have been refactored somewhat: - Attempted to group the tests better (general checks before outer join tests before semi-join tests). - Outer join test is simplified: The criterion is that if one table in an outer join operation cannot use join buffering, then all tables in that outer join nest and any inner outer join nest cannot use join buffering. This is handled in two tests: 1. If the first inner table of the current outer join nest does not use join buffering, this table cannot use it either. 2. If an immediate outer join nest does not use join buffering, this table cannot use join buffering. The initial join buffering strategy is now selected in greedy_search() and possibly modified in setup_join_buffering(). If join buffering is to be used, setup_join_buffering() will set up the join cache for the table. best_extension_by_limited_search(): Variable 's' made const throughout it's use. sql/sql_select.h Added more documentation to the field use_join_cache in JOIN_TAB. The value is set to the set of possible join buffering strategies for this table when starting the join optimization. 	87724fec6432df688afb1efe91d91f8c6ba2f15f
----------------------------
Bug #11749418: 38965: TEST CASES GIS-RTREE, TYPE_FLOAT, TYPE_NEWDECIMAL FAIL IN EMBEDDED SERVER FreeBSD 64 bit needs the FP_X_DNML to fpsetmask() to prevent exceptions from propagating into mysql (as a threaded application). However fpsetmask() itself is deprecated in favor of fedisableexcept(). 1. Fixed the #ifdef to check for FP_X_DNML instead of i386. 2. Added a configure.in check for fedisableexcept() and, if present, this function is called insted of the fpsetmask(). No need for new tests, as the existing tests cover this already. Removed the affected tests from the experimental list. 	29d840ee47c0e6406cbde7b1d878643d0b25e1ce
----------------------------
Bug 11765863: SHUTDOWN HANG WAITING FOR PURGE THREAD TO BE SUSPENDED This is really several bug fixes rolled into one: 1. Fix a hang during shutdown 2. Fix multi-threaded purge performance issue when innodb-purge-threads > 1. 3. Remove purge_sys->n_executing 4. Purge unable to keep up with data generation when number of user threads >= 256. Now that worker threads can't simply exit via os_event_wait() and their termination is deterministic.  Get rid of the dodgy code that tried to handle the case of an unexpected exit. This gets rid of the purge_sys->n_executing field altogether. Simplifies the control flow and fixes a performance issue when innodb-purge-threads > 1 by removing some arbitrary sleeps to handle the above case. Treat the number of purge threads as a pool of threads, use only as many threads as required to keep the history list in check. Set innodb_purge_batch_size default to 300 from 20. Updated test results accordingly. rb://658 Approved by: Jimmy Yang. 	95df27e83061683d0a0d9ec9a979ffb73e997113
----------------------------
ndb - mark ndbcluster_find_files() as static and remove it from header file 	191783a557459b09f97bca578e9594b36c32a015
----------------------------
Bug#11762221 - 54790: Use of non-blocking mode for sockets limits performance Bug#11758972 - 51244: wait_timeout fails on OpenSolaris The problem was that a optimization for the case when the server uses alarms for timeouts could cause a slowdown when socket timeouts are used instead. In case alarms are used for timeouts, a non-blocking read is attempted first in order to avoid the cost of setting up a alarm and if this non-blocking read fails, the socket mode is changed to blocking and a alarm is armed. If socket timeout is used, there is no point in attempting a non-blocking read first as the timeout will be automatically armed by the OS. Yet the server would attempt a non-blocking read first and later switch the socket to blocking mode. This could inadvertently impact performance as switching the blocking mode of a socket requires at least two calls into the kernel on Linux, apart from problems inherited by the scalability of fcntl(2). The solution is to remove alarm based timeouts from the protocol layer and push timeout handling down to the virtual I/O layer. This approach allows the handling of socket timeouts on a platform-specific basis. The blocking mode of the socket is no longer exported and VIO read and write operations either complete or fail with a error or timeout. On Linux, the MSG_DONTWAIT flag is used to enable non-blocking send and receive operations. If the operation would block, poll() is used to wait for readiness or until a timeout occurs. This strategy avoids the need to set the socket timeout and blocking mode twice per query. On Windows, as before, the timeout is set on a per-socket fashion. In all remaining operating systems, the socket is set to non-blocking mode and poll() is used to wait for readiness or until a timeout occurs. In order to cleanup the code after the removal of alarm based timeouts, the low level packet reading loop is unrolled into two specific sequences: reading the packet header and the payload. This makes error handling easier down the road. In conclusion, benchmarks have shown that these changes do not introduce any performance hits and actually slightly improves the server throughput for higher numbers of threads. - Incompatible changes: A timeout is now always applied to a individual receive or send I/O operation. In contrast, a alarm based timeout was applied to an entire send or receive packet operation. That is, before this patch the timeout was really a time limit for sending or reading one packet. Building and running MySQL on POSIX systems now requires support for poll() and O_NONBLOCK. These should be available in any modern POSIX system. In other words, except for Windows, legacy (non-POSIX) systems which only support O_NDELAY and select() are no longer supported. On Windows, the default value for MYSQL_OPT_CONNECT_TIMEOUT is no longer 20 seconds. The default value now is no timeout (infinite), the same as in all other platforms. Packets bigger than the maximum allowed packet size are no longer skipped. Before this patch, if a application sent a packet bigger than the maximum allowed packet size, or if the server failed to allocate a buffer sufficiently large to hold the packet, the server would keep reading the packet until its end. Now the session is simply disconnected if the server cannot handle such large packets. The client socket buffer is no longer cleared (drained) before sending commands to the server. Before this patch, any data left in the socket buffer would be drained (removed) before a command was sent to the server, in order to work around bugs where the server would violate the protocol and send more data. The only check left is a debug-only assertion to ensure that the socket buffer is empty. 	dc30732c549b7628b07ff8dbb8d35f0de74a24c9
----------------------------
"Implement worklog #5743 InnoDB: Lift the limit of index key prefixes. With this change, the index prefix column length lifted from 767 bytes to 3072 bytes if ""innodb_large_prefix"" is set to ""true"". rb://603 approved by Marko "	bd708b42400ff2ca8ba22accc696acd3539d9859
----------------------------
Resolve FTS Doc ID issues with truncate table command. The Doc ID needs to be reset to 0 after the auxiliary tables recreated. Also update the next Doc ID in config table directly after each create FTS index. Added innodb-fts-ddl.test. 	b1c341e687bbb3e148f7f4d88c34e426fa262b6c
----------------------------
Bug#11765562 58545 EXPORT_SET() CAN BE USED TO MAKE ENTIRE SERVER COMPLETELY UNRESPONSIVE The function EXPORT_SET(bits,on,off[,separator[,number_of_bits]]) will concatenate (up to) 64*2 -1 strings: on/off and separator. The total length should not be greater than thd->variables.max_allowed_packet. 	70d68fbbe4f0f449069d1d14d00d2db206e7db49
----------------------------
Bug #12586211 ENABLE GCOV BUILDS WITH CMAKE, INCLUDING PLUGINS Added --with-gcov option to configure.pl and use that from SETUP.sh 	eb8586236662b6715a0fd852286ab0d1c56ad90b
----------------------------
"Bug#11885602 - mysql_upgrade fails upgrading from 7.1.8 to later release - It was allowed to CREATE TABLE which was not in NDB, but creating a view on that table failed since the table has to be opened as part of the create. - Make it possible to workaround this with a new ""ndbinfo_offline"" mode which allows tables to be created and opened although they don't exist or have different table definition. This is exactly the same behaviour as when NDBCLUSTER is disabled. SELECTs on a table which has been opened in offline mode, return no rows and a warning is printed(like before). "	ae9e64d0c00bf914a7b1679f1a315c08ea2606a7
----------------------------
wl#4124 b01_sys.diff configs, pseudo-cols, sys tables, signals 	6c7f298ad2524b25b525f33f1017262b9b5b8799
----------------------------
Bug#12543706 - innodb-fast-shutdown=2: Assert node->modification_counter == node->flush_counter This bug (an assertion failure during a crash-like shutdown) was introduced by the fix of Bug#12323643 Clean up the InnoDB thread shutdown and assertions (WL#5136). fil_node_close_file(): Relax the failing assertion when innodb_fast_shutdown=2. 	2646dd96eb57d4e1c6e7b0d48742256b32e4b896
----------------------------
Simplified test cases. *_lc[0,1,2] tests are not needed any more, since performance schema tables are not affected by lower_case_table_names. 	6f0efb4e02fb11ba9f0dde94a206df9a2f4f1e34
----------------------------
Merge: 5d79bee 68e6a24 merging of experimentizing of SYS_VARS.RPL_INIT_SLAVE_FUNC due to  Bug#12535301 	56434ae9e17427fdcb04136e29e8520cc4f4a52f
----------------------------
Bug 12535301 - SYS_VARS.RPL_INIT_SLAVE_FUNC MISMATCHES IN DAILY-5.5 notifying PB2 the test fails through mysql-test/collections/default.experimental. 	68e6a24d1cb4c1c281f7f753b2e65ed1434c26b3
----------------------------
Bug 12535301 - SYS_VARS.RPL_INIT_SLAVE_FUNC MISMATCHES IN DAILY-5.5 reverting sys_vars.rpl_init_slave_func back to the regular suites. The test failure is specific to 5.5. 	90c5f35094d4099e89093c6a720eec0b01c13604
----------------------------
ndb - add a few lines at end of top level CMakeLists.txt to dump the contents of cmake's output and error(ie config.log) to stdout 	30862209b6ac4942fbf9fdf72d6d36d1688bf848
----------------------------
Fix for Bug 12405804: The variable transaction_prealloc_size gots values up to 5GB in the default session root@localhost, which is also used in mtr for internal purposes. For that the variable will now set back to the default value. 	6658edd4045c44407ba9ed3df7fec34b8aeadbe2
----------------------------
Bug#12316645: Wrong cost calculation with optimizer_join_cache_level settings Stage 0 - change some variable declarations to const, etc. sql/sql_select.cc: best_access_path() - variables are constified. check_join_cache_usage - header converted to Doxygen format. make_join_readinfo() - variables are constified, header converted to Doxygen. 	562aa811a8eb765f8daa01fbae1800b57d0cc3fa
----------------------------
bug#12535301 - SYS_VARS.RPL_INIT_SLAVE_FUNC MISMATCHES IN DAILY-5.5 setting sys_vars.rpl_init_slave_func to default.experimental. 	41376a81d5fd878f18f8a34bd0f88b9e8c8d07c4
----------------------------
ndb - readd settings to storage/ndb/CMakeLists.txt which has dissapeared during merge- - The missing pieces caused: - - different compiler flags for debug build in ha_ndbcluster compared to what had been used in MySQL Server. Thus causing an assert when freeing memory in ha_ndbcluster which had been allocated by server code. Affected debug builds. -- the removal of -Werror was not done. Did not affect Windows, only Linux which is not supported with cmake for 5.1 	7b5e7a330a2bac7818f8d32bb7d8a84f893026e1
----------------------------
ndb - change ndbcluster to be a DEFAULT plugin and not MANDATORY, since mandatory does not give a --ndbcluster switch. 	a0bebef52b1c508fc370005b1d3b8ac2ead5bd4c
----------------------------
Addendum to bug #11764517 : don't create links for --mem directory, move the --vardir instead. The new --secure-file-priv checks dereference any symlinks in the paths and compare the resolved paths. Thus the 5.0 test suite must do as the 5.1 and up and avoid using symlinks. 	10afe0993ed3f547b74fcc637b9553eeb3ab6992
----------------------------
Enable 'bushy-scans' to be part of a pushed query - Which was mainly to remove the 'depend_parents.add(ancestor_no)' restriction from ha_ndbcluster_push.cc Added new bushy MTR testcases, and updated comments on a few existing testcases which used to be enforced to be non-bushy. 	5a9f0b765e397754ce062edb35f61c073a30b7cd
----------------------------
Fix bug #11796673 address backward compatibility on index with large prefix (>=768). Table with such large prefix index will not be loaded into memory (for its metadata), unless innodb_force_recovery is on. rb://604 Approved by Marko 	ce2ed6197c42f4aedc1323e63603f5dabc8e0c67
----------------------------
SPJ: Fixed a regression introduced with recent refactoring of ha_ndbcluster_push.cc: As we now allow dependencies between (grand-)parents to be added such that all the dependent parents become (artificial) dependent on each other, we may also implicit introduce dependencies on outer joined tables. This is incorrect as it is only inner joined tables which can sequentially linked wo/ changing the sematics in the SQL statement. 	ec3f9d9ed71f3782f74066b5907b11020703e42d
----------------------------
Bug#12407753: Time to compare a row is missing in cost calculation of semi-join Stage 1: Change cost factors to be multiplicative Basically, this patch changes the constant values TIME_FOR_COMPARE and TIME_FOR_COMPARE_ROWID to be the inverse of their previous values and gives them names that are more similar to other cost factors. As a consequence, all cost calculations involving these constants are changed from divisions to multiplications. sql/filesort.cc Replaced cost divisions with multiplications. sql/filesort_utils.cc Replaced cost divisions with multiplications. sql/ha_ndbcluster.cc Replaced cost divisions with multiplications. Removed redundant cast to (double). sql/handler.cc Replaced cost divisions with multiplications. Removed redundant cast to (double). sql/opt_range.cc Replaced cost divisions with multiplications. Removed redundant casts to (double). sql/sql_const.h Replaced definition of TIME_FOR_COMPARE with ROW_EVALUATE_COST. Replaced definition of TIME_FOR_COMPARE_ROWID with ROWID_COMPARE_COST. sql/sql_select.cc Replaced cost divisions with multiplications. Removed redundant casts to (double). sql/uniques.cc Replaced cost divisions with multiplications. 	06e590d077b7bc0da6c6297e118ea1e777918fdc
----------------------------
"Bug #11759877 52223: TEST ""PLUGIN_DIR_BASIC"" DOES NOT SUPPORT RPM BUILD (TEST) DIRECTORY STRUC Make a qualified guess: if $basedir/lib does not exist but $basedir/lib64 does, then the latter is the proper value for $MYSQL_LIBDIR Tested on the RPMS of 5.5.12. "	04cc55406428f4e90bbbe72e7702dba4f4bb564a
----------------------------
ndb - mark ha_ndbcluster::eventSetAnyyValue as const 	5b232400931a63082790206102f25726d2f7deb1
----------------------------
Bug#11766631 (59780) - Move the client authentication_windows plugin into the server repository This patch adds client windows authentication plugin code to the client library libmysql (only on Windows platform). The plugin is compiled into the library and added to the list of built-in plugins. This way clients should be able to connect to a server which uses windows authentication plugin even as an SQL user which uses such authentication. Note: this makes the client library to depend on Secur32 Windows system library. When building clients, they must be linked against Secur32. Command mysql_config --libs correctly lists Secur32 as a required dependency. 	6d7aceeead15eeefe720a2cbb1fe8f955ceb40fd
----------------------------
Bug#11766631 (59780) - Move the client authentication_windows plugin into the server repository This patch adds client windows authentication plugin code to the client library libmysql (only on Windows platform). The plugin is compiled into the library and added to the list of built-in plugins. This way clients should be able to connect to a server which uses windows authentication plugin even as an SQL user which uses such authentication. Note: this makes the client library to depend on Secur32 Windows system library. When building clients, they must be linked against Secur32. Command mysql_config --libs correctly lists Secur32 as a required dependency. 	4cfc0e593123a14490d13b17e6c2d0a4ea2d0729
----------------------------
Remove some debug code that was added in MySQL 3.23.44. Until MySQL 3.23.44, there was an incorrect optimization in the transaction commit. The update_undo log would be discarded at commit if it comprised only one page, it did not delete-mark anything, and there was only one read view in trx_sys->view_list. (It looks like that the read view could have belonged to a different transaction, if the committing transaction used consistent reads.) Ever since then, update_undo logs can only be discarded by the purge. trx_purge_sys_print(): Remove. trx_undo_prev_version_build(): On corruption, never print out anything and return DB_ERROR, but let an assertion fail instead. These printouts have apparently never been triggered in the 10 years of their existence. The only references to them were found in corrupted databases or when attempting to rescue a corrupted database. In such situations, the assertion failures can be avoided by setting innodb_force_recovery=5. rb:652 approved by Sunny Bains 	93c00968b2b00e7389b9083f44f1535c7881303b
----------------------------
rpl_ndb - rename rpl_ndb_extraCol to rpl_ndb_extra_col_slave - only run with binlog-format=row 	d17e5593a1cdc3e297d6fbf6f8b2d89f96e19084
----------------------------
rpl_ndb - only run rpl_ndb_insert_ignore with binlog-format=row since included test does not support another format with engine = NDB - remove assignement of $engine_type2 which is not used by included .test 	82ddcac10c76af3ac977cd91e18745f3a279db18
----------------------------
SPJ: Mayor refactoring of ha_ndbcluster_push.cc and the logic which build the pushed query (or: NdbQueryDef). Previously the NdbQueryDef was build incremenataly as we analyzed the query plan for pushable operations. This had the disadvantage that we could take descission about parent - child relations at this stage which later prevented other child candidates to be appended to the pushed query. This refactoring extends 'class ndb_pushed_builder_ctx' such that it collects intermediate information about pushable operation, and possible parent candidates for each child operation. Furthermore, it breaks the pushability logic into multiple passes: 1 ANALYZE: Analyze each child candidate and add it to 'ndb_pushed_builder_ctx::m_join_scope' as 'pushable' if it qualifies as such. In addition possible parent candidates, and required (forced) parent dependencies are collected for each table. All non pushable operations should be identified during this pass such that only known pushable operations remains. 2 OPTIMIZE: Determine the parent to be used among the set of possible parents. This is decided based on simple heuristic where the goal is to employ conditional filters as soon as possible, reduce the fanout of intermediate results, and utilize the parallelism of the SPJ block whenever considdered optimal. 3 BUILD: Build the NdbQueryDef. The primary goal of this refactoring has been to provide a better platform for later improving the efficiency of the pushed queries being produced. It has not been the goal of this refactoring to change the pushability of any query in the existing MTR testsuite. However a few queries has improved its pushability as the 'analyze' phase now are able to force an artificial sequential dependency between tables which enables more child operations to be appended to the pushed query. 	ad154cc940042a63d14131e16bbef02014e0cc24
----------------------------
ndb - remove cluster specific hack in mtr.pl which alloweed running with --binlog-format specified although no binloging on a specific mysqld 	80743980521e135b506cf6516bd49e4b15da8c19
----------------------------
rpl_ndb - remove combinations file for rpl_ndb, if a test need to test different binlog-formats it can switch to that mode in the test 	1334b49b6443d206d0c261cc7eae7cca7a4ceafe
----------------------------
Bug#60309 -  Bug#12356829: MYSQL 5.5.9 FOR MAC OSX HAS BUG WITH FOREIGN KEY CONSTRAINTS The innoDB global variable srv_lower_case_table_names is set to the value of lower_case_table_names declared in mysqld.h server in ha_innodb.cc.  Since this variable can change at runtime, it is reset for each handler call to ::create, ::open, ::rename_table & ::delete_table. But it is possible for tables to be implicitly opened before an explicit handler call is made when an engine is first started or restarted.  I was able to reproduce that with the testcase in this patch on a version of InnoDB from 2 weeks ago.  It seemed like the change buffer entries for the secondary key was getting put into pages after the restart.  (But I am not sure, I did not write down the call stack while it was reproducing.)  In the current code, the implicit open, which is actually a call to dict_load_foreigns(), does not occur with this testcase. The change is to replace srv_lower_case_table_names by an interface function in innodb.cc that retrieves the server global variable when it is needed. 	6593ca560b9867d185743d2b522672c8f973c139
----------------------------
rpl_ndb - remove obsolete master-* config options which is no longer supported in 5.5 	9aaa841fb4f5dcde8ad3c06c8b72ebbd142e554a
----------------------------
rpl_ndb - convert rpl_ndb_break_3_chain to use the new rpl scripts - remove unused config options from .cnf file to simplify it further - update .result file to new rpl script output 	4a87cc7f9e0a310e5d8a4b67d419da7a7a850f24
----------------------------
rpl_ndb - Configure slave mysqld without innodb, and set myisam as default storage engine(since innodb will be default otherwise starting from 5.5) 	982af3229c6fcf66bd048d9a8f1ae425db560d6a
----------------------------
rpl_ndb - --default-character-set and --default-collation not supported anymore in 5.5, use the new names for same options i.e --character-set-server and --collation-server 	6dc0307fc8e325dc00b6bb496a8871861ec9aefd
----------------------------
Remove libevent/config.h and libevent/event-config.h, and wrap those defines in our cmake generated config.h 	9246e0bf076fd7fac06203bf2209fefd754d8618
----------------------------
"Bug #58758 Ndb Internal : Defaults for enum type config values not supported - Make ConfigInfo::getDefaultString retrive the default value as string by double  storing the default value as string with the key ""DefaultString"" "	8c9e8b3ab157cbb06655f7a1dc0d76e60df9f9e7
----------------------------
Bug #58758 Ndb Internal : Defaults for enum type config values not supported - Convert the default value given as string to Uint32 before storing it internally. - Make Arbitration and DefaultOperationRedoProblemAction use a string as default value instead of int as before. - Fix DBUG crash when retrieving the internal value for ENUM as string instead of int 	50fc93e8f44afe843052e32db0e7ba582d3a34ec
----------------------------
"ndb - bug#59213 / bug#11766167 Add better support for nodes configured with Nodegroup=65536 (i.e added to config to later be added) Add new config variable StartNoNodegroupTimeout(default=15s) which determines to to wait for node wo/ nodegroup, before treating them as if they had been added to ""nowait-nodes"" E.g 1) initial start will wait this amout of time, before doing a start Note: in an initial start, the values from config.ini is used to determine that nodes have no nodegroup 2) system restart will wait this amout of time, before continueing with other timeouts (such as StartPartial/StartPartitioned-timeout) Note: in an system restart, the values read from disk is used to determine that nodes have nodegroup (since they can have been added to a nodegroup after initial start) "	bdb45825db6e5991b1bc2368c6ebd88d2d8e2e8e
----------------------------
ndb - increase --ndb-wait-setup for mtr.pl to 120 to cope with slow and loaded test hosts 	118e70f48650ddd9f22e0268800fdd235f0c893d
----------------------------
Bug #12351213 MTR --VS-CONFIG DOES NOT WORK LIKE MTR_VS_CONFIG Fix for --vs-config applied Find.pm incorrectly tested an unitialized local variable instead of the global, corrected. Find.pm is also wrong in 5.5: uses a non-existent global variable. Fix when merging up. 	a23276c5c11dc1f7500c3e71de0e196c211b432e
----------------------------
Bug #12360501 MTR --GCOV DOES NOT WORK WITH CMAKE BUILDS Changed to use $bindir instead of $basedir Simplified search for files: find all *.gcno Also, .msg and .err files had been mixed up 	404504bbbd32bbc5bfbed646c334f94ead8d4b51
----------------------------
Bug#12330248 - EXTEND NDBINFO.NODES TO SHOW THE CONFIG GENERATION NUMBER OF THE DATA NODES 	4c89fc2d8ad43cf14923cac96da74d33c57d49a6
----------------------------
Bug 12348462 - ALLOW MULTIPLE SYNC WAIT ARRAYS Once threads start to queue on any InnoDB mutex/rw_lock the single OS mutex in the single sync wait array instance becomes a big bottleneck. New config variable: --innodb-sync-array-size : default is 32 max is 1024. We loop over all the arrays only when we need to print out diagnostic information or when we need to handle lost wakeup. This is an interim solution until we get rid of the sync0arr.c code completely. rb://635 Approved by Marko 	1057917b5dcc115a0059bc12d7f977d557563722
----------------------------
Bug #11760042 - 52409: Assertion failure: long semaphore wait In ha_innobase::create(), we check some things while holding an exclusive lock on the data dictionary. Defer the locking and the creation of transactions until after the checks have passed. The THDVAR could hang due to a mutex wait (see Bug #11750569 - 41163: deadlock in mysqld: LOCK_global_system_variables and LOCK_open), and we want to avoid waiting while holding InnoDB mutexes. innobase_index_name_is_reserved(): Replace the parameter trx_t with THD, so that the test can be performed before starting an InnoDB transaction. We only needed trx->mysql_thd. ha_innobase::create(): Create transaction and lock the data dictionary only after passing the basic tests. create_table_def(): Move the IS_MAGIC_TABLE_AND_USER_DENIED_ACCESS check to ha_innobase::create(). Assign to srv_lower_case_table_names while holding dict_sys->mutex. ha_innobase::delete_table(), ha_innobase::rename_table(), innobase_rename_table(): Assign srv_lower_case_table_names as late as possible. Here, the variable is not necessarily protected by dict_sys->mutex. ha_innobase::add_index(): Invoke innobase_index_name_is_reserved() and innobase_check_index_keys() before allocating anything. rb:618 approved by Jimmy Yang 	d0b1a6466c431046d1915c2c065d3d5d4ad011e2
----------------------------
rename the config script innodb_memcached_config.sql 	dbd5c6dd1d92e83f0cb3cf815029544444cfe693
----------------------------
Pass the user configure string also to default memcached engine. And a few minor cleanups for compilation warnings. 	235ae937defbda568da0e8846a3b22a15f71e0a6
----------------------------
Bug #11766513 - 59641: Prepared XA transaction in system after hard crash causes future shutdown hang InnoDB would hang on shutdown if any XA transactions exist in the system in the PREPARED state. This has been masked by the fact that MySQL would roll back any PREPARED transaction on shutdown, in the spirit of Bug #12161 Xa recovery and client disconnection. [mysql-test-run] do_shutdown_server: Interpret --shutdown_server 0 as a request to kill the server immediately without initiating a shutdown procedure. xid_cache_insert(): Initialize XID_STATE::rm_error in order to avoid a bogus error message on XA ROLLBACK of a recovered PREPARED transaction. innobase_commit_by_xid(), innobase_rollback_by_xid(): Free the InnoDB transaction object after rolling back a PREPARED transaction. trx_get_trx_by_xid(): Only consider transactions whose trx->is_prepared flag is set. The MySQL layer seems to prevent attempts to roll back connected transactions that are in the PREPARED state from another connection, but it is better to play it safe. The is_prepared flag was introduced in the InnoDB Plugin. trx_n_prepared: A new counter, counting the number of InnoDB transactions in the PREPARED state. logs_empty_and_mark_files_at_shutdown(): On shutdown, allow trx_n_prepared transactions to exist in the system. trx_undo_free_prepared(), trx_free_prepared(): New functions, to free the memory objects of PREPARED transactions on shutdown. This is not needed in the built-in InnoDB, because it would collect all allocated memory on shutdown. The InnoDB Plugin needs this because of innodb_use_sys_malloc. trx_sys_close(): Invoke trx_free_prepared() on all remaining transactions. 	1a0dde92066236436de80d3a20978bf3baffc9e9
----------------------------
"Support all memcached configure options through InnoDB configure variable ""daemon_memcached-option"". So user can specify their original command line configure options through a MySQL boot time option, for example ""mysqld ... --loose-daemon_memcached-option=""-p11222 -m 2048 -u root"", which tells the memcached to listen on port 11222, with 2048MB memory configured etc. "	489525037acc9162eaeb5448d2003c7ba5e106cf
----------------------------
BUG#12324076 - RQG_RPL_SEMISYNC TEST FAILURE, SLAVE CRASHES WITH SEGMENTATION FAULT The patch for BUG#11765887 BUG#58897 verifies if the configuration is not crash-safe and prints out a warning message to alert users on that. The routine that keeps track of warnings and errors on the slave was modified in BUG#11748510 - BUG#36524 and after that report_function may be null if global_system_variables.log_warnings is not set. However, report_function is used without checking its value thus causing a crash. Fixed the problem, by checking if report_function is null before using it. 	0d6f33e302bb312f0ff3e2ddc6cefc96dd2faa39
----------------------------
Bug 12323643 - CLEAN UP THE INNODB THREAD SHUTDOWN AND ASSERTIONS (WL#5136) On shutdown, do not exit threads in os_event_wait(). This method of exiting was only used by the I/O handler threads. Exit them on a higher level. os_event_wait_low(), os_event_wait_time_low(): Do not exit on shutdown. os_thread_exit(), ut_dbg_assertion_failed(), ut_print_timestamp(): Add attribute cold, so that GCC knows that these functions are rarely invoked and can be optimized for size. os_aio_linux_collect(): Return on shutdown. os_aio_linux_handle(), os_aio_simulated_handle(), os_aio_windows_handle(): Set *message1 = *message2 = NULL and return TRUE on shutdown. fil_aio_wait(): Return on shutdown. logs_empty_and_mark_files_at_shutdown(): Even in very fast shutdown (innodb_fast_shutdown=2), allow the background threads to exit, but skip the flushing and log checkpointing. innobase_shutdown_for_mysql(): Always wait for all the threads to exit. rb:633 approved by Sunny Bains 	5530926e720dd0068e0e408edb7375a512bc4cd7
----------------------------
"This is to support multi-column get/store functionality. The value will be separated by a ""separator"" supplied by user in the configure table. The ""separator"" will be extract out before storing data in database and append back when ""get"" command is issued. "	376848dd27200c7e2ccea4dd3c8d6fd8f0316ce8
----------------------------
"Allow the InnoDB Memcache to switch between the InnoDB database store and/or default memcached cache store. And users can configure command ""get"" (search), ""set"" (store), ""delete"" and ""flush"" with one of 3 three options: cache-only, innodb-only and caching (both cache and DB store). The name for above 3 options are made such to be compatible with NDB implementations. "	af880423254dbc53d960f942856fe956815dc132
----------------------------
General code cleanup. Rename functions, factor out the prefetch init to a separate function, fold the separate mallocs into one. This is part of making the pre-fetch configurable via the optimizer in the future. Approved by Marko rb://641 	99904fb0eb2b2c36e78ddfb503b3b17a1ad85bc6
----------------------------
mysql-5.6-labs-innodb-memcached: change bzr config file. 	1f8539c66663dd66358e7dd452088087b98acd87
----------------------------
ndb - implement proposed config changes for 7.2.0 	079ed04800b8774a078641fc59b8e83ef9fe325f
----------------------------
ndb - Run ndb_binlog suite with binlog-format=ROW by default 	21bf07ac49ceb21f59b37d571ed0ec1b4b75130a
----------------------------
ndb - bug#11769048 - Remove hard-coded limit on 32 tux/tup scan per fragment, and instead add config variable MaxParallelScansPerFragment 	464f73ca2ee3bf061fc0e36aa21e8b95ab558a1f
----------------------------
ndb - disable ha_ndbcluster:resets usage of m_partinfo->used_partitions (which does not longer exists) until we casn determine if this hack is needed 	35ab1e4fbb52c877880a6be032d9533eef57a4f5
----------------------------
ndb - adapt ndbcluster_alter_table_flags to new flags indicating what is supported by handler 	bdd4ed9517fa1a701cc6aea9c08f39f614d8c83f
----------------------------
BUG#11766427, BUG#59539: Filter by server id in mysqlbinlog fails Problem: mysqlbinlog --server-id may filter out Format_description_log_events. If mysqlbinlog does not process the Format_description_log_event, then mysqlbinlog cannot read the rest of the binary log correctly. This can have the effect that mysqlbinlog crashes, generates an error, or generates output that causes mysqld to crash, generate an error, or corrupt data. Fix: Never filter out Format_description_log_events. Also, never filter out Rotate_log_events. 	257e39aa44a9d035575846ad4f3e3a0fbeff0667
----------------------------
Bug #11766769: 59959: SMALL VALUES OF --MAX-ALLOWED-PACKET ARE NOT BEING HONORED max_allowed_packet works in conjunction with net_buffer_length. max_allowed_packet is an upper bound of net_buffer_length. So it doesn't make sense to set the upper limit lower than the value. Added a warning (using ER_UNKNOWN_ERRROR and a specific message) when this is done (in the log at startup and when setting either max_allowed_packet or the net_buffer_length variables) Added a test case. Fixed several tests that broke the above rule. 	c7b83484b5d21db737438711af83030a1bcf727f
----------------------------
BUG#11898467 - SERVER CRASHES ON SELECT HEX(WEIGHT_STRING(STR AS [CHAR|BINARY](N))) IF N IS BIG Problem: Item_func_weight_string() could allocate unlimited amount of memory, which led to server crash. Fix: honor max_allowed_packet in Item_func_weight_string::val_str() @ mysql-test/r/func_weight_string.result @ mysql-test/t/func_weight_string.test Adding tests @ sql/item_strfunc.cc Don't return results longer than max_allowed_packet 	6303b7c32986cc01b03170a6194f2ccf38a058d1
----------------------------
BUG#11765887 BUG#58897 Rpl_info_table::do_is_transactional causes too much overhead After WL#2775, Slave's information,i.e. IO Thread and SQL Thread's information, can be stored into different types of repositories. The current implementation provides two repositories, i.e. FILE or TABLE, and any type of engine can be used. However, only transactional engines, such as Innodb, can provide a crash-safe behavior in the sense that a slave can continue operating after a crash without requiring any manual-intervention. If a transactional table is in use, a different execution path is called to provide a crash-safe behavior. Testing if a transactional engine is in use, unfortunately, requires to open and close the table, slave_relay_log_info, and this has a negative impact on performance. To fix this, we have cached the type of the repository in use, transactional or non-transactional, while starting the slave. This is done by introducing a member variable into the Rpl_info class. Changing the engine in use while the slave is running is not recommend and most likely will cause inconsistency issues. We do nothing in this patch to prevent such changes. In the future, however, we are going to check if the replication is stopped before allowing to change the engine in use or the table's structure in general, although the latter operations can apparently lead to fail-safe scenarios. We also have implemented the following changes: . Refactored Rpl_info_factory and removed unnecessary code. . Allowed to dynamically change the type of the repository, FILE or TABLE, without requiring to restart the serve. However, replication must be stopped. . Alerted when a configuration is not crash-safe. 	58c1b836bacae1b6dad59b4c67211a02ea3ce368
----------------------------
Update the default.daily collection in order to run rpl test cases with: . relay-log-info-repository=TABLE or . master-info-repository=TABLE Some test cases were updated because either they rely on a master.info or relay.info file or had to be changed to cope with such options. 	bf5f7227ca627e45a43761f00e31d2ca4fe87c19
----------------------------
"Bug#11894966 - second mysqld does not have table after non distributed table alter to ndb - move the ndb_create_table_from_engine call and related code out of ""if (ndb_binlog_running)"", ndb schema distribution should run also when mysqld is not configured to binlog "	da160b2f0f67ee7d7d12d7869a4b6c08f74a4a52
----------------------------
Bug # 11766011: mysql.user.authentication_string column causes configuration wizard to fail Made the fields mysql.user.plugin and mysql.user.authentication_string nullable to conform with some older clients doing inserts instead of using the commands. 	52edb4a5b95de617d0627e8476785e404f380eeb
----------------------------
SPJ refactoring of handler interface extensions used for retrospecting pushed joins. Intention is to clean up code, improve readability, *and* prepare for later enhanced EXPLAIN of pushed joins which should also include info about the parent/child relations. Renamed member variables an methods in order to clearify theirs usage: - handler::is_parent_of_pushed_join() -> handler::number_of_pushed_joins() - handler::member_of_pushed_join()  -> handler::root_of_pushed_join() - ha_ndbcluster::m_pushed_join -> ha_ndbcluster::m_pushed_join_member Introduced: int ha_ndbcluster::m_pushed_join_operation: Enumerates the pushed query operation which relates to this handler instance static const uint ha_ndbcluster::PUSHED_ROOT= 0: Enumerates the pushed operation being the root in the pushed query. Mainly for improved readability of the code. handler::parent_of_pushed_join(): Returns the pushed parent of this handler instance. NULL if operation is unpushed, or if this is the root of the pushed query. 	58da6600a2a797c9c4b3355d32bb18f512f3eea9
----------------------------
ndb - Add cmake configure check for pthread_setschedparam 	757bc8d346c5bdb30cf317850edd31982d3ce30a
----------------------------
"Fixed Bug#11764168 ""56976: SEVERE DENIAL OF SERVICE IN PREPARED STATEMENTS"". The problem was that server didn't check resulting size of prepared statement argument which was set using mysql_send_long_data() API. By calling mysql_send_long_data() several times it was possible to create overly big string and thus force server to allocate memory for it. There was no way to limit this allocation. The solution is to add check for size of result string against value of max_long_data_size start-up parameter. When intermediate string exceeds max_long_data_size value an appropriate error message is emitted. We can't use existing max_allowed_packet parameter for this purpose since its value is limited by 1GB and therefore using it as a limit for data set through mysql_send_long_data() API would have been an incompatible change. Newly introduced max_long_data_size parameter gets value from max_allowed_packet parameter unless its value is specified explicitly. This new parameter is marked as deprecated and will be eventually replaced by max_allowed_packet parameter. Value of max_long_data_size parameter can be set only at server startup. "	6c2f5e306ca3fa621cd25cedd49181d6e0d5cbc6
----------------------------
Bug #11765023: 57934: DOS POSSIBLE SINCE BINARY CASTING DOESN'T ADHERE TO MAX_ALLOWED_PACKET Added a check for max_packet_length in CONVERT(, BINARY|CHAR). Added a test case. 	405f7ca69a36a2b2d7b02bdb945f1e6879c5aaea
----------------------------
Bug#11765707 (Mysql bug #58698): EPOCH NOT IN NDB_APPLY_STATUS WHEN IGNORING BINARY LOGGING MYSQL DB ON MA Replication code modified into alignment with trunk so that injected table map events are not filtered by replication code. Table map events added by the 'normal' RBR code are already checked for DB filtering before being added. For Ndb user tables, DB filtering is checked before NdbApi event subscriptions are configured for a user table, so filtering at the Binlog Injector is not required. Removing the 'built in' filtering allows Ndb to ensure that injected ndb_apply_status events are not filtered out if the user has filtered out events on the mysql database. The existing ndb_binlog_ignore_db testcase is extended. A new rpl_ndb_ignore_db testcase is added. 	90b5825f3a471bdeaa105cbc0404c5d37e03bc49
----------------------------
Bug#11768580 LOST_EVENTS ERROR 1590 NOT IGNORED WHEN --SLAVE-SKIP-ERRORS USED Extra Ndb testcases, specific to GAP event on restart. 	701a75cba8002be6f67ee5f488d5438c47869721
----------------------------
Bug#11768580 LOST_EVENTS ERROR 1590 NOT IGNORED WHEN --SLAVE-SKIP-ERRORS USED (Mysql bug num 59889 LOST_EVENTS error 1590 not ignored when --slave-skip-errors used) Add slave-skip-errors check to INCIDENT log event. Note that this is a 'backport' of bug#11799671 	693cc73d4506c705004cb83d3e12df6994b266ff
----------------------------
"ndb - add ndb_schema_locks_count session variable which counts the number of times that a thread takes the ""ndb global schema lock"" - add test to show that all the commands that are configured to take the global schema lock updates the counter "	9802cbe01f6d48f7d1e69f957b84adb641744e49
----------------------------
ndb - make sure ndbcluster_global_schema_lock_deinit is always called before returning from failed ndbcluster_init - call ndbcluster_global_schema_lock_deinit before ndb_end_internal when shutting down 	b4f5a9e4f2baaf45b7e7dbf5f15fcafef1035997
----------------------------
ndb - merge ndbcluster_has_global_schema_lock and  ndbcluster_no_global_schema_lock_abort into Thd_ndb::has_required_global_schema_lock - add thd parameter to Thd_ndb::seize and Thd_ndb's constructo for initialization of Thd_ndb::m_thd 	5f861f6b502511c95a302e68b089ec72dc104149
----------------------------
ndb - rename ndbcluster_global_schema_lock_ext ->gsl_ lock_ext - rename ndbcluster_global_schema_unlock_ext -> gsl_unlock_ext - rename insanely long variables from ndbcluster_global_schema_lock_* -> gsl_* - use bool type in a few places 	effd5012517bab713389aa709c3931a251948362
----------------------------
"ndb - Move global schema lock code to ndb_global_schema_lock.h, ndb_global_schema_lock.cc and ndb_global_schema_lock_guard.h - Remove ha_ndbcluster_lock_ext.h and move the functions from there into ndb_global_schema_lock.cc, they code in ther is not shared with ndb_restore like comments said - Add ""initialized"" variable to keep track of wheter ndb_global_schema_lock is enabled or disabled. - Remove NDB_NO_GLOBAL_SCHEMA_LOCK defines "	3b9068c20c949bdcef9651563da32b32234f76d8
----------------------------
ndb - move Thd_ndb into ndb_thd_ndb.h and add new ndb_thd_ndb.cc file for Thd_ndb implementation(not moving everything related to Thd_ndb since it still has many dependencies) - move Thd_ndb seize and release functions from ha_ndbcluster to Thd_ndb class 	02ed76b15b683bf1991a7b647444c0bdf42f1173
----------------------------
Implement connection pooling for clusterj. Two properties are added to the configuration file: com.mysql.clusterj.connection.pool.size specifies the number of connections in the pool com.mysql.clusterj.connection.pool.nodeids specifies the node ids to use The constructor Ndb_cluster_connection(const char *, int) is mapped by ndbjtie 	a1f27b3147d0bc8b913bc4febf5af4625542a3c3
----------------------------
Bug#60196 / Bug#11831040 Setting lowercase_table_names to 2 on Windows causing Foreign Key problems This problem was exposed by the fix for Bug#55222.  There was a codepath in dict0load.c, dict_load_foreigns() that made sure the table name matched case sensitive in order to load a referenced table into the dictionary as needed.  If an engine is rebooted which accesses a table with foreign keys, and lower_case_table_names=2, then the table with foreign keys will get an error when it is changed (insert/updated/delete). Once the referenced tables are loaded into the dictionary cache by a select statement on those tables, the same change would succeed because the affected code path would not get followed. 	d072bb0d7f40822ae13affadd897bb47ea01d4cc
----------------------------
BUG#11766219 : 59280: $MYSQL_HOME IS NOT USED FOR THE CLIENT CONFIGURATION. At startup, MySQL server/client programs do not read configuration file pointed by MYSQL_HOME environment variable. This happened as, this environment variable was handled by a different variable (DEFAULT_HOME_ENV) in the code, which was ne'er initialized. Fixed by changing it to MYSQL_HOME. 	c614ff3a42cb1169c6a676205def6c9fb81197f2
----------------------------
ndb - fix ndb_configure.m4 broken because of help string with embedded comma(,) by adding surrounding ] - break long lines - add extra surrounding ] in a few other helptexts 	ae7b0f22b2b1962c85d0c532e664db3b7c8391f2
----------------------------
ndb - rename ndbcluster_binlog_open_table() to ndb_binlog_open_shadow_table() - add new comment descibing purpose of the function 	439c03c8ac35018a5f9374a23ff584698101877f
----------------------------
Update ndb_configure.m4 for clusterj-jdbc 	b2f18401ef58694d577190e540354347bc43d3b9
----------------------------
Fix failing test: optimizer_debug_sync.test must source have_materialization.inc because it sets optimizer_switch. 	f855b4b0116d443275014b2a1b3c61dc25d39776
----------------------------
Bug#11765237 - 58179: CANNOT START MYSQLD WITH APP VERIFIER Bug#11763065 - 55730: KILL_SERVER() CALLS SETEVENT ON A NULL HANDLE, SMEM_EVENT_CONNECT_REQUEST Application Verifier is a Microsoft tool used for detecting certain classes of programming errors. In particular, MS Windows OS resource usage is monitored for wrong usage (handles, thread local storage, critical sections, ...) In MySQL 5.5.x, an error was introduced where an object on thread local storage was used before the TLS and the object was created. The fix has been to move the mysys initialization to an earlier stage in the boot process when built for Windows.  For non-win builds, the init already happens early. Some un-tangling of calls to my_init(), my_basic_init() and my_thread_global_init() was done.  There is no longer a need to do init in steps, so the full my_init() is called instead of my_init_basic(). In addition,  Bug#11763065 was fixed.  The event handle 'smem_event_connect_request' is only created if 'opt_enable_shared_memory' is set.  When killing the server, an event was flagged on the handle unconditionally.  Added a test, so it will only be flagged if created. 	48126a574cb31952032eb3c0ff07eaab101dc9e0
----------------------------
Fix for bug#11804277 - INCORRECT INDEX MAY BE SELECTED DUE TO INSUFFICIENT STATISTICS FROM CLUSTER Add heuristics to ha_ndbcluster::records_in_range() which identifies a range as: - An open bound range  (<column> LT/GT <bound) - A closed bound range (<column> BETWEEN <low> AND <HIGH>) - A (partial) EQ-range (<column> EQ <bound>) ... Or a combination of these.... These are handled as follows: Open bound ranges ----------------- Without a histogram of how the values in the index are distributed, we can only assume an equal distrubution. A statistically correct estimate for a condition of the form '<column> LT/GT <bound>' would then have been to assume it selects 50% of the rows in the table. However, I have experienced that this will cause the range-cost to directly compete with the cost of a full table scan. We should therefore be somewhat more conservative and estimate 10% of the rows to be returned. Closed bound range ------------------ We assume this to be somewhat better than an open bounded range returning 5% of the rows in the table. EQ-range -------- An EQ-range will excatly specify a fraction of the first part of an index. It is reasonable to assume: - Specifing a larger fraction of the index will improve the selectivity of the EQ-range. - Each part of the specified EQ-range will have the same selectivity. We can model this as a Binomial Distribution of the indexed values. http://en.wikipedia.org/wiki/Binomial_distrib 	a18738f4ecbb6d05730516e7a9750c0da6891905
----------------------------
vs-config option to ctest made not dependent on Windows 	416e92e3bbc1b8baa7c944eb868620c1aa5b7d15
----------------------------
11766640 follow-up: fix for VS_CONFIG on Windows 	7ede6ce344ad7d4accacd5a04dad3e1fbe019e5a
----------------------------
Revert the max value of innodb_purge_batch_size to 5000. 	759d346e6728c3bebbbed69651cced96447bf0c7
----------------------------
Merge: 4d1e3fb a8eeb8c bug#11766160 Test rpl.rpl_stm_000001 fail on Valgrind with binlog-checksum enabled merging from local bugfixing branch to refer to the bug id in the Oracle's scale. 	c8f193a8eccf6825d96946d7e5ebf11235e4d3d7
----------------------------
ndb - yet another fix for test_mgmd, previous fix revealed that a failed config change was simply ignored in some cases...current fix prevent the config change to even start if another node is about to start one 	28001d1eca77c2de96d735c6f27222dc35cbc325
----------------------------
Bug #59205 Test rpl.rpl_stm_000001 fail on Valgrind with binlog-checksum enabled Most probably it was a timeout cause by logics of the test producing rather big volume of data. Optimizing the test to produce less load still without harming the tests original logics. 	a8eeb8cf4f0bf99187ee9e278dee265df1fd18ad
----------------------------
Bug #11766227: InnoDB purge lag much worse for 5.5.8 versus 5.1 Bug #11766501: Multiple RBS break the get rseg with mininum trx_t::no code during purge Bug# 59291 changes: Main problem is that truncating the UNDO log at the completion of every trx_purge() call is expensive as the number of rollback segments is increased. We truncate after a configurable amount of pages. The innodb_purge_batch_size parameter is used to control when InnoDB does the actual truncate. The truncate is done once after 128 (or TRX_SYS_N_RSEGS iterations). In other words we truncate after purge 128 * innodb_purge_batch_size. The smaller the batch size the quicker we truncate. Introduce a new parameter that allows how many rollback segments to use for storing REDO information. This is really step 1 in allowing complete control to the user over rollback space management. New parameters: i) innodb_rollback_segments = number of rollback_segments to use (default is now 128) dynamic parameter, can be changed anytime. Currently there is little benefit in changing it from the default. Optimisations in the patch. i. Change the O(n) behaviour of trx_rseg_get_on_id() to O(log n) Backported from 5.6. Refactor some of the binary heap code. Create a new include/ut0bh.ic file. ii. Avoid truncating the rollback segments after every purge. Related changes that were moved to a separate patch: i. Purge should not do any flushing, only wait for space to be free so that it only does purging of records unless it is held up by a long running transaction that is preventing it from progressing. ii. Give the purge thread preference over transactions when acquiring the rseg->mutex during commit. This to avoid purge blocking unnecessarily when getting the next rollback segment to purge. Bug #11766501 changes: Add the rseg to the min binary heap under the cover of the kernel mutex and the binary heap mutex. This ensures the ordering of the min binary heap. The two changes have to be committed together because they share the same that fixes both issues. rb://567 Approved by: Inaam Rana. 	9d6d1902e091c868bb288e0ccf9f975ccb474db9
----------------------------
ndb - fix a race in testMgmd -n Bug56844, refuse CONFIG_CHECK if config-change is pending 	53391d281ac781a941024e5492522faa8f9311e1
----------------------------
ndb - add MCP patch for WL3733 slave_allow_batching - update sys_vars.slave_allow_batching testcase 	dca13a6181e82d085662887b504cbf22dd80a532
----------------------------
Merge: 57188ae 6ae9c15 Merge removal of unused HAVE_NDBCLUSTER_DB define 	e45c637ba019134cdd678bca353ef1824c3e9f7c
----------------------------
"Remove last traces of HAVE_NDBCLUSTER_DB define - it has not had an effect in a long time and is just confusing. At the same time backport the removal of OPT_NDB_CONNECTSTRING and OPT_NDBCLUSTER values from ""enum options_client"" "	6ae9c15048cc163a583001669ec1c33fd41db84c
----------------------------
"ndb - ifdef code which removes a table in ndbcluster_find_files(), used by SHOW TABLES and ""SELECT * from I_S.TABLES"" since mysql_rm_table_part2() it removed in 5.5.8. This will cause ndb_team.ndb_autodiscover3.test to fail. "	9039982bbc2fd624249c9629ed37a18db29810c5
----------------------------
ndb - remove unused ndbcluster_handle_alter_table() 	bd71bcd8d88ed2f347c40e8c9725a7233d14b93d
----------------------------
ndb - remove unused ha_ndbcluster::ha_initialise() 	d1e3bd84340be579192ffc31cfcdb2e2474de009
----------------------------
Disable this test when running 'mtr --mem' With --mem if fails with +UNEXPECTED ERROR NUMBER: 1290 In var/log/mysqld.2.err we have: [ERROR] LOAD DATA INFILE in the slave SQL Thread can only read from --slave-load-tmpdir. Please, report a bug. [ERROR] Slave SQL: Error 'The MySQL server is running with the --slave-load-tmpdir option so it cannot execute this statement' on query. Default database: 'test'. Query: 'LOAD DATA INFILE '../../tmp/SQL_LOAD-2-1-1.data' INTO  TABLE `t1` FIELDS TERMINATED BY '\t' ENCLOSED BY '' ESCAPED BY '\\' LINES TERMINATED BY '\n' (`a`, `b`)', Error_code: 1290 getcwd() in the server yields something like: /dev/shm/var_auto_iv5Q/mysqld.2/data 	26077d8dcb44af9e0512a684200c0350d47764fc
----------------------------
"ndb - cherrypick from 5.5-telco-7.0 - Straigthen up the interface of ndb_binlog allowing to hide its internals -- Rename ndbcluster_setup_binlog_table_shares to ndb_binlog_setup and make it return true or false for sucess/fail -- Make ""ndb_binlog_tables_inited"" variable local to ha_ndbcluster_binlog -- Add function ndb_binlog_is_read_only() which return false as long as the binlog is not ready and we only allow to open tables in read only mode. -- Make ""ndb_binlog_is_ready"" variable local to ha_ndbcluster_binlog -- Remove the first call to ndb_binlog_setup, calling it once every second until it succeeds and regularly thereafter should be enough. "	ce73f1a2f1b0df676b85608175d2970431ab5b83
----------------------------
ndb - remove unimplemented declaration, ha_ndbcluster::alter_tablespace 	d875b6b929f741c29ae48aabc00ebbdeba0f3465
----------------------------
WL#5185 Remove SQL_MAX_JOIN_SIZE system variable THe SQL_MAX_JOIN_SIZE system variable was deprecated in MySQL 5.1, and is now removed.  Use MAX_JOIN_SIZE instead. 	5499f3d47330667229d10a2d0d44afa2e2c37731
----------------------------
"ndb - fix ndb_binlog_ignore_db testcase by removing the unneccessary ""drops"" in beginning of testcase and thus the binlog should be empty since it should all have been filtered away by the --binlog-ignore-db=mysqltest argument which mysqld was started with - add one more statement which shouldn't be binlogged either "	eb23b32f883256304b722ddcd80d44f5f2cc65af
----------------------------
"Fix for BUG#59894 ""set optimizer_switch to e or d causes invalid memory writes/valgrind warnings"": due to prefix support, the argument ""e"" was overwritten with its full value ""engine_condition_pushdown"", which caused a buffer overrun. This was wrong usage of find_type(); other wrong usages are fixed here too. Please start reading with the comment of typelib.c. "	77c0f33ee2b2ad46088364630275735f9d744ed2
----------------------------
Bug #59214 :increase rate limit for insert buffer prefetch reads rb://593 approved by: Marko 1) Make ibuf size configurable. Current behavior is to have a maximum on-disk size equal to half the buffer pool size. This patch introduces a new parameter: innodb_change_buffer_max_size = default 25, min 0, max 50. Value means %age of buffer pool size. Dynamic. 2) Make ibuf merge more aggressive: * upto ibuf::size < ibuf::max_size / 2, merge at PCT_IO(5) same as current. And should be good for most of the workloads. * when ibuf::size > ibuf::max_size / 2, merge at PCT_IO(5) + PCT_IO(excess difference in % of max_size) 	4479af1a47e1d44d8dd632c66fbc44b146f84e36
----------------------------
Bug#56124: implement global variable to show current value of core-file implements feature, adds tests. 	e84d1634413c183eba1488269e357b3546f890e5
----------------------------
ndb - make the code that creates the ndb_* system table use the Ndb_local_connection class. - merge the two identical implementations for creating ndb_schema and ndb_apply_status into a parametrized fucntion 'create_sys_table' - write two wrapper functions for working with the ndbcluster_open_tables HASH - rename ndbcluster_create_ndb_apply_status_table to ndb_apply_table__create - rename ndbcluster_create_schema_table to ndb_schema_table__create 	d6078ddc93c3f8061016808007654840e6ac4910
----------------------------
ndb - Change 'ndbcluster_reset slave' to use Ndb_local_connection to delete all rows from mysql.ndb_apply_status 	f73701764ef1079ef1eafb85e8619f6f2f9161b0
----------------------------
ndb - Use Ndb_local_connection to delete rows from mysql.ndb_binlog_index as part of 'ndbcluster_binlog_index_purge_file' 	f5b7ef21d7e0ddcd7c9b95d06af6a4ad36d5bb36
----------------------------
ndb - Use the new Ndb_local_connection class to truncate mysql.ndb_binlog_index table in 'ndbcluster_reset_logs' - Remove old unimplemented mysql_truncate_table wrapper from glue 	859774283612f13047f31513ee1fe258675991ce
----------------------------
"ndb - Straigthen up the interface of ndb_binlog allowing to hide its internals -- Rename ndbcluster_setup_binlog_table_shares to ndb_binlog_setup and make it return true or false for sucess/fail -- Make ""ndb_binlog_tables_inited"" variable local to ha_ndbcluster_binlog -- Add function ndb_binlog_is_read_only() which return false as long as the binlog is not ready and we only allow to open tables in read only mode. -- Make ""ndb_binlog_is_ready"" variable local to ha_ndbcluster_binlog -- Remove the first call to ndb_binlog_setup, calling it once every second until it succeeds and regularly thereafter should be enough. "	d18818bdb2f6ef2da33b1022dc22f60cd6c55af2
----------------------------
"ndb - move declaration of ndb_binlog_thread_func to ""local scope"" inside ha_ndbcluster_binlog.cc "	248a3e0dba53d87b4cc4b254ee832faa027f4a3e
----------------------------
Bug #59632, post-push fix for unit test. thd->thread_stack must point to the stack, not free-store. Also: add an extra 'mysys' to the link command for SERVER_TESTS. (it failed to link on debian) 	30391363196fc6b8c293994d5216fa0091ef0458
----------------------------
ndb - install ndbcluster_alter_table_flags to handlerton if ALTER ONLINE is not supported 	d8c3c9862432c587810d9a055873d4abec9e4a7c
----------------------------
"Fix  Bug #56581  	RPM scripts use hardcoded datadir location When fixing the 27072 bug, the shell snippets running before/after a RPM upgrade got expanded to look at files in the data directory and at the PID file. In this expansion, the standard locations were used. There are users who configure their installations to use non-standard locations for the data directory, the PID file, and other objects. For these users, the fix of 27072 did not work. As a result, the fact that a server was running at upgrade start was not noticed, and the new server was not started after the upgrade. With this patch, the shell snippets now try to get these locations from ""my_print_defaults"" before falling back to the defaults. Now, the fact that the old server is running is again noticed (even with non-standard locations), and the new server is started. Also, the upgrade log is written to the correct data directory. "	796672c44b350a856621193a5b67e5e91aef38e3
----------------------------
Fixes for Bug #55755 and Bug #52315 part 2 Bug #55755 : Date STD variable signness breaks server on FreeBSD and OpenBSD * Added a check to configure on the size of time_t * Created a macro to check for a valid time_t that is safe to use with datetime functions and store in TIMESTAMP columns. * Used the macro consistently instead of the ad-hoc checks introduced by 52315 * Fixed compliation warnings on platforms where the size of time_t is smaller than the size of a long (e.g. OpenBSD 4.8 64 amd64). Bug #52315: utc_date() crashes when system time > year 2037 * Added a correct check for the timestamp range instead of just variable size check to SET TIMESTAMP. * Added overflow checking before converting to time_t. * Using a correct localized error message in this case instead of the generic error. * Added a test suite. * fixed the checks so that they check for unsigned time_t as well. Used the checks consistently across the source code. * fixed the original test case to expect the new error code. 	59f68983ffee45616a8ec255b5f13535236dd0ea
----------------------------
Fix Bug #59225 Deadlock between DML and innodb_adaptive_hash_index=OFF rb://587 approved by Marko 	a746fd324e56ff8c0c185f5a8d82d9ccd84e4099
----------------------------
ndb - improve NDB version extraction code for cmake - the NDB_VERSION_XX variables should be INTERNAL, they can't be edited by user(in such chase, change ndb_configure.m4) 	3a1822a7d980983b6a74c5f275cd13be9f723202
----------------------------
Bug#57437 CREATE TEMPORARY TABLE LIKE with ENGINE=NDBCluster causes mysqld crash?: Catch attempt to define temporary table in create method and return error 	8ad1122dea011973a697cf115cc74a7c0a98efce
----------------------------
Bug#57525: Semijoin transformed subquery with inner grouped subquery gives empty result. This is a followup to bug#31480, which attempted to fix resolved information in subqueries as part of semijoin transformation. The specific problem here is that the inner subquery (which is not transformed) contains an outer reference to the outer-most block in its HAVING clause. The HAVING clause is represented by Item_ref objects, and these are not re-resolved properly through fix_after_pullout(). The solution lies in realizing that Item_ref objects contain a complete set of resolution data structures (ie depended_from, name resolution context), and that it may point to an Item object with it's own set of resolution data structures. Hence, we implement fix_after_pullout() for Item_ref by first calling fix_after_pullout() on the referenced object and then for itself. The above fix revealed another problem: The offending query failed in prepared statement mode. The reason is that the depended_from field in Item_ref is reset in cleanup() and not restored at the next fix_fields() call. The problem is fixed by not resetting the depended_from flag. This is an acceptable solution, as long as transformations are run only on the first execution of a query. There is also another followup to bug#31480: A - t1 \ B - t2 \ C - t3 \ D - t4 where t1.x=t4.y The above figure describes an outer query expression (select_lex A) with 3 nested subqueries represented by select_lex B, C and D. The innermost subquery (D) contains a reference to a table t1 in the outermost block (A). The original resolver marked the subquery containing query expression B as using table t1, and the subqueries containing query expressions C and D with OUTER_REF_TABLE_BIT. The code in bug#31480 failed to preserve all outer references when calling fix_after_pullout(). mysql-test/r/optimizer_switch.result Updated with correct result and plan for query that exposed bug. mysql-test/t/optimizer_switch.test Warnings about wrong results removed. sql/item.cc A common implementation of fix_after_pullout() for all Item_ref classes has been made. The exception is Item_outer_ref which we still have no test case for. Item_ref::fix_after_pullout() now calls fix_after_pullout() on the referenced item, and then it calls Item_ident::fix_after_pullout() on itself. Item_field::fix_after_pullout() is also moved to class Item_ident, which is parent class for both Item_field and Item_ref. A new function Item_ref::resolved_used_tables() was needed. sql/item.h Some adjustments to function prototypes, see sql/item.cc. sql/item_subselect.h One changed friend declaration. 	0769f1a6b4d7508244a8117986d3d6a9210e7f34
----------------------------
ndb - fix problem with extracting the long cluster version string from config ure.in - apply MCP patch for bug57843 	5f744200701e220281b8a6bc66294db6b1591906
----------------------------
Bug#48387: Log the start and stop of init_file execution Parenthesizes init-file results, if any, with the file's name in the log so it's more obvious where the statements were read from. 	97748e0f8085dc4d4ecd2000db700b3299d0322f
----------------------------
ndb - take exclusive metadata locks before before calling 'mysql_rm_table_part2' - NOTE! at least this will work  until we merge in 5.5.8 where 'mysql_rm_table_part2' has been removed. - Inspired by Dlenev's patch for ha_ndbcluster in 5.5 	7cf71d6c33874d019ac5980b717c4b845cba722f
----------------------------
ndb - ha_ndbcluster uses push_warning_printf with WARN_LEVEL_ERROR a _lot_ to make it possible for the user to see the real error which was reported from ndb. -It's unfortunately no longer allowed to use WARN_LEVEL_ERROR with push_warning to push a warning that says ERROR on the warning stack. - Since there is code in puch_warning that automatically downgrades all WARN_LEVEL_ERROR to WARN_LEVEL_WARN, just remove the DBUG_ASSERT for now. - This causes different outpu, but may be a good change. Let's see. 	b3f328d548c4abb507b7e743139cd0131c130b44
----------------------------
ndb - Remove all uses of LOCK_open except the one place around the call to 'assign_new_table_id' which is necessary to protect the global counter variable. - Inspired by Kostjas patches to ha_ndbcluster in 5.5 	dc3a2b55f55a0dfa0c64763b531fe8f9561108ff
----------------------------
ndb - prevent alloc_node_id to success before get_config succeeds 	790ec0f6ee9a3d1b17f4c63310e752625c7b8106
----------------------------
This commit is a small refactoring of ha_ndbcluster::make_pushed_join(): * Local variables made const where possible. * Overly long lines broken. This commit also removes a seemingly redundant permutation of root operation operands. 	f16639a3c01698a3d5e0da4b8cbbc2ee4d1238d9
----------------------------
This commit moves entities related to pushing queries from ha_ndbcluster.cc/.h into new source files ha_ndbcluster_push.cc/.h. This is purely a refactoring (i.e. no functional changes). 	1980540edcd0dac89c228272f73d6b5902d06640
----------------------------
Fix for bug#59517: 'Incorrect detection of single row access in ha_ndbcluster::records_in_range()' The logic for detecting a range being an excact match on a single row has been corrected. Added a new MTR test 'ndb_statistics' intended for testing statistics returned from ha_ndbcluster 	000a4a02aa4da37fd971319e2eb9a7574fd6b65a
----------------------------
Merge: e78a452 3712d6c Merge from mysql-5.5 for sys_vars.innodb_max_dirty_pages_pct_func fails sporadically 	9146793acf0138c74ce4db1bb5434116c7114edc
----------------------------
Merge: f6e9720 f25ab9f Merge from mysql-5.1 for sys_vars.innodb_max_dirty_pages_pct_func fails sporadically 	3712d6c12ff8054c7b2d7c11334e70891978e62b
----------------------------
"BUG#58858 : sys_vars.innodb_max_dirty_pages_pct_func fails sporadically Committing After latest merge. Modified check_pct procedure to check return value of wait condition instead of calling ""dirty_pct"". Adding Review comments: 1) Added comment for success variable value 2) Procedure check_pct changed For Adding BOOLEAN input and SELECT QUERY Change "	f25ab9fe22cd7823a65fd186aa0e6d4d2ea9be91
----------------------------
BUG#59499: mtr check fails for some replication tests due to ipv6 By the time mtr processes the test file completely, the slave's parameter MASTER_HOST exhibits a different value from the one that was set when mtr had started processing the file. This was caused by test cases that mess around with CHANGE MASTER TO MASTER_HOST=... command and never restore the variable to its original value (instead they restore it to a default value that varies depending on ipv6 is available or not). We fix this by saving (at the beginning) and restoring back (at the end) the value for MASTER_HOST slave configuration parameter. 	fc9a8806cbd07960e8ef85ba9d9ba517dcc5a3cd
----------------------------
Updated fix for Bug#58791 'Incorrect result as Cluster may fail to reject an unpushable condition' ha_ndbcluster::cond_push() should reject to push any condition which refer fields outside the scope of 'this' table. The rejection of pushing should be signaled by returning the remaining unpushed condition - or entire 'cond' if nothing was pushed. Also fixes two existing bugs in ha_ndbcluster::cond_push where we should return 'cond' instead of 'NULL' to signal that the condition was unpushable (Due to memory alloc failure.) 	c53f87ed878543ebf4e47d5127f59894b995f641
----------------------------
Fix for bug##58750: 'out of connection objects' due to missing close() of prev. full_table_scan()' If ha_ndbcluster::read_range_first_to_buf() had to do a ::full_table_scan() on a UNIQUE_INDEX, the resulting ScanOperation was not properly closed at end of its lifetime. If lots of such operations is executed within the same transaction, we will eventually run out of operation or transaction objects. (Transaction objects is due to a dumnmy Hupp'ed transaction object is allocated as part of a ScanOperation) This fix ensures that ::close_scan() is called for any open cursors at start of ha_ndbcluster::read_range_first_to_buf(). 	ae4556d4a39616ee3ed116e0dc0f7b00a43b2db2
----------------------------
BUG#57953 my_load_defaults return junk argument ----args-separator---- to caller After fix of bug#25192, load_defaults() will add an args separator to distinguish options loaded from configure files from that provided in the command line. One problem of this is that the args separator would be added no matter the application need it or not. Fixed the problem by adding an option: bool my_getopt_use_args_separator; to control whether the separator will be added or not. And also added functions: bool my_getopt_is_args_separator(const char* arg); to check if the argument is the separator or not. 	b695495ea7ad57b2f2b4e7f73c179b7c3d056402
----------------------------
"Fix Bug#30423 ""InnoDBs treatment of NULL in index stats causes bad ""rows examined"" estimates"". This change implements ""innodb_stats_method"" with options of ""nulls_equal"", ""nulls_unequal"" and ""null_ignored"". rb://553 approved by Marko "	669ce69483b801599f9dfd9890b4dbb2e60ff03e
----------------------------
Bug#56895 part 2 of 2: Backport of revid holyfoot@mysql.com-20100825135522-8wrjjmvh2u2t0qo6 from mysql-5.5. Without this patch mysqlhotcopy tests would fail due to not finding the mysqlhotcopy tool in release-like builds. With this patch the tests would either pass, or fail due to missing Perl modules (see 56817). Text conflict in mysql-test/mysql-test-run.pl: - resolved by using logic from 5.5 to find mysqlhotcopy, the intention of this backport. Changed bindir to basedir. 	4a62ee2c95e93b2a985aef44ca4fb78cd941b1de
----------------------------
ndb - add support for compiling ha_ndbcluster against a server without --server-id-bits 	6a40c371304a827cc72abf726dd1ea74efb128d4
----------------------------
BUG#59444: rpl_row_show_relaylog_events fails on daily-5.5 test runs The test started failing on the same day patch for BUG 49978 was pushed. BUG 49978 changed part of the replication testing infrastructure in mysql-test-run. This caused the test to fail sporadically with result differences on relay log file names. When the test fails the relay-log filenames are shifted by one, eg: -show relaylog events in 'slave-relay-bin.000002' from <binlog_start>; +show relaylog events in 'slave-relay-bin.000003' from <binlog_start>; The problem was caused by a bad cleanup when using the include files: - include/setup_fake_relay_log.inc - include/cleanup_fake_relay_log.inc Which would leave a spurious relay-log file around (not listed in slave-relay-bin.index), causing the server to shift the name of the relay logs by one, even if cleaning up with RESET SLAVE. We fix this by removing the relay-log file when it is not needed anymore, ie at setup time and after recreating the fake relay-log index. Additionally, to make the affected test more resilient, we deployed a call to rpl_reset.inc (which resets both master and slave, including log files) before actually running the test case. Finally, appart from the reported bug, we also fix: (a) an unrelated issue with the failing test itself - in some cases, the test was not setting the log file name to use when it should; (b) one typo. 	ac8e0ec1b18e4f16e4db06c2d1b246612df83857
----------------------------
BUG#59267 LOAD DATA LOCAL INFILE not executed on slave with SBR On windows, an #endif in a wrong place was causing an early return from mysql_load and thus the LOAD DATA LOCAL was not executed. This problem was fixed by moving the #endif to the right place. The following code was missing if ((stat_info.st_mode & S_IFIFO) == S_IFIFO) is_fifo = 1; which is required to properly configure and read from the IO_CACHE when a named pipe is used. So it was re-introduced before the #endif. 	c04979b84127ef8aa435368d1281bfb4322e0054
----------------------------
ndb - newly added asserts to NdbMutex detected that ConfigManager-thread exits while keeping a mutex...add unlock prior to exiting thread 	8634ad57974141db6aa1af0ba2f5df87942f4ccd
----------------------------
"Fixed Bug#58887	- server not throwing ""Packet too large"" error if max_allowed_packet >= 16M. This bug was introduced by patch for bug#42503. This patch restores behaviour that there was before patch for bug#42503 was applied. "	5bd50b80a75d4d5246e40d032e14397bcde036bb
----------------------------
Remove configuration preprocessor symbols 'THREAD' and 'THREAD_SAFE_CLIENT'. As of MySQL 5.5, we no longer support non-threaded builds.   This patch removes all references to the obsolete THREAD and THREAD_SAFE_CLIENT preprocessor symbols.  These were used to distinguish between threaded and non-threaded builds. 	ebd24626ca38e7fa1e3da2acdcf88540be70fabe
----------------------------
ndb - add #cmakedefines for new configure checks to ndb_config.h.in 	a8568f2432845c4af8d8273e034b5fe7d858dc64
----------------------------
BUG#59123 rpl_stm_binlog_max_cache_size fails sporadically with found warnings rpl_stm_binlog_max_cache_size.test fails sporadically on PB2 daily-trunk-bugfixing with binlog-checksum enabled, the expected incident error message was not properly suppressed, and the incident message would have extra strange characters appended. The cause is that the incident error message restored from log event is not properly ended with '\0'. This does not cause problem normally because the error message is at the end of the event, and we add a '\0' at the end of an event. but when binlog-checksum is enabled, the checksum value will be after the message, and so extra strange characters could be shown and cause the suppression rule to fail. Fixed the problem by allocate memory for the string and added '\0' at the end of the message. 	81dd79a75fe83b147cd52ad3257916abfa299abe
----------------------------
"Bug#51631 general-log flag doesn't accept ""on"" as a value in the my.cnf, works as command Different parsing mechanisms are used for command line/my.cnf options  and the SQL commands.  The former only accepted numeric arguments, and regarded all numbers different from 0 as 'true'.  Any other argument was parsed as 'false' . This patch adds the words 'true' and 'on' as valid truth values for boolean option arguments. A test case is not provided, as the fix is simple and does not warrant a separate test file (no existing suitable test file was found) (backported from mysql-trunk) "	d690da668ee7b46d50afc28dd8076682523ecfa4
----------------------------
ndb - add configure checks for __builtin_ffs and ffs 	84b12acb2b86b4a71e8e9a06be0be536b3317712
----------------------------
Followup to vasil.dimov@oracle.com-20110107091222-q23qpb5skev0j9gc Do not use nested AC_CHECK_FUNC() because they result in: ./configure: line 52688: syntax error: unexpected end of file (which happens only on some platforms and does not happen on others, I have no idea what is the reason for this) 	c4aee1b45a7b435dc5ea55a47a79052eb6dd7bcf
----------------------------
"Fix for Bug#47745 innodb.innodb-timeout fails sporadically - Second scenario checked: Ensure via wait routines that the commit comes after the processing of the statement which should get finally the ER_LOCK_WAIT_TIMEOUT --> This should prevent the current bug. - First scenario checked: Ensure via wait routines that the statement is already waiting for getting the lock before the commit is given. --> No effect on the current bug, but ensure that the right scenario is reached. - Take care that disconnects are finished before the test ends. --> Reduce the potential to harm succeeding tests. - ""Mangle"" the printout of the current default innodb_lock_wait_timeout value --> No need to adjust the test in case the default gets changed in future. "	d09ed4e08ce6dfeba6caf239e4649cdcd2c69b9d
----------------------------
Remove configuration preprocessor symbols 'THREAD' and 'THREAD_SAFE_CLIENT'. As of MySQL 5.5, we no longer support non-threaded builds.   This patch removes all references to the obsolete THREAD and THREAD_SAFE_CLIENT preprocessor symbols.  These were used to distinguish between threaded and non-threaded builds. 	bad28ea48c0cd6786001916df04ae78d92d9e2d4
----------------------------
BUG#59079 rpl_binlog_errors.test fails when enables binlog-checksum The test case dependent on the size of incident event to calculate the event offset, howerver, the size of Incident_log_event is different when binlog-checksum is enabled, and caused the test case to fail. Fixed the problem by use the event sequence number instead event log file position to locate the incident event. 	c11f3308c9d73c87c299c0a2569d91f18ef80e7c
----------------------------
ndb - bug#57568 This patch makes 7.0 behave same as 6.3 wrt. really big allocations. The core idea of patch is to alloc all memory (still) at startup map memory needed for startup (job buffers + transporter buffers) and then let CMVMI via NDBFS map rest (map = touch each page and optionally memlock) 	47ca783becc232265fabccd0ff2946121dd3fef2
----------------------------
BUG#49978: Replication tests don't clean up replication state at the end Major replication test framework cleanup. This does the following: - Ensure that all tests clean up the replication state when they finish, by making check-testcase check the output of SHOW SLAVE STATUS. This implies: - Slave must not be running after test finished. This is good because it removes the risk for sporadic errors in subsequent tests when a test forgets to sync correctly. - Slave SQL and IO errors must be cleared when test ends. This is good because we will notice if a test gets an unexpected error in the slave threads near the end. - We no longer have to clean up before a test starts. - Ensure that all tests that wait for an error in one of the slave threads waits for a specific error. It is no longer possible to source wait_for_slave_[sql|io]_to_stop.inc when there is an error in one of the slave threads. This is good because: - If a test expects an error but there is a bug that causes another error to happen, or if it stops the slave thread without an error, then we will notice. - When developing tests, wait_for_*_to_[start|stop].inc will fail immediately if there is an error in the relevant slave thread. Before this patch, we had to wait for the timeout. - Remove duplicated and repeated code for setting up unusual replication topologies. Now, there is a single file that is capable of setting up arbitrary topologies (include/rpl_init.inc, but include/master-slave.inc is still available for the most common topology). Tests can now end with include/rpl_end.inc, which will clean up correctly no matter what topology is used. The topology can be changed with include/rpl_change_topology.inc. - Improved debug information when tests fail. This includes: - debug info is printed on all servers configured by include/rpl_init.inc - User can set $rpl_debug=1, which makes auxiliary replication files print relevant debug info. - Improved documentation for all auxiliary replication files. Now they describe purpose, usage, parameters, and side effects. - Many small code cleanups: - Made have_innodb.inc output a sensible error message. - Moved contents of rpl000017-slave.sh into rpl000017.test - Added mysqltest variables that expose the current state of disable_warnings/enable_warnings and friends. - Too many to list here: see per-file comments for details. 	09c80e12c535b080eaf914ed25dbf79546494030
----------------------------
bug#51925: 5.5 installed header file layout is incorrect The 'mysql' include sub-directory was copied directly into include/ rather than retaining its own directory. Fix this, and update mysql_config which needs additional logic to detect the correct prefix for includes. 	a3deb16810cef3181350e77c87f33fc044ced0b1
----------------------------
bug#58955: Must -DBUILD_CONFIG=mysql_release require libaio on Linux Allow users to build without aio if they really want to, by passing -DIGNORE_AIO_CHECK to cmake. 	caebacaf93a758f5a35f85cb814a5b76402a1f3d
----------------------------
BuG#58913: rpl_lcase_tblnames_rewrite_db & rpl_stm_lcase_tblnames fails on Mac OSX The following three test cases fail on Mac OSX because they assume that the lower_case_table_names is set to 0 on the master by default (which is not the case on MacOSX - defaults to 2 - nor on Windows - defaults to 1): - rpl.rpl_row_lcase_tblnames - rpl.rpl_stm_lcase_tblnames - rpl.rpl_lcase_tblnames_rewrite_db This causes a result mismatch when the tests are run on such platforms. However, the tests are configured to be skipped on windows, so this issue does not show up on that platform, only on Mac OSX. We fix this by masking out the part of the result that is different on Mac OSX and other platforms. 	de31c640682a59dcada53aa9cd4c03f0ce841608
----------------------------
Bug #58914: Valgrind warning in rpl_make_log_name() Adding calls to my_free to free the memory allocated for: - log_bin_basename - log_bin_index - relay_log_basename - relay_log_index 	6308d4cca31b4a8a690c975ab3b386e1c9b250cb
----------------------------
"Implement WL#5674 InnoDB: report all deadlocks (Bug#1784) Bug#1784 ability to log details on all deadlocks When InnoDB encounters a deadlock it prints the information to a dedicated file. Later when SHOW ENGINE INNODB STATUS is called, it reads the data from this file and sends it to the user. When a new deadlock occurs, the dedicated file is rewind(3)ed and the information about the new deadlock is printed into it. The implementation of this WorkLog simply duplicates what is printed into the dedicated file into stderr. A new configuration parameter is added --innodb-print-all-deadlocks (off by default) which when enabled causes the deadlock info to be printed to stderr. Approved by:	Jimmy (rb://533) "	8bbb9e8ec596d885a70008ee1f03cd4b92ee4557
----------------------------
55222 - Previous patch had a bug in unused code which was reactivated in mysql-trunk-innodb in rev revno: 3367  Tue 2010-12-07 02:25:25-0800. The crash happens only when lower_case_table_names=2, such as on MacOS, when running the new testcase innodb-system-table-view.  Specifically, it crashes when any query is made against the INFORMATION_SCHEMA. INNODB_SYS_FOREIGN table.  The function dict_process_sys_foreign_rec() is only used for displaying SYS_FOREIGN records so it does not need a lookup version of those names to be allocated. In this patch, those new function calls are deleted. 	9fef50565ef86ab4660a4cd38a756caa42e7a8e0
----------------------------
Fix for bug #58669: read_only not enforced on 5.5.x merged from mysql-5.5.8-release tree, revision: ramil@mysql.com-20101203174908-217tdkn150vieha9 	d33574fbf747aac57fc9f16b669ee92ad66d06f6
----------------------------
BUG#58762: rpl.rpl_packet fails in the weekly PB2 run The test contains an assertion that depends on an exact match on mysqlbinlog output. However, mysqlbinlog output changes when checksums are ON, because it adds the checksum description as well. This makes the test case to fail when running it with --mysqld=--binlog-checksum=... The fix is to rewrite the assertion so that the pattern matching is made crc agnostic. To do this we resort to perl instead of mysql text function INSTR. 	11de29db11f56b70b953c1df1ca642a695a0255e
----------------------------
SPJ-scan-scan: Cherry picked fix for bug#58750. If ha_ndbcluster::read_range_first_to_buf() had to do a ::full_table_scan() on a UNIQUE_INDEX, the resulting ScanOperation was not properly closed at end of its lifetime. If lots of such operations is executed within the same transaction, we will eventually run out of operation or transaction objects. (Transaction objects is due to a dumnmy Hupp'ed transaction object is allocated as part of a ScanOperation) This fix ensures that ::close_scan() is called for any open cursors at start of ha_ndbcluster::read_range_first_to_buf(). 	4a59cb7e2de1ab9651a69a1bea0ae11023e2f50a
----------------------------
Merge: 22ccfaa 304d9a6 Merge opt-backporting => opt-team Text conflict in mysql-test/r/index_merge_myisam.result Text conflict in mysql-test/r/mysqld--help-notwin.result Text conflict in mysql-test/r/mysqld--help-win.result Text conflict in mysql-test/suite/sys_vars/r/optimizer_switch_basic.result Failing test(s): main.index_merge_myisam main.join_cache_jcl4 main.myisam_mrr main.myisam_mrr_cost main.myisam_mrr_cost_icp main.myisam_mrr_icp main.mysqld--help-notwin sys_vars.optimizer_switch_basic 	993bc51372c36057d1b459f34fc264cdc9fcd0fa
----------------------------
"Fix for bug #58669: read_only not enforced on 5.5.x Problem: ""read-only"" option ignored if it's enabled in the command line (or in the config file). Fix: sync opt_readonly (which is used for checks) with read_only (global var) when all server options are handled. "	93efc7e2c4bc8cffa235f2406db3bdaf4180189d
----------------------------
ndb - fix rare bug with conflicting file-names for config-testing 	b1fb69578a184a43bba4b5e7292673afbaaf34c3
----------------------------
Merge: 4a6832e 357df02 Merge next-mr-opt-backporting => next-mr-opt-team Text conflict in mysql-test/r/index_merge_myisam.result Text conflict in mysql-test/r/mysqld--help-notwin.result Text conflict in mysql-test/r/mysqld--help-win.result Text conflict in mysql-test/suite/sys_vars/r/optimizer_switch_basic.result Failing test(s): main.join_cache_jcl1 main.join_cache_jcl2 main.join_cache_jcl3 main.join_cache_jcl4 	e9b7aef155d415a7adfb9a956f5be03e65031a14
----------------------------
Merge: 69c8627 fd0f7aa Merge next-mr-opt-backporting => next-mr-opt-team Text conflict in mysql-test/r/group_by.result Failing test(s): main.group_by main.join_cache_jcl2 main.join_cache_jcl3 main.join_cache_jcl4 sys_vars.optimizer_join_cache_level_basic 	4fe7e432faa839866824b882003ff76d8d86410e
----------------------------
Bug#55222 - RB://517 - Approved by Sunny InnoDB does not attempt to handle lower_case_table_names == 2 when looking up foreign table names and referenced table name.  It turned that server variable into a boolean and ignored the possibility of it being '2'. The setting lower_case_table_names == 2 means that it should be stored and displayed in mixed case as given, but compared internally in lower case. Normally the server deals with this since it stores table names.  But InnoDB stores referential constraints for the server, so it needs to keep track of both lower case and given names. This solution creates two table name pointers for each foreign and referenced table name.  One to display the name, and one to look it up.  Both pointers point to the same allocated string unless this setting is 2.  So the overhead added is not too much. Two functions are created in dict0mem.c to populate the ..._lookup versions of these pointers.  Both dict_mem_foreign_table_name_lookup_set() and dict_mem_referenced_table_name_lookup_set() are called 5 times each. 	a53845ca4571210168f419ba12b098f0faddf463
----------------------------
"WL#5692 ""Enable Disk-Sweep Multi-Range Read optimizer feature"". This patch contains the second part of this worklog. With this change the MySQL server will be built with support for the Multi-Range Read (MRR) feature. The default will be that cost-based MRR will be enabled. The following changes to MySQL are implemented: 1. Enable disk-sweep Multi-Range Read for MyISAM and InnoDB With this feature enabled the optimizer will consider to use the disk-sweep multi-range read strategy when reading a range of records using a secondary index. The decision whether to use MRR or not is (by default) cost-based. The disk-sweep MRR strategy is implemented for MyISAM and InnoDB. The main change by enabling MRR should be improved performance for range queries that needs to access records from the base table using a secondary index when the base table requires disk-access. The user should be able to see if MRR has been used by looking in the ""Extra"" column of the EXPLAIN output. If this field contains the string ""Using MRR"" then MRR will be used. 2. Enable the user to control the use of Multi-Range Read When MRR has been enabled the user will be able to control the use of MRR by using two optimizer_switch configuration variables: * mrr: if this is on then MRR is available for use by the optimizer The default value is ""on"". * mrr_cost_based: This determines whether the use of MRR should be based on cost estimates done by the optimizer (value: on) or if MRR should always be used (value: off). The default value is ""on"". "	304d9a67768965b18ceebb46dfd276fa2129c037
----------------------------
"WL#5692 Enable Disk-Sweep Multi-Range Read optimizer feature. This patch contains the first part of this worklog. It changes the default value of the optimizer switch ""mrr_cost_based"" from being off as default to be on by default. To ensure that both non-cost-based MRR and cost-based MRR get tested the following changes are done to our MRR tests: 1. to ensure MRR code get tested: the optimizer_switch flag mrr_cost_based is set to off in test that specifically is named to test MRR (these have _mrr or _all in their name). 2. to ensure cost-based MRR get tested: New versions of existing MRR tests are added. These have added _mrr_cost in their test name. "	357df02b871f38d6f9fd56464bfcbe16b4fb22a5
----------------------------
Bug#58034 Build of generic sources fails with freebsd 8.1 and ndbcluster engine - Add sys/stat.h to ndb_global.h, don't need HAVE_SYS_STAT_H since sys/stat.h exists on all platforms that we support(and have the few functions we use from there) 	da7d2a31637b79da70deeb61c7e07852d65fdefd
----------------------------
"WL#5694 ""change default of optimizer_join_cache_level from 1 to 4"": the default is now 4; in builds where only 0 and 1 were allowed (=mysql-trunk) now 0, 1, 2, 3 and 4 are allowed. All changes in result files are guaranteed (this has been verified by an automated script) to be: - in EXPLAIN, a regular buffer becoming an incremental buffer (normal as '1' uses regular buffers whereas '4' uses incremental ones) - in EXPLAIN, no join buffer was used, now one is used (normal as '1' does not use join buffers for outer joins but '4' does). Exceptions are noted in per-file commit comments. "	fbfe5466275836a2a58b02a89474636103c993a2
----------------------------
"WL#5694: ""change default of optimizer_join_cache_level from 1 to 4"" in this revision, only tests are modified: - sort results of queries whose result will have different order with jcl=4 - don't print the value of jcl in the test This way, the next revision which changes the default to 4 should be smaller and faster to review. "	50eb25471055ac0019862de2b489cbde5c125df8
----------------------------
Cherry pick fix for shared_memory_base_name_basic from 5.5-bugteam 	e053f9dc4c42462dadb0955b0a28ca495f495558
----------------------------
Fix the PAUSE instruction handling in InnoDB Previously HAVE_IB_PAUSE_INSTRUCTION was never defined and thus InnoDB never used the PAUSE instruction on non-windows even if it was available. Probably the check was never migrated from autotools' storage/innobase/plug.in to storage/innobase/CMakeLists.txt. Since the check for PAUSE is done at top-level configure.cmake we can use the result from there (HAVE_PAUSE_INSTRUCTION) instead of rolling InnoDB's own HAVE_IB_PAUSE_INSTRUCTION (the check is identical anyway). 	e8cdc991cd60415cff646d410109d05f2cf3e9a4
----------------------------
ndb - mask out --server-id-bits from mysqld--help*.test since it's a variable that is only there depending on how you compile the server. 	d26a35847edebaa765da9c8d3c1f9c8a4f709db8
----------------------------
Merge: b90e069 08c9f31 Test sys_vars.shared_memory_base_name_basic used wrong path 	0afb6a48a50d7364d80632d8b625e4f759016734
----------------------------
Test sys_vars.shared_memory_base_name_basic used wrong path 	08c9f317eeaefd864186ec12ef82d9c57f516013
----------------------------
Bug#45445: cannot execute procedures with thread_stack set to 128k. Reverting the patch. 	efb1f6407361ba7978aa092cfea102b700359333
----------------------------
Fix Bug #57804 enabling monitor counter from server configure file rb://505 approved by Sunny Bains 	62bc82defb2b31272d5005530520ced9d647bfa5
----------------------------
WL#5665: Removal of the autotools-based build system Remove some more leftovers from the initial removal: o Update relevant mentions of configure.in throughout the source code. o Remove win/configure.js, which at this point just duplicates logic already present in CMake based build system. o Remove support files which relied on the autotools build system. In any case, MySQL is no longer officially supported on SCO. o Remove files which are no longer part of the build. 	5324d10fe7a41f8f9aba989bc5a566a86af908fd
----------------------------
WL#5665: Removal of the autotools-based build system The autotools-based build system has been superseded and is being removed in order to ease the maintenance burden on developers tweaking and maintaining the build system. In order to support tools that need to extract the server version, a new file that (only) contains the server version, called VERSION, is introduced. The file contents are human and machine-readable. The format is: MYSQL_VERSION_MAJOR=5 MYSQL_VERSION_MINOR=5 MYSQL_VERSION_PATCH=8 MYSQL_VERSION_EXTRA=-rc The CMake based version extraction in cmake/mysql_version.cmake is changed to extract the version from this file. The configure to CMake wrapper is retained for backwards compatibility and to support the BUILD/ scripts. Also, a new a makefile target show-dist-name that prints the server version is introduced. 	f6deb00a56b2e87287d606aba3bcd71290d876ae
----------------------------
Bug#58313: CMake stops with VS Express if -DBUILD_CONFIG=mysql_release.cmake Bug : -DBUILD_CONFIG=mysql_release sets SIGNCODE parameter which requires singtool.exe (part of Windows SDK)  in order to be able to sign the binaries ( only if valid certificate is found). However singtool is not a part of the SDK shipped with Visual Studio Express, so the build fails claiming missing singtools.exe Fix: Do not  use SIGNCODE  wiith VC Express. Also, fix broken nmake build (*.rc files could not be compiled due to ADD_DEFINITIONS contaning C/C++ compiler specific flags) 	bf6a7d09e993de577e07a378bf6aa6ce7c0c3651
----------------------------
WL#5597 Work-in-progress. Improvements: - Placed code for handling row hashing into its own class aggregating an HASH instance. - Moved hash handling to rpl_utility.cc - Fixed a few implementation bugs that were making some tests failing. - slave idempotency and slave-skip-errors seems to be working properly. Needs more testing. 	2904345d4fe5b85d50e43820392294f84e4ecfe4
----------------------------
"Fix Bug#58279 Incorrect enabling of UNIV_DEBUG in debug builds Checking ""IF(WITH_DEBUG)"" does not work for multi-configuration CMake generators like VS or XCode. See http://forge.mysql.com/wiki/CMake#Debug-only_options "	fe136f159966de12b2a81ae53e2f1bf9574c6e16
----------------------------
"Bug #50021: Windows standard configuration files are showing Linux options/settings 1. Changed the default value for socket on Windows to the windows default 2. Removed hard-coded trailing slashes from innodb_data_home_dir and innodb_log_group_name_dir. 3. Added extra backslashes to the innodb directory example 4. Made the tempdir platform ""dependent"" 5. Fixed the comments in the .ini files 6. Removed the tmpdir from the templates and the scripts "	589428b625bdc9667d224d5e2899658519a2bf4b
----------------------------
ndb - move the define of NDB_PORT to ndb_config.h 	5720639c515b63799a92783b5b7538b48c3b541c
----------------------------
Bug#58272:  -DBUILD_CONFIG=mysql_release is broken with cmake 2.8.3 The reason  for the bug is that : -  we use system checks in cmake/os/mysql_release.cmake -  we include cmake/os/mysql_release.cmake using CMAKE_USER_MAKE_RULES_OVERRIDE -  this  (having system checks based on TRY_COMPILE inside file pointed by CMAKE_USER_MAKE_RULES_OVERRIDE  does not work with cmake 2.8.3, and  according to Kitware was never meant to work, it just happened to work by accident until 2.8.2 release (though, it seems not to work wiith 2.6.0 either) Related CMake bug discussing the situation: http://public.kitware.com/Bug/view.php?id=11469 The fix is to use INCLUDE instead of CMAKE_USER_MAKE_RULES_OVERRIDE as suggested by Kitware. The downside is that compile flags are not in cache, but this is  pure cosmetics. The functionality is the same,  flags are used for compiling are correct using INCLUDE. 	be93a81172071c412b5c890c06c691ce4c5054ec
----------------------------
ndb - remove config/type_ndbapi.cmake from repo and files which used it - add include/logger to global set of include files - add .current_sourcedir to includes for ndbapi 	48bc16422d9ccee368d55337231f71e46d16353c
----------------------------
ndb - don't typedef mode_t on Windows if it's already been defined by MySQL by cmake configure check in my_config.h 	2a7db62bbdf7e564d1701618e43870c9d18541ad
----------------------------
ndb - set --configdir for ndb_mgmd to ndb_mgmd's datadir 	f8bf73f0f00555b2f3ea511b3ca538a843458975
----------------------------
ndb - use Security_context::skip_grants() to disable grant checking in threads in ha_ndbcluster instead of setting only some member variables of Security_context. This is similar to the replication thread usage and also handling of --skip-grants for mysqld 	256005c0aa809510dedb2309fa23951098db6960
----------------------------
SPJ-scan-scan: Added handling and testcase for JT_SYSTEM optimized tables: A JT_SYSTEM table has already been read, or determined to contain no rows, by the optimizer. This table should therefore be excluded from pushability evaluation in ha_ndbcluster. 	74171fb76c614e1925623a02becf010c010be04a
----------------------------
Merge: 2d93242 88effc9 Manual merge: mysql-trunk --> mysql-next-mr-wl2540 Conflicts ========= Text conflict in mysql-test/r/explain.result Text conflict in mysql-test/r/mysqld--help-notwin.result Text conflict in mysql-test/r/mysqld--help-win.result Text conflict in mysql-test/suite/rpl/r/rpl_mixed_binlog_max_cache_size.result Text conflict in mysql-test/suite/rpl/r/rpl_row_binlog_max_cache_size.result Text conflict in mysql-test/suite/rpl/r/rpl_stm_binlog_max_cache_size.result Text conflict in mysql-test/suite/rpl/t/disabled.def Text conflict in mysql-test/suite/sys_vars/r/max_binlog_cache_size_basic.result Text conflict in sql/mysqld.h Text conflict in sql/share/errmsg-utf8.txt 	4760ba799c38fc9fa2c63db5db41bbf2433e3d5a
----------------------------
BUG#56573: mtr has to run with --binlog-checksum=CRC32 (replication checksum enabled) Adding collections to run mysql-trunk.daily and mysql-trunk.weekly.  Both are a copy of the respective default.* collection, excpet that they have one extra mtr run with checksums enabled: - daily: suite=binlog,rpl - weekly: suite=main,binlog,innodb,federated,rpl,sys_vars,perfschema 	2d932424bf14dadb6de1c777971210f59e1d293b
----------------------------
WL#4801 Changed rpl_change_master to run it with with master-info-repository=TABLE enabled to increase gcov numbers. 	e4a735c27027246ed7a0633f05b5fc9af6313c76
----------------------------
Bug#58159 mtr.pl can't run out of source build with NDB - use $bindir instead of $basedir when looking for binaries - NOTE! the $ENV{NDB_EXAMPLES_*} will be reworked so that mtr.pl does not need to set them up. 	b57fd367365fcc8b509a0f27a05c53dc5d9321ec
----------------------------
Bug #52275  CMake configure wrapper does not handle --with-comment correctly Properly convert --with-comment do not uppercase it, quote as it might contain spaces. 	07e713ff2fa4bd356638ace976adeb0a73210ef3
----------------------------
ndb - fix MYSQLCLUSTERDIR define for both Windows, *nix, automake and cmake - only define MYSQLCLUSTERDIR for ndb_mgmd compilation since it's only refernced by MgtmSrvr.* files - remove hardcoded value of MYSQLCLUSTERDIR on Windows - Remove remains of MYSQL_DATADIR, DEFAULT_MYSQL_HOME and SHAREDIR since they are not used (but also defined on top level Makefile or config.h) 	e0e4b2d4a586a7c5955c801926d1fdf1678034eb
----------------------------
ndb - change ifdefs for ndb_log_empty_epochs to avoid too many ifdefs in ifdefs problem with some compilers. - also set the default value to 1 when no-log-empty-epochs is unsupported/always on 	d1e440e3bbe2fe81f01879a0d71b26d908e5ddef
----------------------------
ndb - reverse logic so that ndb_wait_setup is declared in ha_ndbcluster.cc instead of mysqld.cc 	f9bdf9908c82e589b21910821d88041cf545f715
----------------------------
ndb - make ha_ndbinfo include ha_ndbcluster_glue.h to get the correct headers and defines 	c2d3f459eb174a6745bf7b4a1e5fda6b49b9abde
----------------------------
ndb - link ha_ndbcluster with ndbclient library 	2864c0e84c07e7e547799bd3e85dac0e33daff19
----------------------------
ndb - add ndb_require_variable.cmake - move READLINE_INCLUDE_DIR to global includes - move zlib checks to ndb_configure.cmake and require that ZLIB_LIBRARY and ZLIB_INCLUDE_DIR is set - fix message about hardcoded use of bundle zlib for NDB 	0b51954b6e988a21fd1e0d9c8ffcbc68a843d752
----------------------------
ndb - configure cmake/Makefile 	17d4d22b4539231cec81088ba6487ccdc1316aac
----------------------------
"ndb - fixup ""unused"" prefetch.h file and add NDB_PREFETCH_READ and NDB_PREFETCH_WRITE macros. The macros where referenced but never enabled to prefetch - change the places that used old prefetch to use new - make mt.cpp include ndb_global.h so it get all the same defines as other code - detect sun_prefetch.h in configure and cmake and enable prefetching with forte based on that file. "	52b1a38a4ece313fa5d150333010874730f674e8
----------------------------
"Post-merge fix. ""bind-address"" option (duplicated) declaration removed from sql/mysqld.cc. "	500ab50fae050f7ad6cbddacedac464aa720c263
----------------------------
Bug#57609 performance_schema does not work with lower_case_table_names Merge to mysql-trunk-bugfixing (5.6), fixed 5.6 specific test cases. 	e15fdad5c5c852554fbd83be59c556872a59f138
----------------------------
ndb - add glue also to ha_ndbcluster_connection.cc 	e0019f69bb00147fe3b41bf37acd18b4239f6f46
----------------------------
"Patch for WL#5639 ""Enable Index Condition Pushdown optimizer feature"" With this change the MySQL server will be built with support for the Index Condition Pushdown (ICP) feature. The default will be that ICP will be enabled. The following changes to MySQL are implemented: 1. Enable index condition pushdown With this feature enabled the optimizer will consider to push down to the handler/storage engine parts (or all) of the where condition that can be evaluated by the handler/storage engine using the content of the index that is used for execution of the query. The main change by enabling index condition pushdown should be improved performance for certain queries. The user should be able to see if index condition pushdown has been used by looking in the ""Extra"" column of the EXPLAIN output. If this field contains the string ""Using index condition"" parts or all of the where statement has been pushed down and will be evaluated by the handler/storage engine. 2. Enable the user to control the use of index condition pushdown When this has been enabled the user will be able to control the use of index condition pushdown by using the optimizer_switch configuration variable. The new optimizer_switch flag that will become available is named ""index_condition_pushdown"" and can take the values ""on"", ""off"" and ""default"". The default value for this optimizer switch flag will be ""on"". "	3a273dd4e94c373b33a6261f17f8b8ee698c7216
----------------------------
WL5353 Reflecting Gci Implement propagation of applied epochs via ndb_apply_status table. A new MySQLD option --ndb-log-apply-status is added which causes a MySQLD acting as a Slave to log mysql.ndb_apply_status updates received from its immediate Master in its Binlog with its own Server Id. This allows them to propagate into the mysql.ndb_apply_status table(s) of downstream slaves.  In a circular configuration they propagate back to the originating Cluster. In chained-slave replication scenarios, this gives downstream slaves visibility of their position relative to all their upstream contributors. In circular replication scenarios, this gives a Master visibility of when its changes (epochs) have been applied to other Clusters in a replication circle. New testcase rpl_ndb_break_3_chain added. New testcase ndb_binlog_log_apply_status added. Testcase rpl_ndb_circular extended. This functionality is a basis for WL5353. 	f7520ca29a698be3de01df20d2bee31e821c3f12
----------------------------
BUG#57275 binlog_cache_size affects trx- and stmt-cache and gets twice the expected memory After the WL#2687, the binlog_cache_size and max_binlog_cache_size affect both the stmt-cache and the trx-cache. This means that the resource used is twice the amount expected/defined by the user. The binlog_cache_use is incremented when the stmt-cache or the trx-cache is used and binlog_cache_disk_use is incremented when the disk space from the stmt-cache or the trx-cache is used. This behavior does not allow to distinguish which cache may be harming performance due to the extra disk accesses and needs to have its in-memory cache increased. To fix the problem, we introduced two new options and status variables related to the stmt-cache: Options: . binlog_stmt_cache_size . max_binlog_stmt_cache_size Status Variables: . binlog_stmt_cache_use . binlog_stmt_cache_disk_use So there are . binlog_cache_size that defines the size of the transactional cache for updates to transactional engines for the binary log. . binlog_stmt_cache_size that defines the size of the statement cache for updates to non-transactional engines for the binary log. . max_binlog_cache_size that sets the total size of the transactional cache. . max_binlog_stmt_cache_size that sets the total size of the statement cache. . binlog_cache_use that identifies the number of transactions that used the temporary transactional binary log cache. . binlog_cache_disk_use that identifies the number of transactions that used the temporary transactional binary log cache but that exceeded the value of binlog_cache_size. . binlog_stmt_cache_use that identifies the number of statements that used the temporary non-transactional binary log cache. . binlog_stmt_cache_disk_use that identifies the number of statements that used the temporary non-transactional binary log cache but that exceeded the value of binlog_stmt_cache_size. 	bf2c66d4a7281c1d7dbf49cbad315c7041762670
----------------------------
"Bug #57840 MTR: parallel execution breaks with smart ordering of test cases There were actually more problems in this area: Slaves (if any) were unconditionally restarted, this appears unnecessary. Sort criteria were suboptimal, included the test name. Added logic to ""reserve"" a sequence of tests with same config for one thread Got rid of sort_criteria hash, put it into the test case itself Adds little sanity check that expected worker picks up test Fixed some tests that may fail if starting on running server Some of these fail only if *same* test is repeated. Finally, special sorting of tests that do --force-restart "	0527d492cc098b5471e9eb873432c66e0182f203
----------------------------
ndb - add ndb_config.h.in to EXTRA_DIST 	4a5becf46925b3aede549a109803db25c4e8722f
----------------------------
Bug #57749 vs-config option of mysql-test-run does not work Option was incorrectly coded without an argument Added the missing =s 	e0ade8fd9738bb692f884c0d6faa486bcc06face
----------------------------
ndb - add ndb_configure.cmake to EXTRA_DIST 	b20df83d17d2f9c3f82bf54411b69ee5a5a4f59c
----------------------------
ndb - mark up ONLINE ALTER TABLE code with NDB_WITHOUT_ONLINE_ALTER ifdefs - remove ha_ndbcluster::m_table_flags and HA_NDBCLUSTER_FLAGS define, instead let table_flags() calculate them. Table flags will be cached in handler anyway nowadays so. 	3eed8918612c6558a8d0beb28ddb09014b1b14a2
----------------------------
Merge: 20ce354 358e953 Merge next-mr-bugfixing => next-mr-opt-backporting Text conflict in mysql-test/r/innodb_icp_none.result Contents conflict in mysql-test/r/optimizer_switch_eng_cond_pushdown1.result Contents conflict in mysql-test/r/optimizer_switch_eng_cond_pushdown2.result Contents conflict in mysql-test/suite/sys_vars/r/engine_condition_pushdown_basic.result 	e682f2ce52feceb3c01f0277983883f305d785d7
----------------------------
WL#5465: System variables: paths to relay log and binary log files Adding new variables with paths to where the binary log files and the relay log files are located. Three new global read-only variables are added and one has changed contents. log_bin_basename This variable hold the full path and name used for the binary logs: not including the extension of the files. log_bin_index This variable contain the full path to the binary log index file. relay_log_basename This variable hold the full path and name used for the relay logs: not including the extension of the files. relay_log_index This variable now contain the full path to the relay log index file.  Previously, it just contained the value supplied to mysqld option relay-log-index,  which was then used to compute the path to the index file. 	5f20d5b8c7f4248efc240b08ae4e0c0898b9c65a
----------------------------
WL#5185 post-push fix mysql-test-run was not able to run in version 1, since it uses --log and --log-slow-queries, and these were removed as part of the worklog. This in turn made RQG fail. Updated the v.1 mtr client to use the new syntax (--general-log, --general-log-file-name, etc.) 	9042d3cd72de21ee8cd118829d231d1dc8a08fe8
----------------------------
ndb - use .in as suffix for teplate for generated file ndb_config.h 	e86b5c4f883ca0f0a854ee2bfd16f545ab9296f3
----------------------------
Bug#57609 performance_schema does not work with lower_case_table_names Before this fix, the performance schema tables were defined in UPPERCASE. This was incompatible with the lowercase_table_names option, and caused issues with the install / upgrade process, when changing the lower case table names setting *after* the install or upgrade. With this fix, all performance schema tables are exposed with lowercase names. As a result, the name of the performance schema table is always lowercase, no matter how / if / when the lowercase_table_names setting if changed. 	7f35b15ada5c5b2e63256423c37ce0c907181d85
----------------------------
Bug #57893  rpl_row_ignorable_event fails when --binlog-checksum=CRC32 There were two issues with the failure: 1. The reported explicitly  CRC32 `val' in the header needs filtering out via --replace_regex 2. More serious is that at verbose mode of event decoding the checksum trailing part of Rows-log-event:s was not cut off so the decoder decides there is more data. Fixed with deploying --r--replace_regex in the test and correcting the actual event size inside the verbose decoder of Log_event::print_base64(). 	1134fcc6391229706068965c9cfb91e619ef28c6
----------------------------
WL#5185 Remove deprecated 5.1 features This patch removes a set of options, syntax and variables that was formerly deprecated in MySQL 5.1. The specific regressions tests in the sys_vars suite that tests the removed variables are also removed. System options: ------------------- --skip-thread-priority    removed -l, --log[=name]          removed --log-slow-queries[=name] removed --one-thread              removed --rpl-recovery-rank=#    was already removed System variables: ------------------ sql_low_priority_updates  removed sql_max_join_size         removed sql_big_tables            removed storage_engine            will be removed later rpl_recovery_rank         was already removed log                       removed log_slow_queries          removed have_csv                  removed have_innodb               removed have_ndbcluster           removed have_partitioning         removed table_cache               was already removed engine_condition_pushdown removed SQL: ----------------- SLAVE START               removed SLAVE STOP                removed ONE_SHOT                  removed SET OPTION                removed FLUSH MASTER              was already removed FLUSH SLAVE               was already removed USING/TYPE before ON      will be removed later Notes: 'storage_engine' was deprecated in 5.5, so it can't be removed in this version.  It will be removed two GA releases later. The documentation on 'USING/TYPE before ON' has been inconsistent, and there has not been given a proper deprecation warning on the use of the syntax. See also Bug #57920 Inconsistency in syntax and example for CREATE INDEX Bug #36140 Inconsistent synonymy of USING and TYPE for index creation 	7f3952971425d49327afe710954b773cf09f4e02
----------------------------
This commit intends to get rid of the following compiler warnings: storage/ndb/src/ndbapi/NdbQueryOperation.cpp: 3663 'int formatAttr(const NdbColumnImpl*, const void*&, Uint32&, char*, Uint32)' declared 'static' but never defined storage/ndb/test/tools/spj_sanity_test.cpp: 618 dereferencing type-punned pointer will break strict-aliasing rules storage/ndb/test/tools/spj_sanity_test.cpp: 705 dereferencing type-punned pointer will break strict-aliasing rules storage/ndb/test/tools/spj_sanity_test.cpp: 765 dereferencing type-punned pointer will break strict-aliasing rules storage/ndb/test/tools/spj_sanity_test.cpp: 866 dereferencing type-punned pointer will break strict-aliasing rules libmysqld/ha_ndbcluster.cc: 1855 array subscript is above array bounds libmysqld/ha_ndbcluster.cc: 1879 array subscript is above array bounds 	394f7495274d32637e1efb3cded4d0fc1b9f60fb
----------------------------
Temporarily fix for configure.in -- CMakeFiles requires suffix in version tag. 	6b666752f42f7ea064b1461701035d4e26e9c85a
----------------------------
ndb - add cmake configure checks for ndb 	28cbd55d824dfb4e4842051a79cf86e9f82607ff
----------------------------
ndb - fix problem with extracting the long cluster version string from configure.in - apply MCP patch for BUG57843 to 5.5-telco 	8f9f7bb349b64794b2447fd72210810522056415
----------------------------
Bug #44355: Need system variable for --bind-address option Added a system variable for the bind_address command line option. 	23faa03aa844348a60bc7e92cec4f037fd261cf7
----------------------------
"Bug#51631 general-log flag doesn't accept ""on"" as a value in the my.cnf, works as command Different parsing mechanisms are used for command line/my.cnf options  and the SQL commands.  The former only accepted numeric arguments, and regarded all numbers different from 0 as 'true'.  Any other argument was parsed as 'false' . This patch adds the words 'true' and 'on' as valid truth values for boolean option arguments. A test case is not provided, as the fix is simple and does not warrant a separate test file (no existing suitable test file was found) "	9677b72a888f7a3571de3fed666b8f452772118f
----------------------------
Bug #57589 SHOW SLAVE STATUS doesnt show err:1665 on NM-OS when slave can't handle checksum OS can't connect to the checksumming-ON NM and an error goes out to the error log (which is good), but OS can't stop trying to reconnect constantly (which is not). While practically this scenario must be pretty rare it's possible to fix the issue a rather nice way. Master sends back to checksum-unaware OS the ER_MASTER_FATAL_ERROR_READING_BINLOG critical error accompanied with a verbose clarification mentioning the checksum situation like in the following snippet of the error log from the patch testing: 101026 20:15:45 [ERROR] Error reading packet from server: Slave can not handle replication events with the checksum that master is configured to log ( server_errno=1236) 101026 20:15:45 [ERROR] Slave I/O: Got fatal error 1236 from master when reading data from binary log: 'Slave can not handle replication events with the checksum that master is configured to log', Error_code: 1236 Master also logs a warning 101026 20:15:33 [Warning] Configured to log replication events with checksum Master rejects sending them to Slave that can not handle it. Additional fixes for wl#2540 targeting sysvar suite. Each system var must have a test file in there. The tests are adeed. 	ba56fddaec6a9a08bf874ef3de70e33811e120e5
----------------------------
Bug#57720 - Windows Vista and possibly Windows 7 can return ERROR_TIMEOUT instead of WAIT_TIMEOUT from calls to SleepConditionVariableCS() which is used in os0sync.c; os_cond_wait_timeout() where it is mapped to sleep_condition_variable(). Consider ERROR_TIMEOUT to be a timeout just like WAIT_TIMEOUT. In addition, test for EINTR as a possible return value from pthread_cond_timeout() in the posix section of os_cond_wait_timeout(), even though it is not supposed to be returned, but just to be safe. 	2dad3c94f707094fa701ddac0a399c1150d0cf2d
----------------------------
Merge: 1e5da34 257b48e Manual merge from mysql-next-mr-merge. Conflicts: - mysql-test/r/explain.result - mysql-test/suite/rpl/r/rpl_mixed_binlog_max_cache_size.result - mysql-test/suite/rpl/r/rpl_row_binlog_max_cache_size.result - mysql-test/suite/rpl/r/rpl_stm_binlog_max_cache_size.result - mysql-test/suite/sys_vars/r/max_binlog_cache_size_basic.result - mysql-test/t/disabled.def 	0050183c93412b00640f368080fbb6a9e1632a74
----------------------------
Bug#54569 Some options are not allowed to take argument when passed with loose- prefix Boolean options cause parsing failures when they are given with prefix loose- and an argument, either in the command line or in configuration file. The reason was a faulty logic which forced the parsing to throw an error when an argument of type NO_ARG was used together with an argument which has been identified as a key-value pair. Despite the attribute NO_ARG these options actually take arguments if they are of type BOOL. 	3611d5e38017950d58469216bed24a1c5e51764c
----------------------------
ndb - revert change of relative dir to fix path for sql/ha_ndbcluster sine it'll break embedded server compile. 	aee27d247a2ccc88e36a1549e57f1729631af910
----------------------------
"WL#5265 Deprecate features in Dahlia This is a patch for deprecating items, so they can be scheduled for removal at a later stage. A deprecation consists of adding a deprecation note to help texts, and returning a SQL warning upon the use. Most of the affected regression tests have been changed to use new or alternative syntax.  A few tests, in particular in the 'sys_vars' suite are still run with the deprecated syntax, to verify that the options still work, and give the correct warning text. Some deprecation warnings introduced by an earlier patch included the MySQL version number when the feature/option would be removed.  Since future version numbers may not be known, the text has been changed to ""and will be removed in a future release"". The following items have been adressed by this patch: ----------------------------------------------------- --master-retry-count       option deprecated (see also Bug#44209) --languages | -l           option deprecated (see also WL#751) @@storage_engine           sysvar deprecated (see also WL#4738) @@sql_big_tables           sysvar deprecated @@sql_low_priority_updates sysvar deprecated @@thread_concurrency       sysvar deprecated (see also Bug#55001) In addition, the following is mentioned in the worklog, but already adressed by other patches: -------------------------------------------------------- @@table_lock_wait_timeout  sysvar was removed as part of Bug#45225 @@optimizer_search_depth ( value 63) was deprecated in WL#5252 and removed as part of WL#5369 "	1e5da3480ead497b519385b43ef0c6d392202ec4
----------------------------
ndb - move get_ndb_lock_type() to file scope in ha_ndbcluster.cc, this allow removal of several casts 	2035e02e5bdf7d7803c1508a804313777ba0320b
----------------------------
ndb - Add conditional code to allow ha_ndbcluster to work with MySQL Server that does not have OPTION_ALLOW_BATCH 	2fb9a2e5ea11b425867db35f42114f7d2f3b962a
----------------------------
ndb - apply MCP patch for BUG53205 which adds a --server-id-bits option to mysqld and mysqlbinlog 	ff1c87fa59da6b6b260042bbff63c4028184801c
----------------------------
After a discussion with James Day on bug# 20877, it turns out that the MySQL config parameter table_def_size is more appropriate for our purpose, to limit the InnoDB data dictionary size. 	0f057f671fd188367f6159516282247f7d29dc51
----------------------------
Merge: 9052cb1 06dc368 Merge from trunk-merge. Text conflict in mysql-test/suite/rpl/r/rpl_mixed_binlog_max_cache_size.result Text conflict in mysql-test/suite/rpl/r/rpl_row_binlog_max_cache_size.result Text conflict in mysql-test/suite/rpl/r/rpl_stm_binlog_max_cache_size.result Contents conflict in mysql-test/suite/rpl/t/rpl_mixed_binlog_max_cache_size-master.opt Contents conflict in mysql-test/suite/rpl/t/rpl_row_binlog_max_cache_size-master.opt Contents conflict in mysql-test/suite/rpl/t/rpl_stm_binlog_max_cache_size-master.opt Text conflict in sql/share/errmsg-utf8.txt Text conflict in sql/sql_partition_admin.cc Text conflict in sql/sql_partition_admin.h Text conflict in sql/sql_truncate.cc Text conflict in sql/sql_truncate.h Text conflict in storage/innobase/row/row0sel.c 12 conflicts encountered. Adapted incoming changes to new class hierarchy in next-mr Added missing warnings to result files. Added this to the ### CLEAN ### section of rpl_binlog_max_cache_size.test --disable_query_log --eval SET GLOBAL max_binlog_cache_size= $old_max_binlog_cache_size --eval SET GLOBAL binlog_cache_size= $old_binlog_cache_size --enable_query_log Fixed some compile warnings: handler/ha_innodb.cc if (do_idx_cond_push && ((need_second_pass && !index_covers_field) || (!need_second_pass && index_covers_field))) { storage/innobase/row/row0sel.c res = row_sel_store_mysql_rec(buf, prebuilt, rec, offsets, 0, prebuilt->n_index_fields); sql/sql_insert.cc delayed_row(LEX_STRING const query_arg, enum_duplicates dup_arg, bool ignore_arg, bool log_query_arg) : record(0), dup(dup_arg), ignore(ignore_arg), log_query(log_query_arg), binlog_rows_query_log_events(FALSE), forced_insert_id(0), query(query_arg), time_zone(0) {} 	fb8e878df846a679a9b9ad6489001ee8d6156969
----------------------------
Fixed bug#45445 - cannot execute procedures with thread_stack set to 128k. 	3d9cddabf828ae1a070d621db3414f6c409ac21b
----------------------------
Fix a sys_vars.all_vars failure caused by Bug #56680 instrumentation. The variable innodb_change_buffering_debug is only present in debug builds. Hide it from the test, so that the test passes in both debug and non-debug. 	7ee0551f4358cb6a4217eb42126de309ca2bad1a
----------------------------
Rename srv_lock_timeout_thread_event to srv_timeout_event. Reset the lock0wait.c global variables in lock_sys_create() Update comments in srv0srv.c In lock_wait_timeout_thread() add check for shutdown before changing state to active after event wait. Change sleep to a timed event wait. Previously the signals to this event were ignored, this was inheritd from the parent code. 	958eb028af56565ba6d4f240cfe6956b739f0b65
----------------------------
Bug#57604  Reserve bit in option_bits for slave_allow_batching feature - Add  define to reserve bit number 36 for slave_allow_batching feature 	95ee8f4cf61d9be85f1df6805a058fa11b6de04d
----------------------------
Bug#57603 slave_allow_batching uses same bit in thd->options as profiling - Change so that slave_allow_batching does not use the same bit as profiling 	4a4399e540919d25f97f9e41748b500eef3cae27
----------------------------
Test wait_timeout: do not fail by SQL syntax error, use die 	8a94240c7d76b7b9e77bb38eda5b75ea83c46340
----------------------------
Bug #46941 crash with lower_case_table_names=2 and foreign key data dictionary confusion On file systems with case insensitive file names, and lower_case_table_names set to '2', the server could crash due to a table definition cache inconsistency.  This is the default setting on MacOSX, but may also be set and used on MS Windows. The bug is caused by using two different strategies for creating the hash key for the table definition cache, resulting in failure to look up an entry which is present in the cache, or failure to delete an existing entry.  One strategy was to use the real table name (with case preserved), and the other to use a normalized table name (i.e a lower case version). This is manifested in two cases.  One is  during 'DROP DATABASE', where all known files are removed.  The removal from the table definition cache is done via a generated list of TABLE_LIST with keys (wrongly) created using the case preserved name.  The other is during CREATE TABLE, where the cache lookup is also (wrongly) based on the case preserved name. The fix was to use only the normalized table name when creating hash keys. 	1c68d2efe72b8663fb3cfba91667179d142e81be
----------------------------
Merge: 7506344 b568369 Merge Bug #56680 from mysql-5.1. Additional fixes in 5.5: ibuf_set_del_mark(): Add diagnostics when setting a buffered delete-mark fails. ibuf_delete(): Correct a misleading comment about non-found records. rec_print(): Add a const qualifier to the index parameter. Bug #56680 wrong InnoDB results from a case-insensitive covering index row_search_for_mysql(): When a secondary index record might not be visible in the current transaction's read view and we consult the clustered index and optionally some undo log records, return the relevant columns of the clustered index record to MySQL instead of the secondary index record. ibuf_insert_to_index_page_low(): New function, refactored from ibuf_insert_to_index_page(). ibuf_insert_to_index_page(): When we are inserting a record in place of a delete-marked record and some fields of the record differ, update that record just like row_ins_sec_index_entry_by_modify() would do. btr_cur_update_alloc_zip(): Make the function public. mysql_row_templ_t: Add clust_rec_field_no. row_sel_store_mysql_rec(), row_sel_push_cache_row_for_mysql(): Add the flag rec_clust, for returning data at clust_rec_field_no instead of rec_field_no. Resurrect the debug assertion that the record not be marked for deletion. (Bug #55626) [UNIV_DEBUG || UNIV_IBUF_DEBUG] ibuf_debug, buf_page_get_gen(), buf_flush_page_try(): Implement innodb_change_buffering_debug=1 for evicting pages from the buffer pool, so that change buffering will be attempted more frequently. 	e85e1206b1cead211b166885ce7d12dc275ead55
----------------------------
Bug #56680 wrong InnoDB results from a case-insensitive covering index row_search_for_mysql(): When a secondary index record might not be visible in the current transaction's read view and we consult the clustered index and optionally some undo log records, return the relevant columns of the clustered index record to MySQL instead of the secondary index record. ibuf_insert_to_index_page_low(): New function, refactored from ibuf_insert_to_index_page(). ibuf_insert_to_index_page(): When we are inserting a record in place of a delete-marked record and some fields of the record differ, update that record just like row_ins_sec_index_entry_by_modify() would do. btr_cur_update_alloc_zip(): Make the function public. mysql_row_templ_t: Add clust_rec_field_no. row_sel_store_mysql_rec(), row_sel_push_cache_row_for_mysql(): Add the flag rec_clust, for returning data at clust_rec_field_no instead of rec_field_no. Resurrect the debug assertion that the record not be marked for deletion. (Bug #55626) [UNIV_DEBUG || UNIV_IBUF_DEBUG] ibuf_debug, buf_page_get_gen(), buf_flush_page_try(): Implement innodb_change_buffering_debug=1 for evicting pages from the buffer pool, so that change buffering will be attempted more frequently. 	b568369dba30a196d12eeb314127219c7f93a4f2
----------------------------
Bug #56680 wrong InnoDB results from a case-insensitive covering index row_search_for_mysql(): When a secondary index record might not be visible in the current transaction's read view and we consult the clustered index and optionally some undo log records, return the relevant columns of the clustered index record to MySQL instead of the secondary index record. REC_INFO_DELETED_FLAG: Move the definition from rem0rec.ic to rem0rec.h. ibuf_insert_to_index_page_low(): New function, refactored from ibuf_insert_to_index_page(). ibuf_insert_to_index_page(): When we are inserting a record in place of a delete-marked record and some fields of the record differ, update that record just like row_ins_sec_index_entry_by_modify() would do. mysql_row_templ_t: Add clust_rec_field_no. row_sel_store_mysql_rec(), row_sel_push_cache_row_for_mysql(): Add the flag rec_clust, for returning data at clust_rec_field_no instead of rec_field_no. Resurrect the debug assertion that the record not be marked for deletion. (Bug #55626) buf_LRU_free_block(): Refactored from buf_LRU_search_and_free_block(). This is needed for the innodb_change_buffering_debug diagnostics. [UNIV_DEBUG || UNIV_IBUF_DEBUG] ibuf_debug, buf_page_get_gen(), buf_flush_page_try(): Implement innodb_change_buffering_debug=1 for evicting pages from the buffer pool, so that change buffering will be attempted more frequently. 	f2d39c9eafd31304c1aaead7cd47209fb2451033
----------------------------
Merge: 665fdb4 367549a Bug#52172 test binlog.binlog_index needs --skip-core-file to avoid leaving core files For crash testing: kill the server without generating core file. include/my_dbug.h Use kill(getpid(), SIGKILL) which cannot be caught by signal handlers. All DBUG_XXX macros should be no-ops in optimized mode, do that for DBUG_ABORT as well. sql/handler.cc Kill server without generating core. sql/binlog.cc Kill server without generating core. unittest/gunit/CMakeLists.txt Add unit test. unittest/gunit/dbug-t.cc Add unit test. 	c9657d0508536aef35fd786f488c1ed4838ed36d
----------------------------
Merge: b1b7e53 0853153 Bug#52172 test binlog.binlog_index needs --skip-core-file to avoid leaving core files For crash testing: kill the server without generating core file. include/my_dbug.h Use kill(getpid(), SIGKILL) which cannot be caught by signal handlers. All DBUG_XXX macros should be no-ops in optimized mode, do that for DBUG_ABORT as well. sql/handler.cc Kill server without generating core. sql/log.cc Kill server without generating core. 	367549ab2bb162b68cc5fab9594d1f69b6a70f97
----------------------------
Bug#52172 test binlog.binlog_index needs --skip-core-file to avoid leaving core files For crash testing: kill the server without generating core file. include/my_dbug.h Use kill(getpid(), SIGKILL) which cannot be caught by signal handlers. All DBUG_XXX macros should be no-ops in optimized mode, do that for DBUG_ABORT as well. sql/handler.cc Kill server without generating core. sql/log.cc Kill server without generating core. 	08531533466732294306afe1c216f66a61b929cb
----------------------------
Recommit after fixing diverged-branches: spj-svs: MRR read may fail to close cursors for pending ScanOperations causing 'out of transaction / operation / lock' errors depending on the database config. This fix is cherry picked from proposed fix for bug 57481, with the addition of an additional SPJ test for the same scenario. 	7344c73e104d4c23b804d6f61234aa414d7897ca
----------------------------
"Bug#31480: Incorrect result for nested subquery when executed via semijoin This problem may occur when we have a query containing at least two nested subqueries; one subquery is transformed into a semijoin, and a subquery that is inner to the transformed subquery (and is not itself transformed away) contains outer references either to the transformed subquery or to it's immediate outer query block. When this situation happens, the transformed query and it's immediate outer query block is consolidated into one query block. In this process, involved tables may be renumbered, and resolved information for the inner expressions may change. Example with a query: select t1.a from t1 where t1.a in (select t2.c from t2 where t2.d >= some(select t3.e from t3 where t1.b=t3.e)); Graph of select_lex objects and table objects for this query, before transformation: A - t1 \ B - t2 \ C - t3 For shorthand, we denote the IN predicate the ""outer subquery predicate"" and the quantified comparison predicate the ""inner subquery predicate"". The outer subquery predicate contains select_lex B and the inner subquery predicate contains select_lex C. Now, semijoin transformation is applied to the outer subquery predicate. Here is the query graph after transformation: A - t1, t2 \ C - t3 After the transformation, used_tables information is wrong for the column t1.b. The problem is fixed by adding fix_after_pullout() functions for the subquery objects (Item_subselect, Item_in_subselect, Item_in_optimizer), that can propagate re-resolution down to subqueries that have expressions that are affected by the semijoin transformation. In addition, fix_after_pullout() is extended with another argument that identifies the select_lex object that is being removed. With the current use of fix_after_pullout(), this information is implicit, but it has to be explicit when also handling fields that are referenced within inner subqueries. The new fix_after_pullout() interface then becomes: fix_after_pullout(st_select_lex *parent_select, st_select_lex *removed_select, Item **ref); fix_after_pullout() applied to an Item_field object only needs to handle cases where the depended_from or context->select_lex is equal to either parent_select or removed_select. If the field belongs to a table that is ""inner"" or ""outer"" compared to the select_lex level we are transforming, then no information needs to be updated. Note also that information about correlated outer columns must be recorded directly in a subquery predicate object. Suppose we have two select_lex objects A and B. B is part of a subquery that is evaluated on level A. The subquery has a predicate that contains a reference to a column that is resolved to a table t1 that belongs to select_lex A. In order to properly evaluate the subquery predicate, we need to make sure that a row from t1 is present. Thus, the fix_after_pullout() function for Item_field needs to propagate information about the table it is resolved within to an outer subquery predicate, if that predicate is evaluated on the same level as the table t1 is resolved on. mysql-test/r/optimizer_switch.result Added result for test case for Bug#31480 mysql-test/r/subquery_sj_all.result mysql-test/r/subquery_sj_all_jcl6.result mysql-test/r/subquery_sj_all_jcl7.result mysql-test/r/subquery_sj_dupsweed.result mysql-test/r/subquery_sj_dupsweed_jcl6.result mysql-test/r/subquery_sj_dupsweed_jcl7.result mysql-test/r/subquery_sj_firstmatch.result mysql-test/r/subquery_sj_firstmatch_jcl6.result mysql-test/r/subquery_sj_firstmatch_jcl7.result mysql-test/r/subquery_sj_loosescan.result mysql-test/r/subquery_sj_loosescan_jcl6.result mysql-test/r/subquery_sj_loosescan_jcl7.result mysql-test/r/subquery_sj_mat.result mysql-test/r/subquery_sj_mat_jcl6.result mysql-test/r/subquery_sj_mat_jcl7.result Minor plan change (WHERE clause moved from first to second table). The reason for this is that the IN subquery predicate object is updated with correct used tables information. mysql-test/t/optimizer_switch.test Added test case for Bug#31480 Notice that the test case with an inner grouped subquery is wrong when semijoin optimization is turned on. sql/item.cc Item_field::resolved_used_tables() is implemented. Item_field::fix_after_pullout() is changed so that it behaves properly also for fields that are used in a scope that is inner to the select_lex being removed. Also update used_tables information for subqueries that are outer-correlated with respect to this field. Updated fix_after_pullout() in conformance with new interface. sql/item.h Changed interface of fix_after_pullout(). Added interface for resolved_used_tables(). This function returns used table information for the level on which a field's table is resolved, in contrast to used_tables() which returns OUTER_REF_TABLE_BIT if the field is an outer reference. sql/item_cmpfunc.cc Necessary changes to fix_after_pullout(). Item_in_optimizer::fix_after_pullout() resolves itself by dispatching to the wrapped Item_in_subselect object. sql/item_cmpfunc.h Added fix_after_pullout() to class Item_in_optimizer. sql/item_func.cc Necessary changes to fix_after_pullout(). sql/item_func.h Changed interface of fix_after_pullout(). sql/item_row.cc Necessary changes to fix_after_pullout(). sql/item_row.h Changed interface of fix_after_pullout(). sql/item_subselect.cc Item_subselect::fix_after_pullout() resolves all expressions referred from the inner query specification objects (select_lex objects). Item_in_subselect::fix_after_pullout() dispatches the query expression resolution to Item_subselect::fix_after_pullout(), but needs to resolve its left expression explicitly. sql/item_subselect.h Added fix_after_pullout() to classes Item_subselect and Item_in_subselect. sql/sql_select.cc Interface change to fix_list_after_tbl_changes(). Also make sure that transformed-away select_lex object is removed before calling fix_after_pullout(), so that the function operates on a chain of select_lex objects that is valid after semijoin transformation. "	226a5d281a2498f0066cfee2ed4307b425f536e0
----------------------------
ndb - remove unused extern declaration of LOCK_plugin mutex, not used from ha_ndbcluster anymore 	a4e8deabce87daa4108a05cca5d6960e5ddc10f7
----------------------------
Bug #51639  Some replication filters are case sensitive, some are not! There is an inconsistency in name comparison of rpl filters. Some are case sensitive, while others are not. And they did not follow the setting of lower_case_table_names. To fix the problem to make all the filters follow the setting of lower_case_table_name to be case sensitive and accent sensitive when setting lower_case_table_name=0. Otherwise they will be case insensitive but accent sensitive. 	9a4f725c54c81f0cb865f4bbec841ac957838723
----------------------------
ndb - fix result file for ndb_config 	804a3b75a649b0b55441dffc283bebe2a770eef6
----------------------------
Reverting a patch for Bug#45445 (cannot execute procedures with thread_stack set to 128k). Some platforms don't work with 4 * STACK_MIN_SIZE. Thus, reverting back to 8 * STACK_MIN_SIZE and waiting for another fix. 	46f2610b26641928d5fdd131a97ee3f0346bed61
----------------------------
Reverting a patch for Bug#45445 (cannot execute procedures with thread_stack set to 128k). Some platforms don't work with 4 * STACK_MIN_SIZE. Thus, reverting back to 8 * STACK_MIN_SIZE and waiting for another fix. 	79626ba4ab927e091ca75731283d19df5e6f82dc
----------------------------
wl#2540 Fixing a lapse of the last commit. Forcing checksum be active in the started by mtr servers through supplying --mysqld=--binlog-checksum=CRC32 in collectios/default.push 	24adc36078b942e2999436deef5df7b84fe386b9
----------------------------
Bug#56632 - The warning code related to KEY_BLOCK_SIZE and ROW_FORMAT  when innodb_strict_mode=OFF  is improved in order to take into account whether the KEY_BLOCK_SIZE is specified on the current ALTER statement or the previous CREATE statement. The testcase shows the expected results of 12 different combinations of these settings. 	f3292c3a13b3c50086ac721bb6f714666155eea0
----------------------------
Bug#56632 - The warning code related to KEY_BLOCK_SIZE and ROW_FORMAT  when innodb_strict_mode=OFF  is improved in order to take into account whether the KEY_BLOCK_SIZE is specified on the current ALTER statement or the previous CREATE statement. The testcase shows the expected results of 12 different combinations of these settings. 	b1698f638f3814124405a7d94952f5ce55bf0009
----------------------------
Bug#55375  Transaction bigger than max_binlog_cache_size crashes slave When slave executes a transaction bigger than slave's max_binlog_cache_size, slave will crash. It is caused by the assert that server should only roll back the statement but not the whole transaction if the error ER_TRANS_CACHE_FULL happens. But slave sql thread always rollbacks the whole transaction when an error happens. Ather this patch, we always clear any error set in sql thread(it is different from the error in 'SHOW SLAVE STATUS') and it is cleared before rolling back the transaction. 	b66825912a436cb263253bf47c535f3728ccbe85
----------------------------
wl#2540 Forcing checksum be active in the started by mtr servers through supplying --mysqld=--binlog-format=CRC32 in collectios/default.push 	cfc3d2d00ec5207d143e9f44db35faa5a2fdf32c
----------------------------
Bug #57338: Extreneous server variable thread_pool_size The server contained code for the server variable and option thread_pool_size, but this server variable where not used anywhere. The variable is probably remains from backporting too much from 6.0 (specifically, the thread pool implementation was not backported from 6.0, which this variable is associated with). This patch eliminates the variable from the server. 	5d014b83198caa59344433b9b9188042e8427b8f
----------------------------
Adjust results files after innodb_file_per_table became 0. In calvin.sun@oracle.com-20101005183830-p81bemgffq8l2en9 the default value of innodb_file_per_table was changed from 1 to 0. 	2e1c48e0697c140f5c2265d1a3d065c5ad057b5b
----------------------------
"This commit adds methods for setting the parallelism for the root operation of a pushed scan query (to be less than the number of fragments). If you wish to test this, apply the patch below and run suitable SQL queries. -----------8<---------------- === modified file 'sql/ha_ndbcluster.cc' --- sql/ha_ndbcluster.cc	2010-10-07 11:21:35 +0000 +++ sql/ha_ndbcluster.cc	2010-10-07 10:56:58 +0000 @@ -5205,6 +5205,11 @@ int ha_ndbcluster::ordered_index_scan(co ERR_RETURN(query->getNdbError()); } +    if (!sorted) +    { +      query->getQueryOperation(0U)->setParallelism(1); +    } + if (pbound  && query->setBound(key_rec, pbound)!=0) ERR_RETURN(query->getNdbError()); @@ -5393,6 +5398,7 @@ int ha_ndbcluster::full_table_scan(const m_thd_ndb->m_scan_count++; DBUG_ASSERT(!uses_blob_value(table->read_set));  // Can't have BLOB in pushed joins (yet) +    m_active_query->getQueryOperation(0U)->setParallelism(1); } else // if (check_if_pushable(NdbQueryOperationDef::TableScan)) { -----------8<---------------- "	53879522a0ced0a8c60ac3da86198881c1222d83
----------------------------
Fixed bug#45445 - cannot execute procedures with thread_stack set to 128k. 	eec581e07f80c34dd0a91b231f15e6c1a59b7f62
----------------------------
"WL#5503 SEAGULL: Move config/ac-macros/ha_ndbcluster.m4 to storage/ndb/ - Move file ha_ndbcluster.m4 - Move ""sinclude"" directive from configure.in to storag/ndb/plug.in "	455d1f6ade5070f7ffa81e355bc3715bed1d92ac
----------------------------
bug#56318: Replication aborts with ER_TOO_BIG_ROWSIZE if innodb parameters don't match Revert the changes of the default values of innodb_file_per_table and innobase_file_format in 5.5, until WL#5135 is implemented. 	5df8fd90beb7877cc81ccfd60e2fca38fd8e7c71
----------------------------
Adjust all_vars.result with the 3 new config variables. 	6a4c0a917d705004020376c694a7737c3d3113fc
----------------------------
Bug#56537: parse error in sql_yacc.cc in next-mr (compile-pentium-debug, configure+make) Sql_cmd changed in mysql-next-mr, requiring a sql_command_code function that was missing when compiling without support for partitioning. Added it also when compiling without partitioning 	80892ac606a379d4dcac4a96bbba4b6f6358bcca
----------------------------
ndb - Revert addition of the handler::bulk_delete_row function which was added as part of WL#2679 and instead set a ha_ndbcluster flag in start_bulk_delete() which will indicate to ha_ndbcluster::delete_row() that bulk delete is active. Reset the flag and flush any outstanding deletes in ha_ndbcluster::end_bulk_delete() - Extend the ndb_bulk_delete test case with a table with more rows and more IN values which triggers ha_nddbcluster to flush the deletes because it runs out of batch memory space. 	718137a75039280dbd0c1480bc3c2e4553c72db3
----------------------------
ndb - mark ha_ndbcluster::uses_blob_value()  as const 	6d0ecdd1ffc0e18d1573baf9d7b72abb61105eb5
----------------------------
Fix bug Bug #50461 many uses of btr_search_latch with innodb_adaptive_hash_index is OFF rb://460 approved by Inaam 	595501ea0022956d8d27d24d16ccd40550ddd2a6
----------------------------
ndb - this patch moves ndbapi config parameters (batch size etc) from TransporterFacade to ndb_cluster_connection 	b15b5f345cc94e49a9aa402c7b0b0afb315c0a96
----------------------------
WL#3126  TCP address binding for mysql client library - Add tests for all mysql* clients that have got the new --bind-address option. Since --bind-address is only used with TCP connections, the client is tricked to use TCP either by setting host to 127.0.0.1 or by using protocol=tcp. - Test is assuming that 127.0.0.1 always is available on test host. 	8a33c215fcbba2a9ff65c98d63e1aa8849908e27
----------------------------
"BUG#46110: --replicate-wild-do-table invalidates --replicate-do-db matching rule When using --replicate-do-db and --replicate-ignore-db with --replicate-wild-do-table, some database level statements, eg DROP DATABASE or CREATE DATABASE, might not be replayed even if the DATABASE name was inline with the rules set in --replicate-do-db and/or --replicate-ignore-db. The following example would not replicate correctly: SLAVE, configured with: --replicate-do-db=dbx --replicate-wild-do-table=db%.t1 MASTER, dba issues: MASTER> CREATE DATABASE dbx; Although, at first sight, there is nothing in the filter rules that might prevent this statement to be replayed, the slave would not execute it. In fact, ""replicate-wild-do-table=db%.t1"" invalidates the ""OK"" from ""replicate-do-db=dbx"", making the event to be skipped/filtered out. We fix this, by making --replicate-do/ignore-db rules take precedence over replicate-wild-do-table for *database* level statements only: - CREATE/DROP/ALTER DATABASE ... As such, when replicating such statements, we only look into replicate-wild-do-table if and only if replicate-do/ignore-db rules are void. Otherwise, --replicate-do/ignore-db rules dictate the fate of the statement: either filtered out or executed. "	bf378d385aa49e3d33650e53500ea0df3bde323b
----------------------------
crund - minor improvements to Readmes, config files, and code 	8931c9f5ec519fdc921db3f253bb876d603df9ea
----------------------------
crund - minor improvements to Readmes, config files, and code 	77e9d92fcb207317f379fc81d52cb47d1f76dab6
----------------------------
crund - updated TWS benchmark Readme and configuration files 	db3ebc90571765245f2357c055ba886561293174
----------------------------
crund - updated TWS benchmark Readme and configuration files 	ef9d71ddcb3bf1c78e05c6cccb909de9a00cebd7
----------------------------
"Bug#54226 Can't force graceful node STOP that would bring down the cluster - Make it possible to force stop and restart although it would mean that all nodes in the cluster need to be stopped/restarted - Add new MGMAPI functions 'ndb_mgm_stop4' and 'ndb_mgm_restart4' which take a force flag indicating that the node(s) should be gracefully shutdown even if it means shutting down the whole cluster. - Add -F flag to ""<nodeid> STOP"" and ""<nodeid> RESTART"" in ndb_mgm> Additionally: - Move version checks in mgmapi _after_ CHECK_CONNECTED, this was a bug in ndb_mgm_start_backup and ndb_mgm_get_configuration. - Add handle::mgmd_version() so it's easy to check version against NDB_MAKE_VERSION(Y,Y,Y) and also make it possible to add asserts for connected and version fetched. - Remove mgmapi only version define from ndb_version.h.in - Reset the mgmd_version_xxx variables as part of connect to safeguard against a handle being used for reconnect to ndb_mgmd with potentially different version. - Add testcase for forced stop and restart "	a20d00b172e50d3a969193e0d8d0cae89c8541cd
----------------------------
Bug #56125 MTR2 start-and-exit removes server tmpdir, server becomes not operational This happens when creating new tmpdir due to too long socket path Don't delete it if --start-and-exit, but warn user to do it. 	f643d1b6d39700a2932840ba27ab4f55156d0940
----------------------------
BUG#55377 max_binlog_cache_size does not work as specified Post-push fixes. 	c140398e99233bb432ff03b38c6ec699cd37f9b0
----------------------------
ndb - bug#56844 - make config change protocol contact nodes in order to avoid deadlock 	fdf06e63568cd08f09cb2e81e634570f1dba4ae9
----------------------------
Bug#56832 perfschema.server_init test output not consistent Before this fix, the test output for perfschema.server_init would vary between executions, because some of the objects tested were not guaranteed to exist in all configurations / code paths. This fix removes these weak tests. Also, comments referring to abandonned code have been cleaned up. 	fd6497b3d84954880041a2a12c0653d7f1e5302d
----------------------------
"Fixed bug#42503 - ""Lost connection"" errors when using compression protocol. The loss of connection was caused by a malformed packet sent by the server in case when query cache was in use. When storing data in the query cache, the query  cache memory allocation algorithm had a tendency to reduce the amount of memory block necessary to store a result set, up to finally storing the entire result set in a single block. With a significant result set, this memory block could turn out to be quite large - 30, 40 MB and on. When such a result set was sent to the client, the entire memory block was compressed and written to network as a single network packet. However, the length of the network packet is limited by 0xFFFFFF (16MB), since the packet format only allows 3 bytes for packet length. As a result, a malformed, overly large packet with truncated length would be sent to the client and break the client/server protocol. The solution is, when sending result sets from the query cache, to ensure that the data is chopped into network packets of size <= 16MB, so that there is no corruption of packet length. This solution, however, has a shortcoming: since the result set is still stored in the query cache as a single block, at the time of sending, we've lost boundaries of individual logical packets (one logical packet = one row of the result set) and thus can end up sending a truncated logical packet in a compressed network packet. As a result, on the client we may require more memory than max_allowed_packet to keep, both, the truncated last logical packet, and the compressed next packet. This never (or in practice never) happens without compression, since without compression it's very unlikely that a) a truncated logical packet would remain on the client when it's time to read the next packet b) a subsequent logical packet that is being read would be so large that size-of-new-packet + size-of-old-packet-tail > max_allowed_packet. To remedy this issue, we send data in 1MB sized packets, that's below the current client default of 16MB for max_allowed_packet, but large enough to ensure there is no unnecessary overhead from too many syscalls per result set. "	be794bc5eb1c355c86a94c8988faed0d4c40cf69
----------------------------
Bug #56595 RENAME TABLE causes assert on OS X The problem was that RENAME TABLE caused an assert if the system variable lower_case_table_names was 2 (default on Mac OS X) and the old table name was given in upper case. This caused lowercase_table2.test to fail. The assert checks that an exclusive metadata lock is held by the connection trying to do RENAME TABLE - specificially during updates of table triggers. The assert was triggered since the check is case sensitive and the lock was held on the normalized (lower case) version of the table name. This patch fixes the problem by making sure a normalized version of the table name is used for the metadata lock check, while using a non-normalized version of the table name for the rename of trigger files. The same is done for ALTER TABLE ... RENAME. Regression testing for the bug itself is already covered by lowercase_table2.test. Additional coverage added to lowercase_fs_off.test. 	f14d947c9898569367fda8028a8287ff676777c8
----------------------------
Selective transfer of a bugfix patch into 5.5.6-rc. The first part is the functional change, the second is needed as a compile fix on Windows (header file order). | committer: Marc Alff <marc.alff@oracle.com> | branch nick: mysql-5.5-bugfixing-56521 | timestamp: Thu 2010-09-09 14:28:47 -0600 | message: |   Bug#56521 Assertion failed: (m_state == 2), function allocated_to_free, pfs_lock.h (138) | |   Before this fix, it was possible to build the server: |   - with the performance schema |   - with a dummy implementation of my_atomic (MY_ATOMIC_MODE_DUMMY). | |   In this case, the resulting binary will just crash, |   as this configuration is not supported. | |   This fix enforces that the build will fail with a compilation error in this |   configuration, instead of resulting in a broken binary. | committer: Tor Didriksen <tor.didriksen@oracle.com> | branch nick: 5.5-bugfixing-56521 | timestamp: Fri 2010-09-10 11:10:38 +0200 | message: |   Header files should be self-contained 	91392cd8931fc1d63868a292f1d42df15bd59dcf
----------------------------
Bug#56521 Assertion failed: (m_state == 2), function allocated_to_free, pfs_lock.h (138) Before this fix, it was possible to build the server: - with the performance schema - with a dummy implementation of my_atomic (MY_ATOMIC_MODE_DUMMY). In this case, the resulting binary will just crash, as this configuration is not supported. This fix enforces that the build will fail with a compilation error in this configuration, instead of resulting in a broken binary. 	c9ab025dcd7f74ff9d6db09a584980383c840853
----------------------------
Bug#56528 Increased server footprint with MTR With recent changes in the performance schema default sizing parameters, the memory used by a mysqld binary increased accordingly. This negatively affects the MTR test suite, because running several tests in parallel now consumes more ressources. The fix is to leave the default production values unchanged, and to configure the MTR environment to limit memory used when running tests in the test suite, which is ok because only a few objects are typically used within a test script. This fix: - changed the default configuration in MTR to use less memory - adjusted the performance schema tests accordingly Note that 1,000 mutex instances was too short and caused test failures in the past in team trees, so the default used is now 10,000 in MTR. The amount of memory used by the performance schema itself can be observed with the statement SHOW ENGINE PERFORMANCE_SCHEMA STATUS 	92c6d9fc75f0025f0453e352d0bbfcc40398730e
----------------------------
WL#5096: Write test cases for WL 5092 Some rpl_row_img tests would make PB2 timeout on valgrind runs, because they would take too long to complete. We make these tests run faster by relaxing InnoDB transaction syncing to disk so that tests do not spend too much time on IO. This avoids PB2 test timeout (as stated above happening mostly on valgrind runs). Basically, we have deployed innodb_flush_log_at_trx_commit= 0 on .cnf files for those tests. Since these tests do not care about durability (we are not interested in crash-recovery scenarios), this is a safe change. 	7231f32cebe27bc699a9497c43cfc9c3a5e60e04
----------------------------
BUG#55377 max_binlog_cache_size does not work as specified The binary log is created with a maximum size defined by max (max_binlog_cache_size, binlog_cache_size) and not by the max_binlog_cache_size as one expects. To fix this behavior, we issue a warning message when the binlog_cache_size is greater than the max_binlog_cache_size and set binlog_cache_size to max_binlog_cache_size. 	984c9e539ffbf815dad941feb0ab89cf95deecde
----------------------------
Merge: bc93d51 d23a41d Manual merge: mysql-next-mr into mysql-next-mr-wl5092. Conflicts ========= Text conflict in mysql-test/include/diff_tables.inc Text conflict in mysql-test/suite/rpl/r/rpl_row_find_row.result Text conflict in mysql-test/suite/rpl/t/rpl_row_find_row.test Text conflict in sql/log_event.cc Text conflict in sql/sql_class.cc Text conflict in sql/sql_class.h Text conflict in sql/sql_update.cc 7 conflicts encountered. Additional changes due to merge =============================== rpl.rpl_conditional_comments deployed connection master after using diff_tables. log_event.cc Changed data type for binlog_row_image from uint to ulong. diff_tables.inc Existing version in mysql-next-mr is almost the same as in wl5092 tree, except for the fact that it does not restore the connection at the end. Kept the mysql-next-mr and deployed connection restoring at the end of diff_tables. 	ec03351a79c5e1d5e1acce827e5900b0ee6c2bc6
----------------------------
Extended ha_ndbcluster's 'pushed join' integration to detect bushy scans and serialize these by forcing an artificial parent dependency on the last scanchild defined so far. 	e13b217b5f93fb155714aee734bcd36b0341a355
----------------------------
ndb - remove unused include from ha_ndbcluster.cc 	a41508828b7a6d00ced4d0573f9d6723d9e0f77e
----------------------------
ndb - move the 'include_partition_fields_in_used_fields' function into the only file where it's used - ha_ndbcluster.cc - reduce MCP 	d5275bb29352707aca88e9b71cd067387d38309e
----------------------------
ndb - Merge in patch for bug#56117 which removes include of ha_ndbcluster_tables.h from mysqldump.c 	b98cb5bea5dce0e7f40a0e2d28b47dbe4899d199
----------------------------
Bug#56117 ha_ndbcluster_tables.h included by mysqldump but not used - Remove include of ha_ndbcluster_tables.h from mysqldump.c 	1b3d5da50e3206a7cfc5dc7704b6d5af568ba382
----------------------------
Merge: 1f82504 58ddafe ndb - merge in support for CI_BITMASK parameters in config.in and my.cnf - change to use same code path(as much as possible) for reading both config.ini and my.cnf so that the same rules are applied to config. 	278fb90c249dc47b6fa99a728b05eaf2975012bc
----------------------------
ndb - use configure to check for __is_pod and similar (instead of #defines), fix problems found 	778adecd598792260ea6fa50bbf4c9674ee4c0b9
----------------------------
ndb - Unit test for the new CI_BITMASK type for configuration parameters, also add some tests for CI_ENUM - mtr test to check that it's possible to specify CI_BITMASK and CI_ENUM in both my.nf and config.ini - This to make sure that functionality added for bug#56185 works 	58ddafebceb3018f552dd1da618a8521b0543d9e
----------------------------
ndb - Add a CI_BITMASK type for configuration parameters to make it possible for the ndb_mgmd to validate the bitmask spec. early. - Make LockExecuteThreadToCPU use the new type. Set max to 65535(i.e same as in ndbd). 	6203c8d92526fd5c3bfc9f5e81c29eaa05cfe1d0
----------------------------
ndb - Change the code so it uses same path for validating parameters regardless of wheter they are read from config.ini and my.cnf - This fixes a problem where CI_ENUM type was not properly validated when read through my.cnf 	3e22efb66033ef017cec2f7e135c12ba97bec09c
----------------------------
ndb - add checks to make sure that no CI_STRING parameters have min or max values set. - remove the min max from those config params that have it. 	63806c16f837ff1bffbea17a4c85a21bc1904b46
----------------------------
Fixed result file and temporary removed crash-safe collections until some bugs are fixed. To reproduce the bugs, run the following test case: ./mtr rpl_heartbeat_basic --mysqld=--relay-log-info-repository=TABLE --mysqld=--master-info-repository=TABLE 	2daac8f31b623b124703edfe1ff12ef7e1346594
----------------------------
Replay a change which I uncommitted to fix the tree: revno: 3255 revision-id: jimmy.yang@oracle.com-20100804020341-42tglff4hy2xrnv1 parent: jimmy.yang@oracle.com-20100803062157-s3he1ia42crj9jrk committer: Jimmy Yang <jimmy.yang@oracle.com> branch nick: mysql-next-mr-innodb timestamp: Tue 2010-08-03 19:03:41 -0700 message: Fix Bug #55114 Create status variable for innodb_open_files rb://412 approved by Sunny Bains 	78e169fdd1bc9bd96708d33b4d48f3765a15e504
----------------------------
Merge Bug#55832 fix from mysql-5.1-innodb: ------------------------------------------------------------ revno: 3550 revision-id: marko.makela@oracle.com-20100824081003-v4ecy0tga99cpxw2 parent: marko.makela@oracle.com-20100823102854-t1clrojqis2ley36 committer: Marko Mäkelä <marko.makela@oracle.com> branch nick: 5.1-innodb timestamp: Tue 2010-08-24 11:10:03 +0300 message: Bug#55832: selects crash too easily when innodb_force_recovery>3 dict_update_statistics_low(): Create bogus statistics for those indexes that cannot be accessed because of the innodb_force_recovery setting. ha_innobase::info(): Calculate statistics for each index, even if innodb_force_recovery is set. Fill in bogus data for those indexes that are not accessed because of the innodb_force_recovery setting. 	0a7a78a8d54029734d60809869098786d3680e00
----------------------------
Bug#55832: selects crash too easily when innodb_force_recovery>3 dict_update_statistics_low(): Create bogus statistics for those indexes that cannot be accessed because of the innodb_force_recovery setting. ha_innobase::info(): Calculate statistics for each index, even if innodb_force_recovery is set. Fill in bogus data for those indexes that are not accessed because of the innodb_force_recovery setting. 	ce7d6a288ca40e8a5e253c5c2e7084cfc985534c
----------------------------
Bug#55832: selects crash too easily when innodb_force_recovery>3 dict_update_statistics_low(): Create bogus statistics for those indexes that cannot be accessed because of the innodb_force_recovery setting. ha_innobase::info(): Calculate statistics for each index, even if innodb_force_recovery is set. Fill in bogus data for those indexes that are not accessed because of the innodb_force_recovery setting. 	109893dac0597b5114188ce257e469ad9f85110e
----------------------------
Bug #56006  test failures on mysql-5.1-rep+2-wl2540 this patch 1. fixes an assert erronously firing when the master started with --master-verify-checksum=1. 2. corrects access to event_buf bytes - the header flags - to treat the buffer as an array of bytes. 	8569939d254e43a9f88b50d19e94fa82f79ebeed
----------------------------
Bug#54747: Deadlock between REORGANIZE PARTITION and SELECT is not detected The ALTER PARTITION and SELECT seemed to be deadlocked when having innodb_thread_concurrency = 1. Problem was that there was unreleased latches in the ALTER PARTITION thread which was needed by the SELECT thread to be able to continue. Solution was to release the latches by commit before requesting upgrade to exclusive MDL lock. Updated according to reviewers comments (3). 	0c2b883dd2a9e8e5135d0830a60d475e85e0aecf
----------------------------
BUG#53452 Inconsistent behavior of binlog_direct_non_transactional_updates with temp table This patch introduces two key changes in the replication's behavior. Firstly, it reverts part of BUG#51894 which puts any update to temporary tables into the trx-cache. Now, updates to temporary tables are handled according to the type of their engines as a regular table. Secondly, an unsafe mixed statement, (i.e. a statement that access transactional table as well non-transactional or temporary table, and writes to any of them), are written into the trx-cache in order to minimize errors in the execution when the statement logging format is in use. Such changes has a direct impact on which statements are classified as unsafe statements and thus part of BUG#53259 is reverted. 	c6d4915f3c9e242dc8cb02d9d96ffff6a66b7a7a
----------------------------
"Bug#50489: another segfault in fix_semijoin_strategies... This particular problem occurs when we try to execute a query multiple times with different optimizer switch settings. On first execution, semijoin materialization strategy is a candidate and an SJ_MATERIALIZATION_INFO object is created. On second execution, materialization strategy is not a candidate, but there is a dangling pointer to the SJ_MATERIALIZATION_INFO object created in the prior execution. The pointer is followed, and we suffer a segfault. The solution chosen here is to refactor the SJ_MATERIALIZATION_INFO class so that optimization information is put into a new struct Semijoin_mat_optimize which is embedded in struct st_nested_join. SJ_MATERIALIZATION_INFO itself is renamed to Semijoin_mat_exec. If semijoin materialization is an allowed strategy and materialization is possible for the semijoin in question, the Semijoin_mat_optimize object is filled in and an st_position object is created and filled with information about the join strategy for the materialization. Later in the optimization, the materialization strategy is compared with other semijoin strategies, and, if selected, an Semijoin_mat_exec object is created and attached to the join nest representing the semijoin operation. The object is then filled with data relevant for semijoin execution, such as number of tables involved, whether this is a scan, information about temporary table for materialization, etc. NOTE. This bug no longer occurs on the current souce code base. It does however fix bug#46744, which is re-introduced by the fix for bug#43768, and it should also be useful because of the refactoring effect on the semijoin materialization strategy. mysql-test/r/optimizer_switch.result Added results for test case for bug#50489 mysql-test/t/optimizer_switch.test Added test case for bug#50489 sql/sql_class.h Optimization data are removed from class SJ_MATERIALIZATION_INFO. SJ_MATERIALIZATION_INFO is renamed to Semijoin_mat_exec. sql/sql_select.cc optimize_semijoin_nests() will no longer create SJ_MATERIALIZATION_INFO objects. Instead it populates the Semijoin_mat_optimize struct inside the nested_join object with estimated cost for the materialized semijoin. fix_semijoin_strategies_for_picked_join_order() is given a boolean return value. The return value is necessary because the function may create Semijoin_mat_exec objects, hence it must be able to return error conditions. Notice that these objects are created and populated only if a semijoin materialization strategy is actually chosen. Reset of sjm.positions is performed in this function. advance_sj_state() has been slightly simplified: the ""emb_sj_nest"" is now assigned when the function is entered, in addition to changes that was necessitated by the splitting up of SJ_MATERIALIZATION_INFO. Reset of the pointer sj_nest->sj_mat_exec is added to JOIN::destroy(). sql/sql_select.h List with name sjm_info_list is renamed to sjm_exec_list. sql/sql_test.cc New interface for function print_sjm(), made necessary by the splitting of SJ_MATERIALIZATION_INFO. sql/sql_test.h New interface for function print_sjm(). sql/table.h Defines struct Semijoin_mat_optimize containing estimated cost for a materialized semijoin operation. The struct is added as a member in struct st_nested_join. "	7be27a778b6b897b6e1d21608a7a5341729df488
----------------------------
Backporting Bug#32391 Character sets: crash with --character-set-server from mysql-trunk-bugfixing (5.6.1-m5) from mysql-5.5-bugfixing (5.5.6-m3). 	89e6eb0b1e0199f2eecd5b27d8ebd488e4bcb2b6
----------------------------
Bug #55547 InnoDB is not included when configuring by default Added InnoDB to the 'default' plugin group, and modified the autoconf script so the 'default' group is actually built by default. (i.e  ./configure.am == ./configure.am --with-plugins=default , instead of being ./configure.am --with-plugins=none ) 	bd75361929caadac565d471d7e374060ff93794d
----------------------------
Bug #54850 rpl_ndb.rpl_ndb_stm_innodb and rpl_ndb.rpl_ndb_2other fails The two regressions tests failed after WL#5349 was pushed, since they were writted with the implicit requirement that MyISAM is the default storage engine. Adding --default-storage-engine=MyISAM as startup parameter, to mimic the pre-wl#5349 situation. 	7d2d2e0f9b50c9f5e813b3018d247125478e39d1
----------------------------
Bug#55001 Change in behavior: thread_concurrency (docs, example files) The system variable 'thread_concurrency' has been (re-)enabled on all platforms, to prevent startup errors. 'thread_concurrency' is unused and has no effect, on any platform, in MySQL 5.1 and later versions.  It will be deprecated, and removed, in context of worklog WL#5265 	19c9957367090afe9cb2bfb7ce81dea5c22751a0
----------------------------
Change default for innodb_strict_mode to FALSE. Note that this was originally pushed by Calvin but the was later reverted by mistake. bug#54702 	231a97fde065574538351f593184cefb05176364
----------------------------
Undo changes to innodb_strict_mode that went in by mistake in r3149 	0daa01fed06c452a168b7935aa87bec62d28247b
----------------------------
"Bug#32391 Character sets: crash with --character-set-server Problem: mysqld crashed on initialization of the built-in stopwords when started with --character-set-server=utf16. ft_init_stopwords() mistakenly compared the built-in stopwords using ""utf16"" as character set, which lead to exit on DBUG_ASSERT((slen % 2) == 0) in my_strnncollsp_utf16() when comparing a word with an even length (for example word=""about"", len=5). Fix: Using latin1 when initializing the built-in stopwords for the ""tricky"" character sets. "	1ca3e847e97966215fc29194c8c8f88204dfb858
----------------------------
"Bug#47595 Don't print log lines to STDOUT for ndb_mgmd - Move the printouts for which config files is being used until after the config has been read and thus the cluster logs lotation is known. It's a little chicken and egg problem since the location must be read before it can used. - Move the printout of ""MySQL Cluster management server X.X.X started..."" a little later so it also end up in cluster log. - Change the option parsing code in main.cpp to use ""fprintf(stderr, ..."" for error printouts and move it before setup of eventlogger - Print ""MySQL Cluster management server X.X.X"" to stdout as first thing when program starts up. "	1dc1e537a0dbb119e21d00c6e9a7688c293aad27
----------------------------
"Bug#54316 mysqldump and restore ndbinfo fails - Problem was caused by ""blocks"" and ""config_params"" lookup tables being empty after restore of dump with no data. - Don't allow the ndbinfo databse to be dumped(not even if explicitly given on command line). - Use LEFT JOIN in the views so that they would return rows even if the lookup tables are empty(for whatever reason). - Add primary key indexes on the lookup tables for faster lookups. "	42331288e42dfc0e8b5f68f28105c24a26cd9983
----------------------------
ndb - bug#55963 - Add DictTrace config variable 	f6ec19cf3fbe94eb275154c6372e87e971bc77ee
----------------------------
Bug#55839 ndb_config --configinfo --xml does not expose HostName1/2 for TCP sections - Change HostName1 and HostName2 to CI_USED for TCP, SCI and SHM(although the latter two are still experimental they are changed for consistency) 	a4f826a6f264d3c2b9656b5729de71cc31180eea
----------------------------
Bug#54914: InnoDB: performance drop with innodb_change_buffering=all Reduce ibuf_mutex and ibuf_pessimistic_insert_mutex contention further. Protect ibuf->empty by the insert buffer root page latch, not ibuf_mutex. ibuf_tree_root_get(): Assert that ibuf_mutex is owned by the caller. Assert that the stamped page number is correct. Assert that ibuf->empty agrees with the root page. ibuf_size_update(): Do not update ibuf->empty. ibuf_init_at_db_start(): Update ibuf->empty while holding the root page latch. ibuf_add_free_page(): Return TRUE/FALSE instead of DB_SUCCESS/DB_STRONG_FAIL. ibuf_remove_free_page(): Release ibuf_pessimistic_insert_mutex as early as possible. ibuf_contract_ext(): Rely on a dirty read of ibuf->empty, unless the server is being shut down. Never acquire ibuf_mutex. Eliminate n_stored. ibuf_contract_after_insert(): Never acquire ibuf_mutex. Perform dirty reads of ibuf->size and ibuf->max_size. ibuf_insert_low(): Only acquire ibuf_mutex for mode==BTR_MODIFY_TREE. Perform dirty reads of ibuf->size and ibuf->max_size. Update ibuf->empty while holding the root page latch. ibuf_delete_rec(): Update ibuf->empty while holding the root page latch. ibuf_is_empty(): Release ibuf_mutex earlier. 	ef6f561a9ee9c7743eda64eec82c15d29ee1187f
----------------------------
"fix for simple test failures. Some tests set the ""debug"" variable but are expected to pass even if this variable doesn't exist; but for a binary which has debug_sync compiled in and not debug, setting debug will try to set (""prefix rule"") debug-sync-timeout and this will fail. Solution: made tests require debug binary. "	10ce6804900d7361d0f932041c609c6abafc0b03
----------------------------
Reduce the ibuf_mutex hold time. This does not fix the update regression in Bug #54914, but it does speed up the execution for innodb_change_buffering=inserts. ibuf_add_ops(), ibuf_merge_or_delete_for_page(), ibuf_delete_for_discarded_space(): Use atomic built-ins instead of ibuf_mutex, when available. ibuf_add_free_page(), ibuf_remove_free_page(), ibuf_contract_ext(): Release ibuf_mutex earlier. ibuf_free_excess_pages(): Release ibuf_mutex before a conditional branch. ibuf_insert_low(): Release ibuf_mutex before a conditional branch. Create ibuf_entry before re-acquiring ibuf_mutex. Simplify a loop to reduce code footprint. Release ibuf_mutex before mtr_commit() [btr_pcur_close()]. ibuf_is_empty(): Release ibuf_mutex before mtr_commit(). 	84fbabace0ad32c71c9317ff07b944adece92121
----------------------------
Bug #54909: Confusing description about read_buffer_size and read_rnd_buffer_size Applied the updated description from Paul's patch. 	87acb536f18657218910d6de846a6fba30d7024e
----------------------------
ndb - remove unecessary include of NdbMem.h in LocalConfig.cpp - move include of NdbOut.hpp into LocalConfig.cpp - add include of BaseString.hpp to LocalConfig.hpp 	daca395a9f00aa36d6c32f76b83bb2d7d3315cfd
----------------------------
"Part of fix for bug#52044 ""FLUSH TABLES WITH READ LOCK and FLUSH TABLES <list> WITH READ LOCK are incompatible"" to be pushed as separate patch. Replaced thread state name ""Waiting for table"", which was used by threads waiting for a metadata lock or table flush, with a set of names which better reflect types of resources being waited for. Also replaced ""Table lock"" thread state name, which was used by threads waiting on thr_lock.c table level lock, with more elaborate ""Waiting for table level lock"", to make it more consistent with other thread state names. Updated test cases and their results according to these changes. Fixed sys_vars.query_cache_wlock_invalidate_func test to not to wait for timeout of wait_condition.inc script. "	a6c00c276ed8e7f2e30301a414533891a8cf2b5d
----------------------------
WL#5508 SEAGULL: Move NDB version configuration down into storage/ndb - Improve comments and group defines together 	c9c7cfe46585e2cccf65dd7091ce07b132150b97
----------------------------
ndb - Add comment for JAVA_NDB_VERSION - Remove  JAVA_NDB_VERSION from my_config.h/config.h 	7dd15c0d82d478d6b7e36e7e828af58bb1822ad5
----------------------------
WL#5508 SEAGULL: Move NDB version configuration down into storage/ndb - Calculate the NDB_MYSQL_VERSION_XX variables from MYSQL_VERSION_ID thus removing the need for our build systems to extract it. - Remove automake and cmake code to extract NDB_MYSQL_VERSION_XX - Add test that NDB_MYSQL_VERSION_XX maps backto MYSQL_VERSION_ID - Remove NDB_MYSQL_VERSION_XX from my_config.h/config.h 	4d61b791dbe34dd694a22f5631df05fc289d8ac3
----------------------------
"WL#5508 SEAGULL: Move NDB version configuration down into storage/ndb - Add macro to type_JAVA.cmake that (if not already set) builds the version string to use when generating jars etc. directly from the NDB_VERSION_XX variables and save the string in JAVA_NDB_VERSION. - Call the macro from all places that need to variable to be set. - Remove old include file for extracting NDB version for ""java"" from configure.in "	6c36748dc9874e1a5e96a18d76f1d28720f972a5
----------------------------
WL#5508 SEAGULL: Move NDB version configuration down into storage/ndb_configure.m4 - Move NDB_VERSION_XXX variables from configure.in to ndb_configure.m4 - Make storage/ndb/include/CmakeLists.txt extract the NDB version from ndb_configure.m4 instead of configure.in 	bf8435bb55cd831e3013b7408c4305ef49b82447
----------------------------
Fix Bug #55114 Create status variable for innodb_open_files rb://412 approved by Sunny Bains 	5af8b4d1157525d3a7e84d71cd48f9cba0df07b2
----------------------------
ndb - reduce MCP in configure.in - fix merge error causing duplicate comments - add missing newline 	eabb20b175a146c8fbd22b6aefb1e633cc6479cf
----------------------------
Bug #54702: revert the default of innodb_strict_mode to false. 	ae67979f76f9bdcda08d6afdaf748bb9d0c12bb0
----------------------------
Revert revision which disabled the generating of configuration scripts if cmake is available. We need to always generate the scripts in order for the dual cmake/autotools support to work. 	b5c8757a6d48ad1c6b7f8707434a1b00a0beadb4
----------------------------
Bug #55188: GROUP BY, GROUP_CONCAT and TEXT - inconsistent results In order to be able to check if the set of the grouping fields in a GROUP BY has changed (and thus to start a new group) the optimizer caches the current values of these fields in a set of Cached_item derived objects. The Cached_item_str, used for caching varchar and TEXT columns, is limited in length by the max_sort_length variable. A String buffer to store the value with an alloced length of either the max length of the string or the value of max_sort_length (whichever is smaller) in Cached_item_str's constructor. Then, at compare time the value of the string to compare to was truncated to the alloced length of the string buffer inside Cached_item_str. This is all fine and valid, but only if you're not assigning values near or equal to the alloced length of this buffer. Because when assigning values like this the alloced length is rounded up and as a result the next set of data will not match the group buffer, thus leading to wrong results because of the changed alloced_length. Fixed by preserving the original maximum length in the Cached_item_str's constructor and using this instead of the alloced_length to limit the string to compare to. Test case added. 	d765e30a1d2533ce74e45a144be0e132c3485bf4
----------------------------
Fix a compilation failure of ha_ndbcluster_binlog.cc. 	cb4db7d8cba3a5f91ca6d1f1cae4a62e61945da6
----------------------------
Bug#55205 Memory leak in ndb_mgmd when --disable-config-cache is used - Unsubscribe from incoming signals before terminating the ConfigManager thread 	26f428c0bfb20820a1a01e00052495b88352e3b0
----------------------------
BUG#44209: MASTER_CONNECT_RETRY and --master-retry-count disconnected from each other Improvements on the tests: 1. Changed assertion when CHANGE MASTER TO master_rety_count=0; 2. Added assertion to check that when issuing a CHANGE MASTER TO without specifying a value for master_retry_count, the current value is preserved; 3. Added assertion checking that when feeding a negative value for master_retry_count, an error is raised; 	ef5c8f4357640e460ba7fe41bab1b590aedde9ff
----------------------------
BUG#44209: MASTER_CONNECT_RETRY and --master-retry-count disconnected from each other Post-push fix. CHANGE MASTER TO master_retry_count=0 was not working properly, because before assiging the value got from the lex, we would check if it was different than zero. This is wrong. To fix this we, deploy a flag that states when the value was indeed set by a CHANGE MASTER TO command - which could even be 0 - and only then we assign the new value. 	c25db00ddf7c24b48aa66259e346703543af500b
----------------------------
Bug #54660 MTR cannot start server properly with non-default innodb_log_file_size Pass any --innodb* options to bootstrap as well Backported to v1, where also a removal of --loose-skip-innodb is needed 	0ebd10bc3b06d8e5499e3935ddcf08525baac2c9
----------------------------
Bug #54805 definitions in regex/my_regex.h conflict with /usr/include/regex.h Post Push fix: my_regex-t was vulnerable to #include file ordering: the result was that sizeof(off_t) == 4 in the .cc main program but sizeof(off_t) == 8 in the regex .c files fix: always include my_config.h first Added the same #include to all gunit test files. 	3b471901537ba7ee2d2db825536087c8f93f5368
----------------------------
Use an array of mutexes to control access to the page_hash table within each buffer pool. The idea is to reduce contention on the buf_pool mutex. Adds a new configuration parameter innodb_page_hash_mutexes with default being 256 and a permissible range of 1 - 1024. rb://394 	aad1c7d0dd8a152ef6bb685356c68ad9978d686a
----------------------------
Fix the failing innodb.innodb_bug54679 test A change in the default values of some config parameters caused this test to fail, adjust the test and make it more robust so it does not fail for the same reason in the future. 	3074ff5233d128be5a3539ab0dab9e213600513d
----------------------------
Do not generate autotools configuration scripts when cmake is to be used. 	92b9ca54228b750fd011ce83873a34aa187f7135
----------------------------
Merge: abacbed 83aebca Merge mysql-trunk-bugfixing -> mysql-trunk-innodb (resolving conflicts in mysql-test/suite/rpl/t/rpl_sync-slave.opt and configure.cmake) 	8152cd0ac80d3b1c7e9ff98082f109a3eb24433b
----------------------------
BUG#55322: SHOW BINLOG EVENTS increases @@SESSION.MAX_ALLOWED_PACKET Problem: when SHOW BINLOG EVENTS was issued, it increased the value of @@session.max_allowed_packet. This allowed a non-root user to increase the amount of memory used by her thread arbitrarily. Thus, it removes the bound on the amount of system resources used by a client, so it presents a security risk (DoS attack). Fix: it is correct to increase the value of @@session.max_allowed_packet while executing SHOW BINLOG EVENTS (see BUG 30435). However, the increase should only be temporary. Thus, the fix is to restore the value when SHOW BINLOG EVENTS ends. The value of @@session.max_allowed_packet is also increased in mysql_binlog_send (i.e., the binlog dump thread). It is not clear if this can cause any trouble, since normally the client that issues COM_BINLOG_DUMP will not issue any other commands that would be affected by the increased value of @@session.max_allowed_packet. However, we restore the value just in case. 	cf5e69c9042614459b9098548be0b33cb4a4671d
----------------------------
Merge: 57d0aa0 9503a8e Manual merge from mysql-trunk-bugfixing. Conflicts: - cmake/cpack_source_ignore_files.cmake - packaging/WiX/CPackWixConfig.cmake 	dfb2f9afae6dc80dc59565d4bd2eb363e046edf6
----------------------------
Strip maintainer mode options from the flags written to mysql_config. Those are mainly warning options intended to monitor the server code and shouldn't be leaked to client code. 	125315b4e4f2fc8b54df927bb77e896826a8e507
----------------------------
Fix Bug #55095 innodb_file_format_check: no warning for illegal value rb://397 approved by Sunny Bains 	5b775faf584562a246a6f9c36a1f8ecf0c2d5c01
----------------------------
Handle more gracefully errors from que_eval_sql() Allow error codes other than DB_SUCCESS and DB_LOCK_WAIT_TIMEOUT to be returned from que_eval_sql(), construct a more generic message if an error is returned. 	2f23b1668f19a586f37bde9da046bd6f1f1480d7
----------------------------
We can't rely on mysql_config for core functionality like plugins as it may be part of a separate package. Work out the likliest plugin directory using similar logic to the data directory, and avoid the dependancy. 	8f1b8816163ff24d005dda51482f2cb761eb8766
----------------------------
Remove flags which have already been defined in configure.cmake. Add a note to investigate -felide-constructors usage on OSX. 	8c3c09ab57eb348e8a2b54685e72a338a1776e40
----------------------------
Backporting patch for Bug#52716 (Large files support is disabled, large-pages option is broken) from next-mr to mysql-5.5.5-m3-release. Original revision: ------------------------------------------------------------ revision-id: vvaintroub@mysql.com-20100416134524-y4v27j90p5xvblmy parent: luis.soares@sun.com-20100416000700-n267ynu77visx31t committer: Vladislav Vaintroub <vvaintroub@mysql.com> branch nick: mysql-next-mr-bugfixing timestamp: Fri 2010-04-16 15:45:24 +0200 message: Bug #52716 Large files support is disabled, large-pages option is broken. Correct typo: large pages option was tied to wrong variable opt_large_files, instead of opt_large_pages. ------------------------------------------------------------ 	863b07d038b4e6f3afaf2ccd4126d4db4233e6d6
----------------------------
Backporting patch for Bug#52716 (Large files support is disabled, large-pages option is broken) from next-mr to trunk-bugfixing. Original revision: ------------------------------------------------------------ revision-id: vvaintroub@mysql.com-20100416134524-y4v27j90p5xvblmy parent: luis.soares@sun.com-20100416000700-n267ynu77visx31t committer: Vladislav Vaintroub <vvaintroub@mysql.com> branch nick: mysql-next-mr-bugfixing timestamp: Fri 2010-04-16 15:45:24 +0200 message: Bug #52716 Large files support is disabled, large-pages option is broken. Correct typo: large pages option was tied to wrong variable opt_large_files, instead of opt_large_pages. ------------------------------------------------------------ 	73074274edbd0c631cbbb31f8f25c29a14626bb2
----------------------------
"A test case for Bug#50788 ""main.merge fails on HPUX"", and a backport of relevant changes from the 6.0 version of the fix done by Ingo Struewing. The bug itself was fixed by the patch for Bug#54811. MyISAMMRG engine would try to use MMAP on its children even on platforms that don't support it and even if myisam_use_mmap option was off. This lead to an infinite hang in INSERT ... SELECT into a MyISAMMRG table when the destination MyISAM table was also selected from. A bug in duplicate detection fixed by 54811 was essential to the hang - when a duplicate is detected, the optimizer disables the use of memory mapped files, and it wasn't the case. The patch below is also to not turn on MMAP on children tables if myisam_use_mmap is off. A test case is added to cover MyISAMMRG and myisam_use_mmap option. "	0e9b910d6b7442a42f2aea0a0043327fff44b267
----------------------------
Bug#52305 Customizing storage of server id inside the anyValue Test UserData part of AnyValue Add a DBUG-only env variable to trigger MySQLD to set the user portion of AnyValue to all 1s. Modify my.cnf for some AnyValue-sensitive testcases to set a 24-bit user portion which will be set to all 1s. This gives coverage of the case(s) where the User portion is non-zero, checking that the system still functions as expected w.r.t. ServerId, NoLogging etc. The existing repl_ndb_slave_lsu testcase is modified to also use the mysqlbinlog tool to look at the events recorded. A new variant of it called rpl_ndb_slave_lsu_anyval runs with the top 24 bits set to 1 and server-id-bits set to 7.  The testcase ensures that : - Server-ids are correctly extracted from the composite serverid - Composite serverids are binlogged - Composite serverids pass through the slave and can be binlogged - mysqlbinlog can be used to see composite server id values. 	ab78e96bb288ce855d7013a631d1ad7925a1b4f9
----------------------------
Bug#52305 Customizing storage of server id inside the anyValue Add support for server-id-bits to Ndb handler Ndb handler is modified to support the server-id-bits mechanism as follows : - Where server-id-bits is < 31, only those bits will be set on NdbApi operations created by the handler - When receiving events for committed NdbApi operations, only the server-id-bits lsbs will be consulted to determine the source serverId (if any). - When writing events to the Binlog, the user-data from the received AnyValue (if any) will be written into the Binlog event's ServerId.  Only the bottom server-id-bits will be set to the event's ServerId (As received for replicated updates, or the server's own Id for non-replicated updates). This mechanism allows : - NdbApi applications to set the user-data portion of the AnyValue for their operations (bits server-id-bits to 30). - NdbApi applications to listen to events and receive the user-data portion of their AnyValue. - User-data portions of AnyValue to be recorded in the Binlog - User-data portions of AnyValue to be tagged onto replicated updates in the slave - User-data portions of AnyValue to be recorded in the Slave's Binlog.... - Normal 'no-logging', 'log-slave-updates', 'replication-loop-detection' and 'ndb_apply_status' mechanism work as expected. The default value of server-id-bits is 32, which causes no change in the current behaviour of the Ndb handler w.r.t. AnyValue and ServerIds. Note that in future it may be useful to offer a configuration where the userdata portion of the AnyValue is ignored within a Cluster, but userdata is *not* recorded in the ServerId field of Binlogged events. 	41209f911ef88a3b6acfc2534492a712bff9a0f3
----------------------------
Bug#52305 : Customizing storage of server id inside the anyValue Add server-id-bits option to MySQLD A general server-id-bits option is added to MySQLD initialisation options. This option indicates the number of lsbs within the 32-bit ServerId which actually contain the server-id. Indicating that the actual server-id uses < 32 bits allows some of the remaining bits to be used for other purposes.  When extracting the actual server-id for purposes such as replication-loop-detection, the server will ignore the irrelevant bits. If the configured server-id cannot be expressed in server-id-bits then the MySQLD will refuse to start. The server-id bits option is used mask out the irrelevant bits of the serverid in the IO and SQL threads when deciding whether an event should be ignored based on serverid. The event's serverid is used to set the slave thread's thd->server_id in the normal way, and a new thd variable, unmasked_server_id carries the full 32-bits of the received server_id. In cases where server_id_bits is < 32, handlers can look at thd->unmasked_server_id to get the non-server-id data associated with the event. The mysqlbinlog tool gets a new option --server-id-bits which controls how it interprets the server ids in the Binlogs it reads.  As with MySQLD this defaults to 32.  Where the Binlog was written by a MySQLD with server-id-bits < 32 and some useful info in the msbs, running mysqlbinlog with server-id-bits of 32 allows this data to be seen. 	213ad2cb1dd2b938bc2775162805b8128fe28778
----------------------------
fix include directory for config/type_util.cmake 	f972bdb01258203d75f7ffe0391b4691019bfec7
----------------------------
bug#52737 plugin_dir is set to /usr/local/mysql/lib/plugin while starting via mysqld_safe Rather than hardcode the plugin directory, enhance mysql_config to fix plugin path when running a relocated install, and use it to provide the plugin directory to mysqld_safe. 	18cd34153c857d54edaee48b077a328e6e557167
----------------------------
Copy-pasted the wrong line from configure.in, fix gcc detection. 	0b7b897dec0abebe3f86aae2cbb4dcdec0da5bbd
----------------------------
"Fix Bug #54739 Accidental change in compile-time definitions for FreeBSD Revert the accidental setting of ""HAVE_BROKEN_REALPATH"" on current versions of FreeBSD, do it for both autotools (""configure.in"") and cmake (""cmake/os/FreeBSD.cmake""). "	f1cc08433e09088f0929d387b8b2fe79f610c6af
----------------------------
"CMakeLists.txt cmake/build_configurations/mysql_release.cmake - Corrected spelling ENABLE_LOCAL_INFILE => ENABLED_LOCAL_INFILE - In addition to ""RelWithDebInfo"", set target ""Release"" and ""Debug"" - Set Debug flags - Enabled SSL on Mac OS X - For gcc builds, set RELEASE and DEBUG flags as well - For g++ builds, added ""-fno-implicit-templates"" - Use ""-O"" (gcc -O1) for optimized binaries, as ""DEBUG"" in out case is more about enabling trace support to the server, no optimization makes binaries too slow to be practical to reproduce problems cmake/os/WindowsCache.cmake - Removed unused HAVE_SYS_IOCTL config.h.cmake - Added header checks and missing defines - Removed unused HAVE_SYS_IOCTL - Grouped and uncommented some HAVE_* that are really not defines, but internal variables used in the CMake setup, - Added hard coded flags for HP-UX and Mac OS X configure.cmake - Added header checks and missing defines - Removed unused HAVE_SYS_IOCTL - ""sys/dir.h"" test needs ""sys/types.h"" - Corrected syntax for ""sys/ptem.h"" test - Don't exclude test for some types if Mac OS X, harmless to do the test and we want the HAVE_<type> settings - Added hard coded flags for HP-UX and Mac OS X extra/yassl/CMakeLists.txt extra/yassl/taocrypt/CMakeLists.txt - Added missing source file ""template_instnt.cpp"" "	24b3962d512fad51225ceafcd50d74f52e603472
----------------------------
Backport into build-201006221614-5.1.46sp1 > ------------------------------------------------------------ > revno: 1810.3987.14 > revision-id: davi.arnaut@sun.com-20100429132816-ictyul6d75itek22 > parent: ramil@mysql.com-20100429044232-f0pkyx8fnpszf142 > committer: Davi Arnaut <Davi.Arnaut@Sun.COM> > branch nick: 50974-5.0 > timestamp: Thu 2010-04-29 10:28:16 -0300 > message: >   Bug#50974: Server keeps receiving big (> max_allowed_packet) packets indefinitely. > >   The server could be tricked to read packets indefinitely if it >   received a packet larger than the maximum size of one packet. >   This problem is aggravated by the fact that it can be triggered >   before authentication. > >   The solution is to no skip big packets for non-authenticated >   sessions. If a big packet is sent before a session is authen- >   ticated, a error is returned and the connection is closed. > ------------------------------------------------------------ > revno: 3363 [merge] > revision-id: davi.arnaut@sun.com-20100429231819-i3anwzrdasjmezvt > parent: davi.arnaut@sun.com-20100401131522-895y8uzvv8ag44gs > parent: davi.arnaut@sun.com-20100429132816-ictyul6d75itek22 > committer: Davi Arnaut <Davi.Arnaut@Sun.COM> > branch nick: mysql-5.1-bugteam > timestamp: Thu 2010-04-29 20:18:19 -0300 > message: >   Manual merge. > ------------------------------------------------------------ > Use --include-merges or -n0 to see merged revisions. 	74a077b0b67dbf9dd449972e9a3c954de12e8399
----------------------------
Moved ha_ndbcluster::check_if_pushable() and ha_ndbcluster::check_is_pushed() together with rest of methods in ha_ndbcluster.cc used to determine pushability of a set of JOIN_TAB's - NO CODE CHANGE! 	c1c9df8961433818dec6789a731208926033ff1a
----------------------------
Removed AQP::get_referred_table_access() as it has become obsolete after latest rewrites to ha_ndbcluster.cc() 	0e50f210eacce3cb515b8465d0a41bdc657aedc4
----------------------------
Integrated join refering multiple parents as pushable joins. In order to implement the new pushability detection, and still keep the code maintainable and extensible for the future, class ndb_pushed_builder_ctx has been introduced in ha_ndbcluster.cc. This class contains the context and helper methods used during pushability detection. The previous 'static field_ref_is_join_pushable()' has now become a member of this class. ::field_ref_is_join_pushable() has been heavily rewritten in order to implement the new multiparent logic. New MTR testcases has been added for multiparent testing. 	7d92f467f6ec54346ed032edc25ac0aca02cce09
----------------------------
WL#5416 Restructure MTR subquery tests Second patch: - Add tests for more optimizer_switch combinations - Put ordering on some query results to reduce difference between different settings of optimizer_switch - Disable a few test cases that are failing due to bugs 	31aa3721132ed8d6995a263d6e1c368cdaf7d8c2
----------------------------
WL#5416 Restructure MTR subquery tests Restructure the current MTR subquery tests, into a set of general subquery tests that can be run with different settings of optimizer_switch and optimizer_join_cache_level. Main goals: - Be able to more systematically test subquery execution with different settings of optimizer_switch. - Be able to incrementally add optimizer_switch sub-variables to a tree without having to operate with different result files in different trees. (This will make it easier to incrementally add original 6.0 features now residining in mysql-next-mr-opt-backporting to mysql-next-mr) - Be able have different defaults for optimizer_switch settings in different trees without having to operate with different result files. Moved existing test files into include directory to be included from different tests with different settings of optimizer_swicth.  Added tests for whether switches and cache levels that tests depend upon are supported.  If not, tests are skipped. Added result ordering to some queries to avoid result differences when switches are turned off. 	0e1b654d907e2bd47c52de2cd807f00c06036c49
----------------------------
WL#5349 Change default storage engine to InnoDB The default storage engine is changed from MyISAM to InnoDB, in all builds except for the embedded server. In addition, the following system variables are changed: * innodb_file_per_table is enabled * innodb_strict_mode is enabled * innodb_file_format_name_update is changed to 'Barracuda' The test suite is changed so that tests that do not explicitly include the have_innodb.inc are run with --default-storage-engine=MyISAM.  This is to ease the transition, so that most regression tests are run with the same engine as before. Some tests are disabled for the embedded server regression test, as the output of certain statements will be different that for the regular server (i.e SELECT @@default_storage_engine).  This is to ease transition. 	3ac6a4b451f61b8edf9cb326111157a86f1bdc1c
----------------------------
Fix possible waits when dropping an index Fix possible waits when dropping an index similarly to the way they were fixed in DROP TABLE - set trx->allowed_to_wait to FALSE during que_eval_sql() so it does not wait on possible user locks but returns DB_LOCK_WAIT_TIMEOUT immediately. Also push the error message to the client in addition to printing it to the server error log and change DROP TABLE not to fail if stats cannot be deleted. 	6cc400293b25d6a638fe976e0dcb95729ef04581
----------------------------
This change splits innodb_file_format_check into innodb_file_format_check and innodb_file_format_max two system variables. And this also fixes bug #53654 after 2nd shutdown innodb_file_format_check attains strange values. rb://366 approved by Marko 	689d245782350e9296e4e44a090fb6c1e38e6d15
----------------------------
"Bug #52275  	CMake configure wrapper does not handle --with-comment correctly Properly convert --with-comment do not uppercase it, quote as it might contain spaces. "	f79c50f8754267b849a4c6da32ca7605d1c67b44
----------------------------
Resolve possible waits in DROP TABLE * Add a new flag allowed_to_wait to trx_t that when FALSE has the same effect as thd_lock_wait_timeout() being 0 for this trx. * Set allowed_to_wait to FALSE for the private trx that is doing DELETE FROM table_stats WHERE table_name='t'; inside DROP TABLE t; If the DBA has locked the rows in table_stats then DROP will return an error. * Ensure that the stats tables will not get DROPped when dict_stats_drop_table() is executing by inrementing the table reference count. Currently MySQL is protecting us with the LOCK_open mutex, but there are plans to remove it. * Remove now unnecessary function lock_table_by_name() 	26bbdab642436a58727c31923b17efcaeb7b6454
----------------------------
BUG#52737: plugin_dir is set to /usr/local/mysql/lib/plugin while starting via mysqld_safe Incremental patch to fix plugin_dir from .../lib/plugin to .../lib/mysql/plugin. 	c7170276efa491d4c6a04a454710701ae78eb53d
----------------------------
bug#52182 c01_hborder.diff configure HB order [re-commit] 	bba97daae0925785ef7a1fa6f6d00e19323033eb
----------------------------
ndb test - make the config file for loki27 similar to linux by adding initial tablespaces and shared memory settings 	b284c62c4a2ec68a6cd45982695b1f826c64eab7
----------------------------
Bug #52321 mtr test suite paths need to be updated Use $suitedir instead of $basedir to find suites Add 'testdir' to ConfigFactory 	4316bf37f042fce342ac8b984976030e550e8d16
----------------------------
Make perfschema.pfs_upgrade and sys_vars.wait_timeout_func experimental. 	63f529a469c9a6f7bc63e07a04105603c4b6456d
----------------------------
wl#2540 replication events checksum The final conceptual patch addresses the 1st item for the last commit todo. That includes a. extending rpl_checksum to demonstrate slave execution stability in face of binary and relay-log rotations in the context of master and slave having arbitrary (possibly different) server's checksum algorithms. b. prior the test to pass some piece of code was clean up to simplify logics of need_checksum() and propagation of the relay-log checksum Alg from one master-slave session to the other. c. binlog_checksum is converted from bool to enum forcing changes in external and internal interfaces as well as the master-slave binlog-checksum handshake. This patch leaves the reliable FD issue out to be addresses in a separate piece of work. That will implement an idea described on WL#2540 which is about `we need to distinguish between a checksummed-and-corrupted FD and not checksummed'. TODO: 1. extend the test base to verify all cover cases of OM -> NS and NM -> OS 2. merge with bug#49741 Fine details of changes per file: mysql-test/extra/rpl_tests/rpl_log.test gave out to wait for  bug#49741 merge to edit myself mysql-test/include/have_binlog_checksum_off.inc a new guard to require by tests which mess with simulation incompatible checksum ways. mysql-test/suite/rpl/t/rpl_checksum.test to demonstrate slave execution stability in face of binary and relay-log rotations in the context of master and slave having arbitrary (possibly different) server's checksum algorithms. sql/log.cc Addressing, binlog-checksum bool-to-enum-conversion, RL-checksum placeholder logics simplification, Log_event::need_checksum() correcting and relaxing. sql/log.h Commenting on the definition of relay_log_checksum_alg as the placeholder of  Relay-LoG  checksum alg value. sql/log_event.cc Addressing, binlog-checksum bool-to-enum-conversion, RL-checksum placeholder logics simplification, Log_event::need_checksum() correcting and relaxing. sql/rpl_mi.h sql/rpl_mi.cc RL-checksum placeholder logics simplification. The last seen value of FD_m.A (master's FD checksum alg) is stored in relay_log's member right upon receiving the event. That makes unnecessary ealier ramped up last_master_checksum_alg. sql/mysqld.c sql/mysql_priv.h sql/log_event.h Addressing, binlog-checksum bool-to-enum-conversion. sql/set_var.h Addressing binlog-checksum bool-to-enum-conversion. *Notice* change (private->protected for `value' member) in a base class which is similar to one done ago to  sys_var_set. sql/slave.cc Addressing binlog-checksum bool-to-enum-conversion incl master-slave handshake, equality of FD_q.A with RL.checksum_alg. sql/sql_repl.cc Addressing binlog-checksum bool-to-enum-conversion via redifing the binlog-checksum sys_var class. 	a99ce7c2121c313a6f1f0a8fa5feb3a18d2dad63
----------------------------
Fixed ha_ndbcluster_binlog.cc to use Parser_state::init(). 	61aaf4edbb0f8105deacb2c422af546903ae4056
----------------------------
Merge: 85391c9 5ac769b Bug#20837 Apparent change of isolation level during transaction Bug#46527 COMMIT AND CHAIN RELEASE does not make sense Bug#53343 completion_type=1, COMMIT/ROLLBACK AND CHAIN don't preserve the isolation level Bug#53346 completion_type has strange effect in a stored procedure/prepared statement Added test cases to verify the expected behaviour of : SET SESSION TRANSACTION ISOLATION LEVEL, SET TRANSACTION ISOLATION LEVEL, @@completion_type, COMMIT AND CHAIN, ROLLBACK AND CHAIN ..and some combinations of the above 	0cb90edfe5350eef140801a08f19ac82fc01c0dd
----------------------------
wl#2540 replication events checksum Addressing `never attempt to execute' corrupted event requirement. *This is not yet the final commit but rather an improved prototype to capture all discussed arch-issues*. TODO: 1.  extend test bases to cover few corner cases and more simulations to add. 2.  sort out if we need (A) duplication of to be content with always CRC32-ed FD. LOG_EVENT_CHECKSUM_F flag is removed. Instead, the FD event is responsible to hold the checksum alg descriptor (A). If FD version is lower that the home of checksumming then the descriptor will stay in an undefined value which allows to support OM -> NS scenario (normal upgrading that is). At relay-logging the master's FD is always examined on the matter of (A) value. The value is propagated into FD-for-queue that affect the way the local slave events are relay-logged (FD, Rotate, Stop). The mentioned propagation makes possible to identify (A) correctly regardless of what server originated the event at time of reading RL by SQL thread. FD is made to contain (A) as well as CRC32 signature regardless of (A) value. That is FD starting from the home-checksumming version can be always CRC32-verified. There are few exceptional cases. I. The first event from master is not FD but so called fake Rotate event. In order to recognize its checksum status slave-master handshake is extended to notify the slave side about the instant value of @@global.binlog_checksum of the master that matches R_f checksum. II. R_f or any real Rotate from master are relay-log right after the slave's own FD_s. As the last seen FD is (A)-holder for the following events stream R is relay-logged checksum-compatibly to FD_s. sql/log MYSQL_BIN_LOG class is extended with `relay_log_checksum_alg' memeber to denote the slave's initial preference how to checksum its FD as well as serves as tool to keep up FD_q's checksum_alg value at time FD_q changes -> (STOP SLAVE: NULL) -> (START SLAVE: restores). write_cache:  fixing the end_log position because one did account systematic BINLOG_CHECKSUM_LEN drift per event. slave side STOP event, FD, Rotate event are `flagged' right after constructor with appropriate value of checksum_alg. sql/log_event Log_event:checksum_alg    the base class is made the placeholder to serve as mechanism to control checksumming Log_event::need_checksum(). sql/rpl_m + Master_info::checksum_alg_before_fd   to hold checksum alg in use until IO thread has received FD + Master_info::last_master_checksum_alg  restart slave via STOP, START sequence makes IO thread to rotate the former session relay-log. The rotation event of the new session needs checksum alg of the former one. sql/slave.cc get_master_version_and_clock()  elaborated slave-master handshake to make the slave be aware about R_f checksum and to prepare FD_q.checksum_alg with the value from the last session (if it happened) or with the very first RL's FD's checksum_alg (to instruct how to checksum R_f incl one from OM). queue_event()   takes care of facing the first R_f, as well as exceptions incl OM -> NS. sql/sql_repl.c refined fake_rotate_event(), send_heartbeat_event() to deal with the correct checksum_alg values when prepering events. Providing support for SQL thread and Show-Binlog-Events handlers. 	b865bedf4a8323c45ab79dc8a375c536b13646aa
----------------------------
merge of patch for bug#52913 from 5.1-bugteam to trunk-bugfixing. Changed $basedir to $bindir in mysql-test-run.pl. 	7e84f28c74e6e75f2093fa7e21b6a2b3781b9fe9
----------------------------
SEAGULL: Move ndb_* system variables to ha_ndbcluster - Fix the comments for --ndb-nodeid and --ndb-mgmd-host after merge 	9ff2a82d51f287b09d444966afce8e4bba087778
----------------------------
WL#5381 SEAGULL: Move configure.in extensions for ndb to storage/ndb/plug.in - move the check for 'clock_gettime' in librt back to configure.in so that it's properly detected the first time around. - (also submitted patch to fix the bug 37639 in a future MySQL version) 	9e0cb008fcc8d2ea7468bac0885cb637f968050d
----------------------------
WL#5381 SEAGULL: Move configure.in extensions for ndb to storage/ndb/plug.in - Fix problem with the AM_CONDITIONAL for BUILD_NDBMTD being evaluated too early in configure - this is due to order of including plug.in files and actually running the plugin actions - by redefining the AM_CONDITIONAL as part of running the actions. This will cause the AM_CONDITIONAL to be properly evaluated after the checks for ndbmtd asm have been made while also making it available in a build without ndb. 	8352fd6a741986a1e0dc8c40524497e191a272af
----------------------------
WL#5381 SEAGULL: Move configure.in extensions for ndb to storage/ndb/plug.in - Remove old junk comment 	fc51fd50005209625617b83b3af06f6ac284456b
----------------------------
WL#5381 SEAGULL: Move configure.in extensions for ndb to storage/ndb/plug.in - Move remaining checks to ndb_configure.m4 - The checks will only be run if ndbcluster is enabled 	d2f8f4b3f46c87c9ec3fd39056c4ec0eff6b2d17
----------------------------
WL#5381 SEAGULL: Move configure.in extensions for ndb to storage/ndb/plug.in - Move all code for checking if ndbmtd is supported/enabled to NDB_CHECK_NDBMTD - Run the checks only if ndbcluster is enabled and --with-ndbmtd(which is the default) is specified - Remove the unused HAVE_NDBMTD_ASM define - Remove the export build_ndbmtd (no other AM_CONDITIONAL is exported) 	51b7e132ce9394c7701c7ef154515f537bf238d1
----------------------------
WL#5381 SEAGULL: Move configure.in extensions for ndb to storage/ndb/plug.in - Remove unused ndb_mgmclient_libs define 	c8cb06babea773110d20449ed14d89b789bff751
----------------------------
WL#5381 SEAGULL: Move configure.in extensions for ndb to storage/ndb/plug.in - Remove unused TEST_NDBCLUSTER define 	050e6b6ca9dd86a3f70a78752d6db5b0162f294a
----------------------------
"Bug#29791 relocation R_X86_64_32 against `a local symbol' - Changed libmysys, libmystrings and libdbug from normal libs to noinst libtool helper libs. - Changed libndbclient to include the symbols from libmysys, libmystring and libdbug - This is a backport of relevant parts for fixing the bug from 6.0 to next-mr, it does not include: --  the changes to tests in mysys/ -- any changes to configure ie. ZLIB_LIBS, NSL_LIBS or CRYPT_LIBS -- the change to ""mysql_config"" -- the change to BUILD/autorun.sh "	f01b791d1ee5842b42336e1bee96c5ae0bf320f7
----------------------------
Merge: 7d9eaa3 36d2769 Manual merge from mysql-5.1-bugteam to mysql-trunk-merge. conflicts: conflict      configure.in 	6633d23f0254f8d614debce16ffa90a61ed4935f
----------------------------
"Fix for BUG#52636 6.0 allowing JOINs on NULL values w/ optimizer_join_cache_level = 5-8 Optimizer chose ""ref"" access for the LEFT JOIN ON condition, and considered that this access it implemented the condition's semantics; which would have been true if JOIN_CACHE_BKA and JOIN_CACHE_BKA_UNIQUE hadn't forgotten to eliminate NULL values. "	16d96b41d5a908f45031aa5cd32a104916611966
----------------------------
"Merge: f775c6d e061985 Bug #49931  	Incorrect type in read_log_event error Bug #49932  	mysqlbinlog max_allowed_packet hard coded to 1GB The size limitation of ROW event is controlled by binlog-row-event-max-size (4G), which can be larger than max-allowed-packet (1G). And the value of max_allowed_packet is hard coded to 1GB in mysqlbinlog. But the slave IO/SQL thread and mysqlbinlog just check the size of the ROW event by the value of 'max_allowed_packet' when reading log event from binlog. So it will cause 'Event too large' or 'packet too large' error, if the size of ROW event is bigger than the value of 'max_allowed_packet'. To fix the problem, the slave IO/SQL thread and mysqlbinlog will check the bigger one of the values of 'max_allowed_packet' and 'binlog-row-event-max-size' when reading log event from binlog. And add a new 'binlog-row-event-max-size' (4G by default) option to mysqlbinlog. Then mysqlbinlog can read a large ROW event. "	eb46686c9ee4a22068392570c22e649e8b76b426
----------------------------
"Merge: 006e158 e061985 Bug #49931  	Incorrect type in read_log_event error Bug #49932  	mysqlbinlog max_allowed_packet hard coded to 1GB The size limitation of ROW event is controlled by binlog-row-event-max-size (4G), which can be larger than max-allowed-packet (1G). And the value of max_allowed_packet is hard coded to 1GB in mysqlbinlog. But the slave IO/SQL thread and mysqlbinlog just check the size of the ROW event by the value of 'max_allowed_packet' when reading log event from binlog. So it will cause 'Event too large' or 'packet too large' error, if the size of ROW event is bigger than the value of 'max_allowed_packet'. To fix the problem, the slave IO/SQL thread and mysqlbinlog will check the bigger one of the values of 'max_allowed_packet' and 'binlog-row-event-max-size' when reading log event from binlog. And add a new 'binlog-row-event-max-size' (4G by default) option to mysqlbinlog. Then mysqlbinlog can read a large ROW event. "	85394bf8b64ee7fb8ed2d74f25f17c9ad2154d84
----------------------------
"Bug #49931  	Incorrect type in read_log_event error Bug #49932  	mysqlbinlog max_allowed_packet hard coded to 1GB The size limitation of ROW event is controlled by binlog-row-event-max-size (4G), which can be larger than max-allowed-packet (1G). And the value of max_allowed_packet is hard coded to 1GB in mysqlbinlog. But the slave IO/SQL thread and mysqlbinlog just check the size of the ROW event by the value of 'max_allowed_packet' when reading log event from binlog. So it will cause 'Event too large' or 'packet too large' error, if the size of ROW event is bigger than the value of 'max_allowed_packet'. To fix the problem, the slave IO/SQL thread and mysqlbinlog will check the bigger one of the values of 'max_allowed_packet' and 'binlog-row-event-max-size' when reading log event from binlog. And add a new 'binlog-row-event-max-size' (4G by default) option to mysqlbinlog. Then mysqlbinlog can read a large ROW event. "	e061985813db54948f99892d89f7e076242473a5
----------------------------
Updated RQG grammar and test setup to fix 2 problems causing false failures to be reported when testing SPJ: #1: Disabled usage of scalar subquery as we may get false errors: 'Returned more than 1 rows' due to this exception being trown when producing intermediate results. #2: Specify a case sensitive (or binary) collation sequence when the test databases are created. Required to ensure a deterministic result set when a LIMIT is specifed as part of the query. Removed previous test configuration where usage of latin1 and utf8 was hardcoded as part of the RQG grammar. 	6b5796dc845ae037d12f6cb559396d7035c59784
----------------------------
"Fix for bug #51263 ""Deadlock between transactional SELECT and ALTER TABLE ...  REBUILD PARTITION"". ALTER TABLE on InnoDB table (including partitioned tables) acquired exclusive locks on rows of table being altered. In cases when there was concurrent transaction which did locking reads from this table this sometimes led to a deadlock which was not detected by MDL subsystem nor by InnoDB engine (and was reported only after exceeding innodb_lock_wait_timeout). This problem stemmed from the fact that ALTER TABLE acquired TL_WRITE_ALLOW_READ lock on table being altered. This lock was interpreted as a write lock and thus for table being altered handler::external_lock() method was called with F_WRLCK as an argument. As result InnoDB engine treated ALTER TABLE as an operation which is going to change data and acquired LOCK_X locks on rows being read from old version of table. In case when there was a transaction which already acquired SR metadata lock on table and some LOCK_S locks on its rows (e.g. by using it in subquery of DML statement) concurrent ALTER TABLE was blocked at the moment when it tried to acquire LOCK_X lock before reading one of these rows. The transaction's attempt to acquire SW metadata lock on table being altered led to deadlock, since it had to wait for ALTER TABLE to release SNW lock. This deadlock was not detected and got resolved only after timeout expiring because waiting were happening in two different subsystems. Similar deadlocks could have occured in other situations. This patch tries to solve the problem by changing ALTER TABLE implementation to use TL_READ_NO_INSERT lock instead of TL_WRITE_ALLOW_READ. After this step handler::external_lock() is called with F_RDLCK as an argument and InnoDB engine correctly interprets ALTER TABLE as operation which only reads data from original version of table. Thanks to this ALTER TABLE acquires only LOCK_S locks on rows it reads. This, in its turn, causes inter-subsystem deadlocks to go away, as all potential lock conflicts and thus deadlocks will be limited to metadata locking subsystem: - When ALTER TABLE reads rows from table being altered it can't encounter any locks which conflict with LOCK_S row locks. There should be no concurrent transactions holding LOCK_X row locks. Such a transaction should have been acquired SW metadata lock on table first which would have conflicted with ALTER's SNW lock. - Vice versa, when DML which runs concurrently with ALTER TABLE tries to lock row it should be requesting only LOCK_S lock which is compatible with locks acquired by ALTER, as otherwise such DML must own an SW metadata lock on table which would be incompatible with ALTER's SNW lock. "	c070e5a1ede5c34dda7fdefe93d7c19be53ceb00
----------------------------
"WL#3126 TCP address binding for mysql client library - This patch extends the MySQL C API making it possible to select which local interface to use when clients connect to a MySQL Server using TCP. The user calls 'mysql_options' to specify the address which will will be used in 'mysql_real_connect' to extract a list of address info's which the source socket will 'bind' to. If no matching source+destination is found an error will be returned. - Since the client_ip memeber of st_mysql_options is only used by embedded server and the bind_address is only used by non embedded server we can reuse it and thus avoid breaking the ABI(like was done in MySQL Cluster) without using the ""extension"". Example: mysql_options(mysql, MYSQL_OPT_BIND, ""192.168.10.12""); - Add support for --bind-address to the mysql, mysqladmin, mysqlbinlog, mysqlcheck, mysqldump, mysqlimport and mysqlshow programs "	9584a05b1ba16c15467d79dcdb7db1ba924b3785
----------------------------
WL#5369: Remove --optimizer_search_depth=63 Remove deprecated value 63 for this switch, and the old function find_best() that was controlled by this value. mysql-test/r/greedy_optimizer.result WL#5369: Updated test result. mysql-test/r/mysqld--help-notwin.result WL#5369: Updated test result. mysql-test/r/mysqld--help-win.result WL#5369: Updated test result. mysql-test/suite/sys_vars/r/optimizer_search_depth_basic.result WL#5369: Updated test result. mysql-test/suite/sys_vars/t/optimizer_search_depth_basic.test WL#5369: Updated test file. mysql-test/t/greedy_optimizer.test WL#5369: Updated test file. sql/sql_select.cc Removed test for 'MAX_TABLES+2' in choose_plan(), removed function find_best(), ie we are now always calling greedy_search(), unless we use straight_join to override the join optimizer. sql/sql_select.h Removed reference to find_best(). sql/sys_vars.cc Updated limits and comment for variable optimizer-search-depth. 	2796d8e1c9bb0b5b9eabb9358aca7f827d07e847
----------------------------
BUG#44209: MASTER_CONNECT_RETRY and --master-retry-count disconnected from each other Post-push fix. The mi->retry_count was set to an uninitilized value when master.info did not contain a correspondent line for the retry_count value. We fix this by setting the default before actually loading the value from master.info. If there is no value to read, mi->retry_count remains the default (or the value set in the command line). The retry_count in master.info value takes precedence over the one from the command line (which I believe is more inline with the proposal for deprecation of master-retry-count). 	5268bf73f3907453cb6aec4a2f6203894ad0d9b5
----------------------------
configure.cmake - Reverted a faulty change of MY_SEARCH_LIBS - Added the proper change for MY_SEARCH_LIBS and HAVE_<libname> 	3dec34f4f71f721652c49e612cb6bc9c53cebefe
----------------------------
Bug #49741  test files contain explicit references to bin/relay-log positions Some of the test cases reference to binlog position and these position numbers are written into result explicitly. It is difficult to maintain if log event format changes. There are a couple of cases explicit position number appears, we handle them in different ways A. 'CHANGE MASTER ...' with MASTER_LOG_POS or/and RELAY_LOG_POS options Use --replace_result to mask them. B. 'SHOW BINLOG EVENT ...' Replaced by show_binlog_events.inc or wait_for_binlog_event.inc. show_binlog_events.inc file's function is enhanced by given $binlog_file and $binlog_limit. C. 'SHOW SLAVE STATUS', 'show_slave_status.inc' and 'show_slave_status2.inc' For the test cases just care a few items in the result of 'SHOW SLAVE STATUS', only the items related to each test case are showed. 'show_slave_status.inc' is rebuild, only the given items in $status_items will be showed. 'check_slave_is_running.inc' and 'check_slave_no_error.inc' and 'check_slave_param.inc' are auxiliary files helping to show running status and error information easily. 	cc0544083698163cf5f76d20e8aba7ec4f573eb3
----------------------------
"Fix for Bug#52923 (Inadequate documentation of ""Can't get hostname for your address"" error). The thing is that on some platforms (e.g. Mac OS X) sockaddr_in / sockaddr_in6 contain a non-standard field (sin_len / sin6_len), that must be set. The problem was that only standard fields were set, thus getnameinfo() returned EAI_SYSTEM instead of EAI_NONAME. The fix is to introduce configure-time checks (for GNU auto-tools and CMake) for those additional fields and to set them if they are available. "	75e552d50910e88debeca2fa18cc6d9a18da1843
----------------------------
"Follow-up for the fix for bug #46947 ""Embedded SELECT without FOR UPDATE is causing a lock"". This patch tries to address problems which were exposed during backporting of original patch to 5.1 tree. - It ensures that we don't change locking behavior of simple SELECT statements on InnoDB tables when they are executed under LOCK TABLES ... READ and with @@innodb_table_locks=0. Also we no longer pass TL_READ_DEFAULT/TL_WRITE_DEFAULT lock types, which are supposed to be parser-only, to handler::start_stmt() method. - It makes check_/no_concurrent_insert.inc auxiliary scripts more robust against changes in test cases that use them and also ensures that they don't unnecessarily change environment of caller. "	6ceacd4fb94f84faeb6d637d068cea2722a016c1
----------------------------
add cluster configure options to cmake 	ee2f2277d67639823f312f70b457ba76f12d306a
----------------------------
config.h.cmake - Set SIZEOF_VOIDP the same way as others - Unindent the no Mac OS settings, to let the checker scripts find the lines - Removed duplicate SIZEOF_SIZE_T setting - Added missing value for HAVE_CHARSET_ascii configure.cmake - Added HAVE_ prefix to library names, like HAVE_LIBM - Set HAVE_CXXABI_H if header is found, HAVE_ABI_CXA_DEMANGLE controls if useful - Set SIZEOF_VOIDP the same way as others 	497abee8f31732367ee3c7d74c0cd56313535609
----------------------------
Merge a change from mysql-5.1-innodb: TO DO: Enable this in CMake-based builds. ------------------------------------------------------------ revno: 3474 revision-id: marko.makela@oracle.com-20100520104042-ma2nsscqdvwoph8k parent: marko.makela@oracle.com-20100519081618-h38q02qxuvcowbtk committer: Marko Mäkelä <marko.makela@oracle.com> branch nick: 5.1-innodb timestamp: Thu 2010-05-20 13:40:42 +0300 message: Bug#53593: Add some instrumentation to improve Valgrind sensitivity BUILD/*: Add valgrind_configs=--with-valgrind. BUILD/*: Remove -USAFEMALLOC from valgrind_flags. configure.in: Add AC_ARG_WITH(valgrind) and HAVE_VALGRIND. include/my_sys.h: Define a number of MEM_ wrappers for VALGRIND_ functions. include/my_sys.h: Make TRASH do MEM_UNDEFINED(). include/m_string.h: Remove unused macro bzero_if_purify(A,B). _mymalloc(): Declare MEM_UNDEFINED() on the allocated memory. _myfree(): Declare MEM_NOACCESS() on the freed memory. storage/innobase/include/univ.i: Enable UNIV_DEBUG_VALGRIND based on HAVE_VALGRIND rather than HAVE_purify. Possible things to do: * In my_global.h, remove the defined(HAVE_purify) condition from the _WIN32 uint3korr(). * In my_global.h *int*korr(), use | instead of + in order to keep the Valgrind V bits accurate * Consider replacing HAVE_purify with HAVE_VALGRIND * Use VALGRIND_CREATE_BLOCK, VALGRIND_DISCARD in mem_root and similar places 	525768ddc9625f23074c7c90d819f768ac9f826a
----------------------------
Bug#53593: Add some instrumentation to improve Valgrind sensitivity BUILD/*: Add valgrind_configs=--with-valgrind. BUILD/*: Remove -USAFEMALLOC from valgrind_flags. configure.in: Add AC_ARG_WITH(valgrind) and HAVE_VALGRIND. include/my_sys.h: Define a number of MEM_ wrappers for VALGRIND_ functions. include/my_sys.h: Make TRASH do MEM_UNDEFINED(). include/m_string.h: Remove unused macro bzero_if_purify(A,B). _mymalloc(): Declare MEM_UNDEFINED() on the allocated memory. _myfree(): Declare MEM_NOACCESS() on the freed memory. storage/innobase/include/univ.i: Enable UNIV_DEBUG_VALGRIND based on HAVE_VALGRIND rather than HAVE_purify. Possible things to do: * In my_global.h, remove the defined(HAVE_purify) condition from the _WIN32 uint3korr(). * In my_global.h *int*korr(), use | instead of + in order to keep the Valgrind V bits accurate * Consider replacing HAVE_purify with HAVE_VALGRIND * Use VALGRIND_CREATE_BLOCK, VALGRIND_DISCARD in mem_root and similar places 	5fc862d6c96be8dd9b5b4e938cb34cfa42f09501
----------------------------
WL#5092: fixing mysql-5.1-rpl-wl5092 merge to mysql-next-mr-wl5092 Fixed: - binlog_row_image system var implementation - binlog_row_image system var tests - st_table::mark_columns_per_... -> TABLE::mark_columns_per_... 	6e0423112cc37730663b2339a0ed7a830851b9f0
----------------------------
Fix a bug reported by PushBuild on OSX 10.6.3. It turned out to be a compiler bug. The code has been changed to work around it. To reprocude the bug simply revert this change and build the binary with: GCC Using built-in specs. Target: i686-apple-darwin10 Configured with: /var/tmp/gcc/gcc-5659~1/src/configure --disable-checking --enable-werror --prefix=/usr --mandir=/share/man --enable-languages=c,objc,c++,obj-c++ --program-transform-name=/^[cg][^.-]*$/s/$/-4.2/ --with-slibdir=/usr/lib --build=i686-apple-darwin10 --program-prefix=i686-apple-darwin10- --host=x86_64-apple-darwin10 --target=i686-apple-darwin10 --with-gxx-include-dir=/include/c++/4.2.1 Thread model: posix gcc version 4.2.1 (Apple Inc. build 5659) export LDFLAGS='-g -arch i386' export CFLAGS='-g -no-cpp-precomp -arch i386 -O2' export CXXFLAGS='-g -no-cpp-precomp -arch i386 -O2' ./configure --enable-thread-safe-client --enable-local-infile --with-pic --with-client-ldflags=-static --with-mysqld-ldflags=-static --with-zlib-dir=bundled --without-ndb-debug --with-big-tables --with-ssl --with-readline --with-embedded-server --with-archive-storage-engine --with-blackhole-storage-engine --with-csv-storage-engine --with-example-storage-engine --with-federated-storage-engine --with-partition --with-extra-charsets=all --with-innodb --with-ndbcluster --with-libevent --target=i386-apple-darwin --program-transform-name= Approved by Marko on IM. 	33e6fc1ffa8342911b2cba5ba97e9af5250ed587
----------------------------
"config.h.cmake - Added missing HAVE_SYS_TIMES_H, HAVE_SYS_TIME_H, HAVE_TIME_H, HAVE_TIME and HAVE_TIMES - Removed most #if constructs, keep logic in ""configure.cmake"" - Use space after # if inside #if, for consistency configure.cmake - Added MY_CHECK_TYPE_SIZE function that sets both SIZEOF_* and HAVE_* - If ""sys/stream.h"" exists, include it before ""sys/ptem.h"" in test - Set VOID_SIGHANDLER if RETSIGTYPE is set to ""void"" "	bb6c611314e6fef51fb31e797b7c61598f33f671
----------------------------
Refactoring of pushed join creation in ha_ndbcluster.cc as part of preparation of integrating ScanFilters on pushed child operations. More functionality has been moved into ha_ndbcluster:() to avoid duplicated code inside each callee: - generate_scan_filter() and setInterpretedCode() is now done inside ::create_pushed_join() - Binding if buffers for results (::setResultRowRef()) moved into ::create_pushed_join() Changed ::create_pushed_join() and ::pk_unique_index_read_key_pushed() to return an int indication error code instead of a NdbQuery*. Restructured code using NdbQuery::isPrunable() to get it more similar to the pattern used for other code at same place. 	964ebf0657663dd570d65863a31e892e4c72f28a
----------------------------
Fix bug #52546, crash on shutdown of plugin with innodb_use_sys_malloc=0. rb://339, approved by Sunny Bains. 	0ddfb66f5b45c49d1931aa6400ae77b4dec67473
----------------------------
"Partial and sufficient backporing of sergefp@mysql.com-20090319170358-ksx8sx0xolhj9sym : ""set optimizer_switch='';"" does nothing, replace with ""set optimizer_switch=default;"" "	97b12e6880ffd5a0c40e9665b7b0dc29a86b2d41
----------------------------
bug#49400: when parsing a config file, reject any TCP,SHM, or SCI connection that is a duplicate of a previously defined connection. 	f062b9430617a5e5fc98208fcba3e3929e57ff79
----------------------------
BUG#50410: rpl_ndb tests should run with binlog_format=row Problem: The rpl_ndb did not set binlog_format explicitly. Since the default is binlog_format=statement, it means that the suite ran with that. ndb does not support binlog_format=statement, and many tests were skipped because they sourced include/have_binlog_format_row_or_mixed.inc Fix: set binlog_format=row explicitly in the configuration file for the rpl_ndb suite. 	b0b0000d4069d055cdbe9c5c7f2fd59eb31cc529
----------------------------
Bug#21317 SHOW CREATE DATABASE does not obey to lower_case_table_names preserve lettercase for DB name as it specified in 'show create' (backport to next-mr) 	635479cf41cae3225c34a33093393696d50ce6a7
----------------------------
Merge: 57aad34 cb0d64c Manual merge from mysql-trunk-merge. Conflicts: - configure.in 	c68df6b2bb2d759482b1092a6a2595c9eb3f0a6e
----------------------------
Bug #52737: plugin_dir is set to /usr/local/mysql/lib/plugin while starting via mysqld_safe Plugin dir was set to a hard-coded path instead of relative the base dir. This patch fixes this by using a path relative the basedir instead of the plugin directory indicated by the configuration. 	7f514f45e6ca6b0e3b5428343e1c21304e316053
----------------------------
WL#4783  Extend mysqlbinlog to support remote backup of binary logs The aim is to modify mysqlbinlog so that it can remotely retrieve the raw binary logs and stay connected retrieving them.  This way you can have an up-to-the-second remote backup of your data (even better when combined with mysqldump --master-data as snapshots). You retrieve from many servers simultaneously into a backup server using this method (use a mysqlbinlog instance per server). Changes: * mysqlbinlog now safely exits with CTRL-C or kill (closes files properly) * --raw added which will retrieve raw binlog files from the remote server and save them using the filenames in the replication headers * --stop-never added which waits for new data on a remote connection instead of quitting at the end of the last log * --stop-never-slave-server-id added to set the MySQL slave server ID for --stop-never (default 65535) * --result-file modified so that when used with --raw mode it is a prefix for the output files 	c60c34ec044e0e1e9be5c9c3f51b46e7fd589c39
----------------------------
bug#52268: ndb_mgmd could fail to set its working directory before creating a cluster log, when starting up from a cached configuration; this would cause the cluster log file to be placed in the wrong directory. 	d59075e3e016c8bf1059b64c7ac672a6869f62e5
----------------------------
bug#53008: implement --skip-config-cache option to ndb_mgmd, causing the ConfigManager thread to exit on startup; create a test case in testMgmd.  (In the previous patch, the thread went to sleep rather than exiting). 	c5153417d1ae015b553932087514ea7abe7c71d9
----------------------------
Backporting: * Disabled MRR implementation for NDB, now the default one is used * Adjusted the query_alloc_block_size_basic test 	6b0a48595a114f238f10bf17c2b70d86f217c265
----------------------------
"WL#5116 ""Changes to optimizer-controlling session variables"". ( Backporting of guilhem@mysql.com-20100120101129-vs1cd8equni03sh3 ). 1) @@join_cache_level renamed to @@optimizer_join_cache_level (so with ""SHOW VARIABLES LIKE 'optimizer%' you see more optimizer-related variables). 2) @@optimizer_switch's flag ""engine_condition_pushdown"" used to control Engine and Index Condition Pushdown, two different features, now it controls only ECP, and a new flag ""index_condition_pushdown"" controls ICP. 3) @@optimizer_use_mrr is removed, new flags ""mrr"" and ""mrr_cost_based"" are added to @@optimizer_switch: ""@@optimizer_use_mrr=auto"" is now expressed by ""@@optimizer_switch='mrr=on,mrr_cost_based=on', ""@@optimizer_use_mrr=force"" is now expressed by ""@@optimizer_switch='mrr=on,mrr_cost_based=off', ""@@optimizer_use_mrr=disable"" is now expressed by ""@@optimizer_switch='mrr=off'. 4) all those changes don't need deprecation precautions as join_cache_level, ICP and MRR have only been in 6.0 releases. "	9161b511149b784124079cd1dd8182f8aa89470f
----------------------------
"Draft patch that fixes and a sketches test cases for: Bug#20837 Apparent change of isolation level during transaction, Bug#46527 COMMIT AND CHAIN RELEASE does not make sense, Bug#53343 completion_type=1, COMMIT/ROLLBACK AND CHAIN don't preserve the isolation level Bug#53346 completion_type has strange effect in a stored procedure/prepared statement Make thd->tx_isolation mean strictly ""current transaction isolation level"" Make thd->variables.tx_isolation mean ""current session isolation level"". The current transaction isolation level is now established at transaction start. If there was a SET TRANSACTION ISOLATION LEVEL statement, the value is taken from it. Otherwise, the session value is used. A change in a session value, made while a transaction is active, whereas still allowed, no longer has any effect on the current transaction isolation level. This is an incompatible change. A change in a session isolation level, made while there is no active transaction, overrides SET TRANSACTION statement, if there was any. Changed the impelmentation to not look at @@session.completion_type in the parser, and thus fixed Bug#53346. Changed the parser to not allow AND NO CHAIN RELEASE, and thus fixed Bug#46527. Changed the transaction API to take the current transaction isolation level into account: - BEGIN/COMMIT now do preserve the current transaction isolation level if chaining is on. - implicit commit, XA COMMIT or XA ROLLBACK or autocommit don't. "	5ac769be68fbe2c112ef65b3d5590a7e5d080319
----------------------------
BUG#44209: MASTER_CONNECT_RETRY and --master-retry-count disconnected from each other Post-push fix! One of the test cases is not robust enough because it depends on a time variable. This can cause it to fail because it is a source of non-determinism (especially on slow environments). The specific test case is about waiting for slave to stop after retrying the N expected times and then checking that no more than a number of expected seconds has ellapsed. This assertion is not deterministic. We fix the assertion by checking the number of retries reported by the server, instead of checking how much seconds have ellapsed. 	6806baa175ddffaf4d6641e2659553006389d393
----------------------------
Bug#52357: Assertion failed: join->best_read in greedy_search optimizer_search_depth=0 The algorithm inside restore_prev_nj_state failed to properly update the counters within the NESTED_JOIN tree. The counter was decremented each time a table in the node was removed from the QEP, the correct thing to do being only to decrement it when the last table in the child node was removed from the plan. This lead to node counters getting negative values and the plan thus appeared impossible. An assertion caught this. Fixed by not recursing up the tree unless the last table in the join nest node is removed from the plan 	4e75f7c053775dc8671feda46225e785d33f5d0b
----------------------------
Output the config.h defines to stdout 	63fbe9cce8bafbbb65a54294c958f5ce9c5f05ee
----------------------------
ndb - rename ndb_cach_check_time -> opt_ndb_cache_check_time - rename ndb_extra_logging -> opt_ndb_extra_logging 	e4e29e560683c33da7cdf786d84b67f1b76533ce
----------------------------
"WL#4775 SEAGULL: Move ndb_* system variables to ha_ndbcluster - Move all ndb specific options and variables out of the MySQL Server source code and put them in ha_ndbcluster_* using the dynamic plugin variable interface. - Backward compatibility fix that will install system variables and options for ""ndbcluster"" in ""ndb"" namespace(already in 5.5) - Show all the ndb_report_thresh* variable also when compiled without NDB_BINLOG to keep a consistent ""GUI"" - --ndb-extra-logging used to ++ the value if given more than once, ignore that undocmented feature since it's not supported by dynamic variables. - Reintroduce the documented option --ndb-distribution, it has been ""lost"" - Fix Bug#44118 ndb-cluster-connection-pool does not show in variable list - ndb_basic.test, lists all variables as we now have more(i.e all is visible) - ndb_optimized_node_selection.test, the error/warning message does not contain the plugin name anymore when using pluggable variables. Filed as BUG#43356 which was duplicate of BUG#32902 and it fixed in 5.5.3 "	a53650311252b064d51322344aae73044364efa6
----------------------------
Fix bug #53165, Setting innodb_change_buffering=DEFAULT produces incorrect result. rb://295 approved by Marko 	fe8b56db30116f823aa7c6c8fe3b0d053ebd7622
----------------------------
Bug#44299 Unable to explicitly specify nodeid in ndb-connectstring - Remove the special processing of --ndb-connectstring, --ndb-mgmd-host and --ndb-nodeid(from ndb_opts and mysqld). The behaviour is now consistent in all our tools and programs in that the last value of --ndb-connectstring or --ndb-mgmd-host will be used. If --ndb-nodeid=<nodeid> is specified it will override any nodeid value specified in --ndb-connectstring. Example: --ndb-connectstring=string1 --ndb-connectstring=string2 => string2 --ndb-connectstring=nodeid=1,string1 --ndb-nodeid=3 => nodeid=3,string1 - Remove max length limitation of 1024 on --ndb-connectstring - Add new constructor for Ndb_cluster_connection which takes connect string and the nodeid to force the api node to use. 	bb5d32e45efb21055b6ab95cf4d81192df3ab00b
----------------------------
"Bug#50373 --secure-file-priv="""" Iterative patch improvement. Previously committed patch caused wrong result on Windows. The previous patch also broke secure_file_priv for symlinks since not all file paths which must be compared against this variable are normalized using the same norm. The server variable opt_secure_file_priv wasn't normalized properly and caused the operations LOAD DATA INFILE .. INTO TABLE .. and SELECT load_file(..) to do different interpretations of the --secure-file-priv option. The patch moves code to the server initialization routines so that the path always is normalized once and only once. It was also intended that setting the option to an empty string should be equal to lifting all previously set restrictions. This is also fixed by this patch. "	5b6ebdf086fe0506dc1d2cb70a95f9633fd7a782
----------------------------
"Changes to MSI installer: - Introduce MANUFACTURER setting to set package manufacturer via CMake. - Introduce COMMUNITY_BUILD setting to be passed on to packaging (not used here, but required for our own packages to determine what added files should be included in the package). - Create an RTF version of the COPYING text file and use that as the default license (can be overridden by providing a COPYING.rtf file). - Allow passing extra arguments to candle and light via environment. (Need -sval in pushbuild, but want validation elsewhere.) - Introduce a custom action that stops and uninstalls the service if the user installed one that points into the MySQL directory that is being removed. (Our own packages historically used the instance configuration wizard for this, but it wouldn't be very nice if MSIs created by our users couldn't remove it too.) - Make install location configurable again (""Browse"" button in custom installation was greyed out before). - Remove registry keys that use ""MySQL AB""; they should only be set in packages provided by us. Users can set their own registry keys if they want to. "	d60efe5820d98bba41f1b76c37927c8f648937c9
----------------------------
Merge: 72ae25b e287445 Manual merge of mysql-5.1-bugteam to mysql-trunk-merge. Conflicts: Text conflict in configure.in Text conflict in dbug/dbug.c Text conflict in mysql-test/r/ps.result Text conflict in mysql-test/t/ps.test Text conflict in sql/CMakeLists.txt Text conflict in sql/ha_ndbcluster.cc Text conflict in sql/mysqld.cc Text conflict in sql/sql_plugin.cc Text conflict in sql/sql_table.cc 	940ad61b712cb2f10bf5ff62330b0c9c4d8473ba
----------------------------
Bug#50974: Server keeps receiving big (> max_allowed_packet) packets indefinitely. The server could be tricked to read packets indefinitely if it received a packet larger than the maximum size of one packet. This problem is aggravated by the fact that it can be triggered before authentication. The solution is to no skip big packets for non-authenticated sessions. If a big packet is sent before a session is authen- ticated, a error is returned and the connection is closed. 	14ccbeb4e40042e3fe624707d5b2e6c047149a2f
----------------------------
Fix bug introduced by r3038. When a transaction is rolled back by the lock monitor thread, it may have locks that are granted to waited to waiting transactions. These waiting transactions will need to be woken up but their trx->lock_wait_timeout flag will be FALSE causing the old code to break. What we need is a flag that covers the entire lock release process not individual transactions. The fix is to move the flag out of trx_t and into srv_sys_t. 	6c3b6808e82cd38fe85298267c4a716e748fbb7a
----------------------------
"On Mac OS X, add the ""-arch"" option to the 'mysql_config' output "	b9303c87e3841cd75a8f95fc752497eca14a7c2c
----------------------------
WL#4012  port ndb_mgmd to MS Windows platforms - Configure event logger to use Windows event log again in 'setClusterLog' since all log handlers are closed for reconfigure 	2f22b11cb70b5750afc362079c50b5ef1e1ab338
----------------------------
"Patch for Bug#53022: Compilation of ""embedded"" is broken. The bug was a side effect of WL#5030 (fix header files) and WL#5161 (CMake). The problem was that CMake-generated config.h (and my_config.h as a copy of it) had a header guard. GNU autotools-generated [my_]config.h did not. During WL#5030 the order of header files was changed, so the following started to happen (using GNU autotools, in embedded server): - my_config.h included, defining HAVE_OPENSSL - my_global.h included, un-defining  HAVE_OPENSSL - zlib.h included, including config.h, defining HAVE_OPENSSL again. The fix is to check HAVE_OPENSSL in conjuction with EMBEDDED_LIBRARY. More common fix would be to define a macros as HAVE_OPENSSL && !EMBEDDED_LIBRARY and use it instead of HAVE_OPENSSL. "	53af29c086aada825d50e3518dbe112bd625ce51
----------------------------
Bug#46261 Plugins can be installed with --skip-grant-tables Previously installed dynamic plugins are explicitly not loaded on startup with --skip-grant-tables enabled. However, INSTALL PLUGIN/UNINSTALL PLUGIN commands are allowed, and result in inconsistent error messages (reporting duplicate plugin or plugin does not exist). This patch adds a check for --skip-grant-tables mode, and returns error ER_OPTION_PREVENTS_STATEMENT to the user when the above commands are attempted. 	9ea5576662a6bb94f0ba818f0c4591e7f78c2205
----------------------------
"Merge r3403..3414 from mysql-5.1-innodb: ------------------------------------------------------------ revno: 3414 revision-id: marko.makela@oracle.com-20100422093342-jf9ojlzdqsdebohn parent: marko.makela@oracle.com-20100421185359-8qaxoa2yyrpzwdd7 committer: Marko M?kel? <marko.makela@oracle.com> branch nick: 5.1-innodb timestamp: Thu 2010-04-22 12:33:42 +0300 message: Correct the definition of DICT_SYS_INDEXES_NAME_FIELD. When row_merge_drop_temp_indexes() was reworked to drop the indexes via the data dictionary cache, the code was broken because it would read the index name from the wrong field. modified: storage/innodb_plugin/ChangeLog 2425@16c675df-0fcb-4bc9-8058-dcc011a37293:branches%2Fzip%2FChangeLog storage/innodb_plugin/dict/dict0boot.c 2@16c675df-0fcb-4bc9-8058-dcc011a37293:trunk%2Fdict%2Fdict0boot.c storage/innodb_plugin/include/dict0boot.h 2@16c675df-0fcb-4bc9-8058-dcc011a37293:trunk%2Finclude%2Fdict0boot.h ------------------------------------------------------------ revno: 3413 revision-id: marko.makela@oracle.com-20100421185359-8qaxoa2yyrpzwdd7 parent: marko.makela@oracle.com-20100421102723-0i80uezbyu0ekj5d committer: Marko M?kel? <marko.makela@oracle.com> branch nick: 5.1-innodb timestamp: Wed 2010-04-21 21:53:59 +0300 message: btr_page_split_and_insert(): Avoid an infinite loop. (Bug #52964) btr_page_tuple_smaller(): New function, refactored from btr_page_split_and_insert(). btr_page_get_split_rec(): Renamed from btr_page_get_sure_split_rec(). Note that a NULL return may mean that the tuple is to be inserted into either the lower or upper page, to be determined by btr_page_tuple_smaller(). btr_page_split_and_insert(): When btr_page_get_split_rec() returns NULL, invoke btr_page_tuple_smaller() to determine which half-page the tuple belongs to. Reviewed by Sunny Bains modified: storage/innodb_plugin/ChangeLog 2425@16c675df-0fcb-4bc9-8058-dcc011a37293:branches%2Fzip%2FChangeLog storage/innodb_plugin/btr/btr0btr.c 2@16c675df-0fcb-4bc9-8058-dcc011a37293:trunk%2Fbtr%2Fbtr0btr.c ------------------------------------------------------------ revno: 3412 revision-id: marko.makela@oracle.com-20100421102723-0i80uezbyu0ekj5d parent: marko.makela@oracle.com-20100421100029-mji6lmdgvuqh96qq committer: Marko M?kel? <marko.makela@oracle.com> branch nick: 5.1-innodb timestamp: Wed 2010-04-21 13:27:23 +0300 message: dict_create_index_step(): Be strict about DYNAMIC and COMPRESSED tables. Bug #50495 is about REDUNDANT and COMPACT tables, after all. modified: mysql-test/suite/innodb_plugin/r/innodb-zip.result 2252@16c675df-0fcb-4bc9-8058-dcc011a37293:branches%2Fzip%2Fmysql-test%2Finnodb-zip.result mysql-test/suite/innodb_plugin/t/innodb-zip.test 2252@16c675df-0fcb-4bc9-8058-dcc011a37293:branches%2Fzip%2Fmysql-test%2Finnodb-zip.test storage/innodb_plugin/ChangeLog 2425@16c675df-0fcb-4bc9-8058-dcc011a37293:branches%2Fzip%2FChangeLog storage/innodb_plugin/dict/dict0crea.c 2@16c675df-0fcb-4bc9-8058-dcc011a37293:trunk%2Fdict%2Fdict0crea.c ------------------------------------------------------------ revno: 3411 revision-id: marko.makela@oracle.com-20100421100029-mji6lmdgvuqh96qq parent: marko.makela@oracle.com-20100421095033-0acvzxb8um8cms0a committer: Marko M?kel? <marko.makela@oracle.com> branch nick: 5.1-innodb timestamp: Wed 2010-04-21 13:00:29 +0300 message: ha_innobase::add_index(): Only check for duplicate indexes when the data dictionary is locked. This fixes a UNIV_DEBUG assertion failure in innodb-index.test. modified: storage/innodb_plugin/handler/handler0alter.cc 1845@16c675df-0fcb-4bc9-8058-dcc011a37293:branches%2Fzip%2Fhandler%2Fhandler0alter.cc ------------------------------------------------------------ revno: 3410 revision-id: marko.makela@oracle.com-20100421095033-0acvzxb8um8cms0a parent: marko.makela@oracle.com-20100421094032-ir4glqk46qvg2ywn committer: Marko M?kel? <marko.makela@oracle.com> branch nick: 5.1-innodb timestamp: Wed 2010-04-21 12:50:33 +0300 message: dtuple_convert_big_rec(): Store locally any fields whose maximum length is less than 256 bytes. (Bug #52745) Add related comments and debug assertions to the ""offsets"" functions in rem0rec.c. Approved by Sunny Bains modified: storage/innodb_plugin/ChangeLog 2425@16c675df-0fcb-4bc9-8058-dcc011a37293:branches%2Fzip%2FChangeLog storage/innodb_plugin/data/data0data.c 2@16c675df-0fcb-4bc9-8058-dcc011a37293:trunk%2Fdata%2Fdata0data.c storage/innodb_plugin/rem/rem0rec.c 2@16c675df-0fcb-4bc9-8058-dcc011a37293:trunk%2Frem%2Frem0rec.c ------------------------------------------------------------ revno: 3409 revision-id: marko.makela@oracle.com-20100421094032-ir4glqk46qvg2ywn parent: marko.makela@oracle.com-20100421091611-uu46iygmv5sizjru committer: Marko M?kel? <marko.makela@oracle.com> branch nick: 5.1-innodb timestamp: Wed 2010-04-21 12:40:32 +0300 message: Adjust tests for the Bug #50495 fix. modified: mysql-test/suite/innodb_plugin/r/innodb-zip.result 2252@16c675df-0fcb-4bc9-8058-dcc011a37293:branches%2Fzip%2Fmysql-test%2Finnodb-zip.result mysql-test/suite/innodb_plugin/t/innodb-zip.test 2252@16c675df-0fcb-4bc9-8058-dcc011a37293:branches%2Fzip%2Fmysql-test%2Finnodb-zip.test mysql-test/suite/innodb_plugin/t/innodb_bug36169.test 2418@16c675df-0fcb-4bc9-8058-dcc011a37293:branches%2Fzip%2Fmysql-test%2Finnodb_bug36169.test ------------------------------------------------------------ revno: 3408 revision-id: marko.makela@oracle.com-20100421091611-uu46iygmv5sizjru parent: marko.makela@oracle.com-20100421063916-h3gwjea7jzjilyww committer: Marko M?kel? <marko.makela@oracle.com> branch nick: 5.1-innodb timestamp: Wed 2010-04-21 12:16:11 +0300 message: rec_convert_dtuple_to_rec(): Correct the debug check. The ""extern"" accessor functions return zero or nonzero, not 0 or 1. modified: storage/innodb_plugin/rem/rem0rec.c 2@16c675df-0fcb-4bc9-8058-dcc011a37293:trunk%2Frem%2Frem0rec.c ------------------------------------------------------------ revno: 3407 revision-id: marko.makela@oracle.com-20100421063916-h3gwjea7jzjilyww parent: marko.makela@oracle.com-20100420201550-cax1xywvlcdshgfg committer: Marko M?kel? <marko.makela@oracle.com> branch nick: 5.1-innodb timestamp: Wed 2010-04-21 09:39:16 +0300 message: rec_convert_dtuple_to_rec(): Add a debug check. modified: storage/innodb_plugin/rem/rem0rec.c 2@16c675df-0fcb-4bc9-8058-dcc011a37293:trunk%2Frem%2Frem0rec.c ------------------------------------------------------------ revno: 3406 revision-id: marko.makela@oracle.com-20100420201550-cax1xywvlcdshgfg parent: marko.makela@oracle.com-20100420114222-diq7h2hiom9ww6me committer: Marko Makela <marko.makela@oracle.com> branch nick: 5.1-innodb timestamp: Tue 2010-04-20 23:15:50 +0300 message: btr_cur_optimistic_insert(): Remove unused variable ""heap"". modified: storage/innodb_plugin/btr/btr0cur.c 2@16c675df-0fcb-4bc9-8058-dcc011a37293:trunk%2Fbtr%2Fbtr0cur.c ------------------------------------------------------------ revno: 3405 revision-id: marko.makela@oracle.com-20100420114222-diq7h2hiom9ww6me parent: marko.makela@oracle.com-20100420082908-tpako8jd4imkh1xb committer: Marko Makela <marko.makela@oracle.com> branch nick: 5.1-innodb timestamp: Tue 2010-04-20 14:42:22 +0300 message: dict_create_index_step(): Invoke dict_index_add_to_cache() in strict mode only if innodb_strict_mode is set. (Bug #50495) trx_is_strict(): New function, for checking innodb_strict_mode. modified: storage/innodb_plugin/ChangeLog 2425@16c675df-0fcb-4bc9-8058-dcc011a37293:branches%2Fzip%2FChangeLog storage/innodb_plugin/dict/dict0crea.c 2@16c675df-0fcb-4bc9-8058-dcc011a37293:trunk%2Fdict%2Fdict0crea.c storage/innodb_plugin/handler/ha_innodb.cc 2@16c675df-0fcb-4bc9-8058-dcc011a37293:trunk%2Fhandler%2Fha_innodb.cc storage/innodb_plugin/include/trx0trx.h 2@16c675df-0fcb-4bc9-8058-dcc011a37293:trunk%2Finclude%2Ftrx0trx.h ------------------------------------------------------------ revno: 3404 revision-id: marko.makela@oracle.com-20100420082908-tpako8jd4imkh1xb parent: marko.makela@oracle.com-20100419103603-u5pz4qc6hfhx4nua committer: Marko M?kel? <marko.makela@oracle.com> branch nick: 5.1-innodb timestamp: Tue 2010-04-20 11:29:08 +0300 message: Implement UNIV_BTR_AVOID_COPY, an optimization of page splits. modified: storage/innodb_plugin/ChangeLog 2425@16c675df-0fcb-4bc9-8058-dcc011a37293:branches%2Fzip%2FChangeLog storage/innodb_plugin/btr/btr0btr.c 2@16c675df-0fcb-4bc9-8058-dcc011a37293:trunk%2Fbtr%2Fbtr0btr.c storage/innodb_plugin/include/univ.i 2@16c675df-0fcb-4bc9-8058-dcc011a37293:trunk%2Finclude%2Funiv.i ------------------------------------------------------------ revno: 3403 revision-id: marko.makela@oracle.com-20100419103603-u5pz4qc6hfhx4nua parent: marko.makela@oracle.com-20100419094405-fd3xwadullishv07 committer: Marko =?ISO-8859-1?Q?M=E4kel=E4?= <marko.makela@oracle.com> branch nick: 5.1-innodb timestamp: Mon 2010-04-19 13:36:03 +0300 message: Enable UNIV_DEBUG_VALGRIND when HAVE_purify is set. modified: storage/innobase/include/univ.i 2@cee13dc7-1704-0410-992b-c9b4543f1246:trunk%2Finclude%2Funiv.i storage/innodb_plugin/include/univ.i 2@16c675df-0fcb-4bc9-8058-dcc011a37293:trunk%2Finclude%2Funiv.i "	0ecec12df38c1a1bf06d7adc61e2e57e304b642c
----------------------------
branches/innodb+: Merge revisions 6949:6970 from branches/zip, skipping the revisions that do not make sense in branches/innodb+: ------------------------------------------------------------------------ r6957 | vdimov | 2010-04-06 22:05:54 +0300 (Tue, 06 Apr 2010) | 2 lines Changed paths: M /branches/zip/trx/trx0trx.c branches/zip: Whitespace fixup ------------------------------------------------------------------------ r6962 | mmakela | 2010-04-07 15:03:54 +0300 (Wed, 07 Apr 2010) | 2 lines Changed paths: M /branches/zip/handler/ha_innodb.cc branches/zip: innobase_init(): Correct the error message about wrong innodb_change_buffering value.  Reported by Ranger. ------------------------------------------------------------------------ r6967 | vdimov | 2010-04-07 22:40:38 +0300 (Wed, 07 Apr 2010) | 2 lines Changed paths: M /branches/zip/include/univ.i branches/zip: Whitespace fixup in univ.i ------------------------------------------------------------------------ 	eda8d678a56fa582cc8200d9d45ddc700d4bcac2
----------------------------
"Patch for Bug#53022: Compilation of ""embedded"" is broken. The bug was a side effect of WL#5030 (fix header files) and WL#5161 (CMake). The problem was that CMake-generated config.h (and my_config.h as a copy of it) had a header guard. GNU autotools-generated [my_]config.h did not. During WL#5030 the order of header files was changed, so the following started to happen (using GNU autotools, in embedded server): - my_config.h included, defining HAVE_OPENSSL - my_global.h included, un-defining  HAVE_OPENSSL - zlib.h included, including config.h, defining HAVE_OPENSSL again. The fix is to change the order of header file, moving zlib.h to the top of the header list. More proper fix would be to wrap unguarded auto-generated [my_]config.h by guarded non-generated header file. "	fd64b18545d8e6dd9f4493162df068d174ffb24c
----------------------------
"Bug#50373 --secure-file-priv="""" Correcting a patch misstake. The converted file path is placed in 'buff' not in opt_secure_file_priv. "	9d63e36ca745769dde6d65d62b362d711d242d24
----------------------------
Adjust the result for the mysql-test sys_vars.all_vars after the addition of a new config variable. 	63d38a4815a764c1f32443e82353b274574d833e
----------------------------
dict_create_index_step(): Invoke dict_index_add_to_cache() in strict mode only if innodb_strict_mode is set. (Bug #50495) trx_is_strict(): New function, for checking innodb_strict_mode. 	10c53c391339f8e7e6a328f97483f01891871d08
----------------------------
BUG#44209: MASTER_CONNECT_RETRY and --master-retry-count disconnected from each other MASTER_CONNECT_RETRY and --master-retry-count are logically related. The former sets the value for the time the slave thread waits until reconnecting, while the latter sets the value for the number of reconnection attempts until it gives up. The problem here was that --master-retry-count is not dynamic and can only be set on slave startup, while MASTER_CONNECT_RETRY is dynamic and can be set using CHANGE MASTER. As such, the user should also be allowed to change the value of master_retry_count using CHANGE MASTER command. In this patch we extend the syntax of CHANGE MASTER to allow MASTER_RETRY_COUNT symbol that can be used to set the variable that holds the value for master_retry_count. The option --master-retry-count can now be deprecated (this patch takes no action regarding deprecating this option). 	a389b9cf4635ce725cf49376b17e4aeaaba70689
----------------------------
Bug#51591 deadlock in the plugins+status+variables Unlocking/locking of LOCK_plugin in ha_ndbcluster.cc not needed anymore (but missing from the initial patch). 	06f8e3f97550d1a0a37a88b956134a88a9d6486d
----------------------------
"Bug#50373 --secure-file-priv="""" The server variable opt_secure_file_priv wasn't normalized properly and caused the operations LOAD DATA INFILE .. INTO TABLE .. and SELECT load_file(..) to do different interpretations of the --secure-file-priv option. The patch moves code to the server initialization routines so that the path always is normalized once and only once. It was also intended that setting the option to an empty string should be equal to lifting all previously set restrictions. This is also fixed by this patch. "	2a37d531be7c29eb93ade6c7a9c33fd3b9b9f1de
----------------------------
Bug #52381 Cannot connect to server with IPv6 using hostname or IPv4 address The bug occurs on Visual Studio 2005. IPV6_V6ONLY TCP flag is not defined in the VS2005 SDK (it is an older pre-Vista one). The code in mysqld.cc responsible for creating dual-mode socket is enclosed into #ifdef IPV6_V6ONLY. When compiled with VS2005, v6only socket option is not cleared which results into server listening only on IPV6 address. There used to be a workaround for this problem, defining IPV6_V6ONLY expli citly when it is not defined in system headers. The  system checks  for it are already in place in CMake, but the results were precached (i.e check was effectively deactivated). The patch reactivates checks for IPV6_V6ONLY on pre-VS2008 Visual Studio. If these constants are  not found, my_config.h will contain #define IPV6_V6ONLY 27 and this will make mysqld.cc compile with socket dual-mode  again. 	fe3235d1ec4f0addd46b5a4cadec5740b50eb1aa
----------------------------
Bug #52716 Large files support is disabled, large-pages option is broken. Correct typo: large pages option was tied to wrong variable opt_large_files, instead of opt_large_pages. 	1e29af4a222e38fb31a298d523d3f271c80f83f3
----------------------------
"Replay r2875.107.114 on top of the innodb-lock mysql test ------------------------------------------------------------ revno: 2875.107.114 revision-id: dlenev@mysql.com-20100201114306-cve0yq5akrxjoei0 parent: dlenev@mysql.com-20100121204303-sr6d1436mac7x6vz committer: Dmitry Lenev <dlenev@mysql.com> branch nick: mysql-next-4284-nl-push timestamp: Mon 2010-02-01 14:43:06 +0300 message: Implement new type-of-operation-aware metadata locks. Add a wait-for graph based deadlock detector to the MDL subsystem. Fixes bug #46272 ""MySQL 5.4.4, new MDL: unnecessary deadlock"" and bug #37346 ""innodb does not detect deadlock between update and alter table"". The first bug manifested itself as an unwarranted abort of a transaction with ER_LOCK_DEADLOCK error by a concurrent ALTER statement, when this transaction tried to repeat use of a table, which it has already used in a similar fashion before ALTER started. The second bug showed up as a deadlock between table-level locks and InnoDB row locks, which was ""detected"" only after innodb_lock_wait_timeout timeout. A transaction would start using the table and modify a few rows. Then ALTER TABLE would come in, and start copying rows into a temporary table. Eventually it would stumble on the modified records and get blocked on a row lock. The first transaction would try to do more updates, and get blocked on thr_lock.c lock. This situation of circular wait would only get resolved by a timeout. Both these bugs stemmed from inadequate solutions to the problem of deadlocks occurring between different locking subsystems. In the first case we tried to avoid deadlocks between metadata locking and table-level locking subsystems, when upgrading shared metadata lock to exclusive one. Transactions holding the shared lock on the table and waiting for some table-level lock used to be aborted too aggressively. We also allowed ALTER TABLE to start in presence of transactions that modify the subject table. ALTER TABLE acquires TL_WRITE_ALLOW_READ lock at start, and that block all writes against the table (naturally, we don't want any writes to be lost when switching the old and the new table). TL_WRITE_ALLOW_READ lock, in turn, would block the started transaction on thr_lock.c lock, should they do more updates. This, again, lead to the need to abort such transactions. The second bug occurred simply because we didn't have any mechanism to detect deadlocks between the table-level locks in thr_lock.c and row-level locks in InnoDB, other than innodb_lock_wait_timeout. This patch solves both these problems by moving lock conflicts which are causing these deadlocks into the metadata locking subsystem, thus making it possible to avoid or detect such deadlocks inside MDL. To do this we introduce new type-of-operation-aware metadata locks, which allow MDL subsystem to know not only the fact that transaction has used or is going to use some object but also what kind of operation it has carried out or going to carry out on the object. This, along with the addition of a special kind of upgradable metadata lock, allows ALTER TABLE to wait until all transactions which has updated the table to go away. This solves the second issue. Another special type of upgradable metadata lock is acquired by LOCK TABLE WRITE. This second lock type allows to solve the first issue, since abortion of table-level locks in event of DDL under LOCK TABLES becomes also unnecessary. Below follows the list of incompatible changes introduced by this patch: - From now on, ALTER TABLE and CREATE/DROP TRIGGER SQL (i.e. those statements that acquire TL_WRITE_ALLOW_READ lock) wait for all transactions which has *updated* the table to complete. - From now on, LOCK TABLES ... WRITE, REPAIR/OPTIMIZE TABLE (i.e. all statements which acquire TL_WRITE table-level lock) wait for all transaction which *updated or read* from the table to complete. As a consequence, innodb_table_locks=0 option no longer applies to LOCK TABLES ... WRITE. - DROP DATABASE, DROP TABLE, RENAME TABLE no longer abort statements or transactions which use tables being dropped or renamed, and instead wait for these transactions to complete. - Since LOCK TABLES WRITE now takes a special metadata lock, not compatible with with reads or writes against the subject table and transaction-wide, thr_lock.c deadlock avoidance algorithm that used to ensure absence of deadlocks between LOCK TABLES WRITE and other statements is no longer sufficient, even for MyISAM. The wait-for graph based deadlock detector of MDL subsystem may sometimes be necessary and is involved. This may lead to ER_LOCK_DEADLOCK error produced for multi-statement transactions even if these only use MyISAM: session 1:         session 2: begin; update t1 ...      lock table t2 write, t1 write; -- gets a lock on t2, blocks on t1 update t2 ... (ER_LOCK_DEADLOCK) - Finally,  support of LOW_PRIORITY option for LOCK TABLES ... WRITE was abandoned. LOCK TABLE ... LOW_PRIORITY WRITE from now on has the same priority as the usual LOCK TABLE ... WRITE. SELECT HIGH PRIORITY no longer trumps LOCK TABLE ... WRITE  in the wait queue. - We do not take upgradable metadata locks on implicitly locked tables. So if one has, say, a view v1 that uses table t1, and issues: LOCK TABLE v1 WRITE; FLUSH TABLE t1; -- (or just 'FLUSH TABLES'), an error is produced. In order to be able to perform DDL on a table under LOCK TABLES, the table must be locked explicitly in the LOCK TABLES list. @ mysql-test/include/handler.inc Adjusted test case to trigger an execution path on which bug 41110 ""crash with handler command when used concurrently with alter table"" and bug 41112 ""crash in mysql_ha_close_table/get_lock_data with alter table"" were originally discovered. Left old test case which no longer triggers this execution path for the sake of coverage. Added test coverage for HANDLER SQL statements and type-aware metadata locks. Added a test for the global shared lock and HANDLER SQL. Updated tests to take into account that the old simple deadlock detection heuristics was replaced with a graph-based deadlock detector. @ mysql-test/r/debug_sync.result Updated results (see debug_sync.test). @ mysql-test/r/handler_innodb.result Updated results (see handler.inc test). @ mysql-test/r/handler_myisam.result Updated results (see handler.inc test). @ mysql-test/r/innodb-lock.result Updated results (see innodb-lock.test). @ mysql-test/r/innodb_mysql_lock.result Updated results (see innodb_mysql_lock.test). @ mysql-test/r/lock.result Updated results (see lock.test). @ mysql-test/r/lock_multi.result Updated results (see lock_multi.test). @ mysql-test/r/lock_sync.result Updated results (see lock_sync.test). @ mysql-test/r/mdl_sync.result Updated results (see mdl_sync.test). @ mysql-test/r/sp-threads.result SHOW PROCESSLIST output has changed due to the fact that waiting for LOCK TABLES WRITE now happens within metadata locking subsystem. @ mysql-test/r/truncate_coverage.result Updated results (see truncate_coverage.test). @ mysql-test/suite/funcs_1/datadict/processlist_val.inc SELECT FROM I_S.PROCESSLIST output has changed due to fact that waiting for LOCK TABLES WRITE now happens within metadata locking subsystem. @ mysql-test/suite/funcs_1/r/processlist_val_no_prot.result SELECT FROM I_S.PROCESSLIST output has changed due to fact that waiting for LOCK TABLES WRITE now happens within metadata locking subsystem. @ mysql-test/suite/rpl/t/rpl_sp.test Updated to a new SHOW PROCESSLIST state name. @ mysql-test/t/debug_sync.test Use LOCK TABLES READ instead of LOCK TABLES WRITE as the latter no longer allows to trigger execution path involving waiting on thr_lock.c lock and therefore reaching debug sync-point covered by this test. @ mysql-test/t/innodb-lock.test Adjusted test case to the fact that innodb_table_locks=0 option is no longer supported, since LOCK TABLES WRITE handles all its conflicts within MDL subsystem. @ mysql-test/t/innodb_mysql_lock.test Added test for bug #37346 ""innodb does not detect deadlock between update and alter table"". @ mysql-test/t/lock.test Added test coverage which checks the fact that we no longer support DDL under LOCK TABLES on tables which were locked implicitly. Adjusted existing test cases accordingly. @ mysql-test/t/lock_multi.test Added test for bug #46272 ""MySQL 5.4.4, new MDL: unnecessary deadlock"".  Adjusted other test cases to take into account the fact that waiting for LOCK TABLES ... WRITE now happens within MDL subsystem. @ mysql-test/t/lock_sync.test Since LOCK TABLES ... WRITE now takes SNRW metadata lock for tables locked explicitly we have to implicitly lock InnoDB tables (through view) to trigger the table-level lock conflict between TL_WRITE and TL_WRITE_ALLOW_WRITE. @ mysql-test/t/mdl_sync.test Added basic test coverage for type-of-operation-aware metadata locks. Also covered with tests some use cases involving HANDLER statements in which a deadlock could arise. Adjusted existing tests to take type-of-operation-aware MDL into account. @ mysql-test/t/multi_update.test Update to a new SHOW PROCESSLIST state name. @ mysql-test/t/truncate_coverage.test Adjusted test case after making LOCK TABLES WRITE to wait until transactions that use the table to be locked are completed. Updated to the changed name of DEBUG_SYNC point. @ sql/handler.cc Global read lock functionality has been moved into a class. @ sql/lock.cc Global read lock functionality has been moved into a class. Updated code to use the new MDL API. @ sql/mdl.cc Introduced new type-of-operation aware metadata locks. To do this: - Changed MDL_lock to use one list for waiting requests and one list for granted requests. For each list, added a bitmap that holds information what lock types a list contains. Added a helper class MDL_lock::List to manipulate with granted and waited lists while keeping the bitmaps in sync with list contents. - Changed lock-compatibility functions to use bitmaps that define compatibility. - Introduced a graph based deadlock detector inspired by waiting_threads.c from Maria implementation. - Now that we have a deadlock detector, and no longer have a global lock to protect individual lock objects, but rather use an rw lock per object, removed redundant code for upgrade, and the global read lock. Changed the MDL API to no longer require the caller to acquire the global intention exclusive lock by means of a separate method. Removed a few more methods that became redundant. - Removed deadlock detection heuristic, it has been made obsolete by the deadlock detector. - With operation-type-aware metadata locks, MDL subsystem has become aware of potential conflicts between DDL and open transactions. This made it possible to remove calls to mysql_abort_transactions_with_shared_lock() from acquisition paths for exclusive lock and lock upgrade. Now we can simply wait for these transactions to complete without fear of deadlock. Function mysql_lock_abort() has also become unnecessary for all conflicting cases except when a DDL conflicts with a connection that has an open HANDLER. @ sql/mdl.h Introduced new type-of-operation aware metadata locks. Introduced a graph based deadlock detector and supporting methods. Added comments. God rid of redundant API calls. Renamed m_lt_or_ha_sentinel to m_trans_sentinel, since now it guards the global read lock as well as LOCK TABLES and HANDLER locks. @ sql/mysql_priv.h Moved the global read lock functionality into a class. Added MYSQL_OPEN_FORCE_SHARED_MDL flag which forces open_tables() to take MDL_SHARED on tables instead of metadata locks specified in the parser. We use this to allow PREPARE run concurrently in presence of LOCK TABLES ... WRITE. Added signature for find_table_for_mdl_ugprade(). @ sql/set_var.cc Global read lock functionality has been moved into a class. @ sql/sp_head.cc When creating TABLE_LIST elements for prelocking or system tables set the type of request for metadata lock according to the operation that will be performed on the table. @ sql/sql_base.cc - Updated code to use the new MDL API. - In order to avoid locks starvation we take upgradable locks all at once. As result implicitly locked tables no longer get an upgradable lock. Consequently DDL and FLUSH TABLES for such tables is prohibited. find_write_locked_table() was replaced by find_table_for_mdl_upgrade() function. open_table() was adjusted to return TABLE instance with upgradable ticket when necessary. - We no longer wait for all locks on OT_WAIT back off action -- only on the lock that caused the wait conflict. Moreover, now we distinguish cases when we have to wait due to conflict in MDL and old version of table in TDC. - Upate mysql_notify_threads_having_share_locks() to only abort thr_lock.c waits of threads that have open HANDLERs, since lock conflicts with only these threads now can lead to deadlocks not detectable by the MDL deadlock detector. - Remove mysql_abort_transactions_with_shared_locks() which is no longer needed. @ sql/sql_class.cc Global read lock functionality has been moved into a class. Re-arranged code in THD::cleanup() to simplify assert. @ sql/sql_class.h Introduced class to incapsulate global read lock functionality. Now sentinel in MDL subsystem guards the global read lock as well as LOCK TABLES and HANDLER locks. Adjusted code accordingly. @ sql/sql_db.cc Global read lock functionality has been moved into a class. @ sql/sql_delete.cc We no longer acquire upgradable metadata locks on tables which are locked by LOCK TABLES implicitly. As result TRUNCATE TABLE is no longer allowed for such tables. Updated code to use the new MDL API. @ sql/sql_handler.cc Inform MDL_context about presence of open HANDLERs. Since HANLDERs break MDL protocol by acquiring table-level lock while holding only S metadata lock on a table MDL subsystem should take special care about such contexts (Now this is the only case when mysql_lock_abort() is used). @ sql/sql_parse.cc Global read lock functionality has been moved into a class. Do not take upgradable metadata locks when opening tables for CREATE TABLE SELECT as it is not necessary and limits concurrency. When initializing TABLE_LIST objects before adding them to the table list set the type of request for metadata lock according to the operation that will be performed on the table. We no longer acquire upgradable metadata locks on tables which are locked by LOCK TABLES implicitly. As result FLUSH TABLES is no longer allowed for such tables. @ sql/sql_prepare.cc Use MYSQL_OPEN_FORCE_SHARED_MDL flag when opening tables during PREPARE. This allows PREPARE to run concurrently in presence of LOCK TABLES ... WRITE. @ sql/sql_rename.cc Global read lock functionality has been moved into a class. @ sql/sql_show.cc Updated code to use the new MDL API. @ sql/sql_table.cc Global read lock functionality has been moved into a class. We no longer acquire upgradable metadata locks on tables which are locked by LOCK TABLES implicitly. As result DROP TABLE is no longer allowed for such tables. Updated code to use the new MDL API. @ sql/sql_trigger.cc Global read lock functionality has been moved into a class. We no longer acquire upgradable metadata locks on tables which are locked by LOCK TABLES implicitly. As result CREATE/DROP TRIGGER is no longer allowed for such tables. Updated code to use the new MDL API. @ sql/sql_view.cc Global read lock functionality has been moved into a class. Fixed results of wrong merge that led to misuse of GLR API. CREATE VIEW statement is not a commit statement. @ sql/table.cc When resetting TABLE_LIST objects for PS or SP re-execution set the type of request for metadata lock according to the operation that will be performed on the table. Do the same in auxiliary function initializing metadata lock requests in a table list. @ sql/table.h When initializing TABLE_LIST objects set the type of request for metadata lock according to the operation that will be performed on the table. @ sql/transaction.cc Global read lock functionality has been moved into a class. "	5a8749546a0e8d4c34b6339ee2c47dc961157ad3
----------------------------
Update mysql-test innodb_file_format to match the latest behavior (different error number). 	501da6811b46166b0d3bbbbe2966e4da8fd4160a
----------------------------
"Update the sys_vars.innodb_change_buffering_basic mysql-test since the imported InnoDB provides more values for ""innodb_change_buffering"". "	3b4be648f0cb8731d358893d47010b4b9116be3a
----------------------------
Bug #46744 Crash in optimize_semijoin_nests on empty view with limit and procedure. Backport of tor.didriksen@sun.com-20091123102734-nlord11m6o0rw2vu Skip optimize_semijoin_nests() if optimizer_switch = 'semijoin=off'; 	f4b6a2da37cb2bf46388de31c74cf741acc7de03
----------------------------
Update the result file for sys_vars.all_vars since the imported InnoDB provides a few more config variables. 	818b32c4b90fd3a52edd1a31ea5f73cfc8fdc5b7
----------------------------
Bug#33866 Test 'ndb_config' has different result - Most likely occurs when localhost!=127.0.0.1 - Use localhost as the argument for filter, will be resolved to whatever ip is used for localhost on that machine and then used to filter the relevant hosts(which has HostName=localhost) in config.ini 	1f7d51f202493c48c21239d33cb4ccb0b85b1598
----------------------------
Replay 2661.581.1 and 3092.5.1 on top of storage/innobase. ------------------------------------------------------------ revno: 2661.581.1 revision-id: sven.sandberg@sun.com-20090714193119-4693witmsqcaf28q parent: staale.smedseng@sun.com-20090615160325-miaxz8z9rjgm78h4 committer: Sven Sandberg <sven.sandberg@sun.com> branch nick: 5.1-bugteam timestamp: Tue 2009-07-14 21:31:19 +0200 message: BUG#39934: Slave stops for engine that only support row-based logging ... ------------------------------------------------------------ revno: 3092.5.1 revision-id: luis.soares@sun.com-20090924145252-8vvsnbvwo9l8v4vc parent: anurag.shekhar@sun.com-20090831075609-tkpqu41hxtupdeip committer: Luis Soares <luis.soares@sun.com> branch nick: mysql-5.1-bugteam timestamp: Thu 2009-09-24 15:52:52 +0100 message: BUG#42829: binlogging enabled for all schemas regardless of binlog-db-db / binlog-ignore-db ... 	4eb60be01f39c68bcf922dea3f4ecda41913d9f3
----------------------------
WL#5330 SEAGULL: Move my_socket.h to storage/ndb/ - Revert the changes to use my_socket portability layer in MySQL Server part of MySQL Cluster. - Move my_socket* files to portlib - Align the IPV6 connect code in sql-common/client.c with 5.5 where it's backported from. - Align the --bind-address code in sql-common/client.c with suggested patch for 5.X - Fix the few places in storage/ndb which was not using the NDB_SOCKET_TYPE define 	382dbbd1241ea8720b021109d7b59b0f878d1e4a
----------------------------
Fix compile error (different storage class for mysql_temp_dir_list) when trying to build innodb as plugin. The reason for the error is mismatch in mysql_temp_dir_list declaration between mysqld.h and usage in ha_innodb.cc Add missing MYSQL_PLUGIN_IMPORT to mysql_tmpdir_list (variables exported by the server and used by plugin need it). 	2283e1b510998ea904f118b0da50986ec4047de2
----------------------------
Bug#52754 Build break in mysql-trunk, performance schema unit test Tree cleaup after the last major merges in mysql-trunk: The files sql/lex_hash.h and sql/sql_yacc.h are automatically generated, and should not be checked in the configuration management system. These files are now removed. No changes are required for .bzrignore, which already listed these files (and similar files in libmysqld/). The file storage/perfschema/unittest/pfs_timer-t.cc did not build after the header files refactoring affecting mysql_priv.h The file now builds properly using sql_priv.h 	7decb1b9289cf1ea125a0a09e74b7b9bac025fec
----------------------------
Minor refactoring: Moved DBUG_PRINT() which reports execution of pushed join into the common method ha_ndbcluster::create_pushed_join(). This eliminated the same DBUG_PRINT() being duplicated in each callee. 	5e92e4518acb504fc18a4cbc930b6f757596cb42
----------------------------
Bug #47095: Can't open_files_limit really be larger than 65535? Several problems addressed: 1. The maximum value for --open_files_limit on non-windows boxes is now raised to UINT_MAX (the maximum possible without significant changes in the code). The maximum value on windows is kept to be 2048 due to a known limitation (bug 24509). 2. mysqld_safe now supports --open_files_limit=xx in addition to --open-files-limit=xx 3. mysqld_safe always passes through --open[_-]files[_-]limit to the underlying mysqld. It used to pass it through only if it the user running the script has access to the root directory or there was an --user argument specified. 4. Fixed a prototype in my_file.c to match its counterpart in the other #ifdef branch. 	17a21c4f35812eba71a44e906e18ec947517cf35
----------------------------
branches/zip: innobase_init(): Correct the error message about wrong innodb_change_buffering value.  Reported by Ranger. 	c2ecefe6e83297f7e99be790ed4d19967cc667d7
----------------------------
Merge: f2d77ee 52d89df Manual merge of mysql-5.1-bugteam into mysql-trunk-merge. Conflicts: Text conflict in mysql-test/r/func_str.result Text conflict in mysql-test/suite/sys_vars/r/myisam_sort_buffer_size_basic_32.result Text conflict in mysql-test/suite/sys_vars/r/myisam_sort_buffer_size_basic_64.result Text conflict in mysql-test/t/func_str.test Text conflict in sql/mysqld.cc Text conflict in sql/protocol.cc Text conflict in storage/myisam/mi_open.c 	87b98f6350b57a58e2a0c436c6c4c6783e3d27dd
----------------------------
"Applying InnoDB snapshot Detailed revision comments: r6861 | vdimov | 2010-03-23 19:31:02 +0200 (Tue, 23 Mar 2010) | 36 lines branches/zip: Merge joerg@mysql.com-20100322150231-vdq0afbqtmbs6phy from BZR, Including univ.i before mysql/plugin.h is needed to avoid this compiler error: o  This is how gcc puts it: o  > > ccache /usr/local/gcc-4.3.2/bin/gcc -static-libgcc -DHAVE_CONFIG_H -I. -I../../include -I../../include -I../../include -I../../regex -I./include -I../../sql -I. -I../../zlib    -g -O3 -march=i686   -DUNIV_LINUX -MT libinnobase_a-trx0i_s.o -MD -MP -MF .deps/libinnobase_a-trx0i_s.Tpo -c -o libinnobase_a-trx0i_s.o `test -f 'trx/trx0i_s.c' || echo './'`trx/trx0i_s.c o  > > In file included from ./include/univ.i:114, o  > >                  from trx/trx0i_s.c:36: o  > > ../../include/my_pthread.h:628: error: expected ')' before '*' token o  > > In file included from ../../include/my_pthread.h:732, o  > >                  from ./include/univ.i:114, o  > >                  from trx/trx0i_s.c:36: o  > > ../../include/mysql/psi/mysql_thread.h:100: error: expected specifier-qualifier-list before 'pthread_rwlock_t' o  > > ../../include/mysql/psi/mysql_thread.h:116: error: expected specifier-qualifier-list before 'pthread_rwlock_t' o  > > ../../include/mysql/psi/mysql_thread.h: In function 'inline_mysql_rwlock_init': o  > > ../../include/mysql/psi/mysql_thread.h:711: error: 'mysql_rwlock_t' has no member named 'm_psi' o  > > ../../include/mysql/psi/mysql_thread.h:716: error: 'mysql_rwlock_t' has no member named 'm_rwlock' o  > > .... ((continued)) o o  Intel's icc gives slightly clearer messages: o  > > icc -static-intel -static-libgcc -DHAVE_CONFIG_H -I. -I../../include -I../../include -I../../include -I../../regex -I./include -I../../sql -I. -I../../zlib    -O3 -g -unroll2 -ip -mp -restrict -no-ftz -no-prefetch   -DUNIV_LINUX -MT libinnobase_a-trx0i_s.o -MD -MP -MF .deps/libinnobase_a-trx0i_s.Tpo -c -o libinnobase_a-trx0i_s.o `test -f 'trx/trx0i_s.c' || echo './'`trx/trx0i_s.c o  > > ../../include/my_pthread.h(628): error: identifier ""pthread_rwlock_t"" is undefined o  > >   extern int rw_pr_init(rw_pr_lock_t *); o  > >                         ^ o  > > o  > > ../../include/mysql/psi/mysql_thread.h(100): error: identifier ""pthread_rwlock_t"" is undefined o  > >     rw_lock_t m_rwlock; o  > >     ^ o  > > o  > > ../../include/mysql/psi/mysql_thread.h(116): error: identifier ""pthread_rwlock_t"" is undefined o  > >     rw_pr_lock_t m_prlock; o  > >     ^ "	64d2ade65db9766b18d14ff1f993603368586d87
----------------------------
Fix SVR4 datadir 	5593e29304b08652f5249bcee223655cb98e896b
----------------------------
Applying InnoDB snapshot Detailed revision comments: r6858 | mmakela | 2010-03-23 14:09:24 +0200 (Tue, 23 Mar 2010) | 1 line branches/zip: innodb_read_ahead_threshold: Add missing space to help string. 	9f0592dd38f2d268e954d69869f0a90dfdc03303
----------------------------
Applying InnoDB snapshot Detailed revision comments: r6857 | mmakela | 2010-03-23 14:07:53 +0200 (Tue, 23 Mar 2010) | 1 line branches/zip: innodb_change_buffering: Correct the documentation. 	d56ea0322e0baafe718b74b51a744bde8be2e8dd
----------------------------
Applying InnoDB snapshot Detailed revision comments: r6787 | marko | 2010-03-10 10:35:06 +0200 (Wed, 10 Mar 2010) | 10 lines branches/zip: recv_parse_log_rec(): Remove a bogus assertion about page_no. TODO: We might also consider removing recv_max_parsed_page_no, because it does not make much sense with *.ibd files. recv_report_corrupt_log(), recv_scan_log_recs(): Abort when a corrupted log record has been found, unless innodb_force_recovery has been set. This fixes Issue #464. rb://265 approved by Heikki Tuuri 	434cf1894cab0ae2a2b8a2cf6d452b60b9033338
----------------------------
Try to fix datadir 	f037ad4fbf1ed87254d36e94f4368cfb348d8248
----------------------------
Applying InnoDB snapshot Detailed revision comments: r6472 | calvin | 2010-01-16 01:53:47 +0200 (Sat, 16 Jan 2010) | 12 lines branches/zip: Merge revisions 6425:6471 from branches/5.1 to pick up the first part fix of bug49396. ------------------------------------------------------------------------ r6471 | calvin | 2010-01-15 17:43:27 -0600 (Fri, 15 Jan 2010) | 4 lines branches/5.1: fix bug#49396: main.innodb test fails in embedded mode Change replace_result by using $MYSQLD_DATADIR. Tested in both embedded mode and normal server mode. ------------------------------------------------------------------------ r6473 | calvin | 2010-01-16 01:58:16 +0200 (Sat, 16 Jan 2010) | 6 lines branches/zip: fix bug#49396: innodb.innodb-index test fails in embedded mode This is 2nd part of the fix for bug#49396. The 1st part is innodb.test. Tested in both embedded mode and normal server mode. 	33bac9249fc19c371bacd68baef6e78dee032b7b
----------------------------
Applying InnoDB snapshot Detailed revision comments: r6425 | marko | 2010-01-12 13:47:11 +0200 (Tue, 12 Jan 2010) | 45 lines branches/zip: Merge revisions 6350:6424 from branches/5.1: ------------------------------------------------------------------------ r6421 | jyang | 2010-01-12 07:59:16 +0200 (Tue, 12 Jan 2010) | 8 lines Changed paths: M /branches/5.1/row/row0mysql.c branches/5.1: Fix bug #49238: Creating/Dropping a temporary table while at 1023 transactions will cause assert. Handle possible DB_TOO_MANY_CONCURRENT_TRXS when deleting metadata in row_drop_table_for_mysql(). rb://220, approved by Marko ------------------------------------------------------------------------ r6422 | marko | 2010-01-12 11:34:27 +0200 (Tue, 12 Jan 2010) | 3 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/handler/ha_innodb.h branches/5.1: Non-functional change: Make innobase_get_int_col_max_value() a static function. It does not access any fields of class ha_innobase. ------------------------------------------------------------------------ r6424 | marko | 2010-01-12 12:22:19 +0200 (Tue, 12 Jan 2010) | 16 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/handler/ha_innodb.h branches/5.1: In innobase_initialize_autoinc(), do not attempt to read the maximum auto-increment value from the table if innodb_force_recovery is set to at least 4, so that writes are disabled. (Bug #46193) innobase_get_int_col_max_value(): Move the function definition before ha_innobase::innobase_initialize_autoinc(), because that function now calls this function. ha_innobase::innobase_initialize_autoinc(): Change the return type to void.  Do not attempt to read the maximum auto-increment value from the table if innodb_force_recovery is set to at least 4.  Issue ER_AUTOINC_READ_FAILED to the client when the auto-increment value cannot be read. rb://144 by Sunny, revised by Marko ------------------------------------------------------------------------ 	68afad078a8a8d2aa3c9d1e4298e670678b0dbc7
----------------------------
BUG#51291 Unfortunate effect around variable binlog_direct_non_transactional_updates Post-merge fix. 	ec6c56ef5a4ffd7cab5b2c5b5da79e45530fcf33
----------------------------
branches/innodb+ rb://257 When a transaction joins we check if there are any other transactions waiting on its locks. If there aren't any waiting then no deadlock can occur.  This patch however has additional changes. 1. Count leading zeros 2. Count trailing zeros There are two version of both these utility functions. One is hand coded and the other will use the GCC builtin when available. The changes to configure have yet to be made. Simplify the next record lock fetch in the deadlock check code. Pass the heap number as a parameter to the deadlock check code. Written by: Sunny 	efde23d5b7850788c1c44dbf6f3bd63d49abff69
----------------------------
branches/innodb+ Non-functional change. Take our the start up message about ignoring innodb_use_native_aio. 	5fa48065dd255f0454b7359e04eac2352f1a9de8
----------------------------
branches/innodb+: Create a separate purge thread to do the purge. Introduce two new configuration parameters. 1. innodb-purge-threads := [01] -- default is 0 2. innodb-purge-batch-size := 20 ... 5000 -- default is 20 rb://271 	e39826c69b990b65239c6f618659f16054f6bf3b
----------------------------
BUG#51291 Unfortunate effect around variable binlog_direct_non_transactional_updates Added test cases to check the case where the option binlog_direct_non_transactional_updates is OFF. 	f7776c999ed59e850dd7781e09329a50c8def881
----------------------------
"BUG#51291 Unfortunate effect around variable binlog_direct_non_transactional_updates BUG#46364 introduced the flag binlog_direct_non_transactional_updates which would make N-changes to be written to the binary log upon committing the statement when ""ON"". On the other hand, when ""OFF"" the option was supposed to mimic the behavior in 5.1. However, the implementation was not mimicking the behavior correctly and the following bugs popped up: Case #1: N-changes executed within a transaction would go into the S-cache. When later in the same transaction a T-change occurs, N-changes following it were written to the T-cache instead of the S-cache. In some cases, this raises problems. For example, a Table_map_log_event being written initially into the S-cache, together with the initial N-changes, would be absent from the T-cache. This would log N-changes orphaned from a Table_map_log_event (thence discarded at the slave). (MIXED and ROW) Case #2: When rolling back a transaction, the N-changes that might be in the T-cache were disregarded and truncated along with the T-changes. (MIXED and ROW) Case #3: When a MIXED statement (TN) is ahead of any other T-changes in the transaction and it fails, it is kept in the T-cache until the transaction ends. This is not the case in 5.1 or Betony (5.5.2). In these, the failed TN statement would be written to the binlog at the same instant it had failed and not deferred until transaction end. (SBR) To fix these problems, we have decided to do what follows: For Case #1 and #2, we circumvent them: 1. by not letting binlog_direct_non_transactional_updates affect MIXED and RBR. These modes will keep the behavior provided by WL#2687. Although this will make Celosia to behave differently from 5.1, an execution will be always safe under such modes in the sense that slaves will never go out sync. In 5.1, using either MIXED or ROW while mixing N-statements and T-statements was not safe. For Case #3, we don't actually fix it. We: 1. keep it and make all MIXED statements whether they end up failing or not or whether they are up front in the transaction or after some transactional change to always be stored in the T-cache. This means that it is written to the binary log on transaction commit/rollback only. 2. We make the warning message even more specific about the MIXED statement and SBR. "	7827688f231be69a86a317e110fd1b3ba559af43
----------------------------
"branches/innodb+: Merge revisions 6853:6897 from branches/zip: Skip r6860, which was merged from branches/innodb+ to branches/zip, and r6857, which is only applicable to branches/zip. ------------------------------------------------------------------------ r6858 | mmakela | 2010-03-23 14:09:24 +0200 (Tue, 23 Mar 2010) | 1 line Changed paths: M /branches/zip/handler/ha_innodb.cc branches/zip: innodb_read_ahead_threshold: Add missing space to help string. ------------------------------------------------------------------------ r6861 | vdimov | 2010-03-23 19:31:02 +0200 (Tue, 23 Mar 2010) | 36 lines Changed paths: M /branches/zip/trx/trx0i_s.c branches/zip: Merge joerg@mysql.com-20100322150231-vdq0afbqtmbs6phy from BZR, Including univ.i before mysql/plugin.h is needed to avoid this compiler error: o  This is how gcc puts it: o  > > ccache /usr/local/gcc-4.3.2/bin/gcc -static-libgcc -DHAVE_CONFIG_H -I. -I../../include -I../../include -I../../include -I../../regex -I./include -I../../sql -I. -I../../zlib    -g -O3 -march=i686   -DUNIV_LINUX -MT libinnobase_a-trx0i_s.o -MD -MP -MF .deps/libinnobase_a-trx0i_s.Tpo -c -o libinnobase_a-trx0i_s.o `test -f 'trx/trx0i_s.c' || echo './'`trx/trx0i_s.c o  > > In file included from ./include/univ.i:114, o  > >                  from trx/trx0i_s.c:36: o  > > ../../include/my_pthread.h:628: error: expected ')' before '*' token o  > > In file included from ../../include/my_pthread.h:732, o  > >                  from ./include/univ.i:114, o  > >                  from trx/trx0i_s.c:36: o  > > ../../include/mysql/psi/mysql_thread.h:100: error: expected specifier-qualifier-list before 'pthread_rwlock_t' o  > > ../../include/mysql/psi/mysql_thread.h:116: error: expected specifier-qualifier-list before 'pthread_rwlock_t' o  > > ../../include/mysql/psi/mysql_thread.h: In function 'inline_mysql_rwlock_init': o  > > ../../include/mysql/psi/mysql_thread.h:711: error: 'mysql_rwlock_t' has no member named 'm_psi' o  > > ../../include/mysql/psi/mysql_thread.h:716: error: 'mysql_rwlock_t' has no member named 'm_rwlock' o  > > .... ((continued)) o o  Intel's icc gives slightly clearer messages: o  > > icc -static-intel -static-libgcc -DHAVE_CONFIG_H -I. -I../../include -I../../include -I../../include -I../../regex -I./include -I../../sql -I. -I../../zlib    -O3 -g -unroll2 -ip -mp -restrict -no-ftz -no-prefetch   -DUNIV_LINUX -MT libinnobase_a-trx0i_s.o -MD -MP -MF .deps/libinnobase_a-trx0i_s.Tpo -c -o libinnobase_a-trx0i_s.o `test -f 'trx/trx0i_s.c' || echo './'`trx/trx0i_s.c o  > > ../../include/my_pthread.h(628): error: identifier ""pthread_rwlock_t"" is undefined o  > >   extern int rw_pr_init(rw_pr_lock_t *); o  > >                         ^ o  > > o  > > ../../include/mysql/psi/mysql_thread.h(100): error: identifier ""pthread_rwlock_t"" is undefined o  > >     rw_lock_t m_rwlock; o  > >     ^ o  > > o  > > ../../include/mysql/psi/mysql_thread.h(116): error: identifier ""pthread_rwlock_t"" is undefined o  > >     rw_pr_lock_t m_prlock; o  > >     ^ ------------------------------------------------------------------------ r6864 | mmakela | 2010-03-24 14:05:53 +0200 (Wed, 24 Mar 2010) | 1 line Changed paths: M /branches/zip/include/data0type.ic branches/zip: dtype_new_store_for_order_and_null_size(): Add ut_ad() on mtype. ------------------------------------------------------------------------ r6868 | mmakela | 2010-03-25 13:03:08 +0200 (Thu, 25 Mar 2010) | 1 line Changed paths: M /branches/zip/page/page0page.c branches/zip: page_validate(): Check the buf[] bounds. ------------------------------------------------------------------------ r6871 | vdimov | 2010-03-25 16:39:44 +0200 (Thu, 25 Mar 2010) | 4 lines Changed paths: M /branches/zip/ChangeLog branches/zip: Whitespace fixup to be consistent with the rest of the file. ------------------------------------------------------------------------ r6872 | vdimov | 2010-03-25 17:03:17 +0200 (Thu, 25 Mar 2010) | 4 lines Changed paths: M /branches/zip/ChangeLog branches/zip: Fix ChangeLog - write only the bug title in bugs.mysql.com-related entires. ------------------------------------------------------------------------ r6873 | vdimov | 2010-03-25 17:06:56 +0200 (Thu, 25 Mar 2010) | 4 lines Changed paths: M /branches/zip/ChangeLog branches/zip: Use Bug#N instead of Bug #N to be consistent with the rest of the fil. ------------------------------------------------------------------------ r6874 | vdimov | 2010-03-25 17:17:52 +0200 (Thu, 25 Mar 2010) | 4 lines Changed paths: M /branches/zip/ChangeLog branches/zip: Wrap ChangeLog at 78th column ------------------------------------------------------------------------ r6875 | vdimov | 2010-03-25 18:18:15 +0200 (Thu, 25 Mar 2010) | 4 lines Changed paths: M /branches/zip/ChangeLog branches/zip: Wrap line at 78 column in ChangeLog. ------------------------------------------------------------------------ r6891 | vdimov | 2010-03-26 16:19:01 +0200 (Fri, 26 Mar 2010) | 5 lines Changed paths: M /branches/innodb+/buf/buf0buddy.c M /branches/innodb+/include/btr0btr.ic M /branches/innodb+/include/buf0buf.ic M /branches/innodb+/include/handler0alter.h M /branches/innodb+/include/mtr0mtr.ic M /branches/innodb+/include/pars0pars.h M /branches/innodb+/include/row0merge.h M /branches/innodb+/include/row0row.h M /branches/innodb+/include/row0sel.h M /branches/innodb+/include/row0types.h M /branches/innodb+/include/sync0rw.h M /branches/innodb+/include/ut0lst.h M /branches/innodb+/include/ut0ut.h M /branches/innodb+/os/os0thread.c M /branches/innodb+/pars/pars0pars.c M /branches/innodb+/plug.in M /branches/innodb+/row/row0purge.c M /branches/innodb+/row/row0row.c M /branches/innodb+/row/row0uins.c M /branches/innodb+/trx/trx0rec.c M /branches/innodb+/ut/ut0ut.c M /branches/innodb+_persistent_stats/buf/buf0buddy.c M /branches/innodb+_persistent_stats/include/btr0btr.ic M /branches/innodb+_persistent_stats/include/buf0buf.ic M /branches/innodb+_persistent_stats/include/handler0alter.h M /branches/innodb+_persistent_stats/include/mtr0mtr.ic M /branches/innodb+_persistent_stats/include/row0merge.h M /branches/innodb+_persistent_stats/include/row0row.h M /branches/innodb+_persistent_stats/include/row0sel.h M /branches/innodb+_persistent_stats/include/row0types.h M /branches/innodb+_persistent_stats/include/sync0rw.h M /branches/innodb+_persistent_stats/os/os0thread.c M /branches/innodb+_persistent_stats/plug.in M /branches/innodb+_persistent_stats/row/row0purge.c M /branches/innodb+_persistent_stats/row/row0row.c M /branches/innodb+_persistent_stats/row/row0uins.c M /branches/innodb+_persistent_stats/trx/trx0rec.c M /branches/performance_schema/buf/buf0buddy.c M /branches/performance_schema/buf/buf0flu.c M /branches/performance_schema/compile-innodb-debug M /branches/performance_schema/include/btr0btr.ic M /branches/performance_schema/include/buf0buf.ic M /branches/performance_schema/include/dict0boot.ic M /branches/performance_schema/include/dict0dict.h M /branches/performance_schema/include/os0file.ic M /branches/performance_schema/include/os0thread.h M /branches/performance_schema/include/row0sel.h M /branches/performance_schema/include/trx0purge.h M /branches/performance_schema/include/trx0sys.ic M /branches/performance_schema/include/ut0wqueue.h M /branches/performance_schema/lock/lock0iter.c M /branches/performance_schema/mem/mem0pool.c M /branches/performance_schema/os/os0thread.c M /branches/performance_schema/page/page0zip.c M /branches/performance_schema/que/que0que.c M /branches/performance_schema/read/read0read.c M /branches/performance_schema/row/row0purge.c M /branches/performance_schema/row/row0row.c M /branches/performance_schema/row/row0vers.c M /branches/performance_schema/sync/sync0arr.c M /branches/performance_schema/thr/thr0loc.c M /branches/performance_schema/trx/trx0rec.c M /branches/performance_schema/trx/trx0roll.c M /branches/performance_schema/trx/trx0undo.c M /branches/performance_schema/ut/ut0wqueue.c M /branches/perfschema/btr/btr0sea.c M /branches/perfschema/buf/buf0buddy.c M /branches/perfschema/buf/buf0flu.c M /branches/perfschema/compile-innodb-debug M /branches/perfschema/ha/hash0hash.c M /branches/perfschema/include/buf0buf.ic M /branches/perfschema/include/buf0flu.ic M /branches/perfschema/include/dict0boot.ic M /branches/perfschema/include/os0thread.h M /branches/perfschema/include/sync0rw.h M /branches/perfschema/include/sync0rw.ic M /branches/perfschema/include/sync0sync.ic M /branches/perfschema/mem/mem0pool.c M /branches/perfschema/os/os0thread.c M /branches/perfschema/page/page0zip.c M /branches/perfschema/que/que0que.c M /branches/perfschema/read/read0read.c M /branches/perfschema/row/row0purge.c M /branches/perfschema/row/row0vers.c M /branches/perfschema/sync/sync0arr.c M /branches/perfschema/sync/sync0rw.c M /branches/perfschema/thr/thr0loc.c M /branches/perfschema/trx/trx0purge.c M /branches/perfschema/trx/trx0rec.c M /branches/perfschema/trx/trx0roll.c M /branches/perfschema/trx/trx0undo.c M /branches/perfschema/ut/ut0wqueue.c M /branches/zip/buf/buf0buddy.c M /branches/zip/buf/buf0flu.c M /branches/zip/buf/buf0rea.c M /branches/zip/fil/fil0fil.c M /branches/zip/include/btr0btr.ic M /branches/zip/include/buf0buf.ic M /branches/zip/include/buf0flu.h M /branches/zip/include/data0type.ic M /branches/zip/include/mtr0mtr.ic M /branches/zip/include/row0sel.h M /branches/zip/include/sync0rw.h M /branches/zip/plug.in M /branches/zip/row/row0row.c M /branches/zip/trx/trx0i_s.c M /branches/zip/trx/trx0rec.c M /branches/zip/trx/trx0sys.c Non-functional change: update copyright year to 2010 of the files that have been modified after 2010-01-01 according to svn. for f in $(svn log -v -r{2010-01-01}:HEAD |grep ""^   M "" |cut -b 16- |sort -u) ; do sed -i """" -E 's/(Copyright \(c\) [0-9]{4},) [0-9]{4}, (.*Innobase Oy.+All Rights Reserved)/\1 2010, \2/' $f ; done ------------------------------------------------------------------------ r6897 | mmakela | 2010-03-29 11:36:19 +0300 (Mon, 29 Mar 2010) | 3 lines Changed paths: M /branches/zip/handler/ha_innodb.cc branches/zip: innodb_mutex_show_status(): Fix a condition that was accidentally negated in r6781, making SHOW ENGINE INNODB MUTEX STATUS display only locks with no OS waits. ------------------------------------------------------------------------ "	b7188cd26bb1626650a3c768493aa38654e29fdb
----------------------------
branches/innodb+: Merge branches/perfschema back into innodb+. Check in code change for implementing Performace Schema in InnoDB. Objects in four different modules in InnoDB have been performance instrumented, these modules are: 1) mutexes 2) rwlocks 3) file I/O 4) threads We mostly preserved the existing APIs, but APIs would point to instrumented function wrappers if performance schema is defined. There are 4 different defines that controls the instrumentation of each module.  The feature is off by default, and will be compiled in with special build option, and requre configure option to turn it on when server boots.  For more detail design and functional information, please refer to performance schema wiki page. rb://270 approved by Marko Mäkelä 	cefc7748b2fd0292b1bf531162d0b667f9bc863b
----------------------------
"WL#5096 -- Addressing review comments rpl_row_record_find_* - Removed these tests which are now superseded by rpl_row_img.test diff_tables.inc - Refactored so that it is now possible to specify tables on any two connections, instead of just master and slave. diff_tables2.inc - Moved its contents to diff_tables.inc and removed it. rpl_row_img_set.inc - Refactored and made generic. - It takes a list of connections and binlog-row-image values. Runs through the list and sets the respective value. It also takes a third argument per connection, which controls whether stop and start slave should be issued. - Added some comments to the file. rpl_row_img_sanity_set_img - Removed as it became obsolete after refactorings on rpl_row_img_set. rpl_row_img_sanity.test - Removed some comments (including ones referencing reviews). - Added assertion for default binlog_row_image - Refactored the main loop to be more descriptive - Reduced the code length by reusing rpl_row_img_sanity_set_img.inc rpl_row_img_general_loop.test - Changed so that the new argument for rpl_row_img_set.inc would be used. - Improved comments. rpl_row_img_parts_assertion.inc - This was rpl_row_mysqbinlog_img_check.inc. Got renamed. - Refactored to: 1. make image expected argument to be more concise; 2. make it call mysqlbinlog itself and has start position as an argument. This way we can have mysqlbinlog to dump just a specific part of the binary log and reduce the scope of the pattern matching used in the assertion; 3. to clean up error reporting. - Improved comments. rpl_row_img_parts_master_slave.inc - New file. - Wrapper to rpl_row_img_parts_assertion that handles replication scenarios, combining master and slave assertions together. It also handles automatic synchronization before executing the statement that generates row events, saves the binary log positions and in the end calls rpl_row_img_parts_assertion for both master and slave assertions. rpl_row_img_sanity_assertions.inc - Removed and merged remains on rpl_row_img_sanity. rpl_row_img_sanity_create_table - Removed and merged remains on rpl_row_img_sanity. rpl_row_img_sanity.test - After the refactorings above, replaced the obsolete parts with the new functionality. - Improved comments. rpl_auto_increment - Was missing a ""connection master"" on the clean up section. Since diff_tables.inc now restores the connection to the one it was using before finishing, this means that the clean up commands were being issued on the slave's connection, whereas before they were issued on the master's connection. This commit also includes the corresponding result file updates. "	b1fa8005a2547edb722b03720db88e7511317b33
----------------------------
An addition to fix for BUG#51866 - crash with repair by sort and fulltext keys. Min value for myisam_sort_buffer_size is 4096. 	bd2a0eaa82c15af2b49cfbe405489a3207f196e0
----------------------------
BUG#51866 - crash with repair by sort and fulltext keys Repairing MyISAM table with fulltext indexes and low myisam_sort_buffer_size may crash the server. Estimation of number of index entries was done incorrectly, causing further assertion failure or server crash. Docs note: min value for myisam_sort_buffer_size has been changed from 4 to 4096. 	3f641968fc91950bf974a8dbfe0cd6d913cab75a
----------------------------
"Add ""--with-perfschema"" to the configure options for RPMs. "	8a5aca0dc7861eff472ad04f7aa1029e78822654
----------------------------
BUG#52341: PB2: rpl tests started taking three times more time on linux x86_64 max Rpl tests were surprisingly taking too long when server was built using cmake on linux. This was because cmake counter part of patch for WL#4949 was not defining SIGNAL_WITH_VIO_CLOSE flag, which had negative impact on the time needed to stop the slave IO thread on STOP SLAVE command. We fix this by deploy the missing SET command on configure.cmake. 	b684173e3352c954a07845b891caae42462e9f0e
----------------------------
Bug#47096  LOST_EVENTS incident not reported when --binlog-ignore-db is used: Skip filtering on database for Incident_bilog_event 	8b5dda56b01b4f2032da5359bdcddce04fdfd722
----------------------------
Backport into build-201003230706-5.1.43sp1 > ------------------------------------------------------------ > revno: 3329.2.3 > revision-id: svoj@sun.com-20100122095702-e18xzhmyll1e5s25 > parent: svoj@sun.com-20100122095632-j8ssd5csnlzp1zpf > committer: Sergey Vojtovich <svoj@sun.com> > branch nick: mysql-5.1-bugteam > timestamp: Fri 2010-01-22 13:57:02 +0400 > message: >   Applying InnoDB snapshot, fixes BUG#46193. > >   Detailed revision comments: > >   r6424 | marko | 2010-01-12 12:22:19 +0200 (Tue, 12 Jan 2010) | 16 lines >   branches/5.1: In innobase_initialize_autoinc(), do not attempt to read >   the maximum auto-increment value from the table if >   innodb_force_recovery is set to at least 4, so that writes are >   disabled. (Bug #46193) > >   innobase_get_int_col_max_value(): Move the function definition before >   ha_innobase::innobase_initialize_autoinc(), because that function now >   calls this function. > >   ha_innobase::innobase_initialize_autoinc(): Change the return type to >   void.  Do not attempt to read the maximum auto-increment value from >   the table if innodb_force_recovery is set to at least 4.  Issue >   ER_AUTOINC_READ_FAILED to the client when the auto-increment value >   cannot be read. > >   rb://144 by Sunny, revised by Marko 	3f67377531ed9ea40d9523974e9c7b3765a1a299
----------------------------
ndb - bug#52325 - don't abort but handle errors in ndbcluster_find_all_databases 	931e8ccfced56cc769201c539b1e25dcd23b23d3
----------------------------
Extend ha_ndbcluster::check_if_pushable to also check index id in addition to correct access type 	5d46bf122714cca06d7a748532369b4d880a746f
----------------------------
"branches/zip: Merge joerg@mysql.com-20100322150231-vdq0afbqtmbs6phy from BZR, Including univ.i before mysql/plugin.h is needed to avoid this compiler error: o  This is how gcc puts it: o  > > ccache /usr/local/gcc-4.3.2/bin/gcc -static-libgcc -DHAVE_CONFIG_H -I. -I../../include -I../../include -I../../include -I../../regex -I./include -I../../sql -I. -I../../zlib    -g -O3 -march=i686   -DUNIV_LINUX -MT libinnobase_a-trx0i_s.o -MD -MP -MF .deps/libinnobase_a-trx0i_s.Tpo -c -o libinnobase_a-trx0i_s.o `test -f 'trx/trx0i_s.c' || echo './'`trx/trx0i_s.c o  > > In file included from ./include/univ.i:114, o  > >                  from trx/trx0i_s.c:36: o  > > ../../include/my_pthread.h:628: error: expected ')' before '*' token o  > > In file included from ../../include/my_pthread.h:732, o  > >                  from ./include/univ.i:114, o  > >                  from trx/trx0i_s.c:36: o  > > ../../include/mysql/psi/mysql_thread.h:100: error: expected specifier-qualifier-list before 'pthread_rwlock_t' o  > > ../../include/mysql/psi/mysql_thread.h:116: error: expected specifier-qualifier-list before 'pthread_rwlock_t' o  > > ../../include/mysql/psi/mysql_thread.h: In function 'inline_mysql_rwlock_init': o  > > ../../include/mysql/psi/mysql_thread.h:711: error: 'mysql_rwlock_t' has no member named 'm_psi' o  > > ../../include/mysql/psi/mysql_thread.h:716: error: 'mysql_rwlock_t' has no member named 'm_rwlock' o  > > .... ((continued)) o o  Intel's icc gives slightly clearer messages: o  > > icc -static-intel -static-libgcc -DHAVE_CONFIG_H -I. -I../../include -I../../include -I../../include -I../../regex -I./include -I../../sql -I. -I../../zlib    -O3 -g -unroll2 -ip -mp -restrict -no-ftz -no-prefetch   -DUNIV_LINUX -MT libinnobase_a-trx0i_s.o -MD -MP -MF .deps/libinnobase_a-trx0i_s.Tpo -c -o libinnobase_a-trx0i_s.o `test -f 'trx/trx0i_s.c' || echo './'`trx/trx0i_s.c o  > > ../../include/my_pthread.h(628): error: identifier ""pthread_rwlock_t"" is undefined o  > >   extern int rw_pr_init(rw_pr_lock_t *); o  > >                         ^ o  > > o  > > ../../include/mysql/psi/mysql_thread.h(100): error: identifier ""pthread_rwlock_t"" is undefined o  > >     rw_lock_t m_rwlock; o  > >     ^ o  > > o  > > ../../include/mysql/psi/mysql_thread.h(116): error: identifier ""pthread_rwlock_t"" is undefined o  > >     rw_pr_lock_t m_prlock; o  > >     ^ "	b830a9400a526588795ca07966e6c0f6d898c9b5
----------------------------
branches/zip: innodb_read_ahead_threshold: Add missing space to help string. 	d2b4c4f532d14f73479f6648dd2dacfb95c1ffa3
----------------------------
branches/zip: innodb_change_buffering: Correct the documentation. 	1005e06d8af80cc9d82faa3cb444222332cff270
----------------------------
Bug#49559 Log empty epoch does not log transaction which update nothing: Added handling of empty epochs if --ndb-log-empty-epochs is set 	1fb3957bc53745f13be041ab1f69882ed3c2c8b9
----------------------------
BUG#51868 - crash with myisam_use_mmap and partitioned myisam tables Queries following TRUNCATE of partitioned MyISAM table may crash server if myisam_use_mmap is true. Internally this is MyISAM bug, but limited to partitioned tables, because MyISAM doesn't use ::delete_all_rows() method for TRUNCATE, but goes via table recreate instead. MyISAM didn't properly fall back to non-mmaped I/O after mmap() failure. Was not repeatable on linux before, likely because (quote from man mmap): SUSv3  specifies  that  mmap() should fail if length is 0. However, in kernels before 2.6.12, mmap() succeeded in this case: no mapping was created and the call returned addr. Since kernel 2.6.12, mmap() fails with the error EINVAL for this case. 	356d075418d2f1a5c8342b0de61945170a987b50
----------------------------
fix grep -q in ndb_configure.m4 	9d8131cb65a78edf906ea3c80e18854bc5e823a5
----------------------------
backport 3654 from 6.0-codebase-bugfixing-gtest: At configure time: compile and link with gtest, to catch compiler/platform version problems up front. 	d4fd844f5b2bab4fca3f702ea8ff2dc830acc2ad
----------------------------
branches/innodb+: fix slash in innodb_change_buffering_basic.diff 	8c7bb285a3bbd5669d0276758dd6f32602b49605
----------------------------
branches/innodb+: update test case innodb_change_buffering_basic. The valid values of innodb_change_buffering are 'inserts', 'deletes', 'changes', 'purges', 'all', and 'none', with default value 'all'. 	dbad70e100fcb856080d6fc2138451c89fd6efeb
----------------------------
"WL#3985: Subquery optimization: smart choice between semi-join and materialization - Better calculations for materialized table's cardinality. - Fix a number of problems in semi-join cost calculations - Better comments - Code cleanup * Add optimizer_flag(thd, ...) convience function, make the code to use it * Add @@optimizer_switch='no_firstmatch' flag * Fix a problem with using sj-materialization when subquery's select list element SCOL is covered by equality propagation and has preceding equal column PCOL which belongs to a table within the the semi-join nest: SJM-Scan process should unpack column value not to SCOL but rather to PCOL, as substitute_best_equal has made all conditions to refer to PCOL. * Cosmetic fixes in sub_select_sjm(). - More subquery tests Subquery optimization: DuplicateWeedout strategy: switch from late position() calls to early. - Before, there was JOIN_TAB::rowid_keep_flags, with two possible flags: KEEP_ROWID and CALL_POSITION. CALL_POSITION was needed because we needed to know whether to call join_tab->file->position() or the rowid is already there because it has been packed/unpacked by join buffering. - Now the ""owner"" join tab calls position() for every record, so at DuplicateWeedout point we don't need to ever call position() anymore. Hence CALL_POSITION is gone and ""keep_rowid_flags & KEEP_ROWID"" is replaced with keep_current_rowid "	64d96b77643e51fe6bb80ca2c18e9eb6ec2d24bc
----------------------------
"Bug #51398 Test ""rpl_heartbeat_basic"" fails ""while waiting for slave_received_heartbeats"" Non-determinism of the test was caused by lack of setting a proper value to hb period, actually fixed by BUG@50767. These fixes aim at possible non-determinism in comparison of received hb events by master and slave in the circular part of the test. Even though the HB periods ratio was choosen to be as high as 10, it's still incorrect to compare number of hb-events basing only a relation between their periods. Yet another issue is relatively short 60 secs timeout of wait_for_status_var.inc makes valgrind runs to fail. Fixed with deploying wait_for_slave_io_to_start afront of calling wait_for_status_var. The test is made runnable only with MIXED binlog-format as it has close to 1 min total exec time and there is nothing format specific in it. "	cf206a57f69196887873e61ad9051ce9663c6994
----------------------------
ndb - remove unecessary EmulatorData argument to ThreadConfig::init, the EmulatorData instance is global and can be accessed directly. 	2c203d289a85eed96529049795be8527a4a1e0ef
----------------------------
"WL#4523  Run ndbd as Windows Service - Make the angel connect to ndb_mgmd, fetch config and allocate nodeid. - This removes the use of any global data  in the angel, for example ""theConfig"" - Change Configuration::fetch_configuration for ndbd to not allocate a nodeid if --allocated-nodeid is set. "	5b4386bd6d6c31dc0586f93bca75bbcad2ca7980
----------------------------
ndb - remove unused forward declaration of IPCConfig 	4acd186b87cd35e25cfb56b67e43cdc4ab56f4a2
----------------------------
"This commit adds new server status variables (""show status like 'Ndb%'""). These are: * sorted_scan_count * pushed_queries_defined * pushed_queries_dropped * pushed_queries_executed * pushed_reads (See ha_ndbcluster.h for an explanation of what these do.) I addition, pruned_scan_count will now also count pushed pruned scans. But this is hard to test, since there is an existing error that prevents scans pushed by the handler from being pruned. This commit also removes a couple of warnings due to size_z being assigned to Uint32. "	6cd2681039b589701a8e3e9e37ac875444f524d8
----------------------------
"WL#4523  Run ndbd as Windows Service - Make the angel pass the --nostart option it may receieve when ndbd terminates as an ""arg"" to ndbd - NOTE! Also this patch need to Configuration to be created _after_ to work "	20adea39e701c9eb6222df4a1a66973ed97f1a50
----------------------------
"WL#4523  Run ndbd as Windows Service - Make the angel pass the --initial option it may receieve when ndbd terminates as an ""--arg"" to ndbd - Remove the 'setInitialStart' functions from Configuration - Move 'getInitialStart' impl. into class definition - NOTE! ""RESTART -i"" does not work until Configuration is created _after_ fork(i.e the angel_config_and_nodeid) patch "	91ba8e11ac49339ad0d9eb5823989db85a889787
----------------------------
WL#4523  Run ndbd as Windows Service - Remove _daemonMode from Configuration, thus it will not be magically printed in hex in error log on crash. 	07db99b5572d6d3c2f6426b6087aee3dc3a47c63
----------------------------
"ndb - add feature to pass-though configure options using BUILD/compile-ndb-autotest (and friends) using ""--"" "	182219e9386bbfc2c79ee5ffc218da4e772199e5
----------------------------
WL#4523  Run ndbd as Windows Service - Extract the hosts to report to directly from ndb_mgm_configuration passed as parameter to function - only angel uses reportShutDown function now - Remove the m_mgmds vector from the global configuration previsouly used by reportShutdown - Remove friend declarations of reportShutdown - Make reportShutdown static 	65ba92869ce96df9a386824bf8001cc0a3f58c6f
----------------------------
"Bug #51938  	plugin_dir gets bad default value When building the script directory using a CMake-based build, both the variables in config.h.cmake (including PLUGINDIR) and the variables in CMakeList.txt (which includes pkgplugindir). However, for autotools-based builds, only pkgplugindir is substituted, which means that the plugin-path is not substituted. This patch solves the problem by using pkgplugindir, which works on both CMake-based and autotools-based builds, instead of PLUGINDIR. "	d21fa1426ad3cfdf9d768abd2e13e6125fb941c2
----------------------------
BUG#47444 - --myisam_repair_threads>1can result in all index cardinalities=1 Parallel repair didn't poroperly update index cardinality in certain cases. When myisam_sort_buffer_size is not enough to store all keys, index cardinality was updated before index was actually written, when no index statistic is available. 	4762eb64ecc42a4f7499217ba471f11a7e366436
----------------------------
use configure's HAVE_STDINT in jtie 	135255962df8370965a5e56442c3d398fe1fd4e2
----------------------------
"branches/innodb+: Merge revisions 6773:6801 from branches/zip: ------------------------------------------------------------------------ r6777 | marko | 2010-03-04 13:01:25 +0200 (Thu, 04 Mar 2010) | 2 lines Changed paths: M /branches/zip/trx/trx0rec.c branches/zip: trx_undo_update_rec_get_update(): Silence a bogus GCC warning about a possibly uninitialized variable. ------------------------------------------------------------------------ r6779 | marko | 2010-03-08 14:35:42 +0200 (Mon, 08 Mar 2010) | 6 lines Changed paths: M /branches/zip/ChangeLog M /branches/zip/fil/fil0fil.c branches/zip: Fix IMPORT TABLESPACE of compressed tables.  Previously, a wrong parameter was passed to buf_flush_init_for_writing(). fil_reset_too_high_lsns(): Set up page_zip and use it if needed. rb://264, Issue #352 ------------------------------------------------------------------------ r6781 | marko | 2010-03-09 09:41:08 +0200 (Tue, 09 Mar 2010) | 4 lines Changed paths: M /branches/zip/ChangeLog M /branches/zip/handler/ha_innodb.cc branches/zip: Make SHOW ENGINE INNODB MUTEX display SUM(os_waits) for block mutexes and blocks. Designed by Michael and Marko. rb://188, Issue #358 ------------------------------------------------------------------------ r6782 | marko | 2010-03-09 14:09:26 +0200 (Tue, 09 Mar 2010) | 1 line Changed paths: M /branches/zip/fil/fil0fil.c branches/zip: fil0fil.c: Update comments on table->flags as of r6252. ------------------------------------------------------------------------ r6786 | vasil | 2010-03-10 09:16:50 +0200 (Wed, 10 Mar 2010) | 4 lines Changed paths: M /branches/zip/mysql-test/innodb-consistent.test branches/zip: Fix typo in comment ------------------------------------------------------------------------ r6787 | marko | 2010-03-10 10:35:06 +0200 (Wed, 10 Mar 2010) | 10 lines Changed paths: M /branches/zip/ChangeLog M /branches/zip/log/log0recv.c branches/zip: recv_parse_log_rec(): Remove a bogus assertion about page_no. TODO: We might also consider removing recv_max_parsed_page_no, because it does not make much sense with *.ibd files. recv_report_corrupt_log(), recv_scan_log_recs(): Abort when a corrupted log record has been found, unless innodb_force_recovery has been set. This fixes Issue #464. rb://265 approved by Heikki Tuuri ------------------------------------------------------------------------ r6789 | jyang | 2010-03-10 11:18:18 +0200 (Wed, 10 Mar 2010) | 10 lines Changed paths: M /branches/zip/handler/ha_innodb.cc M /branches/zip/handler/handler0alter.cc A /branches/zip/mysql-test/innodb_bug51378.result A /branches/zip/mysql-test/innodb_bug51378.test branches/zip: If a unique index is on a column prefix, such unique index cannot be upgrade to primary index even if there is no primary index already defined. Also fix possible corruption when initialize ""ref_length"" value in case there is a mismatch between MySQL and InnoDB primary key. Fix bug #51378: ""Init 'ref_length'  to correct value, in case an out of bound MySQL primary_key"". rb://262 approved by Marko. ------------------------------------------------------------------------ r6790 | jyang | 2010-03-10 13:09:41 +0200 (Wed, 10 Mar 2010) | 7 lines Changed paths: M /branches/zip/handler/ha_innodb.cc branches/zip: Fix bug #51356: ""many valgrind errors in error messages with concurrent ddl"". Null terminate the name string returned from innobase_convert_identifier() call when reporting DB_DUPLICATE_KEY error in create_table_def(). rb://266 approved by Marko ------------------------------------------------------------------------ r6791 | marko | 2010-03-10 13:39:06 +0200 (Wed, 10 Mar 2010) | 1 line Changed paths: M /branches/zip/ChangeLog branches/zip: Add ChangeLog entries for r6789, r6790. ------------------------------------------------------------------------ r6792 | marko | 2010-03-10 13:56:41 +0200 (Wed, 10 Mar 2010) | 1 line Changed paths: A /branches/zip/mysql-test/innodb_bug38231.result (from /branches/5.1/mysql-test/innodb_bug38231.result:6791) A /branches/zip/mysql-test/innodb_bug38231.test (from /branches/5.1/mysql-test/innodb_bug38231.test:6791) A /branches/zip/mysql-test/innodb_bug39438-master.opt (from /branches/5.1/mysql-test/innodb_bug39438-master.opt:6791) A /branches/zip/mysql-test/innodb_bug39438.result (from /branches/5.1/mysql-test/innodb_bug39438.result:6791) A /branches/zip/mysql-test/innodb_bug39438.test (from /branches/5.1/mysql-test/innodb_bug39438.test:6791) branches/zip: Copy tests from branches/5.1 that were lost in some merge. ------------------------------------------------------------------------ r6793 | marko | 2010-03-10 14:02:19 +0200 (Wed, 10 Mar 2010) | 60 lines Changed paths: M /branches/zip/ChangeLog M /branches/zip/handler/ha_innodb.cc M /branches/zip/mysql-test/innodb_bug21704.result A /branches/zip/mysql-test/innodb_bug47621.result (from /branches/5.1/mysql-test/innodb_bug47621.result:6788) A /branches/zip/mysql-test/innodb_bug47621.test (from /branches/5.1/mysql-test/innodb_bug47621.test:6788) M /branches/zip/plug.in M /branches/zip/trx/trx0sys.c branches/zip: Merge revisions 6669:6788 from branches/5.1: ------------------------------------------------------------------------ r6774 | calvin | 2010-03-03 23:56:10 +0200 (Wed, 03 Mar 2010) | 2 lines Changed paths: M /branches/5.1/trx/trx0sys.c branches/5.1: fix bug#51653: outdated reference to set-variable Non functional change. ------------------------------------------------------------------------ r6780 | vasil | 2010-03-08 19:13:20 +0200 (Mon, 08 Mar 2010) | 4 lines Changed paths: M /branches/5.1/plug.in branches/5.1: Whitespace fixup. ------------------------------------------------------------------------ r6783 | jyang | 2010-03-09 17:54:14 +0200 (Tue, 09 Mar 2010) | 9 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/mysql-test/innodb_bug21704.result A /branches/5.1/mysql-test/innodb_bug47621.result A /branches/5.1/mysql-test/innodb_bug47621.test branches/5.1: Fix bug #47621 ""MySQL and InnoDB data dictionaries will become out of sync when renaming columns"". MySQL does not provide new column name information to storage engine to update the system table. To avoid column name mismatch, we shall just request a table copy for now. rb://246 approved by Marko. ------------------------------------------------------------------------ r6785 | vasil | 2010-03-10 09:04:38 +0200 (Wed, 10 Mar 2010) | 11 lines Changed paths: M /branches/5.1/mysql-test/innodb_bug38231.test branches/5.1: Add the missing --reap statements in innodb_bug38231.test. Probably MySQL enforced the presence of those recently and the test started failing like: main.innodb_bug38231                     [ fail ] Test ended at 2010-03-10 08:48:32 CURRENT_TEST: main.innodb_bug38231 mysqltest: At line 49: Cannot run query on connection between send and reap ------------------------------------------------------------------------ r6788 | vasil | 2010-03-10 10:53:21 +0200 (Wed, 10 Mar 2010) | 8 lines Changed paths: M /branches/5.1/mysql-test/innodb_bug38231.test branches/5.1: In innodb_bug38231.test: replace the fragile sleep 0.2 that depends on timing with a more robust condition which waits for the TRUNCATE and LOCK commands to appear in information_schema.processlist. This could also break if there are other sessions executing the same SQL commands, but there are none during the execution of the mysql test. ------------------------------------------------------------------------ ------------------------------------------------------------------------ r6798 | marko | 2010-03-11 09:53:01 +0200 (Thu, 11 Mar 2010) | 14 lines Changed paths: M /branches/zip/ChangeLog M /branches/zip/include/buf0buf.h M /branches/zip/include/buf0buf.ic branches/zip: Fix and clarify the latching of some buf_block_t members. buf_block_t::check_index_page_at_flush: Note that this field is not protected by any mutex. Make it a separate field, not a bitfield that could share the machine word with other fields. buf_block_t::lock_hash_val: Note that this field is protected by buf_block_t::lock (or during block creation, by buf_pool_mutex and buf_block_t::mutex). buf_block_get_lock_hash_val(): Assert that block->lock is held by the current thread. Issue #465, rb://267 approved by Inaam Rana ------------------------------------------------------------------------ r6799 | jyang | 2010-03-11 09:59:42 +0200 (Thu, 11 Mar 2010) | 5 lines Changed paths: M /branches/zip/mysql-test/innodb_bug44571.result M /branches/zip/mysql-test/innodb_bug44571.test branches/zip: Once change in bug #47621 merges into zip branch, zip only test innodb_bug44571 needs to be updated to reflect the column name change would be successful be done in InnoDB as well. ------------------------------------------------------------------------ r6800 | marko | 2010-03-11 12:02:57 +0200 (Thu, 11 Mar 2010) | 1 line Changed paths: M /branches/zip/btr/btr0pcur.c M /branches/zip/buf/buf0buf.c M /branches/zip/include/mtr0mtr.ic branches/zip: Add ut_ad(mtr->state == MTR_ACTIVE) to various places. ------------------------------------------------------------------------ r6801 | marko | 2010-03-11 13:34:28 +0200 (Thu, 11 Mar 2010) | 2 lines Changed paths: M /branches/zip/include/mtr0mtr.ic branches/zip: mtr_memo_contains(): Relax the assertion of r6800, allowing mtr->state == MTR_COMMITTING. ------------------------------------------------------------------------ "	8a0537c01322083db6b264368a341d9ff49d8529
----------------------------
Fix for BUG#51716 and BUG#51787: test case improvements. Split rpl_row_charset into: - rpl_row_utf16. - rpl_row_utf32. This way these tests can run independently if server supports either one of the charsets but not both. Cleaned up rpl_row_utf32 which had a spurious instruction: -- let $reset_slave_type_conversions= 0 	9b5a6748e06a2fdb8a39b20ef65ef3afed26e6f0
----------------------------
Bug#33669: Transactional temporary tables do not work under --read-only The problem was that in read only mode (read_only enabled), the server would mistakenly deny data modification attempts for temporary tables which belong to a transactional storage engine (eg. InnoDB). The solution is to allow transactional temporary tables to be modified under read only mode. As a whole, the read only mode does not apply to any kind of temporary table. 	30cb1779ed3c2666bf72ab6d068025cf06963ff3
----------------------------
"BUG#50442: MTR check for rpl_sync fails The test case crashes and recovers the server twice, and while recovering InnoDB sets innodb_file_format_check to different format on second restart. This makes the test case clean up check to fail. We fix this by deploying the option ""--innodb_file_format_check='ON'"" in slave startup configuration. This makes the innodb_file_format_check to not change on secod restart. "	fccd3c1a1fb233e81b288c13c14fd012e3ac95a2
----------------------------
branches/zip: recv_parse_log_rec(): Remove a bogus assertion about page_no. TODO: We might also consider removing recv_max_parsed_page_no, because it does not make much sense with *.ibd files. recv_report_corrupt_log(), recv_scan_log_recs(): Abort when a corrupted log record has been found, unless innodb_force_recovery has been set. This fixes Issue #464. rb://265 approved by Heikki Tuuri 	6c7ddbe2ed7df7ee8cf2fdd5b0143d3944edb3cb
----------------------------
"Bug #51861  	my_rename on windows: check that ""from"" exists . use MoveFileEx() . i'd like to write a test case but unsure how it's done - what configure options - using tap? "	915a56fe204e57fedc50325a63d78ff7c72d8bc0
----------------------------
"Bug#51607: Automake distcheck target broken. Reason for the error was that ./configure wrapper script was  not safe for VPATH builds used by ""make distcheck"", specifically it expected configure.am to be in the current directory. Fix changes configure wrapper to resolve script names relative to configure script path. Also, use $top_srcdir/configure.am instead of configure.am in dist-hook to be more VPATH friendly. "	cb0d6611a39a78dae3fc7badc0f46b18653ce418
----------------------------
Bug #35250: readline check breaks when doing vpath build MySQL uses two source layouts when building : the bzr layout and the source package layout. The previous fix for bug 35250 contained 1 change that is valid for both modes and a number of changes that are valid only for the bzr source layout. The important thing was to fix the source package layout. And for this the change in configure.in was sufficient. It's not trivial (and not requested by this bug) to support VPATH builds from the bzr trees. This is why the other changes are reverted and the change to fix the VPATH build for source distributions is left intact. 	a774c83c2f6936dbafbe4e1149a2305bb691f040
----------------------------
Bug#51857 Mismatched safemalloc/free in ha_ndbcluster* on Windows - Add -DSAFEMALLOC and -DSAFE_MUTEX to flasgs used for compiling ha_ndbcluster* files in debug mode ie. same as in sql/ 	d4ebacd332c88b4cf643121f49b14e3dffc1a9bd
----------------------------
Bug #41057: mysql_update fails FATAL ERROR: Failed to create temporary file for defaults mysql_upgrade was passing an non-initialized non-null tmpdir to create_temp_file() if no --tmpdir was specified. This prevents create_temp_file() from taking the system temporary file path and as a result mysql_upgrade was trying to open a file in a directory that it may not have write access to. Fixed by making sure mysql_upgrade will pass a zero length temp dir string to create_temp_file() if no --tmpdir is specified. 	25a271a0f84e1ea32c46da090c2d0bde77fadbbc
----------------------------
BUG#44958: Setting read_only won't succeed if tx is already started in different connection Backporting cset from 6.0 revision id: luis.soares@sun.com-20090626142234-8da6l9d991pw8tyx This bug was opened to report the disabling of test rpl_read_only after patch for BUG#989 was pushed and to reenable this test case with the appropriate changes. This test case consists of three parts: 1. check that the readonly variable is not replicated. The variable is set on the master before any locking takes place. This is safe wrt to the patch for BUG#989. 2. check that user root (on conn1) can commit even if 'set read_only=1' is done concurrently (on conn3) just before conn1 issues commit. This checks also that other users than root will not be able to commit under the same scenario. 3. check that the sql slave thread is able to apply the changes even if read_only is set. This is safe wrt to the patch for BUG#989. The test case now hangs in 2. because it tries to set the flag read_only, while there are active changes going on (and mdl locks are taken). The proposed fix addresses this, by changing a little the test case in 2., so that the read_only flag is set before the changes are done. This makes the test not to hang anymore and keeps as close as possible the same assertions from before: i) assertion that the SUPER user can commit persists; ii) assertion that the non-super user cannot commit is changed - since read_only is set before the inserts, now when this user tries to insert it will get an error (ie, the check is performed earlier - before commit). 	9cd2e368b2935cf3ef1dd5051369263aa6ae0abe
----------------------------
"Fix for BUG#51215 ""log-error partially works with version 5.5"": WL 4738 (reengineering of server variables) had broken the 5.1 behaviour of --log-error: --log-error without argument sent to stderr instead of writing to a file with an autogenerated name. "	39e30ed9e0c8b4fbb44a372a5a8014427176ad5f
----------------------------
Cleaned up some leftovers from previous commits: - Removed unused handler::push_flag() - Removed unused and unimplemented ha_ndbcluster::prefer_index() - Removed some 'virtual' keyword from ha_ndbcluster methods as they are regarded as 'final' in class ha_ndbcluster. 	6479f5ec1cc378200c5852e7e1b88a6207b54831
----------------------------
Yet another attempt to fix pushed join lifetime problems, partly reintroduce fix from reverted http://lists.mysql.com/commits/102241 - Reverts previous fix where index_end() & rnd_end() does not close_scan() if there is an actively executing pushed join. - Implement ha_ndbcluster::read_first_row() and ha_ndbcluster::index_read_idx_map() which does not call index_end() or rnd_end() immediately after the table has been accessed. Even if this fix removes calls to rnd_end / index/end, the table access is closed when the query completes execution through the callchain JOIN::join_free() -> ::cleanup_all_joins() -> JOIN::cleanup() -> JOIN_TAB::cleanup -> end_read_record() -> ha_index_or_rnd_end() 	d1214075a4fff1ef562f6ef9898c3206df4837f8
----------------------------
Bug #45482 MTR2: --default-storage-engine=csv is rejected by mtr Added csv to list of builtin engines Fixed dysfunctional part of csv.test so it actuallu used csv 	a320ebe897b734136e61d5a3ffa7a903cb3f3257
----------------------------
Fixes lifetime issues while execution pushed join. In pre-SPJ versions of the handler interface, reading a table known to contain at most 1 record (const and system tables) would also immediately close the table. If this table now is the parent of linked joins, child operations is also closed, causing theirs results to be immediately lost - before ever been read by mysqld. A fix of this problem has previously been attempted by not allowing ::rnd_end() and ::index_end() to 'close_scan()' if there was an active pushed join executing. However, it eventually surfaced that this solution might cause certaing MRR accesses (index_merge) to fail as the handler may leave open queries after the point in time when they was expeted to have been closed. (Opposite of the original problem :-( ) This commit partly revert the previous fix, and instead leaves the pushed join open after known single row reads. As this change is required for all handlers implementing pushed joins, the changes has been made in the handler baseclass itself: Both handler::read_first_row() and handler::index_read_idx_map() now conditionaly don't 'close' by testing the new handler metode ::is_executing_pushed_join(). Tables / pushed joins left open by this change, will eventully be closed when the handler instance is cleaned up at end of query execution. Has also cleaned up some leftovers from previous commits: - Removed unused handler::push_flag() - Removed unused and unimplemented ha_ndbcluster::prefer_index() - Removed some 'virtual' keyword from ha_ndbcluster methods as they are regarded as 'final' in class ha_ndbcluster. Enabled MTR test for index merge. 	d6bb9a4b1babf248b4767215763a4cce28e8d4b6
----------------------------
This commit is a refactoring concerning pushed joins in ha_ndbcluster.cc (see also http://lists.mysql.com/commits/102055) Bitmap<64> has been replaced with ha_table_access_map. The latter is defined in terms of 'MAX_TABLES', such that capacity is not hard coded. More comments has been added to ha_pushed_join class. Constants in ha_pushed_join have been made dependant on MAX_KEY and MAX_TABLES, to avoid 'magic numbers'. 	8f1bcca999a3f79abcc2d8d426c788840b36c1eb
----------------------------
"Bug #51488 :missing features and change behavior in cmake runs compared to autotools runs - Fix recognition of --with-debug=full in configure wrapper - Remove CMakeCache.txt in configure wrapper, to match the original - Fix recognition of max-no-ndb - Fix broken dependencies of mysql_fix_privilege_table.sql from mysql_system_tables.sql and mysql_system_tables_fix.sql - Add ""distclean target"" that informs user about appropriate bzr command "	273d74eaa586117951113a372249c1cd0bbdb842
----------------------------
"Bug #51376 Assert `! is_set()' failed in Diagnostics_area::set_ok_status on DROP FUNCTION This assert tests that the server is not trying to send ""ok"" to the client if an error has occured during statement processing. In this case, the assert was triggered by lock timeout errors when accessing system tables to do an implicit REVOKE after executing DROP FUNCTION/PROCEDURE. In practice, this was only likely to happen with very low values for ""lock_wait_timeout"" (in the bug report 1 second was used). These errors were ignored and the server tried to send ""ok"" to the client, triggering the assert. The patch for Bug#45225 introduced lock timeouts for metadata locks. This made it possible to get timeouts when accessing system tables. Note that a followup patch for Bug#45225 pushed after this bug was reported, changed accessing of system tables such that the user-supplied timeout value is ignored and the maximum timeout value is used instead. This exact bug was therefore only noticeable in the period between the initial Bug#45225 patch and the followup patch. However, the same problem could occur for any errors during revoking of privileges - not just timeouts. This patch fixes the problem by making sure that any errors during revoking of privileges are reported to the client. Test case added to sp-destruct.test. Since the original bug is not reproducable now that system tables are accessed using a a long timeout value, this test instead calls DROP FUNCTION with a grant system table missing. "	b59f88ee1f3965b1e796a89aea5d09c627562d5d
----------------------------
BUG#37656: lower_case_table_names=1 doesn't convert database names in replicated statements BUG#50653: drop procedure implicitely treats db name in a case sensitive way This bug revealed itself while using case sensitive filesystems and exhibited two symptoms: 1. If setting lower_case_table_names=1 on the slave, but not on the master, this setting will not convert database name in replicated statements, ultimately breaking replication; 2. The same problem for symptom 1. surfaced in RBR, but this time for table names, as these would not be converted to lower case for row based replication events. Symptom 1. is addressed by conditionally converting to lower case, database name on Query_log_event constructor and Load_log_event::do_apply_event. Symptom 2. is addressed by conditionally converting to lower database name and table name when processing Table_map_log_event. A side note on BUG#50653. It's basically a duplicate of BUG#37656 but I included a test case for it in this patch. 	739a3b28ea9f924e288dc6178346dfc902fa5434
----------------------------
WL#2980 & WL#1110. Backporting commit#6. optimizer_switch now controls semi-join and materialization. 	1303db0917359eadbdb8b6b71fbc04dab6b47fdf
----------------------------
Fix WITH_DEBUG problems in CMake build, so people who use configure wrappers do not suffer. The problem was that when custom C flags were defined with in environment variable CFLAGS, WITH_DEBUG did not have any effect. Also, switch from WITH_DEBUG=ON to WITH_DEBUG=OFF   was not handled correctly .Expected is switch to with RelwithDebInfo or when custom compiler flags  are defined, to None. 	e1384dc718890ed3950795cbc4f425dd453ab018
----------------------------
WL#5252: deprecate --optimizer_search_depth=63 Followup: Changes in sys_vars test suite mysql-test/suite/sys_vars/r/optimizer_search_depth_basic.result Added warnings. 	19d25e5658d120cb671c119c7bc5724d72da407f
----------------------------
Merge: 4d23608 0bba392 Manual merge from mysql-5.1. Conflicts: - support-files/mysql.spec.sh - configure.in 	fe6e3bf20ad2af8a58bb6dc87278a44bfbd967e3
----------------------------
WL#5252: Deprecate --optimizer_search_depth=63 Add deprecation warning when variable optimizer_search_depth is given the value 63. mysql-test/r/greedy_optimizer.result Updated with warning text. mysql-test/r/mysqld--help-notwin.result Updated with warning from mysqld --help --verbose. mysql-test/r/mysqld--help-win.result Updated with warning from mysqld --help --verbose. sql/sys_vars.cc Added an update check function to the constructor invocation for the optimizer_search_depth variable. The function emits a warning message for the value 63. 	9302df9131e5aa93dbc609d57592973d0aa69f30
----------------------------
Add configure.am to .bzrignore. 	dec27c317b36b4e8c662fb217e66731f18707944
----------------------------
crund - adjusted paths to new 7.1 jar/lib file layout; added local crund/config_sample/ dir. 	2b07d1f9b74340fa07a0fed9b5eeb4aac85d795c
----------------------------
"Followup to Bug#45225 Locking: hang if drop table with no timeout This patch prevents system threads and system table accesses from using user-specified values for ""lock_wait_timeout"". Instead all such accesses are done using the default value (1 year). This prevents background tasks (such as replication, events, accessing stored function definitions, logging, reading time-zone information, etc.) from failing in cases where the global value of ""lock_wait_timeout"" is set very low. The patch also simplifies the open tables API. Rather than adding another convenience function for opening and locking system tables, this patch removes most of the existing convenience functions for open_and_lock_tables_derived(). Before, open_and_lock_tables() was a convenience function that enforced derived tables handling, while open_and_lock_tables_derived() was the main function where derived tables handling was optional. Now, this convencience function is gone and the main function is renamed to open_and_lock_tables(). No test case added as it would have required the use of --sleep to check that system threads and system tables have a different timeout value from the user-specified ""lock_wait_timeout"" system variable. "	dd42aab8406e70caec4f58435c0281cddc8ea2c0
----------------------------
Merge: bca31a6 b416a55 Manual merge from mysql-trunk-merge. Conflicts: - client/mysql.cc - client/mysqldump.c - configure.in - mysql-test/r/csv.result - mysql-test/r/func_time.result - mysql-test/r/show_check.result - mysql-test/r/sp-error.result - mysql-test/r/sp.result - mysql-test/r/sp_trans.result - mysql-test/r/type_blob.result - mysql-test/r/type_timestamp.result - mysql-test/r/warnings.result - mysql-test/suite/rpl/r/rpl_sp.result - sql/mysql_priv.h - sql/mysqld.cc - sql/sp.cc - sql/sql_base.cc - sql/sql_table.cc - sql/sql_trigger.cc - sql/sql_view.cc - sql/table.h - sql/share/errmsg.txt - mysql-test/suite/sys_vars/r/log_bin_trust_routine_creators_basic.result 	04b8cb1882d895931380f2671fe942852e62bc24
----------------------------
BUG#51277 SUPER_ACL should be checked unconditionally (binlog_format and binlog_direct) SUPER_ACL should be checked unconditionally while verifying if the binlog_format or the binlog_direct_non_transactional_updates might be changed. Roughly speaking, both session values cannot be changed in the context of a transaction or a stored function. Note that changing the global value does not cause any effect until a new connection is created. So, we fixed the problem by first checking the permissions and right after further verifications are ignored if the global value is being updated. In this patch, we also re-structure the test case to make it more readable. 	2173e61833013f2973719d77d0f2a1141f9bb2e6
----------------------------
cleaning cmake includes, adding WITH_CLASSPATH option to configure.js 	d43e5fd716f1a231a9957384434ff3a2ada690d5
----------------------------
Merge: 8c31c4d a341ec7 Manual merge of mysql-5.1-bugteam to mysql-trunk-merge. Conflicts: Text conflict in client/mysqltest.cc Text conflict in configure.in Text conflict in mysql-test/include/mtr_warnings.sql 	92a5dd032365205beb5b14a347b3e681ce23da97
----------------------------
Bug#43201 : Stack overrun when running sp-error test. It appears that stack overflow checks for recusrive stored procedure calls, that run in the normal server, did not work in embedded and were dummified with preprocessor magic( #ifndef EMBEDDED_SERVER ). The fix is to remove ifdefs, there is no reason not to run overflow checks and crash in deeply recursive calls. Note: Start of the stack (thd->thread_stack variable) in embedded is not necessarily exact but stil provides the best guess. Unless the caller of mysql_read_connect()   is already deep in the stack, thd->thread_stack variable should approximate stack  start address well. 	94bd96e815333955974b53ca42e4480c8754b75c
----------------------------
"Bug #51414:  Arguments with embedded spaces are not correctly handled by configure wrapper. The bug was that ./configure was  passing paramers to subscripts as $@, and to handle embedded spaces it needs to be quoted as ""$@"". This resulting into a bug when ./configure was called e.g with CFLAGS='-m64 -Xstrconst'.. Additionally, fixed cmake/configure.pl did not handle environment variables passed on the command line. this is fixed in this push "	c88200172e0de06df30d4466f6c9de43a318b7ac
----------------------------
extend configure-like perl wrapper for INSTALL_FOODIR variables 	b2d289f3d799f0c9025572625347abaa488506f1
----------------------------
Fix configure.js : set the variabes in cache, so they can overwrite cache variables in CMakeLists.txt 	ab3ecf5a7cc0ddf5bf631d1abfcbddf744eed171
----------------------------
Add coverage of non-traditional upgrade orders to testUpgrade Upgrade_Api_Only - Performs no upgrade of kernel before Api is upgraded, then checks Api behaviour Upgrade_Api_Before_NR1 - Same as Upgrade_Api_Only, followed by NR1 (Node by Node rolling restart) Upgrade_Api_NDBD_MGMD - Upgrades Api first, then NDBD nodes (1 per ng at a time) then MGMD Upgrade_Mixed_MGMD_API_NDBD - Upgrades MGMD, NDBD, API then MGMD + NDBD Where the upgrade is not performed in the 'traditional' order, the postUpgrade program is invoked with the noddl argument.  This is done as : 1) 6.3 and 7.0 have specific DDL incompatibility due to schema transactions in 7.0 2) In general (and enforced in 7.0), DDL should not be possible in a mixed version configuration. New methods are added to NdbRestarter for querying running node versions. Additionally some small test framework issues are fixed: - A constant for the parser max line length is provided. - CpcClient checks that arguments passed to CPCD are not larger than the CPCD parser's maximum (512 bytes) - Set process environment part of Atrt modified to replace variables rather than append to the environment. - A small issue with Atrt mysql client reconnect is fixed 	b9e61453617be32fda956232b12eec2cee659743
----------------------------
BUG#48993: valgrind errors in mysqlbinlog I found three issues during the analysis: 1. Memory leak caused by temp_buf not being freed; 2. Memory leak caused when handling argv; 3. Conditional jump that depended on unitialized values. Issue #1 -------- DESCRIPTION: when mysqlbinlog is reading from a remote location the event temp_buf references the incoming stream (in NET object), which is not freed by mysqlbinlog explicitly. On the other hand, when it is reading local binary log, it points to a temporary buffer that needs to be explicitly freed. For both cases, the temp_buf was not freed by mysqlbinlog, instead was set to 0.  This clearly disregards the free required in the second case, thence creating a memory leak. FIX: we make temp_buf to be conditionally freed depending on the value of remote_opt. Found out that similar fix is already in most recent codebases. Issue #2 -------- DESCRIPTION: load_defaults is called by parse_args, and it reads default options from configuration files and put them BEFORE the arguments that are already in argc and argv. This is done resorting to MEM_ROOT. However, parse_args calls handle_options immediately after which changes argv. Later when freeing the defaults, pointers to MEM_ROOT won't match, causing the memory not to be freed: void free_defaults(char **argv) { MEM_ROOT ptr memcpy_fixed((char*) &ptr,(char *) argv - sizeof(ptr), sizeof(ptr)); free_root(&ptr,MYF(0)); } FIX: we remove load_defaults from parse_args and call it before. Then we save argv with defaults in defaults_argv BEFORE calling parse_args (which inside can then call handle_options at will). Actually, found out that this is in fact kind of a backport for BUG#38468 into 5.1, so I merged in the test case as well and added error check for load_defaults call. Fix based on: revid:zhenxing.he@sun.com-20091002081840-uv26f0flw4uvo33y Issue #3 -------- DESCRIPTION: the structure st_print_event_info constructor would not initialize the sql_mode member, although it did for sql_mode_inited (set to false). This would later raise the warning in valgrind when printing the sql_mode in the event header, as this print out is protected by a check against sql_mode_inited and sql_mode variables. Given that sql_mode was not initialized valgrind would output the warning. FIX: we add initialization of sql_mode to the st_print_event_info constructor. 	fbf595d0fb70a27bce21a73f4deb144a18b9faf3
----------------------------
configure.in - Changes to the banner text - Use older AC_PROG_LIBTOOL (Bug#51009) scripts/mysql_install_db.sh - Changes to banner text 	df555c117cb9415e6076c48c94189c421837f4b0
----------------------------
Bug #51248 Server start fails with MTR_VERSION=1 and code with WL5154 Replaced --default-character-set with --character-set-server Replaced --language with --lc-messages-dir NB full test suite not tested yet 	547f9acd528ad156a11acd5d542e2b00fe248446
----------------------------
adding CPackWixConfig 	df312a95a06919faa4523f142661c05f3a30a5c3
----------------------------
ndb - fix configure.in version 	f00374dfbe601f691f36224a796b7f14386e43dd
----------------------------
"Followup to Bug#45225 Locking: hang if drop table with no timeout This patch removes the unused server variable ""table_lock_wait_timeout"". "	96560266581a2c76f427412d4b8718655dc20f80
----------------------------
Merge: 33f40fe f68fbf2 Null-merge (configure.in) from mysql-trunk. 	9f6a63497fec6c7969cd35fe4d3db0e3fcc58dbb
----------------------------
"Followup to Bug#34604 handler::ha_rnd_end(): Assertion `inited==RND' failed. The test case for this bug relies on getting a ER_LOCK_WAIT_TIMEOUT error. However with the introduction of MDL, the test would hang forever since the metadata locks would not timeout. MDL timeouts are now introduced in the scope of Bug#45225. This patch changes the testcase for Bug#34604 to set the new server variable ""lock_wait_timeout"" to one second which makes the test generate the necessary timeout again. "	affdd53394fc7644f03963f1ed4b1abcdb164a43
----------------------------
"Bug #45225 Locking: hang if drop table with no timeout This patch introduces timeouts for metadata locks. The timeout is specified in seconds using the new dynamic system variable  ""lock_wait_timeout"" which has both GLOBAL and SESSION scopes. Allowed values range from 1 to 31536000 seconds (= 1 year). The default value is 1 year. The new server parameter ""lock-wait-timeout"" can be used to set the default value parameter upon server startup. ""lock_wait_timeout"" applies to all statements that use metadata locks. These include DML and DDL operations on tables, views, stored procedures and stored functions. They also include LOCK TABLES, FLUSH TABLES WITH READ LOCK and HANDLER statements. The patch also changes thr_lock.c code (table data locks used by MyISAM and other simplistic engines) to use the same system variable. InnoDB row locks are unaffected. One exception to the handling of the ""lock_wait_timeout"" variable is delayed inserts. All delayed inserts are executed with a timeout of 1 year regardless of the setting for the global variable. As the connection issuing the delayed insert gets no notification of delayed insert timeouts, we want to avoid unnecessary timeouts. It's important to note that the timeout value is used for each lock acquired and that one statement can take more than one lock. A statement can therefore block for longer than the lock_wait_timeout value before reporting a timeout error. When lock timeout occurs, ER_LOCK_WAIT_TIMEOUT is reported. Test case added to lock_multi.test. "	5bb67f34b864ea40c74dc729fdc960de13718ab3
----------------------------
"Merge: a93d838 f6df177 Upmerge ""configure.in"" text change from 5.1 to 5.5 (""trunk""), fixing bug#50950. "	fc5e9a4a5442cf6d775c133fc13021a6fe8a7b14
----------------------------
"Merge: 1c9ab8d 15728d0 Upmerge ""configure.in"" text change from 5.0 to 5.1, fixing bug#50950. "	f6df1770fc17da804a88825444efb217a21dec85
----------------------------
"Bug#50950   	Obsolete reference to www.mysql.com in message printed at end of configure New text for the success message of ""configure"". "	15728d0721c88799f759db5f2fd97baa2d9d1d4b
----------------------------
This patch contains several modifications to the AQP: * Query_plan has been renamed to Join_plan. * Copying of Join_plan and Table_access is no longer possible. This is to emphazise that the optimizer internals may change and therefore a Join_plan only lives until make_pushed_join() returns. * Table_access objects are now owned by a Join_plan, and has the same life time as the Join_plan. * Table_access now has lazy evaluation of access_type and index choice, so that these are only computed when needed. * enum_access_type literals are now in upper case. * Table_access_set methods (again) take Table_access parameters. These are now passed as pointers rather than by value (thus no copying). * Table_access::get_table_name() and Table_access::get_handler() where removed since st_table is used in ha_ndbcluster.cc anyway. 	81fb6a5089d1ae82a5d5d5358e7ee015f927b32b
----------------------------
"BUG#48632: Fix for Bug #23300 Has Not Been Backported To 5.x Release Notes ===== This is a backport of BUG#23300 into 5.1 GA. Original cset revid (in betony): luis.soares@sun.com-20090929140901-s4kjtl3iiyy4ls2h Description =========== When using replication, the slave will not log any slow query logs queries replicated from the master, even if the option ""--log-slow-slave-statements"" is set and these take more than ""log_query_time"" to execute. In order to log slow queries in replicated thread one needs to set the --log-slow-slave-statements, so that the SQL thread is initialized with the correct switch. Although setting this flag correctly configures the slave thread option to log slow queries, there is an issue with the condition that is used to check whether to log the slow query or not. When replaying binlog events the statement contains the SET TIMESTAMP clause which will force the slow logging condition check to fail. Consequently, the slow query logging will not take place. This patch addresses this issue by removing the second condition from the log_slow_statements as it prevents slow queries to be binlogged and seems to be deprecated. "	1458896dca020ac0b8d8a857e4bb45b051660ee6
----------------------------
Merge: 40d93c7 4c8fd3c Manual merger from mysql-trunk-merge. Conflicts: - configure.in 	8bf60770a588e3227aafd5746afe2ea337adb5a5
----------------------------
Merge: 9d55dab 480663e Manual merge from mysql-trunk-merge. Conflicts: - configure.in 	40d93c7167c41b1f4f4bfd75943d845dc8d20414
----------------------------
Merge: f62f1a5 21a6569 Manual merge from mysql-5.1-bugteam. Conflicts: - configure.in - mysql-test/include/setup_fake_relay_log.inc - sql/sql_select.cc 	4c8fd3cf57f17b3506bad12245ba435f7a4498af
----------------------------
"Adjuster the parsing of ""configure.in"" version number line "	21a6569952dfa8afb65e163197f9aec2f53eace8
----------------------------
When using SIGNCODE parameter, check that signing of test executable reaööy works. If not,  write warning and disable signing Also, set SIGNCODE in mysql_release build configuration. 	b6779a71c448a77460a2be0ce9a9e0e30b5bbe92
----------------------------
Cleanup fix  for WL#5154 that splits commands handling for --default-character-set and --character-set-server such that only the first will give a deprecation warning. Apart from that, the two options should do the same. 	632cf4c5023ca8e714c5e250662ece59678f7c59
----------------------------
"BUG#47639: The rpl_binlog_corruption test fails on Windows The test case rpl_binlog_corruption fails on windows because when adding a line to the binary log index file it gets terminated with a CR+LF (which btw, is the normal case in windows, but not on Unixes - LF). This causes mismatch between the relay log names, causing mysqld to report that it cannot find the log file. We fix this by creating the instrumented index file through mysql, ie, using SELECT ... INTO DUMPFILE ..., as opposed on relying on ultimatly OS commands like: -- echo ""..."" > index. These changes go into the file and make the procedure platform independent: include/setup_fake_relay_log.inc Side note: when using SELECT ... INTO DUMPFILE ..., one needs to check if mysqld is running with secure_file_priv. If it is, we do it in two steps: 1. create the file on the allowed location; 2. move it to the datadir. If it is not, then we just create the file directly on the datadir (so previous step 2. is not needed). "	d8bd11e5b1e9171de67967bf1bf2b4457de06692
----------------------------
Merge: 865c03f b4d483a Merge config files updates from 7.0 	da982e01afdb98fd1da4b5d002e28dac0f80ae8d
----------------------------
ATRT config files used in Trondheim 	b4d483a803723bb9eca286d19372bffcdbffae06
----------------------------
"BUG#50351 - ft_min_word_len=2 Causes query to hang Performing fulltext prefix search (a word with truncation operator) may cause a dead-loop. ft_min_word_len value doesn't matter actually. The problem was introduced along with ""smarter index merge"" optimization. "	37934f862ec7952f6baeb5c5c323e37b151aa298
----------------------------
Remove binlog_direct_non_transactional_updates_basic.test and binlog_direct_non_transactional_updates_basic.result. They will be added by a cherry-picking merge from mysql-next-mr-bugfixing (Bug#50766). 	562c6046d4273e946872910baa411cf551a292af
----------------------------
"Implement new type-of-operation-aware metadata locks. Add a wait-for graph based deadlock detector to the MDL subsystem. Fixes bug #46272 ""MySQL 5.4.4, new MDL: unnecessary deadlock"" and bug #37346 ""innodb does not detect deadlock between update and alter table"". The first bug manifested itself as an unwarranted abort of a transaction with ER_LOCK_DEADLOCK error by a concurrent ALTER statement, when this transaction tried to repeat use of a table, which it has already used in a similar fashion before ALTER started. The second bug showed up as a deadlock between table-level locks and InnoDB row locks, which was ""detected"" only after innodb_lock_wait_timeout timeout. A transaction would start using the table and modify a few rows. Then ALTER TABLE would come in, and start copying rows into a temporary table. Eventually it would stumble on the modified records and get blocked on a row lock. The first transaction would try to do more updates, and get blocked on thr_lock.c lock. This situation of circular wait would only get resolved by a timeout. Both these bugs stemmed from inadequate solutions to the problem of deadlocks occurring between different locking subsystems. In the first case we tried to avoid deadlocks between metadata locking and table-level locking subsystems, when upgrading shared metadata lock to exclusive one. Transactions holding the shared lock on the table and waiting for some table-level lock used to be aborted too aggressively. We also allowed ALTER TABLE to start in presence of transactions that modify the subject table. ALTER TABLE acquires TL_WRITE_ALLOW_READ lock at start, and that block all writes against the table (naturally, we don't want any writes to be lost when switching the old and the new table). TL_WRITE_ALLOW_READ lock, in turn, would block the started transaction on thr_lock.c lock, should they do more updates. This, again, lead to the need to abort such transactions. The second bug occurred simply because we didn't have any mechanism to detect deadlocks between the table-level locks in thr_lock.c and row-level locks in InnoDB, other than innodb_lock_wait_timeout. This patch solves both these problems by moving lock conflicts which are causing these deadlocks into the metadata locking subsystem, thus making it possible to avoid or detect such deadlocks inside MDL. To do this we introduce new type-of-operation-aware metadata locks, which allow MDL subsystem to know not only the fact that transaction has used or is going to use some object but also what kind of operation it has carried out or going to carry out on the object. This, along with the addition of a special kind of upgradable metadata lock, allows ALTER TABLE to wait until all transactions which has updated the table to go away. This solves the second issue. Another special type of upgradable metadata lock is acquired by LOCK TABLE WRITE. This second lock type allows to solve the first issue, since abortion of table-level locks in event of DDL under LOCK TABLES becomes also unnecessary. Below follows the list of incompatible changes introduced by this patch: - From now on, ALTER TABLE and CREATE/DROP TRIGGER SQL (i.e. those statements that acquire TL_WRITE_ALLOW_READ lock) wait for all transactions which has *updated* the table to complete. - From now on, LOCK TABLES ... WRITE, REPAIR/OPTIMIZE TABLE (i.e. all statements which acquire TL_WRITE table-level lock) wait for all transaction which *updated or read* from the table to complete. As a consequence, innodb_table_locks=0 option no longer applies to LOCK TABLES ... WRITE. - DROP DATABASE, DROP TABLE, RENAME TABLE no longer abort statements or transactions which use tables being dropped or renamed, and instead wait for these transactions to complete. - Since LOCK TABLES WRITE now takes a special metadata lock, not compatible with with reads or writes against the subject table and transaction-wide, thr_lock.c deadlock avoidance algorithm that used to ensure absence of deadlocks between LOCK TABLES WRITE and other statements is no longer sufficient, even for MyISAM. The wait-for graph based deadlock detector of MDL subsystem may sometimes be necessary and is involved. This may lead to ER_LOCK_DEADLOCK error produced for multi-statement transactions even if these only use MyISAM: session 1:         session 2: begin; update t1 ...      lock table t2 write, t1 write; -- gets a lock on t2, blocks on t1 update t2 ... (ER_LOCK_DEADLOCK) - Finally,  support of LOW_PRIORITY option for LOCK TABLES ... WRITE was abandoned. LOCK TABLE ... LOW_PRIORITY WRITE from now on has the same priority as the usual LOCK TABLE ... WRITE. SELECT HIGH PRIORITY no longer trumps LOCK TABLE ... WRITE  in the wait queue. - We do not take upgradable metadata locks on implicitly locked tables. So if one has, say, a view v1 that uses table t1, and issues: LOCK TABLE v1 WRITE; FLUSH TABLE t1; -- (or just 'FLUSH TABLES'), an error is produced. In order to be able to perform DDL on a table under LOCK TABLES, the table must be locked explicitly in the LOCK TABLES list. "	afd15c43a9103c47389835105489acd07d64e014
----------------------------
ndb_config.m4 cleanup and ndbjtie .hpp dist fix 	11898113ad4c0337f4886c7cdfc03176cc03372e
----------------------------
ndb - bug#50717 - release TTFM before existing ConfigManager (by deleting SignalSender) to avoid hanging shutdowns 	d6692feab48d4af7ff30de79cfcebebad34d90e2
----------------------------
Fix syntax errors in configure.cmake 	513027f4fd79fe0fac5ab712b857b13075de9293
----------------------------
Merge: 7d5bb84 6e351da Bug #49210 Enable MTR timeout configuration through environment variables Define env. vars for both timeout settings Also incorporated 5.0 patch into mtr version 1 	f363fece5e2bb80bdcec800d73e5c1a3b84fb2b2
----------------------------
Bug #49210 Enable MTR timeout configuration through environment variables Define env. vars for both timeout settings This patch is for 5.0 (mtr v1) and should replaces for 5.1 up 	6e351da89bc3d4c1624ab28e23748656e8a12192
----------------------------
Bug #47905 stored procedures with conditional statements not being logged to slow query log The problem is that the execution time for a multi-statement stored procedure as a whole may not be accurate, and thus not be entered into the slow query log even if the total time exceeds long_query_time. The reason for this is that THD::utime_after_lock used for time calculation may be reset at the start of each new statement, possibly leaving the total SP execution equal to the time spent executing the last statement in the SP. This patch stores the utime on start of SP execution, and restores it on exit of SP execution. A test is added. 	c1a6dc5084cd91bfbaa7d0bb68d5a3a5b98dc031
----------------------------
Bug#50409 Solaris 8 compatibility broken by assumption about printstack() being present When Bug#47391 was fixed, no assumption was made that support for Solaris 8 was needed. Solaris 8 lacks printstack(), and the build breaks because of this. This patch adds a test for the presence of printstack() to configure.in for 5.0, and uses HAVE_PRINTSTACK to make decisions rather than the __sun define. 	e3dd88c8563b8698180340a78daa9d8ba6630c66
----------------------------
Added AIX, OS400 and Cygwin. This finishes of moving code from configure.cmake IF()'s to platform specific files 	8d74e5c50e65d746c4afd408ea5a3d74aa01c885
----------------------------
fix ndb_config 	1357c483d3050a91e6c49583fb8ae906b589b916
----------------------------
"Bug#50337 --defaults-file=~/something doesn't work anymore Before this fix, opening a configuration file located under ""~"" failed. To evaluate the ""~"" path, home_dir needs to be initialized. The 'home_dir' variable was initialized too late in my_init(). This fix: - moved the home_dir initialization from my_init() to my_basic_init(), using getenv(""HOME"")) - moved the initialization of my_umask / my_umask_dir also to my_basic_init(), to have all the my_umask / my_umask_dir init code in the same place. The second part is not strictly required, but makes the code more maintainable. Tested the fix manually. No MTR tests added, because MTR should not access or modify the $HOME directory of the user running tests. "	edb122134b6bf3bb3b65d35c58f6bf5baaf2ebdf
----------------------------
Make sys_vars.delayed_insert_limit_func experimental due to Bug 50435. 	deb6ded14ca3b8f2ce9c71c7f98bd91afcae854c
----------------------------
"Bug #47142 ""slave start until"" stops 1 event too late in 4.1 to 5.0 replication When replicating from 4.1 master to 5.0 slave START SLAVE UNTIL can stop too late. The necessary in calculating of the beginning of an event the event's length did not correspond to the master's genuine information at the event's execution time. That piece of info was changed at the event's relay-logging due to binlog_version<4 event conversion by IO thread. Fixed with storing the master genuine Query_log_event size into a new status variable at relay-logging of the event. The stored info is extacted at the event execution and participate further to caclulate the correct start position of the event in the until-pos stopping routine. The new status variable's algorithm will be only active when the event comes from the master of version < 5.0 (binlog_version < 4). "	1c0056b3ba34354c63026c541718529df735fbed
----------------------------
Fix typos : - opensolaris cmake package is SUNWcmake not SUNWCMake - it is configure.cmake not config.cmake 	1c0f30ae9a7968ed5d97cf444943498d8218389f
----------------------------
Fix failing sys_vars.plugin_dir_basic - treat both '/' and '\' as path separators in get_relative_path() on Windows 	8ec9fdd4abfa63ed566f73b7ce487c68a157747e
----------------------------
Handle different installation layouts. using  cmake option INSTALL_LAYOUT=STANDALONE would produce the layout as in tar.gz or zip packages. INSTALL_LAYOUT=UNIX will produce unixish install layout  (with mysqld being in sbin subdirectory , libs in lib/mysql etc). This layout is used for RPM packages. Subtle differences in both packages unfortunately lead to the need to recompile MySQL to use with other package type - as otherwise for example default plugins or data directories would be wrong set. There are numerous other variables that  allow fine-tuning packaging layout. (INSTALL_BINDIR, INSTALL_LIBDIR , INSTALL_PLUGINDIR etc). This options are different from autotools as they do not expect full paths to directories, but only subdirectory of CMAKE_INSTALL_PREFIX. There are 2 special options that expect full directory paths - MYSQL_DATADIR that defines default MYSQL data directory (autotools equivalent is --localstatedir) - SYSCONFDIR  can be added to search my.cnf search path (autotools equivalent is --sysconfdir) 	c827968a2df5ad35e64cea0116abf862776cef26
----------------------------
add jardir to storage/ndb/config/common.mk.am for cluster/j 	15e33629fb96bed407ab7c4c0bc47bd68a087376
----------------------------
Applying InnoDB snapshot, fixes BUG#49396. Detailed revision comments: r6471 | calvin | 2010-01-16 01:43:27 +0200 (Sat, 16 Jan 2010) | 4 lines branches/5.1: fix bug#49396: main.innodb test fails in embedded mode Change replace_result by using $MYSQLD_DATADIR. Tested in both embedded mode and normal server mode. 	58ebdfaec011d5f44a2aae525cd2d95ead03fc4f
----------------------------
Applying InnoDB snapshot, fixes BUG#46193. Detailed revision comments: r6424 | marko | 2010-01-12 12:22:19 +0200 (Tue, 12 Jan 2010) | 16 lines branches/5.1: In innobase_initialize_autoinc(), do not attempt to read the maximum auto-increment value from the table if innodb_force_recovery is set to at least 4, so that writes are disabled. (Bug #46193) innobase_get_int_col_max_value(): Move the function definition before ha_innobase::innobase_initialize_autoinc(), because that function now calls this function. ha_innobase::innobase_initialize_autoinc(): Change the return type to void.  Do not attempt to read the maximum auto-increment value from the table if innodb_force_recovery is set to at least 4.  Issue ER_AUTOINC_READ_FAILED to the client when the auto-increment value cannot be read. rb://144 by Sunny, revised by Marko 	8f32c618421eb8ac893d010f59b1f7eba6c0608a
----------------------------
Bug#50513 Build failure with ifdef HAVE_OPENSSL + ifndef HAVE_YASSL When compiling wiht ./configure --with-ssl=/usr, which used OPEN_SSL but not YASSL, the code in sql/mysqld.cc failed to build because of an incomplete performance schema instrumentation. This fix implements properly the instrumentation for the rwlock used in openssl_lock_t. Verified that the code builds, and the ssl + performance schema tests do pass. 	cc8caa7d9ef6376bb41fa5262695538de70c075f
----------------------------
branches/innodb+: Merge revisions 6448:6504 from branches/zip: ------------------------------------------------------------------------ r6449 | marko | 2010-01-13 15:38:53 -0500 (Wed, 13 Jan 2010) | 18 lines branches/zip: lock_rec_validate_page(): Only validate the record queues when the thread is not holding a space->latch. When UNIV_DEBUG is defined while UNIV_SYNC_DEBUG is not, latching order violations will still occur and deadlocks will be possible. sync_thread_levels_nonempty_gen(): Renamed from sync_thread_levels_empty_gen().  Return the violating latch or NULL instead of FALSE or TRUE, except that there will be a ut_error before the non-NULL return. sync_thread_levels_empty_gen(): A macro that negates the return value of sync_thread_levels_nonempty_gen(). sync_thread_levels_contains(): New function, based on sync_thread_levels_nonempty_gen(). This should fix Issue #441. ------------------------------------------------------------------------ r6463 | marko | 2010-01-14 08:43:37 -0500 (Thu, 14 Jan 2010) | 5 lines branches/zip: page_copy_rec_list_end(), page_copy_rec_list_start(): Update PAGE_MAX_TRX_ID before attempting to compress the page.  This fixes Issue #382 (a debug assertion failure in page_zip_reorganize()) and reduces the generated redo log.  There was no bug or crash in non-debug builds. ------------------------------------------------------------------------ r6467 | inaam | 2010-01-14 13:46:00 -0500 (Thu, 14 Jan 2010) | 10 lines branches/zip rb://226 log_sys->written_to_all_lsn does not accurately represent the LSN upto which write and flush has taken place. Under a race condition it can fall behind log_sys->flushed_to_disk_lsn which is accurate. Besides written_to_all_lsn is redundant as currently InnoDB supports only one log group. Approved by: Heikki ------------------------------------------------------------------------ r6472 | calvin | 2010-01-15 18:53:47 -0500 (Fri, 15 Jan 2010) | 12 lines branches/zip: Merge revisions 6425:6471 from branches/5.1 to pick up the first part fix of bug49396. ------------------------------------------------------------------------ r6471 | calvin | 2010-01-15 17:43:27 -0600 (Fri, 15 Jan 2010) | 4 lines branches/5.1: fix bug#49396: main.innodb test fails in embedded mode Change replace_result by using $MYSQLD_DATADIR. Tested in both embedded mode and normal server mode. ------------------------------------------------------------------------ ------------------------------------------------------------------------ r6473 | calvin | 2010-01-15 18:58:16 -0500 (Fri, 15 Jan 2010) | 6 lines branches/zip: fix bug#49396: innodb.innodb-index test fails in embedded mode This is 2nd part of the fix for bug#49396. The 1st part is innodb.test. Tested in both embedded mode and normal server mode. ------------------------------------------------------------------------ r6498 | marko | 2010-01-21 04:22:52 -0500 (Thu, 21 Jan 2010) | 15 lines branches/zip: buf_page_get_gen(): Obey recv_no_ibuf_operations and do not call ibuf_merge_or_delete_for_page() in crash recovery, before the redo log has been applied. This could cure some hard-to-repeat, hard-to-explain bugs related to secondary indexes. A possible recipe to repeat the bug: 1. update a secondary index leaf page on a compressed table 2. evict the page from the buffer pool while it is still dirty 3. ibuf_insert() something for the page 4. crash 5. crash recovery; ibuf merge would be done too early, before applying redo log to the sec index page or the ibuf pages ------------------------------------------------------------------------ 	6b7f0fc9f30b81bc87d44be24898e4c46c172d89
----------------------------
"BUG#50473: rpl_sync fails on windows debug enabled binaries The test case was failing because it contained instructions to close/reopen files, when they were in use. This raises problems in windows. Example of such instruction: ---exec echo ""failure"" > $MYSQLD_SLAVE_DATADIR/$file The test also contains commands that are not platform agnostic. Example: --exec cat $MYSQLD_SLAVE_DATADIR/master.backup > \ $MYSQLD_SLAVE_DATADIR/master.info We fix this by just truncating the necessary file and write ""failure"" into it (ie, without closing the file). The platform specific instruction is removed from the test case as it seems redundant. "	27828ba8e76fe746a33d07753189d2a50359f7ce
----------------------------
ndbinfo - auto create the ndbinfo database and tables in mysql_install_db and mysql_upgrade - only auto create if version >= 7.1 - don't auto create if the ndbinfo/ndb$ namespace is occupied - hide the ndbinfo database in 'ndbinfo_find_files' if ndbcluster and thus ndbinfo is not enabled. This way the ndbinfo database and tables will only show up when mysqld is started with --ndbcluster - fix one test case in suite/ndb that does SHOW DATABASES to only show the two database it has created 	f1397df788236573dd4acda625f534e24e116959
----------------------------
- another take on BUILD_CONFIG variable - use OPTION instead of SET for boolean variables to ensure option is in cache. Also use documented CMAKE_USE_MAKE_RULES_OVERRIDE feature instead of INCLUDE. - remove superfluous tests in innobase's CMakeLists.txt 	df2d0359d8c3f1c58d0f442692c92cdabc885a9d
----------------------------
Merge: dedfdb4 8a433bc Manual merge from mysql-trunk-merge. Conflicts: - configure.in - include/m_string.h - mysql-test/extra/rpl_tests/rpl_row_func003.test - mysql-test/r/mysqlbinlog.result - mysql-test/r/union.result - mysql-test/suite/binlog/r/binlog_killed_simulate.result - mysql-test/suite/binlog/r/binlog_row_mix_innodb_myisam.result - mysql-test/suite/binlog/r/binlog_unsafe.result - mysql-test/suite/binlog/t/binlog_unsafe.test - mysql-test/suite/rpl/r/rpl_loaddata_fatal.result - mysql-test/suite/rpl/r/rpl_loaddata_map.result - mysql-test/suite/rpl/r/rpl_stm_loaddata_concurrent.result - mysql-test/suite/rpl/r/rpl_stm_log.result - mysql-test/suite/rpl/t/rpl_optimize.test - mysql-test/t/mysqlbinlog.test - mysql-test/t/union.test - sql/rpl_utility.h - sql/sql_union.cc - strings/Makefile.am 	eacc937d48babce40829b729bb9dfe2711a43d17
----------------------------
Bug#43005 main.init_connect fails on Windows due to wrong quoting of args - The arguments are properly quoted when mtr.pl calls my_safe_process but unfortunately the all off when running with active state perl and stays in cygwin perl. - Extend the patch to only quote args that are not already quoted This a redo of previous commit, will be included in next push 	01795763f08d1dcc0d3e7f6426add597d53b0d6c
----------------------------
Fix end-of-line characters in mysql_release.cmake to be unix-conform make -DBUILD_CONFIG=mysql_release work 	7d1d78e5744a9b459584c12907373ccb8d7ed7d9
----------------------------
Fix  some problems found by kent. -lm is sometimes not linked, which causes errors about undefined rint() - FreeBSD embedded library does not link with the flags returned by mysql_config (added -lcrypt to LIBS, whereby causing overlinking in case of normal non-embedded client) 	ce59ee8098e22d99f402eea1b9d2d5de62a0caaf
----------------------------
ndb tests - add check for ndb so that test is skipped if ndbcluster engine is not supported 	7652d5af69378d9d41daf32e2e7f6c22f8a7b72d
----------------------------
branches/zip: Merge revisions 6425:6471 from branches/5.1 to pick up the first part fix of bug49396. ------------------------------------------------------------------------ r6471 | calvin | 2010-01-15 17:43:27 -0600 (Fri, 15 Jan 2010) | 4 lines branches/5.1: fix bug#49396: main.innodb test fails in embedded mode Change replace_result by using $MYSQLD_DATADIR. Tested in both embedded mode and normal server mode. ------------------------------------------------------------------------ 	20b55b55a0911e458d556780b11949d789d67f84
----------------------------
branches/5.1: fix bug#49396: main.innodb test fails in embedded mode Change replace_result by using $MYSQLD_DATADIR. Tested in both embedded mode and normal server mode. 	7acd931df6160b39e5312bc7c6a2848db4f2437c
----------------------------
"Fix for Bug#50221 Server refuses to start from non-default installdir on Solaris 32-bit When starting mysqld it did not recognize most of the options given on the command line when it was compiled for 32-bit Solaris using Sun Studio compiler. The cause for this was that most of the entries in the my_long_options array contained ""garbage"" data. The garbage data was caused by a compiler bug. When initilizing the def_value member for the ""default-storage-engine"" entry it was initialized like this: (longlong)""MyISAM"" i.e. casting a 32 bit pointer to a 64 bit integer value. Due to the compiler bug only 4 bytes was allocated (instead of 8 bytes). This caused everything following this entry to be stored at a location that was 4 byte wrong. The fix/work-around for this problem is initialize the def_value for default-storage-engine in my_long_options to 0 and instead initialize the default_storage_engine variable to ""MyISAM"" in init_common_variables(). "	6559e92732a983c935acff7d0404c8eb4c3d817c
----------------------------
Fix CFLAGS passed to mysql_config, in case makefile generator is Makefile based 	912ce798ff440ca327cdd93c7832443f851226d7
----------------------------
branches/innodb+: Merge revisions 6364:6447 from branches/zip: ------------------------------------------------------------------------ r6367 | marko | 2009-12-28 15:39:19 +0200 (Mon, 28 Dec 2009) | 2 lines Changed paths: M /branches/zip/dict/dict0dict.c branches/zip: dict_index_add_to_cache(): Always free the index object, also when returning DB_CORRUPTION. ------------------------------------------------------------------------ r6425 | marko | 2010-01-12 13:47:11 +0200 (Tue, 12 Jan 2010) | 45 lines Changed paths: M /branches/zip/ChangeLog M /branches/zip/handler/ha_innodb.cc M /branches/zip/handler/ha_innodb.h M /branches/zip/row/row0mysql.c branches/zip: Merge revisions 6350:6424 from branches/5.1: ------------------------------------------------------------------------ r6421 | jyang | 2010-01-12 07:59:16 +0200 (Tue, 12 Jan 2010) | 8 lines Changed paths: M /branches/5.1/row/row0mysql.c branches/5.1: Fix bug #49238: Creating/Dropping a temporary table while at 1023 transactions will cause assert. Handle possible DB_TOO_MANY_CONCURRENT_TRXS when deleting metadata in row_drop_table_for_mysql(). rb://220, approved by Marko ------------------------------------------------------------------------ r6422 | marko | 2010-01-12 11:34:27 +0200 (Tue, 12 Jan 2010) | 3 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/handler/ha_innodb.h branches/5.1: Non-functional change: Make innobase_get_int_col_max_value() a static function. It does not access any fields of class ha_innobase. ------------------------------------------------------------------------ r6424 | marko | 2010-01-12 12:22:19 +0200 (Tue, 12 Jan 2010) | 16 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/handler/ha_innodb.h branches/5.1: In innobase_initialize_autoinc(), do not attempt to read the maximum auto-increment value from the table if innodb_force_recovery is set to at least 4, so that writes are disabled. (Bug #46193) innobase_get_int_col_max_value(): Move the function definition before ha_innobase::innobase_initialize_autoinc(), because that function now calls this function. ha_innobase::innobase_initialize_autoinc(): Change the return type to void.  Do not attempt to read the maximum auto-increment value from the table if innodb_force_recovery is set to at least 4.  Issue ER_AUTOINC_READ_FAILED to the client when the auto-increment value cannot be read. rb://144 by Sunny, revised by Marko ------------------------------------------------------------------------ ------------------------------------------------------------------------ r6426 | marko | 2010-01-12 15:36:14 +0200 (Tue, 12 Jan 2010) | 2 lines Changed paths: M /branches/zip/row/row0sel.c branches/zip: row_sel_sec_rec_is_for_clust_rec(): Document the return value more accurately. ------------------------------------------------------------------------ r6433 | marko | 2010-01-13 13:19:00 +0200 (Wed, 13 Jan 2010) | 2 lines Changed paths: M /branches/zip/dict/dict0crea.c M /branches/zip/dict/dict0load.c branches/zip: dict_sys_tables_get_flags(), dict_create_sys_*_tuple(): Add some const qualifiers and comments. ------------------------------------------------------------------------ r6445 | marko | 2010-01-13 17:15:29 +0200 (Wed, 13 Jan 2010) | 3 lines Changed paths: M /branches/zip/ChangeLog M /branches/zip/buf/buf0buf.c branches/zip: buf_pool_drop_hash_index(): Check block->page.state before checking block->is_hashed, because the latter may be uninitialized right after server startup. ------------------------------------------------------------------------ r6446 | marko | 2010-01-13 17:20:10 +0200 (Wed, 13 Jan 2010) | 3 lines Changed paths: M /branches/zip/include/mem0dbg.h M /branches/zip/include/mem0dbg.ic M /branches/zip/mem/mem0dbg.c M /branches/zip/sync/sync0sync.c branches/zip: Treat mem_hash_mutex specially in mutex_free(), and explicitly free mem_hash_mutex in mem_close(). This fixes the breakage of UNIV_MEM_DEBUG that was filed as Issue #434. ------------------------------------------------------------------------ r6447 | marko | 2010-01-13 17:43:44 +0200 (Wed, 13 Jan 2010) | 5 lines Changed paths: M /branches/zip/ChangeLog M /branches/zip/row/row0sel.c branches/zip: row_sel_get_clust_rec_for_mysql(): On the READ UNCOMMITTED isolation level, do not attempt to access a clustered index record that has been marked for deletion.  This fixes Issue #433. Approved by Heikki over the IM. ------------------------------------------------------------------------ 	076550285b4939d3620e9f185f1925882fcd872b
----------------------------
Add WITH_FAST_MUTEXES option (non-debug configurations only) 	7e7965aeb4bea403a39f314ee7efb0662affad6b
----------------------------
Makes slave_type_conversions_basic to be skipped in embedded run in PB2 as it ought to be. Otherwise test will fail because variable is no recognized: 1193: Unknown system variable 'slave_type_conversions' 	231773b44919435b33696f77023ba81fd8a274c4
----------------------------
Fixes one more failure in gcov run: - sys_vars.rpl_init_slave_func Added suppression for the unsafe warning. 	88a9362d48a63b7972867d308a349bb6859d4128
----------------------------
Fixes for three test failures: - sys_vars.all_vars: Added test case for slave_type_conversions variable - rpl_row_idempotency Removed ER_SLAVE_AMBIGOUS_EXEC_MODE (which was removed by WL 4738) from the test case. Using ER_WRONG_VALUE_FOR_VAR instead. - mysqld--help-win Added missing help for --slave-type-conversions from the result file. 	c88f938bb8182fd2b00dd2f0de16fa10f1d8f70f
----------------------------
"Merge: 684405a 789352e Upmerge the changes for RPM versioning/naming from 5.0 to 5.1. This includes ""MYSQL_U_SCORE_VERSION"" in ""configure.in"". "	b0dad6edf48e3c1df5fd61919f42b6fde2056b0e
----------------------------
branches/zip: Merge revisions 6350:6424 from branches/5.1: ------------------------------------------------------------------------ r6421 | jyang | 2010-01-12 07:59:16 +0200 (Tue, 12 Jan 2010) | 8 lines Changed paths: M /branches/5.1/row/row0mysql.c branches/5.1: Fix bug #49238: Creating/Dropping a temporary table while at 1023 transactions will cause assert. Handle possible DB_TOO_MANY_CONCURRENT_TRXS when deleting metadata in row_drop_table_for_mysql(). rb://220, approved by Marko ------------------------------------------------------------------------ r6422 | marko | 2010-01-12 11:34:27 +0200 (Tue, 12 Jan 2010) | 3 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/handler/ha_innodb.h branches/5.1: Non-functional change: Make innobase_get_int_col_max_value() a static function. It does not access any fields of class ha_innobase. ------------------------------------------------------------------------ r6424 | marko | 2010-01-12 12:22:19 +0200 (Tue, 12 Jan 2010) | 16 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/handler/ha_innodb.h branches/5.1: In innobase_initialize_autoinc(), do not attempt to read the maximum auto-increment value from the table if innodb_force_recovery is set to at least 4, so that writes are disabled. (Bug #46193) innobase_get_int_col_max_value(): Move the function definition before ha_innobase::innobase_initialize_autoinc(), because that function now calls this function. ha_innobase::innobase_initialize_autoinc(): Change the return type to void.  Do not attempt to read the maximum auto-increment value from the table if innodb_force_recovery is set to at least 4.  Issue ER_AUTOINC_READ_FAILED to the client when the auto-increment value cannot be read. rb://144 by Sunny, revised by Marko ------------------------------------------------------------------------ 	4fdd498cdf1d0d461caad0ca1b40902246eb07fd
----------------------------
branches/5.1: In innobase_initialize_autoinc(), do not attempt to read the maximum auto-increment value from the table if innodb_force_recovery is set to at least 4, so that writes are disabled. (Bug #46193) innobase_get_int_col_max_value(): Move the function definition before ha_innobase::innobase_initialize_autoinc(), because that function now calls this function. ha_innobase::innobase_initialize_autoinc(): Change the return type to void.  Do not attempt to read the maximum auto-increment value from the table if innodb_force_recovery is set to at least 4.  Issue ER_AUTOINC_READ_FAILED to the client when the auto-increment value cannot be read. rb://144 by Sunny, revised by Marko 	04e0ee05d1306a232e5f4717bfa6ad2cca8bfee5
----------------------------
Add option for specifying MYSQL build configurations. Add mysql_release.cmake intended for use by the build team ( compile options, build settings to do MySQL releases) 	125cd58f2b3239b7ff0ec727a62e8ca160f3a877
----------------------------
Merge: e6c4013 77e2c04 Merge from telco-7.0. Due to changed functionality introduced by merge, fixed: - Reset 'tab->read_record.unlock_row) to (Default)rr_unlock_row() when then linked-cursor accesor 'join_read_linked_key' is initialized. - There is stricter value checking for config variables in mysqld, which required the values for 'ndb-join-pushdown' to be changed from on/off to true/false . 	226e31d3122ed755d5226854385a11b3bb603b37
----------------------------
"Fix for bug #48538 ""Assertion in thr_lock() on LOAD DATA CONCURRENT INFILE"". Attempts to execute an INSERT statement for a MEMORY table which invoked a trigger or called a stored function which tried to perform LOW_PRIORITY update on the table being inserted into, resulted in debug servers aborting due to an assertion failure. On non-debug servers such INSERTs failed with ""Can't update table t1 in stored function/trigger because it is already used by statement which invoked this stored function/trigger"" as expected. The problem was that in the above scenario TL_WRITE_CONCURRENT_INSERT is converted to TL_WRITE inside the thr_lock() function since the MEMORY engine does not support concurrent inserts. This triggered an assertion which assumed that for the same table, one thread always requests locks with higher thr_lock_type value first. When TL_WRITE_CONCURRENT_INSERT is upgraded to TL_WRITE after the locks have been sorted, this is no longer true. In this case, TL_WRITE was requested after acquiring a TL_WRITE_LOW_PRIORITY lock on the table, triggering the assert. This fix solves the problem by adjusting this assert to take this scenario into account. An alternative approach to change handler::store_locks() methods for all engines which do not support concurrent inserts in such way that TL_WRITE_CONCURRENT_INSERT is upgraded to TL_WRITE there instead, was considered too intrusive. Commit on behalf of Dmitry Lenev. "	0bce0c9041c5faf5a64855f21680f6898113d550
----------------------------
"Fix for BUG#50081 ""Tests: mysqld--help-notwin fails with --parallel"": eliminate 3 more ""directory path"" variables from the test's output (it was already the case for other similar ones likes slow-query-log-file). "	03d10b8cd082ea070de3cf344276b55dfe7fb524
----------------------------
"WL#5197 ""Move @@engine_condition_pushdown to @@optimizer_switch"" ""set engine_condition_pushdown"" is deprecated, engine condition pushdown is controlled by a new ""set optimizer_switch=engine_condition_pushdown=on|off"". "	716c1bce835435ef6c16a9306ac3185a5b9d72c0
----------------------------
Don't include NdbRecord.hpp in ha_ndbcluster.cc - This is intended as an opaque object and should only be inspected internally by the NDB API implementation. The structs 'KEY' and 'KEY_PART_INFO' are the MySQL counterpart of NdbRecord and should be used instead to obtain the same information. 	d8626ba2c54aa5c26ad6c2653d7efe7b88c2ea72
----------------------------
ndb - add ndb-wait-setup in rpl_ndb_multi_binlog_update.cnf to allow for slow test hosts 	3a51d01312cef186343bf2706788af2c716fa814
----------------------------
possible fix for sporadic sys_vars.delayed_insert_limit_func failures 	4949ee3a75ab6c56960e8a86a6ecb1d54d17a24a
----------------------------
"Merge: ece5ad5 31cd064 Manual merge of WL#4738 from mysql-next-mr: - backported code that handles %f/%g arguments in my_vsnprintf.c from 6.0 - backported %f/%g tests in unittest/mysys/my_vsnprintf-t.c from 6.0 - replaced snprintf(""%g"") in sql/set_var.cc with my_gcvt() - removed unnecessary ""--replace-result""s for Windows in mysql-test/suite/sys_vars/t/long_query_time_basic.test - some test results adjustments "	85d5a08b51e24af57120068bed4534e4c1e889f4
----------------------------
"branches/innodb+: Merge revisions 6130:6364 from branches/zip: ------------------------------------------------------------------------ r6130 | marko | 2009-11-02 11:42:56 +0200 (Mon, 02 Nov 2009) | 9 lines Changed paths: M /branches/zip/ChangeLog M /branches/zip/btr/btr0sea.c M /branches/zip/buf/buf0buf.c M /branches/zip/dict/dict0dict.c M /branches/zip/fil/fil0fil.c M /branches/zip/ibuf/ibuf0ibuf.c M /branches/zip/include/btr0sea.h M /branches/zip/include/dict0dict.h M /branches/zip/include/fil0fil.h M /branches/zip/include/ibuf0ibuf.h M /branches/zip/include/lock0lock.h M /branches/zip/include/log0log.h M /branches/zip/include/log0recv.h M /branches/zip/include/mem0mem.h M /branches/zip/include/mem0pool.h M /branches/zip/include/os0file.h M /branches/zip/include/pars0pars.h M /branches/zip/include/srv0srv.h M /branches/zip/include/thr0loc.h M /branches/zip/include/trx0i_s.h M /branches/zip/include/trx0purge.h M /branches/zip/include/trx0rseg.h M /branches/zip/include/trx0sys.h M /branches/zip/include/trx0undo.h M /branches/zip/include/usr0sess.h M /branches/zip/lock/lock0lock.c M /branches/zip/log/log0log.c M /branches/zip/log/log0recv.c M /branches/zip/mem/mem0dbg.c M /branches/zip/mem/mem0pool.c M /branches/zip/os/os0file.c M /branches/zip/os/os0sync.c M /branches/zip/os/os0thread.c M /branches/zip/pars/lexyy.c M /branches/zip/pars/pars0lex.l M /branches/zip/que/que0que.c M /branches/zip/srv/srv0srv.c M /branches/zip/srv/srv0start.c M /branches/zip/sync/sync0arr.c M /branches/zip/sync/sync0sync.c M /branches/zip/thr/thr0loc.c M /branches/zip/trx/trx0i_s.c M /branches/zip/trx/trx0purge.c M /branches/zip/trx/trx0rseg.c M /branches/zip/trx/trx0sys.c M /branches/zip/trx/trx0undo.c M /branches/zip/usr/usr0sess.c M /branches/zip/ut/ut0mem.c branches/zip: Free all resources at shutdown. Set pointers to NULL, so that Valgrind will not complain about freed data structures that are reachable via pointers.  This addresses Bug #45992 and Bug #46656. This patch is mostly based on changes copied from branches/embedded-1.0, mainly c5432, c3439, c3134, c2994, c2978, but also some other code was copied.  Some added cleanup code is specific to MySQL/InnoDB. rb://199 approved by Sunny Bains ------------------------------------------------------------------------ r6134 | marko | 2009-11-04 09:57:29 +0200 (Wed, 04 Nov 2009) | 5 lines Changed paths: M /branches/zip/ChangeLog M /branches/zip/handler/ha_innodb.cc branches/zip: innobase_convert_identifier(): Convert table names with explain_filename() to address Bug #32430: 'show innodb status' causes errors Invalid (old?) table or database name in logs. rb://134 approved by Sunny Bains ------------------------------------------------------------------------ r6137 | marko | 2009-11-04 15:24:28 +0200 (Wed, 04 Nov 2009) | 1 line Changed paths: M /branches/zip/dict/dict0dict.c branches/zip: dict_index_too_big_for_undo(): Correct a typo. ------------------------------------------------------------------------ r6153 | vasil | 2009-11-10 15:33:22 +0200 (Tue, 10 Nov 2009) | 145 lines Changed paths: M /branches/zip/handler/ha_innodb.cc branches/zip: Merge r6125:6152 from branches/5.1: (everything except the last white-space change was skipped as it is already in branches/zip) ------------------------------------------------------------------------ r6127 | vasil | 2009-10-30 11:18:25 +0200 (Fri, 30 Oct 2009) | 18 lines Changed paths: M /branches/5.1/Makefile.am M /branches/5.1/mysql-test/innodb-autoinc.result M /branches/5.1/mysql-test/innodb-autoinc.test branches/5.1: Backport c6121 from branches/zip: ------------------------------------------------------------------------ r6121 | sunny | 2009-10-30 01:42:11 +0200 (Fri, 30 Oct 2009) | 7 lines Changed paths: M /branches/zip/mysql-test/innodb-autoinc.result branches/zip: This test has been problematic for sometime now. The underlying bug is that the data dictionaries get out of sync. In the AUTOINC code we try and apply salve to the symptoms. In the past MySQL made some unrelated change and the dictionaries stopped getting out of sync and this test started to fail. Now, it seems they have reverted that changed and the test is passing again. I suspect this is not he last time that this test will change. ------------------------------------------------------------------------ ------------------------------------------------------------------------ r6129 | vasil | 2009-10-30 17:14:22 +0200 (Fri, 30 Oct 2009) | 4 lines Changed paths: M /branches/5.1/Makefile.am branches/5.1: Revert a change to Makefile.am that sneaked unnoticed in c6127. ------------------------------------------------------------------------ r6136 | marko | 2009-11-04 12:28:10 +0200 (Wed, 04 Nov 2009) | 15 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/include/ha_prototypes.h M /branches/5.1/ut/ut0ut.c branches/5.1: Port r6134 from branches/zip: ------------------------------------------------------------------------ r6134 | marko | 2009-11-04 07:57:29 +0000 (Wed, 04 Nov 2009) | 5 lines branches/zip: innobase_convert_identifier(): Convert table names with explain_filename() to address Bug #32430: 'show innodb status' causes errors Invalid (old?) table or database name in logs. rb://134 approved by Sunny Bains ------------------------------------------------------------------------ innobase_print_identifier(): Replace with innobase_convert_name(). innobase_convert_identifier(): New function, called by innobase_convert_name(). ------------------------------------------------------------------------ r6149 | vasil | 2009-11-09 11:15:01 +0200 (Mon, 09 Nov 2009) | 5 lines Changed paths: M /branches/5.1/CMakeLists.txt branches/5.1: Followup to r5700: Adjust the changes so they are the same as in the BZR repository. ------------------------------------------------------------------------ r6150 | vasil | 2009-11-09 11:43:31 +0200 (Mon, 09 Nov 2009) | 58 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: Merge a part of r2911.5.5 from MySQL: (the other part of this was merged in c5700) ------------------------------------------------------------ revno: 2911.5.5 committer: Vladislav Vaintroub <vvaintroub@mysql.com> branch nick: 5.1-innodb_plugin timestamp: Wed 2009-06-10 10:59:49 +0200 message: Backport WL#3653 to 5.1 to enable bundled innodb plugin. Remove custom DLL loader code from innodb plugin code, use symbols exported from mysqld. removed: storage/innodb_plugin/handler/handler0vars.h storage/innodb_plugin/handler/win_delay_loader.cc added: storage/mysql_storage_engine.cmake win/create_def_file.js modified: CMakeLists.txt include/m_ctype.h include/my_global.h include/my_sys.h include/mysql/plugin.h libmysqld/CMakeLists.txt mysql-test/mysql-test-run.pl mysql-test/t/plugin.test mysql-test/t/plugin_load-master.opt mysys/charset.c sql/CMakeLists.txt sql/handler.h sql/mysql_priv.h sql/mysqld.cc sql/sql_class.cc sql/sql_class.h sql/sql_list.h sql/sql_profile.h storage/Makefile.am storage/archive/CMakeLists.txt storage/blackhole/CMakeLists.txt storage/csv/CMakeLists.txt storage/example/CMakeLists.txt storage/federated/CMakeLists.txt storage/heap/CMakeLists.txt storage/innobase/CMakeLists.txt storage/innobase/handler/ha_innodb.cc storage/innodb_plugin/CMakeLists.txt storage/innodb_plugin/handler/ha_innodb.cc storage/innodb_plugin/handler/handler0alter.cc storage/innodb_plugin/handler/i_s.cc storage/innodb_plugin/plug.in storage/myisam/CMakeLists.txt storage/myisammrg/CMakeLists.txt win/Makefile.am win/configure.js ------------------------------------------------------------------------ r6152 | vasil | 2009-11-10 15:30:20 +0200 (Tue, 10 Nov 2009) | 4 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: White space fixup. ------------------------------------------------------------------------ ------------------------------------------------------------------------ r6157 | jyang | 2009-11-11 14:27:09 +0200 (Wed, 11 Nov 2009) | 10 lines Changed paths: M /branches/zip/handler/ha_innodb.cc A /branches/zip/mysql-test/innodb_bug47167.result A /branches/zip/mysql-test/innodb_bug47167.test M /branches/zip/mysql-test/innodb_file_format.result branches/zip: Fix an issue that a local variable defined in innodb_file_format_check_validate() is being referenced across function in innodb_file_format_check_update(). In addition, fix ""set global innodb_file_format_check = DEFAULT"" call. Bug #47167: ""set global innodb_file_format_check"" cannot set value by User-Defined Variable."" rb://169 approved by Sunny Bains and Marko. ------------------------------------------------------------------------ r6159 | vasil | 2009-11-11 15:13:01 +0200 (Wed, 11 Nov 2009) | 37 lines Changed paths: M /branches/zip/handler/ha_innodb.cc M /branches/zip/handler/ha_innodb.h branches/zip: Merge a change from MySQL: (this has been reviewed by Calvin and Marko, and Calvin says Luis has incorporated Marko's suggestions) ------------------------------------------------------------ revno: 3092.5.1 committer: Luis Soares <luis.soares@sun.com> branch nick: mysql-5.1-bugteam timestamp: Thu 2009-09-24 15:52:52 +0100 message: BUG#42829: binlogging enabled for all schemas regardless of binlog-db-db / binlog-ignore-db InnoDB will return an error if statement based replication is used along with transaction isolation level READ-COMMITTED (or weaker), even if the statement in question is filtered out according to the binlog-do-db rules set. In this case, an error should not be printed. This patch addresses this issue by extending the existing check in external_lock to take into account the filter rules before deciding to print an error. Furthermore, it also changes decide_logging_format to take into consideration whether the statement is filtered out from binlog before decision is made. added: mysql-test/suite/binlog/r/binlog_stm_do_db.result mysql-test/suite/binlog/t/binlog_stm_do_db-master.opt mysql-test/suite/binlog/t/binlog_stm_do_db.test modified: sql/sql_base.cc sql/sql_class.cc storage/innobase/handler/ha_innodb.cc storage/innobase/handler/ha_innodb.h storage/innodb_plugin/handler/ha_innodb.cc storage/innodb_plugin/handler/ha_innodb.h ------------------------------------------------------------------------ r6160 | vasil | 2009-11-11 15:33:49 +0200 (Wed, 11 Nov 2009) | 72 lines Changed paths: M /branches/zip/include/os0file.h M /branches/zip/os/os0file.c branches/zip: Merge r6152:6159 from branches/5.1: (r6158 was skipped as an equivallent change has already been merged from MySQL) ------------------------------------------------------------------------ r6154 | calvin | 2009-11-11 02:51:17 +0200 (Wed, 11 Nov 2009) | 17 lines Changed paths: M /branches/5.1/include/os0file.h M /branches/5.1/os/os0file.c branches/5.1: fix bug#3139: Mysql crashes: 'windows error 995' after several selects on a large DB During stress environment, Windows AIO may fail with error code ERROR_OPERATION_ABORTED. InnoDB does not handle the error, rather crashes. The cause of the error is unknown, but likely due to faulty hardware or driver. This patch introduces a new error code OS_FILE_OPERATION_ABORTED, which maps to Windows ERROR_OPERATION_ABORTED (995). When the error is detected during AIO, the InnoDB will issue a synchronous retry (read/write). This patch has been extensively tested by MySQL support. Approved by: Marko rb://196 ------------------------------------------------------------------------ r6158 | vasil | 2009-11-11 14:52:14 +0200 (Wed, 11 Nov 2009) | 37 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/handler/ha_innodb.h branches/5.1: Merge a change from MySQL: (this has been reviewed by Calvin and Marko, and Calvin says Luis has incorporated Marko's suggestions) ------------------------------------------------------------ revno: 3092.5.1 committer: Luis Soares <luis.soares@sun.com> branch nick: mysql-5.1-bugteam timestamp: Thu 2009-09-24 15:52:52 +0100 message: BUG#42829: binlogging enabled for all schemas regardless of binlog-db-db / binlog-ignore-db InnoDB will return an error if statement based replication is used along with transaction isolation level READ-COMMITTED (or weaker), even if the statement in question is filtered out according to the binlog-do-db rules set. In this case, an error should not be printed. This patch addresses this issue by extending the existing check in external_lock to take into account the filter rules before deciding to print an error. Furthermore, it also changes decide_logging_format to take into consideration whether the statement is filtered out from binlog before decision is made. added: mysql-test/suite/binlog/r/binlog_stm_do_db.result mysql-test/suite/binlog/t/binlog_stm_do_db-master.opt mysql-test/suite/binlog/t/binlog_stm_do_db.test modified: sql/sql_base.cc sql/sql_class.cc storage/innobase/handler/ha_innodb.cc storage/innobase/handler/ha_innodb.h storage/innodb_plugin/handler/ha_innodb.cc storage/innodb_plugin/handler/ha_innodb.h ------------------------------------------------------------------------ ------------------------------------------------------------------------ r6161 | vasil | 2009-11-11 15:36:16 +0200 (Wed, 11 Nov 2009) | 4 lines Changed paths: M /branches/zip/ChangeLog branches/zip: Add changelog entry for r6160. ------------------------------------------------------------------------ r6162 | vasil | 2009-11-11 16:00:12 +0200 (Wed, 11 Nov 2009) | 4 lines Changed paths: M /branches/zip/ChangeLog branches/zip: Add ChangeLog for r6157. ------------------------------------------------------------------------ r6163 | calvin | 2009-11-11 17:53:20 +0200 (Wed, 11 Nov 2009) | 8 lines Changed paths: M /branches/zip/handler/ha_innodb.cc M /branches/zip/handler/ha_innodb.h branches/zip: Exclude thd_binlog_filter_ok() when building with older version of MySQL. thd_binlog_filter_ok() is introduced in MySQL 5.1.41. But the plugin can be built with MySQL prior to 5.1.41. Approved by Heikki (on IM). ------------------------------------------------------------------------ r6169 | calvin | 2009-11-12 14:40:43 +0200 (Thu, 12 Nov 2009) | 6 lines Changed paths: A /branches/zip/mysql-test/innodb_bug46676.result A /branches/zip/mysql-test/innodb_bug46676.test branches/zip: add test case for bug#46676 This crash is reproducible with InnoDB plugin 1.0.4 + MySQL 5.1.37. But no longer reproducible after MySQL 5.1.38 (with plugin 1.0.5). Add test case to catch future regression. ------------------------------------------------------------------------ r6170 | marko | 2009-11-12 15:49:08 +0200 (Thu, 12 Nov 2009) | 4 lines Changed paths: M /branches/zip/ChangeLog M /branches/zip/handler/ha_innodb.cc M /branches/zip/include/db0err.h M /branches/zip/row/row0merge.c M /branches/zip/row/row0mysql.c branches/zip: Allow CREATE INDEX to be interrupted.  (Issue #354) rb://183 approved by Heikki Tuuri ------------------------------------------------------------------------ r6175 | vasil | 2009-11-16 20:07:39 +0200 (Mon, 16 Nov 2009) | 4 lines Changed paths: M /branches/zip/ChangeLog branches/zip: Wrap line at 78th char in the ChangeLog ------------------------------------------------------------------------ r6177 | calvin | 2009-11-16 20:20:38 +0200 (Mon, 16 Nov 2009) | 2 lines Changed paths: M /branches/zip/ChangeLog branches/zip: add an entry to ChangeLog for r6065 ------------------------------------------------------------------------ r6179 | marko | 2009-11-17 10:19:34 +0200 (Tue, 17 Nov 2009) | 2 lines Changed paths: M /branches/zip/handler/ha_innodb.cc branches/zip: ha_innobase::change_active_index(): When the history is missing, report it to the client, not to the error log. ------------------------------------------------------------------------ r6181 | vasil | 2009-11-17 12:21:41 +0200 (Tue, 17 Nov 2009) | 33 lines Changed paths: M /branches/zip/mysql-test/innodb-index.test branches/zip: At the end of innodb-index.test: restore the environment as it was before the test was started to silence this warning: MTR's internal check of the test case 'main.innodb-index' failed. This means that the test case does not preserve the state that existed before the test case was executed.  Most likely the test case did not do a proper clean-up. This is the diff of the states of the servers before and after the test case was executed: mysqltest: Logging to '/tmp/autotest.sh-20091117_033000-zip.btyZwu/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.log'. mysqltest: Results saved in '/tmp/autotest.sh-20091117_033000-zip.btyZwu/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.result'. mysqltest: Connecting to server localhost:13000 (socket /tmp/autotest.sh-20091117_033000-zip.btyZwu/mysql-5.1/mysql-test/var/tmp/mysqld.1.sock) as 'root', connection 'default', attempt 0 ... mysqltest: ... Connected. mysqltest: Start processing test commands from './include/check-testcase.test' ... mysqltest: ... Done processing test commands. --- /tmp/autotest.sh-20091117_033000-zip.btyZwu/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.result	2009-11-17 13:10:40.000000000 +0300 +++ /tmp/autotest.sh-20091117_033000-zip.btyZwu/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.reject	2009-11-17 13:10:54.000000000 +0300 @@ -84,7 +84,7 @@ INNODB_DOUBLEWRITE	ON INNODB_FAST_SHUTDOWN	1 INNODB_FILE_FORMAT	Antelope -INNODB_FILE_FORMAT_CHECK	Antelope +INNODB_FILE_FORMAT_CHECK	Barracuda INNODB_FILE_PER_TABLE	OFF INNODB_FLUSH_LOG_AT_TRX_COMMIT	1 INNODB_FLUSH_METHOD mysqltest: Result content mismatch not ok ------------------------------------------------------------------------ r6182 | marko | 2009-11-17 13:49:15 +0200 (Tue, 17 Nov 2009) | 1 line Changed paths: M /branches/zip/mysql-test/innodb-consistent-master.opt M /branches/zip/mysql-test/innodb-consistent.result M /branches/zip/mysql-test/innodb-consistent.test M /branches/zip/mysql-test/innodb-use-sys-malloc-master.opt M /branches/zip/mysql-test/innodb-use-sys-malloc.result M /branches/zip/mysql-test/innodb-use-sys-malloc.test M /branches/zip/mysql-test/innodb_bug21704.result M /branches/zip/mysql-test/innodb_bug21704.test M /branches/zip/mysql-test/innodb_bug40360.test M /branches/zip/mysql-test/innodb_bug40565.result M /branches/zip/mysql-test/innodb_bug40565.test M /branches/zip/mysql-test/innodb_bug41904.result M /branches/zip/mysql-test/innodb_bug41904.test M /branches/zip/mysql-test/innodb_bug42101-nonzero-master.opt M /branches/zip/mysql-test/innodb_bug42101-nonzero.result M /branches/zip/mysql-test/innodb_bug42101-nonzero.test M /branches/zip/mysql-test/innodb_bug42101.result M /branches/zip/mysql-test/innodb_bug42101.test M /branches/zip/mysql-test/innodb_bug44032.result M /branches/zip/mysql-test/innodb_bug44032.test M /branches/zip/mysql-test/innodb_bug44369.result M /branches/zip/mysql-test/innodb_bug44369.test M /branches/zip/mysql-test/innodb_bug44571.result M /branches/zip/mysql-test/innodb_bug44571.test M /branches/zip/mysql-test/innodb_bug45357.test M /branches/zip/mysql-test/innodb_bug46000.result M /branches/zip/mysql-test/innodb_bug46000.test M /branches/zip/mysql-test/innodb_bug46676.result M /branches/zip/mysql-test/innodb_bug46676.test M /branches/zip/mysql-test/innodb_bug47167.result M /branches/zip/mysql-test/innodb_bug47167.test M /branches/zip/mysql-test/innodb_bug47777.result M /branches/zip/mysql-test/innodb_bug47777.test M /branches/zip/mysql-test/innodb_file_format.result M /branches/zip/mysql-test/innodb_file_format.test branches/zip: Set svn:eol-style on mysql-test files. ------------------------------------------------------------------------ r6183 | marko | 2009-11-17 13:51:16 +0200 (Tue, 17 Nov 2009) | 1 line Changed paths: M /branches/zip/mysql-test/innodb-consistent-master.opt M /branches/zip/mysql-test/innodb-master.opt M /branches/zip/mysql-test/innodb-semi-consistent-master.opt M /branches/zip/mysql-test/innodb-use-sys-malloc-master.opt M /branches/zip/mysql-test/innodb_bug42101-nonzero-master.opt branches/zip: Prepend loose_ to plugin-only mysql-test options. ------------------------------------------------------------------------ r6184 | marko | 2009-11-17 13:52:01 +0200 (Tue, 17 Nov 2009) | 1 line Changed paths: M /branches/zip/mysql-test/innodb-index.result M /branches/zip/mysql-test/innodb-index.test branches/zip: innodb-index.test: Restore innodb_file_format_check. ------------------------------------------------------------------------ r6185 | marko | 2009-11-17 16:44:20 +0200 (Tue, 17 Nov 2009) | 16 lines Changed paths: M /branches/zip/handler/ha_innodb.cc M /branches/zip/mysql-test/innodb.result M /branches/zip/mysql-test/innodb.test M /branches/zip/mysql-test/innodb_bug44369.result M /branches/zip/mysql-test/innodb_bug44369.test D /branches/zip/mysql-test/patches/innodb-index.diff M /branches/zip/row/row0mysql.c branches/zip: Report duplicate table names to the client connection, not to the error log.  This change will allow innodb-index.test to be re-enabled.  It was previously disabled, because mysql-test-run does not like output in the error log. row_create_table_for_mysql(): Do not output anything to the error log when reporting DB_DUPLICATE_KEY.  Let the caller report the error. Add a TODO comment that the dict_table_t object is apparently not freed when an error occurs. create_table_def(): Convert InnoDB table names to the character set of the client connection for reporting.  Use my_error(ER_WRONG_COLUMN_NAME) for reporting reserved column names.  Report my_error(ER_TABLE_EXISTS_ERROR) when row_create_table_for_mysql() returns DB_DUPLICATE_KEY. rb://206 ------------------------------------------------------------------------ r6186 | vasil | 2009-11-17 16:48:14 +0200 (Tue, 17 Nov 2009) | 4 lines Changed paths: M /branches/zip/ChangeLog branches/zip: Add ChangeLog entry for r6185. ------------------------------------------------------------------------ r6189 | marko | 2009-11-18 11:36:18 +0200 (Wed, 18 Nov 2009) | 5 lines Changed paths: M /branches/zip/ChangeLog M /branches/zip/handler/handler0alter.cc branches/zip: ha_innobase::add_index(): When creating the primary key and the table is being locked by another transaction, do not attempt to drop the table. (Bug #48782) Approved by Sunny Bains over IM ------------------------------------------------------------------------ r6194 | vasil | 2009-11-19 09:24:45 +0200 (Thu, 19 Nov 2009) | 5 lines Changed paths: M /branches/zip/include/univ.i branches/zip: Increment version number from 1.0.5 to 1.0.6 since 1.0.5 was just released by MySQL and we will soon release 1.0.6. ------------------------------------------------------------------------ r6197 | calvin | 2009-11-19 09:32:55 +0200 (Thu, 19 Nov 2009) | 6 lines Changed paths: M /branches/zip/CMakeLists.txt branches/zip: merge the fix of bug#48317 (CMake file) Due to MySQL changes to the CMake, it is no longer able to build InnoDB plugin as a static library on Windows. The fix is proposed by Vlad of MySQL. ------------------------------------------------------------------------ r6198 | vasil | 2009-11-19 09:44:31 +0200 (Thu, 19 Nov 2009) | 4 lines Changed paths: M /branches/zip/ChangeLog branches/zip: Add ChangeLog entry for r6197. ------------------------------------------------------------------------ r6199 | vasil | 2009-11-19 12:10:12 +0200 (Thu, 19 Nov 2009) | 31 lines Changed paths: M /branches/zip/ChangeLog M /branches/zip/btr/btr0btr.c M /branches/zip/data/data0type.c branches/zip: Merge r6159:6198 from branches/5.1: ------------------------------------------------------------------------ r6187 | jyang | 2009-11-18 05:27:30 +0200 (Wed, 18 Nov 2009) | 9 lines Changed paths: M /branches/5.1/btr/btr0btr.c branches/5.1: Fix bug #48469 ""when innodb tablespace is configured too small, crash and corruption!"". Function btr_create() did not check the return status of fseg_create(), and continue the index creation even there is no sufficient space. rb://205 Approved by Marko ------------------------------------------------------------------------ r6188 | jyang | 2009-11-18 07:14:23 +0200 (Wed, 18 Nov 2009) | 8 lines Changed paths: M /branches/5.1/data/data0type.c branches/5.1: Fix bug #48526 ""Data type for float and double is incorrectly reported in InnoDB table monitor"". Certain datatypes are not printed correctly in dtype_print(). rb://204 Approved by Marko. ------------------------------------------------------------------------ ------------------------------------------------------------------------ r6201 | marko | 2009-11-19 14:09:11 +0200 (Thu, 19 Nov 2009) | 2 lines Changed paths: M /branches/zip/handler/handler0alter.cc branches/zip: ha_innobase::add_index(): Clarify the comment on orphaned tables when creating a primary key. ------------------------------------------------------------------------ r6202 | jyang | 2009-11-19 15:01:00 +0200 (Thu, 19 Nov 2009) | 8 lines Changed paths: M /branches/zip/btr/btr0btr.c branches/zip: Function fseg_free() is no longer defined in branches/zip. To port fix for bug #48469 to zip, we can use btr_free_root() which frees the page, and also does not require mini-transaction. Approved by Marko. ------------------------------------------------------------------------ r6207 | vasil | 2009-11-20 10:19:14 +0200 (Fri, 20 Nov 2009) | 54 lines Changed paths: M /branches/zip/handler/ha_innodb.cc branches/zip: Merge r6198:6206 from branches/5.1: (r6203 was skipped as it is already in branches/zip) ------------------------------------------------------------------------ r6200 | vasil | 2009-11-19 12:14:23 +0200 (Thu, 19 Nov 2009) | 4 lines Changed paths: M /branches/5.1/btr/btr0btr.c branches/5.1: White space fixup - indent under the opening ( ------------------------------------------------------------------------ r6203 | jyang | 2009-11-19 15:12:22 +0200 (Thu, 19 Nov 2009) | 8 lines Changed paths: M /branches/5.1/btr/btr0btr.c branches/5.1: Use btr_free_root() instead of fseg_free() for the fix of bug #48469, because fseg_free() is not defined in the zip branch. And we could save one mini-trasaction started by fseg_free(). Approved by Marko. ------------------------------------------------------------------------ r6205 | jyang | 2009-11-20 07:55:48 +0200 (Fri, 20 Nov 2009) | 11 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: Add a special case to handle the Duplicated Key error and return DB_ERROR instead. This is to avoid a possible SIGSEGV by mysql error handling re-entering the storage layer for dup key info without proper table handle. This is to prevent a server crash when error situation in bug #45961 ""DDL on partitioned innodb tables leaves data dictionary in an inconsistent state"" happens. rb://157 approved by Sunny Bains. ------------------------------------------------------------------------ r6206 | jyang | 2009-11-20 09:38:43 +0200 (Fri, 20 Nov 2009) | 5 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: Fix a minor code formating issue for the parenthesis iplacement of the if condition in rename_table(). ------------------------------------------------------------------------ ------------------------------------------------------------------------ r6208 | vasil | 2009-11-20 10:49:24 +0200 (Fri, 20 Nov 2009) | 4 lines Changed paths: M /branches/zip/ChangeLog branches/zip: Add ChangeLog entry for c6207. ------------------------------------------------------------------------ r6210 | vasil | 2009-11-20 23:39:48 +0200 (Fri, 20 Nov 2009) | 3 lines Changed paths: M /branches/zip/trx/trx0i_s.c branches/zip: Whitespace fixup. ------------------------------------------------------------------------ r6248 | marko | 2009-11-30 12:19:50 +0200 (Mon, 30 Nov 2009) | 1 line Changed paths: M /branches/zip/ChangeLog branches/zip: ChangeLog: Document r4922 that was forgotten. ------------------------------------------------------------------------ r6252 | marko | 2009-11-30 12:50:11 +0200 (Mon, 30 Nov 2009) | 23 lines Changed paths: M /branches/zip/ChangeLog M /branches/zip/dict/dict0boot.c M /branches/zip/dict/dict0crea.c M /branches/zip/dict/dict0load.c M /branches/zip/dict/dict0mem.c M /branches/zip/fil/fil0fil.c M /branches/zip/handler/ha_innodb.cc M /branches/zip/include/dict0mem.h M /branches/zip/row/row0mysql.c branches/zip: Suppress errors about non-found temporary tables. Write the is_temp flag to SYS_TABLES.MIX_LEN. dict_table_t::flags: Add a flag for is_temporary, DICT_TF2_TEMPORARY. Unlike other flags, this will not be written to the tablespace flags or SYS_TABLES.TYPE, but only to SYS_TABLES.MIX_LEN. dict_build_table_def_step(): Only pass DICT_TF_BITS to tablespaces. dict_check_tablespaces_and_store_max_id(), dict_load_table(): Suppress errors about temporary tables not being found. dict_create_sys_tables_tuple(): Write the DICT_TF2_TEMPORARY flag to SYS_TABLES.MIX_LEN. fil_space_create(), fil_create_new_single_table_tablespace(): Add assertions about space->flags. row_drop_table_for_mysql(): Do not complain about non-found temporary tables. rb://160 approved by Heikki Tuuri.  This addresses the second part of Bug #41609 Crash recovery does not work for InnoDB temporary tables. ------------------------------------------------------------------------ r6263 | vasil | 2009-12-01 14:49:05 +0200 (Tue, 01 Dec 2009) | 4 lines Changed paths: M /branches/zip/include/univ.i branches/zip: Increment version number from 1.0.6 to 1.0.7 1.0.6 has been released ------------------------------------------------------------------------ r6264 | vasil | 2009-12-01 16:19:44 +0200 (Tue, 01 Dec 2009) | 1 line Changed paths: M /branches/zip/ChangeLog branches/zip: Add ChangeLog entry for the release of 1.0.6. ------------------------------------------------------------------------ r6269 | marko | 2009-12-02 11:35:22 +0200 (Wed, 02 Dec 2009) | 2 lines Changed paths: M /branches/zip/srv/srv0start.c branches/zip: innobase_start_or_create_for_mysql(): UNIV_IBUF_DEBUG should not break crash recovery, but UNIV_IBUF_COUNT_DEBUG will. ------------------------------------------------------------------------ r6270 | marko | 2009-12-02 11:36:47 +0200 (Wed, 02 Dec 2009) | 1 line Changed paths: M /branches/zip/srv/srv0start.c branches/zip: innobase_start_or_create_for_mysql(): Log the zlib version. ------------------------------------------------------------------------ r6271 | marko | 2009-12-02 11:43:49 +0200 (Wed, 02 Dec 2009) | 2 lines Changed paths: M /branches/zip/ChangeLog M /branches/zip/Makefile.am M /branches/zip/include/univ.i M /branches/zip/plug.in branches/zip: ChangeLog: Document that since r6270, the zlib version number will be displayed at start-up. ------------------------------------------------------------------------ r6272 | marko | 2009-12-02 11:46:05 +0200 (Wed, 02 Dec 2009) | 1 line Changed paths: M /branches/zip/Makefile.am M /branches/zip/include/univ.i M /branches/zip/plug.in branches/zip: Revert changes that were accidentally committed in r6271. ------------------------------------------------------------------------ r6274 | marko | 2009-12-03 14:47:12 +0200 (Thu, 03 Dec 2009) | 6 lines Changed paths: M /branches/zip/dict/dict0dict.c branches/zip: dict_table_check_for_dup_indexes(): Assert that the data dictionary mutex is being held while table->indexes is accessed. This is already the case. Currently, only dict_table_get_next_index() and dict_table_get_first_index() are being invoked without holding dict_sys->mutex. ------------------------------------------------------------------------ r6275 | pekka | 2009-12-03 18:32:47 +0200 (Thu, 03 Dec 2009) | 10 lines Changed paths: M /branches/zip/include/log0recv.h M /branches/zip/include/trx0sys.h M /branches/zip/log/log0recv.c M /branches/zip/trx/trx0sys.c branches/zip: Minor changes which allow build with UNIV_HOTBACKUP defined to succeed: include/trx0sys.h: Allow Hot Backup build to see some TRX_SYS_DOUBLEWRITE_... macros. trx/trx0sys.c:     Exclude trx_sys_close() function from Hot Backup build. log/log0recv.[ch]: Exclude recv_sys_var_init() function from Hot Backup build. This change should not affect !UNIV_HOTBACKUP build. ------------------------------------------------------------------------ r6277 | marko | 2009-12-08 11:13:36 +0200 (Tue, 08 Dec 2009) | 1 line Changed paths: M /branches/zip/fsp/fsp0fsp.c branches/zip: fsp0fsp.c: Add some missing in/out and const qualifiers. ------------------------------------------------------------------------ r6285 | marko | 2009-12-09 09:24:50 +0200 (Wed, 09 Dec 2009) | 13 lines Changed paths: M /branches/zip/row/row0sel.c branches/zip: row_sel_fetch_columns(): Remove redundant code that was accidentally added in r1591, which introduced dfield_t::ext in order to make the merge sort of fast index creation support externally stored columns, Initially, I tried to allocate the bit for dfield_t::ext from dfield_t::len by making the length 31 bits and mapping UNIV_SQL_NULL to something that would fit in it.  Then I decided that it would be too risky.  The redundant check was part of the mapping.  The condition may have been dfield_is_null() initially. This redundant code was noticed by Sergey Petrunya on the MySQL internals list. ------------------------------------------------------------------------ r6288 | marko | 2009-12-09 09:51:00 +0200 (Wed, 09 Dec 2009) | 15 lines Changed paths: M /branches/zip/row/row0upd.c branches/zip: row_upd_copy_columns(): Remove redundant code that was accidentally added in r1591, which introduced dfield_t::ext in order to make the merge sort of fast index creation support externally stored columns. Initially, I tried to allocate the bit for dfield_t::ext from dfield_t::len by making the length 31 bits and mapping UNIV_SQL_NULL to something that would fit in it.  Then I decided that it would be too risky.  The redundant check was part of the mapping.  The condition may have been dfield_is_null() initially. This is similar to the redundant code in row_sel_fetch_columns() that was noticed by Sergey Petrunya on the MySQL internals list and removed in r6285.  As far as I can tell, there are no redundant UNIV_SQL_NULL assignments remaining after this change. ------------------------------------------------------------------------ r6305 | marko | 2009-12-14 13:03:57 +0200 (Mon, 14 Dec 2009) | 2 lines Changed paths: M /branches/zip/row/row0umod.c branches/zip: row_undo_mod_del_unmark_sec_and_undo_update(): Add a missing const qualifier. ------------------------------------------------------------------------ r6309 | marko | 2009-12-15 14:05:50 +0200 (Tue, 15 Dec 2009) | 3 lines Changed paths: M /branches/zip/lock/lock0lock.c branches/zip: lock_rec_insert_check_and_lock(): Avoid casting away constness. Use page_rec_get_next_const() instead. This silences a gcc 4.2.4 warning. Reported by Sunny Bains. ------------------------------------------------------------------------ r6312 | marko | 2009-12-16 10:10:36 +0200 (Wed, 16 Dec 2009) | 6 lines Changed paths: M /branches/zip/fil/fil0fil.c branches/zip: fil_close(): Add #ifndef UNIV_HOTBACKUP around a debug assertion on mutex.magic_n.  InnoDB Hot Backup is a single-threaded program and does not contain mutexes.  This change allows InnoDB Hot Backup to be compiled with UNIV_DEBUG. Suggested by Michael Izioumtchenko. ------------------------------------------------------------------------ r6321 | marko | 2009-12-16 16:16:33 +0200 (Wed, 16 Dec 2009) | 4 lines Changed paths: M /branches/zip/row/row0merge.c branches/zip: row_merge_drop_temp_indexes(): Revert a hack to transaction isolation level that was made unnecessary by r5826 (Issue #337). When this function is called, any active data dictionary transaction should have been rolled back. ------------------------------------------------------------------------ r6345 | marko | 2009-12-21 10:46:14 +0200 (Mon, 21 Dec 2009) | 7 lines Changed paths: M /branches/zip/log/log0recv.c branches/zip: recv_scan_log_recs(): Non-functional change: Replace a debug assertion ut_ad(len > 0) with ut_ad(len >= OS_FILE_LOG_BLOCK_SIZE). This change is only for readability, for Issue #428.  Another assertion on len being an integer multiple of OS_FILE_LOG_BLOCK_SIZE already ensured together with the old ut_ad(len > 0) that actually len must be at least OS_FILE_LOG_BLOCK_SIZE. ------------------------------------------------------------------------ r6346 | marko | 2009-12-21 12:03:25 +0200 (Mon, 21 Dec 2009) | 2 lines Changed paths: M /branches/zip/log/log0recv.c branches/zip: recv_recovery_from_checkpoint_finish(): Revert a change that was accidentally committed in r6345. ------------------------------------------------------------------------ r6348 | marko | 2009-12-22 11:04:34 +0200 (Tue, 22 Dec 2009) | 37 lines Changed paths: M /branches/zip/handler/ha_innodb.cc M /branches/zip/include/ha_prototypes.h M /branches/zip/include/trx0trx.h M /branches/zip/lock/lock0lock.c M /branches/zip/trx/trx0i_s.c M /branches/zip/trx/trx0trx.c branches/zip: Merge a change from MySQL: ------------------------------------------------------------ revno: 3236 committer: Satya B <satya.bn@sun.com> branch nick: mysql-5.1-bugteam timestamp: Tue 2009-12-01 17:48:57 +0530 message: merge to mysql-5.1-bugteam ------------------------------------------------------------ revno: 3234.1.1 committer: Gleb Shchepa <gshchepa@mysql.com> branch nick: mysql-5.1-bugteam timestamp: Tue 2009-12-01 14:38:40 +0400 message: Bug #38883 (reopened): thd_security_context is not thread safe, crashes? manual merge 5.0-->5.1, updating InnoDB plugin. ------------------------------------------------------------ revno: 1810.3968.13 committer: Gleb Shchepa <gshchepa@mysql.com> branch nick: mysql-5.0-bugteam timestamp: Tue 2009-12-01 14:24:44 +0400 message: Bug #38883 (reopened): thd_security_context is not thread safe, crashes? The bug 38816 changed the lock that protects THD::query from LOCK_thread_count to LOCK_thd_data, but didn't update the associated InnoDB functions. 1. The innobase_mysql_prepare_print_arbitrary_thd and the innobase_mysql_end_print_arbitrary_thd InnoDB functions have been removed, since now we have a per-thread mutex: now we don't need to wrap several inter-thread access tries to THD::query with a single global LOCK_thread_count lock, so we can simplify the code. 2. The innobase_mysql_print_thd function has been modified to lock LOCK_thd_data in direct way. ------------------------------------------------------------------------ r6351 | marko | 2009-12-22 11:11:18 +0200 (Tue, 22 Dec 2009) | 1 line Changed paths: M /branches/zip/handler/ha_innodb.cc branches/zip: Remove an obsolete declaration of LOCK_thread_count. ------------------------------------------------------------------------ r6352 | marko | 2009-12-22 12:33:01 +0200 (Tue, 22 Dec 2009) | 104 lines Changed paths: M /branches/zip/handler/ha_innodb.cc M /branches/zip/include/lock0lock.h M /branches/zip/include/srv0srv.h M /branches/zip/lock/lock0lock.c M /branches/zip/log/log0log.c M /branches/zip/mysql-test/innodb-autoinc.result M /branches/zip/mysql-test/innodb-autoinc.test M /branches/zip/row/row0sel.c M /branches/zip/srv/srv0srv.c M /branches/zip/srv/srv0start.c branches/zip: Merge revisions 6206:6350 from branches/5.1, except r6347, r6349, r6350 which were committed separately to both branches, and r6310, which was backported from zip to 5.1. ------------------------------------------------------------------------ r6206 | jyang | 2009-11-20 09:38:43 +0200 (Fri, 20 Nov 2009) | 3 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: Non-functional change, fix formatting. ------------------------------------------------------------------------ r6230 | sunny | 2009-11-24 23:52:43 +0200 (Tue, 24 Nov 2009) | 3 lines Changed paths: M /branches/5.1/mysql-test/innodb-autoinc.result branches/5.1: Fix autoinc failing test results. (this should be skipped when merging 5.1 into zip) ------------------------------------------------------------------------ r6231 | sunny | 2009-11-25 10:26:27 +0200 (Wed, 25 Nov 2009) | 7 lines Changed paths: M /branches/5.1/mysql-test/innodb-autoinc.result M /branches/5.1/mysql-test/innodb-autoinc.test M /branches/5.1/row/row0sel.c branches/5.1: Fix BUG#49032 - auto_increment field does not initialize to last value in InnoDB Storage Engine. We use the appropriate function to read the column value for non-integer autoinc column types, namely float and double. rb://208. Approved by Marko. ------------------------------------------------------------------------ r6232 | sunny | 2009-11-25 10:27:39 +0200 (Wed, 25 Nov 2009) | 2 lines Changed paths: M /branches/5.1/row/row0sel.c branches/5.1: This is an interim fix, fix white space errors. ------------------------------------------------------------------------ r6233 | sunny | 2009-11-25 10:28:35 +0200 (Wed, 25 Nov 2009) | 2 lines Changed paths: M /branches/5.1/include/mach0data.h M /branches/5.1/include/mach0data.ic M /branches/5.1/mysql-test/innodb-autoinc.result M /branches/5.1/mysql-test/innodb-autoinc.test M /branches/5.1/row/row0sel.c branches/5.1: This is an interim fix, fix tests and make read float/double arg const. ------------------------------------------------------------------------ r6234 | sunny | 2009-11-25 10:29:03 +0200 (Wed, 25 Nov 2009) | 2 lines Changed paths: M /branches/5.1/row/row0sel.c branches/5.1: This is an interim fix, fix whitepsace issues. ------------------------------------------------------------------------ r6235 | sunny | 2009-11-26 01:14:42 +0200 (Thu, 26 Nov 2009) | 9 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/mysql-test/innodb-autoinc.result M /branches/5.1/mysql-test/innodb-autoinc.test branches/5.1: Fix Bug#47720 - REPLACE INTO Autoincrement column with negative values. This bug is similiar to the negative autoinc filter patch from earlier, with the additional handling of filtering out the negative column values set explicitly by the user. rb://184 Approved by Heikki. ------------------------------------------------------------------------ r6242 | vasil | 2009-11-27 22:07:12 +0200 (Fri, 27 Nov 2009) | 4 lines Changed paths: M /branches/5.1/export.sh branches/5.1: Minor changes to support plugin snapshots. ------------------------------------------------------------------------ r6306 | calvin | 2009-12-14 15:12:46 +0200 (Mon, 14 Dec 2009) | 5 lines Changed paths: M /branches/5.1/mysql-test/innodb-autoinc.result M /branches/5.1/mysql-test/innodb-autoinc.test branches/5.1: fix bug#49267: innodb-autoinc.test fails on windows because of different case mode There is no change to the InnoDB code, only to fix test case by changing ""T1"" to ""t1"". ------------------------------------------------------------------------ r6324 | jyang | 2009-12-17 06:54:24 +0200 (Thu, 17 Dec 2009) | 8 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/include/lock0lock.h M /branches/5.1/include/srv0srv.h M /branches/5.1/lock/lock0lock.c M /branches/5.1/log/log0log.c M /branches/5.1/srv/srv0srv.c M /branches/5.1/srv/srv0start.c branches/5.1: Fix bug #47814 - Diagnostics are frequently not printed after a long lock wait in InnoDB. Separate out the lock wait timeout check thread from monitor information printing thread. rb://200 Approved by Marko. ------------------------------------------------------------------------ ------------------------------------------------------------------------ r6364 | marko | 2009-12-26 21:06:31 +0200 (Sat, 26 Dec 2009) | 4 lines Changed paths: M /branches/zip/ibuf/ibuf0ibuf.c branches/zip: ibuf_bitmap_get_map_page(): Define a wrapper macro that passes __FILE__, __LINE__ of the caller to buf_page_get_gen(). This will ease the diagnosis of the likes of Issue #135. ------------------------------------------------------------------------ "	67cd3302564cbb5e913b46b58e5f03a58f622f8d
----------------------------
"Backport Bug #43913  rpl_cross_version can't pass on conflicts complainig clash with --slave-load-tm The 'rpl_cross_version' fails on mysql-next-mr-bugfixing as following: mysqltest: In included file ""./include/setup_fake_relay_log.inc"": At line 80: query 'select './$_fake_filename-fake.000001\n' into dumpfile '$_fake_relay_index'' failed: 1290: The MySQL server is running with the --secure-file-priv option so it cannot execute this statement. To fix the problem by removeing the --secure-file-priv option for adapting the update of the 'setup_fake_relay_log.inc'. "	0c4e5f784b191222c871711286f90651e33da046
----------------------------
"Change RPM file naming: - Suffix like ""-m2"", ""-rc"" becomes part of version as ""_m2"", ""_rc"". - Release counts from 1, not 0. This is done for both the ""generic"" RPMs and the ""shared-compat"" ones. It includes introducing a new version variable ""MYSQL_U_SCORE_VERSION"" in ""configure.in"", where the dash is replaced by an underscore: 5.5.1-m2   ->  5.5.1_m2 "	a10699754f41c08cdf9564eea817e183952b1891
----------------------------
Merge: 5eed2ac ff82bc7 Merge 7.0-ndb_configure -> 7.0 	0dc086f9cd72a47cfe914ea2415992811e7557aa
----------------------------
"Bug #48878	""Embedded"" tests fail due to an unknown variable ""shared-memory-base-name"" - Remove the special hacks for 'shared-memory-base-name"" and  instead use the loose prefix to allow some programs on some platforms in some configurations not to accept the parameter. - If there is a need to check that the product has ben compiled with a specific paramater that can be done by a .test file and not in the test runner. "	621ee9885d1f7eba291639b3c68dc633cc86006b
----------------------------
ndb - Move config/ac-macros/ha_ndbcluster.m4 to storage/ndb/ where everything belonging to ndb should be kept. 	ff82bc70895265eb358e94b57985d3fa378554b9
----------------------------
"WL#4738 streamline/simplify @@variable creation process Bug#16565 mysqld --help --verbose does not order variablesBug#20413 sql_slave_skip_counter is not shown in show variables Bug#20415 Output of mysqld --help --verbose is incomplete Bug#25430 variable not found in SELECT @@global.ft_max_word_len; Bug#32902 plugin variables don't know their names Bug#34599 MySQLD Option and Variable Reference need to be consistent in formatting! Bug#34829 No default value for variable and setting default does not raise error Bug#34834 ? Is accepted as a valid sql mode Bug#34878 Few variables have default value according to documentation but error occurs Bug#34883 ft_boolean_syntax cant be assigned from user variable to global var. Bug#37187 `INFORMATION_SCHEMA`.`GLOBAL_VARIABLES`: inconsistent status Bug#40988 log_output_basic.test succeeded though syntactically false. Bug#41010 enum-style command-line options are not honoured (maria.maria-recover fails) Bug#42103 Setting key_buffer_size to a negative value may lead to very large allocations Bug#44691 Some plugins configured as MYSQL_PLUGIN_MANDATORY in can be disabled Bug#44797 plugins w/o command-line options have no disabling option in --help Bug#46314 string system variables don't support expressions Bug#46470 sys_vars.max_binlog_cache_size_basic_32 is broken Bug#46586 When using the plugin interface the type ""set"" for options caused a crash. Bug#47212 Crash in DBUG_PRINT in mysqltest.cc when trying to print octal number Bug#48758 mysqltest crashes on sys_vars.collation_server_basic in gcov builds Bug#49417 some complaints about mysqld --help --verbose output Bug#49540 DEFAULT value of binlog_format isn't the default value Bug#49640 ambiguous option '--skip-skip-myisam' (double skip prefix) Bug#49644 init_connect and \0 Bug#49645 init_slave and multi-byte characters Bug#49646 mysql --show-warnings crashes when server dies "	ae2768ce9c7df45ec88ba49bf149985bf7c9308d
----------------------------
Bug#43005 main.init_connect fails on Windows due to wrong quoting of args - The arguments are properly quoted when mtr.pl calls my_safe_process but unfortunately the all off when running with active state perl and stays in cygwin perl. - Extend the patch to only quote args that are not already quoted 	f8c38500ed439331b4496e8da3243a1557b6bddd
----------------------------
Bug#49807 2nd management node refuses to start when 1st mgmd and data nodes are running - reset any dynamic ports in the config fetched from other mgmd before using it. 	ea7b10609d8e25d45231094aae150bde543c8253
----------------------------
Merge: 1ae7130 d05c63f Manual merge from mysql-trunk-merge (configure.in). 	45222a117dcc9f358bf217646f292a8cae5b9ad0
----------------------------
Fix for Bug#37408 - Compressed MyISAM files should not require/use mmap() When compressed myisam files are opened, they are always memory mapped sometimes causing memory swapping problems. When we mmap the myisam compressed tables of size greater than the memory available, the kswapd0 process utilization is very high consuming 30-40% of the cpu. This happens only with linux kernels older than 2.6.9 With newer linux kernels, we don't have this problem of high cpu consumption and this option may not be required. The option 'myisam_mmap_size' is added to limit the amount of memory used for memory mapping of myisam files. This option is not dynamic. The default value on 32 bit system is 4294967295 bytes and on 64 bit system it is 18446744073709547520 bytes. Note: Testcase only tests the option variable. The actual bug has be to tested manually. 	801deedcf265bd3fe90e45c93b37133b68a19ba9
----------------------------
Backporting a patch for Bug#49170 (Inconsistent placement of semisync plugin prevents it from getting tested) from mysql-next-mr-bugfixing to mysql-trunk-bugfixing. Original revision: ------------------------------------------------------------ revision-id: zhenxing.he@sun.com-20091204014339-2m06r42vajhm9vke committer: He Zhenxing <zhenxing.he@sun.com> branch nick: 5.1-rep-semisync timestamp: Fri 2009-12-04 09:43:39 +0800 message: Bug#49170 Inconsistent placement of semisync plugin prevents it from getting tested Add $basedir/lib/plugin to the search paths for semisync plugins. ------------------------------------------------------------ 	7688c7369c8d164f6985860aeb14e5fe6645b592
----------------------------
ndb - remove 3200 warnings from ConfigInfo, by being more type unsafe and obscure 	e903d93d0909fe08a93c660c669db233b0b20b7b
----------------------------
"bug#49536 - deadlock on rotate_and_purge when using expire_logs_days Problem is that purge_logs implementation in ndb (ndbcluster_binlog_index_purge_file) calls mysql_parse (with (thd->options & OPTION_BIN_LOG) === 0)) but MYSQL_BIN_LOG first takes LOCK_log and then checks thd->options Solution in this patch, changes so that rotate_and_purge does not hold LOCK_log when calling purge_logs_before_date. I think this is safe as other ""purge""-function(s) is called wo/ holding LOCK_log, e.g purge_master_logs "	e76d96c4adddd1ab2868339b82abb49ba7e17cda
----------------------------
WL#5151: Conversion between different types when replicating Row-based replication requires the types of columns on the master and slave to be approximately the same (some safe conversions between strings are allowed), but does not allow safe conversions between fields of similar types such as TINYINT and INT. This patch implement type conversions between similar fields on the master and slave. The conversions are controlled using a new variable SLAVE_TYPE_CONVERSIONS of type SET('ALL_LOSSY','ALL_NON_LOSSY'). Non-lossy conversions are any conversions that do not run the risk of losing any information, while lossy conversions can potentially truncate the value. The column definitions are checked to decide if the conversion is acceptable. If neither conversion is enabled, it is required that the definitions of the columns are identical on master and slave. Conversion is done by creating an internal conversion table, unpacking the master data into it, and then copy the data to the real table on the slave. 	c63df11f375dc5f7eb461c2955ce04ca42aa1e8c
----------------------------
bug#49536 - deadlock on rotate_and_purge when using expire_logs_days Problem is that purge_logs implementation in ndb (ndbcluster_binlog_index_purge_file) calls mysql_parse (with (thd->options & OPTION_BIN_LOG) === 0)) but MYSQL_BIN_LOG first takes LOCK_log and then checks thd->options Solution in this patch, changes so that rotate_and_purge does not hold LOCK_log when calling purge_logs_before_date. 	739a56d3e582bfd10db8528cb6478f4369822234
----------------------------
WL#5092: Fix so that binlog_row_image works with session value in delayed thread. Minor changes in the sanity test case. 	8fada28217d031781d8c07a43c1c9e5a866ec82e
----------------------------
Bug#41425 Assertion in Protocol::end_statement() (pushbuild2) (diagnostics_area) Execution of CREATE TABLE ... SELECT statement was not atomic in the sense that concurrent statements trying to affect its target table might have sneaked in between the moment when the table was created and moment when it was filled according to SELECT clause. This resulted in inconsistent binary log, unexpected target table contents. In cases when concurrent statement was a DDL statement CREATE TABLE ... SELECT might have failed with ER_CANT_LOCK error. In more detail: Due to premature metadata lock downgrade which occured after CREATE TABLE SELECT statement created table but before it managed to obtain table-level lock on it other statements were allowed to open, lock and change target table in the middle of CREATE TABLE SELECT execution. This also meant that it was possible that CREATE TABLE SELECT would wait in mysql_lock_tables() when it was called for newly created table and that this wait could have been aborted by concurrent DDL. The latter led to execution of unexpected branch of code and CREATE TABLE SELECT ending with ER_CANT_LOCK error. The premature downgrade occured because open_table(), which was called for newly created table, decided that it is OK to downgrade metadata lock from exclusive to shared since table exists, even although it was not acquired within this call. This fix ensures that open_table() does not downgrade metadata lock if it is not acquired during its current invocation. Testing: The bug is exposed in a race condition, and is thus difficult to expose in a standard mysql-test-run test case.  Instead, a stress test using the Random Query Generator (https://launchpad.net/randgen) will trip the problem occasionally. % perl  runall.pl \ --basedir=<build dir> \ --mysqld=--table-lock-wait-timeout=5 \ --mysqld=--skip-safemalloc \ --grammar=conf/maria_bulk_insert.yy \ --reporters=ErrorLog,Backtrace,WinPackage \ --mysqld=--log-output=file  \ --queries=100000 \ --threads=10 \ --engine=myisam Note: You will need a debug build to expose the bug When the bug is tripped, the server will abort and dump core. Backport from 6.0-codebase   (revid: 2617.53.4) 	323f20eaef320b4d0c27620eb178cdc68e7a8afc
----------------------------
"Backport of: ------------------------------------------------------------ revno: 2617.68.10 committer: Dmitry Lenev <dlenev@mysql.com> branch nick: mysql-next-bg46673 timestamp: Tue 2009-09-01 19:57:05 +0400 message: Fix for bug #46673 ""Deadlock between FLUSH TABLES WITH READ LOCK and DML"". Deadlocks occured when one concurrently executed transactions with several statements modifying data and FLUSH TABLES WITH READ LOCK statement or SET READ_ONLY=1 statement. These deadlocks were introduced by the patch for WL 4284: ""Transactional DDL locking""/Bug 989: ""If DROP TABLE while there's an active transaction, wrong binlog order"" which has changed FLUSH TABLES WITH READ LOCK/SET READ_ONLY=1 to wait for pending transactions. What happened was that FLUSH TABLES WITH READ LOCK blocked all further statements changing tables by setting global_read_lock global variable and has started waiting for all pending transactions to complete. Then one of those transactions tried to executed DML, detected that global_read_lock non-zero and tried to wait until global read lock will be released (i.e. global_read_lock becomes 0), indeed, this led to a deadlock. Proper solution for this problem should probably involve full integration of global read lock with metadata locking subsystem (which will allow to implement waiting for pending transactions without blocking DML in them). But since it requires significant changes another, short-term solution for the problem is implemented in this patch. Basically, this patch restores behavior of FLUSH TABLES WITH READ LOCK/ SET READ_ONLY=1 before the patch for WL 4284/bug 989. By ensuring that extra references to TABLE_SHARE are not stored for active metadata locks it changes these statements not to wait for pending transactions. As result deadlock is eliminated. Note that this does not change the fact that active FLUSH TABLES WITH READ LOCK lock or SET READ_ONLY=1 prevent modifications to tables as they also block transaction commits. "	2c538778957b81ea70de57501eee61403c284e91
----------------------------
Use CMAKE_CFG_INTDIR instead of different MSVC and Xcode specific configuration names 	962d3fb94af144c716fd84d953ee324cca915ae4
----------------------------
"Backport of revno: 2617.65.1 Bug #22876 Four-way deadlock This bug was fixed as a part of Bug#989 ""If DROP TABLE while there's an active transaction, wrong binlog order"" A statement which would have caused circular wait will now be aborted with ER_LOCK_DEADLOCK. Test case based on bug description added to innodb_mysql_lock.test. Note that innodb_lock_wait_timeout is set to 5 mins to prevent race conditions in the test. "	502b4ea47f2d1bdc96c34ce77ce6d25d3df9e1dc
----------------------------
ndb - allow ndbd to connect to 63 ndb_mgmd, by not asserting if CFG_SYS_CONFIG_GENERATION is not found 	325a9e4bd1906cf5de4280e4b4e54e0866ebfc2a
----------------------------
ndb - bug#49515 - be careful in ndbcluster_binlog_wait, as THD might be null is called from signal handler 	c51f2b12cd964e40b76a30e6d8057ba89d6af1c2
----------------------------
fix small stuff in mysql_config 	8c09ac87b28b8ba9b28b5e51a7b07f7e2f8834b2
----------------------------
remove mtmalloc from configure.in 	45ca0a309386dfeeaec54b8455b771f7396f9b48
----------------------------
BUG#45292 orphan binary log created when starting server twice This patch fixes three bugs as follows. First, aborting the server while purging binary logs might generate orphan files due to how the purge operation was implemented: (purge routine - sql/log.cc - MYSQL_BIN_LOG::purge_logs) 1 - register the files to be removed in a temporary buffer. 2 - update the log-bin.index. 3 - flush the log-bin.index. 4 - erase the files whose names where register in the temporary buffer in step 1. Thus a failure while  executing step 4 would generate an orphan file. Second, a similar issue might happen while creating a new binary as follows: (create routine - sql/log.cc - MYSQL_BIN_LOG::open) 1 - open the new log-bin. 2 - update the log-bin.index. Thus a failure while executing step 1 would generate an orphan file. To fix these issues, we record the files to be purged or created before really removing or adding them. So if a failure happens such records can be used to automatically remove dangling files. The new steps might be outlined as follows: (purge routine - sql/log.cc - MYSQL_BIN_LOG::purge_logs) 1 - register the files to be removed in the log-bin.~rec~ placed in the data directory. 2 - update the log-bin.index. 3 - flush the log-bin.index. 4 - delete the log-bin.~rec~. (create routine - sql/log.cc - MYSQL_BIN_LOG::open) 1 - register the file to be created in the log-bin.~rec~ placed in the data directory. 2 - open the new log-bin. 3 - update the log-bin.index. 4 - delete the log-bin.~rec~. (recovery routine - sql/log.cc - MYSQL_BIN_LOG::open_index_file) 1 - open the log-bin.index. 2 - open the log-bin.~rec~. 3 - for each file in log-bin.~rec~. 3.1 Check if the file is in the log-bin.index and if so ignore it. 3.2 Otherwise, delete it. The third issue can be described as follows. The purge operation was allowing to remove a file in use thus leading to the loss of data and possible inconsistencies between the master and slave. Roughly, the routine was only taking into account the dump threads and so if a slave was not connect the file might be delete even though it was in use. 	e362e9a71bf311e6d241e60fafc04adcf6bb756d
----------------------------
Bug#49020 Semi-sync master crashed with free_pool == NULL, assertion `free_pool_' Before this patch, semisync assumed transactions running in parallel can not be larger than max_connections, but this is not true when the event scheduler is executing events, and cause semisync run out of preallocated transaction nodes. Fix the problem by allocating transaction nodes dynamically. This patch also fixed a possible deadlock when running UNINSTALL PLUGIN rpl_semi_sync_master and updating in parallel. Fixed by releasing the internal Delegate lock before unlock the plugins. 	16ec25c0a8438473d2273722de37ade855615ea4
----------------------------
Bug#49170 Inconsistent placement of semisync plugin prevents it from getting tested Add $basedir/lib/plugin to the search paths for semisync plugins. 	4ea0296e43cb712cf8913962bfc370bc1520141d
----------------------------
"Applying InnoDB Plugin 1.0.6 snapshot, part 9. Fixes BUG#48526, BUG#48317 applied revisions: r6197, r6198, r6199 r6197 - BUG#48317 r6199 - BUG#48526 Detailed revision comments: r6197 | calvin | 2009-11-19 09:32:55 +0200 (Thu, 19 Nov 2009) | 6 lines branches/zip: merge the fix of bug#48317 (CMake file) Due to MySQL changes to the CMake, it is no longer able to build InnoDB plugin as a static library on Windows. The fix is proposed by Vlad of MySQL. r6198 | vasil | 2009-11-19 09:44:31 +0200 (Thu, 19 Nov 2009) | 4 lines branches/zip: Add ChangeLog entry for r6197. r6199 | vasil | 2009-11-19 12:10:12 +0200 (Thu, 19 Nov 2009) | 31 lines branches/zip: Merge r6159:6198 from branches/5.1: ------------------------------------------------------------------------ r6187 | jyang | 2009-11-18 05:27:30 +0200 (Wed, 18 Nov 2009) | 9 lines Changed paths: M /branches/5.1/btr/btr0btr.c branches/5.1: Fix bug #48469 ""when innodb tablespace is configured too small, crash and corruption!"". Function btr_create() did not check the return status of fseg_create(), and continue the index creation even there is no sufficient space. rb://205 Approved by Marko ------------------------------------------------------------------------ r6188 | jyang | 2009-11-18 07:14:23 +0200 (Wed, 18 Nov 2009) | 8 lines Changed paths: M /branches/5.1/data/data0type.c branches/5.1: Fix bug #48526 ""Data type for float and double is incorrectly reported in InnoDB table monitor"". Certain datatypes are not printed correctly in dtype_print(). rb://204 Approved by Marko. ------------------------------------------------------------------------ "	f35e3c0aab44e48dbd0ecfb8488549f8f18fd2a7
----------------------------
"Applying InnoDB Plugin 1.0.6 snapshot, part 7 Fixes several test cases. applied revisions: r6181, r6182, r6183, r6184 r6183 - changes are made only to tests in innodb suite which is only innodb-consistent-master.opt Detailed revision comments: r6181 | vasil | 2009-11-17 12:21:41 +0200 (Tue, 17 Nov 2009) | 33 lines branches/zip: At the end of innodb-index.test: restore the environment as it was before the test was started to silence this warning: MTR's internal check of the test case 'main.innodb-index' failed. This means that the test case does not preserve the state that existed before the test case was executed.  Most likely the test case did not do a proper clean-up. This is the diff of the states of the servers before and after the test case was executed: mysqltest: Logging to '/tmp/autotest.sh-20091117_033000-zip.btyZwu/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.log'. mysqltest: Results saved in '/tmp/autotest.sh-20091117_033000-zip.btyZwu/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.result'. mysqltest: Connecting to server localhost:13000 (socket /tmp/autotest.sh-20091117_033000-zip.btyZwu/mysql-5.1/mysql-test/var/tmp/mysqld.1.sock) as 'root', connection 'default', attempt 0 ... mysqltest: ... Connected. mysqltest: Start processing test commands from './include/check-testcase.test' ... mysqltest: ... Done processing test commands. --- /tmp/autotest.sh-20091117_033000-zip.btyZwu/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.result	2009-11-17 13:10:40.000000000 +0300 +++ /tmp/autotest.sh-20091117_033000-zip.btyZwu/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.reject	2009-11-17 13:10:54.000000000 +0300 @@ -84,7 +84,7 @@ INNODB_DOUBLEWRITE	ON INNODB_FAST_SHUTDOWN	1 INNODB_FILE_FORMAT	Antelope -INNODB_FILE_FORMAT_CHECK	Antelope +INNODB_FILE_FORMAT_CHECK	Barracuda INNODB_FILE_PER_TABLE	OFF INNODB_FLUSH_LOG_AT_TRX_COMMIT	1 INNODB_FLUSH_METHOD mysqltest: Result content mismatch not ok r6182 | marko | 2009-11-17 13:49:15 +0200 (Tue, 17 Nov 2009) | 1 line branches/zip: Set svn:eol-style on mysql-test files. r6183 | marko | 2009-11-17 13:51:16 +0200 (Tue, 17 Nov 2009) | 1 line branches/zip: Prepend loose_ to plugin-only mysql-test options. r6184 | marko | 2009-11-17 13:52:01 +0200 (Tue, 17 Nov 2009) | 1 line branches/zip: innodb-index.test: Restore innodb_file_format_check. "	072e2bb4db0c3998f3b0527b3fb75e984ef8f403
----------------------------
Applying InnoDB Plugin 1.0.6 snapshot, part 4. Fixes BUG#3139 applied revisions: r6160 Detailed revision comments: r6160 | vasil | 2009-11-11 15:33:49 +0200 (Wed, 11 Nov 2009) | 72 lines branches/zip: Merge r6152:6159 from branches/5.1: (r6158 was skipped as an equivallent change has already been merged from MySQL) ------------------------------------------------------------------------ r6154 | calvin | 2009-11-11 02:51:17 +0200 (Wed, 11 Nov 2009) | 17 lines Changed paths: M /branches/5.1/include/os0file.h M /branches/5.1/os/os0file.c branches/5.1: fix bug#3139: Mysql crashes: 'windows error 995' after several selects on a large DB During stress environment, Windows AIO may fail with error code ERROR_OPERATION_ABORTED. InnoDB does not handle the error, rather crashes. The cause of the error is unknown, but likely due to faulty hardware or driver. This patch introduces a new error code OS_FILE_OPERATION_ABORTED, which maps to Windows ERROR_OPERATION_ABORTED (995). When the error is detected during AIO, the InnoDB will issue a synchronous retry (read/write). This patch has been extensively tested by MySQL support. Approved by: Marko rb://196 ------------------------------------------------------------------------ r6158 | vasil | 2009-11-11 14:52:14 +0200 (Wed, 11 Nov 2009) | 37 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/handler/ha_innodb.h branches/5.1: Merge a change from MySQL: (this has been reviewed by Calvin and Marko, and Calvin says Luis has incorporated Marko's suggestions) ------------------------------------------------------------ revno: 3092.5.1 committer: Luis Soares <luis.soares@sun.com> branch nick: mysql-5.1-bugteam timestamp: Thu 2009-09-24 15:52:52 +0100 message: BUG#42829: binlogging enabled for all schemas regardless of binlog-db-db / binlog-ignore-db InnoDB will return an error if statement based replication is used along with transaction isolation level READ-COMMITTED (or weaker), even if the statement in question is filtered out according to the binlog-do-db rules set. In this case, an error should not be printed. This patch addresses this issue by extending the existing check in external_lock to take into account the filter rules before deciding to print an error. Furthermore, it also changes decide_logging_format to take into consideration whether the statement is filtered out from binlog before decision is made. added: mysql-test/suite/binlog/r/binlog_stm_do_db.result mysql-test/suite/binlog/t/binlog_stm_do_db-master.opt mysql-test/suite/binlog/t/binlog_stm_do_db.test modified: sql/sql_base.cc sql/sql_class.cc storage/innobase/handler/ha_innodb.cc storage/innobase/handler/ha_innodb.h storage/innodb_plugin/handler/ha_innodb.cc storage/innodb_plugin/handler/ha_innodb.h ------------------------------------------------------------------------ 	457291482525a7b0ae80ed0e602723581925a027
----------------------------
"Applying InnoDB Plugin 1.0.6 snapshot, part 3. Fixes BUG#47167 applied revisions: r6157 Detailed revision comments: r6157 | jyang | 2009-11-11 14:27:09 +0200 (Wed, 11 Nov 2009) | 10 lines branches/zip: Fix an issue that a local variable defined in innodb_file_format_check_validate() is being referenced across function in innodb_file_format_check_update(). In addition, fix ""set global innodb_file_format_check = DEFAULT"" call. Bug #47167: ""set global innodb_file_format_check"" cannot set value by User-Defined Variable."" rb://169 approved by Sunny Bains and Marko. "	dded7cf8c8e27051cb9e46d41569e1030952689c
----------------------------
Applying InnoDB Plugin 1.0.6 snapshot, part 2. Fixes BUG#32430 Enable partition_innodb_plugin.test for BUG#32430 applied revisions: r6134, r6137, r6153 Detailed revision comments: r6134 | marko | 2009-11-04 09:57:29 +0200 (Wed, 04 Nov 2009) | 5 lines branches/zip: innobase_convert_identifier(): Convert table names with explain_filename() to address Bug #32430: 'show innodb status' causes errors Invalid (old?) table or database name in logs. rb://134 approved by Sunny Bains r6137 | marko | 2009-11-04 15:24:28 +0200 (Wed, 04 Nov 2009) | 1 line branches/zip: dict_index_too_big_for_undo(): Correct a typo. r6153 | vasil | 2009-11-10 15:33:22 +0200 (Tue, 10 Nov 2009) | 145 lines branches/zip: Merge r6125:6152 from branches/5.1: (everything except the last white-space change was skipped as it is already in branches/zip) ------------------------------------------------------------------------ r6127 | vasil | 2009-10-30 11:18:25 +0200 (Fri, 30 Oct 2009) | 18 lines Changed paths: M /branches/5.1/Makefile.am M /branches/5.1/mysql-test/innodb-autoinc.result M /branches/5.1/mysql-test/innodb-autoinc.test branches/5.1: Backport c6121 from branches/zip: ------------------------------------------------------------------------ r6121 | sunny | 2009-10-30 01:42:11 +0200 (Fri, 30 Oct 2009) | 7 lines Changed paths: M /branches/zip/mysql-test/innodb-autoinc.result branches/zip: This test has been problematic for sometime now. The underlying bug is that the data dictionaries get out of sync. In the AUTOINC code we try and apply salve to the symptoms. In the past MySQL made some unrelated change and the dictionaries stopped getting out of sync and this test started to fail. Now, it seems they have reverted that changed and the test is passing again. I suspect this is not he last time that this test will change. ------------------------------------------------------------------------ ------------------------------------------------------------------------ r6129 | vasil | 2009-10-30 17:14:22 +0200 (Fri, 30 Oct 2009) | 4 lines Changed paths: M /branches/5.1/Makefile.am branches/5.1: Revert a change to Makefile.am that sneaked unnoticed in c6127. ------------------------------------------------------------------------ r6136 | marko | 2009-11-04 12:28:10 +0200 (Wed, 04 Nov 2009) | 15 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/include/ha_prototypes.h M /branches/5.1/ut/ut0ut.c branches/5.1: Port r6134 from branches/zip: ------------------------------------------------------------------------ r6134 | marko | 2009-11-04 07:57:29 +0000 (Wed, 04 Nov 2009) | 5 lines branches/zip: innobase_convert_identifier(): Convert table names with explain_filename() to address Bug #32430: 'show innodb status' causes errors Invalid (old?) table or database name in logs. rb://134 approved by Sunny Bains ------------------------------------------------------------------------ innobase_print_identifier(): Replace with innobase_convert_name(). innobase_convert_identifier(): New function, called by innobase_convert_name(). ------------------------------------------------------------------------ r6149 | vasil | 2009-11-09 11:15:01 +0200 (Mon, 09 Nov 2009) | 5 lines Changed paths: M /branches/5.1/CMakeLists.txt branches/5.1: Followup to r5700: Adjust the changes so they are the same as in the BZR repository. ------------------------------------------------------------------------ r6150 | vasil | 2009-11-09 11:43:31 +0200 (Mon, 09 Nov 2009) | 58 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: Merge a part of r2911.5.5 from MySQL: (the other part of this was merged in c5700) ------------------------------------------------------------ revno: 2911.5.5 committer: Vladislav Vaintroub <vvaintroub@mysql.com> branch nick: 5.1-innodb_plugin timestamp: Wed 2009-06-10 10:59:49 +0200 message: Backport WL#3653 to 5.1 to enable bundled innodb plugin. Remove custom DLL loader code from innodb plugin code, use symbols exported from mysqld. removed: storage/innodb_plugin/handler/handler0vars.h storage/innodb_plugin/handler/win_delay_loader.cc added: storage/mysql_storage_engine.cmake win/create_def_file.js modified: CMakeLists.txt include/m_ctype.h include/my_global.h include/my_sys.h include/mysql/plugin.h libmysqld/CMakeLists.txt mysql-test/mysql-test-run.pl mysql-test/t/plugin.test mysql-test/t/plugin_load-master.opt mysys/charset.c sql/CMakeLists.txt sql/handler.h sql/mysql_priv.h sql/mysqld.cc sql/sql_class.cc sql/sql_class.h sql/sql_list.h sql/sql_profile.h storage/Makefile.am storage/archive/CMakeLists.txt storage/blackhole/CMakeLists.txt storage/csv/CMakeLists.txt storage/example/CMakeLists.txt storage/federated/CMakeLists.txt storage/heap/CMakeLists.txt storage/innobase/CMakeLists.txt storage/innobase/handler/ha_innodb.cc storage/innodb_plugin/CMakeLists.txt storage/innodb_plugin/handler/ha_innodb.cc storage/innodb_plugin/handler/handler0alter.cc storage/innodb_plugin/handler/i_s.cc storage/innodb_plugin/plug.in storage/myisam/CMakeLists.txt storage/myisammrg/CMakeLists.txt win/Makefile.am win/configure.js ------------------------------------------------------------------------ r6152 | vasil | 2009-11-10 15:30:20 +0200 (Tue, 10 Nov 2009) | 4 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: White space fixup. ------------------------------------------------------------------------ 	20bec594f1c22fd07cd8604f01bce93ea8601bfe
----------------------------
"Applying InnoDB snapshot 5.1-ss6242, part 3. Fixes BUG#48469 1. BUG#4869 - when innodb tablespace is configured too small, crash and corruption! Detailed revision comments: r6187 | jyang | 2009-11-18 05:27:30 +0200 (Wed, 18 Nov 2009) | 9 lines branches/5.1: Fix bug #48469 ""when innodb tablespace is configured too small, crash and corruption!"". Function btr_create() did not check the return status of fseg_create(), and continue the index creation even there is no sufficient space. rb://205 Approved by Marko r6200 | vasil | 2009-11-19 12:14:23 +0200 (Thu, 19 Nov 2009) | 4 lines branches/5.1: White space fixup - indent under the opening ( r6203 | jyang | 2009-11-19 15:12:22 +0200 (Thu, 19 Nov 2009) | 8 lines branches/5.1: Use btr_free_root() instead of fseg_free() for the fix of bug #48469, because fseg_free() is not defined in the zip branch. And we could save one mini-trasaction started by fseg_free(). Approved by Marko. "	f452f1271fd2e13560a289a4975c5f5610e7d9fa
----------------------------
Delay configuring scripts like mysql_install_db until CPack runs (to handle DESTDIR correctly) 	dba1a7ccd91621432f51d4663ce450e5dc1af1ff
----------------------------
"Bug#48878      ""Embedded"" tests fail due to an unknown variable ""shared-memory-base-name"" the 'shared-memory-base-name' was added to the [client] section of the my.cnf file. That option isn't supported by the mysqltest_embedded. per-file comments: mysql-test/lib/My/ConfigFactory.pm "	a07d7da4e73cf514ae5c51b6aef09769a78ef143
----------------------------
"branches/zip: Merge r6159:6198 from branches/5.1: ------------------------------------------------------------------------ r6187 | jyang | 2009-11-18 05:27:30 +0200 (Wed, 18 Nov 2009) | 9 lines Changed paths: M /branches/5.1/btr/btr0btr.c branches/5.1: Fix bug #48469 ""when innodb tablespace is configured too small, crash and corruption!"". Function btr_create() did not check the return status of fseg_create(), and continue the index creation even there is no sufficient space. rb://205 Approved by Marko ------------------------------------------------------------------------ r6188 | jyang | 2009-11-18 07:14:23 +0200 (Wed, 18 Nov 2009) | 8 lines Changed paths: M /branches/5.1/data/data0type.c branches/5.1: Fix bug #48526 ""Data type for float and double is incorrectly reported in InnoDB table monitor"". Certain datatypes are not printed correctly in dtype_print(). rb://204 Approved by Marko. ------------------------------------------------------------------------ "	bc66ae8cc66ea69b2928facaed0f0f43a78571f6
----------------------------
"Backport of the fix for BUG#40368 ""mysqld_safe not honouring underscore same as dash on server options"" from 6.0 (revision-id:guilhem@mysql.com-20090505113602-l12kxupeatve18dh). Such bug led ""mysqld_safe --core_file_size=#"" to not work because mysqld_safe wouldn't recognize that ""ulimit -c"" is needed; only --core-file-size=# worked. Same for --open_files_limit and other options with _ where mysqld_safe needs to do something more than passing to mysqld. Original fix by Erik Ljungstrom erik at ibiblio dot org ; slightly modified here. Tested on all internally accessible Unix. "	408dd52a6ad1698619fb933b62966fa8b843f859
----------------------------
"branches/5.1: Fix bug #48469 ""when innodb tablespace is configured too small, crash and corruption!"". Function btr_create() did not check the return status of fseg_create(), and continue the index creation even there is no sufficient space. rb://205 Approved by Marko "	409112e408bd13125f2346eb6f64c5ca4ae1cf01
----------------------------
ndb - build and run MgmConfig-t also on windows. 	6ec9085a3ffac6ba0bcd7866d1a2733ce8ed8062
----------------------------
Bug#48669 ndb_mgmd needs --no-wait option - part2, adds checksum to CONFIG_CHECK protocol 	48aa419f8a47cc8dbab307ebdb8abb23b6770ec0
----------------------------
Bug#48405 Allow explicit node id for mysqld with connection pooling - In the constructor of Ndb_cluster_connection in the case when it has been created _with_ a main_connection, set the nodeid to 0 for ConfigRetriever after its been created(who then parses the connectstring and extracts which nodeid to use, should any be set). Also change the constructor not to destroy ConfigRetriver if it fails to parse the connect string, that task is performed by destructor. 	77983338568ac640b2071d02eb67b35017c9a8aa
----------------------------
ndbapi - Remove the m_name variable from Ndb_cluster_connection and only set it on the mgm handle belonging to ConfigRetriever Saves space and removes extra code. 	d273d569ca4f578ac252bcd90f85284af10893fd
----------------------------
ha_ndbcluster - replace unnecessary goto's with straight return from function 	31f29f40a0f25520f1448422a16b1faea26ef918
----------------------------
branches/zip: innodb-index.test: Restore innodb_file_format_check. 	f3efc5f306b4623217bfc7d889b2ed20df2a9cb0
----------------------------
"branches/zip: At the end of innodb-index.test: restore the environment as it was before the test was started to silence this warning: MTR's internal check of the test case 'main.innodb-index' failed. This means that the test case does not preserve the state that existed before the test case was executed.  Most likely the test case did not do a proper clean-up. This is the diff of the states of the servers before and after the test case was executed: mysqltest: Logging to '/tmp/autotest.sh-20091117_033000-zip.btyZwu/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.log'. mysqltest: Results saved in '/tmp/autotest.sh-20091117_033000-zip.btyZwu/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.result'. mysqltest: Connecting to server localhost:13000 (socket /tmp/autotest.sh-20091117_033000-zip.btyZwu/mysql-5.1/mysql-test/var/tmp/mysqld.1.sock) as 'root', connection 'default', attempt 0 ... mysqltest: ... Connected. mysqltest: Start processing test commands from './include/check-testcase.test' ... mysqltest: ... Done processing test commands. --- /tmp/autotest.sh-20091117_033000-zip.btyZwu/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.result	2009-11-17 13:10:40.000000000 +0300 +++ /tmp/autotest.sh-20091117_033000-zip.btyZwu/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.reject	2009-11-17 13:10:54.000000000 +0300 @@ -84,7 +84,7 @@ INNODB_DOUBLEWRITE	ON INNODB_FAST_SHUTDOWN	1 INNODB_FILE_FORMAT	Antelope -INNODB_FILE_FORMAT_CHECK	Antelope +INNODB_FILE_FORMAT_CHECK	Barracuda INNODB_FILE_PER_TABLE	OFF INNODB_FLUSH_LOG_AT_TRX_COMMIT	1 INNODB_FLUSH_METHOD mysqltest: Result content mismatch not ok "	b0ed43b0a4f17aebb97a429a8492e2716de892b9
----------------------------
Support out of source build with the wrapper configure.pl script 	c982aaa38c3ebbc63f641bafc34a9229a6aae36a
----------------------------
- Fixed issue with coredump when multiple scans was pushed. (::releaseCompletedQueries() should not release unclosed scans) - removed is_pushable() from sql_select() - depend on make_pushed_join() instead() - removed obsolete handler:isNdb(). - Removed some previously added DBUG_PRINT(), added some other. - Changed ownership of m_pushed_join from JOIN_TAB to ha_ndbcluster. 	9c5da2a9d4e39bb8a1da57de7b8fa90634769c52
----------------------------
fix tree name in bzr config file 	1b2fe5f257d8505463a8631fb1e76962f30a89b1
----------------------------
Bug#48669 ndb_mgmd needs --no-wait option - Add --nowait-nodes option to ndb_mgmd and exclude the given nodes from the config change protocol during startup. As soon as one configuration change has been performed, all ndb_mgmd's are waited for again. - Add testcase in testMgmd 	5ee345725e0dd4578901553c922c0b11492b2258
----------------------------
BUG#48738: Backport patch for Bug 34582 to 5.0 codebase. From BUG 34582 commit message: Issuing 'FLUSH LOGS' does not close and reopen indexfile. Instead a SEEK_SET is performed. This patch makes index file to be closed and reopened whenever a rotation happens (FLUSH LOGS is issued or binary log exceeds maximum configured size). 	fe40b1721af2e2bdb4f9eb275deda96212147136
----------------------------
ndbinfo - add all tables for first version - add views for all public tables - add utility tables for mapping blocks and config params - Rewrite counters in TC and LQH to be monotonic but still allow differential report to be sent with regular interval 	8cabc5dbf05a0fb9551f613a22238bc55386f23b
----------------------------
branches/zip: Merge r6152:6159 from branches/5.1: (r6158 was skipped as an equivallent change has already been merged from MySQL) ------------------------------------------------------------------------ r6154 | calvin | 2009-11-11 02:51:17 +0200 (Wed, 11 Nov 2009) | 17 lines Changed paths: M /branches/5.1/include/os0file.h M /branches/5.1/os/os0file.c branches/5.1: fix bug#3139: Mysql crashes: 'windows error 995' after several selects on a large DB During stress environment, Windows AIO may fail with error code ERROR_OPERATION_ABORTED. InnoDB does not handle the error, rather crashes. The cause of the error is unknown, but likely due to faulty hardware or driver. This patch introduces a new error code OS_FILE_OPERATION_ABORTED, which maps to Windows ERROR_OPERATION_ABORTED (995). When the error is detected during AIO, the InnoDB will issue a synchronous retry (read/write). This patch has been extensively tested by MySQL support. Approved by: Marko rb://196 ------------------------------------------------------------------------ r6158 | vasil | 2009-11-11 14:52:14 +0200 (Wed, 11 Nov 2009) | 37 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/handler/ha_innodb.h branches/5.1: Merge a change from MySQL: (this has been reviewed by Calvin and Marko, and Calvin says Luis has incorporated Marko's suggestions) ------------------------------------------------------------ revno: 3092.5.1 committer: Luis Soares <luis.soares@sun.com> branch nick: mysql-5.1-bugteam timestamp: Thu 2009-09-24 15:52:52 +0100 message: BUG#42829: binlogging enabled for all schemas regardless of binlog-db-db / binlog-ignore-db InnoDB will return an error if statement based replication is used along with transaction isolation level READ-COMMITTED (or weaker), even if the statement in question is filtered out according to the binlog-do-db rules set. In this case, an error should not be printed. This patch addresses this issue by extending the existing check in external_lock to take into account the filter rules before deciding to print an error. Furthermore, it also changes decide_logging_format to take into consideration whether the statement is filtered out from binlog before decision is made. added: mysql-test/suite/binlog/r/binlog_stm_do_db.result mysql-test/suite/binlog/t/binlog_stm_do_db-master.opt mysql-test/suite/binlog/t/binlog_stm_do_db.test modified: sql/sql_base.cc sql/sql_class.cc storage/innobase/handler/ha_innodb.cc storage/innobase/handler/ha_innodb.h storage/innodb_plugin/handler/ha_innodb.cc storage/innodb_plugin/handler/ha_innodb.h ------------------------------------------------------------------------ 	65d21143f75fd1948a3ad6c8af98dea5a912fd7e
----------------------------
branches/zip: Merge a change from MySQL: (this has been reviewed by Calvin and Marko, and Calvin says Luis has incorporated Marko's suggestions) ------------------------------------------------------------ revno: 3092.5.1 committer: Luis Soares <luis.soares@sun.com> branch nick: mysql-5.1-bugteam timestamp: Thu 2009-09-24 15:52:52 +0100 message: BUG#42829: binlogging enabled for all schemas regardless of binlog-db-db / binlog-ignore-db InnoDB will return an error if statement based replication is used along with transaction isolation level READ-COMMITTED (or weaker), even if the statement in question is filtered out according to the binlog-do-db rules set. In this case, an error should not be printed. This patch addresses this issue by extending the existing check in external_lock to take into account the filter rules before deciding to print an error. Furthermore, it also changes decide_logging_format to take into consideration whether the statement is filtered out from binlog before decision is made. added: mysql-test/suite/binlog/r/binlog_stm_do_db.result mysql-test/suite/binlog/t/binlog_stm_do_db-master.opt mysql-test/suite/binlog/t/binlog_stm_do_db.test modified: sql/sql_base.cc sql/sql_class.cc storage/innobase/handler/ha_innodb.cc storage/innobase/handler/ha_innodb.h storage/innodb_plugin/handler/ha_innodb.cc storage/innodb_plugin/handler/ha_innodb.h 	130d2029d21f2eb0ac07369b4a242b996433f534
----------------------------
branches/5.1: Merge a change from MySQL: (this has been reviewed by Calvin and Marko, and Calvin says Luis has incorporated Marko's suggestions) ------------------------------------------------------------ revno: 3092.5.1 committer: Luis Soares <luis.soares@sun.com> branch nick: mysql-5.1-bugteam timestamp: Thu 2009-09-24 15:52:52 +0100 message: BUG#42829: binlogging enabled for all schemas regardless of binlog-db-db / binlog-ignore-db InnoDB will return an error if statement based replication is used along with transaction isolation level READ-COMMITTED (or weaker), even if the statement in question is filtered out according to the binlog-do-db rules set. In this case, an error should not be printed. This patch addresses this issue by extending the existing check in external_lock to take into account the filter rules before deciding to print an error. Furthermore, it also changes decide_logging_format to take into consideration whether the statement is filtered out from binlog before decision is made. added: mysql-test/suite/binlog/r/binlog_stm_do_db.result mysql-test/suite/binlog/t/binlog_stm_do_db-master.opt mysql-test/suite/binlog/t/binlog_stm_do_db.test modified: sql/sql_base.cc sql/sql_class.cc storage/innobase/handler/ha_innodb.cc storage/innobase/handler/ha_innodb.h storage/innodb_plugin/handler/ha_innodb.cc storage/innodb_plugin/handler/ha_innodb.h 	5652676929b1af0c2ba3bd453b238504edd5ff1d
----------------------------
"branches/zip: Fix an issue that a local variable defined in innodb_file_format_check_validate() is being referenced across function in innodb_file_format_check_update(). In addition, fix ""set global innodb_file_format_check = DEFAULT"" call. Bug #47167: ""set global innodb_file_format_check"" cannot set value by User-Defined Variable."" rb://169 approved by Sunny Bains and Marko. "	dd881561a4b543368933bd7f950671345a8e0083
----------------------------
branches/zip: Merge r6125:6152 from branches/5.1: (everything except the last white-space change was skipped as it is already in branches/zip) ------------------------------------------------------------------------ r6127 | vasil | 2009-10-30 11:18:25 +0200 (Fri, 30 Oct 2009) | 18 lines Changed paths: M /branches/5.1/Makefile.am M /branches/5.1/mysql-test/innodb-autoinc.result M /branches/5.1/mysql-test/innodb-autoinc.test branches/5.1: Backport c6121 from branches/zip: ------------------------------------------------------------------------ r6121 | sunny | 2009-10-30 01:42:11 +0200 (Fri, 30 Oct 2009) | 7 lines Changed paths: M /branches/zip/mysql-test/innodb-autoinc.result branches/zip: This test has been problematic for sometime now. The underlying bug is that the data dictionaries get out of sync. In the AUTOINC code we try and apply salve to the symptoms. In the past MySQL made some unrelated change and the dictionaries stopped getting out of sync and this test started to fail. Now, it seems they have reverted that changed and the test is passing again. I suspect this is not he last time that this test will change. ------------------------------------------------------------------------ ------------------------------------------------------------------------ r6129 | vasil | 2009-10-30 17:14:22 +0200 (Fri, 30 Oct 2009) | 4 lines Changed paths: M /branches/5.1/Makefile.am branches/5.1: Revert a change to Makefile.am that sneaked unnoticed in c6127. ------------------------------------------------------------------------ r6136 | marko | 2009-11-04 12:28:10 +0200 (Wed, 04 Nov 2009) | 15 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/include/ha_prototypes.h M /branches/5.1/ut/ut0ut.c branches/5.1: Port r6134 from branches/zip: ------------------------------------------------------------------------ r6134 | marko | 2009-11-04 07:57:29 +0000 (Wed, 04 Nov 2009) | 5 lines branches/zip: innobase_convert_identifier(): Convert table names with explain_filename() to address Bug #32430: 'show innodb status' causes errors Invalid (old?) table or database name in logs. rb://134 approved by Sunny Bains ------------------------------------------------------------------------ innobase_print_identifier(): Replace with innobase_convert_name(). innobase_convert_identifier(): New function, called by innobase_convert_name(). ------------------------------------------------------------------------ r6149 | vasil | 2009-11-09 11:15:01 +0200 (Mon, 09 Nov 2009) | 5 lines Changed paths: M /branches/5.1/CMakeLists.txt branches/5.1: Followup to r5700: Adjust the changes so they are the same as in the BZR repository. ------------------------------------------------------------------------ r6150 | vasil | 2009-11-09 11:43:31 +0200 (Mon, 09 Nov 2009) | 58 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: Merge a part of r2911.5.5 from MySQL: (the other part of this was merged in c5700) ------------------------------------------------------------ revno: 2911.5.5 committer: Vladislav Vaintroub <vvaintroub@mysql.com> branch nick: 5.1-innodb_plugin timestamp: Wed 2009-06-10 10:59:49 +0200 message: Backport WL#3653 to 5.1 to enable bundled innodb plugin. Remove custom DLL loader code from innodb plugin code, use symbols exported from mysqld. removed: storage/innodb_plugin/handler/handler0vars.h storage/innodb_plugin/handler/win_delay_loader.cc added: storage/mysql_storage_engine.cmake win/create_def_file.js modified: CMakeLists.txt include/m_ctype.h include/my_global.h include/my_sys.h include/mysql/plugin.h libmysqld/CMakeLists.txt mysql-test/mysql-test-run.pl mysql-test/t/plugin.test mysql-test/t/plugin_load-master.opt mysys/charset.c sql/CMakeLists.txt sql/handler.h sql/mysql_priv.h sql/mysqld.cc sql/sql_class.cc sql/sql_class.h sql/sql_list.h sql/sql_profile.h storage/Makefile.am storage/archive/CMakeLists.txt storage/blackhole/CMakeLists.txt storage/csv/CMakeLists.txt storage/example/CMakeLists.txt storage/federated/CMakeLists.txt storage/heap/CMakeLists.txt storage/innobase/CMakeLists.txt storage/innobase/handler/ha_innodb.cc storage/innodb_plugin/CMakeLists.txt storage/innodb_plugin/handler/ha_innodb.cc storage/innodb_plugin/handler/handler0alter.cc storage/innodb_plugin/handler/i_s.cc storage/innodb_plugin/plug.in storage/myisam/CMakeLists.txt storage/myisammrg/CMakeLists.txt win/Makefile.am win/configure.js ------------------------------------------------------------------------ r6152 | vasil | 2009-11-10 15:30:20 +0200 (Tue, 10 Nov 2009) | 4 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: White space fixup. ------------------------------------------------------------------------ 	59277a500b3636e5f19846553cfcb825ec88418e
----------------------------
Extension & improvements of the SPJ - MySQL integration prototype: - Scan + n-lookups are pushed if possible. - Parent does not have to be the direct ancestor of the child. - NdbQueryDef is parametrized and reused if multiple NdbQuery instances are required - Better integratin with sql_select.cc and handler interface: - - Lots of specialised xyz_pushed methods from the first prototype has been removed. - - More of the 'pushed join' functionality is hidden inside ha_ndbcluster.cc instead of being exposed to handler.h and sql_select.cc. - - Actually *less* code changes and *more* functionality compared with main branch 	0e703ce8185bc241d0658b68dfa09be61afe2227
----------------------------
branches/5.1: Merge a part of r2911.5.5 from MySQL: (the other part of this was merged in c5700) ------------------------------------------------------------ revno: 2911.5.5 committer: Vladislav Vaintroub <vvaintroub@mysql.com> branch nick: 5.1-innodb_plugin timestamp: Wed 2009-06-10 10:59:49 +0200 message: Backport WL#3653 to 5.1 to enable bundled innodb plugin. Remove custom DLL loader code from innodb plugin code, use symbols exported from mysqld. removed: storage/innodb_plugin/handler/handler0vars.h storage/innodb_plugin/handler/win_delay_loader.cc added: storage/mysql_storage_engine.cmake win/create_def_file.js modified: CMakeLists.txt include/m_ctype.h include/my_global.h include/my_sys.h include/mysql/plugin.h libmysqld/CMakeLists.txt mysql-test/mysql-test-run.pl mysql-test/t/plugin.test mysql-test/t/plugin_load-master.opt mysys/charset.c sql/CMakeLists.txt sql/handler.h sql/mysql_priv.h sql/mysqld.cc sql/sql_class.cc sql/sql_class.h sql/sql_list.h sql/sql_profile.h storage/Makefile.am storage/archive/CMakeLists.txt storage/blackhole/CMakeLists.txt storage/csv/CMakeLists.txt storage/example/CMakeLists.txt storage/federated/CMakeLists.txt storage/heap/CMakeLists.txt storage/innobase/CMakeLists.txt storage/innobase/handler/ha_innodb.cc storage/innodb_plugin/CMakeLists.txt storage/innodb_plugin/handler/ha_innodb.cc storage/innodb_plugin/handler/handler0alter.cc storage/innodb_plugin/handler/i_s.cc storage/innodb_plugin/plug.in storage/myisam/CMakeLists.txt storage/myisammrg/CMakeLists.txt win/Makefile.am win/configure.js 	2c140ed3ed0c21a4a9d834fa530b9baee6fa8f6b
----------------------------
ha_ndbcluster - change return type of 'ndbcluster_disconnect' to void, it should never fail and return code is not used. 	13b595146bbd19f5f7e0faca5a4eb6b97e4d0316
----------------------------
ha_ndbcluster - remove unnecessary long variable name prefix from local global variables 	07322d281f63a3a3df45f53158e1b2a3a9167f4d
----------------------------
Bug #34739  unexpected binlog file name when --log-bin is set to a directory name If --log-bin is set to a directory name with the trailing 'FN_LIBCHAR', which will be '/' on Unix like systems, and '\\' on Windows like systems. the basename of the binlog is empty so that the created files named '.000001' and '.index'. It is not expected. The same thing happened to --log-bin-index, --relay-log and --relay-log-index options. To resolve the problem, in these cases the program should report an error and abort. 	8d52424326f9fea4e616c8aad5edbe632dbbdf63
----------------------------
"branches/innodb+: Merge revisions r5971:6130 from branches/zip. ------------------------------------------------------------------------ r5971 | marko | 2009-09-23 23:03:51 +1000 (Wed, 23 Sep 2009) | 2 lines branches/zip: os_file_pwrite(): Make the code compile in InnoDB Hot Backup when the pwrite system call is not available. ------------------------------------------------------------------------ r5972 | marko | 2009-09-24 05:44:52 +1000 (Thu, 24 Sep 2009) | 5 lines branches/zip: fil_node_open_file(): In InnoDB Hot Backup, determine the page size of single-file tablespaces before computing the file node size.  Otherwise, the space->size of compressed tablespaces would be computed with UNIV_PAGE_SIZE instead of key_block_size. This should fix Issue #313. ------------------------------------------------------------------------ r5973 | marko | 2009-09-24 05:53:21 +1000 (Thu, 24 Sep 2009) | 2 lines branches/zip: recv_add_to_hash_table(): Simplify obfuscated pointer arithmetics. ------------------------------------------------------------------------ r5978 | marko | 2009-09-24 17:47:56 +1000 (Thu, 24 Sep 2009) | 1 line branches/zip: Fix warnings and errors when UNIV_HOTBACKUP is defined. ------------------------------------------------------------------------ r5979 | marko | 2009-09-24 20:16:10 +1000 (Thu, 24 Sep 2009) | 4 lines branches/zip: ha_innodb.cc: Define MYSQL_PLUGIN_IMPORT when necessary. This preprocessor symbol has been recently introduced in MySQL 5.1. The InnoDB Plugin should remain source compatible with MySQL 5.1.24 and later. ------------------------------------------------------------------------ r5988 | calvin | 2009-09-26 05:14:43 +1000 (Sat, 26 Sep 2009) | 8 lines branches/zip: fix bug#47055 unconditional exit(1) on ERROR_WORKING_SET_QUOTA 1453 (0x5AD) for InnoDB backend When error ERROR_WORKING_SET_QUOTA or ERROR_NO_SYSTEM_RESOURCES occurs, yields for 100ms and retries the operation. Approved by: Heikki (on IM) ------------------------------------------------------------------------ r5992 | vasil | 2009-09-28 17:10:29 +1000 (Mon, 28 Sep 2009) | 4 lines branches/zip: Add ChangeLog entry for c5988. ------------------------------------------------------------------------ r5994 | marko | 2009-09-28 18:33:59 +1000 (Mon, 28 Sep 2009) | 17 lines branches/zip: Try to prevent the reuse of tablespace identifiers after InnoDB has crashed during table creation.  Also, refuse to start if files with duplicate tablespace identifiers are encountered. fil_node_create(): Update fil_system->max_assigned_id.  This should prevent the reuse of a space->id when InnoDB does a full crash recovery and invokes fil_load_single_table_tablespaces().  Normally, fil_system->max_assigned_id is initialized from SELECT MAX(ID) FROM SYS_TABLES. fil_open_single_table_tablespace(): Return FALSE when fil_space_create() fails. fil_load_single_table_tablespace(): Exit if fil_space_create() fails and innodb_force_recovery=0. rb://173 approved by Heikki Tuuri.  This addresses Issue #335. ------------------------------------------------------------------------ r5995 | marko | 2009-09-28 18:52:25 +1000 (Mon, 28 Sep 2009) | 17 lines branches/zip: Do not write to PAGE_INDEX_ID after page creation, not even when restoring an uncompressed page after a compression failure. btr_page_reorganize_low(): On compression failure, do not restore those page header fields that should not be affected by the reorganization.  Instead, compare the fields. page_zip_decompress(): Add the parameter ibool all, for copying all page header fields.  Pass the parameter all=TRUE on block read completion, redo log application, and page_zip_validate(); pass all=FALSE in all other cases. page_zip_reorganize(): Do not restore the uncompressed page on failure.  It will be restored (to pre-modification state) by the caller anyway. rb://167, Issue #346 ------------------------------------------------------------------------ r5996 | marko | 2009-09-28 22:46:02 +1000 (Mon, 28 Sep 2009) | 4 lines branches/zip: Address Issue #350 in comments. lock_rec_queue_validate(), lock_rec_queue_validate(): Note that this debug code may violate the latching order and cause deadlocks. ------------------------------------------------------------------------ r5997 | marko | 2009-09-28 23:03:58 +1000 (Mon, 28 Sep 2009) | 12 lines branches/zip: Remove an assertion failure when the InnoDB data dictionary is inconsistent with the MySQL .frm file. ha_innobase::index_read(): When the index cannot be found, return an error. ha_innobase::change_active_index(): When prebuilt->index == NULL, set also prebuilt->index_usable = FALSE.  This is not needed for correctness, because prebuilt->index_usable is only checked by row_search_for_mysql(), which requires prebuilt->index != NULL. This addresses Issue #349.  Approved by Heikki Tuuri over IM. ------------------------------------------------------------------------ r6005 | vasil | 2009-09-29 18:09:52 +1000 (Tue, 29 Sep 2009) | 4 lines branches/zip: ChangeLog: wrap around 78th column, not earlier. ------------------------------------------------------------------------ r6006 | vasil | 2009-09-29 20:15:25 +1000 (Tue, 29 Sep 2009) | 4 lines branches/zip: Add ChangeLog entry for the release of 1.0.4. ------------------------------------------------------------------------ r6007 | vasil | 2009-09-29 23:19:59 +1000 (Tue, 29 Sep 2009) | 6 lines branches/zip: Fix the year, should be 2009. Pointed by:	Calvin ------------------------------------------------------------------------ r6026 | marko | 2009-09-30 17:18:24 +1000 (Wed, 30 Sep 2009) | 1 line branches/zip: Add some debug assertions for checking FSEG_MAGIC_N. ------------------------------------------------------------------------ r6028 | marko | 2009-09-30 23:55:23 +1000 (Wed, 30 Sep 2009) | 3 lines branches/zip: recv_no_log_write: New debug flag for tracking down Mantis Issue #347.  No modifications should be made to the database while recv_apply_hashed_log_recs() is about to complete. ------------------------------------------------------------------------ r6029 | calvin | 2009-10-01 06:32:02 +1000 (Thu, 01 Oct 2009) | 4 lines branches/zip: non-functional changes Fix typo. ------------------------------------------------------------------------ r6031 | marko | 2009-10-01 21:24:33 +1000 (Thu, 01 Oct 2009) | 49 lines branches/zip: Clean up after a crash during DROP INDEX. When InnoDB crashes while dropping an index, ensure that the index will be completely dropped during crash recovery. row_merge_drop_index(): Before dropping an index, rename the index to start with TEMP_INDEX_PREFIX_STR and commit the change, so that row_merge_drop_temp_indexes() will drop the index after crash recovery if the server crashes while dropping the index. fseg_inode_try_get(): New function, forked from fseg_inode_get(). Return NULL if the file segment index node is free. fseg_inode_get(): Assert that the file segment index node is not free. fseg_free_step(): If the file segment index node is already free, print a diagnostic message and return TRUE. fsp_free_seg_inode(): Write a nonzero number to FSEG_MAGIC_N, so that allocated-and-freed file segment index nodes can be better distinguished from uninitialized ones. This is rb://174, addressing Issue #348. Tested by restarting mysqld upon the completion of the added log_write_up_to() invocation below, during DROP INDEX.  The index was dropped after crash recovery, and re-issuing the DROP INDEX did not crash the server. Index: btr/btr0btr.c =================================================================== --- btr/btr0btr.c	(revision 6026) +++ btr/btr0btr.c	(working copy) @@ -42,6 +42,7 @@ Created 6/2/1994 Heikki Tuuri #include ""ibuf0ibuf.h"" #include ""trx0trx.h"" +#include ""log0log.h"" /* Latching strategy of the InnoDB B-tree -------------------------------------- @@ -873,6 +874,8 @@ leaf_loop: goto leaf_loop; } + +	log_write_up_to(mtr.end_lsn, LOG_WAIT_ALL_GROUPS, TRUE); top_loop: mtr_start(&mtr); ------------------------------------------------------------------------ r6033 | calvin | 2009-10-02 06:19:46 +1000 (Fri, 02 Oct 2009) | 4 lines branches/zip: fix a typo in error message Reported as bug#47763. ------------------------------------------------------------------------ r6043 | inaam | 2009-10-06 01:45:35 +1100 (Tue, 06 Oct 2009) | 12 lines branches/zip  rb://176 Do not invalidate buffer pool while an LRU batch is active. Added code to buf_pool_invalidate() to wait for the running batches to finish. This patch also resets the state of buf_pool struct at invalidation. This addresses the concern where buf_pool->freed_page_clock becomes non-zero because we read in a system tablespace page for file format info at startup. Approved by: Marko ------------------------------------------------------------------------ r6044 | pekka | 2009-10-07 01:44:54 +1100 (Wed, 07 Oct 2009) | 5 lines branches/zip: Add os_file_is_same() function for Hot Backup (inside ifdef UNIV_HOTBACKUP). This is part of the fix for Issue #186. Note! The Windows implementation is incomplete. ------------------------------------------------------------------------ r6046 | pekka | 2009-10-08 20:24:56 +1100 (Thu, 08 Oct 2009) | 3 lines branches/zip: Revert r6044 which added os_file_is_same() function (issue#186). This functionality is moved to Hot Backup source tree. ------------------------------------------------------------------------ r6048 | vasil | 2009-10-09 16:42:55 +1100 (Fri, 09 Oct 2009) | 16 lines branches/zip: When scanning a directory readdir() is called and stat() after it, if a file is deleted between the two calls stat will fail and the whole precedure will fail. Change this behavior to continue with the next entry if stat() fails because of nonexistent file. This is transparent change as it will make it look as if the file was deleted before the readdir() call. This change is needed in order to fix https://svn.innodb.com/mantis/view.php?id=174 in which we need to abort if os_file_readdir_next_file() encounters ""real"" errors. Approved by:	Marko, Pekka (rb://177) ------------------------------------------------------------------------ r6049 | vasil | 2009-10-10 03:05:26 +1100 (Sat, 10 Oct 2009) | 7 lines branches/zip: Fix compilation warning in Hot Backup: innodb/fil/fil0fil.c: In function 'fil_load_single_table_tablespace': innodb/fil/fil0fil.c:3253: warning: format '%lld' expects type 'long long int', but argument 6 has type 'ib_int64_t' ------------------------------------------------------------------------ r6064 | calvin | 2009-10-14 02:23:35 +1100 (Wed, 14 Oct 2009) | 4 lines branches/zip: non-functional changes Changes from MySQL to fix build issue. ------------------------------------------------------------------------ r6065 | inaam | 2009-10-14 04:43:13 +1100 (Wed, 14 Oct 2009) | 7 lines branches/zip rb://182 Call fsync() on datafiles after a batch of pages is written to disk even when skip_innodb_doublewrite is set. Approved by: Heikki ------------------------------------------------------------------------ r6080 | sunny | 2009-10-15 09:29:01 +1100 (Thu, 15 Oct 2009) | 3 lines branches/zip: Change page_mem_alloc_free() to inline. Fix Bug #47058 - Failure to compile innodb_plugin on solaris 10u7 + spro cc/CC 5.10 ------------------------------------------------------------------------ r6084 | vasil | 2009-10-15 16:21:17 +1100 (Thu, 15 Oct 2009) | 4 lines branches/zip: Add ChangeLog entry for r6080. ------------------------------------------------------------------------ r6095 | vasil | 2009-10-20 00:04:59 +1100 (Tue, 20 Oct 2009) | 7 lines branches/zip: Fix Bug#47808 innodb_information_schema.test fails when run under valgrind by using the wait_until_rows_count macro that loops until the number of rows becomes 14 instead of sleep 0.1, which is obviously very fragile. ------------------------------------------------------------------------ r6096 | vasil | 2009-10-20 00:06:09 +1100 (Tue, 20 Oct 2009) | 4 lines branches/zip: Add ChangeLog entry for r6095. ------------------------------------------------------------------------ r6099 | jyang | 2009-10-22 13:58:39 +1100 (Thu, 22 Oct 2009) | 7 lines branches/zip: Port bug #46000 related changes from 5.1 to zip branch. Due to different code path for creating index in zip branch comparing to 5.1), the index reserved name check function is extended to be used in ha_innobase::add_index(). rb://190  Approved by: Marko ------------------------------------------------------------------------ r6100 | jyang | 2009-10-22 14:51:07 +1100 (Thu, 22 Oct 2009) | 6 lines branches/zip: As a request from mysql, WARN_LEVEL_ERROR cannot be used for push_warning_* call any more. Switch to WARN_LEVEL_WARN. Bug #47233. rb://172 approved by Sunny Bains and Marko. ------------------------------------------------------------------------ r6101 | jyang | 2009-10-23 19:45:50 +1100 (Fri, 23 Oct 2009) | 7 lines branches/zip: Update test result with the WARN_LEVEL_ERROR to WARN_LEVEL_WARN change. This is the same result as submitted in rb://172 review, which approved by Sunny Bains and Marko. ------------------------------------------------------------------------ r6102 | marko | 2009-10-26 18:32:23 +1100 (Mon, 26 Oct 2009) | 1 line branches/zip: row_prebuilt_struct::prebuilts: Unused field, remove. ------------------------------------------------------------------------ r6103 | marko | 2009-10-27 00:46:18 +1100 (Tue, 27 Oct 2009) | 4 lines branches/zip: row_ins_alloc_sys_fields(): Zero out the system columns DB_TRX_ID, DB_ROLL_PTR and DB_ROW_ID, in order to avoid harmless Valgrind warnings about uninitialized data.  (The warnings were harmless, because the fields would be initialized at a later stage.) ------------------------------------------------------------------------ r6105 | calvin | 2009-10-28 09:05:52 +1100 (Wed, 28 Oct 2009) | 6 lines branches/zip: backport r3848 from 6.0 branch ---- branches/6.0: innobase_start_or_create_for_mysql(): Make the 10 MB minimum tablespace limit independent of UNIV_PAGE_SIZE. (Bug #41490) ------------------------------------------------------------------------ r6107 | marko | 2009-10-29 01:10:34 +1100 (Thu, 29 Oct 2009) | 5 lines branches/zip: buf_page_set_old(): Improve UNIV_LRU_DEBUG diagnostics in order to catch the buf_pool->LRU_old corruption reported in Issue #381. buf_LRU_old_init(): Set the property from the tail towards the front of the buf_pool->LRU list, in order not to trip the debug check. ------------------------------------------------------------------------ r6108 | calvin | 2009-10-29 16:58:04 +1100 (Thu, 29 Oct 2009) | 5 lines branches/zip: close file handle when building with UNIV_HOTBACKUP The change does not affect regular InnoDB engine. Confirmed by Marko. ------------------------------------------------------------------------ r6109 | jyang | 2009-10-29 19:37:32 +1100 (Thu, 29 Oct 2009) | 7 lines branches/zip: In os_mem_alloc_large(), if we fail to attach the shared memory, reset memory pointer ptr to NULL, and allocate memory from conventional pool. Bug #48237 Error handling in os_mem_alloc_large appears to be incorrect rb://198  Approved by: Marko ------------------------------------------------------------------------ r6110 | marko | 2009-10-29 21:44:57 +1100 (Thu, 29 Oct 2009) | 2 lines branches/zip: Makefile.am (INCLUDES): Merge a change from MySQL: Use $(srcdir)/include instead of $(top_srcdir)/storage/innobase/include. ------------------------------------------------------------------------ r6111 | marko | 2009-10-29 22:04:11 +1100 (Thu, 29 Oct 2009) | 33 lines branches/zip: Fix corruption of buf_pool->LRU_old and improve debug assertions. This was reported as Issue #381. buf_page_set_old(): Assert that blocks may only be set old if buf_pool->LRU_old is initialized and buf_pool->LRU_old_len is nonzero. Assert that buf_pool->LRU_old points to the block at the old/new boundary. buf_LRU_old_adjust_len(): Invoke buf_page_set_old() after adjusting buf_pool->LRU_old and buf_pool->LRU_old_len, in order not to violate the added assertions. buf_LRU_old_init(): Replace buf_page_set_old() with a direct assignment to bpage->old, because these loops that initialize all the blocks would temporarily violate the assertions about buf_pool->LRU_old. buf_LRU_remove_block(): When setting buf_pool->LRU_old = NULL, also clear all bpage->old flags and set buf_pool->LRU_old_len = 0. buf_LRU_add_block_to_end_low(), buf_LRU_add_block_low(): Move the buf_page_set_old() call later in order not to violate the debug assertions.  If buf_pool->LRU_old is NULL, set old=FALSE. buf_LRU_free_block(): Replace the UNIV_LRU_DEBUG assertion with a dummy buf_page_set_old() call that performs more thorough checks. buf_LRU_validate(): Do not tolerate garbage in buf_pool->LRU_old_len even if buf_pool->LRU_old is NULL.  Check that bpage->old is monotonic. buf_relocate(): Make the UNIV_LRU_DEBUG checks stricter. buf0buf.h: Revise the documentation of buf_page_t::old and buf_pool_t::LRU_old_len. ------------------------------------------------------------------------ r6112 | calvin | 2009-10-30 01:21:15 +1100 (Fri, 30 Oct 2009) | 4 lines branches/zip: consideration for icc compilers Proposed by MySQL, and approved by Marko. ------------------------------------------------------------------------ r6113 | vasil | 2009-10-30 03:15:50 +1100 (Fri, 30 Oct 2009) | 93 lines branches/zip: Merge r5912:6112 from branches/5.1: (after this merge the innodb-autoinc test starts to fail, but I commit anyway because it would be easier to investigate the failure this way) ------------------------------------------------------------------------ r5952 | calvin | 2009-09-22 19:45:07 +0300 (Tue, 22 Sep 2009) | 7 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: fix bug#42383: Can't create table 'test.bug39438' For embedded server, MySQL may pass in full path, which is currently disallowed. It is needed to relax the condition by accepting full paths in the embedded case. Approved by: Heikki (on IM) ------------------------------------------------------------------------ r6032 | vasil | 2009-10-01 15:55:49 +0300 (Thu, 01 Oct 2009) | 8 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: Fix Bug#38996 Race condition in ANALYZE TABLE by serializing ANALYZE TABLE inside InnoDB. Approved by:	Heikki (rb://175) ------------------------------------------------------------------------ r6045 | jyang | 2009-10-08 02:27:08 +0300 (Thu, 08 Oct 2009) | 7 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc A /branches/5.1/mysql-test/innodb_bug47777.result A /branches/5.1/mysql-test/innodb_bug47777.test branches/5.1: Fix bug #47777. Treat the Geometry data same as Binary BLOB in ha_innobase::store_key_val_for_row(), since the Geometry data is stored as Binary BLOB in Innodb. Review: rb://180 approved by Marko Makela. ------------------------------------------------------------------------ r6051 | sunny | 2009-10-12 07:05:00 +0300 (Mon, 12 Oct 2009) | 6 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/mysql-test/innodb-autoinc.result M /branches/5.1/mysql-test/innodb-autoinc.test branches/5.1: Ignore negative values supplied by the user when calculating the next value to store in dict_table_t. Setting autoincrement columns top negative values is undefined behavior and this change should bring the behavior of InnoDB closer to what users expect. Added several tests to check. rb://162 ------------------------------------------------------------------------ r6052 | sunny | 2009-10-12 07:09:56 +0300 (Mon, 12 Oct 2009) | 4 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/mysql-test/innodb-autoinc.result M /branches/5.1/mysql-test/innodb-autoinc.test branches/5.1: Reset the statement level autoinc counter on ROLLBACK. Fix the test results too. rb://164 ------------------------------------------------------------------------ r6053 | sunny | 2009-10-12 07:37:49 +0300 (Mon, 12 Oct 2009) | 6 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/mysql-test/innodb-autoinc.result M /branches/5.1/mysql-test/innodb-autoinc.test branches/5.1: Copy the maximum AUTOINC value from the old table to the new table when MySQL does a CREATE INDEX ON T. This is required because MySQL does a table copy, rename and drops the old table. Fix Bug#47125: auto_increment start value is ignored if an index is created and engine=innodb rb://168 ------------------------------------------------------------------------ r6076 | vasil | 2009-10-14 19:30:12 +0300 (Wed, 14 Oct 2009) | 4 lines Changed paths: M /branches/5.1/row/row0mysql.c branches/5.1: Fix typo. ------------------------------------------------------------------------ ------------------------------------------------------------------------ r6114 | vasil | 2009-10-30 03:43:51 +1100 (Fri, 30 Oct 2009) | 6 lines branches/zip: * Add ChangeLog entries for latest changes * Obey alphabetical order in the list of the files * White-space fixup ------------------------------------------------------------------------ r6121 | sunny | 2009-10-30 10:42:11 +1100 (Fri, 30 Oct 2009) | 7 lines branches/zip: This test has been problematic for sometime now. The underlying bug is that the data dictionaries get out of sync. In the AUTOINC code we try and apply salve to the symptoms. In the past MySQL made some unrelated change and the dictionaries stopped getting out of sync and this test started to fail. Now, it seems they have reverted that changed and the test is passing again. I suspect this is not he last time that this test will change. ------------------------------------------------------------------------ r6124 | jyang | 2009-10-30 19:02:31 +1100 (Fri, 30 Oct 2009) | 5 lines branches/zip: Correct the bug number for -r6109 change from # 48273 to #48237 ------------------------------------------------------------------------ r6126 | vasil | 2009-10-30 19:36:07 +1100 (Fri, 30 Oct 2009) | 45 lines branches/zip: Merge r6112:6125 from branches/5.1: (skipping r6122 and r6123, Jimmy says these are already present and need not be merged): ------------------------------------------------------------------------ r6122 | jyang | 2009-10-30 05:18:38 +0200 (Fri, 30 Oct 2009) | 7 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/mysql-test/innodb_bug44369.result M /branches/5.1/mysql-test/innodb_bug44369.test M /branches/5.1/mysql-test/innodb_bug46000.result M /branches/5.1/mysql-test/innodb_bug46000.test branches/5.1: Chnage WARN_LEVEL_ERROR to WARN_LEVEL_WARN for push_warning_printf() call in innodb. Fix Bug#47233: Innodb calls push_warning(MYSQL_ERROR::WARN_LEVEL_ERROR) rb://170 approved by Marko. ------------------------------------------------------------------------ r6123 | jyang | 2009-10-30 05:43:06 +0200 (Fri, 30 Oct 2009) | 8 lines Changed paths: M /branches/5.1/os/os0proc.c branches/5.1: In os_mem_alloc_large(), if we fail to attach the shared memory, reset memory pointer ptr to NULL, and allocate memory from conventional pool. This is a port from branches/zip. Bug #48237 Error handling in os_mem_alloc_large appears to be incorrect rb://198  Approved by: Marko ------------------------------------------------------------------------ r6125 | vasil | 2009-10-30 10:31:23 +0200 (Fri, 30 Oct 2009) | 4 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: White-space fixup. ------------------------------------------------------------------------ ------------------------------------------------------------------------ r6130 | marko | 2009-11-02 20:42:56 +1100 (Mon, 02 Nov 2009) | 9 lines branches/zip: Free all resources at shutdown. Set pointers to NULL, so that Valgrind will not complain about freed data structures that are reachable via pointers.  This addresses Bug #45992 and Bug #46656. This patch is mostly based on changes copied from branches/embedded-1.0, mainly c5432, c3439, c3134, c2994, c2978, but also some other code was copied.  Some added cleanup code is specific to MySQL/InnoDB. rb://199 approved by Sunny Bains ------------------------------------------------------------------------ "	00c16e8a30d5d5b37cb7291cca59521e6fc3e677
----------------------------
MgmConfig-t - add code that can print out how nodes need to be restarted for config parameter change to take effect 	661f1167529f84402001ef927ea8d9691cb281d2
----------------------------
Bug#47366 ndb_config --xml --configinfo: Add restart type for config variables - Add flags CS_RESTART_INITIAL and CS_RESTART_SYSTEM which describes how the system must be restarted for a configuration parameter change to take effect. Default is none of these flags set, which means node restart of one node at a time for the setting to take effect CS_RESTART_INITIAL Each data node need to be restarted one at a time with --initial CS_RESTART_SYSTEM The whole system need to be stopped and then started up again CS_RESTART_SYSTEM + CS_RESTART_INITIAL The whole system need to be stopped and then restarted with --initial thus destroying any data in the cluster - Rename CI_UPDATEABALE to CI_ONLINE_UPDATEABLE and check that no parameter yet have that flag set, turn it off for some variables. - This is the current list of parameters that require --initial node restart NoOfFragmentLogFiles FragmentLogFileSize InitFragmentLogFiles DataDir FileSystemPath BackupDataDir CompressedLCP FileSystemPathDD FileSystemPathDataFiles FileSystemPathUndoFiles - This is the current list of parameters that require --initial system restart NoOfReplicas Diskless(aka Discless) InitialLogfileGroup InitialTablespace - There are currently no parameters that require system restart 	199c53576d299849cddc72d4379e8b4ea5235e4b
----------------------------
Bug#47365 ndb_config --xml --configinfo: mark shm*, sci* as unsupported - Extend status for a config parameter so it can now also have the status experimental - Mark all SCI and SHM parameters as experimental 	ff65f793822326b15fc968bde8b7c827cb808027
----------------------------
Applying InnoDB plugin snashot Detailed revision comments: r6064 | calvin | 2009-10-13 18:23:35 +0300 (Tue, 13 Oct 2009) | 4 lines branches/zip: non-functional changes Changes from MySQL to fix build issue. r6065 | inaam | 2009-10-13 20:43:13 +0300 (Tue, 13 Oct 2009) | 7 lines branches/zip rb://182 Call fsync() on datafiles after a batch of pages is written to disk even when skip_innodb_doublewrite is set. Approved by: Heikki 	280b7ee2916a8c5d2d9e4b73d04e9bce3be52e8a
----------------------------
"Bug #47423 mtr connects to wrong database The reason for the bug is that mysqtest as well as other client tools running in test suite (mysqlbinlog, mysqldump) will first try to connect whatever database has created shared memory with default base name ""MySQL"" and use this. (Same effect could be seen on Unix if mtr would not care to calculate ""port"" and ""socket"" parameter). The fix ensures that all client tools and  running in mtr use unique per-database shared memory base parameters, so there is no possibility to clash with already installed one. We use socket name for shared memory base (it's known to be unique). This shared-memory-base is written to the MTR config file to the [client] and [mysqld] sections. Fix made also made sure all client tools understand and correctly handle --shared-memory-base. Prior to this patch  it was not the case for  mysqltest, mysqlbinlog and mysql_client_test. All new connections done from mtr scripts via connect() will by default set shared-memory-base. And finally, there is a possibility to force shared memory or pipe connection and overwrite shared memory/pipe base name from within mtr scripts via optional PIPE or SHM modifier. This functionality was manually backported from 6.0 (original patch  http://lists.mysql.com/commits/74749) "	2f075a1e37a483833e6f7e2de4bd3f9b1848082c
----------------------------
This commit implements a primitive prototype of a mechanism for pushing down joins into the ndb. sub_select_pushed() pushes joins to the ndb instead of executing them in the normal recursive manner of sub_select(). Only chains of primary key lookups may be pushed down. Queries should have the form: select <projection> from T1,...TN where f(T1.attr)=T2.primary_key AND ... T(N-1).attr=TN.primary_key (Primary keys may have more than one field.) To test push down you must set enable_pushed_operations in sql_select.cc to true. Look for the following type of messages in erver trace file: 091030  9:51:57 [Note] ha_ndbcluster::pk_unique_index_read_key_pushed() executing chain of 2 primary key lookups. First table is T3. You can run the SQL script show below: --------------8<------------------- create database if not exists JO_DB; use JO_DB; drop table if exists T1; create table T1 (a int, b int, primary key(a)) engine = ndb; insert into T1 values (0x1f, 0x2f); insert into T1 values (0x2f, 0x3f); insert into T1 values (0x3f, 0x1f); drop table if exists T2; create table T2 (c int, d int, primary key(c)) engine = ndb; insert into T2 values (0x1f, 0x2f); insert into T2 values (0x2f, 0x3f); insert into T2 values (0x3f, 0x1f); drop table if exists T3; create table T3 (a3 int, b3 int, c3 int, d3 int, primary key(a3, b3)) engine = ndb; -- insert into T3 values (0x1f, 0x2f, 1, 0x1f); -- insert into T3 values (0x2f, 0x3f, 2, 0x2f); insert into T3 values (0x3f, 0x1f, 3, 0x3f); select 'query 1'; select * from T3 x, T3 y, T1 where y.a3=x.d3 and y.b3=x.b3 and T1.a = y.c3; -- Empty set (0.00 sec) select 'query 2'; select * from T3 x, T3 y, T1 where y.a3=x.d3 and y.b3=x.b3 and T1.a = y.d3; -- +----+----+------+------+----+----+------+------+----+------+ -- | a3 | b3 | c3   | d3   | a3 | b3 | c3   | d3   | a  | b    | -- +----+----+------+------+----+----+------+------+----+------+ -- | 63 | 31 |    3 |   63 | 63 | 31 |    3 |   63 | 63 |   31 | -- +----+----+------+------+----+----+------+------+----+------+ select 'query 3'; select * from T1, T2 where c=b; -- +----+------+----+------+ -- | a  | b    | c  | d    | -- +----+------+----+------+ -- | 31 |   47 | 47 |   63 | -- | 63 |   31 | 31 |   47 | -- | 47 |   63 | 63 |   31 | -- +----+------+----+------+ 	48a8fc8f599e57418c7901c18678f369053fed09
----------------------------
WL#5096: (WORK-IN-PROGRESS) Merged some test files by making use of the dynamic property from binlog_row_image system variable. 	55b8244812f11acd1b0a23ce3a5e0454e68ab48f
----------------------------
"Bug#33637 SHOW PROCEDURE CODE/SHOW FUNCTION CODE sp_name gives a syntax error. Backport for 5.5 In non debug builds, the statements: - SHOW PROCEDURE CODE - SHOW FUNCTION CODE used to fail with a ""syntax error"", which is misleading. These statements have been changed to return the following error for non debug builds: ERROR HY000: The 'SHOW PROCEDURE|FUNCTION CODE' feature is disabled; you need MySQL built with '--with-debug' to have it working For debug builds (./configure --with-debug), nothing is changed. "	6a67daaa5ab1c818845ce1dd4405cce1436ca1f2
----------------------------
WL#5092: (WORK-IN-PROGRESS) Moved towards dynamic binlog_row_image server variable. 	db3d3111edb08e89ef51093a22c2478290549abe
----------------------------
Bug#38551 query cache can still consume [very little] cpu time even when it is off. When the query cache is disabled, the server shouldn't attempt to take the query cache mutex. By using the command line option --query_cache_type=0, the user can disable (backport from mysql-pe) 	2d6a356abfc82a70c05167eb198669705c69daeb
----------------------------
ha_ndbcluster - remove unused extern declarations 	4259065bec5a1a1a9caee829d84860f16de492b0
----------------------------
ha_ndbcluster - remove remnants of ndbcluster_silent. Since it's set to 0 and can't be changed, none of the code it activates never run 	bfa74d95a12d72b9eec148759fb98decb1785d4c
----------------------------
ha_ndbcluster - remove unused extern declaration of ndbcluster_connectstring 	ef6434c013ecc33bc59e2e46bcf054fc112f65de
----------------------------
ha_ndbcluster - remove duplicate extern declaration of ndb_cache_check_time - move extern declaration of ndb_report_thresh* to the file from where they are used 	66d36ff52fdcfebf81c12d840d39f0358d9967f0
----------------------------
ha_ndbcluster - remove the ifdefs for __cplusplus since it's hard to compile the C++ file without it 	61471f87d8705cc5c709e1bce91c1d9aba6aaf4d
----------------------------
ha_ndbcluster - move define NDB_DEFAULT_AUTO_PREFETCH to local scope in ha_ndbcluster.cc and make it static const 	e8529578ce6436d08f316de17d5d7e2de57a12f4
----------------------------
"ndb_mgmd - Clear(silently ignore) any dynamic ports with value from config submitted by user through 'set config'. The dynamic ports reported by nodes in the cluster are kept in a separate hash table and written into the config again when client ask for the config. This way we avoid having ""stale"" ports in the binary config written to disk. "	3ba9fcb238d6660eee3d5b5c1e9e451b31b8e54b
----------------------------
A follow-up to fix for BUG#47073 - valgrind errs, corruption,failed repair of partition, low myisam_sort_buffer_size Fixed race conditions discovered with the provided test case and stabilized test case. 	9fbc44eb091d33563af9a0e3ef6485b3e50205f7
----------------------------
ndb - don't use --binlog-format if a particular mysqld in the configuration doesn't use log-bin 	7af7313bf2e532568da0684f3cb0c061b49f63bc
----------------------------
Fix for issues with new --ndb-wait-setup option and embedded MySQLD 	215602ccd4f4e6a153cc8e3186d3477359787291
----------------------------
Backporting WL#3953 from 6.0. Original revision: ------------------------------------------------------------ revno: 2476.714.9 committer: markleith@medusa.mysql.com timestamp: Mon 2007-09-03 23:18:50 +0100 message: Bug#25822 / WL#3953 - Log Access Denied errors for bad passwords in the error log Added logging of Access Denied messages on failed new connections to the error log when log-warnings = 2. This allows a user to log these messages without having to incur the overhead of using the general query log on production systems. ------------------------------------------------------------ 	28724351d0fddcdf297c43886825848359d05c00
----------------------------
BUG#34582: FLUSH LOGS does not close and reopen the binlog index file Issuing 'FLUSH LOGS' does not close and reopen indexfile. Instead a SEEK_SET is performed. This patch makes index file to be closed and reopened whenever a rotation happens (FLUSH LOGS is issued or binary log exceeds maximum configured size). 	454a0c0d209de06709ddcbf083a9839214512927
----------------------------
"Bug#13963  	SHOW SLAVE HOSTS is unreliable Before the patch, slaves only appear in the output of SHOW SLAVE HOSTS when report-host option is set. If an expected slave does not appear in the list, nobody knows whether the slave does not connect or has started without the ""report-host"" option. The output also contains a strange field ""Rpl_recovery_rank"" which has never been implemented and the manual of MySQL5.4 declares that the field has been removed from MySQL5.4. This patch is done with these, According to the manual of MySQL5.4, ""Rpl_recovery_rank"" is removed. Slaves will register themselves to master no matter if report_host option is set or not. When slaves are registering themselves, their Server_ids, report_host and other information are together sent to master. Sever_ids are never null and is unique in one replication group. Slaves always can be identified with different Server_ids no matter if report_host exists. "	d17245e772eea94cc77f8eabbc94b39bd226dfac
----------------------------
BUG48143 nbd_mgmd - crash in CONFIG_CHECK_REF 	d355c5f912af72af918f23af43210f052dc9f0e4
----------------------------
WL#5092 Adds SHOW VARIABLE LIKE 'binlog_row_image'; 	f1eb8a8e2b322ae2b32ed6e878cccaf0becffcfb
----------------------------
Backporting patch for Bug#38992 from 6.0. Original revision: revno: 2617.55.2 committer: Alexander Nozdrin <alik@sun.com> branch nick: azalea-bf-bug38992 timestamp: Fri 2009-06-19 16:41:16 +0400 message: Fix for Bug#38992: Server crashes sporadically with 'waiting for initial ...' msg on windows. The problem is that connection timeout is too small for busy windows box. The fix is to - add support for connect_timeout command line argument to mysqltest; - set default value of the connect_timeout option to 120 seconds. 	4ebb631f3a1c03a111c20af22df28cf585585536
----------------------------
"Bug #38124 ""general_log_file"" variable silently unset when using expression When assigning the new string value to the variable, the Item::str_value member was used.  This is not according to the protocol.  str_value is an internal member used for temporary assignments, and is not consistently set for all string operations.  It is set for constant strings, so it would work in these cases, but not for string functions (concat, substr, etc.) The correct approach is to use Item::val_str(..) to evaluate and retrieve the string. Backport from 6.0-codebase 6.0-codebase revno: 2617.31.17 "	ebb0b02ce519dcc57c163ca8c3892f462eb07889
----------------------------
---------------------------------------------------------- revno: 2630.2.16 committer: Konstantin Osipov <konstantin@mysql.com> branch nick: mysql-6.0-runtime timestamp: Fri 2008-06-27 13:26:03 +0400 message: Fix max_user_connections_func failure on Solaris. A connection that failed to log in due to a resource limit could be returned to the thread pool with a dangling link to user_connect structure of an old user. Later on it could be authenticated to a user that doesn't have a resource limit, so this dangling link won't be reset. --pool-of-threads mode made the situation easy to reproduce, and thus highlighted a bug that has been around forever. Make sure there are no dangling links. 	2f01aa9727e4c062b382d53bd871d7fdaf3802b6
----------------------------
branches/zip rb://182 Call fsync() on datafiles after a batch of pages is written to disk even when skip_innodb_doublewrite is set. Approved by: Heikki 	51c89873d1fa33c25913a6b44359fad8d03743f7
----------------------------
Bug #33693 general log name and location depend on PID file, not on predefined values The default name of the PID file was constructed, as documented, based on the hostname.  This name was subsequently used as the base for the general log file name.   If the name of the PID file was overridden in the configuration, and no explicit name was set for the general log file, the path location for the PID file was used also for the general log file. A new variable, 'default_logfile_name', has been introduced.  This name is constructed based on the hostname, and is then used to construct both the PID file and the general log file. The general log file will now, unless explicitly set, be located in the server data directory (as documentated in the server docs) 	10390cec03109dd9ffd0d6785d2bc843166fcf38
----------------------------
"Applying InnoDB Plugin 1.0.5 snapshot, part 13 1. Undo r6031 btr/btr0btr.c changes 2. apply skipped Plug.in changes and missed revisions Detailed revision comments: r5865 | vasil | 2009-09-12 02:26:03 -0500 (Sat, 12 Sep 2009) | 10 lines branches/zip: Simplify the compile time checks by splittig them into 5 independent checks: * Whether GCC atomics are available * Whether pthread_t can be used by GCC atomics * Whether Solaris libc atomics are available * Whether pthread_t can be used by Solaris libs atomics * Checking the size of pthread_t r5869 | vasil | 2009-09-12 03:33:11 -0500 (Sat, 12 Sep 2009) | 15 lines branches/zip: Include ut0auxconf.h only if none of the macros it would define is defined. The check when to include this header was outdated from the time when there was only one macro involved. Move the atomics checks that are in univ.i outside of #if windows ... #else ... #endif This simplifies the code and removes some duplicates like defining HAVE_ATOMIC_BUILTINS if HAVE_WINDOWS_ATOMICS is defined in both branches. Do not define the same macro HAVE_ATOMIC_PTHREAD_T for different events. Instead define HAVE_IB_ATOMIC_PTHREAD_T_GCC and HAVE_IB_ATOMIC_PTHREAD_T_SOLARIS. r5871 | vasil | 2009-09-12 04:25:44 -0500 (Sat, 12 Sep 2009) | 6 lines branches/zip: Rename HAVE_SOLARIS_ATOMICS to HAVE_IB_SOLARIS_ATOMICS and IB_HAVE_PAUSE_INSTRUCTION to HAVE_IB_PAUSE_INSTRUCTION so they all follow the same HAVE_IB_* convention. r5888 | vasil | 2009-09-14 03:38:45 -0500 (Mon, 14 Sep 2009) | 40 lines branches/zip: Back-merge c5880 and c5881 from branches/embedded-1.0: ------------------------------------------------------------------------ r5880 | vasil | 2009-09-12 17:28:44 +0300 (Sat, 12 Sep 2009) | 18 lines Changed paths: M /branches/embedded-1.0/configure.in M /branches/embedded-1.0/include/os0sync.h M /branches/embedded-1.0/srv/srv0start.c branches/embedded-1.0: Clean up and simplify the code that surrounds the atomic ops: * Simplify the code that prints what atomics are used: Instead of repeating the same conditions on which each atomics are used use just one printf that prints a variable defined by the code which chooses what atomics to use. * In os0sync.h pick up each atomic variant only if it has been selected by autoconf (based on IB_ATOMIC_MODE_* macros). Define the startup message to be printed. * In configure.in: check what user has chosen and if he has chosen something that is not available, emit an error. If nothing has been chosen explicitly by the user, auto select an option according to the described logic in configure.in. ------------------------------------------------------------------------ r5881 | vasil | 2009-09-12 20:08:27 +0300 (Sat, 12 Sep 2009) | 4 lines Changed paths: M /branches/embedded-1.0/configure.in branches/embedded-1.0: Fix syntax error in test program. ------------------------------------------------------------------------ r5889 | vasil | 2009-09-14 04:17:18 -0500 (Mon, 14 Sep 2009) | 5 lines branches/zip: Add missing return statement in the test program that could have caused a warning. r5893 | inaam | 2009-09-14 10:20:48 -0500 (Mon, 14 Sep 2009) | 10 lines branches/zip  rb://159 In case of pages that are not made young the counter is incremented only when the page in question is 'old'. In case of pages that are made young the counter is incremented in case of all pages. For apple to apple comparison this patch changes the 'young-making' counter to consider only 'old' blocks. Approved by: Marko r5537 | vasil | 2009-07-21 04:31:26 -0500 (Tue, 21 Jul 2009) | 5 lines branches/zip: Fixups in ChangeLog: sort filenames alphabetically and wrap to 78 chars per line. r5870 | vasil | 2009-09-12 04:13:44 -0500 (Sat, 12 Sep 2009) | 7 lines branches/zip: Define HAVE_ATOMIC_BUILTINS and INNODB_RW_LOCKS_USE_ATOMICS in os0sync.h instead of in univ.i. The code expects os_*() macros to be present if HAVE_ATOMIC_BUILTINS and INNODB_RW_LOCKS_USE_ATOMICS are defined. So define them next to defining the os_*() macros. r5696 | vasil | 2009-08-26 08:15:59 -0500 (Wed, 26 Aug 2009) | 14 lines branches/zip: Merge a change from MySQL: http://lists.mysql.com/commits/80832 2968 Jonathan Perkin	2009-08-14 Build fixes for Windows, AIX, HP/UX and Sun Studio11, from Timothy Smith. modified: CMakeLists.txt cmd-line-utils/readline/util.c storage/innodb_plugin/handler/i_s.cc storage/innodb_plugin/include/univ.i r5897 | marko | 2009-09-15 03:29:00 -0500 (Tue, 15 Sep 2009) | 8 lines branches/zip: Avoid bogus messages about latching order violations when UNIV_SYNC_DEBUG is defined. sync_thread_levels_g(): Add the parameter ""warn"".  Do not print anything unless it is set. sync_thread_add_level(): Pass warn=TRUE to sync_thread_levels_g() when the check is within an assertion; FALSE if it is not. r5899 | marko | 2009-09-15 06:26:01 -0500 (Tue, 15 Sep 2009) | 4 lines branches/zip: ut0ut.h: Do not #include ""os0sync.h"" #ifdef UNIV_HOTBACKUP. Since r5872, the InnoDB Hot Backup build was broken. Fix it by not defining any thread synchronization primitives in ut0ut.h. InnoDB Hot Backup is a single-threaded program. "	d0c28265aeeb26feb8e34a2e3ae1ed42f6774f87
----------------------------
BUG#47073 - valgrind errs, corruption,failed repair of partition, low myisam_sort_buffer_size Repair by sort (default) or parallel repair of a MyISAM table (doesn't matter partitioned or not) as well as bulk inserts and enable indexes some times didn't failover to repair with key cache. The problem was that after unsuccessful attempt, data file was closed. Whereas repair with key cache requires open data file. Fixed by reopening data file. Also fixed a valgrind warning, which may appear during repair by sort or parallel repair with certain myisam_sort_buffer_size number of rows and length of an index entry (very dependent). 	858713edd376ccb7eaf4826732869be8e71d0190
----------------------------
Bug#47216      programs should quit if the file specified by --defaults-file option isn't found added code to exit a tool if the forced config file wasn't found per-file comments: client/mysql.cc Bug#47216      programs should quit if the file specified by --defaults-file option isn't found added code to exit a tool if the forced config file wasn't found client/mysql_upgrade.c Bug#47216      programs should quit if the file specified by --defaults-file option isn't found added code to exit a tool if the forced config file wasn't found client/mysqladmin.cc Bug#47216      programs should quit if the file specified by --defaults-file option isn't found added code to exit a tool if the forced config file wasn't found client/mysqlcheck.c Bug#47216      programs should quit if the file specified by --defaults-file option isn't found added code to exit a tool if the forced config file wasn't found client/mysqldump.c Bug#47216      programs should quit if the file specified by --defaults-file option isn't found added code to exit a tool if the forced config file wasn't found client/mysqlimport.c Bug#47216      programs should quit if the file specified by --defaults-file option isn't found added code to exit a tool if the forced config file wasn't found client/mysqlshow.c Bug#47216      programs should quit if the file specified by --defaults-file option isn't found added code to exit a tool if the forced config file wasn't found client/mysqlslap.c Bug#47216      programs should quit if the file specified by --defaults-file option isn't found added code to exit a tool if the forced config file wasn't found mysql-test/t/mysql.test Bug#47216      programs should quit if the file specified by --defaults-file option isn't found test added sql/mysqld.cc Bug#47216      programs should quit if the file specified by --defaults-file option isn't found added code to exit a tool if the forced config file wasn't found storage/myisam/myisamchk.c Bug#47216      programs should quit if the file specified by --defaults-file option isn't found added code to exit a tool if the forced config file wasn't found storage/myisam/myisampack.c Bug#47216      programs should quit if the file specified by --defaults-file option isn't found added code to exit a tool if the forced config file wasn't found 	de7619823d3846fa514d7f540a7e5af898b142a8
----------------------------
"Bug #47941  	configure --with-ndb-port-base=port broken and should be removed - Print warning if --with-ndb-port-base is used, it has not effect - Since ndb_global.h.in does not have any ""substs"" anymore, move it to ndb_global.h - Remove the last remnants of NDB_TCP_PORT_BASE usage from ConfigInfo.cpp, dead code. "	5232ea08384716d0afe3d57985a47e81c3a03bc6
----------------------------
Applying InnoDB Plugin 1.0.5  snapshot, part 11 From revision r5945 to r5994 r5950 - already applied and so skipped Detailed revision comments: r5945 | calvin | 2009-09-21 09:53:22 -0500 (Mon, 21 Sep 2009) | 4 lines branches/zip: fix a type in r5935 Should be innodb_open_files, spotted by Michael. r5951 | calvin | 2009-09-22 10:17:01 -0500 (Tue, 22 Sep 2009) | 4 lines branches/zip: adjust CMake file to work with old versions of MySQL Tested with MySQL 5.1.38 and 5.1.30. r5956 | calvin | 2009-09-22 18:30:10 -0500 (Tue, 22 Sep 2009) | 4 lines branches/zip: remove handler0vars.h from Makefile.am Left over from r5950. r5971 | marko | 2009-09-23 08:03:51 -0500 (Wed, 23 Sep 2009) | 2 lines branches/zip: os_file_pwrite(): Make the code compile in InnoDB Hot Backup when the pwrite system call is not available. r5972 | marko | 2009-09-23 14:44:52 -0500 (Wed, 23 Sep 2009) | 5 lines branches/zip: fil_node_open_file(): In InnoDB Hot Backup, determine the page size of single-file tablespaces before computing the file node size.  Otherwise, the space->size of compressed tablespaces would be computed with UNIV_PAGE_SIZE instead of key_block_size. This should fix Issue #313. r5973 | marko | 2009-09-23 14:53:21 -0500 (Wed, 23 Sep 2009) | 2 lines branches/zip: recv_add_to_hash_table(): Simplify obfuscated pointer arithmetics. r5978 | marko | 2009-09-24 02:47:56 -0500 (Thu, 24 Sep 2009) | 1 line branches/zip: Fix warnings and errors when UNIV_HOTBACKUP is defined. r5979 | marko | 2009-09-24 05:16:10 -0500 (Thu, 24 Sep 2009) | 4 lines branches/zip: ha_innodb.cc: Define MYSQL_PLUGIN_IMPORT when necessary. This preprocessor symbol has been recently introduced in MySQL 5.1. The InnoDB Plugin should remain source compatible with MySQL 5.1.24 and later. r5988 | calvin | 2009-09-25 14:14:43 -0500 (Fri, 25 Sep 2009) | 8 lines branches/zip: fix bug#47055 unconditional exit(1) on ERROR_WORKING_SET_QUOTA 1453 (0x5AD) for InnoDB backend When error ERROR_WORKING_SET_QUOTA or ERROR_NO_SYSTEM_RESOURCES occurs, yields for 100ms and retries the operation. Approved by: Heikki (on IM) r5992 | vasil | 2009-09-28 02:10:29 -0500 (Mon, 28 Sep 2009) | 4 lines branches/zip: Add ChangeLog entry for c5988. r5994 | marko | 2009-09-28 03:33:59 -0500 (Mon, 28 Sep 2009) | 17 lines branches/zip: Try to prevent the reuse of tablespace identifiers after InnoDB has crashed during table creation.  Also, refuse to start if files with duplicate tablespace identifiers are encountered. fil_node_create(): Update fil_system->max_assigned_id.  This should prevent the reuse of a space->id when InnoDB does a full crash recovery and invokes fil_load_single_table_tablespaces().  Normally, fil_system->max_assigned_id is initialized from SELECT MAX(ID) FROM SYS_TABLES. fil_open_single_table_tablespace(): Return FALSE when fil_space_create() fails. fil_load_single_table_tablespace(): Exit if fil_space_create() fails and innodb_force_recovery=0. rb://173 approved by Heikki Tuuri.  This addresses Issue #335. 	a1bb24eb2b7345edaf6d47305cd5c205f7a9c903
----------------------------
"Bug #44651 ""have_community_features"" variable should be renamed ""have_profiling"" 1) Renamed have_community_features server system variable to have_profiling. 2) Removed eable-community-features configure option and ENABLE_COMMUNITY_FEATURES macro. 3) Removed COMMUNITY_SERVER macro and replaced its usage by ENABLED_PROFILING. Only --enable-profiling is now needed to enable profiling. It was the only existing ""community feature"", so there was no need for both configure options. Using --enable-community-features will give a warning message since it no longer exists. "	0eccb93214fe11d60f4e95a813793357856e4ad7
----------------------------
Applying InnoDB Plugin 1.0.5 snapshot, part 10 From r5917 to r5940 Detailed revision comments: r5917 | marko | 2009-09-16 04:56:23 -0500 (Wed, 16 Sep 2009) | 1 line branches/zip: innobase_get_cset_width(): Cache the value of current_thd. r5919 | vasil | 2009-09-16 13:37:13 -0500 (Wed, 16 Sep 2009) | 4 lines branches/zip: Whitespace cleanup in the ChangeLog. r5920 | vasil | 2009-09-16 13:47:22 -0500 (Wed, 16 Sep 2009) | 4 lines branches/zip: Add ChangeLog entries for r5916. r5922 | marko | 2009-09-17 01:32:08 -0500 (Thu, 17 Sep 2009) | 4 lines branches/zip: innodb-zip.test: Make the test work with zlib 1.2.3.3. Apparently, the definition of compressBound() has slightly changed. This has been filed as Mantis Issue #345. r5924 | vasil | 2009-09-17 23:59:30 -0500 (Thu, 17 Sep 2009) | 4 lines branches/zip: White space and formatting cleanup in the ChangeLog r5934 | vasil | 2009-09-18 12:06:46 -0500 (Fri, 18 Sep 2009) | 4 lines branches/zip: Fix typo. r5935 | calvin | 2009-09-18 16:08:02 -0500 (Fri, 18 Sep 2009) | 6 lines branches/zip: fix bug#44338; minor non-functional changes Bug#44338 innodb has message about non-existing option innodb_max_files_open. Change the option to innodb_open_files. The fix was committed into 6.0 branch. r5938 | calvin | 2009-09-19 02:14:25 -0500 (Sat, 19 Sep 2009) | 41 lines branches/zip: Merge revisions 2584:2956 from branches/6.0, except c2932. Bug#37232 and bug#31183 were fixed in the 6.0 branch only. They should be fixed in the plugin too, specially MySQL 6.0 is discontinued at this point. ------------------------------------------------------------------------ r2604 | inaam | 2008-08-21 09:37:06 -0500 (Thu, 21 Aug 2008) | 8 lines branches/6.0     bug#37232 Relax locking behaviour for REPLACE INTO t SELECT ... FROM t1. Now SELECT on t1 is performed as a consistent read when the isolation level is set to READ COMMITTED. Reviewed by: Heikki ------------------------------------------------------------------------ r2605 | inaam | 2008-08-21 09:59:33 -0500 (Thu, 21 Aug 2008) | 7 lines branches/6.0 Added a comment to clarify why distinct calls to read MySQL binary log file name and log position do not entail any race condition. Suggested by: Heikki ------------------------------------------------------------------------ r2956 | inaam | 2008-11-04 04:47:30 -0600 (Tue, 04 Nov 2008) | 11 lines branches/6.0  bug#31183 If the system tablespace runs out of space because 'autoextend' is not specified with innodb_data_file_path there was no error message printed to the error log. The client would get 'table full' error. This patch prints an appropriate error message to the error log. rb://43 Approved by: Marko ------------------------------------------------------------------------ r5940 | vasil | 2009-09-21 00:26:04 -0500 (Mon, 21 Sep 2009) | 4 lines branches/zip: Add ChangeLog entries for c5938. 	8fffb92862b643e4d38232d7fa790917caac31e8
----------------------------
"Applying InnoDB Plugin 1.0.5 snapshot , part 9 r5888 - plug.in related changes skipped r5889 - skipped(plug.in related changes) r5916 - innodb_bug4600.test and innodb_bug44369.test already exists in main suite Detailed revision comments: r5875 | vasil | 2009-09-12 07:11:25 -0500 (Sat, 12 Sep 2009) | 4 lines branches/zip: Remove unnecessary macro. r5888 | vasil | 2009-09-14 03:38:45 -0500 (Mon, 14 Sep 2009) | 40 lines branches/zip: Back-merge c5880 and c5881 from branches/embedded-1.0: ------------------------------------------------------------------------ r5880 | vasil | 2009-09-12 17:28:44 +0300 (Sat, 12 Sep 2009) | 18 lines Changed paths: M /branches/embedded-1.0/configure.in M /branches/embedded-1.0/include/os0sync.h M /branches/embedded-1.0/srv/srv0start.c branches/embedded-1.0: Clean up and simplify the code that surrounds the atomic ops: * Simplify the code that prints what atomics are used: Instead of repeating the same conditions on which each atomics are used use just one printf that prints a variable defined by the code which chooses what atomics to use. * In os0sync.h pick up each atomic variant only if it has been selected by autoconf (based on IB_ATOMIC_MODE_* macros). Define the startup message to be printed. * In configure.in: check what user has chosen and if he has chosen something that is not available, emit an error. If nothing has been chosen explicitly by the user, auto select an option according to the described logic in configure.in. ------------------------------------------------------------------------ r5881 | vasil | 2009-09-12 20:08:27 +0300 (Sat, 12 Sep 2009) | 4 lines Changed paths: M /branches/embedded-1.0/configure.in branches/embedded-1.0: Fix syntax error in test program. r5910 | marko | 2009-09-16 03:07:21 -0500 (Wed, 16 Sep 2009) | 9 lines branches/zip: Introduce UNIV_LOG_LSN_DEBUG and MLOG_LSN for redo log diagnostics.  This was written in order to better track down Issue #313 in InnoDB Hot Backup. MLOG_LSN: A new redo log entry type, for recording the current log sequence number (LSN).  This will be checked in an assertion in recv_parse_log_rec(). rb://161, discussed with Sunny and Vasil. r5916 | marko | 2009-09-16 04:54:43 -0500 (Wed, 16 Sep 2009) | 128 lines branches/zip: Merge revisions 5622:5912 from branches/5.1, except r5700 (changes to CMakeLists.txt) ------------------------------------------------------------------------ r5622 | vasil | 2009-08-03 15:27:00 +0300 (Mon, 03 Aug 2009) | 20 lines Changed paths: M /branches/5.1/Makefile.am branches/5.1: Merge a change from MySQL: ------------------------------------------------------------ revno: 2988 committer: Satya B <satya.bn@sun.com> branch nick: mysql-5.1-bugteam timestamp: Wed 2009-07-01 11:06:05 +0530 message: Fix build failure after applying Innodb snapshot 5.1-ss5282 After applying Innodb snapshot 5.1-ss5282, build was broken because of missing header file. Adding the header file to Makefile.am after informing the innodb developers. modified: storage/innobase/Makefile.am ------------------------------------------------------------------------ r5740 | jyang | 2009-09-03 06:33:47 +0300 (Thu, 03 Sep 2009) | 5 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/include/db0err.h A /branches/5.1/mysql-test/innodb_bug46000.result A /branches/5.1/mysql-test/innodb_bug46000.test branches/5.1: Disallow creating index with the name of ""GEN_CLUST_INDEX"" which is reserved for the default system primary index. (Bug #46000) rb://149 approved by Sunny Bains. ------------------------------------------------------------------------ r5741 | jyang | 2009-09-03 07:16:01 +0300 (Thu, 03 Sep 2009) | 5 lines Changed paths: M /branches/5.1/dict/dict0dict.c M /branches/5.1/handler/ha_innodb.cc A /branches/5.1/mysql-test/innodb_bug44369.result A /branches/5.1/mysql-test/innodb_bug44369.test M /branches/5.1/row/row0mysql.c branches/5.1: Block creating table with column name conflicting with Innodb reserved key words. (Bug #44369) rb://151 approved by Sunny Bains. ------------------------------------------------------------------------ r5757 | jyang | 2009-09-04 04:26:13 +0300 (Fri, 04 Sep 2009) | 3 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/include/db0err.h D /branches/5.1/mysql-test/innodb_bug46000.result D /branches/5.1/mysql-test/innodb_bug46000.test branches/5.1: Revert change in 5740. Making the fix in a subsequent check in. ------------------------------------------------------------------------ r5760 | jyang | 2009-09-04 07:07:34 +0300 (Fri, 04 Sep 2009) | 3 lines Changed paths: M /branches/5.1/dict/dict0dict.c M /branches/5.1/handler/ha_innodb.cc D /branches/5.1/mysql-test/innodb_bug44369.result D /branches/5.1/mysql-test/innodb_bug44369.test M /branches/5.1/row/row0mysql.c branches/5.1: This is to revert change 5741. A return status for create_table_def() needs to be fixed. ------------------------------------------------------------------------ r5797 | calvin | 2009-09-09 18:26:29 +0300 (Wed, 09 Sep 2009) | 3 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: merge change from 5.1.38 HA_ERR_TOO_MANY_CONCURRENT_TRXS is added in 5.1.38. ------------------------------------------------------------------------ r5799 | calvin | 2009-09-09 20:47:31 +0300 (Wed, 09 Sep 2009) | 10 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: fix bug#46256 Allow tables to be dropped even if the collation is not found, but issue a warning. Could not find an easy way to add mysql-test since it requires changes to charsets and restarting the server. Tests were executed manually. Approved by: Heikki (on IM) ------------------------------------------------------------------------ r5805 | vasil | 2009-09-10 08:41:48 +0300 (Thu, 10 Sep 2009) | 7 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: Fix a compilation warning caused by c5799: handler/ha_innodb.cc: In function 'void innobase_get_cset_width(ulint, ulint*, ulint*)': handler/ha_innodb.cc:830: warning: format '%d' expects type 'int', but argument 2 has type 'ulint' ------------------------------------------------------------------------ r5834 | jyang | 2009-09-11 00:43:05 +0300 (Fri, 11 Sep 2009) | 5 lines Changed paths: M /branches/5.1/dict/dict0dict.c M /branches/5.1/handler/ha_innodb.cc A /branches/5.1/mysql-test/innodb_bug44369.result A /branches/5.1/mysql-test/innodb_bug44369.test M /branches/5.1/row/row0mysql.c branches/5.1: Block creating table with column name conflicting with Innodb reserved key words. (Bug #44369) rb://151 approved by Sunny Bains. ------------------------------------------------------------------------ r5895 | jyang | 2009-09-15 03:39:21 +0300 (Tue, 15 Sep 2009) | 5 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc A /branches/5.1/mysql-test/innodb_bug46000.result A /branches/5.1/mysql-test/innodb_bug46000.test branches/5.1: Disallow creating index with the name of ""GEN_CLUST_INDEX"" which is reserved for the default system primary index. (Bug #46000) rb://149 approved by Marko Makela. ------------------------------------------------------------------------ "	15fd02cb0209d5e13b852d4e3b1a5e3d1fcd36e8
----------------------------
Bug#47944 ndb_mgmd config diff printout for larger numbers failure - Fix format specifier to printout the unisgned number as unsigned 	a1dba5e25bd62cdd313fcfa28903097368cd49cc
----------------------------
Bug#47932 ndb_mgmd, fails to parse config with DiskSyncSize=4294967040 - The printout of unsigned 64bit values was using non standard %Lu, changed it to %llu 	9fd68de4b091ee1c408c5dcb244a42a10a37a96d
----------------------------
"Fix for bug #44738 ""fill_schema_table_from_frm() opens tables without lowercasing table name"". In lower_case_table_names > 0 mode some queries to I_S left entries with incorrect key in table definition cache. This wasted memory and caused some of the further queries to I_S to produce stale results in cases when table definition was changed by a DDL statement. Also in combination with similar problem in CREATE TABLE (which also has peeked into table definition cache using non-normalized key) this issue led to to spurious ER_TABLE_EXISTS_ERROR errors when one tried to create a table with the same name as a previously existing but dropped table (assuming that table name contained characters in upper case). This problem occured due to fact that fill_schema_table_from_frm() was not properly normalizing (lowercasing) database and table names which it used for lookups in table definition cache. This fix adds proper normalization to this function. It also solves similar problem in CREATE TABLE's code by ensuring that it uses properly normalized version of table name when it peeks into table definition cache instead of non-normalized one. "	a7b014805775602aa02948bd5fc00335de9a4aa6
----------------------------
"Applying InnoDB Plugin 1.0.5 snapshot, part 7 From revisions r5792 to r5864 Detailed revision comments: r5792 | vasil | 2009-09-09 08:35:58 -0500 (Wed, 09 Sep 2009) | 32 lines branches/zip: Fix a bug in manipulating the variable innodb_old_blocks_pct: for any value assigned it got that value -1, except for 75. When assigned 75, it got 75. mysql> set global innodb_old_blocks_pct=15; Query OK, 0 rows affected (0.00 sec) mysql> show variables like 'innodb_old_blocks_pct'; +-----------------------+-------+ | Variable_name         | Value | +-----------------------+-------+ | innodb_old_blocks_pct | 14    | +-----------------------+-------+ 1 row in set (0.00 sec) mysql> set global innodb_old_blocks_pct=75; Query OK, 0 rows affected (0.00 sec) mysql> show variables like 'innodb_old_blocks_pct'; +-----------------------+-------+ | Variable_name         | Value | +-----------------------+-------+ | innodb_old_blocks_pct | 75    | +-----------------------+-------+ After the fix it gets exactly what was assigned. Approved by:	Marko (via IM) r5798 | calvin | 2009-09-09 10:28:10 -0500 (Wed, 09 Sep 2009) | 5 lines branches/zip: HA_ERR_TOO_MANY_CONCURRENT_TRXS is added in 5.1.38. But the plugin should still work with previous versions of MySQL. r5804 | marko | 2009-09-10 00:29:31 -0500 (Thu, 10 Sep 2009) | 1 line branches/zip: trx_cleanup_at_db_startup(): Fix a typo in comment. r5822 | marko | 2009-09-10 05:10:20 -0500 (Thu, 10 Sep 2009) | 1 line branches/zip: buf_page_release(): De-stutter the function comment. r5825 | marko | 2009-09-10 05:47:09 -0500 (Thu, 10 Sep 2009) | 20 lines branches/zip: Reduce mutex contention that was introduced when addressing Bug #45015 (Issue #316), in r5703. buf_page_set_accessed_make_young(): New auxiliary function, called by buf_page_get_zip(), buf_page_get_gen(), buf_page_optimistic_get_func(). Call ut_time_ms() outside of buf_pool_mutex. Use cached access_time. buf_page_set_accessed(): Add the parameter time_ms, so that ut_time_ms() need not be called while holding buf_pool_mutex. buf_page_optimistic_get_func(), buf_page_get_known_nowait(): Read buf_page_t::access_time without holding buf_pool_mutex. This should be OK, because the field is only used for heuristic purposes. buf_page_peek_if_too_old(): If buf_pool->freed_page_clock == 0, return FALSE, so that we will not waste time moving blocks in the LRU list in the warm-up phase or when the workload fits in the buffer pool. rb://156 approved by Sunny Bains r5826 | marko | 2009-09-10 06:29:46 -0500 (Thu, 10 Sep 2009) | 12 lines branches/zip: Roll back recovered dictionary transactions before dropping incomplete indexes (Issue #337). trx_rollback_or_clean_recovered(ibool all): New function, split from trx_rollback_or_clean_all_recovered().  all==FALSE will only roll back dictionary transactions. recv_recovery_from_checkpoint_finish(): Call trx_rollback_or_clean_recovered(FALSE) before row_merge_drop_temp_indexes(). rb://158 approved by Sunny Bains r5858 | vasil | 2009-09-11 12:46:47 -0500 (Fri, 11 Sep 2009) | 4 lines branches/zip: Fix the indentation of the closing bracket. r5863 | vasil | 2009-09-12 02:07:08 -0500 (Sat, 12 Sep 2009) | 10 lines branches/zip: Check that pthread_t can indeed be passed to Solaris atomic functions, instead of assuming that it can be passed if 0 can be assigned to it. It could be that: * 0 can be assigned, but pthread_t cannot be passed and * 0 cannot be assigned but pthread_t can be passed Better to check what we are interested in, not something else and make assumptions. r5864 | vasil | 2009-09-12 02:22:55 -0500 (Sat, 12 Sep 2009) | 4 lines branches/zip: Include string.h which is needed for memset(). "	bf3b0747af10346bcdb97ea1cae42460f94b182e
----------------------------
Bug #47797 CMake, engine can't specify additional libraries to link with - Make it possible for the CmakeLists.txt files in an engine to use ${engine}_LIBS to set additional libraries to link with Example: NDBCLUSTER_LIBS = ndbclient 	5da8781d7cfa8935a60335ea9bf5f665f12ced69
----------------------------
"Applying InnoDB Plugin 1.0.5 snapshot, part 4 From revision r5703 to r5716 Detailed revision comments: r5703 | marko | 2009-08-27 02:25:00 -0500 (Thu, 27 Aug 2009) | 41 lines branches/zip: Replace the constant 3/8 ratio that controls the LRU_old size with the settable global variable innodb_old_blocks_pct. The minimum and maximum values are 5 and 95 per cent, respectively. The default is 100*3/8, in line with the old behavior. ut_time_ms(): New utility function, to return the current time in milliseconds. TODO: Is there a more efficient timestamp function, such as rdtsc divided by a power of two? buf_LRU_old_threshold_ms: New variable, corresponding to innodb_old_blocks_time. The value 0 is the default behaviour: no timeout before making blocks 'new'. bpage->accessed, bpage->LRU_position, buf_pool->ulint_clock: Remove. bpage->access_time: New field, replacing bpage->accessed. Protected by buf_pool_mutex instead of bpage->mutex. Updated when a page is created or accessed the first time in the buffer pool. buf_LRU_old_ratio, innobase_old_blocks_pct: New variables, corresponding to innodb_old_blocks_pct buf_LRU_old_ratio_update(), innobase_old_blocks_pct_update(): Update functions for buf_LRU_old_ratio, innobase_old_blocks_pct. buf_page_peek_if_too_old(): Compare ut_time_ms() to bpage->access_time if buf_LRU_old_threshold_ms && bpage->old.  Else observe buf_LRU_old_ratio and bpage->freed_page_clock. buf_pool_t: Add n_pages_made_young, n_pages_not_made_young, n_pages_made_young_old, n_pages_not_made_young, for statistics. buf_print(): Display buf_pool->n_pages_made_young, buf_pool->n_pages_not_made_young.  This function is only for crash diagnostics. buf_print_io(): Display buf_pool->LRU_old_len and quantities derived from buf_pool->n_pages_made_young, buf_pool->n_pages_not_made_young. This function is invoked by SHOW ENGINE INNODB STATUS. rb://129 approved by Heikki Tuuri.  This addresses Bug #45015. r5704 | marko | 2009-08-27 03:31:17 -0500 (Thu, 27 Aug 2009) | 32 lines branches/zip: Fix a critical bug in fast index creation that could corrupt the created indexes. row_merge(): Make ""half"" an in/out parameter. Determine the offset of half the output file. Copy the last blocks record-by-record instead of block-by-block, so that the records can be counted. Check that the input and output have matching n_rec. row_merge_sort(): Do not assume that two blocks of size N are merged into a block of size 2*N. The output block can be shorter than the input if the last page of each input block is almost empty. Use an accurate termination condition, based on the ""half"" computed by row_merge(). row_merge_read(), row_merge_write(), row_merge_blocks(): Add debug output. merge_file_t, row_merge_file_create(): Add n_rec, the number of records in the merge file. row_merge_read_clustered_index(): Update n_rec. row_merge_blocks(): Update and check n_rec. row_merge_blocks_copy(): New function, for copying the last blocks in row_merge().  Update and check n_rec. This bug was discovered with a user-supplied test case that creates an index where the initial temporary file is 249 one-megabyte blocks and the merged files become smaller. In the test, possible merge record sizes are 10, 18, and 26 bytes. rb://150 approved by Sunny Bains.  This addresses Issue #320. r5705 | marko | 2009-08-27 06:56:24 -0500 (Thu, 27 Aug 2009) | 11 lines branches/zip: dict_index_find_cols(): On column name lookup failure, return DB_CORRUPTION (HA_ERR_CRASHED) instead of abnormally terminating the server.  Also, disable the previously added diagnostic output to the error log, because mysql-test-run does not like extra output in the error log.  (Bug #44571) dict_index_add_to_cache(): Handle errors from dict_index_find_cols(). mysql-test/innodb_bug44571.test: A test case for triggering the bug. rb://135 approved by Sunny Bains. r5706 | inaam | 2009-08-27 11:00:27 -0500 (Thu, 27 Aug 2009) | 20 lines branches/zip rb://147 Done away with following two status variables: innodb_buffer_pool_read_ahead_rnd innodb_buffer_pool_read_ahead_seq Introduced two new status variables: innodb_buffer_pool_read_ahead = number of pages read as part of readahead since server startup innodb_buffer_pool_read_ahead_evicted = number of pages that are read in as readahead but were evicted before ever being accessed since server startup i.e.: a measure of how badly our readahead is performing SHOW INNODB STATUS will show two extra numbers in buffer pool section: pages read ahead/sec and pages evicted without access/sec Approved by: Marko r5707 | inaam | 2009-08-27 11:20:35 -0500 (Thu, 27 Aug 2009) | 6 lines branches/zip Remove unused macros as we erased the random readahead code in r5703. Also fixed some comments. r5708 | inaam | 2009-08-27 17:43:32 -0500 (Thu, 27 Aug 2009) | 4 lines branches/zip Remove redundant TRUE : FALSE from the return statement r5709 | inaam | 2009-08-28 01:22:46 -0500 (Fri, 28 Aug 2009) | 5 lines branches/zip rb://152 Disable display of deprecated parameter innodb_file_io_threads in 'show variables'. r5714 | marko | 2009-08-31 01:10:10 -0500 (Mon, 31 Aug 2009) | 5 lines branches/zip: buf_chunk_not_freed(): Do not acquire block->mutex unless block->page.state == BUF_BLOCK_FILE_PAGE.  Check that block->page.state makes sense. Approved by Sunny Bains over the IM. r5716 | vasil | 2009-08-31 02:47:49 -0500 (Mon, 31 Aug 2009) | 9 lines branches/zip: Fix Bug#46718 InnoDB plugin incompatible with gcc 4.1 (at least: on PPC): ""Undefined symbol"" by implementing our own check in plug.in instead of using the result from the check from MySQL because it is insufficient. Approved by:	Marko (rb://154) "	7f890ab6aa436386f1aa9eb989b164d9af82b008
----------------------------
"Applying InnoDB Plugin 1.0.5 snapshot, part 2 From r5639 to r5685 Detailed revision comments: r5639 | marko | 2009-08-06 05:39:34 -0500 (Thu, 06 Aug 2009) | 3 lines branches/zip: mem_heap_block_free(): If innodb_use_sys_malloc is set, do not tell Valgrind that the memory is free, to avoid a bogus warning in Valgrind's built-in free() hook. r5642 | calvin | 2009-08-06 18:04:03 -0500 (Thu, 06 Aug 2009) | 2 lines branches/zip: remove duplicate ""the"" in comments. r5662 | marko | 2009-08-11 04:54:16 -0500 (Tue, 11 Aug 2009) | 1 line branches/zip: Bump the version number to 1.0.5 after releasing 1.0.4. r5663 | marko | 2009-08-11 06:42:37 -0500 (Tue, 11 Aug 2009) | 2 lines branches/zip: trx_general_rollback_for_mysql(): Remove the redundant parameter partial. If savept==NULL, partial==FALSE. r5670 | marko | 2009-08-12 08:16:37 -0500 (Wed, 12 Aug 2009) | 2 lines branches/zip: trx_undo_rec_copy(): Add const qualifier to undo_rec. This is a non-functional change. r5671 | marko | 2009-08-13 03:46:33 -0500 (Thu, 13 Aug 2009) | 5 lines branches/zip: ha_innobase::add_index(): Fix Bug #46557: after a successful operation, read innodb_table->flags from the newly created table object, not from the old one that was just freed. Approved by Sunny. r5681 | sunny | 2009-08-14 01:16:24 -0500 (Fri, 14 Aug 2009) | 3 lines branches/zip: When building HotBackup srv_use_sys_malloc is #ifdef out. We move access to the this variable within a !UNIV_HOTBACKUP block. r5684 | sunny | 2009-08-20 03:05:30 -0500 (Thu, 20 Aug 2009) | 10 lines branches/zip: Fix bug# 46650:  Innodb assertion autoinc_lock == lock in lock_table_remove_low on INSERT SELECT We only store the autoinc locks that are granted in the transaction's autoinc lock vector. A transacton, that has been rolled back due to a deadlock because of an AUTOINC lock attempt, will not have added that lock to the vector. We need to check for that when we remove that lock. rb://145 Approved by Marko. r5685 | sunny | 2009-08-20 03:18:29 -0500 (Thu, 20 Aug 2009) | 2 lines branches/zip: Update the ChangeLog with r5684 change. "	cf8c95e0653129b19c80f0c1cd6eb42d20edc406
----------------------------
Bug#47865  SHOW CREATE TABLE does not show the current auto_increment number for ndb tables: reading auto_increment value in ha_ndbcluster::update_create_info 	e2792b918950b1a928188c354a9efb41b8a2bcaa
----------------------------
Bug #46327 MTR2 prevents gcov data accumulation mysqladmin fails on Linux in 6.0 without --character-sets-dir Also added timeout for server shutdown, hope this will solve it 	a0ed9a389df83559ba8b4426d20320b057f639d1
----------------------------
ndb - get new CMake files working also for libmysqld - Add the additional engine libraries also to libmysqld - Fix the rule that adds all source files from engine XXX to libmysqld so that it does not use the engine name as directory name - Fix some faulty include directories in NdbApi - Specify the ha_ndbcluster*.cc files with relative path so they work also in libmysqld 	d80e9690f6fa0393aaa8bfd01b6e3e8947d0cf5a
----------------------------
ndb - remove config.cmake also from Makefile.am 	cc70f9dd6cf83418c7f020777256220776f500b0
----------------------------
ndb - Adapt CMake files to new plugin support in 5.1.39 - Move all relevant defines and checks to the CMakeLists.txt below storage/ndb - Keep only changes that affect build of ha_ndbcluster and storage/ndb, ditch the rest - Disable innodb_plugin just as it's been disabled in Makefile's - Include patch for bug#47795 making it possible have an engine with different name than it's directory - Include patch for bug#47797 making it possible to specify additional libraries to link with 	ea5d1fea5b35cf98648a7f6c07a293b284da3009
----------------------------
ndb - Remove remnants of HAVE_NDBCLUSTER_DB 	59e61cffe99fcdd718f76e14d063981cb28700e0
----------------------------
Backport BUG#25192 Using relay-log and relay-log-index without values produces unexpected results. Options loaded from config files were added before command line arguments, and they were parsed together, which could interprete the following: option-a option-b as --option-a=--option-b if 'option-a' requires a value, and caused confusing. Because all options that requires a value are always given in the form '--option=value', so it's an error if there is no '=value' part for such an option read from config file. This patch added a separator to separate the arguments from config files and that from command line, so that they can be handled differently. And report an error for options loaded from config files that requires a value and is not given in the form '--option=value'. 	86c36aa1fd05c510b036dcc8573e68b58549742d
----------------------------
Bug#46018      group_concat(distinct ...) uses max_heap_table_size for memory allocations Use min(max_heap_table_size, tmp_table_size) instead per-file comments: sql/item_sum.cc Bug#46018      group_concat(distinct ...) uses max_heap_table_size for memory allocations Item_sum_**::setup fixed, so they use ram_limitation() for Unique-s they embed sql/item_sum.h Bug#46018      group_concat(distinct ...) uses max_heap_table_size for memory allocations Item_sum::ram_limitation() declared 	f41c5961d0f0e643fb0ed3dddc2440b1676583a0
----------------------------
BUG#43075 rpl.rpl_sync fails sporadically on pushbuild NOTE: Backporting the patch to next-mr. The slave was crashing while failing to execute the init_slave() function. The issue stems from two different reasons: 1 - A failure while allocating the master info structure generated a segfault due to a NULL pointer. 2 - A failure while recovering generated a segfault due to a non-initialized relay log file. In other words, the mi->init and rli->init were both set to true before executing the recovery process thus creating an inconsistent state as the relay log file was not initialized. To circumvent such problems, we refactored the recovery process which is now executed while initializing the relay log. It is ensured that the master info structure is created before accessing it and any error is propagated thus avoiding to set mi->init and rli->init to true when for instance the relay log is not initialized or the relay info is not flushed. The changes related to the refactory are described below: 1 - Removed call to init_recovery from init_slave. 2 - Changed the signature of the function init_recovery. 3 - Removed flushes. They are called while initializing the relay log and master info. 4 - Made sure that if the relay info is not flushed the mi-init and rli-init are not set to true. In this patch, we also replaced the exit(1) in the fault injection by DBUG_ABORT() to make it compliant with the code guidelines. 	9682ff8a26cef6dc2252b6a520f841dcfa62ee20
----------------------------
Bug#47525: MySQL crashed (Federated) On Mac OS X or Windows, sending a SIGHUP to the server or a asynchronous flush (triggered by flush_time), would cause the server to crash. The problem was that a hook used to detach client API handles wasn't prepared to handle cases where the thread does not have a associated session. The solution is to verify whether the thread has a associated session before trying to detach a handle. 	d941a1f3042c4b6278cc41b32b7367a8b4c76c90
----------------------------
bug#27693: Windows compilation from bk fails using WITH_BERKELEY_STORAGE_ENGINE Make configure.js bail with an error if trying to build bdb from a bzr tree. 	706241d679877d8d69c0719a1a84cdddf922298e
----------------------------
BUG#40337 Fsyncing master and relay log to disk after every event is too slow NOTE: Backporting the patch to next-mr. The fix proposed in BUG#35542 and BUG#31665 introduces a performance issue when fsyncing the master.info, relay.info and relay-log.bin* after #th events. Although such solution has been proposed to reduce the probability of corrupted files due to a slave-crash, the performance penalty introduced by it has made the approach impractical for highly intensive workloads. In a nutshell, the option --syn-relay-log proposed in BUG#35542 and BUG#31665 simultaneously fsyncs master.info, relay-log.info and relay-log.bin* and this is the main source of performance issues. This patch introduces new options that give more control to the user on what should be fsynced and how often: 1) (--sync-master-info, integer) which syncs the master.info after #th event; 2) (--sync-relay-log, integer) which syncs the relay-log.bin* after #th events. 3) (--sync-relay-log-info, integer) which syncs the relay.info after #th transactions. To provide both performance and increased reliability, we recommend the following setup: 1) --sync-master-info = 0 eventually the operating system will fsync it; 2) --sync-relay-log = 0 eventually the operating system will fsync it; 3) --sync-relay-log-info = 1 fsyncs it after every transaction; Notice, that the previous setup does not reduce the probability of corrupted master.info and relay-log.bin*. To overcome the issue, this patch also introduces a recovery mechanism that right after restart throws away relay-log.bin* retrieved from a master and updates the master.info based on the relay.info: 4) (--relay-log-recovery, boolean) which enables a recovery mechanism that throws away relay-log.bin* after a crash. However, it can only recover the incorrect binlog file and position in master.info, if other informations (host, port password, etc) are corrupted or incorrect, then this recovery mechanism will fail to work. 	a48ff22004594cacc0517d50a631a931f3ce06a9
----------------------------
BUG#35542 Add option to sync master and relay log to disk after every event BUG#31665 sync_binlog should cause relay logs to be synchronized NOTE: Backporting the patch to next-mr. Add sync_relay_log option to server, this option works for relay log the same as option sync_binlog for binlog. This option also synchronize master info to disk when set to non-zero value. Original patches from Sinisa and Mark, with some modifications 	4e0cb6dbb7da3a8e98f6050779206d65f3096f47
----------------------------
"BUG#42928: binlog-format setting prevents server from start if binary logging is disabled NOTE: this is the backport to next-mr. If one sets binlog-format but does NOT enable binary log, server refuses to start up. The following messages appears in the error log: 090217 12:47:14 [ERROR] You need to use --log-bin to make --binlog-format work. 090217 12:47:14 [ERROR] Aborting This patch addresses this by making the server not to bail out if the binlog-format is set without the log-bin option. Additionally, the specified binlog-format is stored, in the global system variable ""binlog_format"", and a warning is printed instead of an error. "	a11e2137c241a3e5e588c4f48659d3f7a856f51e
----------------------------
"BUG#23300: Slow query log on slave does not log slow replicated statements NOTE: this is the backport to next-mr. When using replication, the slave will not log any slow query logs queries replicated from the master, even if the option ""--log-slow-slave-statements"" is set and these take more than ""log_query_time"" to execute. In order to log slow queries in replicated thread one needs to set the --log-slow-slave-statements, so that the SQL thread is initialized with the correct switch. Although setting this flag correctly configures the slave thread option to log slow queries, there is an issue with the condition that is used to check whether to log the slow query or not. When replaying binlog events the statement contains the SET TIMESTAMP clause which will force the slow logging condition check to fail. Consequently, the slow query logging will not take place. This patch addresses this issue by removing the second condition from the log_slow_statements as it prevents slow queries to be binlogged and seems to be deprecated. "	7cf996223d12dc4049ebccb9ccc80df7ece9e091
----------------------------
"WL#4828 and BUG#45747 NOTE: Backporting the patch to next-mr. WL#4828 Augment DBUG_ENTER/DBUG_EXIT to crash MySQL in different functions ------- The assessment of the replication code in the presence of faults is extremely import to increase reliability. In particular, one needs to know if servers will either correctly recovery or print out appropriate error messages thus avoiding unexpected problems in a production environment. In order to accomplish this, the current patch refactories the debug macros already provided in the source code and introduces three new macros that allows to inject faults, specifically crashes, while entering or exiting a function or method. For instance, to crash a server while returning from the init_slave function (see module sql/slave.cc), one needs to do what follows: 1 - Modify the source replacing DBUG_RETURN by DBUG_CRASH_RETURN; DBUG_CRASH_RETURN(0); 2 - Use the debug variable to activate dbug instructions: SET SESSION debug=""+d,init_slave_crash_return""; The new macros are briefly described below: DBUG_CRASH_ENTER (function) is equivalent to DBUG_ENTER which registers the beginning of a function but in addition to it allows for crashing the server while entering the function if the appropriate dbug instruction is activate. In this case, the dbug instruction should be ""+d,function_crash_enter"". DBUG_CRASH_RETURN (value) is equivalent to DBUG_RETURN which notifies the end of a function but in addition to it allows for crashing the server while returning from the function if the appropriate dbug instruction is activate. In this case, the dbug instruction should be ""+d,function_crash_return"". Note that ""function"" should be the same string used by either the DBUG_ENTER or DBUG_CRASH_ENTER. DBUG_CRASH_VOID_RETURN (value) is equivalent to DBUG_VOID_RETURN which notifies the end of a function but in addition to it allows for crashing the server while returning from the function if the appropriate dbug instruction is activate. In this case, the dbug instruction should be ""+d,function_crash_return"". Note that ""function"" should be the same string used by either the DBUG_ENTER or DBUG_CRASH_ENTER. To inject other faults, for instance, wrong return values, one should rely on the macros already available. The current patch also removes a set of macros that were either not being used or were redundant as other macros could be used to provide the same feature. In the future, we also consider dynamic instrumentation of the code. BUG#45747 DBUG_CRASH_* is not setting the strict option --------- When combining DBUG_CRASH_* with ""--debug=d:t:i:A,file"" the server crashes due to a call to the abort function in the DBUG_CRASH_* macro althought the appropriate keyword has not been set. "	5280dc82c1c5c0564073c49b377aab4c877dda58
----------------------------
BUG#44663 Unused replication options prevent server from starting. NOTE: Backporting the patch to next-mr. The use of option log_slave_updates without log_bin was preventing the server from starting. To fix the problem, we replaced the error message and the exit call by a warning message. 	f940fe75cc0ce3b94e269e0691ee01e7ce717cfd
----------------------------
"BUG#28777, WL#4293: SHOW BINLOG EVENTS does not work on relay log files NOTE: this is the backport to next-mr. SHOW BINLOG EVENTS does not work with relay log files. If issuing ""SHOW BINLOG EVENTS IN 'relay-log.000001'"" in a non-empty relay log file (relay-log.000001), mysql reports empty set. This patch addresses this issue by extending the SHOW command with RELAYLOG. Events in relay log files can now be inspected by issuing SHOW RELAYLOG EVENTS [IN 'log_name'] [FROM pos] [LIMIT [offset,] row_count]. "	d28ef002d7c9bd8febf8965134cac802222ba279
----------------------------
"branches/innodb+: Merged revisions 5525:5971 from branches/zip ------------------------------------------------------------------------ r5971 | marko | 2009-09-23 09:03:51 -0400 (Wed, 23 Sep 2009) | 2 lines branches/zip: os_file_pwrite(): Make the code compile in InnoDB Hot Backup when the pwrite system call is not available. ------------------------------------------------------------------------ r5956 | calvin | 2009-09-22 19:30:10 -0400 (Tue, 22 Sep 2009) | 4 lines branches/zip: remove handler0vars.h from Makefile.am Left over from r5950. ------------------------------------------------------------------------ r5951 | calvin | 2009-09-22 11:17:01 -0400 (Tue, 22 Sep 2009) | 4 lines branches/zip: adjust CMake file to work with old versions of MySQL Tested with MySQL 5.1.38 and 5.1.30. ------------------------------------------------------------------------ r5950 | calvin | 2009-09-22 02:42:46 -0400 (Tue, 22 Sep 2009) | 17 lines branches/zip: adjust Windows loading method for 5.1.38 Starting at 5.1.38, MySQL server exports symbols needed for dynamic plugin on Windows. There is no need for Windows specific loading. Also, the CMake files are simplified in 5.1.38. When WITH_INNOBASE_STORAGE_ENGINE is specified during configuration (win\configure.js), InnoDB is built as a static library. Otherwise, a dynamic InnoDB will be built (ha_innodb.dll). CMakeLists.txt requires minor changes in order to work with MySQL prior to 5.1.38. The changes will be in a separate patch. This patch addresses Mantis issue#286. ------------------------------------------------------------------------ r5945 | calvin | 2009-09-21 10:53:22 -0400 (Mon, 21 Sep 2009) | 4 lines branches/zip: fix a type in r5935 Should be innodb_open_files, spotted by Michael. ------------------------------------------------------------------------ r5940 | vasil | 2009-09-21 01:26:04 -0400 (Mon, 21 Sep 2009) | 4 lines branches/zip: Add ChangeLog entries for c5938. ------------------------------------------------------------------------ r5938 | calvin | 2009-09-19 03:14:25 -0400 (Sat, 19 Sep 2009) | 41 lines branches/zip: Merge revisions 2584:2956 from branches/6.0, except c2932. Bug#37232 and bug#31183 were fixed in the 6.0 branch only. They should be fixed in the plugin too, specially MySQL 6.0 is discontinued at this point. ------------------------------------------------------------------------ r2604 | inaam | 2008-08-21 09:37:06 -0500 (Thu, 21 Aug 2008) | 8 lines branches/6.0     bug#37232 Relax locking behaviour for REPLACE INTO t SELECT ... FROM t1. Now SELECT on t1 is performed as a consistent read when the isolation level is set to READ COMMITTED. Reviewed by: Heikki ------------------------------------------------------------------------ r2605 | inaam | 2008-08-21 09:59:33 -0500 (Thu, 21 Aug 2008) | 7 lines branches/6.0 Added a comment to clarify why distinct calls to read MySQL binary log file name and log position do not entail any race condition. Suggested by: Heikki ------------------------------------------------------------------------ r2956 | inaam | 2008-11-04 04:47:30 -0600 (Tue, 04 Nov 2008) | 11 lines branches/6.0  bug#31183 If the system tablespace runs out of space because 'autoextend' is not specified with innodb_data_file_path there was no error message printed to the error log. The client would get 'table full' error. This patch prints an appropriate error message to the error log. rb://43 Approved by: Marko ------------------------------------------------------------------------ ------------------------------------------------------------------------ r5935 | calvin | 2009-09-18 17:08:02 -0400 (Fri, 18 Sep 2009) | 6 lines branches/zip: fix bug#44338; minor non-functional changes Bug#44338 innodb has message about non-existing option innodb_max_files_open. Change the option to innodb_open_files. The fix was committed into 6.0 branch. ------------------------------------------------------------------------ r5934 | vasil | 2009-09-18 13:06:46 -0400 (Fri, 18 Sep 2009) | 4 lines branches/zip: Fix typo. ------------------------------------------------------------------------ r5924 | vasil | 2009-09-18 00:59:30 -0400 (Fri, 18 Sep 2009) | 4 lines branches/zip: White space and formatting cleanup in the ChangeLog ------------------------------------------------------------------------ r5922 | marko | 2009-09-17 02:32:08 -0400 (Thu, 17 Sep 2009) | 4 lines branches/zip: innodb-zip.test: Make the test work with zlib 1.2.3.3. Apparently, the definition of compressBound() has slightly changed. This has been filed as Mantis Issue #345. ------------------------------------------------------------------------ r5920 | vasil | 2009-09-16 14:47:22 -0400 (Wed, 16 Sep 2009) | 4 lines branches/zip: Add ChangeLog entries for r5916. ------------------------------------------------------------------------ r5919 | vasil | 2009-09-16 14:37:13 -0400 (Wed, 16 Sep 2009) | 4 lines branches/zip: Whitespace cleanup in the ChangeLog. ------------------------------------------------------------------------ r5917 | marko | 2009-09-16 05:56:23 -0400 (Wed, 16 Sep 2009) | 1 line branches/zip: innobase_get_cset_width(): Cache the value of current_thd. ------------------------------------------------------------------------ r5916 | marko | 2009-09-16 05:54:43 -0400 (Wed, 16 Sep 2009) | 128 lines branches/zip: Merge revisions 5622:5912 from branches/5.1, except r5700 (changes to CMakeLists.txt) ------------------------------------------------------------------------ r5622 | vasil | 2009-08-03 15:27:00 +0300 (Mon, 03 Aug 2009) | 20 lines Changed paths: M /branches/5.1/Makefile.am branches/5.1: Merge a change from MySQL: ------------------------------------------------------------ revno: 2988 committer: Satya B <satya.bn@sun.com> branch nick: mysql-5.1-bugteam timestamp: Wed 2009-07-01 11:06:05 +0530 message: Fix build failure after applying Innodb snapshot 5.1-ss5282 After applying Innodb snapshot 5.1-ss5282, build was broken because of missing header file. Adding the header file to Makefile.am after informing the innodb developers. modified: storage/innobase/Makefile.am ------------------------------------------------------------------------ r5740 | jyang | 2009-09-03 06:33:47 +0300 (Thu, 03 Sep 2009) | 5 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/include/db0err.h A /branches/5.1/mysql-test/innodb_bug46000.result A /branches/5.1/mysql-test/innodb_bug46000.test branches/5.1: Disallow creating index with the name of ""GEN_CLUST_INDEX"" which is reserved for the default system primary index. (Bug #46000) rb://149 approved by Sunny Bains. ------------------------------------------------------------------------ r5741 | jyang | 2009-09-03 07:16:01 +0300 (Thu, 03 Sep 2009) | 5 lines Changed paths: M /branches/5.1/dict/dict0dict.c M /branches/5.1/handler/ha_innodb.cc A /branches/5.1/mysql-test/innodb_bug44369.result A /branches/5.1/mysql-test/innodb_bug44369.test M /branches/5.1/row/row0mysql.c branches/5.1: Block creating table with column name conflicting with Innodb reserved key words. (Bug #44369) rb://151 approved by Sunny Bains. ------------------------------------------------------------------------ r5757 | jyang | 2009-09-04 04:26:13 +0300 (Fri, 04 Sep 2009) | 3 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/include/db0err.h D /branches/5.1/mysql-test/innodb_bug46000.result D /branches/5.1/mysql-test/innodb_bug46000.test branches/5.1: Revert change in 5740. Making the fix in a subsequent check in. ------------------------------------------------------------------------ r5760 | jyang | 2009-09-04 07:07:34 +0300 (Fri, 04 Sep 2009) | 3 lines Changed paths: M /branches/5.1/dict/dict0dict.c M /branches/5.1/handler/ha_innodb.cc D /branches/5.1/mysql-test/innodb_bug44369.result D /branches/5.1/mysql-test/innodb_bug44369.test M /branches/5.1/row/row0mysql.c branches/5.1: This is to revert change 5741. A return status for create_table_def() needs to be fixed. ------------------------------------------------------------------------ r5797 | calvin | 2009-09-09 18:26:29 +0300 (Wed, 09 Sep 2009) | 3 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: merge change from 5.1.38 HA_ERR_TOO_MANY_CONCURRENT_TRXS is added in 5.1.38. ------------------------------------------------------------------------ r5799 | calvin | 2009-09-09 20:47:31 +0300 (Wed, 09 Sep 2009) | 10 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: fix bug#46256 Allow tables to be dropped even if the collation is not found, but issue a warning. Could not find an easy way to add mysql-test since it requires changes to charsets and restarting the server. Tests were executed manually. Approved by: Heikki (on IM) ------------------------------------------------------------------------ r5805 | vasil | 2009-09-10 08:41:48 +0300 (Thu, 10 Sep 2009) | 7 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: Fix a compilation warning caused by c5799: handler/ha_innodb.cc: In function 'void innobase_get_cset_width(ulint, ulint*, ulint*)': handler/ha_innodb.cc:830: warning: format '%d' expects type 'int', but argument 2 has type 'ulint' ------------------------------------------------------------------------ r5834 | jyang | 2009-09-11 00:43:05 +0300 (Fri, 11 Sep 2009) | 5 lines Changed paths: M /branches/5.1/dict/dict0dict.c M /branches/5.1/handler/ha_innodb.cc A /branches/5.1/mysql-test/innodb_bug44369.result A /branches/5.1/mysql-test/innodb_bug44369.test M /branches/5.1/row/row0mysql.c branches/5.1: Block creating table with column name conflicting with Innodb reserved key words. (Bug #44369) rb://151 approved by Sunny Bains. ------------------------------------------------------------------------ r5895 | jyang | 2009-09-15 03:39:21 +0300 (Tue, 15 Sep 2009) | 5 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc A /branches/5.1/mysql-test/innodb_bug46000.result A /branches/5.1/mysql-test/innodb_bug46000.test branches/5.1: Disallow creating index with the name of ""GEN_CLUST_INDEX"" which is reserved for the default system primary index. (Bug #46000) rb://149 approved by Marko Makela. ------------------------------------------------------------------------ ------------------------------------------------------------------------ r5910 | marko | 2009-09-16 04:07:21 -0400 (Wed, 16 Sep 2009) | 9 lines branches/zip: Introduce UNIV_LOG_LSN_DEBUG and MLOG_LSN for redo log diagnostics.  This was written in order to better track down Issue #313 in InnoDB Hot Backup. MLOG_LSN: A new redo log entry type, for recording the current log sequence number (LSN).  This will be checked in an assertion in recv_parse_log_rec(). rb://161, discussed with Sunny and Vasil. ------------------------------------------------------------------------ r5899 | marko | 2009-09-15 07:26:01 -0400 (Tue, 15 Sep 2009) | 4 lines branches/zip: ut0ut.h: Do not #include ""os0sync.h"" #ifdef UNIV_HOTBACKUP. Since r5872, the InnoDB Hot Backup build was broken. Fix it by not defining any thread synchronization primitives in ut0ut.h. InnoDB Hot Backup is a single-threaded program. ------------------------------------------------------------------------ r5898 | marko | 2009-09-15 06:18:50 -0400 (Tue, 15 Sep 2009) | 2 lines branches/zip: Add */.dirstamp to svn:ignore, for https://svn.innodb.com/svn/hotbackup/branches/3.5 ------------------------------------------------------------------------ r5897 | marko | 2009-09-15 04:29:00 -0400 (Tue, 15 Sep 2009) | 8 lines branches/zip: Avoid bogus messages about latching order violations when UNIV_SYNC_DEBUG is defined. sync_thread_levels_g(): Add the parameter ""warn"".  Do not print anything unless it is set. sync_thread_add_level(): Pass warn=TRUE to sync_thread_levels_g() when the check is within an assertion; FALSE if it is not. ------------------------------------------------------------------------ r5893 | inaam | 2009-09-14 11:20:48 -0400 (Mon, 14 Sep 2009) | 10 lines branches/zip  rb://159 In case of pages that are not made young the counter is incremented only when the page in question is 'old'. In case of pages that are made young the counter is incremented in case of all pages. For apple to apple comparison this patch changes the 'young-making' counter to consider only 'old' blocks. Approved by: Marko ------------------------------------------------------------------------ r5889 | vasil | 2009-09-14 05:17:18 -0400 (Mon, 14 Sep 2009) | 5 lines branches/zip: Add missing return statement in the test program that could have caused a warning. ------------------------------------------------------------------------ r5888 | vasil | 2009-09-14 04:38:45 -0400 (Mon, 14 Sep 2009) | 40 lines branches/zip: Back-merge c5880 and c5881 from branches/embedded-1.0: ------------------------------------------------------------------------ r5880 | vasil | 2009-09-12 17:28:44 +0300 (Sat, 12 Sep 2009) | 18 lines Changed paths: M /branches/embedded-1.0/configure.in M /branches/embedded-1.0/include/os0sync.h M /branches/embedded-1.0/srv/srv0start.c branches/embedded-1.0: Clean up and simplify the code that surrounds the atomic ops: * Simplify the code that prints what atomics are used: Instead of repeating the same conditions on which each atomics are used use just one printf that prints a variable defined by the code which chooses what atomics to use. * In os0sync.h pick up each atomic variant only if it has been selected by autoconf (based on IB_ATOMIC_MODE_* macros). Define the startup message to be printed. * In configure.in: check what user has chosen and if he has chosen something that is not available, emit an error. If nothing has been chosen explicitly by the user, auto select an option according to the described logic in configure.in. ------------------------------------------------------------------------ r5881 | vasil | 2009-09-12 20:08:27 +0300 (Sat, 12 Sep 2009) | 4 lines Changed paths: M /branches/embedded-1.0/configure.in branches/embedded-1.0: Fix syntax error in test program. ------------------------------------------------------------------------ ------------------------------------------------------------------------ r5875 | vasil | 2009-09-12 08:11:25 -0400 (Sat, 12 Sep 2009) | 4 lines branches/zip: Remove unnecessary macro. ------------------------------------------------------------------------ r5872 | vasil | 2009-09-12 05:35:17 -0400 (Sat, 12 Sep 2009) | 5 lines branches/zip: Explicitly include os0sync.h to the places where HAVE_ATOMIC_BUILTINS and INNODB_RW_LOCKS_USE_ATOMICS are used to avoid potential problems. ------------------------------------------------------------------------ r5871 | vasil | 2009-09-12 05:25:44 -0400 (Sat, 12 Sep 2009) | 6 lines branches/zip: Rename HAVE_SOLARIS_ATOMICS to HAVE_IB_SOLARIS_ATOMICS and IB_HAVE_PAUSE_INSTRUCTION to HAVE_IB_PAUSE_INSTRUCTION so they all follow the same HAVE_IB_* convention. ------------------------------------------------------------------------ r5870 | vasil | 2009-09-12 05:13:44 -0400 (Sat, 12 Sep 2009) | 7 lines branches/zip: Define HAVE_ATOMIC_BUILTINS and INNODB_RW_LOCKS_USE_ATOMICS in os0sync.h instead of in univ.i. The code expects os_*() macros to be present if HAVE_ATOMIC_BUILTINS and INNODB_RW_LOCKS_USE_ATOMICS are defined. So define them next to defining the os_*() macros. ------------------------------------------------------------------------ r5869 | vasil | 2009-09-12 04:33:11 -0400 (Sat, 12 Sep 2009) | 15 lines branches/zip: Include ut0auxconf.h only if none of the macros it would define is defined. The check when to include this header was outdated from the time when there was only one macro involved. Move the atomics checks that are in univ.i outside of #if windows ... #else ... #endif This simplifies the code and removes some duplicates like defining HAVE_ATOMIC_BUILTINS if HAVE_WINDOWS_ATOMICS is defined in both branches. Do not define the same macro HAVE_ATOMIC_PTHREAD_T for different events. Instead define HAVE_IB_ATOMIC_PTHREAD_T_GCC and HAVE_IB_ATOMIC_PTHREAD_T_SOLARIS. ------------------------------------------------------------------------ r5868 | vasil | 2009-09-12 04:01:17 -0400 (Sat, 12 Sep 2009) | 6 lines branches/zip: Move the check whether to include ut0auxconf.h before everything because we are now even checking for GCC atomics, we relied on MySQL to define this macro before. ------------------------------------------------------------------------ r5867 | vasil | 2009-09-12 03:43:45 -0400 (Sat, 12 Sep 2009) | 4 lines branches/zip: Update comment to reflect reality. ------------------------------------------------------------------------ r5866 | vasil | 2009-09-12 03:30:08 -0400 (Sat, 12 Sep 2009) | 5 lines branches/zip: Add the check for GCC atomics to ut0auxconf* (copied from plug.in) because we no longer rely on MySQL's HAVE_GCC_ATOMIC_BUILTINS. ------------------------------------------------------------------------ r5865 | vasil | 2009-09-12 03:26:03 -0400 (Sat, 12 Sep 2009) | 10 lines branches/zip: Simplify the compile time checks by splittig them into 5 independent checks: * Whether GCC atomics are available * Whether pthread_t can be used by GCC atomics * Whether Solaris libc atomics are available * Whether pthread_t can be used by Solaris libs atomics * Checking the size of pthread_t ------------------------------------------------------------------------ r5864 | vasil | 2009-09-12 03:22:55 -0400 (Sat, 12 Sep 2009) | 4 lines branches/zip: Include string.h which is needed for memset(). ------------------------------------------------------------------------ r5863 | vasil | 2009-09-12 03:07:08 -0400 (Sat, 12 Sep 2009) | 10 lines branches/zip: Check that pthread_t can indeed be passed to Solaris atomic functions, instead of assuming that it can be passed if 0 can be assigned to it. It could be that: * 0 can be assigned, but pthread_t cannot be passed and * 0 cannot be assigned but pthread_t can be passed Better to check what we are interested in, not something else and make assumptions. ------------------------------------------------------------------------ r5858 | vasil | 2009-09-11 13:46:47 -0400 (Fri, 11 Sep 2009) | 4 lines branches/zip: Fix the indentation of the closing bracket. ------------------------------------------------------------------------ r5826 | marko | 2009-09-10 07:29:46 -0400 (Thu, 10 Sep 2009) | 12 lines branches/zip: Roll back recovered dictionary transactions before dropping incomplete indexes (Issue #337). trx_rollback_or_clean_recovered(ibool all): New function, split from trx_rollback_or_clean_all_recovered().  all==FALSE will only roll back dictionary transactions. recv_recovery_from_checkpoint_finish(): Call trx_rollback_or_clean_recovered(FALSE) before row_merge_drop_temp_indexes(). rb://158 approved by Sunny Bains ------------------------------------------------------------------------ r5825 | marko | 2009-09-10 06:47:09 -0400 (Thu, 10 Sep 2009) | 20 lines branches/zip: Reduce mutex contention that was introduced when addressing Bug #45015 (Issue #316), in r5703. buf_page_set_accessed_make_young(): New auxiliary function, called by buf_page_get_zip(), buf_page_get_gen(), buf_page_optimistic_get_func(). Call ut_time_ms() outside of buf_pool_mutex. Use cached access_time. buf_page_set_accessed(): Add the parameter time_ms, so that ut_time_ms() need not be called while holding buf_pool_mutex. buf_page_optimistic_get_func(), buf_page_get_known_nowait(): Read buf_page_t::access_time without holding buf_pool_mutex. This should be OK, because the field is only used for heuristic purposes. buf_page_peek_if_too_old(): If buf_pool->freed_page_clock == 0, return FALSE, so that we will not waste time moving blocks in the LRU list in the warm-up phase or when the workload fits in the buffer pool. rb://156 approved by Sunny Bains ------------------------------------------------------------------------ r5822 | marko | 2009-09-10 06:10:20 -0400 (Thu, 10 Sep 2009) | 1 line branches/zip: buf_page_release(): De-stutter the function comment. ------------------------------------------------------------------------ r5804 | marko | 2009-09-10 01:29:31 -0400 (Thu, 10 Sep 2009) | 1 line branches/zip: trx_cleanup_at_db_startup(): Fix a typo in comment. ------------------------------------------------------------------------ r5798 | calvin | 2009-09-09 11:28:10 -0400 (Wed, 09 Sep 2009) | 5 lines branches/zip: HA_ERR_TOO_MANY_CONCURRENT_TRXS is added in 5.1.38. But the plugin should still work with previous versions of MySQL. ------------------------------------------------------------------------ r5792 | vasil | 2009-09-09 09:35:58 -0400 (Wed, 09 Sep 2009) | 32 lines branches/zip: Fix a bug in manipulating the variable innodb_old_blocks_pct: for any value assigned it got that value -1, except for 75. When assigned 75, it got 75. mysql> set global innodb_old_blocks_pct=15; Query OK, 0 rows affected (0.00 sec) mysql> show variables like 'innodb_old_blocks_pct'; +-----------------------+-------+ | Variable_name         | Value | +-----------------------+-------+ | innodb_old_blocks_pct | 14    | +-----------------------+-------+ 1 row in set (0.00 sec) mysql> set global innodb_old_blocks_pct=75; Query OK, 0 rows affected (0.00 sec) mysql> show variables like 'innodb_old_blocks_pct'; +-----------------------+-------+ | Variable_name         | Value | +-----------------------+-------+ | innodb_old_blocks_pct | 75    | +-----------------------+-------+ After the fix it gets exactly what was assigned. Approved by:	Marko (via IM) ------------------------------------------------------------------------ r5783 | marko | 2009-09-09 03:25:00 -0400 (Wed, 09 Sep 2009) | 1 line branches/zip: buf_page_is_accessed(): Correct the function comment. ------------------------------------------------------------------------ r5782 | marko | 2009-09-09 03:00:59 -0400 (Wed, 09 Sep 2009) | 2 lines branches/zip: buf_page_peek_if_too_old(): Silence a compiler warning that was introduced in r5779 on 32-bit systems. ------------------------------------------------------------------------ r5780 | marko | 2009-09-09 02:50:50 -0400 (Wed, 09 Sep 2009) | 1 line branches/zip: ut_time_ms(): Return ulint, not uint. ------------------------------------------------------------------------ r5779 | marko | 2009-09-09 02:17:19 -0400 (Wed, 09 Sep 2009) | 2 lines branches/zip: buf_page_peek_if_too_old(): Make the bitmasking work when buf_pool->freed_page_clock is wider than 32 bits. ------------------------------------------------------------------------ r5777 | marko | 2009-09-08 11:50:25 -0400 (Tue, 08 Sep 2009) | 2 lines branches/zip: Remove BUF_LRU_INITIAL_RATIO, which should have been removed together with buf_LRU_get_recent_limit(). ------------------------------------------------------------------------ r5775 | calvin | 2009-09-07 17:15:05 -0400 (Mon, 07 Sep 2009) | 13 lines branches/zip: Build InnoDB on Windows with UNIV_HOTBACKUP The changes are non-functional changes for normal InnoDB, but needed for building the Hot Backup on Windows (with UNIV_HOTBACKUP defined). - Define os_aio_use_native_aio for HB. - Do not acquire seek mutexes for backup since HB is single threaded. - Do not use srv_flush_log_at_trx_commit for HB build rb://155 Approved by: Marko ------------------------------------------------------------------------ r5752 | marko | 2009-09-03 10:55:51 -0400 (Thu, 03 Sep 2009) | 10 lines branches/zip: recv_recover_page_func(): Write the log sequence number to the compressed page, if there is one.  Previously, the function only wrote the LSN to the uncompressed page. It is not clear why recv_recover_page_func() is updating FIL_PAGE_LSN in the buffer pool.  The log sequence number will be stamped on the page when it is flushed to disk, in buf_flush_init_for_writing(). I noticed this inconsistency when analyzing Issue #313, but this patch does not fix it.  That is no surprise, since FIL_PAGE_LSN should only matter on disk files, not in the buffer pool. ------------------------------------------------------------------------ r5751 | marko | 2009-09-03 10:36:15 -0400 (Thu, 03 Sep 2009) | 7 lines branches/zip: row_merge(): Remove a bogus debug assertion that was triggered when creating an index on an empty table. row_merge_sort(): Add debug assertions and comments that justify the loop termination condition. The bogus assertion ut_ad(ihalf > 0) was reported by Michael. ------------------------------------------------------------------------ r5748 | marko | 2009-09-03 07:05:44 -0400 (Thu, 03 Sep 2009) | 1 line branches/zip: MLOG_MULTI_REC_END: Correct the comment. ------------------------------------------------------------------------ r5747 | marko | 2009-09-03 06:46:38 -0400 (Thu, 03 Sep 2009) | 2 lines branches/zip: recv_scan_log_recs(): Replace while with do...while, because the termination condition will always hold on the first iteration. ------------------------------------------------------------------------ r5746 | marko | 2009-09-03 04:55:36 -0400 (Thu, 03 Sep 2009) | 2 lines branches/zip: log_reserve_and_write_fast(): Do not cache the log_sys pointer in a local variable. ------------------------------------------------------------------------ r5745 | marko | 2009-09-03 04:38:22 -0400 (Thu, 03 Sep 2009) | 2 lines branches/zip: log_check_log_recs(): Enclose in #ifdef UNIV_LOG_DEBUG. Add const qualifiers. ------------------------------------------------------------------------ r5744 | marko | 2009-09-03 04:28:35 -0400 (Thu, 03 Sep 2009) | 1 line branches/zip: ut_align(): Make ptr const, like in ut_align_down(). ------------------------------------------------------------------------ r5743 | marko | 2009-09-03 02:36:12 -0400 (Thu, 03 Sep 2009) | 3 lines branches/zip: log_reserve_and_write_fast(): Remove the redundant output parameter ""success"". Success is also indicated by a nonzero return value. ------------------------------------------------------------------------ r5736 | marko | 2009-09-02 03:53:19 -0400 (Wed, 02 Sep 2009) | 1 line branches/zip: Enclose some timestamp functions in #ifndef UNIV_HOTBACKUP. ------------------------------------------------------------------------ r5735 | marko | 2009-09-02 03:43:09 -0400 (Wed, 02 Sep 2009) | 2 lines branches/zip: univ.i: Do not undefine PACKAGE or VERSION. InnoDB source code does not refer to these macros. ------------------------------------------------------------------------ r5734 | sunny | 2009-09-02 03:08:45 -0400 (Wed, 02 Sep 2009) | 2 lines branches/zip: Update ChangeLog with r5733 changes. ------------------------------------------------------------------------ r5733 | sunny | 2009-09-02 03:05:15 -0400 (Wed, 02 Sep 2009) | 6 lines branches/zip: Fix a regression introduced by the fix for bug#26316. We check whether a transaction holds any AUTOINC locks before we acquire the kernel mutex and release those locks. Fix for rb://153. Approved by Marko. ------------------------------------------------------------------------ r5716 | vasil | 2009-08-31 03:47:49 -0400 (Mon, 31 Aug 2009) | 9 lines branches/zip: Fix Bug#46718 InnoDB plugin incompatible with gcc 4.1 (at least: on PPC): ""Undefined symbol"" by implementing our own check in plug.in instead of using the result from the check from MySQL because it is insufficient. Approved by:	Marko (rb://154) ------------------------------------------------------------------------ r5714 | marko | 2009-08-31 02:10:10 -0400 (Mon, 31 Aug 2009) | 5 lines branches/zip: buf_chunk_not_freed(): Do not acquire block->mutex unless block->page.state == BUF_BLOCK_FILE_PAGE.  Check that block->page.state makes sense. Approved by Sunny Bains over the IM. ------------------------------------------------------------------------ r5709 | inaam | 2009-08-28 02:22:46 -0400 (Fri, 28 Aug 2009) | 5 lines branches/zip rb://152 Disable display of deprecated parameter innodb_file_io_threads in 'show variables'. ------------------------------------------------------------------------ r5708 | inaam | 2009-08-27 18:43:32 -0400 (Thu, 27 Aug 2009) | 4 lines branches/zip Remove redundant TRUE : FALSE from the return statement ------------------------------------------------------------------------ r5707 | inaam | 2009-08-27 12:20:35 -0400 (Thu, 27 Aug 2009) | 6 lines branches/zip Remove unused macros as we erased the random readahead code in r5703. Also fixed some comments. ------------------------------------------------------------------------ r5706 | inaam | 2009-08-27 12:00:27 -0400 (Thu, 27 Aug 2009) | 20 lines branches/zip rb://147 Done away with following two status variables: innodb_buffer_pool_read_ahead_rnd innodb_buffer_pool_read_ahead_seq Introduced two new status variables: innodb_buffer_pool_read_ahead = number of pages read as part of readahead since server startup innodb_buffer_pool_read_ahead_evicted = number of pages that are read in as readahead but were evicted before ever being accessed since server startup i.e.: a measure of how badly our readahead is performing SHOW INNODB STATUS will show two extra numbers in buffer pool section: pages read ahead/sec and pages evicted without access/sec Approved by: Marko ------------------------------------------------------------------------ r5705 | marko | 2009-08-27 07:56:24 -0400 (Thu, 27 Aug 2009) | 11 lines branches/zip: dict_index_find_cols(): On column name lookup failure, return DB_CORRUPTION (HA_ERR_CRASHED) instead of abnormally terminating the server.  Also, disable the previously added diagnostic output to the error log, because mysql-test-run does not like extra output in the error log.  (Bug #44571) dict_index_add_to_cache(): Handle errors from dict_index_find_cols(). mysql-test/innodb_bug44571.test: A test case for triggering the bug. rb://135 approved by Sunny Bains. ------------------------------------------------------------------------ r5704 | marko | 2009-08-27 04:31:17 -0400 (Thu, 27 Aug 2009) | 32 lines branches/zip: Fix a critical bug in fast index creation that could corrupt the created indexes. row_merge(): Make ""half"" an in/out parameter. Determine the offset of half the output file. Copy the last blocks record-by-record instead of block-by-block, so that the records can be counted. Check that the input and output have matching n_rec. row_merge_sort(): Do not assume that two blocks of size N are merged into a block of size 2*N. The output block can be shorter than the input if the last page of each input block is almost empty. Use an accurate termination condition, based on the ""half"" computed by row_merge(). row_merge_read(), row_merge_write(), row_merge_blocks(): Add debug output. merge_file_t, row_merge_file_create(): Add n_rec, the number of records in the merge file. row_merge_read_clustered_index(): Update n_rec. row_merge_blocks(): Update and check n_rec. row_merge_blocks_copy(): New function, for copying the last blocks in row_merge().  Update and check n_rec. This bug was discovered with a user-supplied test case that creates an index where the initial temporary file is 249 one-megabyte blocks and the merged files become smaller. In the test, possible merge record sizes are 10, 18, and 26 bytes. rb://150 approved by Sunny Bains.  This addresses Issue #320. ------------------------------------------------------------------------ r5703 | marko | 2009-08-27 03:25:00 -0400 (Thu, 27 Aug 2009) | 41 lines branches/zip: Replace the constant 3/8 ratio that controls the LRU_old size with the settable global variable innodb_old_blocks_pct. The minimum and maximum values are 5 and 95 per cent, respectively. The default is 100*3/8, in line with the old behavior. ut_time_ms(): New utility function, to return the current time in milliseconds. TODO: Is there a more efficient timestamp function, such as rdtsc divided by a power of two? buf_LRU_old_threshold_ms: New variable, corresponding to innodb_old_blocks_time. The value 0 is the default behaviour: no timeout before making blocks 'new'. bpage->accessed, bpage->LRU_position, buf_pool->ulint_clock: Remove. bpage->access_time: New field, replacing bpage->accessed. Protected by buf_pool_mutex instead of bpage->mutex. Updated when a page is created or accessed the first time in the buffer pool. buf_LRU_old_ratio, innobase_old_blocks_pct: New variables, corresponding to innodb_old_blocks_pct buf_LRU_old_ratio_update(), innobase_old_blocks_pct_update(): Update functions for buf_LRU_old_ratio, innobase_old_blocks_pct. buf_page_peek_if_too_old(): Compare ut_time_ms() to bpage->access_time if buf_LRU_old_threshold_ms && bpage->old.  Else observe buf_LRU_old_ratio and bpage->freed_page_clock. buf_pool_t: Add n_pages_made_young, n_pages_not_made_young, n_pages_made_young_old, n_pages_not_made_young, for statistics. buf_print(): Display buf_pool->n_pages_made_young, buf_pool->n_pages_not_made_young.  This function is only for crash diagnostics. buf_print_io(): Display buf_pool->LRU_old_len and quantities derived from buf_pool->n_pages_made_young, buf_pool->n_pages_not_made_young. This function is invoked by SHOW ENGINE INNODB STATUS. rb://129 approved by Heikki Tuuri.  This addresses Bug #45015. ------------------------------------------------------------------------ r5702 | marko | 2009-08-27 03:03:15 -0400 (Thu, 27 Aug 2009) | 1 line branches/zip: Document also the files affected by r5698 in the ChangeLog. ------------------------------------------------------------------------ r5701 | marko | 2009-08-27 03:01:42 -0400 (Thu, 27 Aug 2009) | 1 line branches/zip: Document r5698 in the ChangeLog. ------------------------------------------------------------------------ r5698 | inaam | 2009-08-26 10:34:35 -0400 (Wed, 26 Aug 2009) | 13 lines branches/zip  bug#42885  rb://148 The call to put IO threads to sleep was most probably meant for Windows only as the comment in buf0rea.c suggests. However it was enabled on all platforms. This patch restricts the sleep call to windows. This approach of not putting threads to sleep makes even more sense because now we have multiple threads working in the background and it probably is not a good idea to put all of them to sleep because a user thread wants to post a batch for readahead. Approved by: Marko ------------------------------------------------------------------------ r5697 | vasil | 2009-08-26 09:44:40 -0400 (Wed, 26 Aug 2009) | 4 lines branches/zip: Fix typo. ------------------------------------------------------------------------ r5696 | vasil | 2009-08-26 09:15:59 -0400 (Wed, 26 Aug 2009) | 14 lines branches/zip: Merge a change from MySQL: http://lists.mysql.com/commits/80832 2968 Jonathan Perkin	2009-08-14 Build fixes for Windows, AIX, HP/UX and Sun Studio11, from Timothy Smith. modified: CMakeLists.txt cmd-line-utils/readline/util.c storage/innodb_plugin/handler/i_s.cc storage/innodb_plugin/include/univ.i ------------------------------------------------------------------------ r5695 | marko | 2009-08-26 09:14:59 -0400 (Wed, 26 Aug 2009) | 1 line branches/zip: UNIV_DEBUG_LOCK_VALIDATE: Move the definition to univ.i. ------------------------------------------------------------------------ r5694 | marko | 2009-08-26 07:25:26 -0400 (Wed, 26 Aug 2009) | 2 lines branches/zip: buf_page_t: Clarify that bpage->list may contain garbage. This comment was provoked by Inaam. ------------------------------------------------------------------------ r5687 | vasil | 2009-08-20 05:20:22 -0400 (Thu, 20 Aug 2009) | 8 lines branches/zip: ChangeLog: Follow the convention from the rest of the ChangeLog: for bugfixes from bugs.mysql.com only the bug number and title goes in the ChangeLog. Detailed explanation on what is the problem and how it was fixed is present in the bugs database. ------------------------------------------------------------------------ r5686 | vasil | 2009-08-20 05:15:05 -0400 (Thu, 20 Aug 2009) | 4 lines branches/zip: White-space fixup. ------------------------------------------------------------------------ r5685 | sunny | 2009-08-20 04:18:29 -0400 (Thu, 20 Aug 2009) | 2 lines branches/zip: Update the ChangeLog with r5684 change. ------------------------------------------------------------------------ r5684 | sunny | 2009-08-20 04:05:30 -0400 (Thu, 20 Aug 2009) | 10 lines branches/zip: Fix bug# 46650:  Innodb assertion autoinc_lock == lock in lock_table_remove_low on INSERT SELECT We only store the autoinc locks that are granted in the transaction's autoinc lock vector. A transacton, that has been rolled back due to a deadlock because of an AUTOINC lock attempt, will not have added that lock to the vector. We need to check for that when we remove that lock. rb://145 Approved by Marko. ------------------------------------------------------------------------ r5681 | sunny | 2009-08-14 02:16:24 -0400 (Fri, 14 Aug 2009) | 3 lines branches/zip: When building HotBackup srv_use_sys_malloc is #ifdef out. We move access to the this variable within a !UNIV_HOTBACKUP block. ------------------------------------------------------------------------ r5671 | marko | 2009-08-13 04:46:33 -0400 (Thu, 13 Aug 2009) | 5 lines branches/zip: ha_innobase::add_index(): Fix Bug #46557: after a successful operation, read innodb_table->flags from the newly created table object, not from the old one that was just freed. Approved by Sunny. ------------------------------------------------------------------------ r5670 | marko | 2009-08-12 09:16:37 -0400 (Wed, 12 Aug 2009) | 2 lines branches/zip: trx_undo_rec_copy(): Add const qualifier to undo_rec. This is a non-functional change. ------------------------------------------------------------------------ r5663 | marko | 2009-08-11 07:42:37 -0400 (Tue, 11 Aug 2009) | 2 lines branches/zip: trx_general_rollback_for_mysql(): Remove the redundant parameter partial. If savept==NULL, partial==FALSE. ------------------------------------------------------------------------ r5662 | marko | 2009-08-11 05:54:16 -0400 (Tue, 11 Aug 2009) | 1 line branches/zip: Bump the version number to 1.0.5 after releasing 1.0.4. ------------------------------------------------------------------------ r5642 | calvin | 2009-08-06 19:04:03 -0400 (Thu, 06 Aug 2009) | 2 lines branches/zip: remove duplicate ""the"" in comments. ------------------------------------------------------------------------ r5639 | marko | 2009-08-06 06:39:34 -0400 (Thu, 06 Aug 2009) | 3 lines branches/zip: mem_heap_block_free(): If innodb_use_sys_malloc is set, do not tell Valgrind that the memory is free, to avoid a bogus warning in Valgrind's built-in free() hook. ------------------------------------------------------------------------ r5636 | marko | 2009-08-05 08:27:30 -0400 (Wed, 05 Aug 2009) | 2 lines branches/zip: lock_rec_validate_page(): Add the parameter zip_size. This should help track down Mantis Issue #289. ------------------------------------------------------------------------ r5635 | marko | 2009-08-05 07:06:55 -0400 (Wed, 05 Aug 2009) | 2 lines branches/zip: Replace <number> with NUMBER in some comments, to avoid problems with Doxygen XML output. ------------------------------------------------------------------------ r5629 | marko | 2009-08-04 07:42:44 -0400 (Tue, 04 Aug 2009) | 1 line branches/zip: mysql-test: Pass MTR's internal checks. ------------------------------------------------------------------------ r5626 | vasil | 2009-08-04 01:53:31 -0400 (Tue, 04 Aug 2009) | 4 lines branches/zip: Revert the dummy change from c5625. ------------------------------------------------------------------------ r5625 | vasil | 2009-08-04 01:52:48 -0400 (Tue, 04 Aug 2009) | 32 lines branches/zip: Merge 5518:5622 from branches/5.1, resolving conflict in r5622 (after resolving the conflict Makefile.am was not changed so I have made a dummy change so I can commit and thus record that branches/5.1 has been merged in branches/zip up to 5622): ------------------------------------------------------------------------ r5622 | vasil | 2009-08-03 15:27:00 +0300 (Mon, 03 Aug 2009) | 20 lines Changed paths: M /branches/5.1/Makefile.am branches/5.1: Merge a change from MySQL: ------------------------------------------------------------ revno: 2988 committer: Satya B <satya.bn@sun.com> branch nick: mysql-5.1-bugteam timestamp: Wed 2009-07-01 11:06:05 +0530 message: Fix build failure after applying Innodb snapshot 5.1-ss5282 After applying Innodb snapshot 5.1-ss5282, build was broken because of missing header file. Adding the header file to Makefile.am after informing the innodb developers. modified: storage/innobase/Makefile.am ------------------------------------------------------------------------ ------------------------------------------------------------------------ r5614 | vasil | 2009-07-31 11:09:07 -0400 (Fri, 31 Jul 2009) | 6 lines branches/zip: Add fsp0types.h to the list of noinst_HEADERS Suggested by:	Sergey Vojtovich <svoj@sun.com> ------------------------------------------------------------------------ r5539 | vasil | 2009-07-21 06:28:27 -0400 (Tue, 21 Jul 2009) | 4 lines branches/zip: Add a test program to check whether the PAUSE instruction is available. ------------------------------------------------------------------------ r5537 | vasil | 2009-07-21 05:31:26 -0400 (Tue, 21 Jul 2009) | 5 lines branches/zip: Fixups in ChangeLog: sort filenames alphabetically and wrap to 78 chars per line. ------------------------------------------------------------------------ r5527 | sunny | 2009-07-20 17:56:30 -0400 (Mon, 20 Jul 2009) | 2 lines branches/zip: For HotBackup builds we don't want to hide the symbols. ------------------------------------------------------------------------ r5525 | calvin | 2009-07-20 13:14:30 -0400 (Mon, 20 Jul 2009) | 2 lines branches/zip: add ChangeLog entry for r5524. ------------------------------------------------------------------------ "	95b46843b7f48595458008b6414cd08fa54f7930
----------------------------
"bug#30954: ""configure"" script in binary distributions considered harmfull Add --help option. "	8f640b6239babacf2f7fc23b19b279a1c69f8b30
----------------------------
branches/zip: Try to prevent the reuse of tablespace identifiers after InnoDB has crashed during table creation.  Also, refuse to start if files with duplicate tablespace identifiers are encountered. fil_node_create(): Update fil_system->max_assigned_id.  This should prevent the reuse of a space->id when InnoDB does a full crash recovery and invokes fil_load_single_table_tablespaces().  Normally, fil_system->max_assigned_id is initialized from SELECT MAX(ID) FROM SYS_TABLES. fil_open_single_table_tablespace(): Return FALSE when fil_space_create() fails. fil_load_single_table_tablespace(): Exit if fil_space_create() fails and innodb_force_recovery=0. rb://173 approved by Heikki Tuuri.  This addresses Issue #335. 	e5f474417cb673e56e8ad7b9a9c65233a59e3e5b
----------------------------
Bug#47036 Reload of config shows only diff of last changed parameter - Fix bug causing only the first diff in each section to be printed. - Add testcase, convert testConfig.cpp to MgmConfig-t ameking it run as unit test 	fbf6a736ea76df7a122ba03e39d6af234e8269ff
----------------------------
"Bug#42015 ndb_mgmd --initial + no config file = hang - Print message saying ""trying to fetch config from other node"" every 30 seconds - Improve error message returned when the config is not yet confirmed - Add test to check that ndb_mgmd can fetch config from another mgmd using NDB_CONNECTSTRING(or equvivalent) "	5e77006dd592125cfe90f4076f7f87ae6200a903
----------------------------
"Bug#45495 multiple managment servers fail to start - Make it possible to start a second ndb_mgmd with --initial with exactly the same configuration as an already started and confirmed ndb_mgmd. Implementation details: - When refusing a CONFIG_CHECK, send the confirmed config back so that requestor can do ""node recovery"" from it. - If the config returned in CONFIG_CHECK_REF is exactly equal to own config.ini - use it to do ""node recovery"" - Add test program "	c28978ef5656220ee4baf677d5bc2e45d6a26b88
----------------------------
"Bug#38502 NDB_PORT cause ndb_mgmd fail - Detect the case when ""./configure --with-ndb-port""  is used without a portnumber(or something) actually supplied. - Cleanup the usage of NDB_PORT by putting it in [my_]config.h - Remove some sprintf by using preprocessor macros for building the default connect string as well as string variants of the port number. - Quite sure that the compiler will now complain if the port is not a number. "	2510250f448d47f13a10810848eaf348b74eb301
----------------------------
BUG#42829: binlogging enabled for all schemas regardless of binlog-db-db / binlog-ignore-db InnoDB will return an error if statement based replication is used along with transaction isolation level READ-COMMITTED (or weaker), even if the statement in question is filtered out according to the binlog-do-db rules set. In this case, an error should not be printed. This patch addresses this issue by extending the existing check in external_lock to take into account the filter rules before deciding to print an error. Furthermore, it also changes decide_logging_format to take into consideration whether the statement is filtered out from binlog before decision is made. 	5e04d4695ba8dfef7945882923b977df554be2e2
----------------------------
bug#47037 to port Bug@25998 fixes to telco 6.2 the 2nd patch to address 6.2 -> 6.3 possible upgrade issue. The added ignore_server_ids param is stored as the last line in master.info on 6.2, but on 6.3 it would be buried by some more lines that are last currently  in there. It was suggested to make the 6.2 configuration line to have the same offset (the 18th) in 6.2 as it would be in 6.3. Fixed with implementing the suggestion. The 6.2 master.info will have two blank lines before the terminal one describing ignore_server_ids. 	ccfea12645a2ad10583fed30af4df46a9d91e69e
----------------------------
Update version in configure.in. 	72feecb4f05dae752f5061a0157dc87de3899ae5
----------------------------
branches/zip: adjust Windows loading method for 5.1.38 Starting at 5.1.38, MySQL server exports symbols needed for dynamic plugin on Windows. There is no need for Windows specific loading. Also, the CMake files are simplified in 5.1.38. When WITH_INNOBASE_STORAGE_ENGINE is specified during configuration (win\configure.js), InnoDB is built as a static library. Otherwise, a dynamic InnoDB will be built (ha_innodb.dll). CMakeLists.txt requires minor changes in order to work with MySQL prior to 5.1.38. The changes will be in a separate patch. This patch addresses Mantis issue#286. 	a340e71bd416e725bbadda496c7722ee534476ff
----------------------------
branches/zip: fix a type in r5935 Should be innodb_open_files, spotted by Michael. 	75fbaa78d57cfa84d3ae099f7c4a9b88ff5b65b6
----------------------------
branches/zip: Merge revisions 2584:2956 from branches/6.0, except c2932. Bug#37232 and bug#31183 were fixed in the 6.0 branch only. They should be fixed in the plugin too, specially MySQL 6.0 is discontinued at this point. ------------------------------------------------------------------------ r2604 | inaam | 2008-08-21 09:37:06 -0500 (Thu, 21 Aug 2008) | 8 lines branches/6.0     bug#37232 Relax locking behaviour for REPLACE INTO t SELECT ... FROM t1. Now SELECT on t1 is performed as a consistent read when the isolation level is set to READ COMMITTED. Reviewed by: Heikki ------------------------------------------------------------------------ r2605 | inaam | 2008-08-21 09:59:33 -0500 (Thu, 21 Aug 2008) | 7 lines branches/6.0 Added a comment to clarify why distinct calls to read MySQL binary log file name and log position do not entail any race condition. Suggested by: Heikki ------------------------------------------------------------------------ r2956 | inaam | 2008-11-04 04:47:30 -0600 (Tue, 04 Nov 2008) | 11 lines branches/6.0  bug#31183 If the system tablespace runs out of space because 'autoextend' is not specified with innodb_data_file_path there was no error message printed to the error log. The client would get 'table full' error. This patch prints an appropriate error message to the error log. rb://43 Approved by: Marko ------------------------------------------------------------------------ 	5af4815f80f5892be6d6be12b09a8ebe7eeb9131
----------------------------
branches/zip: fix bug#44338; minor non-functional changes Bug#44338 innodb has message about non-existing option innodb_max_files_open. Change the option to innodb_open_files. The fix was committed into 6.0 branch. 	411864293e35e36c776d067a415618fed9f41ac6
----------------------------
Bug #42914 Log event that larger than max_allowed_packet results in stop of slave I/O thread, But there is no Last_IO_Error reported. On the master, if a binary log event is larger than max_allowed_packet, ER_MASTER_FATAL_ERROR_READING_BINLOG and the specific reason of this error is sent to a slave when it requests a dump from the master, thus leading the I/O thread to stop. On a slave, the I/O thread stops when receiving a packet larger than max_allowed_packet. In both cases, however, there was no Last_IO_Error reported. This patch adds code to report the Last_IO_Error and exact reason before stopping the I/O thread and also reports the case the out memory pops up while handling packets from the master. 	7079338e0ed8f5ef52c77fd81ad23bbb8fd8c86a
----------------------------
"Fix bug#47137 Solaris binary packages should be compiled with '-g0', not '-g' The main fix for this is done in the build tools, but in the sources it affects ""configure.in"" which sets ""DEBUG_CXXFLAGS"" to be used in all debug builds. "	275cec8026332310b6642e6f50cd1d3a718e4ffd
----------------------------
"Fix bug#46980 Option ""--without-server"" still not working in 5.1 The general approach is to make sure that source files which require thread support are only compiled if the build really needs thread support, which means when the server is built or a thread-safe client library. This required several changes: - Make sure the subdirectories ""storage/"" and ""plugin/"" are only processed if the server is built, not ifclient-only. - Make the compilation of some modules which inherently require threading depend on thread supportin the build. - Separate the handling of threading in ""configure.in"" from that of server issues, threading is also needed in a non-server build of a thread-safe client library. Also, ""libdbug"" must get built even in a client-only build, so ""dbug/"" must be in the list of client directories. In addition, calls to thread functions in source files which can be built without thread support must use the wrapper functions which handle the non-threaded build. So the modules ""client/mysqlimport.c"" and ""client/mysqlslap.c"" must call ""my_thread_end()"" only via ""mysql_thread_end()"". "	67bcf54df6cf8a35ae3e7ce91631dab60ab9356e
----------------------------
bug#42614 Mysql auto locate databases can overwrite frm data: checking for local tables in ndbcluster_discover, added test case 	d60e541fae0bb15bbf37b74b168cee4762078467
----------------------------
"Bug #45840 read_buffer_size allocated for each partition when ""insert into.. select * from"" When inserting into a partitioned table using 'insert into <target> select * from <src>', read_buffer_size bytes of memory are allocated for each partition in the target table. This resulted in large memory consumption when the number of partitions are high. This patch introduces a new method which tries to estimate the buffer size required for each partition and limits the maximum buffer size used to maximum of 10 * read_buffer_size, 11 * read_buffer_size in case of monotonic partition functions. "	05bf2ebaa8d00e2df564a4017749140b28d38714
----------------------------
Bug#47325 NDB Cluster Management Node core dump during shutdown - Crash occur because ConfigManager is freeed before all clients have disconnected - Move delete of ConfigManager to after listening socket closed and all clients disconnected 	ad58fe1b605279d0fd4002f9cc41650d95cf1c13
----------------------------
branches/zip: Back-merge c5880 and c5881 from branches/embedded-1.0: ------------------------------------------------------------------------ r5880 | vasil | 2009-09-12 17:28:44 +0300 (Sat, 12 Sep 2009) | 18 lines Changed paths: M /branches/embedded-1.0/configure.in M /branches/embedded-1.0/include/os0sync.h M /branches/embedded-1.0/srv/srv0start.c branches/embedded-1.0: Clean up and simplify the code that surrounds the atomic ops: * Simplify the code that prints what atomics are used: Instead of repeating the same conditions on which each atomics are used use just one printf that prints a variable defined by the code which chooses what atomics to use. * In os0sync.h pick up each atomic variant only if it has been selected by autoconf (based on IB_ATOMIC_MODE_* macros). Define the startup message to be printed. * In configure.in: check what user has chosen and if he has chosen something that is not available, emit an error. If nothing has been chosen explicitly by the user, auto select an option according to the described logic in configure.in. ------------------------------------------------------------------------ r5881 | vasil | 2009-09-12 20:08:27 +0300 (Sat, 12 Sep 2009) | 4 lines Changed paths: M /branches/embedded-1.0/configure.in branches/embedded-1.0: Fix syntax error in test program. ------------------------------------------------------------------------ 	78b505b47fefc7f9ccfa6087deec8629d556e704
----------------------------
Bug#45756 : DDL statements not always in binary logs of other SQL Nodes on slave cluster - Modify source-server-id mechanism for DDL propagation within cluster to allow Binlog Injector to differentiate between local-cluster-sourced and replication-slave-sourced DDL changes. - Modify Binlog Injector to generate DDL Binlog entries for replication-slave-sourced DDL changes iff log-slave-updates is On. Impact - Binlogging of DDL on MySQLDs attached to slave cluster is independent of log-bin and log-slave-updates setting on active slave MySQLD This aligns DDL handling behaviour with DML handling behaviour - Source server-id for DDL Binlog entries is set to the server-id of the first MySQLD to Binlog the change. This aligns DDL handling behaviour with DML handling behaviour Risks - Online upgrade of Binlogging MySQLDs DDL applied by non-upgraded MySQLDs will not be logged by upgraded MySQLDs unless the upgraded MySQLDs have log-slave-updates on. This is because the upgraded MySQLDs will think that the DDL sourced by locally-attached non-upgraded MySQLDs has been applied by a slave applier. Workarounds : 1) Do not perform DDL during online upgrade of attached MySQLDs or 2) Upgrade binlogging MySQLD node last or 3) Reconfigure binlogging MySQLD nodes to set log-slave-updates=On before upgrade This may have other effects in circular replication scenarios. 	4b5788315f9f233b6e91fa85bce20da7058382ab
----------------------------
Bug #47037 to port Bug25998 fixes to telco Repeating the parent bugfixes commits: Bug #25998 problems about circle replication Bug #27808 Infinite looping in circular replication to mysql-5.1-telco. In case of withdrawing one of the servers from the circular multi-master replication group events generated by the removed server could become unstoppable (bug#25998). That's because the originator had been the terminator of the own event flow. Other possibility of the unstoppable event is the cluster replication (bug#27808). In that case an event generated by a member of a cluster was replicated to another member, got accepted and executed. By that same time effects of the event had been already propagated across the cluster via the cluster communications. In order to avoid double-applying, a replication event generated by a co-member of the cluster should not be accepted. Both variations of the unstoppable replication event are fixable with introducing a new option for CHANGE MASTER: IGNORE_SERVER_IDS= (sid_1, sid_2, ... ) The option can be set to the empty list that resets. Fixed with implementing the feature. Properties of the feature: a. reporting an error if the id of an ignored server is the slave itself and its configuration on startup was with --replicate-same-server-id; b. overriding the existing IGNORE_SERVER_IDS list by the following CHANGE MASTER ... IGNORE_SERVER_IDS= (list), the empty list arg nullifies the current ignored list; c. preserving the existing list by CHANGE MASTER w/o IGNORE_SERVER_IDS; d. preserving the ignored server ids after RESET SLAVE; e. extending SHOW SLAVE STATUS with a new line listing ignored servers; f. a new line in master.info with the list of ignored servers; g. Differently from --replicate-same-server-id handling, the sql thread is not concerned with the ignored server ids, because it's supposed that the relay log consists only of events that can not be unstoppable. In order to guarantee that, e.g in case of the circular replication with a failing server DBA needs to change master necessarily using the new option. h. Rotate and FD events originated by the current master listed in the ignored list are still relay-logged which does not create any termination issue. i. The possible list of ignored servers is sorted for the fastest processing of filtering algorithm. Two new lines to show slave status output are added: the list of ignored servers and the current master server id (yet another feature for the user!). Use cases for this feature can be found on the bug report page. mysql-test/include/master-slave.inc@1.17, 2008-06-04 19:39:26+03:00, aelkin@mysql1000.dsl.inet.fi +2 -0 forcing this basic macro to synchronize the slave right after it has connected to the master. Tests get the guarantee of synchronization at the beginning. mysql-test/suite/rpl/r/rpl_server_id_ignore.result@1.1, 2008-06-04 19:39:26+03:00, aelkin@mysql1000.dsl.inet.fi +46 -0 new results mysql-test/suite/rpl/r/rpl_server_id_ignore.result@1.0, 2008-06-04 19:39:26+03:00, aelkin@mysql1000.dsl.inet.fi +0 -0 mysql-test/suite/rpl/t/rpl_server_id_ignore-slave.opt@1.1, 2008-06-04 19:39:26+03:00, aelkin@mysql1000.dsl.inet.fi +1 -0 --replicate-same-server-id is set in order to show reaction on its possible clashing with the new gnored_server_id:s option of change master. mysql-test/suite/rpl/t/rpl_server_id_ignore-slave.opt@1.0, 2008-06-04 19:39:26+03:00, aelkin@mysql1000.dsl.inet.fi +0 -0 mysql-test/suite/rpl/t/rpl_server_id_ignore.test@1.1, 2008-06-04 19:39:26+03:00, aelkin@mysql1000.dsl.inet.fi +114 -0 The basic tests for the new feature. mysql-test/suite/rpl/t/rpl_server_id_ignore.test@1.0, 2008-06-04 19:39:26+03:00, aelkin@mysql1000.dsl.inet.fi +0 -0 sql/lex.h@1.184, 2008-06-04 19:39:26+03:00, aelkin@mysql1000.dsl.inet.fi +1 -0 IGNORE_SERVER_ID new option for change master sql/rpl_mi.cc@1.16, 2008-06-04 19:39:26+03:00, aelkin@mysql1000.dsl.inet.fi +82 -4 allocation, storing into master info, reading from the file, deallocation of the list of ignored server id:s; a new change_master_server_id_cmp() comparison function definition to use with bsearch; a new Master_info::shall_ignore_server_id() method definition, calling it to find out if a server_id should be ignored; a formal initialization of a new member Master_info::master_id; extending the number of lines in master.info. sql/rpl_mi.h@1.9, 2008-06-04 19:39:26+03:00, aelkin@mysql1000.dsl.inet.fi +5 -0 a new method Master_info::shall_ignore_server_id answering filtering question; a new member Master_info::ignore_server_ids to hold the list of ignored servers; a new member Master_info::master_id to hold the current master server id; a new search function change_master_server_id_cmp() to use with bsearch. sql/share/errmsg.txt@1.134, 2008-06-04 19:39:26+03:00, aelkin@mysql1000.dsl.inet.fi +2 -0 a new error message about possible clashing of options. sql/slave.cc@1.348, 2008-06-04 19:39:26+03:00, aelkin@mysql1000.dsl.inet.fi +152 -11 a new init_dynarray_intvar_from_file() helper function to read an array of variable size of intergers. Refining io-thread's filtering condition to consult with the list of ignored servers. Note, that FD and Rotate events from an ignored server being the current master are still accepted. Filtering basing on --replicate-same-server-id remains as before if the ignored servers list is empty. Adding two new lines in show slave status. Initialization of the new member Master_info::master_id in get_master_version_and_clock(). Displaying the ignored servers and the current master id with show slave status. sql/sql_lex.h@1.320, 2008-06-04 19:39:26+03:00, aelkin@mysql1000.dsl.inet.fi +2 -1 parser time storage for variable size array of server ids; a new repl_ignore_server_ids_opt member for LEX_MASTER_INFO; sql/sql_repl.cc@1.175, 2008-06-04 19:39:26+03:00, aelkin@mysql1000.dsl.inet.fi +45 -14 aux function for sorting the ignored server_id:s; sorting of the ignored servers implementation; failing change master do not forget to free lex's dynamical storage with parsed ignored server_ids; resetting the old list of ignored server if the parser detected the new list; shifting some pieces of code in order to comply with the above logics; sql/sql_yacc.yy@1.540, 2008-06-04 19:39:26+03:00, aelkin@mysql1000.dsl.inet.fi +25 -0 allocation a dyn array for possible list of ignored server ids; filling the array; resetting (missed part of wl#342) heartbeat_opt at the beginning of CHANGE MASTER processing; 	affca479102b1d1c39f2ff7a3e97c05abbf2d616
----------------------------
Merge: a37c61b 1b60803 Bug#17332 - changing key_buffer_size on a running server can crash under load Merge from 5.0, after backport from 5.1/5.4 to 5.0. This makes the fixes for Bug 44068 (RESTORE can disable the MyISAM Key Cache) Bug 40944 (Backup: crash after myisampack) available to 5.1. 	8dcaefca2148fc523c154176568cdff07f6f0c3e
----------------------------
"branches/zip: Fix a bug in manipulating the variable innodb_old_blocks_pct: for any value assigned it got that value -1, except for 75. When assigned 75, it got 75. mysql> set global innodb_old_blocks_pct=15; Query OK, 0 rows affected (0.00 sec) mysql> show variables like 'innodb_old_blocks_pct'; +-----------------------+-------+ | Variable_name         | Value | +-----------------------+-------+ | innodb_old_blocks_pct | 14    | +-----------------------+-------+ 1 row in set (0.00 sec) mysql> set global innodb_old_blocks_pct=75; Query OK, 0 rows affected (0.00 sec) mysql> show variables like 'innodb_old_blocks_pct'; +-----------------------+-------+ | Variable_name         | Value | +-----------------------+-------+ | innodb_old_blocks_pct | 75    | +-----------------------+-------+ After the fix it gets exactly what was assigned. Approved by:	Marko (via IM) "	549e7644313ae0ac7f19083b4ec5a200d853184a
----------------------------
BUG#45638 - Create temporary table with engine innodb fails Create temporary InnoDB table fails on case insensitive filesystems, when lower_case_table_names is 2 (e.g. OS X) and temporary directory path contains upper case letters. The problem was that tmpdir prefix was converted to lower case when table was created, but was passed as is when table was opened. Fixed by leaving tmpdir prefix part intact. 	16c57d9099c4fee924be5b66642296850d922235
----------------------------
ndb - bug#47166 Fix correct default value of StringMemory (25) in ConfigInfo to avoid confusion 	a13f45a2599d06fb54fd4b1845ea34467289845f
----------------------------
"This is the 5.4 version of the fix for bug#47007 Unresolved reference to 'innodb_system_libs' in ""mysql_config"" In 5.4.2, we use InnoDB 1.0.4 which does file IO via separate threads, opposed to the use of asynchronous IO previously. So there is no InnoDB call to ""aio_read()"" which was searched in ""librt"", causing a ""-lrt"" value of ""innodb_system_libs"", that whole variable is gone. This fix was applied in the build of 5.4.2-beta. "	d141e840a2ee7764d6cc8b7e0a104d802141af52
----------------------------
Bug#35751 ndb_mgm and other mgmapi clients hang on OS X 10.5 intel - Change NdbThread_Create function so that when 0 is specified as\ thread_stack_size, our default value of 64k is used. - Change all threads (except ndbfs threads (and some tests)) to request default stack size 	78c579a02beb64ab3dee3c08769d06467f1e6b8e
----------------------------
Bug#17332 - changing key_buffer_size on a running server can crash under load Backport from 5.1. Does also include key cache fixes from: Bug 44068 (RESTORE can disable the MyISAM Key Cache) Bug 40944 (Backup: crash after myisampack) 	1b60803282ddfd6aa082c983a774d57d3e5470c5
----------------------------
Addition to Fix for BUG#46591 - .frm file isn't sync'd with sync_frm enabled for CREATE TABLE...LIKE... Add my_sync.c to mysqltest sources list in CMakeLists.txt 	81053daf9731145a84827ca0ce58b0097518ccf0
----------------------------
Fix for Bug#33785 - myisamchk show warning message myisamchk tool generates warnings when run on an myisam files (.MYI or .MYD) This is because of the conversion of max_value for certain options in myisamchk from singed long to unsigned long The max value for the options key_buffer_size, read_buffer_size, write_buffer _size and sort_buffer_size is given as (long) ~0L which becomes -1  when casted from signed long to longlong and then casted to ulonglong. When (ulonglong) -1 is compared with maximal value for GET_ULONG data type, we adjust it to (ulonglong) ULONG_MAX and throw the warning. Fixed by using the right max size. Max values for the variables (from mysqld.cc) ---------------------------- 1. key_buffer_size 5.0: ULONG_MAX 5.1: SIZE_T_MAX 6.0: SIZE_T_MAX 2. read_buffer_size and write_buffer_size 5.0: INT_MAX32 5.1: INT_MAX32 6.0: INT_MAX32 3. sort_buffer_size (aka myisam_sort_buffer_size) 5.0: UINT_MAX32 5.1: ULONG_MAX 6.0: ULONG_MAX Note: testcase not attached 	5a41fb5ce0fa17b804eea508c26e4d179dd3d373
----------------------------
Fix for BUG#46591 - .frm file isn't sync'd with sync_frm enabled for CREATE TABLE...LIKE... The mysql server option 'sync_frm' is ignored when table is created with syntax CREATE TABLE .. LIKE.. Fixed by adding the MY_SYNC flag and calling my_sync() from my_copy() when the flag is set. In mysql_create_table(), when the 'sync_frm' is set, MY_SYNC flag is passed to my_copy(). Note: TestCase is not attached and can be tested manually using debugger. 	4a9e7e8e25192fda25a71bbb4d7f9b5b6088e0c6
----------------------------
ndb - ndbd_redo_log_reader - adopt to configurable sized log-files 	e6b46a8b73e430a4226c89a612a39c2acf12718b
----------------------------
"Bug#46954 ndb_mgmd version mysql-5.1.34 ndb-7.0.6 does not handle SYSTEM sections - Always add ""Type"" when transforming the SYSTEM section. - Add testcase to ndb_config_config.ini - Move the data files for ndb_config tests into suite/ndb/ instead of ""global"" std_data "	3ed67ac04867b0df561f1749fb9ed55f03e67f83
----------------------------
BUG#46861 Auto-closing of temporary tables broken by replicate-rewrite-db When a connection is dropped any remaining temporary table is also automatically dropped and the SQL statement of this operation is written to the binary log in order to drop such tables on the slave and keep the slave in sync. Specifically, the current code base creates the following type of statement: DROP /*!40005 TEMPORARY */ TABLE IF EXISTS `db`.`table`; Unfortunately, appending the database to the table name in this manner circumvents the replicate-rewrite-db option (and any options that check the current database). To solve the issue, we started writing the statement to the binary as follows: use `db`; DROP /*!40005 TEMPORARY */ TABLE IF EXISTS `table`; 	fe03c7dce698a34072f4adf146c21c26432f4447
----------------------------
branches/zip: Replace the constant 3/8 ratio that controls the LRU_old size with the settable global variable innodb_old_blocks_pct. The minimum and maximum values are 5 and 95 per cent, respectively. The default is 100*3/8, in line with the old behavior. ut_time_ms(): New utility function, to return the current time in milliseconds. TODO: Is there a more efficient timestamp function, such as rdtsc divided by a power of two? buf_LRU_old_threshold_ms: New variable, corresponding to innodb_old_blocks_time. The value 0 is the default behaviour: no timeout before making blocks 'new'. bpage->accessed, bpage->LRU_position, buf_pool->ulint_clock: Remove. bpage->access_time: New field, replacing bpage->accessed. Protected by buf_pool_mutex instead of bpage->mutex. Updated when a page is created or accessed the first time in the buffer pool. buf_LRU_old_ratio, innobase_old_blocks_pct: New variables, corresponding to innodb_old_blocks_pct buf_LRU_old_ratio_update(), innobase_old_blocks_pct_update(): Update functions for buf_LRU_old_ratio, innobase_old_blocks_pct. buf_page_peek_if_too_old(): Compare ut_time_ms() to bpage->access_time if buf_LRU_old_threshold_ms && bpage->old.  Else observe buf_LRU_old_ratio and bpage->freed_page_clock. buf_pool_t: Add n_pages_made_young, n_pages_not_made_young, n_pages_made_young_old, n_pages_not_made_young, for statistics. buf_print(): Display buf_pool->n_pages_made_young, buf_pool->n_pages_not_made_young.  This function is only for crash diagnostics. buf_print_io(): Display buf_pool->LRU_old_len and quantities derived from buf_pool->n_pages_made_young, buf_pool->n_pages_not_made_young. This function is invoked by SHOW ENGINE INNODB STATUS. rb://129 approved by Heikki Tuuri.  This addresses Bug #45015. 	0f7895d4777e1be82ec0b39b6963933f01bb6821
----------------------------
branches/5.1: Merge PART OF r2911.5.5 from MySQL: adjust CMakeLists.txt to work with MySQL 5.1.38 and beyond. MySQL changed how the build works on Windows starting from 5.1.38. All shared properties are defined in mysql_storage_engine.cmake. And the top level CMakeLists.txt determines what engines to build and how (static vs. dynamic). log message from BZR: ------------------------------------------------------------ revno: 2911.5.5 committer: Vladislav Vaintroub <vvaintroub@mysql.com> branch nick: 5.1-innodb_plugin timestamp: Wed 2009-06-10 10:59:49 +0200 message: Backport WL#3653 to 5.1 to enable bundled innodb plugin. Remove custom DLL loader code from innodb plugin code, use symbols exported from mysqld. removed: storage/innodb_plugin/handler/handler0vars.h storage/innodb_plugin/handler/win_delay_loader.cc added: storage/mysql_storage_engine.cmake win/create_def_file.js modified: CMakeLists.txt include/m_ctype.h include/my_global.h include/my_sys.h include/mysql/plugin.h libmysqld/CMakeLists.txt mysql-test/mysql-test-run.pl mysql-test/t/plugin.test mysql-test/t/plugin_load-master.opt mysys/charset.c sql/CMakeLists.txt sql/handler.h sql/mysql_priv.h sql/mysqld.cc sql/sql_class.cc sql/sql_class.h sql/sql_list.h sql/sql_profile.h storage/Makefile.am storage/archive/CMakeLists.txt storage/blackhole/CMakeLists.txt storage/csv/CMakeLists.txt storage/example/CMakeLists.txt storage/federated/CMakeLists.txt storage/heap/CMakeLists.txt storage/innobase/CMakeLists.txt storage/innobase/handler/ha_innodb.cc storage/innodb_plugin/CMakeLists.txt storage/innodb_plugin/handler/ha_innodb.cc storage/innodb_plugin/handler/handler0alter.cc storage/innodb_plugin/handler/i_s.cc storage/innodb_plugin/plug.in storage/myisam/CMakeLists.txt storage/myisammrg/CMakeLists.txt win/Makefile.am win/configure.js 	06db0143f96e2b1b8e1f1243667951a3ceacfddd
----------------------------
BUG#42013 Inconsistent Option Names for ndb_mgmd - Add --config-dir as an alias for --configdir in ndb_mgmd 	eeebe11306fe52c7686bc88a73f653898781d1bf
----------------------------
Bug #44723 Larger read_buffer_size values can cause performance decrease for INSERTs Bulk inserts (multiple row, CREATE ... SELECT, INSERT ... SELECT) into MyISAM tables were performed inefficiently. This was mainly affecting use cases where read_buffer_size was considerably large (>256K) and low number of rows was inserted (e.g. 30-100). The problem was that during I/O cache initialization (this happens before each bulk insert) allocated I/O buffer was unnecessarily initialized to '\0'. This was happening because of mess in flag values. MyISAM informs I/O cache to wait for free space (if out of disk space) by passing MY_WAIT_IF_FULL flag. Since MY_WAIT_IF_FULL and MY_ZEROFILL have the same values, memory allocator was initializing memory to '\0'. The performance gain provided with this patch may only be visible with non-debug binaries, since safemalloc always initializes allocated memory to 0xA5A5... 	90032c100751d4a864f371dd451fda7d8b12022d
----------------------------
"BUG#45694 Deadlock in replicated statement is not retried If the SQL Thread fails to execute an event due to a temporary error (e.g. ER_LOCK_DEADLOCK) and the option ""--slave_transaction_retries"" is set the SQL Thread should not be aborted and the transaction should be restarted from the beginning and re-executed. Unfortunately, a wrong interpretation of the THD::is_fatal_error was preventing this behavior. In a nutshell, ""this variable is set to TRUE if an execution of a compound statement cannot continue. In particular, it is used to disable access to the CONTINUE or EXIT handlers of stored routines. So even temporary errors may have this variable set. To fix the bug, we have done what follows: DBUG_ENTER(""has_temporary_error""); -  if (thd->is_fatal_error) -    DBUG_RETURN(0); - DBUG_EXECUTE_IF(""all_errors_are_temporary_errors"", if (thd->main_da.is_error()) { "	f132d6b4c1d3d645354c03d06e6595b5e5c42390
----------------------------
Renamed storage/innodb_plugin to storage/innobase, so that 1) it's the same layout as we always had in trees containing only the builtin 2) win\configure.js WITH_INNOBASE_STORAGE_ENGINE still works. 	29a46b4cf93afb06d7de8d97de5c376226f61377
----------------------------
branches/zip: mem_heap_block_free(): If innodb_use_sys_malloc is set, do not tell Valgrind that the memory is free, to avoid a bogus warning in Valgrind's built-in free() hook. 	50ba5c7389bc8fd656cbf27a869b8dab2ced8cb9
----------------------------
"ndb - bug#46242 1) allow stray "";"" at end of config values 2) fix spelling in error message "	4c61864c1bb848f6a8dc7f6c65b9262948f3e7ee
----------------------------
Not all of the necessary tests for multi-byte support in readline were included in the configure tests. (Bug #46310) 	57f6e7ebae2a0b66debee5fd24f29527e9e9ee9b
----------------------------
Bug#17270 - mysql client tool could not find ../share/charsets folder and fails. - Define and pass compile time path variables as pre-processor definitions to mimic the makefile build. - Set new CMake version and policy requirements explicitly. - Changed DATADIR to MYSQL_DATADIR to avoid conflicting definition in Platform SDK header ObjIdl.h which also defines DATADIR. 	6df2af22ceda4a59fc43a661f6ecfac362e9783a
----------------------------
Bug#46385: [Warning] option 'max_join_size': unsigned value 18446744073709551615 adjusted t The maximum value of the max_join_size variable is set by converting a signed type (long int) with negative value (-1) to a wider unsigned type (unsigned long long), which yields the largest possible value of the wider unsigned type -- as per the language conversion rules. But, depending on build options, the type of the max_join_size might be a shorter type (ha_rows - unsigned long) which causes the warning to be thrown once the large value is truncated to fit. The solution is to ensure that the maximum value of the variable is always set to the maximum value of integer type of max_join_size. Furthermore, it would be interesting to always have a fixed type for this variable, but this would incur in a change of behavior which is not acceptable for a GA version. See Bug#35346. 	71713f32d0f7b9f83552ea6557a2c851bb82a102
----------------------------
Bug#20023: mysql_change_user() resets the value of SQL_BIG_SELECTS Post-merge fix: test case could fail due to a conversion of the max_join_size value to a integer. Fixed by preserving the value as a string for comparison purposes. 	93bd65b04bacd3302c3d571895f7e931448fb463
----------------------------
Merge: 9c72a7b 3199702 Bug#43587: Putting event_scheduler=1 in init SQL file crashes mysqld The problem was that enabling the event scheduler inside a init file caused the server to crash upon start-up. The crash occurred because the event scheduler wasn't being initialized before the commands in the init-file are processed. The solution is to initialize the event scheduler before the init file is read. The patch also disables the event scheduler during bootstrap and makes the bootstrap operation robust in the presence of background threads. 	97ff334b371331e34ec741a021d8aa0b5449480e
----------------------------
Backport into build-200907211706-5.0.82sp1 > ------------------------------------------------------------ > revno: 2772 > revision-id: joro@sun.com-20090615133815-eb007p5793in33p5 > parent: joro@sun.com-20090612140659-4hj1tta9p8wvcw4k > committer: Georgi Kodinov <joro@sun.com> > branch nick: B44810-5.0-bugteam > timestamp: Mon 2009-06-15 16:38:15 +0300 > message: >   Bug #44810: index merge and order by with low sort_buffer_size >   crashes server! > >   The problem affects the scenario when index merge is followed by a filesort >   and the sort buffer is not big enough for all the sort keys. >   In this case the filesort function will read the data to the end through the >   index merge quick access method (and thus closing the cursor etc), >   but will leave the pointer to the quick select method in place. >   It will then create a temporary file to hold the results of the filesort and >   will add it as a sort output file (in sort.io_cache). >   Note that filesort will copy the original 'sort' structure in an automatic >   variable and restore it after it's done. >   As a result at exiting filesort() we have a sort.io_cache filled in and >   nothing else (as a result of close of the cursors at end of reading data >   through index merge). >   Now create_sort_index() will note that there is a select and will clean it up >   (as it's been used already by filesort() reading the data in). While doing that >   a special case in the index merge destructor will clean up the sort.io_cache, >   assuming it's an output of the index merge method and is not needed anymore. >   As a result the code that tries to read the data back from the filesort output >   will get no data in both memory and disk and will crash. > >   Fixed similarly to how filesort() does it : by copying the sort.io_cache structure >   to a local variable, removing the pointer to the io_cache (so that it's not freed >   by QUICK_INDEX_MERGE_SELECT::~QUICK_INDEX_MERGE_SELECT) and restoring the original >   structure (together with the valid pointer) after the cleanup is done. >   This is a safe thing to do because all the structures are already cleaned up by >   hitting the end of the index merge's read method (QUICK_INDEX_MERGE_SELECT::get_next()) >   and the cleanup code being written in a way that tolerates repeating cleanups. 	4461edde0a6e37328f2101d8c75a2267cc6ed50d
----------------------------
"branches/innodb+: Merge revisions 5144:5524 from branches/zip ------------------------------------------------------------------------ r5147 | marko | 2009-05-27 06:55:14 -0400 (Wed, 27 May 2009) | 1 line branches/zip: ibuf0ibuf.c: Improve a comment. ------------------------------------------------------------------------ r5149 | marko | 2009-05-27 07:46:42 -0400 (Wed, 27 May 2009) | 34 lines branches/zip: Merge revisions 4994:5148 from branches/5.1: ------------------------------------------------------------------------ r5126 | vasil | 2009-05-26 16:57:12 +0300 (Tue, 26 May 2009) | 9 lines branches/5.1: Preparation for the fix of Bug#45097 Hang during recovery, redo logs for doublewrite buffer pages Non-functional change: move FSP_* macros from fsp0fsp.h to a new file fsp0types.h. This is needed in order to be able to use FSP_EXTENT_SIZE in mtr0log.ic. ------------------------------------------------------------------------ r5127 | vasil | 2009-05-26 17:05:43 +0300 (Tue, 26 May 2009) | 9 lines branches/5.1: Preparation for the fix of Bug#45097 Hang during recovery, redo logs for doublewrite buffer pages Do not include unnecessary headers mtr0log.h and fut0lst.h in trx0sys.h and include fsp0fsp.h just before it is needed. This is needed in order to be able to use TRX_SYS_SPACE in mtr0log.ic. ------------------------------------------------------------------------ r5128 | vasil | 2009-05-26 17:26:37 +0300 (Tue, 26 May 2009) | 7 lines branches/5.1: Fix Bug#45097 Hang during recovery, redo logs for doublewrite buffer pages Do not write redo log for the pages in the doublewrite buffer. Also, do not make a dummy change to the page because this is not needed. ------------------------------------------------------------------------ ------------------------------------------------------------------------ r5169 | marko | 2009-05-28 03:21:55 -0400 (Thu, 28 May 2009) | 1 line branches/zip: mtr0mtr.h: Add Doxygen comments for the redo log entry types. ------------------------------------------------------------------------ r5176 | marko | 2009-05-28 07:14:02 -0400 (Thu, 28 May 2009) | 1 line branches/zip: Correct a debug assertion that was added in r5125. ------------------------------------------------------------------------ r5201 | marko | 2009-06-01 06:35:25 -0400 (Mon, 01 Jun 2009) | 2 lines branches/zip: Clean up some comments. Make the rec parameter of mlog_open_and_write_index() const. ------------------------------------------------------------------------ r5234 | marko | 2009-06-03 08:26:41 -0400 (Wed, 03 Jun 2009) | 44 lines branches/zip: Merge revisions 5148:5233 from branches/5.1: ------------------------------------------------------------------------ r5150 | vasil | 2009-05-27 18:56:03 +0300 (Wed, 27 May 2009) | 4 lines branches/5.1: Whitespace fixup. ------------------------------------------------------------------------ r5191 | vasil | 2009-05-30 17:46:05 +0300 (Sat, 30 May 2009) | 19 lines branches/5.1: Merge a change from MySQL (this fixes the failing innodb_mysql test): ------------------------------------------------------------ revno: 1810.3894.10 committer: Sergey Glukhov <Sergey.Glukhov@sun.com> branch nick: mysql-5.0-bugteam timestamp: Tue 2009-05-19 11:32:21 +0500 message: Bug#39793 Foreign keys not constructed when column has a '#' in a comment or default value Internal InnoDN FK parser does not recognize '\'' as quotation symbol. Suggested fix is to add '\'' symbol check for quotation condition (dict_strip_comments() function). modified: innobase/dict/dict0dict.c mysql-test/r/innodb_mysql.result mysql-test/t/innodb_mysql.test ------------------------------------------------------------------------ r5233 | marko | 2009-06-03 15:12:44 +0300 (Wed, 03 Jun 2009) | 11 lines branches/5.1: Merge the test case from r5232 from branches/5.0: ------------------------------------------------------------------------ r5232 | marko | 2009-06-03 14:31:04 +0300 (Wed, 03 Jun 2009) | 21 lines branches/5.0: Merge r3590 from branches/5.1 in order to fix Bug #40565 (Update Query Results in ""1 Row Affected"" But Should Be ""Zero Rows""). Also, add a test case for Bug #40565. rb://128 approved by Heikki Tuuri ------------------------------------------------------------------------ ------------------------------------------------------------------------ ------------------------------------------------------------------------ r5250 | marko | 2009-06-04 02:58:23 -0400 (Thu, 04 Jun 2009) | 1 line branches/zip: Add Doxygen comments to the rest of buf0*. ------------------------------------------------------------------------ r5251 | marko | 2009-06-04 02:59:51 -0400 (Thu, 04 Jun 2009) | 1 line branches/zip: Replace <= in a function comment. ------------------------------------------------------------------------ r5253 | marko | 2009-06-04 06:37:35 -0400 (Thu, 04 Jun 2009) | 1 line branches/zip: Add missing Doxygen comments for page0zip. ------------------------------------------------------------------------ r5261 | vasil | 2009-06-05 11:13:31 -0400 (Fri, 05 Jun 2009) | 15 lines branches/zip: Fix Mantis Issue#244 fix bug in linear read ahead (no check on access pattern) The changes are: 1) Take into account access pattern when deciding whether or not to do linear read ahead. 2) Expose a knob innodb_read_ahead_factor = [0-64] default (8), dynamic, global to control linear read ahead behvior 3) Disable random read ahead. Keep the code for now. Submitted by:	Inaam (rb://122) Approved by:	Heikki (rb://122) ------------------------------------------------------------------------ r5262 | vasil | 2009-06-05 12:04:25 -0400 (Fri, 05 Jun 2009) | 22 lines branches/zip: Enable functionality to have multiple background io helper threads. This patch is based on percona contributions. More details about this patch will be written at: https://svn.innodb.com/innobase/MultipleBackgroundThreads The patch essentially does the following: expose following knobs: innodb_read_io_threads = [1 - 64] default 1 innodb_write_io_threads = [1 - 64] default 1 deprecate innodb_file_io_threads (this parameter was relevant only on windows) Internally it allows multiple segments for read and write IO request arrays where one thread works on one segement. Submitted by:	Inaam (rb://124) Approved by:	Heikki (rb://124) ------------------------------------------------------------------------ r5263 | vasil | 2009-06-05 12:19:37 -0400 (Fri, 05 Jun 2009) | 4 lines branches/zip: Whitespace cleanup. ------------------------------------------------------------------------ r5264 | vasil | 2009-06-05 12:26:58 -0400 (Fri, 05 Jun 2009) | 4 lines branches/zip: Add ChangeLog entry for r5261. ------------------------------------------------------------------------ r5265 | vasil | 2009-06-05 12:34:11 -0400 (Fri, 05 Jun 2009) | 4 lines branches/zip: Add ChangeLog entry for r5262. ------------------------------------------------------------------------ r5268 | inaam | 2009-06-08 12:18:21 -0400 (Mon, 08 Jun 2009) | 7 lines branches/zip Non functional change: Added legal notices acknowledging percona contribution to the multiple IO helper threads patch i.e.: r5262 ------------------------------------------------------------------------ r5283 | inaam | 2009-06-09 13:46:29 -0400 (Tue, 09 Jun 2009) | 9 lines branches/zip rb://130 Enable Group Commit functionality that was broken in 5.0 when distributed transactions were introduced. Reviewed by: Heikki ------------------------------------------------------------------------ r5319 | marko | 2009-06-11 04:40:33 -0400 (Thu, 11 Jun 2009) | 3 lines branches/zip: Declare os_thread_id_t as unsigned long, because ulint is wrong on Win64. Pointed out by Vladislav Vaintroub <wlad@sun.com>. ------------------------------------------------------------------------ r5320 | inaam | 2009-06-11 09:15:41 -0400 (Thu, 11 Jun 2009) | 14 lines branches/zip	rb://131 This patch changes the following defaults: max_dirty_pages_pct: default from 90 to 75. max allowed from 100 to 99 additional_mem_pool_size: default from 1 to 8 MB buffer_pool_size: default from 8 to 128 MB log_buffer_size: default from 1 to 8 MB read_io_threads/write_io_threads: default from 1 to 4 The log file sizes are untouched because of upgrade issues Reviewed by: Heikki ------------------------------------------------------------------------ r5330 | marko | 2009-06-16 04:08:59 -0400 (Tue, 16 Jun 2009) | 2 lines branches/zip: buf_page_get_gen(): Reduce mutex holding time by adjusting buf_pool->n_pend_unzip while only holding buf_pool_mutex. ------------------------------------------------------------------------ r5331 | marko | 2009-06-16 05:00:48 -0400 (Tue, 16 Jun 2009) | 2 lines branches/zip: buf_page_get_zip(): Eliminate a buf_page_get_mutex() call. The function must switch on the block state anyway. ------------------------------------------------------------------------ r5332 | vasil | 2009-06-16 05:03:27 -0400 (Tue, 16 Jun 2009) | 4 lines branches/zip: Add ChangeLog entries for r5283 and r5320. ------------------------------------------------------------------------ r5333 | marko | 2009-06-16 05:27:46 -0400 (Tue, 16 Jun 2009) | 1 line branches/zip: buf_page_io_query(): Remove unused function. ------------------------------------------------------------------------ r5335 | marko | 2009-06-16 09:23:10 -0400 (Tue, 16 Jun 2009) | 2 lines branches/zip: innodb.test: Adjust the tolerance of innodb_buffer_pool_pages_total for r5320. ------------------------------------------------------------------------ r5342 | marko | 2009-06-17 06:15:32 -0400 (Wed, 17 Jun 2009) | 60 lines branches/zip: Merge revisions 5233:5341 from branches/5.1: ------------------------------------------------------------------------ r5233 | marko | 2009-06-03 15:12:44 +0300 (Wed, 03 Jun 2009) | 11 lines branches/5.1: Merge the test case from r5232 from branches/5.0: ------------------------------------------------------------------------ r5232 | marko | 2009-06-03 14:31:04 +0300 (Wed, 03 Jun 2009) | 21 lines branches/5.0: Merge r3590 from branches/5.1 in order to fix Bug #40565 (Update Query Results in ""1 Row Affected"" But Should Be ""Zero Rows""). Also, add a test case for Bug #40565. rb://128 approved by Heikki Tuuri ------------------------------------------------------------------------ ------------------------------------------------------------------------ r5243 | sunny | 2009-06-04 03:17:14 +0300 (Thu, 04 Jun 2009) | 14 lines branches/5.1: When the InnoDB and MySQL data dictionaries go out of sync, before the bug fix we would assert on missing autoinc columns. With this fix we allow MySQL to open the table but set the next autoinc value for the column to the MAX value. This effectively disables the next value generation. INSERTs will fail with a generic AUTOINC failure. However, the user should be able to read/dump the table, set the column values explicitly, use ALTER TABLE to set the next autoinc value and/or sync the two data dictionaries to resume normal operations. Fix Bug#44030 Error: (1500) Couldn't read the MAX(ID) autoinc value from the index (PRIMARY) rb://118 ------------------------------------------------------------------------ r5252 | sunny | 2009-06-04 10:16:24 +0300 (Thu, 04 Jun 2009) | 2 lines branches/5.1: The version of the result file checked in was broken in r5243. ------------------------------------------------------------------------ r5259 | vasil | 2009-06-05 10:29:16 +0300 (Fri, 05 Jun 2009) | 7 lines branches/5.1: Remove the word ""Error"" from the printout because the mysqltest suite interprets it as an error and thus the innodb-autoinc test fails. Approved by:	Sunny (via IM) ------------------------------------------------------------------------ r5339 | marko | 2009-06-17 11:01:37 +0300 (Wed, 17 Jun 2009) | 2 lines branches/5.1: Add missing #include ""mtr0log.h"" so that the code compiles with -DUNIV_MUST_NOT_INLINE. (null merge; this had already been committed in branches/zip) ------------------------------------------------------------------------ r5340 | marko | 2009-06-17 12:11:49 +0300 (Wed, 17 Jun 2009) | 4 lines branches/5.1: row_unlock_for_mysql(): When the clustered index is unknown, refuse to unlock the record. (Bug #45357, caused by the fix of Bug #39320). rb://132 approved by Sunny Bains. ------------------------------------------------------------------------ ------------------------------------------------------------------------ r5343 | vasil | 2009-06-17 08:56:12 -0400 (Wed, 17 Jun 2009) | 4 lines branches/zip: Add ChangeLog entry for r5342. ------------------------------------------------------------------------ r5344 | marko | 2009-06-17 09:03:45 -0400 (Wed, 17 Jun 2009) | 1 line branches/zip: row_merge_read_rec(): Fix a UNIV_DEBUG bug (Bug #45426) ------------------------------------------------------------------------ r5391 | marko | 2009-06-22 05:31:35 -0400 (Mon, 22 Jun 2009) | 2 lines branches/zip: buf_page_get_zip(): Fix a bogus warning about block_mutex being possibly uninitialized. ------------------------------------------------------------------------ r5392 | marko | 2009-06-22 07:58:20 -0400 (Mon, 22 Jun 2009) | 4 lines branches/zip: ha_innobase::check_if_incompatible_data(): When ROW_FORMAT=DEFAULT, do not compare to get_row_type(). Without this change, fast index creation will be disabled in recent versions of MySQL 5.1. ------------------------------------------------------------------------ r5393 | pekka | 2009-06-22 09:27:55 -0400 (Mon, 22 Jun 2009) | 4 lines branches/zip: Minor changes for Hot Backup to build correctly. (The code bracketed between #ifdef UNIV_HOTBACKUP and #endif /* UNIV_HOTBACKUP */). This change should not affect !UNIV_HOTBACKUP build. ------------------------------------------------------------------------ r5394 | pekka | 2009-06-22 09:46:34 -0400 (Mon, 22 Jun 2009) | 4 lines branches/zip: Add functions for checking the format of tablespaces for Hot Backup build (UNIV_HOTBACKUP defined). This change should not affect !UNIV_HOTBACKUP build. ------------------------------------------------------------------------ r5397 | calvin | 2009-06-23 16:59:42 -0400 (Tue, 23 Jun 2009) | 7 lines branches/zip: change the header file path. Change the header file path from ../storage/innobase/include/ to ../include/. In the planned 5.1 + plugin release, the source directory of the plugin will not be in storage/innobase. Approved by: Heikki (IM) ------------------------------------------------------------------------ r5407 | calvin | 2009-06-24 09:51:08 -0400 (Wed, 24 Jun 2009) | 4 lines branches/zip: remove relative path of header files. Suggested by Marko. ------------------------------------------------------------------------ r5412 | marko | 2009-06-25 06:27:08 -0400 (Thu, 25 Jun 2009) | 1 line branches/zip: Replace a DBUG_ASSERT with ut_a to track down Issue #290. ------------------------------------------------------------------------ r5415 | marko | 2009-06-25 06:45:57 -0400 (Thu, 25 Jun 2009) | 3 lines branches/zip: dict_index_find_cols(): Print diagnostic on name mismatch. This addresses Bug #44571 but does not fix it. rb://135 approved by Sunny Bains. ------------------------------------------------------------------------ r5417 | marko | 2009-06-25 08:20:56 -0400 (Thu, 25 Jun 2009) | 1 line branches/zip: ha_innodb.cc: Move the misplaced Doxygen @file comment. ------------------------------------------------------------------------ r5418 | marko | 2009-06-25 08:55:52 -0400 (Thu, 25 Jun 2009) | 5 lines branches/zip: Fix a race condition caused by SET GLOBAL innodb_commit_concurrency=DEFAULT. (Bug #45749) When innodb_commit_concurrency is initially set nonzero, DEFAULT would change it back to 0, triggering Bug #42101. rb://139 approved by Heikki Tuuri. ------------------------------------------------------------------------ r5423 | calvin | 2009-06-26 16:52:52 -0400 (Fri, 26 Jun 2009) | 2 lines branches/zip: Fix typos. ------------------------------------------------------------------------ r5425 | marko | 2009-06-29 04:52:30 -0400 (Mon, 29 Jun 2009) | 4 lines branches/zip: ha_innobase::add_index(), ha_innobase::final_drop_index(): Start prebuilt->trx before locking the table.  This should fix Issue #293 and could fix Issue #229. Approved by Sunny (over IM). ------------------------------------------------------------------------ r5426 | marko | 2009-06-29 05:24:27 -0400 (Mon, 29 Jun 2009) | 3 lines branches/zip: buf_page_get_gen(): Fix a race condition when reading buf_fix_count.  This could explain Issue #156. Tested by Michael. ------------------------------------------------------------------------ r5427 | marko | 2009-06-29 05:54:53 -0400 (Mon, 29 Jun 2009) | 5 lines branches/zip: lock_print_info_all_transactions(), buf_read_recv_pages(): Tolerate missing tablespaces (zip_size==ULINT_UNDEFINED). buf_page_get_gen(): Add ut_ad(ut_is_2pow(zip_size)). Issue #289, rb://136 approved by Sunny Bains ------------------------------------------------------------------------ r5428 | marko | 2009-06-29 07:06:29 -0400 (Mon, 29 Jun 2009) | 2 lines branches/zip: row_sel_store_mysql_rec(): Add missing pointer cast. Do not do arithmetics on void pointers. ------------------------------------------------------------------------ r5429 | marko | 2009-06-29 09:49:54 -0400 (Mon, 29 Jun 2009) | 13 lines branches/zip: Do not crash on SET GLOBAL innodb_file_format=DEFAULT or SET GLOBAL innodb_file_format_check=DEFAULT. innodb_file_format.test: New test for innodb_file_format and innodb_file_format_check. innodb_file_format_name_validate(): Store the string in *save. innodb_file_format_name_update(): Check the string again. innodb_file_format_check_validate(): Store the string in *save. innodb_file_format_check_update(): Check the string again. Issue #282, rb://140 approved by Heikki Tuuri ------------------------------------------------------------------------ r5430 | marko | 2009-06-29 09:58:07 -0400 (Mon, 29 Jun 2009) | 2 lines branches/zip: lock_rec_validate_page(): Add another assertion to track down Issue #289. ------------------------------------------------------------------------ r5431 | marko | 2009-06-29 09:58:40 -0400 (Mon, 29 Jun 2009) | 1 line branches/zip: Revert an accidentally made change in r5430 to univ.i. ------------------------------------------------------------------------ r5437 | marko | 2009-06-30 05:10:01 -0400 (Tue, 30 Jun 2009) | 1 line branches/zip: ibuf_dummy_index_free(): Beautify the comment. ------------------------------------------------------------------------ r5438 | marko | 2009-06-30 05:10:32 -0400 (Tue, 30 Jun 2009) | 1 line branches/zip: fseg_free(): Remove this unused function. ------------------------------------------------------------------------ r5439 | marko | 2009-06-30 05:15:22 -0400 (Tue, 30 Jun 2009) | 2 lines branches/zip: fseg_validate(): Enclose in #ifdef UNIV_DEBUG. This function is unused, but it could turn out to be a useful debugging aid. ------------------------------------------------------------------------ r5441 | marko | 2009-06-30 06:30:14 -0400 (Tue, 30 Jun 2009) | 2 lines branches/zip: ha_delete(): Remove this unused function that was very similar to ha_search_and_delete_if_found(). ------------------------------------------------------------------------ r5442 | marko | 2009-06-30 06:45:41 -0400 (Tue, 30 Jun 2009) | 1 line branches/zip: lock_is_on_table(), lock_table_unlock(): Unused, remove. ------------------------------------------------------------------------ r5443 | marko | 2009-06-30 07:03:00 -0400 (Tue, 30 Jun 2009) | 1 line branches/zip: os_event_create_auto(): Unused, remove. ------------------------------------------------------------------------ r5444 | marko | 2009-06-30 07:19:49 -0400 (Tue, 30 Jun 2009) | 1 line branches/zip: que_graph_try_free(): Unused, remove. ------------------------------------------------------------------------ r5445 | marko | 2009-06-30 07:28:11 -0400 (Tue, 30 Jun 2009) | 1 line branches/zip: row_build_row_ref_from_row(): Unused, remove. ------------------------------------------------------------------------ r5446 | marko | 2009-06-30 07:35:45 -0400 (Tue, 30 Jun 2009) | 1 line branches/zip: srv_que_round_robin(), srv_que_task_enqueue(): Unused, remove. ------------------------------------------------------------------------ r5447 | marko | 2009-06-30 07:37:58 -0400 (Tue, 30 Jun 2009) | 1 line branches/zip: srv_que_task_queue_check(): Unused, remove. ------------------------------------------------------------------------ r5448 | marko | 2009-06-30 07:56:36 -0400 (Tue, 30 Jun 2009) | 1 line branches/zip: mem_heap_cat(): Unused, remove. ------------------------------------------------------------------------ r5449 | marko | 2009-06-30 08:00:50 -0400 (Tue, 30 Jun 2009) | 2 lines branches/zip: innobase_start_or_create_for_mysql(): Invoke os_get_os_version() at most once. ------------------------------------------------------------------------ r5450 | marko | 2009-06-30 08:02:20 -0400 (Tue, 30 Jun 2009) | 1 line branches/zip: os_file_close_no_error_handling(): Unused, remove. ------------------------------------------------------------------------ r5451 | marko | 2009-06-30 08:09:49 -0400 (Tue, 30 Jun 2009) | 2 lines branches/zip: page_set_max_trx_id(): Make the code compile with UNIV_HOTBACKUP. ------------------------------------------------------------------------ r5452 | marko | 2009-06-30 08:10:26 -0400 (Tue, 30 Jun 2009) | 2 lines branches/zip: os_file_close_no_error_handling(): Restore, as this function is used within InnoDB Hot Backup. ------------------------------------------------------------------------ r5453 | marko | 2009-06-30 08:14:01 -0400 (Tue, 30 Jun 2009) | 1 line branches/zip: os_process_set_priority_boost(): Unused, remove. ------------------------------------------------------------------------ r5454 | marko | 2009-06-30 08:42:52 -0400 (Tue, 30 Jun 2009) | 2 lines branches/zip: Replace a non-ASCII character (ISO 8859-1 encoded U+00AD SOFT HYPHEN) with a cheap ASCII substitute. ------------------------------------------------------------------------ r5456 | inaam | 2009-06-30 14:21:09 -0400 (Tue, 30 Jun 2009) | 4 lines branches/zip Non functional change. s/Percona/Percona Inc./ ------------------------------------------------------------------------ r5470 | vasil | 2009-07-02 09:12:36 -0400 (Thu, 02 Jul 2009) | 16 lines branches/zip: Use PAUSE instruction inside spinloop if it is available. The patch was originally developed by Mikael Ronstrom <mikael@mysql.com> and can be found here: http://bazaar.launchpad.net/%7Emysql/mysql-server/mysql-5.4/revision/2768 http://bazaar.launchpad.net/%7Emysql/mysql-server/mysql-5.4/revision/2771 http://bazaar.launchpad.net/%7Emysql/mysql-server/mysql-5.4/revision/2772 http://bazaar.launchpad.net/%7Emysql/mysql-server/mysql-5.4/revision/2774 http://bazaar.launchpad.net/%7Emysql/mysql-server/mysql-5.4/revision/2777 http://bazaar.launchpad.net/%7Emysql/mysql-server/mysql-5.4/revision/2799 http://bazaar.launchpad.net/%7Emysql/mysql-server/mysql-5.4/revision/2800 Approved by:	Heikki (rb://137) ------------------------------------------------------------------------ r5481 | vasil | 2009-07-06 13:16:32 -0400 (Mon, 06 Jul 2009) | 4 lines branches/zip: Remove unnecessary quotes and simplify plug.in. ------------------------------------------------------------------------ r5482 | calvin | 2009-07-06 18:36:35 -0400 (Mon, 06 Jul 2009) | 5 lines branches/zip: add COPYING files for Percona and Sun Micro. 1.0.4 contains patches based on contributions from Percona and Sun Microsystems. ------------------------------------------------------------------------ r5483 | calvin | 2009-07-07 05:36:43 -0400 (Tue, 07 Jul 2009) | 3 lines branches/zip: add IB_HAVE_PAUSE_INSTRUCTION to CMake. Windows will support PAUSE instruction by default. ------------------------------------------------------------------------ r5484 | inaam | 2009-07-07 18:57:14 -0400 (Tue, 07 Jul 2009) | 13 lines branches/zip  rb://126 Based on contribution from Google Inc. This patch introduces a new parameter innodb_io_capacity to control the rate at which master threads performs various tasks. The default value is 200 and higher values imply more aggressive flushing and ibuf merges from within the master thread. This patch also changes the ibuf merge from synchronous to asynchronous. Another minor change is not to force the master thread to wait for a log flush to complete every second. Approved by: Heikki ------------------------------------------------------------------------ r5485 | inaam | 2009-07-07 19:00:49 -0400 (Tue, 07 Jul 2009) | 18 lines branches/zip  rb://138 The current implementation is to try to flush the neighbors of every page that we flush. This patch makes the following distinction: 1) If the flush is from flush_list AND 2) If the flush is intended to move the oldest_modification LSN ahead (this happens when a user thread sees little space in the log file and attempts to flush pages from the buffer pool so that a checkpoint can be made) THEN Do not try to flush the neighbors. Just focus on flushing dirty pages at the end of flush_list Approved by: Heikki ------------------------------------------------------------------------ r5486 | inaam | 2009-07-08 12:11:40 -0400 (Wed, 08 Jul 2009) | 29 lines branches/zip  rb://133 This patch introduces heuristics based flushing rate of dirty pages to avoid IO bursts at checkpoint. 1) log_capacity / log_generated per second gives us number of seconds in which ALL dirty pages need to be flushed. Based on this rough assumption we can say that n_dirty_pages / (log_capacity / log_generation_rate) = desired_flush_rate 2) We use weighted averages (hard coded to 20 seconds) of log_generation_rate to avoid resonance. 3) From the desired_flush_rate we subtract the number of pages that have been flushed due to LRU flushing. That gives us pages that we should flush as part of flush_list cleanup. And that is the number (capped by maximum io_capacity) that we try to flush from the master thread. Knobs: ====== innodb_adaptive_flushing: boolean, global, dynamic, default TRUE. Since this heuristic is very experimental and has the potential to dramatically change the IO pattern I think it is a good idea to leave a knob to turn it off. Approved by: Heikki ------------------------------------------------------------------------ r5487 | calvin | 2009-07-08 12:42:28 -0400 (Wed, 08 Jul 2009) | 7 lines branches/zip: fix PAUSE instruction patch on Windows The original PAUSE instruction patch (r5470) does not compile on Windows. Also, there is an elegant way of doing it on Windows - YieldProcessor(). Approved by: Heikki (on IM) ------------------------------------------------------------------------ r5489 | vasil | 2009-07-10 05:02:22 -0400 (Fri, 10 Jul 2009) | 9 lines branches/zip: Change the defaults for innodb_sync_spin_loops: 20 -> 30 innodb_spin_wait_delay: 5 -> 6 This change was proposed by Sun/MySQL based on their performance testing, see https://svn.innodb.com/innobase/Release_tasks_for_InnoDB_Plugin_V1.0.4 ------------------------------------------------------------------------ r5490 | vasil | 2009-07-10 05:04:20 -0400 (Fri, 10 Jul 2009) | 4 lines branches/zip: Add ChangeLog entry for 5489. ------------------------------------------------------------------------ r5491 | calvin | 2009-07-10 12:19:17 -0400 (Fri, 10 Jul 2009) | 6 lines branches/zip: add copyright info to files related to PAUSE instruction patch, contributed by Sun Microsystems. ------------------------------------------------------------------------ r5492 | calvin | 2009-07-10 17:47:34 -0400 (Fri, 10 Jul 2009) | 5 lines branches/zip: add ChangeLog entries for r5484-r5486. ------------------------------------------------------------------------ r5494 | vasil | 2009-07-13 03:37:35 -0400 (Mon, 13 Jul 2009) | 6 lines branches/zip: Restore the original value of innodb_sync_spin_loops at the end, previously the test assumed that setting it to 20 will do this, but now the default is 30 and MTR's internal check failed. ------------------------------------------------------------------------ r5495 | inaam | 2009-07-13 11:48:45 -0400 (Mon, 13 Jul 2009) | 5 lines branches/zip rb://138 (REVERT) Revert the flush neighbors patch as it shows regression in the benchmarks run by Michael. ------------------------------------------------------------------------ r5496 | inaam | 2009-07-13 14:04:57 -0400 (Mon, 13 Jul 2009) | 4 lines branches/zip Fixed warnings on windows where ulint != ib_uint64_t ------------------------------------------------------------------------ r5497 | calvin | 2009-07-13 15:01:00 -0400 (Mon, 13 Jul 2009) | 9 lines branches/zip: fix run-time symbols clash on Solaris. This patch is from Sergey Vojtovich of Sun Microsystems, to fix run-time symbols clash on Solaris with older C++ compiler: - when finding out a way to hide symbols, make decision basing on compiler, not operating system. - Sun Studio supports __hidden declaration specifier for this purpose. ------------------------------------------------------------------------ r5498 | vasil | 2009-07-14 03:16:18 -0400 (Tue, 14 Jul 2009) | 92 lines branches/zip: Merge r5341:5497 from branches/5.1, skipping: c5419 because it is merge from branches/zip into branches/5.1 c5466 because the source code has been adjusted to match the MySQL behavior and the innodb-autoinc test does not fail in branches/zip, if c5466 is merged, then innodb-autoinc starts failing, Sunny suggested not to merge c5466. and resolving conflicts in c5410, c5440, c5488: ------------------------------------------------------------------------ r5410 | marko | 2009-06-24 22:26:34 +0300 (Wed, 24 Jun 2009) | 2 lines Changed paths: M /branches/5.1/include/trx0sys.ic M /branches/5.1/trx/trx0purge.c M /branches/5.1/trx/trx0sys.c M /branches/5.1/trx/trx0undo.c branches/5.1: Add missing #include ""mtr0log.h"" to avoid warnings when compiling with -DUNIV_MUST_NOT_INLINE. ------------------------------------------------------------------------ r5419 | marko | 2009-06-25 16:11:57 +0300 (Thu, 25 Jun 2009) | 18 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/mysql-test/innodb_bug42101-nonzero.result M /branches/5.1/mysql-test/innodb_bug42101-nonzero.test M /branches/5.1/mysql-test/innodb_bug42101.result M /branches/5.1/mysql-test/innodb_bug42101.test branches/5.1: Merge r5418 from branches/zip: ------------------------------------------------------------------------ r5418 | marko | 2009-06-25 15:55:52 +0300 (Thu, 25 Jun 2009) | 5 lines Changed paths: M /branches/zip/ChangeLog M /branches/zip/handler/ha_innodb.cc M /branches/zip/mysql-test/innodb_bug42101-nonzero.result M /branches/zip/mysql-test/innodb_bug42101-nonzero.test M /branches/zip/mysql-test/innodb_bug42101.result M /branches/zip/mysql-test/innodb_bug42101.test branches/zip: Fix a race condition caused by SET GLOBAL innodb_commit_concurrency=DEFAULT. (Bug #45749) When innodb_commit_concurrency is initially set nonzero, DEFAULT would change it back to 0, triggering Bug #42101. rb://139 approved by Heikki Tuuri. ------------------------------------------------------------------------ ------------------------------------------------------------------------ r5440 | vasil | 2009-06-30 13:04:29 +0300 (Tue, 30 Jun 2009) | 8 lines Changed paths: M /branches/5.1/fil/fil0fil.c branches/5.1: Fix Bug#45814 URL reference in InnoDB server errors needs adjusting to match documentation by changing the URL from http://dev.mysql.com/doc/refman/5.1/en/innodb-troubleshooting.html to http://dev.mysql.com/doc/refman/5.1/en/innodb-troubleshooting-datadict.html ------------------------------------------------------------------------ r5466 | vasil | 2009-07-02 10:46:45 +0300 (Thu, 02 Jul 2009) | 6 lines Changed paths: M /branches/5.1/mysql-test/innodb-autoinc.result M /branches/5.1/mysql-test/innodb-autoinc.test branches/5.1: Adjust the failing innodb-autoinc test to conform to the latest behavior of the MySQL code. The idea and the comment in innodb-autoinc.test come from Sunny. ------------------------------------------------------------------------ r5488 | vasil | 2009-07-09 19:16:44 +0300 (Thu, 09 Jul 2009) | 13 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc A /branches/5.1/mysql-test/innodb_bug21704.result A /branches/5.1/mysql-test/innodb_bug21704.test branches/5.1: Fix Bug#21704 Renaming column does not update FK definition by checking whether a column that participates in a FK definition is being renamed and denying the ALTER in this case. The patch was originally developed by Davi Arnaut <Davi.Arnaut@Sun.COM>: http://lists.mysql.com/commits/77714 and was later adjusted to conform to InnoDB coding style by me (Vasil), I also added some more comments and moved the bug specific mysql-test to a separate file to make it more manageable and flexible. ------------------------------------------------------------------------ ------------------------------------------------------------------------ r5499 | calvin | 2009-07-14 12:55:10 -0400 (Tue, 14 Jul 2009) | 3 lines branches/zip: add a missing file in Makefile.am This change was suggested by MySQL. ------------------------------------------------------------------------ r5500 | calvin | 2009-07-14 13:03:26 -0400 (Tue, 14 Jul 2009) | 3 lines branches/zip: minor change Remove an extra ""with"". ------------------------------------------------------------------------ r5501 | vasil | 2009-07-14 13:58:15 -0400 (Tue, 14 Jul 2009) | 5 lines branches/zip: Add @ZLIB_INCLUDES@ so that the InnoDB Plugin picks up the same zlib.h header file that is eventually used by mysqld. ------------------------------------------------------------------------ r5502 | vasil | 2009-07-14 13:59:59 -0400 (Tue, 14 Jul 2009) | 4 lines branches/zip: Add include/ut0auxconf.h to noinst_HEADERS ------------------------------------------------------------------------ r5503 | vasil | 2009-07-14 14:16:11 -0400 (Tue, 14 Jul 2009) | 8 lines branches/zip: Non-functional change: put files in noinst_HEADERS and libinnobase_a_SOURCES one per line and sort alphabetically, so it is easier to find if a file is there or not and also diffs show exactly the added or removed file instead of surrounding lines too. ------------------------------------------------------------------------ r5504 | calvin | 2009-07-15 04:58:44 -0400 (Wed, 15 Jul 2009) | 6 lines branches/zip: fix compile errors on Win64 Both srv_read_ahead_factor and srv_io_capacity should be defined as ulong. Approved by: Sunny ------------------------------------------------------------------------ r5508 | calvin | 2009-07-16 09:40:47 -0400 (Thu, 16 Jul 2009) | 16 lines branches/zip: Support inlining of functions and prefetch with Sun Studio Those changes are contributed by Sun/MySQL. Two sets of changes in this patch when Sun Studio is used: - Explicit inlining of functions - Prefetch Support This patch has been tested by Sunny with the plugin statically built in. Since we've never built the plugin as a dynamically loaded module on Solaris, it is a separate task to change plug.in. rb://142 Approved by: Heikki ------------------------------------------------------------------------ r5509 | calvin | 2009-07-16 09:45:28 -0400 (Thu, 16 Jul 2009) | 2 lines branches/zip: add ChangeLog entry for r5508. ------------------------------------------------------------------------ r5512 | sunny | 2009-07-19 19:52:48 -0400 (Sun, 19 Jul 2009) | 2 lines branches/zip: Remove unused extern ref to timed_mutexes. ------------------------------------------------------------------------ r5513 | sunny | 2009-07-19 19:58:43 -0400 (Sun, 19 Jul 2009) | 2 lines branches/zip: Undo r5512 ------------------------------------------------------------------------ r5514 | sunny | 2009-07-19 20:08:49 -0400 (Sun, 19 Jul 2009) | 2 lines branches/zip: Only use my_bool when UNIV_HOTBACKUP is not defined. ------------------------------------------------------------------------ r5515 | sunny | 2009-07-20 03:29:14 -0400 (Mon, 20 Jul 2009) | 2 lines branches/zip: The dict_table_t::autoinc_mutex field is not used in HotBackup. ------------------------------------------------------------------------ r5516 | sunny | 2009-07-20 03:46:05 -0400 (Mon, 20 Jul 2009) | 4 lines branches/zip: Make this file usable from within HotBackup. A new file has been introduced called hb_univ.i. This file should have all the HotBackup specific configuration. ------------------------------------------------------------------------ r5517 | sunny | 2009-07-20 03:55:11 -0400 (Mon, 20 Jul 2009) | 2 lines Add /* UNIV_HOTBACK */ ------------------------------------------------------------------------ r5519 | vasil | 2009-07-20 04:45:18 -0400 (Mon, 20 Jul 2009) | 31 lines branches/zip: Merge r5497:5518 from branches/5.1: ------------------------------------------------------------------------ r5518 | vasil | 2009-07-20 11:29:47 +0300 (Mon, 20 Jul 2009) | 22 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: Merge a change from MySQL: ------------------------------------------------------------ revno: 2874.2.1 committer: Anurag Shekhar <anurag.shekhar@sun.com> branch nick: mysql-5.1-bugteam-windows-warning timestamp: Wed 2009-05-13 15:41:24 +0530 message: Bug #39802 On Windows, 32-bit time_t should be enforced This patch fixes compilation warning, ""conversion from 'time_t' to 'ulong', possible loss of data"". The fix is to typecast time_t to ulong before assigning it to ulong. Backported this from 6.0-bugteam tree. modified: storage/archive/ha_archive.cc storage/federated/ha_federated.cc storage/innobase/handler/ha_innodb.cc storage/myisam/ha_myisam.cc ------------------------------------------------------------------------ ------------------------------------------------------------------------ r5520 | vasil | 2009-07-20 04:51:47 -0400 (Mon, 20 Jul 2009) | 4 lines branches/zip: Add ChangeLog entries for r5498 and r5519. ------------------------------------------------------------------------ r5524 | inaam | 2009-07-20 12:23:15 -0400 (Mon, 20 Jul 2009) | 9 lines branches/zip Change the read ahead parameter name to innodb_read_ahead_threshold. Change the meaning of this parameter to signify the number of pages that must be sequentially accessed for InnoDB to trigger a readahead request. Suggested by: Ken ------------------------------------------------------------------------ "	0c990811dee00ace58d1436436db4832859d5ab5
----------------------------
branches/zip Change the read ahead parameter name to innodb_read_ahead_threshold. Change the meaning of this parameter to signify the number of pages that must be sequentially accessed for InnoDB to trigger a readahead request. Suggested by: Ken 	c34ab748cc799cef7f329af3f1979b2763492bdf
----------------------------
branches/zip: Make this file usable from within HotBackup. A new file has been introduced called hb_univ.i. This file should have all the HotBackup specific configuration. 	64b5315e62f9560930e708c672538abc99561488
----------------------------
branches/zip: Remove unused extern ref to timed_mutexes. 	940e1ef159d1c1368a1ca4b6d78247bbffe9cbc1
----------------------------
"Bug #45700 MTR v1 --start-and-exit --default-storage-engine=Innodb is froken Change of variable states in Bug 19027 was not backported to v1 Changed ne ""TRUE"" to eq ""OFF"" "	53e14eaa0aab03020b7ae268e3a45d03ab6d7ac0
----------------------------
"Bug #43005 main.init_connect fais on Windows in PB2 Server args containing spaces do not work on Windows Fixed my_safe_rprocess-win to re-apply """" around such args "	8d6a25a23f8d3453a2d729b79553a5b64a7c4b40
----------------------------
"branches/zip: Merge r5341:5497 from branches/5.1, skipping: c5419 because it is merge from branches/zip into branches/5.1 c5466 because the source code has been adjusted to match the MySQL behavior and the innodb-autoinc test does not fail in branches/zip, if c5466 is merged, then innodb-autoinc starts failing, Sunny suggested not to merge c5466. and resolving conflicts in c5410, c5440, c5488: ------------------------------------------------------------------------ r5410 | marko | 2009-06-24 22:26:34 +0300 (Wed, 24 Jun 2009) | 2 lines Changed paths: M /branches/5.1/include/trx0sys.ic M /branches/5.1/trx/trx0purge.c M /branches/5.1/trx/trx0sys.c M /branches/5.1/trx/trx0undo.c branches/5.1: Add missing #include ""mtr0log.h"" to avoid warnings when compiling with -DUNIV_MUST_NOT_INLINE. ------------------------------------------------------------------------ r5419 | marko | 2009-06-25 16:11:57 +0300 (Thu, 25 Jun 2009) | 18 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/mysql-test/innodb_bug42101-nonzero.result M /branches/5.1/mysql-test/innodb_bug42101-nonzero.test M /branches/5.1/mysql-test/innodb_bug42101.result M /branches/5.1/mysql-test/innodb_bug42101.test branches/5.1: Merge r5418 from branches/zip: ------------------------------------------------------------------------ r5418 | marko | 2009-06-25 15:55:52 +0300 (Thu, 25 Jun 2009) | 5 lines Changed paths: M /branches/zip/ChangeLog M /branches/zip/handler/ha_innodb.cc M /branches/zip/mysql-test/innodb_bug42101-nonzero.result M /branches/zip/mysql-test/innodb_bug42101-nonzero.test M /branches/zip/mysql-test/innodb_bug42101.result M /branches/zip/mysql-test/innodb_bug42101.test branches/zip: Fix a race condition caused by SET GLOBAL innodb_commit_concurrency=DEFAULT. (Bug #45749) When innodb_commit_concurrency is initially set nonzero, DEFAULT would change it back to 0, triggering Bug #42101. rb://139 approved by Heikki Tuuri. ------------------------------------------------------------------------ ------------------------------------------------------------------------ r5440 | vasil | 2009-06-30 13:04:29 +0300 (Tue, 30 Jun 2009) | 8 lines Changed paths: M /branches/5.1/fil/fil0fil.c branches/5.1: Fix Bug#45814 URL reference in InnoDB server errors needs adjusting to match documentation by changing the URL from http://dev.mysql.com/doc/refman/5.1/en/innodb-troubleshooting.html to http://dev.mysql.com/doc/refman/5.1/en/innodb-troubleshooting-datadict.html ------------------------------------------------------------------------ r5466 | vasil | 2009-07-02 10:46:45 +0300 (Thu, 02 Jul 2009) | 6 lines Changed paths: M /branches/5.1/mysql-test/innodb-autoinc.result M /branches/5.1/mysql-test/innodb-autoinc.test branches/5.1: Adjust the failing innodb-autoinc test to conform to the latest behavior of the MySQL code. The idea and the comment in innodb-autoinc.test come from Sunny. ------------------------------------------------------------------------ r5488 | vasil | 2009-07-09 19:16:44 +0300 (Thu, 09 Jul 2009) | 13 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc A /branches/5.1/mysql-test/innodb_bug21704.result A /branches/5.1/mysql-test/innodb_bug21704.test branches/5.1: Fix Bug#21704 Renaming column does not update FK definition by checking whether a column that participates in a FK definition is being renamed and denying the ALTER in this case. The patch was originally developed by Davi Arnaut <Davi.Arnaut@Sun.COM>: http://lists.mysql.com/commits/77714 and was later adjusted to conform to InnoDB coding style by me (Vasil), I also added some more comments and moved the bug specific mysql-test to a separate file to make it more manageable and flexible. ------------------------------------------------------------------------ "	8d57fae29c1bc599519eb91d29699d535d0168df
----------------------------
branches/zip: Restore the original value of innodb_sync_spin_loops at the end, previously the test assumed that setting it to 20 will do this, but now the default is 30 and MTR's internal check failed. 	f1f529dd6dad665f07cef17606ba9db945f9e319
----------------------------
Bug #46080: group_concat(... order by) crashes server when sort_buffer_size cannot allocate The NULL return from tree_insert() (on low memory) was not checked for in Item_func_group_concat::add(). As a result on low memory conditions a crash happens. Fixed by properly checking the return code. 	5a6809590c02a0bf851c8e6b89fd3fcabfecbca1
----------------------------
Applying InnoDB snapshot 5.1-ss5488,part 2. Fixes BUG#45749 BUG#45749 - Race condition in SET GLOBAL innodb_commit_concurrency=DEFAULT Detailed revision comments: r5419 | marko | 2009-06-25 16:11:57 +0300 (Thu, 25 Jun 2009) | 18 lines branches/5.1: Merge r5418 from branches/zip: ------------------------------------------------------------------------ r5418 | marko | 2009-06-25 15:55:52 +0300 (Thu, 25 Jun 2009) | 5 lines Changed paths: M /branches/zip/ChangeLog M /branches/zip/handler/ha_innodb.cc M /branches/zip/mysql-test/innodb_bug42101-nonzero.result M /branches/zip/mysql-test/innodb_bug42101-nonzero.test M /branches/zip/mysql-test/innodb_bug42101.result M /branches/zip/mysql-test/innodb_bug42101.test branches/zip: Fix a race condition caused by SET GLOBAL innodb_commit_concurrency=DEFAULT. (Bug #45749) When innodb_commit_concurrency is initially set nonzero, DEFAULT would change it back to 0, triggering Bug #42101. rb://139 approved by Heikki Tuuri. ------------------------------------------------------------------------ 	1a40d4cd5eef1b7c3cb5d6a0d608cfd03c71a18d
----------------------------
branches/zip: Change the defaults for innodb_sync_spin_loops: 20 -> 30 innodb_spin_wait_delay: 5 -> 6 This change was proposed by Sun/MySQL based on their performance testing, see https://svn.innodb.com/innobase/Release_tasks_for_InnoDB_Plugin_V1.0.4 	95a9790ceb4308d98afa3b0cfe4f7f469b6b448d
----------------------------
branches/zip  rb://133 This patch introduces heuristics based flushing rate of dirty pages to avoid IO bursts at checkpoint. 1) log_capacity / log_generated per second gives us number of seconds in which ALL dirty pages need to be flushed. Based on this rough assumption we can say that n_dirty_pages / (log_capacity / log_generation_rate) = desired_flush_rate 2) We use weighted averages (hard coded to 20 seconds) of log_generation_rate to avoid resonance. 3) From the desired_flush_rate we subtract the number of pages that have been flushed due to LRU flushing. That gives us pages that we should flush as part of flush_list cleanup. And that is the number (capped by maximum io_capacity) that we try to flush from the master thread. Knobs: ====== innodb_adaptive_flushing: boolean, global, dynamic, default TRUE. Since this heuristic is very experimental and has the potential to dramatically change the IO pattern I think it is a good idea to leave a knob to turn it off. Approved by: Heikki 	43fceb74f215da67e014d320b05a797da90e45a3
----------------------------
branches/zip  rb://126 Based on contribution from Google Inc. This patch introduces a new parameter innodb_io_capacity to control the rate at which master threads performs various tasks. The default value is 200 and higher values imply more aggressive flushing and ibuf merges from within the master thread. This patch also changes the ibuf merge from synchronous to asynchronous. Another minor change is not to force the master thread to wait for a log flush to complete every second. Approved by: Heikki 	462111149c277f6a24551b76e1a2dd9db80ddad6
----------------------------
BUG#44581 Slave stops when transaction with non-transactional table gets lock wait timeout In STMT and MIXED modes, a statement that changes both non-transactional and transactional tables must be written to the binary log whenever there are changes to non-transactional tables. This means that the statement gets into the binary log even when the changes to the transactional tables fail. In particular , in the presence of a failure such statement is annotated with the error number and wrapped in a begin/rollback. On the slave, while applying the statement, it is expected the same failure and the rollback prevents the transactional changes to be persisted. Unfortunately, statements that fail due to concurrency issues (e.g. deadlocks, timeouts) are logged in the same way causing the slave to stop as the statements are applied sequentially by the SQL Thread. To fix this bug, we automatically ignore concurrency failures on the slave. Specifically, the following failures are ignored: ER_LOCK_WAIT_TIMEOUT, ER_LOCK_DEADLOCK and ER_XA_RBDEADLOCK. 	508fe9dd15ff28ed0d692c00e87d0b6836ea4836
----------------------------
branches/zip: Do not crash on SET GLOBAL innodb_file_format=DEFAULT or SET GLOBAL innodb_file_format_check=DEFAULT. innodb_file_format.test: New test for innodb_file_format and innodb_file_format_check. innodb_file_format_name_validate(): Store the string in *save. innodb_file_format_name_update(): Check the string again. innodb_file_format_check_validate(): Store the string in *save. innodb_file_format_check_update(): Check the string again. Issue #282, rb://140 approved by Heikki Tuuri 	6bfbdb2d0d9ca228cabb1b969c1d1eb09882b544
----------------------------
branches/5.1: Merge r5418 from branches/zip: ------------------------------------------------------------------------ r5418 | marko | 2009-06-25 15:55:52 +0300 (Thu, 25 Jun 2009) | 5 lines Changed paths: M /branches/zip/ChangeLog M /branches/zip/handler/ha_innodb.cc M /branches/zip/mysql-test/innodb_bug42101-nonzero.result M /branches/zip/mysql-test/innodb_bug42101-nonzero.test M /branches/zip/mysql-test/innodb_bug42101.result M /branches/zip/mysql-test/innodb_bug42101.test branches/zip: Fix a race condition caused by SET GLOBAL innodb_commit_concurrency=DEFAULT. (Bug #45749) When innodb_commit_concurrency is initially set nonzero, DEFAULT would change it back to 0, triggering Bug #42101. rb://139 approved by Heikki Tuuri. ------------------------------------------------------------------------ 	274dd54952b97a10314d7536e38f5c0f70e969fc
----------------------------
branches/zip: Fix a race condition caused by SET GLOBAL innodb_commit_concurrency=DEFAULT. (Bug #45749) When innodb_commit_concurrency is initially set nonzero, DEFAULT would change it back to 0, triggering Bug #42101. rb://139 approved by Heikki Tuuri. 	bb0e1c34dfd642ede4dd3cbfca8bbeabbe25d403
----------------------------
Backport into build-200906240007-5.1.34sp1 > ------------------------------------------------------------ > revno: 2871.4.1 > revision-id: vvaintroub@mysql.com-20090429115110-1ye4700m8it5tyc5 > parent: staale.smedseng@sun.com-20090428161955-3vnku1igwt0knpfu > committer: Vladislav Vaintroub <vvaintroub@mysql.com> > branch nick: mysql-5.1-bugteam > timestamp: Wed 2009-04-29 13:51:10 +0200 > message: >   Bug#43932 myisam index corruption with large index and large >   key_buffer_size. > >   The cause of corruption was number overflow when multiplying >   two ulong values, number of used keycache blocks with size >   of a single block. The result of multiplication exceeded ulong >   range (4G) and this lead to incorrectly calculated  buffer offset >   in the key cache. > >   The fix is to use size_t for multiplication result. > >   This patch also fixes pointless cast in safemalloc >   (size of allocated block to uint), that creates lot of false >   alarm warnings when using big keycache (> 4GB) in debug mode. 	2079763d5c8d4e87becb4bf5c66b9ecb2274e208
----------------------------
"Backport into build-200906240007-5.1.34sp1 > ------------------------------------------------------------ > revno: 2857.1.1 > revision-id: satya.bn@sun.com-20090415114608-26b21dtx3doeidcc > parent: davi.arnaut@sun.com-20090414120532-9a34lwlk105z8log > committer: Satya B <satya.bn@sun.com> > branch nick: mysql-5.1-bugteam-innodb > timestamp: Wed 2009-04-15 17:16:08 +0530 > message: >   Applying InnoDB snashot 5.1-ss4699, part 1. Fixes BUG#39320 and other >   problems > >   1) BUG#39320 - innodb crash in file btr/btr0pcur.c line 217 with >                  innodb_locks_unsafe_for_binlog > >   2) Fixes bug in multi-table semi consistent reads. > >   3) Fixes email address from dev@innodb.com to innodb_dev_ww@oracle.com > >   4) Fixes warning message generated by main.innodb test > > >   Detailed revision comments: > >   r4399 | marko | 2009-03-12 09:38:05 +0200 (Thu, 12 Mar 2009) | 5 lines >   branches/5.1: row_sel_get_clust_rec_for_mysql(): Store the cursor position >   also for unlock_row().  (Bug #39320) > >   rb://96 approved by Heikki Tuuri. > >   r4400 | marko | 2009-03-12 10:06:44 +0200 (Thu, 12 Mar 2009) | 8 lines >   branches/5.1: Fix a bug in multi-table semi-consistent reads. >   Remember the acquired record locks per table handle (row_prebuilt_t) >   rather than per transaction (trx_t), so that unlock_row should successfully >   unlock all non-matching rows in multi-table operations. >   This deficiency was found while investigating Bug #39320. > >   rb://94 approved by Heikki Tuuri. > >   r4481 | marko | 2009-03-19 15:01:48 +0200 (Thu, 19 Mar 2009) | 6 lines >   branches/5.1: row_unlock_for_mysql(): Do not unlock records that were >   modified by the current transaction.  This bug was introduced or unmasked >   in r4400. > >   rb://97 approved by Heikki Tuuri > >   r4573 | vasil | 2009-03-30 14:17:13 +0300 (Mon, 30 Mar 2009) | 4 lines >   branches/5.1: > >   Fix email address from dev@innodb.com to innodb_dev_ww@oracle.com > >   r4574 | vasil | 2009-03-30 14:27:08 +0300 (Mon, 30 Mar 2009) | 38 lines >   branches/5.1: > >   Restore the state of INNODB_THREAD_CONCURRENCY to silence this warning: > >     TEST                                      RESULT   TIME (ms) >     ------------------------------------------------------------ > >     worker[1] Using MTR_BUILD_THREAD 250, with reserved ports 12500..12509 >     main.innodb                              [ pass ]   8803 > >     MTR's internal check of the test case 'main.innodb' failed. >     This means that the test case does not preserve the state that existed >     before the test case was executed.  Most likely the test case did not >     do a proper clean-up. >     This is the diff of the states of the servers before and after the >     test case was executed: >     mysqltest: Logging to '/tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.log'. >     mysqltest: Results saved in '/tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.result'. >     mysqltest: Connecting to server localhost:12500 (socket /tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/mysqld.1.sock) as 'root', connection 'default', attempt 0 ... >     mysqltest: ... Connected. >     mysqltest: Start processing test commands from './include/check-testcase.test' ... >     mysqltest: ... Done processing test commands. >     --- /tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.result	2009-03-30 14:12:31.000000000 +0300 >     +++ /tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.reject	2009-03-30 14:12:41.000000000 +0300 >     @@ -99,7 +99,7 @@ >      INNODB_SUPPORT_XA	ON >      INNODB_SYNC_SPIN_LOOPS	20 >      INNODB_TABLE_LOCKS	ON >     -INNODB_THREAD_CONCURRENCY	8 >     +INNODB_THREAD_CONCURRENCY	16 >      INNODB_THREAD_SLEEP_DELAY	10000 >      INSERT_ID	0 >      INTERACTIVE_TIMEOUT	28800 > >     mysqltest: Result content mismatch > >     not ok > >   r4576 | vasil | 2009-03-30 16:25:10 +0300 (Mon, 30 Mar 2009) | 4 lines >   branches/5.1: > >   Revert a change to Makefile.am that I committed accidentally in c4574. "	027cd1d438baf57ccc2aff46b1f9c8563e0e7fe3
----------------------------
ndb - skip-grant-tables for autotest upgrade tests (started failing after last 5.1-mainline merge) 	f21767b14cf7c0a8ad91aa66db9ce06316705ade
----------------------------
ndb - initial checkin of configure checks for java stuff needed for ndb-jtie 	0feb56c42599d80fb2195bf7bfadc69592ea6c4c
----------------------------
BUG#42721 configure.in invokes 'nm' directly A hardcoded use of nm and libc was put into configure.in. This broke cross-compiling and is bad practice. Fitting variables now used. 	77fb9608a975ada6ec44d7dfb875967ecdac06a6
----------------------------
Bug #36654: mysqld_multi cannot start instances with different versions occasionally. mysql_multi can call mysqld_safe. In doing this it's not changing the current working directory. This may cause confusion in the case where mysqld_multi is handling instances of servers of different versions and the current working directory is the installation directory of one of these servers. Fixed by enhancing the meaning of basedir in [mysqldN] sections of mysqld_multi. If specified, mysqld_multi will change the current working directory to the basedir directory before starting the server in mysqld_multi ... start ... and then change it back to what it was. 	c5d904ebbe274453a39f145522d6af9a792f61e7
----------------------------
Bug #32223 SETting max_allowed_packet variable Inconsistent behavior of session variable max_allowed_packet (and net_buffer_length); only assignment to the global variable has any effect, without this being obvious to the user. The patch for Bug#22891 is backported to 5.0, making the two session variables read-only. As this is a backport to GA software, the error used when trying to assign to the read- only variable is ER_UNKNOWN_ERROR. The error message is the same as in 5.1+. 	2b48caa42dc69a802598dcf165226c98434c9598
----------------------------
BUG#43929 binlog corruption when max_binlog_cache_size is exceeded Large transactions and statements may corrupt the binary log if the size of the cache, which is set by the max_binlog_cache_size, is not enough to store the the changes. In a nutshell, to fix the bug, we save the position of the next character in the cache before starting processing a statement. If there is a problem, we simply restore the position thus removing any effect of the statement from the cache. Unfortunately, to avoid corrupting the binary log, we may end up loosing changes on non-transactional tables if they do not fit in the cache. In such cases, we store an Incident_log_event in order to stop the slave and alert users that some changes were not logged. Precisely, for every non-transactional changes that do not fit into the cache, we do the following: a) the statement is *not* logged b) an incident event is logged after committing/rolling back the transaction, if any. Note that if a failure happens before writing the incident event to the binary log, the slave will not stop and the master will not have reported any error. c) its respective statement gives an error For transactional changes that do not fit into the cache, we do the following: a) the statement is *not* logged b) its respective statement gives an error To work properly, this patch requires two additional things. Firstly, callers to MYSQL_BIN_LOG::write and THD::binlog_query must handle any error returned and take the appropriate actions such as undoing the effects of a statement. We already changed some calls in the sql_insert.cc, sql_update.cc and sql_insert.cc modules but the remaining calls spread all over the code should be handled in BUG#37148. Secondly, statements must be either classified as DDL or DML because DDLs that do not get into the cache must generate an incident event since they cannot be rolled back. 	ac1b464a3320a1faa59bc3f1f8e7b466dfb733f7
----------------------------
Bug #44810: index merge and order by with low sort_buffer_size crashes server! The problem affects the scenario when index merge is followed by a filesort and the sort buffer is not big enough for all the sort keys. In this case the filesort function will read the data to the end through the index merge quick access method (and thus closing the cursor etc), but will leave the pointer to the quick select method in place. It will then create a temporary file to hold the results of the filesort and will add it as a sort output file (in sort.io_cache). Note that filesort will copy the original 'sort' structure in an automatic variable and restore it after it's done. As a result at exiting filesort() we have a sort.io_cache filled in and nothing else (as a result of close of the cursors at end of reading data through index merge). Now create_sort_index() will note that there is a select and will clean it up (as it's been used already by filesort() reading the data in). While doing that a special case in the index merge destructor will clean up the sort.io_cache, assuming it's an output of the index merge method and is not needed anymore. As a result the code that tries to read the data back from the filesort output will get no data in both memory and disk and will crash. Fixed similarly to how filesort() does it : by copying the sort.io_cache structure to a local variable, removing the pointer to the io_cache (so that it's not freed by QUICK_INDEX_MERGE_SELECT::~QUICK_INDEX_MERGE_SELECT) and restoring the original structure (together with the valid pointer) after the cleanup is done. This is a safe thing to do because all the structures are already cleaned up by hitting the end of the index merge's read method (QUICK_INDEX_MERGE_SELECT::get_next()) and the cleanup code being written in a way that tolerates repeating cleanups. 	b1560b9f2f0c8d64e256a7305e066df161f8d10d
----------------------------
Bug#45100: Incomplete DROP USER in case of SQL_MODE = 'PAD_CHAR_TO_FULL_LENGTH' The SQL-mode PAD_CHAR_TO_FULL_LENGTH could prevent a DROP USER statement from privileges associated with the user being dropped. What ocurred was that reading from the User and Host fields of the tables tables_priv or columns_priv would yield values padded with spaces, causing a failure to match a specified user or host ('user' != 'user     '); The solution is to disregard the PAD_CHAR_TO_FULL_LENGTH mode when iterating over and matching values in the privileges tables for a DROP USER statement. 	1ad8016974bab985781041bd791f9f97a294d998
----------------------------
Bug#44920: MTR2 is not processing master.opt input properly on Windows Re-enabled tests main.init_connect and rpl.rpl_init_slave.test for non-Windows platforms. Please remove this code upon fixing the bug. 	8f2ff69434d5b821d1b952eb24e3d8fdb1d65a13
----------------------------
Removed legacy name for innodb_plugin SE, so --with[out]-innodb option doesn't affect innodb_plugin. Currently it works as following: * configure without relevant options producing two dynamic plugins * configure --with-plugin-innodb (or legacy --with-innodb) producing static standard InnoDB * configure --without-plugin-innodb (or legacy --without-innodb) disabling standard InnoDB * configure --with-plugin-innodb_plugin producing dynamic innodb_plugin * configure --without-plugin-innodb_plugin disabling innodb_plugin 	4adad43f75be353381881c7a5bb66a76e79f5db8
----------------------------
"Bug #44248  	Identifying nodes waited for from cluster log requires mental gymnastics. changed EventLogger to use new BaseString::getPrettyText() removed nodes2str() from ConfigManager.cpp and now use getPrettyText() "	8ccd4ff4239caecb35fe54819f191ac28cfa7ee2
----------------------------
Bug #45236: large blob inserts from mysqldump fail, possible memory issue ? The mysql command line client could misinterpret some character sequences as commands under some circumstances. The upper limit for internal readline buffer was raised to 1 GB (the same as for server's max_allowed_packet) so that any input line is processed by add_line() as a whole rather than in chunks. 	08410f34dd40835a00357529ea196dbabd0d6381
----------------------------
"branches/zip: Enable functionality to have multiple background io helper threads. This patch is based on percona contributions. More details about this patch will be written at: https://svn.innodb.com/innobase/MultipleBackgroundThreads The patch essentially does the following: expose following knobs: innodb_read_io_threads = [1 - 64] default 1 innodb_write_io_threads = [1 - 64] default 1 deprecate innodb_file_io_threads (this parameter was relevant only on windows) Internally it allows multiple segments for read and write IO request arrays where one thread works on one segement. Submitted by:	Inaam (rb://124) Approved by:	Heikki (rb://124) "	5d3b805292efaa4b3134208d1c7c6e85f07577b6
----------------------------
Followup Fix for BUG#10206 - InnoDB: Transaction requiring Max_BinLog_Cache_size > 4GB always rollsback. There is failure on pushbuild machines which are using old compilers complaining about ULLONG_MAX declaration. Changing this to ULONGLONG_MAX to solve the problem. 	e0beb7a93532fce98c74675b58d00f070490537a
----------------------------
"WL#4914  ArbitrationMethod=external - Add new configuration variable Arbitration that accepts Disabled, Default and WaitExternal - Implement WaitExternal which will wait for ArbitrationTimeout before continuing. During this time the ""external"" arbitrator should do it's job. - Add support for enum variables in config.ini "	bdf833d9f6941447b9b2e5534b81ffa5de5c46e0
----------------------------
BUG#43263 BEGIN skipped in some replicate-do-db cases BEGIN/COMMIT/ROLLBACK was subject to replication db rules, and caused the boundary of a transaction not recognized correctly when these queries were ignored by the rules. Fixed the problem by skipping replication db rules for these statements. 	c0fde0eda7e05e0c7f170c3cb353e7f38086fcfc
----------------------------
Bug #44638: mysql_upgrade, mysqlcheck output instance unclear Dump all connection-related arguments when running mysqlcheck from mysql_upgrade. No test case, since the output depends on the test suite configuration and platform. 	23c0cf38bf65d84a934f4a2755377241d50c1fb5
----------------------------
Bug#43940 64-bit windows myisamchk doesn't support key_buffer_size > 4G The fix is to allow myisamchk to use >4G key_buffer_size on win64 	7dc42f175f04adf379ac0cb35c09c39c8cd07640
----------------------------
"branches/innodb+: Merge revisions 4660:5090 from branches/zip: ------------------------------------------------------------------------ r4670 | vasil | 2009-04-07 09:35:23 +0300 (Tue, 07 Apr 2009) | 11 lines branches/zip: Fix Bug#43660 SHOW INDEXES/ANALYZE does NOT update cardinality for indexes of InnoDB table by replacing the pseudo random number generator with a better one (LCG). This also fixes Mantis Issue#212. Approved by:	Heikki (rb://110) ------------------------------------------------------------------------ r4671 | vasil | 2009-04-07 09:37:31 +0300 (Tue, 07 Apr 2009) | 4 lines branches/zip: Add ChangeLog entry for r4670. ------------------------------------------------------------------------ r4673 | marko | 2009-04-07 15:45:28 +0300 (Tue, 07 Apr 2009) | 4 lines branches/zip: Allow in-place updates of UTF-8 CHAR columns from or to NULL in ROW_FORMAT=REDUNDANT. (Bug #44032) rb://107 approved by Heikki Tuuri. ------------------------------------------------------------------------ r4677 | marko | 2009-04-07 16:19:31 +0300 (Tue, 07 Apr 2009) | 1 line branches/zip: Adjust r4673 as in the merge to branches/6.0 -r4676. ------------------------------------------------------------------------ r4678 | inaam | 2009-04-07 18:45:37 +0300 (Tue, 07 Apr 2009) | 12 lines branches/zip Enable atomics on solaris (using the libc functions as defined in atomic.h) if GCC atomic builtins are not present. There still remains some work to be done (by Vasil?). This patch makes changes to plug.in to check pthread_t size and presence of atomic functions when running on solaris. The same has to become a part of the generated Makefile.in when we bake our source. Reviewed by: Heikki rb://106 ------------------------------------------------------------------------ r4687 | vasil | 2009-04-08 13:08:59 +0300 (Wed, 08 Apr 2009) | 4 lines branches/zip: Whitespace fixup in the ChangeLog ------------------------------------------------------------------------ r4688 | vasil | 2009-04-08 13:11:15 +0300 (Wed, 08 Apr 2009) | 4 lines branches/zip: Add ChangeLog entry for r4678. ------------------------------------------------------------------------ r4689 | marko | 2009-04-08 14:24:49 +0300 (Wed, 08 Apr 2009) | 5 lines branches/zip: Hide unnecessarily visible globals. dict_ind_redundant, dict_ind_compact: Declare these UNIV_INTERN. innodb_hton_ptr: Declare static.  We do not attempt to access the built-in InnoDB any more. trx_roll_savepoints_free(): Declare UNIV_INTERN. ------------------------------------------------------------------------ r4700 | calvin | 2009-04-11 00:37:10 +0300 (Sat, 11 Apr 2009) | 9 lines branches/zip: Rewrite CMakeLists.txt CMakeLists.txt is completely rewritten: - To replace the one written by mysql - Print out some useful information, such as system name, directory, generator used, win64, Microsoft compiler, etc. - Remove one workaround for mysqld.lib location. User does not need to specify a build type ------------------------------------------------------------------------ r4702 | calvin | 2009-04-13 18:16:44 +0300 (Mon, 13 Apr 2009) | 3 lines branches/zip: delete the original CMakeLists.txt A new version will be committed, suggested by Ken. ------------------------------------------------------------------------ r4703 | calvin | 2009-04-13 18:20:45 +0300 (Mon, 13 Apr 2009) | 9 lines branches/zip: new CMakeLists.txt CMakeLists.txt is completely rewritten with enhancements: - Print out useful information, such as system name, directory, generator used, win64, Microsoft compiler, etc. - Remove one workaround for mysqld.lib location. User does not need to specify a build type when invoking MSVC generator. ------------------------------------------------------------------------ r4706 | vasil | 2009-04-14 14:32:11 +0300 (Tue, 14 Apr 2009) | 5 lines branches/zip: When using the random function, first take the modulus by the number of pages and then typecast to ulint. ------------------------------------------------------------------------ r4707 | calvin | 2009-04-14 17:47:31 +0300 (Tue, 14 Apr 2009) | 13 lines branches/zip: remove statically linked libraries from mysql To make zlib and strings dynamically linked; mysqld will export additional functions required by InnoDB. Since the symbols will be resolved dynamically during runtime, wdl_load_mapfile() is no longer able to make any function calls to ones in mysqld. As the result, strtoull() (from strings.lib) is replaced with _strtoui64(). rb://111 Approved by: Marko ------------------------------------------------------------------------ r4712 | vasil | 2009-04-15 12:26:32 +0300 (Wed, 15 Apr 2009) | 157 lines branches/zip: Merge revisions 4481:4710 from branches/5.1: (resolving conflict in r4574, r4575 and skipping r4699 and r4705 because analogous changes to r4699 and r4705 were already made to branches/zip) ------------------------------------------------------------------------ r4573 | vasil | 2009-03-30 14:17:13 +0300 (Mon, 30 Mar 2009) | 4 lines Changed paths: M /branches/5.1/mysql-test/innodb.test branches/5.1: Fix email address from dev@innodb.com to innodb_dev_ww@oracle.com ------------------------------------------------------------------------ r4574 | vasil | 2009-03-30 14:27:08 +0300 (Mon, 30 Mar 2009) | 38 lines Changed paths: M /branches/5.1/Makefile.am M /branches/5.1/mysql-test/innodb.test branches/5.1: Restore the state of INNODB_THREAD_CONCURRENCY to silence this warning: TEST                                      RESULT   TIME (ms) ------------------------------------------------------------ worker[1] Using MTR_BUILD_THREAD 250, with reserved ports 12500..12509 main.innodb                              [ pass ]   8803 MTR's internal check of the test case 'main.innodb' failed. This means that the test case does not preserve the state that existed before the test case was executed.  Most likely the test case did not do a proper clean-up. This is the diff of the states of the servers before and after the test case was executed: mysqltest: Logging to '/tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.log'. mysqltest: Results saved in '/tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.result'. mysqltest: Connecting to server localhost:12500 (socket /tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/mysqld.1.sock) as 'root', connection 'default', attempt 0 ... mysqltest: ... Connected. mysqltest: Start processing test commands from './include/check-testcase.test' ... mysqltest: ... Done processing test commands. --- /tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.result	2009-03-30 14:12:31.000000000 +0300 +++ /tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.reject	2009-03-30 14:12:41.000000000 +0300 @@ -99,7 +99,7 @@ INNODB_SUPPORT_XA	ON INNODB_SYNC_SPIN_LOOPS	20 INNODB_TABLE_LOCKS	ON -INNODB_THREAD_CONCURRENCY	8 +INNODB_THREAD_CONCURRENCY	16 INNODB_THREAD_SLEEP_DELAY	10000 INSERT_ID	0 INTERACTIVE_TIMEOUT	28800 mysqltest: Result content mismatch not ok ------------------------------------------------------------------------ r4575 | vasil | 2009-03-30 15:55:31 +0300 (Mon, 30 Mar 2009) | 8 lines Changed paths: M /branches/5.1/mysql-test/innodb.result M /branches/5.1/mysql-test/innodb.test branches/5.1: Fix Bug#43309 Test main.innodb can't be run twice Make the innodb mysql-test more flexible by inspecting how much a variable of interest has changed since the start of the test. Do not assume the variables have zero values at the start of the test. ------------------------------------------------------------------------ r4576 | vasil | 2009-03-30 16:25:10 +0300 (Mon, 30 Mar 2009) | 4 lines Changed paths: M /branches/5.1/Makefile.am branches/5.1: Revert a change to Makefile.am that I committed accidentally in c4574. ------------------------------------------------------------------------ r4659 | vasil | 2009-04-06 15:34:51 +0300 (Mon, 06 Apr 2009) | 6 lines Changed paths: M /branches/5.1/mysql-test/innodb.test branches/5.1: Followup to r4575 and the fix of Bug#43309 Test main.innodb can't be run twice: Add an explanatory comment, as suggested by Patrick Crews in the bug report. ------------------------------------------------------------------------ r4699 | vasil | 2009-04-09 14:01:52 +0300 (Thu, 09 Apr 2009) | 15 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/include/srv0srv.h M /branches/5.1/page/page0cur.c M /branches/5.1/srv/srv0srv.c branches/5.1: Fix Bug#43660 SHOW INDEXES/ANALYZE does NOT update cardinality for indexes of InnoDB table by replacing the PRNG that is used to pick random pages with a better one. This is based on r4670 but also adds a new configuration option and enables the fix only if this option is changed. Please skip the present revision when merging. Approved by:	Heikki (via email) ------------------------------------------------------------------------ r4705 | vasil | 2009-04-14 14:30:13 +0300 (Tue, 14 Apr 2009) | 5 lines Changed paths: M /branches/5.1/page/page0cur.c branches/5.1: When using the random function, first take the modulus by the number of pages and then typecast to ulint. ------------------------------------------------------------------------ r4710 | vasil | 2009-04-15 11:55:18 +0300 (Wed, 15 Apr 2009) | 25 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: Merge a change from MySQL (looks like this is against 5.0 but they later merged it to 5.1): ------------------------------------------------------------ revno: 1810.3846.1 committer: Alexey Botchkov <holyfoot@mysql.com> branch nick: 31435 timestamp: Tue 2008-11-11 14:42:32 +0400 message: Bug#31435 ha_innodb.cc:3983: ulint convert_search_mode_to_innobase(ha_rkey_function): Asse I think we don't need to issue an error statement in the convert_search_mode_to_innobase(). Returning the PAGE_CUR_UNSUPP value is enough as allows to handle this case depending on the requirements. per-file comments: sql/ha_innodb.cc Bug#31435 ha_innodb.cc:3983: ulint convert_search_mode_to_innobase(ha_rkey_function): Asse no error issued in convert_search_mode_to_innobase. ha_innobase::records_in_range() returns HA_POS_ERROR if search mode isn't supported. modified: sql/ha_innodb.cc ------------------------------------------------------------------------ ------------------------------------------------------------------------ r4713 | vasil | 2009-04-15 12:36:16 +0300 (Wed, 15 Apr 2009) | 4 lines branches/zip: Add missing ChangeLog entries ------------------------------------------------------------------------ r4714 | vasil | 2009-04-15 12:36:57 +0300 (Wed, 15 Apr 2009) | 4 lines branches/zip: Fix typo in the ChangeLog ------------------------------------------------------------------------ r4715 | vasil | 2009-04-15 12:39:04 +0300 (Wed, 15 Apr 2009) | 4 lines branches/zip: Whitespace cleanup in ChangeLog ------------------------------------------------------------------------ r4716 | vasil | 2009-04-15 21:36:06 +0300 (Wed, 15 Apr 2009) | 4 lines branches/zip: Add ChangeLog entry for r4543. ------------------------------------------------------------------------ r4717 | calvin | 2009-04-16 01:22:35 +0300 (Thu, 16 Apr 2009) | 18 lines branches/zip: Use the Windows Interlocked functions for atomic memory access Mapping the atomic operations to Windows Interlocked functions: os_compare_and_swap_* to InterlockedCompareExchange(64) os_atomic_increment_* to InterlockedExchangeAdd(64) os_atomic_test_and_set_byte to InterlockedExchange In this patch, the legacy code under UNIV_CAN_USE_X86_ASSEMBLER is removed all together, and add HAVE_WINDOWS_ATOMICS and INNODB_RW_LOCKS_USE_ATOMICS to CMakeLists.txt This is to address mantis issue#194. rb://113 Approved by: Marko ------------------------------------------------------------------------ r4720 | vasil | 2009-04-16 09:44:48 +0300 (Thu, 16 Apr 2009) | 4 lines branches/zip: Add ChangeLog entry for r4717. ------------------------------------------------------------------------ r4721 | marko | 2009-04-16 10:32:09 +0300 (Thu, 16 Apr 2009) | 2 lines branches/zip: row_scan_and_check_index(): Initialize prebuilt->index_usable. This should have been done in r4631.  Spotted by Michael. ------------------------------------------------------------------------ r4728 | marko | 2009-04-16 16:02:27 +0300 (Thu, 16 Apr 2009) | 3 lines branches/zip: univ.i: Define REFMAN as the base URL of the MySQL Reference Manual and use it in every string. This fixes Issue #221. ------------------------------------------------------------------------ r4733 | calvin | 2009-04-17 08:13:20 +0300 (Fri, 17 Apr 2009) | 6 lines branches/zip: minor changes to CMakeLists.txt All are non-functional changes: - should check for long (not int), spotted by Sunny - comment out the project definition, avoiding to generate another .sln file. ------------------------------------------------------------------------ r4748 | vasil | 2009-04-18 00:50:09 +0300 (Sat, 18 Apr 2009) | 118 lines branches/zip: Merge revisions 4710:4746 from branches/5.1: ------------------------------------------------------------------------ r4746 | vasil | 2009-04-18 00:32:08 +0300 (Sat, 18 Apr 2009) | 110 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/include/pars0pars.h branches/5.1: Merge a change from MySQL: ------------------------------------------------------------ revno: 2728.10.2 committer: Ignacio Galarza <iggy@mysql.com> branch nick: mysql-5.1-bugteam-bug29125 timestamp: Fri 2009-02-13 11:41:47 -0500 message: Bug#29125 Windows Server X64: so many compiler warnings - Remove bothersome warning messages.  This change focuses on the warnings that are covered by the ignore file: support-files/compiler_warnings.supp. - Strings are guaranteed to be max uint in length modified: client/mysql_upgrade.c client/mysqladmin.cc client/mysqlbinlog.cc client/mysqlcheck.c client/mysqldump.c client/mysqlslap.c client/mysqltest.cc client/sql_string.cc extra/comp_err.c extra/yassl/src/buffer.cpp extra/yassl/taocrypt/include/block.hpp extra/yassl/taocrypt/src/algebra.cpp extra/yassl/taocrypt/src/asn.cpp include/config-win.h libmysql/libmysql.c mysys/array.c mysys/base64.c mysys/charset.c mysys/checksum.c mysys/default.c mysys/default_modify.c mysys/hash.c mysys/mf_keycache.c mysys/mf_tempdir.c mysys/my_append.c mysys/my_compress.c mysys/my_conio.c mysys/my_copy.c mysys/my_getwd.c mysys/my_pread.c mysys/my_quick.c mysys/my_read.c mysys/safemalloc.c mysys/string.c server-tools/instance-manager/buffer.cc server-tools/instance-manager/instance.cc server-tools/instance-manager/options.cc server-tools/instance-manager/parse.h sql-common/client.c sql-common/my_user.c sql/event_data_objects.cc sql/event_parse_data.cc sql/events.cc sql/gen_lex_hash.cc sql/item.h sql/item_func.cc sql/item_strfunc.cc sql/item_timefunc.cc sql/lock.cc sql/log_event.cc sql/log_event.h sql/log_event_old.cc sql/net_serv.cc sql/sp_head.h sql/spatial.h sql/sql_class.h sql/sql_connect.cc sql/sql_crypt.cc sql/sql_error.cc sql/sql_insert.cc sql/sql_lex.cc sql/sql_lex.h sql/sql_load.cc sql/sql_prepare.cc sql/sql_profile.cc sql/sql_repl.cc sql/sql_servers.cc sql/sql_string.cc sql/sql_table.cc sql/sql_trigger.cc sql/sql_udf.cc sql/sql_view.cc sql/udf_example.c sql/uniques.cc storage/archive/azio.c storage/archive/azlib.h storage/csv/ha_tina.cc storage/csv/ha_tina.h storage/csv/transparent_file.h storage/federated/ha_federated.cc storage/federated/ha_federated.h storage/heap/hp_write.c storage/innobase/handler/ha_innodb.cc storage/innobase/include/pars0pars.h storage/myisam/ha_myisam.cc storage/myisam/mi_check.c storage/myisam/mi_packrec.c storage/myisam/mi_search.c storage/myisam/rt_index.c storage/myisammrg/ha_myisammrg.cc strings/ctype.c strings/my_vsnprintf.c tests/bug25714.c tests/mysql_client_test.c ------------------------------------------------------------------------ r4749 | vasil | 2009-04-18 00:58:08 +0300 (Sat, 18 Apr 2009) | 4 lines branches/zip: Add ChangeLog entry for t4748. ------------------------------------------------------------------------ r4751 | vasil | 2009-04-18 01:29:16 +0300 (Sat, 18 Apr 2009) | 4 lines branches/zip: Silence warning about unused variables. ------------------------------------------------------------------------ r4752 | vasil | 2009-04-18 01:30:37 +0300 (Sat, 18 Apr 2009) | 4 lines branches/zip: Include the needed header for memset(). ------------------------------------------------------------------------ r4753 | vasil | 2009-04-18 01:31:34 +0300 (Sat, 18 Apr 2009) | 4 lines branches/zip: Silence a compiler warning. ------------------------------------------------------------------------ r4756 | vasil | 2009-04-18 02:19:03 +0300 (Sat, 18 Apr 2009) | 5 lines branches/zip: Rename the aux config program and give it a more specific name because more are coming. ------------------------------------------------------------------------ r4757 | vasil | 2009-04-18 02:22:33 +0300 (Sat, 18 Apr 2009) | 4 lines branches/zip: Add comment and copyright notice to the aux config program. ------------------------------------------------------------------------ r4758 | vasil | 2009-04-18 02:40:47 +0300 (Sat, 18 Apr 2009) | 5 lines branches/zip: Add aux config programs to emulate the newly added checks in plug.in (from r4678). ------------------------------------------------------------------------ r4830 | marko | 2009-04-20 16:11:38 +0300 (Mon, 20 Apr 2009) | 6 lines branches/zip: Cosmetic fixes. row_unlock_for_mysql(): Add a const qualifier to read-only rec_t*. Use dict_index_is_clust(). CMakeLists.txt: svn propset svn:eol-style native. ------------------------------------------------------------------------ r4893 | marko | 2009-04-23 09:32:36 +0300 (Thu, 23 Apr 2009) | 11 lines branches/zip: Introduce the logical type names trx_id_t, roll_ptr_t, and undo_no_t. Each type is still defined as dulint. This is an initial step towards replacing dulint with a 64-bit data type. Because modern compilers have no trouble supporting 64-bit arithmetics even on 32-bit targets, the dulint struct is a relic that should go. The last remaining major use of dulint is dictionary IDs (table, index, and row ids). rb://114 approved by Sunny Bains ------------------------------------------------------------------------ r4894 | marko | 2009-04-23 10:21:07 +0300 (Thu, 23 Apr 2009) | 1 line branches/zip: ChangeLog: Document r4893. ------------------------------------------------------------------------ r4895 | marko | 2009-04-23 10:22:06 +0300 (Thu, 23 Apr 2009) | 1 line branches/zip: ChangeLog: Add the missing include/ to two files. ------------------------------------------------------------------------ r4896 | marko | 2009-04-23 10:37:40 +0300 (Thu, 23 Apr 2009) | 4 lines branches/zip: row_scan_and_check_index(): Improve the diagnostics, by reporting errors from row_search_for_mysql() in the error log. The errors will still be ignored by CHECK TABLE. This is somewhat related to Issue #211. ------------------------------------------------------------------------ r4897 | marko | 2009-04-23 10:40:34 +0300 (Thu, 23 Apr 2009) | 2 lines branches/zip: row_scan_and_check_index(): Check row_merge_is_index_usable() earlier, to make the logic clearer. ------------------------------------------------------------------------ r4898 | marko | 2009-04-23 15:15:07 +0300 (Thu, 23 Apr 2009) | 4 lines branches/zip: Correct a misleading comment.  PAGE_MAX_TRX_ID will be updated in ibuf_insert_low() and updated from the insert buffer tree page to the secondary index tree page during the insert buffer merge. ------------------------------------------------------------------------ r4915 | marko | 2009-04-27 13:40:20 +0300 (Mon, 27 Apr 2009) | 2 lines branches/zip: row_scan_and_check_index(): Add some comments on prebuilt->index_usable, as suggested by Michael. ------------------------------------------------------------------------ r4921 | marko | 2009-04-29 11:51:25 +0300 (Wed, 29 Apr 2009) | 2 lines branches/zip: btr_cur_optimistic_insert(): Remove a redundant condition. The insert buffer tree is a clustered index. ------------------------------------------------------------------------ r4922 | marko | 2009-04-29 23:23:27 +0300 (Wed, 29 Apr 2009) | 22 lines branches/zip: Distinguish temporary tables in MLOG_FILE_CREATE. This addresses Mantis Issue #23 in InnoDB Hot Backup and some of MySQL Bug #41609. In MLOG_FILE_CREATE, we need to distinguish temporary tables, so that InnoDB Hot Backup can work correctly.  It turns out that we can do this easily, by using a bit of the previously unused parameter for page number. (The page number parameter of MLOG_FILE_CREATE has been written as 0 ever since MySQL 4.1, which introduced MLOG_FILE_CREATE.) MLOG_FILE_FLAG_TEMP: A flag for indicating a temporary table in the page number parameter of MLOG_FILE_ operations. fil_op_write_log(): Add the parameter log_flags. fil_op_log_parse_or_replay(): Add the parameter log_flags. Do not replay MLOG_FILE_CREATE when MLOG_FILE_FLAG_TEMP is set in log_flags. This only affects ibbackup --apply-log.  InnoDB itself never replays file operations. rb://117 approved by Heikki Tuuri ------------------------------------------------------------------------ r4977 | marko | 2009-05-13 15:49:38 +0300 (Wed, 13 May 2009) | 12 lines branches/zip: Merge revisions 4746:4976 from branches/5.1: ------------------------------------------------------------------------ r4976 | marko | 2009-05-13 15:44:54 +0300 (Wed, 13 May 2009) | 6 lines branches/5.1: Display DB_ROLL_PTR in the COLUMNS section of the innodb_table_monitor output.  It was accidentally omitted due to an off-by-one loop condition.  (Bug #44320) rb://116 approved by Heikki Tuuri ------------------------------------------------------------------------ ------------------------------------------------------------------------ r4978 | vasil | 2009-05-13 16:21:55 +0300 (Wed, 13 May 2009) | 4 lines branches/zip: Add ChangeLog entry for r4977. ------------------------------------------------------------------------ r4995 | marko | 2009-05-14 15:31:43 +0300 (Thu, 14 May 2009) | 24 lines branches/zip: Merge revisions 4976:4994 from branches/5.1: ------------------------------------------------------------------------ r4994 | marko | 2009-05-14 15:04:55 +0300 (Thu, 14 May 2009) | 18 lines branches/5.1: Prevent a race condition in innobase_commit() by ensuring that innodb_commit_concurrency>0 remains constant at run time. (Bug #42101) srv_commit_concurrency: Make this a static variable in ha_innodb.cc. innobase_commit_concurrency_validate(): Check that innodb_commit_concurrency is not changed from or to 0 at run time.  This is needed, because innobase_commit() assumes that innodb_commit_concurrency>0 remains constant. Without this limitation, the checks for innodb_commit_concurrency>0 in innobase_commit() should be removed and that function would have to acquire and release commit_cond_m at least twice per invocation. Normally, innodb_commit_concurrency=0, and introducing the mutex operations would mean significant overhead. innodb_bug42101.test, innodb_bug42101-nonzero.test: Test cases. rb://123 approved by Heikki Tuuri ------------------------------------------------------------------------ ------------------------------------------------------------------------ r5000 | vasil | 2009-05-14 20:13:41 +0300 (Thu, 14 May 2009) | 4 lines branches/zip: Add ChangeLog entry for r4994. ------------------------------------------------------------------------ r5026 | marko | 2009-05-18 16:29:51 +0300 (Mon, 18 May 2009) | 1 line branches/zip: buf_validate(): Add missing out: comment. ------------------------------------------------------------------------ r5027 | marko | 2009-05-18 16:36:10 +0300 (Mon, 18 May 2009) | 1 line branches/zip: Add some missing out: comments to buf0buf.h, buf0buf.c. ------------------------------------------------------------------------ r5028 | marko | 2009-05-18 16:40:07 +0300 (Mon, 18 May 2009) | 11 lines branches/zip: When executing an optimistic update by delete-and-insert, correctly estimate the free space on the compressed page by page_zip_available(..., create=TRUE). This was reported as Issue #231. btr_cur_update_alloc_zip(): Add the parameter ibool create and pass it to page_zip_available(). The parameter was previously passed as 0. btr_cur_optimistic_update(): Pass create=TRUE to btr_cur_update_alloc_zip(). rb://120 approved by Heikki Tuuri ------------------------------------------------------------------------ r5030 | marko | 2009-05-19 10:04:04 +0300 (Tue, 19 May 2009) | 2 lines branches/zip: os_thread_get_curr_id(), os_thread_get_curr(): Add missing out: comments. ------------------------------------------------------------------------ r5031 | marko | 2009-05-19 10:30:02 +0300 (Tue, 19 May 2009) | 1 line branches/zip: Add missing out: comments to nullary functions. ------------------------------------------------------------------------ r5033 | marko | 2009-05-19 11:00:51 +0300 (Tue, 19 May 2009) | 1 line branches/zip: Remove bogus out: comments of functions returning void. ------------------------------------------------------------------------ r5034 | marko | 2009-05-19 12:41:32 +0300 (Tue, 19 May 2009) | 1 line branches/zip: row_update_prebuilt_trx(): Correct bogus comment. ------------------------------------------------------------------------ r5035 | marko | 2009-05-19 13:04:58 +0300 (Tue, 19 May 2009) | 3 lines branches/zip: ut0auxconf_have_solaris_atomics.c: Get the function declarations from <atomic.h>. Call the functions with proper arguments. ------------------------------------------------------------------------ r5036 | marko | 2009-05-19 13:05:50 +0300 (Tue, 19 May 2009) | 1 line branches/zip: Add proper comments to some file page accessors. ------------------------------------------------------------------------ r5037 | marko | 2009-05-19 13:08:16 +0300 (Tue, 19 May 2009) | 1 line branches/zip: Fix a typo that was introduced in r5036. ------------------------------------------------------------------------ r5038 | marko | 2009-05-19 22:59:07 +0300 (Tue, 19 May 2009) | 30 lines branches/zip: Write PAGE_MAX_TRX_ID to the redo log. Otherwise, transactions that are started before the rollback of incomplete transactions has finished may have an inconsistent view of the secondary indexes. dict_index_is_sec_or_ibuf(): Auxiliary function for controlling updates and checks of PAGE_MAX_TRX_ID: check whether an index is a secondary index or the insert buffer tree. page_set_max_trx_id(), page_update_max_trx_id(), lock_rec_insert_check_and_lock(), lock_sec_rec_modify_check_and_lock(), btr_cur_ins_lock_and_undo(), btr_cur_upd_lock_and_undo(): Add the parameter mtr. page_set_max_trx_id(): Allow mtr to be NULL.  When mtr==NULL, do not attempt to write to the redo log.  This only occurs when creating a page or reorganizing a compressed page.  In these cases, the PAGE_MAX_TRX_ID will be set correctly during the application of redo log records, even though there is no explicit log record about it. btr_discard_only_page_on_level(): Preserve PAGE_MAX_TRX_ID.  This function should be unreachable, though. btr_cur_pessimistic_update(): Update PAGE_MAX_TRX_ID. Add some assertions for checking that PAGE_MAX_TRX_ID is set on all secondary index leaf pages. rb://115 tested by Michael, fixes Issue #211 ------------------------------------------------------------------------ r5039 | marko | 2009-05-19 23:13:12 +0300 (Tue, 19 May 2009) | 1 line branches/zip: ib_wqueue_wait(): Add decorative comment. ------------------------------------------------------------------------ r5041 | marko | 2009-05-20 08:42:12 +0300 (Wed, 20 May 2009) | 1 line branches/zip: Add missing function comments. ------------------------------------------------------------------------ r5042 | marko | 2009-05-20 08:46:01 +0300 (Wed, 20 May 2009) | 1 line branches/zip: sync0rw.ic: Remove an extra ; that was added in r5041. ------------------------------------------------------------------------ r5044 | marko | 2009-05-20 11:11:58 +0300 (Wed, 20 May 2009) | 2 lines branches/zip: mlog_parse_index(): Correct a parameter comment and add a const qualifier that was missing. ------------------------------------------------------------------------ r5045 | marko | 2009-05-20 11:37:08 +0300 (Wed, 20 May 2009) | 1 line branches/zip: fil0fil.c: Correct some comments. ------------------------------------------------------------------------ r5046 | marko | 2009-05-20 12:19:40 +0300 (Wed, 20 May 2009) | 1 line branches/zip: Fix some function comments. ------------------------------------------------------------------------ r5047 | marko | 2009-05-20 12:26:49 +0300 (Wed, 20 May 2009) | 1 line branches/zip: ut_snprintf(): Fix the function comments. ------------------------------------------------------------------------ r5048 | marko | 2009-05-20 12:28:44 +0300 (Wed, 20 May 2009) | 3 lines branches/zip: inno_bcmp(): Remove this memcmp replacement. srv0start.c does not (any longer) call memcmp. srv_parse_megabytes(): Add a function comment. ------------------------------------------------------------------------ r5052 | marko | 2009-05-20 12:32:37 +0300 (Wed, 20 May 2009) | 1 line branches/zip: ib_vector_is_empty(): Fix the function comment. ------------------------------------------------------------------------ r5054 | marko | 2009-05-20 12:35:33 +0300 (Wed, 20 May 2009) | 1 line branches/zip: page_cur_lcg_prng(): Add missing parameter list. ------------------------------------------------------------------------ r5057 | marko | 2009-05-20 12:45:17 +0300 (Wed, 20 May 2009) | 1 line branches/zip: Remove bogus in: comments from struct members. ------------------------------------------------------------------------ r5058 | marko | 2009-05-20 13:06:03 +0300 (Wed, 20 May 2009) | 1 line branches/zip: Clean up some function comments. ------------------------------------------------------------------------ r5060 | marko | 2009-05-20 14:06:59 +0300 (Wed, 20 May 2009) | 1 line branches/zip: Clean up some comments. ------------------------------------------------------------------------ r5061 | marko | 2009-05-20 14:07:49 +0300 (Wed, 20 May 2009) | 2 lines branches/zip: innodb_export_status(): Remove the return(0), now that the function was declared void in r5060. ------------------------------------------------------------------------ r5062 | marko | 2009-05-20 14:45:03 +0300 (Wed, 20 May 2009) | 1 line branches/zip: ha_innodb.cc: Clean up some comments. ------------------------------------------------------------------------ r5063 | marko | 2009-05-20 16:10:17 +0300 (Wed, 20 May 2009) | 1 line branches/zip: ut_dulint_sort(): Write proper comments. ------------------------------------------------------------------------ r5064 | marko | 2009-05-20 16:17:26 +0300 (Wed, 20 May 2009) | 2 lines branches/zip: innobase_end(), innobase_flush_logs(): Document the function parameters. ------------------------------------------------------------------------ r5065 | marko | 2009-05-20 23:17:43 +0300 (Wed, 20 May 2009) | 1 line branches/zip: ha_innodb.cc: Add some missing function comments. ------------------------------------------------------------------------ r5066 | marko | 2009-05-21 00:51:23 +0300 (Thu, 21 May 2009) | 2 lines branches/zip: Fix some function comments. ------------------------------------------------------------------------ r5070 | vasil | 2009-05-21 08:27:00 +0300 (Thu, 21 May 2009) | 4 lines branches/zip: Whitespace fixup. ------------------------------------------------------------------------ "	509e761f06d6d7902bd5fdd0955447ed772af768
----------------------------
Attempt #2 to fix PB failures introduced by the patch for bug #44796. Since max_allowed_packet is a read-only variable in 5.1 and up, disable warnings to avoid unnecessary test case complication. 	1341ab23474f5eca9e26d68dffaea836c8030530
----------------------------
Fixed a PB failure introduced by the patch for bug #44796. Set max_allowed_packet to get a consistent error message. 	6077086cb48eade26068867d57219935bb49b692
----------------------------
Bug#43974 ndb_mgmd: SIGSEGV in TransporterRegistry::updateWritePtr() when restarting nodes - Open the connection to other mgm nodes after sendbuffer has been created. The other mgm nodes are not allowed to connect during configure anyway. 	a5160c223497dc106eefe55a3722b2fdc98984d8
----------------------------
mysql_upgrade ignored the --basedir and --datadir arguments as it has no use for them, but it did so silently. (Bug #36558) 	eb1261502c361df2ae60713785068d45c1689cb2
----------------------------
Bug#44749 ndb_config --xml: hostname as valid key and MaxNoOfOpenFiles need fix - Revert the previous change of HostName to UNDEFINED 	4121a08b2fa204ba224496064045d14113d4c7c3
----------------------------
Bug#44685 ndb_config --xml does not give all section variants - Mark also FileSystemPathDD and FileSystemPathUndeFiles as CHECK_WRITABLE 	b032f3bbf7c926c05a7a54a7bd36b2ce1c7b8fe9
----------------------------
"Bug#44685 ndb_config --xml does not give all section variants - Fix merge to 7.0 - ""false"" is not valid as Uint32 "	32b8bf6c71282981724755148b32a1f6234b48ab
----------------------------
"Bug#44685 ndb_config --xml does not give all section variants - part 3 - Add new attribute ""flags"" to the list of configuration parameters - print the check=""writable"" tag if parameter has CI_CHECK_WRITABLE flag set "	6dcb78a1711459e913f4f3d16a9a6e61472c239b
----------------------------
Bug#44685 ndb_config --xml does not give all section variants - fix part2, the [<section> DEFAULT] should not have any primary keys since it belongs to all nodes. 	2c3523956063d78d1c827c7d029270ef4a64e981
----------------------------
Bug #44685 ndb_config --xml does not give all section variants - part 2 - generate values also for [<section> DEFAULT] sections 	f3f69060b2dedd47ec65fbbf3ebe5e063345bcf9
----------------------------
BUG#44685 ndb_config --xml does not give all section variants - part 1 - add primarykeys tag 	99452e1a72d9a814a66e624ac692d1f82f3c470e
----------------------------
Bug#19027 MySQL 5.0 starts even with Fatal InnoDB errors Fix bug in mtr_cases.pm script visible only when InnoDB isn't configured. 	0b608e98bb190244136c109ea31762d672e634cd
----------------------------
ndb - bug#40709 Update a surprisingly large no of testcases that due to missing check in ha_ndbcluster run code which is not handled by ndb (and not supported) 	6ce93dfd541125b9d4925ac382b4d689904f1439
----------------------------
Fix for BUG#10206 - InnoDB: Transaction requiring Max_BinLog_Cache_size > 4GB always rollsback. The global variable max_binlog_cache_size cannot be set more than 4GB on 32 bit systems, limiting transactions of all storage engines to 4G of changes. The problem is max_binlog_cache_size is declared as ulong which is 4 bytes on 32 bit and 8 bytes on 64 bit machines. Fixed by using ulonglong for max_binlog_cache_size which is 8bytes on 32 and 64 bit machines.The range for max_binlog_cache_size on 32 bit and 64 bit systems is 4096-18446744073709547520 bytes. 	fe5121af677b6e1d7c5abc299e3506a323a197eb
----------------------------
ndb - bug#40709 Yet another fix, this time in ha_ndbcluster make sure that fields in partioning function are correctly marked using setPartitionKey(TRUE) 	800dfa0d3d1efb56bc5a6eee19d71b97da009dfe
----------------------------
"Bug#44866 dynamic ports no longer available in configuration - Moved the responsibilty of keeping the list of dynamic ports to ConfigManager, that way it can write the ports it now about to the config when a client asks for it. To avoid having to do that too many times the resulting ""packed config"" is now cached until the config is changed or a new dynamic port is set. - This also avoid the need to copy dynamic ports when config change, which means that BUG#44488 should be completely fixed now. "	cbcc264e5971542d992a3dc909c1026862a75389
----------------------------
Merge: 17c6fc2 d5fd4d4 Bugs #44871 and #43894: UNIX sockets need to be on a path shorter than 70 characters on some older platofrms. MTRv1 tries to fix this by moving the socket to the $TMPDIR, however this causes issues with certain tests on Windows. Fixed by not applying any hacks on Windows - Windows does not need them. 	1ae3d2ac68c7af9a431fee8177df13c319463544
----------------------------
Bugs #44871 and #43894: UNIX sockets need to be on a path shorter than 70 characters on some older platofrms. MTRv1 tries to fix this by moving the socket to the $TMPDIR, however this causes issues with certain tests on Windows. Fixed by not applying any hacks on Windows - Windows does not need them. 	d5fd4d4204ead23a3eed3c34df8684ef0c628b94
----------------------------
branches/zip: Merge revisions 4976:4994 from branches/5.1: ------------------------------------------------------------------------ r4994 | marko | 2009-05-14 15:04:55 +0300 (Thu, 14 May 2009) | 18 lines branches/5.1: Prevent a race condition in innobase_commit() by ensuring that innodb_commit_concurrency>0 remains constant at run time. (Bug #42101) srv_commit_concurrency: Make this a static variable in ha_innodb.cc. innobase_commit_concurrency_validate(): Check that innodb_commit_concurrency is not changed from or to 0 at run time.  This is needed, because innobase_commit() assumes that innodb_commit_concurrency>0 remains constant. Without this limitation, the checks for innodb_commit_concurrency>0 in innobase_commit() should be removed and that function would have to acquire and release commit_cond_m at least twice per invocation. Normally, innodb_commit_concurrency=0, and introducing the mutex operations would mean significant overhead. innodb_bug42101.test, innodb_bug42101-nonzero.test: Test cases. rb://123 approved by Heikki Tuuri ------------------------------------------------------------------------ 	bc48ebd87040add245124548d8ca16e8af92dfd9
----------------------------
branches/5.1: Prevent a race condition in innobase_commit() by ensuring that innodb_commit_concurrency>0 remains constant at run time. (Bug #42101) srv_commit_concurrency: Make this a static variable in ha_innodb.cc. innobase_commit_concurrency_validate(): Check that innodb_commit_concurrency is not changed from or to 0 at run time.  This is needed, because innobase_commit() assumes that innodb_commit_concurrency>0 remains constant. Without this limitation, the checks for innodb_commit_concurrency>0 in innobase_commit() should be removed and that function would have to acquire and release commit_cond_m at least twice per invocation. Normally, innodb_commit_concurrency=0, and introducing the mutex operations would mean significant overhead. innodb_bug42101.test, innodb_bug42101-nonzero.test: Test cases. rb://123 approved by Heikki Tuuri 	f1439b00db61fbef2b6a4f2aa59e41fb967b3f51
----------------------------
Bug#44488 ndb_mgmd is busy 4 min in startup (24 datanodes) - Part2, speed up diff of two configs by building a lookup table to be used when comparing the connections. This will avoid having to iterate the other config over and over again. 	d25f507a5a96f113cc2ad720697e740d643ccf41
----------------------------
"ndb_config - set category for event logger to ""ndb_config"" - decfine static functions same way as declaration "	415397cb91a4883d2f0bddf34b8371afcc73969e
----------------------------
Bug #44846  ndb_config should not read from my.cnf if specified config file can't be found - return from 'load_configuration' with NULL when no config loaded from config.ini 	e4f48b2fd6d67821897653ef24482f48804ac239
----------------------------
"Bug #44488  	ndb_mgmd is busy 4 min in startup (24 datanodes) - Part 1, expand the ConfigValues containter to aprox. right size before inserting the configuration into it. "	6d2a993c9fd4ccb0a200280a22640413644a72fd
----------------------------
Applying InnoDB snashot 5.1-ss5024,part 3. Fixes BUG#42101 BUG#42101 - Race condition in innodb_commit_concurrency Detailed revision comments: r4994 | marko | 2009-05-14 15:04:55 +0300 (Thu, 14 May 2009) | 18 lines branches/5.1: Prevent a race condition in innobase_commit() by ensuring that innodb_commit_concurrency>0 remains constant at run time. (Bug #42101) srv_commit_concurrency: Make this a static variable in ha_innodb.cc. innobase_commit_concurrency_validate(): Check that innodb_commit_concurrency is not changed from or to 0 at run time.  This is needed, because innobase_commit() assumes that innodb_commit_concurrency>0 remains constant. Without this limitation, the checks for innodb_commit_concurrency>0 in innobase_commit() should be removed and that function would have to acquire and release commit_cond_m at least twice per invocation. Normally, innodb_commit_concurrency=0, and introducing the mutex operations would mean significant overhead. innodb_bug42101.test, innodb_bug42101-nonzero.test: Test cases. rb://123 approved by Heikki Tuuri 	3ea0fd9d89da5498f82599d9dc6b84e79d7f9fe3
----------------------------
"Bug#44749 ndb_config --xml: hostname as valid key and MaxNoOfOpenFiles need fix - HostName in sections for [ndbd], [ndb_mgmd] and [mysqld] was marked as ""internal"", changed that to ""used"" so that they are now visible. Also set default value to undefined, ie. no default value. - MaxNoOfOpenFiles had illegal default value 0(outside min/max), changed to undefined, i.e no default value. "	4d4e707497d2523330aea69ef27db02c3c97e80f
----------------------------
Bug#43932 myisam index corruption with large index and large key_buffer_size. The cause of corruption was number overflow when multiplying two ulong values, number of used keycache blocks with size of a single block. The result of multiplication exceeded ulong range (4G) and this lead to incorrectly calculated  buffer offset in the key cache. The fix is to use size_t for multiplication result. This patch also fixes pointless cast in safemalloc (size of allocated block to uint), that creates lot of false alarm warnings when using big keycache (> 4GB) in debug mode. 	57b4295d2b7693dc15e047b6a5d0f6b86b612fa2
----------------------------
Bug #38694  Race condition in replication thread shutdown The issue of the current bug is unguarded access to mi->slave_running by the shutdown thread calling end_slave() that is bug#29968 (alas happened not to be cross-linked with the current bug) Fixed: with removing the unguarded read of the running status and perform reading it in terminate_slave_thread() at time run_lock is taken (mostly bug#29968 backporting, still with some improvements over that patch - see the error reporting from terminate_slave_thread()). Issue of bug#38716 is fixed here for 5.0 branch as well. Note: There has been a separate artifact identified - a race condition between init_slave() and  end_slave() - reported as  Bug#44467. 	e02d162f792c1df93c19b584bfc5f098fbbbfb5e
----------------------------
"Fix for BUG#43660- SHOW INDEXES/ANALYZE does NOT update cardinality for indexes of InnoDB table Fixes by replacing the PRNG that is used to pick random pages with a better one. Also adds a configuration option ""innodb_use_legacy_cardinality_algorithm"" to enable the fix only when the option is set. This patch is from http://bugs.mysql.com/file.php?id=11789 "	97ae03bf526a0cef7c76739b9a583a0f6209aa7f
----------------------------
"BUG#43949 Initialization of slave produces a warning message in Valgrind In order to define the --slave-load-tmpdir, the init_relay_log_file() was calling fn_format(MY_PACK_FILENAME) which internally was indirectly calling strmov_overlapp() (through pack_dirname) and the following warning message was being printed out while running in Valgrind: ""source and destination overlap in strcpy"". We fixed the issue by removing the flag MY_PACK_FILENAME as it was not necessary. In a nutshell, with this flag the function fn_format() tried to replace a directory by either ""~"", ""."" or "".."". However, we wanted exactly to remove such strings. In this patch, we also refactored the functions init_relay_log_file() and check_temp_dir(). The former was refactored to call the fn_format() with the flag MY_SAFE_PATH along with the MY_RETURN_REAL_PATH,  in order to avoid issues with long directories and return an absolute path, respectively. The flag MY_SAFE_UNPACK_FILENAME was removed too as it was responsible for removing ""~"", ""."" or "".."" only from the file parameter and we wanted to remove such strings from the directory parameter in the fn_format(). This result is stored in an rli variable, which is then processed by the other function in order to verify if the directory exists and if we are able to create files in it. "	8caf4bfc52eee69683423fa4b61e71cd6a1464d1
----------------------------
branches/zip: Add aux config programs to emulate the newly added checks in plug.in (from r4678). 	e6081cf14014a0a9eb3f034a10675d85c7dd7e4c
----------------------------
branches/zip: Add comment and copyright notice to the aux config program. 	25aea25a45b6648d0fcf73afdbc138a447faf17c
----------------------------
branches/zip: Rename the aux config program and give it a more specific name because more are coming. 	55501722620315d70edc666560d01d7983ab1539
----------------------------
branches/zip: Merge revisions 4710:4746 from branches/5.1: ------------------------------------------------------------------------ r4746 | vasil | 2009-04-18 00:32:08 +0300 (Sat, 18 Apr 2009) | 110 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/include/pars0pars.h branches/5.1: Merge a change from MySQL: ------------------------------------------------------------ revno: 2728.10.2 committer: Ignacio Galarza <iggy@mysql.com> branch nick: mysql-5.1-bugteam-bug29125 timestamp: Fri 2009-02-13 11:41:47 -0500 message: Bug#29125 Windows Server X64: so many compiler warnings - Remove bothersome warning messages.  This change focuses on the warnings that are covered by the ignore file: support-files/compiler_warnings.supp. - Strings are guaranteed to be max uint in length modified: client/mysql_upgrade.c client/mysqladmin.cc client/mysqlbinlog.cc client/mysqlcheck.c client/mysqldump.c client/mysqlslap.c client/mysqltest.cc client/sql_string.cc extra/comp_err.c extra/yassl/src/buffer.cpp extra/yassl/taocrypt/include/block.hpp extra/yassl/taocrypt/src/algebra.cpp extra/yassl/taocrypt/src/asn.cpp include/config-win.h libmysql/libmysql.c mysys/array.c mysys/base64.c mysys/charset.c mysys/checksum.c mysys/default.c mysys/default_modify.c mysys/hash.c mysys/mf_keycache.c mysys/mf_tempdir.c mysys/my_append.c mysys/my_compress.c mysys/my_conio.c mysys/my_copy.c mysys/my_getwd.c mysys/my_pread.c mysys/my_quick.c mysys/my_read.c mysys/safemalloc.c mysys/string.c server-tools/instance-manager/buffer.cc server-tools/instance-manager/instance.cc server-tools/instance-manager/options.cc server-tools/instance-manager/parse.h sql-common/client.c sql-common/my_user.c sql/event_data_objects.cc sql/event_parse_data.cc sql/events.cc sql/gen_lex_hash.cc sql/item.h sql/item_func.cc sql/item_strfunc.cc sql/item_timefunc.cc sql/lock.cc sql/log_event.cc sql/log_event.h sql/log_event_old.cc sql/net_serv.cc sql/sp_head.h sql/spatial.h sql/sql_class.h sql/sql_connect.cc sql/sql_crypt.cc sql/sql_error.cc sql/sql_insert.cc sql/sql_lex.cc sql/sql_lex.h sql/sql_load.cc sql/sql_prepare.cc sql/sql_profile.cc sql/sql_repl.cc sql/sql_servers.cc sql/sql_string.cc sql/sql_table.cc sql/sql_trigger.cc sql/sql_udf.cc sql/sql_view.cc sql/udf_example.c sql/uniques.cc storage/archive/azio.c storage/archive/azlib.h storage/csv/ha_tina.cc storage/csv/ha_tina.h storage/csv/transparent_file.h storage/federated/ha_federated.cc storage/federated/ha_federated.h storage/heap/hp_write.c storage/innobase/handler/ha_innodb.cc storage/innobase/include/pars0pars.h storage/myisam/ha_myisam.cc storage/myisam/mi_check.c storage/myisam/mi_packrec.c storage/myisam/mi_search.c storage/myisam/rt_index.c storage/myisammrg/ha_myisammrg.cc strings/ctype.c strings/my_vsnprintf.c tests/bug25714.c tests/mysql_client_test.c 	06e8e00ed9da2f7dfdf721be17437631e7038aa9
----------------------------
branches/5.1: Merge a change from MySQL: ------------------------------------------------------------ revno: 2728.10.2 committer: Ignacio Galarza <iggy@mysql.com> branch nick: mysql-5.1-bugteam-bug29125 timestamp: Fri 2009-02-13 11:41:47 -0500 message: Bug#29125 Windows Server X64: so many compiler warnings - Remove bothersome warning messages.  This change focuses on the warnings that are covered by the ignore file: support-files/compiler_warnings.supp. - Strings are guaranteed to be max uint in length modified: client/mysql_upgrade.c client/mysqladmin.cc client/mysqlbinlog.cc client/mysqlcheck.c client/mysqldump.c client/mysqlslap.c client/mysqltest.cc client/sql_string.cc extra/comp_err.c extra/yassl/src/buffer.cpp extra/yassl/taocrypt/include/block.hpp extra/yassl/taocrypt/src/algebra.cpp extra/yassl/taocrypt/src/asn.cpp include/config-win.h libmysql/libmysql.c mysys/array.c mysys/base64.c mysys/charset.c mysys/checksum.c mysys/default.c mysys/default_modify.c mysys/hash.c mysys/mf_keycache.c mysys/mf_tempdir.c mysys/my_append.c mysys/my_compress.c mysys/my_conio.c mysys/my_copy.c mysys/my_getwd.c mysys/my_pread.c mysys/my_quick.c mysys/my_read.c mysys/safemalloc.c mysys/string.c server-tools/instance-manager/buffer.cc server-tools/instance-manager/instance.cc server-tools/instance-manager/options.cc server-tools/instance-manager/parse.h sql-common/client.c sql-common/my_user.c sql/event_data_objects.cc sql/event_parse_data.cc sql/events.cc sql/gen_lex_hash.cc sql/item.h sql/item_func.cc sql/item_strfunc.cc sql/item_timefunc.cc sql/lock.cc sql/log_event.cc sql/log_event.h sql/log_event_old.cc sql/net_serv.cc sql/sp_head.h sql/spatial.h sql/sql_class.h sql/sql_connect.cc sql/sql_crypt.cc sql/sql_error.cc sql/sql_insert.cc sql/sql_lex.cc sql/sql_lex.h sql/sql_load.cc sql/sql_prepare.cc sql/sql_profile.cc sql/sql_repl.cc sql/sql_servers.cc sql/sql_string.cc sql/sql_table.cc sql/sql_trigger.cc sql/sql_udf.cc sql/sql_view.cc sql/udf_example.c sql/uniques.cc storage/archive/azio.c storage/archive/azlib.h storage/csv/ha_tina.cc storage/csv/ha_tina.h storage/csv/transparent_file.h storage/federated/ha_federated.cc storage/federated/ha_federated.h storage/heap/hp_write.c storage/innobase/handler/ha_innodb.cc storage/innobase/include/pars0pars.h storage/myisam/ha_myisam.cc storage/myisam/mi_check.c storage/myisam/mi_packrec.c storage/myisam/mi_search.c storage/myisam/rt_index.c storage/myisammrg/ha_myisammrg.cc strings/ctype.c strings/my_vsnprintf.c tests/bug25714.c tests/mysql_client_test.c 	1bf3bcbc997b2d09612d03ceaa4ece0dc22ba03e
----------------------------
ndb - fix compiler warnings - remove unimplemented ArrayPool::load causing vc++ to complain when instantiating - Use Uint64 variable for incrementin GlobalData.JobLap - Remove unecessary forward declaration of IPCConfig 	fccdec5d015ed40dcb0458d24dfda4ee1f0e762c
----------------------------
mtr --vs-config doesn't allow an option (reported as bug 44314 	5a4994c1cb46e8e54f5bc4306029e9fc4001be66
----------------------------
ndb - bug#44294 - part VI Don't simply exit() on config-check-ref But allow peer/own node to be in CS_INITIAL, and in these case instead just ignore it 	09dcc2a5fc3b026a5af8aed9f5f5c142c0d42637
----------------------------
ndb - bug#44294 - part IV Fix sending of ConfigCheckConf to use correct length 	5f25db5741c0c9e42ef9a01fb9a5a357307d6288
----------------------------
ndb - bug#44294 - part III Fix sending of ConfigCheckRef to use correct length 	bb9715aa8facd52cab5dd96e177702ca1b1f5ff2
----------------------------
"Applying InnoDB snashot 5.1-ss4699, part 3. Fixes BUG#43660 1) BUG#43660 - SHOW INDEXES/ANALYZE does NOT update cardinality for indexes of InnoDB table Detailed revision comments: r4699 | vasil | 2009-04-09 14:01:52 +0300 (Thu, 09 Apr 2009) | 15 lines branches/5.1: Fix Bug#43660 SHOW INDEXES/ANALYZE does NOT update cardinality for indexes of InnoDB table by replacing the PRNG that is used to pick random pages with a better one. This is based on r4670 but also adds a new configuration option and enables the fix only if this option is changed. Please skip the present revision when merging. Approved by:	Heikki (via email) "	3e90469f9523813820ae03736b51228a8a93407a
----------------------------
"Applying InnoDB snashot 5.1-ss4699, part 1. Fixes BUG#39320 and other problems 1) BUG#39320 - innodb crash in file btr/btr0pcur.c line 217 with innodb_locks_unsafe_for_binlog 2) Fixes bug in multi-table semi consistent reads. 3) Fixes email address from dev@innodb.com to innodb_dev_ww@oracle.com 4) Fixes warning message generated by main.innodb test Detailed revision comments: r4399 | marko | 2009-03-12 09:38:05 +0200 (Thu, 12 Mar 2009) | 5 lines branches/5.1: row_sel_get_clust_rec_for_mysql(): Store the cursor position also for unlock_row().  (Bug #39320) rb://96 approved by Heikki Tuuri. r4400 | marko | 2009-03-12 10:06:44 +0200 (Thu, 12 Mar 2009) | 8 lines branches/5.1: Fix a bug in multi-table semi-consistent reads. Remember the acquired record locks per table handle (row_prebuilt_t) rather than per transaction (trx_t), so that unlock_row should successfully unlock all non-matching rows in multi-table operations. This deficiency was found while investigating Bug #39320. rb://94 approved by Heikki Tuuri. r4481 | marko | 2009-03-19 15:01:48 +0200 (Thu, 19 Mar 2009) | 6 lines branches/5.1: row_unlock_for_mysql(): Do not unlock records that were modified by the current transaction.  This bug was introduced or unmasked in r4400. rb://97 approved by Heikki Tuuri r4573 | vasil | 2009-03-30 14:17:13 +0300 (Mon, 30 Mar 2009) | 4 lines branches/5.1: Fix email address from dev@innodb.com to innodb_dev_ww@oracle.com r4574 | vasil | 2009-03-30 14:27:08 +0300 (Mon, 30 Mar 2009) | 38 lines branches/5.1: Restore the state of INNODB_THREAD_CONCURRENCY to silence this warning: TEST                                      RESULT   TIME (ms) ------------------------------------------------------------ worker[1] Using MTR_BUILD_THREAD 250, with reserved ports 12500..12509 main.innodb                              [ pass ]   8803 MTR's internal check of the test case 'main.innodb' failed. This means that the test case does not preserve the state that existed before the test case was executed.  Most likely the test case did not do a proper clean-up. This is the diff of the states of the servers before and after the test case was executed: mysqltest: Logging to '/tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.log'. mysqltest: Results saved in '/tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.result'. mysqltest: Connecting to server localhost:12500 (socket /tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/mysqld.1.sock) as 'root', connection 'default', attempt 0 ... mysqltest: ... Connected. mysqltest: Start processing test commands from './include/check-testcase.test' ... mysqltest: ... Done processing test commands. --- /tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.result	2009-03-30 14:12:31.000000000 +0300 +++ /tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.reject	2009-03-30 14:12:41.000000000 +0300 @@ -99,7 +99,7 @@ INNODB_SUPPORT_XA	ON INNODB_SYNC_SPIN_LOOPS	20 INNODB_TABLE_LOCKS	ON -INNODB_THREAD_CONCURRENCY	8 +INNODB_THREAD_CONCURRENCY	16 INNODB_THREAD_SLEEP_DELAY	10000 INSERT_ID	0 INTERACTIVE_TIMEOUT	28800 mysqltest: Result content mismatch not ok r4576 | vasil | 2009-03-30 16:25:10 +0300 (Mon, 30 Mar 2009) | 4 lines branches/5.1: Revert a change to Makefile.am that I committed accidentally in c4574. "	df7f5472c9e153460c6fbdc46842b6b6b5995bcd
----------------------------
"branches/zip: Merge revisions 4481:4710 from branches/5.1: (resolving conflict in r4574, r4575 and skipping r4699 and r4705 because analogous changes to r4699 and r4705 were already made to branches/zip) ------------------------------------------------------------------------ r4573 | vasil | 2009-03-30 14:17:13 +0300 (Mon, 30 Mar 2009) | 4 lines Changed paths: M /branches/5.1/mysql-test/innodb.test branches/5.1: Fix email address from dev@innodb.com to innodb_dev_ww@oracle.com ------------------------------------------------------------------------ r4574 | vasil | 2009-03-30 14:27:08 +0300 (Mon, 30 Mar 2009) | 38 lines Changed paths: M /branches/5.1/Makefile.am M /branches/5.1/mysql-test/innodb.test branches/5.1: Restore the state of INNODB_THREAD_CONCURRENCY to silence this warning: TEST                                      RESULT   TIME (ms) ------------------------------------------------------------ worker[1] Using MTR_BUILD_THREAD 250, with reserved ports 12500..12509 main.innodb                              [ pass ]   8803 MTR's internal check of the test case 'main.innodb' failed. This means that the test case does not preserve the state that existed before the test case was executed.  Most likely the test case did not do a proper clean-up. This is the diff of the states of the servers before and after the test case was executed: mysqltest: Logging to '/tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.log'. mysqltest: Results saved in '/tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.result'. mysqltest: Connecting to server localhost:12500 (socket /tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/mysqld.1.sock) as 'root', connection 'default', attempt 0 ... mysqltest: ... Connected. mysqltest: Start processing test commands from './include/check-testcase.test' ... mysqltest: ... Done processing test commands. --- /tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.result	2009-03-30 14:12:31.000000000 +0300 +++ /tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.reject	2009-03-30 14:12:41.000000000 +0300 @@ -99,7 +99,7 @@ INNODB_SUPPORT_XA	ON INNODB_SYNC_SPIN_LOOPS	20 INNODB_TABLE_LOCKS	ON -INNODB_THREAD_CONCURRENCY	8 +INNODB_THREAD_CONCURRENCY	16 INNODB_THREAD_SLEEP_DELAY	10000 INSERT_ID	0 INTERACTIVE_TIMEOUT	28800 mysqltest: Result content mismatch not ok ------------------------------------------------------------------------ r4575 | vasil | 2009-03-30 15:55:31 +0300 (Mon, 30 Mar 2009) | 8 lines Changed paths: M /branches/5.1/mysql-test/innodb.result M /branches/5.1/mysql-test/innodb.test branches/5.1: Fix Bug#43309 Test main.innodb can't be run twice Make the innodb mysql-test more flexible by inspecting how much a variable of interest has changed since the start of the test. Do not assume the variables have zero values at the start of the test. ------------------------------------------------------------------------ r4576 | vasil | 2009-03-30 16:25:10 +0300 (Mon, 30 Mar 2009) | 4 lines Changed paths: M /branches/5.1/Makefile.am branches/5.1: Revert a change to Makefile.am that I committed accidentally in c4574. ------------------------------------------------------------------------ r4659 | vasil | 2009-04-06 15:34:51 +0300 (Mon, 06 Apr 2009) | 6 lines Changed paths: M /branches/5.1/mysql-test/innodb.test branches/5.1: Followup to r4575 and the fix of Bug#43309 Test main.innodb can't be run twice: Add an explanatory comment, as suggested by Patrick Crews in the bug report. ------------------------------------------------------------------------ r4699 | vasil | 2009-04-09 14:01:52 +0300 (Thu, 09 Apr 2009) | 15 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/include/srv0srv.h M /branches/5.1/page/page0cur.c M /branches/5.1/srv/srv0srv.c branches/5.1: Fix Bug#43660 SHOW INDEXES/ANALYZE does NOT update cardinality for indexes of InnoDB table by replacing the PRNG that is used to pick random pages with a better one. This is based on r4670 but also adds a new configuration option and enables the fix only if this option is changed. Please skip the present revision when merging. Approved by:	Heikki (via email) ------------------------------------------------------------------------ r4705 | vasil | 2009-04-14 14:30:13 +0300 (Tue, 14 Apr 2009) | 5 lines Changed paths: M /branches/5.1/page/page0cur.c branches/5.1: When using the random function, first take the modulus by the number of pages and then typecast to ulint. ------------------------------------------------------------------------ r4710 | vasil | 2009-04-15 11:55:18 +0300 (Wed, 15 Apr 2009) | 25 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: Merge a change from MySQL (looks like this is against 5.0 but they later merged it to 5.1): ------------------------------------------------------------ revno: 1810.3846.1 committer: Alexey Botchkov <holyfoot@mysql.com> branch nick: 31435 timestamp: Tue 2008-11-11 14:42:32 +0400 message: Bug#31435 ha_innodb.cc:3983: ulint convert_search_mode_to_innobase(ha_rkey_function): Asse I think we don't need to issue an error statement in the convert_search_mode_to_innobase(). Returning the PAGE_CUR_UNSUPP value is enough as allows to handle this case depending on the requirements. per-file comments: sql/ha_innodb.cc Bug#31435 ha_innodb.cc:3983: ulint convert_search_mode_to_innobase(ha_rkey_function): Asse no error issued in convert_search_mode_to_innobase. ha_innobase::records_in_range() returns HA_POS_ERROR if search mode isn't supported. modified: sql/ha_innodb.cc ------------------------------------------------------------------------ "	4f3c09517dc1d6c445ab3f883dbee4e0c100b82e
----------------------------
Merge: 7628ca3 050a0b9 Merge some merge changesets from 5.0 up into 5.1-build (code changes have already been merged separately). Use this occasion to fix the branch name in the configuration file. 	bb092109e103c73924dff3ae4a98afbd25c65fa2
----------------------------
"branches/5.1: Fix Bug#43660 SHOW INDEXES/ANALYZE does NOT update cardinality for indexes of InnoDB table by replacing the PRNG that is used to pick random pages with a better one. This is based on r4670 but also adds a new configuration option and enables the fix only if this option is changed. Please skip the present revision when merging. Approved by:	Heikki (via email) "	fc7d1cf0339c7aff1b6c8d1340e6b79f96d1f153
----------------------------
Bug#38848 myisam_use_mmap causes widespread myisam corruption on windows Currently the memory map is being created with a size that is greater than the size of the underlying datafile. This can cause varying behaviour, e.g. In windows the size of the datafile is increased, while on linux it remains the same. This fix removes the increment margin to the size that is used while creating the memory map. 	9b1076b4717e470c6b9391441a1016b402053541
----------------------------
branches/innodb+: Merge revisions 4657:4660 from branches/zip: ------------------------------------------------------------------------ r4660 | marko | 2009-04-06 16:17:30 +0300 (Mon, 06 Apr 2009) | 7 lines branches/zip: Initialize innodb_change_buffering from the configuration file. So far, the parameter innodb_change_buffering was only settable by the SET GLOBAL command. Any change specified in the configuration file or on the mysqld command line was ignored. This was reported as Issue #217. rb://109 approved by Heikki Tuuri. ------------------------------------------------------------------------ 	688b511871afdc690362de7309f76a806fedea3b
----------------------------
branches/zip: Initialize innodb_change_buffering from the configuration file. So far, the parameter innodb_change_buffering was only settable by the SET GLOBAL command. Any change specified in the configuration file or on the mysqld command line was ignored. This was reported as Issue #217. rb://109 approved by Heikki Tuuri. 	e650b0533bf2b1f769f9cc67c2cee891f75c0d08
----------------------------
"Bug#43835: SHOW VARIABLES does not include 0 for slave_skip_errors We didn't expect ""error: no error"", although this is in fact a legitimate state (if something is erroneous on the master, but not on the slave, e.g. INSERT fails on master due to UNIQUE constraint which does not exist on slave). We now list the ignore for ""0: no error"" the same way as any other ignore; moreover, if no or an empty --slave-skip-errors is passed at start-up, we show ""OFF"" instead of empty list, as intended. (The code for that was there, but was only run for the empty- argument case, even if it subsequently tested for both conditions.) "	11f44544fcb9c8508c95b75dd4d3ef7ee254588a
----------------------------
branches/innodb+: Merge revisions 4528:4657 from branches/zip: ------------------------------------------------------------------------ r4530 | marko | 2009-03-24 14:02:29 +0200 (Tue, 24 Mar 2009) | 3 lines branches/zip: Remove references to UNIV_HOTBACKUP from files that are not used when building InnoDB Hot Backup.  Declare innobase_invalidate_query_cache() in ha_prototypes.h. ------------------------------------------------------------------------ r4531 | marko | 2009-03-24 15:46:12 +0200 (Tue, 24 Mar 2009) | 7 lines branches/zip: Note that buf_page_t::list and buf_page_t::in_flush_list are only protected by buf_pool_mutex, not by the block mutex. buf_page_release(): Remove the assertion on in_flush_list. The function is only holding block->mutex, not buf_pool_mutex. This was reported by Sunny.  This was the only piece of code that accessed in_flush_list while not holding buf_pool_mutex. ------------------------------------------------------------------------ r4532 | calvin | 2009-03-24 17:59:45 +0200 (Tue, 24 Mar 2009) | 13 lines branches/zip: Mantis issue #201 - remove innodb_plugin_init() due to new option --ignore_builtin_innodb Starting 5.1.33, MySQL has a new option --ignore_builtin_innodb for using the dynamic plugin. It is required to remove innodb_plugin_init() in the plugin. This patch removes innodb_plugin_init() as well as functions, variables used by innodb_plugin_init(). rb://98 Approved by: Marko ------------------------------------------------------------------------ r4543 | inaam | 2009-03-25 19:18:33 +0200 (Wed, 25 Mar 2009) | 17 lines branches/zip SHOW ENGINE INNODB MUTEX shows all mutexes and rw_locks. This can be overwhelming particularly when the buffer pool is very large (note that each block in buffer pool has at least one mutex, one rw_lock and an additional mutex if rw_lock does not use atomics). With this patch status of following mutexes and rw-locks is not shown: 1) block->mutex 2) block->lock 3) block->lock->mutex (if applicable) 4) All other mutexes and rw-locks for which number of os-waits are zero Addresses issue# 179 rb://99 Approved by: Marko ------------------------------------------------------------------------ r4579 | marko | 2009-03-31 10:40:58 +0300 (Tue, 31 Mar 2009) | 3 lines branches/zip: struct read_view_struct: Add clarifying comments about low_limit_id and up_limit_id. ------------------------------------------------------------------------ r4630 | calvin | 2009-04-02 15:46:47 +0300 (Thu, 02 Apr 2009) | 6 lines branches/zip: Mantis issue #197 - Make srv_spin_wait_delay configurable New parameter innodb_spin_wait_delay to set the maximum delay between polling for a spin lock. 5 is the default. Approved by: Marko (on IM) ------------------------------------------------------------------------ r4631 | marko | 2009-04-02 16:23:12 +0300 (Thu, 02 Apr 2009) | 24 lines branches/zip: Refuse to use newly created indexes that may lack history.  This addresses Mantis issue #116. dict_index_t: Enable the storage of trx_id. row_prebuilt_t: Make many fields bit-fields to reduce the memory footprint. Add index_usable. ha_innobase::change_active_index(): Check if the index is usable and set prebuilt->index_usable accordingly. Unfortunately, the return status of this function is ignored by MySQL, and the actual refusal to use the index must be made in row_search_for_mysql(). row_search_for_mysql(): Return DB_MISSING_HISTORY if !prebuilt->index_usable. convert_error_code_to_mysql(): Map DB_MISSING_HISTORY to HA_ERR_TABLE_DEF_CHANGED. innodb-index.test: Add a test case where access to a newly created secondary index must be blocked for old transactions. rb://100 approved by Heikki Tuuri ------------------------------------------------------------------------ r4647 | vasil | 2009-04-06 10:05:25 +0300 (Mon, 06 Apr 2009) | 4 lines branches/zip: Add changelog entry for c4630. ------------------------------------------------------------------------ r4648 | vasil | 2009-04-06 10:07:26 +0300 (Mon, 06 Apr 2009) | 4 lines branches/zip: Fix formatting in ChangeLog to be consistent. ------------------------------------------------------------------------ r4657 | marko | 2009-04-06 15:13:45 +0300 (Mon, 06 Apr 2009) | 1 line branches/zip: Remove the bogus failure reported in Issue #219. ------------------------------------------------------------------------ 	6129c15f05386c607d5ff56c93faf240fec37b69
----------------------------
Bug#43236 : ndb_use_transactions is ignored in 6.4.3.  Testcases added to 6.3 + and fix added to 6.4 	2d298d194817ea14ee24585ce44fb57b1300561c
----------------------------
"BUG#39393 slave-skip-errors does not work when using ROW based replication RBR was not considering the option --slave-skip-errors. To fix the problem, we are reporting the ignored ERROR(s) as warnings thus avoiding stopping the SQL Thread. Besides, it fixes the output of ""SHOW VARIABLES LIKE 'slave_skip_errors'"" which was showing nothing when the value ""all"" was assigned to --slave-skip-errors. @sql/log_event.cc skipped rbr errors when the option skip-slave-errors is set. @sql/slave.cc fixed the output of for SHOW VARIABLES LIKE 'slave_skip_errors'"" @test-cases fixed the output of rpl.rpl_idempotency updated the test case rpl_skip_error "	1287d8c53a71c583508802a0fb98e92983fea9ed
----------------------------
Bug#43716: Test mysqlbinlog_row_big is failing, needs to be updated Altered the test to accommodate the new behavior of max_allowed_packet. Had to disconnect / reconnect the default connection for the new value to register. Re-enabled certain parts of the test that were commented out and added some setup / cleanup code to ensure proper reset of max_allowed_packet at the end of the test. Re-recorded the .result file to account for changes to the test. 	4fda8858b16ebb41262e8e4944e204ece83aaec9
----------------------------
branches/zip: Mantis issue #197 - Make srv_spin_wait_delay configurable New parameter innodb_spin_wait_delay to set the maximum delay between polling for a spin lock. 5 is the default. Approved by: Marko (on IM) 	dacfdf4a1dec4b3b9ef00b45c368a3e8b5198f9f
----------------------------
"ndb - testMgm now properly detects if mycnf is used and allows a different error message from ""reload config"" in that case. "	4ece68d07ad21cf86b3b59cd9615689050b2e533
----------------------------
testMgm - print latest error if get or set config fails 	9a16a739c26b049568c44821aeeb33a26a83e932
----------------------------
Merge: fb87fe8 94a7e11 Bug#34521, removed a bunch of deprecated options from template my.cnf files. Merged from 5.0 version of this patch: - Removed entire isamchk section. Support for ISAM tables was removed in 5.0. - Replaced key_buffer with key_buffer_size (correct spelling). - Removed skip-bdb, as BDB is no longer included in 5.0 and above. - Removed commented-out bdb_cache_size and bdb_max_lock for the same reason. - Removed commented-out innodb_log_arch_dir, deprecated in 5.0.24. - Removed myisam_max_extra_sort_file_size, deprecated in 5.0.6. - Removed log_long_format, deprecated in 4.1. - Replaced default_table_type with default-storage-engine. New in 5.1: - Replaced table_cache with table_open_cache. - Removed skip-federated, should have been in 5.0 only. - Replaced log_slow_queries with slow_query_log, deprecated in 5.1.29. 	b075f36280585fc6ab5b5223848cd6b6ba337c9c
----------------------------
Bug#34521, removed a bunch of deprecated options from template my.cnf files: - Removed entire isamchk section. Support for ISAM tables was removed in 5.0. - Replaced key_buffer with key_buffer_size (correct spelling). - Removed skip-bdb, as BDB is no longer included in 5.0 and above. - Removed commented-out bdb_cache_size and bdb_max_lock for the same reason. - Removed commented-out innodb_log_arch_dir, deprecated in 5.0.24. - Removed myisam_max_extra_sort_file_size, deprecated in 5.0.6. - Removed log_long_format, deprecated in 4.1. - Replaced default_table_type with default-storage-engine. 	94a7e115db8dab2efd0c9ee01b9a4f1eefd70016
----------------------------
"ndb - add_node*.test use default configs instead of ""add_node"" config decrease no of rows in test from 100k to 10k "	64f8ff1fb772d20c659cad940a6cdfc95035b1d1
----------------------------
"branches/5.1: Restore the state of INNODB_THREAD_CONCURRENCY to silence this warning: TEST                                      RESULT   TIME (ms) ------------------------------------------------------------ worker[1] Using MTR_BUILD_THREAD 250, with reserved ports 12500..12509 main.innodb                              [ pass ]   8803 MTR's internal check of the test case 'main.innodb' failed. This means that the test case does not preserve the state that existed before the test case was executed.  Most likely the test case did not do a proper clean-up. This is the diff of the states of the servers before and after the test case was executed: mysqltest: Logging to '/tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.log'. mysqltest: Results saved in '/tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.result'. mysqltest: Connecting to server localhost:12500 (socket /tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/mysqld.1.sock) as 'root', connection 'default', attempt 0 ... mysqltest: ... Connected. mysqltest: Start processing test commands from './include/check-testcase.test' ... mysqltest: ... Done processing test commands. --- /tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.result	2009-03-30 14:12:31.000000000 +0300 +++ /tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.reject	2009-03-30 14:12:41.000000000 +0300 @@ -99,7 +99,7 @@ INNODB_SUPPORT_XA	ON INNODB_SYNC_SPIN_LOOPS	20 INNODB_TABLE_LOCKS	ON -INNODB_THREAD_CONCURRENCY	8 +INNODB_THREAD_CONCURRENCY	16 INNODB_THREAD_SLEEP_DELAY	10000 INSERT_ID	0 INTERACTIVE_TIMEOUT	28800 mysqltest: Result content mismatch not ok "	97f920709b8db9fc2380dce6e00fe5b3f12e0a31
----------------------------
Increase testBlobs robustness testBlobs often fails when running against blobs-on-disk tables with timeout errors. This occurs as the deadlock detection timeout is fixed per-TC block, but reading/writing data to a heavily loaded disk subsystem can take a long time and trigger the timeout. Potential fixes : 1 Increase deadlock detection timeout for all hosts where ATRT is run 2 Make deadlock detection timeout configurable from API on per transaction or operation basis 3 Improve robustness of testBlobs TC, allowing bounded retries in case of timeouts. This patch takes approach 3.  Approach 2 should be considered in future. Additionally, the number of rows used for the testcase is reduced from 100 to 25, reflecting the 4-fold increase in testcases introduced by testing NdbRecAttr + NdbRecord APIs + Memory + Disk based Blobs.  This should reduce the runtime of the testBlobs testcases. 	3c2b764150ee234f0da933282cfd0b4b798b0869
----------------------------
ndbd - print generation of the configuration that was fetched from ndb_mgmd - Remove the need to save port and hostname of the connected ndb_mgmd in yet another place. 	9ed54fd39c793efcd5d8d8746e653d0468df5562
----------------------------
Bug#43641 ndb_mgm_get_configuration fails fetching config - Return better error message when refusing to return the configuration - Add 'ndb_mgm_get_configuration2 'so that mgmapi users can tell which nodetype they are - this is for internal use by ndb_mgmd and ndbd - no need to change applications. 	50e298d800327218bfae44af2edf53977d9f6b5b
----------------------------
Bug#43641 ndb_mgm_get_configuration fails fetching config - Detect upgrade from version that does not have ConfigManager. - Exclude ndb_mgmd nodes from previous version from config change protocol. 	2200dd96751860cce97d7aea3c3a79ebb94b6bac
----------------------------
"ndb  - use ""ndb_mgm_node_type"" type in ConfigRetriever "	37b06ebc3ebb7f3785642430c6d26f587ac36fa4
----------------------------
WL#4350 ndb_mgmd - consistent configuration - Move the function that returns a bitmask of nodes of a certain type from SignalSender to Config - Rewrite m_config_change_state so that a setter function must be used when changing the state. - Trigger rebuild of m_all_mgm when m_config_change_state is set back to IDLE 	4e2faedc746ae523711d5a8976e9a1ecb74f5d0e
----------------------------
"branches/innodb+: Merge revisions 4150:4528 from branches/zip: ------------------------------------------------------------------------ r4152 | marko | 2009-02-10 12:52:27 +0200 (Tue, 10 Feb 2009) | 12 lines branches/zip: When innodb_use_sys_malloc is set, ignore innodb_additional_mem_pool_size, because nothing will be allocated from mem_comm_pool. mem_pool_create(): Remove the assertion about size.  The function will work with any size.  However, an assertion would fail in ut_malloc_low() when size==0. mem_init(): When srv_use_sys_malloc is set, pass size=1 to mem_pool_create(). mem0mem.c: Add #include ""srv0srv.h"" that is needed by mem0dbg.c. ------------------------------------------------------------------------ r4153 | vasil | 2009-02-10 22:58:17 +0200 (Tue, 10 Feb 2009) | 14 lines branches/zip: (followup to r4145) Non-functional change: Change the os_atomic_increment() and os_compare_and_swap() functions to macros to avoid artificial limitations on the types of those functions' arguments. As a consequence typecasts from the source code can be removed. Also remove Google's copyright from os0sync.ic because that file no longer contains code from Google. Approved by:	Marko (rb://88), also ok from Inaam via IM ------------------------------------------------------------------------ r4163 | marko | 2009-02-12 00:14:19 +0200 (Thu, 12 Feb 2009) | 4 lines branches/zip: Make innodb_thread_concurrency=0 the default. The old default was 8. ------------------------------------------------------------------------ r4169 | calvin | 2009-02-12 10:37:10 +0200 (Thu, 12 Feb 2009) | 3 lines branches/zip: Adjust the result file of innodb_thread_concurrency_basic test. The default value of innodb_thread_concurrency is changed to 0 (from 8) via r4163. ------------------------------------------------------------------------ r4174 | vasil | 2009-02-12 17:38:27 +0200 (Thu, 12 Feb 2009) | 4 lines branches/zip: Fix pathname of the file to patch. ------------------------------------------------------------------------ r4176 | vasil | 2009-02-13 10:06:31 +0200 (Fri, 13 Feb 2009) | 7 lines branches/zip: Fix the failing mysql-test partition_innodb, which failed only if run after innodb_trx_weight (or other test that would leave LATEST DEADLOCK ERROR into the output of SHOW ENGINE INNODB STATUS). Find further explanation for the failure at the top of the added patch partition_innodb.diff. ------------------------------------------------------------------------ r4198 | vasil | 2009-02-17 09:06:07 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: Add the full text of the GPLv2 license into the root directory of the plugin. In previous releases this file was copied from an external source (https://svn.innodb.com/svn/plugin/trunk/support/COPYING) ""manually"" when creating the source and binary archives. It is less confusing to have this present in the root directory of the SVN branch. ------------------------------------------------------------------------ r4199 | vasil | 2009-02-17 09:11:58 +0200 (Tue, 17 Feb 2009) | 4 lines branches/zip: Add Google's license into COPYING.Google. ------------------------------------------------------------------------ r4200 | vasil | 2009-02-17 09:56:33 +0200 (Tue, 17 Feb 2009) | 11 lines branches/zip: To the files touched by the Google patch from c4144 (excluding include/os0sync.ic because later we removed Google code from that file): * Remove the Google license * Remove old Innobase copyright lines * Add a reference to the Google license and to the GPLv2 license at the top, as recommended by the lawyers at Oracle Legal. ------------------------------------------------------------------------ r4201 | vasil | 2009-02-17 10:12:02 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 1/28] ------------------------------------------------------------------------ r4202 | vasil | 2009-02-17 10:15:06 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 2/28] ------------------------------------------------------------------------ r4203 | vasil | 2009-02-17 10:25:45 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 3/28] ------------------------------------------------------------------------ r4204 | vasil | 2009-02-17 10:55:41 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 4/28] ------------------------------------------------------------------------ r4205 | vasil | 2009-02-17 10:59:22 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 5/28] ------------------------------------------------------------------------ r4206 | vasil | 2009-02-17 11:02:27 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 6/28] ------------------------------------------------------------------------ r4207 | vasil | 2009-02-17 11:04:28 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 7/28] ------------------------------------------------------------------------ r4208 | vasil | 2009-02-17 11:06:49 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 8/28] ------------------------------------------------------------------------ r4209 | vasil | 2009-02-17 11:10:18 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 9/28] ------------------------------------------------------------------------ r4210 | vasil | 2009-02-17 11:12:41 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 10/28] ------------------------------------------------------------------------ r4211 | vasil | 2009-02-17 11:14:40 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 11/28] ------------------------------------------------------------------------ r4212 | vasil | 2009-02-17 11:18:35 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 12/28] ------------------------------------------------------------------------ r4213 | vasil | 2009-02-17 11:24:40 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 13/28] ------------------------------------------------------------------------ r4214 | vasil | 2009-02-17 11:27:31 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 13/28] ------------------------------------------------------------------------ r4215 | vasil | 2009-02-17 11:29:55 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 15/28] ------------------------------------------------------------------------ r4216 | vasil | 2009-02-17 11:33:38 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 16/28] ------------------------------------------------------------------------ r4217 | vasil | 2009-02-17 11:36:44 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 17/28] ------------------------------------------------------------------------ r4218 | vasil | 2009-02-17 11:39:11 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 18/28] ------------------------------------------------------------------------ r4219 | vasil | 2009-02-17 11:41:24 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 19/28] ------------------------------------------------------------------------ r4220 | vasil | 2009-02-17 11:43:50 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 20/28] ------------------------------------------------------------------------ r4221 | vasil | 2009-02-17 11:46:52 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 21/28] ------------------------------------------------------------------------ r4222 | vasil | 2009-02-17 11:50:12 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 22/28] ------------------------------------------------------------------------ r4223 | vasil | 2009-02-17 11:53:58 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 23/28] ------------------------------------------------------------------------ r4224 | vasil | 2009-02-17 12:01:41 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 24/28] ------------------------------------------------------------------------ r4225 | vasil | 2009-02-17 12:05:45 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 25/28] ------------------------------------------------------------------------ r4226 | vasil | 2009-02-17 12:09:16 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 26/28] ------------------------------------------------------------------------ r4227 | vasil | 2009-02-17 12:12:56 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 27/28] ------------------------------------------------------------------------ r4228 | vasil | 2009-02-17 12:14:04 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 28/28] ------------------------------------------------------------------------ r4229 | vasil | 2009-02-17 12:30:55 +0200 (Tue, 17 Feb 2009) | 4 lines branches/zip: Add the copyright notice to the non C files. ------------------------------------------------------------------------ r4231 | marko | 2009-02-17 14:26:53 +0200 (Tue, 17 Feb 2009) | 12 lines Minor cleanup of the Google SMP patch. sync_array_object_signalled(): Add a (void) cast to eliminate a gcc warning about the return value of os_atomic_increment() being ignored. rw_lock_create_func(): Properly indent the preprocessor directives. rw_lock_x_lock_low(), rw_lock_x_lock_func_nowait(): Split lines correctly. rw_lock_set_writer_id_and_recursion_flag(): Silence a Valgrind warning. Do not mix statements and variable declarations. ------------------------------------------------------------------------ r4232 | marko | 2009-02-17 14:59:54 +0200 (Tue, 17 Feb 2009) | 3 lines branches/zip: When assigning lock->recursive = FALSE, also flag lock->writer_thread invalid, so that Valgrind will catch more errors. This is related to Issue #175. ------------------------------------------------------------------------ r4242 | marko | 2009-02-18 17:01:09 +0200 (Wed, 18 Feb 2009) | 2 lines branches/zip: UT_DBG_STOP: Use do{} while(0) to silence a g++-4.3.2 warning about a while(0); statement.  This should fix (part of) Issue #176. ------------------------------------------------------------------------ r4243 | marko | 2009-02-18 17:04:03 +0200 (Wed, 18 Feb 2009) | 3 lines branches/zip: buf_buddy_get_slot(): Fix a gcc 4.3.2 warning about an empty body of a ""for"" statement. This fixes part of Issue #176. ------------------------------------------------------------------------ r4244 | marko | 2009-02-18 17:25:45 +0200 (Wed, 18 Feb 2009) | 11 lines branches/zip: Protect ut_total_allocated_memory with ut_list_mutex. Unprotected updates to ut_total_allocated_memory in os_mem_alloc_large() and os_mem_free_large(), called during fast index creation, may corrupt the variable and cause assertion failures. Also, add UNIV_MEM_ALLOC() and UNIV_MEM_FREE() instrumentation around os_mem_alloc_large() and os_mem_free_large(), so that Valgrind can detect more errors. rb://90 approved by Heikki Tuuri.  This addresses Issue #177. ------------------------------------------------------------------------ r4248 | marko | 2009-02-19 11:52:39 +0200 (Thu, 19 Feb 2009) | 2 lines branches/zip: page_zip_set_size(): Fix a g++ 4.3.2 warning about an empty body in a ""for"" statement.  This closes Issue #176. ------------------------------------------------------------------------ r4251 | inaam | 2009-02-19 15:46:27 +0200 (Thu, 19 Feb 2009) | 8 lines branches/zip: Issue #178 rb://91 Change plug.in to have same CXXFLAGS as CFLAGS. This is to ensure that both .c and .cc files get compiled with same flags. To fix the issue where UNIV_LINUX was defined only in .c files. Approved by: Marko ------------------------------------------------------------------------ r4258 | vasil | 2009-02-20 11:52:19 +0200 (Fri, 20 Feb 2009) | 7 lines branches/zip: Cleanup in ChangeLog: * Wrap lines at 78 characters * Changed files are listed alphabetically * White-space cleanup ------------------------------------------------------------------------ r4259 | vasil | 2009-02-20 11:59:42 +0200 (Fri, 20 Feb 2009) | 6 lines branches/zip: ChangeLog: Remove include/os0sync.ic from the entry about the google patch, this file was modified later to not include Google's code. ------------------------------------------------------------------------ r4262 | vasil | 2009-02-20 14:56:59 +0200 (Fri, 20 Feb 2009) | 373 lines branches/zip: Merge revisions 4035:4261 from branches/5.1: ------------------------------------------------------------------------ r4065 | sunny | 2009-01-29 16:01:36 +0200 (Thu, 29 Jan 2009) | 8 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/mysql-test/innodb-autoinc.result M /branches/5.1/mysql-test/innodb-autoinc.test branches/5.1: In the last round of AUTOINC cleanup we assumed that AUTOINC is only defined for integer columns. This caused an assertion failure when we checked for the maximum value of a column type. We now calculate the max value for floating-point autoinc columns too. Fix Bug#42400 - InnoDB autoinc code can't handle floating-point columns rb://84 and Mantis issue://162 ------------------------------------------------------------------------ r4111 | sunny | 2009-02-03 22:06:52 +0200 (Tue, 03 Feb 2009) | 2 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: Add the ULL suffix otherwise there is an overflow. ------------------------------------------------------------------------ r4128 | vasil | 2009-02-08 21:36:45 +0200 (Sun, 08 Feb 2009) | 18 lines Changed paths: M /branches/5.1/mysql-test/innodb-autoinc.result M /branches/5.1/mysql-test/innodb-autoinc.test branches/5.1: Merge a change from MySQL: ------------------------------------------------------------ revno: 2709.20.31 committer: Timothy Smith <timothy.smith@sun.com> branch nick: 51 timestamp: Fri 2008-12-19 01:28:51 +0100 message: Disable part of innodb-autoinc.test, because the MySQL server asserts when compiled --with-debug, due to bug 39828, ""autoinc wraps around when offset and increment > 1"".  This change should be reverted when that bug is fixed (and a a few other minor changes to the test as described in comments). modified: mysql-test/r/innodb-autoinc.result mysql-test/t/innodb-autoinc.test ------------------------------------------------------------------------ r4129 | vasil | 2009-02-08 21:54:25 +0200 (Sun, 08 Feb 2009) | 310 lines Changed paths: M /branches/5.1/mysql-test/innodb-autoinc.test branches/5.1: Merge a change from MySQL: [looks like the changes to innodb-autoinc.test were made as part of the following huge merge, but we are merging only changes to that file] ------------------------------------------------------------ revno: 2546.47.1 committer: Luis Soares <luis.soares@sun.com> branch nick: 5.1-rpl timestamp: Fri 2009-01-23 13:22:05 +0100 message: merge: 5.1 -> 5.1-rpl conflicts: Text conflict in client/mysqltest.cc Text conflict in mysql-test/include/wait_until_connected_again.inc Text conflict in mysql-test/lib/mtr_report.pm Text conflict in mysql-test/mysql-test-run.pl Text conflict in mysql-test/r/events_bugs.result Text conflict in mysql-test/r/log_state.result Text conflict in mysql-test/r/myisam_data_pointer_size_func.result Text conflict in mysql-test/r/mysqlcheck.result Text conflict in mysql-test/r/query_cache.result Text conflict in mysql-test/r/status.result Text conflict in mysql-test/suite/binlog/r/binlog_index.result Text conflict in mysql-test/suite/binlog/r/binlog_innodb.result Text conflict in mysql-test/suite/rpl/r/rpl_packet.result Text conflict in mysql-test/suite/rpl/t/rpl_packet.test Text conflict in mysql-test/t/disabled.def Text conflict in mysql-test/t/events_bugs.test Text conflict in mysql-test/t/log_state.test Text conflict in mysql-test/t/myisam_data_pointer_size_func.test Text conflict in mysql-test/t/mysqlcheck.test Text conflict in mysql-test/t/query_cache.test Text conflict in mysql-test/t/rpl_init_slave_func.test Text conflict in mysql-test/t/status.test removed: mysql-test/suite/parts/r/partition_bit_ndb.result mysql-test/suite/parts/t/partition_bit_ndb.test mysql-test/suite/parts/t/partition_sessions.test mysql-test/suite/sys_vars/inc/tmp_table_size_basic.inc mysql-test/suite/sys_vars/r/tmp_table_size_basic_32.result mysql-test/suite/sys_vars/r/tmp_table_size_basic_64.result mysql-test/suite/sys_vars/t/tmp_table_size_basic_32.test mysql-test/suite/sys_vars/t/tmp_table_size_basic_64.test mysql-test/t/log_bin_trust_function_creators_func-master.opt mysql-test/t/rpl_init_slave_func-slave.opt added: mysql-test/include/check_events_off.inc mysql-test/include/cleanup_fake_relay_log.inc mysql-test/include/have_simple_parser.inc mysql-test/include/no_running_event_scheduler.inc mysql-test/include/no_running_events.inc mysql-test/include/running_event_scheduler.inc mysql-test/include/setup_fake_relay_log.inc mysql-test/include/wait_condition_sp.inc mysql-test/r/fulltext_plugin.result mysql-test/r/have_simple_parser.require mysql-test/r/innodb_bug38231.result mysql-test/r/innodb_bug39438.result mysql-test/r/innodb_mysql_rbk.result mysql-test/r/partition_innodb_semi_consistent.result mysql-test/r/query_cache_28249.result mysql-test/r/status2.result mysql-test/std_data/bug40482-bin.000001 mysql-test/suite/binlog/r/binlog_innodb_row.result mysql-test/suite/binlog/t/binlog_innodb_row.test mysql-test/suite/rpl/r/rpl_binlog_corruption.result mysql-test/suite/rpl/t/rpl_binlog_corruption-master.opt mysql-test/suite/rpl/t/rpl_binlog_corruption.test mysql-test/suite/sys_vars/r/tmp_table_size_basic.result mysql-test/suite/sys_vars/t/tmp_table_size_basic.test mysql-test/t/fulltext_plugin-master.opt mysql-test/t/fulltext_plugin.test mysql-test/t/innodb_bug38231.test mysql-test/t/innodb_bug39438-master.opt mysql-test/t/innodb_bug39438.test mysql-test/t/innodb_mysql_rbk-master.opt mysql-test/t/innodb_mysql_rbk.test mysql-test/t/partition_innodb_semi_consistent-master.opt mysql-test/t/partition_innodb_semi_consistent.test mysql-test/t/query_cache_28249.test mysql-test/t/status2.test renamed: mysql-test/suite/funcs_1/r/is_collation_character_set_applicability.result => mysql-test/suite/funcs_1/r/is_coll_char_set_appl.result mysql-test/suite/funcs_1/t/is_collation_character_set_applicability.test => mysql-test/suite/funcs_1/t/is_coll_char_set_appl.test modified: .bzr-mysql/default.conf CMakeLists.txt client/mysql.cc client/mysql_upgrade.c client/mysqlcheck.c client/mysqltest.cc configure.in extra/resolve_stack_dump.c extra/yassl/include/openssl/ssl.h include/config-win.h include/m_ctype.h include/my_global.h mysql-test/extra/binlog_tests/database.test mysql-test/extra/rpl_tests/rpl_auto_increment.test mysql-test/include/commit.inc mysql-test/include/have_32bit.inc mysql-test/include/have_64bit.inc mysql-test/include/index_merge1.inc mysql-test/include/linux_sys_vars.inc mysql-test/include/windows_sys_vars.inc mysql-test/lib/mtr_report.pm mysql-test/mysql-test-run.pl mysql-test/r/alter_table.result mysql-test/r/commit_1innodb.result mysql-test/r/create.result mysql-test/r/csv.result mysql-test/r/ctype_ucs.result mysql-test/r/date_formats.result mysql-test/r/events_bugs.result mysql-test/r/events_scheduling.result mysql-test/r/fulltext.result mysql-test/r/func_if.result mysql-test/r/func_in.result mysql-test/r/func_str.result mysql-test/r/func_time.result mysql-test/r/grant.result mysql-test/r/index_merge_myisam.result mysql-test/r/information_schema.result mysql-test/r/innodb-autoinc.result mysql-test/r/innodb.result mysql-test/r/innodb_mysql.result mysql-test/r/log_bin_trust_function_creators_func.result mysql-test/r/log_state.result mysql-test/r/myisampack.result mysql-test/r/mysql.result mysql-test/r/mysqlcheck.result mysql-test/r/partition_datatype.result mysql-test/r/partition_mgm.result mysql-test/r/partition_pruning.result mysql-test/r/query_cache.result mysql-test/r/read_buffer_size_basic.result mysql-test/r/read_rnd_buffer_size_basic.result mysql-test/r/rpl_init_slave_func.result mysql-test/r/select.result mysql-test/r/status.result mysql-test/r/strict.result mysql-test/r/temp_table.result mysql-test/r/type_bit.result mysql-test/r/type_date.result mysql-test/r/type_float.result mysql-test/r/warnings_engine_disabled.result mysql-test/r/xml.result mysql-test/suite/binlog/r/binlog_database.result mysql-test/suite/binlog/r/binlog_index.result mysql-test/suite/binlog/r/binlog_innodb.result mysql-test/suite/binlog/r/binlog_row_mix_innodb_myisam.result mysql-test/suite/binlog/t/binlog_innodb.test mysql-test/suite/funcs_1/r/is_columns_is.result mysql-test/suite/funcs_1/r/is_engines.result mysql-test/suite/funcs_1/r/storedproc.result mysql-test/suite/funcs_1/storedproc/param_check.inc mysql-test/suite/funcs_2/t/disabled.def mysql-test/suite/ndb/t/disabled.def mysql-test/suite/parts/r/partition_bit_innodb.result mysql-test/suite/parts/r/partition_bit_myisam.result mysql-test/suite/parts/r/partition_special_innodb.result mysql-test/suite/parts/t/disabled.def mysql-test/suite/parts/t/partition_special_innodb.test mysql-test/suite/parts/t/partition_value_innodb.test mysql-test/suite/parts/t/partition_value_myisam.test mysql-test/suite/parts/t/partition_value_ndb.test mysql-test/suite/rpl/r/rpl_auto_increment.result mysql-test/suite/rpl/r/rpl_packet.result mysql-test/suite/rpl/r/rpl_row_create_table.result mysql-test/suite/rpl/r/rpl_slave_skip.result mysql-test/suite/rpl/r/rpl_trigger.result mysql-test/suite/rpl/t/disabled.def mysql-test/suite/rpl/t/rpl_packet.test mysql-test/suite/rpl/t/rpl_row_create_table.test mysql-test/suite/rpl/t/rpl_slave_skip.test mysql-test/suite/rpl/t/rpl_trigger.test mysql-test/suite/rpl_ndb/t/disabled.def mysql-test/suite/sys_vars/inc/key_buffer_size_basic.inc mysql-test/suite/sys_vars/inc/sort_buffer_size_basic.inc mysql-test/suite/sys_vars/r/key_buffer_size_basic_32.result mysql-test/suite/sys_vars/r/key_buffer_size_basic_64.result mysql-test/suite/sys_vars/r/sort_buffer_size_basic_32.result mysql-test/suite/sys_vars/r/sort_buffer_size_basic_64.result mysql-test/t/alter_table.test mysql-test/t/create.test mysql-test/t/csv.test mysql-test/t/ctype_ucs.test mysql-test/t/date_formats.test mysql-test/t/disabled.def mysql-test/t/events_bugs.test mysql-test/t/events_scheduling.test mysql-test/t/fulltext.test mysql-test/t/func_if.test mysql-test/t/func_in.test mysql-test/t/func_str.test mysql-test/t/func_time.test mysql-test/t/grant.test mysql-test/t/information_schema.test mysql-test/t/innodb-autoinc.test mysql-test/t/innodb.test mysql-test/t/innodb_mysql.test mysql-test/t/log_bin_trust_function_creators_func.test mysql-test/t/log_state.test mysql-test/t/myisam_data_pointer_size_func.test mysql-test/t/myisampack.test mysql-test/t/mysql.test mysql-test/t/mysqlcheck.test mysql-test/t/partition_innodb_stmt.test mysql-test/t/partition_mgm.test mysql-test/t/partition_pruning.test mysql-test/t/query_cache.test mysql-test/t/rpl_init_slave_func.test mysql-test/t/select.test mysql-test/t/status.test mysql-test/t/strict.test mysql-test/t/temp_table.test mysql-test/t/type_bit.test mysql-test/t/type_date.test mysql-test/t/type_float.test mysql-test/t/warnings_engine_disabled.test mysql-test/t/xml.test mysys/my_getopt.c mysys/my_init.c scripts/mysql_install_db.sh sql-common/my_time.c sql/field.cc sql/field.h sql/filesort.cc sql/ha_partition.cc sql/ha_partition.h sql/item.cc sql/item_cmpfunc.cc sql/item_func.h sql/item_strfunc.cc sql/item_sum.cc sql/item_timefunc.cc sql/item_timefunc.h sql/log.cc sql/log.h sql/log_event.cc sql/log_event.h sql/mysql_priv.h sql/mysqld.cc sql/opt_range.cc sql/partition_info.cc sql/repl_failsafe.cc sql/rpl_constants.h sql/set_var.cc sql/slave.cc sql/spatial.h sql/sql_acl.cc sql/sql_base.cc sql/sql_binlog.cc sql/sql_class.h sql/sql_cursor.cc sql/sql_delete.cc sql/sql_lex.cc sql/sql_lex.h sql/sql_locale.cc sql/sql_parse.cc sql/sql_partition.cc sql/sql_plugin.cc sql/sql_plugin.h sql/sql_profile.cc sql/sql_repl.cc sql/sql_select.cc sql/sql_select.h sql/sql_show.cc sql/sql_table.cc sql/sql_trigger.cc sql/sql_trigger.h sql/table.cc sql/table.h sql/unireg.cc storage/csv/ha_tina.cc storage/federated/ha_federated.cc storage/heap/ha_heap.cc storage/innobase/Makefile.am storage/innobase/btr/btr0sea.c storage/innobase/buf/buf0lru.c storage/innobase/dict/dict0dict.c storage/innobase/dict/dict0mem.c storage/innobase/handler/ha_innodb.cc storage/innobase/handler/ha_innodb.h storage/innobase/include/btr0sea.h storage/innobase/include/dict0dict.h storage/innobase/include/dict0mem.h storage/innobase/include/ha_prototypes.h storage/innobase/include/lock0lock.h storage/innobase/include/row0mysql.h storage/innobase/include/sync0sync.ic storage/innobase/include/ut0ut.h storage/innobase/lock/lock0lock.c storage/innobase/os/os0file.c storage/innobase/plug.in storage/innobase/row/row0mysql.c storage/innobase/row/row0sel.c storage/innobase/srv/srv0srv.c storage/innobase/srv/srv0start.c storage/innobase/ut/ut0ut.c storage/myisam/ft_boolean_search.c strings/ctype.c strings/xml.c tests/mysql_client_test.c win/configure.js mysql-test/suite/funcs_1/t/is_coll_char_set_appl.test ------------------------------------------------------------------------ r4165 | calvin | 2009-02-12 01:34:27 +0200 (Thu, 12 Feb 2009) | 1 line Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: minor non-functional changes. ------------------------------------------------------------------------ ------------------------------------------------------------------------ r4263 | vasil | 2009-02-20 15:00:46 +0200 (Fri, 20 Feb 2009) | 4 lines branches/zip: Add a ChangeLog entry for a change in r4262. ------------------------------------------------------------------------ r4265 | marko | 2009-02-20 22:31:03 +0200 (Fri, 20 Feb 2009) | 5 lines branches/zip: Make innodb_use_sys_malloc=ON the default. Replace srv_use_sys_malloc with UNIV_LIKELY(srv_use_sys_malloc) to improve branch prediction in the default case. Approved by Ken over the IM. ------------------------------------------------------------------------ r4266 | vasil | 2009-02-20 23:29:32 +0200 (Fri, 20 Feb 2009) | 7 lines branches/zip: Add a sentence at the top of COPYING.Google to clarify that this license does not apply to the whole InnoDB. Suggested by:	Ken ------------------------------------------------------------------------ r4268 | marko | 2009-02-23 12:43:51 +0200 (Mon, 23 Feb 2009) | 9 lines branches/zip: Initialize ut_list_mutex at startup.  Without this fix, ut_list_mutex would be used uninitialized when innodb_use_sys_malloc=1. This fix addresses Issue #181. ut_mem_block_list_init(): Rename to ut_mem_init() and make public. ut_malloc_low(), ut_free_all_mem(): Add ut_a(ut_mem_block_list_inited). mem_init(): Call ut_mem_init(). ------------------------------------------------------------------------ r4269 | marko | 2009-02-23 15:09:49 +0200 (Mon, 23 Feb 2009) | 7 lines branches/zip: When freeing an uncompressed BLOB page, tolerate garbage in FIL_PAGE_TYPE.  (Bug #43043, Issue #182) btr_check_blob_fil_page_type(): New function. btr_free_externally_stored_field(), btr_copy_blob_prefix(): Call btr_check_blob_fil_page_type() to check FIL_PAGE_TYPE. ------------------------------------------------------------------------ r4272 | marko | 2009-02-23 23:10:18 +0200 (Mon, 23 Feb 2009) | 8 lines branches/zip: Adjust the fix of Issue #182 in r4269 per Inaam's suggestion. btr_check_blob_fil_page_type(): Replace the parameter const char* op with ibool read.  Do not print anything about page type mismatch when reading a BLOB page in Antelope format. Print space id before page number. ------------------------------------------------------------------------ r4273 | marko | 2009-02-24 00:11:11 +0200 (Tue, 24 Feb 2009) | 1 line branches/zip: ut_mem_init(): Add the assertion !ut_mem_block_list_inited. ------------------------------------------------------------------------ r4274 | marko | 2009-02-24 00:14:38 +0200 (Tue, 24 Feb 2009) | 12 lines branches/zip: Fix bugs in the fix of Issue #181.  Tested inside and outside Valgrind, with innodb_use_sys_malloc set to 0 and 1. mem_init(): Invoke ut_mem_init() before mem_pool_create(), because the latter one will invoke ut_malloc(). srv_general_init(): Do not initialize the memory subsystem (mem_init()). innobase_init(): Initialize the memory subsystem (mem_init()) before calling srv_parse_data_file_paths_and_sizes(), which needs ut_malloc(). Call ut_free_all_mem() in error handling to clean up after the mem_init(). ------------------------------------------------------------------------ r4280 | marko | 2009-02-24 15:14:59 +0200 (Tue, 24 Feb 2009) | 1 line branches/zip: Remove unused function os_mem_alloc_nocache(). ------------------------------------------------------------------------ r4281 | marko | 2009-02-24 16:02:48 +0200 (Tue, 24 Feb 2009) | 1 line branches/zip: Remove the unused function dict_index_get_type(). ------------------------------------------------------------------------ r4283 | marko | 2009-02-24 23:06:56 +0200 (Tue, 24 Feb 2009) | 1 line branches/zip: srv0start.c: Remove unnecessary #include ""mem0pool.h"". ------------------------------------------------------------------------ r4284 | marko | 2009-02-24 23:26:38 +0200 (Tue, 24 Feb 2009) | 1 line branches/zip: mem0mem.c: Remove unnecessary #include ""mach0data.h"". ------------------------------------------------------------------------ r4288 | vasil | 2009-02-25 10:48:07 +0200 (Wed, 25 Feb 2009) | 21 lines branches/zip: Merge revisions 4261:4287 from branches/5.1: ------------------------------------------------------------------------ r4287 | sunny | 2009-02-25 05:32:01 +0200 (Wed, 25 Feb 2009) | 10 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/mysql-test/innodb-autoinc.result M /branches/5.1/mysql-test/innodb-autoinc.test branches/5.1: Fix Bug#42714 AUTO_INCREMENT errors in 5.1.31. There are two changes to the autoinc handling. 1. To fix the immediate problem from the bug report, we must ensure that the value written to the table is always less than the max value stored in dict_table_t. 2. The second related change is that according to MySQL documentation when the offset is greater than the increment, we should ignore the offset. ------------------------------------------------------------------------ ------------------------------------------------------------------------ r4289 | vasil | 2009-02-25 10:53:51 +0200 (Wed, 25 Feb 2009) | 4 lines branches/zip: Add ChangeLog entry for the fix in r4288. ------------------------------------------------------------------------ r4290 | vasil | 2009-02-25 11:05:44 +0200 (Wed, 25 Feb 2009) | 11 lines branches/zip: Make ChangeLog entries for bugs in bugs.mysql.com in the form: Fix Bug#12345 bug title (for bugs after 1.0.2 was released and the ChangeLog published) There is no need to bloat the ChangeLog with information that is available via bugs.mysql.com. Discussed with:	Marko ------------------------------------------------------------------------ r4291 | vasil | 2009-02-25 11:08:32 +0200 (Wed, 25 Feb 2009) | 4 lines branches/zip: Fix Bug synopsis and remove explanation ------------------------------------------------------------------------ r4292 | marko | 2009-02-25 12:09:15 +0200 (Wed, 25 Feb 2009) | 25 lines branches/zip: Correct the initialization of the memory subsystem once again, to finally put Issue #181 to rest. Revert some parts of r4274.  It is best not to call ut_malloc() before srv_general_init(). mem_init(): Do not call ut_mem_init(). srv_general_init(): Initialize the memory subsystem in two phases: first ut_mem_init(), then mem_init().  This is because os_sync_init() and sync_init() depend on ut_mem_init() and mem_init() depends on os_sync_init() or sync_init(). srv_parse_data_file_paths_and_sizes(), srv_parse_log_group_home_dirs(): Remove the output parameters.  Assign to the global variables directly.  Allocate memory with malloc() instead of ut_malloc(), because these functions will be called before srv_general_init(). srv_free_paths_and_sizes(): New function, for cleaning up after srv_parse_data_file_paths_and_sizes() and srv_parse_log_group_home_dirs(). rb://92 approved by Sunny Bains ------------------------------------------------------------------------ r4297 | vasil | 2009-02-25 17:19:19 +0200 (Wed, 25 Feb 2009) | 4 lines branches/zip: White-space cleanup in the ChangeLog ------------------------------------------------------------------------ r4301 | vasil | 2009-02-25 21:33:32 +0200 (Wed, 25 Feb 2009) | 5 lines branches/zip: Do not output the commands that restore the environment because they depend on the state of the environment before the test starts executing. ------------------------------------------------------------------------ r4315 | vasil | 2009-02-26 09:21:20 +0200 (Thu, 26 Feb 2009) | 5 lines branches/zip: Apply any necessary patches to the mysql tree at the end of setup.sh This step was previously done manually (and sometimes forgotten). ------------------------------------------------------------------------ r4319 | marko | 2009-02-26 23:27:51 +0200 (Thu, 26 Feb 2009) | 6 lines branches/zip: btr_check_blob_fil_page_type(): Do not report FIL_PAGE_TYPE mismatch even when purging a BLOB. Heavy users may have large data files created with MySQL 5.0 or earlier, and they don not want to have the error log flooded with such messages. This fixes Issue #182. ------------------------------------------------------------------------ r4320 | inaam | 2009-02-27 02:13:19 +0200 (Fri, 27 Feb 2009) | 8 lines branches/zip This is to revert the changes made to the plug.in (r4251) as a fix for issue# 178. Changes to plug.in will not propogate to a plugin installation unless autotools are rerun which is unacceptable. A fix for issue# 178 will be committed in a separate commit. ------------------------------------------------------------------------ r4321 | inaam | 2009-02-27 02:16:46 +0200 (Fri, 27 Feb 2009) | 6 lines branches/zip This is a fix for issue#178. Instead of using UNIV_LINUX which is defined through CFLAGS we use compiler generated define __linux__ that is effective for both .c and .cc files. ------------------------------------------------------------------------ r4324 | vasil | 2009-02-27 13:27:18 +0200 (Fri, 27 Feb 2009) | 39 lines branches/zip: Add FreeBSD to the list of the operating systems that have sizeof(pthread_t) == sizeof(void*) (i.e. word size). On FreeBSD pthread_t is defined like: /usr/include/sys/_pthreadtypes.h: typedef struct  pthread                 *pthread_t; I did the following tests (per Inaam's recommendation): a) appropriate version of GCC is available on that platform (4.1.2 or higher for atomics to be available) On FreeBSD 6.x the default compiler is 3.4.6, on FreeBSD 7.x the default one is 4.2.1. One can always install the version of choice from the ports collection. If gcc 3.x is used then HAVE_GCC_ATOMIC_BUILTINS will not be defined and thus the change I am committing will make no difference. b) find out if sizeof(pthread_t) == sizeof(long) On 32 bit both are 4 bytes, on 64 bit both are 8 bytes. c) find out the compiler generated platform define (e.g.: __aix, __sunos__ etc.) The macro is __FreeBSD__. d) patch univ.i with the appropriate platform define e) build the mysql f) ensure it is using atomic builtins (look at the err.log message at system startup. It should say we are using atomics for both mutexes and rw-locks) g) do sanity testing (keeping in view the smp changes) I ran the mysql-test suite. All tests pass. ------------------------------------------------------------------------ r4353 | vasil | 2009-03-05 09:27:29 +0200 (Thu, 05 Mar 2009) | 6 lines branches/zip: As suggested by Ken, print a message that says that the Google SMP patch (GCC atomics) is disabled if it is. Also extend the message when the patch is partially enabled to make it clear that it is partially enabled. ------------------------------------------------------------------------ r4356 | vasil | 2009-03-05 13:49:51 +0200 (Thu, 05 Mar 2009) | 4 lines branches/zip: Fix typo made in r4353. ------------------------------------------------------------------------ r4357 | vasil | 2009-03-05 16:38:59 +0200 (Thu, 05 Mar 2009) | 23 lines branches/zip: Implement a check whether pthread_t objects can be used by GCC atomic builtin functions. This check is implemented in plug.in and defines the macro HAVE_ATOMIC_PTHREAD_T. This macro is checked in univ.i and the relevant part of the code enabled (the one that uses GCC atomics against pthread_t objects). In addition to this, the same program that is compiled as part of the plug.in check is added in ut/ut0auxconf.c. In the InnoDB Plugin source archives that are shipped to the users, a generated Makefile.in is added. That Makefile.in will be modified to compile ut/ut0auxconf.c and define the macro HAVE_ATOMIC_PTHREAD_T if the compilation succeeds. I.e. Makefile.in will emulate the work that is done by plug.in. This is done in order to make the check happen and HAVE_ATOMIC_PTHREAD_T eventually defined without regenerating MySQL's ./configure from ./storage/innobase/plug.in. The point is not to ask users to install the autotools and regenerate ./configure. rb://95 Approved by:	Marko ------------------------------------------------------------------------ r4360 | vasil | 2009-03-05 22:23:17 +0200 (Thu, 05 Mar 2009) | 21 lines branches/zip: Merge revisions 4287:4357 from branches/5.1: ------------------------------------------------------------------------ r4325 | sunny | 2009-03-02 02:28:52 +0200 (Mon, 02 Mar 2009) | 10 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/mysql-test/innodb-autoinc.result M /branches/5.1/mysql-test/innodb-autoinc.test branches/5.1: Bug#43203: Overflow from auto incrementing causes server segv It was not a SIGSEGV but an assertion failure. The assertion was checking the invariant that *first_value passed in by MySQL doesn't contain a value that is greater than the max value for that type. The assertion has been changed to a check and if the value is greater than the max we report a generic AUTOINC failure. rb://93 Approved by Heikki ------------------------------------------------------------------------ ------------------------------------------------------------------------ r4361 | vasil | 2009-03-05 22:27:54 +0200 (Thu, 05 Mar 2009) | 30 lines branches/zip: Merge revision 4358 from branches/5.1 (resolving a conflict): ------------------------------------------------------------------------ r4358 | vasil | 2009-03-05 21:21:10 +0200 (Thu, 05 Mar 2009) | 21 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: Merge a change from MySQL: ------------------------------------------------------------ revno: 2728.19.1 committer: Alfranio Correia <alfranio.correia@sun.com> branch nick: mysql-5.1-bugteam timestamp: Tue 2009-02-03 11:36:46 +0000 message: BUG#42445 Warning messages in innobase/handler/ha_innodb.cc There was a type casting problem in the storage/innobase/handler/ha_innodb.cc, (int ha_innobase::write_row(...)). Innobase uses has an internal error variable of type 'ulint' while mysql uses an 'int'. To fix the problem the function manipulates an error variable of type 'ulint' and only casts it into 'int' when needs to return the value. modified: storage/innobase/handler/ha_innodb.cc ------------------------------------------------------------------------ ------------------------------------------------------------------------ r4362 | vasil | 2009-03-05 22:29:07 +0200 (Thu, 05 Mar 2009) | 23 lines branches/zip: Merge revision 4359 from branches/5.1: ------------------------------------------------------------------------ r4359 | vasil | 2009-03-05 21:42:01 +0200 (Thu, 05 Mar 2009) | 14 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: Merge a change from MySQL: ------------------------------------------------------------ revno: 2747 committer: Timothy Smith <timothy.smith@sun.com> branch nick: 51 timestamp: Fri 2009-01-16 17:49:07 +0100 message: Add another cast to ignore int/ulong difference in error types, silence warning on Win64 modified: storage/innobase/handler/ha_innodb.cc ------------------------------------------------------------------------ ------------------------------------------------------------------------ r4363 | vasil | 2009-03-05 22:31:37 +0200 (Thu, 05 Mar 2009) | 4 lines branches/zip: Add ChangeLog entry for the bugfix in c4360. ------------------------------------------------------------------------ r4378 | calvin | 2009-03-09 10:10:17 +0200 (Mon, 09 Mar 2009) | 7 lines branches/zip: remove compile flag MYSQL_SERVER for dynamic plugin The dynamic plugin on Windows used to be built with MYSQL_SERVER compile flag, while it is not the case for other platforms. r3797 assumed MYSQL_SERVER was not defined for dynamic plugin, which introduced the engine crash during dropping a database. ------------------------------------------------------------------------ r4396 | marko | 2009-03-12 09:22:27 +0200 (Thu, 12 Mar 2009) | 3 lines branches/zip: btr_store_big_rec_extern_fields(): Initialize FIL_PAGE_TYPE in a separate redo log entry.  This will make ibbackup --apply-log debugging easier. ------------------------------------------------------------------------ r4397 | marko | 2009-03-12 09:26:11 +0200 (Thu, 12 Mar 2009) | 3 lines branches/zip: trx_sys_create_doublewrite_buf(): As the dummy change, initialize FIL_PAGE_TYPE.  This will make it easier to write the debug assertions for ibbackup --apply-log. ------------------------------------------------------------------------ r4401 | marko | 2009-03-12 10:26:40 +0200 (Thu, 12 Mar 2009) | 19 lines branches/zip: Merge revisions 4359:4400 from branches/5.1: ------------------------------------------------------------------------ r4399 | marko | 2009-03-12 09:38:05 +0200 (Thu, 12 Mar 2009) | 2 lines branches/5.1: row_sel_get_clust_rec_for_mysql(): Store the cursor position also for unlock_row().  (Bug #39320) ------------------------------------------------------------------------ r4400 | marko | 2009-03-12 10:06:44 +0200 (Thu, 12 Mar 2009) | 5 lines branches/5.1: Fix a bug in multi-table semi-consistent reads. Remember the acquired record locks per table handle (row_prebuilt_t) rather than per transaction (trx_t), so that unlock_row should successfully unlock all non-matching rows in multi-table operations. This deficiency was found while investigating Bug #39320. ------------------------------------------------------------------------ These were submitted as rb://94 and rb://96 and approved by Heikki Tuuri. ------------------------------------------------------------------------ r4455 | marko | 2009-03-16 11:43:34 +0200 (Mon, 16 Mar 2009) | 2 lines branches/zip: UT_LIST_VALIDATE(): Add the parameter ASSERTION and adjust all callers. ------------------------------------------------------------------------ r4456 | marko | 2009-03-16 12:59:25 +0200 (Mon, 16 Mar 2009) | 6 lines branches/zip: UT_LIST_VALIDATE(): Assert that the link is non-NULL before dereferencing it.  In this way, ut_list_node_313 will be pointing to the last non-NULL list item at the time of the assertion failure.  (gcc-4.3.2 -O3 seems to optimize the common subexpressions and make the variable NULL, though.) ------------------------------------------------------------------------ r4457 | marko | 2009-03-16 14:12:02 +0200 (Mon, 16 Mar 2009) | 2 lines branches/zip: sync_thread_add_level(): Make the assertions about level == SYNC_BUF_BLOCK more readable. ------------------------------------------------------------------------ r4461 | vasil | 2009-03-17 09:38:19 +0200 (Tue, 17 Mar 2009) | 6 lines branches/zip: Remove mysql-test/patches/bug32625.diff because that bug was fixed in the mysql repository (1 year and 4 months after sending them the simple patch!). See http://bugs.mysql.com/32625 ------------------------------------------------------------------------ r4465 | marko | 2009-03-17 12:34:19 +0200 (Tue, 17 Mar 2009) | 1 line branches/zip: buf0buddy.c: Add and adjust some debug assertions. ------------------------------------------------------------------------ r4473 | vasil | 2009-03-17 15:50:30 +0200 (Tue, 17 Mar 2009) | 5 lines branches/zip: Increment the InnoDB Plugin version from 1.0.3 to 1.0.4 now that 1.0.3 has been released. ------------------------------------------------------------------------ r4478 | vasil | 2009-03-18 11:53:53 +0200 (Wed, 18 Mar 2009) | 5 lines branches/zip: Remove mysql-test/patches/bug41893.diff because that bug has been fixed in the MySQL repository, see http://bugs.mysql.com/41893. ------------------------------------------------------------------------ r4479 | marko | 2009-03-18 12:43:54 +0200 (Wed, 18 Mar 2009) | 2 lines branches/zip: buf_LRU_block_remove_hashed_page(): Add some debug assertions. ------------------------------------------------------------------------ r4480 | marko | 2009-03-18 14:32:13 +0200 (Wed, 18 Mar 2009) | 1 line branches/zip: buf_buddy_free_low(): Correct the function comment. ------------------------------------------------------------------------ r4482 | marko | 2009-03-19 15:23:32 +0200 (Thu, 19 Mar 2009) | 12 lines branches/zip: Merge revisions 4400:4481 from branches/5.1: ------------------------------------------------------------------------ r4481 | marko | 2009-03-19 15:01:48 +0200 (Thu, 19 Mar 2009) | 6 lines branches/5.1: row_unlock_for_mysql(): Do not unlock records that were modified by the current transaction.  This bug was introduced or unmasked in r4400. rb://97 approved by Heikki Tuuri ------------------------------------------------------------------------ ------------------------------------------------------------------------ r4490 | marko | 2009-03-20 12:33:33 +0200 (Fri, 20 Mar 2009) | 4 lines branches/zip: Non-functional change for reducing dependencies in InnoDB Hot Backup: Replace srv_sys->dummy_ind1 and srv_sys->dummy_ind2 with dict_ind_redundant and dict_ind_compact, initialized in dict_init(). ------------------------------------------------------------------------ r4491 | marko | 2009-03-20 12:45:18 +0200 (Fri, 20 Mar 2009) | 2 lines branches/zip: Add const qualifiers or in/out comments to some function parameters in log0log. ------------------------------------------------------------------------ r4492 | marko | 2009-03-20 12:52:14 +0200 (Fri, 20 Mar 2009) | 5 lines branches/zip: page_validate(): Always report the space id and the name of the index. In Hot Backup, do not invoke comparison functions, as MySQL collations will be unavailable. ------------------------------------------------------------------------ r4493 | marko | 2009-03-20 13:24:06 +0200 (Fri, 20 Mar 2009) | 1 line branches/zip: Replace fil_get_space_for_id_low() with fil_space_get_by_id(). ------------------------------------------------------------------------ r4494 | marko | 2009-03-20 13:51:35 +0200 (Fri, 20 Mar 2009) | 3 lines branches/zip: fil0fil.c: Refer to fil_system directly, not via local vars. This eliminates some ""unused variable"" warnings when building InnoDB Hot Backup in such a way that all mutex operations are no-ops. ------------------------------------------------------------------------ r4495 | marko | 2009-03-20 14:15:52 +0200 (Fri, 20 Mar 2009) | 1 line branches/zip: innobase_get_at_most_n_mbchars(): Declare in ha_prototypes.h. ------------------------------------------------------------------------ r4496 | marko | 2009-03-20 14:48:26 +0200 (Fri, 20 Mar 2009) | 1 line branches/zip: recv_recover_page(): Remove compile-time constant parameters. ------------------------------------------------------------------------ r4497 | marko | 2009-03-20 14:56:19 +0200 (Fri, 20 Mar 2009) | 1 line branches/zip: recv_sys_init(): Remove a compile-time constant parameter. ------------------------------------------------------------------------ r4498 | marko | 2009-03-20 15:08:05 +0200 (Fri, 20 Mar 2009) | 4 lines branches/zip: Non-functional change: Add const qualifiers. log_block_checksum_is_ok_or_old_format(), recv_sys_add_to_parsing_buf(): The log block is read-only.  Make it const. ------------------------------------------------------------------------ r4499 | marko | 2009-03-20 15:10:25 +0200 (Fri, 20 Mar 2009) | 1 line branches/zip: recv_scan_log_recs(): Remove a compile-time constant parameter. ------------------------------------------------------------------------ r4500 | marko | 2009-03-20 15:47:17 +0200 (Fri, 20 Mar 2009) | 1 line branches/zip: fil_init(): Add the parameter hash_size. ------------------------------------------------------------------------ r4501 | vasil | 2009-03-20 16:50:41 +0200 (Fri, 20 Mar 2009) | 4 lines branches/zip: Add any entry about the release of 1.0.3 in the ChangeLog. ------------------------------------------------------------------------ r4515 | marko | 2009-03-23 10:49:53 +0200 (Mon, 23 Mar 2009) | 1 line branches/zip: hash_table_t: adaptive: Remove from UNIV_HOTBACKUP builds. ------------------------------------------------------------------------ r4516 | marko | 2009-03-23 10:57:16 +0200 (Mon, 23 Mar 2009) | 2 lines branches/zip: Define and use ASSERT_HASH_MUTEX_OWN. Make it a no-op in UNIV_HOTBACKUP builds. ------------------------------------------------------------------------ r4517 | marko | 2009-03-23 11:07:20 +0200 (Mon, 23 Mar 2009) | 2 lines branches/zip: Define and use PAGE_ZIP_MATCH. In UNIV_HOTBACKUP builds, assume fixed allocation. ------------------------------------------------------------------------ r4521 | marko | 2009-03-23 12:05:47 +0200 (Mon, 23 Mar 2009) | 1 line branches/zip: buf_page_print(): Clean up the code #ifdef UNIV_HOTBACKUP. ------------------------------------------------------------------------ r4522 | marko | 2009-03-23 12:20:50 +0200 (Mon, 23 Mar 2009) | 2 lines branches/zip: Exclude some operating system interface code from UNIV_HOTBACKUP builds. ------------------------------------------------------------------------ r4523 | marko | 2009-03-23 13:00:43 +0200 (Mon, 23 Mar 2009) | 2 lines branches/zip: Remove the remaining references to hash_table_t::adapive from UNIV_HOTBACKUP builds.  This should have been done in r4515. ------------------------------------------------------------------------ r4524 | marko | 2009-03-23 14:05:18 +0200 (Mon, 23 Mar 2009) | 2 lines branches/zip: Enclose recv_recovery_from_backup_on and recv_recovery_from_backup_is_on() in #ifdef UNIV_LOG_ARCHIVE. ------------------------------------------------------------------------ r4525 | marko | 2009-03-23 14:57:45 +0200 (Mon, 23 Mar 2009) | 2 lines branches/zip: recv_parse_or_apply_log_rec_body(): Add debug assertions ensuring that FIL_PAGE_TYPE makes sense when applying log records. ------------------------------------------------------------------------ r4526 | marko | 2009-03-23 16:21:34 +0200 (Mon, 23 Mar 2009) | 2 lines branches/zip: Remove unneeded definitions and dependencies from UNIV_HOTBACKUP builds. ------------------------------------------------------------------------ r4527 | calvin | 2009-03-23 23:15:33 +0200 (Mon, 23 Mar 2009) | 5 lines branches/zip: adjust build files on Windows Adjust the patch positions based on the latest MySQL source. Also add the patches to the .bat files for vs9. ------------------------------------------------------------------------ "	9bff459082105fb9d9ec4675d2913f5b3ee7e580
----------------------------
Fix for bug #42965: isinf() on 32bit x86 with gcc 4.3 can produce incorrect results for ROUND() Added a workaround and a configure check to test whether isinf() is affected by the GCC bug #39228. Since no code in MySQL server is currently affected by that bug, the patch is actually a safeguard for possible future code modifications. No test cases or changelog entries are needed. 	73cb9b6e04a110c3fd71f68bcf3bc0cbfcc4f326
----------------------------
"WL#4778 Make ndb_config print configuration parameters - Add support for printing the available config parameters using ndb_config - supported commands are ""ndb_config --configinfo"" and ""ndb_config --configinfo --xml"" "	b2b429f55eb1a535c169d26cee8e6dffa833b779
----------------------------
"Copy include/config.h to include/my_config.h at configure-time.  Also, continue to update it at make-time. One shouldn't need to run ""make"" on server source to get the stuff we say plugins should use. "	f30dda6ff1b14f8e342870bc336d0cf97f6832d7
----------------------------
Merge: 79909a2 efbaf94 Merge @@optimizer_switch no_xxx -> xxx=off change to 6.0 	108109b5d3e2758d08476c3cc0b4918236c5d0cc
----------------------------
Fixed test failures in 5.1/6.0 introduced by the patch for bug #41486. Session max_allowed_packet is read-only as of MySQL 5.1.31. In addition, the global variable now has no effect on the current session. 	a82402dd6fd603168d5c23c3d0d424b64fdfee9d
----------------------------
Bug #42861 Assigning invalid directories to --slave-load-tmpdir crashes the slave Compiling with debug and assigning an invalid directory to --slave-load-tmpdir was crashing the slave due to the following assertion DBUG_ASSERT(! is_set() || can_overwrite_status). This assertion assumes that a thread can change its state once (i.e. ok,error, etc) before aborting, cleaning/resuming or completing its execution unless the overwrite flag (i.e. can_overwrite_status) is true. The Append_block_log_event::do_apply_event which is responsible for creating temporary file(s) was not cleaning the thread state. Thus a failure while trying to create a file in an invalid temporary directory was causing the crash. To fix the problem we check if the temporary directory is valid before starting the SQL Thread and reset the thread state before creating a file in Append_block_log_event::do_apply_event. 	2f16f07054115d2f328ae1bce726da26d2858b30
----------------------------
Fix for bug#41486: extra character appears in BLOB for every ~40Mb after mysqldump/import When the input string exceeds the maximum allowed size for the internal buffer, batch_readline() returns a truncated string. Since there was no way for a caller to determine whether the string was truncated or not, the command line client assumed batch_readline() to always return the whole input string and appended a newline character. This resulted in garbled data when importing dumps containing strings longer than the maximum input buffer size. Fixed by adding a flag to the batch_readline() interface to signal a truncated string to the caller. Other minor problems fixed during patch implementation: - The maximum allowed buffer size for batch_readline() was set up depending on the client's max_allowed_packet value. It does not actully make any sense, as those variables are not related. The input buffer size limit is now always set to 1 MB. - fill_buffer() did not always set the EOF flag. - The input buffer could actually grow twice as the specified limit due to insufficient checks in intern_read_line(). 	a3e5737abdf3a555e06c9ae073b2d01efe251dd6
----------------------------
Bug#42857 Got error 4541 Indexbound has no bound information from NDBCLUSTER MySQLD calls NdbIndexScanOperation::setBound() with an empty ('open range') IndexBound with the query given. setBound() is modified to handle this by inserting an 'open range' bound which is actually a lower bound of LE NULL on the first column in the index. The example testcase is added to ndb_index_ordered. 	2557a27e5152931684ddda5b72acd9b897be76e9
----------------------------
"@@optimizer_switch switch from no_xxx to xxx={on|off} syntax: - Fix valgrind warning on attempt to run a ""SET optimizer_switch=number"" statement. Need to call c_ptr_safe() as strings returned by non-string items are not necessarily null-terminated. "	64603af1b912d86f855ad77fe191cf563998b646
----------------------------
Bug#36446: Attempt to set @@join_buffer_size to its minimum value produces spurious warning If a sys-var has a base and a block-size>1, and then a user-supplied value >= minimum ended up below minimum thanks to block-size alignment, we threw a warning. This meant for instance that when getting, then setting the minimum, we'd see a warning. This was needlessly confusing. (updated patch) 	611a09f596c5944a7bc5e846fede3ce9ce69d66d
----------------------------
Bug#39326: mysqld_safe doesn't use --basedir value in search of \ my_print_defaults Now use basedir to set an unset ledir and to find the location of my_print_defaults . 	e53a81335266c30604db7e30d638db57d17457b3
----------------------------
@@optimizer_switch backport and change from no_xxx to xx=on|off: post-review fixes 	c7e44fddfcc15b96e804180ff4cfe88df62856d6
----------------------------
Bug #43614: make distcheck failure (ndb/Makefile is made, but not subdirs of ndb) There are some recursive targets that automake generates which reference DIST_SUBDIRS.  It's critical, then, for such subdirs to exist even if they won't be built as part of SUBDIRS. During a VPATH build, it is the configure script which creates the subdirs (when it processes the AC_CONFIG_FILES() for each subdir's Makefile).  If autoconf doesn't create a subdir's Makefile, then the recursive make will fail when it is unable to cd into that subdir. This isn't a problem in non-VPATH builds, because the subdirs are all present in the source tarball.  So the problem only shows up during 'make distcheck', which does a VPATH build. The fix is to look, when configure is being created by autoconf, for any plugin subdirectories.  These are the dynamic subdirectories which need to be handled specially.  It's enough to tell autoconf to generate a Makefile for any Makefile.am found in the plugin directory - all plugin subdirectories using automake (i.e., listed in the plugin's DIST_SUBDIRS) will have a Makefile.am. This is done by calling 'find'.  This means that 'find' must be in the PATH on the host that is running autoconf.  'find' is NOT needed when calling configure, so it is not an additional dependency for the user. Finally, ha_ndbcluster.m4 had called AC_CONFIG_FILES() on all those subdir Makefiles, but only when the plugin was actually being built.  So it didn't work in the case that NDB was not being built.  All of those Makefiles have to be removed from this static list, since the plugin machinery is now adding them automatically.  autoconf fails if a file is duplicated in AC_CONFIG_FILES(). 	c14a43cd40012a41096fafe519a304adbab7e766
----------------------------
Bug#42610 Dynamic plugin broken in 5.1.31 --added ability to obtain plugin variables from my.cnf on INSTALL PLUGIN stage --option 'ignore-builtin-innodb' disables all InnoDB builtin plugins (including I_S plugins) 	390afdd16ee2a4aef2271bdf6f3b412d7d562ce7
----------------------------
Change optimizer_switch from no_xxx to xxx=on/xx=off. 	7877de39fdb745ea7daebf9e30b86b5354ba504f
----------------------------
Bug #43410 --skip-core-file has no effect if core file size is set Would not prevent mysqld from core dumping Passes --nocore arg to safe_process, which then sets rlimit core to 0 for child 	8179ed26494806a9cf0218b9d8d6bba0924d28ea
----------------------------
Bug#37934 Partition pruning doesn't work for all queries in DBT2 Modifications to 6.3 fix for 6.4 : 1) Make partition setting mechanisms more strict about setting partitionIds for natively partitioned tables 2) Add DISTR_KEY_RECORD variant to PartitionSpec structure 3) Add testing of 2) With this patch, ha_ndbcluster.cc only provides explicit partition ids for UserDefined partitioned tables. 	01252d766cfbb810faa63115e665e1d01044110b
----------------------------
Bug#37934 Partition pruning doesn't work for all queries in DBT2 Per-range partitioning information is added to the IndexBound API. Each bound can have individual partition specification. If all bounds in a Multi Range Read Scan have the same partitioning information then the MRR scan can be pruned to a single partition. This also applies to partitioning information determined internally by the NDBAPI - e.g. when NDBAPI determines that a range is bounded by a single value of the table's distribution keys.  If all ranges in an MRR scan are similarly bounded, the MRR scan will be automatically pruned. When UserDefined partitioning schemes are used, ha_ndbcluster.cc now passes explicit per-range partitioning information down to NDBAPI. storage/ndb/testPartitioning is extended to improve support for UserDefined partitioned tables and MRR scans where all range bounds are contained within a single table partition. This work also builds on some Blob part partitioning fixes made in Bug#34268. 	b251671735334dda3a176b66791a9e951cc0f43b
----------------------------
ndb test - The error message provoked by 'check_reload_config_invalid_config_filename' depends on wether ndb_mgmd was started with my.cnf or not - handle that. 	424efa4281b74b29e1c29fb2e855630b3b7bc0f0
----------------------------
Bug#43420 ndb_mgmd cores on in InitConfigFileParser::Context::reportWarning - Remove remnants of m_errrstream(which was left uninitialized) and use g_eventLogger everywhere 	f4900857b278b572de9e7eb242dffd2abd17013a
----------------------------
"BUG#22082 Slave hangs(holds mutex) on ""disk full"" When disk is full, server may waiting for free space while writing binlog, relay-log or MyISAM tables. The server will continue after user have freed some space. But the error message printed was not quite clear about the how often the error message is printed, and there will be a delay before the server continue and user freeing space. And caused users thinking that the server was hanging forever. This patch fixed the problem by making the error messages printed more clear. The error message is split into two part, the first part will only be printed once, and the second part will be printed very 10 times. Message first part: Disk is full writing '<filename>' (Errcode: <errorno>). Waiting for someone to free space... (Expect up to 60 secs delay for server to continue after freeing disk space) Message second part: Retry in 60 secs, Message reprinted in 600 secs "	e7605e338b0f2126cae6083a3f92f210f4ff2488
----------------------------
"branches/zip: Implement a check whether pthread_t objects can be used by GCC atomic builtin functions. This check is implemented in plug.in and defines the macro HAVE_ATOMIC_PTHREAD_T. This macro is checked in univ.i and the relevant part of the code enabled (the one that uses GCC atomics against pthread_t objects). In addition to this, the same program that is compiled as part of the plug.in check is added in ut/ut0auxconf.c. In the InnoDB Plugin source archives that are shipped to the users, a generated Makefile.in is added. That Makefile.in will be modified to compile ut/ut0auxconf.c and define the macro HAVE_ATOMIC_PTHREAD_T if the compilation succeeds. I.e. Makefile.in will emulate the work that is done by plug.in. This is done in order to make the check happen and HAVE_ATOMIC_PTHREAD_T eventually defined without regenerating MySQL's ./configure from ./storage/innobase/plug.in. The point is not to ask users to install the autotools and regenerate ./configure. rb://95 Approved by:	Marko "	3c9bec1100fce35efbc70adf62a80aceadfe46c9
----------------------------
"WL#4804 Make ndbd's angel portable - Remove _ownNodeId variable from ConfigRetriever, instead it need to be passed in when calling th only function('getConfig') that uses it. - Remove ""cruft"" "	3bbe18a82225c097507761d075c2c3cb25eec1a4
----------------------------
Bug #43172 MTR leaves test files in /tmp after check_socket_path_length finds path too long Faulty logic in cleanup Put test file into tmpdir, cleanup by removing tmpdir 	0f33682fa4dbd6f4378d1d537071208ec682f879
----------------------------
Bug#40178: Test main.completion_type_func does not clean up / needs to be rewritten Revised the test to include a test of completion_type = 1 as well as making the test more readable / worthwhile Removed the master.opt file as it was redundant / unnecessary. 	64c32d5a09833922e633804bb601e6313a71d90c
----------------------------
"Merge: 2515ce7 4f7608e Bug#42888 for MySQL 5.1. Add collections of test runs to make it both configurable and transparent what kinds of tests we run during integration testing. Implement filter list in mysql-test-run.pl to filter out failures of experimental test cases, using a new status code ""exp-fail"", so we can tell regressions (""fail"") from failures of test cases that are still in development (""exp-fail""). "	4943ffde540a142a551ef092f402edbcc8c8edbe
----------------------------
bug#42888: Add collections of test runs to make it both configurable and transparent what kinds of tests we run during integration testing. 	4f7608e759d3e2510fb0e984107b5ba7ea00554f
----------------------------
WL#4804 Make ndbd's angel portable - Move argument processing from Configuration.cpp to main.cpp - Remove unused member variables and function from Configuration 	cc6a4c58f47abc2ff6c19fd69bebb5937a25bf60
----------------------------
WL#4804 Make ndbd's angel portable - Remove unused member variable Configuration::_programName 	df75555d02f4a4742025363f4797957195c91602
----------------------------
loose in config to allow to run with config in embedded 	150ebb2971c694ef33c4657d24383ed7b19143d8
----------------------------
branches/zip: Fix bugs in the fix of Issue #181.  Tested inside and outside Valgrind, with innodb_use_sys_malloc set to 0 and 1. mem_init(): Invoke ut_mem_init() before mem_pool_create(), because the latter one will invoke ut_malloc(). srv_general_init(): Do not initialize the memory subsystem (mem_init()). innobase_init(): Initialize the memory subsystem (mem_init()) before calling srv_parse_data_file_paths_and_sizes(), which needs ut_malloc(). Call ut_free_all_mem() in error handling to clean up after the mem_init(). 	d25cf61788c818f6e46a6ed80f12e5df70e3ea57
----------------------------
- Backport @@optimizer_switch support from 6.0 - Add support for setting it as a server commandline argument - Add support for those switches: = no_index_merge = no_index_merge_union = no_index_merge_sort_union = no_index_merge_intersection 	e08a5318d522b557a906284600bd4434098d2b93
----------------------------
branches/zip: Initialize ut_list_mutex at startup.  Without this fix, ut_list_mutex would be used uninitialized when innodb_use_sys_malloc=1. This fix addresses Issue #181. ut_mem_block_list_init(): Rename to ut_mem_init() and make public. ut_malloc_low(), ut_free_all_mem(): Add ut_a(ut_mem_block_list_inited). mem_init(): Call ut_mem_init(). 	e2196c3419a3062e6f21eae36a78308a41f298c0
----------------------------
Bug#42543 ndb_mgmd can't handle configuration larger then 32k - Patch 2, send fragmented. - To overcome the 32k limit on configuration data, the signal need to be sent fragmented. i.e it's split up into chunks smaller than 32k and then reassembled on the other side. - Change both ConfigManager->ConfigManger and MgmtSrvr->ConfigManager to use fragmented signals 	501cfa0027bb1905c306e653ef5d619c26636411
----------------------------
"Bug#42543 ndb_mgmd can't handle configuration larger then 32k - Patch 1, error handling. - Don't continue configuration change protocol unless signal for ""prepare"" has been sent to all ndb_mgmd's - Print error message and exit if ndb_mgmd is starting up. - Send ConfigChangeRef to requestor if ndb_mgmd is running "	0bd5c74d28af90bb341c090ea630d652e8d963ed
----------------------------
"WL#4350 - ndb_mgm consistent configuration - Handle nodefailure signals in 'MgmtSrvr::change_config' - return error message ""Node x failed during configuration change"" "	a58aa85fd2660c71e9f88a03f16f9390194149e4
----------------------------
WL#4350 - ndb_mgm consistent configuration - Improve error mesage for node failure during config change 	36fe0acc332e07634875ba21b4dd38af484e49fe
----------------------------
WL#4350 - ndb_mgm consistent configuration - Improve the error message shown when configuration changed failed. 	4f82c11b95097781dd7a1bfb5b12144ea6e6b737
----------------------------
BUG#38174 secure-file-priv breaks LOAD DATA INFILE replication in statement mode If secure-file-priv was set on slave, it became unable to execute LOAD DATA INFILE statements sent from master using mixed or statement-based replication. This patch fixes the issue by ignoring this security restriction and checking if the files are created and read by the slave in the --slave-load-tmpdir while executing the SQL Thread. 	4447ce614feba0e9cd49515a91ccfaa84b640cc1
----------------------------
branches/zip: Make innodb_use_sys_malloc=ON the default. Replace srv_use_sys_malloc with UNIV_LIKELY(srv_use_sys_malloc) to improve branch prediction in the default case. Approved by Ken over the IM. 	e31baa849f311dea8a8cb3e2cd4f25e73abf63d3
----------------------------
making warnings test independent on config run... e.g. workaround for mtr running with cluster config in embedded 	bb18dfe2bb2098e80b77d563ccbff4022d2b7353
----------------------------
"branches/zip: Merge revisions 4035:4261 from branches/5.1: ------------------------------------------------------------------------ r4065 | sunny | 2009-01-29 16:01:36 +0200 (Thu, 29 Jan 2009) | 8 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/mysql-test/innodb-autoinc.result M /branches/5.1/mysql-test/innodb-autoinc.test branches/5.1: In the last round of AUTOINC cleanup we assumed that AUTOINC is only defined for integer columns. This caused an assertion failure when we checked for the maximum value of a column type. We now calculate the max value for floating-point autoinc columns too. Fix Bug#42400 - InnoDB autoinc code can't handle floating-point columns rb://84 and Mantis issue://162 ------------------------------------------------------------------------ r4111 | sunny | 2009-02-03 22:06:52 +0200 (Tue, 03 Feb 2009) | 2 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: Add the ULL suffix otherwise there is an overflow. ------------------------------------------------------------------------ r4128 | vasil | 2009-02-08 21:36:45 +0200 (Sun, 08 Feb 2009) | 18 lines Changed paths: M /branches/5.1/mysql-test/innodb-autoinc.result M /branches/5.1/mysql-test/innodb-autoinc.test branches/5.1: Merge a change from MySQL: ------------------------------------------------------------ revno: 2709.20.31 committer: Timothy Smith <timothy.smith@sun.com> branch nick: 51 timestamp: Fri 2008-12-19 01:28:51 +0100 message: Disable part of innodb-autoinc.test, because the MySQL server asserts when compiled --with-debug, due to bug 39828, ""autoinc wraps around when offset and increment > 1"".  This change should be reverted when that bug is fixed (and a a few other minor changes to the test as described in comments). modified: mysql-test/r/innodb-autoinc.result mysql-test/t/innodb-autoinc.test ------------------------------------------------------------------------ r4129 | vasil | 2009-02-08 21:54:25 +0200 (Sun, 08 Feb 2009) | 310 lines Changed paths: M /branches/5.1/mysql-test/innodb-autoinc.test branches/5.1: Merge a change from MySQL: [looks like the changes to innodb-autoinc.test were made as part of the following huge merge, but we are merging only changes to that file] ------------------------------------------------------------ revno: 2546.47.1 committer: Luis Soares <luis.soares@sun.com> branch nick: 5.1-rpl timestamp: Fri 2009-01-23 13:22:05 +0100 message: merge: 5.1 -> 5.1-rpl conflicts: Text conflict in client/mysqltest.cc Text conflict in mysql-test/include/wait_until_connected_again.inc Text conflict in mysql-test/lib/mtr_report.pm Text conflict in mysql-test/mysql-test-run.pl Text conflict in mysql-test/r/events_bugs.result Text conflict in mysql-test/r/log_state.result Text conflict in mysql-test/r/myisam_data_pointer_size_func.result Text conflict in mysql-test/r/mysqlcheck.result Text conflict in mysql-test/r/query_cache.result Text conflict in mysql-test/r/status.result Text conflict in mysql-test/suite/binlog/r/binlog_index.result Text conflict in mysql-test/suite/binlog/r/binlog_innodb.result Text conflict in mysql-test/suite/rpl/r/rpl_packet.result Text conflict in mysql-test/suite/rpl/t/rpl_packet.test Text conflict in mysql-test/t/disabled.def Text conflict in mysql-test/t/events_bugs.test Text conflict in mysql-test/t/log_state.test Text conflict in mysql-test/t/myisam_data_pointer_size_func.test Text conflict in mysql-test/t/mysqlcheck.test Text conflict in mysql-test/t/query_cache.test Text conflict in mysql-test/t/rpl_init_slave_func.test Text conflict in mysql-test/t/status.test removed: mysql-test/suite/parts/r/partition_bit_ndb.result mysql-test/suite/parts/t/partition_bit_ndb.test mysql-test/suite/parts/t/partition_sessions.test mysql-test/suite/sys_vars/inc/tmp_table_size_basic.inc mysql-test/suite/sys_vars/r/tmp_table_size_basic_32.result mysql-test/suite/sys_vars/r/tmp_table_size_basic_64.result mysql-test/suite/sys_vars/t/tmp_table_size_basic_32.test mysql-test/suite/sys_vars/t/tmp_table_size_basic_64.test mysql-test/t/log_bin_trust_function_creators_func-master.opt mysql-test/t/rpl_init_slave_func-slave.opt added: mysql-test/include/check_events_off.inc mysql-test/include/cleanup_fake_relay_log.inc mysql-test/include/have_simple_parser.inc mysql-test/include/no_running_event_scheduler.inc mysql-test/include/no_running_events.inc mysql-test/include/running_event_scheduler.inc mysql-test/include/setup_fake_relay_log.inc mysql-test/include/wait_condition_sp.inc mysql-test/r/fulltext_plugin.result mysql-test/r/have_simple_parser.require mysql-test/r/innodb_bug38231.result mysql-test/r/innodb_bug39438.result mysql-test/r/innodb_mysql_rbk.result mysql-test/r/partition_innodb_semi_consistent.result mysql-test/r/query_cache_28249.result mysql-test/r/status2.result mysql-test/std_data/bug40482-bin.000001 mysql-test/suite/binlog/r/binlog_innodb_row.result mysql-test/suite/binlog/t/binlog_innodb_row.test mysql-test/suite/rpl/r/rpl_binlog_corruption.result mysql-test/suite/rpl/t/rpl_binlog_corruption-master.opt mysql-test/suite/rpl/t/rpl_binlog_corruption.test mysql-test/suite/sys_vars/r/tmp_table_size_basic.result mysql-test/suite/sys_vars/t/tmp_table_size_basic.test mysql-test/t/fulltext_plugin-master.opt mysql-test/t/fulltext_plugin.test mysql-test/t/innodb_bug38231.test mysql-test/t/innodb_bug39438-master.opt mysql-test/t/innodb_bug39438.test mysql-test/t/innodb_mysql_rbk-master.opt mysql-test/t/innodb_mysql_rbk.test mysql-test/t/partition_innodb_semi_consistent-master.opt mysql-test/t/partition_innodb_semi_consistent.test mysql-test/t/query_cache_28249.test mysql-test/t/status2.test renamed: mysql-test/suite/funcs_1/r/is_collation_character_set_applicability.result => mysql-test/suite/funcs_1/r/is_coll_char_set_appl.result mysql-test/suite/funcs_1/t/is_collation_character_set_applicability.test => mysql-test/suite/funcs_1/t/is_coll_char_set_appl.test modified: .bzr-mysql/default.conf CMakeLists.txt client/mysql.cc client/mysql_upgrade.c client/mysqlcheck.c client/mysqltest.cc configure.in extra/resolve_stack_dump.c extra/yassl/include/openssl/ssl.h include/config-win.h include/m_ctype.h include/my_global.h mysql-test/extra/binlog_tests/database.test mysql-test/extra/rpl_tests/rpl_auto_increment.test mysql-test/include/commit.inc mysql-test/include/have_32bit.inc mysql-test/include/have_64bit.inc mysql-test/include/index_merge1.inc mysql-test/include/linux_sys_vars.inc mysql-test/include/windows_sys_vars.inc mysql-test/lib/mtr_report.pm mysql-test/mysql-test-run.pl mysql-test/r/alter_table.result mysql-test/r/commit_1innodb.result mysql-test/r/create.result mysql-test/r/csv.result mysql-test/r/ctype_ucs.result mysql-test/r/date_formats.result mysql-test/r/events_bugs.result mysql-test/r/events_scheduling.result mysql-test/r/fulltext.result mysql-test/r/func_if.result mysql-test/r/func_in.result mysql-test/r/func_str.result mysql-test/r/func_time.result mysql-test/r/grant.result mysql-test/r/index_merge_myisam.result mysql-test/r/information_schema.result mysql-test/r/innodb-autoinc.result mysql-test/r/innodb.result mysql-test/r/innodb_mysql.result mysql-test/r/log_bin_trust_function_creators_func.result mysql-test/r/log_state.result mysql-test/r/myisampack.result mysql-test/r/mysql.result mysql-test/r/mysqlcheck.result mysql-test/r/partition_datatype.result mysql-test/r/partition_mgm.result mysql-test/r/partition_pruning.result mysql-test/r/query_cache.result mysql-test/r/read_buffer_size_basic.result mysql-test/r/read_rnd_buffer_size_basic.result mysql-test/r/rpl_init_slave_func.result mysql-test/r/select.result mysql-test/r/status.result mysql-test/r/strict.result mysql-test/r/temp_table.result mysql-test/r/type_bit.result mysql-test/r/type_date.result mysql-test/r/type_float.result mysql-test/r/warnings_engine_disabled.result mysql-test/r/xml.result mysql-test/suite/binlog/r/binlog_database.result mysql-test/suite/binlog/r/binlog_index.result mysql-test/suite/binlog/r/binlog_innodb.result mysql-test/suite/binlog/r/binlog_row_mix_innodb_myisam.result mysql-test/suite/binlog/t/binlog_innodb.test mysql-test/suite/funcs_1/r/is_columns_is.result mysql-test/suite/funcs_1/r/is_engines.result mysql-test/suite/funcs_1/r/storedproc.result mysql-test/suite/funcs_1/storedproc/param_check.inc mysql-test/suite/funcs_2/t/disabled.def mysql-test/suite/ndb/t/disabled.def mysql-test/suite/parts/r/partition_bit_innodb.result mysql-test/suite/parts/r/partition_bit_myisam.result mysql-test/suite/parts/r/partition_special_innodb.result mysql-test/suite/parts/t/disabled.def mysql-test/suite/parts/t/partition_special_innodb.test mysql-test/suite/parts/t/partition_value_innodb.test mysql-test/suite/parts/t/partition_value_myisam.test mysql-test/suite/parts/t/partition_value_ndb.test mysql-test/suite/rpl/r/rpl_auto_increment.result mysql-test/suite/rpl/r/rpl_packet.result mysql-test/suite/rpl/r/rpl_row_create_table.result mysql-test/suite/rpl/r/rpl_slave_skip.result mysql-test/suite/rpl/r/rpl_trigger.result mysql-test/suite/rpl/t/disabled.def mysql-test/suite/rpl/t/rpl_packet.test mysql-test/suite/rpl/t/rpl_row_create_table.test mysql-test/suite/rpl/t/rpl_slave_skip.test mysql-test/suite/rpl/t/rpl_trigger.test mysql-test/suite/rpl_ndb/t/disabled.def mysql-test/suite/sys_vars/inc/key_buffer_size_basic.inc mysql-test/suite/sys_vars/inc/sort_buffer_size_basic.inc mysql-test/suite/sys_vars/r/key_buffer_size_basic_32.result mysql-test/suite/sys_vars/r/key_buffer_size_basic_64.result mysql-test/suite/sys_vars/r/sort_buffer_size_basic_32.result mysql-test/suite/sys_vars/r/sort_buffer_size_basic_64.result mysql-test/t/alter_table.test mysql-test/t/create.test mysql-test/t/csv.test mysql-test/t/ctype_ucs.test mysql-test/t/date_formats.test mysql-test/t/disabled.def mysql-test/t/events_bugs.test mysql-test/t/events_scheduling.test mysql-test/t/fulltext.test mysql-test/t/func_if.test mysql-test/t/func_in.test mysql-test/t/func_str.test mysql-test/t/func_time.test mysql-test/t/grant.test mysql-test/t/information_schema.test mysql-test/t/innodb-autoinc.test mysql-test/t/innodb.test mysql-test/t/innodb_mysql.test mysql-test/t/log_bin_trust_function_creators_func.test mysql-test/t/log_state.test mysql-test/t/myisam_data_pointer_size_func.test mysql-test/t/myisampack.test mysql-test/t/mysql.test mysql-test/t/mysqlcheck.test mysql-test/t/partition_innodb_stmt.test mysql-test/t/partition_mgm.test mysql-test/t/partition_pruning.test mysql-test/t/query_cache.test mysql-test/t/rpl_init_slave_func.test mysql-test/t/select.test mysql-test/t/status.test mysql-test/t/strict.test mysql-test/t/temp_table.test mysql-test/t/type_bit.test mysql-test/t/type_date.test mysql-test/t/type_float.test mysql-test/t/warnings_engine_disabled.test mysql-test/t/xml.test mysys/my_getopt.c mysys/my_init.c scripts/mysql_install_db.sh sql-common/my_time.c sql/field.cc sql/field.h sql/filesort.cc sql/ha_partition.cc sql/ha_partition.h sql/item.cc sql/item_cmpfunc.cc sql/item_func.h sql/item_strfunc.cc sql/item_sum.cc sql/item_timefunc.cc sql/item_timefunc.h sql/log.cc sql/log.h sql/log_event.cc sql/log_event.h sql/mysql_priv.h sql/mysqld.cc sql/opt_range.cc sql/partition_info.cc sql/repl_failsafe.cc sql/rpl_constants.h sql/set_var.cc sql/slave.cc sql/spatial.h sql/sql_acl.cc sql/sql_base.cc sql/sql_binlog.cc sql/sql_class.h sql/sql_cursor.cc sql/sql_delete.cc sql/sql_lex.cc sql/sql_lex.h sql/sql_locale.cc sql/sql_parse.cc sql/sql_partition.cc sql/sql_plugin.cc sql/sql_plugin.h sql/sql_profile.cc sql/sql_repl.cc sql/sql_select.cc sql/sql_select.h sql/sql_show.cc sql/sql_table.cc sql/sql_trigger.cc sql/sql_trigger.h sql/table.cc sql/table.h sql/unireg.cc storage/csv/ha_tina.cc storage/federated/ha_federated.cc storage/heap/ha_heap.cc storage/innobase/Makefile.am storage/innobase/btr/btr0sea.c storage/innobase/buf/buf0lru.c storage/innobase/dict/dict0dict.c storage/innobase/dict/dict0mem.c storage/innobase/handler/ha_innodb.cc storage/innobase/handler/ha_innodb.h storage/innobase/include/btr0sea.h storage/innobase/include/dict0dict.h storage/innobase/include/dict0mem.h storage/innobase/include/ha_prototypes.h storage/innobase/include/lock0lock.h storage/innobase/include/row0mysql.h storage/innobase/include/sync0sync.ic storage/innobase/include/ut0ut.h storage/innobase/lock/lock0lock.c storage/innobase/os/os0file.c storage/innobase/plug.in storage/innobase/row/row0mysql.c storage/innobase/row/row0sel.c storage/innobase/srv/srv0srv.c storage/innobase/srv/srv0start.c storage/innobase/ut/ut0ut.c storage/myisam/ft_boolean_search.c strings/ctype.c strings/xml.c tests/mysql_client_test.c win/configure.js mysql-test/suite/funcs_1/t/is_coll_char_set_appl.test ------------------------------------------------------------------------ r4165 | calvin | 2009-02-12 01:34:27 +0200 (Thu, 12 Feb 2009) | 1 line Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: minor non-functional changes. ------------------------------------------------------------------------ "	b4399fa81931f27fa1395b78f427cabc9febe79a
----------------------------
Bug#31506 detection of function's availability is wrong in configure.in Replacing AC_CHECK_FUNC+AC_CHECK_LIB combination with AC_SEARCH_LIBS. 	ac8f752e929fa90cec607ebced0ee12d6045b11d
----------------------------
Fix for bug #41078: With CURSOR_TYPE_READ_ONLY mysql_stmt_fetch() returns short string value. Multibyte character sets were not taken into account when calculating max_length in Item_param::convert_str_value(). As a result, string parameters of a prepared statement could be truncated later when calculating string length in characters by dividing length in bytes by the charset's mbmaxlen value (e.g. in Field_varstring::store()). Fixed by taking charset's mbmaxlen into account when calculating max_length in Item_param::convert_str_value(). 	c4f0c2d38cf4c741bcd22469ea135b72ae4a0bc4
----------------------------
ndb - fix bug in new DD config 	5ef841750ff3a5b5f3cf84de3ddf9c75e5a76f0d
----------------------------
Fixed test cases for new config variables and changed defaults, min and max values 	92e572e86c8a3c1c87f9c44565412ff966a96d97
----------------------------
ndb - fix for new DD-config (dead code now) 	2670cbd50245bc5e0dd58ad0c225cc636d49c4d7
----------------------------
ndb - add new DD config variables FileSystemPathDD FileSystemPathDataFiles FileSystemPathUndoFiles InitialLogfileGroup InitialTablespace 	affa326ad69291c8fd58c377df5f36fc2e431c23
----------------------------
Add the IBM DB2 for i storage engine. Modify plugins.m4 configuration framework so that plugins which are not built still get added to the source distribution during make dist. This came up now because we can only build ibmdb2i on i5/OS, and we can't bootstrap our source dist on that platform.  The solution is to specify DIST_SUBDIRS containing all plugins, separate from SUBDIRS which contains the plugins which are actually built. This ibmdb2i code is from the ibmdb2i-ga3-src.zip file, with a patch to plug.in to disable the plugin if the PASE environment isn't available. 	858d40d82cf81fd71b01048fa6db21e563463018
----------------------------
Bug#42797 mtr.pl - temporary directory are deleted when child exit's - Since we are only using the auto cleanup in one place of mtr.pl today, disable the autocleanup and write our own END handler that clean up the tmpdir only when the process that created it exits. 	07fad74238561fd49f545733e48bf87a271be7a5
----------------------------
branches/zip: Adjust the result file of innodb_thread_concurrency_basic test. The default value of innodb_thread_concurrency is changed to 0 (from 8) via r4163. 	9cec478049b258cb1a2f2863242435f65a0f6673
----------------------------
branches/zip: Make innodb_thread_concurrency=0 the default. The old default was 8. 	25f45c0d1c1ee151071a5d14905f4edf67efe4e1
----------------------------
ndb - add static ndbd/ndbmtd config for mtr 	95cc239a604f6e734b82a702fd0917d919337d61
----------------------------
"BUG#38197 Errors in @@init_slave not visible in 'show slave status' Some errors that cause the slave SQL thread to stop are not shown in the Slave_SQL_Error column of ""SHOW SLAVE STATUS"". Instead, the error is only in the server's error log. That makes it difficult to analyze the error for the user. One example of an error that stops the slave but is not shown by ""SHOW SLAVE STATUS"" is when @@global.init_slave is set incorrectly (e.g., it contains something that is not valid SQL). Three failures were not correctly reported: 1 - Failures during slave thread initialization 2 - Failures while initializing the relay log position right after starting the slave thread. 3 - Failures while processing queries passed through the init_slave option. This patch fixes the issues by reporting the errors through relay-info->report. "	87679ac97302915962f3c9c5f188f5b0c3d44b22
----------------------------
"branches/zip: When innodb_use_sys_malloc is set, ignore innodb_additional_mem_pool_size, because nothing will be allocated from mem_comm_pool. mem_pool_create(): Remove the assertion about size.  The function will work with any size.  However, an assertion would fail in ut_malloc_low() when size==0. mem_init(): When srv_use_sys_malloc is set, pass size=1 to mem_pool_create(). mem0mem.c: Add #include ""srv0srv.h"" that is needed by mem0dbg.c. "	a805ee5fd54274c3b98c93bafff618c3fa7d9908
----------------------------
"branches/innodb+: Merge revisions 4072:4150 from branches/zip: ------------------------------------------------------------------------ r4074 | vasil | 2009-01-31 08:05:24 +0200 (Sat, 31 Jan 2009) | 4 lines branches/zip: Adjust the failing patch patches/information_schema.diff. ------------------------------------------------------------------------ r4076 | vasil | 2009-02-02 09:32:04 +0200 (Mon, 02 Feb 2009) | 4 lines branches/zip: Add ChangeLog entry for the change in r4072. ------------------------------------------------------------------------ r4077 | marko | 2009-02-02 10:48:05 +0200 (Mon, 02 Feb 2009) | 2 lines branches/zip: innobase_start_or_create_for_mysql(): Remove a factual error in the function comment.  Parameters are not read from a file ""srv_init"". ------------------------------------------------------------------------ r4081 | marko | 2009-02-02 14:28:17 +0200 (Mon, 02 Feb 2009) | 4 lines branches/zip: Enclose some backup functions in #ifdef UNIV_HOTBACKUP. recv_read_cp_info_for_backup(), recv_scan_log_seg_for_backup(): These functions are only called by InnoDB Hot Backup. ------------------------------------------------------------------------ r4082 | vasil | 2009-02-02 18:24:08 +0200 (Mon, 02 Feb 2009) | 10 lines branches/zip: Fix a mysql-test failure in innodb-zip: main.innodb-zip                          [ fail ] Test ended at 2009-02-02 18:13:25 CURRENT_TEST: main.innodb-zip mysqltest: At line 160: Found line beginning with --  that didn't contain a valid mysqltest command, check your syntax or use # if you intended to write a comment ------------------------------------------------------------------------ r4083 | vasil | 2009-02-02 18:33:20 +0200 (Mon, 02 Feb 2009) | 6 lines branches/zip: Fix the failing innodb-zip test to restore the environment as it was before the test execution because a newly added feature in the mysql-test framework does check for this. ------------------------------------------------------------------------ r4088 | calvin | 2009-02-03 02:35:56 +0200 (Tue, 03 Feb 2009) | 8 lines branches/zip: fix a compiler error and a warning Both are minor changes: 1) Compiler error introduced in r4072: double ';' at the end. 2) Warning introduced in r3613: \mem\mem0pool.c(481) : warning C4098: 'mem_area_free' : 'void' function returning a value Approved by: Sunny (IM) ------------------------------------------------------------------------ r4098 | marko | 2009-02-03 09:52:45 +0200 (Tue, 03 Feb 2009) | 4 lines branches/zip: mem_area_free(): Correct a bug that was introduced in r4088. free() is not the same as ut_free().  ut_free() pairs with ut_malloc(), not malloc().  free() pairs with malloc() and some other functions. ------------------------------------------------------------------------ r4114 | marko | 2009-02-04 16:09:24 +0200 (Wed, 04 Feb 2009) | 2 lines branches/zip: buf_block_align(): Fix a bogus debug assertion that was introduced in r4036, to address Issue #161. ------------------------------------------------------------------------ r4139 | vasil | 2009-02-09 13:47:16 +0200 (Mon, 09 Feb 2009) | 5 lines branches/zip: Remove mysql-test/patches/bug35261.diff because that bug has been fixed in the MySQL repository. ------------------------------------------------------------------------ r4141 | marko | 2009-02-09 15:35:50 +0200 (Mon, 09 Feb 2009) | 1 line branches/zip: fil_write_lsn_and_arch_no_to_file(): Plug a memory leak. ------------------------------------------------------------------------ r4144 | inaam | 2009-02-10 01:36:25 +0200 (Tue, 10 Feb 2009) | 9 lines branches/zip            rb://30 This patch changes the innodb mutexes and rw_locks implementation. On supported platforms it uses GCC builtin atomics. These changes are based on the patch sent by Mark Callaghan of Google under BSD license. More technical discussion can be found at rb://30 Approved by: Heikki ------------------------------------------------------------------------ r4145 | vasil | 2009-02-10 07:34:43 +0200 (Tue, 10 Feb 2009) | 9 lines branches/zip: Non-functional change: Fix a compilation warning introduced in r4144: gcc -DHAVE_CONFIG_H -I. -I../../include -I../../include -I../../include -I../../regex -I../../storage/innobase/include -I../../sql -I.   -Werror         -Wall -g   -MT libinnobase_a-sync0arr.o -MD -MP -MF .deps/libinnobase_a-sync0arr.Tpo -c -o libinnobase_a-sync0arr.o `test -f 'sync/sync0arr.c' || echo './'`sync/sync0arr.c cc1: warnings being treated as errors sync/sync0arr.c: In function 'sync_array_object_signalled': sync/sync0arr.c:869: warning: pointer targets in passing argument 1 of 'os_atomic_increment' differ in signedness ------------------------------------------------------------------------ r4148 | marko | 2009-02-10 10:38:41 +0200 (Tue, 10 Feb 2009) | 12 lines branches/zip: Map ut_malloc(), ut_realloc(), ut_free() to malloc(), realloc(), free() when innodb_use_sys_malloc is set. ut_free_all_mem(): If innodb_use_sys_malloc is set, do nothing, because then ut_mem_block_list_inited will never be set. log_init(): Use mem_alloc() instead of ut_malloc(), so that the memory will be freed.  (Tested with Valgrind, although it is not clear why the memory would be freed.) rb://86 approved by Heikki Tuuri and Ken Jacobs.  This addresses Issue #168. ------------------------------------------------------------------------ r4149 | marko | 2009-02-10 11:09:15 +0200 (Tue, 10 Feb 2009) | 1 line branches/zip: ChangeLog: Document recent changes. ------------------------------------------------------------------------ r4150 | marko | 2009-02-10 11:51:43 +0200 (Tue, 10 Feb 2009) | 6 lines branches/zip: get_share(), free_share(): Make table locking case sensitive. If lower_case_table_names=1, MySQL will pass the table names in lower case. Thus, we can use a binary comparison (strcmp) in the hash table. rb://87 approved by Heikki Tuuri, to address Bug #41676 and Issue #167. ------------------------------------------------------------------------ "	40c6857eafcb6a1ac542e308199a0698c263b0b4
----------------------------
branches/zip: get_share(), free_share(): Make table locking case sensitive. If lower_case_table_names=1, MySQL will pass the table names in lower case. Thus, we can use a binary comparison (strcmp) in the hash table. rb://87 approved by Heikki Tuuri, to address Bug #41676 and Issue #167. 	ecda78f01c05327b4230241025a0bff9e247f2ba
----------------------------
branches/zip: Map ut_malloc(), ut_realloc(), ut_free() to malloc(), realloc(), free() when innodb_use_sys_malloc is set. ut_free_all_mem(): If innodb_use_sys_malloc is set, do nothing, because then ut_mem_block_list_inited will never be set. log_init(): Use mem_alloc() instead of ut_malloc(), so that the memory will be freed.  (Tested with Valgrind, although it is not clear why the memory would be freed.) rb://86 approved by Heikki Tuuri and Ken Jacobs.  This addresses Issue #168. 	f4cccb1f81034060ae617009baa228600485c8b6
----------------------------
Fix for bug #40757: Starting server on Windows with innodb_flush_method=wrong_value causes crash Problem: after a failed plugin initialization, incompletely initialized data remained in the plugin and handlerton data structures. These were used later and caused the crash. Fix: clean-up plugin related data if initialization failed. Note: no test case added, hand tested. 	f6017fc4bd7ee543801ccb5dd59ef3b46bc7da67
----------------------------
"branches/zip: Non-functional change: Fix a compilation warning introduced in r4144: gcc -DHAVE_CONFIG_H -I. -I../../include -I../../include -I../../include -I../../regex -I../../storage/innobase/include -I../../sql -I.   -Werror 	 -Wall -g   -MT libinnobase_a-sync0arr.o -MD -MP -MF .deps/libinnobase_a-sync0arr.Tpo -c -o libinnobase_a-sync0arr.o `test -f 'sync/sync0arr.c' || echo './'`sync/sync0arr.c cc1: warnings being treated as errors sync/sync0arr.c: In function 'sync_array_object_signalled': sync/sync0arr.c:869: warning: pointer targets in passing argument 1 of 'os_atomic_increment' differ in signedness "	51bc19d7e253c5a0e45d73b941222b090742b321
----------------------------
Bug#42610 Dynamic plugin broken in 5.1.31 added ignore-builtin-innodb option which disabled initialization of builtin InnoDB plugin 	53eed773e3768bd4efc5f8eb4827d3ca274e6c02
----------------------------
"Bug #42451 setup_fake_relay_log makes an incorrect path on windows Path composition for the relay log file that is stored into the relay index file was not correct for windows. mysql-test language does not provide primitives for portable path composition. Fixed with storing only the basename part of the external ""fake"" relay log into the relay index file. Safety of removal of the dirname part of the relaylog is provided by logics of `setup_fake_relay_log' that places the fake file into @@datadir directory. "	98733e857eefb9c4df2748467c436df058f20817
----------------------------
branches/5.1: Merge a change from MySQL: [looks like the changes to innodb-autoinc.test were made as part of the following huge merge, but we are merging only changes to that file] ------------------------------------------------------------ revno: 2546.47.1 committer: Luis Soares <luis.soares@sun.com> branch nick: 5.1-rpl timestamp: Fri 2009-01-23 13:22:05 +0100 message: merge: 5.1 -> 5.1-rpl conflicts: Text conflict in client/mysqltest.cc Text conflict in mysql-test/include/wait_until_connected_again.inc Text conflict in mysql-test/lib/mtr_report.pm Text conflict in mysql-test/mysql-test-run.pl Text conflict in mysql-test/r/events_bugs.result Text conflict in mysql-test/r/log_state.result Text conflict in mysql-test/r/myisam_data_pointer_size_func.result Text conflict in mysql-test/r/mysqlcheck.result Text conflict in mysql-test/r/query_cache.result Text conflict in mysql-test/r/status.result Text conflict in mysql-test/suite/binlog/r/binlog_index.result Text conflict in mysql-test/suite/binlog/r/binlog_innodb.result Text conflict in mysql-test/suite/rpl/r/rpl_packet.result Text conflict in mysql-test/suite/rpl/t/rpl_packet.test Text conflict in mysql-test/t/disabled.def Text conflict in mysql-test/t/events_bugs.test Text conflict in mysql-test/t/log_state.test Text conflict in mysql-test/t/myisam_data_pointer_size_func.test Text conflict in mysql-test/t/mysqlcheck.test Text conflict in mysql-test/t/query_cache.test Text conflict in mysql-test/t/rpl_init_slave_func.test Text conflict in mysql-test/t/status.test removed: mysql-test/suite/parts/r/partition_bit_ndb.result mysql-test/suite/parts/t/partition_bit_ndb.test mysql-test/suite/parts/t/partition_sessions.test mysql-test/suite/sys_vars/inc/tmp_table_size_basic.inc mysql-test/suite/sys_vars/r/tmp_table_size_basic_32.result mysql-test/suite/sys_vars/r/tmp_table_size_basic_64.result mysql-test/suite/sys_vars/t/tmp_table_size_basic_32.test mysql-test/suite/sys_vars/t/tmp_table_size_basic_64.test mysql-test/t/log_bin_trust_function_creators_func-master.opt mysql-test/t/rpl_init_slave_func-slave.opt added: mysql-test/include/check_events_off.inc mysql-test/include/cleanup_fake_relay_log.inc mysql-test/include/have_simple_parser.inc mysql-test/include/no_running_event_scheduler.inc mysql-test/include/no_running_events.inc mysql-test/include/running_event_scheduler.inc mysql-test/include/setup_fake_relay_log.inc mysql-test/include/wait_condition_sp.inc mysql-test/r/fulltext_plugin.result mysql-test/r/have_simple_parser.require mysql-test/r/innodb_bug38231.result mysql-test/r/innodb_bug39438.result mysql-test/r/innodb_mysql_rbk.result mysql-test/r/partition_innodb_semi_consistent.result mysql-test/r/query_cache_28249.result mysql-test/r/status2.result mysql-test/std_data/bug40482-bin.000001 mysql-test/suite/binlog/r/binlog_innodb_row.result mysql-test/suite/binlog/t/binlog_innodb_row.test mysql-test/suite/rpl/r/rpl_binlog_corruption.result mysql-test/suite/rpl/t/rpl_binlog_corruption-master.opt mysql-test/suite/rpl/t/rpl_binlog_corruption.test mysql-test/suite/sys_vars/r/tmp_table_size_basic.result mysql-test/suite/sys_vars/t/tmp_table_size_basic.test mysql-test/t/fulltext_plugin-master.opt mysql-test/t/fulltext_plugin.test mysql-test/t/innodb_bug38231.test mysql-test/t/innodb_bug39438-master.opt mysql-test/t/innodb_bug39438.test mysql-test/t/innodb_mysql_rbk-master.opt mysql-test/t/innodb_mysql_rbk.test mysql-test/t/partition_innodb_semi_consistent-master.opt mysql-test/t/partition_innodb_semi_consistent.test mysql-test/t/query_cache_28249.test mysql-test/t/status2.test renamed: mysql-test/suite/funcs_1/r/is_collation_character_set_applicability.result => mysql-test/suite/funcs_1/r/is_coll_char_set_appl.result mysql-test/suite/funcs_1/t/is_collation_character_set_applicability.test => mysql-test/suite/funcs_1/t/is_coll_char_set_appl.test modified: .bzr-mysql/default.conf CMakeLists.txt client/mysql.cc client/mysql_upgrade.c client/mysqlcheck.c client/mysqltest.cc configure.in extra/resolve_stack_dump.c extra/yassl/include/openssl/ssl.h include/config-win.h include/m_ctype.h include/my_global.h mysql-test/extra/binlog_tests/database.test mysql-test/extra/rpl_tests/rpl_auto_increment.test mysql-test/include/commit.inc mysql-test/include/have_32bit.inc mysql-test/include/have_64bit.inc mysql-test/include/index_merge1.inc mysql-test/include/linux_sys_vars.inc mysql-test/include/windows_sys_vars.inc mysql-test/lib/mtr_report.pm mysql-test/mysql-test-run.pl mysql-test/r/alter_table.result mysql-test/r/commit_1innodb.result mysql-test/r/create.result mysql-test/r/csv.result mysql-test/r/ctype_ucs.result mysql-test/r/date_formats.result mysql-test/r/events_bugs.result mysql-test/r/events_scheduling.result mysql-test/r/fulltext.result mysql-test/r/func_if.result mysql-test/r/func_in.result mysql-test/r/func_str.result mysql-test/r/func_time.result mysql-test/r/grant.result mysql-test/r/index_merge_myisam.result mysql-test/r/information_schema.result mysql-test/r/innodb-autoinc.result mysql-test/r/innodb.result mysql-test/r/innodb_mysql.result mysql-test/r/log_bin_trust_function_creators_func.result mysql-test/r/log_state.result mysql-test/r/myisampack.result mysql-test/r/mysql.result mysql-test/r/mysqlcheck.result mysql-test/r/partition_datatype.result mysql-test/r/partition_mgm.result mysql-test/r/partition_pruning.result mysql-test/r/query_cache.result mysql-test/r/read_buffer_size_basic.result mysql-test/r/read_rnd_buffer_size_basic.result mysql-test/r/rpl_init_slave_func.result mysql-test/r/select.result mysql-test/r/status.result mysql-test/r/strict.result mysql-test/r/temp_table.result mysql-test/r/type_bit.result mysql-test/r/type_date.result mysql-test/r/type_float.result mysql-test/r/warnings_engine_disabled.result mysql-test/r/xml.result mysql-test/suite/binlog/r/binlog_database.result mysql-test/suite/binlog/r/binlog_index.result mysql-test/suite/binlog/r/binlog_innodb.result mysql-test/suite/binlog/r/binlog_row_mix_innodb_myisam.result mysql-test/suite/binlog/t/binlog_innodb.test mysql-test/suite/funcs_1/r/is_columns_is.result mysql-test/suite/funcs_1/r/is_engines.result mysql-test/suite/funcs_1/r/storedproc.result mysql-test/suite/funcs_1/storedproc/param_check.inc mysql-test/suite/funcs_2/t/disabled.def mysql-test/suite/ndb/t/disabled.def mysql-test/suite/parts/r/partition_bit_innodb.result mysql-test/suite/parts/r/partition_bit_myisam.result mysql-test/suite/parts/r/partition_special_innodb.result mysql-test/suite/parts/t/disabled.def mysql-test/suite/parts/t/partition_special_innodb.test mysql-test/suite/parts/t/partition_value_innodb.test mysql-test/suite/parts/t/partition_value_myisam.test mysql-test/suite/parts/t/partition_value_ndb.test mysql-test/suite/rpl/r/rpl_auto_increment.result mysql-test/suite/rpl/r/rpl_packet.result mysql-test/suite/rpl/r/rpl_row_create_table.result mysql-test/suite/rpl/r/rpl_slave_skip.result mysql-test/suite/rpl/r/rpl_trigger.result mysql-test/suite/rpl/t/disabled.def mysql-test/suite/rpl/t/rpl_packet.test mysql-test/suite/rpl/t/rpl_row_create_table.test mysql-test/suite/rpl/t/rpl_slave_skip.test mysql-test/suite/rpl/t/rpl_trigger.test mysql-test/suite/rpl_ndb/t/disabled.def mysql-test/suite/sys_vars/inc/key_buffer_size_basic.inc mysql-test/suite/sys_vars/inc/sort_buffer_size_basic.inc mysql-test/suite/sys_vars/r/key_buffer_size_basic_32.result mysql-test/suite/sys_vars/r/key_buffer_size_basic_64.result mysql-test/suite/sys_vars/r/sort_buffer_size_basic_32.result mysql-test/suite/sys_vars/r/sort_buffer_size_basic_64.result mysql-test/t/alter_table.test mysql-test/t/create.test mysql-test/t/csv.test mysql-test/t/ctype_ucs.test mysql-test/t/date_formats.test mysql-test/t/disabled.def mysql-test/t/events_bugs.test mysql-test/t/events_scheduling.test mysql-test/t/fulltext.test mysql-test/t/func_if.test mysql-test/t/func_in.test mysql-test/t/func_str.test mysql-test/t/func_time.test mysql-test/t/grant.test mysql-test/t/information_schema.test mysql-test/t/innodb-autoinc.test mysql-test/t/innodb.test mysql-test/t/innodb_mysql.test mysql-test/t/log_bin_trust_function_creators_func.test mysql-test/t/log_state.test mysql-test/t/myisam_data_pointer_size_func.test mysql-test/t/myisampack.test mysql-test/t/mysql.test mysql-test/t/mysqlcheck.test mysql-test/t/partition_innodb_stmt.test mysql-test/t/partition_mgm.test mysql-test/t/partition_pruning.test mysql-test/t/query_cache.test mysql-test/t/rpl_init_slave_func.test mysql-test/t/select.test mysql-test/t/status.test mysql-test/t/strict.test mysql-test/t/temp_table.test mysql-test/t/type_bit.test mysql-test/t/type_date.test mysql-test/t/type_float.test mysql-test/t/warnings_engine_disabled.test mysql-test/t/xml.test mysys/my_getopt.c mysys/my_init.c scripts/mysql_install_db.sh sql-common/my_time.c sql/field.cc sql/field.h sql/filesort.cc sql/ha_partition.cc sql/ha_partition.h sql/item.cc sql/item_cmpfunc.cc sql/item_func.h sql/item_strfunc.cc sql/item_sum.cc sql/item_timefunc.cc sql/item_timefunc.h sql/log.cc sql/log.h sql/log_event.cc sql/log_event.h sql/mysql_priv.h sql/mysqld.cc sql/opt_range.cc sql/partition_info.cc sql/repl_failsafe.cc sql/rpl_constants.h sql/set_var.cc sql/slave.cc sql/spatial.h sql/sql_acl.cc sql/sql_base.cc sql/sql_binlog.cc sql/sql_class.h sql/sql_cursor.cc sql/sql_delete.cc sql/sql_lex.cc sql/sql_lex.h sql/sql_locale.cc sql/sql_parse.cc sql/sql_partition.cc sql/sql_plugin.cc sql/sql_plugin.h sql/sql_profile.cc sql/sql_repl.cc sql/sql_select.cc sql/sql_select.h sql/sql_show.cc sql/sql_table.cc sql/sql_trigger.cc sql/sql_trigger.h sql/table.cc sql/table.h sql/unireg.cc storage/csv/ha_tina.cc storage/federated/ha_federated.cc storage/heap/ha_heap.cc storage/innobase/Makefile.am storage/innobase/btr/btr0sea.c storage/innobase/buf/buf0lru.c storage/innobase/dict/dict0dict.c storage/innobase/dict/dict0mem.c storage/innobase/handler/ha_innodb.cc storage/innobase/handler/ha_innodb.h storage/innobase/include/btr0sea.h storage/innobase/include/dict0dict.h storage/innobase/include/dict0mem.h storage/innobase/include/ha_prototypes.h storage/innobase/include/lock0lock.h storage/innobase/include/row0mysql.h storage/innobase/include/sync0sync.ic storage/innobase/include/ut0ut.h storage/innobase/lock/lock0lock.c storage/innobase/os/os0file.c storage/innobase/plug.in storage/innobase/row/row0mysql.c storage/innobase/row/row0sel.c storage/innobase/srv/srv0srv.c storage/innobase/srv/srv0start.c storage/innobase/ut/ut0ut.c storage/myisam/ft_boolean_search.c strings/ctype.c strings/xml.c tests/mysql_client_test.c win/configure.js mysql-test/suite/funcs_1/t/is_coll_char_set_appl.test 	fe8fbb1e4f1fa79a4280bc376aa59f62e1f2cdb0
----------------------------
Updated InnoDB defaults 1) Buffer Pool size now defaults to 1GB and a minimum of 64MB 2) Log files are 3 by default and each 128MB in size 3) Removed innodb-file-io-threads config variable since no longer used 4) Set read io and write io threads to 8 by default for better default performance 5) Set log buffer size to 16 MB by default and minimum to 2MB 6) Set additional memory buffer pool to 8 MB and minimum to 2MB 7) Set max dirty percent to 75% and decreased to 99% to never allow a completely dirty buffer pool 8) Increased io capacity to 200 for a good default 	d7d7cf6ce947d1fa8fdd2ceb0a6cfbf583d25054
----------------------------
Bug#42588 system_mysql_db_fix30020 fails when run from bin dist with mtr2 - Properly set --bindir=$path_client_bindir and --basedir=$basedir by adding %s format specifier 	15dc0c2a744e6a52f0701b0d469a7ac504245444
----------------------------
Bug #41732 rpl_ndb_circular_2ch needs an updated configuration file There are two issues: 1. 6.0 uses the obsolate master-*** server options; 2. the test is not deterministic in that although master vs slave consistency is fine, two runs of the test can have different results. The reason of the non-determinism is the combination of a chosen way to demo results and the ndb_autoincrement_prefetch_sz feature. The current patch fixes the 2nd issue by putting out results via diff_table macro instead of the former run-sensitive method. The 1st issue is going to be fixed by a separate patch to 6.0. 	176a78810536cb2fa2388d747597debd8c2010e5
----------------------------
branches/innodb+: Merge revisions 4070:4072 from branches/zip: ------------------------------------------------------------------------ r4072 | marko | 2009-01-30 23:30:29 +0200 (Fri, 30 Jan 2009) | 32 lines branches/zip: Make innodb_adaptive_hash_index settable. btr_search_disabled: Rename to btr_search_enabled and change the type to char, so that it can be directly linked to the MySQL parameters. Note that the variable is protected by btr_search_latch and btr_search_enabled_mutex, a new mutex introduced in this patch. btr_search_enabled_mutex: A new mutex, to protect btr_search_enabled together with btr_search_latch. buf_pool_drop_hash_index(): New function, to be called from btr_search_disable(). btr_search_disable(), btr_search_enable(): Fix bugs.  These functions were previously unused. btr_search_guess_on_hash(), btr_search_build_page_hash_index(): Check btr_search_enabled once more, while holding btr_search_latch. btr_cur_search_to_nth_level(): Note that the reads of btr_search_enabled may be dirty and explain why it should not be a problem. innobase_adaptive_hash_index: Remove. The variable btr_search_enabled will be used directly instead. innodb_adaptive_hash_index_update(): New function, an update callback for innodb_adaptive_hash_index.  This will call either btr_search_disable() or btr_search_enable() when the value is assigned.  The functions will be called even if the value does not appear to be changed, e.g., when setting from TRUE to TRUE or FALSE to FALSE. rb://85 approved by Heikki Tuuri.  This addresses Issue #163. ------------------------------------------------------------------------ 	02957eab878a9c642c9d9c06743f97c93efc9349
----------------------------
branches/zip: Make innodb_adaptive_hash_index settable. btr_search_disabled: Rename to btr_search_enabled and change the type to char, so that it can be directly linked to the MySQL parameters. Note that the variable is protected by btr_search_latch and btr_search_enabled_mutex, a new mutex introduced in this patch. btr_search_enabled_mutex: A new mutex, to protect btr_search_enabled together with btr_search_latch. buf_pool_drop_hash_index(): New function, to be called from btr_search_disable(). btr_search_disable(), btr_search_enable(): Fix bugs.  These functions were previously unused. btr_search_guess_on_hash(), btr_search_build_page_hash_index(): Check btr_search_enabled once more, while holding btr_search_latch. btr_cur_search_to_nth_level(): Note that the reads of btr_search_enabled may be dirty and explain why it should not be a problem. innobase_adaptive_hash_index: Remove. The variable btr_search_enabled will be used directly instead. innodb_adaptive_hash_index_update(): New function, an update callback for innodb_adaptive_hash_index.  This will call either btr_search_disable() or btr_search_enable() when the value is assigned.  The functions will be called even if the value does not appear to be changed, e.g., when setting from TRUE to TRUE or FALSE to FALSE. rb://85 approved by Heikki Tuuri.  This addresses Issue #163. 	6aab391620fe83a43151d65417c17b3b60ac12e4
----------------------------
"ndbmtd - depricate mt-classic in favor of mt-lqh enable mt-classic if setting ""__ndbmt_classic=1"" in config, or export=NDB_MT_LQH=NOPLEASE "	46ff13e9752a686ba0e4c55036a3a74f43a3d879
----------------------------
Merge: 4dcde22 37f9da1 merge: 5.1 -> 5.1-rpl-merge conflicts: Text conflict in mysql-test/suite/sys_vars/r/rpl_max_binlog_size_func.result Text conflict in mysql-test/suite/sys_vars/t/rpl_max_binlog_size_func.test 	16a6158c4764d0a264c16ce7010753e16946ab42
----------------------------
"branches/innodb+: Merge revisions 4006:4060 from branches/zip: ------------------------------------------------------------------------ r4008 | vasil | 2009-01-20 17:01:08 +0200 (Tue, 20 Jan 2009) | 4 lines branches/zip: Add ChangeLog entries for the bugfixes in r4004 and r4005. ------------------------------------------------------------------------ r4027 | marko | 2009-01-23 11:04:49 +0200 (Fri, 23 Jan 2009) | 1 line branches/zip: Remove some redundant #include statements. ------------------------------------------------------------------------ r4028 | marko | 2009-01-23 11:26:10 +0200 (Fri, 23 Jan 2009) | 13 lines branches/zip: Enclose some more unused code in #ifdef UNIV_LOG_ARCHIVE. This will help trim the dependencies of InnoDB Hot Backup. recv_recovery_from_checkpoint_start(): Rename to recv_recovery_from_checkpoint_start_func(), and remove the two first parameters unless UNIV_LOG_ARCHIVE is defined.  Define and use the auxiliary macros TYPE_CHECKPOINT and LIMIT_LSN in the function. struct recv_sys_struct: Remove archive_group unless UNIV_LOG_ARCHIVE is defined. Do not define LOG_ARCHIVE unless UNIV_LOG_ARCHIVE is defined. ------------------------------------------------------------------------ r4029 | marko | 2009-01-23 14:07:38 +0200 (Fri, 23 Jan 2009) | 1 line branches/zip: Remove some redundant #include directives. ------------------------------------------------------------------------ r4030 | marko | 2009-01-23 15:31:36 +0200 (Fri, 23 Jan 2009) | 2 lines branches/zip: buf_page_get_gen(): Remove the unused mode BUF_GET_NOWAIT. This was noticed while investigating Issue #160. ------------------------------------------------------------------------ r4033 | marko | 2009-01-23 15:49:04 +0200 (Fri, 23 Jan 2009) | 16 lines branches/zip: Merge revisions 4005:4032 from branches/5.1: ------------------------------------------------------------------------ r4032 | marko | 2009-01-23 15:43:51 +0200 (Fri, 23 Jan 2009) | 10 lines branches/5.1: Merge r4031 from branches/5.0: btr_search_drop_page_hash_when_freed(): Check if buf_page_get_gen() returns NULL.  The page may have been evicted from the buffer pool between buf_page_peek_if_search_hashed() and buf_page_get_gen(), because the buffer pool mutex will be released between these two calls. (Bug #42279, Issue #160) rb://82 approved by Heikki Tuuri ------------------------------------------------------------------------ ------------------------------------------------------------------------ r4034 | marko | 2009-01-26 16:16:39 +0200 (Mon, 26 Jan 2009) | 2 lines branches/zip: buf_page_get_gen(): Fix a ""possibly uninitialized"" warning that was introduced in r4030. ------------------------------------------------------------------------ r4036 | marko | 2009-01-26 22:33:20 +0200 (Mon, 26 Jan 2009) | 22 lines branches/zip: In r988, the function buf_block_align() was enclosed within UNIV_DEBUG. The two remaining callers in non-debug builds, btr_search_guess_on_hash() and btr_search_validate(), were rewritten to call buf_page_hash_get(). To implement support for a resizeable buffer pool, the function buf_block_align() had been rewritten to perform a page hash lookup in the buffer pool. The caller was also made responsible for holding the buffer pool mutex. Because the page hash lookup is expensive and it has to be done while holding the buffer pool mutex, implement buf_block_align() by pointer arithmetics again, and make btr_search_guess_on_hash() call it. Note that this will have to be adjusted if the interface to the resizeable buffer pool is actually implemented. rb://83 approved by Heikki Tuuri, to address Issue #161. As a deviation from the approved patch, this patch also makes btr_search_validate() (invoked by CHECK TABLE) check that buf_pool->page_hash is consistent with buf_block_align(). ------------------------------------------------------------------------ r4039 | vasil | 2009-01-27 08:04:17 +0200 (Tue, 27 Jan 2009) | 5 lines branches/zip: Adjust the paths in innodb_file_per_table.diff with a recent rename of the test/result files in the MySQL tree. ------------------------------------------------------------------------ r4042 | marko | 2009-01-27 10:05:24 +0200 (Tue, 27 Jan 2009) | 2 lines branches/zip: buf_LRU_invalidate_tablespace(): Fix a race condition: read zip_size while still holding block_mutex. ------------------------------------------------------------------------ r4045 | marko | 2009-01-28 00:31:17 +0200 (Wed, 28 Jan 2009) | 8 lines branches/zip: btr_search_validate(): Fix a bogus UNIV_DEBUG assertion failure that was accidentally introduced in r4036. Instead of calling buf_block_get_frame(), which asserts that the block must be buffer-fixed, access block->frame directly.  That is safe, because changes of block->page.state are protected by the buffer pool mutex, which we are holding. This bug was reported by Michael. ------------------------------------------------------------------------ r4046 | marko | 2009-01-28 00:33:20 +0200 (Wed, 28 Jan 2009) | 2 lines branches/zip: Revert the change to univ.i that was accidentally committed in r4045. ------------------------------------------------------------------------ r4047 | marko | 2009-01-28 00:46:13 +0200 (Wed, 28 Jan 2009) | 6 lines branches/zip: btr_search_validate(): Fix an assertion failure that was introduced in r4036. Do not call buf_block_get_space(), buf_block_get_page_no() unless the block state is BUF_BLOCK_FILE_PAGE. This bug was reported by Michael. ------------------------------------------------------------------------ r4050 | vasil | 2009-01-28 08:21:44 +0200 (Wed, 28 Jan 2009) | 5 lines branches/zip: Adjust the paths in innodb_lock_wait_timeout.diff with a recent rename of the test/result files in the MySQL tree. ------------------------------------------------------------------------ r4051 | marko | 2009-01-28 14:35:49 +0200 (Wed, 28 Jan 2009) | 1 line branches/zip: trx0sys.ic: Remove unnecessary #include <data0type.h>. ------------------------------------------------------------------------ r4052 | marko | 2009-01-28 15:21:45 +0200 (Wed, 28 Jan 2009) | 5 lines branches/zip: Enclose some functions inside #ifdef UNIV_HOTBACKUP: ut_sprintf_timestamp_without_extra_chars(), ut_get_year_month_day(), log_reset_first_header_and_checkpoint(): These functions are only used in InnoDB Hot Backup. ------------------------------------------------------------------------ r4056 | calvin | 2009-01-29 03:06:41 +0200 (Thu, 29 Jan 2009) | 33 lines branches/zip: Merge revisions 4032:4035 from branches/5.1 All InnoDB related tests passed on Windows, except known failure in partition_innodb_semi_consistent. The inadvertent change to btr0sea.c in this commit is reverted in r4060. ------------------------------------------------------------------------ r4035 | vasil | 2009-01-26 09:26:25 -0600 (Mon, 26 Jan 2009) | 23 lines branches/5.1: Merge a change from MySQL: ------------------------------------------------------------ revno: 2646.161.4 committer: Tatiana A. Nurnberg <azundris@mysql.com> branch nick: 51-31177v2 timestamp: Mon 2009-01-12 06:32:49 +0100 message: Bug#31177: Server variables can't be set to their current values Bounds-checks and blocksize corrections were applied to user-input, but constants in the server were trusted implicitly. If these values did not actually meet the requirements, the user could not set change a variable, then set it back to the (wonky) factory default or maximum by explicitly specifying it (SET <var>=<value> vs SET <var>=DEFAULT). Now checks also apply to the server's presets. Wonky values and maxima get corrected at startup. Consequently all non-offsetted values the user sees are valid, and users can set the variable to that exact value if they so desire. ------------------------------------------------------------------------ r4060 | marko | 2009-01-29 09:39:04 +0200 (Thu, 29 Jan 2009) | 1 line branches/zip: btr0sea.c: Revert the inadvertent change made in r4056. ------------------------------------------------------------------------ "	372c4132fdaa437c539a3843e57b4dd79ade4dc7
----------------------------
branches/zip: Port the applicable parts of r4053 from branches/innodb+: Implement the global variable innodb_change_buffering, with the following values: none - buffer nothing inserts - buffer inserts (the default) Approved by Ken Jacobs. 	8b025adba68b1decd9019814cab74020fd6c8c4a
----------------------------
branches/innodb+: branches/innodb+: Implement the global variable innodb_change_buffering, with the following values: none - buffer nothing inserts - buffer inserts (like InnoDB so far) deletes - buffer delete-marks changes - buffer inserts and delete-marks purges - buffer delete-marks and deletes all - buffer all operations (insert, delete-mark, delete) The default is 'all'. All values except 'none' and 'inserts' will make InnoDB+ write new-format records to the insert buffer, even for inserts. We will implement this variable in the InnoDB Plugin 1.0.3 with the values 'none' and 'inserts' (the default). This patch also adds a #if 0 TODO snippet for tagging the insert buffer format in the system tablespace. This is related to https://svn.innodb.com/innobase/Saving_last_shutdown_state and Issue #81. rb://79 approved by Heikki Tuuri and Ken Jacobs. 	78301bbe11e37d718bbd1a46986ee04c7eab78f1
----------------------------
Bug#42413 : IPv6 connection handling code bugs Fix some bugs in backport of IPv6 code from mysql-6.0. Also, unrelated Ndb Version fix to configure.in 	1dab5d41aadc55c477bc95838042d8b4f9dd89c6
----------------------------
branches/zip: Adjust the paths in innodb_lock_wait_timeout.diff with a recent rename of the test/result files in the MySQL tree. 	3c0d6f302f6f208a33a2908c576c2bd3f35a8c15
----------------------------
WL#4189 mtr.pl v2 - Bypass --secure-file-priv by loading the file from the client using LOAD DATA LOCAL INFILE 	c1376aeae02087db8596f456692072a782a627e6
----------------------------
"WL#4189 mtr.pl v2 - Add a ""skip-ssl=1"" to [mysqltest] section so that mysqltest will not run with ssl turned on by default but stil be able to turn it on when requested - This avoids that check_warnings and check_testcase connects to the server woth SSL turned on "	d85073033372b7e1513f8f72dabfd2bbda8faf24
----------------------------
"Bug #31240  	load data infile replication between (4.0 or 4.1) and 5.1 fails Fixing pb failures caused by mtr invokes the test with --tmpdir to which there are  sensitive operations in the test and setup_fake_relay_log.inc also needed --secure-file-priv for its own separate directory. Fixed with removing SELECT INTO OUTFILE and deploying --exec echo instead in the marco. The test's opt file should contain --secure-file-priv=$MYSQL_TEST_DIR as the test operations deal with files located in $MYSQL_TEST_DIR. "	8afe7c2fe6604355913e8ae27f91b7d5369193a8
----------------------------
branches/zip: Adjust the paths in innodb_file_per_table.diff with a recent rename of the test/result files in the MySQL tree. 	b20b32d1c871893bb2316adc504cfe63961e85ab
----------------------------
"Bug #31240  	load data infile replication between (4.0 or 4.1) and 5.1 fails Overriding a default value of --secure-file-priv on pb.mtr to be $MYSQLTEST_VARDIR which makes pb's mtr happy to execute the regression test for the bug. "	1c23fb68c7fe55ba63808953328114774a062e34
----------------------------
"Bug #31240  	load data infile replication between (4.0 or 4.1) and 5.1 fails Overriding a default value of --secure-file-priv on pb.mtr with a value allowable the test to pass on pb. "	0020291ab7cc08121394a95718436fb3467538ce
----------------------------
Fix for bug #37756: enabling fulltext indexes with myisam_repair_threads > 1 causes crash Problem: parallel repair (myisam_repair_threads > 1) of a myisam table with two or more fulltext keys that use the same parser may lead to a server crash. ALTER TABLE ENABLE KEYS is affected as well. Fix: properly initialize fulltext structures for parallel repair. Note: 1. there's no deterministic test case. 2. now we call parser->init() for each fulltext key (not for each fulltext parser used). 	01511453102aa18fb8933927d80eccdeef501c68
----------------------------
Merge: 37e91ac 4f0d2f5 merge: 5.1 -> 5.1-rpl conflicts: Text conflict in client/mysqltest.cc Text conflict in mysql-test/include/wait_until_connected_again.inc Text conflict in mysql-test/lib/mtr_report.pm Text conflict in mysql-test/mysql-test-run.pl Text conflict in mysql-test/r/events_bugs.result Text conflict in mysql-test/r/log_state.result Text conflict in mysql-test/r/myisam_data_pointer_size_func.result Text conflict in mysql-test/r/mysqlcheck.result Text conflict in mysql-test/r/query_cache.result Text conflict in mysql-test/r/status.result Text conflict in mysql-test/suite/binlog/r/binlog_index.result Text conflict in mysql-test/suite/binlog/r/binlog_innodb.result Text conflict in mysql-test/suite/rpl/r/rpl_packet.result Text conflict in mysql-test/suite/rpl/t/rpl_packet.test Text conflict in mysql-test/t/disabled.def Text conflict in mysql-test/t/events_bugs.test Text conflict in mysql-test/t/log_state.test Text conflict in mysql-test/t/myisam_data_pointer_size_func.test Text conflict in mysql-test/t/mysqlcheck.test Text conflict in mysql-test/t/query_cache.test Text conflict in mysql-test/t/rpl_init_slave_func.test Text conflict in mysql-test/t/status.test 	14d4576bfe87c490cc34927d53b9b68f028b51c2
----------------------------
add options --ndb-log-bin --ndb-log-binlog-index 	c891fbd05cf0866bcd7bd5a4999e873401c359cc
----------------------------
"Bug#35735 mysql-test-run.pl creates tmpdir for socket path longer than 70 - Additional patch with improved protection by putting it all inside an ""eval"" - Calling 'hostpath' on a truncated socket may also croak. - Remove the need to create any directory parts of ""path"" inside the function. "	e1e296bbf811f260a68a00de29e0c793850ca557
----------------------------
ndbmtd - 1) OJ optimizations developed for cmt/bw 2) pessemstic scheduling (update_sched_config), bug#42052 only execute signals if space exist to send to other-threads in system 3) new NdbCondition_ComputeAbsTime/NdbCondition_WaitTimeoutAbs 	264c319a33208f17a217ec3376c7e2b97458bd6e
----------------------------
"Merge: 4c4e488 4ecaa45 Upmerge changesets from 5.0-build to 5.1-build. This does not bring any contents changes, it is purely metadata which are affected. Details: Even within 5.0, most of these changesets did not cause file contents changes, because they were backports done for the ""service pack"" builds of 5.0.66sp1 and 5.0.72sp1. The ""real"" changesets are also already present in 5.1, so this upmerge doesn't change any contents. The only ""real"" changeset in 5.0 was a fix of the shell scripts used to configure bdb (BerkeleyDB). As we completele removed bdb from the 5.1 sources already, the affected files are not present in the 5.1 source tree, so this changeset also does not cause any contents changes. "	4f0d2f5a03ce0ded7138dbabb416534cb09abf75
----------------------------
"Merge: 887126a b725068 Merge some tool fixes from the 5.0.72sp1 build back into the tree. This is not the final merge of that release build, but we need early access to these tool fixes (use of ""awk"" in the BDB configuration). "	4ecaa45d11e3ead0d128e9535f8f0e35767c00ad
----------------------------
"Bug#38145: .frm file isn't sync'd with sync_frm enabled Views weren't sync()d the same way other structures were. In creating the FRM for views, obey the same rules for variable ""sync_frm"" as for everything else. "	8c9e81e8afd64a2f80fc4c622169145432b3a895
----------------------------
"branches/innodb+: Merge revisions 3602:3931 from branches/zip: ------------------------------------------------------------------------ r3607 | marko | 2008-12-30 22:33:31 +0200 (Tue, 30 Dec 2008) | 20 lines branches/zip: Remove the dependency on the MySQL HASH table implementation. Use the InnoDB hash table for keeping track of INNOBASE_SHARE objects. struct st_innobase_share: Make table_name const uchar*.  Add the member table_name_hash. innobase_open_tables: Change the type from HASH to hash_table_t*. innobase_get_key(): Remove. innobase_fold_name(): New function, for computing the fold value for the InnoDB hash table. get_share(), free_share(): Use the InnoDB hash functions. innobase_end(): Free innobase_open_tables before shutting down InnoDB. Shutting down InnoDB will invalidate all memory allocated via InnoDB. rb://65 approved by Heikki Tuuri.  This addresses Issue #104. ------------------------------------------------------------------------ r3608 | marko | 2008-12-30 22:45:04 +0200 (Tue, 30 Dec 2008) | 22 lines branches/zip: When setting the PAGE_LEVEL of a compressed B-tree page from or to 0, compress the page at the same time.  This is necessary, because the column information stored on the compressed page will differ between leaf and non-leaf pages.  Leaf pages are identified by PAGE_LEVEL=0.  This bug was reported as Issue #150. Document the similarity between btr_page_create() and btr_page_empty().  Make the function signature of btr_page_empty() identical with btr_page_create().  (This will add the parameter ""level"".) btr_root_raise_and_insert(): Replace some code with a call to btr_page_empty(). btr_attach_half_pages(): Assert that the page level has already been set on both block and new_block.  Do not set it again. btr_discard_only_page_on_level(): Document that this function is probably never called.  Make it work on any height tree.  (Tested on 2-high tree by disabling btr_lift_page_up().) rb://68 ------------------------------------------------------------------------ r3612 | marko | 2009-01-02 11:02:44 +0200 (Fri, 02 Jan 2009) | 14 lines branches/zip: Merge c2998 from branches/6.0, so that the same InnoDB Plugin source tree will work both under 5.1 and 6.0.  Do not add the test case innodb_ctype_ldml.test, because it would not work under MySQL 5.1. Refuse to create tables whose columns contain collation IDs above 255. This removes an assertion failure that was introduced in WL#4164 (Two-byte collation IDs). create_table_def(): Do not fail an assertion if a column contains a charset-collation ID greater than 256. Instead, issue an error and refuse to create the table. The original change (branches/6.0 r2998) was rb://51 approved by Calvin Sun. ------------------------------------------------------------------------ r3613 | inaam | 2009-01-02 15:10:50 +0200 (Fri, 02 Jan 2009) | 6 lines branches/zip: Implement the parameter innodb_use_sys_malloc (false by default), for disabling InnoDB's internal memory allocator and using system malloc/free instead. rb://62 approved by Marko ------------------------------------------------------------------------ r3614 | marko | 2009-01-02 15:55:12 +0200 (Fri, 02 Jan 2009) | 1 line branches/zip: ChangeLog: Document r3608 and r3613. ------------------------------------------------------------------------ r3615 | marko | 2009-01-02 15:57:51 +0200 (Fri, 02 Jan 2009) | 1 line branches/zip: ChangeLog: Clarify the impact of r3608. ------------------------------------------------------------------------ r3616 | marko | 2009-01-03 00:23:30 +0200 (Sat, 03 Jan 2009) | 1 line branches/zip: srv_suspend_mysql_thread(): Add some clarifying comments. ------------------------------------------------------------------------ r3618 | marko | 2009-01-05 12:54:53 +0200 (Mon, 05 Jan 2009) | 15 lines branches/zip: Merge revisions 3598:3601 from branches/5.1: ------------------------------------------------------------------------ r3601 | marko | 2008-12-22 16:05:19 +0200 (Mon, 22 Dec 2008) | 9 lines branches/5.1: Make SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED a true replacement of SET GLOBAL INNODB_LOCKS_UNSAFE_FOR_BINLOG=1. This fixes an error that was introduced in r370, causing semi-consistent read not to not unlock rows in READ COMMITTED mode. (Bug #41671, Issue #146) rb://67 approved by Heikki Tuuri ------------------------------------------------------------------------ ------------------------------------------------------------------------ r3623 | vasil | 2009-01-06 09:56:32 +0200 (Tue, 06 Jan 2009) | 7 lines branches/zip: Add patch to fix the failing main.variables mysql-test. It started failing after the variable innodb_use_sys_malloc was added because it matches '%alloc%' and the test is badly written and expects that no new variables like that will ever be added. ------------------------------------------------------------------------ r3795 | marko | 2009-01-07 16:17:47 +0200 (Wed, 07 Jan 2009) | 7 lines branches/zip: row_merge_tuple_cmp(): Do not report a duplicate key value if any of the fields are NULL.  While the tuples are equal in the sorting order, SQL NULL is defined to be logically inequal to anything else. (Bug #41904) rb://70 approved by Heikki Tuuri ------------------------------------------------------------------------ r3796 | marko | 2009-01-07 16:19:32 +0200 (Wed, 07 Jan 2009) | 1 line branches/zip: Add the tests that were forgotten from r3795. ------------------------------------------------------------------------ r3797 | marko | 2009-01-07 16:22:18 +0200 (Wed, 07 Jan 2009) | 22 lines branches/zip: Do not call trx_allocate_for_mysql() directly, but use helper functions that initialize some members of the transaction struct. (Bug #41680) innobase_trx_init(): New function: initialize some fields of a transaction struct from a MySQL THD object. innobase_trx_allocate(): New function: allocate and initialize a transaction struct. check_trx_exists(): Use the above two functions. ha_innobase::delete_table(), ha_innobase::rename_table(), ha_innobase::add_index(), ha_innobase::final_drop_index(): Use innobase_trx_allocate(). innobase_drop_database(): In the Windows plugin, initialize the trx_t specially, because the THD is not available.  Otherwise, use innobase_trx_allocate(). rb://69 accepted by Heikki Tuuri ------------------------------------------------------------------------ r3798 | marko | 2009-01-07 16:42:42 +0200 (Wed, 07 Jan 2009) | 8 lines branches/zip: row_merge_drop_temp_indexes(): Do not lock the rows of SYS_INDEXES when looking for partially created indexes.  Use the transaction isolation level READ UNCOMMITTED to avoid interfering with locks held by incomplete transactions that will be rolled back in a subsequent step in the recovery.  (Issue #152) Approved by Heikki Tuuri ------------------------------------------------------------------------ r3852 | vasil | 2009-01-08 22:10:10 +0200 (Thu, 08 Jan 2009) | 4 lines branches/zip: Add ChangeLog entries for r3795 r3796 r3797 r3798. ------------------------------------------------------------------------ r3866 | marko | 2009-01-09 15:09:51 +0200 (Fri, 09 Jan 2009) | 2 lines branches/zip: buf_flush_try_page(): Move some common code from each switch case before the switch block. ------------------------------------------------------------------------ r3867 | marko | 2009-01-09 15:13:14 +0200 (Fri, 09 Jan 2009) | 2 lines branches/zip: buf_flush_try_page(): Introduce the variable is_compressed for caching the result of buf_page_get_state(bpage) == BUF_BLOCK_FILE_PAGE. ------------------------------------------------------------------------ r3868 | marko | 2009-01-09 15:40:11 +0200 (Fri, 09 Jan 2009) | 4 lines branches/zip: buf_flush_insert_into_flush_list(), buf_flush_insert_sorted_into_flush_list(): Remove unused code. Change the parameter to buf_block_t* block and assert that block->state == BUF_BLOCK_FILE_PAGE.  This is part of Issue #155. ------------------------------------------------------------------------ r3873 | marko | 2009-01-09 22:27:40 +0200 (Fri, 09 Jan 2009) | 17 lines branches/zip: Some non-functional changes related to Issue #155. buf_page_struct: Note that space and offset are also protected by buf_pool_mutex.  They are only assigned to by buf_block_set_file_page().  Thus, it suffices for buf_flush_batch() to hold just buf_pool_mutex when checking these fields. buf_flush_try_page(): Rename ""locked"" to ""is_s_latched"", per Heikki's request. buf_flush_batch(): Move the common statement mutex_exit(block_mutex) from all if-else if-else branches before the if block.  Remove the redundant test (buf_pool->init_flush[flush_type] == FALSE) that was apparently copied from buf_flush_write_complete(). buf_flush_write_block_low(): Note why it is safe not to hold buf_pool_mutex or block_mutex.  Enumerate the assumptions in debug assertions. ------------------------------------------------------------------------ r3874 | marko | 2009-01-09 23:09:06 +0200 (Fri, 09 Jan 2009) | 4 lines branches/zip: Add comments related to Issue #155. buf_flush_try_page(): Note why it is safe to access bpage without holding buf_pool_mutex or block_mutex. ------------------------------------------------------------------------ r3875 | marko | 2009-01-09 23:15:12 +0200 (Fri, 09 Jan 2009) | 11 lines branches/zip: Non-functional change: Tighten debug assertions and remove dead code. buf_flush_ready_for_flush(), buf_flush_try_page(): Assert that flush_type is one of BUF_FLUSH_LRU or BUF_FLUSH_LIST.  The flush_type comes from buf_flush_batch(), which already asserts this.  The assertion holds for all calls in the source code. buf_flush_try_page(): Remove the dead case BUF_FLUSH_SINGLE_PAGE of switch (flush_type). ------------------------------------------------------------------------ r3879 | marko | 2009-01-12 12:46:44 +0200 (Mon, 12 Jan 2009) | 14 lines branches/zip: Simplify the flushing of dirty pages from the buffer pool. buf_flush_try_page(): Rename to buf_flush_page(), and change the return type to void.  Replace the parameters space, offset with bpage, and remove the second page hash lookup.  Note and assert that both buf_pool_mutex and block_mutex must now be held upon entering the function.  They will still be released by this function. buf_flush_try_neighbors(): Replace buf_flush_try_page() with buf_flush_page().  Make the logic easier to follow by not negating the precondition of buf_flush_page(). rb://73 approved by Sunny Bains.  This is related to Issue #157. ------------------------------------------------------------------------ r3880 | marko | 2009-01-12 13:24:37 +0200 (Mon, 12 Jan 2009) | 2 lines branches/zip: buf_flush_page(): Fix a comment that should have been fixed in r3879.  Spotted by Sunny. ------------------------------------------------------------------------ r3881 | marko | 2009-01-12 14:25:22 +0200 (Mon, 12 Jan 2009) | 2 lines branches/zip: buf_page_get_newest_modification(): Use the block mutex instead of the buffer pool mutex.  This is related to Issue #157. ------------------------------------------------------------------------ r3882 | marko | 2009-01-12 14:40:08 +0200 (Mon, 12 Jan 2009) | 3 lines branches/zip: struct mtr_struct: Remove the unused field magic_n unless UNIV_DEBUG is defined.  mtr->magic_n is only assigned to and checked in UNIV_DEBUG builds. ------------------------------------------------------------------------ r3883 | marko | 2009-01-12 14:48:59 +0200 (Mon, 12 Jan 2009) | 1 line branches/zip: Non-functional change: Use ut_d when assigning to mtr->state. ------------------------------------------------------------------------ r3884 | marko | 2009-01-12 18:56:11 +0200 (Mon, 12 Jan 2009) | 16 lines branches/zip: Non-functional change: Add some debug assertions and comments. buf_page_t: Note that the LRU fields are protected by buf_pool_mutex only, not block->mutex or buf_pool_zip_mutex. buf_page_get_freed_page_clock(): Note that this is sometimes invoked without mutex protection. buf_pool_get_oldest_modification(): Note that the result may be out of date. buf_page_get_LRU_position(), buf_page_is_old(): Assert that the buffer pool mutex is being held. buf_page_release(): Assert that dirty blocks are in the flush list. ------------------------------------------------------------------------ r3896 | marko | 2009-01-13 09:30:26 +0200 (Tue, 13 Jan 2009) | 2 lines branches/zip: buf_flush_try_neighbors(): Fix a bug that was introduced in r3879 (rb://73). ------------------------------------------------------------------------ r3900 | marko | 2009-01-13 10:32:24 +0200 (Tue, 13 Jan 2009) | 1 line branches/zip: Fix some comments to say buf_pool_mutex. ------------------------------------------------------------------------ r3907 | marko | 2009-01-13 11:54:01 +0200 (Tue, 13 Jan 2009) | 3 lines branches/zip: row_merge_create_temporary_table(): On error, row_create_table_for_mysql() already frees new_table. Do not attempt to free it again. ------------------------------------------------------------------------ r3908 | marko | 2009-01-13 12:34:32 +0200 (Tue, 13 Jan 2009) | 1 line branches/zip: Enable HASH_ASSERT_OWNED independently of UNIV_SYNC_DEBUG. ------------------------------------------------------------------------ r3914 | marko | 2009-01-13 21:46:22 +0200 (Tue, 13 Jan 2009) | 37 lines branches/zip: In hash table lookups, assert that the traversed items satisfy some conditions when UNIV_DEBUG is defined. HASH_SEARCH(): New parameter: ASSERTION. All users will pass an appropriate ut_ad() or nothing. dict_table_add_to_columns(): Assert that the table being added to the data dictionary cache is not already being pointed to by the name_hash and id_hash tables. HASH_SEARCH_ALL(): New macro, for use in dict_table_add_to_columns(). dict_mem_table_free(): Set ut_d(table->cached = FALSE), so that we can check ut_ad(table->cached) when traversing the hash tables, as in HASH_SEARCH(name_hash, dict_sys->table_hash, ...) and HASH_SEARCH(id_hash, dict_sys->table_id_hash, ...). dict_table_get_low(), dict_table_get_on_id_low(): Assert ut_ad(!table || table->cached). fil_space_get_by_id(): Check ut_ad(space->magic_n == FIL_SPACE_MAGIC_N) in HASH_SEARCH(hash, fil_system->spaces, ...). fil_space_get_by_name(): Check ut_ad(space->magic_n == FIL_SPACE_MAGIC_N) in HASH_SEARCH(name_hash, fil_system->name_hash, ...). buf_buddy_block_free(): Check that the blocks are in valid state in HASH_SEARCH(hash, buf_pool->zip_hash, ...). buf_page_hash_get(): Check that the blocks are in valid state in HASH_SEARCH(hash, buf_pool->page_hash, ...). get_share(), free_share(): Check ut_ad(share->use_count > 0) in HASH_SEARCH(table_name_hash, innobase_open_tables, ...). This was posted as rb://75 for tracking down errors similar to Issue #153. ------------------------------------------------------------------------ r3931 | marko | 2009-01-14 16:06:22 +0200 (Wed, 14 Jan 2009) | 26 lines branches/zip: Merge revisions 3601:3930 from branches/5.1: ------------------------------------------------------------------------ r3911 | sunny | 2009-01-13 14:15:24 +0200 (Tue, 13 Jan 2009) | 13 lines branches/5.1: Fix Bug#38187 Error 153 when creating savepoints InnoDB previously treated savepoints as a stack e.g., SAVEPOINT a; SAVEPOINT b; SAVEPOINT c; SAVEPOINT b; <- This would delete b and c. This fix changes the behavior to: SAVEPOINT a; SAVEPOINT b; SAVEPOINT c; SAVEPOINT b; <- Does not delete savepoint c ------------------------------------------------------------------------ r3930 | marko | 2009-01-14 15:51:30 +0200 (Wed, 14 Jan 2009) | 4 lines branches/5.1: dict_load_table(): If dict_load_indexes() fails, invoke dict_table_remove_from_cache() instead of dict_mem_table_free(), so that the data dictionary will not point to freed data. (Bug #42075, Issue #153, rb://76 approved by Heikki Tuuri) ------------------------------------------------------------------------ ------------------------------------------------------------------------ "	23151f3db8d233804f3512a452dc3856adfce1fa
----------------------------
Fix Bug#32831: libmysql should be built with all charsets Add #define HAVE_CHARSET_name in config-win.h for all character sets that MySQL supports.  Add comments to config/ac-macros/character_sets.m4 and config-win.h so hopefully they will be updated in sync. 	8c23b07a9a6489329885b2c57cea5cf6d13ddae3
----------------------------
Applying InnoDB snapshot innodb-5.1-ss3603 Detailed description of changes: r3601 | marko | 2008-12-22 16:05:19 +0200 (Mon, 22 Dec 2008) | 9 lines branches/5.1: Make SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED a true replacement of SET GLOBAL INNODB_LOCKS_UNSAFE_FOR_BINLOG=1. This fixes an error that was introduced in r370, causing semi-consistent read not to not unlock rows in READ UNCOMMITTED mode. (Bug #41671, Issue #146) rb://67 approved by Heikki Tuuri 	5d8c3529ec7e65e0e4683a01b53842e8482f6f21
----------------------------
"Tool fix, needed for ""compile-dist"" to succeed on Solaris: The default ""awk"" there cannot handle some of the scripts which are used by BDB for configuration. The fix: 1) Introduce a variable ""AWK"" in some of the BDB shell scripts, 2) search ""gawk"" and give it precedence over ""awk"" when assigning a value to the ""AWK"" variable, fail if neither is found, 3) use that variable when calling an ""awk"" program with one of the critical scripts. The perfect solution would be to use the ""awk"" program found by ""configure"", but we cannot follow that approach because BDB's configuration is handled as a special case before the overall ""configure"" is run. Because of this, 1) the ""configure"" result isn't yet available, 2) ""configure"" will not handle these BDB files. Searching ""gawk"" is a (not-so-nice) way out. Note that all this need not be perfectly portable, it is needed only when we create a source distribution tarball from a develkopment tree. "	b72506881b56e804e9fb36ed0e83940a54fc59ab
----------------------------
Applying InnoDB snapshot innodb-5.1-ss3603 Detailed description of changes: r3257 | inaam | 2008-11-24 22:06:50 +0200 (Mon, 24 Nov 2008) | 13 lines branches/5.1 bug#40760 The config param innodb_thread_concurrency is dynamically set and is read when a thread enters/exits innodb. If the value is changed between the enter and exit time the behaviour becomes erratic. The fix is not to use srv_thread_concurrency when exiting, instead use the flag trx->declared_to_be_inside_innodb. rb://57 Approved by: Marko 	c36cf42f055d38981e8bd584d283d777189ee105
----------------------------
"Applying InnoDB snapshot innodb-5.1-ss3603 Detailed description of changes: r2902 | vasil | 2008-10-28 12:10:25 +0200 (Tue, 28 Oct 2008) | 10 lines branches/5.1: Fix Bug#38189 innodb_stats_on_metadata missing Make the variable innodb_stats_on_metadata visible to the users and also settable at runtime. Previously it was only ""visible"" as a command line startup option to mysqld. Approved by:	Marko (https://svn.innodb.com/rb/r/36) "	ab216c8721b5a8f4bb7c2da4c800a9352304af51
----------------------------
"Backport of a 5.0.74 fix into 5.0.72sp1: Remove bashisms from BUILD/compile-dist and configure.in, so Bootstrap works on Solaris box; - force GNU make in compile-dist; - remove unportable ""grep -q"" from configure.in Original changeset: revision-id: build@mysql.com-20081203041148-icwscut3bk09ds47 parent: kgeorge@mysql.com-20081202125040-eiu6s7bk6s96s4xh author: timothy.smith@sun.com committer: MySQL Build Team <build@mysql.com> branch nick: mysql-5.0.74-release timestamp: Wed 2008-12-03 05:11:48 +0100 "	cafe06c29a86f0a8aa1d3e6d8628043f7c67506f
----------------------------
WL#4350 - Copy dynamic ports from old to new config when config changes. The dynamic ports are kept in the local config of MgmtSrvr and are thus never written to disk. 	c690f1860fb76f29cf1fc4f6de024878d11d49e4
----------------------------
bug#41828: mysql_install_db misses mysqld options when using --basedir * pass --languages to mysqld when using --basedir * improve error messages when unable to find files in basedir 	240baba269f4abf6e472cd0170ca09acb8d0ff08
----------------------------
branches/zip: Add patch to fix the failing main.variables mysql-test. It started failing after the variable innodb_use_sys_malloc was added because it matches '%alloc%' and the test is badly written and expects that no new variables like that will ever be added. 	881759bacb0ec4f16dd94e8a8dd95747cf3bbf78
----------------------------
branches/zip: Merge revisions 3598:3601 from branches/5.1: ------------------------------------------------------------------------ r3601 | marko | 2008-12-22 16:05:19 +0200 (Mon, 22 Dec 2008) | 9 lines branches/5.1: Make SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED a true replacement of SET GLOBAL INNODB_LOCKS_UNSAFE_FOR_BINLOG=1. This fixes an error that was introduced in r370, causing semi-consistent read not to not unlock rows in READ COMMITTED mode. (Bug #41671, Issue #146) rb://67 approved by Heikki Tuuri ------------------------------------------------------------------------ 	6c9b61690a962dd4d63f4c83ea3baa2fc70fcf74
----------------------------
branches/zip: Implement the parameter innodb_use_sys_malloc (false by default), for disabling InnoDB's internal memory allocator and using system malloc/free instead. rb://62 approved by Marko 	09a089ecf888f15e4c12704c03e721fae4949547
----------------------------
correct testcase because of config change 	877c9ecea9969ee77e81adaf308423fbf87b3d58
----------------------------
branches/5.1: Make SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED a true replacement of SET GLOBAL INNODB_LOCKS_UNSAFE_FOR_BINLOG=1. This fixes an error that was introduced in r370, causing semi-consistent read not to not unlock rows in READ COMMITTED mode. (Bug #41671, Issue #146) rb://67 approved by Heikki Tuuri 	d32440100b060e4f785083a978c6e1986c4ad1c1
----------------------------
Bug#38934 slave slave until does not work with --replicate-same-server-id Bug#38540 rpl_server_id2 uses show slave status unnecessarily Slave did not perform any event recorded into the relay log from some different master when it was started with --replicate-same-server-id. The reason appeared to be a consequence of BUG#38734 which stopped the sql thread at its startup time. The real fixes for the current bug are in the patch for BUG#38734. This changeset carries only a regression test for the bugs.  Bug#38540 gets fixed too by means of eliminating an extra show slave status. 	04d72f8682ea8f18b5edf9e8cc7d05470897e1fe
----------------------------
"WL#4350 return ""true"" from change_config instead of 0 "	e99d1311b9886827d4ebff52c67bcd09c8d863bb
----------------------------
Bug#36312: InnoDB DATA_FREE BUG? Problem is that DATA_FREE in SHOW TABLE STATUS is not correct when not using innodb_file_per_table. The solution is to use I_S.PARTITIONS instead. This is only a small fix for correcting mean record length and always return 0 if the table is empty. 	4effc0bc9a28ef7bd0065f22f6d8468e70ab4aaf
----------------------------
Bug #41601  ndb_log_orig can result in wrong orig_epoch and orig_server_id in ndb_binlog_ind 	b697260fae40c084d5355a4544195e8a23895df2
----------------------------
WL#4350 consistent configuration - extend test program - fix error messages 	df75cc94901b1822175210b1bae29fc78fa0a298
----------------------------
"Fix (preliminary?) for Bug#41502 - MTR v2 should not load plugins during server bootstrap. Adding --loose-skip-falcon option to the mysqld options provided by MTR (v2) during mysqld bootstrap in order to avoid plugin (in this case Falcon) initialization of static variables etc. Options --loose-skip-innodb and --loose-skip-ndbcluster were already included. This will fix Bug#41014 (falcon_bug_39708 fails in pushbuild in 6.0-rpl: ""succeeded - should have failed"") in the case of MTR v2 (which currently is available in -rpl branches only). MTR v1 (e.g. in main 6.0 branch) does not have this problem. It would be more ideal to remove the --loose-skip-* options and provide a single option disabling all plugin initialization instead, or have bootstrap do this by default. Server modifications are (most likely) needed to be able to do that. "	b4781e30725b1b469267abf001c838f0863d0436
----------------------------
WL#4350 Extend Config class 	c4fe37ad9e6cc0de4c8a8a082d3ddd11a46caf4c
----------------------------
WL#4350 change config error messages 	b428a3073b2f47a4afbcea972655ead76eb87af6
----------------------------
WL#4350 Add detection of previously failed config change 	c1d1fb83d3cb6cff3da4b437abb70b7680f22800
----------------------------
WL#4350 - add show config 	0dd1ea1ba03140e6d87785a916483c8e9cde0b3b
----------------------------
Merge: c7d03ca ff1161e Bug #31983 Running mysql-test from RPM fails for NDB Adds $glob_basedir/sbin to search path when needed 	60a2e4a90c3cd1d676e932f6331716543b86cbd2
----------------------------
Apply InnoDB snapshot innodb-5.1-ss2858, part 1.  Fixes Bug #35498: Cannot get table test/table1 auto-inccounter value in ::info Detailed revison comments: r2702 | sunny | 2008-09-30 11:41:56 +0300 (Tue, 30 Sep 2008) | 13 lines branches/5.1: Since handler::get_auto_increment() doesn't allow us to return the cause of failure we have to inform MySQL using the sql_print_warning() function to return the cause for autoinc failure. Previously we simply printed the error code, this patch prints the text string representing the following two error codes: DB_LOCK_WAIT_TIMEOUT DB_DEADLOCK. Bug#35498 Cannot get table test/table1 auto-inccounter value in ::info Approved by Marko. 	e4591eb25b6ad5b0a3a571c3e415df049a8e37f0
----------------------------
"Complete applying InnoDB snapshot innodb-5.1-ss2479.  Fixes Bug #11894: innodb_file_per_table crashes w/ Windows .sym symbolic link hack Detailed revision comments: r2466 | calvin | 2008-05-20 01:37:14 +0300 (Tue, 20 May 2008) | 12 lines branches/5.1: Fix Bug#11894 innodb_file_per_table crashes w/ Windows .sym symbolic link hack The crash was due to un-handled error 3 (path not found). In the case of file per table, change the call to os_file_handle_error_no_exit() from os_file_handle_error(). Also, checks for full path pattern during table create (Windows only), which is used in symbolic link and temp table creation. Approved by:	Heikki "	63a5c5708e7b3c072584f76fc48589b1b48f705e
----------------------------
"Completing snapshot innodb-5.1-ss2438, part 3. Changes to plug.in structure, some INNODB_CFLAGS improvements for better maintenance, and some comments and whitespace changes. Detailed revision comments: r2433 | vasil | 2008-04-30 12:02:35 +0300 (Wed, 30 Apr 2008) | 5 lines branches/5.1: Add vim modeline to hint it that plug.in is a config file so it can be colorized. r2429 | vasil | 2008-04-30 11:19:06 +0300 (Wed, 30 Apr 2008) | 10 lines branches/5.1: * Use INNODB_CFLAGS insead of cluttering CFLAGS with InnoDB specific flags. CFLAGS are used to compile every file in the MySQL source tree. * Add INNODB_DYNAMIC_CFLAGS to the flags of the dynamic plugin and use -prefer-non-pic to make the dynamic plugin faster on i386. Approved by:	Sunny r2430 | vasil | 2008-04-30 11:48:35 +0300 (Wed, 30 Apr 2008) | 8 lines branches/5.1: Use CFLAGS instead of INNODB_CFLAGS to avoid having incompatible flags inserted in CFLAGS and INNODB_CFLAGS and to avoid compiling mysql and innodb with different flags. Discussed with:	Sunny r2431 | vasil | 2008-04-30 11:54:49 +0300 (Wed, 30 Apr 2008) | 4 lines branches/5.1: Fix r2430, it should be CFLAGS=""$CFLAGS ..."" not CFLAGS=""..."" r2432 | vasil | 2008-04-30 11:58:38 +0300 (Wed, 30 Apr 2008) | 4 lines branches/5.1: Non-functional change: use tabs for indentation in plug.in. r2436 | vasil | 2008-04-30 19:15:46 +0300 (Wed, 30 Apr 2008) | 7 lines branches/5.1: Non-functional white space change in Makefile.am: Use tabs for indentation and be consistent about spaces around the equal sign. "	4e7bc33e0b8964c51c91b667baef87a4884b10f5
----------------------------
Introduced a new timer based innodb thread concurrency. A new parameter innodb_thread_concurrency_timer_based is used to get this new feature (it is set by default). The new feature is only available on platforms where atomic instructions are available. 	625b7a00e9b09b428753a35d21cfda78c31ca18e
----------------------------
Bug #31983 Running mysql-test from RPM fails for NDB Added $glob_basedir/sbin to search path for relevant binaries 	ff1161eb585aab4662834ced18ffaddb2ff2ffd8
----------------------------
branches/zip: Clean up the insert buffer subsystem. Originally, there were provisions in InnoDB for multiple insert buffer B-trees, apparently one for each tablespace. When Heikki implemented innodb_file_per_table (multiple InnoDB tablespaces) in MySQL 4.1, he made the insert buffer live only in the system tablespace (space 0) but left the provisions in the code. When Osku Salerma implemented delete buffering, he also cleaned up the insert buffer subsystem so that only one insert buffer B-tree exists. This patch applies the clean-up to the InnoDB Plugin. Having a separate patch of the insert buffer clean-up should help us better compare the essential changes of the InnoDB Plugin and InnoDB+ and to track down bugs that are specific to InnoDB+. IBUF_SPACE_ID: New constant, defined as 0. ibuf_data_t: Remove. ibuf_t: Add the applicable fields from ibuf_data_t.  There is only one insert buffer tree from now on. ibuf_page_low(), ibuf_page(): Merge to a single function ibuf_page(). fil_space_t: Remove ibuf_data. fil_space_get_ibuf_data(): Remove.  There is only one ibuf_data, for space IBUF_SPACE_ID. fil_ibuf_init_at_db_start(): Remove. ibuf_init_at_db_start(): Fuse with ibuf_data_init_for_space(). ibuf_validate_low(): Remove.  There is only one ibuf tree. ibuf_free_excess_pages(), ibuf_header_page_get(), ibuf_free_excess_pages(): Remove the parameter space, which was always 0. ibuf_tree_root_get(): Remove the parameters space and data.  There is only one ibuf tree, for space IBUF_SPACE_ID. ibuf_data_sizes_update(): Rename to ibuf_size_update(), and remove the parameter data.  There is only one ibuf data struct. ibuf_build_entry_pre_4_1_x(): New function, refactored from ibuf_build_entry_from_ibuf_rec(). ibuf_data_enough_free_for_insert(), ibuf_data_too_much_free(): Remove the parameter data.  There is only one insert buffer tree. ibuf_add_free_page(), ibuf_remove_free_page(): Remove the parameters space and data.  There is only one insert buffer tree. ibuf_get_merge_page_nos(): Add parenthesis, to reduce diffs to branches/innodb+. ibuf_contract_ext(): Do not pick an insert buffer tree at random. There is only one. ibuf_print(): Print the single insert buffer tree. rb://19 approved by Heikki on IM 	d32ffdd1a3a67a15b1d586536a4ba65c93463404
----------------------------
Bug #41383 Test commit1_innodb fails with binlog-format=row The test explicitly warned on existence of a bug in its 27th part. The expected values of prepare and commit counters changed, corrected, by fixes to bug#40221. Notice, that binlog does not have to register for a statement with the statement binlog-format because the statement rollback does not need to do anything in that mode. It's not so with the ROW format which was bug#40221 concern. Fixed with correcting the expected values of the mentioned counters and explained that with comments in the test. 	2b761ffde93fe951eb884c796d8f8232e78723f0
----------------------------
"branches/innodb+: Merge revisions 3459:3498 from branches/zip: ------------------------------------------------------------------------ r3459 | vasil | 2008-12-09 11:49:03 +0200 (Tue, 09 Dec 2008) | 152 lines branches/zip: Merge 2929:3458 from branches/5.1 (resolving conflict in c3257, note also that r3363 reverted r2933 so there are not changes in mysql-test/innodb-autoinc.result with the current merge): ------------------------------------------------------------------------ r2933 | calvin | 2008-10-30 02:57:31 +0200 (Thu, 30 Oct 2008) | 10 lines Changed paths: M /branches/5.1/mysql-test/innodb-autoinc.result branches/5.1: correct the result file innodb-autoinc.result Change the followings: auto_increment_increment auto_increment_offset to auto-increment-increment auto-increment-offset ------------------------------------------------------------------------ r2981 | marko | 2008-11-07 14:54:10 +0200 (Fri, 07 Nov 2008) | 5 lines Changed paths: M /branches/5.1/row/row0mysql.c branches/5.0: row_mysql_store_col_in_innobase_format(): Correct a misleading comment. In the UTF-8 encoding, ASCII takes 1 byte per character, while the ""latin1"" character set (normally ISO-8859-1, but in MySQL it actually refers to the Windows Code Page 1252 a.k.a. CP1252, WinLatin1) takes 1 to 3 bytes (1 to 2 bytes for the ISO-8859-1 subset). ------------------------------------------------------------------------ r3114 | calvin | 2008-11-14 20:31:48 +0200 (Fri, 14 Nov 2008) | 8 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: fix bug#40386: Not flushing query cache after truncate ha_statistics.records can not be 0 unless the table is empty, set to 1 instead. The original problem of bug#29507 is fixed in the server. Additional test was done with the fix of bug#29507 in the server. Approved by: Heikki (on IM) ------------------------------------------------------------------------ r3257 | inaam | 2008-11-24 22:06:50 +0200 (Mon, 24 Nov 2008) | 13 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/srv/srv0srv.c M /branches/5.1/trx/trx0trx.c branches/5.1 bug#40760 The config param innodb_thread_concurrency is dynamically set and is read when a thread enters/exits innodb. If the value is changed between the enter and exit time the behaviour becomes erratic. The fix is not to use srv_thread_concurrency when exiting, instead use the flag trx->declared_to_be_inside_innodb. rb://57 Approved by: Marko ------------------------------------------------------------------------ r3363 | calvin | 2008-12-04 19:00:20 +0200 (Thu, 04 Dec 2008) | 13 lines Changed paths: M /branches/5.1/mysql-test/innodb-autoinc.result branches/5.1: revert the changes in r2933 The changes in r2933 causes test failure on Linux. More investigation is needed for Windows. Change the followings in innodb-autoinc.result: auto-increment-increment auto-increment-offset back to: auto_increment_increment auto_increment_offset ------------------------------------------------------------------------ r3412 | vasil | 2008-12-05 10:46:18 +0200 (Fri, 05 Dec 2008) | 7 lines Changed paths: M /branches/5.1/trx/trx0undo.c branches/5.1: Add the traditional 2 spaces after the timestamp so the message does not look like: 070223 13:26:01InnoDB: Warning: canno.... ------------------------------------------------------------------------ r3458 | vasil | 2008-12-09 11:21:08 +0200 (Tue, 09 Dec 2008) | 51 lines Changed paths: M /branches/5.1/mysql-test/innodb_bug34300.test branches/5.1: Merge a change from MySQL to fix the failing innodb_bug34300 mysql-test: main.innodb_bug34300           [ fail ] mysqltest: At line 11: query 'SET @@max_allowed_packet=16777216' failed: 1621: SESSION variable 'max_allowed_packet' is read-only. Use SET GLOBAL to assign the value Aborting: main.innodb_bug34300 failed in default mode. The changeset is this: ------------------------------------------------------------ revno: 2709.1.10 committer: Staale Smedseng <staale.smedseng@sun.com> branch nick: b22891-51-bugteam timestamp: Thu 2008-11-20 08:51:48 +0100 message: A fix for Bug#22891 ""session level max_allowed_packet can be set but is ignored"". This patch makes @@session.max_allowed_packed and @@session.net_buffer_length read-only as suggested in the bug report. The user will have to use SET GLOBAL (and reconnect) to alter the session values of these variables. The error string ER_VARIABLE_IS_READONLY is introduced. Tests are modified accordingly. modified: mysql-test/r/func_compress.result mysql-test/r/max_allowed_packet_basic.result mysql-test/r/max_allowed_packet_func.result mysql-test/r/net_buffer_length_basic.result mysql-test/r/packet.result mysql-test/r/union.result mysql-test/r/variables.result mysql-test/t/func_compress.test mysql-test/t/innodb_bug34300.test mysql-test/t/max_allowed_packet_basic.test mysql-test/t/max_allowed_packet_func.test mysql-test/t/net_buffer_length_basic.test mysql-test/t/packet.test mysql-test/t/union.test mysql-test/t/variables.test sql/set_var.cc sql/set_var.h sql/share/errmsg.txt ------------------------------------------------------------ ------------------------------------------------------------------------ ------------------------------------------------------------------------ r3480 | calvin | 2008-12-10 23:56:00 +0200 (Wed, 10 Dec 2008) | 11 lines branches/zip: Merge r3458:3479 from branches/5.1: ------------------------------------------------------------------------ r3479 | calvin | 2008-12-10 15:30:05 -0600 (Wed, 10 Dec 2008) | 4 lines branches/5.1: change .result file eol-style to LF mysql-test-run only takes LF style even on Windows. ------------------------------------------------------------------------ ------------------------------------------------------------------------ r3481 | calvin | 2008-12-11 00:01:20 +0200 (Thu, 11 Dec 2008) | 4 lines branches/zip: change diff and result files eol-style to LF The patch utility takes LF style diff, and mysql-test-run also only takes LF style, even on Windows. ------------------------------------------------------------------------ r3482 | calvin | 2008-12-11 00:19:07 +0200 (Thu, 11 Dec 2008) | 9 lines branches/zip: fix Mantis issue #138 InnoDB fails if innodb_buffer_pool_size >= 4096M on x64 Windows All three srv_buf_pool related variables are defined as ulong, which is 32-bit on 64-bit Windows. They are changed to 64-bit ulint. Also system_info.dwPageSize appears to be 32-bit only. Casting to 64-bit is required. Approved by:    Marko (on IM) ------------------------------------------------------------------------ r3498 | marko | 2008-12-11 17:08:14 +0200 (Thu, 11 Dec 2008) | 6 lines branches/zip: ibuf_merge_or_delete_for_page(): Restore the seemingly redundant checks for ibuf_fixed_addr_page() || fsp_descr_page() that were removed in r3432, and add a comment explaining why. Thanks to Michael for reporting this bug. ------------------------------------------------------------------------ "	d681f5b9671df4f59914f4659d5eafc9423960ea
----------------------------
configdir 	0a922c8500b950a1427fca8c1cf40b8fbb4dcd6d
----------------------------
"branches/zip: fix Mantis issue #138 InnoDB fails if innodb_buffer_pool_size >= 4096M on x64 Windows All three srv_buf_pool related variables are defined as ulong, which is 32-bit on 64-bit Windows. They are changed to 64-bit ulint. Also system_info.dwPageSize appears to be 32-bit only. Casting to 64-bit is required. Approved by:	Marko (on IM) "	cb876f88dfe5c7ba1459551a0e837a2c2d97b608
----------------------------
WL#4350 move initialization of default value for configdir from getopt 	40ef7d962990546025b5b38b520e911f7835ac83
----------------------------
"branches/innodb+: Merge revisions 3312:3459 from branches/zip: ------------------------------------------------------------------------ r3328 | marko | 2008-12-02 10:16:05 +0200 (Tue, 02 Dec 2008) | 7 lines branches/zip: page_cur_insert_rec_zip(): When allocating insert_buf from the free list, zero out the DB_TRX_ID and DB_ROLL_PTR of the deleted record if the new record would not overwrite these fields. This fixes a harmless content mismatch reported by page_zip_validate() that was reported as Issue #111. rb://55 approved by Sunny Bains. ------------------------------------------------------------------------ r3329 | vasil | 2008-12-02 12:03:17 +0200 (Tue, 02 Dec 2008) | 4 lines branches/zip: Add entry in the ChangeLog for the release of 1.0.2. ------------------------------------------------------------------------ r3331 | vasil | 2008-12-02 12:09:20 +0200 (Tue, 02 Dec 2008) | 5 lines branches/zip: Remove an entry from the ChnageLog for a change that was made before the release of 1.0.2 but was not included in that release. ------------------------------------------------------------------------ r3333 | vasil | 2008-12-02 12:11:54 +0200 (Tue, 02 Dec 2008) | 4 lines branches/zip: Now that 1.0.2 is out, the current tree is version 1.0.3. ------------------------------------------------------------------------ r3336 | vasil | 2008-12-02 13:34:36 +0200 (Tue, 02 Dec 2008) | 5 lines branches/zip: Resurrect a ChangeLog entry that I removed in c3331 with a fake date so it does not appear that it has been included in 1.0.2. ------------------------------------------------------------------------ r3361 | vasil | 2008-12-04 18:10:08 +0200 (Thu, 04 Dec 2008) | 9 lines branches/zip: Fix Mantis issue#103 mysql_addons.c depends on THD internals - please remove it Use MySQL's thd_get_thread_id() instead of our own ib_thd_get_thread_id() since MySQL implemented the former, see http://bugs.mysql.com/30930. Approved by:    Marko (https://svn.innodb.com/rb/r/40, rb://40) ------------------------------------------------------------------------ r3362 | vasil | 2008-12-04 18:49:24 +0200 (Thu, 04 Dec 2008) | 15 lines branches/zip: Revert our temporary fix for Bug#40360 Binlog related errors with binlog off This bug was fixed in MySQL code. Our fix went into r2944 and r2947, but this patch does not entirely revert those revisions because we want to leave the test case that was introduced and also r2944 itself reverted r2935 and r2936. So if we completely revert r2944 and r2947 then we would loose the test and will restore r2935 and r2936. This resolves Issue#108 We should remove ib_bin_log_is_engaged() once mysql add an equivallent, see Bug#40360 ------------------------------------------------------------------------ r3404 | marko | 2008-12-05 10:02:54 +0200 (Fri, 05 Dec 2008) | 5 lines branches/zip: row_undo_mod_del_mark_or_remove_sec_low(): Do not complain if the record is not found.  Explain that this is possible when a deadlock occurs during an update.  Heikki investigated this in Issue #134. ------------------------------------------------------------------------ r3432 | marko | 2008-12-08 14:14:01 +0200 (Mon, 08 Dec 2008) | 4 lines branches/zip: ibuf_merge_or_delete_for_page(): Remove the redundant checks for ibuf_fixed_addr_page() || fsp_descr_page().  The one at the beginning of the function is enough. ------------------------------------------------------------------------ r3456 | marko | 2008-12-09 10:31:26 +0200 (Tue, 09 Dec 2008) | 3 lines branches/zip: row_purge_remove_sec_if_poss_low(): Allocate mtr_vers from the stack, not with mem_alloc(). ------------------------------------------------------------------------ r3459 | vasil | 2008-12-09 11:49:03 +0200 (Tue, 09 Dec 2008) | 152 lines branches/zip: Merge 2929:3458 from branches/5.1 (resolving conflict in c3257, note also that r3363 reverted r2933 so there are not changes in mysql-test/innodb-autoinc.result with the current merge): ------------------------------------------------------------------------ r2933 | calvin | 2008-10-30 02:57:31 +0200 (Thu, 30 Oct 2008) | 10 lines Changed paths: M /branches/5.1/mysql-test/innodb-autoinc.result branches/5.1: correct the result file innodb-autoinc.result Change the followings: auto_increment_increment auto_increment_offset to auto-increment-increment auto-increment-offset ------------------------------------------------------------------------ r2981 | marko | 2008-11-07 14:54:10 +0200 (Fri, 07 Nov 2008) | 5 lines Changed paths: M /branches/5.1/row/row0mysql.c branches/5.0: row_mysql_store_col_in_innobase_format(): Correct a misleading comment. In the UTF-8 encoding, ASCII takes 1 byte per character, while the ""latin1"" character set (normally ISO-8859-1, but in MySQL it actually refers to the Windows Code Page 1252 a.k.a. CP1252, WinLatin1) takes 1 to 3 bytes (1 to 2 bytes for the ISO-8859-1 subset). ------------------------------------------------------------------------ r3114 | calvin | 2008-11-14 20:31:48 +0200 (Fri, 14 Nov 2008) | 8 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: fix bug#40386: Not flushing query cache after truncate ha_statistics.records can not be 0 unless the table is empty, set to 1 instead. The original problem of bug#29507 is fixed in the server. Additional test was done with the fix of bug#29507 in the server. Approved by: Heikki (on IM) ------------------------------------------------------------------------ r3257 | inaam | 2008-11-24 22:06:50 +0200 (Mon, 24 Nov 2008) | 13 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/srv/srv0srv.c M /branches/5.1/trx/trx0trx.c branches/5.1 bug#40760 The config param innodb_thread_concurrency is dynamically set and is read when a thread enters/exits innodb. If the value is changed between the enter and exit time the behaviour becomes erratic. The fix is not to use srv_thread_concurrency when exiting, instead use the flag trx->declared_to_be_inside_innodb. rb://57 Approved by: Marko ------------------------------------------------------------------------ r3363 | calvin | 2008-12-04 19:00:20 +0200 (Thu, 04 Dec 2008) | 13 lines Changed paths: M /branches/5.1/mysql-test/innodb-autoinc.result branches/5.1: revert the changes in r2933 The changes in r2933 causes test failure on Linux. More investigation is needed for Windows. Change the followings in innodb-autoinc.result: auto-increment-increment auto-increment-offset back to: auto_increment_increment auto_increment_offset ------------------------------------------------------------------------ r3412 | vasil | 2008-12-05 10:46:18 +0200 (Fri, 05 Dec 2008) | 7 lines Changed paths: M /branches/5.1/trx/trx0undo.c branches/5.1: Add the traditional 2 spaces after the timestamp so the message does not look like: 070223 13:26:01InnoDB: Warning: canno.... ------------------------------------------------------------------------ r3458 | vasil | 2008-12-09 11:21:08 +0200 (Tue, 09 Dec 2008) | 51 lines Changed paths: M /branches/5.1/mysql-test/innodb_bug34300.test branches/5.1: Merge a change from MySQL to fix the failing innodb_bug34300 mysql-test: main.innodb_bug34300           [ fail ] mysqltest: At line 11: query 'SET @@max_allowed_packet=16777216' failed: 1621: SESSION variable 'max_allowed_packet' is read-only. Use SET GLOBAL to assign the value Aborting: main.innodb_bug34300 failed in default mode. The changeset is this: ------------------------------------------------------------ revno: 2709.1.10 committer: Staale Smedseng <staale.smedseng@sun.com> branch nick: b22891-51-bugteam timestamp: Thu 2008-11-20 08:51:48 +0100 message: A fix for Bug#22891 ""session level max_allowed_packet can be set but is ignored"". This patch makes @@session.max_allowed_packed and @@session.net_buffer_length read-only as suggested in the bug report. The user will have to use SET GLOBAL (and reconnect) to alter the session values of these variables. The error string ER_VARIABLE_IS_READONLY is introduced. Tests are modified accordingly. modified: mysql-test/r/func_compress.result mysql-test/r/max_allowed_packet_basic.result mysql-test/r/max_allowed_packet_func.result mysql-test/r/net_buffer_length_basic.result mysql-test/r/packet.result mysql-test/r/union.result mysql-test/r/variables.result mysql-test/t/func_compress.test mysql-test/t/innodb_bug34300.test mysql-test/t/max_allowed_packet_basic.test mysql-test/t/max_allowed_packet_func.test mysql-test/t/net_buffer_length_basic.test mysql-test/t/packet.test mysql-test/t/union.test mysql-test/t/variables.test sql/set_var.cc sql/set_var.h sql/share/errmsg.txt ------------------------------------------------------------ ------------------------------------------------------------------------ ------------------------------------------------------------------------ "	a6dadf36573230f1f8f53ff85b518a6a1a6a778c
----------------------------
"branches/zip: Merge 2929:3458 from branches/5.1 (resolving conflict in c3257, note also that r3363 reverted r2933 so there are not changes in mysql-test/innodb-autoinc.result with the current merge): ------------------------------------------------------------------------ r2933 | calvin | 2008-10-30 02:57:31 +0200 (Thu, 30 Oct 2008) | 10 lines Changed paths: M /branches/5.1/mysql-test/innodb-autoinc.result branches/5.1: correct the result file innodb-autoinc.result Change the followings: auto_increment_increment auto_increment_offset to auto-increment-increment auto-increment-offset ------------------------------------------------------------------------ r2981 | marko | 2008-11-07 14:54:10 +0200 (Fri, 07 Nov 2008) | 5 lines Changed paths: M /branches/5.1/row/row0mysql.c branches/5.0: row_mysql_store_col_in_innobase_format(): Correct a misleading comment. In the UTF-8 encoding, ASCII takes 1 byte per character, while the ""latin1"" character set (normally ISO-8859-1, but in MySQL it actually refers to the Windows Code Page 1252 a.k.a. CP1252, WinLatin1) takes 1 to 3 bytes (1 to 2 bytes for the ISO-8859-1 subset). ------------------------------------------------------------------------ r3114 | calvin | 2008-11-14 20:31:48 +0200 (Fri, 14 Nov 2008) | 8 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: fix bug#40386: Not flushing query cache after truncate ha_statistics.records can not be 0 unless the table is empty, set to 1 instead. The original problem of bug#29507 is fixed in the server. Additional test was done with the fix of bug#29507 in the server. Approved by: Heikki (on IM) ------------------------------------------------------------------------ r3257 | inaam | 2008-11-24 22:06:50 +0200 (Mon, 24 Nov 2008) | 13 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/srv/srv0srv.c M /branches/5.1/trx/trx0trx.c branches/5.1 bug#40760 The config param innodb_thread_concurrency is dynamically set and is read when a thread enters/exits innodb. If the value is changed between the enter and exit time the behaviour becomes erratic. The fix is not to use srv_thread_concurrency when exiting, instead use the flag trx->declared_to_be_inside_innodb. rb://57 Approved by: Marko ------------------------------------------------------------------------ r3363 | calvin | 2008-12-04 19:00:20 +0200 (Thu, 04 Dec 2008) | 13 lines Changed paths: M /branches/5.1/mysql-test/innodb-autoinc.result branches/5.1: revert the changes in r2933 The changes in r2933 causes test failure on Linux. More investigation is needed for Windows. Change the followings in innodb-autoinc.result: auto-increment-increment auto-increment-offset back to: auto_increment_increment auto_increment_offset ------------------------------------------------------------------------ r3412 | vasil | 2008-12-05 10:46:18 +0200 (Fri, 05 Dec 2008) | 7 lines Changed paths: M /branches/5.1/trx/trx0undo.c branches/5.1: Add the traditional 2 spaces after the timestamp so the message does not look like: 070223 13:26:01InnoDB: Warning: canno.... ------------------------------------------------------------------------ r3458 | vasil | 2008-12-09 11:21:08 +0200 (Tue, 09 Dec 2008) | 51 lines Changed paths: M /branches/5.1/mysql-test/innodb_bug34300.test branches/5.1: Merge a change from MySQL to fix the failing innodb_bug34300 mysql-test: main.innodb_bug34300           [ fail ] mysqltest: At line 11: query 'SET @@max_allowed_packet=16777216' failed: 1621: SESSION variable 'max_allowed_packet' is read-only. Use SET GLOBAL to assign the value Aborting: main.innodb_bug34300 failed in default mode. The changeset is this: ------------------------------------------------------------ revno: 2709.1.10 committer: Staale Smedseng <staale.smedseng@sun.com> branch nick: b22891-51-bugteam timestamp: Thu 2008-11-20 08:51:48 +0100 message: A fix for Bug#22891 ""session level max_allowed_packet can be set but is ignored"". This patch makes @@session.max_allowed_packed and @@session.net_buffer_length read-only as suggested in the bug report. The user will have to use SET GLOBAL (and reconnect) to alter the session values of these variables. The error string ER_VARIABLE_IS_READONLY is introduced. Tests are modified accordingly. modified: mysql-test/r/func_compress.result mysql-test/r/max_allowed_packet_basic.result mysql-test/r/max_allowed_packet_func.result mysql-test/r/net_buffer_length_basic.result mysql-test/r/packet.result mysql-test/r/union.result mysql-test/r/variables.result mysql-test/t/func_compress.test mysql-test/t/innodb_bug34300.test mysql-test/t/max_allowed_packet_basic.test mysql-test/t/max_allowed_packet_func.test mysql-test/t/net_buffer_length_basic.test mysql-test/t/packet.test mysql-test/t/union.test mysql-test/t/variables.test sql/set_var.cc sql/set_var.h sql/share/errmsg.txt ------------------------------------------------------------ ------------------------------------------------------------------------ "	7ed448ce95291405fd5df04203d157805dd10b2f
----------------------------
"branches/5.1: Merge a change from MySQL to fix the failing innodb_bug34300 mysql-test: main.innodb_bug34300           [ fail ] mysqltest: At line 11: query 'SET @@max_allowed_packet=16777216' failed: 1621: SESSION variable 'max_allowed_packet' is read-only. Use SET GLOBAL to assign the value Aborting: main.innodb_bug34300 failed in default mode. The changeset is this: ------------------------------------------------------------ revno: 2709.1.10 committer: Staale Smedseng <staale.smedseng@sun.com> branch nick: b22891-51-bugteam timestamp: Thu 2008-11-20 08:51:48 +0100 message: A fix for Bug#22891 ""session level max_allowed_packet can be set but is ignored"". This patch makes @@session.max_allowed_packed and @@session.net_buffer_length read-only as suggested in the bug report. The user will have to use SET GLOBAL (and reconnect) to alter the session values of these variables. The error string ER_VARIABLE_IS_READONLY is introduced. Tests are modified accordingly. modified: mysql-test/r/func_compress.result mysql-test/r/max_allowed_packet_basic.result mysql-test/r/max_allowed_packet_func.result mysql-test/r/net_buffer_length_basic.result mysql-test/r/packet.result mysql-test/r/union.result mysql-test/r/variables.result mysql-test/t/func_compress.test mysql-test/t/innodb_bug34300.test mysql-test/t/max_allowed_packet_basic.test mysql-test/t/max_allowed_packet_func.test mysql-test/t/net_buffer_length_basic.test mysql-test/t/packet.test mysql-test/t/union.test mysql-test/t/variables.test sql/set_var.cc sql/set_var.h sql/share/errmsg.txt ------------------------------------------------------------ "	809a539dce661a9a853a42896566958aa9f8fc33
----------------------------
Added large page support for Solaris Change defaults, now large page support is default if supported Introduced super-large-pages support for Solaris to use 256 MByte page size rather than 4 MByte. 	abae8a2c9c969f98ef72b818e3147cf314fd284b
----------------------------
"Bug#39750 -cannot create temp file on Windows. The problem appears often in conjuction with temp files, when temp-pool is used, so that names of temp files are not unique. The reason is that rapid deletiion and creation of fiiles with the same name on Windows is not guaranteed to succeed. File disappears from the file system only when the last handle to it is closed. If for example  a virus scanner, a backup or indexing  application  opens the  temp file just before MySQL deletes it, the file will enter ""delete pending"" state. In this state,it is not possible to open the file , or create a file with the same name (CreateFile returns  ERROR_ACCESS_DENED, posix open returns EACESS) Fix (rather a cheap workarounf) is not to use temp-pool when working with temporary files- this will make filenames unique. With this patch , temp- pool setting will be ignored on anything but Linux(the option only made sense for Linux since its invention anyway). "	0fc3483b7a260ffa156ed0ac84cd95a96fce2851
----------------------------
Disable wait_timeout_func and report bug #41255. 	cb7b5524f98acf494ef011f044df7c73ca0f73c6
----------------------------
WL#4350 ndb_mgmd --configdir 	85d92d0af849405bf74a7dcde311631385c33de0
----------------------------
Merge: 3059c95 5726574 BUG#38826 Race in MYSQL_LOG::purge_logs is impossible to debug in production BUG#39325 Server crash inside MYSQL_LOG::purge_first_log halts replicaiton The patch reverses the order of the purging and updating events for log and relay-log.info/index files respectively. This solves the problem of having holes caused by crashes happening between updating info/index files and purging logs. This patch also contains an aditional test case for testing the crashing before purge logs. NOTE1: This is a combined patch for BUG#38826 and BUG#39325. This patch is based on bugteam tree and takes into account reviewers suggestions. NOTE2: Merge from 5.0-bugteam 	0c9aaecc7f11faab540869d054adde6de7171cfc
----------------------------
BUG#38826 Race in MYSQL_LOG::purge_logs is impossible to debug in production BUG#39325 Server crash inside MYSQL_LOG::purge_first_log halts replicaiton The patch reverses the order of the purging and updating events for log and relay-log.info/index files respectively. This solves the problem of having holes caused by crashes happening between updating info/index files and purging logs. NOTE: This is a combined patch for BUG#38826 and BUG#39325. This patch is based on bugteam tree and takes into account reviewers suggestions. 	5726574b0c11b90047e326f8b36350c82485519f
----------------------------
"Remove bashisms from BUILD/compile-dist and configure.in, so Bootstrap works on Solaris box; force GNU make in compile-dist; remove unportable ""grep -q"" from configure.in "	3742489c3797b14ac3c4453ef4058b5a87a62442
----------------------------
BUG#41018: innodb_max_dirty_pages_pct_func fails sporadically: error 28 from storage engine BUG#39382: innodb_max_dirty_pages_pct_func failed with timeout on pushbuild Disabled innodb_max_dirty_pages_pct_func. Please re-enable if the test gets fixed. 	ee6c9dda9f6285df1875733454658bc71b67d522
----------------------------
Bug #27294: crash with innodb_locks_unsafe_for_binlog=1 Back-port 5.0 fix to 4.1.  Fix Bug#27294 by using trx returned by check_trx_exists() instead of prebuilt->trx. This has been fixed in 5.1 in r782. 	1f25b600a3fbeab0e09b86b3ada954f8eb7e19ad
----------------------------
Bug #39920: MySQL cannot deal with Leap Second expression in string literal. Updated MySQL time handling code to react correctly on UTC leap second additions. MySQL functions that return the OS current time, like e.g. CURDATE(), NOW() etc will return :59:59 instead of :59:60 or 59:61. As a result the reader will receive :59:59 for 2 or 3 consecutive seconds during the leap second. This fix will not affect the values returned by UNIX_TIMESTAMP() for leap seconds. But note that when converting the value returned by UNIX_TIMESTAMP() to broken down time the correction of leap seconds will still be applied. Note that this fix will make a difference *only* if the OS is specially configured to return leap seconds from the OS time calls or when using a MySQL time zone defintion that has leap seconds. Even after this change date/time literals (or other broken down time representations) with leap seconds (ending on :59:60 or 59:61) will still be considered illegal and discarded by the server with an error or a warning depending on the sql mode. Added a test case to demonstrate the effect of the fix. 	8f36a23c0012d0ac6c369b858d232f26322e2693
----------------------------
- Fix for Bug#40179 Test main.query_cache failing randomly on Pushbuild, test weakness - disable the test suffering from Bug#41098 Query Cache returns wrong result with concurrent insert - additional improvements Details: - Move the test for the historic bug Bug 28249 Query Cache returns wrong result with concurrent insert / certain lock into its own testscript query_cache_28249.test. - query_cache.test: - replace error numbers with error names - remove trailing spaces, replace tabs with spaces - reset of @@global.log_bin_trust_function_creators to its original value at the end of the test - query_cache_28249.test: - replace sleep 5 with poll routine - avoid random differences caused by concurrent_inserts effects - improved comments and formatting 	674f88380ce50bcbbdbfbc47d39208385534aeb8
----------------------------
Bug #37339: SHOW VARIABLES not working properly with multi-byte datadir The SHOW VARIABLES LIKE .../SELECT @@/SELECT ... FROM INFORMATION_SCHEMA.VARIABLES were assuming that all the system variables are in system charset (UTF-8). However the variables that are settable through command line will have a different character set (character_set_filesystem). Fixed the server to remember the correct character set of basedir, datadir, tmpdir, ssl, plugin_dir, slave_load_tmpdir, innodb variables; init_connect and init_slave variables and use it when processing data. 	0708ad5f98b8e931282a325ac9d85422a0d6e32c
----------------------------
Merge: 92607f9 40997e8 ndbconfig mtr tests fix 	cf06d4199c05a55ce3a91c0f9c3eec46cc839f16
----------------------------
fix ndb_config and ndb_config2 tests 	40997e8bfd6f5cb656efc67e4754cc39142029f4
----------------------------
"Bug#32136: mysqld_multi --defaults-file not respected while using \ --mysqld=mysqld_safe The server run didn't know the correct section to read in a configuration file, and would read from ""[mysqld]"" even though mysqld_multi had already read the defaults and made them into explicit parameters. Worse, the ""defaults-file"" parameter says that it means ""Read only this configuration file, do not read the standard system-wide and user-specific files"", which should apply not only to mysql-multi, but to the server also. So, now if ""defaults-file"" is given, put ""no-defaults"" before all the explicit parameters we read from the defaults-file and feed to the mysqld or mysqld_safe. "	0e44a4e94c0ddf2572384ed5daf3e5dc2c37a4e7
----------------------------
Bug#41002 - symlink.test fails on symlinked datadir symlink.test failed when run in an environment that has mysql-test/var symlinked to elsewhere, e.g. a memory file system. This is the case when running mysql-test-run --mem. In this case the server does not detect that the directory specified with a DATA/INDEX DIRECTORY clause is within its data home directory. This problem was reported as Bug#39277 (Creation of table with data and/or index files in data home directory succeeds). It was decided that it will not be fixed in 5.1. Hence, the current behavior is accepted for 5.1. It will be fixed in 6.0 though. Fixed the test case so that it works in both environments. 1. When no symbolic link is involved, the server notices that the data/index directory is in its data hone directory and rejects the CREATE/ALTER TABLE statement. 2. When the data home directory is symlinked, it does not notice the problem and executes the statement sucessfully. 	6673b2849a5780c6c3505037ad9c82ae62e26fc3
----------------------------
"branches/5.1: Fix Bug#40760 ""set global innodb_thread_concurrency = 0;"" is not safe The config param innodb_thread_concurrency is dynamically set and is read when a thread enters/exits innodb. If the value is changed between the enter and exit time the behaviour becomes erratic. The fix is not to use srv_thread_concurrency when exiting, instead use the flag trx->declared_to_be_inside_innodb. rb://57 Approved by: Marko "	9b4f5f6f9f8d383f916d80ef1e125c79a31f5a65
----------------------------
ndb - fix ndb_binlog_restore on case-insensitive filesystems by randomly setting lower_case_table_names=0 	30ed4a5ad4eac92403bc4dbfb80dac04f272a94e
----------------------------
Bug#40634 table scan temporary table is 4x slower due to mmap instead instead of caching mmap is slower that caching indeed. Here the problem is that mmap is used even if --myisam-use-mmap=OFF solved by checking the flag in ha_myisam::extra() as it is called in init_read_record() per-file comments: storage/myisam/ha_myisam.cc Bug#40634 table scan temporary table is 4x slower due to mmap instead instead of caching do nothing for HA_EXTRA_MMAP if no opt_myisam_use_mmap 	21c876001414837aae9c1e3abe6132eaf7fa13e4
----------------------------
"branches/innodb+: Merge revisions 2986:3152 from branches/zip: ------------------------------------------------------------------------ r3036 | marko | 2008-11-12 12:34:30 +0200 (Wed, 12 Nov 2008) | 4 lines branches/zip: dtuple_validate(): When UNIV_DEBUG_VALGRIND is defined, rely solely on the UNIV_MEM_ASSERT_RW() check and disable the for loop that would only cause additional noise. ------------------------------------------------------------------------ r3037 | marko | 2008-11-12 13:52:57 +0200 (Wed, 12 Nov 2008) | 6 lines branches/zip: row_vers_impl_x_locked_off_kernel(): Remove compilation warnings about prev_trx_id and vers_del being possibly uninitialized, by handling the case prev_version == NULL in a single if block. rb://45 approved by Inaam Rana. ------------------------------------------------------------------------ r3131 | michael | 2008-11-17 14:56:56 +0200 (Mon, 17 Nov 2008) | 9 lines branches/zip: rb://53 Improve innodb_supports_xa system variable handling and reduces the number of retrievals of the value from MySQL. Approved by: Marko, over IM ------------------------------------------------------------------------ r3132 | michael | 2008-11-17 16:02:01 +0200 (Mon, 17 Nov 2008) | 5 lines branches/zip: rb://53 Final version of rb://53, fixes the styling of a comment, makes the definition and the declaration of thd_supports_xa() identical commentwise. ------------------------------------------------------------------------ r3141 | marko | 2008-11-19 16:39:55 +0200 (Wed, 19 Nov 2008) | 1 line branches/zip: buf_LRU_free_block(): Clarify the function comment. ------------------------------------------------------------------------ r3144 | marko | 2008-11-20 11:39:49 +0200 (Thu, 20 Nov 2008) | 2 lines branches/zip: rec_get_nth_field_offs_old(): Add UNIV_UNLIKELY hints to assertion-like tests. ------------------------------------------------------------------------ r3145 | marko | 2008-11-20 12:22:40 +0200 (Thu, 20 Nov 2008) | 20 lines branches/zip: Always check for ""row too large"" when executing SQL to create an index or table.  We have to skip this check when loading table definitions from the data dictionary, because we could otherwise refuse to load old tables (even uncompressed ones).  This addresses Issue #119. The first ""row too large"" check was implemented in MySQL 5.0.3 to address MySQL Bug #5682.  In the InnoDB Plugin 1.0.2, a more accurate check was implemented in innodb_strict_mode.  We now make the check unconditional. dict_create_index_step(): Pass strict=TRUE to dict_index_add_to_cache(). trx_is_strict(), thd_is_strict(): Remove. innodb-zip.test: Test in innodb_strict_mode=OFF. innodb_bug36169.test: Ensure that none of the tables can be created. rb://56 approved by Sunny Bains. ------------------------------------------------------------------------ r3148 | marko | 2008-11-20 13:27:27 +0200 (Thu, 20 Nov 2008) | 3 lines branches/zip: rec_print_old(), rec_print_comp(): Dump each field in a separate line, so that the dumps can be read and compared more easily. ------------------------------------------------------------------------ "	f7f408167208cae584dedc0cbb665e1ae7a8a12c
----------------------------
"branches/zip: Always check for ""row too large"" when executing SQL to create an index or table.  We have to skip this check when loading table definitions from the data dictionary, because we could otherwise refuse to load old tables (even uncompressed ones).  This addresses Issue #119. The first ""row too large"" check was implemented in MySQL 5.0.3 to address MySQL Bug #5682.  In the InnoDB Plugin 1.0.2, a more accurate check was implemented in innodb_strict_mode.  We now make the check unconditional. dict_create_index_step(): Pass strict=TRUE to dict_index_add_to_cache(). trx_is_strict(), thd_is_strict(): Remove. innodb-zip.test: Test in innodb_strict_mode=OFF. innodb_bug36169.test: Ensure that none of the tables can be created. rb://56 approved by Sunny Bains. "	6bdab319ada46a42e5f9888290a1874bce7b6f91
----------------------------
"A fix for Bug#22891 ""session level max_allowed_packet can be set but is ignored"". This patch makes @@session.max_allowed_packed and @@session.net_buffer_length read-only as suggested in the bug report. The user will have to use SET GLOBAL (and reconnect) to alter the session values of these variables. The error string ER_VARIABLE_IS_READONLY is introduced. Tests are modified accordingly. "	e60c8c8b68d417b8efff48686c84751f3a772c76
----------------------------
Bug#39494 : key_buffer_size > 4GB does not work on 64 bit Windows Cache size  is truncated via 32bit ulong  in  ha_init_key_cache() and ha_resize_key_cache() This change fixes the cast to size_t instead of ulong. This cast is safe, because key_buffer_size parameter is limited to SIZE_T_MAX 	7d5e156c78dc1bbf5b429383aed41f26a993ca3c
----------------------------
ndb - bug#40847 - Add config for full initialization of fragment logfiles 	9b65946c2638f3b037418c474652c90d2a88b12b
----------------------------
WL#4350 Fix crash in ~ConfigIter 	6a616633be2d5dbf8b43d729ad6f52f5392db052
----------------------------
Bug#39178: non-RSA keys in connection to a RSA-keyed yaSSL-using server \ using crashes server When the server is configured to use a RSA key, and when the client sends a cipher-suite list that contains a non-RSA key as acceptable, the server would try to process that key even though it was impossible. Now, yaSSL sets its own acceptable-cipher list according to what kind of key the server is started with, and will never explore and try to pair impossible combinations. This involves a partial import of the current YaSSL tree, not the whole thing, so as to try to avoid introducing new bugs. (Updated to avoid many whitespace changes and make diff smaller.) 	918a8c469f679248096c9bfac70a426db87c5d87
----------------------------
Bug#31616 div_precision_increment description looks wrong Item_func_div didn't calculate the precision of the result properly. The result of 5/0.0001 is 5000 so we have to add decimals of the divisor to the planned precision. per-file comments: mysql-test/r/type_newdecimal.result Bug#31616 div_precision_increment description looks wrong test result fixed mysql-test/t/type_newdecimal.test Bug#31616 div_precision_increment description looks wrong test case sql/item_func.cc Bug#31616 div_precision_increment description looks wrong precision must be increased with args[1]->decimals parameter 	56dc6b2ecddccc88d8cd77ffd22bbc03af6f8163
----------------------------
Bug #38473  The MGM API function ndb_mgm_listen_event does not use bind-address parameter. + extend ndb connectstring to take bind address parameter 	28ee93c7caa85a6038da1ef946d6fe63d5cac1e1
----------------------------
ndb - hugo - add --rand to hugoPkRead, and more environment for configuring default ts 	44c903118175d473ebc97b878ab1e5d8192da4ef
----------------------------
BUG #33626 - ndbcluster_print_error crash 	e78176b3500d0ff1a83d11c414c72a54ba58dd43
----------------------------
Fix for Bug#40644 main.group_concat_max_len_func random failures + minor improvements 	3da7ffe6ac4bb4e106ef098e295f312121e3f0a5
----------------------------
ignore take-over-tcconf in config mgr 	46feb9a006f451135062d69468cc718136abbe58
----------------------------
Bug#39955 SELECT on INFORMATION_SCHEMA.GLOBAL_VARIABLES takes too long VARIABLE_VALUE field is decreased to 1024 symbols. (affected I_S tables: GLOBAL_VARIABLES, SESSION_VARIABLES, GLOBAL_STATUS, SESSION_STATUS). The only variable which can be longer than 1024 is init_connect. The variable will be truncated with warning. Additional fix: Added where condition filter which speed up queries which have where condition with expressions which use VARIABLE_NAME field. 	3fa2673f19e00245258bad1ca333a29c01540f99
----------------------------
WL#4351 Fix memory leak in ~ConfigValuesFactory 	37a486fa2558a57c985264c7ac2e51949e3828f3
----------------------------
WL#4351 fix memory leak in ~Config 	c9a994129bb59a6a680584b273e79707755780a9
----------------------------
"WL#4350 Reconfigure transporter Make it possible to run IPCConfig::configureTransporters also to reconfigure the transporters in TransporteRegistry. If the transporter already exist, call ""configure(conf)"" on it. Currently the Transporter only detect if the conf is same or different. If different a warning about this will be printed to log and the flag m_need_restart is set. Also detect if a transporter should be removed and print a warning about restart in same fashion as above. "	1fd3fe24856b4b098b07a669ba881a9c93fb345c
----------------------------
"branches/innodb+: Merge revisions 2867:2986 from branches/zip: ------------------------------------------------------------------------ r2867 | marko | 2008-10-24 10:24:17 +0300 (Fri, 24 Oct 2008) | 2 lines branches/zip: ChangeLog: Document r2763, r2794, r2683, r2799, r2809, r2866. ------------------------------------------------------------------------ r2869 | vasil | 2008-10-24 11:14:16 +0300 (Fri, 24 Oct 2008) | 4 lines branches/zip: White space cleanup in ChangeLog ------------------------------------------------------------------------ r2870 | vasil | 2008-10-24 13:36:14 +0300 (Fri, 24 Oct 2008) | 8 lines branches/zip: Remove a statement that causes the innodb-index test to fail. The change in behavior was introduced in MySQL BZR-r2738. Suggested by:	Marko ------------------------------------------------------------------------ r2871 | vasil | 2008-10-24 13:48:38 +0300 (Fri, 24 Oct 2008) | 5 lines branches/zip: Adjust mysql-test/patches/innodb-index.diff after the change to mysql-test/innodb-index.(test|result) in r2870. ------------------------------------------------------------------------ r2878 | calvin | 2008-10-27 11:05:42 +0200 (Mon, 27 Oct 2008) | 8 lines branches/zip: port the fix of Bug#19424 - InnoDB: Possibly a memory overrun of the buffer being freed with 64-bit Microsoft Visual C++. The changed file: CMakeLists.txt: Removing Win64 compiler optimizations for all innodb/mem/* files. ------------------------------------------------------------------------ r2884 | vasil | 2008-10-27 11:48:46 +0200 (Mon, 27 Oct 2008) | 7 lines branches/zip: ChangeLog: Add entry for the fix of Bug#19424 InnoDB: Possibly a memory overrun of the buffer being freed (64-bit Visual C) ------------------------------------------------------------------------ r2886 | calvin | 2008-10-27 22:39:11 +0200 (Mon, 27 Oct 2008) | 8 lines branches/zip: This patch is to solve the issue that file handles can not cross DLL/EXE boundaries on Windows. In builtin InnoDB, it makes call to MySQL server for creating tmp files. innobase_mysql_tmpfile is now rewritten for the plugin. rb://5 Approved by:	Marko ------------------------------------------------------------------------ r2887 | calvin | 2008-10-27 22:48:29 +0200 (Mon, 27 Oct 2008) | 44 lines branches/zip: implement the delayloading of externals for the plugin on Windows, which includes: * Load mysqld.map and insert all symbol/address pairs into hash for quick access * Resolves all external data variables. The delayloading mechanism in MSVC does not support automatic imports of data variables. A workaround is to explicitly handle the data import using the delay loader during the initialization of the plugin. * Resolves all external functions during run-time, by implementing the delayed loading helper function delayLoadHelper2, which is called by run-time as well as HrLoadAllImportsForDll. The delay loader reuses the hash implementation in InnoDB. The normal hash_create (in hash0hash.c) creates hash tables in buffer pool. But the delay loader is invoked before the engine is initialized, and buffer pools are not ready yet. Instead, the delay loader has its own implementation of hash_create() and hash_table_free(), called wdl_hash_create() and wdl_hash_table_free(). This patch should be used with other two patches in order to build a dynamically linked plugin on Windows: * patch for tmpfile functions (r2886) * patch for ""build"" files (to be committed) The list of file changed: handler/handler0vars.h: new file, defines a list of external data variables (no external functions). handler/win_delay_loader.cc: new file, the implementation of the delay loader for Windows plugin. handler/ha_innodb.cc: add a header file, and changes for copying the system variables. handler/handler0alter.cc: add a header file handler/i_s.cc: add a header file rb://27 Reviewed by:	Sunny, Marko Approved by:	Sunny ------------------------------------------------------------------------ r2888 | calvin | 2008-10-28 01:51:49 +0200 (Tue, 28 Oct 2008) | 25 lines branches/zip: for building dynamic plugin on Windows, ha_innodb.dll, when INNODB_DYNAMIC_PLUGIN is specified. The changes are: CMakeLists.txt: add project ha_innodb for dynamic plugin on Windows. ha_innodb depends on project mysqld. ha_innodb.def: a new file with standard exports for a dynamic plugin. Two new files will be added: * sql/mysqld.def:	.def file for 32-bit compiler * sql/mysqld_x64.def:	.def file for x64 compiler It is also required to apply a patch to the MySQL source tree. The patch is described in win-plugin/README: win-plugin/win-plugin.diff - a patch to be applied to MySQL source tree. When applied, the following files will be modified: * CMakeLists.txt:	add INNODB_DYNAMIC_PLUGIN and _USE_32BIT_TIME_T * sql/CMakeLists.txt:	add mysqld.def or mysqld_x64.def for mysqld * win/configure.js:	add INNODB_DYNAMIC_PLUGIN * win/build-vs71.bat:	provide an option to specify CMAKE_BUILD_TYPE * win/build-vs8.bat:	provide an option to specify CMAKE_BUILD_TYPE * win/build-vs8_x64.bat: provide an option to specify CMAKE_BUILD_TYPE ------------------------------------------------------------------------ r2894 | marko | 2008-10-28 08:36:39 +0200 (Tue, 28 Oct 2008) | 4 lines branches/zip: dict_str_starts_with_keyword(): Removed this unused function. Spotted by Sunny. ------------------------------------------------------------------------ r2895 | vasil | 2008-10-28 08:40:45 +0200 (Tue, 28 Oct 2008) | 6 lines branches/zip: ChangeLog: add entry for the Windows plugin. ------------------------------------------------------------------------ r2917 | marko | 2008-10-28 23:53:23 +0200 (Tue, 28 Oct 2008) | 3 lines branches/zip: innodb_plugin_init(): Do not copy session variables, even when the variable is a global variable in the built-in InnoDB. ------------------------------------------------------------------------ r2918 | calvin | 2008-10-29 00:08:11 +0200 (Wed, 29 Oct 2008) | 2 lines branches/zip: fix a problem introduced in r2917 - dyn is not initialized. Move the check into for(). ------------------------------------------------------------------------ r2922 | calvin | 2008-10-29 08:29:01 +0200 (Wed, 29 Oct 2008) | 16 lines branches/zip: fix issue #102 - Windows plugin: resolve dbug functions during run-time. Implement wrapper functions in the plugin. The plugin will get the function entries from mysqld.exe during the init, and invoke the corresponding functions (in mysqld.exe). The list of functions are: _db_pargs_ _db_doprnt_ _db_enter_ _db_return_ _db_dump_ rb://38 Approved by:	Marko ------------------------------------------------------------------------ r2923 | marko | 2008-10-29 09:52:30 +0200 (Wed, 29 Oct 2008) | 1 line branches/zip: ChangeLog: Mention Bug #27276. ------------------------------------------------------------------------ r2925 | calvin | 2008-10-29 10:09:41 +0200 (Wed, 29 Oct 2008) | 16 lines branches/zip: change function names in sql/mysqld.def in order to work with 5.1.29-rc. In 5.1.29, the following function names are changed: _hash_init hash_free hash_search hash_delete changed to _my_hash_init my_hash_free my_hash_search my_hash_delete Approved by:	Marko (on IM) ------------------------------------------------------------------------ r2927 | marko | 2008-10-29 11:43:23 +0200 (Wed, 29 Oct 2008) | 4 lines branches/zip: ha_innodb.cc: Make some functions static, so that they will not be compiled as weak global symbols.  These functions must not be redirected to the built-in InnoDB. ------------------------------------------------------------------------ r2928 | michael | 2008-10-29 19:20:10 +0200 (Wed, 29 Oct 2008) | 4 lines Remove unnecessary assert Approved by: Heikki, over IM ------------------------------------------------------------------------ r2930 | marko | 2008-10-29 21:39:24 +0200 (Wed, 29 Oct 2008) | 33 lines branches/zip: Merge revisions 2854:2929 from branches/5.1, except r2924, which was merged from branches/zip r2866 to branches/5.1 and except r2879 which was merged separately by Calvin: ------------------------------------------------------------------------ r2902 | vasil | 2008-10-28 12:10:25 +0200 (Tue, 28 Oct 2008) | 10 lines branches/5.1: Fix Bug#38189 innodb_stats_on_metadata missing Make the variable innodb_stats_on_metadata visible to the users and also settable at runtime. Previously it was only ""visible"" as a command line startup option to mysqld. Approved by:    Marko (https://svn.innodb.com/rb/r/36) ------------------------------------------------------------------------ r2929 | marko | 2008-10-29 21:26:14 +0200 (Wed, 29 Oct 2008) | 13 lines branches/5.1: dtype_get_sql_null_size(): return the correct storage size of a SQL NULL column. (Bug #40369) When MySQL Bug #20877 was fixed in r834, this function was accidentally modified to return 0 or 1. Apparently, the only impact of this bug is that fixed-length columns cannot be updated in-place from or to SQL NULL, even in ROW_FORMAT=REDUNDANT.  After this fix, fixed-length columns in ROW_FORMAT=REDUNDANT will have a constant storage size as they should, no matter if NULL or non-NULL.  The bug caused fixed-length NULL columns to occupy 1 byte. rb://37 approved by Heikki over IM. ------------------------------------------------------------------------ ------------------------------------------------------------------------ r2931 | vasil | 2008-10-29 22:10:40 +0200 (Wed, 29 Oct 2008) | 4 lines branches/zip: Add 2 ChangeLog entries for the 2 bugfixes that were merged from branches/5.1. ------------------------------------------------------------------------ r2935 | vasil | 2008-10-30 12:17:23 +0200 (Thu, 30 Oct 2008) | 17 lines branches/zip: Fix ""Bug#40360 Binlog related errors with binlog off"" in InnoDB code in order to have a Bug#40360-free InnoDB Plugin 1.0.2. The fix does check whether binary logging is enabled in MySQL by accessing the opt_bin_log global variable that is defined in sql/mysqld.cc. In case MySQL does develop another solution to this via Bug#40360 then we can revert this patch (except the mysql-tests). The windows-plugin part of this fix will be committed as a separate commit to ease eventual merge into branches/5.1 [note from the future: the separate commit went into r2936]. Approved by:	Marko (https://svn.innodb.com/rb/r/39) ------------------------------------------------------------------------ r2936 | vasil | 2008-10-30 12:24:09 +0200 (Thu, 30 Oct 2008) | 7 lines branches/zip: Followup to r2935: add the Windows Delay Loader stuff for the MySQL variable that we are accessing. If someday we have another solution for Bug#40360 Binlog related errors with binlog off then this should also be reverted. ------------------------------------------------------------------------ r2937 | vasil | 2008-10-30 12:28:47 +0200 (Thu, 30 Oct 2008) | 4 lines branches/zip: Add ChangeLog entry for Bug#40360 Binlog related errors with binlog off ------------------------------------------------------------------------ r2938 | vasil | 2008-10-30 12:33:28 +0200 (Thu, 30 Oct 2008) | 5 lines branches/zip: Non-functional change: convert handler/handler0vars.h and handler/win_delay_loader.cc from \r\n (dos) to \n (unix) line terminators. ------------------------------------------------------------------------ r2939 | marko | 2008-10-30 12:38:18 +0200 (Thu, 30 Oct 2008) | 2 lines branches/zip: Set svn:eol-style native on some recently added text files. ------------------------------------------------------------------------ r2940 | marko | 2008-10-30 12:46:21 +0200 (Thu, 30 Oct 2008) | 1 line branches/zip: ChangeLog, ha_innodb.def: Set svn:eol-style native ------------------------------------------------------------------------ r2941 | vasil | 2008-10-30 19:34:27 +0200 (Thu, 30 Oct 2008) | 4 lines branches/zip: Increment the InnoDB Plugin version from 1.0.1 to 1.0.2. ------------------------------------------------------------------------ r2943 | sunny | 2008-10-31 09:40:29 +0200 (Fri, 31 Oct 2008) | 15 lines branches/zip: 1. We add a vector of locks to trx_t. This array contains the autoinc locks granted to a transaction. There is one per table. 2. We enforce releasing of these locks in the reverse order from the one in which they are acquired. The assumption is that since the AUTOINC locks are statement level locks. Nested statements introduced by triggers are stacked it should hold. There was some cleanup done to the vector code too by adding const and some new functions. Rename dict_table_t::auto_inc_lock to autoinc_lock. Fix Bug#26316 Triggers create duplicate entries on auto-increment columns rb://22 ------------------------------------------------------------------------ r2944 | vasil | 2008-10-31 09:44:16 +0200 (Fri, 31 Oct 2008) | 12 lines branches/zip: Revert our temporary fix for ""Bug#40360 Binlog related errors with binlog off"" (r2935, r2936) and deploy MySQL's one, but put the function mysql_bin_log_is_engaged() inside mysql_addons.cc instead of in mysql's log.cc and use a different name for it so there is no collision when MySQL adds this function in log.cc. [note from the future: the windows part of this patch went into r2947] Approved by:	Marko (https://svn.innodb.com/rb/r/41/) ------------------------------------------------------------------------ r2945 | sunny | 2008-10-31 09:44:45 +0200 (Fri, 31 Oct 2008) | 2 lines branches/zip: Update ChangeLog with r2943 info. ------------------------------------------------------------------------ r2946 | marko | 2008-10-31 10:18:47 +0200 (Fri, 31 Oct 2008) | 2 lines branches/zip: Revert the unintended change to univ.i that was made in r2943. ------------------------------------------------------------------------ r2947 | calvin | 2008-10-31 10:38:26 +0200 (Fri, 31 Oct 2008) | 6 lines branches/zip: Windows plugin part of r2944 r2944 has reference to mysql_bin_log.is_open(), which is new in InnoDB. Add two new entries and remove one duplicate in mysqld.def & mysqld_x64.def. ------------------------------------------------------------------------ r2948 | vasil | 2008-10-31 11:39:07 +0200 (Fri, 31 Oct 2008) | 9 lines branches/zip: Fix Mantis issue#106 plugin init error:InnoDB: stats_on_metadata in static InnoDB (flags=0x2401) differs from stats_on_metadata in dynamic InnoDB (fl Ignore the NOSYSVAR flag in addition to ignoring the READONLY flag. Approved by:	Marko (https://svn.innodb.com/rb/r/42/) ------------------------------------------------------------------------ r2949 | vasil | 2008-10-31 11:47:56 +0200 (Fri, 31 Oct 2008) | 4 lines branches/zip: White-space cleanup in ChangeLog. ------------------------------------------------------------------------ r2951 | marko | 2008-10-31 14:21:43 +0200 (Fri, 31 Oct 2008) | 4 lines branches/zip: scripts/install_innodb_plugins_win.sql: New script, for installing the InnoDB plugins in Windows.  Copied from scripts/install_innodb_plugins.sql. ------------------------------------------------------------------------ r2954 | calvin | 2008-11-04 09:15:26 +0200 (Tue, 04 Nov 2008) | 8 lines branches/zip: ignore the failure when builtin_innobase_plugin is not available. External variable builtin_innobase_plugin is not available when mysqld does not have a builtin InnoDB. The init of the Windows plugin should not fail in this case. Approved by:	Marko (on IM) ------------------------------------------------------------------------ r2955 | calvin | 2008-11-04 12:43:14 +0200 (Tue, 04 Nov 2008) | 11 lines branches/zip: windows plugin - fix references to array variables. This problem surfaced when running new test innodb_bug40360.test. Both tx_isolation_names and binlog_format_names are name arrays, and should be defined as wdl_tx_isolation_names and wdl_binlog_format_names, not *wdl_tx_isolation_names and *wdl_binlog_format_names. Another array variable is all_charsets, which is already correctly defined. Approved by:	Marko (on IM) ------------------------------------------------------------------------ r2986 | marko | 2008-11-11 09:28:37 +0200 (Tue, 11 Nov 2008) | 11 lines branches/zip: ha_innobase::create(): Remove the dependences on DICT_TF_ZSSIZE_MAX, so that the code can be compiled with a different uncompressed page size by redefining UNIV_PAGE_SIZE_SHIFT in univ.i. Currently, the allowed values are 12, 13, or 14 (4k, 8k, 16k). Make the default compressed page size half the uncompressed page size. The previous default was 8 kilobytes, which is the same when compiling with the default 16k uncompressed page size. rb://50 approved by Pekka Lampio and Sunny Bains. ------------------------------------------------------------------------ "	c1d46655145abb036ed12c00a2f5849814a46fd5
----------------------------
ndb - Clean junk from IPCConfig 	a6498a985aa98965177191d5b47a83b36feee52a
----------------------------
Bug#34025: mysql_config is not returning -ldl lib flag needed when using embedded server mysql_config did not output -ldl (or equivalent) when needed for --libmysqld-libs, so its output could be insufficient to build an application using the embedded server. LIBDL was already set in configure; it's now propagated all the way into the relevant mysql_config scripts. 	8a774dcc68cc3db9f651a21e75ac87732aafc23b
----------------------------
"Added the default configure COMMUNITY_SERVER and ENABLED_PROFILING to the Windows configuration file ""include/config-win.h"". "	827bae532bbb783ae0edf595ed359d4e739c43f1
----------------------------
Bug#39867 MySQL Cluster : Failures during Blob part operations not always detected 2 parts : 1) The Ndb SQL handler (ha_ndbcluster) reported the error from the NdbBlob object rather than from the NdbTransaction object.  This results in inconsistent error messages in some cases 2) The NDB kernel bypassed the TC block when reporting primary key 'simple read' failure in some scenarios.  This resulted in the API node not detecting operation failures in some scenarios, and eventual transaction timeouts. Fixes : Change NDB kernel to send LQHKEYREF to TC for early simple read failure.  Direct send of TCKEYREF to API remains for 'dirty' read. Change ha_ndbcluster to obtain error information from the NdbTransaction object rather than the Blob object. Tests : Re-enable simple read testing in testOperations and testTransactions. Extend testing to include Simple Reads in testNdbApi. Add Blob read transporter overload testcase to MTR test_blob testcase. 	9bbf1522dc74b3e718f1ef906a1d55c52b4c8574
----------------------------
"Back merges from 6.0.8 - Removed some copy/paste between debug and normal build in RPM spec - Removed ""mysql_upgrade_shell"" from RPM build - Removed use of ""grep -q"" in ""configure.in"", not portable - Improved test to disable ABI check not to accidently run for icc Other changes - Added make file test targets 'test-bt-fast' and 'test-bt-debug-fast' - Reenabled ""jp"" test suite run "	a21f8a0e57a3d0eabf24ac8f4fccb6f563ecc3b1
----------------------------
"WL#4350 - Make the binary config sent by 'mgm_get_configuration' actually start a config change - Set own node as ""confirmed"" in ClusterMgr's list of nodes, thus making no distinction between local or remote ConfigManager - Add functions to SignalSender to make it easy to find the next node in a bitmask that is connected, alive or confirmed. "	722e19b698d2a4ab1e83eb7f3415b1e6e47c9d8a
----------------------------
WL#4350 - If no nodeid given on command line or in NDB_CONNECTSTRING search --datadir for binary config files, if they are all created by same nodeid, read the newest(based on generation) and determine if only one MGM is defined to run on the current host -> check it's the same as already found and use it. If no nodeid still found and a config.ini or my.cnf given on command line, read that config and see if only one MGM node is defined to run on this host -> use the nodeid of that node. 	aac3ee408bf7882df36a51b38d7cfa9da51dccca
----------------------------
WL#4350 - if no --datadir specified and the datadir compiled into ndb_mgmd doesn't exist, try to create it. 	8501c49b4c90286dd439f6f8d82dab51aad768f7
----------------------------
- Fix for Bug #39848, #39863, #39978, #39569 Bug#39848 events_bugs fails sporadically on pushbuild (missing rows in table event_log) Details: Reimplement the subtest for BUG 28924 - check if the number of rows within the table event_log changes but don't print rows because the number varies depending on load on testing box - shift DROP USER befor DROP EVENT = Subtest fits again to old bug - remove no more needed comments + variables Bug#39863 events_bugs fails sporadically on pushbuild (extra processes in I_S.PROCESSLIST) Details: Abort with appropriate message to the protocol if release_lock() does not has the intended effect. This cannot prevent problems caused by the probably buggy release_lock() but it reveals if we had a problem in this area. Bug#39978 main.events_bugs does not clean up Detail: Restore global.event_scheduler = ON at end of test Bug#39569 events_bugs fails sporadically on pushbuild (should have failed with errno 1539) Detail: Set $wait_timeout to 4 instead of 2 - Fix two instabilities (result sets pulled from processlist in subtest for bug 16407) which were found during tests with high parallel I/O load - Minor improvements of formatting Details: - Add comments - Remove tabs and trailing blanks - Add line breaks for better readability 	b86e9931d5fa5e929963bbbc8d0704592c224081
----------------------------
"Bug#39117 ""plugin_load"" option not documented correct text describing the --plugin-load option to mysqld "	19dba1c68bd55c5bab135a8a7655352991117b67
----------------------------
"Bug #40457  	not possible to set ndb_optimized_node_selection in session "	0c478c792e7e5a4e931dfa8853f77508cbd27084
----------------------------
BUG#39007 rpl_ndb.rpl_ndb_circular_2ch crashed in pushbuild According to documenation: http://dev.mysql.com/doc/refman/5.1/en/mysql-cluster-replication-issues.html When setting up circular replication for clusters with different SQL nodes in each cluster used as replication master and slave, SQL nodes must not start with --log-slave-updates option. This patch fixed the test case by remove log-slave-updates configuration from test case configuration file. 	ef08c3af3e1fd7efb5e643baf962bbc1b27a94e0
----------------------------
"branches/zip: Merge revisions 2854:2929 from branches/5.1, except r2924, which was merged from branches/zip r2866 to branches/5.1 and except r2879 which was merged separately by Calvin: ------------------------------------------------------------------------ r2902 | vasil | 2008-10-28 12:10:25 +0200 (Tue, 28 Oct 2008) | 10 lines branches/5.1: Fix Bug#38189 innodb_stats_on_metadata missing Make the variable innodb_stats_on_metadata visible to the users and also settable at runtime. Previously it was only ""visible"" as a command line startup option to mysqld. Approved by:    Marko (https://svn.innodb.com/rb/r/36) ------------------------------------------------------------------------ r2929 | marko | 2008-10-29 21:26:14 +0200 (Wed, 29 Oct 2008) | 13 lines branches/5.1: dtype_get_sql_null_size(): return the correct storage size of a SQL NULL column. (Bug #40369) When MySQL Bug #20877 was fixed in r834, this function was accidentally modified to return 0 or 1. Apparently, the only impact of this bug is that fixed-length columns cannot be updated in-place from or to SQL NULL, even in ROW_FORMAT=REDUNDANT.  After this fix, fixed-length columns in ROW_FORMAT=REDUNDANT will have a constant storage size as they should, no matter if NULL or non-NULL.  The bug caused fixed-length NULL columns to occupy 1 byte. rb://37 approved by Heikki over IM. ------------------------------------------------------------------------ "	bd3514db332fbde06d6d55e216c271e0905029dd
----------------------------
ndbmtd - add config parameters controlling #threads 	18b4588a5126a60a5c100a71b2892848fb14a171
----------------------------
BUG#40257: Please remove --loose-skip-innodb from suite/rpl/rpl_1slave_base.cnf Removed the flag that disables innodb on slave in the default configuration of replication tests. That made the explicit --innodb flag in -slave.opt files redundant, so lots of -slave.opt files could be removed. Also, -master.opt files containing reduntant --innodb flag were removed (those were redundant even without changing the default). Removing .opt files is good because .opt files cause server restarts and make tests less readable. Also fixed a bug where rpl_innodb_mixed_ddl unintentionally used myisam on slave. 	2dca77e466faaeeb21be4a6d37ff0f91b9d839c1
----------------------------
WL#4350 Restore default DataDir value for [ndbd] to . as default it used to be 	24e67cf3d00630c5be46e06eadbbe561f3e25a66
----------------------------
WL#4350 Make atrt start ndbd_mgmd with --datadir and --ndb-nodeid 	8112448e1db914efa6fc766f3b5023a63b9397ad
----------------------------
ndb - fix regression wrt ndb-wait-connected (6.4 only) it is specified in seconds not milliseconds 	b3b29e90d059fbf1d5a9978267fe609820811305
----------------------------
"branches/5.1: Fix Bug#38189 innodb_stats_on_metadata missing Make the variable innodb_stats_on_metadata visible to the users and also settable at runtime. Previously it was only ""visible"" as a command line startup option to mysqld. Approved by:	Marko (https://svn.innodb.com/rb/r/36) "	fd5bac6715bc6e49f4bcc303c53c4ec07660b405
----------------------------
"branches/zip: for building dynamic plugin on Windows, ha_innodb.dll, when INNODB_DYNAMIC_PLUGIN is specified. The changes are: CMakeLists.txt: add project ha_innodb for dynamic plugin on Windows. ha_innodb depends on project mysqld. ha_innodb.def: a new file with standard exports for a dynamic plugin. Two new files will be added: * sql/mysqld.def:	.def file for 32-bit compiler * sql/mysqld_x64.def:	.def file for x64 compiler It is also required to apply a patch to the MySQL source tree. The patch is described in win-plugin/README: win-plugin/win-plugin.diff - a patch to be applied to MySQL source tree. When applied, the following files will be modified: * CMakeLists.txt:	add INNODB_DYNAMIC_PLUGIN and _USE_32BIT_TIME_T * sql/CMakeLists.txt:	add mysqld.def or mysqld_x64.def for mysqld * win/configure.js:	add INNODB_DYNAMIC_PLUGIN * win/build-vs71.bat:	provide an option to specify CMAKE_BUILD_TYPE * win/build-vs8.bat:	provide an option to specify CMAKE_BUILD_TYPE * win/build-vs8_x64.bat: provide an option to specify CMAKE_BUILD_TYPE "	117ae892ad0aea7130b544c08303a67311f5a541
----------------------------
Bug#39289 libmysqld.a calls exit() upon error Several functions (mostly in mysqld.cc) directly call exit() function in case of errors, which is not a desired behaviour expecially in the embedded-server library. Fixed by making these functions return error sign instead of exiting. per-file comments: include/my_getopt.h Bug#39289 libmysqld.a calls exit() upon error added 'error' retvalue for my_getopt_register_get_addr libmysqld/lib_sql.cc Bug#39289 libmysqld.a calls exit() upon error unireg_clear() function implemented mysys/default.c Bug#39289 libmysqld.a calls exit() upon error error returned instead of exit() call mysys/mf_tempdir.c Bug#39289 libmysqld.a calls exit() upon error free_tmpdir() - fixed so it's not produce crash on uninitialized tmpdir structure mysys/my_getopt.c Bug#39289 libmysqld.a calls exit() upon error error returned instead of exit() call sql/mysql_priv.h Bug#39289 libmysqld.a calls exit() upon error unireg_abort definition fixed for the embedded server sql/mysqld.cc Bug#39289 libmysqld.a calls exit() upon error various functions fixed error returned instead of exit() call 	da1d159fbfca1bc5f38bd24da633fb7cf1686f58
----------------------------
Bug#39571 abi_check Does not create all prerequisites The abi_check target instroduced as part of WL#4380 verifies changes to mysql.h. mysql.h in turn includes mysql_version.h. mysql_version.h is a file that is generated during the configure phase. We must ensure that mysql_version.h is cleaned only during distclean and not during clean. 	10b525d0bc4c19291496b2235e78cb8e47d85827
----------------------------
"Fix a ""configure"" syntax error. It had been introduced with the patch for bug entry 37098 and affected runs ""--without-server"" only. "	927534d525b87ad16ec35dc684f04a41b817e8b4
----------------------------
WL#4350 Rewrite ConfigRetriever::getConfig(const char*) so it works on all platforms 	0f14ef0904e39672dd8ffc2ae15f8d7882613612
----------------------------
WL#4350 Use C++ config iterator 	d357ff0e67fa2fc37f7575aa1332f1b8b8b07f19
----------------------------
WL#4350 Remove MgmtSrvrConfig.cpp from CMakeLists.txt 	ecd62b7512a479edea320eda4572365792114faf
----------------------------
"branches/innodb+: Merge revisions 2835:2862 from branches/zip: ------------------------------------------------------------------------ r2838 | vasil | 2008-10-21 12:49:27 +0300 (Tue, 21 Oct 2008) | 61 lines branches/zip: Merge 2744:2837 from branches/5.1 (skipping r2782 and r2826): ------------------------------------------------------------------------ r2832 | vasil | 2008-10-21 10:08:30 +0300 (Tue, 21 Oct 2008) | 10 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: In ha_innobase::info(): Replace sql_print_warning() which prints to mysqld error log with push_warning_printf() which sends the error message to the client. Suggested by: Marko, Sunny, Michael Objected by:  Inaam ------------------------------------------------------------------------ r2837 | vasil | 2008-10-21 12:07:44 +0300 (Tue, 21 Oct 2008) | 32 lines Changed paths: M /branches/5.1/mysql-test/innodb-semi-consistent.result M /branches/5.1/mysql-test/innodb-semi-consistent.test M /branches/5.1/mysql-test/innodb.result M /branches/5.1/mysql-test/innodb.test branches/5.1: Merge a change from MySQL (this fixes the failing innodb and innodb-semi-consistent tests): revno: 2757 committer: Georgi Kodinov <kgeorge@mysql.com> branch nick: B39812-5.1-5.1.29-rc timestamp: Fri 2008-10-03 15:24:19 +0300 message: Bug #39812: Make statement replication default for 5.1 (to match 5.0) Make STMT replication default for 5.1. Add a default of MIXED into the config files Fix the tests that needed MIXED replication mode. modified: mysql-test/include/mix1.inc mysql-test/r/innodb-semi-consistent.result mysql-test/r/innodb.result mysql-test/r/innodb_mysql.result mysql-test/r/tx_isolation_func.result mysql-test/t/innodb-semi-consistent.test mysql-test/t/innodb.test mysql-test/t/tx_isolation_func.test sql/mysqld.cc support-files/my-huge.cnf.sh support-files/my-innodb-heavy-4G.cnf.sh support-files/my-large.cnf.sh support-files/my-medium.cnf.sh support-files/my-small.cnf.sh ------------------------------------------------------------------------ ------------------------------------------------------------------------ r2847 | marko | 2008-10-22 10:07:37 +0300 (Wed, 22 Oct 2008) | 6 lines branches/zip: page_zip_rec_needs_ext(): Fix a bug that was introduced in the fix of Mantis issue #73.  With key_block_size=16, we will also have to check the available space on the uncompressed page. Otherwise, the clustered index record can be almost 16 kilobytes in size, and the undo log record will not fit. ------------------------------------------------------------------------ r2850 | marko | 2008-10-22 13:52:12 +0300 (Wed, 22 Oct 2008) | 2 lines branches/zip: ibuf_insert_to_index_page(): Discard the local variable block. page_cur is always positioned on block, the function parameter. ------------------------------------------------------------------------ r2853 | sunny | 2008-10-23 01:52:09 +0300 (Thu, 23 Oct 2008) | 2 lines branches/zip: Add missing UNIV_INTERN. ------------------------------------------------------------------------ r2855 | sunny | 2008-10-23 09:29:46 +0300 (Thu, 23 Oct 2008) | 36 lines branches/zip: Merge revisions 2837:2852 from branches/5.1: ------------------------------------------------------------------------ r2849 | sunny | 2008-10-22 12:01:18 +0300 (Wed, 22 Oct 2008) | 8 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/include/row0mysql.h M /branches/5.1/row/row0mysql.c branches/5.1: Return the actual error code encountered when allocating a new autoinc value. The change in behavior (bug) was introduced in 5.1.22 when we introduced the new AUTOINC locking model. rb://31 Bug#40224 New AUTOINC changes mask reporting of deadlock/timeout errors ------------------------------------------------------------------------ r2852 | sunny | 2008-10-23 01:42:24 +0300 (Thu, 23 Oct 2008) | 9 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/handler/ha_innodb.h branches/5.1: Backport r2724 from branches/zip Check column value against the col max value before updating the table's global autoinc counter value. This is part of simplifying the AUTOINC sub-system. We extract the type info from MySQL data structures at runtime. This fixes Bug#37788 InnoDB Plugin: AUTO_INCREMENT wrong for compressed tables ------------------------------------------------------------------------ ------------------------------------------------------------------------ r2856 | sunny | 2008-10-23 10:07:05 +0300 (Thu, 23 Oct 2008) | 1 line Reverting test file changes from r2855 ------------------------------------------------------------------------ r2857 | sunny | 2008-10-23 10:24:33 +0300 (Thu, 23 Oct 2008) | 30 lines branches/zip: Merge revisions 2852:2854 from branches/5.1: ------------------------------------------------------------------------ r2854 | sunny | 2008-10-23 08:30:32 +0300 (Thu, 23 Oct 2008) | 13 lines Changed paths: M /branches/5.1/dict/dict0dict.c M /branches/5.1/dict/dict0mem.c M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/handler/ha_innodb.h M /branches/5.1/include/dict0dict.h M /branches/5.1/include/dict0mem.h M /branches/5.1/row/row0mysql.c branches/5.1: Backport changes from branches/zip r2725 Simplify the autoinc initialization code. This removes the non-determinism related to reading the table's autoinc value for the first time. This change has also reduced the sizeof dict_table_t by sizeof(ibool) bytes because we don't need the dict_table_t::autoinc_inited field anymore. Bug#39830 Table autoinc value not updated on first insert. Bug#35498 Cannot get table test/table1 auto-inccounter value in ::info Bug#36411 Failed to read auto-increment value from storage engine"" in 5.1.24 auto-inc rb://16 ------------------------------------------------------------------------ ------------------------------------------------------------------------ r2858 | vasil | 2008-10-23 11:33:43 +0300 (Thu, 23 Oct 2008) | 4 lines branches/zip: Update the ChangeLog ------------------------------------------------------------------------ r2861 | marko | 2008-10-23 12:27:15 +0300 (Thu, 23 Oct 2008) | 24 lines branches/zip: Clean up the file format stamping. trx_sys_file_format_max_upgrade(): Rename from trx_sys_file_format_max_update().  Improve the documentation.  Add a const qualifier to the parameter ""name"".  Replace the parameter ""flags"" with ""format_id"", because this function should deal with file format identifiers, not with table flags. trx_sys_file_format_max_write(), trx_sys_file_format_max_set(): Add a const qualifier to the parameter ""name"". ha_innodb.cc: Correct the spelling in some comments: ""side effect"". Remove redundant prototypes for some static callback functions. innodb_file_format_name_update(), innodb_file_format_check_update(): Correct the function signature.  Use appropriate pointer type conversions. MYSQL_SYSVAR_STR(file_format), MYSQL_SYSVAR_STR(file_format_check): Remove the type conversions from the callback function pointers.  When the function signatures match, no type conversion is needed.  The type conversions would only prevent compilation warnings for any mismatch. Approved by Sunny in rb://25. ------------------------------------------------------------------------ r2862 | marko | 2008-10-23 12:37:42 +0300 (Thu, 23 Oct 2008) | 8 lines branches/zip: Non-functional changes: ibuf_get_volume_buffered(): Declare with static linkage. This function is private to ibuf0ibuf.c. btr_cur_pessimistic_delete(): Use the cached result of btr_cur_get_index(cursor). ------------------------------------------------------------------------ "	f557ff3ea9096499ab5cc23c09eb715bbc1762da
----------------------------
"branches/zip: Clean up the file format stamping. trx_sys_file_format_max_upgrade(): Rename from trx_sys_file_format_max_update().  Improve the documentation.  Add a const qualifier to the parameter ""name"".  Replace the parameter ""flags"" with ""format_id"", because this function should deal with file format identifiers, not with table flags. trx_sys_file_format_max_write(), trx_sys_file_format_max_set(): Add a const qualifier to the parameter ""name"". ha_innodb.cc: Correct the spelling in some comments: ""side effect"". Remove redundant prototypes for some static callback functions. innodb_file_format_name_update(), innodb_file_format_check_update(): Correct the function signature.  Use appropriate pointer type conversions. MYSQL_SYSVAR_STR(file_format), MYSQL_SYSVAR_STR(file_format_check): Remove the type conversions from the callback function pointers.  When the function signatures match, no type conversion is needed.  The type conversions would only prevent compilation warnings for any mismatch. Approved by Sunny in rb://25. "	d8fd1aec8d94bfd86ee3ad3efe0bd3bb36e60e1f
----------------------------
WL#4350 ndb_mgmd - consistent configuration Add ConfigManager to ndb_mgmd 	a2cc39a6f9e4ebc6a443b3edd3f0d22dc4f345cb
----------------------------
"branches/zip: Merge 2744:2837 from branches/5.1 (skipping r2782 and r2826): ------------------------------------------------------------------------ r2832 | vasil | 2008-10-21 10:08:30 +0300 (Tue, 21 Oct 2008) | 10 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: In ha_innobase::info(): Replace sql_print_warning() which prints to mysqld error log with push_warning_printf() which sends the error message to the client. Suggested by:	Marko, Sunny, Michael Objected by:	Inaam ------------------------------------------------------------------------ r2837 | vasil | 2008-10-21 12:07:44 +0300 (Tue, 21 Oct 2008) | 32 lines Changed paths: M /branches/5.1/mysql-test/innodb-semi-consistent.result M /branches/5.1/mysql-test/innodb-semi-consistent.test M /branches/5.1/mysql-test/innodb.result M /branches/5.1/mysql-test/innodb.test branches/5.1: Merge a change from MySQL (this fixes the failing innodb and innodb-semi-consistent tests): revno: 2757 committer: Georgi Kodinov <kgeorge@mysql.com> branch nick: B39812-5.1-5.1.29-rc timestamp: Fri 2008-10-03 15:24:19 +0300 message: Bug #39812: Make statement replication default for 5.1 (to match 5.0) Make STMT replication default for 5.1. Add a default of MIXED into the config files Fix the tests that needed MIXED replication mode. modified: mysql-test/include/mix1.inc mysql-test/r/innodb-semi-consistent.result mysql-test/r/innodb.result mysql-test/r/innodb_mysql.result mysql-test/r/tx_isolation_func.result mysql-test/t/innodb-semi-consistent.test mysql-test/t/innodb.test mysql-test/t/tx_isolation_func.test sql/mysqld.cc support-files/my-huge.cnf.sh support-files/my-innodb-heavy-4G.cnf.sh support-files/my-large.cnf.sh support-files/my-medium.cnf.sh support-files/my-small.cnf.sh ------------------------------------------------------------------------ "	49589d0ae21c1b2171775ae14271f96ea930505f
----------------------------
branches/5.1: Merge a change from MySQL (this fixes the failing innodb and innodb-semi-consistent tests): revno: 2757 committer: Georgi Kodinov <kgeorge@mysql.com> branch nick: B39812-5.1-5.1.29-rc timestamp: Fri 2008-10-03 15:24:19 +0300 message: Bug #39812: Make statement replication default for 5.1 (to match 5.0) Make STMT replication default for 5.1. Add a default of MIXED into the config files Fix the tests that needed MIXED replication mode. modified: mysql-test/include/mix1.inc mysql-test/r/innodb-semi-consistent.result mysql-test/r/innodb.result mysql-test/r/innodb_mysql.result mysql-test/r/tx_isolation_func.result mysql-test/t/innodb-semi-consistent.test mysql-test/t/innodb.test mysql-test/t/tx_isolation_func.test sql/mysqld.cc support-files/my-huge.cnf.sh support-files/my-innodb-heavy-4G.cnf.sh support-files/my-large.cnf.sh support-files/my-medium.cnf.sh support-files/my-small.cnf.sh 	12617fa38aee74b181b06b709865c777eb85cc80
----------------------------
dereference uninitialized variable in ha_ndbcluster (part_spec) 	963a0363e1cf78e9a53521ffd814c3c3d593b2e5
----------------------------
Merge: fd34712 932b5cc merged a few more fixes of test cases for configuration changes 	7e8fdc3ad8b292ada74cdf3d4d9086f37a803494
----------------------------
Merge: f5b7c9f 80baf58 merged fixes to the new default config values 	bbf344b646005c6fadeb718bc60f811cf8a42cb5
----------------------------
Fix for crash in ha_ndbcluster::open->update_stats->ndb_get_table_statistics->ndb_err, close_cached_tables should not take LOCK_open (ndb_autodicovery3.test), added missing argument to ndb_get_table_statistics 	7a186803c23ffbb70739e3b19964f775647e7ab0
----------------------------
Merge: 99f5183 a6a94f8 merged configuration changes 	59ce72deddfdbcaa781f8477e710c83284fe8f0a
----------------------------
Changed configuration defaults for improved performance on modern computers 	a6a94f83f757e0810d50327a81b059b8c568b972
----------------------------
Fix for crash in ha_ndbcluster::open->update_stats->ndb_get_table_statistics->ndb_err, close_cached_tables should not take LOCK_open (ndb_autodicovery3.test) 	cfc8d9223d35b87685e97e4f65c58a29794d01c7
----------------------------
"The header ""config.h"" needs to be included ""early"" to control other headers. This time the inclusion of <stdio.h> before ""config.h"" enabled legacy large file support, seek64() and similar, on AIX breaking the compile of ""gzio.c"" "	36e4c7d281e73897e35fb82e7aa81bddab560f74
----------------------------
More portable sh in configure script 	d8e9fef0fa1df23d964f397698c1dc31b06ab235
----------------------------
BUG#39008 Additional fix after review, remove files that could potentially be set to path outside datadir 	ac24a792905c2b3d20f7f137ce94f8c013162981
----------------------------
ndbmtd - change configure check, to allow for other than x86-64 assmebler to be used 	2cfe41ba55bb7d719790bbf0635ebfec9ec87dba
----------------------------
branches/zip: mysql-test/patches/innodb_file_per_table.diff: @@GLOBAL.innodb_file_per_table can be 0 or 1, while SELECT VARIABLE_VALUE FROM INFORMATION_SCHEMA.GLOBAL_VARIABLES WHERE VARIABLE_NAME='innodb_file_per_table' can be 'OFF' or 'ON'.  For some reason, MySQL evaluates (0 = 'OFF') to 1 and (1 = 'ON') to 0.  Thus, the test would fail if innodb_file_per_table is set. 	c39985b0965a56406c9ba85803a87c182eb34762
----------------------------
ha_ndbcluster warnings: typecasting, incorrect method being called (cast to double) 	c994b4494d2ed7358105c397fd9ce74eb7e65b8b
----------------------------
ha_ndbcluster_binlog.cc shouldn't be +x 	75a152c79e4dc98dc7e0a9f983ec0dabbe356234
----------------------------
fix ha_ndbcluster_binlog.cc build on win32 	a173881a44c508a4fd5dd7192f32ed05ddf87b90
----------------------------
branches/zip: Add some more patches to mysql-test. type_bit_innodb.diff: Ignore the reported duplicate value.  The reported value depends on the internal workings of the merge sort in fast index creation.  In the built-in InnoDB of MySQL 5.1, the records are copied to a new temporary table in the order they were selected from the original table. information_schema.diff: Account for the INFORMATION_SCHEMA tables that were added in the InnoDB plugin. innodb_file_per_table.diff: In the InnoDB plugin, innodb_file_per_table is a settable global variable. 	2eda3b44a5d8e3fe9d477eb9d7b68ad24c59a91e
----------------------------
branches/zip: Patch the mysql-test suite, so that it will not fail because innodb_lock_wait_timeout is a settable session variable as of r2716. mysql-test/patches/innodb_lock_wait_timeout.diff: New file. 	a25e07bad8213c47d8c5c9bb94bbbc745a184cb0
----------------------------
Merge: 0b097b7 c1ed70d WL#4403 deprecate @log and @slow_log_queries variables Adds --general-log-file, --slow-query-log-file command- line options to match system variables of the same names. Deprecates --log, --log-slow-queries command-line option and log, log_slow_queries system-variables for v7.0; they are superseded by general_log/general_log_file and slow_query_log/slow_query_log_file, respectively. 	1ad9d23584d39d8de0510782594cab11e4865ad9
----------------------------
my_socket_posix.h should include my_config.h 	6c63a7f9f798d8817eb96864738dec6219686425
----------------------------
WL#4403 deprecate @log and @slow_log_queries variables Adds --general_log_file, --slow_query_log_file command- line options to match system variables of the same names. Deprecates --log, --log-slow-queries command-line options and log, log_slow_queries system-variables for v7.0; they are superseded by general_log/general_log_file and slow_query_log/slow_query_log_file, respectively. 	c1ed70d38459d3064474168c5f9389a4b29a1e73
----------------------------
"branches/zip: Merge revisions 2702:2722 from branches/5.1: ------------------------------------------------------------------------ r2702 | sunny | 2008-09-30 11:41:56 +0300 (Tue, 30 Sep 2008) | 13 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: Since handler::get_auto_increment() doesn't allow us to return the cause of failure we have to inform MySQL using the sql_print_warning() function to return the cause for autoinc failure. Previously we simply printed the error code, this patch prints the text string representing the following two error codes: DB_LOCK_WAIT_TIMEOUT DB_DEADLOCK. Bug#35498 Cannot get table test/table1 auto-inccounter value in ::info Approved by Marko. ------------------------------------------------------------------------ r2709 | vasil | 2008-10-01 10:13:13 +0300 (Wed, 01 Oct 2008) | 10 lines Changed paths: M /branches/5.1/include/lock0lock.h M /branches/5.1/lock/lock0lock.c A /branches/5.1/mysql-test/innodb_bug38231.result A /branches/5.1/mysql-test/innodb_bug38231.test M /branches/5.1/row/row0mysql.c branches/5.1: Fix Bug#38231 Innodb crash in lock_reset_all_on_table() on TRUNCATE + LOCK / UNLOCK In TRUNCATE TABLE and discard tablespace: do not remove table-level S and X locks and do not assert on such locks not being wait locks. Leave such locks alone. Approved by:	Heikki (rb://14) ------------------------------------------------------------------------ r2710 | vasil | 2008-10-01 14:13:58 +0300 (Wed, 01 Oct 2008) | 6 lines Changed paths: M /branches/5.1/include/sync0sync.ic branches/5.1: Silence a compilation warning in UNIV_DEBUG. Approved by:	Marko (via IM) ------------------------------------------------------------------------ r2719 | vasil | 2008-10-03 18:17:28 +0300 (Fri, 03 Oct 2008) | 49 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc A /branches/5.1/mysql-test/innodb_bug39438-master.opt A /branches/5.1/mysql-test/innodb_bug39438.result A /branches/5.1/mysql-test/innodb_bug39438.test branches/5.1: Fix Bug#39438 Testcase for Bug#39436 crashes on 5.1 in fil_space_get_latch In ha_innobase::info() - do not try to get the free space for a tablespace which has been discarded with ALTER TABLE ... DISCARD TABLESPACE or if the .ibd file is missing for some other reason. ibd_file_missing and tablespace_discarded are manipulated only in row_discard_tablespace_for_mysql() and in row_import_tablespace_for_mysql() and the manipulation is protected/surrounded by row_mysql_lock_data_dictionary()/row_mysql_unlock_data_dictionary() thus we do the same in ha_innobase::info() when checking the values of those members to avoid race conditions. I have tested the code-path with UNIV_DEBUG and UNIV_SYNC_DEBUG. Looks like it is not possible to avoid mysqld printing warnings in the mysql-test case and thus this test innodb_bug39438 must be added to the list of exceptional test cases that are allowed to print warnings. For this, the following patch must be applied to the mysql source tree: --- cut --- === modified file 'mysql-test/lib/mtr_report.pl' --- mysql-test/lib/mtr_report.pl	2008-08-12 10:26:23 +0000 +++ mysql-test/lib/mtr_report.pl	2008-10-01 11:57:41 +0000 @@ -412,7 +412,10 @@ # When trying to set lower_case_table_names = 2 # on a case sensitive file system. Bug#37402. -                /lower_case_table_names was set to 2, even though your the file system '.*' is case sensitive.  Now setting lower_case_table_names to 0 to avoid future problems./ +                /lower_case_table_names was set to 2, even though your the file system '.*' is case sensitive.  Now setting lower_case_table_names to 0 to avoid future problems./ or + +                # this test is expected to print warnings +                ($testname eq 'main.innodb_bug39438') ) { next;                       # Skip these lines --- cut --- The mysql-test is currently somewhat disabled (see inside innodb_bug39438.test), after the above patch has been applied to the mysql source tree, the test can be enabled. rb://20 Reviewed by:	Inaam, Calvin Approved by:	Heikki ------------------------------------------------------------------------ r2720 | vasil | 2008-10-03 19:52:39 +0300 (Fri, 03 Oct 2008) | 8 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: Print a warning if an attempt is made to get the free space for a table whose .ibd file is missing or the tablespace has been discarded. This is a followup to r2719. Suggested by:	Inaam ------------------------------------------------------------------------ r2721 | sunny | 2008-10-04 02:08:23 +0300 (Sat, 04 Oct 2008) | 6 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: We need to send the messages to the client because handler::get_auto_increment() doesn't allow a way to return the specific error for why it failed. rb://18 ------------------------------------------------------------------------ r2722 | sunny | 2008-10-04 02:48:04 +0300 (Sat, 04 Oct 2008) | 18 lines Changed paths: M /branches/5.1/dict/dict0mem.c M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/include/dict0mem.h M /branches/5.1/include/row0mysql.h M /branches/5.1/mysql-test/innodb-autoinc.result M /branches/5.1/mysql-test/innodb-autoinc.test M /branches/5.1/row/row0mysql.c branches/5.1: This bug has always existed but was masked by other errors. The fix for bug# 38839 triggered this bug. When the offset and increment are > 1 we need to calculate the next value taking into consideration the two variables. Previously we simply assumed they were 1 particularly offset was never used. MySQL does its own calculation and that's probably why it seemed to work in the past. We would return what we thought was the correct next value and then MySQL would recalculate the actual value from that and return it to the caller (e.g., handler::write_row()). Several new tests have been added that try and catch some edge cases. The tests exposed a wrap around error in MySQL next value calculation which was filed as bug#39828. The tests will need to be updated once MySQL fix that bug. One good side effect of this fix is that dict_table_t size has been reduced by 8 bytes because we have moved the autoinc_increment field to the row_prebuilt_t structure. See review-board for a detailed discussion. rb://3 ------------------------------------------------------------------------ "	cb0cacc2d8392a0d6105fa21d215719e97a20cee
----------------------------
"branches/5.1: Fix Bug#39438 Testcase for Bug#39436 crashes on 5.1 in fil_space_get_latch In ha_innobase::info() - do not try to get the free space for a tablespace which has been discarded with ALTER TABLE ... DISCARD TABLESPACE or if the .ibd file is missing for some other reason. ibd_file_missing and tablespace_discarded are manipulated only in row_discard_tablespace_for_mysql() and in row_import_tablespace_for_mysql() and the manipulation is protected/surrounded by row_mysql_lock_data_dictionary()/row_mysql_unlock_data_dictionary() thus we do the same in ha_innobase::info() when checking the values of those members to avoid race conditions. I have tested the code-path with UNIV_DEBUG and UNIV_SYNC_DEBUG. Looks like it is not possible to avoid mysqld printing warnings in the mysql-test case and thus this test innodb_bug39438 must be added to the list of exceptional test cases that are allowed to print warnings. For this, the following patch must be applied to the mysql source tree: --- cut --- === modified file 'mysql-test/lib/mtr_report.pl' --- mysql-test/lib/mtr_report.pl	2008-08-12 10:26:23 +0000 +++ mysql-test/lib/mtr_report.pl	2008-10-01 11:57:41 +0000 @@ -412,7 +412,10 @@ # When trying to set lower_case_table_names = 2 # on a case sensitive file system. Bug#37402. -                /lower_case_table_names was set to 2, even though your the file system '.*' is case sensitive.  Now setting lower_case_table_names to 0 to avoid future problems./ +                /lower_case_table_names was set to 2, even though your the file system '.*' is case sensitive.  Now setting lower_case_table_names to 0 to avoid future problems./ or + +                # this test is expected to print warnings +                ($testname eq 'main.innodb_bug39438') ) { next;                       # Skip these lines --- cut --- The mysql-test is currently somewhat disabled (see inside innodb_bug39438.test), after the above patch has been applied to the mysql source tree, the test can be enabled. rb://20 Reviewed by:	Inaam, Calvin Approved by:	Heikki "	859c2873fceadd2c421d7928e81dcb8a90774b20
----------------------------
Bug #39812: Make statement replication default for 5.1 (to match 5.0) Make STMT replication default for 5.1. Add a default of MIXED into the config files Fix the tests that needed MIXED replication mode. 	7a05a4f5dcb4e40781f50a376649f14fd33d28ec
----------------------------
branches/zip: Make innodb_lock_wait_timeout a settable session variable (Bug #36285, rb://9). innodb-index.test, innodb-index.result: Set innodb_lock_wait_timeout as a session variable instead of relying on the global value. innodb-index-master.opt: Remove. innodb-timeout.test: Test that setting the innodb_lock_wait_timeout works as advertised. thd_lock_wait_timeout(): New function, to retrieve the lock wait timeout for a given MySQL client connection (thd), or the global value (thd==NULL). srv_lock_wait_timeout, innobase_lock_wait_timeout: Remove. Replace MYSQL_SYSVAR_LONG(lock_wait_timeout) with MYSQL_THDVAR_ULONG(lock_wait_timeout). 	be56c64772b1c67e2074dd3831b36a214ca39a24
----------------------------
Fix for Bug#36874 : main.slow_launch_time_func test fails 	85d8b39bbba50e411031cea45aa6d510c8a5f2f1
----------------------------
"Merge: 7a12b01 e1ea011 Merge 5.0 -> 5.1 of fix for Bug#38427 ""Data too long"" in some configurations, tests ""<ENGINE>_func_view"" fail "	d6c02b2216df8cb61f9be9dfbc93f1ab0a1b5bd6
----------------------------
"Fix for Bug#38427 ""Data too long"" in some configurations, tests ""<ENGINE>_func_view"" fail "	e1ea011ceef02b2953afdc0a549e9bb2d1c9ec2b
----------------------------
"Fix for Bug#37744 Expected result of ""<engine>_storedproc"" test is inconsistent + several improvements Details: - The subtest with assignment of floating point numbers to DECIMAL parameters in functions and procedures checks now that the final DECIMAL value is the same as if we assign the floating point numbers to columns, user variables etc. = The impact of math libs or truncation must be the same. - Remove storage engine variants of this test because the stored procedure properties tested do not depend on the storage engine. Use the fastest storage engine (MEMORY) for any tables needed. - reset global sort_buffer_size to startup value - Partially improved formatting. "	766803d5174ef27cfc637f8627ba59d49a445032
----------------------------
Bug#35164: Large number of invalid pthread_attr_setschedparam calls Bug#37536: Thread scheduling causes performance degradation at low thread count Deprecated --skip-thread-priority startup option as newer versions of the server won't change the thread priorities by default. Giving threads different priorities might yield marginal improvements in some platforms (where it actually works) but on the other hand it might cause significant degradation depending on the thread count and number of processors. Meddling with the thread priorities is a not a safe bet as it is very dependent on the behavior of the cpu scheduler and system where MySQL is being run. From MySQL 6.0 and up the default behavior is that of not modifying the threads priorities. 	4103dea401d8c4739381343eb306c09258b6ba32
----------------------------
branches/zip: Merge revisions 2630:2702 from branches/5.1: ------------------------------------------------------------------------ r2702 | sunny | 2008-09-30 11:41:56 +0300 (Tue, 30 Sep 2008) | 13 lines branches/5.1: Since handler::get_auto_increment() doesn't allow us to return the cause of failure we have to inform MySQL using the sql_print_warning() function to return the cause for autoinc failure. Previously we simply printed the error code, this patch prints the text string representing the following two error codes: DB_LOCK_WAIT_TIMEOUT DB_DEADLOCK. Bug#35498 Cannot get table test/table1 auto-inccounter value in ::info Approved by Marko. ------------------------------------------------------------------------ rb://18 	3b90e70d744d9ed863d67cf5873e8923ff6e0dcf
----------------------------
- global schema lock for ndbcluster in mysqld - discover of databases for ndbcluster in mysqld 	a40de98346182841a920e9b20549ae1805532c57
----------------------------
branches/5.1: Since handler::get_auto_increment() doesn't allow us to return the cause of failure we have to inform MySQL using the sql_print_warning() function to return the cause for autoinc failure. Previously we simply printed the error code, this patch prints the text string representing the following two error codes: DB_LOCK_WAIT_TIMEOUT DB_DEADLOCK. Bug#35498 Cannot get table test/table1 auto-inccounter value in ::info Approved by Marko. 	8a92f6fe2c0e2ac2e826a20e76b345bcac9d60cd
----------------------------
BUG#38734 rpl_server_id2 sync_with_master failed Rotate event is automatically generated and written when rotating binary log or relay log. Rotate events for relay logs are usually ignored by slave SQL thread becuase they have the same server id as that of the slave. However, if --replicate-same-server-id is enabled, rotate event for relay log would be treated as if it's a rotate event from master, and would be executed by slave to update the rli->group_master_log_name and rli->group_master_log_pos to a wrong value and cause the MASTER_POS_WAIT function to fail and return NULL. This patch fixed this problem by setting a flag bit (LOG_EVENT_RELAY_LOG_F) in the event to tell the SQL thread to ignore these Rotate events generated for relay logs. This patch also added another binlog event flag bit (LOG_EVENT_ARTIFICIAL_F) to distinquish faked events, the method used before this was by checking if log_pos was zero. 	0d2025e1d4c0b80a13bff64165a06ff71721a7b8
----------------------------
branches/zip: add MySQL files that will be changed for Windows plugin. The following files are from MySQL source tree without any changes. They will be changed for building Windows plugin. The original files will be used as the base for diff purpose. * CMakeLists.txt * sql/CMakeLists.txt * win/configure.js 	4a3ff30caad2d655c885db4720a95a6d20745a2a
----------------------------
ndb - atrt fix replication in 6.0 allow configurations wo/ cluster 	e2e6f653256292f728b875824e4310d6d81eaf91
----------------------------
"branches/zip: When creating an index in innodb_strict_mode, check that the maximum record size will never exceed the B-tree page size limit. For uncompressed tables, there should always be enough space for two records in an empty B-tree page.  For compressed tables, there should be enough space for storing two node pointer records or one data record in an empty page in uncompressed format. dict_build_table_def_step(): Remove the inaccurate check for table row size. dict_index_too_big_for_tree(): New function: check if the index records would be too big for a B-tree page. dict_index_add_to_cache(): Add the parameter ""strict"".  Invoke dict_index_too_big_for_tree() if it is set. trx_is_strict(), thd_is_strict(): New functions, for determining if innodb_strict_mode is enabled for the current transaction. dict_create_index_step(): Pass the new parameter strict of dict_index_add_to_cache() as trx_is_strict(trx).  All other callers pass it as FALSE. innodb.test: Enable innodb_strict_mode before attempting to create a table with a too big record size. innodb-zip.test: Remove the test of inserting random data.  Add tests for checking that the maximum record lengths are enforced at table creation time. "	75fe6fa6a432eda04bdd688e8ee86f4f47b3e177
----------------------------
branches/zip: Add some tests for innodb_strict_mode. ha_innodb.cc: Declare strict_mode as PLUGIN_VAR_OPCMDARG, because we do want to be able to disable innodb_strict_mode.  This is a non-functional change, because PLUGIN_VAR_NOCMDARG seems to accept an argument as well. innodb-zip.test: Do not store innodb_strict_mode.  It is a session variable. Add a test case for innodb_strict_mode=off. 	34426c473e8a713fedd66d8dda7b345ab337de69
----------------------------
Fix for Bug#38184 : main.federated fails sporadically Details: - backport of some improvements which prevent sporadic failures from 5.1 to 5.0 - @@GLOBAL.CONCURRENT_INSERT= 0 also for slave server - --sorted_result before all selects which have result sets with more than one row - Replace error numbers by error names 	2130b894a273145f998807869df2d57812730802
----------------------------
WL#4350 Extend Config 	4e1b6dcad54bdefdc8fd0d48a77301c3800bcb27
----------------------------
"Merge: 031dabd ef1d6cc Bug#37938 Test ""mysqldump"" lacks various INSERT statements / values Merge of fixes from 5.0 -> 5.1 Moved restoration of concurrent_insert's original value to the end of the 5.1 tests Re-recorded .result file to account for changes to test file. "	d1bb214b3adcf72df04063971011369911c4d8a2
----------------------------
"Bug#37938 Test ""mysqldump"" lacks various INSERT statements / values Moved fix for this bug to 5.0 as other mysqldump bugs seem tied to concurrent_insert being on Setting concurrent_insert off during this test as INSERTs weren't being completely processed before the calls to mysqldump, resulting in failing tests. Altered .test file to turn concurrent_insert off during the test and to restore it to whatever the value was at the start of the test when complete. Re-recorded .result file to account for changes to variables in the test. "	ef1d6cca00242f6b20e2215f06c5f82361b91ea0
----------------------------
WL#4189 Create a tempdir if tmpdir path becomes too long 	588efe1216f60bb2c491a7077f0162d9a1abff45
----------------------------
"branches/zip: Add a test case to check that mysqld does not crash when running ANALYZE TABLE with different values for innodb_stats_sample_pages. Suggested by:	Marko Approved by:	Marko "	5af796d22b2100507fcf6d72f51d3424304377d5
----------------------------
ndb - ndb_config, adjust to new sorting of result 	507e8ed21de901a11b4eab9fbf8a19a455dcd240
----------------------------
WL#4350 Add 'set config' to ndb_mgmd 	ee8956fea3895452bf06e2e222c5534eda1585fb
----------------------------
WL#4350 Add 'ndb_mgm_set_configuration' to mgmapi 	a99eae879f7c314cd975421e2ada8667d03281f0
----------------------------
Fix for bug#38349: concurrent_insert_func must not with embedded server. 	48868b2d0e9ea83b83df077a65c6f6aa590e12d6
----------------------------
Final fix for bug#38349: Did the changes due to the 2 reviews. - Updated slow_query_log_file_basic and general_log_file basis instead of the func version as the func version run good but the basic versions fail. - Sent innodb.test to dev@innodb.com. - variables.test has differences probably due to a bug in mtr or in the SET statement (see bug#39369). - general_log_file_basic.test and slow_query_log_file_bsaic.test have differences, which might be produced by the new mtr (see bug#38124). 	a5e248d4023180d81c27acb9f764e00d4b7cc488
----------------------------
Update win/configure.js for NDB (and dependencies) 	c9f581cfeb1267630a52c5089fd3c094d5502425
----------------------------
WL#4350 Options in my.cnf style config file should not start with -- 	9dbcf1b26f86603c06bbd714274294d83e279c52
----------------------------
ndb - atrt - autoconfigure ndb_X_fs directory to cwd this should fix the problems seen in trondheim... but I have no clue why we havent seen this before 	8121e4c971d3351374b7c50ebc3a9b7a893183c9
----------------------------
Bug#36099 replicate-do-db affects replaying RBR events with mysqlbinlog The replication filtering rules were inappropiately applied when executing BINLOG pseudo-query.  The rules are supposed to be active only at times when the slave's sql thread executes an event. Fixed with correcting a condition to call replication rules only if the slave sql thread executes the event. 	21a08eabadb7a9e7a8257f628f2a77fc6de74abf
----------------------------
Use correct paths for vs_config_dirs for ndb binaries. $ndb_path is full path to ndb/ or storage/ndb. We only do NDB on Win32 in 5.1+ which is storage/ndb, so just use storage/ndb here. 	cb196d104522d9fb9113f1fa79e72d90f02de270
----------------------------
mysql-test-run.pl vs_config_dirs for NDB binaries: i.e. allow mtr on windows to find ndb binaries. 	1d6db0462d08e369a2cd8f972763a9438f7df9ce
----------------------------
update config.cmake to support building of embedded server, remove old bdb, fix partitioning description. 	fc4917e7c16638693f6fdcb0c1ca4b5d179ef316
----------------------------
replace gettimeofday in ha_ndbcluster.cc with portable timespec arithmetic. 	cf011c07212d0c8a72346854c1693bad1eb51a22
----------------------------
"Bug#37098  Get rid of ""Installed (but unpackaged)"" files in the RPM build Mostly, this affected files (programs, scripts, and manual pages) which got built during a RPM build but were not listed in the appropriate ""%files"" section of the ""spec"" file. This is fixed now, they are added. To make this consistent, this patch also makes the build of ""innochecksum"" (and its inclusion in a tar.gz or other package) depend on whether InnoDB is configured in the build. Also, some tools to create Windows packages are irrelevant in any binary Unix package (not the sources !), and so they are deleted before packaging. "	ff3d230a03a69330d30ccbb43ce8550cdd6536d4
----------------------------
Bug#37428 Potential security issue with UDFs - linux shellcode execution. plugin_dir option backported from 5.1 	515de310f03012b8502a33af9b60d602042180ab
----------------------------
win32 build fixes for ha_ndbcluster (snprintf and gettimeofday) 	95b89ac06dbab0e3b0ad291f694020b7535eae28
----------------------------
Add PARTITION to config.cmake (allowing selection from Cmake UI). Automatically enable partitioning if NDB engine is enabled. 	4deafc9148d1e847e0d2aaadb506d233ae193377
----------------------------
[patch 58/64] WL4012 WL1744 (ndb on win32) dont need netdb.h, is included by my_socket_posix.h--- storage/ndb/tools/ndb_config.cpp |    2 -- 1 file changed, 2 deletions(-) Index: ndbwin32/storage/ndb/tools/ndb_config.cpp =================================================================== 	5fa1e428cfda74d0ec1c8e3ce86fbdb62b7c4dc3
----------------------------
[patch 46/64] WL4012 WL1744 (ndb on win23) include paths for ndb kernel build. some blocks include other blocks headers. add src/kernel/blocks to include path--- storage/ndb/config/type_kernel.cmake                   |    1 + storage/ndb/src/kernel/blocks/dbtup/DbtupExecQuery.cpp |    2 +- storage/ndb/src/kernel/blocks/dbtup/DbtupIndex.cpp     |    2 +- 3 files changed, 3 insertions(+), 2 deletions(-) Index: ndbwin32/storage/ndb/config/type_kernel.cmake =================================================================== 	0c2a8cfaa01b4e7ddf2e61eb1670d7b74dc6f362
----------------------------
[patch 34/64] WL4012 WL1744 (ndb on win32) my_config -> my_global.h for ndb basestring_vsnprintf.c--- storage/ndb/src/common/util/basestring_vsnprintf.c |    2 +- 1 file changed, 1 insertion(+), 1 deletion(-) Index: ndbwin32/storage/ndb/src/common/util/basestring_vsnprintf.c =================================================================== 	9161e9e4171113dad6c8bf32fff1816a103334cd
----------------------------
[patch 27/64] WL4012 WL1744 (ndb on win32) fix (some) compiler warnings--- include/config-win.h                                   |    1 + mysys/my_init.c                                        |    2 +- storage/ndb/include/util/Vector.hpp                    |    5 +++-- storage/ndb/src/common/mgmcommon/IPCConfig.cpp         |    2 +- storage/ndb/src/common/util/Properties.cpp             |    2 +- storage/ndb/src/mgmapi/mgmapi.cpp                      |    4 ++-- storage/ndb/src/ndbapi/ClusterMgr.cpp                  |    6 +++--- storage/ndb/src/ndbapi/NdbDictionaryImpl.cpp           |    2 +- storage/ndb/src/ndbapi/NdbWaiter.hpp                   |    6 +++--- storage/ndb/src/ndbapi/SignalSender.cpp                |    4 ++-- storage/ndb/src/ndbapi/SignalSender.hpp                |    2 +- storage/ndb/src/ndbapi/ndb_cluster_connection_impl.hpp |    4 ++-- 12 files changed, 21 insertions(+), 19 deletions(-) Index: include/config-win.h =================================================================== 	541a45f2887c736812b8f8d2d8d88ca5afc5a844
----------------------------
[patch 26/64] WL4012 WL1744 (ndb on win32) Define ENOTSUP on Windows (not supplied by host, use Solaris define)--- include/config-win.h |    6 ++++++ 1 file changed, 6 insertions(+) Index: ndbwin32/include/config-win.h =================================================================== 	aed056ed26b9c759890d0859af9f95f458fe517d
----------------------------
[patch 20/64] WL4012 WL1744 (ndb on win32) remove strcasecmp from ndb_global.h(.in) - already defined in config-win.h 	19d75aad372db73f7c189e989b5b4ab48197c0a0
----------------------------
[patch 17/64] WL4012 WL1744 (ndb on win32): ndb_opts full implementation--- storage/ndb/include/util/ndb_opts.h         |   15 +-- storage/ndb/src/common/util/Makefile.am     |    2 storage/ndb/src/common/util/ndb_opts.c      |  123 ++++++++++++++++++++++++++++ storage/ndb/src/kernel/vm/Configuration.cpp |   17 +-- storage/ndb/src/mgmclient/main.cpp          |   18 ++-- storage/ndb/src/mgmsrv/ConfigInfo.cpp       |    4 storage/ndb/src/mgmsrv/MgmtSrvr.cpp         |    2 storage/ndb/src/mgmsrv/main.cpp             |   17 ++- storage/ndb/test/src/NDBT_Test.cpp          |   15 ++- storage/ndb/tools/delete_all.cpp            |   21 ++-- storage/ndb/tools/desc.cpp                  |   23 ++--- storage/ndb/tools/drop_index.cpp            |   20 +--- storage/ndb/tools/drop_tab.cpp              |   20 +--- storage/ndb/tools/listTables.cpp            |   25 ++--- storage/ndb/tools/ndb_config.cpp            |   16 +-- storage/ndb/tools/restore/restore_main.cpp  |   15 +-- storage/ndb/tools/select_all.cpp            |   25 ++--- storage/ndb/tools/select_count.cpp          |   20 +--- storage/ndb/tools/waiter.cpp                |   13 +- 19 files changed, 248 insertions(+), 163 deletions(-) Index: storage/ndb/src/common/util/Makefile.am =================================================================== 	cdeeb83f6b90f7db244f9682ebc3d550c6c88a17
----------------------------
[patch 08/64] WL4012 WL1744 (ndb on win32): target NT5, true/false defines, socket errors, getsockopt--- include/config-win.h |   14 +++++++------- include/my_global.h  |    2 ++ include/my_net.h     |    4 ++++ mysys/my_net.c       |    9 +++++++++ mysys/my_wincond.c   |    1 + 5 files changed, 23 insertions(+), 7 deletions(-) Index: include/config-win.h =================================================================== 	6350c816d5fef1eb6aa71625bd097979caab03aa
----------------------------
[patch 03/64] WL4012 WL1744 (ndb on win32): use my_global insetad of my_configthis includes the right headers for win32 	88f91318c8767a1020383dd4fbce01c6db4895ba
----------------------------
Bug#21579 - innodb_concurrent random failures with varying differences Due to unknown changes the test failed in some ways. Fixed by checking the test case in detail, commenting the expected behavior, and fixing error directives. In the course of the analyze unneeded get_lock()/release_lock() use, unneeded send/reap use, and unneeded sleeps were removed. The lock wait timeout was reduced to 1 second, so that this is no big-test any more. The test was split into two parts, one running the tests with --innodb_locks_unsafe_for_binlog, the other part without. The main part (include/concurrent.inc) conditionally expects lock wait timeouts based on the value of the system variable innodb_locks_unsafe_for_binlog. The major part of the patch comes from Kristofer Pettersson. (Chad queues this patch on demand by Trudy/Davi.) 	6d6b9ffec891e0779e0a7bef6c58ca3679ab6cf1
----------------------------
Correcting tree name in bzr config.  Should not include team suffix. 	18e93e8fd9ab23f0bac9d68b7af1840f8122e74e
----------------------------
Bug#18817, removing --binlog-format option from .opt files 	35e47b31a283add902d87f36caf4aeaefd0dd098
----------------------------
WL#4380 Added a comment to the abi_check related part of configure.in 	eaeef499547bb30f5399a0a9300c346dda961b9e
----------------------------
"branches/innodb+:  Merge revisions 2460:2579 from branches/zip The followin mysql-tests failed (and they are known to fail): main.information_schema        	[ fail ] main.innodb_file_per_table_basic[ fail ] main.type_bit_innodb           	[ fail ] Tested against : MYSQL_SERVER_VERSION  ""5.1.28"" "	4b06a4b130906fadc2782ba1166d791f91ccef70
----------------------------
"branches/zip: The cardinality of every index (the number of different key values) is calculated when the table is opened, at SHOW TABLE STATUS, ANALYZE TABLE and on other circumstances (like when the table has changed too much). Note that if the mysql client is running with the auto-rehash setting turned on (default) this causes all tables to be opened when it starts. Previously InnoDB sampled 8 random pages from the index to get an estimate of the cardinality. Now the number of sampled pages can be changed via the global parameter innodb_stats_sample_pages which can be tuned at runtime. The default value for this parameter is 8. If the value of this parameter is changed, there may be serious problems: - small values (say, 1) can cause an error in table stats; - values much larger than 8 (say, 100), can cause a big slowdown in table opening time, SHOW TABLE status, etc. - query plans may be different from the old ones. Approved by:	Heikki "	9bbd5454dbbc3443b5776737b9e087ce26b94275
----------------------------
Patch for combinations file using different --default-storage-engine= directives 	afbbe64aae7755122fb8a43c282b0aea3ee17ed4
----------------------------
Bug #32406  #ifdef LATER_HAVE_NDBCLUSTER_DB in client/mysqladmin.cc 	27b37e45b0f88a3948f17128805d25fd3cec98c0
----------------------------
Bug#35808 utf8 hungarian collation not part of the utf8 charset? config/ac-macros/character_sets.m4 didn't mention hungarian collations in the UTF8 and UCS2 lists. 	08162d8c3b79be33b7c8ddad828a1eebd0f958db
----------------------------
Bug#37428 Potential security issue with UDFs - linux shellcode execution. plugin_dir option backported from 5.1 per-file messages: sql/mysql_priv.h Bug#37428 Potential security issue with UDFs - linux shellcode execution. opt_plugin_dir and opt_plugin_dir_ptr declared. sql/mysqld.cc Bug#37428 Potential security issue with UDFs - linux shellcode execution. 'plugin_dir' option added sql/set_var.cc Bug#37428 Potential security issue with UDFs - linux shellcode execution. 'plugin_dir' option added. sql/sql_udf.cc Bug#37428 Potential security issue with UDFs - linux shellcode execution. opt_plugin_dir added to the udf->dl path. Warn if it's not specified. sql/unireg.h Bug#37428 Potential security issue with UDFs - linux shellcode execution. PLUGINDIR defined. 	5237d24423560970b7bcf51828707d24091eb1cc
----------------------------
wl#4391 02.diff LocalProxy, including READ_CONFIG, and subclasses. 	68e6b1a62458518a7ada6b2cd36d0c1ed1783dee
----------------------------
Print config from the loaded config instead of printing while loading from disk - Remove unused functions Config::prinAllNameValuePairs, Config::printConfigFile and MgmtSrvr::saveConfig x 2 	94bc5ff4ee09ccb1616d0f64993f93891b884e35
----------------------------
Check that the default-storage-engine used by test is a supported engine 	ee3b5acc6200150d2da0f8ccfffcb8ea0c3f4e18
----------------------------
Bug#37027 expire_logs_days and missing binlogs cause a crash ! If the server failed to expired log files during start up it could crash. 	71930db28f94654dd95b2c3c143ed34367d41176
----------------------------
BUG#38170: rpl_variables failed on pushbuild: could not sync with master Problem: the test set @@global.init_slave to garbage at a time which was not guaranteed to be after the time when the slave's SQL thread used it. That would cause the slave's SQL thread to stop in rare cases. Fix: The test does not care about the value of @@global.init_slave, except that it should be different on master and slave. Hence, we set @@global.init_slave to something that is valid SQL. 	e77957eecb5c24d60b2633e6624cd894016f11fc
----------------------------
Bug#30087 Set query_cache_size, if the value is too small, get a unclear warning Reverting the previous patch 	b8579849f32f149cfc7885d06a1272bd832b6389
----------------------------
BUG#35478: sort_union() returns bad data when sort_buffer_size is hit - In QUICK_INDEX_MERGE_SELECT::read_keys_and_merge: when we got table->sort from Unique, tell init_read_record() not to use rr_from_cache() because a) rowids are already sorted and b) it might be that the the data is used by filesort(), which will need record rowids (which rr_from_cache() cannot provide). - Fully de-initialize the table->sort read in QUICK_INDEX_MERGE_SELECT::get_next(). This fixes BUG#35477. (bk trigger: file as fix for BUG#35478). 	2951f00be4c2e332686ca713f77dab39615ea083
----------------------------
Bug#37402: Mysql cant read partitioned table with capital letter in the name Problem was that ha_partition had HA_FILE_BASED flag set (since it uses a .par file), but after open it uses the first partitions flags, which results in different case handling for create and for open. Solution was to change the underlying partition name so it was consistent. (Only happens when lower_case_table_names = 2, i.e. Mac OS X and storage engines without HA_FILE_BASED, like InnoDB and Memory.) (Recommit after adding rename of check_lowercase_names to get_canonical_filename, and moved it from handler.h to mysql_priv.h) NOTE: if a mixed case name for a partitioned table was created when lower_case_table_name = 2 it should be renamed or dropped before using the updated version (See bug#37402 for more info) 	295fc5834aef999a8f77d0b38037699d7a2b26bc
----------------------------
"Fix for bug#37669: Server crash by setting ""@@session.innodb_table_locks"" Problem: reading/writing data from/to an address without proper alignment leads to SIGBUS on some platforms. Fix: use the correct data type when dereferencing variable values. "	db56fd008c118246a0ee92c2949b3502fbe324ba
----------------------------
BUG#37906: innodb_max_dirty_pages_pct_func does not clean up after itself Made the test innodb_max_dirty_pages_pct_func clean up after itself. 	e467919d18c2da322c235f76e5267c3e5195a284
----------------------------
"branches/zip: Add a space in a warning message. No functional change to the code. The original message is ""invalid innodb_file_format_checkvalue;..."". The new one is ""invalid innodb_file_format_check value;..."" "	b4d2512bbdb90c791fa67b89d85658ff19393bbe
----------------------------
"Merge: 9d84892 0632a93 Up-merge from 5.0: Fix for Bug#20748, Configuration files should not be read more than once Differences in 5.1: include ""/etc/mysql/"" in include directories; no OS/2 support. "	e3fc4494526ee7ee3a99ae0bfa708bd64e7f60bc
----------------------------
add config file for trondheim host also to Makefile 	a8ade2f45245287990bf7fe62b5a380cafa52503
----------------------------
Bug #20748: Configuration files should not be read more than once Normalize directory names before adding them to default_directories. 	0632a93e08de60427624cc3e6178eb625d8c215a
----------------------------
add config file for trondheim host 	cedbf912df405791d99c163e3990009df1922802
----------------------------
add hook for os-specific configure options for autotest 	f860794bcfdd6cae240865803727406a9207a732
----------------------------
Improve error message when failing to find config file to use 	c6dbddb57169179f413aa74e9c6556743392f0e7
----------------------------
"branches/zip: Fix the rpl_ddl mysql-test that produces a warnings: master.err: rpl.rpl_ddl: 080611 16:27:01 [Warning] MySQL is closing a connection that has an active InnoDB transaction.  13 row modifications will roll back. the bug was introduced in r2256, which adds ""prebuilt->trx->active_trans = 1;"" in ::add_index() and ::final_drop_index() but never calls innobase_commit() or innobase_rollback() to set back active_trans to 0. Also, per Heikki's suggestion we remove the calls to trans_register_ha() from ::add_index() and ::final_drop_index(). Following is the IM discussion that took place about this: --- cut --- (17:59:05) vasil: unsigned        active_trans:2; /* 1 - if a transaction in MySQL is active. 2 - if prepare_commit_mutex was taken */ (17:59:13) vasil: what about 0? (17:59:26) Heikki: Hmm (17:59:42) Heikki: Maybe in the other cases :) (18:01:00) vasil: 2   1369  handler/ha_innodb.cc <<<unknown>>> if (trx->active_trans == 0) { 3   1372  handler/ha_innodb.cc <<<unknown>>> trx->active_trans = 1; (18:01:05) vasil: yes, it can be 0 (18:01:38) Heikki: Maybe no active transaction => the value is 0 (18:02:03) vasil: probably yes (18:09:09) vasil: /* The flag trx->active_trans is set to 1 in 1. ::external_lock(), 2. ::start_stmt(), 3. innobase_query_caching_of_table_permitted(), 4. innobase_savepoint(), 5. ::init_table_handle_for_HANDLER(), 6. innobase_start_trx_and_assign_read_view(), 7. ::transactional_table_lock() and it is only set to 0 in a commit or a rollback. (18:09:14) vasil: this is no longer true (18:09:35) vasil: it is also set to 1 in ::final_drop_index (18:09:56) vasil: and in ::add_index() (18:12:31) Heikki: Please correct the comment :( (18:13:01) vasil: it is not only the comment, I am trying to understand what's wrong (18:13:28) Heikki: What is the symptom? (18:14:37) vasil: can you find this email and the subsequent one: From: Vasil Dimov <vasil.dimov@oracle.com> To: InnoDB Dev <innodb_dev_ww@oracle.com> Subject: Re: innodb - marko - r2256 - in branches/zip: handler include lock trx Date: Wed, 11 Jun 2008 16:33:47 +0300 (18:15:02) vasil: the symptom is master.err: rpl.rpl_ddl: 080611 16:27:01 [Warning] MySQL is closing a connection that has +an active InnoDB transaction.  13 row modifications will roll back. (18:16:22) vasil: My understanding till now is that active_trans is set to 1 in ::add_index() and forgotten like this, never set to 0; I wonder if it should be set to 0 somewhere at the end or not set to 1 at all... or there is more... (18:16:31) Heikki: Vasil, ok the problem is that Marko forgets to commit the transaction (18:16:55) Heikki: An active transaction has to be committed or rolled back (18:17:09) vasil: but i can find this in ::add_index(): /* Commit the data dictionary transaction in order to release the table locks on the system tables.  Unfortunately, this means that if MySQL crashes while creating a new primary key inside row_merge_build_indexes(), indexed_table will not be dropped on crash recovery.  Thus, it will become orphaned. */ trx_commit_for_mysql(trx); (18:17:27) vasil: but this function does not set active_trans to 0 (18:17:43) Heikki: Let me look (18:19:20) vasil: it is only set to 0 in innobase_commit() and in innobase_rollback() (18:20:10) Heikki: Ok (18:20:59) Heikki: Hmm... (18:21:08) vasil: innobase_commit() calls innobase_commit_low() calls trx_commit_for_mysql() innobase_commit() sets active_trans=0 (18:21:26) Heikki: active_trans is strictly a ha_innodb.cc variable (18:21:53) Heikki: It is intended to be used in transactions visible to MySQL (18:22:25) Heikki: I think Marko should call innobase_commit() (18:23:51) vasil: but still set active_trans=1 inside :add_index() inside handler/handler0alter.cc? (18:24:12) Heikki: Hmm (18:24:56) Heikki: I think the transaction is NOT really visible to MySQL (18:24:57) vasil: > Author: marko > Date: 2008-01-25 16:26:07 +0200 (Fri, 25 Jan 2008) > New Revision: 2256 > > Log: > branches/zip: Fast index creation: Release locks on system tables before > creating indexes.  Lock the user table inside the user transaction. > > enum trx_dict_op: Remove TRX_OP_INDEX_MAY_WAIT. > > ha_innobase::add_index(): Lock the user tables within prebuilt->trx. > Commit the data dictionary transaction before creating indexes. > > ha_innobase::final_drop_index(): Lock the user table within prebuilt->trx. (18:26:41) Heikki: Let me look at the old ::create_table() (18:27:25) Heikki: Ok, in the old code, the transactions are internal to InnoDB, not visible to MySQL (18:27:46) Heikki: I think it is an error to set active_trans=1 inside :add_index() i (18:28:11) Heikki: MySQL is not really interested in HOW the engine adds the index. In a transaction or not. (18:28:26) vasil: this is the change inside drop_index(), that is supposed to ""Lock the user table within prebuilt->trx"": (18:28:37) vasil: @@ -1093,27 +1101,25 @@ ha_innobase::final_drop_index( /* Create a background transaction for the operations on the data dictionary tables. */ trx = trx_allocate_for_mysql(); trx_start_if_not_started(trx); trans_register_ha(user_thd, FALSE, ht); + prebuilt->trx->active_trans = 1; trx->mysql_thd = user_thd; trx->mysql_query_str = thd_query(user_thd); /* Flag this transaction as a dictionary operation, so that - the data dictionary will be locked in crash recovery.  Prevent - warnings if row_merge_lock_table() results in a lock wait, - i.e., when another transaction is holding a conflicting lock - on the table, e.g., because of SELECT ... FOR UPDATE. */ - trx_set_dict_operation(trx, TRX_DICT_OP_INDEX_MAY_WAIT); + the data dictionary will be locked in crash recovery. */ + trx_set_dict_operation(trx, TRX_DICT_OP_INDEX); /* Lock the table exclusively, to ensure that no active transaction depends on an index that is being dropped. */ err = convert_error_code_to_mysql( -  row_merge_lock_table(trx, prebuilt->table, LOCK_X), +  row_merge_lock_table(prebuilt->trx, prebuilt->table, LOCK_X), user_thd); if (UNIV_UNLIKELY(err)) { /* Unmark the indexes to be dropped. */ row_mysql_lock_data_dictionary(trx); @@ -1125,14 +1131,12 @@ ha_innobase::final_drop_index( } row_mysql_unlock_data_dictionary(trx); goto func_exit; } - trx_set_dict_operation(trx, TRX_DICT_OP_INDEX); - /* Drop indexes marked to be dropped */ row_mysql_lock_data_dictionary(trx); index = dict_table_get_first_index(prebuilt->table); @@ -1159,12 +1163,13 @@ ha_innobase::final_drop_index( dict_table_check_for_dup_indexes(prebuilt->table); #endif row_mysql_unlock_data_dictionary(trx); func_exit: trx_commit_for_mysql(trx); + trx_commit_for_mysql(prebuilt->trx); /* Flush the log to reduce probability that the .frm files and the InnoDB data dictionary get out-of-sync if the user runs with innodb_flush_log_at_trx_commit = 0 */ log_buffer_flush_to_disk(); (18:28:43) Heikki: Let me look (18:29:05) vasil: this is the change inside drop_index(), that is supposed to ""Lock the user table within prebuilt->trx"" (18:29:26) Heikki:   trans_register_ha(user_thd, FALSE, ht); + prebuilt->trx->active_trans = 1; (18:29:34) Heikki: I think the above code should be removed (18:29:53) Heikki: MySQL is not interested in InnoDB's transaction in this case (18:30:33) Heikki: Alternatively, we should use innobase_commit() instead of trx_commit_... (18:31:01) vasil: but there are many places in ::add_index() where it could return before reaching the trx_commit... (18:31:12) vasil: leaving active_traans=1 (18:31:56) Heikki: Does Marko handle the errors with trx_rollback()? (18:32:08) vasil: let me see.. (18:32:30) Heikki: It is risky to leave error handling to MySQL :( (18:32:35) vasil: 651         if (UNIV_UNLIKELY(error)) { 652 err_exit: 653                 mem_heap_free(heap); 654                 trx_general_rollback_for_mysql(trx, FALSE, NULL); 655                 trx_free_for_mysql(trx); 656                 trx_commit_for_mysql(prebuilt->trx); 657                 DBUG_RETURN(error); 658         } (18:32:43) Heikki: Ok (18:33:25) Heikki: Please remove the ha_register... and active_trx =1 .... (18:33:42) Heikki: Then check if it prints something (18:34:08) Heikki: I believe MySQL is not interested in how the engine does the index build (18:34:11) vasil: why remove ha_register? (18:34:28) Heikki: Because there is no transaction visible to MySQL (18:34:53) vasil: the ha_register call was there from before (18:35:09) Heikki: Registers that InnoDB takes part in an SQL statement, so that MySQL knows to roll back the statement if the statement results in an error. This MUST be called for every SQL statement that may be rolled back by MySQL. Calling this several times to register the same statement is allowed, too. (18:36:01) Heikki: Hmm (18:36:17) Heikki: Obviously, MySQL does NOT call commit at the end (18:36:36) Heikki: Because then innobase_commit() would set active_trx=0! (18:37:00) Heikki: Ok, maybe MySQL thinks CREATE INDEX is NOT a transactional statement (18:37:21) Heikki: Then, .._register_.. should be removed (18:37:51) Heikki: It is logical this way. If it also passes test, even better (18:38:21) vasil: ha_registrer in add_index() was added in r1845 and in drop_index() in r2128, let me read the comments.. (18:38:55) vasil: ------------------------------------------------------------------------ r1845 | marko | 2007-09-13 13:31:54 +0300 (Thu, 13 Sep 2007) | 3 lines branches/zip: Move the code related to fast index creation (smart ALTER TABLE) from ha_innodb.cc to a separate module, handler0alter.cc. (18:39:05) Heikki: One thing you must check is that MySQL does write the CREATE INDEX in the binlog, even if we remove the _register_ (18:39:41) Heikki: I assume Marko did not know if MySQL thinks CREATE INDEX is transactional or not (18:39:49) Heikki: He thought it is transactional (18:39:53) vasil: ------------------------------------------------------------------------ r2128 | marko | 2007-11-29 12:34:55 +0200 (Thu, 29 Nov 2007) | 5 lines branches/zip: ha_innobase::final_drop_index(): Allocate a separate transaction for dropping the index trees, and set the dictionary operation flag, similar to what ha_innobase::add_index() does.  This should ensure correct crash recovery. (18:40:10) Heikki: Ok (18:40:17) vasil: how do you know CREATE INDEX is not transactional? (18:40:33) Heikki: You cannot roll it back (18:40:44) vasil: ok (18:41:03) Heikki: MySQL devs probably thought this way (18:44:15) vasil: hmm (18:44:21) vasil: about r1845 (18:45:00) vasil: the comments says ""move the code"" but it is actually ""move and change the code"" (18:45:28) Heikki: Well (18:45:29) vasil: the code that is deleted from ha_innodb is this: (18:45:32) vasil: -       update_thd(ha_thd()); - -       heap = mem_heap_create(1024); - -       /* In case MySQL calls this in the middle of a SELECT query, release -       possible adaptive hash latch to avoid deadlocks of threads. */ -       trx_search_latch_release_if_reserved(check_trx_exists(user_thd)); - -       trx = trx_allocate_for_mysql(); -       trx_start_if_not_started(trx); - -       innobase_register_stmt(ht, user_thd); - -       trx->mysql_thd = user_thd; (18:45:38) vasil: (in add_index) (18:45:48) inaam left the room. (18:45:52) vasil: but the new one in handler0alter is this: (18:46:16) vasil: +       update_thd(ha_thd()); + +       heap = mem_heap_create(1024); + +       /* In case MySQL calls this in the middle of a SELECT query, release +       possible adaptive hash latch to avoid deadlocks of threads. */ +       trx_search_latch_release_if_reserved(check_trx_exists(user_thd)); + +       trx = trx_allocate_for_mysql(); +       trx_start_if_not_started(trx); + +       trans_register_ha(user_thd, FALSE, ht); + +       trx->mysql_thd = user_thd; (18:46:48) vasil: innobase_register_stmt(ht, user_thd); was substituted with trans_register_ha(user_thd, FALSE, ht); during the move (18:46:49) Heikki: I do not see how MySQL could call it in the middle of a SELECT query! (18:46:59) Heikki: Yes (18:47:21) Heikki: Did Marko change innobase_register_stmt() code too? (18:48:05) vasil: not in this commit r1845 (18:48:54) Heikki: Anyway, please test a version where you remove the register thing (18:49:08) vasil: and active_trans=1? (18:49:15) Heikki: Remove that, too (18:49:35) Heikki: innobase_register_stmt( /*===================*/ handlerton*     hton,   /* in: Innobase hton */ THD*    thd)    /* in: MySQL thd (connection) object */ { DBUG_ASSERT(hton == innodb_hton_ptr); /* Register the statement */ trans_register_ha(thd, FALSE, hton); } (18:50:23) Heikki: looks pretty much the same as what Marko has in the later version (18:50:43) vasil: innobase_register_stmt() was added in add_index() in r1584 (18:50:47) vasil: r1584 | marko | 2007-06-18 15:46:42 +0300 (Mon, 18 Jun 2007) | 12 lines branches/zip: ha_innobase::add_index(): Split some assertions. Remove the variable parent_trx. Call innobase_register_stmt() in order to work around a MySQL bug in mysql_alter_table(), which, as of ChangeSet@1.2482.61.2, 2007-06-07 16:37:15+02:00, joerg@trift2. +8 -0 commits the transaction before calling ha_innobase::add_index(). Without re-registering the statement, the ha_commit_stmt(thd) in mysql_alter_table() would not invoke innobase_commit. (18:51:56) Heikki: But it does not seem to invoke it now, because active_trans is left 1! (18:54:15) Heikki: Apparently, there has been confusion also among MySQL devs whether CREATE INDEX is transactional or not (18:54:45) vasil: :-( (18:54:53) Heikki: The most robust way is to handle all commits and rollbacks internally inside InnoDB and not tell MySQL anything about InnoDB's internal transactions (18:55:01) Heikki: That is my idea (18:55:20) Heikki: Then MySQL cannot spoil the logic of the code (18:55:59) vasil: mysql_alter_table() is ~1100 lines (18:56:08) vasil: and you suggest what? (18:56:43) Heikki: I suggest removing the ..._register_... thing and active_trans = 1 (18:57:08) Heikki: Those things tell MySQL that there is a transaction going on (18:57:14) Heikki: Better not to tell (18:57:29) vasil: and possibly ignoring the above comment in r1584, ""Call innobase_register_stmt() in order to work around a MySQL bug in mysql_alter_table()........."" (18:57:32) vasil: ? (18:57:36) Heikki: Yes (18:57:38) vasil: ok (18:57:44) vasil: same for drop_index? (18:57:48) Heikki: Yes (18:58:51) vasil: testing Index: handler/handler0alter.cc =================================================================== --- handler/handler0alter.cc (revision 2498) +++ handler/handler0alter.cc (working copy) @@ -632,14 +632,14 @@ ha_innobase::add_index( /* Create a background transaction for the operations on the data dictionary tables. */ trx = trx_allocate_for_mysql(); trx_start_if_not_started(trx); - trans_register_ha(user_thd, FALSE, ht); - prebuilt->trx->active_trans = 1; + //trans_register_ha(user_thd, FALSE, ht); + //prebuilt->trx->active_trans = 1; trx->mysql_thd = user_thd; trx->mysql_query_str = thd_query(user_thd); innodb_table = indexed_table = dict_table_get(prebuilt->table->name, FALSE); @@ -1081,14 +1081,14 @@ ha_innobase::final_drop_index( /* Create a background transaction for the operations on the data dictionary tables. */ trx = trx_allocate_for_mysql(); trx_start_if_not_started(trx); - trans_register_ha(user_thd, FALSE, ht); - prebuilt->trx->active_trans = 1; + //trans_register_ha(user_thd, FALSE, ht); + //prebuilt->trx->active_trans = 1; trx->mysql_thd = user_thd; trx->mysql_query_str = thd_query(user_thd); /* Flag this transaction as a dictionary operation, so that the data dictionary will be locked in crash recovery. */ (18:59:07) vasil: not warnings (18:59:22) Heikki: Did it create the indexes (18:59:36) vasil: I did test only removing active_trans=1 and it removed the warnings too (18:59:38) vasil: dunno (18:59:54) Heikki: That is the most important thing to check :) (19:00:10) vasil: :) (19:00:38) vasil: it is some mysqltest that is 610 lines (19:00:48) vasil: and it happens at the end (19:01:02) vasil: lets see how may add index statements... (19:01:11) vasil: 0 (19:01:26) Heikki: Mostly I am concerned that MySQL might work wrong without that _register_ thing (19:03:28) vasil: could be (19:03:49) Heikki: You need to check it still calls ::add_index() (19:05:15) vasil: well, the change we made is inside ::add_index() how could it result in mysql stopping to call ::add_index()? (19:05:39) vasil: if it calls it twice... (19:05:43) Heikki: :-D (19:08:34) vasil: I guess it must have created the index, because the test is doing SHOW INDEX after CREATE INDEX and after DROP INDEX (19:08:43) vasil: the test would have failed if the index was not created (19:09:10) Heikki: You need to check that a query using that index will have the right EXPLAIN and result (19:15:04) vasil: this is with the patch: +CREATE TABLE t (a INT) ENGINE=innodb; +CREATE INDEX ti ON t(a); +INSERT INTO t VALUES (1), (2), (3); +EXPLAIN SELECT * FROM t WHERE a=2; +id select_type table type possible_keys key key_len ref rows Extra +1 SIMPLE t ref ti ti 5 const 1 Using where; Using index +SELECT * FROM t WHERE a=2; +a +2 (19:15:15) Heikki: :) (19:15:46) vasil: this is with the original code: +CREATE TABLE t (a INT) ENGINE=innodb; +CREATE INDEX ti ON t(a); +INSERT INTO t VALUES (1), (2), (3); +EXPLAIN SELECT * FROM t WHERE a=2; +id select_type table type possible_keys key key_len ref rows Extra +1 SIMPLE t ref ti ti 5 const 1 Using where; Using index +SELECT * FROM t WHERE a=2; +a +2 (19:15:59) vasil: it is the same (19:16:06) vasil: do you think this is sufficient? (19:16:20) Heikki: No, you need to do some manual tests, too (19:16:28) vasil: this is manual test (19:16:37) Heikki: Several of them (19:16:46) vasil: what should they do? (19:17:13) Heikki: Test tables of different sizes, different indexes (19:17:27) Heikki: CREATE several indexes at a time (19:19:14) Heikki: Dinner time --> --- cut --- Approved by:	Heikki "	63ad8ddbd68757b2a282165efe90c32e63f5b39e
----------------------------
Instruct mysql_upgrade what tmpdir to use 	ce4b99857bf432da85a55fb456eea1cda9cbd452
----------------------------
Bug#30087 Set query_cache_size, if the value is too small, get a unclear warning This bugs clarifies a warning message issued when the query cache data size becomes smaller than the minium allowed size. 	71be65dd114d0a2bd914bcdb1879015fd76ba2b4
----------------------------
"Bug #37472  	--log-slave-updates=0 will result in some data in the binlog - if no rows in the transaction against the binlog, rollback, instead of commit "	2c05a64a612485860f3a133e65bd11acd3f95f59
----------------------------
Created the 5.1 Storage Engine API tree Changed the tree default configuration 	11ad668b05a746b5155e5503f34b300e70ecf9b0
----------------------------
Use skip-federated by default in all example configs. 	2244456ddf632aef6a8452d8063ab1480da3e321
----------------------------
"Make sure to reflect that the argument to 'getConfig' is not a member variable - rename ""m_handle_arg"" to ""mgm_handle"" "	9a62b8957f204549623df0d51aba373c2b44db86
----------------------------
Bug#31210: INSERT DELAYED crashes server when used on partitioned tables post push patch push build found tree failing test when using: --ps-protocol --mysqld=--binlog-format=row Changed to the new error message. 	77e54c03ac401e7477b2a4ab7831c44f51aebe27
----------------------------
"branches/zip: Merge 2437:2485 from branches/5.1: (r2478 was skipped for the obvious reason) ------------------------------------------------------------------------ r2464 | vasil | 2008-05-19 17:59:42 +0300 (Mon, 19 May 2008) | 9 lines branches/5.1: Fix Bug#36600 SHOW STATUS takes a lot of CPU in buf_get_latched_pages_number by removing the Innodb_buffer_pool_pages_latched variable from SHOW STATUS output in non-UNIV_DEBUG compilation. Approved by:	Heikki ------------------------------------------------------------------------ r2466 | calvin | 2008-05-20 01:37:14 +0300 (Tue, 20 May 2008) | 12 lines branches/5.1: Fix Bug#11894 innodb_file_per_table crashes w/ Windows .sym symbolic link hack The crash was due to un-handled error 3 (path not found). In the case of file per table, change the call to os_file_handle_error_no_exit() from os_file_handle_error(). Also, checks for full path pattern during table create (Windows only), which is used in symbolic link and temp table creation. Approved by:	Heikki ------------------------------------------------------------------------ r2478 | sunny | 2008-05-23 08:29:08 +0300 (Fri, 23 May 2008) | 3 lines branches/5.1: Fix for bug# 36793. This is a back port from branches/zip. This code has been tested on a big-endian machine too. ------------------------------------------------------------------------ r2480 | vasil | 2008-05-27 11:40:07 +0300 (Tue, 27 May 2008) | 11 lines branches/5.1: Fix Bug#36819 ut_usectime does not handle errors from gettimeofday by retrying gettimeofday() several times if it fails in ut_usectime(). If it fails on all calls then return error to the caller to be handled at higher level. Update the variable innodb_row_lock_time_max in SHOW STATUS output only if ut_usectime() was successful. ------------------------------------------------------------------------ r2482 | sunny | 2008-05-28 12:18:35 +0300 (Wed, 28 May 2008) | 5 lines branches/5.1: Fix for Bug#35602, ""Failed to read auto-increment value from storage engine"". The test for REPLACE was an error of ommission since it's classified as a simple INSERT. For REPLACE statements we don't acquire the special AUTOINC lock for AUTOINC_NEW_STYLE_LOCKING with this fix. ------------------------------------------------------------------------ r2485 | vasil | 2008-05-28 16:01:14 +0300 (Wed, 28 May 2008) | 9 lines branches/5.1: Fix Bug#36149 Read buffer overflow in srv0start.c found during ""make test"" Use strncmp(3) instead of memcmp(3) to avoid reading past end of the string if it is empty (*str == '\0'). This bug is _not_ a buffer overflow. Discussed with:	Sunny (via IM) ------------------------------------------------------------------------ "	b21c94dc01e70dbef2420269e7a61962066825db
----------------------------
ndb - reorg 08-09/11 This patch fixes partition pruning in ha_ndbcluster and in NdbScanOperation.cc (smart scan) This also fixes SUMA scan, not to cache distribution information (as it changes with reorg) 	a2e5c65826dec4bab57798230b20d03eaddc41be
----------------------------
Fix embedded variant of slave_allow_batching 	b07947fddd7ac915f0d8296cac3acb089a735165
----------------------------
Fix red pushbuild for mysql-5.1-telco-6.2-merge Modify and activate MySQLD slave_allow_batching variable testcase 	69c6e12096ba3968cdfb1432a2be3f4cd4b4cb66
----------------------------
Reserve config numbers for telco-6.4 push. 	a7e1fdf7a411f089c84669ece5a3922efdf5476f
----------------------------
Merge: fdd075d fdd075d Bug#32966 main.status fails The failing test case is depending on unnecessary status variable output which changes based on build configuration. By reducing the output the test becomes more stable. 	e840c86e9bbaa4f0b43fe90d0ad604df3d7bf995
----------------------------
"A number of fixes after a merge from the main 5.1 tree: the local tree contains a fix for Bug#32748 ""Inconsistent handling of assignments to general_log_file/slow_query_log_file"", which changes output of a number of tests. "	87a75bdf30144ef338729100d08344aa01d081ad
----------------------------
"branches/5.1: Fix Bug#11894 innodb_file_per_table crashes w/ Windows .sym symbolic link hack The crash was due to un-handled error 3 (path not found). In the case of file per table, change the call to os_file_handle_error_no_exit() from os_file_handle_error(). Also, checks for full path pattern during table create (Windows only), which is used in symbolic link and temp table creation. Approved by:	Heikki "	05f84037e78f3948d828943051e7d1520143965f
----------------------------
Fixed bug#36676: multiupdate using LEFT JOIN updates only first row or fails with an error: ERROR 1022 (23000): Can't write; duplicate key in table '' The server uses intermediate temporary table to store updated row data.  The first column of this table contains rowid. Current server implementation doesn't reset NULL flag of that column even if the server fills a column with rowid. To keep each rowid unique, there is an unique index. An insertion into an unique index takes into account NULL flag of key value and ignores real data if NULL flag is set. So, insertion of actually different rowids may lead to two kind of problems.  Visible effect of each of these problems depends on an initial engine type of temporary table: 1. If multiupdate initially creates temporary table as a MyISAM table (a table contains blob columns, and the create_tmp_table function assumes, that this table is large), it inserts only one single row and updates only rows with one corresponding rowid. Other rows are silently ignored. 2. If multiupdate initially creates MEMORY temporary table, fills it with data and reaches size limit for MEMORY tables (max_heap_table_size), multiupdate converts MEMORY table into MyISAM table and fails with an error: ERROR 1022 (23000): Can't write; duplicate key in table '' Multiupdate has been fixed to update the NULL flag of temporary table rowid columns. 	2459d3a9ad771648f7682d2371fd9969bff3f541
----------------------------
Bug #36705 key_buffer_size of >= 2G allocates all availabel virtual memory on 64-bit wondo. temporary variables of 'long' types were used to store ulong values, that causes init_key_cache to receive distorted parameters 	f9d183b5dc8b414948b20296ff1f754bdcad5943
----------------------------
BUG#36433: rpl_insert_id detects inconsistency on master Problem: If INSERT is immediately followed by SELECT in another thread, the newly inserted rows may not be returned by the SELECT statement, if ENGINE=myisam and @@concurrent_insert=1. This caused sporadic errors in rpl_insert_id. Fix: The test now uses ENGINE=$engine_type when creating tables (so that innodb is used). It also turns off @@concurrent_insert around the critical place, so that it works if someone in the future writes a test that sets $engine_type=myisam before sourcing extra/rpl_tests/rpl_insert_id.test. It also adds ORDER BY to all SELECTs so that the result is deterministic. 	365dbaab219d3e15af64c2b7bbf25622f4fd2df8
----------------------------
Disable thread_cache_size_func as reported in bug 36733 	80c7d949e3707e4e651c3a09591fa04fc15884b0
----------------------------
disabled.def: max_heap_table_size_basic_32, query_cache_size_basic_32 and tmp_table_size_basic_32 tests have been disabled according to bug #36522. 	d558fcbd0072ab743b524cee74c992cde262b7fa
----------------------------
Reenable the removal of ndbcluster specific files after server restart 	25cebc53f9ccfce5004199b3212c349b2016fc87
----------------------------
Bug#36547 SET GLOBAL ndb_extra_logging crashes mysqld - Change type of ndb_extr_logging variable in the args list 	6b1084e99de706f8d9513926550c874e1c4bfe4d
----------------------------
Re-enable test case thread_cache_size_func as Bug 35988 has been fixed and closed. 	e00347187451f02ec84d5bfeb72fadc7a68f4675
----------------------------
Generate a unique tmpdir for each server to avoid that they delete each others temporary files at start up - see 'mysql_rm_tmp_tables' 	c45e9ff746701fac7f7de5dbc8b1eff3c2961367
----------------------------
"branches/zip: Implement the system tablespace tagging described on the wiki: https://svn.innodb.com/innobase/InnoDB_version_and_feature_compatibility A brief description of the changes: * The file format tag will be saved in the trx system page, starting at (UNIV_PAGE_SIZE - 16) for 8 bytes. * The configuration parameter innodb_file_format_check is introduced. This variable can be set to on/off and any of the supported file formats in the configuration file, but can only be set to any of the supported file formats during runtime. The default is on. * During table create/open, check the current file format against the max in file_format_max. If the current file format is newer, update file_format_max and tag the system tablespace with the newer one in a normal mtr. * During startup, write the tag to the error log and check it against DICT_TF_FORMAT_MAX. Refuse to start with error, if -- DICT_TF_FORMAT_MAX < the tag, and -- innodb_file_format_check is ON Print out a warning , if -- DICT_TF_FORMAT_MAX < the tag, but -- innodb_file_format_check is off * The system tablespace tag is re-settable using: set innodb_file_format_check = <file_format> Approved by:	Sunny "	fc02f76d78f01669fc96a947065a86b47e5840b3
----------------------------
Bug#36469 mysql_upgrade does not use --tmpdir 	e549ba80679e90b4b518e513a22004d4008d8381
----------------------------
Bug#36465 mysqltest should always use the --tmpdir 	c1918b0464dcc4bc82cc1207b3a9189d3e7e2139
----------------------------
Use the deignated tmpdir if it exists 	3e18c89fdb4c2d51eaf245c4569ede1debe842de
----------------------------
"branches/zip: Merge 2423:2437 from branches/5.1: ------------------------------------------------------------------------ r2429 | vasil | 2008-04-30 11:19:06 +0300 (Wed, 30 Apr 2008) | 10 lines branches/5.1: * Use INNODB_CFLAGS insead of cluttering CFLAGS with InnoDB specific flags. CFLAGS are used to compile every file in the MySQL source tree. * Add INNODB_DYNAMIC_CFLAGS to the flags of the dynamic plugin and use -prefer-non-pic to make the dynamic plugin faster on i386. Approved by:	Sunny ------------------------------------------------------------------------ r2430 | vasil | 2008-04-30 11:48:35 +0300 (Wed, 30 Apr 2008) | 8 lines branches/5.1: Use CFLAGS instead of INNODB_CFLAGS to avoid having incompatible flags inserted in CFLAGS and INNODB_CFLAGS and to avoid compiling mysql and innodb with different flags. Discussed with:	Sunny ------------------------------------------------------------------------ r2431 | vasil | 2008-04-30 11:54:49 +0300 (Wed, 30 Apr 2008) | 4 lines branches/5.1: Fix r2430, it should be CFLAGS=""$CFLAGS ..."" not CFLAGS=""..."" ------------------------------------------------------------------------ r2432 | vasil | 2008-04-30 11:58:38 +0300 (Wed, 30 Apr 2008) | 4 lines branches/5.1: Non-functional change: use tabs for indentation in plug.in. ------------------------------------------------------------------------ r2433 | vasil | 2008-04-30 12:02:35 +0300 (Wed, 30 Apr 2008) | 5 lines branches/5.1: Add vim modeline to hint it that plug.in is a config file so it can be colorized. ------------------------------------------------------------------------ r2434 | vasil | 2008-04-30 18:45:44 +0300 (Wed, 30 Apr 2008) | 17 lines branches/5.1: Merge changes from MySQL: ChangeSet@1.2645, 2007-12-19 13:24:43+00:00, jperkin@chorlton.adsl.perkin.org.uk +14 -0 Add new pkgplugindir handling to seperate plugins from libraries, and allow override for binary distributions.  Extend mysql_config to print compiled-in plugin location for third-party plugins to use.  Resolves bug#31736. and ChangeSet@1.2646, 2008-01-02 13:00:46+00:00, jperkin@chorlton.adsl.perkin.org.uk +11 -0 Use pkglibdir to simplify pkgplugindir, and fix the path in a couple of Makefiles.  Continuation of the fix for bug#31736. ------------------------------------------------------------------------ r2435 | vasil | 2008-04-30 19:04:36 +0300 (Wed, 30 Apr 2008) | 10 lines branches/5.1: Merge change from MySQL: ChangeSet@1.2563, 2008-03-18 19:42:04+04:00, gluh@mysql.com +1 -0 Bug#35406 5.1-opt crashes on select from I_S.REFERENTIAL_CONSTRAINTS added intialization of f_key_info.referenced_key_name for the case when referenced table is dropped ------------------------------------------------------------------------ r2436 | vasil | 2008-04-30 19:15:46 +0300 (Wed, 30 Apr 2008) | 7 lines branches/5.1: Non-functional white space change in Makefile.am: Use tabs for indentation and be consistent about spaces around the equal sign. ------------------------------------------------------------------------ r2437 | vasil | 2008-04-30 20:36:11 +0300 (Wed, 30 Apr 2008) | 8 lines branches/5.1: Fix Bug#36434 ha_innodb.so is installed in the wrong directory Change pkglib_LTLIBRARIES with pkgplugin_LTLIBRARIES which has been forgotten in this commit: http://lists.mysql.com/commits/40206 ------------------------------------------------------------------------ "	9dd184effec68456b83628f8422e1c3b1bfe6c84
----------------------------
the query_cache_wlock_invalidate_func fails due to bug 35390 and is therefore disabled. 	890eed08d901287429dcd29549b2720268c8fec9
----------------------------
branches/5.1: Merge changes from MySQL: ChangeSet@1.2645, 2007-12-19 13:24:43+00:00, jperkin@chorlton.adsl.perkin.org.uk +14 -0 Add new pkgplugindir handling to seperate plugins from libraries, and allow override for binary distributions.  Extend mysql_config to print compiled-in plugin location for third-party plugins to use.  Resolves bug#31736. and ChangeSet@1.2646, 2008-01-02 13:00:46+00:00, jperkin@chorlton.adsl.perkin.org.uk +11 -0 Use pkglibdir to simplify pkgplugindir, and fix the path in a couple of Makefiles.  Continuation of the fix for bug#31736. 	7a9313e5b328d79e04d9bd0b293f4c6563642879
----------------------------
Bug#35788 A few tests fail due to concurrent inserts The problem is that since MyISAM's concurrent_insert is on by default some concurrent SELECT statements might not see changes made by INSERT statements in other connections, even if the INSERT statement has returned. The solution is to disable concurrent_insert so that INSERT statements returns after the data is actually visible to other statements. 	2bf61233fa78ef83bf581bc3a2024ea2c3ed5343
----------------------------
branches/5.1: Add vim modeline to hint it that plug.in is a config file so it can be colorized. 	9a2b24e7ea495fb5df48afd39c521a0796276212
----------------------------
Don't append thread num to $opt_tmpdir is var/tmp Remove .err and .result files produced by check-testcase and check-warnings 	a0f393d66024335e50507ff39a7883d541e92086
----------------------------
"Only run the ""saved core limit"" if the datadir was saved "	f201478cb7f10973acc193a0833a78c720ef1e18
----------------------------
Move code that saves datadirs to test server Remove mtr_report_test_failed 	4f9409c8353aec715ec9ebd51951207c5d55cc4d
----------------------------
Save datadir in case of test failure, but limit the number of times datadir can be saved in case of constantly failing servers Remove datadirs each time all servers have been stopped thus limiting the size of vardir. The datadirs of failed tests have been saved and that should be enough to diagnose any failures 	3f48a30625b4f3bf7e2a21b78dc2c0f0ef1c1fb8
----------------------------
WL#3754 Fix for mtr, added support personal configuration for test cases 	59c15c6730e90816a740a7518142879cd9305abc
----------------------------
"Add ""match end of string"" marker so that only ""cluster_config.xxx"" are found "	d8b5c50e6b49803ed9ec595fb1669650d0586125
----------------------------
Make it possible to specify test specifi config file as <testname>.cnf 	4a490373a2ebca46b58d16f7c72a024cb4132d09
----------------------------
Be more prcise in which cluster_config sections should be expanded. Ie don't treat cluster_config.mysqld.1.1 as a section specifying a cluster 	99a5c22d1193ae2c69ba2f0388a225825cfeae75
----------------------------
If more than one parallel run, use a subdir of the selected tmpdir 	13461e33d590fefa3bb3cb911a225276e1cb37cf
----------------------------
Many files: [Changes done by mleich] Fix for Bug#35335 funcs_1: Some tests fail within load_file during pushbuild runs Solution: 1. Move files with input data used in load_file, load data etc. from suite/funcs_1/<whatever> to std_data 2. Use for testsuite funcs_1 the server option --secure-file-priv=<MYSQLTEST_VARDIR> 3. Outfiles have to be stored under MYSQLTEST_VARDIR + changes according to WL#4304 Cleanup in funcs_1 tests - backport of fixes/improvements made in 5.1 to 5.0 The differences between scripts in 5.0 and 5.1 cause much additional and annoying work during any upmerge. - replace error numbers with names - improved comments - improved formatting - Unify storage engine names so that result files for storage engine variants do not differ (some tests) - remove a script no more used (tests are done in other scripts) 	3cf72be632d974a1401d09deeeb732df4d97f0a8
----------------------------
Don't symlink var/tmp to $opt_tmpdir Just treat var/tmp and $opt_tmndir that might be different or same. 	3f9adfb812293f26f49f3e5881231295d7051ce4
----------------------------
Fixed bug #35993: memory corruption and crash with multibyte conversion. Grouping or ordering of long values in not indexed BLOB/TEXT columns with GBK or BIG5 charsets crashes the server. MySQL server uses sorting (the filesort procedure) in the temporary table to evaluate the GROUP BY clause in case of lack of suitable index. That procedure takes into account only first @max_sort_length bytes (system variable, usually 1024) of TEXT/BLOB sorting key string. The my_strnxfrm_gbk and my_strnxfrm_big5 fill temporary keys with data of whole blob length instead of @max_sort_length bytes length. That buffer overrun has been fixed. 	9028d2e43668686d0dfa1678c2b0a48890dde01b
----------------------------
Move the check for socket path truncation to after the tmpdir has been created since it's used by the check 	5a0ae425c672ec47aea4620e21da82fb69a120b3
----------------------------
"branches/zip: Implementation of using animal names for innodb_file_format, described in Mantis#30. Specifically: - Allow innodb_file_format to take string arguments - Make innodb_file_format system variable a string instead of a number - Implement the callback functions - Update warning messages Three new functions are implemented: file_format_name_lookup(): Validate the file format name and return its corresponding id. innodb_file_format_check(): Check if it is a valid file format. This function is registered as a callback with MySQL. innodb_file_format_update(): Update the global variable using the ""saved"" value. This functions is registered as a callback with MySQL. "	e978b4a2352b707fd1f0c3b50c863879b6893bf6
----------------------------
branches/zip: Handle rename of variables. If the statically linked in engine has a config variable that has since been renamed, we use a mapping table to check for matches. 	0f9b25232650d6bacca8addad528156f1cfaa5f5
----------------------------
Bug#35573 [Com,!Bg->Ver]: ndb-cluster-connection-pool not visible in global variables 	04ba188685561418a2eefae362b0bf8a3c58cfac
----------------------------
branches/zip: Add an additional target architecture parameter to make_binary_release.sh which is passed to dynconfig. If the target architecture is i[3456]86 then we disable the --with-pic flag. 	4ab3c46b3f33a8e9e387d0464a72444f06593a79
----------------------------
branches/zip: Introduced a new session level config param innodb_strict_mode. If it is set we do extra checking at time of table creation and fail if any invalid combination of KEY_BLOCK_SIZE or ROW_FORMAT is specified. Reviewed by: Sunny 	8bbb6142d930aa03d2995a8ffe9044bf8188effa
----------------------------
"Makefile.am: Add ChangeLog if it exists - Removed separate 'normal+rowrepl' test run, not needed any longer - Removed separate 'rpl' test run, included in main test run already - Renamed some test ""comments"", to use similar naming style - Limited one of the Cluster test runs to 'ndb' and 'rpl_ndb' suites - Reordered test runs, to be aligned with Windows test runs mysql.spec.sh: - No longer including the ""Example"" storage engine - Added to configure ""--without-ENGINE"" if not to compile engine as plugin "	9b6ac078f68061175cdfea7c43385c989e164697
----------------------------
Fix for bug #35732: read-only blocks SELECT statements in InnoDB Problem: SELECTs prohibited for a transactional SE in autocommit mode if read_only is set. Fix: allow them. 	5397f8c90d6a9fdc38278384bb1d3c695d99d5d3
----------------------------
Fix paths MYSQLTEST_VARDIR/master-data -> MYSQLD_DATADIR 	cea71680eb4821270b82a46d8537e8d3e5ac34da
----------------------------
BUG#22045: Got error 839 'Illegal null attribute' from NDBCLUSTER when 'Replace Into' Temporary workaround, check if running in slave SQL thread or not, and change semantics of write_set in write_row() as expected by the different upper layers. 	26e4c564392e801710152d30677d1ef3c599c2b9
----------------------------
Bug#32653. Added --log-slave-updates because test requires it. The events based on LOAD DATA INFILE masked by --replace_regex instead restarting of slave. Added waiting start and stop of slave after START|STOP SLAVE statements. 	b1dafe5efec012a5c18f7e96b4e68aba8340bd2e
----------------------------
Fix for Bug#35335 funcs_1: Some tests fail within load_file during pushbuild runs Solution: 1. Move files with input data used in load_file, load data etc. from suite/funcs_1/<whatever> to std_data 2. Use for testsuite funcs_1 the server option --secure-file-priv=<MYSQLTEST_VARDIR> 3. Outfiles have to be stored under MYSQLTEST_VARDIR + changes according to WL#4304 Cleanup in funcs_1 tests - backport of fixes/improvements made in 5.1 to 5.0 The differences between scripts in 5.0 and 5.1 cause much additional and annoying work during any upmerge. - replace error numbers with names - improved comments - improved formatting - Unify storage engine names so that result files for storage engine variants do not differ (some tests) - remove a script no more used (tests are done in other scripts) 	89ddc0aa52bf1c6b2ec6ca1394b98d3b0c14c5ec
----------------------------
Fix for Bug#32748: Inconsistent handling of assignments to general_log_file/slow_query_log_file. The problem was that log file path was rejected if directory path was empty. The fix is to reject log file path only if it is entirely empty. 	73345d0fbdffb5f22d3610bcda40b03dad7d62bc
----------------------------
Bug#35272: @@global.key_buffer_size = 4294967295 let the server crash reverting test that has been obsoleted by changes to the code 	7c447021212bf3ef92c7c915a7d2236b1f7b291f
----------------------------
"apply snapshot innodb-5.1-ss2387 ------------------------------------------------------------------------ r2361 | sunny | 2008-03-12 09:08:09 +0200 (Wed, 12 Mar 2008) | 3 lines Changed paths: M /branches/5.1/include/srv0srv.h M /branches/5.1/os/os0file.c M /branches/5.1/srv/srv0srv.c M /branches/5.1/srv/srv0start.c branches/5.1: Remove the innodb_flush_method fdatasync option since it was not being used and there was a potential it could mislead users. ------------------------------------------------------------------------ r2367 | marko | 2008-03-17 10:23:03 +0200 (Mon, 17 Mar 2008) | 5 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: ha_innobase::check_if_incompatible_data(): Check HA_CREATE_USED_ROW_FORMAT before comparing row_type.  Previously, the comparison was incorrectly guarded by the presence of an AUTO_INCREMENT attribute. ------------------------------------------------------------------------ r2374 | vasil | 2008-03-18 09:35:30 +0200 (Tue, 18 Mar 2008) | 11 lines Changed paths: M /branches/5.1/dict/dict0dict.c A /branches/5.1/mysql-test/innodb_bug35220.result A /branches/5.1/mysql-test/innodb_bug35220.test branches/5.1: Fix Bug#35220 ALTER TABLE too picky on reserved word ""foreign"". In ALTER TABLE, change the internal parser to search for ``FOREIGN[[:space:]]'' instead of only ``FOREIGN'' when parsing ALTER TABLE ... DROP FOREIGN KEY ...; otherwise it could be mistaken with ALTER TABLE ... DROP foreign_col; Approved by:    Heikki ------------------------------------------------------------------------ r2379 | vasil | 2008-03-19 18:48:00 +0200 (Wed, 19 Mar 2008) | 10 lines Changed paths: M /branches/5.1/os/os0file.c branches/5.1: Fix Bug#34823: fsync() occasionally returns ENOLCK and causes InnoDB to restart mysqld Create a wrapper to fsync(2) that retries the operation if the error is ENOLCK. Use that wrapper instead of fsync(2). Approved by:    Heikki ------------------------------------------------------------------------ r2380 | sunny | 2008-03-21 05:03:56 +0200 (Fri, 21 Mar 2008) | 9 lines Changed paths: M /branches/5.1/include/trx0undo.h M /branches/5.1/trx/trx0trx.c M /branches/5.1/trx/trx0undo.c branches/5.1: Fix for Bug# 35352. We've added a heuristic that checks the size of the UNDO slots cache lists (insert and upate). If either of cached lists has more than 500 entries then we add any UNDO slots that are freed, to the common free list instead of the cache list, this is to avoid the case where all the free slots end up in only one of the lists on startup after a crash. Tested with test case for 26590 and passes all mysql-test(s). ------------------------------------------------------------------------ r2383 | vasil | 2008-03-26 09:35:22 +0200 (Wed, 26 Mar 2008) | 4 lines Changed paths: M /branches/5.1/include/row0mysql.h branches/5.1: Fix typo in comment. ------------------------------------------------------------------------ r2384 | vasil | 2008-03-26 18:26:54 +0200 (Wed, 26 Mar 2008) | 20 lines Changed paths: A /branches/5.1/mysql-test/innodb_bug34300.result A /branches/5.1/mysql-test/innodb_bug34300.test M /branches/5.1/row/row0sel.c branches/5.1: Fix Bug#34300 Tinyblob & tinytext fields currupted after export/import and alter in 5.1 Copy the BLOB fields, that are stored internally, to a safe place (prebuilt->blob_heap) when converting a row from InnoDB format to MySQL format in row_sel_store_mysql_rec(). The bug was introduced in: ------------------------------------------------------------------------ r587 | osku | 2006-05-23 15:35:58 +0300 (Tue, 23 May 2006) | 3 lines Optimize BLOB selects by using prebuilt->blob_heap directly instead of first reading BLOB data to a temporary heap and then copying it to prebuilt->blob_heap. ------------------------------------------------------------------------ Approved by:    Heikki ------------------------------------------------------------------------ r2386 | vasil | 2008-03-27 07:45:02 +0200 (Thu, 27 Mar 2008) | 22 lines Changed paths: M /branches/5.1/mysql-test/innodb.result branches/5.1: Merge change from MySQL (this fixes the failing innodb test): ChangeSet@1.1810.3601.4, 2008-02-07 02:33:21+04:00, gshchepa@host.loc +9 -0 Fixed bug#30059. Server handles truncation for assignment of too-long values into CHAR/VARCHAR/TEXT columns in a different ways when the truncated characters are spaces: 1. CHAR(N) columns silently ignore end-space truncation; 2. TEXT columns post a truncation warning/error in the non-strict/strict mode. 3. VARCHAR columns always post a truncation note in any mode. Space truncation processing has been synchronised over CHAR/VARCHAR/TEXT columns: current behavior of VARCHAR columns has been propagated as standard. Binary-encoded string/BLOB columns are not affected. ------------------------------------------------------------------------ r2387 | vasil | 2008-03-27 08:49:05 +0200 (Thu, 27 Mar 2008) | 8 lines Changed paths: M /branches/5.1/row/row0sel.c branches/5.1: Check whether *trx->mysql_query_str is != NULL in addition to trx->mysql_query_str. This adds more safety. This may or may not fix Bug#35226 RBR event crashes slave. ------------------------------------------------------------------------ "	87f5261039bae8769f48686867202641c0ea4403
----------------------------
Post-merge fix. Query cache does now work with concurrent_insert=0. See Bug 33756 - query cache with concurrent_insert=0 appears broken 	ac130084c4a1c533cc279dd446c5601071989354
----------------------------
Bug#35559 - plugin_load.test creates warnings plugin_load.test created lines in the warnings files and made pushbuild cells yellow. Some pushbuild systems are configured so that they don't build the ha_example plugin. Trying to load them creates error messages in the error log. These were copied to the warnings file. Fixed by ignoring expected error messages for non-existent ha_example. 	97531cadc9fb1df270b435cc15a19b7f9b0195a8
----------------------------
Bug#35272: @@global.key_buffer_size = 4294967295 let the server crash When trying to get the requested amount of memory for the keybuffer, the out of memory could be signaled if one of the tentative allocations fail. Later the server would crash (debug assert) when trying to send a ok packet with a error set. The solution is only to signal the error if all tentative allocations for the keybuffer fail. 	079a174801a3d19917be5ba2a83fc103f7ba636c
----------------------------
Find mysqld binary from it's basedir 	9201ff3c362dd25a29ae9a704abe242247af0eeb
----------------------------
A patch for Bug#21854: Problems with CREATE TRIGGER without DEFINER clause in --skip-grant-tables mode. Update error message. 	1b8fb7733a31c16c1d30f7bdd4857db43ab08ac8
----------------------------
ha_ndbcluster_cond.h, ha_ndbcluster_cond.cc: bug#35185  SELECT LIKE gives wrong results when ndbcluster engine is used: Post-review fixes item.h, mysql_com.h: Adding max values for enums to support allocating bitmasks of correct size 	b6e63e3950e77d359240e5b6524f61072155dc5b
----------------------------
branches/zip: Remove innodb.patch. This patch tries to enable resizeable buffer pool by polling the configuration parameter for the buffer pool size, which is not a good solution.  The right way could be to have an update function callback of a settable MySQL variable to send an event to the master thread. It could also make sense to expose the buffer pool chunks to the user. The first chunk would never be freed.  Other chunks than the first one would only be used for allocating page frames (uncompressed or compressed) and block descriptors of of compressed pages (buf_page_t).  That is, other users of the buffer pool, such as mem_heap_create_block() and the lock table, would be restricted to the first chunk.  This would allow other chunks to be freed by simply flushing any dirty blocks that they contain. It might also be worthwhile to create multiple chunks initially, based on the initial buffer pool size and the HugeTLB page size.  In that way, the buffer pool could be reduced from the initial configuration at runtime. 	63bcc4a3b9ac1f77b8585f291475890a75d909ec
----------------------------
bug#35185  SELECT LIKE gives wrong results when ndbcluster engine is used: Disabled condition pushdown of <string> LIKE <field> until this is supported 	e860b9f73326f0347de4f4ec7c9c5a9bb00ae4d5
----------------------------
"Avoid races in connect.test. The problem was in a test case for Bug33507: - when the number of active connections reaches the limit, the server accepts only root connections. That's achieved by accepting a connection, negotiating with the client and checking user credentials. If it is not SUPER, the connection is dropped. - when the server accepts connection, it increases the counter; - when the server drops connection, it decreases the counter; - the race was in between of decreasing the counter and accepting new connection: - max_user_connections = 2; - 2 oridinary user connections accepted; - extra user connection is establishing; - server checked user credentials, and sent 'Too many connections' error; - the client receives the error and establishes extra SUPER user connection; - the server however didn't decrease the counter (the extra user connection still is ""alive"" in the server) -- so, the new SUPER-user connection, will be dropped, because it exceeds (max_user_connections + 1). The fix is to implement ""safe connect"", which makes several attempts to connect and use it in the test script. "	393c54db5076dd93453a992e67fa136fc88cf359
----------------------------
configure.in: adjust version string 	01c58919834392375effbadd09148fa9516b8ab5
----------------------------
BUG#13861 - START SLAVE UNTIL may stop 1 evnt too late if log-slave-updates and circul repl This is a test case fix for BUG#13861. 	243ca22b94b160ee7762a38e1a25b04bb3869a7c
----------------------------
"A fix for Bug#35289: Too many connections -- wrong SQL state in some case. ER_CON_COUNT_ERROR is defined with SQL state 08004. However, this SQL state is not always returned. This error can be thrown in two cases: 1. when an ordinary user (a user w/o SUPER privilege) is connecting, and the number of active user connections is equal or greater than max_connections. 2. when a user is connecting and the number of active user connections is already (max_connections + 1) -- that means that no more connections will be accepted regardless of the user credentials. In the 1-st case, SQL state is correct. The bug happens in the 2-nd case -- on UNIX the client gets 00000 SQL state, which is absolutely wrong (00000 means ""not error SQL state); on Windows the client accidentally gets HY000 (which means ""unknown SQL state). The cause of the problem is that the server rejects extra connection prior to read a packet with client capabilities. Thus, the server does not know if the client supports SQL states or not (if the client supports 4.1 protocol or not). So, the server supposes the worst and does not send SQL state at all. The difference in behavior on UNIX and Windows occurs because on Windows CLI_MYSQL_REAL_CONNECT() invokes create_shared_memory(), which returns an error (in default configuration, where shared memory is not configured). Then, the client does not reset this error, so when the connection is rejected, SQL state is HY000 (from the error from create_shared_memory()). The bug appeared after test case for Bug#33507 -- before that, this behavior just had not been tested. The fix is to 1) reset the error after create_shared_memory(); 2) set SQL state to 'unknown error' if it was not received from the server. A separate test case is not required, since the behavior is already tested in connect.test. Note for doc-team: the manual should be updated to say that under some circumstances, 'Too many connections' has HY000 SQL state. "	d3575ce0e47b595b5e43012aa1f5337d4a4ee3e8
----------------------------
branches/zip: innodb-zip.test: Add tests for warnings about ROW_FORMAT=COMPRESSED when neither innodb_file_per_table nor innodb_file_format are set. 	f7e6f2a9d1ca0ae9d02fd45222c2db128ee605bf
----------------------------
Bug#34891 sp_notembedded.test fails sporadically The problem is that since MyISAM's concurrent_insert is on by default some concurrent SELECT statements might not see changes made by INSERT statements in other connections, even if the INSERT statement has returned. The solution is to disable concurrent_insert so that INSERT statements returns after the data is actually visible to other statements. 	c964c0b2cff38ea008f0ed173f3cf85bce9fc4bc
----------------------------
Bug#33756 - query cache with concurrent_insert=0 appears broken When concurrent inserts were disabled, statements after an INSERT were not put into the query cache. This happened because we do not save the current data file length at statement start when concurrent inserts are disabled. But we checked the always zero local length against the real file length anyway. Fixed by doing the check only if concurrent inserts are not diabled. 	d5390b2d56a6a4bf39c56858d54701ce55586e36
----------------------------
Fix for Bug#33507: Event scheduler creates more threads than max_connections -- which results in user lockout. The problem was that the variable thread_count that contains the number of active threads was interpreted as a number of active connections. The fix is to introduce a new counter for active connections. 	18125abf930b8fd5676c11218cd869d49dcd11a2
----------------------------
branches/5.1: Remove the innodb_flush_method fdatasync option since it was not being used and there was a potential it could mislead users. 	aa96dab4eef542e7b72f629a9db11feb80af7096
----------------------------
Cleanup with/skip/supported-ndbcluster 	6967aa18e55391a3c548c4178f307dfddff6ce71
----------------------------
Problem: sporadic pushbuild errors in rpl_ndb_basic. The reason is that we are using a sleep to wait for slave to reach the slave_transaction_retries limit. Fix: wait for the slave to stop instead. This is what we want to do, since the slave stops when the limit is reached. 	f0a9d75a6ca9952fcb9ad27836c077e55fdc97d1
----------------------------
branches/zip: Implement the configuration parameter and settable global variable innodb_file_format.  Implement file format version stamping of *.ibd files and SYS_TABLES.TYPE. This change breaks introduces an incompatible change for for compressed tables.  We can do this, as we have not released yet. innodb-zip.test: Add tests for stricter KEY_BLOCK_SIZE and ROW_FORMAT checks. DICT_TF_COMPRESSED_MASK, DICT_TF_COMPRESSED_SHIFT: Replace with DICT_TF_ZSSIZE_MASK, DICT_TF_ZSSIZE_SHIFT. DICT_TF_FORMAT_MASK, DICT_TF_FORMAT_SHIFT, DICT_TF_FORMAT_51, DICT_TF_FORMAT_ZIP: File format version, stored in table->flags, in the .ibd file header, and in SYS_TABLES.TYPE. dict_create_sys_tables_tuple(): Write the table flags to SYS_TABLES.TYPE if the format is at least DICT_TF_FORMAT_ZIP.  For old formats (DICT_TF_FORMAT_51), write DICT_TABLE_ORDINARY as the table type. DB_TABLE_ZIP_NO_IBD: Remove the error code.  The error handling is done in ha_innodb.cc; as a failsafe measure, dict_build_table_def_step() will silently clear the compression and format flags instead of returning this error. dict_mem_table_create(): Assert that no extra bits are set in the flags. dict_sys_tables_get_zip_size(): Rename to dict_sys_tables_get_flags(). Check all flag bits, and return ULINT_UNDEFINED if the combination is unsupported. dict_boot(): Document the SYS_TABLES columns N_COLS and TYPE. dict_table_get_format(), dict_table_set_format(), dict_table_flags_to_zip_size(): New accessors to table->flags. dtuple_convert_big_rec(): Introduce the auxiliary variables local_len, local_prefix_len.  Store a 768-byte prefix locally if the file format is less than DICT_TF_FORMAT_ZIP. dtuple_convert_back_big_rec(): Restore the columns. srv_file_format: New variable: innodb_file_format. fil_create_new_single_table_tablespace(): Replace the parameter zip_size with table->flags. fil_open_single_table_tablespace(): Replace the parameter zip_size_in_k with table->flags.  Check the flags. fil_space_struct, fil_space_create(), fil_op_write_log(): Replace zip_size with flags. fil_node_open_file(): Note a TODO item for InnoDB Hot Backup. Check that the tablespace flags match. fil_space_get_zip_size(): Rename to fil_space_get_flags().  Add a wrapper for fil_space_get_zip_size(). fsp_header_get_flags(): New function. fsp_header_init_fields(): Replace zip_size with flags. FSP_SPACE_FLAGS: New name for the tablespace flags.  This field used to be called FSP_PAGE_ZIP_SIZE, or FSP_LOWEST_NO_WRITE.  It has always been written as 0 in MySQL/InnoDB versions 4.1 to 5.1. MLOG_ZIP_FILE_CREATE: Rename to MLOG_FILE_CREATE2.  Add a 32-bit parameter for the tablespace flags. ha_innobase::create(): Check the table attributes ROW_FORMAT and KEY_BLOCK_SIZE.  Issue errors if they are inappropriate, or warnings if the inherited attributes (in ALTER TABLE) will be ignored. PAGE_ZIP_MIN_SIZE_SHIFT: New constant: the 2-logarithm of PAGE_ZIP_MIN_SIZE. 	86361e032b89ce015f2ab298305bb097c043be34
----------------------------
Bug #25486: mysqld_multi.server.sh missing from builds Make mysqld_multi.server executable, and allow it to be installed via chkconfig on LSB-compliant systems. 	1cda9d124bcba3acce49c3ddc4d1bd9a0150d094
----------------------------
"WL#4203 Reorganize and fix the data dictionary tests of testsuite funcs_1 1. Fix the following bugs Bug#30440 ""datadict"" tests (all engines) fail: Character sets depend on configuration Solution: Test variants charset_collation_* adjusted to different builds Bug#32603 ""datadict"" tests (all engines) fail in ""community"" tree: ""PROFILING"" table Solution: Excluding ""PROFILING"" table from queries Bug#33654 ""slow log"" is missing a line Solution: Unify the content of the fields TABLES.TABLE_ROWS and STATISTICS.CARDINALITY within result sets Bug#34532 Some funcs_1 tests do not clean up at end of testing Solution: DROP objects/reset global server variables modified during testing + let tests missing implementation end before loading of tables Bug#31421 funcs_1: ndb__datadict fails, discrepancy between scripts and expected results Solution: Cut <engine>__datadict tests into smaller tests + generate new results. Bug#33599 INFORMATION_SCHEMA.STATISTICS got a new column INDEX_COMMENT: tests fail (2) Generation of new results during post merge fix Bug#33600 CHARACTER_OCTET_LENGTH is now CHARACTER_MAXIMUM_LENGTH * 4 Generation of new results during post merge fix Bug#33631 Platform-specific replace of CHARACTER_MAXIMUM_LENGTH broken by 4-byte encoding Generation of new results during post merge fix + removal of platform-specific replace routine (no more needed) 2. Restructure the tests - Test not more than one INFORMATION_SCHEMA view per testscript - Separate tests of I_S view layout+functionality from content related to the all time existing databases ""information_schema"", ""mysql"" and ""test"" - Avoid storage engine related variants of tests which are not sensible to storage engines at all. 3. Reimplement or add some subtests + cleanup There is a some probability that even the reviewed changeset - does not fix all bugs from above   or - contains new bugs which show up on some platforms <> Linux or on one of the various build types 4. The changeset contains fixes according to - one code review - minor bugs within testing code found after code review (accepted by reviewer) - problems found during tests with 5.0.56 in build environment "	30091e23f94fdee9e83b616d2dc56cdcc69b18d3
----------------------------
innodb-zip.test: Now that innodb_file_per_table is a settable variable as of r2355, remove the special startup options innodb-zip-master.opt and set the variable in innodb-zip.test instead. 	a669361818391e89457e8152a195ed8653bd510e
----------------------------
branches/zip: Make innodb_file_per_table a settable global variable. There is one consideration: fil_init() chooses the tablespace hash size based on the initial value of srv_file_per_table.  However, this is nothing new: InnoDB could be started with innodb_file_per_table=0 even though *.ibd files exist. srv_file_per_table: Declare as my_bool instead of ibool, because MYSQL_SYSVAR_BOOL() expects a pointer to my_bool.  Document the variable also in srv0srv.h. innobase_start_or_create_for_mysql(): Note why it is OK to temporarily clear srv_file_per_table. innobase_file_per_table: Remove. 	c853494ea2170b5db18b7303f52d1c689f3fdaae
----------------------------
"Removed unused ""#!remove_datadir"" Cleanup BACKUP dir from clusters datadir in case of test failure "	5eb114bb4a92f42840333f1f6f5527f2f87b6354
----------------------------
Fix for bug #31781: multi-table UPDATE with temp-pool enabled fails with errno 17 my_create() did not perform any checks for the case when a file is successfully created by a call to open(), but the call to my_register_filename() later fails because the number of open files has exceeded the my_open_files limit. This can happen on platforms which do not have getrlimit(), and hence we do not know the real limit for open files. In such a case an error was returned to a caller although the file has actually been created. Since callers assume my_create() to return an error only when it failed to create a file, they did not perform any cleanups, leaving an 'orphaned' file on the file system. Fixed by adding a check for the above case to my_create() and ensuring the newly created file is deleted before returning an error. Creating a deterministic test case in the test suite is impossible, because the exact steps required to reproduce the above situation depend on the platform and/or environment (OS per-user limits, queries executed by previous tests, startup parameters). The patch was manually tested on Windows using examples posted in the bug report. 	bd53f960ddc628741081ee15635e8caf1d174b2a
----------------------------
Bug #32801 wait_timeout.test fails randomly wait_timeout test enabled 	fbbd4391d90b90f8817ec5577ff3772373daee51
----------------------------
Fix for Bug#31947: Declare with a reserved word succeeded. READ_ONLY token was accidentally placed into wrong place ('ident' rule). The proper place is in the 'keyword_sp' rule. The manual should be re-generated after this patch, because the manual depends on the 'keyword_sp' rule. 	ff97087630e142f112818d07bddc994b2f366abc
----------------------------
BUG#13861 - START SLAVE UNTIL may stop 1 evnt too late if log-slave-updates and circul repl After merge fixes. 	cf50a67cca8e2cb62d7d740c0ad25b1a6fa55165
----------------------------
ha_ndbcluster.m4: Use MYSQL_NUMERIC_VERSION, to make sure NDB_VERSION_BUILD is numeric 	79929827d86aa8e31fcfee4da4da2f0065968981
----------------------------
"configure.in: Corrected calculation of version id, incorrect last two digits if < 10 Keep ""sp1"" or ""a"" in MYSQL_NO_DASH_VERSION, to set correct version in RPM spec file Added MYSQL_NUMERIC_VERSION that is like MYSQL_NO_DASH_VERSION before Added clear doc how the different version variables differ SocketServer.cpp: Corrected typo in debug error message "	ff25b925431efde1b032b26f13a893c25128d789
----------------------------
Bug#29645: Link failure when using the embedded server mysql_config --cflags gave a flag that forced the HP/UX C++ compiler into C-mode; as a result, C++ sources could not be compiled correctly. We now filter out the offending flag (like we do for Sun) so that --cflags will work for both C and C++. 	874e919872047d000207d7651c64380ae4df7221
----------------------------
Bug#32753: PAD_CHAR_TO_FULL_LENGTH is not documented and interferes with grant tables SQL-mode PAD_CHAR_TO_FULL_LENGTH affected mysqld's user-table too. If enabled, user-name and host were space-padded and no longer matched the login-data of incoming connexions. Patch disregards pad-flag while loading privileges so ability to log in does not depend on SQL-mode. 	60fc91570b04f0202c7f58c74f493b18e9813923
----------------------------
BUG#13861 - START SLAVE UNTIL may stop 1 evnt too late if log-slave-updates and circul repl Slave SQL thread may execute one extra event when there are events skipped by slave I/O thread (e.g. originated by the same server). Whereas it was requested not to do so by the UNTIL condition. This happens because we compare with the end position of previously executed event. This is fine when there are no skipped by slave I/O thread events, as end position of previous event equals to start position of to be executed event. Otherwise this position equals to start position of skipped event. This is fixed by: - reading the event to be executed before checking if the until condition is satisfied. - comparing the start position of the event to be executed. Since we do not have the start position available, we compute it by subtracting event length from end position (which is available). - if there are no events on the event queue at the slave sql starting time, that meet until condition, we stop immediately, as in this case we do not want to wait for next event. 	fe3b1c8e25669f250159142a507841f6402a38d9
----------------------------
Bug #34757: ndb-wait-connected only waits for partial connect 	31e8cc91bac24b10719fb6355967e4dfd247f86c
----------------------------
Remove special hack for windows, log-error is already set in my.cnf file 	de4f78d919fe8b142b319e13c82d14742674487e
----------------------------
"Bug #31316 Report server id clashes in SHOW SLAVE STATUS ""Server_IO_State"" field Critical error messages from get_master_version_and_clock() were written only to the slave errorlog while Show slave status did not display any incident happened. Although the artifact was reported for a particular --replicate-same-server-id related issue the fix refines all critical error reporting with deploying rli->report(). The test for the bug covers only --replicate-same-server-id error reporting. "	7e93d94ce5e0c34d383abc2c9b1fc15a2e23f82f
----------------------------
"Use My::Platform Put all path conversions in one file Convert the --tmpdir  passed to ""mysqld --verbose --help"" "	bf65a61567c913c9d5ba4810759aee7d7529f9ee
----------------------------
Merge: f5fe34d 871eb3e Merge aelkin@bk-internal.mysql.com:/home/bk/mysql-5.0-rpl into  mysql1000.dsl.inet.fi:/home/andrei/MySQL/MERGE/5.0-bug33931-assert_write_ignored_ev_when_init_slave_fails 	416001d8edf8c1864f35a3981f4bb05fce0f25aa
----------------------------
Merge: 139e6ac 22072c5 Merge aelkin@bk-internal.mysql.com:/home/bk/mysql-5.0-rpl into  mysql1000.dsl.inet.fi:/home/andrei/MySQL/MERGE/5.0-bug33931-assert_write_ignored_ev_when_init_slave_fails 	f5fe34dcd1e1a22086324e6d9270c920bf47df8f
----------------------------
Bug #21158 mysql_config doesn't include -lmygcc Add -lmygcc to mysql_config output for libs, libs_r, and embedded_libs. Required when linking against our static libs, if yassl is used, and gcc used to build library is significantly different from that which is using the library. 	cd6e2ad99f478e1e5f457e396863a1ca2a545198
----------------------------
Bug #33931 assertion at write_ignored_events_info_to_relay_log if init_slave_thread() fails and bug#33932  assertion at handle_slave_sql if init_slave_thread() fails the asserts were caused by bug33931: having thd deleted at time of executing err: code plus a missed initialization; bug33932: initialization of slave_is_running member was missed; fixed with relocating mi members initialization and removing delete thd It is safe to do as deletion happens later explicitly in the caller of init_slave_thread(). Todo: at merging the test is better to be moved into suite/bugs for 5.x (when x>0). 	22072c5c5777c94adc8c7fb694d4679837883dfd
----------------------------
ha_ndbcluster.m4: If the third number in version is followed by a letter, include it in NDB_VERSION_STATUS, but not in numeric NDB_VERSION_BUILD 	a5edb90edf0cbbf9ca0e819283af5f3934451e3b
----------------------------
WL#4083 Resource shortage handling in event mechanism: Adds handling of buffer overflow in Suma during node failure and disconnect of lagging subscribers (subscribers that do not acknowledge GCP's fast enough) based on new configuration parameter MX_BUFFERED_GCP. 	292c61ab56fb11b64f68b8f02d635dd2bf8e3201
----------------------------
branches/zip: scripts/dynconfig: Correct misleading usage message. At present, the script only accepts one command line parameter. Append newline to some die messages, so that the Perl interpreter will not print the file name and line number of the failing statement. 	b27b407d93b72c2895b87685a08d6a672ccfe968
----------------------------
branches/zip: scripts/dynconfig: Minor cleanup (spelling and formatting). 	e0cbe8f4d26a40dcdae0a93319737fe7b79c83d6
----------------------------
Fixed bug#34223: Failure on assignment to my_innodb_autoextend_increment and my_innodb_commit_concurrency global variables. Type of the my_innodb_autoextend_increment and the my_innodb_commit_concurrency variables has been changed to GET_ULONG. 	8adc63ad36b6294aba50a43065996525cc73ee2b
----------------------------
"BUG#22989 - START SLAVE causes Error on COM_REGISTER_SLAVE: 1105 'Wrong parameters to functi START SLAVE reports vague error when it fails to register on master: ""Wrong parameters to function register_slave"". If master failed to register slave because of too long 'report-host'/'report-user'/'report-password', return better error messages: ""Failed to register slave: too long 'report-host'"" ""Failed to register slave: too long 'report-user'"" ""Failed to register slave; too long 'report-password'"" No test case for this fix. "	3b5c25ba656187eac5c20625cdc3a93e22f2eb93
----------------------------
BUG#33182: Disallow division due to div_precision_increment problems 	8de834fc6af9b33c3ccb4f824d2d465a941e81bd
----------------------------
Bug #31524: One table one row select on NDB cause optimizer to require SQL_BIG_SELECTS=1 There was a previous test that leaves a non-default (small) max_join_size. Fixed by re-setting the max_join_size to default when the test is over. 	beff5d075253ae046877359b8d6e0c44fd0aea6e
----------------------------
Makefile.am: Needed to add the new sample configuration files to the CLEANFILES section 	c8d4323975735ee62622d233d71d8aacac8d62db
----------------------------
adjust testcase to newconfig param 	45e247caa11011266169f5e6db9623661b748fd3
----------------------------
config.medium.ini.sh, config.small.ini.sh, config.huge.ini.sh: Sample cluster configuration files for 5.1 Makefile.am: Updated for new files 	9803176bd17db3bc83c1674468a2f17e011e8979
----------------------------
Ndb.hpp, Ndb.cpp, ha_ndbcluster.cc: Add a check if setting an auto_increment field will change it's next value before retrieving tuple_id_range lock. This avoids hitting locks when updating auto_increment values to a lower value than the current maximum. This is useful in loading a table with auto_increment where one loads the highest numbered pk's first and then proceeds backwards to the first. This can then be achieved with the same performance as a normal insert without auto_increment. ndb_restore.result: Updated result file 	35d3bef712ead2612e256eb2168c38e62d33cd1b
----------------------------
configure.in: adjust version string 	68fb45049b973ee5397793e476534c526b6d6db2
----------------------------
configure.in: adjust version number 	e4c8a1872a4598d895c30c0992a7ad3f0cda3de5
----------------------------
update configure.in in telco-6.4 	a4eec75ff483d1ded228fdd435c14208102ca727
----------------------------
branches/zip: Split the source-only configuration parameter buf_buddy_min_n_frames into two, also buf_buddy_max_n_frames. Set the default values in such a way that a strict LRU policy will apply for replacing compressed or uncompressed page frames in the buffer pool. These parameters have not yet been exposed to the MySQL layer. 	051ee49116d9ddbd5fb5b509d55a19f33572996f
----------------------------
configure.in, acinclude.m4: Minor cleanup, removed semicolons not needed 	9023b3a30ce0efab39a92187a64c13b5fb16d77e
----------------------------
Bug#30887 Server crashes on SET GLOBAL query_cache_size=0 Reseting the query cache by issuing a SET GLOBAL query_cache_size=0 caused the server to crash if a the server concurrently was saving a new result set to the query cache. The reason for this was that the invalidation wasn't waiting on the result writers to release the block level locks on the query cache. 	96146a392ff70445c9b39e598dc1130fd0fc3ea5
----------------------------
use correct config_readline.h file 	0ac55ddef22f47e0e506f284a4908f22bdb5c213
----------------------------
"make_win_bin_dist CMakeLists.txt resolveip.c Makefile.am: Better Windows support in the scripts directory mysql_config.pl.in, mysql_install_db.pl.in: New Perl version of Unix shell script, mainly for Windows Many files in scripts directory: Use default Perl location ""#!/usr/bin/perl"" instead of the build host path "	18418ff8c5c6d3700bc199417d0dd57af7d9b918
----------------------------
"Fix for bug #33305: Test case in 'skip_grants' file need dynamic loading to be compiled in The problem was that on a statically built server an attempt to create a UDF resulted in a different, but reasonable error (""Can't open shared library"" instead of ""UDFs are unavailable with the --skip-grant-tables option""), which caused a failure for the test case for bug #32020. Fixed by moving the test case for bug #32020 from skip_grants.test to a separate test to ensure that it is only run when the server is built with support for dynamically loaded libraries. "	578b3632cce5b97d63d1c7d9bb14e9ce631af8d3
----------------------------
bug#30435 changes due to non-determinism in value of read_buffer_size. 	c5b597bc8953591ef824a55b9bcf7acf317f5d68
----------------------------
Merge: 3624851 0ca3250 Merge aelkin@bk-internal.mysql.com:/home/bk/mysql-5.0-rpl into  koti.dsl.inet.fi:/home/elkin/MySQL/TEAM/FIXES/5.0/bug33435-load_data_read_buffer_size 	7801f290419fd725f3532129335bfe56786e1b25
----------------------------
BUG#30435 loading large LOAD DATA INFILE breaks slave with read_buffer_size set on master BUG#33413 show binlog events fails if binlog has event size of close to max_allowed_packet The size of Append_block replication event was determined solely by read_buffer_size whereas the rest of replication code deals with max_allowed_packet. When the former parameter was set to larger than the latter there were two artifacts: the master could not read events from binlog; show master events did not show. Fixed with - fragmenting the used io-cached buffer into pieces each size of less than max_allowed_packet (bug#30435) - incrementing show-binlog-events handling thread's max_allowed_packet with the max estimated for the replication header size 	0ca3250e5910e5e636cbf774027747c3835fe616
----------------------------
BUG#28908 Replication: set global server_id is not setting the session server_id When set the server-id dynamically, the server_id member of current thread is not updated. Update the server_id member of current thread after updated the global variable value. 	329d1a7bf7881d906b8de97dbd14e86c4de7735c
----------------------------
Use --skip-ssl by default 	412ab8016b0c637ecbdca1f3071c5bb923b6533a
----------------------------
branches/zip: Fast index creation: Lock the data dictionary only after acquiring the table lock.  The data dictionary should not be locked for long periods.  Before this change, in the worst case, the dictionary would be locked until the expiration of innodb_lock_wait_timeout. Virtually, transaction-level locks (locks on database objects, such as records and tables) have a latching order level of SYNC_USER_TRX_LOCK, which is above any InnoDB rw-locks or mutexes.  However, the latching order of SYNC_USER_TRX_LOCK is never checked, not even by UNIV_SYNC_DEBUG. ha_innobase::add_index(), ha_innobase::final_drop_index(): Invoke row_mysql_lock_data_dictionary(trx) only after row_merge_lock_table(). 	e3d19b0f765659c886466c1be388939d95175789
----------------------------
Add new pkgplugindir handling to seperate plugins from libraries, and allow override for binary distributions.  Extend mysql_config to print compiled-in plugin location for third-party plugins to use.  Resolves bug#31736. 	f988a7e600b2eb997d0211ee0c9e7cb436fd260a
----------------------------
"Use dynamic switch directly from ""server_need_restart"" for better control of when to do it. Remove #!force-restart and #!fresh-datadir "	ec886a34c648493fb9c45ac91357492aad3d14b2
----------------------------
Use absolute path to allow tets to be run also when datadir differs 	f4d93f41bc379e3a271c107d190630b7671861a4
----------------------------
fix colliding config param numbers 	124b4da08bf50f4bdb7334d44f98c5287121cb78
----------------------------
Many files: WL#3085 Cluster should support OPTIMIZE: Main implementation (by justin.he@mysql.com) ha_ndbcluster.h, ha_ndbcluster.cc: WL#3085 Cluster should support OPTIMIZE: Handler implementation ndb_optimize_table.test, ndb_optimize_table.result: WL#3085 Cluster should support OPTIMIZE: New test case mysqld.cc, sql_class.h, set_var.cc: WL#3085 Cluster should support OPTIMIZE: Added throttle with connection variable ndb_optimization_delay 	483d3bbdb5effd5c0bdf83f27a34c1bc3a60255d
----------------------------
Don't add --binlog-format if --skip-log-bin or --loose-skip-log-bin is used for the test 	864989d97f22d16bd38ac6c0ca039f4fc4760a82
----------------------------
reserve config numbers 	d4947930e2d5045f6232e04d3e6e54850ce1b8a0
----------------------------
WL#4189 - dynamic configuration support - safe process - cleanups - create new suite for fedarated 	d918988baa943a18b17468f7cf2aa73833217f83
----------------------------
"Bug #30651	Problems with thread_handling system variable Changed thread_handling variable to a global only, read only variable, as it is currently used. "	4abafe2617a67194d05c94eab21a6afe7d3c887b
----------------------------
Bug #27440 read_only allows create and drop database When read_only option was enabled, a user without SUPER privilege could perform CREATE DATABASE and DROP DATABASE operations. This patch adds a check to make sure this isn't possible. It also attempts to simplify the logic used to determine if relevant tables are updated, making it more human readable. 	392cc185b3a6b43165df7f0ed942c3d7666fbcbb
----------------------------
BUG#25677 - With --skip-symbolic-links option on, DATA DIRECTORY clause is silently ignored When symbolic links are disabled by command line option or NO_DIR_IN_CREATE sql mode, CREATE TABLE silently ignores DATA/INDEX DIRECTORY options. With this fix a warning is issued when symbolic links are disabled. 	1d0ea2d04377ca7040aba98fd4acbe1f98e0e091
----------------------------
configure.in: Merged missing change in the 5.0 community repository, --without-server was not working if thread safe client was enabled (Bug#32898) 	b058fce73d0d85c02e2552c656cdace977792720
----------------------------
"configure.in: Removed the auto detection and use of Solaris ""libmtmalloc"", as it cause regression on bug#18322. The code removed also prevented a build without using this library. Users can still compile with ""libmtmalloc"", if configuring with ""--with-mysqld-libs=-lmtmalloc"" "	5caf347a560a7592da68ee8dd191a9d074bf08c4
----------------------------
branches/zip: Merge r2154 from trunk: innodb.result, innodb.test: Revert the changes in r2145. The tests that were removed by MySQL ChangeSet@1.2598.2.6  2007-11-06 15:42:58-07:00  tsmith@hindu.god were moved to a new test, innodb_autoinc_lock_mode_zero, which is kept in the MySQL BitKeeper tree. 	45a28445430dced496be857ca8bee8fc9d0ca234
----------------------------
branches/5.1: Merge r2154 from trunk: innodb.result, innodb.test: Revert the changes in r2145. The tests that were removed by MySQL ChangeSet@1.2598.2.6  2007-11-06 15:42:58-07:00  tsmith@hindu.god were moved to a new test, innodb_autoinc_lock_mode_zero, which is kept in the MySQL BitKeeper tree. 	88cdf19670d99819e949a91aabbee8019fe05154
----------------------------
Bug #32679: mysqld_safe looks for errmsg.sys in wrong path The fix for bug 28544 moved our package data from ./share/mysql to ./share.  mysqld_safe had the old directory hard-coded.  The fix is to use the @pkgdatadir@ and @prefix@ values, to adapt to different ways of building the package. 	95b791c7af4c5659e1c022de100af15dd8fd39cd
----------------------------
ndb - TO during SR now config option, wait-to-sr = true - wait for all nodes to do TO before running last startphases (old behaviour) wait-to-sr = false - all cluster to start, and let TO nodes start (parallel) afterwards 	896fdf8963c2c5cd38f8b43dd9ab046d813b20e9
----------------------------
"Merge a change from MySQL AB: ChangeSet@1.2528.116.42  2007-09-08 20:26:12-07:00  antony@xiphis.org Bug#30919 ""Rows not deleted from innodb partitioned tables if --innodb_autoinc_lock_mode=0"" Due to a previous bugfix which initializes a previously uninitialized variable, ha_partition::get_auto_increment() may fail to operate correctly when the storage engine reports that it is only reserving one value and one or more partitions have a different 'next-value'. Currently, only affects Innodb's new-style auto-increment code which reserves larger blocks of values and has less inter-thread contention. ha_innodb.cc: Bug30919 Only set *first_value if it is less than autoinc value. This allows a higher value to be hinted when operating as a partitioned table. "	2928e930d887ce18489972617d46ca1b5cabbc28
----------------------------
"Merge a change from MySQL AB: ChangeSet@1.2528.116.40  2007-09-08 11:19:35-07:00  acurtis@xiphis.org Bug#30907 ""Regression: ""--innodb_autoinc_lock_mode=0"" (off) not same as older releases"" Bug#28430 ""Failure in replication of innodb partitioned tables on row/mixed format"" Bug#30888 ""Innodb table + stored procedure + row deletion = server crash"" Apply Oracle patch from Sunny Include tests cases by Omer Ensure that innobase_read_and_init_auto performs table autoinc lock when lock_mode = 0 No need for ""if"" guard around row_unlock_table_autoinc_for_mysql() because it already performs same check. Make autoinc_lock_mode variable read-only for duration of running mysqld process. ha_innodb.cc: Bug30907/28430 ""Regression: ""--innodb_autoinc_lock_mode=0"" (off) not same as older releases"" ""Failure in replication of innodb partitioned tables on row/mixed format"" Apply Oracle patch from Sunny Ensure that innobase_read_and_init_auto performs table autoinc lock when lock_mode = 0 No need for ""if"" guard around row_unlock_table_autoinc_for_mysql() because it already performs same check. Make autoinc_lock_mode variable read-only for duration of running mysqld process. "	7acad9f37276f2cb24801871d898e98b937b3880
----------------------------
make libmysqld work with ndbcluster 	e0e3949d3f34394326a3123295278d1d7aad2419
----------------------------
Bug#8693 Test 'rpl_log_pos' fails sometimes Moved disabling to rpl suite. Bug#32801 wait_timeout.test fails randomly Disabled test case. 	4d38a04665b63c73a229c61049ec40b2fc5d791b
----------------------------
Increase the slave_net_timeout to double of what the master uses for connect_timeout 	038a093c979f178a0ba2b7b87bc436724d645df6
----------------------------
WL#3949, Added the optimization of rpl tests if mtr started w/o a combination and --mysqld=--binlog-format=XXX 	862cb6cadf8216cbd60163c6d59bf71cdb49fc90
----------------------------
Fix for bug #32080: Excessive warnings on Solaris: setrlimit could not change the size of core files. Suppress the 'setrlimit could not change the size of the core files' warning in mysql-test-run. We do not want core files on some of the PushBuild hosts, and PushBuild itself does not set --core-files, so that warning is expected. 	347c33d606ec1ecfd208951a95b61a41bbe8d69f
----------------------------
"Makefile.am, configure.in: Include ""manual.chm"" in source TAR if it exists "	41778b565b75220361b15e375d21fb50589001cc
----------------------------
configure.in: Revert version back to 5.0.52 for release build 	003f5640e7cb6bb60358f005a2f240ac0db1912e
----------------------------
[PATCH] WL4081 Futz with mtr ndb config to enable compressed lcp, backup and O_DIRECT Index: telco/mysql-test/ndb/ndb_config_2_node.ini =================================================================== 	c666e0f3de00843347b95733c8249371b87400b2
----------------------------
[PATCH] WL4081: Add compressed file support to AsyncFile (azio) and support compressed backups. - add azio to NDB - add config option for CompressedBackup - add ability to change CompressedBackup (per-node) online using DUMP interface - add test for mysql-test-run for compressed backups (NOTE: won't pass unless read compressed backups patch also applied) Part of the design here is to by default (i.e. without any of the compressed options enabled) - NOT futz with the code paths for normal IO. So if any bug/problem is found - disabling the compression options means none of that code is run. 	4972d3f814639e580442df12711391af4595de48
----------------------------
Reverting changes to debug printouts to ha_ndbcluster.cc. 	23cd47e0e1affa5cc49caef6669a59f19490b240
----------------------------
"Bug #31562: HAVING and lower case The columns in HAVING can reference the GROUP BY and SELECT columns. There can be ""table"" prefixes when referencing these columns. And these ""table"" prefixes in HAVING use the table alias if available. This means that table aliases are subject to the same storage rules as table names and are dependent on lower_case_table_names in the same way as the table names are. Fixed by : 1. Treating table aliases as table names and make them lowercase when printing out the SQL statement for view persistence. 2. Using case insensitive comparison for table aliases when requested by lower_case_table_names "	3384d3e96c459cc2789c912261541f2b4eb13818
----------------------------
Fix for bug #32020: loading udfs while --skip-grant-tables is enabled causes out of memory errors The code in mysql_create_function() and mysql_drop_function() assumed that the only reason for UDFs being uninitialized at that point is an out-of-memory error during initialization. However, another possible reason for that is the --skip-grant-tables option in which case UDF initialization is skipped and UDFs are unavailable. The solution is to check whether mysqld is running with --skip-grant-tables and issue a proper error in such a case. 	e703c6a78c97eddf6a8fbf20bebe89d1ae504f93
----------------------------
Remove the --source-install option and instead make use of --srcdir to install system tables directly from the source tree (useful for testing purposes).  This helps clean the script up a lot and clarify the three possible ways the script can be called (using compiled-in paths, passing --basedir pointing to alternative install location, or --srcdir).  Include further tidying as well. This fixes bug#30759. 	8cde2055ad02e23fe75c3471146e7540a6057433
----------------------------
configure.in: bump up version 	fa09818f3f1554de4623deae0483b8bea990a230
----------------------------
Bug #20748: Configuration files should not be read more than once A user could not override system-wide settings in their ~/.my.cnf, because the DEFAULT_SYSCONFDIR was being searched last.  Also, in some configurations (especially when the --sysconfdir compile-time option is set to /etc or /etc/mysql), the system-wide my.cnf file was read multiple times, causing confusion and potential problems. Rearrange default directories to conform to the manual and logic. Move --sysconfdir=<path> (DEFAULT_SYSCONFDIR) from the last default directory to the middle of the list.  $HOME/.my.cnf should be last, so the user is able to override the system-wide settings. Change init_default_directories() to remove duplicates from the list. 	ef59ca3d78b80285c11e59b20451c88496abe513
----------------------------
"Apply snapshot innodb-5.1-ss1989 Fixes the following bugs: Bug #30706: SQL thread on slave is allowed to block client queries when slave load is high Add (innodb|innobase|srv)_replication_delay MySQL config parameter. Bug #30888: Innodb table + stored procedure + row deletion = server crash While adding code for the low level read of the AUTOINC value from the index, the case for MEDIUM ints which are 3 bytes was missed triggering an assertion. Bug #30907: Regression: ""--innodb_autoinc_lock_mode=0"" (off) not same as older releases We don't rely on *first_value to be 0 when checking whether get_auto_increment() has been invoked for the first time in a multi-row INSERT. We instead use trx_t::n_autoinc_rows. Initialize trx::n_autoinc_rows inside ha_innobase::start_stmt() too. Bug #31444: ""InnoDB: Error: MySQL is freeing a thd"" in innodb_mysql.test ha_innobase::external_lock(): Update prebuilt->mysql_has_locked and trx->n_mysql_tables_in_use only after row_lock_table_for_mysql() returns DB_SUCCESS.  A timeout on LOCK TABLES would lead to an inconsistent state, which would cause trx_free() to print a warning. Bug #31494: innodb + 5.1 + read committed crash, assertion Set an error code when a deadlock occurs in semi-consistent read. "	eb654791271ceb11baa5d110df6fde38b3442385
----------------------------
configure.in: bump up version 	514d3625fc53d75902c0b496bc2a5901761d8526
----------------------------
ndb_auto_increment.result: Rename: mysql-test/r/ndb_auto_increment.result -> mysql-test/suite/ndb/r/ndb_auto_increment.result ndb_auto_increment.test, ndb_auto_increment.result: Bug #31956       auto increment bugs in MySQL Cluster: Adapted test cases ha_ndbcluster.cc: Bug #31956       auto increment bugs in MySQL Cluster: Merging from 5.0 ndb_auto_increment.test: Rename: mysql-test/t/ndb_auto_increment.test -> mysql-test/suite/ndb/t/ndb_auto_increment.test 	56ab11c8cb3e00ce5eb88ca960422723de1b7fa8
----------------------------
"ha_ndbcluster.h: Bug #31956       auto increment bugs in MySQL Cluster: Added utility method and constant for internal prefetch default ndb_auto_increment.result: BitKeeper file /home/marty/MySQL/mysql-5.0-ndb/mysql-test/r/ndb_auto_increment.result mysqld.cc: Bug #25176  	Trying to set ndb_autoincrement_prefetch_sz always fails: Changed pointer to max value Bug #31956  	auto increment bugs in MySQL Cluster: Changed meaning of ndb_autoincrement_prefetch_sz to specify prefetch between statements, changed default to 1 (with internal prefetch to at least 32 inside a statement) ndb_insert.test, ndb_insert.result: Moved auto_increment tests to ndb_auto_increment.test ndb_auto_increment.test: BitKeeper file /home/marty/MySQL/mysql-5.0-ndb/mysql-test/t/ndb_auto_increment.test ha_ndbcluster.cc: Bug #31956       auto increment bugs in MySQL Cluster: Changed meaning of ndb_autoincrement_prefetch_sz to specify prefetch between statements, changed default to 1 (with internal prefetch to at least 32 inside a statement), added handling of updates of pk/unique key with auto_increment Bug #32055  	Cluster does not handle auto inc correctly with insert ignore statement "	4cf742a8a809aee1b1c454ac7fc7969555c2aed8
----------------------------
Provide better feedback to the user when unable to find MySQL files usually caused by a bad basedir setting. 	51be103e131206a3beffa5f8445c880b89229613
----------------------------
Bug #28597 Replication doesn't start after upgrading to 5.1.18 Since bug@20166, which replaced the binlog file name generating to base on pidfile_name instead of the previous glob_hostname, the binlog file name suddenly started to be stored solely in the absolute path format, including a case when --log-bin option meant a relative path. What's more serious, the path for binlog file can lead unrequestedly to pid-file directory so that after any proper fix for this bug there might be similar to the bug report consequences for one who upgrades from post-fix-bug@20166-pre-fix-bug@28597 to post-fix-bug@28597. Fixed with preserving`pidfile_name' (intr.by bug@20166) but stripping off its directory part. This restores the original logics of storing the names in compatible with --log-bin option format and with the requirement for --log-bin ralative path to corresond to the data directory. Side effects for this fix: effective fixing bug@27070, refining its test; ensuring no overrun for buff can happen anymore (Bug#31836 insufficient space reserved for the suffix of relay log file name); bug#31837  --remove_file $MYSQLTEST_VARDIR/tmp/bug14157.sql missed in rpl_temporary.test; fixes Bug@28603  Invalid log-bin default location; 	571f8be43057e82eda6cd5250ebb2c36b0ba8aea
----------------------------
Bug#28170 replicate-ignore-db=mysql should not ignore mysql.ndb_apply_status - Add test case --- Bug#28170 replicate-ignore-db=mysql should not ignore mysql.ndb_apply_status - Add test case 	5e3725bf481cc0d94b47413e15f635db8cc4b99c
----------------------------
"Remove net_printf_error(). Do not talk to network directly in check_user()/check_connection()/check_for_max_user_connections(). This is a pre-requisite patch for the fix for Bug#12713 ""Error in a stored function called from a SELECT doesn't cause ROLLBACK of statem"" Implement review comments. "	c0bb7f8682cd11ad9fc9915781c8447ac2818094
----------------------------
"Makefile.am: Ensure use of libedit ""config.h"" by adding ""-I. -I$(srcdir)"" to DEFS, work around for problem with automake 1.10 (bug#24809) "	2f88dce6ff191e001f4de1a0521143bf48692fb6
----------------------------
Fix failing init_connect.test (5.1-runtime). 	5a09edd203ea125b846af82935b7d7e5da430435
----------------------------
Bug#30889: filesort and order by with float/numeric crashes server There are two problems with ROUND(X, D) on an exact numeric (DECIMAL, NUMERIC type) field of a table: 1) The implementation of the ROUND function would change the number of decimal places regardless of the value decided upon in fix_length_and_dec. When the number of decimal places is not constant, this would cause an inconsistent state where the number of digits was less than the number of decimal places, which crashes filesort. Fixed by not allowing the ROUND operation to add any more decimal places than was decided in fix_length_and_dec. 2) fix_length_and_dec would allow the number of decimals to be greater than the maximium configured value for constant values of D. This led to the same crash as in (1). Fixed by not allowing the above in fix_length_and_dec. 	6b92ec4acbf78892bc4880913a762db0189ce20f
----------------------------
Bug #31332 --event-scheduler option misbehaving Changed the behaviour of the --event-scheduler option when used without an arguments. It now turns the option on. 	5b01a77c9c92dff6020c58d8c24f22f7659d3f16
----------------------------
BUG#24860 (Incorrect SLAVE_TRANSACTION_RETRIES code can result in slave stuck): If a temporary error occured inside a group on an event that was not the first event of the group, the slave could get stuck because the retry counter is reset whenever an event was executed successfully. This patch only reset the retry counter when an entire group has been successfully executed, or failed with a non-transient error. 	012bccc09f10825713e352784fc4abeb14a99d48
----------------------------
Patch for BUG#31111: --read-only crashes MySQL (events fail to load). There actually were several problems here: - WRITE-lock is required to load events from the mysql.event table, but in the read-only mode an ordinary user can not acquire it; - Security_context::master_access attribute was not properly initialized in Security_context::init(), which led to differences in behavior with and without debug configure options. - if the server failed to load events from mysql.event, it forgot to close the mysql.event table, that led to the coredump, described in the bug report. The patch is to fix all these problems: - Use the super-user to acquire WRITE-lock on the mysql.even table; - The WRITE-lock is acquired by the event scheduler in two cases: - on initial loading of events from the database; - when an event has been executed, so its attributes should be updated. Other cases when WRITE-lock is needed for the mysql.event table happen under the user account. So, nothing should be changed there for the read-only mode. The user is able to create/update/drop an event only if he is a super-user. - Initialize Security_context::master_access; - Close the mysql.event table in case something went wrong. 	c60397ef1988ed1286a4d99dc2b9f9216c5dd98b
----------------------------
"Modify ""mysqlbug"" (""scripts/mysqlbug.sh"") so that it differs between the original and the modified values of the compile-related variables used in ""configure"". Make the necessary adjustments in ""configure.in"" and ""scripts/Makefile.am"". This fixes bug#31644 Values of *FLAGS that were used for building packages is missed in mysqlbug "	a238d6e280c9a1f43fddeb326b460f8f55421b35
----------------------------
Fix bug #31604: server crash when setting slow_query_log_file/global general_log_file variable Problem: we don't evaluate given expression checking values of the slow_query_log_file/general_log_file, don't check it for NULL. Fix: evaluate the expression, check result returned. 	3d2f493fb42001aac3706b838d8c8bc9f651538e
----------------------------
Fix for Bug#31169 Test case does not check whether configuration contains feature tested 	714e2091c57c9f09003b6cc8af82550093372bc7
----------------------------
configure.in: bump up version 	09b4af59ec93b071e19ea898c42a2468cfdfad41
----------------------------
"branches/zip: Allow a dynamically loaded InnoDB storage engine plugin to replace a built-in instance of InnoDB in mysqld.  This is work in progress, with several limitations: * Other plugins defined in the builtin InnoDB are not disabled. However, InnoDB in MySQL 5.1 only defines the storage engine plugin, no INFORMATION_SCHEMA plugins. * The global C symbols in ha_innodb.so except innodb_hton_ptr and builtin_innobase_plugin will have to be redefined, e.g., by objcopy. * The storage engine cannot be called ""InnoDB"" to avoid a conflict with the builtin name.  Here we call it InnoDBzip. innobase_hton_name[]: Rename to ""InnoDBzip"" when building a dynamic plugin. innodb_plugin_init(): New function for the dynamic plugin, to copy and redirect configuration parameters from the builtin InnoDB. innodb_dynamic: New configuration parameter.  This has to be added to the builtin InnoDB in MySQL 5.1.  Also, innodb_hton_ptr must be made global there. innobase_init(): Interpret the parameter innodb_dynamic. Makefile.am: Redefine class ha_innobase to ha_innodb by a preprocessor define.  Apparently, C++ classes cannot be easily renamed by objcopy. "	7c68ba2e9d72e1d33146620fa80184c02067b49f
----------------------------
WL#4096 Real time settings and perf improvements in ndb kernel Add 5 new configuration variable: 1) Boolean to set threads in real-time priority 2) Lock main thread to a CPU (parameter is cpu id) 3) Lock other threads to a CPU (parameter is cpu id) all these requires ndbd started as root to have any effect 4) Spin timer in scheduler loop, number of microseconds we'll spin in loop waiting for messages to arrive before going to sleep 5) Execution timer in scheduler loop, number of microseconds we'll execute in loop before we send messages gathered during execution 	eb69236268ce9b867426dbd18c295d3bac7a6746
----------------------------
"Bug#30821: setting --tc_heuristic_recover tries to set myisam_stats_method Options to mysqld were not processed correctly because switch statement was missing some ""break""s. CS adds them. No test case; would require .opt file and server restart. Manually tested. "	5c21619b3a07d1b7b8a76ea7542cb4401c097907
----------------------------
Moved a lot of old bug fixes and safe cleanups from Maria 5.1 tree to 5.1 - Reserver namespace and place in frm for TABLE_CHECKSUM and PAGE_CHECKSUM create options - Added syncing of directory when creating .frm files - Portability fixes - Added missing cast that could cause bugs - Code cleanups - Made some bit functions inline - Moved things out of myisam.h to my_handler.h to make them more accessable - Renamed some myisam variables and defines to make them more globaly usable (as they are used outside of MyISAM) - Fixed bugs in error conditions - Use compiler time asserts instead of run time - Fixed indentation HA_EXTRA_PREPARE_FOR_DELETE -> HA_EXTRA_PREPARE_FOR_DROP as the old name was wrong (Added a define for old value to ensure we don't break any old code) Added HA_EXTRA_PREPARE_FOR_RENAME as a signal for rename (before we used a DROP signal which is wrong) - Initialize error messages early to get better errors when mysqld or an engine fails to start - Fix windows bug that query_performance_frequency was not initialized if registry code failed - thread_stack -> my_thread_stack_size 	7887babe69412b6f33f6cb782f468e9b58695fb9
----------------------------
"Fix for bug #31174: ""Repair"" command on MyISAM crashes with small myisam_sort_buffer_size. An incorrect length of the sort buffer was used when calculating the maximum number of keys. When myisam_sort_buffer_size is small enough, this could result in the number of keys < number of BUFFPEK structures which in turn led to use of uninitialized BUFFPEKs. Fixed by correcting the buffer length calculation. "	f80541e37045a7f511998718d5b89d5e9942e6a6
----------------------------
Bug#28893 --relay-log variable is not exposed with SHOW VARIABLES added variables relay_log, relay_log_index, relay_log_info_file to init_vars[] to make them visible within SHOW VARIABLES 	a5e7b726c1840190d5e90854d2a4838fad68729f
----------------------------
"Issue a warning if a user sets an option or a variable to a value that is greater than a defined maximum for the option/variable. This is for bug #29446 ""Specifying a myisam_sort_buffer > 4GB on 64 bit machines not possible"". Support for myisam_sort_buffer_size > 4 GB on 64-bit Windows will be looked at later in 5.2. "	1ba3f4f56b57bcf6266beae20da6a06eda436964
----------------------------
Merge: cfb88e6 8da409a Merge polly.(none):/home/kaa/src/maint/bug5731.old/my50-bug5731-read_buffer_size into  polly.(none):/home/kaa/src/maint/bug5731/my50-bug5731 	d8d3698b4a037256cb98f112e7f58c17c736cb54
----------------------------
"Bug #29589	sys_innodb_max_purge_lag is defined twice in sys_variables Removed duplicate innodb variable from sys_variables array. "	93fd4e200ce1541d20afa711693a626549577274
----------------------------
Patch for BUG#30472: libmysql doesn't reset charset, insert_id after succ. mysql_change_user() call. See also WL 4066. This bug reveals two problems: - the problem on the client side which was described originally; - the problem in protocol / the server side: connection context on client and server should be like after mysql_real_connect() and be consistent. The server however just resets character set variables to the global defaults. The fix seems to be as follows: - extend the protocol so that the client be able to send character set information in COM_CHANGE_USER command; - change the server so that it understands client character set in the command; - change the client: - reset character set to the default value (which has been read from the configuration); - send character set in COM_CHANGE_USER command. 	8051b7568db48a845e1af8fa924c809ef4ca9641
----------------------------
BUG#31276 Micro GCP timeout set too lo (2 seconds) - add config param - timeout must be set in relation to other timeouts 	4e0d260cb2102d5c50a250a755f16e1346f311ee
----------------------------
BUG#28298 Node Id larger than MAX_NDB_NODES in config file doesn't generate error 	60a185803eb6cb50688ab1502ab0ae1008f32cce
----------------------------
Makefile.am, configure.in: Handle pstack like other optional directories Check if a directory exists relative to $srcdir 	96b62a5c133845b270fc859fd864782ec18f1897
----------------------------
"Makefile.am: Always include all sub directories in ""make dist"" Removed incorrect comment configure.in: Unconditionally list make files in AC_CONFIG_FILES Removed 'thread_dirs', it is not used Minor cleanup compile-dist: Simplified the configure line needed for ""make dist"" to get it all zlib.m4, ssl.m4: Unconditionally list make files in AC_CONFIG_FILES Makefile.am: Removed DIST_SUBDIRS not needed Don't copy soft links as files into source package "	1b53e4a5474f5da7e60b6932a39f55ff29d8f142
----------------------------
Bug #15327: configure: --with-tcp-port option being partially ignored make sure that if builder configured with a non-standard (!= 3306) default TCP port that value actually gets used throughout. 	ac026cfeb6d8d3ded34db5c222f4d5b6dfb5262b
----------------------------
- Increase default connect_timeout to avoid intermittent disconnects when test servers are put under load 	ed055965bf2e4f04be61372bb81f67d51231ae33
----------------------------
Bug #15327: configure: --with-tcp-port option being partially ignored make sure that if builder configured with a non-standard (!= 3306) default TCP port that value actually gets used throughout. 	9c9c82e04ecd23e4aa5f44ecfb63a86f8f97b9d3
----------------------------
Bug#28359 Intermitted lost connection at 'reading authorization packet' errors - Increase default 'connect_timeout' value to 10 seconds 	10816b3a08647abdf4e621e0f707cb674c03cda3
----------------------------
Revert r1850 as MySQL did not approve the addition. log for r1850: Implement this feature request: http://bugs.mysql.com/30706 * Add a function that returns the number of microseconds since epoch - ut_time_us(). * Add (innodb|innobase|srv)_replication_delay MySQL config parameter. * Add UT_WAIT_FOR() macro that waits for a specified condition to occur until a timeout elapses. * Using all of the above, handle the replication thread specially in srv_conc_enter_innodb(). 	0044736fa39ab4c14768736f478996f9a6f5fe99
----------------------------
Bug #30639: limit offset,rowcount wraps when rowcount >= 2^32 in windows The parser uses ulonglong to store the LIMIT number. This number then is stored into a variable of type ha_rows. ha_rows is either 4 or 8 byte depending on the BIG_TABLES define from config.h So an overflow may occur (and LIMIT becomes zero) while storing an ulonglong value in ha_rows. Fixed by : 1. Using the maximum possible value for ha_rows on overflow 2. Defining BIG_TABLES for the windows builds (to match the others) 	c2abf960f917184084fb0143aaa07d707dc5ff6d
----------------------------
WL#3680 On-line add attribute, ndbcluster handler part: Removed redundant check for fixed tables (already checked in NdbDictionary::supportedAlterTable() 	666918134e35abca04d64f02c29abfb9cbaf2abd
----------------------------
"Implement this feature request: http://bugs.mysql.com/30706 * Add a function that returns the number of microseconds since epoch - ut_time_us(). * Add (innodb|innobase|srv)_replication_delay MySQL config parameter. * Add UT_WAIT_FOR() macro that waits for a specified condition to occur until a timeout elapses. * Using all of the above, handle the replication thread specially in srv_conc_enter_innodb(). Approved by:	Heikki "	83187d4e95e2f0c6ed4a2450df83bd7136f93eed
----------------------------
Fixed ndbcluster_rollback 	f09169670b718d666e44dd43ec76bb884250eaa0
----------------------------
Bug #15327: configure: --with-tcp-port option being partially ignored after merge fix :-/ 	cc3f0af2e199487c8b2cebd6c7b525168ad5a7a7
----------------------------
"Add config option innodb_use_adaptive_hash_indexes to enable/disable adaptive hash indexes. It is enabled by default (no change in default behavior). Approved by:	Marko "	2f03b9e3212f7b7f9dcdd9f7426bf51506f01624
----------------------------
"Bug #15327: configure: --with-tcp-port option being partially ignored make sure that if builder configured with a non-standard (!= 3306) default TCP port that value actually gets used throughout. if they didn't configure a value, assume ""use a sensible default"", which will be read from /etc/services or, failing that, from the factory default. That makes the order of preference - command-line option - my.cnf, where applicable - $MYSQL_TCP_PORT environment variable - /etc/services (unless configured --with-tcp-port) - default port (--with-tcp-port=... or factory default) "	3c6ca8d6edf55764df93a831f61dc3855e82d91c
----------------------------
"Bug#30919 ""Rows not deleted from innodb partitioned tables if --innodb_autoinc_lock_mode=0"" Due to a previous bugfix which initializes a previously uninitialized variable, ha_partition::get_auto_increment() may fail to operate correctly when the storage engine reports that it is only reserving one value and one or more partitions have a different 'next-value'. Currently, only affects Innodb's new-style auto-increment code which reserves larger blocks of values and has less inter-thread contention. "	89f88eab6e91c63ea2fa0308f08af9f6c2e8176d
----------------------------
"Bug#30907 ""Regression: ""--innodb_autoinc_lock_mode=0"" (off) not same as older releases"" Bug#28430 ""Failure in replication of innodb partitioned tables on row/mixed format"" Bug#30888 ""Innodb table + stored procedure + row deletion = server crash"" Apply Oracle patch from Sunny Include tests cases by Omer Ensure that innobase_read_and_init_auto performs table autoinc lock when lock_mode = 0 No need for ""if"" guard around row_unlock_table_autoinc_for_mysql() because it already performs same check. Make autoinc_lock_mode variable read-only for duration of running mysqld process. "	d8d199c469e7ede2b08cbbf1b1ec1672aac4f908
----------------------------
"This patch is a part of work on bug #5731 ""key_buffer_size not properly restricted to 4GB"". The patch limits read_buffer_size and read_rnd_buffer_size by 2 GB on all platforms for the following reasons: - I/O code in mysys, code in mf_iocache.c and in some storage engines do not currently work with sizes > 2 GB for those buffers - even if the above had been fixed, Windows POSIX read() and write() calls are not 2GB-safe, so setting those buffer to sizes > 2GB would not work correctly on 64-bit Windows. "	8da409ac16e88ef4fff170521277b3ecb63489c6
----------------------------
sql_table.cc, ha_ndbcluster.cc: WL3749 On-line DDL, new handler interface: Fixed fast alter table handler.h: WL3749 On-line DDL, new handler interface: Added better comments for new calls 	61b87b86f0a637db79278c3dc3696cf1037e5fe4
----------------------------
Make mysql compilable on gcc-4.2.1. c++config.h now has the following code: // For example, <windows.h> is known to #define min and max as macros... #undef min #undef max So, our defines in my_global.h are undefined when <new> header is included. Move definitions of min()/max() to the end of my_global.h. 	c7de9652158d12fa26dc295a772f962d30b9ff8f
----------------------------
Use SIZE_T_MAX instead of ulong as a limit for key_buffer_size to allow key_bufer_size > 4G on Windows in 5.1. This is for bug #5731. 	0c199938073a2f1359732568707c430f3f0a473f
----------------------------
configure.in: beta => rc 	d93c9911c40694ad5280486764a6f8e90c4a126c
----------------------------
row_create_table_for_mysql(), row_truncate_table_for_mysql(), row_drop_table_for_mysql(): Do not mention innodb_force_recovery when newraw is set. 	e06a17049a52b7a37defdd0eeee9e40090dbbd5d
----------------------------
Merge a change from MySQL AB: ChangeSet@1.2536.10.2  2007-07-25 10:44:45+02:00  jperkin@mysql.com Fix for bug#29641 - $CC on Open Server is set to contain arguments for enabling threads.  However, duplicate AC_PROG_* macros in the innobase plug.in file were resetting $CC and causing link errors. As AC_PROG_* macros are already used in the main configure.in file there should be no need for them to be duplicated here too. plug.in: Remove AC_PROG_* macros 	bcd46059298fc025b1b2463ed08c1e96ec708e32
----------------------------
ndb - bug#27923 add --bind-address to ndb_mgmd 	cf7b7db3dcd456343303040915a5eaacfbe852f1
----------------------------
reserve config id...for micro gcp 	4c485ed326dfdaf851f3bb0b85027dc6c5fdcf61
----------------------------
mysql_config.sh: Flag changed name in icc 10 	cf285315ebb64789e914ee99539deba99ad826f5
----------------------------
"Post merge fix 2 for ChangeSet@1.2509, 2007-08-28 http://lists.mysql.com/commits/33239 Fixes for the funcs_1 datadict test bugs #30418 ""datadict"" tests (all engines) fail: Dependency on the host name for ordering #30420 ""datadict"" tests (all engines) fail: Release build has help tables loaded #30438 ""{memory,myisam,ndb}__datadict"" tests fail: Use ""InnoDB"" without checking #30440 ""datadict"" tests (all engines) fail: Character sets depend on configuration "	032a4a45d0c1bed27cc737c12156636e4022df20
----------------------------
Limit join_buffer_size, sort_buffer_size and myisam_sort_buffer_size to 4GB on all platforms, since the related code in 5.0 is not 64-bit safe. This is patch is a part of work on bug #5731 and will be null-merged to 5.1. 	f02a1f2c9191949f85bc61daa3450d13d465bf4f
----------------------------
Backport of my_malloc() changes from 5.1 to make it 64-bit safe on Unix platforms. This is required to allow key_buffer_size > 4 GB (bug #5731). 	39e53b4fee9296b214981b2ac19a4436a3d321fa
----------------------------
WL3680 On-line add attribute, ndbcluster handler part: Moved record[] from NDB_SHARE to Ndb_event_data so each NdbEventOperation have dedicated buffers, post-review fixes 	f67cd69e230457c135d81d2270a4d14e81eb2e61
----------------------------
WL3680 On-line add attribute, ndbcluster handler part: Moved record[] from NDB_SHARE to Ndb_event_data so each NdbEventOperation have dedicated buffers 	e7b563f13f256337a60483a60d08325f135ffa33
----------------------------
"Post merge fix 1 for ChangeSet@1.2509, 2007-08-28 http://lists.mysql.com/commits/33239 Fixes for the funcs_1 datadict test bugs #30418 ""datadict"" tests (all engines) fail: Dependency on the host name for ordering #30420 ""datadict"" tests (all engines) fail: Release build has help tables loaded #30438 ""{memory,myisam,ndb}__datadict"" tests fail: Use ""InnoDB"" without checking #30440 ""datadict"" tests (all engines) fail: Character sets depend on configuration There are more post merge fixes needed. "	04114a8b68de73bb86c7e15e614e92721bab0a4f
----------------------------
"Fixes for Bug#30418 ""datadict"" tests (all engines) fail: Dependency on the host name for ordering Bug#30420 ""datadict"" tests (all engines) fail: Release build has help tables loaded Bug#30438 ""{memory,myisam,ndb}__datadict"" tests fail: Use ""InnoDB"" without checking Bug#30440 ""datadict"" tests (all engines) fail: Character sets depend on configuration Attention: Only the build team can check if Bug#30440 is really fixed. "	9fa2f3c6b606cdbaed5faf802067b20ed37dca68
----------------------------
"Fixes for the following bugs: Bug #30316: Some ""parts"" tests fail because the server uses ""--secure-file-priv"" Bug #30341: Test suite ""parts"" needs to be adapted to the new rules disallowing many functio Bug #30408: Suite ""parts"" needs bug numbers updated Bug #30411: Suite ""parts"" needs bug numbers updated: ER_UNIQUE_KEY_NEED_ALL_FIELDS_IN_PF Bug #30576: part_supported_sql_func_innodb.test tries to LOAD DATA outside of var dir Bug #30581: partition_value tests use disallowed CAST() function Included are some general fixes to allow the ""parts"" test suite to be run successfully.  This includes disabling a few tests or parts of tests, cleaning up the test cases and their results, etc.  Basically, these tests have not been run for some time, and had suffered some bit rot. The bugs were fixed as a single changeset, because in some ways they depend on each other.  I couldn't be sure I'd updated all the error codes (for bugs 30408 and 30411) without also adapting to the new allowed functions rules (bug 30341), and vice versa. "	220cd12f0b3c095a572e541c9fbaffb21cf310bf
----------------------------
recommit of Addendum to bug #29325 to 5.1.22 tree keep_files_on_create made a startup option 	682258a699d5906c2372df93da646672ef303e54
----------------------------
"BUG#21842 (Cluster fails to replicate to innodb or myisam with err 134 using TPC-B): Problem: A RBR event can contain incomplete row data (only key value and fields which have been changed). In that case, when the row is unpacked into record and written to a table, the missing fields get incorrect NULL values leading to master-slave inconsistency. Solution: Use values found in slave's table for columns which are not given in the rows event. The code for writing a single row uses the following algorithm: 1. unpack row_data into table->record[0], 2. try to insert record, 3. if duplicate record found, fetch it into table->record[0], 4. unpack row_data into table->record[0], 5. write table->record[0] into the table. Where row_data is the row as stored in the data area of a rows event. Thus: a) unpacking of row_data happens at the time when row is written into a table, b) when unpacking (in step 4), only columns present in row_data are overwritten - all other columns remain as they were found in the table. Since all data needed for the above algorithm is stored inside Rows_log_event class, functions which locate and write rows are turned into methods of that class. replace_record()     -> Rows_log_event::write_row() find_and_fetch_row() -> Rows_log_event::find_row() Both methods take row data from event's data buffer - the row being processed is pointed by m_curr_row. They unpack the data as needed into table's record buffers record[0] or record[1]. When row is unpacked, m_curr_row_end is set to point at next row in the data buffer. Other changes introduced in this changeset: - Change signature of unpack_row(): don't report errors and don't setup table's rw_set here. Errors can happen only when setting default values in prepare_record() function and are detected there. - In Rows_log_event and derived classes, don't pass arguments to the execution primitives (do_...() member functions) but use class members instead. - Move old row handling code into log_event_old.cc to be used by *_rows_log_event_old classes. Also, a new test rpl_ndb_2other is added which tests basic replication from master using ndb tables to slave storing the same tables using (possibly) different engine (myisam,innodb). Test is based on existing tests rpl_ndb_2myisam and rpl_ndb_2innodb. However, these tests doesn't work for various reasons and currently are disabled (see BUG#19227). The new test differs from the ones it is based on as follows: 1. Single test tests replication with different storage engines on slave (myisam, innodb, ndb). 2. Include file extra/rpl_tests/rpl_ndb_2multi_eng.test containing original tests is replaced by extra/rpl_tests/rpl_ndb_2multi_basic.test which doesn't contain tests using partitioned tables as these don't work currently. Instead, it tests replication to a slave which has more or less columns than master. 3. Include file include/rpl_multi_engine3.inc is replaced with include/rpl_multi_engine2.inc. The later differs by performing slightly different operations (updating more than one row in the table) and clearing table with ""TRUNCATE TABLE"" statement instead of ""DELETE FROM"" as replication of ""DELETE"" doesn't work well in this setting. 4. Slave must use option --log-slave-updates=0 as otherwise execution of replication events generated by ndb fails if table uses a different storage engine on slave (see BUG#29569). "	f8b64e17f94923ef421469d648c31c0f06d2cf96
----------------------------
Apply InnoDB snapshot innodb-5.1-ss1751. Bug #16979: AUTO_INC lock in InnoDB works a table level lock Add a table level counter that tracks the number of AUTOINC locks that are pending and/or granted on a table. We peek at this value to determine whether a transaction doing a simple INSERT in innodb_autoinc_lock_mode = 1, needs to acquire the AUTOINC lock or not. This change is related to Bug# 16979. Bug #27950: Duplicate entry error in auto-inc after mysqld restart We check whether the AUTOINC sub-system has been initialized (first) by holding the AUTOINC mutex and if initialization is required then we initialize using our normal procedure. 	f01f1993ddf30bb1cfce8eb71b7d20a6124207ea
----------------------------
Fixed bug #30287. Recommit to 5.1.22. The server created temporary tables for filesort in the working directory instead of the specified tmpdir directory. 	e543c7436ef7d72111a1457a83e13651a9297f61
----------------------------
BUG#30017 log-slave-updates incorrect behavior for cluster - let the receiving injector thread decide what to do (recommit for 5.1.22 target) 	8fb593b8401801e8854f22fe7d80906a35aa9924
----------------------------
Add a table level counter that tracks the number of AUTOINC locks that are pending and/or granted on a table. We peek at this value to determine whether a transaction doing a simple INSERT in innodb_autoinc_lock_mode = 1, needs to acquire the AUTOINC lock or not. This change is related to Bug# 16979. 	332ea21b2e7d3c1e4c6643a85e4a573f75ffe704
----------------------------
Remove deleted files from bdb CMake configuration.  Fixes bug#27693. 	142681b23c9b391937b111a99cabdb4dd1ad3ebf
----------------------------
"Add variable ""innodb_autoinc_lock_mode""  to control the behavior of the AUTOINC locking. There are three modes, 0 for backward compatibility, 1 for the new style locking (default, safe for statement-based replication) and 2 for no AUTOINC locking (unsafe for statement-based replication). "	4de307d5b73440e9303a8a1c0fcc7a2db9e4c0e1
----------------------------
Fixed bug #30287. The server created temporary tables for filesort in the working directory instead of the specified tmpdir directory. 	5d3809c2644a3359c9b6c9a1fddf79044358a163
----------------------------
ha_ndbcluster_binlog.cc: Remove incorrect resource cleanup NdbDictionaryImpl.cpp: Disable on-line ALTER of BLOBS (except TINYTEXT) 	e8ea90595beae0c25a61f0c0f365dcd6d6908089
----------------------------
"Fix bug#27520.  For some unknown reason, libtool.m4 attempts to find ""ar"" but if it cannot be found sets AR=false.  This leads to confusing failures during the build rather than at configure time. We have our own checks for ar, but as AR was already set earlier by the libtool tests they were never exectuted. Therefore, update the tests so that we catch any libtool failures, and run AC_CHECK_PROG explicitly to ensure that we see sensible output from configure prior to any potential failure. "	e288730abee37cf29af9049cff0798aa1e3a1fb9
----------------------------
branches/zip: Refuse fast index creation if newraw or innodb_force_recovery have been set. ha_innobase::add_index(), ha_innobase::prepare_drop_index(), ha_innobase::final_drop_index(): Return HA_ERR_WRONG_COMMAND if newraw or innodb_force_recovery have been set. 	9ab3abd6ef1c151d7310060f17570f670d7a39b4
----------------------------
Bug #29307: status.test fails with different Table_locks_immediate When using --log --log-output=table, we increment Table_locks_immediate with every query.  The wait_condition.inc runs a query a variable number of times, depending on server load, etc.  This is a problem, when the test is checking the Table_locks_immediate value. Fix is to adjust the Table_locks_immediate value based on how many times the wait_condition query was executed. 	c23b736ed3a74343eb75553f77fe4c6f920c79e2
----------------------------
"NULL MERGE this ChangeSet to 5.1 Apply innodb-5.0-ss1696 snapshot Fixes: - Bug#20090: InnoDB: Error: trying to declare trx to enter InnoDB - Bug#23710: crash_commit_before fails if innodb_file_per_table=1 At InnoDB startup consider the case where log scan went beyond checkpoint_lsn as a crash and initiate crash recovery code path. - Bug#28781: InnoDB increments auto-increment value incorrectly with ON DUPLICATE KEY UPDATE We need to do some special AUTOINC handling for the following case: INSERT INTO t (c1,c2) VALUES(x,y) ON DUPLICATE KEY UPDATE ... We need to use the AUTOINC counter that was actually used by MySQL in the UPDATE statement, which can be different from the value used in the INSERT statement. - Bug#29097: fsp_get_available_space_in_free_extents() is capped at 4TB Fix by typecasting the variables before multiplying them, so that the result of the multiplication is of type ""unsigned long long"". - Bug#29155: Innodb ""Parallel recovery"" is not prevented Fix by enabling file locking on FreeBSD.  It has been disabled because InnoDB has refused to start on FreeBSD & LinuxThreads, but now it starts just fine. "	5e926bc1204059783375ae23c3fa34b7ad75bc0c
----------------------------
"CMakeLists.txt (many), win/README, mysql_manifest.cmake, configure.js: Additional changes for bug#29903 - Changed to do embedded build part as normal build, when WITH_EMBEDDED_SERVER is set. - Allow both normal and debug build with embedded. - Build static embedded library by pointing out all source and compile it all, i.e. not building libraries from libraries, not portable. - Let embedded use generated files from the ""sql"" directory, added dependencies to make sure built before embedded. - Mark library ""dbug"" in TARGET_LINK_LIBRARIES() with ""debug"", so only linked in when debug target is used. - Removed change of target name with ""mysqld${MYSQLD_EXE_SUFFIX}"", as others can't depend on it, not defined at configure time. Instead set the output file name. - Created work around for bug in CMake 2.4.6 and output names, to set the ""mysqld<suffix>.pdb"" name to the same base name. - Set the correct manifest ""name"" (patch by iggy) "	413d1e1aa4ab8b990c04334c7b3a1fe27cb979ad
----------------------------
CMakeLists.txt, README, configure.js Several adjustments to make client libraries pass the link test on both win32 and winx64, Visual Studio 2003 and 2005 (bug#30118) 	a6d082f36de35794006fd7bcb5495eeaf2dd7e82
----------------------------
Addendum to bug 29325 keep_files_on_create made a startup option 	b5ac35fa17c9b7cfce42676d6ea032c3d9318fdf
----------------------------
configure.in: bump version to ndb 6.1.19 	5b9e2cb83bdb55c2dcf0824c67906ee44344931c
----------------------------
"Bug #29419 ""Specifying a join_buffer > 4GB on 64 bit machines not possible."" Use size_t instead of uint when calculating join buffer size, because uint can be overflown on 64-bit platforms and join_buffer_size > 4 GB. The test case for this bug is a part of the test suite for bug #5731. "	1919076d47717eaa649755dc2d512882b1fdbe43
----------------------------
BUG#29152 - INSERT DELAYED does not use concurrent_insert on slave INSERT DELAYED on a replication slave was converted to regular INSERT, whereas it should try concurrent INSERT first. With this patch we try to convert delayed insert to concurrent insert on a replication slave. If it is impossible for some reason, we fall back to regular insert. No test case for this fix. I do not see anything indicating this is regression - we behave this way since Nov 2000. 	2c539642c0fa0d1fbe438229c445bcb9ee9417a9
----------------------------
[PATCH] alter online workaround Workaround for online alter. properly check if can be online Just a workaround until we decide what to do in TUP. Can you check? ===== sql/ha_ndbcluster.cc 1.486 vs edited ===== Index: my51-t62-a/sql/ha_ndbcluster.cc =================================================================== 	dc1aa1412c59e7da44be053911cdc957649b425e
----------------------------
Merge: ce50440 01ad489 Merge mysql.com:/home/kent/bk/config_h/mysql-5.0-build into  mysql.com:/home/kent/bk/config_h/mysql-5.1-build 	fd3b865149faced7ef5ff1696109df576f44d508
----------------------------
Merge: 038357d a9d2569 Merge kboortz@bk-internal.mysql.com:/home/bk/mysql-5.0-build into  mysql.com:/home/kent/bk/config_h/mysql-5.0-build 	01ad4893562aff4bad9ce94285942e8405034ebb
----------------------------
"Generate ""config.h"" directly into the ""include"" directory, later copied to ""my_config.h"". Not to pollute the top directory, and to get more control over what is included. Made the include path for ""libedit"" pick up its own ""config.h"" first. "	a9d2569cba4ff0e9c419d26d4e2005337e047984
----------------------------
Merge: 88ef9a4 e99df6f Merge mysql.com:/home/kent/bk/config_h/mysql-4.1-build into  mysql.com:/home/kent/bk/config_h/mysql-5.0-build 	a0571dedb3d9368b8a60131477e8c1d4e55f986d
----------------------------
Slow query log to file now displays queries with microsecond precission --long-query-time is now given in seconds with microseconds as decimals --min_examined_row_limit added for slow query log long_query_time user variable is now double with 6 decimals Added functions to get time in microseconds Added faster time() functions for system that has gethrtime()  (Solaris) We now do less time() calls. Added field->in_read_set() and field->in_write_set() for easier field manipulation by handlers set_var.cc and my_getopt() can now handle DOUBLE variables. All time() calls changed to my_time() my_time() now does retry's if time() call fails. Added debug function for stopping in mysql_admin_table() when tables are locked Some trivial function and struct variable renames to avoid merge errors. Fixed compiler warnings Initialization of some time variables on windows moved to my_init() 	b16289a5e05397211fd47e05ce08fe12f93ec38a
----------------------------
"Bug #29419 ""Specifying a join_buffer > 4GB on 64 bit machines not possible."" Use size_t instead of uint when calculating join buffer size, because uint can be overflown on 64-bit platforms and join_buffer_size > 4 GB. The test case for this bug is a part of the test suite for bug #5731. "	7c2c8f07e43a5ce3998473bef6565e9e60ac533f
----------------------------
Fix for BUG#28030: test im_instance_conf fails with an assert. The problem was a race condition on shutdown -- when IM got shutdown request while a guarded mysqld is starting. In this case the Guardian thread tried to stop the mysqld, but might fail if the mysqld hadn't created pid-file so far. When this happened, the mysqld-monitor thread didn't stop, so the assert in Thread_registry happened. The fix is to make several attempts to stop mysqld if it is active. 	bbb1b64b95d1bc869d05ae76f842ca657d93d734
----------------------------
More fixes and cleanups for bug#28585: - make the 'dist-hook' from top-level Makefile work again. - we can find my_print_defaults from --basedir by parsing command line arguments prior to running my_print_defaults. - take advantage of additional command line parsing and allow the --no-defaults etc arguments to work anywhere rather than having to be the first argument. - find SQL files either from binary archive or source install. - consolidate and tidy code and error messages. 	d5293e45840f532c9100cd37c87bdef9ed879601
----------------------------
save the data from mysql.db that we delete (side effect that made read_only fail) 	3afa32dc2b90804cb122607e24d2b667f7b265e1
----------------------------
"WL#3984 (Revise locking of mysql.general_log and mysql.slow_log) Bug#25422 (Hang with log tables) Bug 17876 (Truncating mysql.slow_log in a SP after using cursor locks the thread) Bug 23044 (Warnings on flush of a log table) Bug 29129 (Resetting general_log while the GLOBAL READ LOCK is set causes a deadlock) Prior to this fix, the server would hang when performing concurrent ALTER TABLE or TRUNCATE TABLE statements against the LOG TABLES, which are mysql.general_log and mysql.slow_log. The root cause traces to the following code: in sql_base.cc, open_table() if (table->in_use != thd) { /* wait_for_condition will unlock LOCK_open for us */ wait_for_condition(thd, &LOCK_open, &COND_refresh); } The problem with this code is that the current implementation of the LOGGER creates 'fake' THD objects, like - Log_to_csv_event_handler::general_log_thd - Log_to_csv_event_handler::slow_log_thd which are not associated to a real thread running in the server, so that waiting for these non-existing threads to release table locks cause the dead lock. In general, the design of Log_to_csv_event_handler does not fit into the general architecture of the server, so that the concept of general_log_thd and slow_log_thd has to be abandoned: - this implementation does not work with table locking - it will not work with commands like SHOW PROCESSLIST - having the log tables always opened does not integrate well with DDL operations / FLUSH TABLES / SET GLOBAL READ_ONLY With this patch, the fundamental design of the LOGGER has been changed to: - always open and close a log table when writing a log - remove totally the usage of fake THD objects - clarify how locking of log tables is implemented in general. See WL#3984 for details related to the new locking design. Additional changes (misc bugs exposed and fixed): 1) mysqldump which would ignore some tables in dump_all_tables_in_db(), but forget to ignore the same in dump_all_views_in_db(). 2) mysqldump would also issue an empty ""LOCK TABLE"" command when all the tables to lock are to be ignored (numrows == 0), instead of not issuing the query. 3) Internal errors handlers could intercept errors but not warnings (see sql_error.cc). 4) Implementing a nested call to open tables, for the performance schema tables, exposed an existing bug in remove_table_from_cache(), which would perform: in_use->some_tables_deleted=1; against another thread, without any consideration about thread locking. This call inside remove_table_from_cache() was not required anyway, since calling mysql_lock_abort() takes care of aborting -- cleanly -- threads that might hold a lock on a table. This line (in_use->some_tables_deleted=1) has been removed. "	c7bbd8917c534815316b356e5ea581d9e7167fed
----------------------------
Bug #25061 Build failure on HP/UX similar to BUG#20507 Added libCsup as a mysql library dependency on hpux11. This means any projects statically linking to our libraries using the HPUX11 compiler will need to add the -lCSup option to their build link options. If they use the mysql_config tool this will happen automatically. Projects that dynamically link to libmysqlclient will continue to work without any modifications. Library libCsup is a C++ runtime library needed for yassl support when built with the hpux11 C/C++ compiler. The first attempts to fix this bug were to remove the yassl dependencies on libCsup. We tried removing all pure virtual functions and other hacks, but the dependency remained. The only other options left involve extensive restructuring of the yassl library. 	9fe1a5a952fc70bb907640beb945bb39ec4d21d4
----------------------------
[PATCH] Bug#26793 I_S query crashes in NDB If ::exteral_lock hadn't been called, we'd have no NDB object, so need to check/get one here. It looks like sql_show.cc is the only place that does this.... or at least the other places will be well hidden. Index: ndb-work/sql/ha_ndbcluster.cc =================================================================== 	f9d977f980affc217fc1dd4fb2ba9bb53bbd9262
----------------------------
tmp_table_size is not about user-created temporary tables, only internal ones (like those of GROUP BY): fixing the --help text. 	48dfd5c79612a5f98167e71faf98f0ec62726086
----------------------------
Fix for bug#29641 - $CC on Open Server is set to contain arguments for enabling threads.  However, duplicate AC_PROG_* macros in the innobase plug.in file were resetting $CC and causing link errors. As AC_PROG_* macros are already used in the main configure.in file there should be no need for them to be duplicated here too. 	6df53ea2df58e94cda2dfe9bc2ddb126f5efbd04
----------------------------
BUG#30017 log-slave-updates incorrect behavior for cluster - let the receiving injector thread decide what to do 	81bc79a711f0f8090c64315e514b4413c62316c4
----------------------------
"Apply snapshot innodb-51-ss1644 Fixes: - Bug #23710: crash_commit_before fails if innodb_file_per_table=1 - Bug #28254: innodb crash if shutdown during innodb_table_monitor is running - Bug #28604: innodb_force_recovery restricts data dump - Bug #29097: fsp_get_available_space_in_free_extents() is capped at 4TB - Bug #29155: Innodb ""Parallel recovery"" is not prevented "	85982ab747fd5821be4259e07325a289bbf393de
----------------------------
Many files: Put back old code to check stack direction at configure time 	0886cc3bedb394dc38affddd959975f1ed19a91d
----------------------------
Bug#28012 Patch : IM crashes instead of reporting an error when mysqldpath is bad On the windows platform, if an instance object failed to initialize during program start, the instance manager would crash. This could happen if an incorrect mysqld path was supplied in the defaults configuration file. The patch prevents the program from crashing and makes it show an error message instead. 	7d55b07fca5a70ea86e76d4dc387475556d60ecc
----------------------------
ha_ndbcluster_binlog.cc: WL3680 On-line add attribute, ndbcluster handler part: handling of locally dropped table ha_ndbcluster.cc: WL3680 On-line add attribute, ndbcluster handler part: fixed cleanup in error handling 	6c04a6709c30a47a71b545be4cae25d2a096feb2
----------------------------
CMakeLists.txt, configure.js: Allow to set mysqld exe suffix 	4ca632bfc39b02111b2ce95c8fc8c9ebfa8bad55
----------------------------
CMakeLists.txt, configure.js: Allow to set mysqld exe suffix 	7c1d25d9f9daab39151a1677384b0568962b8665
----------------------------
Bug #29325: create table overwrites .MYD file of other table (datadir) Set errno when retunring an error in my_create_with_symlink. 	94535ca8289fc8abaeef1e5f7dff5f76efa22728
----------------------------
Many files: WL3680 On-line add attribute, ndbcluster handler part rpl_ndb_add_column.result: BitKeeper file /home/marty/MySQL/mysql-5.1-wl3680-new/mysql-test/r/rpl_ndb_add_column.result Many files: WL3749 On-line DDL, new handler interface rpl_ndb_add_column.test: BitKeeper file /home/marty/MySQL/mysql-5.1-wl3680-new/mysql-test/t/rpl_ndb_add_column.test 	5a888760195597272c0d2eec40955f570aa032b9
----------------------------
Addendum to bug 29325: test if TRUNCATE TABLE works with keep_files_on_create 	b5aa55e107e9d9ca0a9dfc18c21768318d971438
----------------------------
Bug #29325: By default MyISAM overwrites .MYD and .MYI files no DATA DIRECTORY option is used. This can lead to two tables using the same .MYD and .MYI files (that can't be dropped). To prevent CREATE TABLE from overwriting a file a new option is introduced : keep_files_on_create When this is on the CREATE TABLE throws an error if either the .MYD or .MYI exists for a MyISAM table. The option is off by default (resulting in compatible behavior). 	015e1290a1db21e02560447ffd72238827add8f7
----------------------------
"NULL MERGE UP to 5.1. Apply innodb-5.0-* snapshots:  ss1489 and ss1547. Fixes: Bug#9709:  InnoDB inconsistensy causes ""Operating System Error 32/33"" Bug#22819: SHOW INNODB STATUS crashes the server with an assertion failure under high load Bug#25645: Assertion failure in file srv0srv.c Bug#27294: insert into ... select ... causes crash with innodb_locks_unsafe_for_binlog=1 Bug#28138: indexing column prefixes produces corruption in InnoDB "	ccea97fa6f6fd8adefaf7e168e72d56041dc7253
----------------------------
"Apply the following innodb-5.1-* snapshots:  ss1489, ss1496, ss1550, ss1569. After applying the snapshots, ensure that code conforms to the final version of WL 3914. It is signficant that, after these changes, InnoDB does not define MYSQL_SERVER, and can be built as an independent storage engine plugin. Fixes: Bug#9709:  InnoDB inconsistensy causes ""Operating System Error 32/33"" Bug#18828: If InnoDB runs out of undo slots, it returns misleading 'table is full' Bug#20090: InnoDB: Error: trying to declare trx to enter InnoDB Bug#20352: Make ibuf_contract_for_n_pages tunable Bug#21101: Wrong error on exceeding max row size for InnoDB table Bug#21293: Deadlock detection prefers to kill long running FOR UPDATE queries Bug#22819: SHOW INNODB STATUS crashes the server with an assertion failure under high load Bug#25078: Make the replication thread to ignore innodb_thread_concurrency Bug#25645: Assertion failure in file srv0srv.c Bug#28138: indexing column prefixes produces corruption in InnoDB "	7cb5374120e6d69d696106fff9cf4b58d34d6f3b
----------------------------
BUG#29550 code hand-merged to Telco 6.2 for ha_ndbcluster.cc due to the great many conflicts with the new NdbRecord-code. Replaced m_use_partition_function with m_user_defined_partitioning AND m_use_partition_pruning m_use_partition_pruning means pruning can happen m_user_defined_partitioning means it isn't standard NDB partitioning with PARTITION BY KEY and no subpartitioning This among other things means that each row has a fragment id in it as a hidden field. Added new calculate_key_hash_value function to handler 	ef946fcb26b5abb58be91c50b3965cd98798f6c3
----------------------------
[PATCH] BUG#27404 util thd mysql_parse sig11 when mysqld default multibyte charset NDB util thread calls mysql_parse internally with plain old c strings (7bit ascii) to create tables (e.g. mysql.ndb_schema). With mysqld default charset set to a multibyte one (e.g. ucs2) mysql_parse would try to interpret the 7bit string as UCS2 and promptly explode in a heap. Solution is to set the util thread to be using utf8 charset. Index: ndb-work/sql/ha_ndbcluster.cc =================================================================== 	77e9eb56fcb6ab72470bbae97095adb567c1a8dd
----------------------------
Bug#22540 Incorrect value in column End_log_pos of SHOW BINLOG EVENTS using InnoDB - Update test results for --binlog-format=row 	68c7cc2af4a301999c6f2764ef173cc4b3fdd447
----------------------------
configure.in: Added --with-system-type=<systype> and --with-machine-type=<machtype> options, to be able to override the one detected, for --version strings field.cc, field.h, listener.cc: C++ compatibility change for IBM VisualAge 6 and i5/OS 	2418b850465fd73f86c81e2a27e199e17d180e76
----------------------------
Bug #28839 Errors in strict mode silently stop SQL thread if --slave-skip-errors exists. slave_sql thread calls thd->clear_error() to force error to be ignored, though this method didn't clear thd->killed state, what causes slave_sql thread to stop. clear thd->killed state if we ignore an error 	3b08919f6afe89416465c77ab7d854a7c85dcb78
----------------------------
"Bug#28769 Test case ""innodb"" fails with --skip-log-bin - Move binlog related tests to binlog_innodb.test - Remove ""source include/have_log_bin.inc"" from innodb.test "	46f0c05afce85ca08908eb83ce97a1210a53260f
----------------------------
Sdditional fix-up for bug #26380: LOCK TABLES + FLUSH LOGS causes deadlock FLUSH LOGS should ignore SET GLOBAL READ_ONLY. 	5b22bc3bd59dcc75828072ce738c8acb3ab254fc
----------------------------
Fix for bug #26380: LOCK TABLES + FLUSH LOGS causes deadlock The log tables are by nature PERFORMANCE_SCHEMA tables, which should not be affected by SET GLOBAL READ_ONLY or FLUSH TABLES WITH READ LOCK. The implementation of FLUSH TABLES WITH READ LOCK already ignored log tables. Now with this patch, the implementation of LOCK TABLE also ignore a global read lock for log tables, which was the missing symmetry. 	f47b82906d1ad0f09e2e42948f29575f57eafce4
----------------------------
Embedded Server doesn't build on Windows. - Add build configuration parameter EMBEDDED_ONLY which will configure the VS solution to produce only mysql embedded binary. - Make necessary updates to successfully compile solution. 	c15a2647a0a4e88612bb3c3aa8d7417860016155
----------------------------
configure.in: bump up version 	eace17ece2b4003c6b1a53ae069de5f831098f6f
----------------------------
"Bug#25411 (trigger code truncated), PART II Bug 28127 (Some valid identifiers names are not parsed correctly) Bug 26302 (MySQL server cuts off trailing ""*/"" from comments in SP/func) This patch is the second part of a major cleanup, required to fix Bug 25411 (trigger code truncated). The root cause of the issue stems from the function skip_rear_comments, which was a work around to remove ""extra"" ""*/"" characters from the query text, when parsing a query and reusing the text fragments to represent a view, trigger, function or stored procedure. The reason for this work around is that ""special comments"", like /*!50002 XXX */, were not parsed properly, so that a query like: AAA /*!50002 BBB */ CCC would be seen by the parser as ""AAA BBB */ CCC"" when the current version is greater or equal to 5.0.2 The root cause of this stems from how special comments are parsed. Special comments are really out-of-bound text that appear inside a query, that affects how the parser behave. In nature, /*!50002 XXX */ in MySQL is similar to the C concept of preprocessing : #if VERSION >= 50002 XXX #endif Depending on the current VERSION of the server, either the special comment should be expanded or it should be ignored, but in all cases the ""text"" of the query should be re-written to strip the ""/*!50002"" and ""*/"" markers, which does not belong to the SQL language itself. Prior to this fix, these markers would leak into : - the storage format for VIEW, - the storage format for FUNCTION, - the storage format for FUNCTION parameters, in mysql.proc (param_list), - the storage format for PROCEDURE, - the storage format for PROCEDURE parameters, in mysql.proc (param_list), - the storage format for TRIGGER, - the binary log used for replication. In all cases, not only this cause format corruption, but also provide a vector for dormant security issues, by allowing to tunnel code that will be activated after an upgrade. The proper solution is to deal with special comments strictly during parsing, when accepting a query from the outside world. Once a query is parsed and an object is created with a persistant representation, this object should not arbitrarily mutate after an upgrade. In short, special comments are a useful but limited feature for MYSQLdump, when used at an *interface* level to facilitate import/export, but bloating the server *internal* storage format is *not* the proper way to deal with configuration management of the user logic. With this fix: - the Lex_input_stream class now acts as a comment pre-processor, and either expands or ignore special comments on the fly. - MYSQLlex and sql_yacc.yy have been cleaned up to strictly use the public interface of Lex_input_stream. In particular, how the input stream accepts or rejects a character is private to Lex_input_stream, and the internal buffer pointers of that class are strictly private, and should not be tempered with during parsing. This caused many changes mostly in sql_lex.cc. During the code cleanup in case MY_LEX_NUMBER_IDENT, Bug 28127 (Some valid identifiers names are not parsed correctly) was found and fixed. By parsing special comments properly, and removing the function 'skip_rear_comments' [sic], Bug 26302 (MySQL server cuts off trailing ""*/"" from comments in SP/func) has been fixed as well. "	a508260b85382f06dd9d97507839030ff9bae8d3
----------------------------
"Bug#29044 - memory buddy allocator ""unoptimal"" memory handling - add config param to have better behavior with large tables "	2606bb1ce5a9aab178f9609f8eca87342765062f
----------------------------
"VC++Files/sql/mysqld.vcproj Ensure "".pdb"" and "".map"" files are created for the MySQL server, in all configurations. "	bd0b478e30e5351cfb5dbaa15f0e8de4213d5ef6
----------------------------
"Fix for bug #29015 ""Stack overflow in processing temporary table name when tmpdir path is long"" In create_tmp_table() don't set full table path as a table name. Other code assumes table names to not exceed NAME_LEN bytes. "	0f5a1e5910d48bb0ef0e21ca8d31a0f7b98f3b4c
----------------------------
"Bug #28754: RPM builds differ from tar.gz in ""ALTER ... RENAME"" on views When constructing the path to the original .frm file ALTER .. RENAME was unnecessary (and incorrectly) lowercasing the whole path when not on a case-insensitive filesystem. This path should not be modified because of lower_case_table_names as it is already in the correct case according to that setting. Fixed by removing the lowercasing. Unfortunately testing this would require running the tests on a case sensitive filesystem in a directory that has uppercase letters. This cannot be guaranteed in all setups so no test case added. "	d12fbdd8d0c3037168c1d2850f37db49ed77dc4f
----------------------------
"bug #28309 First insert violates UNIQUE constraint - was ""memory"" table empty? If we have lower_case_table_names == 2 (usually on case insensitive file systems) we sometimes make 'homedir' part of the path sent to the handler into lowercase. So in this case HEAP engine couldn't properly find and remove HP_SHARE, what caused the bug. "	6ee83df5ffb6318f3989de314c747a63e99b2e4c
----------------------------
ndb - update dl145a config for autotest 	79da61069b8e056e5ad6a3b76f0fbb7a4afc7b68
----------------------------
ndb - make size of redo log files (fragment log files) configurable using new config variable FragmentLogFileSize (4M - 1G) 	b8e43a1d9dc7dbcc3404fd85a2d7a2148e9f70c1
----------------------------
"Bug #26162: Trigger DML ignores low_priority_updates setting The value of ""low-priority-updates"" option and the LOW PRIORITY prefix was taken into account at parse time. This caused triggers (among others) to ignore this flag (if supplied for the DML statement). Moved reading of the LOW_PRIORITY flag at run time. Fixed an incosistency when handling SET GLOBAL LOW_PRIORITY_UPDATES : now it is in effect for delayed INSERTs. Tested by checking the effect of LOW_PRIORITY flag via a trigger. "	9a1d8adc9d25018664cf8fefdde2bde6d85a7814
----------------------------
BUG#28752 (binlog_format variable is empty when binlog is turned off): Setting MIXED format instead of UNSPECIFIED format when server is started without log-bin. 	2bcbb7dafcadad9b5a429adb4f208696e84e7a83
----------------------------
"Avoid a compile error which arises from a redefinition of ""inline"": If it has been defined (by ""configure"", in ""include/my_config.h""), then an ""#undef"" is needed to avoid a redefinition. This is needed to prevent a compile error of the debug server on AIX. "	b953f1b2c137ed6310a3f2af40d1e2b83ab7a90f
----------------------------
WL#3867 step 1 new master option --ndb-log-update-as-write 	98f000d33acf7dd32578e62aa9c1902b9d01247d
----------------------------
Bug#28478 - Improper key_cache_block_size corrupts MyISAM tables Setting a key_cache_block_size which is not a power of 2 could corrupt MyISAM tables. A couple of computations in the key cache code use bit operations which do only work if key_cache_block_size is a power of 2. Replaced bit operations by arithmetic operations to make key cache able to handle block sizes that are not a power of 2. 	59a05422097a9f902f29c0aa749f65f321e23460
----------------------------
some test cases cannot run with --skip-log-bin 	779a055ed0f0907958ef232f6a0b78f5f29cc48a
----------------------------
Makefile.am, configure.in: Added --with-mysqld-libs configure flag 	b217a9e898582050ee50300fc8eacb8d5bca12e4
----------------------------
configure.in: After merge changes, removed unneeded Netware specific sprintf case 	1d36bcab1d5e8187ed116bd274a4ca32efca0faf
----------------------------
sql_parse.cc, config-win.h, config-netware.h: Don't try determine stack direction at configure time compiler_flag.m4: Use AC_TRY_COMPILE and AC_TRY_LINK instead of AC_TRY_RUN where possible misc.m4, configure.in: Use fourth argument to AC_TRY_RUN, to be used in cross compilation Don't try determine stack direction at configure time 	a069db06a64a34b64a8cdb944042eccf7e66cacb
----------------------------
Test for bug #26842 moved to a separate file as it uses 'show binlog events' and fails with --binlog-format=row. 	61dd2f61be814fb9bfffb24db0054509cc33ad3d
----------------------------
- This patch addesses the performance issues with invalidating the entire cache by changing the behavior of the query cache resize-method. - set query_cache_size=<new_size>; is significantly faster than RESET QUERY CACHE as it simply destroys and recreates the query cache, whereas RESET QUERY CACHE keeps its internal structure aligned with server load profile. 	c454071eabffefeb4722c0db62e741171a6aa7ec
----------------------------
Bug#21554 (sp_cache.cc: violates C++ aliasing rules) The problem reported is a compile bug, reported by the development GCC team with GCC 4.2. The original issue can no longer be reproduced in MySQL 5.1, since the configure script no longer define HAVE_ATOMIC_ADD, which caused the Linux atomic functions to be used (and cause a problem with an invalid cast). This patch implements some code cleanup for 5.1 only, which was identified during the investigation of this issue. With this patch, statistics maintained in THD::status_var are by definition owned by the running thread, and do not need to be protected against race conditions. These statistics are maintained by the status_var_* helpers, which do not require any lock. 	782096dbcc28a14e65c23a10390e664b4cd03580
----------------------------
BUG#28341 - Security issue still in library loading UDF can be created from any library in any part of the server LD_LIBRARY_PATH. Allow to load udfs only from plugin_dir. On windows, refuse to open udf in case it's path contains a slash. No good test case for this bug because of imperfect error message that includes error code and error string when it fails to dlopen a library. 	e3f7947da028887ec1932a7e43caf8ea5b91e06b
----------------------------
Bug#24400 Source files for Server: Visual Studio Workspace contains a small config bug - Correct bad path in project files. 	9099f4782341973604646f320fc512d895538b97
----------------------------
Bug#23068 - key_cache_block_size is not set or displayes correctly Command line and configuration file option 'key_cache_block_size' was reduced by MALLOC_OVERHEAD (8 in a production server, 36 in a debug server) from the user supplied value and restricted it to the greatest multiple of 512 less or equal to the reduced value. This patch changes option 'key_cache_block_size' to not deduce MALLOC_OVERHEAD from the input value. However, the restriction to a multiple of 512 is still done. 	c6e0b8d18e768661a22d05e685348a0d0dec3aa1
----------------------------
"Bug#27344 Total failure to start the server - Give some more protection against ""too long socket name by setting the max length when to use a tmpdir for sockets to 70 "	da8a944dfbdd6a4c18b490c7a22d0b55dabb88ac
----------------------------
Bug#17332 - changing key_buffer_size on a running server can crash under load Post-post-review fixes. Fixed a typo == -> = Optimized normal flush at end of statement (FLUSH_KEEP), but let other flush types be stringent. Added comments. Fixed debugging. 	3ed42fbb2d4f768660b6b95076546eba8712f728
----------------------------
branches/zip: Merge revisions 1402:1493 from trunk. Remove mysql.patch, because the configuration parameter interface has changed. 	e7284367dcf51abc867577910eafee76dbccff88
----------------------------
"Bug#27344 Total failure to start the server - Give some more protection against ""too long socket name by setting the max length when to use a tmpdir for sockets to 70 "	b805507358c3866d05c9fca5c0291ea6bf5d3096
----------------------------
Ndb.hpp, Ndb.cpp, ha_ndbcluster.cc: Bug#26342 auto_increment_increment AND auto_increment_offset REALLY REALLY anger NDB cluster, implemented support for auto_increment_offset and auto_increment 	11e98f4126ab2ffa1538111ee8dedd686bfa45d3
----------------------------
"Fix Bug#25078 by always letting the replication thread on the slave server to enter InnoDB. This can be made further customizable by the user if we introduce a new config parameter. This will wait until config parameters can be easily added. Approved by:	Marko "	bcb68dadb24c91f039439ff7fca0e317ded1c29d
----------------------------
Bug #27792 query cache returns wrong result, with certain system variables - Queries in the query cache are identified by the individual characters in the query statement, the current database and the current environment expressed as a set of system variable flags. - Since the set of environment flags didn't properly describe the current environment unexpected results were returned from the query cache. - Query cache is now cleared when the variable ft_boolean_syntax is updated. - An identification flag for the variable default_week_format is added to the query cache record. Thanks to Martin Friebe who has supplied significant parts of this patch. 	4ea05eae31f0012741ea3a22de12b5b8c45cf546
----------------------------
"Bug #28267  	Cannot build with OpenSSL - Fix use of uninitialized variable in config/ac-macros/ssl.m4 "	3899138fe0a4df2d80d98191caeb46bc52d416d3
----------------------------
"Bug #27976: Misleading error message, 'Sort buffer to small' The message is gramatically wrong, and factually wrong. Change it to refer to the myisam_sort_buffer_size variable and change ""to"" to ""too"". "	b6502ddb1931197f065d78ccf06009d98fdb385c
----------------------------
ha_ndbcluster.cc: Bug#27980 INSERT IGNORE wrongly ignores NULLs in unique index: added check for null values 	805fabeda612e5abf965a2e5f7fadb2a1854b711
----------------------------
ndb_insert.test, ndb_insert.result, ha_ndbcluster.cc: Bug#27980 INSERT IGNORE wrongly ignores NULLs in unique index: added check for null values 	f6e28f28799c70c8ac20d9238c7cd4705a4c0609
----------------------------
Bug #27653: Temp table can't be created if lower_case_table_names=1 and tmpdir has uppercase Fix: don't convert mysql_tmpdir to lower case when building the path to a temporary table 	44af4144e66b1c0100e47c907a44842c75666f9e
----------------------------
Bug #27390: mysqld_multi --config-file= not working as documented Recognize the --no-defaults, --defaults-file and --defaults-extra-file options.  Treat old --config-file argument as if --defaults-extra-file had been specified instead. Plus a few other defaults-related cleanups. 	b90b0c7eb28993ca1abe5e288702efb309ba27a2
----------------------------
mysql-test/mysql-test-run.pl provide the writable datadir for mysqld --help (for lower_case test) sql/log.h, sql/mysqld.cc make default binlog_format value to be 0 (for a hack of using GET_STR for enum to continue to work) 	7dfd5e8d71c2c310ad6d7f68a3520e364c750fe8
----------------------------
Minor improvement to save some testing runtime (~ 2 minutes). Reason: This test executes DML statements on a NDB table to detect if some SQL statements of special interest commits the ongoing transaction. When running in MIXED mode, automatic switching from statement-based to row-based replication takes place when a DML statement updates an NDB table. That means running this test on NDB with binlog-format=mixed and binlog-format=row mostly checks the same routines twice. Therefore we skip the variant with binlog-format=mixed. 	44f02c570a3b04dbb248ce875a8d0d0f980c79cb
----------------------------
Add --symbolic-links=1 for partition_not_windows-master.opt. 	c6f625bdbc0936ec9a72b3a5905513a4dea05e9b
----------------------------
Fix test case that was broken for builds without InnoDB. --- Merge pippilotta.erinye.com:/shared/home/df/mysql/build/mysql-5.0-build-work-vanilla-building into  pippilotta.erinye.com:/shared/home/df/mysql/build/mysql-5.1-build-work-vanilla-building --- Fix test cases to pass for a plain ./configure && make build. This includes disabling two test cases when certain features are not present in the server. We're not losing coverage from this because these features are usually present, and disabling them here only serves the purpose to make the test cases work in the unlikely case that they aren't. --- fixes 	b353df747403d1d18142ebcb9ea582760d86baff
----------------------------
BUG#27207 Return correct error message when ndb_mgmd start with wrong config.ini parameter in TCP section 	fcec5410bf6f22cf1e430c5cc8b3f5ebdc520ab4
----------------------------
"Bug #24228  	ndb_size.pl requires non-standard HTML::Template module Bug #24227  	ndb_size.pl should report default values instead of < default for config params Bug #24229  	ndb_size.pl doesn't compute Index usage correctly Big ndb_size.pl update "	14ff88741c2c4fa14c8c9963f04f54dd6271e67e
----------------------------
ha_ndbcluster.h, ha_ndbcluster.cc: Refactored code for engine_condition_pushdown to ha_ndbcluster_cond Makefile.am: Added compilation of ha_ndbcluster_cond ha_ndbcluster_cond.h, ha_ndbcluster_cond.cc: Merge 	eaba3f254840c4fca051e471576fe4279ae6f176
----------------------------
Moved all code related to engine_condition_pushdown to a new class, ha_ndbcluster_cond. Added new files: sql/ha_ndbcluster_cond.h sql/ha_ndbcluster_cond.cc 	5d4f9e22b16b91c029e98b65afe94f6b1fb49cc7
----------------------------
BUG#26675 remove additional varialbes definations in mysqld.cc and add NDBCLUSTER macro in set_var.cc 	ff7493b3b649e0d52ae98599cb1c6267f55c8cce
----------------------------
"configure.in  :  Ensure that ""icheck"" is really the ABI checker, not some other tool (file system checker on Tru64). Patch originally supplied by Peter O'Gorman, slightly modified by me. Bug#27739 ""build fails on Tru64 due to icheck test in configure"" "	5de73f45f93988351e620781ae6e631c3760a7fc
----------------------------
rules: Protect the control file from running ./configure again 	4cc0c69e474d6ff64e5fc3e1837f641b8ec7a224
----------------------------
mysql-test/t/ndb_dd_basic.test fixed the test sql/ha_ndbcluster.cc LOCK_plugin is used in ha_ndbcluster.cc sql/sql_plugin.cc LOCK_plugin is used in ha_ndbcluster.cc 	f49eb3fde8c65adf1014edeaebae2b69ebc2ebbe
----------------------------
"sql/ha_ndbcluster.cc Hex constants that exceed 32 bit need to be marked ""LL"" for the compile to work. "	5fc30d25ea1f6273534fa721798e4b2ee359a990
----------------------------
Bug#27783 mysql_install_db should be able to install again, preserving existing files. - Allow mysql_install_db to be run a second time in the same datadir to create and fill any missing system tables 	a3f5321025daaaa932b2cadba153f4d832d2b1d0
----------------------------
"Merge: f5fc147 8437fd6 Merge trift2.:/MySQL/M50/limit-man-5.0 into  trift2.:/MySQL/M51/limit-man-5.1 Fixes during manual merge, due to the ""plugin"" naming of configure variables in 5.1 "	6feaf3c7265839c7e9f656380165fb6e1f1ef631
----------------------------
"Let the ""configure"" options that control table handlers (NDB, InnoDB) or features (""embedded"") also control the list of man pages installed, so that they correspond better to the binaries. This is the second version of this fix, including review comments. "	8437fd62b2da4a7aff965a65481e1ef59c70ad36
----------------------------
Bug #27395 OPTION_STATUS_NO_TRANS_UPDATE is not preserved at the end of SF() tests for the bug and associated is moved into another file because they appeared to be binlog-format sensitive. 	b49cb4fbb4d1c17c3d66220a7b5c079d6c23e4ce
----------------------------
Fix for bug #27715: mysqld --character-sets-dir buffer overflow bug ##26851: Mysql Client --pager Buffer Overflow Using strmov() to copy an argument may cause overflow if the argument's length is bigger than the buffer: use strmake instead. Also, we have to encrease the error message buffer size to fit the longest message. 	e62dbcf746fcb33b7e1c0a1b75ca5f0a9561e956
----------------------------
remove duplicate info in paramInfo and ConfigInfo 	0de46f18ca241d59a228c92aaa2a1b7ec69dceea
----------------------------
Fixing compile problem on some platforms resulting from building a configuration with HAVE_REPLICATION undefined, which causes the *_rows_log_event_old classes to only have a default constructor. This generates an error on some platforms, since the base classes does not have a default constructor defined. Updating signatures of do_prepare_row() for classes above, since signatures in base classes changed. 	7f279ae5e93a8e5d1a8c7fe96f79c41110bf4e5c
----------------------------
"Bug #27322  	failure to allocate transaction_prealloc_size causes crash Fix for when memory pre-allocation fails. "	dac9f99327498e898aec1a90f1002a0695fe6432
----------------------------
BUG#27367 mysql.server should be LSB init script compliant Moved cd $basedir to live in the start section, as it only applies to the start functionality and breaks the restart task 	99c5f418af1e2076b9f66624559f39288129c17a
----------------------------
Bug#27783 mysql_install_db should be able to install again, preserving existing files. - Allow mysql_install_db to be run a second time in the same datadir to create and fill any missing system tables 	74dfba96e73bb00feb518f070ac41c10891965f7
----------------------------
Adding files to support building for debian. --- Removed reference to debian svn location of debian dir. Changed verbage of comment to appease Timothy. --- Removed added manpages that aren't appropriate for our build. --- Added debian dir to list of dist targets. Added list of files needed to be distributed in debian dir. --- Added semi-colons to fix syntax error. --- BUG#27769 MySQL should include debian packaing dir Added debian/Makefile to configure.in to support make dist. 	6547960e28cb95c89e8c38d5062e59d314b2cbe1
----------------------------
make configure handle service pack version strings 	d5f6363ba107fe4312223c7052538f2f01da9050
----------------------------
ha_ndbcluster.cc: Bug #26591  Cluster handler does not set bits in null bytes correctly: Improved comments ha_ndbcluster_binlog.cc: Bug #26591  Cluster handler does not set bits in null bytes correctly: Using empty_record() instead of bzero 	5d622943e861fe193afdda7b95b3d941890ea722
----------------------------
"zlib.m4: Only require the more recent zlibCompileFlags() when building the server, client zlib don't need it. Makefile.am: Always build the bundled zlib static only configure.in: Look for dlopen() even if --with-mysqld-ldflags constains ""-static"", as this is not the same as the flag to ""ld"", it just informs ""libtool"" to link static with libraries created part of the build, even if there exists shared versions. make_binary_distribution.sh: Real ""mysqlmanager"" executable might be in "".libs"" "	463b34e77b187a4d6f725076de6713b7d49a9e5e
----------------------------
Deleted reject files accidently checked in configure.in.rej include/my_global.h.rej BUILD/SETUP.sh.rej mysys/thr_alarm.c.rej include/my_pthread.h.rej 	8cc67c011e29661db8f579f1d2a649bf65605dd0
----------------------------
sync the initialization configuration information between ConfigInfo.cpp and ParamInfo.cpp 	888c2057e95727fad288a2100b6743d2e9a37578
----------------------------
Bug#21611 Slave can't connect when master-ssl-cipher specified - Change check for return value of 'SSL_CTX_set_cipher_list' in order to handle 0 as error setting cipher. - Thanks to Dan Lukes for finding the problem! 	82b454aa28e46efa9249ee51784b654fbd0a9225
----------------------------
ndb - fix bug in my.cnf config handling put64 for 64-bit variables 	c77ffe4a263d5216d6dc971adaf8bc60f665e6f6
----------------------------
Bug#27049 Race condition in test mysqlbinlog.test - Add --local-load option to avoidthat the load data file requested by mysqlbinlog end up in local var/tmp dir and not in system global tmpdir 	398c24d1a165d805229b361994abe1a4c04b7cfb
----------------------------
"Bug#25482 GRANT statements are not replicated if you use ""replicate-ignore-table"" - GRANT and REVOKE statments didn't have the ""updating"" flag set and thus statements with a table specified would not replicate if slave filtering rules where turned on. For example ""GRANT ... ON test.t1 TO ..."" would not replicate. "	a71d1951832262eecc57e0fe2ca191593cf27843
----------------------------
Make the script detect --default-storage-engine=x and mark the test as requiring that storage engine(if we need to do that) Make --ndb and --with-ndbcluster and alias for --mysqld=--default-storage-engine=ndbcluster 	0e04aec960036020951725526c29be1486e273b3
----------------------------
configure.in: Don't install ndb man pages if no ndb configured config-win.h, CMakeLists.txt, README, configure.js: Removed Cybozu patches 	7a2e0ee7d757d71df26c20ab23b11b61c82fd5c7
----------------------------
Bug#25309 SSL connections without CA certificate broken since MySQL 5.0.23 - Turn off verification of peer if both ca_path and ca_file is null i.e from only passing --ssl-key=<client_key> and --ssl-cert=<client_cert> to the mysql utility programs. The server will authenticate the client accoring to GRANT tables but the client won't authenticate the server 	aec7927c8e688ecb42683714f095deb6e95f1384
----------------------------
innobase_commit(): Correct the comments and formatting that were broken when innodb_commit_concurrency was implemented. 	278c29e57691bce8a049877e1600edb99de30ee8
----------------------------
Bug #27359 Partition: memory allocation error message if ndbcluster's nodes aren't set, the handlerton can return zero partitions in the partitioned table. So we should check for that. 	45ac0b67200b5b5576801df47a0107705285ac3e
----------------------------
Remove ha_innobase::last_query_id and references to thd->query_id. MySQL calls external_lock at the beginning and end of a statement when it is not calling start_stmt or commit or rollback.  Thus, statement boundaries can be (and are already) detected without monitoring thd->query_id. The function innobase_commit() seemingly lacks the call to innobase_release_stat_resources(), which should be called at the end of every SQL statement.  The call was replaced by equivalent statements by Vadim Tkachenko when he implemented innodb_commit_concurrency in MySQL 5.0: http://mysql.bkbits.net:8080/mysql-5.0/?PAGE=patch&REV=1.1886.70.1 	4f1615b745f7a68356fe9c6cf0bef0a7e57eeeba
----------------------------
Bug#22378 Make error, strings/ctype-utf8.c, uni_plane undeclared - Fixing utf8_general_cs according to recent changes. - Compiling utf8_general_cs in pentium-debug-max configuration to avoid these problems in the future. 	daa7e9c386ae1ff8cc891f8acf25d495bda5dd0a
----------------------------
"Port r1372 from branches/5.0: Merge a change from MySQL AB, and remove the innodb_gis test case. ChangeSet 2007/02/19 13:57:06+03:00 kaa@polly.local Bug#18743: Several test cases fails if ""classic"" configuration in 5.0 The problem happened because those tests were using ""cp932"" and ""ucs2"" without checking whether these character sets are available. This fix moves test parts to make character set specific parts be tested only if they are: - some parts were moved to ""ctype_ucs.test"" and ""ctype_cp932.test"" - some parts were moved to the newly added tests ""innodb-ucs2.test"", ""mysqlbinglog-cp932.test"" and ""sp-ucs2.test"" mysql-test/t/innodb.test 2007/02/19 13:57:02+03:00 kaa@polly.local +0 -222 Moved ucs2-specific test cases to innodb-ucs2.test "	4b64ce644a039a45e4b90c6ee5fbb26190921a88
----------------------------
Merge a change from MySQL AB: ChangeSet@1.2409.1.83  2007-03-06 10:36:15-07:00  tsmith@hindu.god Bug #26598: Create variable to allow turning off of statistic gathering on metadata commands Add innodb_stats_on_metadata option, which enables gathering index statistics when processing metadata commands such as SHOW TABLE STATUS.  Default behavior of the server does not change (this option is enabled by default). 	e15454c52ac44de4fbd9aafd0f01a17b9659c4f6
----------------------------
Bug#17332 - changing key_buffer_size on a running server can crash under load After review fixes 	942cd7d42448e9ad0128fb99ac1267638511899d
----------------------------
[PATCH] WL#3704 mgmapi timeouts: update NDBAPI usage of mgmapi for timeouts Default timout of 30secs for ConfigRetriever Default timout of 5sec for use by Transporter (ports etc). And Ndb_cluster_connection::set_timeout() api for setting timeout from NDBAPI applications. Should be called before connect. e.g. c.set_timeout(4200); c.connect(); Index: ndb-work/storage/ndb/include/mgmcommon/ConfigRetriever.hpp =================================================================== 	acb61e810c058db3a53cdad2005d636c0b145fad
----------------------------
"[PATCH] WL#3704 mgmapi timeouts: Return sane errors for timeout in mgmapi In ndb_mgm_call, add checks for expired timeout in (Input|Output)Stream. In case of timeout, we set NdbMgmHandle->last_error and return NULL. In api calls not using ndb_mgm_call (or using it in conjunction with own IO), they'll need to check for timeouts manually. Macros are provided to do this. Add ndb_mgm_disconnect_quiet(h) to disconnect without checking errors (so we don't clobber NdbMgmHandle->last_error). This helps us provide the *consistent* semantic that on timeout we leave the NdbMgmHandle *disconnected*. We check for this in testMgm. Change CHECK_REPLY in mgmapi to also check for set error in handle->last_error This will pick up the ETIMEDOUT errors and return them to client (through returning correct failure code for API call and setting NdbMgmHandle error). Applications written to MGMAPI before this patch will behave as before, and even hopefully check get_last_error and report the error back to the end user! Adding the last CHECK_TIMEDOUT_RET and delete in ndb_mgm_call() we slightly change behaviour of mgmapi. Previously, if disconnect midway through a reply, where there were only optional parameters left, we'd get a Properties object from ndb_mgm_call() containing NULLs for the optional parameters, leading to interesting error messages. This enables the returning of the *real* message and actually improves the API without breaking compatibility. ndb_mgm_start_signallog ndb_mgm_stop_signallog ndb_mgm_log_signals ndb_mgm_set_trace ndb_mgm_insert_error ndb_mgm_set_int64_parameter [1] ndb_mgm_set_string_parameter [1] ndb_mgm_purge_stale_sessions [2] - return error code on error during ndb_mgm_call TODO: ndb_mgm_report_event [2] [1] marked for removal, unused. [2] return codes incorrect in CHECK_HANDLE/CONNECTED. undocumented. Server side: in Services (per session) add macro for injecting timeout error (just waiting 10 seconds before continuing... it does work!) We inject these errors in a number of critical places - including the tricky api functions that don't just use ndb_mgm_call but do their own thing (get_config, get_status and friends) ATRT: Expand testMgm to add timout tests for API. Fully automated. *THEORETICALLY* timing dependent - an ultra-slow network will cause problems and ""fake"" failures... I welcome other solutions. Tests aren't exhaustive, but cover the generics and the tricky bits. Also test some calling semantics (incl disconnected on error). It is encouraged to add *more* mgmapi tests, not less :) InputStream: Fix where timedout error is set Index: ndb-work/storage/ndb/src/mgmapi/mgmapi.cpp =================================================================== "	e8121e50e80b6c3b66661fef0a3bd2e0d738f86d
----------------------------
Modifying mysql-test-run.pl to allow steeing of --secure-file-priv to 'mysql-test' when running suites other tha the main one 	c21a5bc8b19765c18aefaf3e98c308ba7ef2a8ec
----------------------------
Bug #26079 max_binlog_size + innodb = not make new binlog and hang server There was hanging at binlog_commit by a thread executing autocommit query. The hang appeared to be due to an overly condtion for early return from binlog_commit introduced by bug#20265 fix. Fixed with reverting the logic back to 5.0 version. 	7c22049dfaa6eb385e54bce3843551b9759a9c32
----------------------------
dbug/dbug.c: unused variable removed include/config-win.h: SIZEOF_INT include/my_global.h: win64 fix support-files/Makefile.am: automake magic 	e9fb4a686ff2d464e33902624d8425d379ef5016
----------------------------
"Fix for bug #23775 ""Replicated event larger that max_allowed_packet infinitely re-transmits"". Problem: to handle a situation when the size of event on the master is greater than max_allowed_packet on slave, we checked for the wrong constant (ER_NET_PACKET_TOO_LARGE instead of CR_NET_PACKET_TOO_LARGE). Solution: test for the client ""packet too large"" error code instead of the server one in slave I/O thread. "	55be09c0eea30dc506b579fe80456ed396d601a0
----------------------------
"Bug#26807 ""set global event_scheduler=1"" and --skip-grant-tables crashes server - Crash occured because Event engine is only initialized if ACLs are used but not properly marked as disabled. - The patch is to mark the Event engine as DISABLED if no ACLs are used to avoid access of uninitialized variables. "	218179269fab7227de9f1a603a4786f1120261e1
----------------------------
Bug#26285 selecting information_schema crahes server The crash happens when 'skip-grant-tables' is enabled. We skip the filling of I_S privilege tables if acl_cache is not initialized. 	ec4f730ba77b8459d7af12e52b007f8d7b23af40
----------------------------
configure.in: Added test for sched_yield() possibly in -lposix4 on Solaris 	be226152ab0d1eb2e8aca382ff8f2da1950c035f
----------------------------
Bug#25295, ALTER TABLE operations for NDB tables require inclusion of ENGINE=ndbcluster. this patch of bug25295 depends on the patches of bug25877 and bug25880 	2ae342d6f2a5cfcc4f243cf13b7a04df610b8481
----------------------------
configure.in: Restored accidently removed line to check for zlib 	512202a88f683ef9b416b7f8d076eaef4e2aaee6
----------------------------
Makefile.am, configure.in, mysys.dsp: Removed unused files .del-my_winsem.c: Delete: mysys/my_winsem.c .del-my_semaphore.c: Delete: mysys/my_semaphore.c .del-my_semaphore.h: Delete: include/my_semaphore.h 	4e4f18417024c5d2349417048defa35ebf5dc971
----------------------------
The most recent push into mysql-5.1 from mysql-5.2 was a mistake. This just reverses those changes.  I'm really sorry about that. configure.in, version.c: Reverse last push (from mysql-5.2 into mysql-5.1) 	8539d9a7bd63f22c2e2358d546af608015352e29
----------------------------
"ndb - Add new config parameter to allow node to bind INADDR_ANY instead of name in config.ini ""TcpBind_INADDR_ANY"" type bool "	daca04b0b66495492ee0de358b2c421f7d9aced8
----------------------------
"A fix for Bug#26750 ""valgrind leak in sp_head"" (and post-review fixes). The legend: on a replication slave, in case a trigger creation was filtered out because of application of replicate-do-table/ replicate-ignore-table rule, the parsed definition of a trigger was not cleaned up properly. LEX::sphead member was left around and leaked memory. Until the actual implementation of support of replicate-ignore-table rules for triggers by the patch for Bug 24478 it was never the case that ""case SQLCOM_CREATE_TRIGGER"" was not executed once a trigger was parsed, so the deletion of lex->sphead there worked and the memory did not leak. The fix: The real cause of the bug is that there is no 1 or 2 places where we can clean up the main LEX after parse. And the reason we can not have just one or two places where we clean up the LEX is asymmetric behaviour of MYSQLparse in case of success or error. One of the root causes of this behaviour is the code in Item::Item() constructor. There, a newly created item adds itself to THD::free_list - a single-linked list of Items used in a statement. Yuck. This code is unaware that we may have more than one statement active at a time, and always assumes that the free_list of the current statement is located in THD::free_list. One day we need to be able to explicitly allocate an item in a given Query_arena. Thus, when parsing a definition of a stored procedure, like CREATE PROCEDURE p1() BEGIN SELECT a FROM t1; SELECT b FROM t1; END; we actually need to reset THD::mem_root, THD::free_list and THD::lex to parse the nested procedure statement (SELECT *). The actual reset and restore is implemented in semantic actions attached to sp_proc_stmt grammar rule. The problem is that in case of a parsing error inside a nested statement Bison generated parser would abort immediately, without executing the restore part of the semantic action. This would leave THD in an in-the-middle-of-parsing state. This is why we couldn't have had a single place where we clean up the LEX after MYSQLparse - in case of an error we needed to do a clean up immediately, in case of success a clean up could have been delayed. This left the door open for a memory leak. One of the following possibilities were considered when working on a fix: - patch the replication logic to do the clean up. Rejected as breaks module borders, replication code should not need to know the gory details of clean up procedure after CREATE TRIGGER. - wrap MYSQLparse with a function that would do a clean up. Rejected as ideally we should fix the problem when it happens, not adjust for it outside of the problematic code. - make sure MYSQLparse cleans up after itself by invoking the clean up functionality in the appropriate places before return. Implemented in this patch. - use %destructor rule for sp_proc_stmt to restore THD - cleaner than the prevoius approach, but rejected because needs a careful analysis of the side effects, and this patch is for 5.0, and long term we need to use the next alternative anyway - make sure that sp_proc_stmt doesn't juggle with THD - this is a large work that will affect many modules. Cleanup: move main_lex and main_mem_root from Statement to its only two descendants Prepared_statement and THD. This ensures that when a Statement instance was created for purposes of statement backup, we do not involve LEX constructor/destructor, which is fairly expensive. In order to track that the transformation produces equivalent functionality please check the respective constructors and destructors of Statement, Prepared_statement and THD - these members were used only there. This cleanup is unrelated to the patch. "	86f02cd378aac2cdedf1650c2bcdf9ebe0bba239
----------------------------
Bug #26598: Create variable to allow turning off of statistic gathering on metadata commands Add innodb_stats_on_metadata option, which enables gathering index statistics when processing metadata commands such as SHOW TABLE STATUS.  Default behavior of the server does not change (this option is enabled by default). 	e78b43573ce13c1648c13755bb3fd69af22bb305
----------------------------
bug #26538 (flush2.test fails in embedded run) in the embedded result we don't have 'log_slave_updates OFF' line as replication is disabled in the embedded server. As we don't need to check for log_slave_updates variable in this test, we can not to SHOW it at all 	151aa17bfe533c05e16d89f2e5202130bcd12720
----------------------------
mysqld.cc: fix profiling_history_size type 	82b024e6af39e1b7250b538cdbde18550058d2d3
----------------------------
Fix for BUG#22511: IM does not remove angel-pid-file on clean shutdown 	03fa3e5aaf89e67e7f7801189253f962a10ca20e
----------------------------
Fixed compiler warnings Fixed compile-pentium64 scripts Fixed wrong estimate of update_with_key_prefix in sql-bench Merge bk-internal.mysql.com:/home/bk/mysql-5.1 into mysql.com:/home/my/mysql-5.1 Fixed unsafe define of uint4korr() Fixed that --extern works with mysql-test-run.pl Small trivial cleanups This also fixes a bug in counting number of rows that are updated when we have many simultanous queries Move all connection handling and command exectuion main loop from sql_parse.cc to sql_connection.cc Split handle_one_connection() into reusable sub functions. Split create_new_thread() into reusable sub functions. Added thread_scheduler; Preliminary interface code for future thread_handling code. Use 'my_thread_id' for internal thread id's Make thr_alarm_kill() to depend on thread_id instead of thread Make thr_abort_locks_for_thread() depend on thread_id instead of thread In store_globals(), set my_thread_var->id to be thd->thread_id. Use my_thread_var->id as basis for my_thread_name() The above changes makes the connection we have between THD and threads more soft. Added a lot of DBUG_PRINT() and DBUG_ASSERT() functions Fixed compiler warnings Fixed core dumps when running with --debug Removed setting of signal masks (was never used) Made event code call pthread_exit() (portability fix) Fixed that event code doesn't call DBUG_xxx functions before my_thread_init() is called. Made handling of thread_id and thd->variables.pseudo_thread_id uniform. Removed one common 'not freed memory' warning from mysqltest Fixed a couple of usage of not initialized warnings (unlikely cases) Suppress compiler warnings from bdb and (for the moment) warnings from ndb 	f0ae3ce9b97f45b717201764c6af6e4bd4176e5c
----------------------------
"Prevent bugs by making DBUG_* expressions syntactically equivalent to a single statement. --- Bug#24795: SHOW PROFILE Profiling is only partially functional on some architectures.  Where there is no getrusage() system call, presently Null values are returned where it would be required.  Notably, Windows needs some love applied to make it as useful. Syntax this adds: SHOW PROFILES SHOW PROFILE [types] [FOR QUERY n] [OFFSET n] [LIMIT n] where ""n"" is an integer and ""types"" is zero or many (comma-separated) of ""CPU"" ""MEMORY"" (not presently supported) ""BLOCK IO"" ""CONTEXT SWITCHES"" ""PAGE FAULTS"" ""IPC"" ""SWAPS"" ""SOURCE"" ""ALL"" It also adds a session variable (boolean) ""profiling"", set to ""no"" by default, and (integer) profiling_history_size, set to 15 by default. This patch abstracts setting THDs' ""proc_info"" behind a macro that can be used as a hook into the profiling code when profiling support is compiled in.  All future code in this line should use that mechanism for setting thd->proc_info. --- Tests are now set to omit the statistics. --- Adds an Information_schema table, ""profiling"" for access to ""show profile"" data. --- Merge zippy.cornsilk.net:/home/cmiller/work/mysql/mysql-5.0-community-3--bug24795 into  zippy.cornsilk.net:/home/cmiller/work/mysql/mysql-5.0-community --- Fix merge problems. --- Fixed one bug in the query_source being NULL. Updated test results. --- Include more thorough profiling tests. Improve support for prepared statements. Use session-specific query IDs, starting at zero. --- Selecting from I_S.profiling is no longer quashed in profiling, as requested by Giuseppe. Limit the size of captured query text. No longer log queries that are zero length. "	6e096ee8d9f5aa2cbe3c2bba4aecde6fceaa888f
----------------------------
ndb: some tests are affected by the changed timeout in connecting, setting ndb-wait-connected to 20 	64258e02524c9b82804f4c177d34e353b3195efa
----------------------------
added mysqld option --ndb-wait-connected + included management server connect retries into this timeout 	4b18d16d23be76fff103c7a6a86963d9eaacb902
----------------------------
Test for setting general_log_file to a directory fails since /tmp is used as the directory. It does not always exist so let's use one that always exists MYSQLTEST_VARDIR 	9da1b427a72d63b46626ada8c273665255d1f2cf
----------------------------
Bug#23240 --init-file statements with NOW() reports '1970-01-01 11:00:00' as the date time - Merged from 5.0 - Removed redundant call to set_time(); now included in init_for_queries 	84b96eb5e883bbce6776869cbfa19a4e7cd614a8
----------------------------
Bug#25592 wrong reporting for mysql-test-run.pl --mysqld=--binlog-format=... 	10da8b7e96c7520a634621f7762428444e3a0c10
----------------------------
"Bug#18743: Several test cases fails if ""classic"" configuration in 5.0 The problem happened because those tests were using ""cp932"" and ""ucs2"" without checking whether these character sets are available. This fix moves test parts to make character set specific parts be tested only if they are: - some parts were moved to ""ctype_ucs.test"" and ""ctype_cp932.test"" - some parts were moved to the newly added tests ""innodb-ucs2.test"", ""mysqlbinglog-cp932.test"" and ""sp-ucs2.test"" "	315819fed02f44608a7ab4670cfc7743db8c30ce
----------------------------
Bug#23240 --init-file statements with NOW() reports '1970-01-01 11:00:00'as the date time - Starting time of a query sent by file bootstrapping wasn't initialized and starting time defaulted to 0. This later used value by the Now- item and is translated to 1970-01-01 11:00:00. - marking the time with thd->set_time() before the call to mysql_parse resolves this issue. 	dd41fd573221b26170e9aca914366e553a75e559
----------------------------
"include/config-win.h  : Companion change to this one ChangeSet@1.2206, 2007-01-22 02:32:07+02:00, jani@a88-113-38-195.elisa-laajakaista.fi +8 -0 include/my_pthread.h@1.67, 2007-01-22 02:32:06+02:00, jani@a88-113-38-195.elisa-laajakaista.fi +31 -10 which renamed ""sigset()"" -> ""my_sigset()"" but forgot to do it for Windows ... "	0cdbda1273dcee7be64efa93e89c98a6e9bd3705
----------------------------
Backport from the Falcon tree. When opening/creating the transaction coordinator's log, if binlog is used, the tc log is the binlog so we use the binlog's name; otherwise we use the mmap-based log, named after the mandatory argument of the --log-tc option (meant for that). 	2f75c9cd69412de5d3736e775dd302ebdbc1e36d
----------------------------
"Bug#18628 mysql-test-run: security problem(part1) - Implement --secure-file-priv=<dir> option that limits ""load_file"", ""LOAD DATA"" and ""SELECT .. INTO OUTFILE"" to work with files in specified dir. - Use above option for mysqld in mysql-test-run.pl "	45fe5879f4e3130acbe112a200dd79db03707d16
----------------------------
ndb_config_4_node.ini, ndb_config_1_node.ini: new file 	92f9a37dc15fd33e4e016ef978d93a405e48fc98
----------------------------
backport some mysql-test ndbcluster things from 5.1 remove compiler warning EventLogger.cpp Bug#26176 NdbObjectIdMap::expand unable to expand!! mysqld got signal 11 - partial fix - object map to handle failed realloc 	f92d3b3ab59531178c668cbe93c2fc777e5415c4
----------------------------
"BUG#26358  	remove unused and non-working SET_VAR_REQ/CONF signals remove SET_VAR_REQ,REF,CONF - unused, #if 0 and confusing Remove the dead SET_VAR_REQ,REF,CONF signals. They: a) don't currently work b) will cause confusion with future mgmd updates for signal interface to configuration things (e.g. port numbers) "	7ed1f6ac01e87d46bcb33a3aa6d2d367be24841c
----------------------------
BUG#26353 remove GET_CONFIG_BACKWARDS_COMPAT from ndb_mgmd there is backwards compatibility for GET CONFIG style configuration requests in ndb_mgmd. None of the ndbd versions that use this couldn't possibly connect to a 5.0 or 5.1 cluster. remove the backwards compat remove it 	02c847eb0320acfb0111f3e0b7875c5163e25a92
----------------------------
branches/zip: Add statistic counters to the buddy allocator. buf_buddy_n_frames: Number of buffer frames allocated for the buddy system buf_buddy_used[]: Counts of allocated blocks, by buddy size. buf_buddy_relocated[]: Counts of blocks relocated, bu buddy size. buf_buddy_alloc_clean(): Note the added configuration parameter buf_buddy_min_n_frames: Preferred minimum buf_buddy_n_frames 	e67d5c761cd9af2a622c7b00fc9d517e2729c42a
----------------------------
ndb: some tests are affected by the changed timeout in connecting, setting ndb-wait-connected to 20 	d64fe134ad5788c8bb98fcc3f03667bf9efd4c3d
----------------------------
"Bug #24000  	ndb_config.cpp has the wrong name ndb_condig.cpp in source distro "	18f63370aae5a90590a7dc47d1c7565e742d046d
----------------------------
modify configure.in 6.1.2 	6c0b47c14f48a936a64185f5c2190d574658342b
----------------------------
ndb - - fix bug when using node ids > 48 causing invalid memory access - modify configuration so that mysql-test-run will use 	116ed900ad24c54ec0af4baf6f74dcaf16e6f1cf
----------------------------
NdbScanOperation.hpp, NdbScanOperation.cpp, ha_ndbcluster.cc: bug#25821  Excessive partition pruning for multi-range index scan in NDB API: added multi_range error checking in end_of_bound ha_ndbcluster.h: Removed stray mthod declaration 	2d0bd82a06ef744fb4a1b4bd7b974279437f6632
----------------------------
"Bug#26015 valgrind warning PollGuard::unlock_and_signal()/NdbCondition_Destroy - Add variable ""ndbcluster_binlog_terminating"" and use that to signal the cluster binlog thread it's time to shutdown. This allows exact control of when the thread shutdown, previous implementation would start shutdown of the thread as soon as the mysqld started shutdown. Now we will shutdown cluster binlog thread in 'ndbcluster_binlog_end' "	07dd9a61c180116033fb0010628eeabace8c40b0
----------------------------
"Correct the non working check for --skip-log-bin in ""extra_opt"" "	b6bd53aa9d52ae6643f9ecd6171624c299770f2e
----------------------------
Bug#24805 mtr.pl can't handle test with --disable-log-bin - Don't give mysqld the --log-bin argument if .opt file contains --skip-log-bin - Enable flush2 test 	958308a5cf8738e7ff1357b6ca40cb6718eadeb3
----------------------------
Bug #26021 - ndb: valgrind warning handle_trailing_share/ndbcluster_free_share invalid read 	bbe3008a490163941668d634ac7794c2ad8e9215
----------------------------
"Bug #26021  	valgrind warning handle_trailing_share/ndbcluster_free_share invalid read - revert bugfix, needs more work "	addb495339f9a64550930ae61fe9796b8b76ea8a
----------------------------
Bug #26019 - valgrind warning ndbcluster_log_schema_op/safe_mutex_lock invalid read protect the setting of ndb_schema_share = NULL with a mutex 	b3fa3c8d62a1c112010895c9a5974585a830774e
----------------------------
BUG#23225: Slow query log: setting slow_query_log_file writes to wrong file After execution of SET GLOBAL SLOW_QUERY_LOG_FILE=...; slow query log data would go into the general log file. The problem was in the bogus cut-n-paste in the code. 	c9038f92922ab919cb84996f0cb6b869cd86e9aa
----------------------------
Additional fix for bug 25815 for test results when running with --binlog-format=row 	faf05bf314ce07697ca832a0a9b2ef092df74840
----------------------------
"Bug#25341:  ""init.d/mysql stop"" may timeout too quickly Thirty five seconds is entirely too short of a period to wait for a server to exit.  Instead, make a valliant effort to make sure it exits, and only give up after a very long period (arbitrarily chosen as 15 minutes). In addition, if we're being asked to restart the server, then don't try to start again if trying to stop the server failed. --- Return zero by default, when the script exits. --- Set return-/exit-value based on whether we successfully dealt with the PID-file. --- Don't wait that long if the program we're waiting on exits.  It should only exit if the server is not going to be started. "	24e3508b0e3d1ca10a5a8e9db102a506371ebb1c
----------------------------
Bug#17332 - changing key_buffer_size on a running server can crash under load Resizing a key cache while it was in heavy use could crash the server. There were several race conditions. I reworked some of the algorithms to fix the race conditions. No test case. Repeating the crashes requires heavy concurrent load on the key cache. A test script is attached to the bug report. More explanations to the changes are contained in a text file attached to the bug report. 	48a596edac4a85d3fd49f6e60c215287a485df40
----------------------------
(recommit from 5.1-wl2325-5.1-drop6) added mysqld option --ndb-wait-connected + included management server connect retries into this timeout 	7c75468d9b7ba1cbd59d9a601e9604eff29bccd1
----------------------------
Bug#23546, Cluster configured without any arbitration 	9755609b7b61644be723d256ccd69a3347b62946
----------------------------
branches/zip: Make zlib use InnoDB memory heaps when processing BLOBs. page_zip_set_alloc(): New function, to configure zlib to use a memory heap. btr_store_big_rec_extern_fields(): Reduce memLevel, so that a heap of 256 kilobytes will suffice.  Use page_zip_set_alloc(). btr_copy_externally_stored_field_prefix_low(): Use page_zip_set_alloc(). page_zip_compress(), page_zip_decompress(): Use page_zip_set_alloc(). 	4b07b77f5a0400daf529e051678274b46ee4df21
----------------------------
BUG#23527: set global query_cache_size can crash the server under high load MySQL server could crash if two or more threads would initiate query cache resize at the moments very close in time. The problem was introduced with the fix of bug 21051 in 5.0 and 5.1: simultaneous query cache resizes would wait for the first one in progress, but then each thread would try to finish the operation, accessing the data that was already reset (attempt to dereference 'bins' pointer, which may be NULL already). The solution is to check after synchronization if another thread has done the reset already (test 'query_cache_size > 0' again). No test case is provided because the bug is a subject to a race. 	68a3e96333fa5a37db6e8e4b6be9fc5fcc5308d4
----------------------------
"Bug#25396 ""Valgrind leak in closecon_handlerton"" plugin_shutdown() calls plugin_deinitialize() which calls ha_finalize_handlerton(). ndbcluster_end() fails to wait for the ndb utility thread to exit which results in the handlerton struct being freed before the ndb utility thread has destroyed it's THD but before the plugin has been marked as UNINITIALIZED Bug is caused by misuse of abort_loops variable and not locking mutex during calls to pthread condition variable functions causing a race in valgrind's pthread_cond_wait implementation. "	fddb97da98cb7a1b18f05a6db0a97bd79ce93180
----------------------------
"Bug #25487  	deleting ndb_cluster_connection object takes long time aim is to: a) if set_connect_timeout called, timeout connect attempt (for retry on next call) after timeout period b) preserve existing blocking behaviour otherwise (for, e.g. mgmapi) Related to customer issue with long time deleting ndb_cluster_connection object. believe we're hanging on the connect(2) call until timeout (when we then realise we should exit the thread). "	4984af30ecbe62ab5d4bbb60a1820bad689a5372
----------------------------
"Fix for configure to detect library correctly. Fix to check library in use during runtime. Fix for Bug#16995, ""idle connections not being killed due to timeout when NPTL is used"". "	ff58749b290dc8f5f8e78ce7b5a73d7efecc610a
----------------------------
Bug#22807 mysql_upgrade fails when called with a basedir-path containing spaces - Corrected compiler warnings and performance problems with new dynstr_append_os_quoted function. 	d3e6cb6b3b529d01779d8304db94fd9f0c983f2f
----------------------------
ndb - bug#25711 fix cpu peak in big clusters during unpack of config 	8aea461461efb510695b1f587800181d54b46aaf
----------------------------
Added configure section to deal with actually versioning symbols. 	3fdf318ef67fc873576d89ca53b595f4fbbe6b79
----------------------------
BUG#21490 - No warning issued for deprecated replication parameters This patch deprecates the replication startup options in the configuration file and on the command line. The options deprecated include: MASTER_HOST, MASTER_USER, MASTER_PASSWORD, MASTER_PORT, MASTER_CONNECT_RETRY, MASTER_SSL, MASTER_SSL_CA, MASTER_SSL_CAPATH, MASTER_SSL_CERT, MASTER_SSL_KEY, and MASTER_SSL_CIPHER The code is designed to print the warning message once. 	fc0adebe0eb34e94eacc7a677a1d55b349131953
----------------------------
BUG#21490 - No warning issued for deprecated replication parameters This patch deprecates the replication startup options in the configuration file and on the command line. The options deprecated include: MASTER_HOST, MASTER_USER, MASTER_PASSWORD, MASTER_PORT, MASTER_CONNECT_RETRY, MASTER_SSL, MASTER_SSL_CA, MASTER_SSL_CAPATH, MASTER_SSL_CERT, MASTER_SSL_KEY, and MASTER_SSL_CIPHER The code is designed to print the warning message once. 	6ace4889205c07d76a4dd0eb34281128a01a132f
----------------------------
Bug#22807 mysql_upgrade fails when called with a basedir-path containing spaces - Create space safe strings for system() calls in mysql_upgrade.exe 	ef5f757ac282528c0abc1a93df888e4c1350c467
----------------------------
ha_ndbcluster.cc: Bug #25668    - corrected patch after test failures 	2fed34d7eab8b25df278880d9fb02d5084da22b8
----------------------------
ha_ndbcluster.cc: Bug #25668    ndb: mysqld may core if cluster disconnected -- pTrans may be NULL, remove not needed usage of handler::ndb_err 	1d6fe0ffaa37fc115f6c0ac28d5ed497879eed72
----------------------------
"configure.in  :  Fix a dependency problem for ""extra/"" which shows up only in RPM builds. "	25c53269ab1802041413758b6488ebd3967f7dd4
----------------------------
Bug #16567 binlog_format option does not show when doing ./mysqd --help --verbose Implementing this feature connected to wl#3368 mixed binlog_format default. Supplied by my.cnf or explicitly in command line option gets be displayed. When not supplied `(No default value)' is displayed, even though --log-bin might be supplied. The option is different object from @@global.binlog_format variable. The default `mixed' for the latter is dependant on presence of `--log-bin' option, otherwise the value of the var is set to NULL (undefined): var := opt | MIXED  when binlog-in-use var := NULL         otherwise (no binlog, no format) Comments on NDB and mixed format updated, also dependency the option on --log-bin aka binlog-in-use is worded. Making t/rpl_switch_stm_row_mixed.test to interprete DEFAULT for binlog_format as MIXED. Comments on what the test covers are added. todo/fixme: turning @@global.binlog_format to be read-only when it's set to NULL (no binlog). todo/fixme: options dependacy (acyclic) graph, particularly to solve a task of setting defaults values for the leaf nodes only when parents' nodes are set. 	4d815a489368e3df4d46749288bf95a86cc9d2e5
----------------------------
Apply patch from MySQL: ChangeSet@1.2353, 2006-12-19 16:57:51-07:00, tsmith@siva.hindu.god +13 -0 Added innodb_rollback_on_timeout option to restore the 4.1 InnoDB timeout behavior (Bug #24200) 	03b9c45ec35f570c9cd8215df71655edbf1da118
----------------------------
configure.in: Corrected default for --disable-grant-options 	ba7b6e86f269ed5a634af13f422b92be3294431c
----------------------------
configure.in: Removed line accidently inserted when correcting bug#18526 	1768b21a1482e7737ff2c752d12a2f8049ec8263
----------------------------
WL #3670: Compile-time option to remove GRANT-related startup options - configure --disable-grant-options defines DISABLE_GRANT_OPTIONS - configure.js/cmake also updated - if DISABLE_GRANT_OPTIONS is defined, mysqld no longer recognizes: --bootstrap --init-file --skip-grant-tables Scripts which rely on those three options are modified to check the environment for MYSQLD_BOOTSTRAP; it should be set to the full path of a mysqld which does handle those options. For example: $ export MYSQLD_BOOTSTRAP $ MYSQLD_BOOTSTRAP=/path/to/full/MySQL/bin/mysqld $ mysql_install_db $ make test 	bac65ee90a724278b76b27da12c0728b7427324c
----------------------------
configure.in: raise version to 5.0.33 	754a148a35c20e4a12d1b946bbbd4935e2e3e770
----------------------------
configure.in  :    Fix a wrong comment. 	cca28699c81e6e523cb026b8b653315f75383c37
----------------------------
BUG#24780 workaround for broken installations that depend on using /etc, but were configured differently 	eeb82a8ed5a0415737c12ecc4ec97708461d5081
----------------------------
ha_ndbcluster.h, ndb_dd_alter.result, ha_ndbcluster.cc: bug#25296  Truncate table converts NDB disk based tables to in-memory tables: Changed fix to use get_tablespace_name directly instead 	4ddf45b19cdb9b9223871cf24b9b663cccb73c24
----------------------------
bug #25296  Truncate table converts NDB disk based tables to in-memory tables: ha_ndbcluster::update_create_info should only update for TRUNCATE since we need to detect change of STORAGE at ALTER TABLE 	408e4a61d15f87484d6f3f2fccf5fef5b7cd5cc7
----------------------------
ndb_use_transactions is set from value for command line flag 	82723332432eedae70bd22659b1b3845068ac171
----------------------------
bug #25296  Truncate table converts NDB disk based tables to in-memory tables: ha_ndbcluster::update_create_infohas to check for explicit STORAGE MEMORY 	b448ad77c8266bb57c262a86b17c0a5ff7a00acb
----------------------------
bug #25296  Truncate table converts NDB disk based tables to in-memory tables: implemented ha_ndbcluster::update_create_info 	500918f2ab3e47fb32321f7a9eea5bbd88855b82
----------------------------
mysqld.cc, configure.in: Don't use thread priority by default on Mac OS X (bug#18526) 	344599948d2867ddd13ba6045faaa08a6129386a
----------------------------
"configure.in: Build ""mysqld_error.h"" even if configured --withouth-server (bug#21265) "	fd833d70377d947d59169aa45ff7c2ce637ae6ec
----------------------------
configure.in: Don't build server when configured --without-server (bug#23973) 	473b0c7287b5980e61bf66fe99f900d0a3d1ff47
----------------------------
configure.in  :  Update of the NDB version number was missing, do it. 	51fcec6a2070835b5bda4166be2b9db3a598b0b4
----------------------------
Fix valgrind warning from deinitializing ha_ndbcluster, referencing another handler from 'plugin_foreach' 	168c5f1424157246bfc047f18dcb09585e659613
----------------------------
ndb_dd_ddl.test, ndb_dd_ddl.result, ha_ndbcluster.cc: bug#24667  After ALTER TABLE operation ndb_dd table becomes regular ndb: disallowed TABLESPACE declaration for STORAGE MEMORY Makefile: Rename: storage/ndb/ndbapi-examples/mgmapi_logevent_dual/Makefile -> storage/ndb/ndbapi-examples/mgmapi_logevent2/Makefile mgmapi_logevent2.cpp: Rename: storage/ndb/ndbapi-examples/mgmapi_logevent_dual/mgmapi_logevent_dual.cpp -> storage/ndb/ndbapi-examples/mgmapi_logevent_dual/mgmapi_logevent2.cpp Makefile: Rename mgmapi_logevent_dual to mgmapi_logevent2 mgmapi_logevent2.cpp: Rename: storage/ndb/ndbapi-examples/mgmapi_logevent_dual/mgmapi_logevent2.cpp -> storage/ndb/ndbapi-examples/mgmapi_logevent2/mgmapi_logevent2.cpp 	f55af1eadeb838ed082f5ab2b7ca75d42ffb3535
----------------------------
Added innodb_rollback_on_timeout option to restore the 4.1 InnoDB timeout behavior (Bug #24200) 	0d5dc51438463226da454808a4ef370d194ae65d
----------------------------
Changed config of mysqlmanager to use my.cnf search path. 	d194a83b970823407f11c414f17ed9c075e51489
----------------------------
WL #3031 Yet another test result that needed to be regenerated due to new error messages. This test only runs via ./mysql-test-run.pl --ps-protocol --mysqld=--binlog-format=row rpl_extraCol_innodb 	2301aff23443a410ddf1b88d6ccfcab29143fee5
----------------------------
WL#3618 Minor correction to configure script to remove the replication.m4 script. 	19725c0b37bac1abc98000aca0d16ace05b929e0
----------------------------
"support-files/mysql.spec.sh  :  Call ""make install"" using ""benchdir_root=%{_datadir}""  (bug#24182). "	18010331391658f0c26afcdee2775b39e731aa94
----------------------------
rpl_init_slave.result: Update test result due to fix for bug 23883. 	2a0e2d1d3860aea8f6b6b4287214b491c87c8cce
----------------------------
Rename function datadir_setup to datadir_list_setup to avoid mixup with the function where vardir's are created 	fc1f9bfedee3ff0c7d674798a5179e562b41cbb5
----------------------------
raise max_connections default to avoid conflicts with apache max_childs settings (Bug #23883) 	37d1d86d9fb3e0c53a2e1e047d7be7dd6c84ec35
----------------------------
ha_innodb.m4, Makefile.am, ha_ndbcluster.m4, Makefile.shared, ha_berkeley.m4: Reenabled build outside source tree 	1b61612f8699d1468964e62af57849041ed0a085
----------------------------
Fix for BUG##24415: Instance manager test im_daemon_life_cycle fails randomly. The problem was that the test case used command line tool (mysql) without specifying connect_timeout argument. In some cases, this lead to hanging of the test case. The fix is to specify --connect_timeout=1 when starting mysql. Also, the patch contains polishing and various cleanups to simplify analyzing of the problems further. The patch affects only test suite, no server codebase has been touched. 	ea47e05f3cc5929eb1f56cfdc094cedfce318499
----------------------------
"Fix for bug #22077 ""DROP TEMPORARY TABLE fails with wrong error if read_only is set"" Do not issue a 'read-only' error in case of DROP TEMPORARY TABLE on a non-existing temporary table. Instead produce the correct ""Unknown table"" error or warning (in cases when the IF EXISTS clause was specified). To a documentor: the part of the manual describing the 'read_only' system variable should be clarified to state the following: ""When the read_only variable is set to ON, all operations which create/update/drop tables are rejected with the exceptions for: 1. Any operation performed by the replication thread on a slave server 2. Any operation performed by a user that have the SUPER privilege 3. Any operation that creates/updates/drops only temporary tables"" "	346033a5dab56766dbe2a5bb060f4235844d6c16
----------------------------
bug#19402 SQL close to the size of the max_allowed_packet fails on the slave mending windows test. 	5235785b2e21c28869d25ddc8d8e3f728a1acd9c
----------------------------
bug#19402 SQL close to the size of the max_allowed_packet fails on the slave ver 5.0 and 5.1 refinement. adding to the MAX_SIZE_LOG_EVENT_STATUS estimation status vars and EXECUTE_LOAD_QUERY_EXTRA_HEADER_LEN 	650a2455681f01e7cf5320b2f8f6076e76d0445f
----------------------------
ndb - fix for BUG#23137, ha_ndbcluster.m4 bug. Because NDB_CXXFLAGS is just used in ndb engine, moved NDB_CXXFLAGS from ha_ndbcluster.m4 to ndb/config/common.mk.am. 	feaf6d1615906c98436c2b1c180aa35c39c83e28
----------------------------
BUG#19808, Online config. Wrong error message if DataMemory less than a data on cluster 	40888f48b9f50c5a72af4310a3c967cc67698dab
----------------------------
configure.in: Raise version number after cloning 5.1.13 	d615edba34ea5d3f0644c23487dee533805e331a
----------------------------
WL#3368 mixed binlog_format default An amendment for parsing argument in case NDB is compiled and active. NDB switches from mixed to row-based and back per each query. The previous patch was not aware of such behaviour and made exceptional assingment to row-based when no command line arg --binlog-format provided. Removing #if HAVE_NDB_BINLOG block alltogether: ndb supports mixed and if server was build without NDB using binlog nothing to care. Test for this piece of code is rather specific. While there is active bug23110 ndb_alter_table and some other should fail if no explict --binlog-format is given: mysql-test-run ndb_alter_table 	2b2529de79dfe4211d0b3d23cc9d8bb49d031687
----------------------------
bug#19402 SQL close to the size of the max_allowed_packet fails on the slave comments are fixed as was suggested in reviews. 	5a20c542013f2dd4be99bcc020d4dbe4523678ff
----------------------------
Bug #22860: Option --memlock should be revisited Support says that memlock doesn't work on OSes other than Solaris. Add a warning about --memlock to the crash monologue. 	72dfd02634ad7eb076548a739784d83972f7a661
----------------------------
This ChangeSet must be null-merged to 5.1.  Applied innodb-5.0-ss982, -ss998, -ss1003 Fixes: - Bug #15815: Very poor performance with multiple queries running concurrently - Bug #22868: 'Thread thrashing' with > 50 concurrent conns under an upd-intensive workloadw - Bug #23769: Debug assertion failure with innodb_locks_unsafe_for_binlog - Bug #24089: Race condition in fil_flush_file_spaces() 	f1e0cf9d285269571e96ac4fc058e7494a69c7c7
----------------------------
bug#19402 SQL close to the size of the max_allowed_packet fails on slave fixing a flow of the test 	37c78abf248bc4c7d7e42385e3142cc25dda1754
----------------------------
"Bug#23451 GROUP_CONCAT truncates a multibyte utf8 character Problem: GROUP_CONCAT on a multi-byte column can truncate in the middle of a multibyte character when applying group_concat_max_len limit. It produces an invalid multi-byte character in the result string. The second, easier version - reusing old ""warning_for_row"" flag, instead of introducing of ""result_is_full"" - which was added in the previous commit. "	599b7316602a64094b543a93e6ea992b716d1aa3
----------------------------
"Fix typo, Add ""s"" to format specifier for --stress-init-file "	d94101f796442a63fff7905427b44a18bd7580b7
----------------------------
configure.in: Raise version number to 4.1.23 	27f3bb10654927e50f362eea0364aa77559f63ae
----------------------------
Merge: 3542d83 39d7c5a Merge rolltop.ignatz42.dyndns.org:/mnt/storeage/mtr_vs_config/my41-mtr_vs_config into  rolltop.ignatz42.dyndns.org:/mnt/storeage/mysql-4.1-maint 	c5bfb22fe3bd5a142093656503638e3ffe3ba90e
----------------------------
Merge: cbc3de7 9f329f2 Merge rolltop.ignatz42.dyndns.org:/mnt/storeage/mtr_vs_config/my50-mtr_vs_config into  rolltop.ignatz42.dyndns.org:/mnt/storeage/mysql-5.0-maint 	2704ba36755401f947600b6b3fd7f3ef3423c5bc
----------------------------
Merge: 7b973f3 cf65c15 Merge rolltop.ignatz42.dyndns.org:/mnt/storeage/mtr_vs_config/my51-mtr_vs_config into  rolltop.ignatz42.dyndns.org:/mnt/storeage/mysql-5.1-maint 	deb03b93ece12ee8ac0fe144455912730efcfc26
----------------------------
Merge: 1532622 9f329f2 Merge rolltop.ignatz42.dyndns.org:/mnt/storeage/mtr_vs_config/my50-mtr_vs_config into  rolltop.ignatz42.dyndns.org:/mnt/storeage/mtr_vs_config/my51-mtr_vs_config 	cf65c157eedaad4474db8aa1ffe0c42595a93c5b
----------------------------
Merge: ed95cac 39d7c5a Merge rolltop.ignatz42.dyndns.org:/mnt/storeage/mtr_vs_config/my41-mtr_vs_config into  rolltop.ignatz42.dyndns.org:/mnt/storeage/mtr_vs_config/my50-mtr_vs_config 	9f329f2cf2ab9b95e845f8dbbebc731b6bdf2512
----------------------------
Bug#23865 mysql-test-run.pl on Windows only supports debug and release configurations Visual Studio builds each configuration in a different sub-directory.  Only the sub- directories for release and debug are currently searched. 	39d7c5a6bcb543c70171829b7160959934b59c57
----------------------------
Bug#22877 replication character sets get out of sync using replicate-wild-ignore-table Problem: changes in character set variables before an action on an replication-ignored table makes slave to forget new variable values. Fix: initialize one_shot variables only when 4.1 -> 5.x replication is running. 	ac9e3db9a7a08340a57691c7dfd168db7f6dc3d7
----------------------------
BUG#21915: Changing limits of table_cache when setting max_connections If the user has specified --max-connections=N or --table-open-cache=M options to the server, a warning could be given that some values were recalculated, and table-open-cache could be assigned greater value. Note that both warning and increase of table-open-cache were totally harmless. This patch fixes recalculation code to ensure that table-open-cache will be never increased automatically and that a warning will be given only if some values had to be decreased due to operating system limits. No test case is provided because we neither can't predict nor control operating system limits for maximal number of open files. 	1bfe00e0da3496937bc2eaef4532e014a6ad9d30
----------------------------
Fix for bug #22158: Errors in init_connect terminate connections silently When executing the init_connect statement, thd->net.vio is set to 0, to forbid sending any results to the client. As a side effect we don't log possible errors, either. Now we write warnings to the error log if an init_connect query fails. 	7b90a4542582f8852ad45cdcd3181e237fee39ee
----------------------------
Set flag opt_skip_ndbcluster_slave if no slaves are being used. Add comments Deperlify 	49690815898c3f707e5d28d41d82c3295a7cf898
----------------------------
Pass --core-file option to mysqld when bootstrapping 	ac5b37ef00205c48179f7d703e558f71eeaa0c9e
----------------------------
configure.in: Raised version number to 5.0.28 	5f12986d7d36ff3207e8bfa6e5c3539324d4f8cd
----------------------------
"make_win_bin_dist: Copy udf examples and raid.h Create target ""include"" directory before copying files to it CMakeLists.txt: Only compile in bdb if configured configure.in: Raised version number to 5.0.27 "	08d47a3b81424e89e39b26cc70e3d881ba86432b
----------------------------
"make_win_bin_dist: Create target ""include"" directory before copying files to it Copy udf examples and raid.h CMakeLists.txt: Only compile in bdb if configured "	67ec8be645495eadc9c67a1249b615f11c12c3d7
----------------------------
BUG#23175 - MYISAM crash/repair failed during repair Repair table could crash a server if there is not sufficient memory (myisam_sort_buffer_size) to operate. Affects not only repair, but also all statements that use create index by sort: repair by sort, parallel repair, bulk insert. Return an error if there is not sufficient memory to store at least one key per BUFFPEK. Also fixed memory leak if thr_find_all_keys returns an error. 	a2e0059f3c1cf647b1feaf80780a917476ae4bba
----------------------------
Make --with-ndbcluster only be valid together with --bench Improve code that detects if ndb shuold be installed Remove call to stop_all_servers after install db, if any servers are still running and need to be stopped they will be stopped atuomatically 	8d72bf94487c0b700e20e6fed1ed8e6f59c3cce8
----------------------------
BUG#21253 NdbApi.h should not include my_config.h 	975e2f37b90db9c77e51c6daa15a8c4240e660cd
----------------------------
"make_binary_distribution.sh: Split copy of result files to avoid shell limit. Added copy of mysql-test/std_data/ndb_backup5{0,1}. configure.in: Look for dlopen() even if --with-mysqld-ldflags constains ""-static"", as this is not the same as the flag to ""ld"", it just informs ""libtool"" to link static with libraries created part of the build, even if there exists shared versions. "	8692bb53a33bf29415d1d01681bafef4ddb00e5e
----------------------------
"Makefile.am: Configure flags makes ""lex_hash.h"" differ, don't distribute pregenerated file, build it after configure (bug#18888). "	dcfefed95ad9c33b8b712e48071fa2c51c9ec82a
----------------------------
Bug#8283 - OPTIMIZE TABLE causes data loss OPTIMIZE TABLE with myisam_repair_threads > 1 performs a non-quick parallel repair. This means that it does not only rebuild all indexes, but also the data file. Non-quick parallel repair works so that there is one thread per index. The first of the threads rebuilds also the new data file. The problem was that all threads shared the read io cache on the old data file. If there were holes (deleted records) in the table, the first thread skipped them, writing only contiguous, non-deleted records to the new data file. Then it built the new index so that its entries pointed to the correct record positions. But the other threads didn't know the new record positions, but put the positions from the old data file into the index. The new design is so that there is a shared io cache which is filled by the first thread (the data file writer) with the new contiguous records and read by the other threads. Now they know the new record positions. Another problem was that for the parallel repair of compressed tables a common bit_buff and rec_buff was used. I changed it so that thread specific buffers are used for parallel repair. A similar problem existed for checksum calculation. I made this multi-thread safe too. 	5f08a831863c28561b6b99f8f8246a3a24b2f2c2
----------------------------
"Rename ""snapshot_setup"" to ""datadir_setup"" as that is what is done by it. Move call f dunction into ""initialize_servers"" so it's called also in stress and bench mode "	f638be87cbb74f971d713bfd008eb57a9985f10c
----------------------------
Use same --slave-load-tmpdir in all versions(backport from 5.0) 	ab862ca2dc15eba9f4f08c44c814fefc306701be
----------------------------
5.0 is also using the somewhat larger config for cluster 	1fb0862f3ca2f3be46c94a06bd87e25db1ffaf0c
----------------------------
Set the small configuration a little bit larger for 4.1 	dd2a184f69e3634ccbf2bc48e6f0b445d633f0d2
----------------------------
branches/zip: Fix all bugs detected by mysql-test-run.  The exactly same set of tests are failing with trunk -r869, with this revision using uncompressed storage, and with this revision hard-wired to use 1-kilobyte compressed pages and innodb_file_per_table. btr_push_update_extern_fields(): Do not call ut_ulint_sort() if n_pushed == 0. btr_copy_externally_stored_field_prefix_low(): Replace ut_max() with ut_min(). 	a4c9d38ee8761e55b734d98148e59e1eaeb12b4c
----------------------------
This  patch makes ndbcluster_hton not static. I have a second patch for ndbcluster_hton to be static, but I want to talk to Jonas first. 	8685747f066728449f276b391e27688ee8d97ca4
----------------------------
Bug#22224: Windows build depends on ib_config.h This change has already been made to 5.1. 	e89c10e99c6932a73bdb313b7167c3d40b4835f7
----------------------------
Result of a binlog_statement_insert_delayed was affected by recent fixing of binlog_row_binlog.test failure in team tree. Fixing the result that gets wrong with --binlog-format=mixed (so that skipped on pushbuild currently) 	a8c9d45dfc478259a1fc4286246591cf0144309e
----------------------------
"Bug#22436 Four tests require ""innodb"" to be configured, fail in ""classic"" build - Disable warnings when creating the ""innodb"" tables if it works anyway. - Move test that are really innodb dependent to innodb_mysql "	485772e30854e51b7fb7411c5c53f02e20011b77
----------------------------
mysql_config.sh: Filter out plain -O and Sun C/C++ style optimization flags, -xO<level> Filter out icc specific options from cflags/libs(_r) 	878416e05497ce366a713ff44b4498da842e7688
----------------------------
Applied innodb snapshot ss792 and ss854. This ChangeSet will be null-merged to mysql-5.1. Bugs fixed: - Bug #21638:  InnoDB: possible segfault in page_copy_rec_list_end_no_locks If prefix_len is specified, write it to the insert buffer instead of type->len - bug #10746:  InnoDB: Error: stored_select_lock_type is 0 inside ::start_stmt()! INSERT ... SELECT uses LOCK_NONE in innodb_locks_unsafe_for_binlog mode, so do not check for LOCK_X or LOCK_S in start_stmt() 	3724c1276b50c311eb65068a8cb960720e354611
----------------------------
Fixed bug #22015: crash with GROUP_CONCAT over a derived table that returns the results of aggregation by GROUP_CONCAT. The crash was due to an overflow happened for the field sortoder->length. The fix prevents this overflow exploiting the fact that the value of sortoder->length cannot be greater than the value of thd->variables.max_sort_length. 	f2225cab27a2cfae4e18190159d95b9f6c5e10c7
----------------------------
ha_innobase::start_stmt(): Remove the check for prebuilt->stored_select_lock_type being LOCK_X or LOCK_S. This would cause false alarms with INSERT ... SELECT, which would use LOCK_NONE in innodb_locks_unsafe_for_binlog mode.  (Bug #10746) 	7e894a1b88758d7a9d0b892fb77a82eb8679a146
----------------------------
"Add character-sets-dir argument to ""mysql"". That avoids a local installed charset dir being used. "	dafb50055f67ed90111d96dd1db4cf4d16bde5af
----------------------------
Make ndb_config use the same default options as any other ndb tool in the distribution (Bug #22295) 	b9372f7efabb3e4e00b75f342ef2f40daddb109d
----------------------------
mysql_declare_plugin(innobase): Initialize the fields reserved1 (apparently the system variables) and reserved2 (apparently the configuration options). 	e9d8c5e88a4c65e7deedf61e170bb653663d761f
----------------------------
Bug#14862 undefined reference to `isinf' on SOLARIS - strings/strtod.c - Change the configure test looking for 'isinf' so the value returned from isinf is used. That avoids the call to isinf being optimized away. 	df2fbc784d9c634f9b7292da6e843edbc65319ed
----------------------------
BUG#19402 SQL close to the size of the max_allowed_packet fails on the slave A communication packet can also be a binlog event sent from the master to the slave. To be sent by master dump and accepted by slave io thread both have to have the value of max_allowed_packet bigger than one that client connection had. In the patch there is the MAX possible replicatio header size estimation for events in binlog that embedded user query. Only these events of query_log_event type, i.e just plain queries, require attention. 	b4b06d7a67ca31c2d52a5e60fe900be654947948
----------------------------
Bug#20862 truncated result with show variables like 'innodb_data_file_path' The size of 'value' field is increased to FN_REFLEN 	229bb9dcf1e0efb1e37d940f7b1be50b4bbea7df
----------------------------
Need to set symbolic-links=1 for valgrind builds for the partition test 	89af58aa95e087be1dd70e8da07adeeefae1296c
----------------------------
configure.in  :    NDB version and general version must be (kept) in sync - do that. 	b6071f06ce08e6eda33fd2bc96fcada6580dcdeb
----------------------------
"Fix a change to ""configure.in"" that broke building commercial sources. To be pushed to both the cloned 5.0.25 and the general 5.0 tree. "	1fc7b015079658350c95f5b7f6e984c7fab25c52
----------------------------
Bug #21054: myisam_stats_method ignored in my.cnf and cmdline Fix OPT_MYISAM_STATS_METHOD case, where the NULLS_EQUAL and NULLS_NOT_EQUAL methods were mixed up 	b6cd727ed1f722ae37f9302196f6f20121bbbb4d
----------------------------
"Fix for BUG#11151 ""LOAD DATA INFILE commits transaction in 5.0"". In 5.0 we made LOAD DATA INFILE autocommit in all engines, while only NDB wanted that. Users and trainers complained that it affected InnoDB and was a change compared to 4.1 where only NDB autocommitted. To revert to the behaviour of 4.1, we move the autocommit logic out of mysql_load() into ha_ndbcluster::external_lock(). The result is that LOAD DATA INFILE commits all uncommitted changes of NDB if this is an NDB table, its own changes if this is an NDB table, but does not affect other engines. Note: even though there is no ""commit the full transaction at end"" anymore, LOAD DATA INFILE stays disabled in routines (re-entrency problems per a comment of Pem). Note: ha_ndbcluster::has_transactions() does not give reliable results because it says ""yes"" even if transactions are disabled in this engine... "	e4d3595b18eda1d2327050eb95262c92eed5d8bf
----------------------------
WL#3337 (Event scheduler new architecture) This is a post-review patch. Fixes the typelib implementation, available only in 5.1.11. --event-scheduler cmdline : DISABLED | ON | OFF | 0 | 1 DISABLED - makes the scheduler unavailable during the server run (ON|1)-  When the server is started the scheduler will be started. It can be stopped and restarted by setting appropriate values to GLOBAL event_scheduler (OFF|0)- When the server is started, the scheduler won't be started. It can be started and again stopped by setting appropriate values to GLOBAL event_scheduler. _DEFAULT_ value The GLOBAL variable event_scheduler can have the following values: OFF | ON | 0 | 1 DISABLED is not possible and every attempt will end with an error that it's not a valid value for the variable. OFF | 0 - This is the pre-5.1.11 behavior - The scheduler stops, if not already stopped, and can be started again  by setting the value of the variable to ON|1. ON | 1  - This is the pre-5.1.11 behavior - The scheduler starts, if not already started, and can be stopped again by setting the value of the variable to OFF|0. 	ca39997c0ebcbeb8f84bb5e447161546b65509b1
----------------------------
Fix for BUG#21345, Error in cluster logfile rotation. Fixed the cluster logfile rotation code, let the cluster logfile be renamed correctly when the main logfile exceeds the configured maximum size. 	cb6d518d076aab27180c16d923905c412a16e973
----------------------------
add 2 placeholder values for config and system variables. 	38a59efbc9828afcead6389f6abab8a5e35eb314
----------------------------
Merge changes from MySQL AB: ChangeSet 2006/08/23 13:59:16-07:00 brian@zim.(none) This patch removes need for a innodb to have its own configure. univ.i: Replace ../ib_config.h with config.h. Makefile.i, Makefile.am: Change directory paths. configure.in: Delete. plug.in: New file, included from the top-level configure.in. setup.sh: Replace configure.in with plug.in. 	71cdd575f7ee10bf1eed1470623cdf92ae592f0d
----------------------------
Merge: 44a1f41 6d62914 sql_base.cc, config-netware.h: Auto merged 	cda07adf326c620b7a11bc05924ce5e12ddbcee6
----------------------------
"Changes made according to HLD/LLD. The following is an excerption from the WL. 1. Change so that MIXED is default format 1.1 to change the default for command line --binlog-format 1.2 to alter global_system_variables.binlog_format calculation basing on command line --binlog-format parameter and its default. 2. Change test suite so that more testing is done by MIXED format. 2.1 to check if there are test cases requiring --binlog-foramt=statement via `source include/have_binlog_format_statement.inc' and affected by altering the latter to be ""mixed"". 2.2 to check the content of such vulnerable cases to find if extending to the mixed does not modify results. In that case simply substitute source arguments as explained. 2.3 if a test in mixed mode deals with features triggering row-binlogging then if necessary we can switch explicitly to statement mode or create another test to run with non-recommended STATEMENT mode Particullarily, extracting INSERT DELAYED binlogging subtest for statement mode is performed, and the snippet is moved into a separate test file. Note that since now all three modes verify this use case through 3 different tests. No changes in item 3 of HLD appeared to be needed. "	7be4bc4e55ccdd6bd7b35b1b166b2a0a05276249
----------------------------
Fix for bug #21345: Error in cluster logfile rotation. Fixed the cluster logfile rotation code, let the cluster log file be renamed correctly when the main log file exceeds the configured maximum size. 	4e7cad0fd4dc57372ddce8d05bc0bf01521221e0
----------------------------
Fix for bug#21416 SP: Recursion level higher than zero needed for non-recursive call The following procedure was not possible if max_sp_recursion_depth is 0 create procedure show_proc() show create procedure show_proc; Actually there is no recursive call but the limit is checked. Solved by temporarily increasing the thread's limit just before the fetch from cache and decreasing after that. 	85e6c3bfc1874946a9170753a9ddcc45e1725541
----------------------------
This patch removes need for a innodb to have its own configure. 	212ab97668875a811ad5b7d6f224642bf25176d0
----------------------------
configure.in  :    Set the version for 5.0.24a. 	6d62914044ce04cc4ebf749d110e4963428bb312
----------------------------
ndb - post-merge fix 5.0 to 5.0-ndb: number of frags if --without-big-tables 	9dc6087d4df6c4fe77fc2b9cd36e1f8f446932e4
----------------------------
BUG#21051: RESET QUERY CACHE very slow when query_cache_type=0 There were two problems: RESET QUERY CACHE took a long time to complete and other threads were blocked during this time. The patch does three things: 1 fixes a bug with improper use of test-lock-test_again technique. AKA Double-Checked Locking is applicable here only in few places. 2 Somewhat improves performance of RESET QUERY CACHE. Do my_hash_reset() instead of deleting elements one by one.  Note however that the slowdown also happens when inserting into sorted list of free blocks, should be rewritten using balanced tree. 3 Makes RESET QUERY CACHE non-blocking. The patch adjusts the locking protocol of the query cache in the following way: it introduces a flag flush_in_progress, which is set when Query_cache::flush_cache() is in progress.  This call sets the flag on enter, and then releases the lock.  Every other call is able to acquire the lock, but does nothing if flush_in_progress is set (as if the query cache is disabled). The only exception is the concurrent calls to Query_cache::flush_cache(), that are blocked until the flush is over.  When leaving Query_cache::flush_cache(), the lock is acquired and the flag is reset, and one thread waiting on Query_cache::flush_cache() (if any) is notified that it may proceed. 	0f0ddc398a5b68f3a67794c82e7a40cb44a6e402
----------------------------
Many files: Deleted config/ac-macros/ha_berkeley.m4 Removed more referenses to bdb 	b329f2c3ef142c460333e914062b14f3aa2a3e64
----------------------------
"Fix by Georgi Kodinov: Bug #18744 Test 'join_outer' fails if ""classic"" configuration in 5.0 - moved an InnoDB dependent test to the appropriate file "	e3bdd6c6c20aeda1b3206a9a8b61958e06c50ad3
----------------------------
"Fix for bug #21642: ""configure"" with no arguments does not build "	56443ae20122579ae6eeceb98e5bf3bd2a57a3e3
----------------------------
"WL#3432 (Compile the Parser with a --debug --verbose option) Changed the automake build process : - ./configure.in - ./sql/Makefile.am to compile an instrumented parser for debug=yes or debug=full builds Changed the (primary) runtime invocation of the parser : - sql/sql_parse.cc to generate bison traces in stderr when the DBUG ""parser_debug"" flag is set. "	4a22b07ed55381b6e2c70ac07868aabbbcf19d34
----------------------------
ndb - rpl_ndb_basic fix for change of deadlock timeout in config.ini 	40754dd6e3c1944c7a46fbe4f22d25b64664958b
----------------------------
BUG#21670 memory leak in ndb_mgm -e show fix the following valgrind warning when running ndb_mgm -e show (leak only in client) ==20398== 14,596 (11,936 direct, 2,660 indirect) bytes in 4 blocks are definitely lost in loss record 24 of 25 ==20398==    at 0x401C4A1: malloc (vg_replace_malloc.c:149) ==20398==    by 0x80797A3: ConfigValuesFactory::create(unsigned, unsigned) (ConfigValues.cpp:309) ==20398==    by 0x8079F03: ConfigValuesFactory::expand(unsigned, unsigned) (ConfigValues.cpp:325) ==20398==    by 0x8079967: ConfigValuesFactory::put(ConfigValues::Entry const&) (ConfigValues.cpp:414) ==20398==    by 0x807A7B6: ConfigValuesFactory::unpack(void const*, unsigned) (ConfigValues.cpp:701) ==20398==    by 0x806CB9D: ConfigValuesFactory::unpack(UtilBuffer const&) (ConfigValues.hpp:252) ==20398==    by 0x8069160: ndb_mgm_get_configuration (mgmapi.cpp:1941) ==20398==    by 0x8060661: CommandInterpreter::executeShow(char*) (CommandInterpreter.cpp:1242) ==20398==    by 0x8063966: CommandInterpreter::execute_impl(char const*) (CommandInterpreter.cpp:715) ==20398==    by 0x8064040: CommandInterpreter::execute(char const*, int, int*) (CommandInterpreter.cpp:625) ==20398==    by 0x8064189: Ndb_mgmclient::execute(char const*, int, int*) (CommandInterpreter.cpp:203) ==20398==    by 0x805E56C: read_and_execute(int) (main.cpp:124) ==20398==    by 0x805E754: main (main.cpp:162) ==20398== 	76940119d0998d1f996a7e8741f204fc6407535e
----------------------------
ndb - bug#20708 init ndb_cache_check_time and honor value in my.cnf 	3cd1826ef04e6dc60081f8f97f57329af2ea0314
----------------------------
BUG#21647 events tests fails with --with-ndbcluster ignore the ndb injector thread when selecting from INFORMATION_SCHEMA.PROCESSLIST 	6a6b5eb1370ab63ed8cd729fe056c1ea6d39999f
----------------------------
ndb_lock.test, ndb_lock.result: bug #18184  SELECT ... FOR UPDATE does not work..: New test case ha_ndbcluster.h, ha_ndbcluster.cc, NdbConnection.hpp: Fix for bug #21059  Server crashes on join query with large dataset with NDB tables: Releasing operation for each intermediate batch, before next call to trans->execute(NoCommit); 	6a3143e2a0a564ffe9c1d32c431b9ce93595c70c
----------------------------
BUG#21650 not_embedded_server fails --with-ndbcluster make test ignore NDB injector thread 	f575a1e44078b5300900632d8edf32280d2ab5d2
----------------------------
ndb_lock.test, ndb_lock.result: bug #18184  SELECT ... FOR UPDATE does not work..: New test case ha_ndbcluster.h, ha_ndbcluster.cc, NdbConnection.hpp: Fix for bug #21059  Server crashes on join query with large dataset with NDB tables: Releasing operation for each intermediate batch, before next call to trans->execute(NoCommit); 	2d16aa579619e1dc292b4026a7fb24ab2a8b0828
----------------------------
BUG#21648 information_schema test fails --with-ndbcluster make test work both with and without ndbcluster 	c306b4578e1cc484dd57dd049f7951cfb72d98ed
----------------------------
Bug#21327 OpenSSL-checking in configure - Change $d to $libs as suggested. - Thanks to Michael Prohm for the patch! 	91c2e68c2b97bd42bc27f596da2011709db8c736
----------------------------
BUG#18874 - Setting myisam_repair_threads > 1, index cardinality always 1 Fixed by moving update_key_parts() down to be after write_index(). 	d4bdba176f0377c8bff29856e69e7847f0fd3074
----------------------------
Bug#18875: Default value of tmp_table_size is meaningless It makes no sense to have a default tmp_table_size larger than the max_heap_table_size .  In usage, the tmp is ever limited to the max value, so I lowered the default tmp to the default max value. A great idea would be to emit a warning when the tmp_table_size is set to greater than max_heap_table_size . 	6e2c8bac4c339dd7f9c059f0f71d2ab3e2303b01
----------------------------
"mysqld --collation-server=xxx --character-set-server=yyy didn't work as expected: collation_server was set not to xxx, but to the default collation of character set ""yyy"". With different argument order it worked as expected: mysqld --character-set-server=yyy --collation-server=yyy Fix: initializate default_collation_name to 0 when processing --character-set-server only if --collation-server has not been specified in command line. "	4a63a64f1eda1872e9ad0ebcc193be6947271fb3
----------------------------
Merge a change from MySQL AB: # ChangeSet #   2006/07/30 05:16:08+04:00 aivanov@mysql.com #   Make innodb_thread_concurrency 0 by default. #    Fixing test result. # # mysql-test/r/innodb.result #   2006/07/30 05:16:05+04:00 aivanov@mysql.com +1 -1 #   Make innodb_thread_concurrency 0 by default. #    Fixing test result. 	03d5255baef8c7407c4c1e7d405c11c4151ddbff
----------------------------
Merge a change from MySQL AB (originally implemented by Marko in the 5.0 tree and now merged to the 5.1 tree): # ChangeSet #   2006/07/29 07:17:33+04:00 aivanov@mysql.com #   Make innodb_flush_log_at_trx_commit a settable global variable. # # sql/ha_innodb.cc #   2006/07/29 07:17:29+04:00 aivanov@mysql.com +1 -3 #   Remove innobase_flush_log_at_trx_commit #   (set srv_flush_log_at_trx_commit directly). # # sql/ha_innodb.h #   2006/07/29 07:17:29+04:00 aivanov@mysql.com +1 -1 #   Remove innobase_flush_log_at_trx_commit. #   Declare srv_flush_log_at_trx_commit. # # storage/innobase/include/srv0srv.h #   2006/07/29 07:17:30+04:00 aivanov@mysql.com +1 -1 #   Change the type of srv_flush_log_at_trx_commit. # # storage/innobase/srv/srv0srv.c #   2006/07/29 07:17:30+04:00 aivanov@mysql.com +1 -1 #   Change the type of srv_flush_log_at_trx_commit. # 	b689519f0b237c628074ffffa05d79ef6246f6e1
----------------------------
Fix for bug#21416 SP: Recursion level higher than zero needed for non-recursive call The following procedure was not possible if max_sp_recursion_depth is 0 create procedure show_proc() show create procedure show_proc; Actually there is no recursive call but the limit is checked. Solved by temporarily increasing the thread's limit just before the fetch from cache and decreasing after that. 	9c59cfe4d7fd6047212eb4e84aa2d657aea2134c
----------------------------
"Bug#18775 - Temporary table from alter table visible to other threads Continued implementation of WL#1324 (table name to filename encoding) The intermediate (not temporary) files of the new table during ALTER TABLE was visible for SHOW TABLES. These intermediate files are copies of the original table with the changes done by ALTER TABLE. After all the data is copied over from the original table, these files are renamed to the original tables file names. So they are not temporary files. They persist after ALTER TABLE, but just with another name. In 5.0 the intermediate files are invisible for SHOW TABLES because all file names beginning with ""#sql"" were suppressed. This failed since 5.1.6 because even temporary table names were converted when making file names from them. The prefix became converted to ""@0023sql"". Converting the prefix during SHOW TABLES would suppress the listing of user tables that start with ""#sql"". The solution of the problem is to continue the implementation of the table name to file name conversion feature. One requirement is to suppress the conversion for temporary table names. This change is straightforward for real temporary tables as there is a function that creates temporary file names. But the generated path names are located in TMPDIR and have no relation to the internal table name. This cannot be used for ALTER TABLE. Its intermediate files need to be in the same directory as the old table files. And it is necessary to be able to deduce the same path from the same table name repeatedly. Consequently the intermediate table files must be handled like normal tables. Their internal names shall start with tmp_file_prefix (#sql) and they shall not be converted like normal table names. I added a flags parameter to all relevant functions that are called from ALTER TABLE. It is used to suppress the conversion for the intermediate table files. The outcome is that the suppression of #sql in SHOW TABLES works again. It does not suppress user tables as these are converted to @0023sql on file level. This patch does also fix ALTER TABLE ... RENAME, which could not rename a table with non-ASCII characters in its name. It does also fix the problem that a user could create a table like `#sql-xxxx-yyyy`, where xxxx is mysqld's pid and yyyy is the thread ID of some other thread, which prevented this thread from running ALTER TABLE. Some of the above problems are mentioned in Bug 1405, which can be closed with this patch. This patch does also contain some minor fixes for other forgotten conversions. Still known problems are reported as bugs 21370, 21373, and 21387. "	8e4c36ad4afa35b07b15f3ebbcd51007e925125c
----------------------------
innodb.result: Set the default value of innodb_thread_concurrency to 8. This has already been changed in the MySQL source code tree. 	bebced25636d34fe73b4387fc9d88b0325ccd14f
----------------------------
Make innodb_thread_concurrency 0 by default. Fixing test result. 	885192654487cea6d3c1c64bd3e583e0d61e0477
----------------------------
configure.in: Corrected typo 	f2ec5d7128f3b154d22f0acc2199c6a10c0e3173
----------------------------
Add missing semicolon to wait_timeout test 	768a77d3c61c1e45fee57ac7b4df24931642c613
----------------------------
Make innodb_flush_log_at_trx_commit a settable global variable. 	0bd3c297a40b10ea48d97bda3ab71859b1427188
----------------------------
Make innodb_thread_concurrency 0 by default, and extend the usable range to 0..1000 (0 disables the thread throttling). 	7d3a584c03012681e6e15db50be84e04dbbc5ba6
----------------------------
Makefile.am, configure.in: Man page for mysqld command move to section 8 (bug#21220) 	2faea9832477756135da5f9600fbb24032f5a98b
----------------------------
BUG#21206: memory corruption when too many cursors are opened at once Too many cursors (more than 1024) could lead to memory corruption. This affects both, stored routines and C API cursors, and the threshold is per-server, not per-connection.  Similarly, the corruption could happen when the server was under heavy load (executing more than 1024 simultaneous complex queries), and this is the reason why this bug is fixed in 4.1, which doesn't support cursors. The corruption was caused by a bug in the temporary tables code, when an attempt to create a table could lead to a write beyond allocated space.  Note, that only internal tables were affected (the tables created internally by the server to resolve the query), not tables created with CREATE TEMPORARY TABLE.  Another pre-condition for the bug is TRUE value of --temp-pool startup option, which, however, is a default. The cause of a bug was that random memory was overwritten in bitmap_set_next() due to out-of-bound memory access. 	1917a99270248262f7420fc61a6f1f50bf03b9a6
----------------------------
Bug#21298 ndbcluster_log_schema_op locks already freed mutex - Disable 3 test cases that crashes slave 	705db761b96b876c62f3fbcee444381aeccb4e5e
----------------------------
Bug#16576 Patch to compile on GNU/Hurd (ps check in configure) - Thanks to Christian Hammers for the patch 	731d346f14c56f7aad24a215a57cce55eb16df53
----------------------------
BUG#21206: memory corruption when too many cursors are opened at once Too many cursors (more than 1024) could lead to memory corruption. This affects both, stored routines and C API cursors, and the threshold is per-server, not per-connection.  Similarly, the corruption could happen when the server was under heavy load (executing more than 1024 simultaneous complex queries), and this is the reason why this bug is fixed in 4.1, which doesn't support cursors. The corruption was caused by a bug in the temporary tables code, when an attempt to create a table could lead to a write beyond allocated space.  Note, that only internal tables were affected (the tables created internally by the server to resolve the query), not tables created with CREATE TEMPORARY TABLE.  Another pre-condition for the bug is TRUE value of --temp-pool startup option, which, however, is a default. The cause of a bug was that random memory was overwritten in bitmap_set_next() due to out-of-bound memory access. 	4e845cccc484f690556925daa6dd81cd83e5b3a8
----------------------------
BUG#19951: Race conditions in test wait_timeout. Fix random failures in test 'wait_timeout' that depend on exact timing. 1. Force a reconnect initially if necessary, as otherwise slow startup might have caused a connection timeout before the test can even start. 2. Explicitly disconnect the first connection to remove confusion about which connection aborts from timeout, causing test failure. 	5ea51287d69e54698246836d9286374187262e29
----------------------------
"A fix and a test case for Bug#17843 ""Certain stored procedures fail to run at startup"" The server returned an error when trying to execute init-file with a stored procedure that could return multiple result sets to the client. A stored procedure can return multiple result sets if it contains PREPARE, SELECT, SHOW and similar statements. The fix is to set client_capabilites|=CLIENT_MULTI_RESULTS in sql_parse.cc:handle_bootstrap(). There is no ""client"" really, so nothing is ever sent. This makes init-file feature behave consistently: the prepared statements that can be called directly in the init-file can be used in a stored procedure too. Re-committed the patch originally submitted by Per-Erik after review. "	b99e11c8bdfd27d8aa6f392205aead12bc7a0561
----------------------------
"Fix for bug#18437 ""Wrong values inserted with a before update trigger on NDB table"". SQL-layer was not marking fields which were used in triggers as such. As result these fields were not always properly retrieved/stored by handler layer. So one might got wrong values or lost changes in triggers for NDB, Federated and possibly InnoDB tables. This fix solves the problem by marking fields used in triggers appropriately. Also this patch contains the following cleanup of ha_ndbcluster code: We no longer rely on reading LEX::sql_command value in handler in order to determine if we can enable optimization which allows us to handle REPLACE statement in more efficient way by doing replaces directly in write_row() method without reporting error to SQL-layer. Instead we rely on SQL-layer informing us whether this optimization applicable by calling handler::extra() method with HA_EXTRA_WRITE_CAN_REPLACE flag. As result we no longer apply this optimzation in cases when it should not be used (e.g. if we have on delete triggers on table) and use in some additional cases when it is applicable (e.g. for LOAD DATA REPLACE). Finally this patch includes fix for bug#20728 ""REPLACE does not work correctly for NDB table with PK and unique index"". This was yet another problem which was caused by improper field mark-up. During row replacement fields which weren't explicity used in REPLACE statement were not marked as fields to be saved (updated) so they have retained values from old row version. The fix is to mark all table fields as set for REPLACE statement. Note that in 5.1 we already solve this problem by notifying handler that it should save values from all fields only in case when real replacement happens. "	d4450e66964e14ac85bc40c567a510dd86353f60
----------------------------
"Added -DHAVE_MUTEX_THREAD_ONLY to fix that bdb doesn't crash with ""unable to initialize mutex"" "	500dd048b9f5159bb56b8c0b62c7ee2ac81d2065
----------------------------
"BUG#20739. In the Windows build files, the ""Max nt"" configuration for some reason had the mysql_client_test project disabled. Enable it. "	10abc3e244f4423af9c38fecb81c93a6ed2c86fe
----------------------------
BUG#20739 Improved definition of mysys configuration for -nt builds. 	e8df7d43a5d0b17a1b0dd951ab759402b2e6c55a
----------------------------
BUG#20739: __NT__ not probably defined for mysys project. Make sure for the mysys project that __NT__ is defined in *nt solution configurations (but not in other configurations). 	529a2d1291f972cb26af0749a09272e40f725d5b
----------------------------
Adding __NT__ to Max Win32 configuration. 	c18a4e36f422856313544af6e3b3f171e25f5228
----------------------------
Fix race condition in test case wait_timeout. Sometimes the helper connection (that is watching for the main connection to time out) would itself time out first, causing the test to fail. 	34cf139bd933cc2805d285dc4a243e5275ec3f56
----------------------------
"Bug#15276: MySQL ignores collation-server Problem: mysqld --collation-server=xxx --character-set-server=yyy didn't work as expected: collation_server was set not to xxx, but to the default collation of character set ""yyy"". With different argument order it worked as expected: mysqld --character-set-server=yyy --collation-server=yyy Fix: initializate default_collation_name to 0 when processing --character-set-server only if --collation-server has not been specified in command line. "	ee8fd1e3b5ad0581ef3ce0e1a528b532bd77ddad
----------------------------
Remove compiler warnings Fixed wrong table flags type in ndbcluster that caused previous commit to fail 	4697deb43629d9ae9f087d84cb4bb933a96f7eb1
----------------------------
Bug#20588: mysqldump.test may fail, depending on system-wide configuration mysqldump.test calls my_print_defaults in a way that includes the systemwide my.cnf, so the results will be beyond our control and depend on whatever the user has in their my.cnf, namely the [mysqldump] section. call my_print_defaults with --config-file rather than --defaults-extra-file to prevent inclusion of system-wide defaults and use our config-file only. 	701a4f18d1de42c426259c085b165a9a435cc72b
----------------------------
"make_win_src_distribution.sh: Removed reference to missing ""tools"" directory mysql.spec.sh: Changed flag --with-yassl => --with-ssl Reverted accidental removal of the ""make"" call :-) Configure --with-embedded-server Corrected path to ""libtool"" command Corrected path to ""libmysqld.a"" Removed references to ""safe_mysqld"" "	34d82f0bc63de81029a19d538c3e533d7e3b9418
----------------------------
WL#3015: Logging Improvements - No Restarts(ver N4) Added slow_query_log & general_log global upadatable variables. Added slow-query-log & general-log startup options. Added log_output, general_log_file, slow_query_log_file global updatable variables. 	1d72c66c1be4fad8f49f4254ce6e8ca1f44c7606
----------------------------
configure.in, net_serv.cc, compile-netware-END: Changes for Netware 	392bb51f258605d9337845e49a09633a46c3fd66
----------------------------
"Bug#18775 - Temporary table from alter table visible to other threads The intermediate (not temporary) files of the new table during ALTER TABLE was visible for SHOW TABLES. These intermediate files are copies of the original table with the changes done by ALTER TABLE. After all the data is copied over from the original table, these files are renamed to the original tables file names. So they are not temporary files. They persist after ALTER TABLE, but just with another name. Normal GRANT checking takes place for the intermediate table. Everyone who can see the original table (and hence the final table) can also see the intermediate table. But noone else. In 5.0 the intermediate files are invisible for SHOW TABLES because all file names beginning with ""#sql"" were suppressed. In 5.1 temporary files are created in TMPDIR, so that they don't appear in the database directories. Also in 5.1 a translation between table names and file names is done. The tmp_file_prefix on file level is now ""@0023sql"". The suppression of files starting with tmp_file_prefix is still in place, but still only files beginning with ""#sql"" were suppressed. I do now translate tmp_file_prefix from table name to file name before comparing it with the files in a directory. This suppresses the intermediate files again. No test case. The test case looks so that a reasonable big table is altered while a second thread runs SHOW TABLES. This in itself would be possible to do, but on slow machines it would add too much time to the test suite, while on fast machines the ALTER TABLE might have finished before SHOW TABLES looks at the directory. Even if there might be a good balance for todays machines, one day the test would become void as the intermediate table would not be seen even with the bug in place. I added a test script to the bug report. It can easily be changed so that it uses a table size that is appropriate for the test machine. "	4c52d3ddf162b8aed2c810d4a4e714eaffdc6dae
----------------------------
Add extra parameter to 'ndbcluster_wait_started' so it can be used to wait until ndb_mgmd has started 	00d7da9177c78e7c567f3279e05dfb8280f16ab9
----------------------------
don't call plugins' configure scripts manually, use AC_CONFIG_SUBDIRS don't add CFLAGS/CXXFLAGS to ./configure command line in config.status but _do_ add them before calling plugins' configure scripts 	3c609f0aa3f84cb4b443466fe1120b2c763264d3
----------------------------
Added flag to detect renaming of fields (not supported as fast alter table for ndbcluster): psot review comment: cleared flag before checking 	5660fa6b46f2f8ace3423e7969e21a847c3467ed
----------------------------
Added flag to detect renaming of fields (not supported as fast alter table for ndbcluster): added test case 	de28afe25b2c470a7bfe75e79edb10fd2c6b1722
----------------------------
Added flag to detect renaming of fields (not supported as fast alter table for ndbcluster) 	a6ebed7cea2194268f24a2440ebba7bd2588ed43
----------------------------
"Bug#20168 ""--default-storage-engine=XXX"" doesn't work typo in the code and forgotten changes "	e6d763befe53486135716cdff440db4249fcce3f
----------------------------
"Merge changes from MySQL AB: innodb_mysql.test, innodb_mysql.result: Bug #16798: Uninitialized row buffer reads in ref-or-null optimizer Bug #12882: min/max inconsistent on empty table Test of behaviour with CREATE ... SELECT Moved from group_min_max.test: Bug #12672: primary key implicitly included in every innodb index Bug #6142: a problem with empty innodb table Bug #9798: group by with rollup ChangeSet@2006/06/01 21:47:15+03:00 bell@sanja.is.com.ua #   interface for transaction log management added to handlerton #   iterators creation interface added to handlerton ha_innodb.cc: Add get_log_status = create_iterator = NULL ChangeSet@2006/06/04 18:52:22+03:00 monty@mysql.com #   This changeset is largely a handler cleanup changeset (WL#3281), #   but includes fixes and cleanups that was found necessary while #   testing the handler changes # sql/ha_innodb.h #   2006/06/04 18:52:09+03:00 monty@mysql.com +6 -13 #   Update to 'newer' table handler interface #   - table_flags are now ulonglong #   - Added reset() method #   - Removed not needed ha_retrieve_all_cols() and ha_retrieve_all_pk() #     columns. #   - Made build_template() a class function to be able to easier access #     class variables # sql/ha_innodb.cc #   2006/06/04 18:52:09+03:00 monty@mysql.com +37 -44 #   Update to 'newer' table handler interface #   - Update innobase_create_handler() to new interface #   - Removed HA_NOT_EXACT_COUNT (not needed) #   - Renamed HA_PRIMARY_KEY_ALLOW_RANDOM_ACCESS #     to HA_PRIMARY_KEY_REQUIRED_FOR_POSITION. #   - Prefixed base status variables with 'stats' #   - Use table column bitmaps instead of ha_get_bit_in_read_set() #   - Added ::reset(), with code from ::extra(HA_EXTRA_RESET) #   - Removed HA_EXTRA_RETRIVE_ALL_COLS and HA_EXTRA_RETRIEVE_PRIMARY_KEY as #     the table->read_set and table->write_set bitmaps now are accurate ChangeSet@2006/06/02 22:21:32+02:00 guilhem@mysql.com #   First push for WL#3146 ""less locking in auto_increment"". It is a #   0-real-change patch. #   New prototype for get_auto_increment() (but new arguments not yet used), #   to be able to reserve a finite interval of auto_increment values from #   cooperating engines. #   A hint on how many values to reserve is found in #   handler::estimation_rows_to_insert, #   filled by ha_start_bulk_insert(), new wrapper around start_bulk_insert(). #   NOTE: this patch changes nothing, for all engines. #   But it makes the API ready for those #   engines which will want to do reservation. #   More csets will come to complete WL#3146. ha_innodb.h, ha_innodb.cc: update to new prototype of get_auto_increment ChangeSet@2006/05/28 14:51:01+02:00 serg@sergbook.mysql.com #   handlerton cleanup: #   duplicate fields removed, st_mysql_storage_engine added to support #   run-time handlerton initialization (no compiler warnings), handler API #   is now tied to MySQL version, handlerton->plugin mapping added #   (slot-based), dummy default_hton removed, plugin-type-specific #   initialization generalized, built-in plugins are now initialized too, #   --default-storage-engine no longer needs a list of storage engines #   in handle_options(). # # sql/ha_innodb.h #   2006/05/28 14:50:53+02:00 serg@sergbook.mysql.com +1 -1 #   handlerton cleanup: remove duplicate fields, add st_mysql_storage_engine, #   initialize handlerton run-time to avoid compiler warnings # # sql/ha_innodb.cc #   2006/05/28 14:50:53+02:00 serg@sergbook.mysql.com +37 -52 #   handlerton cleanup: remove duplicate fields, add st_mysql_storage_engine, #   initialize handlerton run-time to avoid compiler warnings ChangeSet@2006/06/01 23:59:34+02:00 serg@serg.mylan #   second patch for make distcheck ha_innodb.cc: enclose in #ifdef WITH_INNOBASE_STORAGE_ENGINE / #endif "	1ed1ede9ea60681b301fc7c808659a63ee6a0f46
----------------------------
"Bug#20168 ""Change in behavior --default-storage-engine=ndb or ndbcluster"" Reduce use of legacy_db_type, some code cleanup (serg read my mind and implemented desired mysqld.cc changes) "	62729fcdfe5d46b6c6b1af11fb376bb49be022c1
----------------------------
sql_delete.cc: Bug #18864  TRUNCATE TABLE doesn't reset AUTO_INCREMENT value on ndb table: locked lock_OPEN mutex to support TRUNCATE with re-create and cluster binlog Many files: Bug #18864  TRUNCATE TABLE doesn't reset AUTO_INCREMENT value on ndb table: adaption to MySQ Cluster replication ndb_lock.result, ha_ndbcluster.cc: Fix for Bug #18184  SELECT ... FOR UPDATE does not work..: Adaption to 5.1 code NdbDictionaryImpl.hpp: Fix of bad merge 	38a445fee1a9213cd62a660c1bb6db60fe8cf502
----------------------------
Bug#19517 No simple way to detect wether server was compiled with libdbug - Define DBUG_ON and DBUG_OFF in config.h 	4ca95f911a5e5c74bb3fcb1141d1ddd065aa9ed0
----------------------------
Add comment about when ndbcluster tables are removed from mysqld datadir 	c7bedca12f84008cedc6249d452010d32d1abadc
----------------------------
Bug #13266 Online adding of MySQLD causes cluster to crash - check node type, if configuration has not bee updated, type will be undefined, and conenction will be refused 	5af1d8de07f9e6673fcd40f7298205f952f13e3b
----------------------------
BUG#12982 - LOAD DATA fails without any error for big files with big read buffer Setting read buffer to values greater than SSIZE_MAX results in unexpected behavior. According to read(2) manual: If count is greater than SSIZE_MAX, the result is unspecified. Set upper limit for read_buffer_size and read_rnd_buffer_size to SSIZE_MAX. 	036f947be7caf20a22b52b6d3b8a66f2411f24e9
----------------------------
Re-apply missing changeset, orignally pushed by jmiller RPL Test cleanup of options that are not needed when using ndbcluster with binlog. The binlog is forced to row just by connecting to a cluster 	3951e65e913aa90910bf9771859957567269e452
----------------------------
"Re-apply missing changeset, orignally pushed by elliot Add define YASSL_PREFIX when compiling yassl Import patch from yaSSL - avoid allocating memory for each call to 'EVP_md5' and 'EVP_des_ede3_cbc' which were not released until server was stopped - Those functions are used from the SQL function 'des_encrypt' and 'des_decrypt'. Add new define YASSL_PREFIX beforee including ssl.h to activate inclusion of prefix_*.h files Bug#20022 mysql-test-run can't be run with secure connections turned on for all testcases - Part 1, fixes rpl- and federated-tests where connection is made to 127.0.0.1 - Include prefix files that renames all public functions in yaSSLs OpenSSL API to ya<function_name>. They will otherwise conflict with OpenSSL functions if loaded by an application that uses OpenSSL as well as libmysqlclient with yaSSL support. Bug#18235: assertion/crash when windows mysqld is ended with ctrl-c Two threads both try a shutdown sequence which creates a race to the de-init/free of certain resources. This exists in similar form in the client as 17926: ""mysql.exe crashes when ctrl-c is pressed in windows."" Update after merge to 5.0 BUG#18669: Session COM_STATISTICS breaks mysqladmin status. Changed COM_STATISTICS to display the global status, instead of thead status, for slow queries and table opens. - In function 'handle_grant_struct' when searching the memory structures for an entry to modify, convert all entries here host.hostname is NULL to """" and compare that with the host passed in argument ""user_from"". - A user created with hostname """" is stored in ""mysql.user"" table as host="""" but when loaded into memory it'll be stored as host.hostname NULL. Specifiying """" as hostname means that ""any host"" can connect. Thus is's correct to turn on allow_all_hosts when such a user is found. - Review and fix other places where host.hostname may be NULL. BUG#19394 OPT_INNODB_THREAD_CONCURRENCY duplicated Removed duplication (not a user-visible change) "	e50412ef38a722271b6d12be14ff517bf3310162
----------------------------
Bug#17661 information_schema.SCHEMATA returns uppercase with lower_case_table_names = 1 fix: return db name for I_S.TABLES(and others) in original letter case. if mysql starts with lower_case_table_names=1 | 2 then original db name is converted to lower case(for I_S tables). It happens when we perform add_table_to_list. to avoid this we make a copy of original db name and use the copy hereafter. 	03d8717ac8d0d2638df76a51228050ad79a17ec8
----------------------------
"This changeset is largely a handler cleanup changeset (WL#3281), but includes fixes and cleanups that was found necessary while testing the handler changes Changes that requires code changes in other code of other storage engines. (Note that all changes are very straightforward and one should find all issues by compiling a --debug build and fixing all compiler errors and all asserts in field.cc while running the test suite), - New optional handler function introduced: reset() This is called after every DML statement to make it easy for a handler to statement specific cleanups. (The only case it's not called is if force the file to be closed) - handler::extra(HA_EXTRA_RESET) is removed. Code that was there before should be moved to handler::reset() - table->read_set contains a bitmap over all columns that are needed in the query.  read_row() and similar functions only needs to read these columns - table->write_set contains a bitmap over all columns that will be updated in the query. write_row() and update_row() only needs to update these columns. The above bitmaps should now be up to date in all context (including ALTER TABLE, filesort()). The handler is informed of any changes to the bitmap after fix_fields() by calling the virtual function handler::column_bitmaps_signal(). If the handler does caching of these bitmaps (instead of using table->read_set, table->write_set), it should redo the caching in this code. as the signal() may be sent several times, it's probably best to set a variable in the signal and redo the caching on read_row() / write_row() if the variable was set. - Removed the read_set and write_set bitmap objects from the handler class - Removed all column bit handling functions from the handler class. (Now one instead uses the normal bitmap functions in my_bitmap.c instead of handler dedicated bitmap functions) - field->query_id is removed. One should instead instead check table->read_set and table->write_set if a field is used in the query. - handler::extra(HA_EXTRA_RETRIVE_ALL_COLS) and handler::extra(HA_EXTRA_RETRIEVE_PRIMARY_KEY) are removed. One should now instead use table->read_set to check for which columns to retrieve. - If a handler needs to call Field->val() or Field->store() on columns that are not used in the query, one should install a temporary all-columns-used map while doing so. For this, we provide the following functions: my_bitmap_map *old_map= dbug_tmp_use_all_columns(table, table->read_set); field->val(); dbug_tmp_restore_column_map(table->read_set, old_map); and similar for the write map: my_bitmap_map *old_map= dbug_tmp_use_all_columns(table, table->write_set); field->val(); dbug_tmp_restore_column_map(table->write_set, old_map); If this is not done, you will sooner or later hit a DBUG_ASSERT in the field store() / val() functions. (For not DBUG binaries, the dbug_tmp_restore_column_map() and dbug_tmp_restore_column_map() are inline dummy functions and should be optimized away be the compiler). - If one needs to temporary set the column map for all binaries (and not just to avoid the DBUG_ASSERT() in the Field::store() / Field::val() methods) one should use the functions tmp_use_all_columns() and tmp_restore_column_map() instead of the above dbug_ variants. - All 'status' fields in the handler base class (like records, data_file_length etc) are now stored in a 'stats' struct. This makes it easier to know what status variables are provided by the base handler.  This requires some trivial variable names in the extra() function. - New virtual function handler::records().  This is called to optimize COUNT(*) if (handler::table_flags() & HA_HAS_RECORDS()) is true. (stats.records is not supposed to be an exact value. It's only has to be 'reasonable enough' for the optimizer to be able to choose a good optimization path). - Non virtual handler::init() function added for caching of virtual constants from engine. - Removed has_transactions() virtual method. Now one should instead return HA_NO_TRANSACTIONS in table_flags() if the table handler DOES NOT support transactions. - The 'xxxx_create_handler()' function now has a MEM_ROOT_root argument that is to be used with 'new handler_name()' to allocate the handler in the right area.  The xxxx_create_handler() function is also responsible for any initialization of the object before returning. For example, one should change: static handler *myisam_create_handler(TABLE_SHARE *table) { return new ha_myisam(table); } -> static handler *myisam_create_handler(TABLE_SHARE *table, MEM_ROOT *mem_root) { return new (mem_root) ha_myisam(table); } - New optional virtual function: use_hidden_primary_key(). This is called in case of an update/delete when (table_flags() and HA_PRIMARY_KEY_REQUIRED_FOR_DELETE) is defined but we don't have a primary key. This allows the handler to take precisions in remembering any hidden primary key to able to update/delete any found row. The default handler marks all columns to be read. - handler::table_flags() now returns a ulonglong (to allow for more flags). - New/changed table_flags() - HA_HAS_RECORDS	    Set if ::records() is supported - HA_NO_TRANSACTIONS	    Set if engine doesn't support transactions - HA_PRIMARY_KEY_REQUIRED_FOR_DELETE Set if we should mark all primary key columns for read when reading rows as part of a DELETE statement. If there is no primary key, all columns are marked for read. - HA_PARTIAL_COLUMN_READ  Set if engine will not read all columns in some cases (based on table->read_set) - HA_PRIMARY_KEY_ALLOW_RANDOM_ACCESS Renamed to HA_PRIMARY_KEY_REQUIRED_FOR_POSITION. - HA_DUPP_POS              Renamed to HA_DUPLICATE_POS - HA_REQUIRES_KEY_COLUMNS_FOR_DELETE Set this if we should mark ALL key columns for read when when reading rows as part of a DELETE statement. In case of an update we will mark all keys for read for which key part changed value. - HA_STATS_RECORDS_IS_EXACT Set this if stats.records is exact. (This saves us some extra records() calls when optimizing COUNT(*)) - Removed table_flags() - HA_NOT_EXACT_COUNT     Now one should instead use HA_HAS_RECORDS if handler::records() gives an exact count() and HA_STATS_RECORDS_IS_EXACT if stats.records is exact. - HA_READ_RND_SAME	   Removed (no one supported this one) - Removed not needed functions ha_retrieve_all_cols() and ha_retrieve_all_pk() - Renamed handler::dupp_pos to handler::dup_pos - Removed not used variable handler::sortkey Upper level handler changes: - ha_reset() now does some overall checks and calls ::reset() - ha_table_flags() added. This is a cached version of table_flags(). The cache is updated on engine creation time and updated on open. MySQL level changes (not obvious from the above): - DBUG_ASSERT() added to check that column usage matches what is set in the column usage bit maps. (This found a LOT of bugs in current column marking code). - In 5.1 before, all used columns was marked in read_set and only updated columns was marked in write_set. Now we only mark columns for which we need a value in read_set. - Column bitmaps are created in open_binary_frm() and open_table_from_share(). (Before this was in table.cc) - handler::table_flags() calls are replaced with handler::ha_table_flags() - For calling field->val() you must have the corresponding bit set in table->read_set. For calling field->store() you must have the corresponding bit set in table->write_set. (There are asserts in all store()/val() functions to catch wrong usage) - thd->set_query_id is renamed to thd->mark_used_columns and instead of setting this to an integer value, this has now the values: MARK_COLUMNS_NONE, MARK_COLUMNS_READ, MARK_COLUMNS_WRITE Changed also all variables named 'set_query_id' to mark_used_columns. - In filesort() we now inform the handler of exactly which columns are needed doing the sort and choosing the rows. - The TABLE_SHARE object has a 'all_set' column bitmap one can use when one needs a column bitmap with all columns set. (This is used for table->use_all_columns() and other places) - The TABLE object has 3 column bitmaps: - def_read_set     Default bitmap for columns to be read - def_write_set    Default bitmap for columns to be written - tmp_set          Can be used as a temporary bitmap when needed. The table object has also two pointer to bitmaps read_set and write_set that the handler should use to find out which columns are used in which way. - count() optimization now calls handler::records() instead of using handler->stats.records (if (table_flags() & HA_HAS_RECORDS) is true). - Added extra argument to Item::walk() to indicate if we should also traverse sub queries. - Added TABLE parameter to cp_buffer_from_ref() - Don't close tables created with CREATE ... SELECT but keep them in the table cache. (Faster usage of newly created tables). New interfaces: - table->clear_column_bitmaps() to initialize the bitmaps for tables at start of new statements. - table->column_bitmaps_set() to set up new column bitmaps and signal the handler about this. - table->column_bitmaps_set_no_signal() for some few cases where we need to setup new column bitmaps but don't signal the handler (as the handler has already been signaled about these before). Used for the momement only in opt_range.cc when doing ROR scans. - table->use_all_columns() to install a bitmap where all columns are marked as use in the read and the write set. - table->default_column_bitmaps() to install the normal read and write column bitmaps, but not signaling the handler about this. This is mainly used when creating TABLE instances. - table->mark_columns_needed_for_delete(), table->mark_columns_needed_for_delete() and table->mark_columns_needed_for_insert() to allow us to put additional columns in column usage maps if handler so requires. (The handler indicates what it neads in handler->table_flags()) - table->prepare_for_position() to allow us to tell handler that it needs to read primary key parts to be able to store them in future table->position() calls. (This replaces the table->file->ha_retrieve_all_pk function) - table->mark_auto_increment_column() to tell handler are going to update columns part of any auto_increment key. - table->mark_columns_used_by_index() to mark all columns that is part of an index.  It will also send extra(HA_EXTRA_KEYREAD) to handler to allow it to quickly know that it only needs to read colums that are part of the key.  (The handler can also use the column map for detecting this, but simpler/faster handler can just monitor the extra() call). - table->mark_columns_used_by_index_no_reset() to in addition to other columns, also mark all columns that is used by the given key. - table->restore_column_maps_after_mark_index() to restore to default column maps after a call to table->mark_columns_used_by_index(). - New item function register_field_in_read_map(), for marking used columns in table->read_map. Used by filesort() to mark all used columns - Maintain in TABLE->merge_keys set of all keys that are used in query. (Simplices some optimization loops) - Maintain Field->part_of_key_not_clustered which is like Field->part_of_key but the field in the clustered key is not assumed to be part of all index. (used in opt_range.cc for faster loops) -  dbug_tmp_use_all_columns(), dbug_tmp_restore_column_map() tmp_use_all_columns() and tmp_restore_column_map() functions to temporally mark all columns as usable.  The 'dbug_' version is primarily intended inside a handler when it wants to just call Field:store() & Field::val() functions, but don't need the column maps set for any other usage. (ie:: bitmap_is_set() is never called) - We can't use compare_records() to skip updates for handlers that returns a partial column set and the read_set doesn't cover all columns in the write set. The reason for this is that if we have a column marked only for write we can't in the MySQL level know if the value changed or not. The reason this worked before was that MySQL marked all to be written columns as also to be read. The new 'optimal' bitmaps exposed this 'hidden bug'. - open_table_from_share() does not anymore setup temporary MEM_ROOT object as a thread specific variable for the handler. Instead we send the to-be-used MEMROOT to get_new_handler(). (Simpler, faster code) Bugs fixed: - Column marking was not done correctly in a lot of cases. (ALTER TABLE, when using triggers, auto_increment fields etc) (Could potentially result in wrong values inserted in table handlers relying on that the old column maps or field->set_query_id was correct) Especially when it comes to triggers, there may be cases where the old code would cause lost/wrong values for NDB and/or InnoDB tables. - Split thd->options flag OPTION_STATUS_NO_TRANS_UPDATE to two flags: OPTION_STATUS_NO_TRANS_UPDATE and OPTION_KEEP_LOG. This allowed me to remove some wrong warnings about: ""Some non-transactional changed tables couldn't be rolled back"" - Fixed handling of INSERT .. SELECT and CREATE ... SELECT that wrongly reset (thd->options & OPTION_STATUS_NO_TRANS_UPDATE) which caused us to loose some warnings about ""Some non-transactional changed tables couldn't be rolled back"") - Fixed use of uninitialized memory in ha_ndbcluster.cc::delete_table() which could cause delete_table to report random failures. - Fixed core dumps for some tests when running with --debug - Added missing FN_LIBCHAR in mysql_rm_tmp_tables() (This has probably caused us to not properly remove temporary files after crash) - slow_logs was not properly initialized, which could maybe cause extra/lost entries in slow log. - If we get an duplicate row on insert, change column map to read and write all columns while retrying the operation. This is required by the definition of REPLACE and also ensures that fields that are only part of UPDATE are properly handled.  This fixed a bug in NDB and REPLACE where REPLACE wrongly copied some column values from the replaced row. - For table handler that doesn't support NULL in keys, we would give an error when creating a primary key with NULL fields, even after the fields has been automaticly converted to NOT NULL. - Creating a primary key on a SPATIAL key, would fail if field was not declared as NOT NULL. Cleanups: - Removed not used condition argument to setup_tables - Removed not needed item function reset_query_id_processor(). - Field->add_index is removed. Now this is instead maintained in (field->flags & FIELD_IN_ADD_INDEX) - Field->fieldnr is removed (use field->field_index instead) - New argument to filesort() to indicate that it should return a set of row pointers (not used columns). This allowed me to remove some references to sql_command in filesort and should also enable us to return column results in some cases where we couldn't before. - Changed column bitmap handling in opt_range.cc to be aligned with TABLE bitmap, which allowed me to use bitmap functions instead of looping over all fields to create some needed bitmaps. (Faster and smaller code) - Broke up found too long lines - Moved some variable declaration at start of function for better code readability. - Removed some not used arguments from functions. (setup_fields(), mysql_prepare_insert_check_table()) - setup_fields() now takes an enum instead of an int for marking columns usage. - For internal temporary tables, use handler::write_row(), handler::delete_row() and handler::update_row() instead of handler::ha_xxxx() for faster execution. - Changed some constants to enum's and define's. - Using separate column read and write sets allows for easier checking of timestamp field was set by statement. - Remove calls to free_io_cache() as this is now done automaticly in ha_reset() - Don't build table->normalized_path as this is now identical to table->path (after bar's fixes to convert filenames) - Fixed some missed DBUG_PRINT(..""%lx"") to use ""0x%lx"" to make it easier to do comparision with the 'convert-dbug-for-diff' tool. Things left to do in 5.1: - We wrongly log failed CREATE TABLE ... SELECT in some cases when using row based logging (as shown by testcase binlog_row_mix_innodb_myisam.result) Mats has promised to look into this. - Test that my fix for CREATE TABLE ... SELECT is indeed correct. (I added several test cases for this, but in this case it's better that someone else also tests this throughly). Lars has promosed to do this. "	74cc73d4619c94ceb1b93725b1bba7b802f2290d
----------------------------
unittest: rename *.t* to *-t* to be automake-friendly simplify Makefiles test_atomic.c: move to unittest, add GPL comment, fix warnings, convert to tap framework. configure: remove custom tests for available types, use AC_CHECK_TYPE instead x86-gcc.h: fix gcc -ansi errors while maintaining readability ignore: added *-t 	5409997d49a8c228f1a6a2c029572fcf1f221caf
----------------------------
"Applied innodb-5.1-ss594 snapshot. Fixed BUG#19542 ""InnoDB doesn't increase the Handler_read_prev couter"". Fixed BUG#19609 ""Case sensitivity of innodb_data_file_path gives stupid error"". Fixed BUG#19727 ""InnoDB crashed server and crashed tables are ot recoverable"". Also: * Remove remnants of the obsolete concept of memoryfixing tables and indexes. * Remove unused dict_table_LRU_trim(). * Remove unused 'trx' parameter from dict_table_get_on_id_low(), dict_table_get(), dict_table_get_and_increment_handle_count(). * Add a normal linked list implementation. * Add a work queue implementation. * Add 'level' parameter to mutex_create() and rw_lock_create(). Remove mutex_set_level() and rw_lock_set_level(). * Rename SYNC_LEVEL_NONE to SYNC_LEVEL_VARYING. * Add support for bound ids in InnoDB's parser. * Define UNIV_BTR_DEBUG for enabling consistency checks of FIL_PAGE_NEXT and FIL_PAGE_PREV when accessing sibling pages of B-tree indexes. btr_validate_level(): Check the validity of the doubly linked list formed by FIL_PAGE_NEXT and FIL_PAGE_PREV. * Adapt InnoDB to the new tablename to filename encoding in MySQL 5.1. ut_print_name(), ut_print_name1(): Add parameter 'table_id' for distinguishing names of tables from other identifiers. New: innobase_convert_from_table_id(), innobase_convert_from_id(), innobase_convert_from_filename(), innobase_get_charset. dict_accept(), dict_scan_id(), dict_scan_col(), dict_scan_table_name(), dict_skip_word(), dict_create_foreign_constraints_low(): Add parameter 'cs' so that isspace() can be replaced with my_isspace(), whose operation depends on the connection character set. dict_scan_id(): Convert identifier to UTF-8. dict_str_starts_with_keyword(): New extern function, to replace dict_accept() in row_search_for_mysql(). mysql_get_identifier_quote_char(): Replaced with innobase_print_identifier(). ha_innobase::create(): Remove the thd->convert_strin() call. Pass the statement to InnoDB in the connection character set and let InnoDB convert the identifier to UTF-8. * Add max_row_size to dict_table_t. * btr0cur.c btr_copy_externally_stored_field(): Only set the 'offset' variable when needed. * buf0buf.c buf_page_io_complete(): Write to the error log if the page number or the space id o the disk do not match those in memory. Also write to the error log if a page was read from the doublewrite buffer. The doublewrite buffer should be only read by the lower-level function fil_io() at database startup. * dict0dict.c dict_scan_table_name(): Remove fallback to differently encoded name when the table is not found. The encoding is handled at a higher level. * ha_innodb.cc Increment statistic counter in ha_innobase::index_prev() (bug 19542). Add innobase_convert_string wrapper function and a new file ha_prototypes.h. innobase_print_identifier(): Remove TODO comment before calling get_quote_char_for_identifier(). That function apparently assumes the identifier to be encoded in UTF-8. * ibuf0ibuf.c|h ibuf_count_get(), ibuf_counts[], ibuf_count_inited(): Define these only #ifdef UNIV_IBUF_DEBUG. Previously, when compiled without UNIV_IBUF_DEBUG, invoking ibuf_count_get() would crash InnoDB. The function is only being called #ifdef UNIV_IBUF_DEBUG. * innodb.result Adjust the results for changes in the foreign key error messages. * mem0mem.c|h New: mem_heap_dup(), mem_heap_printf(), mem_heap_cat(). * os0file.c Check the page trailers also after writing to disk. This improves chances of diagnosing bug 18886. os_file_check_page_trailers(): New function for checking that the two copies of the LSN stamped on the page match. os_aio_simulated_handle(): Call os_file_check_page_trailers() before and after os_file_write(). * row0mysql.c Move trx_commit_for_mysql(trx) calls before calls to row_mysql_unlock_data_dictionary(trx) (bug 19727). * row0sel.c row_fetch_print(): Handle SQL NULL values without crashing. row_sel_store_mysql_rec(): Remove useless call to rec_get_nth_field when handling an externally stored column. Fetch externally stored fields when using InnoDB's internal SQL parser. Optimize BLOB selects by using prebuilt->blob_heap directly instead of first reading BLOB data to a temporary heap and then copying it to prebuilt->blob_heap. * srv0srv.c srv_master_thread(): Remove unreachable code. * srv0start.c srv_parse_data_file_paths_and_sizes(): Accept lower-case 'm' and 'g' as abbreviations of megabyte and gigabyte (bug 19609). srv_parse_megabytes(): New fuction. * ut0dbg.c|h Implement InnoDB assertions (ut_a and ut_error) with abort() when the code is compiled with GCC 3 or later on other platforms than Windows or Netware. Also disable the variable ut_dbg_stop_threads and the function ut_dbg_stop_thread() i this case, unless UNIV_SYC_DEBUG is defined. This should allow the compiler to generate more compact code for assertions. * ut0list.c|h Add ib_list_create_heap(). "	1d7de700e222fe061b408e3cc6cb9c9f6646df50
----------------------------
"Bug#12096 ""Add line for non-executable stack in .s files"" Fix so that configure will use ""--noexecstack"" for assembler if gcc supports option and compiled C doesn't need executable stack. "	23e612ae11d8b88e8616871d967d1442c44e188b
----------------------------
handlerton cleanup: duplicate fields removed, st_mysql_storage_engine added to support run-time handlerton initialization (no compiler warnings), handler API is now tied to MySQL version, handlerton->plugin mapping added (slot-based), dummy default_hton removed, plugin-type-specific initialization generalized, built-in plugins are now initialized too, --default-storage-engine no longer needs a list of storage engines in handle_options(). mysql-test-run.pl bugfixes 	fe97dbb5879cbb143ee288350ca86d618889731f
----------------------------
BUG#15868 InnoDB thread thrashing Restoring default innodb_thread_concurrency to 8 This default now matches 5.0 	9ab5929eba8d320707ed6ece1930f702dabf84ba
----------------------------
configure.in: Update NDB version as well 	7ffc78668691bc9d45f7ca756a82e4ed57f78b42
----------------------------
configure.in: Stepped up to 5.0.23 	22a52ede3f04cc02736996d0c06f76a6b1f3cd69
----------------------------
configure.in: Stepped up to 4.1.22 	eb627531f3eb71b47507418976472859046cc28e
----------------------------
configure.in: Changed version to 5.0.22 	0b10712033b3f9ba607d0e4cb0301214a9bdcb15
----------------------------
configure.in: Updated release number 4.1.16a 	3be04952990c90654d9ad180f92819dd2e2a98f1
----------------------------
configure.in: Changed version to 5.0.17c 	5095d77f00943b6d401df4c41c21ae965b477b09
----------------------------
Make wait_timeout test not timing dependent 	9580c05ccc09ec2a15c3e884ad933b5620e056b0
----------------------------
"Bug #18742: Test 'group_min_max' fails if ""classic"" configuration in 5.0 Moved the InnoDB related tests to innodb_mysql "	d81a8437e4c279fb8212b8bbe5300a0e11d877a5
----------------------------
Bug#20002 Old --with-openssl and --with-yassl options just silently ignored - Terminate configure with error(and message) if --with-yassl or --with-openssl is used. 	5df9964651f7027178b16a2cd45e6084ffeeb690
----------------------------
"Bug#18745: Test case 'func_group' fails if ""classic"" 5.0 configuration Moved the InnoDB related test from func_group.test to innodb_mysql.test "	b357c232fc36356908efe9cdcec62b3ffb28309c
----------------------------
ha_ndbcluster_binlog.cc: ndb: fix compile error on solaris 	83c095ba5cbea563c9c63659997bc9b7c945e735
----------------------------
This is an implementation of two WL items: - WL#3158: IM: Instance configuration extensions; - WL#3159: IM: --bootstrap and --start-default-instance modes The following new statements have been added: - CREATE INSTANCE; - DROP INSTANCE; The behaviour of the following statements have been changed: - SET; - UNSET; - FLUSH INSTANCES; - SHOW INSTANCES; - SHOW INSTANCE OPTIONS; 	c1113af15c2d2ebeea50487c94b3078855f48d6b
----------------------------
"Include ""config.h"" (if it exists) in all yaSSL files via their ""runtime.hpp"". Fixes bug#19040 ""yaSSL does not compile on AIX"". "	93d1c2b307e897bf5a092905e9e4293e24ab1ba2
----------------------------
BUG#18818 configure: No longer finds OpenSSL on Mac OS X - Implement new switch --with-ssl to configure used for both bundled yaSSL or OpenSSL 	f4567f9f922ab8eacc6bd849700afacc45ccc0a8
----------------------------
mysql.spec.sh: Removed Berkeley DB configure.in: Adjusted Netware support basic.t.c: Change for Netware Makefile.am: Use thread safe libmysqlclient_r if it was built valgrind.supp: Hide report about strlen/_dl_init_paths ha_tina.cc: Temporarely disable CSV engine on Netware, as the engine depends on mmap() net_serv.cc: Include <sys/select.h> for Netware 	9fca0d766b3a35b9ac930546dc691b5ed9338b7f
----------------------------
bug 15430 (init_connect test fails with the embedded server) mysqltest program should be really multithreaded to perform this test with the embedded server. So this test disabled until we redo mysqltest this way 	b457eaba71a737fa49cd819969aadbc1032e306b
----------------------------
bug #15435 (wait_timeout.test fails with the embedded server) this test just can't work in the embedded server 	447e9f019f5fb50c3e3ead3632ce2304e3de58f4
----------------------------
Bug#18818 configure: No longer finds OpenSSL on Mac OS X - Remove usage of $shrext_cmds variable - Test for libs using all known library file endings 	0472f7eb44cfef144ddabea16f1b615a830ecbcb
----------------------------
Bug#18818 configure: No longer finds OpenSSL on Mac OS X - Remove usage of $shrext_cmds variable - Test for libs using all known library file endings 	302eb27a59751cf3bc1dc68888bb603f65308261
----------------------------
configure.in: Stepped up to 4.0.28 	39516f3886a9eb25c62087a52d3f35c78e3e87d5
----------------------------
Bug #6061 mysql-log-rotate script - error logging doesn't use new file - Fix mysqld_safe so that it always passes correct --log-error argument to mysqld - A few other minor clean-ups to mysqld_safe 	bc89c92c3779948968f058c46ea8ec98117f50d1
----------------------------
"Several ""unittest"" files  :  Ensure that the configure result is used when compiling them. "	e11c7eb0719721a4b436f79fda3aca9da0e62b52
----------------------------
Bug #1039: tmpdir and datadir not available via @@ system variable syntax Bug #19606: ssl variables are not displayed in show variables Bug #19616: log_queries_not_using_indexes  is not listed in show variables Make basedir, datadir, tmpdir, log_queries_not_using_indexes, ssl_ca, ssl_capath, ssl_cert, ssl_cipher, and ssl_key all available both from SHOW VARIABLES and as @@variables. As a side-effect of this change, log_queries_not_using_indexes can be changed at runtime (but only globally, not per-connection). 	ebe38efaa6feaff5dd7f1e5dfb8dbd6cbf253c29
----------------------------
configure.in  :    Now that 5.1.10 has been cloned, bump up the version. 	7ace714142a286a3c2a80909fccbf68f71fa28b7
----------------------------
Bug#19136: Crashing log-bin and uninitialized user variables in a derived table recalculating results 	49bc52e5c9e348a01960a133884ad381a0636c36
----------------------------
auto-set MYSQL_PLUGIN_DIRECTORY for plug.in files 	549fe7c8508c973cc78c1be7b6ec6c507a9862ae
----------------------------
Partial fix for BUG#14106: IM: im_life_cycle and im_utils tests fail on FreeBSD. The patch contains of the following: - make Instance Manager, running in the daemon mode, dump the pid of angel-process in the special file; - default value of angel-pid-file-name is 'mysqlmanager.angel.pid'; - if ordinary (IM) pid-file-name is specified in the configuration, angel-pid-file-name is updated according to the following rule: extension of the basename of pid-file-name is replaced by '.angel.pid. For example: - pid-file-name: /tmp/im.pid => angel-pid-file-name: /tmp/im.angel.pid - pid-file-name: /tmp/im.txt => angel-pid-file-name: /tmp/im.angel.pid - pid-file-name: /tmp/5.0/im => angel-pid-file-name: /tmp/5.0/im.angel.pid - add support for configuration option to customize angel pid file name; - fix test suite to use angel pid to kill Instance Manager by all means if something went wrong. Background ---------- The problem is that on some OSes (FreeBSD for one) Instance Manager does not get SIGTERM, so can not shutdown gracefully. Test suite wasn't able to cope with it, so this leads to the mess in test results. The problem should be split into two: - fix signal handling; - fix test suite. This patch fixes test suite so that it will be able to kill uncooperative Instance Manager. In order to achieve this, test suite needs to know PID of IM Angel process. 	3b74668bfaf7f5a8043a95efb5d43b3a150b74e4
----------------------------
Bug #19492 --binlog-do-db option cuases tables create issues for ndb master - ndb system tables not created because of filter, moved chack of filter 	6a48847b1a1b8beb694ee4bb1321828e6f7d849e
----------------------------
do not install ndb slave if no slaves fixed memleak in ndbcluster_end 	f8c37502b313e652b493a023c7994a54ef8c419e
----------------------------
Bug #18798: mysqld cores on update in ha_ndbcluster call if cluster has failed before, added extra check that transaction is started 	45d1965d31a48311476aef887395488fc855be47
----------------------------
Bug#19136: Crashing log-bin and uninitialized user variables in a derived table The reason of the bug is in that `get_var_with_binlog' performs missed assingment of the variables as side-effect. Doing that it eventually calls `free_underlaid_joins' to pass as an argument `thd->lex->select_lex' of the lex which belongs to the user query, not to one which is emulated i.e SET @var1:=NULL. `get_var_with_binlog' is refined to supply a temporary lex to sql_set_variables's stack. 	8c57924a6a45530b2cdcdb96031c16f3ee5ffc7c
----------------------------
auto-include plug.in, remove the need for plugins to modify configure.in 	376117eb988bf3ac33782c372a3c666b242b7321
----------------------------
cleanup - don't test in configure what belongs to m4 	17b46953cafd4fa730a377bd25f212d5827d6b0f
----------------------------
"Bug#19536 ""NDB replication fails when no explicit--binlog-format given"" fix initialization, storage engine initialization must occur after logging type is configured "	1a5c828cf205066220f21f4fd7d39806dc3d4ad7
----------------------------
Fixed compiler warnings Move plugin declarations after system functions have been checked (Fixes problem with ndb_config failing becasue SHM is not declared) Fixed some memory leaks 	c10f37673cb4f28778ee6d2298270d704289735c
----------------------------
fix legacy configure option handling 	16d8d6bcca2fe667baf7bb8bb249a59e353b504e
----------------------------
sql_parse.cc: buffer overflow and information exposure bugs fixed (reported by Stefano Di Paola) configure.in: Changed version to 5.0.17b 	5236782b4bc0abd300cd7c74bb8ac1a93c4839be
----------------------------
"config-win.h: Fix strange ""double"" define for popen. Avoid warnings about sprintf() etc. being unsafe. Corrected typo ""#endfif"" "	5e717959d0198ed96cfa2d594509629ae0afcedb
----------------------------
configure.in: Changed version to 4.1.20 	a14f1250d6523e71c569c7198ed39cf271b9c7d6
----------------------------
BUG#19394 OPT_INNODB_THREAD_CONCURRENCY duplicated Removed duplication (not a user-visible change) 	f6aad253ab289040c6130172135f521509cf973d
----------------------------
Bug#18818 configure: No longer finds OpenSSL on Mac OS X - Eval shrext_cmds variable before using it - Moved from acinclude.m4 to openssl.m4 and zlib.m4 when merging 4.1 -> 5.0 	50c920ffab6818336c5cb44067462c1a2f855407
----------------------------
Fix bug in ndbcluster.sh on Solaris (now that line is the same as in 5.1) 	31a428928e81e4d83f4382da7c796f047fa711e4
----------------------------
configure.in: Recloning, set back to 5.0.21 	97cf31a6a88778ceb000632316dbbd1180fd26dc
----------------------------
The fix for bug#17248 accidentally removed the sync_binlog variable. This patch restores sync_binlog. 	d96fbd738d9108332d376ee80ba38688229687be
----------------------------
Add ndb_config to rpm spec 	a8f407a7ef471a48e110c04acb4419d0ae5ca49a
----------------------------
configure.in: clone-off for 5.0.21 	92825f3ada442195bf2a1645c2f8b177ed98a5c9
----------------------------
BUG#19340 small leak in ndbd small cleanup fixes in kernel/vm/Configuration 	ebbff7ee3f36161ddbccb7cc437c0690fa99e0eb
----------------------------
BUG#19318 valgrind: memory leak in ndb_mgmd now deal with memory correctly during ConfigInfo construction (due to previous changes) 	454cea637783ab2686799ded84d4893025f20159
----------------------------
BUG#19318 valgrind: memory leak in ndb_mgmd clean up after ConfigValuesFactory 	518100f0b2c79b415158202dd9c070dd7f7fc4d6
----------------------------
"Applied innodb-5.1-ss475 snapshot. * Fix BUG#15650: ""DELETE with LEFT JOIN crashes server with innodb_locks_unsafe_for binlog"" * Fix BUG#17134: ""Partitions: uncommitted changes are visible"" * Fix BUG#17992: ""Partitions: InnoDB, somehow rotten table after UPDATE"" row0ins.c: MySQL's partitioned table code does not set preduilt->sql_stat_start right if it does an insert in the same statement after doing a search first in the same partition table. We now write trx id always to the buffer, not just when flag sql_stat_start is on. This will waste CPU time very sightly. * Fix BUG#18077: ""InnoDB uses full explicit table locks in stored FUNCTION"" * Fix BUG#18238: ""When locks exhaust the buffer pool, InnoDB does not roll back the trx"" * Fix BUG#18252"" ""Disk space leak in updates of InnoDB BLOB rows in 5.0 and 5.1"" * Fix BUG#18283: ""When InnoDB returns error 'lock table full', MySQL can write to binlog too much"" * Fix BUG#18350: ""Use consistent read in CREATE ... SELECT ... if innodb_locks_unsafe_for_binlog"" * Fix BUG#18384: ""InnoDB memory leak on duplicate key errors in 5.0 if row has many columns"" * Fix BUG#18934: ""InnoDB crashes when table uses column names like DB_ROW_ID"" Refuse tables that use reserved column names. * InnoDB's SQL parser: - Add support for UNSIGNED types, EXIT keyword, quoted identifiers, user-function callbacks for processing results of FETCH statements, bound literals, DATA_VARCHAR for bound literals. - Allow bound literals of type non-INTEGER to be of length 0. - Add make_flex.sh and update lexer/parser generation documentation. - Add comment clarifying the difference between 'alias' and 'indirection' fields in sym_node_t. - Remove never reached duplicate code in pars_set_dfield_type(). - Rewrite pars_info datatypes and APIs, add a few helper functions. - Since the functions definitions in pars_info_t are accessed after pars_sql() returns in the query graph execution stage, we can't free pars_info_t in pars_sql(). Instead, make pars_sql() transfer ownership of pars_info_t to the created query graph, and make que_graph_free() free it if needed. - Allow access to system columns like DB_ROW_ID. * Use bound literals in row_truncate_table_for_mysql, row_drop_table_for_mysql, row_discard_tablespace_for_mysql, and row_rename_table_for_mysql. * Setting an isolation level of the transaction to read committed weakens the locks for this session similarly like the option innodb_locks_unsafe_for binlog. This patch removes alnost all gap locking (used in next-key locking) and makes MySQL to release the row locks on the rows which does not belong to result set. Additionally, nonlocking selects on INSERT INTO SELECT, UPDATE ... (SELECT ...), and CREATE ... SELECT ... use a nonlocking consistent read. If a binlog is used, then binlog format should be set to row based binloging to make the execution of the complex SQL statements. * Disable the statistic variables btr_search_n_hash_fail and n_hash_succ, n_hash_fail, n_patt_succ, and n_searches of btr_search_t in builds without #ifdef UNIV_SEARCH_PERF_STAT. * Make innodb.test faster. Group all consistent read test cases to a one test case and wait their lock timeout after all have been send to the server. Decrease amount of rows inserted in a certain test - this has no effect on the effectiveness of the test and reduces the running time by ~10 sec. Remove temporary work-arounds from innodb.result now that ALTER TABLE DROP FOREIGN KEY works once again. * Make innodb_unsafe_binlog.test faster. Grout all consistent read test cases to a one test case amd wait their lock timeout after all have been sent to the server. Remove unnecessary option --loose_innodb_lock_wait_timeout. * Print dictionary memory size in SHOW INNODB STATUS. * Fix memory leaks in row_create_table_for_mysql() in rare corner cases. * Remove code related to clustered tables. They were never implemented, and the implementation would be challenging with ROW_FORMAT=COMPACT. Remove the table types DICT_TABLE_CLUSTER_MEMBER and DICT_TABLE_CLUSTER and all related tests and functions. dict_table_t: Remove mix_id, mix_len, mix_id_len, mix_id_buf, and cluster_name. plan_t: Remove mixed_index. dict_create_sys_tables_tuple(): Set MIX_ID=0, MIX_LEN=0, CLUSTER_NAME=NULL when inserting into SYS_TABLES. dict_tree_check_search_tuple(): Enclose in #ifdef UNIV_DEBUG. * Move calling of thr_local_free() from trx_free_for_mysql() to innobase_close_connection(). "	780f80be16315871a2600d1f94c92c6a368d3fc4
----------------------------
"innodb_unsafe_binlog-master.opt: Make InnoDB option ""loose"", as the server might be started with this option just to find out the test is to be skipped in the configuration (bug#17359) "	806564d75440f4f9bb22aae6320822733b21fcd3
----------------------------
Bug #17230 Can't change character-sets-dir for ndbd 	f071779791d2bae55a03a6f2e158907a1f40ae5e
----------------------------
Bug#18818 configure: No longer finds OpenSSL on Mac OS X - Eval shrext_cmds variable before using it 	231936a43c325f277169f4ed9d9dd1fad505d7ff
----------------------------
WL 2826: Error handling of ALTER TABLE for partitioning Moved error inject from being flags to compiler to being part of config.h Also error inject only defined if debug is also defined +Small fixes 	22ed19e43434f8d9aaf9e76095f39d370d53be97
----------------------------
Fixed bug #19079. The bug caused a reported index corruption in the cases when key_cache_block_size was not a multiple of myisam_block_size, e.g. when key_cache_block_size=1536 while myisam_block_size=1024. 	950214abfcec209b1683b9f769172e5878be05c4
----------------------------
configure.in: Stepped up version to 5.0.20a 	8c420e29eb5fc92089c787c245a14407f8e1ca61
----------------------------
"Fixing a merge from a few days ago. Without a flush this test is nondeterministic for ""row"" binlog-format. "	61552172df1c42d02e46e637fac5ad25cd47f6ce
----------------------------
"WL#3201 "" Configure support for server plugins "" "	4e11a4d94199c710b0c7d0bf547157c14c480f19
----------------------------
"Bug#18837 Many build and test failures when configuring without --disable-shared Build ""NOINST"" tools with -static flag to avoid  any ld problems when using them "	f3373899e2e077f7ad5fb2e07a3581eb4a0cf960
----------------------------
Post-merge fixes. Add a new error message for max_prepared_stmt_count limit. 	c49e6f8869c150dfebc3b181cdeb8394ad81db5b
----------------------------
Fixes for fast alter table for ndbcluster 	950e258fdeea24c579df2d5fbd8058cb0dc6ded2
----------------------------
"Bug#15069 [patch] my_print_defaults does'nt care --sysconfdir - Grab the path from ""configure --sysconfdir=<path>"" and set it as the first place to look for my.cnf files Do this both in Makefiles for libmysql and mysys - Patch provided by Francesco Riosa. Thank you! "	475e1f6a53ca97faf880f6ac861fc390b144ace0
----------------------------
mysql-test-run.pl: Added --ndbcluster_port for backward compatibility make_win_src_distribution.sh: Updated to reflect 5.1 changes 	41923d3bb1eb85a4aa0de34e0c9edf3b48d17bbb
----------------------------
plugin/fulltext/configure.in no sense in building static library version of a plugin plugin/fulltext/plugin_example.c comments clarified. everything local to a plugin was declared static 	c17d3a5148c6744005e83b480d062edbcc4f8fbe
----------------------------
"A fix and a test case for Bug#16365 ""Prepared Statements: DoS with too many open statements"". The patch adds a new global variable @@max_prepared_stmt_count. This variable limits the total number of prepared statements in the server. The default value of @@max_prepared_stmt_count is 16382. 16382 small statements (a select against 3 tables with GROUP, ORDER and LIMIT) consume 100MB of RAM. Once this limit has been reached, the server will refuse to prepare a new statement and return ER_UNKNOWN_ERROR (unfortunately, we can't add new errors to 4.1 without breaking 5.0). The limit is changeable after startup and can accept any value from 0 to 1 million. In case the new value of the limit is less than the current statement count, no new statements can be added, while the old still can be used. Additionally, the current count of prepared statements is now available through a global read-only variable @@prepared_stmt_count. "	518993312cb8f28ba8395e7ca140801c1fb96eca
----------------------------
configure.in: increase version number for clone 	1ec9119308c97933481268ea3593986aa35c5dfc
----------------------------
"mysql-test/mysql-test-run.pl  :   Add option ""with-ndbcluster-only"" (ignored). "	65f4595e9a17d830931f4be0d257c97376cea0f8
----------------------------
"Merge: 45a3bb5 73a0ae9 mysql-test/mysql-test-run.sh  :   Add option ""--with-ndbcluster-only"" (backport from 5.1) "	a0541800aa30d0f1c4be5eed3635d8728eb24c8b
----------------------------
From MySQL: Add Windows makefile 'cmakelists.txt' (Note that I had to add ut0vec.c to it.) Modify univ.i to not include ib_config.h on Windows. 	d8671ebb7c630a78fe5766d47137ff028dafc9e6
----------------------------
"Backport of 5.1 test options ""--with-ndbcluster"" and ""--with-ndbcluster-only"" as dummies (ignored). "	73a0ae9d9b9b1d9c0497724c33b85601ef04afb3
----------------------------
Remove no longer needed generation of dummy ib_config.h 	534a87dda23973854d303a5e81a7bfa679535107
----------------------------
"changes to make plugin_example useful as a template: force pkglibdir to be in ""mysql"" package, template files: AUTHORS, ChangeLog, NEWS, README, configure.in "	6f492397f881e11a3a7de978921b4a87b1fe193b
----------------------------
configure.in: Check for crypt() in libc first (bug#16478) 	2d8f8ac6e1a1c91c247b7546716c44e413aa5729
----------------------------
Make innodb_unsafe_binlog test case faster. Group all consistent read test cases to a one test case and wait their lock timeout after all have been send to the server. Remove unnecessary option --loose_innodb_lock_wait_timeout. 	a98fac7a973dcbe82225ed81647fad56c5a2705c
----------------------------
Applied innodb-5.0-ss398 snapshot. Fixed BUG#15650: DELETE with LEFT JOIN crashes server with innodb_locks_unsafe_for_binlog. Fixed compilation problem with non-C99 compilers in btr0sea.c 	771fb26e586e8403ac398fee6904165f84fbb42e
----------------------------
configure.in: Increased version number because of clone-off 	c1ac02a42465a384231e952fa21ba201f45598bd
----------------------------
Applied innodb-5.0-ss368 snapshot Fixed bugs: #16814: SHOW INNODB STATUS format error in LATEST FOREIGN KEY ERROR section dict_foreign_key_error_report(): Always print a newline after invoking dict_print_info_on_foreign_key_in_create_format(). #16827: Better InnoDB error message if ibdata files omitted from my.cnf. #17126: CHECK TABLE on InnoDB causes a short hang during check of adaptive hash. CHECK TABLE blocking other queries, by releasing the btr_search_latch periodically during the adaptive hash table validation. #17405: Valgrind: conditional jump or move depends on uninitialised valuesw. buf_block_init(): Reset magic_n, buf_fix_count, and io_fix to avoid testing uninitialised variables. #18077: InnoDB uses full explicit table locks in stored FUNCTION. #18238: When locks exhaust the buffer pool, InnoDB does not roll back the trx. Check in pessimistic insert and update if the buffer pool is exhausted by locks. #18252: Disk space leaks in updates of InnoDB BLOB rows. btr_cur_pessimistic_update(): Invoke rec_get_offset() after rec_set_field_extern_bits(). btr_store_big_rec_extern_fields(): Note that offsets will no longer be valid after calling this function. #18283: When InnoDB returns error 'lock table full', MySQL can write to binlog too much. #18384: InnoDB memory leak on duplicate key errors if row has many columns. row_ins_duplicate_error_in_clust(): Call mem_heap_free(heap) at func_exit if needed. #18350: Use consistent read in CREATE ... SELECT .. if innodb_locks_unsafe_for_binlog is used. 	99d178033a195450f32f36662029adc4fd6a26bd
----------------------------
mysql_config.sh: If installed, search built in lib path first, bug#13158 	67f2b0f3bc1a074609ee2f8470bf24dd926e73a7
----------------------------
"""ndbcluster_port"" => ""ndbcluster-port"" ""ndbcluster_port_slave"" => ""ndbcluster-port-slave"" "	e803ceccb2dc7631251419a32b2637879b8f559e
----------------------------
"""ndbconnectstring"" => ""ndb-connectstring"" "	085a310a0172ec833221c674515530e705ec06d2
----------------------------
Clean up CMake configuration following review. 	3f2cc44b3df474dbe6204f79b987f52291c8dad6
----------------------------
removed handlerton-win.cc now using CONFIGURE_FILE and INCLUDE to generate handlerton.cc and to set the definitions based on the storage engines given on the command line 	7f674749b8e29f4914d3809f49d19d439fc3159f
----------------------------
mysql_config.sh: Remove Solaris -xc99=none C option as C++ compiler can't handle it 	04f059c5bfd050ed82c0bf456dc1e4f7d6bc0937
----------------------------
mysql_config.sh: We are not to control what malloc package others are to use, remove -lmtmalloc from --libs(_r), bug#18322 	35ae639477b6ecb0d31aec590b0e405627f25cf5
----------------------------
ndb - autotest Change semantic on DumpStateOrd::CmvmiSetRestartOnErrorInsert() Called wo/ args it resets to value in configuration (previously it set to 1 if called wo/ args) 	a3b51fda9fde905596f679248e202dd785116736
----------------------------
Setting a isolation level of the transaction to read committed weakens the locks for this session similarly like the option innodb_locks_unsafe_for_binlog. This patch removes almost all gap locking (used in next-key locking) and makes MySQL to release the row locks on the rows which does not belong to result set. Additionally, nonlocking selects on INSERT INTO SELECT, UPDATE ... (SELECT ...), and CREATE ... SELECT ... use a nonlocking consistent read. If a binlog is used, then binlog format should be set to row based binloging to make the execution of the complex SQL statements. 	cf06d8d965e339bce40d170260500c262b0d96b0
----------------------------
"configure.in: AC_ARG_WITH inside ""if"" sometimes gives unexpected result, --with-fast-mutexes was not ignored when --with-debug given "	625ab8a064f07f9af94e9c658425b6a6e61cbcca
----------------------------
config-win.h: If CYBOZU defined, set character sets etc 	3c93e6efa5e53df71ad4fb0e1083ca0def251740
----------------------------
"Moved ""tmpdir"" and 2vardor"" to the documented flags and add some documentation "	8091b7b5f11e0594691ed1daecdd81a6ab58affa
----------------------------
Updated CMake stuff to handle the configurations needed for release builds. 	a3ad39cf663013c09b5dead007ee4900e7587a07
----------------------------
ndb - minor update to ndb-autotest.sh and config files 	8b9c724121ceb040d912a0ac7cbe2fedae22cb01
----------------------------
added config parameter InitialNoOfOpenFiles 	c8131d283a88f10d034dc3ca542b242e314c74f6
----------------------------
Merge r357 from branches/5.0: Fix bug #18350 Use consistent read in CREATE ... SELECT... if innodb_locks_unsafe_for_binlog is used. This patch is from Heikki. 	62dcf3fba2ca9da51ac61fb9f0626d20dd62900e
----------------------------
"Bug#11835 CREATE FUNCTION crashes server - Update for 5.1 - Add ""have_dlopen"" - Remove requirement to load udf's only in ""opt_plugin_dir"" "	dc749e9ad7c82ac1cd8283b4fc6710ed0a2255fe
----------------------------
configure.in: NDB_VERSION_BUILD has to be numeric 	7e48f7b34b944626db08aa80037f9e6cf9d99e42
----------------------------
configure.in: Changed release name to 5.0.19a ha_innodb.cc: InnoDB used table locks (not row locks) within stored functions. (Bug #18077) 	882d9b6e1f93be14b5bb75de0fe937b32239e392
----------------------------
Add (void*) casts when using the %p printf format specifier. When using GCC, use __inline__ instead of inline. Add disabled-by-default logic to configure.in to switch GCC to a strict C89-mode. 	08debc00d88dc9b613f11fd24b032d5282345471
----------------------------
Bug#18195 MySQL on Windows not built with YaSSL correctly - Add HAVE_OPENSSL and HAVE_YASSL to config-win.h 	42a3ff3f99c0e7851697420834edb2dc9e74a3ba
----------------------------
"Applied innodb-5.1-ss269 snapshot. Fixed BUGS: #3300: ""UPDATE statement with no index column in where condition locks all rows"" Implement semi-consistent read to reduce lock conflicts at the cost of breaking serializability. ha_innobase::unlock_row(): reset the ""did semi consistent read"" flag ha_innobase::was_semi_consistent_read(), ha_innobase::try_semi_consistent_read(): new methods row_prebuilt_t, row_create_prebuilt(): add field row_read_type for keeping track of semi-consistent reads row_vers_build_for_semi_consistent_read(), row_sel_build_committed_vers_for_mysql(): new functions row_search_for_mysql(): implement semi-consistent reads #9802: ""Foreign key checks disallow alter table"". Added test cases. #12456: ""Cursor shows incorrect data - DML does not affect, probably caching"" This patch implements a high-granularity read view to be used with cursors. In this high-granularity consistent read view modifications done by the creating transaction after the cursor is created or future transactions are not visible. But those modifications that transaction did before the cursor was created are visible. #12701: ""Support >4GB buffer pool and log files on 64-bit Windows"" Do not call os_file_create_tmpfile() at runtime. Instead, create all tempfiles at startup and guard access to them with mutexes. #13778: ""If FOREIGN_KEY_CHECKS=0, one can create inconsistent FOREIGN KEYs"". When FOREIGN_KEY_CHECKS=0 we still need to check that datatypes between foreign key references are compatible. #14189: ""VARBINARY and BINARY variables: trailing space ignored with InnoDB"" innobase_init(): Assert that DATA_MYSQL_BINARY_CHARSET_COLL == my_charset_bin.number. dtype_get_pad_char(): Do not pad VARBINARY or BINARY columns. row_ins_cascade_calc_update_vec(): Refuse ON UPDATE CASCADE when trying to change the length of a VARBINARY column that refers to or is referenced by a BINARY column. BINARY columns are no longer padded on comparison, and thus they cannot be padded on storage either. #14747: ""Race condition can cause btr_search_drop_page_hash_index() to crash"" Note that buf_block_t::index should be protected by btr_search_latch or an s-latch or x-latch on the index page. btr_search_drop_page_hash_index(): Read block->index while holding btr_search_latch and use the cached value in the loop.  Remove some redundant assertions. #15108: ""mysqld crashes when innodb_log_file_size is set > 4G"" #15308: ""Problem of Order with Enum Column in Primary Key"" #15550: ""mysqld crashes in printing a FOREIGN KEY error in InnoDB"" row_ins_foreign_report_add_err(): When printing the parent record, use the index in the parent table rather than the index in the child table. #15653: ""Slow inserts to InnoDB if many thousands of .ibd files"" Keep track on unflushed modifications to file spaces.  When there are tens of thousands of file spaces, flushing all files in fil_flush_file_spaces() would be very slow. fil_flush_file_spaces(): Only flush unflushed file spaces. fil_space_t, fil_system_t: Add a list of unflushed spaces. #15991: ""innodb-file-per-table + symlink database + rename = cr"" os_file_handle_error(): Map the error codes EXDEV, ENOTDIR, and EISDIR to the new code OS_FILE_PATH_ERROR. Treat this code as OS_FILE_PATH_ERROR. This fixes the crash on RENAME TABLE when the .ibd file is a symbolic link to a different file system. #16157: ""InnoDB crashes when main location settings are empty"" This patch is from Heikki. #16298: ""InnoDB segfaults in INSERTs in upgrade of 4.0 -> 5.0 tables with VARCHAR BINARY"" dict_load_columns(): Set the charset-collation code DATA_MYSQL_BINARY_CHARSET_COLL for those binary string columns that lack a charset-collation code, i.e., the tables were created with an older version of MySQL/InnoDB than 4.1.2. #16229: ""MySQL/InnoDB uses full explicit table locks in trigger processing"" Take a InnoDB table lock only if user has explicitly requested a table lock. Added some additional comments to store_lock() and external_lock(). #16387: ""InnoDB crash when dropping a foreign key <table>_ibfk_0"" Do not mistake TABLENAME_ibfk_0 for auto-generated id. dict_table_get_highest_foreign_id(): Ignore foreign constraint identifiers starting with the pattern TABLENAME_ibfk_0. #16582: ""InnoDB: Error in an adaptive hash index pointer to page"" Account for a race condition when dropping the adaptive hash index for a B-tree page. btr_search_drop_page_hash_index(): Retry the operation if a hash index with different parameters was built meanwhile.  Add diagnostics for the case that hash node pointers to the page remain. btr_search_info_update_hash(), btr_search_info_update_slow(): Document the parameter ""info"" as in/out. #16814: ""SHOW INNODB STATUS format error in LATEST FOREIGN KEY ERROR section"" Add a missing newline to the LAST FOREIGN KEY ERROR section in SHOW INNODB STATUS output. dict_foreign_error_report(): Always print a newline after invoking dict_print_info_on_foreign_key_in_create_format(). #16827: ""Better InnoDB error message if ibdata files omitted from my.cnf"" #17126: ""CHECK TABLE on InnoDB causes a short hang during check of adaptive hash"" CHECK TABLE blocking other queries, by releasing the btr_search_latch periodically during the adaptive hash table validation. #17405: ""Valgrind: conditional jump or move depends on unititialised values"" buf_block_init(): Reset magic_n, buf_fix_count and io_fix to avoid testing uninitialized variables. "	d33b523271d041eb0f77ef19b13846770c21d95b
----------------------------
BUG#15101 SYSDATE() disregards SET TIMESTAMP. After the ChangeSet 1.1892.20.1 2005/08/24 (Bug #12562) SYSDATE() is not an alias of NOW() and is unsafe for replication. `SYSDATE()' backward compatible aliasing clashes with the idea #12562 fix. To make it safe-replicatable we have to either use RBR or to restore the pre-5.0 style. --sysdate-is-now command line flag was introduced to provide backward compatibility. 	d187d410d10a17598f1e4b44fc41212c689264d0
----------------------------
Additional fix for BUG#16777:  Can not create trigger nor view w/o definer if --skip-grant-tables specified. The previous patch does not allow to specify empty host name in DEFINER-clause explicitly. 	3b3cb95eb9076378b26be48bb80a486c17a04845
----------------------------
Merge: aa82944b e37f80a Merge bk-internal:/home/bk/mysql-5.0 into  shellback.(none):/home/msvensson/mysql/mysqltestrun_ndbclusterstart/my50-mysqltestrun_ndbclusterstart 	0903941d053e1bfba7e6265c4150e3a4fa6995cb
----------------------------
"BUG#17574 Detect cluster start failure and ""fail"" ndb_* tests - Fix problems that occur when ndbcluster is not supported "	e37f80a1ace70526e29d27e978fdd007891dbb77
----------------------------
configure.in: Change comment for fast-mutex 	8c8d7b809b6f622f50c6160becabc68d59bdf536
----------------------------
configure.in: Change default value --with-fast-mutexes=no 	9ae37a54f2fb8767556254b643198bbd938f94f8
----------------------------
configure.in: cloned 	7410560baf175c16caa05a4d002dbe685bdae76a
----------------------------
Fix for BUG#16777: Can not create trigger nor view w/o definer if --skip-grant-tables specified. The problem is that there is a check that prevents creating a definer with empty host name. In --skip-grant-tables mode this check prevents the user from creating a trigger/view without explicitly specifying its definer. This happens, because in --skip-grant-tables mode CURRENT_USER is ''@''. According to Sanja this check was implemented intentionally. However, according to the MySQL manual it is possible to specify empty host name (as well as empty user name). Moreover, the behaviour for stored routines is different in this aspect -- we allow them to be created with implicit definer. Based on this, we believe it is OK to change the behaviour for views to be similar with the behaviour for stored routines. 	302239f388d0bf28ccbb3a234463f7fdd25da717
----------------------------
Fixes bug #17595. UDFs are not initialized when running mysqld with --skip-grant-tables. However when deleting functions UDFs list was checked regardless of whther UDFs are initialized or not. Additional check is added into free_udf() and find_udf() functions to prevent possible runtime errors. 	78b33e1835b41a90a28d66b1f8cd7adbebf3e994
----------------------------
"WL#2977 and WL#2712 global and session-level variable to set the binlog format (row/statement), and new binlog format called ""mixed"" (which is statement-based except if only row-based is correct, in this cset it means if UDF or UUID is used; more cases could be added in later 5.1 release): SET GLOBAL|SESSION BINLOG_FORMAT=row|statement|mixed|default; the global default is statement unless cluster is enabled (then it's row) as in 5.1-alpha. It's not possible to use SET on this variable if a session is currently in row-based mode and has open temporary tables (because CREATE TEMPORARY TABLE was not binlogged so temp table is not known on slave),  or if NDB is enabled (because NDB does not support such change on-the-fly, though it will later), of if in a stored function (see below). The added tests test the possibility or impossibility to SET, their effects, and the mixed mode, including in prepared statements and in stored procedures and functions. Caveats: a) The mixed mode will not work for stored functions: in mixed mode, a stored function will always be binlogged as one call and in a statement-based way (e.g. INSERT VALUES(myfunc()) or SELECT myfunc()). b) for the same reason, changing the thread's binlog format inside a stored function is refused with an error message. c) the same problems apply to triggers; implementing b) for triggers will be done later (will ask Dmitri). Additionally, as the binlog format is now changeable by each user for his session, I remove the implication which was done at startup, where row-based automatically set log-bin-trust-routine-creators to 1 (not possible anymore as a user can now switch to stmt-based and do nasty things again), and automatically set --innodb-locks-unsafe-for-binlog to 1 (was anyway theoretically incorrect as it disabled phantom protection). Plus fixes for compiler warnings. "	0071749595d83885261278f6a488b019acd63913
----------------------------
config-win.h: Enable row based replication for Windows build replication.m4: Made help text more clear, default is with row based replication enabled 	9571e81f04574d93db581b0605a9e6d88086dcea
----------------------------
Makefile.am: Conditionally link with libmysqlclient.la or libmysqlclient_r.la configure.in: Corrected help text for --with-debug option Changed default to be with thread safe client Added THREAD_SAFE_CLIENT to be used in 'if' in make files 	5484ee58159917c2064711e5483c3e8fbd0881d1
----------------------------
ndb dd - bug#16657 - add new config variable 	4c485eb13b8c03d81b07adec1e471c22a279a3a9
----------------------------
configure.in  (in the new clone): This is a re-clone after tagging, so the version must be set back to 5.1.7-beta. 	89e71e83bf70580b234733cfae94b34b6d3eec1d
----------------------------
mysql-test-run.sh: Set the ndbcluster slave port (bug#16780) disabled.def: Disabled 'mysqldump' until bug 17443 is closed 	c56a4b1eb6ab6e54320162ee9209420c462aad68
----------------------------
Bug #17210 Create temp table call to ha_ndbcluster::create_handler_files caused core - do not try to create ndb temp tables even if default storage is ndb 	9495f8c56a7a9be36ee9c3f7ea09957e726104b8
----------------------------
configure.in: Updated version number to 5.1.8 	03ecedcae8d46783965a6a9fa718ee85b6099f58
----------------------------
Bug#11527 - Setting myisam_repair_threads to >1 leads to corruption A wrong cast led to numeric overflow for data files greater than 4GB. The parallel repair assumed end of file after reading the amount of data that the file was bigger than 4GB. It truncated the data file and noted the number of records it found so far in the index file header as the number of rows in the table. Removing the cast fixed the problem. I added some cosmetic changes too. The normal repair worked because it uses a different function to read from the data file. 	718ae789726b57ff4ef4c7b48df831568be58076
----------------------------
"config/ac-macros/ha_ndbcluster.m4  :    Get back the message ""Using NDB Cluster"". "	26ddd4fa45f7f4b3cb2c79f82f40579af19dc71d
----------------------------
Polishing: after implementing TRIGGER privilege, mysqld option '--log-bin-trust-function-creators' affects not only replication of the stored functions, but also replication of the triggers. 	c6c33f4832cbba0438d1d947bd117009f4688cce
----------------------------
Revert r148 until MySQL AB has finally merged the code to the 5.1 tree: Port r146 from branches/5.0: Make innodb_flush_log_at_trx_commit a settable global variable. 	f6485936c02a9c1e13169ccdf319e53660307c3f
----------------------------
changed to use temporary heap table on a ndb test corrected multiple --log-bin options in mysql-test-run 	76f6331aed1569de92465209c29463bf3d49032e
----------------------------
Makefile.am: Link with CLIENT_EXTRA_LDFLAGS, enable us to pass on libtool flags '-full-static' and '-static' using '--with-client-ldflags' to configure. mysql.spec.sh: Pass '-static' to libtool, link static with our own libraries, dynamic with system libraries. Link with the bundled zlib. 	9f86a9bdcc22084f0287e21810c4aa6c69cdc272
----------------------------
sql_plugin.cc: Bug#17196, --default-storage-engine option broken configure.in: This is an alpha 	d6be5dcecb96042d4aa94530184be99853856789
----------------------------
ndb - main.cpp: avoid SEGV if fetch_configuration fails before fork 	9b25294bb4412b595099906af7051bbcda5cd3ed
----------------------------
bug#13966 - ndb better error message on invalid config change 	78bd6d93af17c7ea1b3430ef0a03225fc16ae04d
----------------------------
bug#13965 ndb - error while restarting in dict improve error message when changed config leads to failed restart 	155081e4254075d4486533e1e86684752cb89607
----------------------------
Port r165 from branches/5.0: Port a change from MySQL: innodb_cache.test: save and restore query_cache_size 	50de35d083c435d6d460003babc23daa3d7c810a
----------------------------
"Bug #16919 some tests fail in 5.0 - Use ""../tmp"" as --slave-load-tmpdir. Same as in mysql-test-run.pl "	a71de6bfe2022eb1a0c93c6078b0de9ed48b5c88
----------------------------
Fix mysqlslap.vcproj dependencies also for Release and classic configuration. 	2aea45b8101d5d44c6b301410e970851db8b3e4c
----------------------------
mysql-test-run.sh: Bug#16780: Extend port range to make space for 5.1 NDBCLUSTER_PORT_SLAVE 	c64727e7c0345708d97431e6414da9a13f5a9644
----------------------------
configure.in: Cloned off 4.1.18, new release number 4.1.19 	1318e790bcc33d578a307d8a0f372d3e369e55f9
----------------------------
Use one option --log-output[=option[,option...]] instead of current --old-log-format and --both-log-formats options 	a0f4c0ce30e6044b39be7af554e8e0b8359ce007
----------------------------
"configure.in: Generated ""libmysql.ver"" will be in \$(top_builddir) "	4ad32690afa89282ddbdbeeaf6510ca5aea1171c
----------------------------
reserved config numbers in ndb 	1c1b5f1f57fa78c2eea4121841e6de0cb368bfd9
----------------------------
"Test ""ctype_ucs"":  Disable warnings if ""InnoDB"" is not configured (""classic"" build) (bug#16730). "	1fa62bdafc241134838301205b1ca99d18587c04
----------------------------
"Bug#15904  	--tmpdir requires trailing slash '/' - Use same code for creating the temptable filename both from ""mysql_create_table"" and ""mysql_create_like_table"" "	b5188bdc7503a22e66d9776079ecfe66f10cf408
----------------------------
added option for relative pat in ndb config added option for verbose ndb startup 	92c93523dd025a126d5ae447a93e30adeece615a
----------------------------
option to run mysql-test-run without binlog calculate ndbcluster slave port 	996f4a3ccb439f40741e4cb4f11e47509325a243
----------------------------
Port r146 from branches/5.0: Make innodb_flush_log_at_trx_commit a settable global variable. 	c91e3017c04ded082f46d0d40ca752c3416ab354
----------------------------
Port r145 from branches/5.0: Make innodb_thread_concurrency 0 by default, and extend the useable range from 0 to 1000 (0 disables the thread throttling). Remove SRV_CONCURRENCY_THRESHOLD (20).  The magic value to disable the thread throttling is 0 from now on. 	dc8fdd92f3dd858b7f12b6c44074e81ab99d694e
----------------------------
Applied patch recieved from Marko: Make innodb_thread_concurrency 0 by default, and extend the usable range from 0 to 1000 (0 disables the thread throttling). 	5f7279d0d50b406add0bf141df6341114e8e30c9
----------------------------
Applied patch recieved from Marko: Make innodb_flush_log_at_trx_commit a settable global variable. 	af9d6bcf830e0f0fee11aa8bd9f8a447524a008f
----------------------------
Port r139 from branches/5.0: From MySQL: Fix bug #15108 (mysqld crashes when innodb_log_file_size is set > 4GB). 	c2083023c4957de3ee14dabc10cbe42dd6c51901
----------------------------
loaddata.result, loaddata.test: Adding test case. sql_yacc.yy: Adding TEXT_STRING_filesystem, which converts from character_set_client to character_set_conversion. Replacing TEXT_STRING_sys to TEXT_STRING_filesystem in LOAD DATA and SELECT INTO OUTFILE contexts. sql_class.h, sql_class.cc: Adding character_set_filesystem variable, and charset_is_character_set_filesystem flag (to avoid conversion when it's not necessary). set_var.h, set_var.cc: Adding sys_var_character_set_filesystem mysqld.cc: Adding --character-set-filesystem startup option. 	4e4b37a8ef4f69b90cc0e462b9e996f069a187dd
----------------------------
Bug #14634 Running out of diskspace on tmpdir returns an inappropriate error 	c4ddf67710817840e4a70a7b76a37f968586670d
----------------------------
"A fix for Bug#13337 ""ps test fails if configure wo/ usc2"" "	739ba76d646efe19d14e3aee068d92471fcf8f5a
----------------------------
Fixes problem introduced by non-portable thread library definition in client makefile.am. Instead of adding lpthread directly it is added $CLIENT_THREAD_LIBS, which is evaluated during configure. 	c0bf54d568e359778e78917a74befd127852f49f
----------------------------
Forward port r115 from branches/5.0: Fix bug #16157, a crash when innodb_log_group_home_dir is set to an empty string. This patch is from Heikki. 	fe27cef26c548d35be7f78234541d611e3f31a0a
----------------------------
Fix mysqlslap problems when running multiple tests in parallel, by setting the mysqlslap lock directory to value of --tmpdir. 	0d58795f7dd1e2369568eb57130ccd5cd23a8ea6
----------------------------
BUG#16068: Plugin related bugs Fixed that --plugin_dir option doesn't work. Fixed that parser name is not restored correctly from the table. 	c0c5b1ac8499f7b081eaeffbe343ae1a8a049495
----------------------------
Bug#15591 Occasional test suite abort due to port in use If the server is started with --port-open-timeout=# retry to bind the TCP port if it fails with EADDRINUSE. Use the new option in mysql-test-run.sh. 	b1214d232ea13c6bcc51d7686b8a51f306be037d
----------------------------
config-win.h: Backported Windows MAX_INDEXES handling from 5.1 	eaffb7eb73b13f2275fe0fc2af490df2ac521fa8
----------------------------
Fast mutexes implementation (spin-loop inside pthread_mutex_lock). thr_mutex.c: Added spinloop in mutex_lock my_pthread.h: Added definition of my_pthread_fastmutex_t configure.in: Added --with-fast-mutexes switch 	22c930c924fcd6df57b84674cf629f27f750bde3
----------------------------
my_sys.h: Added MAP_NORESERVE set to 0 for Windows config-win.h: If MAX_INDEXES is not set, set it to 64 on Windows 	6e276f03becef7490d8694b0290b419389a449c1
----------------------------
Datadir variable should not be reset, if it was set in this script. 	30692765923964c7a79a511e5bb1c3b6c88ffa0f
----------------------------
Update ndb version in configure.in 	eae7c39a5cac47741ce19f2277145b4b1ac6f72a
----------------------------
added --server-id option to mysqlbinlog to filter for a certain server id in the binlog only 	45adda8fd1b86b446d6cc9d08f02e7221e024b6b
----------------------------
Set thread_stack after return from end_thread() Fixes core dump when reusing thread when running debug binary 	88eee63d8c02e5a4b3ac39c0ed31794dcf243a29
----------------------------
Bug#10932 - Building server with key limit of 128, makes test cases fail Allow for configuration of the maximum number of indexes per table. Added and used a configure.in macro. Replaced fixed limits by the configurable limit. Limited MyISAM indexes to its hard limit. Fixed a bug in opt_range.cc for many indexes with InnoDB. Tested for 2, 63, 64, 65, 127, 128, 129, 255, 256, and 257 indexes. Testing this part of the bugfix requires rebuilding of the server with different options. This cannot be done with our test suite. Therefore I added the necessary test files to the bug report. If you repeat the tests, please note that the ps_* tests fail for everything but 64 indexes. This is because of differences in the meta data, namely field lengths for index names etc. 	6b18dbef3163f5c99d35852421d909cf3a7651bd
----------------------------
DbdihMain.cpp: management server performs this check on configuration. If we get this far with something incorrect, something is very wrong. 	c9dc609d21425eee9dbc98c6c9b165fcf987e385
----------------------------
"Makefile.am: Distribute ""handlerton-win.cc"" mysqld.cc: Corrected word lenght for some innobase configuration variables Makefile.am: Added Visual Studio 7 project file to EXTRA_DIST ha_partition.cc, sql_partition.cc: Changed include to use ""..."" for Windows handlerton-win.cc: Handle engine include/exclude with defines for Windows new file "	6430a4901e32351b74484a0311879bab586c8438
----------------------------
updated test as result of config change done in cluster startup 	1a95d0a7ea82cbe9e9666ad98456e63862656a78
----------------------------
Fix for bug #15108: mysqld crashes when innodb_log_file_size is set > 4G 	01dbce64d0f4c000f01d4aa9c3dce166e3cd16dc
----------------------------
Added bitmap_buffer_size() Removed valgrind warnings when using not aligned bitmap buffer size Added setting of thread_stack 	1502692322420df00b8a19cbe1287b5df4b0f294
----------------------------
Always initialize THD::thread_stack: it's used in check_stack_overrun(). 	b1d951d4626cb70375c262de9ba4a67a24d85e57
----------------------------
configure.in: Changed version to 5.1.3 	ffb5a275c3f10de096d01ecd621cc3e2373071a9
----------------------------
fix error handling if thread creation fails in ndbd make sure ndb threads are not started with too small stacksize (which results in default, much too big, stack size to be used) moved initialization of ndbd fs block first to ensure that it gets enough space for allocation of file system thread stacks changed event buffer reporting in ndb to occur not as often corrected the bank application corrected output from run-test make-config.sh 	a5d6d2bb88c47a821fdfe88b1005d2752ea0d219
----------------------------
Check for zlib with a zzlibCompileFlags() function in config/ac-macros/zlib.m4. (Patch provided by serg) 	7b78489e2d0247191aa31d96a06961659bcf408d
----------------------------
Inefficient usage of String::append() fixed. Bad examples of usage of a string with its length fixed. The incorrect length in the trigger file configuration descriptor fixed (BUG#14090). A hook for unknown keys added to the parser to support old .TRG files. 	806f9e24ff1e9409d6b833c4ec1c07d3e45272c3
----------------------------
"configure.in: Corrected ""include/readline"" link for ""make distcheck"" "	133c00beb4f17b96e9e6cf77d870726de61958e4
----------------------------
config-win.h: Disabled yaSSL support for now 	7966c4ddaca791f7b0333d82d1845ad5b97497df
----------------------------
Sync suggestions for bdb_cache_size in my-medium.cnf and my-huge.cnf to be the same as the suggested innodb_buffer_pool_size. 	eeaecbc2bdcc6cc58abfaa33d0fe8beeb87e4a73
----------------------------
"WL#2971 ""change log-bin-trust-routine-creators=0 to apply only to functions"". Indeed now that stored procedures CALL is not binlogged, but instead the invoked substatements are, the restrictions applied by log-bin-trust-routine-creators=0 are superfluous for procedures. They still need to apply to functions where function calls are written to the binlog (for example as ""DO myfunc(3)""). We rename the variable to log-bin-trust-function-creators but allow the old name until some future version (and issue a warning if old name is used). "	ff46e549322d7c83a05a058a88bd7d4bb3ec74ed
----------------------------
"Provide a default ""minimum thread stack size"" PTHREAD_STACK_MIN where it is missing. (Currently, affects only BSD with Linuxthreads) "	74c57a6dc94e054ec1fdc76c4d72c15e9798ee05
----------------------------
"configure.in: Temporary work around to pass --build=... to configure in storage engine sub directory print_file.cpp: HP-UX compiler don't like variable shadowing AsyncFile.cpp: Cast result from strstr() to char* for HP-UX compile trigger_definitions.h: ""MIN"" and ""MAX"" are not used for trigger stuff, move to a more global include ndb_global.h.in: Define ""MIN"" and ""MAX"" globally for all NDB, in case the platform does not have it (like Solaris). Moved here from ""include/kernel/trigger_definitions.h"". Makefile.am: Add missing ha_* files to EXTRA_mysqld_SOURCES "	41b554daa9db270728a443957dc3fd6d3cc7cc87
----------------------------
"latin1.xml: Fixing latin1 to cp1252, according to recent changes in ctype-latin1.c. Index.xml: Marking latin1_swedish_ci as ""compiled"" to avoid its generating into ctype-extra.c. ctype-extra.c: Bug#12076 --with-extra-charsets has no effect All supported dnamic charsets were generated from sql/share/charsets/*.xml under #ifdefs. Compiling is to be activated from ""configure"" by adding --with-extra-charsets. I'm not including auto-recreating of ctype-extra.c into build process for ease purposes. "	5ffc4c64f9024716aa62a84be18bd2e013d5e1c7
----------------------------
configure.in: Changed back version to 5.1.2-alpha 	31bb67f3c3dda839dd669f8c94da9979b6bb9bdf
----------------------------
"config/ac-macros/zlib.m4 Accept any shared library for ""libz"", not just the static one. Bug#6584 Repetition of the corresponding change, as the 4.1 ""acinclude.m4"" is not used in 5.0. "	bf08909aa44a19723fd8e768758abeb174729487
----------------------------
Fixed failure of NDB config retrieval. 1. Made sure that base64 string is terminated with NUL. 2. Made calculation of needed size for base64 string exact. Added checks in test for the above two fixes. 	c45c24ed3f0d26e7d95e4dbe5409746938346fba
----------------------------
- Removed obsolete and outdated man page files from the man directory - these files are now maintained in the mysqldoc repository and included in the source distribution during the release build. Updated the configure.in script and Makefiles to create the man page file list at build time - Updated the file list in the RPM spec file to include all currently available man pages (this can not be done with wildcards, as the man pages are spread across several subpackages. However, RPM warns about unpackaged files, so newly added man pages can be spotted) 	f793d7b5bf4b8ba314d6588a0764818599e8dc58
----------------------------
1.2048 05/10/20 10:31:16 ingo@mysql.com +1 -0 Bug#12166 - Unable to index very large tables Moved clearing of errors behind the second repair attempt, but will clear only if no error happened. No test case. The error can be repeated with little free space on tmpdir only. I do not know of a way to create this in a portable way with our test suite. I did however attach a shell script to the bug report which can easily be adapted to the situation on the test machine. 	5f51294a3ce2f40483adb23a5140c90ff95c007f
----------------------------
configure.in: Set the version number to 5.0.16 	977187eb30abd02d8747cc4cde2186edfaf89e26
----------------------------
"Bug #12985  	Do-mysqlclient-test: Can't find -lyassl when linking - Use yassl_includes and yassl_libs instead of openssl_includes and openssl_libs to avoid that mysql_config returns that libyassl and libtaocrypt are needed for linking. "	0684dc1342e0e0bbf20224e159fb4b457b598f0c
----------------------------
"Fix for BUG#4544 ""read_only also affects temporary tables"": the READ_ONLY global variable now allows statements which are to update only temporary tables (note: if a statement, after parse stage, looks like it will update a non-temp table, it will be rejected, even if at execution it would have turned out that 0 rows would be updated; for example UPDATE my_non_tem_table SET a=1 WHERE 1 = 0; will be rejected). "	b386fef15fd1b8e6320fff472dac1dcc5cfb9ef0
----------------------------
mysql-test-run.pl: Put socket files into $opt_tmpdir, to avoid problems with platforms that can't handle long socket paths. 	00b535280da9fdf396b48a19bffed1cddc7528da
----------------------------
mysql.spec.sh: For 5.x, always compile with --with-big-tables Copy the config.log file to location outside the build tree 	4ea2aacb2a45c0e20d2d56f2baab67fd70ffa19f
----------------------------
"mysql.spec.sh: Removed unneeded/obsolte configure options Added archive engine to standard server Removed the embedded server from experimental server Changed suffix ""-Max"" => ""-max"" Changed comment string ""Max"" => ""Experimental"" "	5035abf052af06fc1f55cad00e7e106c74022c62
----------------------------
configure.in: - reverted NDB version number, too 	dcb347bf8b8556069532524c1a345df8136f7148
----------------------------
- revert version number in configure.in to 5.0.15 	921803e40944e0e2b7de1aa90841d83502a06c45
----------------------------
configure.in: New version 5.0.16 	c9d1e83edd1379d8159494777589b61786419c64
----------------------------
configure.in: rc => GA 	c6c4f03282e006d28924dc3f1c2ab2c1abe657e2
----------------------------
Fix typo (thread_cache should be thread_cache_size) in example configuration files. (Bug #13811) 	8f659d05a2d4641b437973be577a6b1427920729
----------------------------
make_binary_distribution.sh: Copy *.cnf files in mysql-test/std_data/ Makefile.am: Added std_data/*.cnf to copy ndb config 	94ea4f188a91d64c7741021e84a10d4f0a6d7121
----------------------------
"Bug #13009  	No gaps allowed in node id number sequence + some small bugfixes in ndb_config + extending ndb_config to print connections and take shm option "	fd0cd556525fed103e845ad20132f2f774aa55ff
----------------------------
Fix wait_timeout (and kill) handling on Mac OS X by cleaning up how signal handlers are set up, the blocking flags for sockets are set, and which thread-related functions are used. (Bug #8731) 	c8a6c2c6143dd8c92704920d455cc57050ce71ad
----------------------------
Fix minimum value of query_prealloc_size to be the same as its default. (Bug #13334) 	083c032ec3866697900d504e8e0c0c39da1a59a3
----------------------------
"Bug #13611  	 double [TCP DEFAULT] in config.ini crashes ndb_mgmd - Added error printout and nice exit for duplicate default sections "	e8f291f52b4de9242e776cd4832bcb8e2f5f8553
----------------------------
"Bug #13611  	 double [TCP DEFAULT] in config.ini crashes ndb_mgmd - Added error printout and nice exit for duplicate default sections "	57978f52fce339954d6d3a635939522aa4f6a5b1
----------------------------
my_pthread.h: Let pthread_mutex_init() macro return 0 on Windows mysql_priv.h: Return type is to be 'my_bool' for 'opt_enable_shared_memory' 	3af12c477662114f4e118bba6806af65f64b9793
----------------------------
- to ensure maximum available memory for TUP DataMem moved all array allocation to READ_CONFIG_REQ (except CMVI which was not possible) reorganized READ_CONFIG_REQ call order in ndb cntr to make sure TUP allocates first moved allocations internally in TUP to allocate DataMem first 	4bbc84de10cec73f02cdb74bee30d87ca645929c
----------------------------
ndb - mysql-test-run ndb_config Fix 32/64 bit insecure code 	2930a466eca532b09f50d72536a8871a00c2fd82
----------------------------
"Change ""mf_keycache.c"" so that it can be compiled without thread support (bug#11680): ""configure --without-server""   (without giving ""--enable-thread-safe-client""). "	c90673de8b7c0b236f1d1fa7a77aae3581887ab4
----------------------------
ndb_config Check returnvalue on load/fetch configuration 	bb70442366e7a2d70e663b0e124a3a5ace35bdfd
----------------------------
ndb Add support/test for using my.cnf [cluster_config] 	6cff2db93282e55cd178c72a2e46b305b011106d
----------------------------
ndb - add support for reading config.ini from ndb_config (as alternative to contacting ndb_mgmd) 	a30faa3b3488585e0e83443f8e02a3d54cb74b9f
----------------------------
wl#1882 allow ndb_mgmd to use my.cnf for cluster configuration 	035673c32d5457784e901524afaf3485066d7ff7
----------------------------
mysql_config.sh: Added -lz to link using libmysqld 	5b79dbb2eb7caa07eed2cadd370bf5544501f8c8
----------------------------
"BUG #13511 Fixed SETUP.sh to not overwrite prefix_configs, making 'make install' install in ""/"" "	6f693ae65b253d6a3964179f63cad4344b59065b
----------------------------
"Makefile.am, configure.in: Enable ""make distcheck"" to work "	095efe48a5eee7e25d0cbed551c70c3d24bd3855
----------------------------
Makefile.am: Revert to shell test script for test targets mysqltest.c: Windows pclose() returns error code in low byte mysql_config.sh: Remove -Xa -xstrconst from --cflags for Sun C++ 	0cfed79ea5377460ce6035e0f6efc75e279d7bf0
----------------------------
Add files for bdb/build_win64, and tweak the configuration to skip over parts of the library we have omitted. 	dcd8b9a50320cc79bc843a7ae210e63f9eb3f1e5
----------------------------
Standardised on capital letters for NDBCLUSTER 	7a815c4f9a683be99c19672bf8961b1be2395d93
----------------------------
Remove old and usused configuration locking code. Some new code that does this job is being written against 5.1. This code is largely removed from that work. 	dcb3e5975b9f33b2e624f3cafd1751122d07bab8
----------------------------
configure.in: Flag -DHAVE_DARWIN_THREADS not needed for darwin9 	c364baff71ee6065bd51b7e49686b9e8435895ea
----------------------------
Port to SCO OpenServer 6. May require running ./configure with --build=i686-unknown-sysv5SCO_SV6.0.0 	a540a66b2637202b28d0dbcc82b60f53ba1bacc3
----------------------------
Fixed a typo in the configure --help menu. 	e6bb90d6188f192134f9a349e6e0452884d157bb
----------------------------
added --core-file option to ndb executables added parseable printout in ndb_restore 	d5d360b180facaaab6f4ae10cfdae21890315c69
----------------------------
- removed the commercial BK license key from BitKeeper/etc/config to be able to push the repository to bkbits.net (License keys should not be put into the repository!) 	ec61094dafa9ce2c800c83c83aa166aeb3272dfb
----------------------------
configure.in: Back port of code to find the right 'ps' settings 	5e5184752d26956a9b42bc6b97269b1d4a019ba2
----------------------------
Bug #12043, do not core on misconfig unless debug compiled 	e0f3c5c0fb936fd0ebeee54c07ae16265e9537b9
----------------------------
configure.in: Changed back to 5.0.13-beta 	01f3a901a93661682e762e70c7257c0c32338d07
----------------------------
Makefile.am: Make ports configurable from environment for test 	e2954b29a12f071023c2a75190bad8ba9f980298
----------------------------
Fix handling of libexecdir and sbindir in mysql.server, and note that basedir and datadir settings in script may be overwritten by settings in configuration files. (Bug #12550) 	e2643c2942fb07e25d9207c04a0c8dd1bdf845ce
----------------------------
config: updated tomas default checkout 	0c859d6651277c2ee3664cb14bb34a23d048731f
----------------------------
config: changed tomas default checkout 	90778fc8578c7d779546061c4f5af416dad3599e
----------------------------
configure.in: fixed build bug with ndb grep block 	83664a83657e6bf7b7dc677612621849475268c2
----------------------------
removed ndb grep from configure .in 	653e99dea2099a1d47c82ad8142c0ac3cf4c74cd
----------------------------
ndb rename config.cpp -> ndb_config.cpp for case insesitive filesystems why wasn't this done in 4.1 directly 	523039c832c72d78c6c455bda7b583cbb580dc48
----------------------------
ha_ndbcluster.h, ha_innodb.h: corrected compile error 	e9ce46a0bc6bd45f012f0633a95fbca2615f530e
----------------------------
client/mysql.cc mysql default port cleanup (it's set in libmysql.c, NOT in my_getopt) configure.in autoconf 2.52 is enough to build mysql-5.0 	2870638ef2935fa4d938d46ed9d4373db11a4bec
----------------------------
set_var.cc, mysqld.cc, ha_innodb.h, ha_innodb.cc, srv0srv.c, srv0srv.h: Added innodb_commit_concurrency variable 	fc22a36d782f79d1b94a25db0dd0a7e9bb5bcc3a
----------------------------
Makefile.am: config.cpp => ndb_config.cpp, solves link problems on case insensitive OS ndb_config.cpp: Rename: ndb/tools/config.cpp -> ndb/tools/ndb_config.cpp 	fd4880814c69252f32becbb1e9eef56f10cdd116
----------------------------
"A fix for Bug#11901 ""mysql_stmt_attr_set CURSOR_TYPE_READ_ONLY join in subqry order by server crash"": failing DBUG_ASSERT(curr_join == this) when opening a cursor. Ensure that for top-level join curr_join == join (always), and thus fix the failing assert. curr_join is a hack to ensure that uncacheable subqueries can be re-evaluated safely, and should be never different from main join in case of top-level join. "	f6306a8db10a17d5ad560b8e53b0ec3d425bb977
----------------------------
Added support for ha_ndbcluster::info(HA_STATUS_AUTO) 	7ccf9b970839a25e92e2e8e9ce85c5efa4a38f65
----------------------------
"A fix and a test case for Bug#11909 ""mysql_stmt_attr_set CURSOR_TYPE_READ_ONLY nested queries corrupt result"" "	043f77ccdf67a9102c59828bed6b76e5e3840c2f
----------------------------
Bug#10473 - Can't set 'key_buffer_size' system variable to ZERO Give the user a warning if he tries to destroy the default key cache. 	1147e0027424acfed7cd833d0edbd6f111208f8a
----------------------------
Fixed ndb_config problems with merge 	db8e0b73066986d94360c73f7eda555fe0d5f449
----------------------------
client_priv.h: Removed ending comma in enum Makefile.am: config.cpp => ndb_config.cpp, solves link problems on case insensitive OS ndb_config.cpp: Rename: ndb/tools/config.cpp -> ndb/tools/ndb_config.cpp 	19ad0933f98894df518dcc3a0b6bec785041da99
----------------------------
mysql-test-run.pl: Back ported ndbcluster_support() from 5.0 Corrected the server id handling 	468c3ad532634203dae06e852812fc9a283f6fff
----------------------------
Portability fixes: - Moved a few DBUG_ENTER statements after the variable declarations to satisfy some compilers (e.g. gcc-2.95.x, gcc-2.96, IBM xlc_r) in ndb/src/common/portlib/NdbMutex.c and ndb/src/common/portlib/NdbThread.c - portability fix for FreeBSD 4.x and HPUX: replaced atoll() with strtoll() in ndb/tools/config.cpp 	6893e5969a032d679e7ded45ce4986e951df5ba2
----------------------------
fix for bug#12665 macro floatget was missing in config-win.h 	10615d54fbbef551cdf87824bde22ad6c786071a
----------------------------
ndb - mysql-test-run - ndb_partition_key remove length of frm files as this is config dependant 	2cb41714fa398f1ddc06af56eb66274ebe328403
----------------------------
"ndb - only run ndb_config test when using ""default"" config "	c0b4c8f13d83b64b7ee421808acf640e0f1f817f
----------------------------
Fix for bug #9110 (Max_join_size error) 	9bab1c09a6435ce3b301abba3fad462a21103af6
----------------------------
ndb - changed config 	1b3139977423a3fad4df9c3e80dab83ac2ca9341
----------------------------
ndb_config test requires ndb 	be8d46028f233aac0119d88b5759cddf8823bbb4
----------------------------
fix (bug #11964: ALTER TABLE gives wrong error message with sql-mode TRADITIONAL (timestamp)). 	efc8404a408158720a321fedf4a103d85404e7f4
----------------------------
ndb - add mysql-test-run test case for ndb_config 	b285050e52cd22202559b8dd9c18f4a3645fa598
----------------------------
Add tool to extract config info from ndb_mgmd 	5490cdfb24695ff23dad57d3b7b0976238800e4b
----------------------------
"Post-review fixes for WL#2713 ""Change IM behaviour so, that it only reads and alters one config file only."" "	9644bc3e2bbbe5c889ca737bfe893de883ceb57a
----------------------------
WL #2713 Change IM behaviour so, that it only reads and alters one config file only. Implemented on brian's request. 	b9fcdfbb0fdf456fd9a083c7fb53aa480f623d9f
----------------------------
ha_ndbcluster.cc: BUG#12040 Fixed compile failure by using %p instead of %x to print a pointer in DBUG_PRINT 	7e4179ea0269c09fc2f15fdabdf59be32f45c817
----------------------------
printout of cluster config to use same tokens as documentation 	c9abae2ce2b2bea4f3bfc338effda6b5e93f12f3
----------------------------
ConfigInfo.cpp: BUG#12028, cannot use default section for hostname in cluster config made clearer error message 	2f01676b379427320c14c88cde111b17415608b8
----------------------------
BUG#12028, cannot use default value for HostName in cluster config + added switch --print-full-config + removed unused REP configuration 	74438e6683b0b3e42fbe8e72a7b45612a468b206
----------------------------
Bug#10932 - Building server with key limit of 128, makes test cases fail This patch allows to configure MyISAM for 128 indexes per table. The main problem is the key_map, wich is implemented as an ulonglong. To get rid of the limit and keep the efficient and flexible implementation, the highest bit is now used for all upper keys. This means that the lower keys can be disabled and enabled individually as usual and the high keys can only be disabled and enabled as a block. That way the existing test suite is still applicable, while more keys work, though slightly less efficient. To really get more than 64 keys, some defines need to be changed. Another patch will address this. 	ec15dda2bfa246d71a257da2d25c3d398b4d4cc4
----------------------------
"Reimplement use of ""config_readline.h"" to get readline configuration. "	7d7a4626fc627d086391c2e817ae2d479c359301
----------------------------
a fix (bug #9881: ALTER TABLE gives wrong error message with sql-mode TRADITIONAL). 	b11d04e50a3bc176499194b869e5ed6d4123e41f
----------------------------
misc (memleak) fixes: added using ndb_end and showing mem allocation stat at exit added init of variable added destruction of LocalConfig to still memleak added delete of theFacade on exit stopSessions(true) on socket server to ensure destuction of threads added destruction of arbit manager thread added true option to stopSessions in transporter facade to ensure destructions of threads 	ec52d680d23ed13a1f1799301f77dc0da2eeae72
----------------------------
Bug #11903, make perl test script run ndbcluster tests by default 	a2ffbb55159e7f929b8f742201ec4ac629be19b9
----------------------------
Fix crash caused by calling DES_ENCRYPT() without the --des-key-file option having been passed to the server. (Bug #11643) 	de9909faec7ae81b7946f314b97ff2da8be7fe2e
----------------------------
InnoDB: Make the srv_thread_concurrency checks more consistent. 	006bb7bbc902f82af8feb6ac239057ba1f8caad8
----------------------------
- bumped up version number in configure.in to 4.0.26 	c760d27cf1eb14d9b3c3d5ad66e687ede9f5fd20
----------------------------
configure.in: Enable build with CXX=gcc and gcc version 4 	22fd02d157b865b25a3cd2003b2f8b07b2242493
----------------------------
Many files: Fix Bug #3300 : if innodb_locks_unsafe_for_binlog is set, release locks on rows that we do not UPDATE or DELETE 	4fe03b705a38e283c3395a4a4bbae2d3ef1e9a72
----------------------------
"A fix and a test case for Bug#11172 ""mysql_stmt_attr_set CURSOR_TYPE_READ_ONLY date/datetime filter server crash"". The fix adds support for Item_change_list in cursors (proper rollback of the modified item tree). "	0efa6f86be8e7e29be6a85d0935ffbae69df7057
----------------------------
"A fix and a test case for Bug#10736 ""mysql_stmt_attr_set CURSOR_TYPE_READ_ONLY select within select"". The bug was caused by the reset of thd->mem_root to thd->main_mem_root in Item_subselect::exec, which in turn triggered too early free_root() for data which was needed on subsequent fetches from a cursor. This reset also caused a memory leak in stored procedures, as subsequent executions of instructions containing a subselect were allocating memory in thd->main_mem_root, which is not freed until the end of the entire SP, instead of the per-call mem_root, which is freed in the end of execution of the instruction. "	8b0cee88f0da2bbb47a359c29ade03673b97092a
----------------------------
configure.in: Enable build with CXX=gcc and gcc version 4 	7817b69d808dfa4b8ec7ac1915de33584177b9c2
----------------------------
Fix max_connections_per_hour handling when the global max_user_connections is also set. (Bug #9947) 	d4dea98f44c17064a43b582a0371cfae5ad3480a
----------------------------
InnoDB: Optimize the extension of files.  This will greatly speed up CREATE TABLE in innodb_file_per_table=1 mode. 	8064ee217f481d3866dbaab62b237bed6b61864b
----------------------------
If mysql_config is a symlink, resolve it before trying to find the lib and include directories relative to where it is located. (Bug #10986) 	13773acc1b534ab2edb6701f0c54184ae45d82f3
----------------------------
Fix handling of datadir by mysqld_safe to support specifying a different DATADIR via the command line or during ./configure and still starting up mysqld_safe via a relative path. (Bug #7249) 	9f4c796922306965c7dd0e352f65184d3a96b4ac
----------------------------
Restore creation of files for temporary tables in the tmpdir, which was broken by an earlier bug fix. (Bug #11440) 	d11ef13ad990ac3d44e923b7b2ddebcb9e0128c7
----------------------------
"mtr_cases.pl: Bug#11466: Script can now get test case name from test case file path on command line mysql-test-run.pl: Bug#11466: Added --skip-ndbcluster/--skip-ndb option mtr_cases.pl: Don't set --default-time-zone if opt file sets it Restart the server if time zone is given in opt file mysql-test-run.pl: Don't remove symlink to ""var"" directory in cleanup Removed duplicate/unessesary options to mysqld "	9426710c68dc27dade8d189baacc00296dd53e5d
----------------------------
ha_ndbcluster.cc: Added CR for readability 	d34fce5bf6285f0a9e4c001e75baf4e57c4450fa
----------------------------
mysql-test-run.pl: Added --log-bin-trust-routine-creators to server start Increase and autoextend innodb tables 	9a8cb4406efff697daa6f5990d09a3b75ea028db
----------------------------
ha_ndbcluster.cc: remove typecheck in ndb handler not needed 	61c36b1c12c196a155d8f8ce8349a86b355c2cb5
----------------------------
config/ac-macros/yassl.m4:     fix --without-yassl configure.in:                  fix --without-darwin-mwcc 	271f9e484dd1f69f4e595697e77b600e9b65abc7
----------------------------
ha_ndbcluster.cc: workaround for bug being fixed 	6e9427544df690e188d2ae3f70f54aeecda56612
----------------------------
"""configure.in"": Correct equality comparison: In shell 'test', it is single '=' (bug#11007). "	bd0386839c550e7ceaf86778933c4eb5e8b15407
----------------------------
BUG#11132 Connections stuck in CLOSE_WAIT In 4.1 (it is different in 5.0), we do not use the mgm connection after fetching the configuration (and if we did, we would have to have calls to check the connection and reconnect if needed - in case the mgm server had restarted) so we can disconnect after first use. This means we won't have connections stuck in CLOSE_WAIT when the mgm server shuts down. 	fda3561e169ea64f622a13c472fc0049b463205d
----------------------------
Fixes in function modify_defaults_file(): - Removed unneccessary variables. - Made a function of that part of code, which actually changes the line under modifications. - Fixed memory overrun problem with my_malloc. Too little space was reserved. - Fixed problem in case, when new option was added at the end of the section. Before, it was added as the last line of the section, even if it left empty lines between. - Fixed so that the configuration file is not saved unneccessarily, if no modifications are done. (file timestamp remains) - This should fix (at least partially) problems described in Bug#10806 	9f3daa23712665b73bcf8344b62646015112106a
----------------------------
"A fix and test case for Bug#10729 ""mysql_stmt_attr_set CURSOR_TYPE_READ_ONLY"". The bug was that we (me) don't perform proper cleanups of the prepared statement when done fetching from a cursor. Another patch. "	95e620485cc15b7d15c47776f9b50915065b7759
----------------------------
config-win.h: Enabled yaSSL on Windows Many files: Added yaSSL to Visual Studio 6 project files 	4d0a81aa8bad3d0fefb47b9e619d1a9d0e706772
----------------------------
Fix for BUG#10675 - MySQL fails to build with --openssl on Mac OS X 10.4 BUG#11150 - HP-UX yaSSL/OpenSSL configure/header problem Remove obsolete code. 	cc31c4c7fb0c400490c12f993abb567f20bc305e
----------------------------
BUG#10893 Cluster hangs on initial startup IPCConfig wasn't constructing the connect string properly. 	a65c0b000a611dabd3ff359953895003217f0b14
----------------------------
sql_select.cc, item_buff.cc, item.h: Fixed bug #11088: a crash for queries with GROUP BY a BLOB column + COUNT(DISTINCT...) due to an attempt to allocate a too large buffer for the BLOB field. Now the size of the buffer is limited by max_sort_length. group_by.test, group_by.result: Added a test case for bug #11088. 	90dd86907ef5f0714b18cc66851b9407a3794ee5
----------------------------
- include/config-win.h: removed double HAVE_CHARSET_cp932 #define - mysql-test/Makefile.am: added a pattern match for t/*.sql (t/mysql_delimiter.sql was missing from the source distribution) 	852a57300d3891f877ed368dae3f728284b89bce
----------------------------
*don't* mess with kernel defines, boy. and HAVE_ATOMIC_ADD/HAVE_ATOMIC_SUB is tested in configure 	f55a378e9a4724a25966829c0c54acb11b362296
----------------------------
configure.in: merge 	85d09062012cc7f920d42b19a8dcd09b2906c8b6
----------------------------
scripts/mysqld_safe.sh Only add --defaults-extra-file=$DATADIR/my.cnf if $DATADIR/my.cnf is readable. 	8a77c6f7417771efc826bd0595ca414ead94d582
----------------------------
Bug #10181 mysqld.exe crash with an access violation after INSERT INTO mysql.host sql_acl.cc: Make sure host.db is a valid string pointer before we do our lower_case_table_names comparison 	57a2b04007c994de9fd47ea3ce5e5df9633023d1
----------------------------
BUG#9993 2 unexpected warnings when dropping a routine and --skip-grant-tables - Dont perform automatic privilege handling for stored procedures when server is started --skip-grant-tables - Renamed view_skip_grants to skip_grants and added test cases for this 	8401cd5d790c02d7ae67137e3a9df88cf06484fd
----------------------------
Fix table renaming to not lowercase table names for all storage engines when lower_case_table_names == 2, as it did previously for InnoDB and MEMORY. (Bug #9660) 	aac55df4f40e2531b13b35e308c9fe5d00d2acae
----------------------------
configure.in: Increment to next version. 	8091707afe469a8452046c1823ca19c9b57ac7aa
----------------------------
Added support for BETWEEN and IN in condition pushdown to ndbcluster by rewriting them as AND and OR expressions 	0b8de7cfced1dd1e1ca13ba2dab5ac76854434b5
----------------------------
sql_yacc.yy: missing semicolon added sql_base.cc: bad merge fixed sp_head.cc, view.test, view.result: Correct restoring view name in SP table locking BUG#9758 configure.in: restore -fno-implicit-templates -fno-exceptions -fno-rtti in configure 	56fa40e558851eed58b87a0a29c09008e8a80595
----------------------------
concurrent-insert can now be set to 2 for concurrent inserts when there is holes in the data file myisam_max_extra_sort_file_size is depricated Ensure that myisam_data_pointer_size is honoured when creating new MyISAM files Changed default value of myisam_data_pointer_size from 4 to 6 to get rid of 'table-is-full' errors 	2d25da2a4ba244f4de26581e5b16518230f381df
----------------------------
- don't include sys.h directly in the autogenerated libedit source files - include config.h instead (compile fix for FreeBSD and AIX 4.3/5.2) 	27ab139dfa897513db7ff100d7fec415f6662010
----------------------------
"- added a check for ""u_int32_t""  to configure.in that will define HAVE_U_INT32_T when available (needed to fix a double typedef in libedit) "	f6593cb7d418b72ed60c77c32aa9062b2b2ee0f1
----------------------------
Makefile.am, configure.in: Enable creation of embedded lib when --with-darwin-mwcc 	faf8f825b546e33b0ec78f88afe7b02b3606bb98
----------------------------
configure.in: Bumped up version number to indicate 4.1.12 was branched off 	2f9a28b4cca7c4ed1d64f5bb72549a6eea6e07e4
----------------------------
ndb - autotest fix configs and scripts 	749129487e30f9b22f545ab46f605cc1a5cfb938
----------------------------
Add support for slave_compressed_protocol, slave_load_tmpdir, and slave_skip_errors in SHOW VARIABLES. (Bug #7800) 	d398b6eb51ce29c27a8479594dd9cd167f177b0f
----------------------------
"[backport of 4.1, because 4.0 autobuild now hits the same problem; when merging just use ""ul""] In configure.in, don't remove $AVAILABLE_LANGUAGES_ERRORS_RULES at end because config.status may later need this file (if it does not find it it won't incorporate dependencies of errmsg.sys in sql/share/Makefile). In sql/share/Makefile.am using ""all:"" leads to double-""all:"" in Makefile. "	a1948f769c596aeefd57a8ebee9386d261b1897f
----------------------------
ndb - autotest put config files in bk 	df5eedb8aa8c0c54557e759d08f6fd9fe68233c4
----------------------------
ndb - autotest use newly created script for faster handling of several configurations 	df80304435713606b10b2879411ba6c93b2aba99
----------------------------
ndb - autotest update make-config script 	9d0c5428386ddb8fa7c5451f0460e88a40b0ac8e
----------------------------
Bug #9721 net_write_timeout not used on Windows viosocket.c: Use ?: syntax to simplify code for setting both timeouts 	e4523c23193dace1f7e4d398d181f49df631cf8d
----------------------------
A fix (bug #7970: CONFIG_NR_CPUS not defined for kernel header percpu.h). 	e1b6b7fe36cc1f116062389c0e8b0d412e922490
----------------------------
Bug#10193 Invalid DataDir in config causes ndbd segfault 	a17bf3f46510c205cb83520e693660a6b7090440
----------------------------
Bug #9721 net_write_timeout not used on Windows Added an extra parameter to all calls to timeout(). 1 means we want to set the write timeout 0 means we wnat to set the read timeout viossl.c: Add which parameter to ssl timeout routine vio_priv.h: Added which parameter to vio_ignore_timeout and vio_ssl_timeout violite.h: Add which parameter to vio_timeout sigs net_serv.cc: Use proper which code in call to vio_timeout to set the proper timeout viosocket.c: Set the appropriate timeout in vio_timeout 	e7d7c0f23630cd75d6912feb4196a84f82566a57
----------------------------
Fix option handling of ./BUILD/compile-* to not try and pass options to configure. It was already changed not to support additional options, but now it was trying to pass all of the options to ./configure. (Bug #8648) 	bff994f86b319ed8bece36e7dfa13d92560be9a5
----------------------------
terminal.c, sql_bitmap.h, my_sys.h, configure.in, config.h: Initial Metrowerks CodeWarrior compiler support 	c4acdc6e0fcdd74e62eaeadac7c7508f0a4950a8
----------------------------
- adjusted the start and stop priority level in the mysql.server init script for chkconfig on Red Hat Linux (BUG#9444) - we now match the levels used by the MySQL as shipped with Red Hat Linux (e.g. RHEL3/RHEL4) 	59930b6e84109a511c4d91e3e3bf1efc9781fbd6
----------------------------
yassl changeset 2: remove FIX_GCC_LINKING_PROBLEM and -DDEFINE_CXA_PURE_VIRTUAL replace echo in configure.in with AC_MSG_WARN/AC_MSG_ERROR don't set -DUSE_MYSYS_NEW for gcc 2.95 set $USE_MYSYS_NEW even if CXX is g++ yassl bugfixes instantiate all yassl templates explicitly 	9c332d8d2a09782ebc773387556f85e63433cd1d
----------------------------
Fix 'CREATE TABLE ... LIKE ...' when lower_case_table_names is set on case-sensitive file systems and the source table was specified in something other than lowercase. (Bug #9761) 	8ef6ae74420b080ddc865a468013b42004cc1d49
----------------------------
Add default configuration files to my_print_defaults usage, and add handling of configuration file in the Windows shared system directory. (Bug #5354) 	2441da8cd96e1d7a8875d01692a08a5ff0a2320c
----------------------------
Fix tiny typo in configure.in 	b31960f71dd4d5809635858d774bdf292a067b3d
----------------------------
ndbcluster.sh: merge 	2df87238080705b46f3427c745ef9fb27c47c4d8
----------------------------
dict0dict.c, dict0dict.h, fil0fil.c: Fix a problem in crash recovery of .ibd files on Windows if the user used lower_case_table_names=0 or 2; the directory scan in crash recovery forgot to put all paths to lower case, so that the tablespace name would be consistent with the internal data dictionary of InnoDB; remember that InnoDB puts internally all database names and table names to lower case on Windows, regardless of the value of lower_case_table_names 	bea92e16463d9ada60a975298268fa2c13c4e53f
----------------------------
Merge changes to acinclude.m4 that are now in config/ac-macros/misc.m4 	fcc04b2ffd51ab4fb4799c99054499e61eb42136
----------------------------
Added a check for config-file. 	005c447183651411ead446e463909118f7020298
----------------------------
"Fixed Bug#9834, ""mysqld_multi --config-file parameter requires absolute path"". "	c98b90bbfb168f5d5653380e54cd19eeba3b9fff
----------------------------
"Fixed Bug#6221, ""mysqld_multi doesn't read the init_connect option in my.cnf correctly"" "	d4d0f9c1269cbac0c7accca7d27eb97138eb3a49
----------------------------
Final fix for NPTL configuration (bug#2173, bug#5871, and bug#9497). 	74fdb2663cb97bac5bb60f0aa2431bd9f951b787
----------------------------
Post-merge fix of the fixes for NPTL configuration (bug#2173, bug#5871, and bug#9497). 	1523119091522b364692dcb65e181d7e193d65ee
----------------------------
Merge: b890c05 70ed0ea Automerge / manual check  of the fixes for NPTL configuration (bug#2173, bug#5871, and bug#9497). Post-merge fix will follow. 	49ac2dac3e148b994859ab8b43de40270ed409b5
----------------------------
- fixed NDB_VERSION_BUILD in configure.in to have the correct number (4->5) 	83c289665fa0e94bb5f6e4e29af3abacc3bf17f7
----------------------------
"- bumped up version number in configure.in to 5.0.6 now that engineering branched off for the 5.0.5 builds - tagged ChangeSet 1.1882 as the ""clone-5.0.5-build"" branchoff point "	cd10a69be2afb0f2fcea48446160c0ba2c645b9d
----------------------------
Post review fix of ndbcluster_drop_database, typo 	93498bdf5a6d13b4bf9e8a3d996df09b8f68799e
----------------------------
Post review fix of ndbcluster_drop_database, print error 	4649d5c30f078b6c0254f877c239964978ee409a
----------------------------
Post review fix of ndbcluster_drop_database 	3a9af0553b1ea1056ce0cfea531f46ca1f826b36
----------------------------
"Step 3 of the switch to support configuration with NPTL: Change ""configure.in"". The branches for Tru64 (ex: OSF/1) and Linux are separated, and for Linux 'getconf GNU_LIBPTHREAD_VERSION' is used to tell between Linuxthreads and NPTL. "	70ed0ea4cb109262fe3ba18705f94f4f70fcf239
----------------------------
- added missing file config_readline.h to the source distribution 	11bb365f689d866976e3eaf8c0465b56c7e34c6d
----------------------------
"Step 2 of the switch to support configuration with NPTL: Define a new CPP symbol that the target OS is Linux, and use it where only the OS matters and not the threads Library. Until now, 'HAVE_LINUXTHREADS' was used to indicate ""Target is Linux"" in many places. When we support configuration with NPTL but no Linuxthreads, this misuse must cease. "	eaa79cb45234f4a675919cb4565adac45601e971
----------------------------
Step 1 of the switch to support configuration with NPTL: Rename 'IS_LINUX' configuration variable to 'TARGET_LINUX'. 	48ba5e495666fd5db051c1a1aa9d4d61a85f07c0
----------------------------
BUG#9568 mysql segfaults from CTRL-R - Segfault because of passing a 64-bit pointer to 32 bit integer. - Add new include  config_readline.h which will calculate some new defines based on what is found in config.h - This file was originally included in readline 4.3 as config.h.in, only the part that makes new defines have been moved to this file. 	4a4c9017add2b693c64526b5f46181c128459d5b
----------------------------
Set bindir, datadir & others if --basedir is given. This ensures that one only has to set basedir in [mysqld] group when moving a binary installation to a not default polace Use for now safe_mysqld by default. (unless use-manager is set in the [mysql.server] option in my.cnf) Search first for defaults files in basedir and then in datadir (like mysqld_safe) 	0c03aea1aa6b94b7b96324dbd597e295e268e85b
----------------------------
Fixed core dump with long timezone names Don't abort on bootstrap if a wrong --default-storage-engine is specified 	8d919770c71178cc430fd515eaed3859e65792da
----------------------------
"Adding --innodb_fast_shutdown=2 which shuts down InnoDB faster than the default ""1"": most InnoDB threads are not terminated properly and the buffer pool is not flushed to disk. Still no committed transaction is lost as we flush the logs to disk. InnoDB does crash recovery at startup after this shutdown. Using this shutdown in testsuite (mysql-test-run --mysqld=--innodb_fast_shutdown=2) saved 3 minutes (13% of total time). "	bc48cda57d4117c2cc0696318e840a514fdcc1e5
----------------------------
Don't allow the server to start up when an invalid user is specified via --user or in configuration. (Bug #9833) 	47ab7c87851fa49495230927d4156ed0259fa5e5
----------------------------
"In configure.in, don't remove $AVAILABLE_LANGUAGES_ERRORS_RULES at end because config.status may later need this file (if it does not find it it won't incorporate dependencies of errmsg.sys in sql/share/Makefile) (thx Serg). In sql/share/Makefile.am using ""all:"" leads to double-""all:"" in Makefile (thx Konstantin). "	f356fb08d6ba3b4b0259fe34a20cf5c8afd26487
----------------------------
"Manual transfer of the change in ""configure.in"" (4.1) to ""config/ac-macros/character_sets.m4"". "	fc0e6aa274c876fac17705d37b6d802f0e7d02e0
----------------------------
"Merge: 588559e ea39dff Proper handling of ""utf8-general-cs"" clollation: Missing parts in configuration. "	198b6117f9df61dc2b65369bade00015dba1877f
----------------------------
- bumped up the version number in configure.in from 5.0.4 to 5.0.5 to indicate that engineering has branched off from the 4.1 tree to build the 5.0.4 release 	d936a80ceaa813170c94c681cd97fb80b28b901c
----------------------------
Fix handling of max_allowed_packet and net_buffer_length in embedded server when a size suffix (K, M, G) is added. (Bug #9472) 	9e16f121455042848dd5234b46bd9ef076798dfd
----------------------------
As of 5.0.4, all builds will use '--with-big-tables'. Let development builds follow. 	750de61d2357f682f32f540c38681a85d98bcdfb
----------------------------
Do-compile: Added option --with-big-tables 	bb713b13df68e8bd72879990187c021b70f2af9b
----------------------------
"Implement the new '--with-big-tables' flag to ""configure"". Using it comes merged from 4.1. "	c4726b9e2046b6c5f36e0bb472211752271c408c
----------------------------
Merge: 4bd9070 1ad3d33 Propagate the new '--with-big-tables' flag from 4.1 to 5.0. Incomplete, as the macro body must ne in the new file 'config/ac-macros/misc.m4' which will follow in a separate changeset. 	27a0de24435f1d331308037bada0c1d12f49809b
----------------------------
"Introduce ""configure"" support for a new '-with-big-tables' option that can replace the current way of passing '-DBIG_TABLES' to the compilers. This is needed even in 4.0, as 'Do-compile-all' must use this new approach for all ""max"" builds in 4.0, 4.1, and up. "	c90a6c706772208b658e544b0b1732880b713d4f
----------------------------
Remove redundant my_security_attr_free() from handle_connections_shared_memory (double free spotted by Monty). 	2115900460946d2a9faab973d8860ef0124a8694
----------------------------
configure.in: 5.0.3 is a beta 	4959ed7618342be80573f6712f5a6a190ac408c0
----------------------------
BUG#9072 'Max_error_count' system variable cannot be set to zero - Chaned min value in mysqld.cc - Added testcase to warnings.test 	a5bb4810ff33e89e160e340e9ab56cbb2fa5c605
----------------------------
IM setup patch. Enable IM instead of mysqld_safe in start/stop script. Alter RPM to include mysqlmanger binary and config files. 	28bf536411100596694d4380dc2e613653df9369
----------------------------
"WL#2269 Enable query cache for NDB part 2 -This is mostly fixes for correct behaviour when using query cache + transactions + the thread that fetches commit count from NDB at regular intervals. The major fix is to add a list in thd_ndb, that keeps a list of NDB_SHARE's that were modified by transaction and then ""clearing"" them in ndbcluster_commit. "	2bdd710d3ce18a39eb8db29ff9e77c35c65c2454
----------------------------
set_var.cc, mysqld.cc, ha_innodb.cc, sql_class.h: Add a settable session variable innodb_support_xa; setting it to 0 can save up to 10 % of CPU time and 150 bytes of space in each undo log trx0trx.h, trx0undo.c, trx0trx.c, trx0roll.c: Enable XA if innodb_support_xa is not set to 0; make prepare to do log fsync's according to innodb_flush_log_at_trx_commit 	a95f09e228919cdd9e6ded344d925e95225ecf14
----------------------------
sql/ha_ndbcluster.cc after merge fix sql/sql_parse.cc correct max_connections condition 	e40bf3c40be557687bcd2d318b092ac0ed0275ef
----------------------------
configure.in: bug#5102, bug#6862 define HAVE_VIS_H to libedit only if header and strvis() exists 	73eea6dde9db8f7c64cf82dc649d6cc564960cd4
----------------------------
configure.in: corrected ndb version 	6a46a75a20452640b9d6d655b92f4111090388cf
----------------------------
This code change has 0 effects as it's about the case where innobase_very_fast_shutdown!=0, which is always false. In a very fast InnoDB shutdown, we just ensure that no more transactions are running, flush InnoDB log, signal InnoDB threads to die, and then return from InnoDB (from innobase_end()) without waiting for those threads to actually die. I have tested on a 4CPU machine that even with --innodb_flush_log_at_trx_commit=0, this optimized InnoDB very fast shutdown loses no committed transactions. Patch pre-approved by Heikki. 	8b625529c971018339638b2c2f18981886dcc963
----------------------------
- bumped up version number in configure.in from 4.0.24 -> 4.0.25 (ChangeSet 1.2073 was already tagged as 4.0.24) 	8948e774f611211f7136ed1493d9d011145dbad5
----------------------------
mysql-test-run.sh: added skip-ndbcluster switch 	dfab08eab003b4550c190c68e0ebb02f37d40ead
----------------------------
Fixed crash if max_connections is exceeded. BUG#8996 	24728104897219d92523f3a5c416f2f433476978
----------------------------
mysql-test-run to default run with ndbcluster if compiled with that support 	f5e9b79c28284774a0c126670916ba247a7c4753
----------------------------
Default value of slave_transaction_retries is now 10 (whereas it's 0 in 4.1, for safety as this is new code). 	fa27e11923af273a83aefbecd1c3b9405593c62b
----------------------------
Fix for bug #8701: Server crash on 'set @@transaction_alloc_block_size=...' 	a55711b424b483296aa141fefd18d3f429215867
----------------------------
"Fix for BUG#8325 ""Deadlock in replication thread stops replication"": in slave SQL thread: if a transaction fails because of InnoDB deadlock or innodb_lock_wait_timeout exceeded, optionally retry the transaction a certain number of times (new variable --slave_transaction_retries). "	11a1c83c03285ccf6e28a7849f272323a493424b
----------------------------
Make sure that the filename for temporary tables is built with fn_format() so that extra slashes are handled in tmpdir. (Bug #8497) 	ac69a4a22c7d2753631b81eb5fe7a5d05a272bf2
----------------------------
Fixes from Tomas's review of 'use configuration mgm handle as a transporter'. This should help with the  PURGE STALE SESSIONS problem. 	7fda68612d80e5a9af0305e6056af60189401250
----------------------------
#ifdef innodb specific code, (old_innodb_table_locks) 	a0aac3e3f85eba0bdbdbf0381e603fee6b701415
----------------------------
Don't try to create a symlink if the DATA DIRECTORY specified for a table is the same as the normal datadir for that database. (Bug #8707) 	3ecabaa9f7c0f6cf5d38391c5e38580d798802fa
----------------------------
mysqlbinlog: safety measures (safe setting for completion_type, auto-end-rollback in case crashed binlog) which cannot hurt. 	69fb5af28a11c065a1b0d25b9fb966a75274b255
----------------------------
Fixed a compatibility problem. 1) If my.cnf is found in datadir and basedir, give a warning and use the one in basedir. 2) If my.cnf is found in datadir, use it, but give a warning. 3) No warning if my.cnf is in basedir. 	6e9b26e8b75422959b48c673b5f6abeae7fa69ad
----------------------------
ha_ndbcluster.cc: Fixed faulty debug printout ndb_condition_pushdown.test, ndb_condition_pushdown.result: Added BINARY and VARBINARY tests 	e0dbdca79ef549431412e8bbe26d4443f3192ecf
----------------------------
config-win.h: Activate Unicode collations in Windows version. 	99937c2b9194a50a5c175ab6cf50b0056836dd84
----------------------------
Use the mgm connection used for fetching configuration as a transporter. 	e88eba65a7f706c180076f62d7ba46db61921655
----------------------------
Fixed compiler warnings Fixed failing myisam.test and rpl_rotate_logs.test on some configurations 	f55e2002484b822851b5ce26e65eb82c0caed5f5
----------------------------
corrected errors in how ndbcluster handler closes down in case of error 	d863b8951da7dba8cb728f1b2e8018bae38e8f39
----------------------------
changed switch name from --ndb-mgmd-host to --ndb-mgmd + simplified code 	40a8e0730b31a15459aafab122f3370ba7dcaa6c
----------------------------
Merge: fe8c9e4 c926e43 Merge: don't add this into configure in as it is already in config/ac-macros/character_sets.m4 	dcb0f52e9a5dffaa5c725b2da914f95c5705fac7
----------------------------
"added mutex lock for ""get config"" "	7a057433e1cd919b25adcc7db377fef4b70a0ed9
----------------------------
bug #8556 corrupt ndb_mgm show printout for certain configurations 	33c297cfb0c8675fe1d6e4ace120d433b8725b1f
----------------------------
removed NdbMgmHandle from TransporterRegistry constructor changed to set NdbMgmHandle from IPPConfig, and use info from configuration, instead of mgm handle from config retrieval 	a3a1d50a724c420d2b399004fa9cff7cc1804ab8
----------------------------
Small fixes and added comments to condition pushdown to ndbcluster, after code review 	59a986d94794ba28ea2f3f40922a6a37457911fd
----------------------------
WL2278 - Dynamic port allocation for cluster nodes Re-introduce ability to have [tcp default]PortNumber= 4242 in config.ini to NOT use dynamic ports. Dynamic port numbers are the default though. We still use the mgm port for transporter connections to a mgm server though. This is (slightly) different than before, but since you have to be able to connect to the mgm server anyway, this does not require extra firewall rules or anything. 	e29f14c8437c2548e3c212b78f51d59c01cd905e
----------------------------
Always lowercase database names from 'host' and 'db' grant tables when they are loaded and lower_case_table_names is set, but issue a warning when it is done. (Bug #7989) 	a6afab6a55026bf4d8fce13d5ab44decf92ffe68
----------------------------
InnoDB: Create temporary files in the MySQL tmpdir instead of $TMPDIR. (Bug #5822) 	a1a78bbc4a80322b231f5e68751bbeb10b209af0
----------------------------
Allow hostnames that are IP addresses with a netmask even when running with --skip-name-resolve. (Bug #8471) 	3d7a384d00aa3c1dd42a46d9c871b39802e57ec3
----------------------------
corrected error in checking  get() return value from config iterator 	c9e5baccf5d1bcc569602f6e7164a71454678876
----------------------------
mgmapi to return connected port and interface _only_ if it is actually connected use m_cofigMutex when configuration is accessed use c++ iteration interface everywhere in MgmtSrvr code use NDB_INVALID_SOCKET everywhere in Services.cpp 	05ad345db41cb4091b2fe11bc61bedb7b22a1a72
----------------------------
BUG#6749: If there is no current database, then nothing should be binlogged if binlog-do-db or binlog-ignore-db are in effect.   (In the future 5.1? 5.0? I think each statement should be verified against the filtering criteria based on the database it *uses* and not the *current* one.  But, right now the *current* database is what counts according to the semantics of the manual.) 	bef05eda10d384a22b4ce2151bacea41fe390b54
----------------------------
Fix bad 4.1->5.0 merge of Bug#6273 (mysql_config --libs when using bundled zlib) 	c55a2de5738fffe6de5dd588399d9aa2575c75d3
----------------------------
Fix core dump in  ha_ndbcluster::print_results 	e64145818b63cdb294d953ba8f55ba04b4b651d8
----------------------------
Impl5 of WL2278 - dynamic port allocation for cluster nodes Treat the management server specially. It should always be the server in a transporter as we then have a known port to connect to on node restart. allows a mgm connection (i.e. to the management server port, our known port) to be transformed into a transporter connection. Also, clean up the struct TransporterConfiguration (used to be a struct for each transporter type. now there's just one) 	e795feca68cf813d1b3b1b63dca95e6e75d07dac
----------------------------
Fix removal of tables from cache when the database they are contained within is dropped and lower_case_table_names is set. (Bug #8355) 	5ebbc834febff6e37228196424de074c83e80671
----------------------------
ndbcluster now runs clean in 4.1, 5.0 may still need some work 	6c25300796d99d3cbd2d442de1fa44b74c2db7e4
----------------------------
have test suite continue even if ndbcluster fails to start if --force flag is set 	3249388a5d9b3c4a5cdce373854d3e5efc6aeb41
----------------------------
ha_ndbcluster.cc: corrected typo in previous changeset 	6bbaeed5b96da2ff56c3d118f4a44b8d992e3cf9
----------------------------
"A fix for Bug#6273 ""building fails on link"": we should not use CLIENT_LIBS in mysql_config as CLIENT_LIBS point to builddir when we use the bundled zlib. "	e531136c1f359280cf8c757c75304de8205393d9
----------------------------
ha_ndbcluster.cc: fixed change in struct in 4.1->5.0 merge 	2339b328fc86b6798015c1a2bae8ae4fe22491ca
----------------------------
made an .sh file of ndb-config-2-node.ini instead 	e70445d31842e10eeea4bfd9b651e1b382c06fbe
----------------------------
ndbcluster rpms 	a2b62c5b2df6154e81bb8eb97bec723ff7ab8b34
----------------------------
"WL#1062 ""log charset info into all Query_log_event"": we store 7 bytes (1 + 2*3) in every Query_log_event. In the future if users want binlog optimized for small size and less safe, we could add --binlog-no-charset (and binlog-no-sql-mode etc): charset info is something by design optional (even if for now we don't offer possibility to disable it): it's not a binlog format change. We try to reduce the number of get_charset() calls in the slave SQL thread to a minimum by caching the charset read from the previous event (which will often be equal to the one of the current event). We don't use SET ONE_SHOT for charset-aware repl (we still do for timezones, will be fixed later). No more errors if one changes the global value of charset vars on master or slave (as we log charset info in all Query_log_event). Not fixing Load_log_event as it will be rewritten soon by Dmitri. Testing how mysqlbinlog behaves in rpl_charset.test. mysqlbinlog needs to know where charset file is (to be able to convert a charset number found in binlog (e.g. in User_var_log_event) to a charset name); mysql-test-run needs to pass the correct value for this option to mysqlbinlog. Many result udpates (adding charset info into every event shifts log_pos in SHOW BINLOG EVENTS). Roughly the same job is to be done for timezones :) "	ed1696f6b9d2ed32168ddaba4c2d9cd1529022a1
----------------------------
Use -DUNIV_DEBUG (extra debugging for InnoDB) when configuring with --debug=full 	e7450d9781781666503837d748cf313e3f406f59
----------------------------
configure.in don't define UNIV_DEBUG in CFLAGS/CXXFLAGS anymore sql/mysqld.cc hide from the user options that do nothing sql/sql_update.cc better fix for uninitialized used_index 	33fc4b10b69e06bb4162a3d2650eab00e0b8927c
----------------------------
"backported configure flag from 5.0 workaround for HPUX signal.h error, missing extern ""C"" moved my_thread_end to NdbThreadExit more checks for shared memory transporter signum setup "	653c6fa1adeecaf7136b6537eff8ae2e2d31d841
----------------------------
character_sets.m4: --with-uca configure.in argument. The rest of the changes are pending from 4.1 tree 	c9c8955fc9a8647f69ab9c762150a0e60021d182
----------------------------
"- Bootstrap: Rename already existing build directories to something more useful than *.old.<PID> - use the mtime of configure.in instead. This gives us a time stamp of when this last build directory was created, e.g. ""mysql-4.0.24-build-2005-01-31-16:47"" "	46e0018b96169f228fbd457b5dff17c4843e423c
----------------------------
Do-compile: ndbcluster requires more ports, this is the reason why builds will not start on multiple builds 	3800cede90d58c83f18c6c20c686455e864a3f4e
----------------------------
Bug#8167  signal usage clash between mysql server and ndb shared memory added shared memory config parameter, signum for use in signalling added global variable for holdign signum to be used for shared memory connection only fiddle with signals if it is set simplified common ndb client option handling 	732d1a5e81037407067c345f5f6f33ee95210e6e
----------------------------
Remove unused configure.in name TOOLS_LIBS. 	2b858ae68279885f74ac15ff9b9c6eecb3390d42
----------------------------
configure.in: Add -DDBUG_ON to CXXFLAGS whenever it is added to CFLAGS. Thus, sql/ha_innodb.cc will be compiled with the same setting of UNIV_DEBUG as the rest of InnoDB, i.e., --with-debug enables InnoDB ut_ad() assertions everywhere. 	4a2aef45ce6c834345c433fb13da5cb45af14c07
----------------------------
Makefile.am: updated doxygen Makefile for changed examples directory .del-demos.tar~8e6dfbc510a6e323: Delete: ndb/ndbapi-examples/configurations/demos.tar Many files: mvdir 	cc07a3a146101ae48f48ebe55361f2be0959a6b8
----------------------------
timed_mutexes moved to include/my_sys.h and mysys/my_static.c to avoid linking problems referring to the variable from .c programs. 	c38886b20c8f8e74304f1c5a507dbc4635b53da2
----------------------------
Only enable Innodb extra debugging when using the --debug=full configure option 	f16b456ddc79c48af9070c79cb1593c0e1f6d989
----------------------------
Merge: ee22415 638e2bd InnoDB: Ignore innodb_autoextend_increment patch from 4.0, because it was backported from an earlier implementation in 4.1. 	2f1ce9e6c21eb4d58398acd6336f521188365e48
----------------------------
InnoDB: Backport innodb_autoextend_increment from 4.1 	638e2bd733b753a09e26a9a7bfff692b32a109d3
----------------------------
changed from using column names to column id in ndb setBound in ha_ndbcluster 	b4eebbc0b6c428e15d7eb83bd8bc17032e89cc8a
----------------------------
Test case (bug #7261: Alter table loses temp table with lower_case_table_names=2). 	35b521c9259ccda523c36170de2a3eae1794265a
----------------------------
A fix (Bug #8015: server refuses to start with long basedir path). 	0bf3ae74b689a378dfed5e415271d75747e62fe5
----------------------------
A fix (bug #7261: Alter table loses temp table with lower_case_table_names=2). 	9c3c566fcbc4f6f1452fc7c5440890d9d2e78efc
----------------------------
moved START_AND_EXIT check so it can actually be used fix as not to overwrite previoulsy set flags in configure 	72dc9ff915e195f6adb297f5a362a2f8763f99ca
----------------------------
ha_ndbcluster.cc: read row size with wrong type 	3dfcf07cc99d1c43a7bad644401301a1154910a4
----------------------------
mysql-test-run.sh: skip ndbcluster start failure if --force given 	39c9f50ac930cea80b331f0b86b3c9023f8d46fc
----------------------------
configure.in: Auto-merge fix: removing this file: error messages are done in a different way in 5.0. .del-errmsg.txt~31abf77f9e7b9211: Delete: sql/share/japanese-sjis/errmsg.txt 	0afb9b244a220e5bc61b271145a74c0823ddb513
----------------------------
configure.in: Add SJIS version of Japanese error messages. Windows version should include this new file, instead of the EUC-JP version. 	d45e9548015a49e2cc89bdc4de00bf59c42da864
----------------------------
"Fix for bug #7637: ""Test failure: 'user_limits' on QNX and 64-bit systems"" Made user_limits.test scheduling independant (this solves failure on QNX). Made sys_var_max_user_conn variable int sized. Changed max_user_connections from ulong to uint to be able to use it in sys_var_max_user_conn::value_ptr() (solves failures on 64-bit platforms). "	348218d21d6f49d526e29557783044b11defaabe
----------------------------
Warn when mysqld starts up with lower_case_table_names=2 but datadir is on a case-sensitive filesystem. (Bug #7887) 	3bdfe4485999445061a3edc6308c0c6eaf6476b7
----------------------------
added configure option to set extra ndb cc-flags 	26d8fc4939d0d77d0e4095e7672c1895c76dccb1
----------------------------
Add ha_federated.cc to libmysqld/Makefile.am so that configuring with both embedded server and federated storage engine compiles. (Bug #7920) 	d5ee0a9e3af2aed965e3cfda19703d51c7566839
----------------------------
"- small improvement for the logrotate config file (patch found in the SUSE source RPM): use ""mysqladmin ping"" instead of grepping the process list for the mysqld binary (should be more portable than relying on the ""ps"" options "	2fbe625ee816c0d425656dbdc1d0a14850fd23de
----------------------------
When we warn that --log-bin alone is dangerous, we give a suggestion. 	1cb5d98d85dd055c7255b7a77f71dd91760cd14b
----------------------------
limit HEAP table size with max_heap_table_size, better estimation for mem_per_row 	367bcf8c40202a884ba6b9dfc8f94b7bcf2a2adc
----------------------------
Fix mysql_install_db to look for libexecdir relative to basedir when it has been specified. (Bug #7347) 	d7389eedd1f29fe4e66ca09071b190eac4ed816b
----------------------------
"- bumped up the version number in configure.in from 4.1.9 to 4.1.10 - tagged ChangeSet 1.2207 as ""mysql-4.1.9"" "	b531a5e212546406971fa71e93df454ad3e139b1
----------------------------
logging_ok: Logging to logging@openlogging.org accepted innodb.result, innodb.test, set_var.cc, mysqld.cc: change variable innodb_free_tickets_to_enter to innodb_concurrency_tickets 	9f640bbad9d4bab1124019e17d1596e647f6ac76
----------------------------
"Impl4 of WL2278 - Dynamic port allocation of cluster nodes When a node restarts it starts over again with fetching the configuration -  It is not sure that it can use the ""old dynamically allocated port number"" again. -  It should however try to reuse the old one, if not possible it should allocate a new one. One has to be able to distinguish between portnumbers specified originally in the config, and ones that has been dynamically added (the latter may be changed if ""busy"", but the first cannot be changed). We use negative portnumbers for ports that are ok to change. "	ac28b470ee712ecfb6c6921592b3e0b0265a773b
----------------------------
ndbcluster.sh: increased timeouts to see if more tests get started automatically 	a5c08a718e325a65c659450f065cbd1ea9675b80
----------------------------
Replace ZLIB_LIBS in mysql_config. (Bug #6418) 	39d90b710f787d33d044072bdd92b7b8f49c1813
----------------------------
removed compiler warnings from ha_ndbcluster 	7f287d963c99e3d2c548f0d0ffce2757019f6f87
----------------------------
Encourage user to specify a name for the binlog index file (either by giving an argument to --log-bin, or by using --log-bin-index). This is so that he does not have a replication break when his master's hostname changes. Plus binary logging options consistency checks. 	61a65d42f0c74254e7a5e2ededcce38488a1c082
----------------------------
updated ndb_mgm test removed grep event and added congestion event more docs changed some naming, expecially regarding severities added config param for logevel for congestion 	06216f6a737df6b14b53a9588cf9dac13f8e8cb8
----------------------------
"added example of mgmapi usage moved get_configuration to doxygen internal since the ""iterators"" are not documented "	98c3fa6643b1af909bcdeb62172508efea878b05
----------------------------
ndb - Fix ndb_limit, handle cmpDate of length 3 Remove ucs2 test as it requires one to configure --with-extra-charsets 	7b0748ed9a3dfb7540ab4f85340c8a29ef9f280b
----------------------------
Many files: - Create innodb_thread_concurrency as dynamic variable - Add innodb_thread_sleep_delay variable - Add innodb_free_tickets_to_enter variable 	ad7dad8d038463a4546f3a33a9619c776a790940
----------------------------
"2 small fixes for binlog (sorry for grouping them - I won't do it again): WL#2335 (wait if binlog or binlog index file hits disk full or quota exceeded), fix for BUG#7236 (""--expire_logs_days does not apply if all statements happen in transactions""), and a behaviour change: abort if mysqld can't start binlog at startup (if running with --log-bin of course). "	60f5a69160d1e7a323ad440264c20871aaac6ede
----------------------------
Add comment to make code for option-stripping in mysql_config more clear 	2acb7387842baec2b3171afe7de08e1a52d7e8ce
----------------------------
ha_ndbcluster.m4: fixed ndb configure according to 4.1 	9b122af3e19b28717cf0779cb635fbf8e713d7c9
----------------------------
Allow DEFAULT_THREAD_STACK to be set via -DDEFAULT_THREAD_STACK=...  so our official binary builds for Linux that are built against a static glibc with a 128k thread stack size limit can be compiled with a default that doesn't result in a harmless (but oft-misunderstood) warning message. (Bug #6226) 	c1593ecf6601fa93882af78100e48e42d19fafd7
----------------------------
set_var.cc, mysqld.cc, ha_innodb.h, innodb.test, innodb.result: Create new innodb_sync_spin_loops variable 	bd47d6f36099c3a6b01eca229e0a5c3bf793adca
----------------------------
Protect flags like -Wl,-O2 from being mangled by mysql_config (Bug #6964) (Second commit of this patch -- first included wrong changes.) 	d14f3d76752f311c6fe81ba808cf1131da517e29
----------------------------
Make sure to include ZLIB_LIBS in mysql_config --libs_r (Bug #7021) 	30808e9ab993a98220cd96290ff49a4d6212cd10
----------------------------
Change mysqld_safe search for mysqld relative to the current working directory to only look for the mysqld binary (and english error strings) and assume the datadir from that. Then, if that datadir turns out to not exist, startup will fail. This avoids the behavior where mysqld_safe would go off and run a totally different binary because the data directory had been moved (even when --datadir was specified on the command line). (Bug #7249) 	0ed892f1975a380066b4ac7cc38852021344dbbd
----------------------------
Added checking for my.cnf file from environment variable MYSQL_HOME instead of DATADIR. 	81d99da104a856f27a19059f4f7b548cd6a0d2ff
----------------------------
Impl 3 of WL2278 - Dynamic port allocation of cluster nodes - Change configuration handling so that no default ports are given, but instead 0 is set (port to be dynamic) - TransporterRegistry::start_service now only tries to connect when fetched port number > 0 	1edca0ac8cd237b0e7bd8062e01ffd25789ddf64
----------------------------
Make query_cache_wlock_invalidate visible in SHOW VARIABLES (Bug #7594) 	954d0181ec65595d887bd2953c0b8a4bbd228ef1
----------------------------
Use 'ps xaww' in mysqld_safe (on Linux) so whole command-line is searched for port and/or pid-file parameters. (Bug #5878) 	663396653ab5ebed874d7ec89daf6e8e86472c9e
----------------------------
Merge for WL#2290 Add support for bit field in ndbcluster handler 	31360fb01ab1f2e1fc72cef6f5afde03746db3b2
----------------------------
configure.in: updated ndb version number 	93f964141294159b783461e818c9f5e4d65c9653
----------------------------
Merge: 9bb8f6d 1ddb554 Merge from fix for Bug #7480  Mysqld crash in ha_ndbcluster using Query Browser 	689748b548019dccb095eec0485831c20b636794
----------------------------
Yet another after merge fix. Now max_user_connections is 36th field in mysql.user table (two new SP-related privileges were added). 	4e17aab2435e348006a5cd53816362888c81aaba
----------------------------
Fix for bug #7480  Mysqld crash in ha_ndbcluster using Query Browser 	1ddb554b8bf688986b100c6c6aabb4d9b80387d3
----------------------------
WL#1339. More post-merge fixes. Updated test results after adding max_user_connections column to mysql.user table. 	e35694802ba04138d01a1d7862a6a479ce0fb9df
----------------------------
"WL#1339 ""Add per account max_user_connections limit (maximum number of concurrent connections for the same account)"" Added support of account specific max_user_connections limit. Made all user limits to be counted per account instead of the old behavior, which was per user/host accounting. Added option which enables the old behavior. Added testing of these to the test suite. (After review version). "	ffa7393330359dddf60d0a6952071961daeb5a21
----------------------------
srv0start.c: Print a more descriptive error and refuse to start InnoDB if the size of ibdata files is smaller than what is stored in the tablespace header; innodb_force_recovery will override this 	2aa98f89aaaad9b386c1712a03efa2ec9e9e93b4
----------------------------
Setting doxygen configs to: align class members = no (get rid of crufty HTML tables that don't translate well into PDF) tab = 2 (8 is too wide) show used = no (most of these are suppressed header files, hence not linked, hence not useful) disable index = yes (saves stripping these out in combination script) 	1ca06912a14abbe9bb73bc34c7bb9001b53334a5
----------------------------
"- make sure that MYSQL_VERSION_ID created by ""configure"" does not contain any non-numerical characters (if $VERSION was e.g. ""4.1.8a"", $MYSQL_VERSION_ID resulted in ""40108a"", which broke the build as MYSQL_VERSION_ID must be numerical) "	9682485c1eabd93ee9106831a7c673cbc3699d71
----------------------------
logging_ok: Logging to logging@openlogging.org accepted sql_yacc.yy, sql_parse.cc, sql_lex.h, lex.h: Implements the SHOW MUTEX STATUS command set_var.cc, mysqld.cc, mysql_priv.h: Added new GLOBAL variable timed_mutexes ha_innodb.h: New function innodb_mutex_show_status ha_innodb.cc: Added new innodb variables in SHOW STATUS Implements the SHOW MUTEX STATUS command innodb.test, innodb.result: Added new row_lock_waits status variables tests. variables.test, variables.result: test new variable timed_mutexes ut0ut.c: New function ut_usectime. sync0sync.c: Mutex counting. sync0rw.c: New mutex parameters initialization. srv0srv.c: Counting row lock waits row0sel.c, row0mysql.c: Setting row_lock or table_lock state to thd. que0que.c: Added default no_lock_state to thd. univ.i: Added UNIV_SRV_PRINT_LATCH_WAITS debug define sync0sync.ic: Count mutex using. sync0sync.h: Added new parameters to mutex structure for counting. sync0rw.h: Added new parameters to rw_create_func. srv0srv.h: Added new innodb varuables to SHOW STATUS. que0que.h: Added thread lock states. 	78846b292369cbf6175baac768edd77183c0809e
----------------------------
Added bit field support for ndbcluster 	cb4dc2809731be9e94da3c5f440d2c12b61bb9e4
----------------------------
Added bit field support for ndbcluster 	bcf8a344487569817ee50a9337eeb61e0e8f639a
----------------------------
fix indentation add space after comma add space after equal add comments in vio_close_shared_memory() 	4788b152012c3b41f72e08291efc4235913c9b33
----------------------------
added configuration hostnames to SHM config struct use configured hostnames for SHM transporter setup 	78ce178559becb8845bfc24dd5c0e7f70a7817b5
----------------------------
Changes in config for generation of NDB API docs: don't include header files or class private members; do include class static members. 	4b881691af3ddb462bec4b2ad8ae71d4878a5103
----------------------------
configure.in: Increment from 4.0.23 to 4.0.24 	f3fc9a2dda9142c52ce28655b69e74b018fab7d5
----------------------------
automatically configure with shared memory transporter for ndb if functions are available 	7d5e413f62edf3b186368ad8856bd8efcd8bc984
----------------------------
added config parameter Group on connection moved NdbWaiter, m_ndb_cluster_connection, to impl class moved node selection things to cluster connection moved all private things to impl class added opts for shared memory and node selection changed opts handling somewhat; introduced enum for options and common handling of option variables added checks for transporter support automatic addition of shared mem transporters moved wait_until_ready code to cluster connection added control of usage of new node selection method 	7b47be8990f3770c2960b7776da469442484eda5
----------------------------
my-innodb-heavy-4G.cnf.sh: I fixed the typos in the transaction-isolation comments. I fixed the spelling mistakes in the comment.  It had tripped up a support customer as they couldn't start the server with transaction-isolation= read-commited 	35942c09de6c6a4f18658624f50adabc5295e1a7
----------------------------
"- bumped up version number in configure.in from 4.1.8 to 4.1.9 - tagged ChangeSet 1.2173 as ""mysql-4.1.8"" "	b9c549ae3966882ff8e73c358aaf6eb6a94e9689
----------------------------
Enlarged group item key_length by a varstring length field. Group item fields are implemented as varstrings nowadays. Made init_connect.test robust against existing t1. 	05d5360e7f19d95d32e49b65cd3cab5ea03c46db
----------------------------
correcting --expire_logs_days description in mysqld --help 	de968efaf3c4f99db3b94e102b7962187235f78c
----------------------------
"changed back to just restricting max meta objects in dict to make sure we can ""always"" configure ourselves out of unforseen limits "	095a772f21f4aa6d27f90bc15297a2615b261aaa
----------------------------
ndbcluster.sh: made compare of logs possible in ndb test restart_log.result, restart.test, restart.result: new file 	be4de23f3c668e4c0eaf71dbbe66c354766052d7
----------------------------
ndbcluster.sh: added test switch basic_log.result, basic.test, basic.result: new file 	798d933bb301bb1186b4dc0a634e5049d8498441
----------------------------
A fix (bug #6993: Max myisam_data_pointer_size limited to 7). 	f449ba85e8642db49d76ad4e1ccc5659668c70fa
----------------------------
Fix segmentation fault on incorrect configuration. Starting ndb_mgmd on a host which isn't in the configuration file as the ndb_mgmd (e.g. the ip address is different) would have ndb_mgmd segfault. There was a check in the code, but it was (potentially) trying to dereference null 	ea0949a78a68bbc717f468375f06871397167cf6
----------------------------
A fix (bug #5823: mysql_install_db fails due to incorrect max_allowed_packet). 	bd247e3d56ed2ea8353c617081de5d064b258fab
----------------------------
wixed ndb-debug option for configure 	b44ab7655446b4b278fbddd1e9ed25c0334cfd33
----------------------------
configure.in: latin1_spanish_ci produced unknown collation error. 	86013091ca1d26fa307c444ff604df780765b12b
----------------------------
added configure option to control extra ndb debug options, for release debug build please configure with --without-ndb-debug 	ee3953c5c1c7eee9a9b19957b09d8225fc0aa626
----------------------------
Bug#6391 (binlog-do-db rules ignored) CREATE DATABASE statement used the current database instead of the database created when checking conditions for replication. CREATE/DROP/ALTER DATABASE statements are now replicated based on the manipulated database. 	2bbdf2403dc9b6b8b4d4803c5e81b05958ea2890
----------------------------
mysqld.cc: innodb_autoextend_increment: set a maximum limit of 1000 (Bug #6904) 	89996cd7ad8e96bf4fa4b7d5fc663ddc2522619d
----------------------------
configure.in: Incremented for next version 	d6efb4bbfd319759d7577b1ca3f4e6005eb8aa31
----------------------------
First revision of changes to clean up acinclude and configure.in. Removed all AC_DEFUN out to separate m4 files, removed rule concerning building the website, and updated SANITY rule with the latest from 1.8. 	5d8a33e0ed9c329037ff9b51dd4fda912caa39c1
----------------------------
configure.in: Let MySQL check the existence of readdir_r with 3 arguments; Solaris seems to have just 2 args Check the existence of readdir_r and localtime_r; even though MySQL does check these too, we need our own check for Hot Backup code os0file.c: Use re-entrant readdir_r where available ut0ut.c: Make a function to use thread-safe localtime_r where available; that particular function was not called from anywhere, though 	227ffeb9e097121ac82e65e9dd8b8dd1a73601a8
----------------------------
"added use of mysql_cluster in mysqld (e.g. for ndb-connectstring) added warning printout if --ndbcluster switch is given in a ""non-cluster"" binary "	f3e201886adbbe9596a1f9839af461bd69315bec
----------------------------
"aligned backup errorcodes with rest of ndb error codes giving it range from 1300 added new error type ""configuration or application error"" Added check if backup is issued during diskless mode, backup refuse returned added possibility to get error code as a result from management client addded possibility to set connecstring with CONNECT command changed to use strcasecmp instead of strcmp added possibility to run one command on cammand client to ndb_mgm and get an errorcode of command fails made thread safe veriosn of getErrorText in management server aligned backup errorcodes with rest of ndb error codes giving it range from 1300 print error message from regular ndberror struct added new arrer type ""cofiguration or application error"" commented on allocaded ranges for errors "	b11f3feb530d92894909bf763c7ca820ec8fe038
----------------------------
configure.in: A work-around for SCO, disable use of clock_gettime 	77c32ac1739d78e39a51a1f6689858d4d193eb66
----------------------------
moved default setting to config.ini to MgmtSrvr only try to connect to other ndb_mgmd if connect_string explicitly given or config_file not given 	106f124eec733ef0cb1e771702bec0710d064b7f
----------------------------
sql/ha_ndbcluster.cc added missing DBUG_RETURN's mysql-test/r/ndb_read_multi_range.result@1.0 BitKeeper file /home/tomas/wl2126/mysql-test/r/ndb_read_multi_range.result mysql-test/r/ndb_read_multi_range.result@1.1 (NO COMMENTS AVAILABLE) mysql-test/t/ndb_read_multi_range.test@1.0 BitKeeper file /home/tomas/wl2126/mysql-test/t/ndb_read_multi_range.test mysql-test/t/ndb_read_multi_range.test@1.1 (NO COMMENTS AVAILABLE) 	a90335e912430dd406e37fae3e570e5f6b79e5dc
----------------------------
ndb/src/common/logger/LogHandler.cpp changed so that error is returned if format is wrong in logger param parsing ndb/src/common/logger/Logger.cpp some debuf printout added ndb/src/mgmsrv/InitConfigFileParser.cpp rewrote parsing on parseNameValuePair, was buggy 	5a09289bd15049fd6f7f09d2688e48bee9a0b321
----------------------------
configure.in: Fix linking error in 5.0: the build system for Linux/S390 does not have inlining working in the compiler; remove inlining on that system 	bd6ccd46fc88d331cdbf244654a74666a3914a92
----------------------------
added mgmapi/mgmapi_config_parameters.h, mgmapi/mgmapi_config_parameters_debug.h to distribution 	003b28d04fa605c4aff9400452b6c64949ea8389
----------------------------
sql/ha_innodb.cc enabled query cache for ndb modified engine interface somewhat sql/ha_innodb.h enabled query cache for ndb modified engine interface somewhat sql/ha_ndbcluster.cc enabled query cache for ndb modified engine interface somewhat ndb will only allow caching and retrieval if running autocommit - return false, but do not invalidate commit count is used as engine data, i.e. - store commit count before store of cache - allow retrieval if commit count has not changed on a table - invalidate if commit count has changed sql/ha_ndbcluster.h enabled query cache for ndb modified engine interface somewhat sql/handler.cc enabled query cache for ndb modified engine interface somewhat sql/handler.h enabled query cache for ndb modified engine interface somewhat new virtual handler method cached_table_registration called on each table before alowing store in query cache - return TRUE - ok to cache, FALSE - not allowed to cache, invalidate queries if engine_data below has changed - sets ulonglong (engine_data) that is stored in query cache for each table - sets callback to be called for each table before usage of cached query, callback = 0 -> no check later sql/mysql_priv.h enabled query cache for ndb modified engine interface somewhat callcack prototype for callback to engine before query cache retrieval sql/sql_cache.cc enabled query cache for ndb modified engine interface somewhat if callback is set on table in cache, do callback to check if allowed to use cache if not allowed to use cache, check if engine_data has changed, if so, invalidate all queries with that table + changes to store and pass callback and engine_data around sql/sql_cache.h enabled query cache for ndb modified engine interface somewhat changes to store callback and engine_data sql/table.h enabled query cache for ndb modified engine interface somewhat changes to store callback and engine_data 	ae471974ac158133976ce3510afe16db75fda798
----------------------------
use FT_MAX_WORD_LEN_FOR_SORT instead of HA_FT_MAXBYTELEN when calculating preferred key block length for ft index 	48e7c9abc66bcedc6b2d77bebafe1a83b4f1ed98
----------------------------
Fixed BUG #6747: innodb_locks_unsafe_for_binlog still uses next-key locking. 	d12c3540539b872cef92d03077c1e1f6bb04d847
----------------------------
aligned connect string option on all cluster executables, --ndb-connectstring is now supported by all enabled new section in my.cnf [mysql_cluster], which is read by all executables, where connect string can be put for all cluster executables 	c23b521e2f8ba73e101ed5b67d0f5899130ee0b7
----------------------------
ndb: do not crash on config mismatch if release compiled 	ad8dad86a845897c2da726b3ca0092ca32d5993f
----------------------------
Added --disable-log-bin option to the mysqlbinlog (WL1787) 	edc868e3977f922eecd05ec3f2caeb399caff360
----------------------------
set sizes array sizes correctly in ndb blocks configuration 	da7c9e26a008586fd961668557104ac50074df0f
----------------------------
ha_ndbcluster.cc: merge error 	fdfc731155188402153eb342326d5ab5dfa02544
----------------------------
moved ndb_use_transactions out of opts and to be set default true in THD::init 	eb11d34403100f1b839b0dcef670bc80abd91621
----------------------------
changed mysqladmin.c to mysqladmin.cc no need for dvlags to have DEFINE_CXA_PURE_VIRTUAL anymore aligned the parsing of connectstring, retries for connect, allocation of nodeid for all cluster nodes removed all dependencies of LocalConfig, except for mgmapi internals enabled multiple management servrs to fetch data configurations from eachother 	7ec0239162dcd693541ae24a03f977cf371aa063
----------------------------
"Enabled usage of new system variables for ndb - ndb_use_exact_count - ndb_autoincrement_prefetch_sz - ndb_use_transactions - ndb_force_send moved ""inlined"" functions to .cc file since they are virtual anyways enabled printout od ndb errors in warnings even if mapping existst to mysql error code "	1700bf3844b5504fbde8c575968f867c30a76a8e
----------------------------
don't delete ac_available_languages_fragment in configure - it may be needed later 	60e3e821c6d94a03bd9424cbcd9d5c9a4a63e2d9
----------------------------
ha_ndbcluster.cc: reverting previous patch 	a69ddb033decc78bbe9dfb1eacabea8dfc067fdc
----------------------------
provided better error printout for mismatch of node types in configuratoin fetch fixed to that mgmt server actually uses the connectsring 	b8713e5e9cf764f75709e08617bb840ec5713f6c
----------------------------
BUG#6353 V2: Replication using replicate-rewrite-db did not work for LOAD DATA INFILE. Now is does.  There was one place in the code that used current database instead of the rewrite database. 	b7cfe5ecad5d224fe9fcc36a1241ea9864533ce6
----------------------------
changed compile order, mysqladmin with ndbcluster extensions needs ndb to be compiled first added libs variable for ndbmgmclient used by mysqladmin add linkage with @ndb_mgmclient_libs@ additional options for ndbcluster added support for managing the cluster to mysqladmin added DEFINE_CXA_PURE_VIRTUAL flag to CFLAGS to enable linkage with c++ libs use macros for C_MODE_START/END so that define of FIX_GCC_LINKING_PROBLEM works in c-programs 	16e34bd27dba2ac9593a9b845c49e44de5da5de7
----------------------------
"moved ndb_restore together with rest of the ndb tools kernel includes needed by ndb_restore changed link order moved LocalConfig to mgmapi Moved NdbConfig to Portlib mgmapi to use LocalConfig for connectstring parsing instead of it's own enable usage of ""NULL"" connectstring for default new ndbmgmclient lib that can be used by e.g. mysqladmin later LocalConfig no longer needed here, now in mgmapi Send connectstring to mgmapi instead added valid connectstring to be with only host without port i.e. valid connectstring =host1,host2,host3 default port will be added "	0d55af3f0e5d4d120766ec629c162c500a9b7d74
----------------------------
ndbcluster.sh: fixed typo 	fd39778fcf692b5fcaa2716ac26f4fdcf827c094
----------------------------
wl1744 - ndb windows port move versing handling into ndb_version.h.in (from config.h) 	b6c44a2960268cf2e293af5e06afda644187cf02
----------------------------
added configure switch for ndb port number added new variable for ndb port 1186 changed meaning of ndb_port_base to be default tcp port setting changed to use split between port and port_base for ndbcluster so that ndb_port and ndb_port_base are propagated to startscript for ndbcluster added larger space to pid print moved readAndExecute out of CommandInterpreter to avoid linking lib with readline added c-api to Ndb_mgmclient pass also ndb_port to make 	17b2d671ee15410a8e9faba27d883f4b9aeb5df3
----------------------------
ndb: bug#6435 fix null handling in ha_ndbcluster when using ordered index 	3821a8dfca62bef7c424dc8250ad70b6614ef75a
----------------------------
"Fix for Bug#6408 ""configure checking for custom zlib fails because code check is wrong"". "	31962735902dfee0c8983af504c024926f7d3824
----------------------------
updated start script for ndbcluster to make better cleanup changed to use new switch 	08b25e990172af198153f0a87b37adf7b6209989
----------------------------
Bug# 5303 Windows --log-error option doesn't work correctly 	8b472a76059e7286a1fcf862b9d877bf13e6151b
----------------------------
"configure.in: added flag on sun forte, -instances=static (check is only made for ""non-gcc"", hopefully enough) "	d129fffe572089b3008f694c3cface0f35aff16e
----------------------------
aligned ndb versioning with mysql changed define SNPRINTF_RETURN_ZERO to SNPRINTF_RETURN_TRUNC added define NDB_INIT removed getarg, strlcat, strlcpy aligned ndb version with mysql version cpcd: removed old way of reading config file and replaced with mysql load_defaults changed from using getarg to my_getopts use mysql my_progname moved getarg to test 	41e39c7be32fa27484375762296f900cc21eec17
----------------------------
mysqld.cc: Describe innodb_max_purge_lag Improve description of innodb_table_locks 	a3294186ec089d4b6abf318894e36cbf042f72c6
----------------------------
configure.in: -I/usr/include needed for cxx on Tru64 	0a3d9a43b246cdaf57afa725134344d74e7ff07b
----------------------------
"- bumped up version number from 4.0.22 to 4.0.23 in configure.in - tagged ChangeSet@1.2048.1.2 as ""mysql-4.0.22"" "	35e8670301f854b5b1541cd39deaab2f0c046bbd
----------------------------
Backport innodb_max_purge_lag from 4.1 	b5f49a3abd515faafed24164e4d01c1a6c5dcc42
----------------------------
"- Bumped up version number to 4.1.8 in configure.in - tagged ChangeSet 1.2029 as ""mysql-4.1.7"" "	f60951d2514bff36fde1401de5971ee3d8f9d81f
----------------------------
configure.in: 4.1.7 leaves gamma. 	f5b33f6e6ae065496688f8fd1390c4d6a0826cd2
----------------------------
A fix (bug #5999 Typo in code, wrong config variable naming). 	b7c57329a419bcadfec02d4cbbb0ac9f5244bae6
----------------------------
Code cleanups (done during review of new code) Rename innodb_table_locks_old_behavior -> innodb_table_locks Set innodb_table_locks to off by default to get same behaviour as in MySQL 4.0.20 (This means that Innodb ignore table locks by default, which makes it easier to combine MyISAM and InnoDB to simulate a transaction) 	1f8b3d0f22070d450226ef4f6e0e31c8ef8cd401
----------------------------
fix for platforms that have lower_case_table_names == 2 	1ef4979e48e0c66c7b0fe1f469bcd87a432c4450
----------------------------
Optimization: in the replication slave, we can avoid doing one strlen() per event's execution, as we already have db_len in Log_event. Only if rewrite_db() changed the db we need a strlen (so we now do the strlen() in rewrite_db). Plus a test (we had none for --replicate-rewrite-db :( ). 	41b808d224c6ad4c7ef6f785fa8b40dd1b2c42bf
----------------------------
srv0srv.c: If innodb_thread_concurrency would be exceeded, let a thread sleep 10 ms before entering the FIFO queue; previously, the value was 50 ms, which Peter Z considered too long 	f687608e1c2d7fcfc0000b15badd70c6f1f2e501
----------------------------
mysqld.cc: BUG #5731 key_buffer_size not properly restricted to 4GB; use UINT_MAX32 for clarity. 	b9509655a52f629802358ac23d5533337a09ba1e
----------------------------
TAG: Tagged ChangeSet 1.2091 as mysql-4.1.6 configure.in: Updated version string to 4.1.7 	60385695b42eb64883299efa286c02f539023785
----------------------------
BUG#5625 - MyISAM Index corruption on ALTER TABLE x ENABLE KEYS due to full tmpdir. Added a try to a normal repair() if repair_by_sort() failed. This was not done with ENABLE KEYS and OPTIMIZE TABLE. Fixed error code handling in mysql_alter_table(). 	150ab94e0adec270d7a106d629e8963f43cf612d
----------------------------
Added startup option and settable session variable innodb_table_locks_old_behavior: do not acquire an InnoDB table lock for LOCK TABLES, as in mysql-4.0.18 and earlier. 	edb93ca441df3257bccc320496a765b93779ce66
----------------------------
Many files: Fix bug #5137: if innodb_file_per_table was specified, CREATE TEMPORARY TABLE ... TYPE=InnoDB said that cannot find path specified, and made mysqld to exit(1) 	89ecfd7fa64ec1079428cb4019ea90e22171d604
----------------------------
ha_ndbcluster.cc: merge error 	db93dd1e3c4b54c2d88ccc3bee6f88775cafa8a3
----------------------------
sql_updatable_view_key replaced with updatable_views_with_limit now default behaviour do not prevent any updates of view. Also updating VIEWs of queries without LIMIT clause will not be checked at all (there will not be even warning) (changes according to discussion on last dev-conf) 	da5a55e3cdbec87507b996017a0c008ea7ad9e1b
----------------------------
more and better arbitration warnings for cluster config 	ebb425d9c9fed6cbdfde5f5f202efa7f5d2d2de3
----------------------------
"patch fixing after review on patch-fixing of Bug #5492 ""set @@session.read_rnd_buffer_size=33554432"" crashes server on query 1. added warning comments for uint3korr (need one more byte allocated) 2. unsigned long in uint3korr was replaced by unsigned int to avoid problems on 64-bits platforms 3. shorten warning comments in init_rr_cache in sql/records.cc "	91e8afac376aaf557124e0fa12d2cc30371d60b2
----------------------------
use new function stop_ndbcluster 	e554888be611793c23784b795616f0f46db2b8fd
----------------------------
mysqld.cc: BUG #5731 Restrict key_buffer_size to 4GB on 64 bit platforms 	634df1c19c5ab526fecd532285dd880b425da9f8
----------------------------
added configuration warnings for arbitration and node groups 	148fc3ca7b2228fd8c116a2a01cdb5c923f1da31
----------------------------
InnoDB: implement innodb_max_purge_lag 	1bd65d7715a0d425be608f738651b995bd23a7bc
----------------------------
Made innodb_autoextend_increment accessible as a global variable. 	9f92688b64b240623f524c6fa5d126a8b297b901
----------------------------
ha_ndbcluster.cc: testing foce send 	d5b47c79334a63f26e35f6c1e85b384643e2d948
----------------------------
ha_ndbcluster.cc: typo 	1568b72d9c7fa9c7b4b02d53b40e5a326fba3906
----------------------------
removed init on ConfigRetriever added some debug printouts some changes in ndbcluster_init to make start of mysqld first work 	1379567be193238255245de07f578c80f405771f
----------------------------
WL#1424 Updated after review * Changed the implementation of ndbcluster_find_files to be more efficient, using only one mutex lock * Moved ha_find_files to end of mysql_find_files so that it can be passed the list that we are interested to find. 	059941db21bb9cedd2663a10550e3277d3fca3df
----------------------------
local config now outside config retriever 	c329d002f744287981e5cca53eb170a83c56eec2
----------------------------
added printout for where configuration is fetched debug printouts 	b67853d70e9275ca0c114f92c8c24d8fb12cad8e
----------------------------
moved LocalConfig out of config retriver 	8bfc619e1db0a08f2f5dadd03b7c9cbc4246c70f
----------------------------
config parameter changed 	8c617f1369a02df08865eec9b6a9813af3fded36
----------------------------
"When coyright text is changed, autotools must be run after all other actions, as otherwise timestamps of ""config.h.in"" will cause re-run on compilation machine (fatal version problem!). "	87a8e833aeeb8c8bdf89de493279e4a68bb92709
----------------------------
Restored old shared memory buffer implementation (used by SCI and SHM). Improved Default SCI config params Added missing SCI libraries in ndb_mgm and atrt Added max of 1024 signals per receive on transporter (to improve real-time bahaviour and to ensure no job buffer explosion, still some more work left on avoiding job buffer explosion in the general case) 	5d19f4eb741c83e085a3f9814ef3a7d9df1ce742
----------------------------
"made tryBind static using tryBind instead to determine if we're ""config host"" is ""local"" "	f5e6f233435b35e96d917fa175bcbd9d39e7b40b
----------------------------
"Fixed Bug #5492 ""set @@session.read_rnd_buffer_size=33554432"" crashes server on query incremented size of allocated buffer in the init_rr_cache(sql/records.cc) ( We are going to read the last three bytes of the buffer via uint3korr This macro reads actually 4 bytes (for speed) So, we have to allocate one more byte at the end of the buffer to avoid memory assertion fault ) "	e58c9579fe56dc267be056fca4aa75ac8112d955
----------------------------
mysql_install_db should do skip-ndbcluster set a printout in SocketClient only for debug 	5488f207db3433efcbcd29431020ea4dac216e22
----------------------------
logging_ok: Logging to logging@openlogging.org accepted SCI_Transporter.hpp, SCI_Transporter.cpp: Major fix-up of SCI Transporter, fixed so that it works with single card, fixed wrap around, added lots of DBUG statements, merged with new transporter handling TransporterRegistry.cpp: Some fixes for wrap around needed plus DBUG handling TCP_Transporter.hpp, TCP_Transporter.cpp: Added DBUG statements SHM_Transporter.hpp, SHM_Transporter.cpp: Fixed SHM Transporter SHM_Buffer.hpp: Fixed SHM Buffer to handle wrap around properly IPCConfig.cpp: Fixed up config of SCI SocketServer.cpp: Added DBUG support for SocketServer threads ConfigInfo.cpp: Config changes for SCI TransporterDefinitions.hpp, mgmapi_config_parameters.h: SCI fixes Makefile.am, type_ndbapitools.mk.am, type_ndbapitest.mk.am: Added SCI library path to Makefiles configure.in: Fixed small bug with shared mem and sci together in configure acinclude.m4: Added possibility of providing SCI library path in confgure 	72017f8dd243235115394461ca1489b5eb538331
----------------------------
Print the error message if read of local config fails. 	76fd06c704969741fb0cfd894176512e2b102710
----------------------------
new method to set size of local table data clearer configure description texts changed Ndb_local_table_info to use create, destroy metods and hidden constructor/destructor move definition if Thd_ndb to .h file and changes seize/release to operate on Thd_ndb instead of Ndb objects moved allocation/deletion of Ndb objects to Thd_ndb 	fc174af248f1bfdb245540b6ec0b1de0e676ae00
----------------------------
A fix (bug #5546: mysqld crash on PURGE MASTER LOGS BEFORE '...' with log-bin off). 	998504d715738711671e25201f7463a28c2baf79
----------------------------
"moved all ndb thread specific data into new placeholder new methods to keep ""records"" up to date unset flag HA_NOT_EXACT_COUNT to make handler read ""records"" field, for count() optim and join optimization new methods to keep ""records"" up to datecorrect record field in ndbcluster handler new method for ndbcluster handler to store/retrieve table and thread specific data changed local hash to store new table_info object, with placeholders for local data, instead of TableImpl hanged deleteKey to return ponter to deleted object moved heavy global cache fetch from inline to separate method "	21a4b1b4e60ae67304197c9030d11c33d7ebbde7
----------------------------
configure.in: bumped up version to 3.5.1 	cf3cb70d30c874f29380053908d411170df5abbc
----------------------------
configure.in: Updated to 4.0.22 	c998fbdb8cc942a47bb24841678b7d0387c0e55a
----------------------------
better error printouts on cannot alloc node id put ByteOrder config param back as depricated 	976086d36e3e3846a4757a184829b211589ac5e2
----------------------------
removed unnecesary check in ConfigInfo added retries to tryBind 	a34f63cf33f52c88f2aee68345b54cce2f66ab70
----------------------------
dded method to retrieve mysqld, ndbd, and ndb_mgmd aliases for API,MGM and DB added sanity checks for config file changed so that ndb_0 is replaced by ndb_pid#### in ndb files added error_string for to some functions, alloc_node_id(), start() added better error printout for failed alloc node id better error printouts for failures when starting ndb_mgmd 	e4290e4831eae66e5e6a01dc0e42601d86fbfc40
----------------------------
Modified bulk load to allow ndbcluster to flush transactions 	2917be9491b23b32bb05903198cb2439a1b96f76
----------------------------
ixed table and db name of fields incase of lower_case_table_names (BUG#5154) 	48a1b10b583bc4defeeb91c46dc47c63a681e3aa
----------------------------
InnoDB: Add configuration option innodb_autoextend_increment 	934a5c0b99fe4063818fd78ee74aad171486b8ca
----------------------------
fixed NdbConnection::restart and made use of it in ha_ndbcluster added testcase 	7d192fcbd71d9b1f78e2320f78a16f2effd72e49
----------------------------
A fix (Bug #5428 small max_sort_length crash server). 	4139e73c37562dc6ad8b6258a431f72091622e7f
----------------------------
fixed so that ndbcluster and mysqld can be started independently fixed some error codes in Ndb so that 4009-cluster failure is returned when cluster is not up 	77cd417c7e38ce1ae31fc4cf2b053fcd85a6738b
----------------------------
added ndb_mgm_destroy_configuration call fixed memory leak in object map fixed uninitialized value blobs_pending 	2192d179d2cd1da37d78e7f34d3a29fb31e7eade
----------------------------
srv0start.c: Fix bug #5414 in 4.1: srv_max_n_threads was always set to only 1000, regardless of the buffer pool size; undelr very high concurrent loads this could cause an assertion failure in sync0arr.c line 384 when we ran out of wait slots for threads; also innodb_thread_concurrency did not work, because the wait queue also there overflowed at 1000 concurrent threads; also remove redundant code trx0undo.c: Add a missing newline to fprints 	b3325a06d1a2bb35f1ae0d75758190b4cfaf8cb3
----------------------------
Added debug printout's to ha_ndbcluster 	4f655b1c530fdb31d5b141f3dd5864f26093f8c8
----------------------------
"define macro ""DEFINE_ALL_CHARACTER_SETS"" in the configure.in completely "	c3cb5980c286eccb00ae088dfd3de4aaa29e239f
----------------------------
"renamed ha_recovery_logging to ha_enable_transaction added tests to alter table for ""large"" alter tables and truncates in ndbcluster added debug printout in restart() in ndbcluster added flag THD::transaction.on to enable/disable transaction "	caf79dacfe90766b43f39c89b4111696a18e15ad
----------------------------
1. discarded term.h from the distribution 2. changed key_* to el_ley_* in the libedit key.h (because it's in the conflict with the aix definitions) 3. use libedit_term.h instead of term.h in the cmd-line-utils/libedit/el.h 4. added definition of MIN in the cmd-line-utils/libedit/read.c (if it wasn't defined yet) 5. discarded definition of SUNOS macro from configure.in (now we don't include term.h in the el.h at all) 	0fda2f6b97abba0ff0452edf3e73138d33d6cb15
----------------------------
ha_ndbcluster.cc, ndb_blob.test, ndb_blob.result: bug-5013 fix 	f01a88dce90a4acf0066a798e7ec2b67fcba472c
----------------------------
"- bumped up version number in configure.in to ""4.1.5-gamma"" - tagged ChangeSet@1.2013 as ""mysql-4.1.4"" "	87cbc358e97c4d93643b71b8fd28815342c4ed77
----------------------------
Please rewiev. Here added a function to process config. files options. A lot of the default.c module code was refactored. The patch is needed for the IM. 	d14e6c3400b1169eef9ac447ea487a11638e5c60
----------------------------
configure.in: Ascii was written twice 	cb9591b7de8a921dd64f7d78f3f962a0a5d57779
----------------------------
new parameter BackupDataDir 	e97e08b212687292a10f00fe9068a7519de5debc
----------------------------
ndb cluster config fixes, se respective files 	50cee6abc87e81dca775a37e6ac5fbe456338f84
----------------------------
"Test case for Bug #4792  	lower_case_table_names does not resolve db.tbl.column in SELECT list lowercase_table.result: New results for modified lowercase_table test lowercase_table.test: Added test case for all uppercase database when running under lower_case_table_names.  This really only failed under Windows.  Bug# 4792 "	1e0e96a0d2484da14175092e60f3ab119946dd2d
----------------------------
"Bug #4792  	lower_case_table_names does not resolve db.tbl.column in SELECT list sql_base.cc: Added code to lowercase database name in insert_fields when lower_case_table_names=1. This fixes bug# 4792 "	358900236ab52a1021df1cb4d95158c7ee40705a
----------------------------
ndb config ability/naming changes, see respective file 	0f8dc7061039d86bce80efc0a6870a5bb32d9f2d
----------------------------
more aliases in ndb config 	1bd774e9cb849c3060ad2c316538290647df4bd0
----------------------------
enables case insensitivity in ndb config file 	57c12e0fd3f083f22b40c921e6c4e199a5f76fc7
----------------------------
added skipped macro for new libedit-2.6.7 in configure.in 	3988677b15088dae4ca1d6225d1647020b40dfc2
----------------------------
added alias MYSQLD for API added choice of : or = in config file set case insensitive section names 	aae0b7ed6502dd97f43cad173fc6f22bae848e11
----------------------------
"Use ""configured"" socklen_t Fix master printout "	1c4cb230cd51eb74f5416f07edf1d1791d6a2037
----------------------------
- make sure to recreate all autoconf/automake-related files after modifying configure.in for the commercial tarballs - added my-innodb-heavy-4G.cnf to the distribution 	89fcb8ee4124a174f68893cc92e847335d49e44c
----------------------------
further simplifications of ndb config and aligned usage of mysql datadir in ndb 	c3f2f7426cc88a1fced52a848f371b43b6653254
----------------------------
1) Default config is 1 frag per node 2) MAX_FRAG_PER_NODE separated from NO_OF_FRAG_PER_NODE and takes into account large fragmentation 3) SUMA use config parameter instead of hard coded limit 	ee16667b0e085d86eee450afa5efc1f526a47484
----------------------------
reverted default setting of --ndbcluster if --ndb-connectstring is given 	b8dfb7eaf1a30f888d46262e30992632dcf03de5
----------------------------
Removed 0.5M in unused construct in TRIX Used proper config param for setting trigger pool size in TUP Minimum long signal buffer set to 0.5M instead of 1M 	9f6828fa191ead439443abb28089f5e842b0e131
----------------------------
Long signal buffer size configurable Dbutil decreased memory footprint Suma decreased memory footprint (16M memory removed from default config) 	3aeb3b426dd1a18a28fa05027c011eb6b85aaf49
----------------------------
New config parameters for Log Page Buffers Fixing issue with NO_OF_FRAG_PER_NODE Also removed some OSE code no longer needed when configurable log pages 	852a44e1d8d6b7f9098651567f95747c29def6e4
----------------------------
New config parameters malloc -> NdbMem_Allocate 	7c1eb26402b2863324830aab4c7269679d50b779
----------------------------
bug#5128 - remove need of unique fs-path bug#4761 - more validation of hosts bug#4511 - only non depricated should be saved in config - fix ConfigInfo::BOOL w.r.t deprication 	f02ebd6fccfc55d447ab9afedda21ef5d4b21664
----------------------------
Added configuration parameters for batch size, batch byte size and max scan batch size Removed some debug printouts 	995ac87734d6baacf9f70960da25bffbb6372595
----------------------------
"Fix for BUG#5064 ""SET GLOBAL SYNC_BINLOG does not work on some platforms"": var->save_result.ulong_value was 0 on Mac OS X probably due to positions of members in the union. sys_var::check() only sets ulonglong_value "	44a599a305b77a4e79fdc06b9a3859eed92b1391
----------------------------
set_var.cc: Make query_cache_wlock_invalidate show up in SHOW VARIABLES. (Sanja agrees that it should show up, has seen the patch, and agrees that it's correct.) 	22550c301be56db2f336eea69b482aa5454ffc4c
----------------------------
"Escaping [] so that darwin[7-8] gets into 'configure' and not darwin7-8 Adding a compilation define so that on recent Darwin mysqld does not react to SIGHUP and SIGQUIT: this fixes a rpl000001 problem on our Powermac G5 machine (popping after an upgrade from 10.3.4 to 10.3.5) and is expected to fix BUG#2030 ""relay bin log on slave resets multiple times a second"" (i.e. under some Mac OS X Panther versions, mysqld receives many SIGHUP and SIGQUIT). So this fix is more a problem-hider than a real understanding of why mysqld receives so many signals. Note that we saw other problems on this OS where mysqld reacts to Ctrl-Z but apparently only once, where using SSL seems to make the problem more frequent... "	c9a46a43d274957f5faed3a9e0ed33e02407bb64
----------------------------
- giving a range does not work for platform detection in configure.in - resorting to having to separate sections for darwin7 and darwin8 	c8f8ca889fca8c5560e48a1b63f1c146db2aee91
----------------------------
bug#4997 - --log-error sometimes generates incorrect default name. Now replacing domain name by 'err'. If host name doesn't have a domain name, '.err' is appended as before. 	68871aee8e3cd1bb9cda1509f54439b683021706
----------------------------
bad merge fixed - myisamchk support for --ft_stopword_file restored 	56b423e058c0a791270354e02648239fb5bb590a
----------------------------
Forgott to update testBackuo w.r.t to ConfigRetreiver 	e7d89abf33b2f251304527c350e53d9c6844d311
----------------------------
configure.in: Collation name fixes. 	e4348ee9a5421287d544266512dfd8288bd4ea7d
----------------------------
mysqld.cc: Put --help first, reorder other options so that they are alphabetical. (shouldn't have to use grep to find an option.) Move group_concat_max_len to variable part of list. Rename character_set_server, collation_server, shared_memory_base_name to character-set-server, collation-server, shared-memory-base-name. Make default-collation message refer to collation-server rather than character-set-server. 	651b6893b13d772cfd06c1feda8104ffb8f9b216
----------------------------
Small fix for updated config params 	75b85ebc60826d2c0e44e37a2a18bb273cc1b15b
----------------------------
Remove unused config parameters 	a0a5a6a6fb947336afa70a94557da1b7413782a9
----------------------------
"Initial support for updating configuration ""on the fly"" Only updates values mgmsrv's on main memory to be used in test prg's "	86d2906be536e7bcc19cd6fbc01a948ad133a204
----------------------------
BUG#4892 TRUNCATE TABLE returns error 156 Added NDBCLUSTER to table types which does not support generate. Added test case for truncate. 	d526f3277e223be3b3741f04e925b2c7ee75a76e
----------------------------
"- bumped up version number in configure.in to 5.0.2-alpha, now that 5.0.1 is out - tagged ChangeSet@1.1698 as ""mysql-5.0.1"" "	c4e9e183232ee2dd5a48ddd7e8842136e5c7fb62
----------------------------
Added --with-ndbcluster config option to compile-pentium-valgrind-max (since it's in the other -max builds already). 	387a01ddc8caf376dd7b87aae3e255344c0b8f94
----------------------------
ha_ndbcluster.h, ha_ndbcluster.cc: compile fix for gcc-2.95 	8bd205c8e2c31d9aee21d7cdbc6bc277d70a981d
----------------------------
Fix 64-bit issue in ConfigValues 	bac5d8f9b6992786826c7c0d47a6eea23f8c8e27
----------------------------
"WL#1518 ""make bundled zlib usable for unix builds"", post review fixes: - comment for AC_DEFINE(HAVE_COMPRESS) fixed - build convenience library from zlib: we need to compile it into both libmysqlclient.a and libmysqlclient.so - --with-zlib-dir=bundled configure option "	d68ed3f0f7bc0730c97f4b40fdc9d42d1b5c60ad
----------------------------
avoid functions in configure 	13ecd6946984e5825f771f82f34c862911c5ea53
----------------------------
Added info about new --log-warnings option. 	7c3164577f7d872c3340aba18270fde68a8448d3
----------------------------
All templates inlined into AC_DEFINE/AC_DEFINE_UNQUOTED. Use of acconfig.h is deprecated in modern autotools (a cleaner patch). 	4139c359f8e7f27682be6d2149e726f2b7f5b978
----------------------------
ha_ndbcluster.cc: merge 	156bfa48f5204fdbc85fcfd55be8e1b5f7f81206
----------------------------
ha_ndbcluster.cc: ndb_supported_type, include all types in switch 	f14d9c672b9d2a1333cdb77128f1c8b9c90ae89a
----------------------------
- Use the same compile options for the upcoming darwin8 OS in configure.in (thanks to Al Begley from Apple for the hint) 	a54f6398fe9649e1b84b25235e6c60c0ae8d86ba
----------------------------
Final patch for WL#1600(warn if max_allowed_packet used) 	cbff743b2dd6894f393db204cbd7e0a96e82f973
----------------------------
Added innodb_locks_unsafe_for_binlog option. This option turns off Innodb next-key locking. Using this option the locks InnoDB sets on index records do not affect the ``gap'' before that index record. Thus, this option allows phantom problem. 	0449396a674c88a0f8bee17e21c33d3b80fcc38a
----------------------------
Fixes for min, max and default values of config params Removed all DEPRICATED params Introduced MAX_INT_RNIL as new maximum of Uint32 = RNIL - 1 	844a9387d6dcfe19bd022adf1afc5c5a7c76df41
----------------------------
"Windows-specific: Fix for BUG#4375 ""Windows specific directories are copied during replication"": in the Windows version of my_dir(), do not show hidden or system files which Windows sometimes creates in the root directory of drive (like RECYCLER and SYSTEM VOLUME INFORMATION directories) (so this problem showed up only when the datadir was the root dir of a drive). This will make SHOW DATABASES display better, and will do no harm to MySQL. For example, DROP DATABASE will not miss some files, as MySQL creates no hidden or system files. "	912eb811ba138672d6e2baaebd0d5bcd97dd2166
----------------------------
"- fixed typo in mysql-test/ndb/ndbcluster.sh that caused a ""test: argument expected"" error when trying to run the NDB test suite on Solaris "	b5c6ced1aad2899eb6188940b441baf893a2e1e6
----------------------------
Fixed ndbcluster_print_error to use table name from failed NdbOperation 	3f20e69c250d07ef8e0073b3194817fa50aa2850
----------------------------
configure.in: armscii8_bin was referenced to as armscii_bin. 	a597b077c62c480c8a3f565a759b3f25932f9a3d
----------------------------
"- tagged ChangeSet 1.2023 as ""mysql-4.1.3"" - bumped up version number in configure.in: 4.1.3-beta -> 4.1.4-beta "	2c6537e2cb1694bd272231c1b50ee8807745f6ff
----------------------------
Added flexibility for connecting and retrieving config from mgmtsrvr 	5e6a1a89ef679a241616d28413fa09808577db11
----------------------------
WL#1600 (Warn if result is truncatet due to max_allowed_packet) 	eb67909bf4a280c14267940d27172f7671aa2716
----------------------------
adopting mysql-test-run to new ndb config + added option to ndb_waiter to wait for NO CONTACT 	37df5deb414591a162496b32ef79d87a1c457ca3
----------------------------
updated mysql-test/ndb to make use of new default config options 	11bd3eedfe83c79c4525bdbc93b191ec5d41f83d
----------------------------
several config fixes for ndb, see respective file 	f0ccb88e0d0df4b1dcbdd32226f3ac953c3ac3c2
----------------------------
Fix for 'make dist' 'make distclean' goals work even if ./configure called without NDB enabled. 	172ab0ab8b2c21a7c4075dda1c0ed14f329fed9a
----------------------------
Added missing root user to mysql.user on windows. (Bug #4242) Set default max_allowed_packet to be able to read help tables even if an my.cnf file with this option is present. (Bug #3938) Don't use default arguments for ha_rnd_init() Simple code cleanups since last pull 	f6765146c1b97bbb71f79adbd275dc2b6ca79333
----------------------------
Modified index flags and added ndbcluster_print_error 	075d71d54681d96f7603ae665b62a4e192c81cbc
----------------------------
configure.in: --with-charset=binary didn't really work after my previous change. 	6515bb716b662d5b8327830fd96d9e34fdae9568
----------------------------
lower_case_table_names=2 (Keep case for table names) was not honored with ALTER TABLE and CREATE/DROP INDEX. (Bug #3109) Make net_buffer_length visible for mysql clients (Bug #4206) 	ad86016e2ff3af18892d24577e956b886bd150fd
----------------------------
Modified ndbcluster_print_error to stack allocate table and handler, NOT for review, will make patch instead 	432020a18d8f0987e92b89fac2e0bd4cf4013a14
----------------------------
Added static print error function to be used by handler in ndbcluster_commit and ndbcluster_rollback 	e6391b9493dfc24d84950689e62287f6062df7f1
----------------------------
configure.in: ./configure --with-charset=binary is now possible. 	e6fbd809220b4626ca460eb1e2023c544d572888
----------------------------
Added static print error function to be used by handler in ndbcluster_commit and ndbcluster_rollback 	da8ab00d124e5156735178ab3ab684f7c18d6644
----------------------------
"Robustness feature. Won't be pushed as is - separate email sent for internal review. WL#1717 ""binlog-innodb consistency"". Now when mysqld starts, if InnoDB does a crash recovery, we use the binlog name and position retrieved from InnoDB (corresponding to the last transaction successfully committed by InnoDB) to cut any rolled back transaction from the binary log. This is triggered by the --innodb-safe-binlog option. Provided you configure mysqld to fsync() InnoDB at every commit (using flush_log_at_trx_commit) and to fsync() the binlog at every write (using --sync-binlog=1), this behaviour guarantees that a master always has consistency between binlog and InnoDB, whenever the crash happens. 6 tests to verify that it works. "	f5d642448777999257f8c23dd25f2e9257912870
----------------------------
Fix for bug in build scripts making everything to be reconfigured at each 'make' invocation (pushing as two devs tested that the patch is ok). 	efba49fd7d36aa30570adc31fd39aac1afd01e3e
----------------------------
configure.in: Fix typo. 	e39ff18e659b3e9d3831b2a6bda8689cf00026ba
----------------------------
configure.in: New collations were added. 	24751bf3325a5dcc487d6872bba75b2165adc815
----------------------------
cannot include my_config.h directly, breaks some makes 	25b8f29f11e2e4babf1f83ac312aa926d8e94c79
----------------------------
removed need for specifying TCP connections in MySQL Cluster configuration 	9c9ac185508260a90fcdc38c6150cb0f3553ca77
----------------------------
fil0fil.c: Remove the use of mem_realloc in fil0fil.c; mem_realloc() was broken and the patch to remove its definition will propagate from the 4.0 tree; crash recovery with innodb_file_per_table has to be tested after this patch, not tested yet 	79fd0c68d3c0007b4ac1443cd24d981c0bd8a7ff
----------------------------
mysql-copyright: Fixed various issues to deal with untarring of gpl tar file, clearing configure.in, changed calls to use system vs. backticks 	c6344b08eaf8b9aa5f618baba334c21d3515345e
----------------------------
Made discless a config parameter instead of a env. variable 	f5e2974cc60c1ced77c14a339a6bb211bb22e892
----------------------------
"Fix for BUG#4038 ""rpm postinstall script leaves files as owned by root"": the rpm postinstall script must call mysql_install_db with --user=mysql, and mysql_install_db must then pass this to mysqld. Otherwise, mysqld runs as root, and if you have --log-bin=somewhere_out_of_var_lib_mysql it creates binlog files owned by root in this dir, and this dir is not fixed by the 'chmod mysql', so files remain owned by root, and later mysqld (running as 'mysql') can't read them. I'm hardcoding 'mysql' in the postinstall script, but it's already hardcoded there in many places (see the useradd and chown) so it's ok. "	4bd441850c3350c1d4a95109edcce6d557e8237b
----------------------------
"client.c: Bug #3990  	`--with-charset' ./configure's switch doesn'taffect mysql client library. "	acbb3096b2c057c1ccc3d8bdc59a41ffeb851087
----------------------------
moved ndb versioning to configure and fixed ndb docs make 	5a8303a3c17ee421ba23e184c32c2aa6d5b22087
----------------------------
Makefile.am: local flag in ndbapi to set -O2 since problems occur with -O3 pc.hpp, Emulator.hpp, Emulator.cpp, ErrorReporter.cpp: USE_EMULATED_JAM -> !NO_EMULATED_JAM ErrorReporter.hpp: removed NDEBUG and removed THREAD_ASSERT Dbdict.cpp: NDB_DEBUG -> VM_TRACE configure.in: cleaned up ndb CXX flags and added optional flag possibility 	63fe3c7e73584f0359c7ac6077fbd5d9a4ff864c
----------------------------
Added authentication code that was missed in merge Added new windows configuration 	42c35d45697b529dcb4d69c3c21b7c7772be38db
----------------------------
Changed --log-warnings to be integer instead of boolean. Given --skip-log-warnings will disable warnings, --log-warnings will increment warning level by one, or the level can be given as an optional argument. Default level is 1. Changed aborted connection warning to be logged only if the level is > 1. 	2953c23ab04e89addc0daa8bc2d1d52a39da554c
----------------------------
BUILD/compile-pentium-maintainer should not ever be needed since there is no AM_MAINTAINER_MODE macro in configure.in 	d01c7b18d8b6a903b40790576cbae6801943eadf
----------------------------
AC_MAINTAINER_MODE removed: now MySQL is always configured in maintainer mode and one should expect better dependencies tracking. 	0dde8d4ae777cc6bed5f737fa462b44fc06b306c
----------------------------
ha_ndbcluster.cc: Missing  semicolon 	c98a89546275358c2589ad8f87dfa2e0e98257c6
----------------------------
Added option --config-extra-env to Do-compile 	cb5c3f6e2edec10e1f5c5bbd95916976eb30d8f6
----------------------------
WL#1163 (Make spatial code separable for other parts) --with-geometry and --with-embedded-privilege-control configure switches added 	15ea09b79d4c3c7e3f175f955130b029a77f231c
----------------------------
configure.in: automake verion problem 	1161f719a82de16a1da016c0f5a7f179fa43e50a
----------------------------
netware files should always be in 'make dist' use opt_net_buffer_length instead of net_buffer_length 	833ec1653e9e0225328736bcaa8b03fec6d14000
----------------------------
logging_ok: Logging to logging@openlogging.org accepted compile-pentium-max: changed --with-ndbcluster to --without-ndbcluster because it fails on 4.1 builds 	f0ce42d60dc122a01940767e82aff69028d9f44e
----------------------------
configure.in: makefix 	d1abc78ae027cff7de12deba934bdc55d105b89d
----------------------------
WL1371 - Cleanup configuration handling WL1356 - Discless db node WL1357 - sp 1-2 	7037c866894aa236656f0c41f3b39738d2056491
----------------------------
Proposed fix for bug #3818 (libmysqld.dll leads to program's crash) configurations added to build the libraries with USE_TLS flag to be used for libmysqld 	640728a05188bec428349644faca06da5861c448
----------------------------
updated configure for automake in ndb tree 	fff33634be2bc45a7ca559beeaa4985e7e4d2eb4
----------------------------
"logging_ok: Logging to logging@openlogging.org accepted Do-compile: 1. Option to ensure that logs are moved and then backed up on each host prior to a build 2. Option to run build with flag ""--without-ndbcluster"" "	775f8042c9e7800aec90e143636039d354c4a3cc
----------------------------
Fix for sporadically failures of innodb.test on Darwin 7.3 which occured because we were not lowering case of file names for temporary tables altough handler assumes so if lower_case_table_names==2. Now we are lowering case for them. 	a5fab72bc4bb515fd41b06889bdb674437971d9c
----------------------------
Fix for bug which caused grant.test fail on darwin7.3. We were converting db and table names to lower case using latin1 instead of utf-8 in sql_acl.cc if lower_case_table_names was on. Also replaced in other such places system_charset_info with files_charset_info for consistency. 	c095ce828e31dfb334a130c9eec0f9b86ae8f84b
----------------------------
Better names for two system variables: - heuristic => optimizer_prune_level - plan_search_depth => optimizer_search_depth 	432b842e23059f866bcfb3ed8b5cb84998f9e115
----------------------------
"Fix for Bug#3754 ""SET GLOBAL myisam_max_sort_file_size doesn't work as expected"": precision-losing conversion removed from sys_var_thd_ulonglong. "	e13e9288c98f5186fd0f534d0d486084e7df2a0a
----------------------------
Fixed a bug in mysql-copy-right-2 script. As it was, it destroyed some ndb source files, such as ha_ndbcluster.cc 	09f5f1edf2d96815c704e3d60330f796efb9f5dd
----------------------------
mem0pool.c: Fix a memory corruption bug: in 32-bit computers, every 4 billionth malloc outside innodb_additional_mem_pool_size was mistreated when freeing the memory; this could corrupt the InnoDB additional mem pool and could have caused crashes anywhere, also inside MySQL, or even database corruption! the bug exists also in 3.23 and 4.1; workaround: configure innodb_additional_mem_pool_size big enough 	0189d5afe8f5f74d21d2603a7ba8048286ff16e9
----------------------------
Only compile SHM if configured to 	47b7c5612dc5d7e0342cda4a303e9c25fe8e8077
----------------------------
Add read_rnd_buffer_size in my.cnf example files Remove wrong redefine of vio_reset() (to compile libmysqld on windows) 	4ef7918e1863ac8020c6d28c3a252e9fe69ed06f
----------------------------
Merge: 05d83a8 794b3b5 Merged ha_ndbcluster.cc 	787c978673f4ef7b25ed0c1195fc0d9596b5495c
----------------------------
BUG# 3658 ALTER TABLE corrupts table Added  test file for ALTER TABLE, engine = ndbcluster 	1d8bf1cb18bccb607c087b3ce2243bb9487e7d7c
----------------------------
"InnoDB: Truncate ""<datadir>/innodb.status.<pid>"" to its actual size (Bug #3596) "	fc7ae6a222e6d27a7e5715629c98196eb0bb8e8e
----------------------------
useless fixes for --report-password and --show-slave-auth-info (almost undocumented options), just for beauty of truth. 	5fcd62a13a1923f7d4b6e7df2645e2f39d6473ac
----------------------------
"Merge NDB patches into 4.1-clone, below is list of changesets # -------------------------------------------- # 04/04/13      joreland@mysql.com      1.1858.1.1 # Removal of NDBT_Table # -------------------------------------------- # 04/04/13      joreland@mysql.com      1.1858.1.2 # Removal of NDBT_Table # -------------------------------------------- # 04/04/13      joreland@mysql.com      1.1858.1.3 # Fix for crashing AT # -------------------------------------------- # 04/04/13      joreland@mysql.com      1.1858.1.4 # Bug fixes in testIndex # -------------------------------------------- # 04/04/13      joreland@mysql.com      1.1866.1.5 # Merge joreland@bk-internal.mysql.com:/home/bk/mysql-4.1-ndb # into mysql.com:/home/jonas/src/tmp # -------------------------------------------- # 04/04/14      joreland@mysql.com      1.1858.1.5 # Fix for takeover when accessing indexes. # -------------------------------------------- # 04/04/14      joreland@mysql.com      1.1866.1.6 # Merge joreland@bk-internal.mysql.com:/home/bk/mysql-4.1-ndb # into mysql.com:/home/jonas/src/tmp # -------------------------------------------- # 04/04/14      joreland@mysql.com      1.1858.2.1 # Fixed error handling of fire_trigger_ord + lqhkeyref w.r.t indexes # -------------------------------------------- # 04/04/14      joreland@mysql.com      1.1858.2.2 # Simple retry mechanism in UTIL # Helps testIndex -n BuildDuring _a lot_ # -------------------------------------------- # 04/04/14      joreland@mysql.com      1.1858.2.3 # Misc fixes to test prg. # -------------------------------------------- # 04/04/14      joreland@mysql.com      1.1858.2.4 # Allow more retires on application errors # -------------------------------------------- # 04/04/14      joreland@mysql.com      1.1858.2.5 # Pass no of rows fetched in SUB_SYNC_CONTINUE_REQ # -------------------------------------------- # 04/04/14      joreland@mysql.com      1.1869 # wl1714 # Improve parallellism # -------------------------------------------- # 04/04/14      joreland@mysql.com      1.1870 # Merge joreland@bk-internal.mysql.com:/home/bk/mysql-4.1-ndb # into mysql.com:/home/jonas/src/wl1714 # -------------------------------------------- # 04/04/14      joreland@mysql.com      1.1866.1.7 # Merge # -------------------------------------------- # 04/04/14      joreland@mysql.com      1.1871 # Merge mysql.com:/home/jonas/src/wl1714 # into mysql.com:/home/jonas/src/mysql-4.1-ndb # -------------------------------------------- # 04/04/14      joreland@mysql.com      1.1872 # Fix for testScan -n ScanReadError5030 # -------------------------------------------- # 04/04/14      joreland@mysql.com      1.1873 # fix testDict -n FragmentType* # -------------------------------------------- # 04/04/14      johan@stingray.(none)   1.1866.2.1 # small fixes # -------------------------------------------- # 04/04/14      johan@stingray.(none)   1.1874 # Merge jandersson@bk-internal.mysql.com:/home/bk/mysql-4.1-ndb # into stingray.(none):/space/bk/rep/mysql-4.1-ndb # -------------------------------------------- # 04/04/14      johan@stingray.(none)   1.1875 # handle rep node as an api node # -------------------------------------------- # 04/04/14      pekka@mysql.com 1.1873.1.1 # Fix for NDBT_Table removal # -------------------------------------------- # 04/04/15      joreland@mysql.com      1.1873.1.2 # Uninitialized var. # -------------------------------------------- # 04/04/15      johan@stingray.(none)   1.1876 # Merge jandersson@bk-internal.mysql.com:/home/bk/mysql-4.1-ndb # into stingray.(none):/space/bk/rep/mysql-4.1-ndb # -------------------------------------------- # 04/04/15      joreland@mysql.com      1.1873.1.3 # Write pid before changing user # (as runas user probably doesn't have permissions on pid-dir) # -------------------------------------------- # -------------------------------------------- # 04/04/15      ndb@mc03.ndb.mysql.com  1.1862.1.3 # Fix printout of varchars # -------------------------------------------- # 04/04/15      ndb@mc03.ndb.mysql.com  1.1877 # Merge joreland@bk-internal.mysql.com:/home/bk/mysql-4.1-ndb # into mc03.ndb.mysql.com:/space/ndb/tmp # -------------------------------------------- # 04/04/15      ndb@mc03.ndb.mysql.com  1.1862.1.4 # Hmm.. don't print attr as many times as length of array # -------------------------------------------- # 04/04/15      ndb@mc03.ndb.mysql.com  1.1878 # Merge mc03.ndb.mysql.com:/space/ndb/mysql-4.1-ndb # into mc03.ndb.mysql.com:/space/ndb/tmp # -------------------------------------------- # 04/04/15      joreland@mysql.com      1.1876.1.1 # Merge joreland@bk-internal.mysql.com:/home/bk/mysql-4.1-ndb # into mysql.com:/home/jonas/src/mysql-4.1-ndb # -------------------------------------------- # 04/04/15      joreland@mysql.com      1.1877.1.1 # Merge joreland@bk-internal.mysql.com:/home/bk/mysql-4.1-ndb # into mysql.com:/home/jonas/src/mysql-4.1-ndb # -------------------------------------------- # 04/04/15      ndb@mc03.ndb.mysql.com  1.1879 # Merge joreland@bk-internal.mysql.com:/home/bk/mysql-4.1-ndb # into mc03.ndb.mysql.com:/space/ndb/tmp # -------------------------------------------- # 04/04/17      joreland@mysql.com      1.1880 # LCP bug when restarting ops take's longer than DIH sending a new lcp ord # Solution: # Send LCP_FRAG_REP after restarting all ops # -------------------------------------------- # 04/04/18      joreland@mysql.com      1.1881 # Missspelled ERROR_INSERT # -------------------------------------------- # 04/04/18      joreland@mysql.com      1.1882 # Added possibility to log only distributed signals # -------------------------------------------- # 04/04/22      joreland@mysql.com      1.1883 # Removed dependancy to libstdc++ # * pure virtual functions ""__cxa_pure_virtual"" is defined in libstd++ -> #   remove all pure virtual functions # -------------------------------------------- # 04/04/23      joreland@mysql.com      1.1884 # Various minor bug fixes for problems found while compiling # with icc # -------------------------------------------- # -------------------------------------------- # 04/04/25      joreland@mysql.com      1.1885 # Removed debug code (joreland:1.1875) # -------------------------------------------- # 04/04/26      ejonore@mc03.ndb.mysql.com      1.1862.1.5 # Lock pages in memory _after_ daemon-mode (exec/fork) # -------------------------------------------- # 04/04/27      ejonore@mc03.ndb.mysql.com      1.1862.1.6 # 1) Trap abort() # 2) StopStart/StopAborted events # 3) warning if memlock fails # 4) use g_logger more often (instead of ndbout) # # -------------------------------------------- # 04/04/27      joreland@mysql.com      1.1886 # bug fix for a bug in wl1714 + software upgrade # -------------------------------------------- # 04/04/27      joreland@mysql.com      1.1887 # Cset exclude: joreland@mysql.com|ChangeSet|20040422160720|05374 # -------------------------------------------- # 04/04/27      joreland@mysql.com      1.1888 # removed libstc++ second try... # -------------------------------------------- # 04/04/28      ejonore@mc03.ndb.mysql.com      1.1862.1.7 # 1) Don't lock FUTURE pages but only current # 2) Do this when SIZEALT has completed # -------------------------------------------- # 04/04/30      joreland@mysql.com      1.1889 # Merge jonas@orca:/home/ndb/releases/mysql-4.1-ndb-3.4.x # into mysql.com:/home/jonas/src/mysql-4.1-ndb # -------------------------------------------- # 04/05/03      ndb@mc03.ndb.mysql.com  1.1862.1.8 # Version update # -------------------------------------------- # 04/05/03      joreland@mysql.com      1.1862.3.1 # Changed restart behavior. # Use ""angel"" process which monitor ""real"" process # -------------------------------------------- # 04/05/03      joreland@mysql.com      1.1862.1.9 # Merge jonas@orca:/home/ndb/releases/mysql-4.1-ndb-3.4.x # into mysql.com:/home/jonas/src/mysql-4.1-ndb-3.4.x # -------------------------------------------- # 04/05/03      joreland@mysql.com      1.1890 # Merge B2 fixes # -------------------------------------------- # -------------------------------------------- # 04/05/03      joreland@mysql.com      1.1862.1.10 # Better handling of children terminations # -------------------------------------------- # 04/05/03      joreland@mysql.com      1.1862.1.11 # Fixes for angel-restarting # -------------------------------------------- # 04/05/03      joreland@mysql.com      1.1891 # Merge mysql.com:/home/jonas/src/mysql-4.1-ndb-3.4.x # into mysql.com:/home/jonas/src/mysql-4.1-ndb # -------------------------------------------- # "	230134152e1c86c454f842206d84f074390fbcf1
----------------------------
myisam_data_pointer_size 	7df9f7d621153c20e92e1a275ea82669d10cd8aa
----------------------------
Addded test files for NDB Updated stop_ndbcluster script 	d4ee7e7e9b7b6add5e540c191370d142cae6b383
----------------------------
Removed define NDB_MAX_CONNECTIONS 	025b29b8536731a9552ec86b2fd32a34549965b0
----------------------------
Updated default NDB config to work better with sql-bench Updated sql-bench configs to take NDB's limitations into account 	ed6148da75c9f18fbfd5862076374977bbf4e16e
----------------------------
configure.in: added configure options PACKAGE and VERSION for ndb GuessConfig.sh: added options for PACKAGE and VERSION Epilogue.mk: Added target distdir 	818d0bb3c9097a81c8826e8ab63220f7b16c45f5
----------------------------
- added AC_PROG_LIBTOOL to innobase/configure.in to be able to compile MySQL with InnoDB on IBM AIX 5.2 in 64bit mode (which requires a special AR flag) 	7901fca4946546340980bd926d22f40151900d9a
----------------------------
"A new option --replicate-same-server-id to force a slave to execute queries originating from itself (WL#794). This can be of interest in some recovery-from-backup scenarios, and also when you have two databases in one mysqld, having a certain similarity and you want one db to be updated when the other is (some sort of trigger). Plus small fix for BUG#3568 ""MySQL server crashes when built --with-debug and CHANGE MASTER +MASTER_POS_WAIT"" "	3fc39188ecc50b6f76d8e10f18596a5c10ef659b
----------------------------
symlink, not hardlink mkdir in Makefile, not in configure chmod a-x 	606073084e5627c03ee2cd148968e09a9c5fccbb
----------------------------
install_ndbcluster: cosmetic 	78b242c946ff166190ad998a9294023e26214a09
----------------------------
Makefile.am: fix for embedded server and ndbcluster make 	95c87cfa9c24e972998b4b2fda5b9d9a8078952d
----------------------------
allow --skip-ndbcluster if server is not compiled fixed syntax errro 	df5df8a1d1ac9366aff3f419dfa6108b6b237eee
----------------------------
make_binary_distribution.sh: added --with-ndbcluster switch 	8e381405ebc5b2f70d976b5dde265f483dc6ba74
----------------------------
mysql-test-run.sh: added options for ndbcluster 	d48ebf3e58d2077396dcf2d7c3568bbd538d1f0a
----------------------------
logging_ok: Logging to logging@openlogging.org accepted stop_ndbcluster, ndb_config_2_node.ini, install_ndbcluster: new file 	40de5714b02972e2b1639bbd431a29ac1509b163
----------------------------
"Fix for BUG#3461 ""multi-table DELETE replicated despite replicate-wild-ignore-table"": In tables_ok(), when there is no table having ""updating==TRUE"" in the list, return that we don't replicate this statement (the slave is supposed to replicate *changes* only). In practice, the case can only happen for this statement: DELETE t FROM t,u WHERE ... ; tables_ok(t,u) will now return 0, which (check all_tables_not_ok()) will give a chance to tables_ok(t) to run. "	066382e6e721b24043970e90d1d8757162ccc5b4
----------------------------
make session max_delayed_threads to be settable only to 0 or global value 	0d402d8d1103936bea3f4815c98df9e4f7b5dd2f
----------------------------
- Merged in changes from mysqld_multi 2.6 - Changed reading of config file so that one can use a separate config file for [mysqld_multi] also. In other words --config-file=file will read group [mysqld_multi] from this file, earlier it wouldn't have. 	96cb3ec0e9c3ace612b563e2cbd264c503595f85
----------------------------
correct SET GLOBAL ft_boolean_syntax=DEFAULT behaviour 	7899158736f0b6eb046948f3d3338f4bc702fe76
----------------------------
Fixed previous security patch. mysqld_safe will use the given --log=file, or if not given, it will try to use the one in datadir, if possible, otherwise log file will be disabled. 	0e5cdf319dbcae5904ab0c2a70d7dfa711754901
----------------------------
Fixed a problem with mysqld_multi log file. The default is now datadir/mysqld_multi.log, if doesn't exists or is not writable, then /var/log/mysqld_multi.log, if does not exists or is not writable, then /tmp/mysqld_multi.log, but only in case the file does not yet exists in /tmp. Otherwise log will be disabled, unless user explicitely sets it with an option. 	0f484ebae601f3c4a02c2eca17c9b9f88d4c5f88
----------------------------
InnoDB: Backport fil_path_to_mysql_datadir from MySQL 4.1.x 	f7f8efc2638b35c95b1a26b2bc808aaa92a43c79
----------------------------
BUG#3328 I can't see group_concat_max_len in a list of variables 	f3e348bcca1ef0d3adcb57e2262a926d1d1b53c8
----------------------------
"WL#775 ""Add status variable identifying binlog_cache_size shortage"" Added two status variables: binlog_cache_use - counts number of transactions that used somehow transaction temporary binary log. binlog_cache_disk_use - counts number of transactions that required disk I/O for storing info in this this binary log. "	a80f46bfdf6e84d04a9af5d27b6985299e1d225c
----------------------------
To save 32KB memory per thread when --log-bin is not used, we do not init the binlog_cache (THD::transaction.trans_log). I have checked all places where trans_log is used, because as now it may not be inited in some cases, we have to be cautious (will forward this commit mail to Heikki). 	90a5e244bed4d136a292efe72b217a929587e79b
----------------------------
"fixed config parser to recognize correctly strings like following: test=""\""#no comment here""#real comment "	8215fbe957ffbcd3eae76aaa605b05407c5ea479
----------------------------
- reverted use of AC_CONFIG_SUBDIRS for BDB for now (it somehow did not work as expected) - need to investigate (after 4.1.2 is released) 	9ab6567bcd8caa407e31a13711f071114b52dc1f
----------------------------
"- Use AC_CONFIG_SUBDIRS to invoke the InnoDB and BDB configure scripts instead of calling them directly (WL#1521) - this also fixed a compile error with libtool-1.5.2 on FreeBSD (error: tag name ""CXX"" already exists) "	4493a24dc7e00f9a72cb23a34607297a0e5919cf
----------------------------
Don't change server suffix if given to configure Portability fixes 	19d0a60eca2e5444dd4fc9d77300dc974a84a0fc
----------------------------
"roll back change in client/mysqladmin.c for bug #3160 '""mysqladmin password"" doesn't work if --skip-grant-tables' because we can't find out the mysql.user.host properly now mysqladmin just print an advice error-message in this case "	f91acaf9c047cc81a8f0093ecd6d1d5a349b4d1a
----------------------------
"fixed bug #3160 '""mysqladmin password"" doesn't work if --skip-grant-tables' "	28ebb5a680100c8a409a1f482c9e4bf68a725612
----------------------------
Increase max size of number of elements in key. This fixed a bug when using count(DISTINCT) with lot of distinct values and big 'max_heap_table_size' 	dcf5ba1c95e8012c9e4dcead01286973cc925cf8
----------------------------
"WL#1163	(to make spatial parts optional) --without-geometry and --with-embedded-privilege-control switches added to the configure "	6b42f932d6d01d8ed8a67a82da177e3a35dce66e
----------------------------
- added AC_PROG_LIBTOOL to innobase/configure.in to be able to compile MySQL with InnoDB on IBM AIX 5.2 in 64bit mode (which requires a special AR flag) 	7765418e3cf4449eb7c7319e08b587e2be7efb02
----------------------------
"Fix for BUG#2921 ""Replication problem on mutex lock in mySQL-4.0.18"": re-using unused LOCK_active_mi to serialize all administrative commands related to replication: START SLAVE, STOP SLAVE, RESET SLAVE, CHANGE MASTER, init_slave() (replication autostart at server startup), end_slave() (replication autostop at server shutdown), LOAD DATA FROM MASTER. This protects us against a handful of deadlocks (like BUG#2921 when two START SLAVE, but when two STOP SLAVE too). Removing unused variables. "	cf287341cc4e418b5310f8882970ad32a00c728a
----------------------------
Make SHOW VARIABLES output really alphabetic. Note: the patch removes an extra declaration of the read_only variable. It also assumes that '_' sorts before [a-z]. 	ea28e842cdf99f4bafee6738bc9fb5dd0a18e5c7
----------------------------
"Ensure that one can't from the command line set a variable too small. (Bug #2710) Allow one to force lower_case_table_names to 0, even if the file system is case insensitive. This fixes some issues on Mac OS X (Bug #2994) Added variables ""lower_case_file_system"", ""version_compile_os"" and ""license"" "	ef971bb6048db5fc99cddaff1673c8a001705111
----------------------------
invalidation of locking for write tables (BUG#2693) fixed linking query_prealloc_size to query cache presence 	d03034d3062f528266ac4853ab2f2ba17f01dfdb
----------------------------
"""you need MySQL build with"" may take an configure option as an argument not necessarily a define "	f90555e0d5717e6b9e0a5893e0c375aa3b6aa7f5
----------------------------
--set-character-set and --character-sets-dir in myisamchk now work 	a9d58d3e96fec4c61802a4550b12b74ca5cb220f
----------------------------
configure.in: Removed the unused odbc directory 	568121c6fffa28e0899ac75a44f6a66cc73dcb9a
----------------------------
"Fix for BUG#2757 ""--read-only gives weird error on update"". It is not fixable in 4.0 because it requires modifying the sql/share/*/errmsg.txt files. So it is fixed in 4.1 like this: the ER_SKIP_GRANT_TABLES is replaced by a more generic ER_OPTION_PREVENTS_STATEMENT which can be used both for ""can't do this because of --skip-grant-tables"" and ""can't do this because of --read-only"" (for this we don't use ER_CANT_UPDATE_WITH_READLOCK anymore). So now the message for --read-only is: ""The MySQL server is running with the --read-only option so cannot execute this statement"". "	8bfb87ced5c2d1394fa43d8e326ad3d34e5fe8f5
----------------------------
fix for --open-files-limit and broken query_cache_merge.test 	fc16e4ded3531e041ef263c180eac8be58a52d6c
----------------------------
fixed comparation of tables/database names with --lower_case_table_names (BUG#2880) 	0af6983ed08980616977ee065f9b6f35c963fc90
----------------------------
- when removing the readline subdir for the commercial distribution, configure.in needs to be updated and configure needs to be recreated for the build to succed 	1c814b535031ea486d51df404f8c5b2122ef8435
----------------------------
Max open files handling moved to my_set_max_open_files() This ensures that my_file_info takes this the max number of files into account and one can now use --open-files-limit on windows to increase number of used files up to 2048 	e347f63192874ee5d3123f7bf078a05fecc5ef58
----------------------------
ft_boolean_syntax made changeable 	de240a1ce2ffbc62f16e5772f9c78df58edb9092
----------------------------
- bumped up version number in configure.in from 4.0.18 -> 4.0.19 - Tagged ChangeSet@1.1733 as mysql-4.0.18 	09b90901add0f125e7f6128c74fa963eabca43ba
----------------------------
"configure.in: FreeBSD ""ps"" detection usually failed, in 90% cases, on FreeBSD-5.1. This change should work fine under 5.x and 4.x, and I believe in 3.x. too. "	dc696d2e5d188e726d12aaff39cbb4c94ab58aec
----------------------------
Export CXX and AR to make it easier to invoke other configure scripts with same options. 	2d2f7f89ff5e1ae8b9ce9df5014d2d8f938ea46e
----------------------------
follow-up to bug #2628: attempt to make alter table rename a bit more efficient in case of lower_case_table_names. 	3d039e4986f62753705dd09b05473fe70b8d9883
----------------------------
- updated config.guess, config.sub and ltmain.sh with versions from libtool 1.5 to fix BUG#202 (update config.guess & co for MIPS architecture) 	650580698f7f473b1ccb5a520a17fc8b269c7c9f
----------------------------
Added testing of pthread_key_delete (to fix compile problem on SCO) (Bug #2461) DROP DATABASE now assumes RAID directories are in hex. (Bug #2627) Don't increment 'select_full_range' and similar statistics for EXPLAIN queries. (Bug #2506) Test in configure if pthread_key_delete() exists (to fix compile problem on SCO) (Bug #2461) 	7df839e7572bd6303896a04fbc070150d5ec6af2
----------------------------
"added checking for bootstrap in select_send::send_data (fixed bug #2526 ""--init-file crashes MySQL if contains large select"") Such checking usually works in send_ok, send_eof, but in this case large result causes interim flushing. "	7769e5a6771e6c836de8594e34974b95c64ac788
----------------------------
Ensure that wait_timeout doesn't overflow on windows. (Bug #2400) 	d05f9238625a4c8376720f02ff103afafeecd088
----------------------------
"Proposed (version #2) fix for bug #1948: ""system variable query_prealloc_size can be only global"" "	74a1d68d3b39925e0f852ccfafea8f5f8d4b4f20
----------------------------
a fix (#2185: mysql.server script echo bug) thnx Paul. <monty> can you get the above into configure and make Makefile.am patch mysql.server.sh with the right values for mysql.server ? <monty> or do you think we should just put the above in mysql.server.sh directly <ramil> as you want <monty> the last is kind of hard to do with variables, so lets put the above in mysql.server.sh directly 	d75674a5419bdded9e81e0ee4690639f1542a484
----------------------------
"Fix for BUG#2477 ""Slave stop with error after master reboot if use HEAP tables"": when we open the HEAP table for the first time since server restart, in hp_open(), we set a flag to propagate this info to the handler level which then writes a DELETE FROM this_heap_table to the binlog. It is not a perfect solution for the bug, because between the server start and the first open of the table, the slave still had old data in his table so a SELECT on the slave may show wrong content. But if there is a --init-file to populate the HEAP table on master as startup, then this is a safe fix (I'll put a note about init-file in the HEAP section of the manual). "	e71325caf95afbaaacac3581f38b0eafd2116620
----------------------------
"Fix for BUG#2527 ""Multi-Table Delete - Not Replication use replicate-wild-do-table"" (as long as replicate-*-table rules were defined, multi-table DELETE was never replicated by the slave). "	5ce227e78a2bc0530c3cab2cbebdd4672a0c40c1
----------------------------
"Fix for bug#2505: MySQL reports ""out of memory"" when DROP USER if --skip-grant-tables "	fb6338d1a34314ac5041529c8a0029aa0abdc056
----------------------------
patch reverted - USE_RAID is defined in my_config.h 	b68a83a050c60445eb7fce5a34110218c59fa948
----------------------------
Some small portability fixes. Added support for lower_case_table_names=2, which is to be used on case insensitive file systems. This tells MySQL to preserve the used case of filenames and database names to make it esier to move files between cases sensitive can case insensitive file systems (like Windows and Linux) 	c1dd070ba73952d0c18c8ca01a9cbf322fcab26e
----------------------------
log0log.c: Do not assert in log0log.c, line 856 if ib_logfiles are too small for innodb_thread_concurrency. Instead, print instructions how to adjust my.cnf and call exit(1). 	b5d9ecad52c2b38644b6812967d389b281ffdf7a
----------------------------
"- bumped up version number in configure.in to 5.0.1 - tagged ChangeSet 1.1644 as ""mysql-5.0.0"" "	f204b080315843bab93e4ac5848d4b2597f1feff
----------------------------
- marked /etc/logrotate.d/mysql as a config file in the RPM spec file (BUG#2156) 	e9b90a7dcc32513d015480530f6506596bf92794
----------------------------
srv0start.c, univ.i, configure.in: Check at compilation time on Unix that InnoDB ulint is the same size as void*, and also check it at runtime 	734870d0ce43d21457939f93358a5a95e395b97c
----------------------------
Merge: 23b2567 d67bbe7 Merge gbichot@bk-internal.mysql.com:/home/bk/mysql-5.0 into mysql.com:/home/mysql_src/mysql-5.0-new-binlog-format 	0fb8aec1afb4aa62046dbabaa6c6dd210463a6d1
----------------------------
Merge: df3b1a5 29e1bdd Merge gbichot@bk-internal.mysql.com:/home/bk/mysql-5.0 into mysql.com:/home/mysql_src/mysql-5.0-new-binlog-format 	1333f636ae47fe4c88b38e9bfdf582336228112e
----------------------------
Fixed that lower_case_table_names is set to 1 for case insensitive file systems. 	aa3f200c031913313d5373032a03709635bf0227
----------------------------
Merge: ecf54df 66a32e8 Merge gbichot@bk-internal.mysql.com:/home/bk/mysql-5.0 into mysql.com:/home/mysql_src/mysql-5.0-new-binlog-format 	2f3c1efaa73824447b81dc5461b747a8cd3fad2a
----------------------------
WorkLog #1323 (part 2) New Statement: SHOW [STORAGE] ENGINES New System Variable: storage_engine New mysqld Argument: --default-storage-engine= 	2b53eef5f00364464652847065a81a32571cc73f
----------------------------
Extend max_allowed_packet to 2G in mysql and mysqldump (Bug #2105) Don't dump data for MRG_ISAM or MRG_MYISAM tables. (Bug #1846) Ensure that 'lower_case_table_names' is always set on case insensitive file systems. (Bug #1812) One can now configure MySQL as windows service as a normal user. (Bug #1802) Database names is now compared with lower case in ON clause when lower_case_table_names is set. (Bug #1736) IGNORE ... LINES option didn't work when used with fixed length rows. (Bug #1704) Change INSERT DELAYED ... SELECT... to INSERT .... SELECT (Bug #1983) Safety fix for service 'mysql start' (Bug #1815) 	d47deebb58804e2323d3861d0cf4d68f5cfea04f
----------------------------
Fix for bug# 1142 ./configure - error in file causes failure of compile (SSL option needed) 	194da99215cc7d0214415cb4f484f0f4176e4d5f
----------------------------
"Fix for BUG#2045 ""Sending SIGHUP to mysqld crashes it if running with --log-bin"". The constructor of Rotate_log_event used when we are rotating our binlog or relay log, should not assume that there is a nonzero THD available. For example, when we are reacting to SIGHUP, the THD is 0. In fact we don't need to use the THD in this constructor; we can do like for Stop_log_event, and use the minimal Log_event constructor. If we were allowed to put Unix-specific commands in the testsuite, I'd add a test for this (<sigh>). "	dba12258b9e60ece0917b6907c5e07a2a1b62727
----------------------------
Fixed test for 'init_slave' variable 	38a4780fd13e0b2e3df1bcbdedade6575585ee0f
----------------------------
"Task ID	499:Add a new settable string variable(init_connect, init_slave) to mysqld that is executed for all new connections. (Similar to the client command: mysql_options(... MYSQL_INIT_COMMAND ...). "	b46d75f08b47d46190f038abed67f81fb078bf61
----------------------------
WL#1175: more default_week_formats for iso compatibility New formats added for 'week()' function and 'default_week_format' option(4 - 7). Next formats is supported now: *Value* *Meaning* `0'     Week starts on Sunday; First Sunday of the year starts week 1. Week() returns 0-53. `1'     Week starts on Monday; Weeks numbered according to ISO 8601:1988. Week() returns 0-53. `2'     Week starts on Sunday; First Sunday of the year starts week 1. Week() returns 1-53. `3'     Week starts on Monday; Weeks numbered according to ISO 8601:1988. Week() returns 1-53. `4'     Week starts on Sunday; Weeks numbered according to ISO 8601:1988. Week() returns 0-53. `5'     Week starts on Monday;  First Monday of the year starts week 1. Week() returns 0-53. `6'     Week starts on Sunday; Weeks numbered according to ISO 8601:1988. Week() returns 1-53. `7'     Week starts on Monday;  First Monday of the year starts week 1. Week() returns 1-53. 	48317785878fbb31d444629e08deef7212f53906
----------------------------
"- Bumped up version number in configure.in 4.1.1-alpha -> 4.1.2-alpha - tagged ChangeSet 1.1641 as ""mysql-4.1.1"" "	84acc2054f22cf0835a5cc744cf2343c69433d0e
----------------------------
Second part of WL #519: Client option secure-auth deployed on all possible layers: - mysql client command-line and config file option - mysql_options option MYSQL_SECURE_AUTH - mysql_real_connect will automatically take into account that option if mysql->options.my_cnf_file/my_cnf_group is set 	2e8cf31abc7bb1bb00eb9dbf93e3b8b253889fed
----------------------------
SCRUM WL#1284 (warnings about --skip-name-resolve) Messages corrected 	611096a709bf7e5d7f6a507009c41ea7f4ac32cb
----------------------------
os0file.c: Fix the OS error 2 reported by Miguel and Mark in Windows crash recovery: a * had been forgotten from the path in directory scanning ha_innodb.cc: Set default directory in fil0fil.c right if we are running the Embedded Server Library, where the default dir of the process is not necessarily the MySQL datadir 	f8e9f31e933c9fb36fb6be55a5984d7fb23d836f
----------------------------
SCRUM WL#1284 (warnings about --skip-name-resolve) Now MySQL will issue warnings during startup about entries in grant tables with hostnames that require resolve, and after GRANT commands with that kind of hostnames. 	72566c794eab8141b0d63e15b64577ba2725e07a
----------------------------
Official builds are tested with mysql-test-run --sleep=10, and the slave has (in mysql-test-run) a slave-net-timeout=10. So the 'sleep 1' below was converted in 'sleep 10', so slave thought that connection was down, so reconnected, so got an additional (fake) Rotate event, which shifted the positions displayed by SHOW SLAVE STATUS. 	4bd3b096a0db31e64e6a97b03ab44a1ddf91aa50
----------------------------
"fixed bug #1650 ""mysql_config --libmysqd-libs misses libwrap"" "	24413c7d8cf42fca6be3d885a9516585929676d9
----------------------------
small fix for max_user_connections. everything else will be pulled from 4.0 	d1bfa5c598ee3af9288ca496c90ca01c15ebfe24
----------------------------
Safety fix for adding service name to search config groups 	a4fff85de574664f54cf2d1be190d65faa5b220a
----------------------------
"Change back service name to MySQL Don't add service name to read config file segments if it's ""MySQL"" Fixed possible memory leak when CHANGE USER failed. "	bc00893d165a8881160011169a25754f10cdb06d
----------------------------
"Fix for BUG#1686 ""If 2 master threads with same-name temp table, slave makes bad binlog"" and (two birds with one stone) for BUG#1240 ""slave of slave breaks when STOP SLAVE was issud on parent slave and temp tables"". Here is the design change: in a slave running with --log-slave-updates, events are now logged with the thread id they had on the master. So no more id conflicts between master threads, but introduces id conflicts between one master thread and one normal client thread connected to the slave. This is solved by storing the server id in the temp table's name. New test which requires mysql-test-run to be run with --manager, otherwise it will be skipped. Undoing a Monty's change (hum, a chill runs down my spine ;) which was ""Cleanup temporary tables when slave ends"" in ChangeSet 1.1572.1.1. "	59d0872aa05e8b02e78db16b1afbe2837af333cf
----------------------------
followup to max_user_connections fix, keep the count more accurate 	1d617f18887c86183027c802945ef27060b71a0a
----------------------------
row0sel.c: If innodb_force_recovery >= 5, do not try to fetch an old version of a clustered index record: this reduces crashes when dumping tables from a corrupt database 	de6cc5f0189d21f624e5d9be4e9a871da183e28c
----------------------------
fixes for max_user_connections (connections are now counted even if max_user_connections is not set - that is no limit - so that when max_user_connections is set (with SET) old connections are also taken into account mutexes are added where appropriate 	75454930dc81d5e872055747eddb491ec6c47baa
----------------------------
sql_parse.cc: Fix yet another race condition in sql_parse.cc: thd->user_connect object could get deleted too soon, before the call of check_for_max_user_connections 	24db4ecf977b4cc72b207795be5d72a72e667ff8
----------------------------
"- bumped up version number in configure.in to to 4.0.17 now that 4.0.16 has been tagged and released - tagged ChangeSet 1.1576.1.5 as ""mysql-4.0.16"" "	f393024fef2965c08ec99a4f0b5810228f4e88df
----------------------------
"Add new user variables for tuning memory usage: query_alloc_block_size, query_prealloc_size, range_alloc_block_size,transaction_alloc_block_size and transaction_prealloc_size Add more checks for ""out of memory"" detection in range optimization "	c95d142f8f602b717c6c10d13e37b2b3ecf069d4
----------------------------
mysqld.cc: Fix error in --show-slave-auth-info help string. 	54533936b1f0c03ad73a3b47f8c4fa5fb48b4178
----------------------------
fix_max_connections to resize alarm_queue (Bug #1435) 	2667d7f8cc34d7b568ebcfce3e74f25bde6a448e
----------------------------
fix for #1344 handling of init-file option added to embedded library main problem was killing of output (resulting recordsets etc) i added checks for empty output in Protocol:: methods better solution could be special Protocol_nul class to redirect results to nowhere 	9dcce9b0f33619d98b12d9e266bee55518edeabe
----------------------------
typo fixed (bug #1390 - incorrect mysql_config output) 	9e68df23333ecb21ed776fcb983e2f98ca2d1721
----------------------------
SCRUM: WL#604 Privileges in embedded library code added to check privileges in embedded library NO_EMBEDDED_ACCESS_CHECKS macros inserted in code so we can exclude access-checking parts. Actually we now can exclude these parts from standalone server as well. Do we need it? Access checks are disabled in embedded server by default. One should edit libmysqld/Makefile manually to get this working. We definitely need the separate configure for embedded server 	ba8fa76fa20f400d8adfe2aa14231a682df9ba79
----------------------------
Block SIGPIPE also for not threaded client programs. Added --include and --libs_r options to mysql_config. Added mysql_get_client_version() to client library Fixed some minor benchmark issues 	f05a1c83940557721a42c758e26f2adace291d0a
----------------------------
"comp_err.c: There are some problems compiling with pure ""configure"" I need to fix it first. "	b201d49631637a3c55f25591a3ae40e8f77d2f71
----------------------------
configure.in: Fix the problem with errmsg compilation 	287d0b64796735b08b55a7ee3929721fab890d59
----------------------------
"- Bumped up version number from 3.23.58 to 3.23.59 in configure.in - Tagged ChangeSet 1.1413 as ""mysql-3.23.58"" "	6da669ef95f82d8d50bc527ffac9181699155e94
----------------------------
"Quick backport of the following bugfix from MySQL 4.0.14. DO NOT COPY THIS CODE TO 4.0. The bugfix is better in 4.0, but here in 3.23 we don't want to add a new error code so we just use ER_EMPTY_QUERY. Bug was: ""If a query was ignored on the slave (because of @code{replicate-ignore-table} and other similar rules), the slave still checked if the query got the same error code (0, no error) as on the master. So if the master had an error on the query (for example, ``Duplicate entry'' in a multiple-row insert), then the slave stopped and warned that the error codes didn't match. (Bug #797)"" "	40a88045cb4e60028f9e548deeb89b1d412adf3c
----------------------------
Fix for the bug #1200: Can't start MySQL if bind-address set to hostname that starts with a number. 	9de77cc983e9456fb2d2fec6a02b77fe3d7e4d14
----------------------------
"- Added option ""--skip-name-resolve"" to mysql_install_db to be able to use the local machine's IP address instead of the host name when building the initial grant tables if ""skip-name-resolve"" has been specified in my.cnf. This can be helpful on FreeBSD to avoid thread-safety problems with the FreeBSD resolver libraries. (Thanks to Jeremy Zawodny for the patch) "	541189e746bd89d56657438bd7c9d14910857c2b
----------------------------
Fix for Bug #1142 './configure - error in file causes failure of compile (SSL option needed)' 	6d271a529676021f3e1a1d60c3bf88818f678568
----------------------------
comments about mutexes in replication. Don't start the SQL slave thread with SQL_BIG_SELECTS; it's better to inhibate max_join_size instead. 	cc29458056cdf1b4ef4b0e25f034a707d59586f0
----------------------------
The slave threads MUST not care about max_join_size, we start them with OPTION_BIG_SELECTS. 	cc918272edb3e3d2cfb199ccdff54fc3710b63a1
----------------------------
Result updates after Dmitri's and my changes to logging with --log-slave-updates. Since my changes, rpl_log.test, whose result file depends on file_id, became non-repeatable, i.e. file_id on slave in SHOW BINLOG EVENTS changed depending on the order of tests (sometimes 1, sometimes 5). Which is logical: as now the slave does not copy Create_file and Exec_load from the relay log (i.e from the master's binlog) to the slave's binlog, but instead lets mysql_load() do the logging, the file_id is now the one whic was used on the slave. Before it was the one which was used on the master, and by chance the master was always restarted for this test because there's a -master.opt file, so file_id on the master is always 1. But now file_id is from the slave so we need to restart the slave. That's why I add an (empty) -slave.opt file. I could have used 'server_stop/start slave', but this would have required the manager, so most of the time mysql-test-run silently skip the test which makes it useless. And I want this test to be run ! 	ec280a51cac48d8d25a1ad55125faf07c31542f5
----------------------------
"First commit for fixing BUG#1100 ""LOAD DATA INFILE is badly filtered by binlog-*-db rules"". There will probably be a second final one to merge Dmitri's changes to rpl_log.result and mine. 2 new tests: rpl_loaddata_rule_m : test of logging of LOAD DATA INFILE when the master has binlog-*-db rules, rpl_loaddata_rule_s : test of logging of LOAD DATA INFILE when the slave has binlog-*-db rules and --log-slave-updates. "	1dd53ed073715f32f3ef992e59456140ec1ff1e4
----------------------------
Fixed some varnings from valgrind Set min value of max_allowed_packet to 1024 Fixed problem with UNION's without braces and SQL_CALC_FOUND_ROWS, LIMIT #,# and ORDER BY...LIMIT 	359846f052f660af465cffe6480433a400da90de
----------------------------
item_func.h: Fix for a bug with LEAST() in WHERE clause ha_innodb.cc: Fix for a configure bug multi_update.result, multi_update.test: Fix for the update with NULL's in the result set sql_update.cc: Fix for the update with NULL's in the result set Fix for the update with NULL's in the result set Fix for the update with NULL's in the result set 	fb774125e807de66294da40aaabc596d444e1d93
----------------------------
Fix for BUG#1086. Now we don't preserve event's log_pos through log-slave-updates since this causes unexpected values in Exec_master_log_pos in A->B->C replication setup, synchronization problems in master_pos_wait()... Still this brokes some functionality in sql/repl_failsafe.cc (but this file is not used now) 	bb96092202781f33cefe63c7f1290bfad39463e8
----------------------------
Fix mutex handling in SHOW_VARIABLES (key_buffer_size was not properly protected) Changed some non fatal myisamchk error messages to warnings 	d79cbc3b995c22885c24ee0773c6e4e27a5b6ec3
----------------------------
added compile-pentium-maintainer - equivalent of compile-pentium-debug but with --enable-maintainer-mode configure option Maybe it's worth to merge compile-mentium-debug and compile-pentium-maintainer to a single script 	2964e4ab48cfdebc34280a001f9b52236dfa4780
----------------------------
Fix so that SET PASSWORD is not replicated by the slave if running with replicate-*-table rules which exclude 'mysql' tables (e.g. replicate-wild-ignore-table=mysql.%). This was already the behaviour for GRANT/REVOKE, I'm extending it to SET PASSWORD because it seems very logical (the contrary seems illogical). 2 new tests: - one to test if GRANT and SET PASSWORD are replicated - one to test if they are not replicated if replicate-wild-ignore-table=mysql.% The 2nd is also a testcase for BUG#980. 	41865cf3a670ffee10d0cf263c33e12bd7b8c2da
----------------------------
mysqld.cc: innodb_fast_shutdown CAN take an argument though it was not specified so in mysqld.cc 	a5eacc69e6a0571ab9c91dd60f43fce195d72a27
----------------------------
"Fix for BUG#858 ""CHANGE MASTER forgets to update relay-log.info""; just a flush_relay_log_info() at the end of CHANGE MASTER (there was already flush_master_info()). "	aba7647fd814cf3d9171e7f742d5e72266cc54ec
----------------------------
On Feb 4th, 2003, Monty said he would push my patch to print replicate-do-table and other replicate-*-table options in SHOW SLAVE STATUS. Seems like it had not been done, so I push it now: there's 4 new columns to SHOW SLAVE STATUS. 	9a5ac78f4c7eda40d56e1fa32659ceacefb3b8f7
----------------------------
Bug #554: Support for --with-openssl[=DIR] Here is fix for bug 554. Added configure options --with-openssl-includes[=DIR] and --with-openssl-libs[=DIR] 	5603456e4f2467c808b1afc60064acd023732bb3
----------------------------
"- tagged ChangeSet 1.1527.1.3 as ""mysql-4.0.14"" - bumped up version number in configure.in to 4.0.15 "	60c914302d1f9265ba1a0e0ba2f921887b70fa7e
----------------------------
Style fixes, comments for 4.1.1 authorization Now special 1-byte packet is used for request of old password Fixed bug with --skip-grant-tables and acl_getroot 	09e53b016967a84126dc50474a54010712893bf1
----------------------------
SCRUM: Task 499 'init_connect, init_slave options' 	333bddb33ffa00989a98fdfa6157f5abff3e7cd6
----------------------------
srv0start.c, srv0srv.h, os0file.h, os0file.c: Allow also O_DIRECT as innodb_flush_method; it only affects writing to data files 	2340cff77aed26fe4ce129bd06dba2df38c53bd4
----------------------------
"Fix for BUG#797 ""If query ignored on slave (replicate-ignore-table) the slave still checks if the returned error (0) is the same as the one on the master, whereas it shouldn't test this. Plus a new test for BUG#797. "	46b0e778b8ab8e7d303545c8fff58be3db74859c
----------------------------
Preliminary support for options --secure-auth, --old-passwords Support for option --old-protocol was removed. Some test performed. Tests for SSL and replication are pending. More strict following to specification for --old-passwords is in the TODO. 	a232225b69cc34f18f87a761e19fc0e3d2790d97
----------------------------
WL#912 (more user control on relay logs): FLUSH LOGS now rotates relay logs, and a new variable max_relay_log_size. Plus a very small bit of code cleaning. 	9c73d91d540f094765e9cdea27f0011e7afca518
----------------------------
reduced using of slow current_thd/current_lex macro initialization of item_thd moved to constructor (in any case we need thd in constructor) initialization of group_concat_max_len to constructor to avoid incorrect length reporting (BUG#757) removed Item_func_group_concat::fix_length_and_dec() because item have its own fix_fields and will not have inherited items 	45e001f465ca2f9ccc659446b50dc20fb640224e
----------------------------
New Sample config file. The changes for actual loads and memory sizes are to be done after text and format are  improved. 	1bd7127208de1a87de55e4fc8824065d35640349
----------------------------
Added thread variable max_seeks_for_key Change optimizer to prefer key lookups before table scan Change table scans to be done after tables with constrains on scanned table 	34919a03c4d0d17e6bb5f11fab53366ee04ea7f9
----------------------------
- reverted change from AC_CONFIG_HEADERS to AM_CONFIG_HEADER in configure.in again - even though the automake docs consider AM_CONFIG_HEADER obsolete, it currently still breaks for too many people to justify this change at the moment. 	dc704a2c20f3050f38a9f9dd214cb1d2b148e277
----------------------------
Fixed cleanup_load_tmpdir() which deleted nothing. 	9990ce576b666980904ae8202b079bdd8fdd00ba
----------------------------
Warn that --log-slave-updates is used without --log-bin and disabled (WL#998) 	def18de12c49070e7ad52fd515bd0de4d90a0da9
----------------------------
SCRUM Task ID 894: Backport default_week_format variable to 4.0 	289d375f506aab6b46eb605baab8be5283d00c72
----------------------------
- replaced obsolete Macro AM_CONFIG_HEADER with AC_CONFIG_HEADERS - Added missing function name in checking for sem_init in posix4 libs on Solaris 	925f621c644a65f4283cd59c416207a686198172
----------------------------
- Updated Default-Stop run levels in the LSB header section to satisfy Red Hat's chkconfig (Bug #272) (The LSB spec is a bit ambigous about what actually needs to be put into this field) 	7947830b2de3f83f674e8341abcaddcad3b9e500
----------------------------
--with-collation argument for configure. Now one can for example use this: ./configure --with-charset=latin1 --with-collation=latin1_danish_ci 	67c6703463dfd7542db7bc96faa379aaf7e4162d
----------------------------
Added testing of LOAD DATA ... STARTING BY Added read_only variable 	102c477760e26a927a01db3d47a7fd0c7d875eca
----------------------------
Fix for #468 [Ver]: SHOW VARIABLES trims innodb_data_file_path (this bug was already fixed in 4.0, I just copied and pasted two lines). 	0b875e908ff703cb42853c22f255368e6ed673ec
----------------------------
"- ISAM storage engine is now disabled by default. To enable it, configure the sources with ""--with-isam"" "	d915b63db0fc2d501eed5c7742768df7a31a6187
----------------------------
add check of __NT__  definition for shared_memory for tree 4.1 	93325f7b6c1c01ffdd9497123b53a2da19670b0e
----------------------------
"- Tagged ChangeSet 1.1497 as ""mysql-4.0.13"" - Updated version number in configure.in to 4.0.14 now that 4.0.13 has been tagged "	9556cb171aaad69dd7ac2f099fd3914ccd2c9517
----------------------------
configure.in: ./configure --with-charset=big5  didn't work 	080eb641fa222fe31ce8dd55f45a2aa37b45e921
----------------------------
Fixed a bug with having comments after options in config files. Bug ID: 235 	c9d76b51cf004a8dd559c350dd21c1499dd5dc7a
----------------------------
"- On Mac OS X, better call mysql_install_db with ""-IN-RPM"" during the installation to make sure the privilege tables are being installed even if the DNS configuration is broken, which seems to be quite common (reverse lookups to ""hostname"" fail). This should resolve the problem many Mac OS users experience (""Fatal error: Can't open privilege tables: Table 'mysql.host' doesn't exist"") when they try to start MySQL after installing the PKG. "	07238bab28f4fc739186259ce3590944fd153f3f
----------------------------
srv0start.c, trx0sys.c: Let InnoDB to skip writing of pages from the doublewrite buffer if innodb_force_recovery=6; normally, if the page is corrupt AND the corresponding page in the doublewrite buffer is also corrupt, InnoDB calls exit(1) 	9ec42178e9755a021ba5ea6509c60e551f409b85
----------------------------
Added innodb_max_dirty_pages_pct parameter to limit amount of dirty pages in the buffer pool (can be changed online) 	afafe36b3e8c56e62315972ffbd3093a3d99dd27
----------------------------
Use my.cnf file from datadir even if datadir is different from the default one. 	938933afc9f90a5102dba643be1a3c54e6051ba6
----------------------------
Fix for -fbranch-probabilites (bug 268) Fix for LEFT/RIGHT/MID with multi-byte-character sets (bug 314) Fix for new bison 1.875 max_insert_delayed_threads and delayed_insert_timeout now works as documented (bug 211) Don't show port in SHOW PROCESSLIST for system threads Fix problem with ORDER BY being discarded for some DISTINCT queries (bug 275) Fixed bug with NATURAL LEFT JOIN, NATURAL RIGHT JOIN and RIGHT JOIN when using many joined tables (Bug 212) 	bf6cfd2948f4cbab120a76aaf16d7ca0739cf2f4
----------------------------
ha_innodb.cc: When FLUSH LOGS is called, flush InnoDB logs to disk also in the case innodb_flush_log_at_trx_commit=0 	a4281f59ed78dc9c1c0a725f0d9481e44f681b2f
----------------------------
Replication: new code to not modify in-memory log positions until the COMMIT is executed, even if the transaction spans on >=2 relay logs (bug #53). New variable relay_log_purge =0|1 New test to verify bug #53 	b03ec0d7db3dbdc2a4c02bcdfb0522275b5fe492
----------------------------
func_gconcat.result, ctype_many.result: Added the MAX_LENGTH_FOR_SORT_DATA option ctype_collate.result: Added the MAX_LENGTH_FOR_SORT_DATA option 	4b78926bb372aa3f4a5c2a3575129453c9860c41
----------------------------
Many files: Added the MAX_LENGTH_FOR_SORT_DATA option filesort.cc: Added the MAX_LENGTH_FOR_SORT_DATA option 	80615fade284e14119fc189f136d30fc475f8aec
----------------------------
config-win.h: Enable 'LOAD LOCAL INFILE', for parity with unix binaries. 	44c8a1b012b913060b2d29f7f2df7b34cecef322
----------------------------
"- added missing dashes to parameter ""open-files-limit"" in mysqld_safe (bug #264) "	7fbc28c0740460ee5ed7bfbe1d82d438f6971b21
----------------------------
"- worked around bug #235 (my-huge.cnf error) by reformatting the comments in the sample configuration files - reworked the replication options and comments a bit - added option ""skip-networking"" (commented out by default) to the sample configuration files (enhancement request from bug report #234) "	c043c6c2347c2c55604e7693ff827bf456b50bc9
----------------------------
Deprecated the update log (Sprint task #792). Now --log-update just turns on --log-bin and prints a warning. SQL_LOG_UPDATE is handled in two ways (see mysqld.cc for comments). 	654410a3d3d1d5d2bfe4be60ab8f1fbcfa211d19
----------------------------
Sprint task #856 : make table exclusion rules (in replication) apply to GRANT and REVOKE too. For example if replicate-wild-ignore-table=mysql.%, GRANT and REVOKE will not be replicated on the slave. 	4824d6c66c62e0803df5d0dc00c4d8b9c76cdf02
----------------------------
mysqld.cc: Make the default value of innodb_flush_log_at_trx_commit 1, not 0 which compromises the Durability of a transaction 	034d02f55bef7b695906765da153a397274a4bf5
----------------------------
sql_string.cc: NATIONAL CHARACTER() has latin1 charset now. Reasons are (by Monty): I think we should keepy having latin1 (default configure option) as the national character set.  The reason for this is simple that: - This is ok for a large part of the world. - It's faster and takes less space than utf8. 	a55138fd9461af89068a63ac982539fee91c80c9
----------------------------
configure.in: Always compile utf8 	5e57d512eba17d7bcff47fb288007364431f5d30
----------------------------
- tagged ChangeSet 1.1358 as mysql-3.23.56 - bumped up version number to 3.23.57 in configure.in 	81db1e7fa2fcedf1ffc3b0e54d106fb598ad7d4d
----------------------------
Merge: 2c9a168 c38125c merge with 3.23 to get: - Better detection of crashed .MYI file - Ignore writeable config files 	7fdf7a410146d9a5fa0c188b448ce005ed9ca7f2
----------------------------
Handling of log-error added in embedded server 	2be2914a82283259427ed3affb7b9b412a956c39
----------------------------
made variable query_cache_min_res_unit from QUERY_CACHE_MIN_RESULT_DATA_SIZE (SCRUM) 	b2f27a155c5eb1ebf8a74aae5d602ef2308890ac
----------------------------
"- bumped up version number from 4.0.11-gamma -> 4.0.12-gamma in configure.in - tagged ChangeSet 1.1594 as ""mysql-4.0.11"" "	fb43cce1f6fc651ad0ffab7af98f041c01d273b7
----------------------------
- removed +DD64 compile option from the HPUX11 default CFLAGS in configure.in - there are 32bit installations of HPUX11 out there and compiling for these by manually adding +DAportable to CFLAGS did not work. Better add +DD64 manually, if you need it. 	433742e40c2e19df39a2c7fdfe830ff1c428a6ad
----------------------------
add option default-week-format and variable default_week_format (SCRUM) 	45ada60304906ddcb9c4917261898513836be018
----------------------------
mwldnlm, mwenv, mwccnlm, mwasmnlm, nwconfigure, nwbootstrap: new file 	b080118808d45f0213dd5f09410094c5cc164dd9
----------------------------
Updated configure script to handle 1 digit numbers in MySQL version Fixed a few typos from last patch 	9d000c323a4090979238aec7cc93869921471fcb
----------------------------
(please merge into 4.1 and onwards) - re-added missing pre- and post(un)install scripts to server subpackage - added config file /etc/my.cnf to the file list (just for completeness) - make sure to create the datadir with 755 permissions 	c974f42a6f58c0a52bf8b897db111fffe42cf730
----------------------------
config-win.h, os0proc.h, os0proc.c, srv0start.c: Make AWE compilation depend on __WIN2000__ 	0da42750632be37a7f86a7140fe8fd28dbf8f4d8
----------------------------
Fixed handling of lower_case_table_names in SHOW TABLE STATUS, mysql_list_fields() and mysql_table_dump(). This fixes some Errcode 13 errors on Windows when deleting tables. 	d88eb71f34abc92075da6fca5489fef9cbc5abd7
----------------------------
Only write to the error log if --log-error is specified and --console is not specified (On Windows --log-error is enabled by default) 	3d289137408af20fb18a0606ee562ded1bb984d9
----------------------------
Use on Unix hostname.err only when --log-error=path. Asked by Heikki and Peter. 	ce37b7aac434f7f2c17498bec68f2f813cfd46e0
----------------------------
"- added a dummy file ""reservedwords.texi"" to the BK tree and the Makefiles, so it's part of the distribution (manual.texi includes this file) It will be replaced with the correct one from the mysqldoc tree before building the distribution - removed generation and inclusion of MIRRORS file, since the mirror list is no longer part of manual.texi anyway - replaced YFLAGS with AM_YFLAGS in sql/Makefile.am to make automake happy - Redirect standard error when checking for dpkg-architecture in ltconfig to avoid error message showing during configuration "	82aca82da0c382ca0cc34549011fd47bd2502412
----------------------------
ft_stopword_file added to 'SHOW VARIABLES' output 	4b61ba5a8918b05903ac4432e254113523054591
----------------------------
Added timeout for wait_for_master_pos Fixed comparision of log-binary name to handle comparison when file name extension wraps from .999 to .1000 Don't replicate CREATE/DROP DATABASE if wild_xxx_table=database.% is used. 	fa7a94ed14f0bdd39b99abfca872444fdb5fff11
----------------------------
"- bump up version number 3.23.55 -> 3.23.56 in configure.in - tagged ChangeSet 1.1315 as ""mysql-3.23.55"" "	500b90f4dfef1b943a7944322f9c9ad4ac79b078
----------------------------
--ft_stopword_file command-line option 	274df581180e62eddaee716e3d1c39eebbb37ee4
----------------------------
"- tagged ChangeSet 1.1509 as ""mysql-4.0.9"" - bumped up version number in configure.in to 4.0.10-gamma "	a6f6f19b51f9d71e23dd6fb3d838dd9a60530e27
----------------------------
changes for readline/libedit configuration 	69b722d7d9bc0bf5a002ab207f45ece7319d0488
----------------------------
srv0srv.c: Make SHOW INNODB STATUS aware which trx's are waiting because of innodb_thread_concurrency exceeded 	244b378b4781d3985012aeae0ab45dc7ce73102d
----------------------------
Added support for max_allowed_packet in option files read by mysql_option() Extended max_allowed_packet for clients to 1G Fixed bug in sending compressed rows >= 16M Fix bug in skiping too long packets from clients. Added checking of wrong command number sent by client. 	6d5ad61a11f2ad9d5b184bc9e6c7a7477e33006c
----------------------------
Fixing some bugs in client - server protocol and adding a feature that connection does not close in the case when client sends a buffer larger then max_allowed_packet. 	66208fe9aec944c2e467f8b32c35d100c666505c
----------------------------
Changed thd variables max_join_size and select_limit to type ha_rows. This fixed some optimization problems when using -DBIG_TABLES Portabilty fixes for OpenUnix and HPUX Added C and C++ version numbers to mysqlbug 	b5aa9ae0c768c92321e99939f5533bcce8382366
----------------------------
- tagged ChangeSet 1.1477 as MySQL 4.0.6 - bumped up version number in configure.in to 4.0.7-gamma 	3f7afaf876c366dca79f4f21bd289a7ff53b8ea4
----------------------------
Merge: 9c509fcb 00e005c Merge with 3.23 to get patch for lower_case_table_names for MacOSX 	15b870d6c90c3ed34a6b29b78bc4b8c46d847136
----------------------------
- tagged ChangeSet 1.1276.3.1 as MySQL 3.23.54 - bumped up version number in configure.in to 3.23.55 	cb2220f1dcb4ade212f76a7244f8f48ff08d0a51
----------------------------
- delete readline/configure from BK tree (will be autogenerated) - Added missing readline header files to distribution 	410bb63143cb730fb7fbf640f51494b0d7059c68
----------------------------
Fixed --datadir for embedded server 	f1b806cfd192d4fc1494948e956fd7c31fd81c1b
----------------------------
Merge: dfb60ca 4575594 merge with 3.23 to get bugfixes for <=> NULL and --bind-address 	a976101661c7afdeda2a314e990b4002296e45d6
----------------------------
"FreeBSD patch by Jeremy Zawodny. His explanation: The socket on which MySQL listens for new connections on a blocking socket most of the time but is set to non-blocking during the accept() of the new connection.  Due to a bug in the kernel, the new socket returned by accept() is a blocking socket but returns the O_NONBLOCK flag when queried via fcntl(F_GETFL).  That is, the file descriptor and the underlying socket don't agree on the blocking mode. Since MySQL determines via fcntl(F_GETFL) that the socket is non-blocking, it expects the first read() in my_real_read to not block, so it doesn't enable the timeout alarm.  However, the read does block, and thus there's no timeout alarm.  The thread kill (which relies on rescheduling the timeout alarm) also does not work as a consequence. The bug shows itself if you build MySQL with LinuxThreads support (needed for SMP on FreeBSD).  Issuing a KILL command in MySQL won't be ""noticed"" by the ""killed"" thread until it runs another query--that makes KILL pretty useless.  And the wait_timeout doesn't work either. "	aa1c10e7eec034d5d27d9e30417bf7f4de79cbba
----------------------------
"configure.in: - actually follow the hints in the comment above and ""Remember that regexps needs to quote [ and ] since this is run through m4""... "	fd79ed87b50856fa7db8f5fafcc326b063b52239
----------------------------
"configure.in: - fix MYSQL_NO_DASH_VERSION if version number ends on one digit only (""comment"" test failed when MySQL version was changed from 4.0.5 to 4.0.5a) "	373904f7991d806d94f1ac2ec592d77bbcf22906
----------------------------
A fix for --bind-address=hostname 	c1fa8f6485450b8f7b1e7cb6083ce7c7f464fca7
----------------------------
"- Tagged ChangeSet 1.1400.1.3 as ""mysql-4.0.5"" - bumped up version number in configure.in - fixed a typo in test-create.sh "	d3a572b830cc05c42743964d9ec58f480e041a37
----------------------------
fixed select_lex & max_join_size parameters with BIG_TABLES 	62e4aca91b9de0e4b7895482cf5c897ec4bccd6a
----------------------------
ha_innodb.cc: Try to skip over corrupt records in SELECT if innodb_force_recovery > 0; print more page hex dumps in CHECK TABLE 	648b50660b7015a71844a676f143559b121a3ef1
----------------------------
Many files: Try to skip over corrupt records in SELECT if innodb_force_recovery > 0; print more page hex dumps in CHECK TABLE 	60499d54dda362f3921953920147090db38a7b90
----------------------------
Small fix in configure for HPUX11 	38c66734909b8afb261c2ef942f90bd90073463b
----------------------------
"Do-compile: - ""--config-env"" can now be given more than once - don't be smart about version suffixes "	58c008c56e4441d9ef7e00a0ac915c10f246b9f7
----------------------------
- configure.in: replaced AM_PROG_LIBTOOL with AC_PROG_LIBTOOL, since the old macro name is deprecated (according to the libtool 1.4.2 docs). 	e34e82d156e7b541fe3926f4c9e63a75bff93404
----------------------------
- configure.in: replaced AM_PROG_LIBTOOL with AC_PROG_LIBTOOL, since the old macro name is deprecated (according to the libtool 1.4.2 docs). 	4fecef14643f25de7f76b5be6ac8337645e0375f
----------------------------
Error code for ssl connection Fix bug when server hang(with SSL, with modified libmysql) Add options master-ssl-capath and master-ssl-cipher Add some error checking(SSL) 	7bf903ea1044ad3776a6e688d437a21efaa84e18
----------------------------
configure.in: In Linux do not printb thread id's but process no's in SHOW INNODB STATUS 	392bb5ad504add0257df3510140bbf5b0f929eee
----------------------------
Added --skip-safemalloc to mysqltest Added bug fix from 3.23 for AIX 4.3.3 and gcc 3.x Small change in EXCHANGE output Propagate open-files-limit from mysqld_safe -> mysqld Fixed speed bug in GROUP BY Added quotes around database name in CREATE DATABASE db_name (for binary log) 	5343d4c96993e31a3377be07e9c97aee27784461
----------------------------
"- Tagged ChangeSet 1.1224 as ""mysql-3.23.53"" - bumped up version number to 3.23.54 in configure.in - replaced Docs/LICENSE with Docs/MySQLEULA.txt and modified scripts/make_binary_distribution.sh and Build-tools/mysql-copyright* accordingly. "	d8f843a779f5959a405d6378143804f4f5f4743c
----------------------------
"--tmpdir=dir1:dir2... uses (is_windows ? "";"" : "":"") as a delimiter "	68cd8c47fc861638abb9e599a29f9acbeec44b55
----------------------------
--tmpdir=dir1:dir2:... support in myisamchk 	e65536b14725d52443e30ee2229ee875a05e6e50
----------------------------
Remove wrong clear of mysql_port when using --skip-show-databases 	367e2d4396c88a226bd19a987a61c97c019f347a
----------------------------
support for --tmpdir=dir1:dir2:... 	3217f2cc06fee100e890fbcff2d52e8e20aedbf8
----------------------------
"configure.in	Updated for 5.0 post-commit	Updated for 5.0 post-commit	Removed truncate for commits to internal lists (for complete code reviews) "	18d6d83c0afccd4e75895a552e88f063b951d360
----------------------------
fixed typo: s/ft_max_word_len_sort/ft_max_word_len_for_sort/ 	3858bf1f8120ba1d998db4562e0c7bef0a504dbe
----------------------------
- applied fix from 4.0 configure.in required to build shared libraries with static glibc installed 	cf2fec3c69b83882e057718f996690dcbb881d44
----------------------------
- Tagged ChangeSet 1.1321 as mysql-4.0.4 - added some missing changelog entries to the 4.0.5 changelog - applied small fix to configure.in from monty (already applied manually to configure.in of the 4.0.4 release source files - not relevant for normal builds anyway) 	3aa161d240dccbf71fa3ab233bfe88025b8a0859
----------------------------
- Fix checking for $orbit_config_path in acinclude.m4 (gave an error message on STDOUT on AIX and assigned the wrong value) 	3b6f843bb5c09bba6f18f320de01ca4a26c7f8ad
----------------------------
configure.in: static nss linkingg issue 	140397d42470ac4458b22f5cdd4b65e3c00c9af9
----------------------------
- added missing line from the 4.0 configure.in patch 	bff474e2ac67992f003c47d13c5cd4bea32e2dc5
----------------------------
- Bugfix for static glibc linking in configure.in (taken from 4.0) 	e5ee3122a39b014637e68259944ae985d306515b
----------------------------
- merge some of the 4.0 configure.in modifications (mainly because of the static_nss stuff required for linking against the patched glibc) 	aca781a1e2b0b235547f839f1fdbe9d51e190cf2
----------------------------
Increased max possible max_allowed_packet to 1G Small optimization to not do external locking of temporary MyISAM tables. 	ce4b584a8526fe8470cfc2187cd7b30e2b6a8a54
----------------------------
fixed so that --ssl and --skip-ssl works with the MySQL clients. Fixed core dump bug when sending wrong string to AES_DECRYPT() 	7f55d9263749ec0b0c8dacea1fd1616c0262bd5e
----------------------------
row0mysql.c: Allow CREATE TABLE and DROP TABLE even if innodb_force_recovery is used, the user can drop a problematic table 	69f571db0c4eb0c3018379f9f8faefe7beafbfb0
----------------------------
ha_innobase.cc, ha_innobase.h: innodb_flush_log_at_trx_commit can have values 0, 1, 2 starting from 3.23.52 	44a43fce68b4ad0766b606a4293e7ac05e0c3ccc
----------------------------
srv0srv.c: The option (= default) innodb_fast_shutdown did not always make the shutdown quickly, fix that 	d7bf8c2e6ee6fb3dfd2abb0dbb4fa5460697ad40
----------------------------
Fixed searching after ssl directories. Fixed that GRANT ... REQUIRE options are not forgot when doing new GRANT Changed fn_ext to point at first '.' after directory. FLUSH LOGS removed numerical extension for all future update logs. Fixed the mysqld --help reports right values for --datadir and --bind-address --log-binary=a.b.c now properly strips of .b.c Fix that one can DROP UDF functions that was not loaded at startup Made AND optional in REQUIRE Added REQUIRE NONE 	0281a6b16026299bebebb58af1b88c2d741b57f6
----------------------------
reverted min limit for ft_min_word_len back to 1 	7c4e5bd9a8dfa07a35b898658b6ad22996127486
----------------------------
Merge: 921f7c9 dd53821 Merge with 4.0.3 Some simple optimzations, more comments and indentation changes. Add ` around database in 'use database' in binary log. Moved max_error_count and max_warning_count to variables struct. Removed SHOW_WARNS_COUNT and SHOW_ERRORS_COUNT calls. Changed string functions to use character set of first string argument as default return characterset (Each string function can change the above assumption if needed) 	7134ffec210edde21860a2b2c2654be481de49b4
----------------------------
- updated version number in configure.in to 4.0.4-beta 	d427ecb46098880df4bf8b6a3fec58395aa7996c
----------------------------
"manual.texi	max_bin_log_size -> max_binlog_size "	71f6a378eed025570eaace15151e55ed2fc9cba3
----------------------------
os0file.c: Put 'last millisecond' test to make sure page checksum errors do not result from memory corruption in InnoDB os0thread.c, configure.in: Make sure stack size in InnoDB threads in AIX is at least 32 kB 	42d46eb9eef3170622794a36646e9d1c57ecf6d2
----------------------------
Fixed bug in mysqld when using configure --localstatedir 	3ee79d3a5060568977b0179623691d109e10b703
----------------------------
Fixed timing problem with rpl000001 replication test. Fixed configure problems with HPUX and openbsd SHOW SLAVE STATUS returns empty set if slave is not initialized SHOW MASTER STATUS returns empty set if binary logging is not enabled. Fixed shutdown problem on Solaris. 	a5edb200421018ee967045903b2802c2d5c1bd75
----------------------------
- Tagged 3.23.52 release - Added 3.23.53 News section to the manual - Updated version number in configure.in to 3.23.53 	f321098ad24dd485526c8250fff8a5f76d7df509
----------------------------
"server-key.pem	regenerated server-cert.pem	regenerated client-key.pem	regenerated client-cert.pem	regenerated cacert.pem	regenerated sslopt-case.h	changed optarg to argument, decomment --ssl-key "	c32aef4013bcd851d19325b797970b9b7643af06
----------------------------
"sslopt-case.h	changed optarg to argument, decomment ssl-key option "	d52b1cf5f8b0629310f98648188f50bab982ab10
----------------------------
Fix for Intel compiler (ecc) Minor cleanups to other patches. Make --temp-pool default 	a31406e34e238386940c90196eb570a6a4d97616
----------------------------
Lots of code fixes to the replication code (especially the binary logging and index log file handling) Fixed bugs in my last changeset that made MySQL hard to compile. Added mutex around some data that could cause table cache corruptions when using OPTIMIZE TABLE / REPAIR TABLE or automatic repair of MyISAM tables. Added mutex around some data in the slave start/stop code that could cause THD linked list corruptions Extended my_chsize() to allow one to specify a filler character. Extend vio_blocking to return the old state (This made some usage of this function much simpler) Added testing for some functions that they caller have got the required mutexes before calling the function. Use setrlimit() to ensure that we can write core file if one specifies --core-file. Added --slave-compressed-protocol Made 2 the minimum length for ft_min_word_len Added variables foreign_key_checks & unique_checks. Less logging from replication code (if not started with --log-warnings) Changed that SHOW INNODB STATUS requre the SUPER privilege More DBUG statements and a lot of new code comments 	2c4fa340cccbf11dc7b7f944cf7ca30af48edf4f
----------------------------
Fix bug of running the queries with no selected database while running with --lower_case_table_names 	21cb8e76df4020bc5423ac2e3d856942e391962a
----------------------------
fixed bug, that caused suboptimal memory usage during REPAIR when ft_max_word_len was decreased by user 	9621e36238fb0896b4bed391a5a027d9d8404083
----------------------------
my_pthread.h, configure.in: In HP-UX-10.20, but not in HP-UX-11.0, the return value of pthread_mutex_trylock is inverted 	01bed722c7a6e495afb6c0da74db7a18cae84bce
----------------------------
"Changed initialization of RND() to be less predictable. Use MYSQL_CONFIG_NAME instead of ""my"" as the configuration file name. "	274f80626ef9d612c5ad5c570bc163b9a2f65a34
----------------------------
Clarified lower_case_table_names behaviour for 4.0.2 	f582a4637c0137e16cd370e73c951bb1749a3179
----------------------------
"manual.texi	clarify measurement of long_query_time. "	f3dbdca98708d9298a54a214b5b353bc000668d0
----------------------------
Removed wrong implementation of CUBE/ROLLUP Fixed bugfix of INSERT ... SET db_name.table_name.column_name Changed locking to external-locking Fix client hangup for some invalid SQL queries. 	c702a1f8fda0814db36801b91c601329225f8030
----------------------------
os0thread.c, configure.in: Make the typecast trick pthread_t -> os_thread_id_t safer, but a full fix needs usage of appropriate Posix functions 	07711a6ead1fd6f6f18986c56894d3c78aeb7032
----------------------------
manual.texi: Added note about new version numbers. configure.in: Updated version number. Sorry, bitkeeper keeps messing up. 	8c7805825d5c71b082c40c19e96e996e704a65bb
----------------------------
"mysqld.cc	? mysqld.cc	h mysqld.cc	small fix for --bind-address "	6377f501dfa61ae6dda03453d2f285f024f8a0ac
----------------------------
manual.texi: Clarify the meaning of innodb_data_home_dir and innodb_data_file_path in the manual 	f6e0c1a49236099df26f7e763f9eb68595df171e
----------------------------
ha_innobase.cc: Clarify the setting of innodb_data_file_path in my.cnf: it is in the [mysqld] section 	17c29de61266c3c846dc8a738e2d74ca89b9e3f0
----------------------------
Update for running gcc 3.x (mainly on HPUX) Portability fixes for HPUX Rename of CHECK_LOCK to IS_FREE_LOCK Apply lower_case_table_names also to databases Cleanup of describe code Don't allow \ in database names 	f87efa928b807a03c83b75a87f0d773e4bc8eb68
----------------------------
"Removed file include/getopt.h and added missing files to include/Makefile.am to resolve broken dependencies in ""make distcheck"" Added -DHAVE_BROKEN_REALPATH to the Mac OS X (darwin) compile options in configure.in "	eb4ac4a154fc39795891b69739a4a70df5596566
----------------------------
mysqld.cc: Add option innodb_flush_log_at_trx_commit=2 which means we always write the log to file at commit, but only do fsync about once per second 	7a2b5b750aa4d04b78555070aeeb3b295006d038
----------------------------
Added -DHAVE_BROKEN_REALPATH to the Mac OS X (darwin) compile options in configure.in 	6504a3933ed2d1ee8ebfe995bca6eb1c22d693e5
----------------------------
Fixed problem with innodb_log_group_home_dir and SHOW VARIABLES 	4d7030606ee8bfbaeaec6968dc1d1a231ea42ece
----------------------------
Bump up version number to 3.23.52 in configure.in since version 3.23.51 has finally been released 	b96e315bcfb668460199c2a7032758af17409b41
----------------------------
configure.in: changed version number 	b62fafaa1507f057988c1d0fa7a2bda81ca71cec
----------------------------
Fixed bug in wait_for_relay_log_space() Added checking of sem_init() in configure. 	cde8c0edb721c196155429f62d51ae3f7137d383
----------------------------
Fixed a problem with --skip-networking. This fix should be merged into 4.0 and 4.1 	a2ec51cec16205154aa2c7f5ecf6ec3c98a978e8
----------------------------
Added more complete master and slave configuration section 	9e9265fdc5e8e3fe7d89e5a65c6a7d141852219c
----------------------------
added --loose to --des-key-file in *.opt for mysql-test not to fail w/o ssl 	859fb3e7c7d53ab0476cf591e5e18dd107cab9ba
----------------------------
Aesthetic cleanups to acinclude.m4 and configure.in. 	5990c1910ad1ef5b45fa61a8271dcf2a23c1a49d
----------------------------
- Added Docs/Manual_style_guidelines.txt on Paul's request - this document is supposed to become the central repository for documentation guidelines - re-fixed wording in configure.in according to Manual style guidelines (thanks to Paul for the hint) 	0629c24b09207c388eb790cff1f83a958e6f7289
----------------------------
"Fixed a typo and the wording of the message that is being displayed after ""configure"" has run "	1c2d9adbea308e2310bb9a27e853d0e1c421b5a1
----------------------------
Removed some old Makefiles to avoid name conflict on Mac OS X Changed in client library character-set-dir -> character-sets-dir 	e015f631fd88ae724478514f5b323348dd23bd0c
----------------------------
Removed wrong configure line from configure.in 	fadcf27995f945d6960809c27cb98a012ca5bb95
----------------------------
relay_log_space_limit DBUG_ macro cleanup buffer boundary cleanup This changeset, although not fully tested, works for me better than anything I've had so far, including what is in the repository. I will push it unless something crashes while I am writing this :-) 	14603a36202f208a83ca89af1cfc98892eb18539
----------------------------
Move test of gcc 3.0 from BUILD to configure 	beedaf26ecf6fa78b1b74b805e8ad24cbd315733
----------------------------
Fixes for --enable-named-pipe 	93948645e75368ef501cfd85921d6048ffa56e13
----------------------------
ha_innodb.cc: Change the default innodb_data_file_path to create a 16M file and define it as auto-extending 	c017f76e730a8c4ed7f109c84a272d0ae0117ace
----------------------------
Configure.in/Makefile.in charset related things are now earier to maintain Fixes in charset related C++ code 	1ebab2be72b48346002ad58b8066b7a448b675db
----------------------------
Decrease net_buffer_length to not get problems when running against mysqld with same max_allowed_packet 	63e106f00bb284dd0c4ccf1ccb1fef0d587ddc5c
----------------------------
Charsets related things are prepared by configure in new way. This is to simplify maintaining charsets, especially changing CHARSET_INFO structure. 	a518b9f32606baf363c754e9e5579f8546768203
----------------------------
bugfix for max_user_connections 	b8592ab67beae45fad40fd8a563390b79d77bc64
----------------------------
Added --sql-mode=NO_UNSIGNED_SUBTRACTION 	6a1b08cbd4022bf005be8cf44bedb1f8fb7a6f4e
----------------------------
post-merge fixes, including slave-skip-errors backport fixed too quick timeout in mysql-test-run which caused a race with the new server getting started before the old one completely finished shutdown. This should fix the pid warning we've been getting as well as inconsistent results when running tests with the manager 	8e43ad12c36ba018649e6df757362754a6cb9238
----------------------------
mysqld.cc: Changed default of file_io_threads to 4 and lock_wait_timeout to 50 seconds Added a missing break: if not specified, innodb_fast_shutdown got the same value as ..flush_log_at_trx commit 	3fef3c7e5bdc5012fb0f611abf3932f3879bea56
----------------------------
ha_innobase.cc: Add better instructions on how to specify innodb_data_file_path etc. 	818bdb62f5d701ae3d890a6ca3e4dde224b4e7b5
----------------------------
slave-skip-errors added extra/mysql_install.c - will work on it in 4.0, but it does not hurt to have it sit in 3.23 tree for now since it will eventually be backported to 3.23 anyway 	f7acf09d9c70afeaf36172e993b5c468f8190182
----------------------------
--des-key-file functinality added 	178822672f85270c167ccfd78c702142ead533f2
----------------------------
Small changes to mysql_config.sh 	0f71e337b32c3388070f96160234df86eae964f8
----------------------------
"ft_boolean_search.c	bugfix ""+(aaa bbb) +ccc"" ft_dump.c	-l option - report word length distribution (for ft_max_word_len_for_sort) "	9c6effa6a36b5925e872c04852b0869ea981a2db
----------------------------
get correct paths in mysql_config even if the user moves basedir 	2f91f2360aba9ad0911af22de3a807837973d31c
----------------------------
ft_boolean_syntax variable 	59f3a958345bf5df0a60159711a3ec32c9f8084e
----------------------------
ignore ft_min_word_len and stopword check for truncated words in the query 	16e16e7d07af00003b1c0ded663247f22e645266
----------------------------
manager clean-up ( added pid-file and kill in mysql-test-run when things go wrong) fixes for IO_CACHE need to pull Monty's fixes - this is not final, will not be pushed 	cc95bc5765b3a365ddcbbceca1c8c5e18a5e4a2d
----------------------------
'mysqld --help|grep -A1 safe-user-create' output clarification 	4939bb6dd14233fc081875fd5f4cc963d957ffb5
----------------------------
Rewrite of Windows binary/source installation/configuration. 	e1f79e3b6629c6582a9e0bbfea9cc05ae994b3c2
----------------------------
Add --without-isam configure switch. Portability fix for mysqlmanager. 	c0cd0f484a696e169c63c14286dbb760fba4feec
----------------------------
Added usage of --master-retry-count to make mysql-test-run safer. 	f5a53594c81c403e3cd13a13b8d2f82165f8f873
----------------------------
Cleaned up SSL documentation Fixes for embedded server Made key_cache more configurable Fixed that one can change key blocksize in MyISAM A lot of optimizations to make MyISAM slightly faster 	880026ccf667bf6e6adbd6cfa0abcf4268d68e4c
----------------------------
"Makefile.am	Add @pstack_libs@ Makefile.am	SUBDIRS = aout configure.in	Output pstack/aout/Makefile Makefile.am	BitKeeper file /home/tim/my/4/pstack/aout/Makefile.am "	ea0523bd719e59205cb0259a0977ae6c07a7ca00
----------------------------
Fix error messages Configure fixes 	0979515609b62c287d2fe8cadb1cbb6cb53630e4
----------------------------
Actually get the CHARSETS_AVAILABLE output before the help messages in configure. 	361d3a65336cdde0e39b1e05f161692729c8abe6
----------------------------
Update of manual with 4.0 changes Create innodb table space if configuring with InnoDB and not using --skip-innodb Fixes for TRUNCATE TABLE and DROP DATABASE. 	279de0c67c3c07d2dafb94763966842d8160c242
----------------------------
configure.in Add #undef inline to all C++ tests. This is needed to work with some C++ compilers.... 	a06dfbd2254f45eefccfa18e436b32938b1d5717
----------------------------
"ha_innobase.cc	Add better error message if innodb_data_file_path is not set ha_innobase.h	Remove HA_NOT_READ_AFTER_KEY from table han ha_innobase.h	dler flags: it prevented the use of an index in MAX() "	b78f8380d570e677ec602217ed575e7ecac9bb36
----------------------------
Fix to be able to configure without --with-tools 	3edbb869f696f2fe955a5464c9a3e64fe68343a7
----------------------------
"Allow myisam-recover="""" and --sql-mode="""" "	65a711f40f8b64246cd4a18745552bc22e621f23
----------------------------
Portability fixes Added record_rnd_buffer Added --safe-user-create Fix for ALTER TABLE RENAME on windows 	e7575da7bba22e74983374a5a5cca71b182bd23c
----------------------------
changed variable display from string to int (bits) for myisam-recover and sql-mode options. 	0b68a21b5d400654d4e9cfbd4e1d8a97d1fabb92
----------------------------
acinclude.m4: Paste the libtool.m4 from libtool version 1.3.4 into aclinclude.m4; this should make our configure work even when the user has libtool version 1.4 installed.  This should be removed, and everyone should upgrade to libtool 1.4; until then, this is a quick hack to make things work. 	934f3acca48e450d2f6cf609b488b8efd02d98c4
----------------------------
Added new optino --sql-mode to mysqld. 	44722151fdacd66e847a5084b5f2d06d3c3e9848
----------------------------
Added CPU automatic detection. It examines /proc/cpuinfo (if exists) and finds out flags for -mcpu and -march. TODO is --with-cpu configure option to force some other processor type. Problem is not big as any Intel 686+ CPU will use -mcpu=pentiumpro anyway. Exceptions are Athlons and 586 processors. 	24bcdaaff382a154a647dc5c3cf1fc4ee1bbbcd7
----------------------------
Code cleanup in safe_mysqld. Fix --core-file-size so that the argument is parsed correctly. 	103d87ce2a8a117c50543a2663e1dfe06714994b
----------------------------
"configure.in	Fix to compile :( "	dc00c80a961c78154abf1efaa9703ccd93ec0a60
----------------------------
Upgrade TL_WRITE_CONCURRENT_INSERT to TL_WRITE_LOW_PRIORITY if --low-priority-updates is used and the file has holes. 	5a8e734b9abb58c5361a84e894d4266a14f22a04
----------------------------
"configure.in	Fix ""$target_os"" = ""freebsd"" test; not a critical fix. "	6539db2b8bf0bb15e2d0be570fb2596259461208
----------------------------
support for eval_result and let $var = `query` syntax in mysql-test fixes for rpl_log test to make it config-independent 	ea2e9118926c4980e56d2a43b3de059c835aaa87
----------------------------
"page0cur.ic	Fix a bug in insert buffer and multiversioning manual.texi	Changed innodb_unix_file_flush_method to innodb_flush_method in the manual "	624c57e26e575a5e2c579291d3cf6a7e1c22c173
----------------------------
Removed --use-symbolic-links 	e1d12383fa00c86ae4d3aa901f507ab2d8083cb3
----------------------------
Changed innodb_unix_file_flush_method -> innodb_flush_method Cleaned up error messages. 	b79da88808a4e96cacb6e959f3d1410769035db7
----------------------------
do not show user/pass for slave unless running with show-slave-auth-info cleanup of register_slave_on_master() 	ad0b92f941745cfcca538220310e7e4e5ed546ee
----------------------------
"ut0ut.c 	If localtime_r not available in Unix, use localtime configure.in	If localtime_r not available in Unix, use localtime "	96176f16a3e0e2ad3dc79f72e9cb22e0f81e0d01
----------------------------
Fixed portability bug in my_config.sh Added print of --use-symbolic-links in mysqld 	38c035c09852dd4895177aafe6d73ac8c16919d6
----------------------------
"sync0sync.ic	InnoDB now uses XCHG to implement mutex if GCC and x86 configure.in	InnoDB now uses XCHG to implement mutex if GCC and x86 "	b3675fc5f7c6036791791e3b01a0bb9e1b391fe8
----------------------------
"configure.in	openssl support "	78488e88d42c4d2fbf55e40dcbe4ddddbfe98775
----------------------------
"configure.in	openssl support "	f40b454888bc81f7cf83c16261b3382335c1a965
----------------------------
".del-violite.c~984c09cffe14a11b	Delete: libmysql/violite.c acconfig.h	openssl support acinclude.m4	openssl support "	a5d4dddff539357b25ea5061d2e9cb2cc386afde
----------------------------
Fixed bug when using MERGE on files > 4G Fixed bug in SELECT db1.table.* FROM db1.table,db2.table Fixed bug in INSERT DELAYED when doing shutdown and a table was locked Changed that tmp_table_size =4G-1 means unlimited. 	2ba0846a60ac43e1ef477bdfd95c37901b6c7fe7
----------------------------
"os0file.c	Use O_SYNC if possible, second choice fdatasync, and last choice fsync configure.in	Check if fdatasync exists manual.texi	Updated defragmenting doc manual.texi	Corrected fillfactor contract threashold for a page to 1/2 "	0f24c9fcee654608462f38a423fae4407a539f70
----------------------------
Moved things to configure.in 	3876d83ec1a13fc310dc1839176f9d286a384ded
----------------------------
"os0thread.c	Change pthread_yield to sched_yield univ.i  	Change pthread_yield to sched_yield configure.in	Change pthread_yield to sched_yield "	e593714e6b535d51b4d0ad9c572ea1ca30c3a88c
----------------------------
"univ.i  	Prevent inlining of functions on HP-UX because GCC is broken there configure.in	Prevent inlining of functions on HP-UX because GCC is broken there trx0trx.h	Fix trx->error_info in MySQL debug version: Innobase and ha_innobase.cc saw a different size for pthread_mutex_t trx0trx.c	Fix trx->error_info in MySQL debug version: Innobase and ha_innobase.cc saw a different size for pthread_mutex_t ha_innobase.cc	Fix trx->error_info in MySQL debug version: Innobase and ha_innobase.cc saw a different size for pthread_mutex_t "	ae05b07fb718a1742e7f62969a7c49df6c000957
----------------------------
Make configure always generate a dummy bdb/build_unix/db.h file.  Ugh. 	c91715e3e51595522a0ead641a0798b45876294b
----------------------------
Make configure generate a fake bdb/build_unix/db.h file, so that 'make distcheck' will work.  I hope. This is an ugly hack.... 	55217d8cefc1c520d679d30d920c0c896b003af6
----------------------------
Make sure ib_config.h is distributed. Clean up Do-all-build-steps. 	853a2f01604b17b4611778d89bf178ccee3901c3
----------------------------
"configure.in	Add include/Makefile to AC_OUTPUT "	9bbe517965a7d75fd5999934e3566726c6e2812f
----------------------------
Add --just-configure (-c) option to BUILD scripts. 	639a1069d313843288ba6d9cb54b290073a748a7
----------------------------
Added max_user_connections 	70a627a1db87e60e461b5783ca3b1ffffc6be28c
----------------------------
Added max_user_connections Fixes for Innobase Don't reset whole to-buffer in strxnmov 	8e4968d9c727107dfd3621550d5cf2394d40bd57
----------------------------
Portability and bug fixes for Innobase. Add --with-innobase-db to configure. 	1717437382626492eb03575f71e1641af5e7cae6
----------------------------
"Added ""--character-sets-dir"" to myisampack "	a8c7affe21a5667b93ca480ade8046d3778ec1d0
----------------------------
Added ChangeLog entry for --temp-pool to manual. 	b64a5bc71532a6c4c2f9cf764eae75318fea069c
----------------------------
Added --temp-pool option to mysqld.  This will cause temporary files created to use a small set of filenames, to try and avoid problems in the Linux kernel. 	31569172ee204a74bbecbd65d35d7b7c56025297
----------------------------
Added last_errno and last_error to show slave status slave will skip the first SQL_SLAVE_SKIP_COUNTER events on start - this is needed to recover from broken replication when the next log event(s) should just be skipped. Rotate binlogs when max_binlog_size is reached 	e8ffda53975f826c4c048dceae86d2076dbd0781
----------------------------
"configure.in	top_srcdir -> top_builddir "	edb04aa7e463bea687c15ad61ed99866c2d9c630
----------------------------
Handle AVAILABLE_LANGUAGES more portably. Fix a typo in BDB configuration. 	5f4a3f51675240ac05daaba50926740e380e5016
----------------------------
Fixed that --open-files-limit works on Linux 	94bc7ce8d7e87f3910b1c17d55eeb04fbeba14ee
----------------------------
".del-ft0000001.a.result~3d17aff15fa5a9f1	Delete: mysql-test/r/ft0000001.a.result .del-ft0000001.b.result~505c4c00a0bddfc4	Delete: mysql-test/r/ft0000001.b.result .del-ft0000001.c.result~1040289a75243a92	Delete: mysql-test/r/ft0000001.c.result .del-ft0000001.d.result~7c549555fbc7663e	Delete: mysql-test/r/ft0000001.d.result .del-ft0000001.e.result~c58d30fd7fe86f4f	Delete: mysql-test/r/ft0000001.e.result .del-ft0000002.a.result~a89b4db1db19f944	Delete: mysql-test/r/ft0000002.a.result .del-ft0000002.b.result~5de41ce15ae1cedb	Delete: mysql-test/r/ft0000002.b.result .del-ft0000002.c.result~cd66b90918a87531	Delete: mysql-test/r/ft0000002.c.result fulltext_cache.result	Change mode to -rw-rw-r-- fulltext_cache.result	BitKeeper file /usr/home/serg/Abk/mysql/mysql-test/r/fulltext_cache.result config  	[serg:]checkout:get added fulltext_cache.test	BitKeeper file /usr/home/serg/Abk/mysql/mysql-test/t/fulltext_cache.test "	e0f5c742948df333800322feeb51eded12cc1ef2
----------------------------
"configure.in	Change PERL test to use perl instead of perl5, if possible. "	677c6887f6335665995881c1f32cabfe1c4d42f5
----------------------------
"configure.in	--without-raid should not #define USE_RAID "	dbb64831118e4e03b718dcbe47fd6e740371fbfa
----------------------------
acconfig.h fix to make ENCRYPT work BUILD/compile-pentium-debug debug has different warnings BUILD/FINISH.sh save symbol table and dissassembled code with symobls available before strip use $do_make for make decision instead of $make to avoid conflict BUILD/SETUP.sh export AM_MAKEFLAGS fast is now -fno-omit-frame-pointer, the opposite is now called reckless configure.in fixes to make CRYPT work again Docs/Makefile.am hack to avoid rebuilding the manual on make clean -why does Makefile depend on $BUILD_SOURCES, and do we even need BUILD_SOURCES? 	3c06a414d348c10d6477c1ac67caca7c4d211517
----------------------------
Pass arguements to the build script on to configure. 	4656daa6e4003bea77a57517a439450c3bd17df5
----------------------------
configure fix to get Linux to work with new large file system detection 	f9dcc70932c729df0d69c978854106ceef23e607
----------------------------
Configure updates Fixed my_print_defaults --no-defaults 	18f7b7b678952512893a14528a9c6b10da4a994f
----------------------------
fixed up leaks found by --exit-info=256 better error diagnostic in SLAVE START 	3cf810222a9ac4be3c433cec68eb0ed8d4bb102c
----------------------------
mysql-test-run  --core-file changed to --exit-info=256 it's yet another mysqld hidden feature --exit-info=256 is like --core-file but prints info at exit. --exit-info itself implies also one-thread (undocumented) 	6b6ce606788d453b16fc5f136e429f2ab6cb5aa2
----------------------------
Bug fix, max_heap_table_size variable was not used. 	16a833a2a9d6d7d0de865047efbae1744c758b18
----------------------------
added loops and other cool stuff to mysqltest fixed slave to preserve temp tables on slave stop; slave start added abort-slave-event-count option to mysqld to test the above added a test case for temp tables with a contantly aborting slave removed warning in sql_parse.cc fixed thimble.cc to compile 	07b36014fc33b21ded761070f6ecda3d575545b2
----------------------------
Added connect_timeout and fix for transactions per statement 	dc5e32ea40b435c13cb2d9c03e465743aff14b51
----------------------------
mysql-test/mysql-test-run cleanup - remove unneeded daeamon restarts sql/log_event.cc fixed bug - do not confuse confused slaves even further if they try to read less than LOG_EVENT_HEADER_LEN before the end of file sql/mysqlbinlog.cc give error if constructor fails sql/mysqld.cc --disconnect-slave-event-count for replication debugging sql/slave.cc --disconnect-slave-event-count cleanup to remove unneeded sleeps when things go wrong - sleep only when we have to sql/slave.h --disconnect-slave-event-count test cases for ALTER TABLE ORDER BY and replication offset off by 22 confusion mystery bug (both pass) 	46400961f77bc82c77b78afbf2cee8183a0b788f
----------------------------
safe_mysqld.sh - set pid_file and err_log relative to DATADIR as specified in the my.cnf file, instead of the default value - do not pass safe_mysqld-specific options to mysqld - minor style changes (remove extra ; at end of line, make spacing more consistent, etc.) manual.ja.texi - Turn off SCCS flag 	80a4d37e12c10a5aaf8e6b0178cf8bb3783cd004
----------------------------
"configure.in	fixed to properly handle 1 digit branch "	342ad607f21ae1304b86a30f9d6ebca0442008c8
----------------------------
"Index   	Added latin5 (turkish) character set manual.texi	Added latin5 (turkish) character set configure.in	Added latin5 (turkish) character set latin5.conf	BitKeeper file /usr/local/src/my/work/sql/share/charsets/latin5.conf "	c61dda76566da8376642efc10e8fc1f52e6ff91b
----------------------------
sql/log.cc Added magic number to binlog sql/log_event.cc distinquish bogus data from truncated logs sql/log_event.h added magic number added LOG_READ_TRUNC error sql/mysqlbinlog.cc fixed to handle magic number added O_BINARY to my_fopen sql/mysqld.cc added code for replicate-rewrite-db sql/slave.cc replicate-rewrite-db O_BINARY handle magic sql/sql_class.h added i_string_pair class sql/sql_repl.cc added magic better error messages support-files/magic added magic for binlog Added test case for replication of queries with error 	f452ab6f90c1ec01bf344d2a746ea2a8cb4a44d4
----------------------------
configure.in       Add check for pdftex Docs/Makefile.am   Do not compile manual.pdf if pdftex not present 	c11eb85a6f3f54bf489d00a4f1eea8740a17ad4f
----------------------------
bug fixes in server-id, moved replication functionality to sql_repl.* will push this one, since the replication code now works 	62a6a0fdf1ce8ddd24175098e3aedbab8b36730d
----------------------------
This one will not be pushed, I am committing to be able to pull in Monty's changes added server id, mostly working added --skip-slave-start, working added --replicate-rewrite-db - just in the cmd line parses, currently noop 	ea0f48ffb2515a8ca49b003799523b7e831cca2c
----------------------------
"safe_mysqld.sh	remove stray warning message from nohup nice configure.in	the & in 2>&1 gets replaced by sed during AC_SUBST "	d4b54a2139b5d64e612a29924e19ae41ebf43e52
----------------------------
removed misplaced comma in configure.in 	664658866db9862c144a1a0f31a811f396d54916
----------------------------
Made configure's help output nice and pretty. 	f2b360351c2ce5401cbee90d7f7f7ee171897612
----------------------------
configure fix to handle my_config.h 	ac93ec4ae11d59c71547c90a90e85136d03536e8
----------------------------
configure fixes 	25106ec7551d143d4a8b53b78b04da23876497b6
----------------------------
"configure.in	remove some stray warning messages for failed tests safe_mysqld.sh	remove some stray warning messages for failed tests "	0935747126dce759aa32930d1762a9990740dd7c
----------------------------
--core-file ;  To get a core on SIGSEGV when using Linuxthreads 	ce40c2fd83976f7eb6f8ad2ceacc799eb1e0ec28
----------------------------
".del-ac-types.h	Delete: mit-pthreads/include/pthread/ac-types.h .del-config.flags	Delete: mit-pthreads/config.flags "	438e8c7c134e3d67034e969a03a200dc4052ee56
----------------------------
"configure.in	modifications to help libmysql_r work with distcheck Makefile.am	modifications to help libmysql_r work with distcheck "	1d28a6f1fd02de4ee34816a17463e623c5d46dcf
----------------------------
PART I: Keys support for MyMERGE tables myisammrg/             | Makefile.am            | mymrgdef.h             |   support for keys myrg_open.c            |          & myrg_queue.c           |   bugfixes myrg_rfirst.c          | myrg_rkey.c            | myrg_rlast.c           | myrg_rnext.c           | myrg_rprev.c           | myrg_rrnd.c            | include/myisammrg.h    | rkey/rnext/etc prototyped sql/                   | ha_myisammrg.cc        | support for keys ha_myisammrg.h         | myisam/                | mi_rkey.c              | buf==NULL extension, _mi_rkey() mi_rnext.c             | mi_rprev.c             | include/queues.h       | reinit_queue() - same as init_queue, but w/o malloc mysys/queues.c         | PART II: Miscellaneous myisam/common_words    | deleted (looks like I checked it in by mistake) some files (like acconfig.h, Makefile.am, COPYING.LIB, etc) | Change mode to -rw-r--r-- (by `chmod a-x ') 	5886090182881b29143091c9bb4d7e7b406ea5df
----------------------------
Make BerkeleyDB configuration work. 	e2483f5923b9991f944e34b30ebbf2945f608167
