commit d936c3963ab4bd515817aea05f6b36d408d8e226
Author: Paweł Płazieński <nivertius@gmail.com>
Date:   Fri Jun 16 22:50:37 2017 +0200

    Add alternate name for `MethodCanBeStatic` check
    
    Alternative name for `MethodCanBeStatic` is `static-method`, as used in Eclipse compiler:
    http://help.eclipse.org/neon/index.jsp?topic=%2Forg.eclipse.jdt.doc.user%2Ftasks%2Ftask-suppress_warnings.htm

M	core/src/main/java/com/google/errorprone/bugpatterns/MethodCanBeStatic.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MethodCanBeStaticTest.java

commit 979cfc36b0fa8cc9154462471717cd3565d2360c
Author: Carl Mastrangelo <notcarl@google.com>
Date:   Fri Mar 17 14:43:11 2017 -0700

    Reduce serverity of LiteralClassName to SUGGESTION
    
    Fixes #579

M	core/src/main/java/com/google/errorprone/bugpatterns/LiteralClassName.java

commit a40f8e0329b21e3e88c1938d653e1d8478983aeb
Author: glorioso <glorioso@google.com>
Date:   Tue May 23 17:23:05 2017 -0700

    Add 0-arg constructors to ImmutableChecker for backwards compatibility.
    
    RELNOTES: n/a
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=156934240

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableChecker.java

commit f327586106496b1c7c2eea49a86d2f25229509c2
Author: glorioso <glorioso@google.com>
Date:   Tue May 23 16:32:40 2017 -0700

    Add 0-arg constructors to Immutable{Annotation,Enum}Checker for backwards compatibility.
    
    RELNOTES: n/a
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=156928543

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableAnnotationChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableEnumChecker.java

commit ae366e8b8f892c86091e0661fdc84874c73ecbc3
Author: glorioso <glorioso@google.com>
Date:   Tue May 23 16:09:38 2017 -0700

    Lazily-load the Path object as opposed to eagerly constructing one, to avoid issues when DescriptionBasedDiff is used in other infrastructure where the SourceFile is not on a local filesystem.
    
    RELNOTES: n/a
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=156925788

M	check_api/src/main/java/com/google/errorprone/apply/DescriptionBasedDiff.java

commit a6320cf7752c7ef9e7dc1f773d93a4dd4e33323e
Author: epmjohnston <epmjohnston@google.com>
Date:   Tue May 23 14:05:18 2017 -0700

    Make well-known immutable and unsafe classes for Immutable checkers customizable with new-style command line flags. Fixes #512.
    
    e.g.,
    - "-XepOpt:Immutable:KnownImmutable=some.immutable.Clazz,other.safe.Object"
    - "-XepOpt:Immutable:KnownUnsafe=some.mutable.Clazz,other.unsafe.Object"
    
    RELNOTES: Make well-known immutable and unsafe classes for Immutable checkers customizable with new-style command line flags.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=156907848

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableAnalysis.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableAnnotationChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableEnumChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/WellKnownMutability.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableCheckerTest.java

commit 0d21341c8712627138bee4ddb9f4f506825bbb85
Author: epmjohnston <epmjohnston@google.com>
Date:   Tue May 23 13:38:57 2017 -0700

    Implement new Error Prone command-line flags. Fixes #524.
    
    RELNOTES: Add support for new-style command-line flags.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=156904251

M	check_api/pom.xml
A	check_api/src/main/java/com/google/errorprone/ErrorProneFlags.java
M	check_api/src/main/java/com/google/errorprone/ErrorProneOptions.java
M	check_api/src/main/java/com/google/errorprone/scanner/InstanceReturningScannerSupplierImpl.java
M	check_api/src/main/java/com/google/errorprone/scanner/ScannerSupplier.java
M	check_api/src/main/java/com/google/errorprone/scanner/ScannerSupplierImpl.java
A	check_api/src/test/java/com/google/errorprone/ErrorProneFlagsTest.java
M	check_api/src/test/java/com/google/errorprone/ErrorProneOptionsTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
M	core/src/test/java/com/google/errorprone/scanner/ScannerSupplierTest.java

commit 0b6cf6c1ba20e264931eb58b13c8c27b952bc48c
Author: andrewrice <andrewrice@google.com>
Date:   Tue May 23 12:18:10 2017 -0700

    Allow AssertEqualsOrderChecker to be suppressed by using
    named-parameter-comments and to emit such as a second fix.
    
    RELNOTES: Allow AssertEqualsOrderChecker to be suppressed by using
    named-parameter-comments and to emit such as a second fix.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=156894328

M	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/AssertEqualsArgumentOrderChecker.java
M	core/src/test/java/com/google/errorprone/bugpatterns/argumentselectiondefects/AssertEqualsArgumentOrderCheckerTest.java

commit c6f24bc387989158d99af28e7ae86755e56c5f38
Author: andrewrice <andrewrice@google.com>
Date:   Tue May 23 10:39:08 2017 -0700

    Add NamedParametersChecker
    
    This checks to see if the names given in comments match the parameter names
    they correspond to. Calls to methods annotated with @RequiresNamedParameters
    must have comments on all arguments
    
    RELNOTES: Add NamedParametersChecker
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=156880205

A	annotations/src/main/java/com/google/errorprone/annotations/RequiresNamedParameters.java
A	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/NamedParameterChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/NamedParameterComment.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/argumentselectiondefects/NamedParameterCheckerTest.java

commit e6fdbe8a9c0f300b92e076bd6a7dfe98f11825ba
Author: eaftan <eaftan@google.com>
Date:   Fri May 19 15:39:40 2017 -0700

    Add missing @Test to FunctionalInterfaceClash test, then @Ignore it because
    it fails.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=156605837

M	core/src/test/java/com/google/errorprone/bugpatterns/FunctionalInterfaceClashTest.java

commit f434fe757beb7697534a466d187c4bb97afbd1fc
Author: epmjohnston <epmjohnston@google.com>
Date:   Fri May 19 13:51:44 2017 -0700

    Remove checks for expanded JUnit4TestNotRun heuristic flag now that it is on by default.
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=156592689

M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TestNotRun.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4TestNotRunTest.java

commit 7271798386f9713e09d53ea19466b89cd318828b
Author: epmjohnston <epmjohnston@google.com>
Date:   Fri May 19 13:18:42 2017 -0700

    Only flag violations of LiteralClassName for string literals, not other constant String expressions.
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=156588937

M	core/src/main/java/com/google/errorprone/bugpatterns/LiteralClassName.java
M	core/src/test/java/com/google/errorprone/bugpatterns/LiteralClassNameTest.java

commit 0b757b53b8ca2b52948f0040f1b2b2e0b520bcd6
Author: cushon <cushon@google.com>
Date:   Thu May 18 16:07:44 2017 -0700

    Rename static imports of fields
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=156492196

M	core/src/main/java/com/google/errorprone/bugpatterns/StaticImports.java

commit 8a87d5714da2668a0044983ae3a86912ec160582
Author: cushon <cushon@google.com>
Date:   Thu May 18 10:55:44 2017 -0700

    Do less path string manipulation
    
    to avoid windows-specific issues with patch application.
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=156451545

M	check_api/src/main/java/com/google/errorprone/RefactoringCollection.java
M	check_api/src/main/java/com/google/errorprone/apply/DescriptionBasedDiff.java
M	check_api/src/main/java/com/google/errorprone/apply/Diff.java
M	check_api/src/main/java/com/google/errorprone/apply/DiffApplier.java
M	check_api/src/main/java/com/google/errorprone/apply/FileSource.java
M	check_api/src/main/java/com/google/errorprone/apply/FsFileDestination.java
M	check_api/src/main/java/com/google/errorprone/apply/FsFileSource.java
M	check_api/src/main/java/com/google/errorprone/apply/SourceFile.java
M	check_api/src/main/java/com/google/errorprone/fixes/SuggestedFixes.java
M	check_api/src/test/java/com/google/errorprone/apply/SourceFileTest.java
M	core/src/test/java/com/google/errorprone/refaster/CompilerBasedTest.java
M	core/src/test/java/com/google/errorprone/refaster/DescriptionBasedDiffTest.java
M	core/src/test/java/com/google/errorprone/refaster/TemplateIntegrationTest.java

commit 487d0ef78fc235ee6b2f7c6c24811b2cfc90a6aa
Author: cushon <cushon@google.com>
Date:   Thu May 18 09:05:00 2017 -0700

    New check to detect tranposing the arguments to nCopies
    
    This is similar to StringBuilderInitWithChar and IndexOfChar.
    Calling nCopies('a', 10) returns a list with 97 copies of 10,
    not a list with 10 copies of 'a'.
    
    RELNOTES: New check to detect tranposing the arguments to nCopies
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=156437827

A	core/src/main/java/com/google/errorprone/bugpatterns/NCopiesOfChar.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/NCopiesOfCharTest.java
A	docs/bugpattern/NCopiesOfChar.md

commit 80b2222cd3e541d4265d91637aa8a9d2395edd0d
Author: andrewrice <andrewrice@google.com>
Date:   Wed May 17 12:31:54 2017 -0700

    Update summary of ArgumentSelectionDefectChecker to make it clearer that adding
    comments to names is a viable fix
    
    RELNOTES: Update summary of ArgumentSelectionDefectChecker
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=156339195

M	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/ArgumentSelectionDefectChecker.java

commit 1d9da4cb1153b1bde9ccc550cf5d497b453a83fc
Author: cushon <cushon@google.com>
Date:   Tue May 16 23:13:39 2017 -0700

    Add missing newlines after fix application errors
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=156274784

M	check_api/src/main/java/com/google/errorprone/BaseErrorProneJavaCompiler.java

commit daa72b749ed915cdb6d81005941804dd958521ae
Author: ronshapiro <ronshapiro@google.com>
Date:   Tue May 16 20:58:44 2017 -0700

    Permit classes that have @Inject on one constructor and @AutoFactory on other constructors.
    
    These cases are more explicit about which methods should get called under each context.
    
    RELNOTES:n/a
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=156268076

M	core/src/main/java/com/google/errorprone/bugpatterns/inject/AutoFactoryAtInject.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/AutoFactoryAtInjectNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/AutoFactoryAtInjectPositiveCases.java

commit 0d4994f3683df4398b7078b97dac35ece5cb9692
Author: cushon <cushon@google.com>
Date:   Tue May 16 14:05:44 2017 -0700

    Propagate containerOf specs from annotated super-types
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=156227484

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableAnalysis.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableCheckerTest.java

commit f0ea59675e63c3b798b955e17f29980e3fc07df8
Author: cushon <cushon@google.com>
Date:   Tue May 16 11:41:53 2017 -0700

    Allow EqualsHashCode to be suppressed on equals methods
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=156209002

M	core/src/main/java/com/google/errorprone/bugpatterns/EqualsHashCode.java
M	core/src/test/java/com/google/errorprone/bugpatterns/EqualsHashCodeTest.java

commit f7acd07d346c7f1bed4770f74d850a4ff2f0004c
Author: cushon <cushon@google.com>
Date:   Mon May 15 17:05:21 2017 -0700

    Fix inheritance of @Immutable annotations
    
    @Immutable should be inherited from super classes.
    
    Fixes #615
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=156124379

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableAnalysis.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableCheckerTest.java

commit 071f858026ffea7a4543c470876e71fb29da4f76
Author: andrewrice <andrewrice@google.com>
Date:   Mon May 15 11:19:28 2017 -0700

    Turn on AutoValueConstructorOrderChecker as an error
    
    RELNOTES: Make accidental reordering of AutoValue constructors an error
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=156078664

M	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/AutoValueConstructorOrderChecker.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit a7ed95574ea991fa100d5892432b1e71ca0465a2
Author: cushon <cushon@google.com>
Date:   Fri May 12 07:22:21 2017 -0700

    Disallow using getAnnotation on annotations without runtime retention
    
    RELNOTES: New check: [NonRuntimeAnnotation] Disallow using getAnnotation on annotations without runtime retention
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=155864416

M	core/src/main/java/com/google/errorprone/bugpatterns/NonRuntimeAnnotation.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/NonRuntimeAnnotationPositiveCases.java

commit a1e3eecf4f0fedf18ea814518cdf8bd3cc6303ba
Author: andrewrice <andrewrice@google.com>
Date:   Thu May 11 16:08:07 2017 -0700

    Enable AssertEqualsArgumentOrderChecker as a warning
    
    RELNOTES: New warning for incorrect calls to JUnit assertEquals.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=155809893

M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit 432c0075cc7b693d932a680286011acfebde34d4
Author: cushon <cushon@google.com>
Date:   Thu May 11 13:54:14 2017 -0700

    google-java-format all of the things
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=155792463

M	annotation/src/main/java/com/google/errorprone/BugPattern.java
M	annotation/src/main/java/com/google/errorprone/BugPatternValidator.java
M	annotation/src/test/java/com/google/errorprone/BugPatternValidatorTest.java
M	annotations/src/main/java/com/google/errorprone/annotations/CanIgnoreReturnValue.java
M	annotations/src/main/java/com/google/errorprone/annotations/CompileTimeConstant.java
M	annotations/src/main/java/com/google/errorprone/annotations/ForOverride.java
M	annotations/src/main/java/com/google/errorprone/annotations/Immutable.java
M	annotations/src/main/java/com/google/errorprone/annotations/IncompatibleModifiers.java
M	annotations/src/main/java/com/google/errorprone/annotations/NoAllocation.java
M	annotations/src/main/java/com/google/errorprone/annotations/RequiredModifiers.java
M	annotations/src/main/java/com/google/errorprone/annotations/RestrictedApi.java
M	annotations/src/main/java/com/google/errorprone/annotations/SuppressPackageLocation.java
M	annotations/src/main/java/com/google/errorprone/annotations/Var.java
M	annotations/src/main/java/com/google/errorprone/annotations/concurrent/LazyInit.java
M	annotations/src/main/java/com/google/errorprone/annotations/concurrent/LockMethod.java
M	annotations/src/main/java/com/google/errorprone/annotations/concurrent/UnlockMethod.java
M	ant/src/main/java/com/google/errorprone/ErrorProneAntCompilerAdapter.java
M	ant/src/main/java/com/google/errorprone/ErrorProneExternalCompilerAdapter.java
M	check_api/src/main/java/com/google/errorprone/BugCheckerInfo.java
M	check_api/src/main/java/com/google/errorprone/CodeTransformer.java
M	check_api/src/main/java/com/google/errorprone/CompositeCodeTransformer.java
M	check_api/src/main/java/com/google/errorprone/DescriptionListener.java
M	check_api/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
M	check_api/src/main/java/com/google/errorprone/ErrorProneError.java
M	check_api/src/main/java/com/google/errorprone/ErrorProneOptions.java
M	check_api/src/main/java/com/google/errorprone/ErrorProneVersion.java
M	check_api/src/main/java/com/google/errorprone/InvalidCommandLineOptionException.java
M	check_api/src/main/java/com/google/errorprone/JavacErrorDescriptionListener.java
M	check_api/src/main/java/com/google/errorprone/SubContext.java
M	check_api/src/main/java/com/google/errorprone/SuppressionHelper.java
M	check_api/src/main/java/com/google/errorprone/VisitorState.java
M	check_api/src/main/java/com/google/errorprone/apply/DescriptionBasedDiff.java
M	check_api/src/main/java/com/google/errorprone/apply/Diff.java
M	check_api/src/main/java/com/google/errorprone/apply/DiffApplier.java
M	check_api/src/main/java/com/google/errorprone/apply/DiffNotApplicableException.java
M	check_api/src/main/java/com/google/errorprone/apply/DiffSupplier.java
M	check_api/src/main/java/com/google/errorprone/apply/DiscardingFileDestination.java
M	check_api/src/main/java/com/google/errorprone/apply/FileDestination.java
M	check_api/src/main/java/com/google/errorprone/apply/FileSource.java
M	check_api/src/main/java/com/google/errorprone/apply/SourceFile.java
M	check_api/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
M	check_api/src/main/java/com/google/errorprone/dataflow/ConstantPropagationAnalysis.java
M	check_api/src/main/java/com/google/errorprone/dataflow/DataFlow.java
M	check_api/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/AbstractNullnessPropagationTransfer.java
M	check_api/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/MethodInfo.java
M	check_api/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/Nullness.java
M	check_api/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessAnalysis.java
M	check_api/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	check_api/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/TrustingNullnessAnalysis.java
M	check_api/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/TrustingNullnessPropagation.java
M	check_api/src/main/java/com/google/errorprone/fixes/AdjustedPosition.java
M	check_api/src/main/java/com/google/errorprone/fixes/AppliedFix.java
M	check_api/src/main/java/com/google/errorprone/fixes/Fix.java
M	check_api/src/main/java/com/google/errorprone/fixes/IndexedPosition.java
M	check_api/src/main/java/com/google/errorprone/fixes/Replacement.java
M	check_api/src/main/java/com/google/errorprone/fixes/Replacements.java
M	check_api/src/main/java/com/google/errorprone/fixes/SuggestedFix.java
M	check_api/src/main/java/com/google/errorprone/fixes/SuggestedFixes.java
M	check_api/src/main/java/com/google/errorprone/fixes/package-info.java
M	check_api/src/main/java/com/google/errorprone/matchers/AbstractTypeMatcher.java
M	check_api/src/main/java/com/google/errorprone/matchers/AnnotationDoesNotHaveArgument.java
M	check_api/src/main/java/com/google/errorprone/matchers/Asserts.java
M	check_api/src/main/java/com/google/errorprone/matchers/ChildMultiMatcher.java
M	check_api/src/main/java/com/google/errorprone/matchers/CompoundAssignment.java
M	check_api/src/main/java/com/google/errorprone/matchers/Contains.java
M	check_api/src/main/java/com/google/errorprone/matchers/DescendantOf.java
M	check_api/src/main/java/com/google/errorprone/matchers/Description.java
M	check_api/src/main/java/com/google/errorprone/matchers/Enclosing.java
M	check_api/src/main/java/com/google/errorprone/matchers/HasArguments.java
M	check_api/src/main/java/com/google/errorprone/matchers/HasIdentifier.java
M	check_api/src/main/java/com/google/errorprone/matchers/InjectMatchers.java
M	check_api/src/main/java/com/google/errorprone/matchers/InstanceMethod.java
M	check_api/src/main/java/com/google/errorprone/matchers/JUnitMatchers.java
M	check_api/src/main/java/com/google/errorprone/matchers/Matchers.java
M	check_api/src/main/java/com/google/errorprone/matchers/MethodHasParameters.java
M	check_api/src/main/java/com/google/errorprone/matchers/MethodInvocation.java
M	check_api/src/main/java/com/google/errorprone/matchers/MethodInvocationArgument.java
M	check_api/src/main/java/com/google/errorprone/matchers/MethodInvocationMethodSelect.java
M	check_api/src/main/java/com/google/errorprone/matchers/MethodVisibility.java
M	check_api/src/main/java/com/google/errorprone/matchers/NextStatement.java
M	check_api/src/main/java/com/google/errorprone/matchers/NullnessMatcher.java
M	check_api/src/main/java/com/google/errorprone/matchers/ParentNode.java
M	check_api/src/main/java/com/google/errorprone/matchers/Suppressible.java
M	check_api/src/main/java/com/google/errorprone/matchers/Throws.java
M	check_api/src/main/java/com/google/errorprone/matchers/WaitMatchers.java
M	check_api/src/main/java/com/google/errorprone/matchers/method/AnyMethodMatcherImpl.java
M	check_api/src/main/java/com/google/errorprone/matchers/method/ConstructorClassMatcherImpl.java
M	check_api/src/main/java/com/google/errorprone/matchers/method/InstanceMethodMatcherImpl.java
M	check_api/src/main/java/com/google/errorprone/matchers/method/MatchState.java
M	check_api/src/main/java/com/google/errorprone/matchers/method/MethodClassMatcherImpl.java
M	check_api/src/main/java/com/google/errorprone/matchers/method/MethodMatchers.java
M	check_api/src/main/java/com/google/errorprone/matchers/method/MethodNameMatcherImpl.java
M	check_api/src/main/java/com/google/errorprone/matchers/method/MethodSignatureMatcherImpl.java
M	check_api/src/main/java/com/google/errorprone/matchers/method/ParameterMatcherImpl.java
M	check_api/src/main/java/com/google/errorprone/matchers/method/StaticMethodMatcherImpl.java
M	check_api/src/main/java/com/google/errorprone/matchers/package-info.java
M	check_api/src/main/java/com/google/errorprone/names/LevenshteinEditDistance.java
M	check_api/src/main/java/com/google/errorprone/predicates/TypePredicates.java
M	check_api/src/main/java/com/google/errorprone/scanner/ErrorProneScanner.java
M	check_api/src/main/java/com/google/errorprone/scanner/ErrorProneScannerTransformer.java
M	check_api/src/main/java/com/google/errorprone/scanner/InstanceReturningScannerSupplierImpl.java
M	check_api/src/main/java/com/google/errorprone/scanner/Scanner.java
M	check_api/src/main/java/com/google/errorprone/scanner/ScannerSupplier.java
M	check_api/src/main/java/com/google/errorprone/scanner/ScannerSupplierImpl.java
M	check_api/src/main/java/com/google/errorprone/suppliers/Supplier.java
M	check_api/src/main/java/com/google/errorprone/suppliers/Suppliers.java
M	check_api/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	check_api/src/main/java/com/google/errorprone/util/ErrorProneTokens.java
M	check_api/src/main/java/com/google/errorprone/util/OperatorPrecedence.java
M	check_api/src/main/java/com/google/errorprone/util/package-info.java
M	check_api/src/test/java/com/google/errorprone/ErrorProneOptionsTest.java
M	check_api/src/test/java/com/google/errorprone/apply/ImportStatementsTest.java
M	check_api/src/test/java/com/google/errorprone/apply/SourceFileTest.java
M	check_api/src/test/java/com/google/errorprone/dataflow/LocalStoreTest.java
M	check_api/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NonNullAssumptionsTest.java
M	check_api/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessTest.java
M	check_api/src/test/java/com/google/errorprone/fixes/AppliedFixTest.java
M	check_api/src/test/java/com/google/errorprone/matchers/DescriptionTest.java
M	check_api/src/test/java/com/google/errorprone/matchers/StringLiteralTest.java
M	check_api/src/test/java/com/google/errorprone/names/NamingConventionsTest.java
M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractJUnit4InitMethodNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractReferenceEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractSuppressWarningsMatcher.java
M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractToString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayHashCode.java
M	core/src/main/java/com/google/errorprone/bugpatterns/AssertFalse.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BadAnnotationImplementation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BadComparable.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BadShiftAmount.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BigDecimalLiteralDouble.java
M	core/src/main/java/com/google/errorprone/bugpatterns/CannotMockFinalClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ChainingConstructorIgnoresParameter.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ClassName.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ClassNewInstance.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ComparisonContractViolated.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ComparisonOutOfRange.java
M	core/src/main/java/com/google/errorprone/bugpatterns/CompileTimeConstantChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/DeadException.java
M	core/src/main/java/com/google/errorprone/bugpatterns/DepAnn.java
M	core/src/main/java/com/google/errorprone/bugpatterns/DivZero.java
M	core/src/main/java/com/google/errorprone/bugpatterns/DoNotCallChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ElementsCountedInLoop.java
M	core/src/main/java/com/google/errorprone/bugpatterns/EmptyIfStatement.java
M	core/src/main/java/com/google/errorprone/bugpatterns/EqualsHashCode.java
M	core/src/main/java/com/google/errorprone/bugpatterns/EqualsNaN.java
M	core/src/main/java/com/google/errorprone/bugpatterns/Finally.java
M	core/src/main/java/com/google/errorprone/bugpatterns/FuturesGetCheckedIllegalExceptionType.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GetClassOnClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/HashtableContains.java
M	core/src/main/java/com/google/errorprone/bugpatterns/IncompatibleModifiersChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidPatternSyntax.java
M	core/src/main/java/com/google/errorprone/bugpatterns/IsInstanceOfClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/IterableAndIterator.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JMockTestWithoutRunWithOrRuleAnnotation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit3FloatingPointComparisonWithoutDelta.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit3TestNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TestNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffix.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MissingFail.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MisusedWeekYear.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MixedArrayDimensions.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MockitoCast.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MockitoUsage.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ModifyingCollectionWithItself.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NoAllocationChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NonAtomicVolatileUpdate.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NonCanonicalStaticMemberImport.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NonOverridingEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NonRuntimeAnnotation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/Overrides.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNull.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitive.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsInvalidPlaceholder.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PrimitiveArrayPassedToVarargsMethod.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ProtoFieldNullComparison.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ProtoFieldPreconditionsCheckNotNull.java
M	core/src/main/java/com/google/errorprone/bugpatterns/RestrictedApiChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfAssignment.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfComparison.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SizeGreaterThanOrEqualsZero.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StaticImports.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StringBuilderInitWithChar.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SuppressWarningsDeprecated.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ThrowIfUncheckedKnownChecked.java
M	core/src/main/java/com/google/errorprone/bugpatterns/TruthSelfEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/TypeParameterShadowing.java
M	core/src/main/java/com/google/errorprone/bugpatterns/UnnecessaryTypeArgument.java
M	core/src/main/java/com/google/errorprone/bugpatterns/UnsynchronizedOverridesSynchronized.java
M	core/src/main/java/com/google/errorprone/bugpatterns/UnusedAnonymousClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/WrongParameterPackage.java
M	core/src/main/java/com/google/errorprone/bugpatterns/android/MislabeledAndroidString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/ArgumentSelectionDefectChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/Parameter.java
M	core/src/main/java/com/google/errorprone/bugpatterns/collectionincompatibletype/AbstractCollectionIncompatibleTypeMatcher.java
M	core/src/main/java/com/google/errorprone/bugpatterns/collectionincompatibletype/CollectionIncompatibleType.java
M	core/src/main/java/com/google/errorprone/bugpatterns/collectionincompatibletype/MethodArgMatcher.java
M	core/src/main/java/com/google/errorprone/bugpatterns/collectionincompatibletype/TypeArgOfMethodArgMatcher.java
M	core/src/main/java/com/google/errorprone/bugpatterns/formatstring/FormatStringValidation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/formatstring/StrictFormatStringValidation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/MoreThanOneInjectableConstructor.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/MoreThanOneScopeAnnotationOnClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/QualifierOrScopeOnInjectMethod.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/ScopeAnnotationOnInterfaceOrAbstractClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/dagger/ProvidesNull.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/dagger/UseBinds.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/dagger/Util.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/dagger/package-info.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/AssistedParameters.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/InjectOnFinalField.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/OverridesJavaxInjectableMethod.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/package-info.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/package-info.java
M	core/src/main/java/com/google/errorprone/bugpatterns/nullness/FieldMissingNullable.java
M	core/src/main/java/com/google/errorprone/bugpatterns/package-info.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/AbstractLockMethodChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/DoubleCheckedLocking.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinder.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByExpression.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedBySymbolResolver.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByUtils.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzer.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockSet.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/IllegalGuardedBy.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableAnnotationInfo.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/LockMethodChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/SynchronizeOnNonFinalField.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/UnlockMethodChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/WellKnownMutability.java
M	core/src/main/java/com/google/errorprone/internal/NonDelegatingClassLoader.java
M	core/src/main/java/com/google/errorprone/refaster/Bindings.java
M	core/src/main/java/com/google/errorprone/refaster/BlockTemplate.java
M	core/src/main/java/com/google/errorprone/refaster/BlockTemplateMatch.java
M	core/src/main/java/com/google/errorprone/refaster/Choice.java
M	core/src/main/java/com/google/errorprone/refaster/ControlFlowVisitor.java
M	core/src/main/java/com/google/errorprone/refaster/CouldNotResolveImportException.java
M	core/src/main/java/com/google/errorprone/refaster/ExpressionTemplate.java
M	core/src/main/java/com/google/errorprone/refaster/ExpressionTemplateMatch.java
M	core/src/main/java/com/google/errorprone/refaster/ImportPolicy.java
M	core/src/main/java/com/google/errorprone/refaster/Inliner.java
M	core/src/main/java/com/google/errorprone/refaster/LocalVarBinding.java
M	core/src/main/java/com/google/errorprone/refaster/PlaceholderMethod.java
M	core/src/main/java/com/google/errorprone/refaster/PlaceholderUnificationVisitor.java
M	core/src/main/java/com/google/errorprone/refaster/PlaceholderVerificationVisitor.java
M	core/src/main/java/com/google/errorprone/refaster/Refaster.java
M	core/src/main/java/com/google/errorprone/refaster/RefasterRule.java
M	core/src/main/java/com/google/errorprone/refaster/RefasterRuleBuilderScanner.java
M	core/src/main/java/com/google/errorprone/refaster/RefasterScanner.java
M	core/src/main/java/com/google/errorprone/refaster/StringName.java
M	core/src/main/java/com/google/errorprone/refaster/Template.java
M	core/src/main/java/com/google/errorprone/refaster/TemplateMatch.java
M	core/src/main/java/com/google/errorprone/refaster/UAnnotatedType.java
M	core/src/main/java/com/google/errorprone/refaster/UAnnotation.java
M	core/src/main/java/com/google/errorprone/refaster/UAnyOf.java
M	core/src/main/java/com/google/errorprone/refaster/UArrayAccess.java
M	core/src/main/java/com/google/errorprone/refaster/UArrayType.java
M	core/src/main/java/com/google/errorprone/refaster/UArrayTypeTree.java
M	core/src/main/java/com/google/errorprone/refaster/UAssert.java
M	core/src/main/java/com/google/errorprone/refaster/UAssign.java
M	core/src/main/java/com/google/errorprone/refaster/UAssignOp.java
M	core/src/main/java/com/google/errorprone/refaster/UBinary.java
M	core/src/main/java/com/google/errorprone/refaster/UBlank.java
M	core/src/main/java/com/google/errorprone/refaster/UBlock.java
M	core/src/main/java/com/google/errorprone/refaster/UBreak.java
M	core/src/main/java/com/google/errorprone/refaster/UCatch.java
M	core/src/main/java/com/google/errorprone/refaster/UClassDecl.java
M	core/src/main/java/com/google/errorprone/refaster/UClassIdent.java
M	core/src/main/java/com/google/errorprone/refaster/UClassType.java
M	core/src/main/java/com/google/errorprone/refaster/UConditional.java
M	core/src/main/java/com/google/errorprone/refaster/UContinue.java
M	core/src/main/java/com/google/errorprone/refaster/UDoWhileLoop.java
M	core/src/main/java/com/google/errorprone/refaster/UEnhancedForLoop.java
M	core/src/main/java/com/google/errorprone/refaster/UForAll.java
M	core/src/main/java/com/google/errorprone/refaster/UForLoop.java
M	core/src/main/java/com/google/errorprone/refaster/UFreeIdent.java
M	core/src/main/java/com/google/errorprone/refaster/UIdent.java
M	core/src/main/java/com/google/errorprone/refaster/UInstanceOf.java
M	core/src/main/java/com/google/errorprone/refaster/UIntersectionClassType.java
M	core/src/main/java/com/google/errorprone/refaster/UIntersectionType.java
M	core/src/main/java/com/google/errorprone/refaster/ULabeledStatement.java
M	core/src/main/java/com/google/errorprone/refaster/ULambda.java
M	core/src/main/java/com/google/errorprone/refaster/ULiteral.java
M	core/src/main/java/com/google/errorprone/refaster/ULocalVarIdent.java
M	core/src/main/java/com/google/errorprone/refaster/UMatches.java
M	core/src/main/java/com/google/errorprone/refaster/UMemberReference.java
M	core/src/main/java/com/google/errorprone/refaster/UMemberSelect.java
M	core/src/main/java/com/google/errorprone/refaster/UMethodDecl.java
M	core/src/main/java/com/google/errorprone/refaster/UMethodInvocation.java
M	core/src/main/java/com/google/errorprone/refaster/UMethodType.java
M	core/src/main/java/com/google/errorprone/refaster/UModifiers.java
M	core/src/main/java/com/google/errorprone/refaster/UNewArray.java
M	core/src/main/java/com/google/errorprone/refaster/UNewClass.java
M	core/src/main/java/com/google/errorprone/refaster/UOfKind.java
M	core/src/main/java/com/google/errorprone/refaster/UParens.java
M	core/src/main/java/com/google/errorprone/refaster/UPlaceholderExpression.java
M	core/src/main/java/com/google/errorprone/refaster/UPlaceholderStatement.java
M	core/src/main/java/com/google/errorprone/refaster/UPrimitiveType.java
M	core/src/main/java/com/google/errorprone/refaster/UPrimitiveTypeTree.java
M	core/src/main/java/com/google/errorprone/refaster/URepeated.java
M	core/src/main/java/com/google/errorprone/refaster/UReturn.java
M	core/src/main/java/com/google/errorprone/refaster/USimpleStatement.java
M	core/src/main/java/com/google/errorprone/refaster/USkip.java
M	core/src/main/java/com/google/errorprone/refaster/UStatement.java
M	core/src/main/java/com/google/errorprone/refaster/UStaticIdent.java
M	core/src/main/java/com/google/errorprone/refaster/USynchronized.java
M	core/src/main/java/com/google/errorprone/refaster/UTemplater.java
M	core/src/main/java/com/google/errorprone/refaster/UThrow.java
M	core/src/main/java/com/google/errorprone/refaster/UTry.java
M	core/src/main/java/com/google/errorprone/refaster/UType.java
M	core/src/main/java/com/google/errorprone/refaster/UTypeApply.java
M	core/src/main/java/com/google/errorprone/refaster/UTypeCast.java
M	core/src/main/java/com/google/errorprone/refaster/UTypeParameter.java
M	core/src/main/java/com/google/errorprone/refaster/UTypeVar.java
M	core/src/main/java/com/google/errorprone/refaster/UTypeVarIdent.java
M	core/src/main/java/com/google/errorprone/refaster/UUnary.java
M	core/src/main/java/com/google/errorprone/refaster/UUnionType.java
M	core/src/main/java/com/google/errorprone/refaster/UVariableDecl.java
M	core/src/main/java/com/google/errorprone/refaster/UWhileLoop.java
M	core/src/main/java/com/google/errorprone/refaster/UWildcard.java
M	core/src/main/java/com/google/errorprone/refaster/UWildcardType.java
M	core/src/main/java/com/google/errorprone/refaster/Unifiable.java
M	core/src/main/java/com/google/errorprone/refaster/Unifier.java
M	core/src/main/java/com/google/errorprone/refaster/annotation/AfterTemplate.java
M	core/src/main/java/com/google/errorprone/refaster/annotation/AllowCodeBetweenLines.java
M	core/src/main/java/com/google/errorprone/refaster/annotation/AlsoNegation.java
M	core/src/main/java/com/google/errorprone/refaster/annotation/BeforeTemplate.java
M	core/src/main/java/com/google/errorprone/refaster/annotation/MayOptionallyUse.java
M	core/src/main/java/com/google/errorprone/refaster/annotation/NoAutoboxing.java
M	core/src/main/java/com/google/errorprone/refaster/annotation/NotMatches.java
M	core/src/main/java/com/google/errorprone/refaster/annotation/OfKind.java
M	core/src/main/java/com/google/errorprone/refaster/annotation/Placeholder.java
M	core/src/main/java/com/google/errorprone/refaster/annotation/Repeated.java
M	core/src/main/java/com/google/errorprone/refaster/annotation/RequiredAnnotationProcessor.java
M	core/src/main/java/com/google/errorprone/refaster/annotation/UseImportPolicy.java
M	core/src/test/java/com/google/errorprone/CommandLineFlagTest.java
M	core/src/test/java/com/google/errorprone/DiagnosticKindTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneJavaCompilerTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneTestCompiler.java
M	core/src/test/java/com/google/errorprone/MatcherChecker.java
M	core/src/test/java/com/google/errorprone/NullAnnotationProcessor.java
M	core/src/test/java/com/google/errorprone/SubContextTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayHashCodeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/AssertFalseTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/AsyncFunctionReturnsNullTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/BadAnnotationImplementationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/BadComparableTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/BadShiftAmountTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/BigDecimalLiteralDoubleTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CannotMockFinalClassTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ChainingConstructorIgnoresParameterTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CheckReturnValueTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ClassNameTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ComparisonContractViolatedTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ComparisonOutOfRangeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CompileTimeConstantCheckerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DeadExceptionTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DepAnnTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DivZeroTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ElementsCountedInLoopTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/EmptyIfStatementTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/EmptyTopLevelDeclarationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/EqualsHashCodeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/EqualsIncompatibleTypeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/EqualsNaNTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ExpectedExceptionCheckerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/FallThroughTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/FinallyTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ForOverrideCheckerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/FuturesGetCheckedIllegalExceptionTypeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/IncompatibleModifiersCheckerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InsecureCipherModeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InvalidPatternSyntaxTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/IterableAndIteratorTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JMockTestWithoutRunWithOrRuleAnnotationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit3FloatingPointComparisonWithoutDeltaTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit3TestNotRunTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4TearDownNotRunTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4TestNotRunTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffixTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MissingCasesInEnumSwitchTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MissingFailTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MissingOverrideTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MisusedWeekYearTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ModifyingCollectionWithItselfTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MultipleTopLevelClassesTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NoAllocationCheckerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NonAtomicVolatileUpdateTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NonCanonicalStaticImportTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NonOverridingEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NonRuntimeAnnotationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NumericEqualityTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/OverridesTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitiveTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsInvalidPlaceholderTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PrimitiveArrayPassedToVarargsMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ProtoFieldNullComparisonTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ProtoFieldPreconditionsCheckNotNullTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/RemoveUnusedImportsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/RequiredModifiersCheckerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SelfAssignmentTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SelfComparisonTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SizeGreaterThanOrEqualsZeroTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/StringBuilderInitWithCharTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/StringEqualityTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SuppressWarningsDeprecatedTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ThrowIfUncheckedKnownCheckedTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ThrowsUncheckedExceptionTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/TryFailThrowableTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/TypeParameterQualifierTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/TypeParameterShadowingTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/TypeParameterUnusedInFormalsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/UnnecessaryStaticImportTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/UnnecessaryTypeArgumentTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/UnsynchronizedOverridesSynchronizedTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/VarCheckerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/WaitNotInLoopTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/WrongParameterPackageTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/android/HardCodedSdCardPathTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/android/MislabeledAndroidStringTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/android/RectIntersectReturnValueIgnoredTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/argumentselectiondefects/ParameterTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/collectionincompatibletype/CollectionIncompatibleTypeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/AssistedInjectAndInjectOnConstructorsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/AssistedInjectAndInjectOnSameConstructorTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/InvalidTargetingOnScopingAnnotationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/JavaxInjectOnAbstractMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/JavaxInjectOnFinalFieldTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/MoreThanOneInjectableConstructorTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/MoreThanOneQualifierTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/MoreThanOneScopeAnnotationOnClassTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/OverlappingQualifierAndScopeAnnotationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/QualifierOrScopeOnInjectMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/ScopeAnnotationOnInterfaceOrAbstractClassTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/ScopeOrQualifierAnnotationRetentionTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/dagger/ProvidesNullTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/AssistedInjectScopingTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/AssistedParametersTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/InjectOnFinalFieldTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/OverridesGuiceInjectableMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/OverridesJavaxInjectableMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/nullness/FieldMissingNullableTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinderTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByValidatorTest.java
M	core/src/test/java/com/google/errorprone/fixes/SuggestedFixesTest.java
M	core/src/test/java/com/google/errorprone/matchers/AnnotationDoesNotHaveArgumentTest.java
M	core/src/test/java/com/google/errorprone/matchers/AnnotationHasArgumentWithValueTest.java
M	core/src/test/java/com/google/errorprone/matchers/AnnotationMatcherTest.java
M	core/src/test/java/com/google/errorprone/matchers/CompileTimeConstantExpressionMatcherTest.java
M	core/src/test/java/com/google/errorprone/matchers/CompilerBasedAbstractTest.java
M	core/src/test/java/com/google/errorprone/matchers/CompoundAssignmentTest.java
M	core/src/test/java/com/google/errorprone/matchers/ConstructorOfClassTest.java
M	core/src/test/java/com/google/errorprone/matchers/DescendantOfAbstractTest.java
M	core/src/test/java/com/google/errorprone/matchers/DescendantOfTest.java
M	core/src/test/java/com/google/errorprone/matchers/DescendantOfTransitiveTest.java
M	core/src/test/java/com/google/errorprone/matchers/EnclosingTest.java
M	core/src/test/java/com/google/errorprone/matchers/HasIdentifierTest.java
M	core/src/test/java/com/google/errorprone/matchers/InstanceMethodTest.java
M	core/src/test/java/com/google/errorprone/matchers/MatchersTest.java
M	core/src/test/java/com/google/errorprone/matchers/MethodHasParametersTest.java
M	core/src/test/java/com/google/errorprone/matchers/MethodReturnsNonNullNextTokenTest.java
M	core/src/test/java/com/google/errorprone/matchers/MethodReturnsNonNullStringTest.java
M	core/src/test/java/com/google/errorprone/matchers/MethodReturnsNonNullToStringTest.java
M	core/src/test/java/com/google/errorprone/matchers/MethodReturnsTest.java
M	core/src/test/java/com/google/errorprone/matchers/NonNullLiteralTest.java
M	core/src/test/java/com/google/errorprone/refaster/AbstractUTreeTest.java
M	core/src/test/java/com/google/errorprone/refaster/BindingsTest.java
M	core/src/test/java/com/google/errorprone/refaster/ChoiceTest.java
M	core/src/test/java/com/google/errorprone/refaster/CodeTransformerTestHelper.java
M	core/src/test/java/com/google/errorprone/refaster/CompilerBasedTest.java
M	core/src/test/java/com/google/errorprone/refaster/DescriptionBasedDiffTest.java
M	core/src/test/java/com/google/errorprone/refaster/Match.java
M	core/src/test/java/com/google/errorprone/refaster/RefasterRuleTest.java
M	core/src/test/java/com/google/errorprone/refaster/TemplateIntegrationTest.java
M	core/src/test/java/com/google/errorprone/refaster/TemplatingTest.java
M	core/src/test/java/com/google/errorprone/refaster/UArrayAccessTest.java
M	core/src/test/java/com/google/errorprone/refaster/UArrayTypeTest.java
M	core/src/test/java/com/google/errorprone/refaster/UArrayTypeTreeTest.java
M	core/src/test/java/com/google/errorprone/refaster/UAssignOpTest.java
M	core/src/test/java/com/google/errorprone/refaster/UAssignTest.java
M	core/src/test/java/com/google/errorprone/refaster/UBinaryTest.java
M	core/src/test/java/com/google/errorprone/refaster/UBlockTest.java
M	core/src/test/java/com/google/errorprone/refaster/UBreakTest.java
M	core/src/test/java/com/google/errorprone/refaster/UClassIdentTest.java
M	core/src/test/java/com/google/errorprone/refaster/UClassTypeTest.java
M	core/src/test/java/com/google/errorprone/refaster/UConditionalTest.java
M	core/src/test/java/com/google/errorprone/refaster/UContinueTest.java
M	core/src/test/java/com/google/errorprone/refaster/UDoWhileLoopTest.java
M	core/src/test/java/com/google/errorprone/refaster/UEnhancedForLoopTest.java
M	core/src/test/java/com/google/errorprone/refaster/UExpressionStatementTest.java
M	core/src/test/java/com/google/errorprone/refaster/UForAllTest.java
M	core/src/test/java/com/google/errorprone/refaster/UForLoopTest.java
M	core/src/test/java/com/google/errorprone/refaster/UFreeIdentTest.java
M	core/src/test/java/com/google/errorprone/refaster/UIfTest.java
M	core/src/test/java/com/google/errorprone/refaster/UInstanceOfTest.java
M	core/src/test/java/com/google/errorprone/refaster/UIntersectionTypeTest.java
M	core/src/test/java/com/google/errorprone/refaster/ULabeledStatementTest.java
M	core/src/test/java/com/google/errorprone/refaster/ULiteralTest.java
M	core/src/test/java/com/google/errorprone/refaster/ULocalVarIdentTest.java
M	core/src/test/java/com/google/errorprone/refaster/UMemberSelectTest.java
M	core/src/test/java/com/google/errorprone/refaster/UMethodInvocationTest.java
M	core/src/test/java/com/google/errorprone/refaster/UMethodTypeTest.java
M	core/src/test/java/com/google/errorprone/refaster/UNewClassTest.java
M	core/src/test/java/com/google/errorprone/refaster/UParensTest.java
M	core/src/test/java/com/google/errorprone/refaster/UPrimitiveTypeTest.java
M	core/src/test/java/com/google/errorprone/refaster/URepeatedTest.java
M	core/src/test/java/com/google/errorprone/refaster/UReturnTest.java
M	core/src/test/java/com/google/errorprone/refaster/UStaticIdentTest.java
M	core/src/test/java/com/google/errorprone/refaster/USynchronizedTest.java
M	core/src/test/java/com/google/errorprone/refaster/UThrowTest.java
M	core/src/test/java/com/google/errorprone/refaster/UTypeApplyTest.java
M	core/src/test/java/com/google/errorprone/refaster/UTypeCastTest.java
M	core/src/test/java/com/google/errorprone/refaster/UTypeVarIdentTest.java
M	core/src/test/java/com/google/errorprone/refaster/UTypeVarTest.java
M	core/src/test/java/com/google/errorprone/refaster/UUnaryTest.java
M	core/src/test/java/com/google/errorprone/refaster/UUnionTypeTest.java
M	core/src/test/java/com/google/errorprone/refaster/UVariableDeclTest.java
M	core/src/test/java/com/google/errorprone/refaster/UWhileLoopTest.java
M	core/src/test/java/com/google/errorprone/refaster/UWildcardTest.java
M	core/src/test/java/com/google/errorprone/refaster/UWildcardTypeTest.java
M	core/src/test/java/com/google/errorprone/refaster/UnificationTest.java
M	core/src/test/java/com/google/errorprone/scanner/ScannerSupplierTest.java
M	core/src/test/java/com/google/errorprone/util/ASTHelpersTest.java
M	docgen/src/main/java/com/google/errorprone/BugPatternFileGenerator.java
M	docgen/src/main/java/com/google/errorprone/DocGenTool.java
M	docgen/src/main/java/com/google/errorprone/ExampleInfo.java
M	docgen/src/test/java/com/google/errorprone/BugPatternFileGeneratorTest.java
M	docgen/src/test/java/com/google/errorprone/BugPatternIndexWriterTest.java
M	docgen_processor/src/main/java/com/google/errorprone/BugPatternInstance.java
M	docgen_processor/src/main/java/com/google/errorprone/DocGenProcessor.java
M	examples/maven/annotation_processing_bug_repro/src/main/java/NeedsAnnotationProcessing.java
M	test_helpers/src/main/java/com/google/errorprone/CompilationTestHelper.java
M	test_helpers/src/main/java/com/google/errorprone/DiagnosticTestHelper.java
M	test_helpers/src/main/java/com/google/errorprone/ErrorProneInMemoryFileManager.java
M	test_helpers/src/test/java/com/google/errorprone/CompilationTestHelperTest.java

commit 4ad95d45e1b9610b951229f33621d947e820ce6b
Author: cushon <cushon@google.com>
Date:   Thu May 11 12:17:31 2017 -0700

    Discourage the reuse of names defined in java.lang
    
    RELNOTES: New check to discourage the reuse of names defined in java.lang
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=155780170

A	core/src/main/java/com/google/errorprone/bugpatterns/JavaLangClash.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/JavaLangClashTest.java
A	docs/bugpattern/JavaLangClash.md

commit 3b0dad7a742354b04e6362c6d583826d2eaa594f
Author: cushon <cushon@google.com>
Date:   Thu May 11 11:45:20 2017 -0700

    s/tpye/type
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=155775861

M	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/testdata/AssistedParametersNegativeCases.java

commit 1988fac82f5c03e85211e0ba0e0e775382a2a837
Author: cushon <cushon@google.com>
Date:   Thu May 11 11:43:13 2017 -0700

    google-java-format all of the testdata
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=155775561

M	core/src/test/java/com/google/errorprone/bugpatterns/android/testdata/CustomFragmentNotInstantiableNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/android/testdata/CustomFragmentNotInstantiablePositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/android/testdata/FragmentNotInstantiableNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/android/testdata/FragmentNotInstantiablePositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/android/testdata/HardCodedSdCardPathNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/android/testdata/HardCodedSdCardPathPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/android/testdata/RectIntersectReturnValueIgnoredNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/android/testdata/RectIntersectReturnValueIgnoredPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/collectionincompatibletype/testdata/CollectionIncompatibleTypeClassCast.java
M	core/src/test/java/com/google/errorprone/bugpatterns/collectionincompatibletype/testdata/CollectionIncompatibleTypeNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/collectionincompatibletype/testdata/CollectionIncompatibleTypeOutOfBounds.java
M	core/src/test/java/com/google/errorprone/bugpatterns/collectionincompatibletype/testdata/CollectionIncompatibleTypePositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/testdata/AssistedInjectScopingNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/testdata/AssistedInjectScopingPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/testdata/InjectOnFinalFieldNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/testdata/InjectOnFinalFieldPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/testdata/OverridesGuiceInjectableMethodNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/testdata/OverridesJavaxInjectableMethodNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/AssistedInjectAndInjectOnConstructorsNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/AssistedInjectAndInjectOnConstructorsPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/AssistedInjectAndInjectOnSameConstructorNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/AssistedInjectAndInjectOnSameConstructorPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/InjectedConstructorAnnotationsNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/InvalidTargetingOnScopingAnnotationNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/InvalidTargetingOnScopingAnnotationPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/JavaxInjectOnAbstractMethodNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/JavaxInjectOnAbstractMethodPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/JavaxInjectOnFinalFieldNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/MoreThanOneInjectableConstructorNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/MoreThanOneInjectableConstructorPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/MoreThanOneQualifierNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/MoreThanOneQualifierPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/MoreThanOneScopeAnnotationOnClassNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/MoreThanOneScopeAnnotationOnClassPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/OverlappingQualifierAndScopeAnnotationNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/OverlappingQualifierAndScopeAnnotationPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/ScopeAnnotationOnInterfaceOrAbstractClassNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/ScopeAnnotationOnInterfaceOrAbstractClassPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/ScopeOrQualifierAnnotationRetentionNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/ScopeOrQualifierAnnotationRetentionPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayEqualsNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayEqualsNegativeCases2.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayEqualsPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayEqualsPositiveCases2.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayHashCodeNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayHashCodeNegativeCases2.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayHashCodePositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayHashCodePositiveCases2.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayStringConcatenationNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayStringConcatenationPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayToStringCompoundAssignmentNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayToStringCompoundAssignmentPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayToStringNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayToStringPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/AssertFalseNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/AssertFalsePositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/AsyncFunctionReturnsNullNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/AsyncFunctionReturnsNullPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/BadComparableNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/BadComparablePositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/BadShiftAmountNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/BadShiftAmountPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/BigDecimalLiteralDoubleNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/BigDecimalLiteralDoublePositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/CannotMockFinalClassNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/CannotMockFinalClassNegativeCases2.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/CannotMockFinalClassPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ChainingConstructorIgnoresParameterNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ChainingConstructorIgnoresParameterPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/CheckReturnValueNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/CheckReturnValuePositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ClassCanBeStaticNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ClassCanBeStaticPositiveCase1.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ClassCanBeStaticPositiveCase2.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ClassCanBeStaticPositiveCase3.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ComparisonContractViolatedNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ComparisonOutOfRangeNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ComparisonOutOfRangePositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/DeadExceptionNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/DeadExceptionPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/DeadExceptionTestingNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/DepAnnNegativeCase1.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/DepAnnNegativeCase2.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/DepAnnPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/DivZeroNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/DivZeroPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ElementsCountedInLoopNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ElementsCountedInLoopPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/EmptyIfStatementNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/EqualsHashCodeTestNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/EqualsIncompatibleTypeNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/EqualsIncompatibleTypePositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/EqualsNaNNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/EqualsNaNPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/FinallyNegativeCase1.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/FinallyNegativeCase2.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/FuturesGetCheckedIllegalExceptionTypeNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/FuturesGetCheckedIllegalExceptionTypePositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/GuavaSelfEqualsNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/GuavaSelfEqualsPositiveCase.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InsecureCipherModePositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InvalidPatternSyntaxNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InvalidPatternSyntaxPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/IterableAndIteratorNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/IterableAndIteratorPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit3TestNotRunNegativeCase1.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit3TestNotRunNegativeCase2.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit3TestNotRunNegativeCase3.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit3TestNotRunNegativeCase4.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit3TestNotRunNegativeCase5.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit3TestNotRunPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4SetUpNotRunNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4TearDownNotRunNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4TestNotRunBaseClass.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4TestNotRunNegativeCase1.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4TestNotRunNegativeCase2.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4TestNotRunNegativeCase3.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4TestNotRunNegativeCase4.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4TestNotRunNegativeCase5.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4TestNotRunPositiveCase1.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4TestNotRunPositiveCase2.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/LongLiteralLowerCaseSuffixNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/MissingFailNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/MissingFailNegativeCases2.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/MissingFailPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/MissingFailPositiveCases2.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/MissingFailPositiveCases3.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/MisusedWeekYearNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/MisusedWeekYearPositiveCases2.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ModifyingCollectionWithItselfNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ModifyingCollectionWithItselfPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/NoAllocationCheckerNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/NoAllocationCheckerPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/NonAtomicVolatileUpdateNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/NonAtomicVolatileUpdatePositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/NonRuntimeAnnotationNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/NonRuntimeAnnotationPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/NullablePrimitiveNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/NumericEqualityNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/NumericEqualityPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/OrderingFromPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/OverridesNegativeCase1.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/OverridesNegativeCase2.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/OverridesNegativeCase3.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsCheckNotNullNegativeCase1.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsCheckNotNullNegativeCase2.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsCheckNotNullPositiveCase1.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsCheckNotNullPositiveCase2.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsCheckNotNullPositiveCase3.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsCheckNotNullPrimitiveNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsCheckNotNullPrimitivePositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsExpensiveStringNegativeCase1.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsExpensiveStringNegativeCase2.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsInvalidPlaceholderNegativeCase1.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsInvalidPlaceholderPositiveCase1.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/PrimitiveArrayPassedToVarargsMethodNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/PrimitiveArrayPassedToVarargsMethodPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ProtoFieldNullComparisonNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ProtoFieldNullComparisonPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ProtoFieldPreconditionsCheckNotNullNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ProtoFieldPreconditionsCheckNotNullPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/RestrictedApiMethods.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ReturnValueIgnoredNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ReturnValueIgnoredPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfAssignmentNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfAssignmentPositiveCases1.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfAssignmentPositiveCases2.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfComparisonNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfComparisonPositiveCase.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfEqualsPositiveCase.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SizeGreaterThanOrEqualsZeroNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SizeGreaterThanOrEqualsZeroPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/StaticQualifiedUsingExpressionNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/StaticQualifiedUsingExpressionPositiveCase2.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/StringBuilderInitWithCharNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/StringBuilderInitWithCharPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/StringEqualityNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/StringEqualityPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SuppressWarningsDeprecatedNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SuppressWarningsDeprecatedPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ThrowIfUncheckedKnownCheckedTestNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ThrowIfUncheckedKnownCheckedTestPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/TryFailThrowableNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/TryFailThrowablePositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/UngroupedOverloadsPositiveCasesCovering.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/UngroupedOverloadsPositiveCasesInterleaved.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/UngroupedOverloadsPositiveCasesMultiple.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/WaitNotInLoopNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/WaitNotInLoopPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/WrongParameterPackageNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/WrongParameterPackagePositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/proto/Proto3Test.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/proto/ProtoTest.java
M	core/src/test/java/com/google/errorprone/refaster/testdata/template/AnonymousClassTemplate.java
M	core/src/test/java/com/google/errorprone/refaster/testdata/template/AnyOfTemplate.java
M	core/src/test/java/com/google/errorprone/refaster/testdata/template/ArrayTemplate.java
M	core/src/test/java/com/google/errorprone/refaster/testdata/template/AssertTemplate.java
M	core/src/test/java/com/google/errorprone/refaster/testdata/template/AutoboxingTemplate.java
M	core/src/test/java/com/google/errorprone/refaster/testdata/template/BinaryTemplate.java
M	core/src/test/java/com/google/errorprone/refaster/testdata/template/BlockPlaceholderTemplate.java
M	core/src/test/java/com/google/errorprone/refaster/testdata/template/ComparisonChainTemplate.java
M	core/src/test/java/com/google/errorprone/refaster/testdata/template/DiamondTemplate.java
M	core/src/test/java/com/google/errorprone/refaster/testdata/template/ExplicitTypesPreservedTemplate.java
M	core/src/test/java/com/google/errorprone/refaster/testdata/template/GenericPlaceholderTemplate.java
M	core/src/test/java/com/google/errorprone/refaster/testdata/template/IfFallthroughTemplate.java
M	core/src/test/java/com/google/errorprone/refaster/testdata/template/IfTemplate.java
M	core/src/test/java/com/google/errorprone/refaster/testdata/template/ImplicitTypesInlinedTemplate.java
M	core/src/test/java/com/google/errorprone/refaster/testdata/template/ImportClassDirectlyTemplate.java
M	core/src/test/java/com/google/errorprone/refaster/testdata/template/InferredThisTemplate.java
M	core/src/test/java/com/google/errorprone/refaster/testdata/template/IsInstanceTemplate.java
M	core/src/test/java/com/google/errorprone/refaster/testdata/template/LabelTemplate.java
M	core/src/test/java/com/google/errorprone/refaster/testdata/template/LiteralTemplate.java
M	core/src/test/java/com/google/errorprone/refaster/testdata/template/MayOptionallyUseTemplate.java
M	core/src/test/java/com/google/errorprone/refaster/testdata/template/MethodInvocationTemplate.java
M	core/src/test/java/com/google/errorprone/refaster/testdata/template/MultiBoundTemplate.java
M	core/src/test/java/com/google/errorprone/refaster/testdata/template/MultipleReferencesToIdentifierTemplate.java
M	core/src/test/java/com/google/errorprone/refaster/testdata/template/OneLineToTwoTemplate.java
M	core/src/test/java/com/google/errorprone/refaster/testdata/template/PlaceholderAllowsIdentityTemplate.java
M	core/src/test/java/com/google/errorprone/refaster/testdata/template/PlaceholderTemplate.java
M	core/src/test/java/com/google/errorprone/refaster/testdata/template/PrecedenceSensitiveTemplate.java
M	core/src/test/java/com/google/errorprone/refaster/testdata/template/ReturnPlaceholderTemplate.java
M	core/src/test/java/com/google/errorprone/refaster/testdata/template/SamePackageImportsTemplate.java
M	core/src/test/java/com/google/errorprone/refaster/testdata/template/StaticFieldTemplate.java
M	core/src/test/java/com/google/errorprone/refaster/testdata/template/TopLevelTemplate.java
M	core/src/test/java/com/google/errorprone/refaster/testdata/template/TryMultiCatchTemplate.java
M	core/src/test/java/com/google/errorprone/refaster/testdata/template/TryTemplate.java
M	core/src/test/java/com/google/errorprone/refaster/testdata/template/VarargTemplate.java
M	core/src/test/java/com/google/errorprone/refaster/testdata/template/VariableDeclTemplate.java
M	core/src/test/java/com/google/errorprone/refaster/testdata/template/WildcardTemplate.java
M	core/src/test/java/com/google/errorprone/refaster/testdata/template/WildcardUnificationTemplate.java
M	core/src/test/java/com/google/errorprone/testdata/CommandLineFlagTestFile.java
M	core/src/test/java/com/google/errorprone/testdata/ExtendedMultipleTopLevelClassesWithNoErrors.java
M	core/src/test/java/com/google/errorprone/testdata/FlowSub.java
M	core/src/test/java/com/google/errorprone/testdata/FlowSuper.java
M	core/src/test/java/com/google/errorprone/testdata/MultipleTopLevelClassesWithErrors.java
M	core/src/test/java/com/google/errorprone/testdata/MultipleTopLevelClassesWithNoErrors.java

commit e31a4d38951d7e1012e9e4007303ee56c9bee14f
Author: andrewrice <andrewrice@google.com>
Date:   Wed May 10 16:52:14 2017 -0700

    Avoid reporting the same matches from different checkers.
    Extract the matchers from AutoValueConstructorOrderChecker and
    AssertEqualsArgumentOrderChecker so that they can be ignored by
    ArgumentSelectionDefectChecker.
    
    RELNOTES: Make sure ArgumentSelectionDefectChecker doesn't produce duplicate
    findings with AssertEqualsArgumentOrderChecker and
    AutoValueConstructorOrderChecker
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=155692896

M	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/ArgumentSelectionDefectChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/AssertEqualsArgumentOrderChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/AutoValueConstructorOrderChecker.java
A	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/Matchers.java
M	core/src/test/java/com/google/errorprone/bugpatterns/argumentselectiondefects/AssertEqualsArgumentOrderCheckerTest.java

commit f926bb19181df608bc9526629b3630cdb3e0b83f
Author: cushon <cushon@google.com>
Date:   Wed May 10 11:37:04 2017 -0700

    Use the Scope interface instead of referring to WriteableScope
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=155654655

M	core/src/main/java/com/google/errorprone/bugpatterns/ReferenceEquality.java

commit 0aeddc5a7df2e0b63709db8ba55d9abc686ea980
Author: ronshapiro <ronshapiro@google.com>
Date:   Wed May 10 10:14:13 2017 -0700

    Ignore dagger components in ScopeAnnotationOnInterfaceOrAbstractClass
    
    RELNOTES: n/a
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=155642523

M	core/src/main/java/com/google/errorprone/bugpatterns/inject/ScopeAnnotationOnInterfaceOrAbstractClass.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/ScopeAnnotationOnInterfaceOrAbstractClassNegativeCases.java

commit 38a3812a5e051935be4e5fe09890a0ba445b11d7
Author: cushon <cushon@google.com>
Date:   Wed May 10 09:14:29 2017 -0700

    Avoid a dependency on javax.annotation.Generated
    
    java.annotations.common isn't provided by default in JDK 9, see
    https://bugs.openjdk.java.net/browse/JDK-8152842
    
    This helps with #448
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=155635468

M	check_api/src/main/java/com/google/errorprone/SuppressionHelper.java

commit 540674659475ab8561f197c6ae2c20914ee10fef
Author: andrewrice <andrewrice@google.com>
Date:   Wed May 10 09:11:03 2017 -0700

    Checker for parameter order on autovalue constructor call
    
    The check works by looking at the arguments used to call the constructor of the AutoValue object. If a different permutation of the arguments would exactly match the parameters of the constructor then a warning is generated. Arguments for which a name cannot be extracted are left in their original position. Occasionally an author will deliberately swap the order of the constructor call e.g.
    
     if (first < last) {
       return new AutoValue_Foo(first, last);
     }
     else {
       return new AutoValue_Foo(last, first);
     }
    
    We avoid matching on these by looking to see if the permutation of the arguments exists in another call within the same method.
    
    The check is implemented as a special case of the ArgumentSelectionDefectChecker which in general looks to see if a permutation of the argument names is more suitable than the current one.
    
    RELNOTES: Checker for parameter order on autovalue constructor call
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=155635122

A	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/AutoValueConstructorOrderChecker.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/argumentselectiondefects/AutoValueConstructorOrderCheckerTest.java

commit 0c7f039c91261e216fc2a1031b5ffaf4085b3c3b
Author: paulduffin <paulduffin@google.com>
Date:   Wed May 10 01:26:32 2017 -0700

    Add AndroidImportOrganizer to support Android import formatting
    
    Supports both android-static-first and android-static-last as the
    Android Code Style does not specify how static imports should be
    ordered relative to non-static imports.
    
    Refactors the ImportOrganizer interface and existing implementations
    to provide a better abstraction of an import and the results of
    organizing the imports.
    
    Added tests for BasicImportOrganizer to ensure that behavior did
    not change.
    
    RELNOTES: Updated options so order can be selected using:
       -XepPatchImportOrder:android-static-first
       -XepPatchImportOrder:android-static-last
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=155603065

M	check_api/src/main/java/com/google/errorprone/ImportOrderParser.java
A	check_api/src/main/java/com/google/errorprone/apply/AndroidImportOrganizer.java
M	check_api/src/main/java/com/google/errorprone/apply/BasicImportOrganizer.java
M	check_api/src/main/java/com/google/errorprone/apply/ImportOrganizer.java
M	check_api/src/main/java/com/google/errorprone/apply/ImportStatements.java
A	check_api/src/main/java/com/google/errorprone/apply/StaticOrder.java
M	check_api/src/test/java/com/google/errorprone/ErrorProneOptionsTest.java
A	check_api/src/test/java/com/google/errorprone/apply/AndroidImportOrganizerTest.java
A	check_api/src/test/java/com/google/errorprone/apply/BasicImportOrganizerTest.java
M	check_api/src/test/java/com/google/errorprone/apply/ImportStatementsTest.java
A	check_api/src/test/java/com/google/errorprone/apply/OrganizedImportsTest.java

commit 918e701ec79804a7ebff05ea58c0ad0573a3f3a2
Author: andrewrice <andrewrice@google.com>
Date:   Tue May 9 15:45:15 2017 -0700

    Refactor ArgumentSelectionDefectChecker and AssertEqualsArgumentOrderChecker to
    share a library object rather than inherit from one another
    
    RELNOTES: Move argument selection checking logic to a separate class
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=155563608

A	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/ArgumentChangeFinder.java
M	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/ArgumentSelectionDefectChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/AssertEqualsArgumentOrderChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/Changes.java
A	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/InvocationInfo.java
M	core/src/test/java/com/google/errorprone/bugpatterns/argumentselectiondefects/ArgumentSelectionDefectCheckerTest.java

commit e34a0abc094d225b1bd68e310e04e3fe3b88d794
Author: cushon <cushon@google.com>
Date:   Tue May 9 13:42:56 2017 -0700

    Update to javac-9-dev-r4023-2
    
    Fixes #592
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=155545980

M	pom.xml

commit d7f9187d2b1eaaa014e0d3ff001d78873d633eea
Author: andrewrice <andrewrice@google.com>
Date:   Mon May 8 12:44:09 2017 -0700

    Fix bug in AssertEqualsArgumentOrderChecker which meant it considered
    a method which returns an enum value as a constant and so swapped it
    to the 'expected' position
    
    RELNOTES: Fix bug in AssertEqualsArgumentChecker handling methods returning an
    enum
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=155413441

M	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/ArgumentSelectionDefectChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/AssertEqualsArgumentOrderChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/Costs.java
M	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/Parameter.java
M	core/src/test/java/com/google/errorprone/bugpatterns/argumentselectiondefects/AssertEqualsArgumentOrderCheckerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/argumentselectiondefects/ParameterTest.java

commit 71b874ba26dcd07998ec827fdcb86dc31832cac3
Author: glorioso <glorioso@google.com>
Date:   Mon May 8 11:15:27 2017 -0700

    Add Inject and Key to WellKnownMutability
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=155401705

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/WellKnownMutability.java

commit c3e31b3ee379cd1ad4ebdcba6ab6a5a516463d43
Author: emmaborhanian <emmaborhanian@google.com>
Date:   Sat May 6 14:56:17 2017 -0700

    Make AnnotationMatcherUtils public.
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=155295901

M	check_api/src/main/java/com/google/errorprone/matchers/AnnotationMatcherUtils.java

commit b6e7a9d3c7638f395807eb5ec7050b2c1d643d6a
Author: andrewrice <andrewrice@google.com>
Date:   Fri May 5 16:57:39 2017 -0700

    Short-circuit argument-comment extraction
    
    if there are no '/' characters in the method invocation source.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=155256749

M	check_api/src/main/java/com/google/errorprone/util/Comments.java

commit 30b8fae682e2a43866e3265b2b0b738b72651b8e
Author: cushon <cushon@google.com>
Date:   Fri May 5 15:22:41 2017 -0700

    In fix application mode, only apply fixes once
    
    The plugin receives multiple GENERATED events, and previously it was
    applying all of the accumulated fixes each time.
    
    Improves #609
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=155247246

M	check_api/src/main/java/com/google/errorprone/BaseErrorProneJavaCompiler.java
M	check_api/src/main/java/com/google/errorprone/RefactoringCollection.java
M	check_api/src/main/java/com/google/errorprone/apply/PatchFileDestination.java
M	core/src/test/java/com/google/errorprone/ErrorProneJavacPluginTest.java

commit 4994d8528d85f02ed8dbc1f796bc50d6aaa3dcdd
Author: cushon <cushon@google.com>
Date:   Thu May 4 12:20:48 2017 -0700

    Handle broken classpaths more gracefully in ImmutableAnalysis
    
    If @Immutable isn't on the classpath, but there are classes present that
    refer to it, it ends up in the symbol table but there isn't any information
    available for e.g. annotation members.
    
    Fixes #615
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=155110368

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableAnalysis.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableChecker.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableCheckerTest.java

commit 9caaec9945a54d31b4b6895bc887041ce97c6f67
Author: cushon <cushon@google.com>
Date:   Thu May 4 12:00:50 2017 -0700

    Fix crash in PredicateIncompatibleType
    
    if the guava predicate wasn't available. The handling of guava's predicate
    was unnecessary, since recent versions extend the JDK predicate.
    
    Also fix a mistake in the diagnostic message.
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=155107932

M	core/src/main/java/com/google/errorprone/bugpatterns/PredicateIncompatibleType.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PredicateIncompatibleTypeTest.java

commit 6915c0741097e2bfa0f2860d000dd3f4d39a237f
Author: arideout <arideout@google.com>
Date:   Thu May 4 12:00:42 2017 -0700

    Fix typo in error message.
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=155107882

M	check_api/src/main/java/com/google/errorprone/VisitorState.java

commit 599706489a6a5da21d4c561d878031cd7ee5340c
Author: dustinh <dustinh@google.com>
Date:   Wed May 3 16:55:19 2017 -0700

    Fix double negative typo in Javadoc comment.
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=155023665

M	annotations/src/main/java/com/google/errorprone/annotations/DoNotCall.java

commit 457435e7feb8da82231b567d5bf3abf7815ee954
Author: glorioso <glorioso@google.com>
Date:   Wed May 3 16:40:52 2017 -0700

    Remove unused DatastoreMatchers class
    
    RELNOTES: n/a
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=155021937

D	check_api/src/main/java/com/google/errorprone/matchers/DatastoreMatchers.java

commit faade4db26f17af4e1621e08d04448c77a86bc82
Author: cushon <cushon@google.com>
Date:   Wed May 3 15:19:17 2017 -0700

    NarrowingCompoundAssignment: ignore string concatenation
    
    `theString += theChar` is not lossy.
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=155011683

M	core/src/main/java/com/google/errorprone/bugpatterns/NarrowingCompoundAssignment.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NarrowingCompoundAssignmentTest.java

commit 6c6ebb8db9f510c54c840a4dfcda6a8d575c2ba3
Author: eaftan <eaftan@google.com>
Date:   Wed May 3 11:44:48 2017 -0700

    Fix incorrect MOE strip directive in CheckReturnValue doc.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=154982947

M	docs/bugpattern/CheckReturnValue.md

commit 0c3711c97aff6f84e3af2bd3c94de7c434a0bbb6
Author: mlourenco <mlourenco@google.com>
Date:   Wed May 3 08:45:20 2017 -0700

    Fix broken link.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=154960061

M	annotations/src/main/java/com/google/errorprone/annotations/Immutable.java

commit e0316bc4750fb1d65c1c7303e2aee661007924a1
Author: emmaborhanian <emmaborhanian@google.com>
Date:   Tue May 2 14:00:28 2017 -0700

    Add comment to applySeverityOverride clarifying it doesn't do anything from a BugChecker.
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=154876073

M	check_api/src/main/java/com/google/errorprone/matchers/Description.java

commit c9af2ef220da5988473da6fec83ca9c8ae0e98d3
Author: cushon <cushon@google.com>
Date:   Tue May 2 11:59:23 2017 -0700

    Fix a crash in DoubleCheckedLocking
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=154860778

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/DoubleCheckedLocking.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/DoubleCheckedLockingTest.java

commit d41033b827bf4abd486d0d1af23a4814495fbb3f
Author: cushon <cushon@google.com>
Date:   Mon May 1 21:41:51 2017 -0700

    Detect incompatible predicate types
    
    Detect method references to equals that are target-typed to an
    incompatible predicate type.
    
    RELNOTES: [PredicateIncompatibleType] New check for incompatible predicate types
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=154798060

M	core/src/main/java/com/google/errorprone/bugpatterns/EqualsIncompatibleType.java
A	core/src/main/java/com/google/errorprone/bugpatterns/PredicateIncompatibleType.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/PredicateIncompatibleTypeTest.java
A	docs/bugpattern/PredicateIncompatibleType.md

commit fbd0755a58310095dee808cb4c83761ba98af3ce
Author: cushon <cushon@google.com>
Date:   Mon May 1 17:31:13 2017 -0700

    Clarify where fall through comments are supposed to go
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=154783461

M	core/src/main/java/com/google/errorprone/bugpatterns/FallThrough.java

commit 6a53645cd9f06b758d5d78def9ee7fd300d81a63
Author: glorioso <glorioso@google.com>
Date:   Mon May 1 17:16:58 2017 -0700

    Update Description#getLink() to use the raw link URL, not "  (see $link)"
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=154782117

M	check_api/src/main/java/com/google/errorprone/matchers/Description.java

commit 39e530b1f33a84b35b5e8dbf903e1356136794e3
Author: cushon <cushon@google.com>
Date:   Mon May 1 16:41:17 2017 -0700

    Report narrowing compound assignment errors for long-to-int conversions
    
    Previously only 'deficient' types were handled, which excludes ints because
    (unlike short/byte/char) it's possible to perform arithmetic on ints instead
    of widening them to something else, but the distinction isn't actually
    important here. theInt += theLong` is bad for the same reason
    `theShort += theInt` is bad.
    
    RELNOTES: Report narrowing compound assignment errors for long-to-int conversions
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=154778076

M	core/src/main/java/com/google/errorprone/bugpatterns/NarrowingCompoundAssignment.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NarrowingCompoundAssignmentTest.java

commit 56fe15d6471433dbceb03b3f2bb4dda24b4b489c
Author: bhagwani <bhagwani@google.com>
Date:   Mon May 1 13:23:51 2017 -0700

    Make ProtocolBufferOrdinal check an ERROR
    
    RELNOTES: ProtocolBufferOrdinal is an ERROR now
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=154751556

M	core/src/main/java/com/google/errorprone/bugpatterns/ProtocolBufferOrdinal.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit e9a026e013027712c44562bc56a4b1b138860a9f
Author: zorzella <zorzella@google.com>
Date:   Mon May 1 11:12:59 2017 -0700

    Add a note on CheckReturnValue about package-info
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=154735216

M	docs/bugpattern/CheckReturnValue.md

commit 787170e18889790b4591e6e7ad475dc759bbdd52
Author: andrewrice <andrewrice@google.com>
Date:   Mon May 1 10:35:01 2017 -0700

    AssertEqualsArgumentOrderChecker: change category and update description
    
    See
    https://github.com/google/error-prone/commit/79e250e9b2778805be57f2f8cfb606566691e4e6
    
    RELNOTES: AssertEqualsArgumentOrderChecker: change category and update description
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=154729985

M	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/AssertEqualsArgumentOrderChecker.java

commit da68090140a7f519587de375f8b11a4831167ff1
Author: kmb <kmb@google.com>
Date:   Fri Apr 28 14:23:00 2017 -0700

    Update StaticOrDefaultInterfaceMethod documentation
    RELNOTES: n/a
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=154582226

M	core/src/main/java/com/google/errorprone/bugpatterns/android/StaticOrDefaultInterfaceMethod.java
A	docs/bugpattern/StaticOrDefaultInterfaceMethod.md
D	docs/bugpattern/android/StaticOrDefaultInterfaceMethod.md

commit 5c80d3d98f8243825a0f50d351278b37256e2ae4
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Thu Apr 27 21:12:22 2017 -0700

    Undo collateral damage from 716aa7b067

M	README.md

commit f8ce4b38266ab3133933c7e9d18a4a20282d07a5
Author: glorioso <glorioso@google.com>
Date:   Thu Apr 27 14:16:33 2017 -0700

    Change QualifierOnMethodWithoutProvides
    
    to be a much-lower scope checker: QualifierOrScopeOnInjectedMethod.
    
    Many instances of qualifiers on non-@Provides methods are when normal
    annotations (that don't need to be @Qualifiers) are used reflectively in
    some non-injection scenario, or are used in some weird inheritance
    hierarchy for Dagger modules.
    
    Instead, attempt to only check for instances where @Inject and some
    @Qualifier or @ScopeAnnotation annotation are used together on a method:
    here, the intent was clear (applying scope/qualifier to the type), but
    the mechanics were wrong.
    
    RELNOTES: Replace the disabled QualifierOnMethodWithoutProvides check
    with QualifierOrScopeOnInjectedMethod.
    
    MOE_MIGRATED_REVID=154468557

D	core/src/main/java/com/google/errorprone/bugpatterns/inject/QualifierOnMethodWithoutProvides.java
A	core/src/main/java/com/google/errorprone/bugpatterns/inject/QualifierOrScopeOnInjectMethod.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
D	core/src/test/java/com/google/errorprone/bugpatterns/inject/QualifierOnMethodWithoutProvidesTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/QualifierOrScopeOnInjectMethodTest.java

commit 23aef7214362db03e1e08c8c9b8a2e206f959404
Author: cushon <cushon@google.com>
Date:   Thu Apr 27 13:58:05 2017 -0700

    Supporting refactoring in the com.sun.source.util.Plugin
    
    Fixes #609
    
    RELNOTES: Supporting refactoring in the com.sun.source.util.Plugin
    
    MOE_MIGRATED_REVID=154465856

M	check_api/src/main/java/com/google/errorprone/BaseErrorProneJavaCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorProneJavacPlugin.java

commit 79e250e9b2778805be57f2f8cfb606566691e4e6
Author: andrewrice <andrewrice@google.com>
Date:   Thu Apr 27 13:25:07 2017 -0700

    Add checker for detecting argument swaps to assertEquals-like calls
    
    RELNOTES: Add checker for detecting argument swaps to assertEquals-like calls
    
    MOE_MIGRATED_REVID=154461612

A	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/AssertEqualsArgumentOrderChecker.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/argumentselectiondefects/AssertEqualsArgumentOrderCheckerTest.java

commit 716aa7b067595a8285e8b7ff0cc4e48108d9bdb5
Author: cushon <cushon@google.com>
Date:   Thu Apr 27 11:24:39 2017 -0700

    Avoid subclassing CompilationTask in BaseErrorProneJavaCompiler
    
    Instead, use a TaskListener to apply the refactoring before the
    compilation was about to end. This allows clients to depend on
    implementation details of JavacTaskImpl if they want to do so.
    
    Fixes #608
    
    MOE_MIGRATED_REVID=154446890

M	README.md
M	check_api/src/main/java/com/google/errorprone/BaseErrorProneJavaCompiler.java

commit 44a0b3573a52d48db09c2a0e8e953de1d22b01e6
Author: nickread <nickread@google.com>
Date:   Wed Apr 26 17:18:26 2017 -0700

    Fix slightly incorrect code sample: it's `hasMessageThat()`, not `hasMessage()`
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=154367370

M	docs/bugpattern/ExpectedExceptionChecker.md

commit 341b61c3cb22cf1c87eead96e952f34f8fa50038
Author: cushon <cushon@google.com>
Date:   Wed Apr 26 16:19:09 2017 -0700

    Remove a leftover print statement
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=154360176

M	check_api/src/main/java/com/google/errorprone/fixes/SuggestedFixes.java

commit e32a8b6447c225a83d1e47fd1fb23c8000643965
Author: glorioso <glorioso@google.com>
Date:   Wed Apr 26 13:27:27 2017 -0700

    Add java.net.URI to the WellKnownMutability list.
    
    RELNOTES: n/a
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=154336520

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/WellKnownMutability.java

commit 54439f1ddeda23a5cbaea53e2918454fdb63eeb2
Author: andrewrice <andrewrice@google.com>
Date:   Wed Apr 26 11:46:07 2017 -0700

    Add test for ArgumentSelectionDefectChecker ensuring parameter names are available
    
    RELNOTES: Add test for ArgumentSelectionDefectChecker ensuring parameter names
    are available
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=154324300

M	core/src/test/java/com/google/errorprone/bugpatterns/argumentselectiondefects/ArgumentSelectionDefectCheckerTest.java

commit 5ac140d5903e03354eb1061c71a2702d2e039985
Author: cushon <cushon@google.com>
Date:   Tue Apr 25 21:24:29 2017 -0700

    Make FutureReturnValueIgnored and LogicalAssignment warnings
    
    RELNOTES: Make FutureReturnValueIgnored and LogicalAssignment warnings
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=154258468

M	core/src/main/java/com/google/errorprone/bugpatterns/FutureReturnValueIgnored.java
M	core/src/main/java/com/google/errorprone/bugpatterns/LogicalAssignment.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit b717a498db87c153900298b5c97dc7ffbf21f302
Author: cushon <cushon@google.com>
Date:   Tue Apr 25 21:01:18 2017 -0700

    Regression test for NPE in ParameterMatcherImpl
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=154257268

M	core/src/test/java/com/google/errorprone/matchers/MethodMatchersTest.java

commit f36d617a967112b30a16e7581e7714ff7a3fbe5b
Author: cushon <cushon@google.com>
Date:   Tue Apr 25 19:02:20 2017 -0700

    Improve StaticQualifiedUsingInstance fix
    
    Don't suggest names that clash with names that are already in scope,
    and use simple names for fields that are in scope.
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=154251499

M	check_api/src/main/java/com/google/errorprone/fixes/SuggestedFix.java
M	check_api/src/main/java/com/google/errorprone/fixes/SuggestedFixes.java
M	check_api/src/main/java/com/google/errorprone/util/FindIdentifiers.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StaticQualifiedUsingExpression.java
M	core/src/test/java/com/google/errorprone/bugpatterns/StaticQualifiedUsingExpressionTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/StaticQualifiedUsingExpressionPositiveCase1.java

commit 88a6bc6736ade9a740cbf404ce845137365a3ba2
Author: Eric Anderson <ejona@google.com>
Date:   Wed Apr 26 14:40:37 2017 -0700

    Fix Markdown of links in README
    
    The []() and [][] styles of linking can't be separated by spaces/newline
    on GitHub. I kept the []()-style for short URLs, but for long URLs that
    caused line-wrapping issues I swapped to the [][] to make the text more
    readable.

M	README.md

commit 88da954155d4804eb72de7d878de11fa3900711b
Author: andrewrice <andrewrice@google.com>
Date:   Tue Apr 25 10:39:31 2017 -0700

    Apply offset to comment objects so they are relative to start of file and
    change tokenisation to run from the end of the method selector rather than
    the start of the method. This fixes a bug where we were including comments on
    chained method calls in later calls.
    
    RELNOTES: Apply offset to comment objects so they are relative to start of file
    and fix bug with comments on chained methods
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=154190449

M	check_api/src/main/java/com/google/errorprone/util/Commented.java
M	check_api/src/main/java/com/google/errorprone/util/Comments.java
M	core/src/test/java/com/google/errorprone/util/CommentsTest.java

commit dbc3e742bfc8cde12b8c61a52b445784a19bef3a
Author: glorioso <glorioso@google.com>
Date:   Mon Apr 24 18:32:31 2017 -0700

    Add utility method to BuiltInCheckerSuppliers to take an Iterable of checkers classes.
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=154126521

M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit 0edd81b1c1ce189d36cfcbd3fa66b9531b146123
Author: glorioso <glorioso@google.com>
Date:   Mon Apr 24 15:52:05 2017 -0700

    Add helper method to BugCheckerInfo to allow overriding of the default
    severity.
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=154109458

M	check_api/src/main/java/com/google/errorprone/BugCheckerInfo.java

commit e80f5eeabac63f572cb844a80c5f9aef539f3b59
Author: cushon <cushon@google.com>
Date:   Mon Apr 24 14:51:33 2017 -0700

    Expose a helper for binding GuardedBy strings to symbols
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=154100818

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedBySymbolResolver.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByUtils.java

commit 549d71e7ffc60c4a363a04291ffd190cbecd7fd8
Author: cushon <cushon@google.com>
Date:   Mon Apr 24 12:02:50 2017 -0700

    Update to javac9-r4023
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=154078281

M	check_api/src/main/java/com/google/errorprone/VisitorState.java
M	check_api/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/main/java/com/google/errorprone/refaster/Inliner.java
M	pom.xml

commit 4e00ee240127e1ce332309824f06eab36d763260
Author: andrewrice <andrewrice@google.com>
Date:   Sat Apr 22 20:47:54 2017 -0700

    Add test for ArgumentSelectionDefectChecker using NameInCommentHeuristic
    
    RELNOTES: Add test for ArgumentSelectionDefectChecker using
    NameInCommentHeuristic
    
    MOE_MIGRATED_REVID=153953003

M	core/src/test/java/com/google/errorprone/bugpatterns/argumentselectiondefects/ArgumentSelectionDefectCheckerTest.java

commit f14b9aaafeff66d956265d82478773a86d0f7658
Author: andrewrice <andrewrice@google.com>
Date:   Sat Apr 22 08:51:18 2017 -0700

    Add an explanation for ArgumentSelectionDefectChecker
    
    RELNOTES: Add an explanation for ArgumentSelectionDefectChecker
    
    MOE_MIGRATED_REVID=153929015

M	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/ArgumentSelectionDefectChecker.java

commit 3a715238072f5f14ee6ccc5b70bf6d900eda0e41
Author: cushon <cushon@google.com>
Date:   Fri Apr 21 18:15:31 2017 -0700

    Catch uses of Scanner in DefaultCharset
    
    Fixes #603
    
    RELNOTES: Catch uses of Scanner in DefaultCharset
    
    MOE_MIGRATED_REVID=153893987

M	core/src/main/java/com/google/errorprone/bugpatterns/DefaultCharset.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DefaultCharsetTest.java

commit 17fb76f3c115a4f6928ba1b1a5f8b04a699ab31f
Author: emmaborhanian <emmaborhanian@google.com>
Date:   Fri Apr 21 15:34:06 2017 -0700

    Add null-check for missing types in .withParameters(…)
    
    Used ASTHelpers.isSameType which performs both nullness check, and type
    erasure.
    
    RELNOTES: N/A
    
    MOE_MIGRATED_REVID=153879643

M	check_api/src/main/java/com/google/errorprone/matchers/method/ParameterMatcherImpl.java

commit 461c62d6091af684db9059271ac7dea0b3754a81
Author: sameb <sameb@google.com>
Date:   Fri Apr 21 12:39:34 2017 -0700

    Update UnnecessaryDefaultInEnumSwitch to cover more cases
    
    if the switch statement is exhaustive and the switch *can* complete
    normally, then try merge the default into the prior case or delete it
    entirely.
    
    RELNOTES: Update UnnecessaryDefaultInEnumSwitch to cover more cases: if
    the switch statement is exhaustive and the switch *can* complete
    normally, then try merge the default into the prior case or delete it
    entirely.
    
    MOE_MIGRATED_REVID=153858536

M	check_api/src/main/java/com/google/errorprone/util/Reachability.java
M	core/src/main/java/com/google/errorprone/bugpatterns/UnnecessaryDefaultInEnumSwitch.java
M	core/src/test/java/com/google/errorprone/bugpatterns/UnnecessaryDefaultInEnumSwitchTest.java

commit a2127627a884b3d047391137dafeeae6840cb86d
Author: andrewrice <andrewrice@google.com>
Date:   Fri Apr 21 11:54:25 2017 -0700

    Add second suggested fix to ArgumentSelectionDefectChecker
    
    which applies named comments to parameters.
    
    RELNOTES: Add named-comments fix to ArgumentSelectionDefectChecker
    
    MOE_MIGRATED_REVID=153853461

M	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/ArgumentSelectionDefectChecker.java
M	core/src/test/java/com/google/errorprone/bugpatterns/argumentselectiondefects/ArgumentSelectionDefectCheckerTest.java

commit 6efcf3a1a25b5ee082482798bc27203cb0671df8
Author: andrewrice <andrewrice@google.com>
Date:   Fri Apr 21 11:06:36 2017 -0700

    Extract out the comment matching into a separate class
    
    so I can reuse it in the NamedParameterChecker - the two need to agree
    
    MOE_MIGRATED_REVID=153847070

M	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/NameInCommentHeuristic.java
A	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/NamedParameterComment.java
M	core/src/test/java/com/google/errorprone/bugpatterns/argumentselectiondefects/NameInCommentHeuristicTest.java

commit 0c4286c74399b414038e0d3119f851632c37d1cc
Author: cushon <cushon@google.com>
Date:   Thu Apr 20 16:03:33 2017 -0700

    Whitelist ExecutorCompletionService from FutureReturnValueIgnored
    
    RELNOTES: Whitelist ExecutorCompletionService from FutureReturnValueIgnored
    
    MOE_MIGRATED_REVID=153769345

M	core/src/main/java/com/google/errorprone/bugpatterns/FutureReturnValueIgnored.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/FutureReturnValueIgnoredNegativeCases.java

commit fa5d765ea652783f67a66420dec4d3c449969f2f
Author: andrewrice <andrewrice@google.com>
Date:   Thu Apr 20 12:59:52 2017 -0700

    Remove unused test data.
    
    MOE_MIGRATED_REVID=153745763

D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArgumentParameterSwapNegativeCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArgumentParameterSwapPositiveCases.java

commit e9cb35ea75e5ee333e8ca6c0d4ffbf8ddf59d37d
Author: andrewrice <andrewrice@google.com>
Date:   Wed Apr 19 12:43:54 2017 -0700

    Remove obsolete ArgumentParameterMismatch, ArgumentParameterSwap and supporting classes
    
    RELNOTES: Remove obsolete ArgumentParameterMismatch, ArgumentParameterSwap and
    supporting classes
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=153620790

D	core/src/main/java/com/google/errorprone/bugpatterns/AbstractArgumentParameterChecker.java
D	core/src/main/java/com/google/errorprone/bugpatterns/ArgumentParameterMismatch.java
D	core/src/main/java/com/google/errorprone/bugpatterns/ArgumentParameterSimilarityMetrics.java
D	core/src/main/java/com/google/errorprone/bugpatterns/ArgumentParameterSwap.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
D	core/src/test/java/com/google/errorprone/bugpatterns/ArgumentParameterMismatchTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/ArgumentParameterSimilarityMetricsTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/ArgumentParameterSwapTest.java

commit 2ecfbd1e90db43dc62576cd0a5f850003f5cccab
Author: andrewrice <andrewrice@google.com>
Date:   Wed Apr 19 08:47:41 2017 -0700

    Fix CreatesDuplicateCallHeuristic
    
    to distinguish between calls with a different constant argument
    (previously it would consider them all duplicates)
    
    RELNOTES: Fix CreatesDuplicateCallHeuristic to distinguish between calls with a
    different constant
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=153591333

M	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/CreatesDuplicateCallHeuristic.java
M	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/Parameter.java
M	core/src/test/java/com/google/errorprone/bugpatterns/argumentselectiondefects/CreatesDuplicateCallHeuristicTest.java

commit 8f8787b9ec65671e0d1f98752f8de4e811d833e0
Author: andrewrice <andrewrice@google.com>
Date:   Tue Apr 18 14:53:38 2017 -0700

    Remove double negative from PenaltyThresholdHeuristic
    
    add some tests for it. Also, added a couple of helper methods for
    summing the total costs to Changes which I'm using in multiple places
    now.
    
    RELNOTES: Tidy PenaltyThresholdHeuristic and add tests
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=153514788

M	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/Changes.java
M	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/PenaltyThresholdHeuristic.java
M	core/src/test/java/com/google/errorprone/bugpatterns/argumentselectiondefects/ArgumentSelectionDefectCheckerTest.java

commit 2f0e304824c9f2b486935fcee08f5552dd177b87
Author: andrewrice <andrewrice@google.com>
Date:   Tue Apr 18 12:18:41 2017 -0700

    Refactor ArgumentSelectionDefectChecker to pass a ParameterPair to the distance function instead of a string and add the ability for Parameter to identify compile time constants.
    
    RELNOTES: Change signature for distance functions in ArgumentSelectionDefectChecker
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=153493920

M	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/ArgumentSelectionDefectChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/Parameter.java
M	core/src/test/java/com/google/errorprone/bugpatterns/argumentselectiondefects/ArgumentSelectionDefectCheckerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/argumentselectiondefects/ParameterTest.java

commit 6bb27e5a41c92aed2f805c5d614ca93ff051bc12
Author: andrewrice <andrewrice@google.com>
Date:   Tue Apr 18 11:44:57 2017 -0700

    Add -XDsave-parameter-names to CompilationTestHelper default args
    
    RELNOTES: Add -XDsave-parameter-names to CompilationTestHelper default args
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=153489504

M	test_helpers/src/main/java/com/google/errorprone/CompilationTestHelper.java

commit 575d0ddf33b3585884779e166dff5c7bdd59e271
Author: cushon <cushon@google.com>
Date:   Mon Apr 17 16:33:25 2017 -0700

    Externalize compilesWithFix
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=153404602

M	check_api/src/main/java/com/google/errorprone/fixes/SuggestedFixes.java
M	core/src/test/java/com/google/errorprone/fixes/SuggestedFixesTest.java

commit def978dc9a69ebede8779d2ccaa782fcecf806ab
Author: andrewrice <andrewrice@google.com>
Date:   Mon Apr 17 16:02:09 2017 -0700

    Enable ArgumentSelectionDefectChecker in errorprone (as a warning) and tricorder
    
    RELNOTES: Enable ArgumentSelectionDefectChecker as a warning
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=153400808

M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit 5d4267f13fd4617eff22aacf8225c4da04a05673
Author: sameb <sameb@google.com>
Date:   Mon Apr 17 14:59:41 2017 -0700

    Preserve comments between the "default:" and the statements within it when moving the contents of the default to outside the switch statement.
    
    RELNOTES: Preserve comments between the "default:" and the statements within it when moving the contents of the default to outside the switch statement.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=153392980

M	core/src/main/java/com/google/errorprone/bugpatterns/UnnecessaryDefaultInEnumSwitch.java
M	core/src/test/java/com/google/errorprone/bugpatterns/UnnecessaryDefaultInEnumSwitchTest.java

commit 68db71dd0a6ec6f453959ec8ed0bc13127710e9b
Author: andrewrice <andrewrice@google.com>
Date:   Mon Apr 17 14:37:08 2017 -0700

    Comments parsing now handles the case when we can't find an end position for a node
    
    RELNOTES: Comments parsing now handles the case when we can't find an end position for a node
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=153389908

M	check_api/src/main/java/com/google/errorprone/util/Comments.java
M	core/src/test/java/com/google/errorprone/util/CommentsTest.java

commit fa8071fb2046e9c5c27ee924347621e3069a2ed7
Author: glorioso <glorioso@google.com>
Date:   Fri Apr 14 14:00:27 2017 -0700

    Update ProtocolBufferOrdinal to not suggest the replacement of getNumber(), as
    the semantics are different enough to be problematic.
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=153203704

M	core/src/main/java/com/google/errorprone/bugpatterns/ProtocolBufferOrdinal.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ProtocolBufferOrdinalPositiveCases.java
A	docs/bugpattern/ProtocolBufferOrdinal.md

commit 9b725310a6bb7e3036e74631c19c308825bf7efb
Author: glorioso <glorioso@google.com>
Date:   Fri Apr 14 12:08:04 2017 -0700

    Use Signatures.prettyType to improve the error message on
    EqualsIncompatibleType.
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=153192274

M	core/src/main/java/com/google/errorprone/bugpatterns/EqualsIncompatibleType.java
M	core/src/test/java/com/google/errorprone/bugpatterns/EqualsIncompatibleTypeTest.java

commit d30ea48320cd3c7eedc26fcd1229c348cb2f1204
Author: andrewrice <andrewrice@google.com>
Date:   Thu Apr 13 16:39:19 2017 -0700

    Add ArgumentSelectionDefectChecker
    
    This checker tries to detect errors arising from accidentally swapping
    arguments to method calls.
    
    RELNOTES: Add ArgumentSelectionDefectChecker
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=153122628

A	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/ArgumentSelectionDefectChecker.java
A	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/Changes.java
A	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/Costs.java
A	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/CreatesDuplicateCallHeuristic.java
A	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/EnclosedByReverseHeuristic.java
A	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/Heuristic.java
A	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/LowInformationNameHeuristic.java
A	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/NameInCommentHeuristic.java
A	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/Parameter.java
A	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/ParameterPair.java
A	core/src/main/java/com/google/errorprone/bugpatterns/argumentselectiondefects/PenaltyThresholdHeuristic.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/argumentselectiondefects/ArgumentSelectionDefectCheckerTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/argumentselectiondefects/CreatesDuplicateCallHeuristicTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/argumentselectiondefects/EnclosedByReverseHeuristicTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/argumentselectiondefects/NameInCommentHeuristicTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/argumentselectiondefects/ParameterTest.java

commit 616cd7af91a50308ab504fdfda9c67dd885f296b
Author: cushon <cushon@google.com>
Date:   Thu Apr 13 15:28:11 2017 -0700

    Remove an obsolete work-around
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=153114431

M	check_api/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BadShiftAmount.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ComparisonOutOfRange.java
M	core/src/test/java/com/google/errorprone/util/ASTHelpersTest.java

commit ace007f6fc45bfa9ce5bb236e1183797400bc804
Author: andrewrice <andrewrice@google.com>
Date:   Thu Apr 13 12:12:14 2017 -0700

    Add NamingConventions.convertToLowerUnderscore for normalising names
    
    RELNOTES: Add NamingConventions.convertToLowerUnderscore for normalising names
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=153089216

M	check_api/src/main/java/com/google/errorprone/names/NamingConventions.java
M	check_api/src/test/java/com/google/errorprone/names/NamingConventionsTest.java

commit e98f112e85779d51cc5fad6cdbfb7d70708cbefe
Author: cushon <cushon@google.com>
Date:   Thu Apr 13 10:55:04 2017 -0700

    Use built-in enclosing class and package methods
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=153079032

M	check_api/src/main/java/com/google/errorprone/util/ASTHelpers.java

commit 831df35726ee8d38fd197e2acdae6609468f46ba
Author: glorioso <glorioso@google.com>
Date:   Wed Apr 12 17:49:25 2017 -0700

    Fix crash when ExpectedExceptionChecker finds a thrown.expect(...) followed only by assertion-like methods.
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=153011866

M	core/src/main/java/com/google/errorprone/bugpatterns/ExpectedExceptionChecker.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ExpectedExceptionCheckerTest.java

commit f5d7aa286ba8ca45a244cdbf48e558ee00487c54
Author: cushon <cushon@google.com>
Date:   Wed Apr 12 12:51:04 2017 -0700

    Avoid passing ImmutableList across classloader boundaries
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=152974518

M	check_api/src/main/java/com/google/errorprone/matchers/ChildMultiMatcher.java
M	check_api/src/main/java/com/google/errorprone/matchers/MultiMatcher.java

commit bc0c6094db089f33ae10c160fa9eb59f3c03c9a5
Author: andrewrice <andrewrice@google.com>
Date:   Wed Apr 12 10:28:18 2017 -0700

    Avoid NPE in ASTHelpers.getResultType when getType returns null
    
    RELNOTES: Avoid NPE in ASTHelpers.getResultType when getType returns null
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=152954823

M	check_api/src/main/java/com/google/errorprone/util/ASTHelpers.java

commit 463eb661f97d83416c2b30e1232e22a09268694f
Author: andrewrice <andrewrice@google.com>
Date:   Tue Apr 11 17:41:08 2017 -0700

    Add static method to extract textual contents of comment
    
    RELNOTES: Add static method to extract textual contents of comment
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=152885302

M	check_api/src/main/java/com/google/errorprone/util/Comments.java
M	core/src/test/java/com/google/errorprone/util/CommentsTest.java

commit 0980adc9d46515d1c1e2125514d6b723cb1959b9
Author: andrewrice <andrewrice@google.com>
Date:   Tue Apr 11 17:02:06 2017 -0700

    Change getResultType to return null when all options are null rather than
    throwing an NPE
    
    RELNOTES: Change ASTHelpers.getResultType to return null rather than throw
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=152880654

M	check_api/src/main/java/com/google/errorprone/util/ASTHelpers.java

commit 2f993a7bc000c556e2c7fd9ce5f09a85a828bf02
Author: epmjohnston <epmjohnston@google.com>
Date:   Tue Apr 11 16:34:05 2017 -0700

    Keep helper methods from being flagged as potential JUnit4 tests by scanning enclosing class to see if the method is called elsewhere.
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=152877438

M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TestNotRun.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4TestNotRunTest.java

commit 51e8c0a824b32dbfc8824c6cfb79ebacad84ea90
Author: cushon <cushon@google.com>
Date:   Mon Apr 10 23:39:07 2017 -0700

    New check for assignment expressions in loop conditions
    
    `while (x == y) {}` should be `while ((x = y)) {}` or `while (x == y) {}`.
    
    RELNOTES: New check for assignment expressions in loop conditions
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=152779509

A	core/src/main/java/com/google/errorprone/bugpatterns/LogicalAssignment.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/LogicalAssignmentTest.java
A	docs/bugpattern/LogicalAssignment.md

commit b100dce152f56915e6d92edeccd718e6aa9410c3
Author: dorir <dorir@google.com>
Date:   Mon Apr 10 15:57:06 2017 -0700

    MutableConstantField: fix references to Multimap and Multiset.
    
    RELNOTES: MutableConstantField: fix references to Multimap and Multiset.
    
    MOE_MIGRATED_REVID=152747112

M	core/src/main/java/com/google/errorprone/bugpatterns/MutableConstantField.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MutableConstantFieldTest.java

commit b10649ec9fab27ebe4c07b48e0abf60ebb132568
Author: cushon <cushon@google.com>
Date:   Mon Apr 10 12:59:19 2017 -0700

    Disable FutureReturnValueIgnored in open source
    
    MOE_MIGRATED_REVID=152722641

M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit db8dfe06ebe50f4b5b2c99062f62b8fd2e5c59f7
Author: jasonlong <jasonlong@google.com>
Date:   Mon Apr 10 12:15:07 2017 -0700

    Make FragmentNotInstantiable accept additional Fragment classes.
    
    RELNOTES: FragmentNotInstantiable now accepts additional Fragment
    classes.
    
    MOE_MIGRATED_REVID=152717561

M	core/src/main/java/com/google/errorprone/bugpatterns/android/FragmentNotInstantiable.java
M	core/src/test/java/com/google/errorprone/bugpatterns/android/FragmentNotInstantiableTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/android/testdata/CustomFragment.java
A	core/src/test/java/com/google/errorprone/bugpatterns/android/testdata/CustomFragmentNotInstantiableNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/android/testdata/CustomFragmentNotInstantiablePositiveCases.java

commit 7668058d72276d25608e06a745aa725df3d98c3e
Author: cushon <cushon@google.com>
Date:   Mon Apr 10 11:57:24 2017 -0700

    Improve MissingDefault suggested fix
    
    When adding default cases, insert a break after the previous case unless
    it definitely completes. This avoids introducing a fall-through to the
    newly added default.
    
    RELNOTES: Improve MissingDefault suggested fix
    
    MOE_MIGRATED_REVID=152715252

M	README.md
M	core/src/main/java/com/google/errorprone/bugpatterns/MissingDefault.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MissingDefaultTest.java

commit 974fb688e380b5af1444413d840d4fcaa8999670
Author: glorioso <glorioso@google.com>
Date:   Thu Apr 6 16:35:10 2017 -0700

    Update BindingToUnqualifiedType documentation
    
    fixing mistake in bindConstant()
    
    MOE_MIGRATED_REVID=152444368

M	docs/bugpattern/BindingToUnqualifiedCommonType.md

commit 917a3f9525afa84cbcfe54fff1bbf1f7802bdf68
Author: dorir <dorir@google.com>
Date:   Wed Apr 5 19:28:21 2017 -0700

    MutableConstantField: choose the new LHS type
    
    according to the original LHS type if possible, otherwise, use the RHS
    type.
    
    Before:
    "static final Map<String, String> FOO = ImmutableBiMap.of();" ->
    "static final ImmutableBiMap<String, String> FOO = ImmutableBiMap.of();"
    
    After:
    "static final Map<String, String> FOO = ImmutableBiMap.of();" ->
    "static final ImmutableMap<String, String> FOO = ImmutableBiMap.of();"
    
    RELNOTES: MutableConstantField: choose the new LHS type according to the
    original LHS type if possible, otherwise, use the RHS type.
    
    MOE_MIGRATED_REVID=152337523

M	core/src/main/java/com/google/errorprone/bugpatterns/MutableConstantField.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MutableConstantFieldTest.java

commit 62e04b80ccfd34a816db1185411ddb941891eb91
Author: cushon <cushon@google.com>
Date:   Wed Apr 5 14:12:17 2017 -0700

    Handle method references in getSymbol/getReceiver
    
    MOE_MIGRATED_REVID=152303388

M	check_api/src/main/java/com/google/errorprone/util/ASTHelpers.java

commit 61304a55f50f1a0d14efe196b4b6055fb18dc3c0
Author: cushon <cushon@google.com>
Date:   Wed Apr 5 09:47:56 2017 -0700

    Ease of testing rarely matters for private static methods
    
    MOE_MIGRATED_REVID=152268697

M	docs/bugpattern/MethodCanBeStatic.md

commit 217a703db5d1455f23ad6cc2f7d6842feca0256e
Author: cushon <cushon@google.com>
Date:   Tue Apr 4 23:01:57 2017 -0700

    Ignore ForkJoinTask#fork in FutureReturnValueIgnored
    
    RELNOTES: Ignore ForkJoinTask#fork in FutureReturnValueIgnored
    
    MOE_MIGRATED_REVID=152223460

M	core/src/main/java/com/google/errorprone/bugpatterns/FutureReturnValueIgnored.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/FutureReturnValueIgnoredNegativeCases.java

commit 3e2c3ae850f7996218102cb9b105a22c467444e8
Author: glorioso <glorioso@google.com>
Date:   Tue Apr 4 14:20:18 2017 -0700

    Fix refactoring tests in TypeParameterShadowingTest that weren't firing.
    
    MOE_MIGRATED_REVID=152179157

M	core/src/test/java/com/google/errorprone/bugpatterns/TypeParameterShadowingTest.java

commit 90a792107506aeb67b2bc8a091bbc8b960eeafab
Author: paulduffin <paulduffin@google.com>
Date:   Tue Apr 4 09:11:46 2017 -0700

    Add -XepImportOrder:<order> option
    
    At the moment it can accept two values, static-first (the default) and
    static-last.
    
    RELNOTES: Add -XepImportOrder:<order> to control the import order when patching
    
    MOE_MIGRATED_REVID=152138760

M	check_api/src/main/java/com/google/errorprone/BaseErrorProneJavaCompiler.java
M	check_api/src/main/java/com/google/errorprone/ErrorProneOptions.java
A	check_api/src/main/java/com/google/errorprone/ImportOrderParser.java
M	check_api/src/main/java/com/google/errorprone/RefactoringCollection.java
A	check_api/src/main/java/com/google/errorprone/apply/BasicImportOrganizer.java
M	check_api/src/main/java/com/google/errorprone/apply/DescriptionBasedDiff.java
A	check_api/src/main/java/com/google/errorprone/apply/ImportOrganizer.java
M	check_api/src/main/java/com/google/errorprone/apply/ImportStatements.java
M	check_api/src/test/java/com/google/errorprone/ErrorProneOptionsTest.java
M	check_api/src/test/java/com/google/errorprone/apply/ImportStatementsTest.java
M	core/src/test/java/com/google/errorprone/refaster/CodeTransformerTestHelper.java
M	core/src/test/java/com/google/errorprone/refaster/DescriptionBasedDiffTest.java
M	test_helpers/src/main/java/com/google/errorprone/BugCheckerRefactoringTestHelper.java
M	test_helpers/src/test/java/com/google/errorprone/BugCheckerRefactoringTestHelperTest.java

commit 760490ac24d3e0509b6d98f93c331ccda0b8ea98
Author: epmjohnston <epmjohnston@google.com>
Date:   Mon Apr 3 13:35:32 2017 -0700

    Add integration test to ensure -XepDisableAllChecks
    
    can be overridden by -Xep:CheckName:SEVERITY flags for plugin checks.
    Prompted by #591.
    
    MOE_MIGRATED_REVID=152050617

M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java

commit 264fa8042d1c68b25b93e38dddefba8e8bc8eeae
Author: vmaverick <vmaverick@google.com>
Date:   Fri Mar 31 15:56:13 2017 -0700

    Discourage constructors where the instance escapes
    
    Checkers for two closely related bug patterns: invoking an overridable
    method, or explicitly passing 'this' as a parameter, in a constructor or
    other context where 'this' is not yet completely constructed.
    
    RELNOTES: New experimental checks ConstructorLeaksThis, ConstructorInvokesOverridable
    
    MOE_MIGRATED_REVID=151878833

A	core/src/main/java/com/google/errorprone/bugpatterns/ConstructorInvokesOverridable.java
A	core/src/main/java/com/google/errorprone/bugpatterns/ConstructorLeakChecker.java
A	core/src/main/java/com/google/errorprone/bugpatterns/ConstructorLeaksThis.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/ConstructorInvokesOverridableTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/ConstructorLeaksThisTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ConstructorInvokesOverridableNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ConstructorInvokesOverridablePositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ConstructorLeaksThisNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ConstructorLeaksThisPositiveCases.java
A	docs/bugpattern/ConstructorInvokesOverridable.md
A	docs/bugpattern/ConstructorLeaksThis.md

commit 1f2be1958f1620e7a672a201fcf9be231d29b0b8
Author: glorioso <glorioso@google.com>
Date:   Fri Mar 31 14:38:07 2017 -0700

    Clarify and affirm that all binary ops between
    
    assignable deficient types are OK in NarrowingCompoundAssignment (even
    though they may overflow, int += int can overflow as well)
    
    MOE_MIGRATED_REVID=151869348

M	core/src/main/java/com/google/errorprone/bugpatterns/NarrowingCompoundAssignment.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NarrowingCompoundAssignmentTest.java

commit fec33a60a3ca910197c51db95776cf01389e5d8e
Author: glorioso <glorioso@google.com>
Date:   Fri Mar 31 11:26:31 2017 -0700

    Fixup NarrowingCompooundAssignment docs to include code ticks
    
    MOE_MIGRATED_REVID=151846398

M	docs/bugpattern/NarrowingCompoundAssignment.md

commit 456a32c5e97096d2ae58ad332d6b4a235e8d0d63
Author: dorir <dorir@google.com>
Date:   Fri Mar 31 10:44:11 2017 -0700

    MutableConstantField: do not suggest a fix
    
    when the declaration type is already immutabe.
    
    Fixes the case where a fix should not be suggested for "static final
    ImmutableMultimap<String, String> FOO = ImmutableListMultimap.of();".
    
    RELNOTES: MutableConstantField: do not suggest a fix when the
    declaration type is already immutabe.
    
    MOE_MIGRATED_REVID=151840156

M	core/src/main/java/com/google/errorprone/bugpatterns/MutableConstantField.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MutableConstantFieldTest.java

commit 2a6b3a38ff33e6654f8432af59cc343e9adc27c9
Author: cushon <cushon@google.com>
Date:   Thu Mar 30 21:53:00 2017 -0700

    Remove misguided varargs handling from withParameters() method matchers
    
    The matchers only look at parameter declarations, not arguments, so
    there's no need to special-case varargs and the length of the actual and
    expected lists will always be the same.
    
    MOE_MIGRATED_REVID=151788775

M	check_api/src/main/java/com/google/errorprone/matchers/method/ParameterMatcherImpl.java

commit b11c5e6f071823929c6b16181e381eedbbc7a3b4
Author: cushon <cushon@google.com>
Date:   Thu Mar 30 20:18:27 2017 -0700

    Special-case serialization methods in MethodCanBeStatic
    
    MOE_MIGRATED_REVID=151784028

M	core/src/main/java/com/google/errorprone/bugpatterns/MethodCanBeStatic.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MethodCanBeStaticTest.java

commit b2ce535a59c9aed8f1f2097414350bd7ca0d2e17
Author: cushon <cushon@google.com>
Date:   Thu Mar 30 17:08:15 2017 -0700

    Add a test for MethodCanBeStatic
    
    to demonstrate that it understands accesses of type variables.
    
    MOE_MIGRATED_REVID=151770323

M	core/src/test/java/com/google/errorprone/bugpatterns/MethodCanBeStaticTest.java

commit 646cb02658c5198b0b9c584af97b6642915f8391
Author: glorioso <glorioso@google.com>
Date:   Thu Mar 30 15:48:37 2017 -0700

    Update the behavior of -XepAllDisabledChecksAsWarnings
    
    to actually override check severity to WARNING, and make it contextually
    aware of other flags (e.g.: if you disable a check manually, then add
    the flag, then disable it again, it should work).
    
    Fixes #486
    
    RELNOTES: Fix behavior of -XepAllDisabledChecksAsWarnings
    
    MOE_MIGRATED_REVID=151761480

M	check_api/src/main/java/com/google/errorprone/ErrorProneOptions.java
M	check_api/src/main/java/com/google/errorprone/scanner/ScannerSupplier.java
M	check_api/src/test/java/com/google/errorprone/ErrorProneOptionsTest.java
M	core/src/test/java/com/google/errorprone/scanner/ScannerSupplierTest.java

commit 803e28517a5f61e803900790565867561e44bb4e
Author: bhagwani <bhagwani@google.com>
Date:   Wed Mar 29 17:14:31 2017 -0700

    Add a check to ensure even number of args to containsExactly() to MapSubject
    
    MOE_MIGRATED_REVID=151647450

A	core/src/main/java/com/google/errorprone/bugpatterns/ShouldHaveEvenArgs.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/ShouldHaveEvenArgsTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ShouldHaveEvenArgsNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ShouldHaveEvenArgsPositiveCases.java
M	pom.xml

commit d0493a04a0b91f95fe18dad0d3dd38fe57a5eee2
Author: hanuszczak <hanuszczak@google.com>
Date:   Wed Mar 29 13:42:26 2017 -0700

    Fix handling of the `void` type in the `Matchers` class.
    
    MOE_MIGRATED_REVID=151619572

M	check_api/src/main/java/com/google/errorprone/VisitorState.java
M	check_api/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/test/java/com/google/errorprone/matchers/MatchersTest.java

commit 3155825082584a381a8018f44086202b22157843
Author: glorioso <glorioso@google.com>
Date:   Wed Mar 29 10:17:25 2017 -0700

    Don't tag BindingToUnqualifiedCommonType instances
    
    in JUnit test cases, and expand the scope of ASTHelpers.isJUnitTestCode
    to match all code inside JUnit4 classes.
    
    RELNOTES: BindingToUnqualifiedCommonType won't flag bindings present inside JUnit test contexts.
    
    MOE_MIGRATED_REVID=151590497

M	check_api/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/BindingToUnqualifiedCommonType.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/testdata/BindingToUnqualifiedCommonTypeNegativeCases.java

commit ce96268a2c632bd001bd8ef0b2a9c2175663c9ba
Author: andrewrice <andrewrice@google.com>
Date:   Mon Mar 27 15:56:28 2017 -0700

    Avoid a NullPointerException in ASTHelpers.getSymbol
    
    Occasionally a NullPointerException is thrown when (presumably) a compile error means that the type of a TypeParameterTree cannot be resolved.
    
    RELNOTES: Avoid a NullPointerException in ASTHelpers.getSymbol
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=151383896

M	check_api/src/main/java/com/google/errorprone/util/ASTHelpers.java

commit e7d97f9e17eafb1239d3f2f672aca8ad12714294
Author: andrewrice <andrewrice@google.com>
Date:   Mon Mar 27 15:31:23 2017 -0700

    Repackage NeedlemanWunschEditDistance into Error Prone
    
    RELNOTES: Add NeedlmanWunschEditDistance
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=151380384

A	check_api/src/main/java/com/google/errorprone/names/NeedlemanWunschEditDistance.java
A	check_api/src/test/java/com/google/errorprone/names/NeedlemanWunschEditDistanceTest.java

commit 8774176eaa28ce7e9dea7fb8c935e0dece00032c
Author: andrewrice <andrewrice@google.com>
Date:   Mon Mar 27 14:33:49 2017 -0700

    Rename EditDistance to LevensteinEditDistance and repackage name utilities
    
    This is in preparation for including some additional edit distance algorithms
    
    RELNOTES: Rename EditDistance to LevensteinEditDistance and repackage name utilities
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=151371974

A	check_api/src/main/java/com/google/errorprone/names/LevenshteinEditDistance.java
A	check_api/src/main/java/com/google/errorprone/names/NamingConventions.java
A	check_api/src/main/java/com/google/errorprone/names/TermEditDistance.java
D	check_api/src/main/java/com/google/errorprone/util/EditDistance.java
D	check_api/src/main/java/com/google/errorprone/util/NamingConventions.java
D	check_api/src/main/java/com/google/errorprone/util/TermEditDistance.java
A	check_api/src/test/java/com/google/errorprone/names/NamingConventionsTest.java
A	check_api/src/test/java/com/google/errorprone/names/TermEditDistanceTest.java
D	check_api/src/test/java/com/google/errorprone/util/NamingConventionsTest.java
D	check_api/src/test/java/com/google/errorprone/util/TermEditDistanceTest.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ModifyingCollectionWithItself.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfAssignment.java

commit 7ac2c98fbe4c1ec49494c97ce56c1d2e3b790f27
Author: andrewrice <andrewrice@google.com>
Date:   Mon Mar 27 14:11:25 2017 -0700

    Fix a couple of edge cases in the comment parsing
    
    RELNOTES: Fix a couple of edge cases in the comment parsing
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=151368764

M	check_api/src/main/java/com/google/errorprone/util/Comments.java
M	core/src/test/java/com/google/errorprone/util/CommentsTest.java

commit c0cff920e1237ce3e67926cd93b8cac8c3ae9a5d
Author: glorioso <glorioso@google.com>
Date:   Fri Mar 24 16:40:04 2017 -0700

    Update ImmutableEnumChecker to check all supertypes of enum classes, not just interfaces implemented.
    
    RELNOTES: Update ImmutableEnumChecker to check all supertypes of enum classes.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=151187987

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableEnumChecker.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableEnumCheckerTest.java

commit 29caeabef707f4704748cf60c6ec879c1cb295b9
Author: hanuszczak <hanuszczak@google.com>
Date:   Fri Mar 24 15:52:13 2017 -0700

    Add a checker to warn about ungrouped overloads.
    
    RELNOTES: Add a checker to warn about ungrouped overloads.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=151182561

A	core/src/main/java/com/google/errorprone/bugpatterns/UngroupedOverloads.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/UngroupedOverloadsTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/UngroupedOverloadsNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/UngroupedOverloadsPositiveCasesCovering.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/UngroupedOverloadsPositiveCasesInterleaved.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/UngroupedOverloadsPositiveCasesMultiple.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/UngroupedOverloadsPositiveCasesSingle.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/UngroupedOverloadsRefactoringComments.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/UngroupedOverloadsRefactoringComments_expected.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/UngroupedOverloadsRefactoringInterleaved.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/UngroupedOverloadsRefactoringInterleaved_expected.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/UngroupedOverloadsRefactoringMultiple.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/UngroupedOverloadsRefactoringMultiple_expected.java

commit e99e110be95b6a5e96a42f08c068793cef3b8d1d
Author: cushon <cushon@google.com>
Date:   Fri Mar 24 12:35:56 2017 -0700

    ExpectedExceptionRefactoring shouldn't crash if there are no statements that could throw
    
    e.g.
    
    try {
      doSomething();
    } finally {
      thrown.expect(IOException.class);
    }
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=151157362

M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractExpectedExceptionChecker.java

commit b958ae900e0ad70f8b9718d1fb3512279aac0da0
Author: cushon <cushon@google.com>
Date:   Fri Mar 24 10:39:04 2017 -0700

    Don't report empty descriptions
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=151142078

M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractExpectedExceptionChecker.java

commit 3264bf840f490fca9e320f32165fbd2220abc36a
Author: awturner <awturner@google.com>
Date:   Fri Mar 24 09:47:09 2017 -0700

    Prevent MethodCanBeStatic false positive on enums, anonymous and local classes.
    
    RELNOTES: None.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=151135707

M	core/src/main/java/com/google/errorprone/bugpatterns/MethodCanBeStatic.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MethodCanBeStaticTest.java

commit e4ce84e911ad461c23de753f528761b4e98432b4
Author: cushon <cushon@google.com>
Date:   Thu Mar 23 18:13:38 2017 -0700

    Scan into method bodies for ExpectedException uses
    
    instead of only checking the top-level.
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=151080598

M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractExpectedExceptionChecker.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ExpectedExceptionCheckerTest.java

commit 11e3248aed7fa4a1b432a9bb0bfaf0b298cb8033
Author: andrewrice <andrewrice@google.com>
Date:   Thu Mar 23 18:03:01 2017 -0700

    Add utility for attaching comments to arguments in method invocations
    
    RELNOTES: Add utility for attaching comments to arguments in method invocations
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=151079726

A	check_api/src/main/java/com/google/errorprone/util/Commented.java
A	check_api/src/main/java/com/google/errorprone/util/Comments.java
A	core/src/test/java/com/google/errorprone/util/CommentsTest.java

commit a2fb70dcf9fe2cd8b559266fe665880c73017a43
Author: andrewrice <andrewrice@google.com>
Date:   Thu Mar 23 14:17:11 2017 -0700

    Add TermEditDistance to find the term-wise edit distance between names
    
    RELNOTES: Add TermEditDistance to find the term-wise edit distance
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=151052766

M	check_api/pom.xml
M	check_api/src/main/java/com/google/errorprone/util/EditDistance.java
A	check_api/src/main/java/com/google/errorprone/util/TermEditDistance.java
A	check_api/src/test/java/com/google/errorprone/util/TermEditDistanceTest.java

commit 105dc9370358087ae7808c478c7530a79640292b
Author: cushon <cushon@google.com>
Date:   Thu Mar 23 13:09:10 2017 -0700

    Ignore @MustBeClosed invocations for mocking or exception testing
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=151043474

M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractMustBeClosedChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractReturnValueIgnored.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/MustBeClosedCheckerNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/MustBeClosedCheckerPositiveCases.java

commit 7aada138d2e79409295e723bd6504ebcf27b830d
Author: andrewrice <andrewrice@google.com>
Date:   Thu Mar 23 11:44:03 2017 -0700

    Add NamingConventions class to hold a splitToLowercaseTerms method
    
    The upcoming check for detecting accidentally permuted arguments needs to split
    identifiers into terms. Its needed both for heuristically finding a name from
    an expression tree (e.g. remove the first term from the method name if its
    'get') and also for computing edit distances between names.
    
    RELNOTES: Add splitToLowercaseTerms to split Java identifiers
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=151032960

A	check_api/src/main/java/com/google/errorprone/util/NamingConventions.java
A	check_api/src/test/java/com/google/errorprone/util/NamingConventionsTest.java

commit 45576630d9b63d3842e0d108d922337385f0296f
Author: dorir <dorir@google.com>
Date:   Thu Mar 23 11:27:11 2017 -0700

    MutableConstantField: replace declaration type regardless of the original declaration type.
    
    RELNOTES: Suggest a fix on *any* constant which is initialized with an immutable collection and doesn't use the immutable collection in its declaration type. So "static final Iterable<String> FOO = ImmutableList.of();" will become "static final ImmutableList<String> FOO = ImmutableList.of();".
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=151030307

M	core/src/main/java/com/google/errorprone/bugpatterns/MutableConstantField.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MutableConstantFieldTest.java

commit 8df4bc9f58204c9f221012404ebc92c3821d1fd8
Author: cushon <cushon@google.com>
Date:   Wed Mar 22 22:28:04 2017 -0700

    Add a static method matcher that accepts type predicates
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=150970137

M	check_api/src/main/java/com/google/errorprone/matchers/method/MethodMatchers.java
M	check_api/src/main/java/com/google/errorprone/matchers/method/StaticMethodMatcherImpl.java

commit 079a842567f4c9bee581a81544bdf6d9c12e8212
Author: epmjohnston <epmjohnston@google.com>
Date:   Wed Mar 22 19:20:08 2017 -0700

    Emit multiple fixes for JUnit4TestNotRun
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=150959712

M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TestNotRun.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4TestNotRunTest.java

commit d85bc46d5b922e9f957a179fd2cb52a5fe14e598
Author: epmjohnston <epmjohnston@google.com>
Date:   Wed Mar 22 16:25:55 2017 -0700

    Change SuggestedFix.merge to return this Fix unchanged when other is null, rather than throwing exception.
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=150943749

M	check_api/src/main/java/com/google/errorprone/fixes/SuggestedFix.java

commit d3a7008ab323769ccd9b3e94436784dc4225e289
Author: cushon <cushon@google.com>
Date:   Wed Mar 22 14:47:14 2017 -0700

    Recognize safe try/finally/close patterns in MustBeClosedChecker
    
    Previously only try-with-resources was supported. Also extract
    the improved logic to an abstract class, and share it with
    FilesLinesLeak.
    
    Fixes #489
    
    RELNOTES: Recognize safe try/finally/close patterns in MustBeClosedChecker
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=150930609

A	core/src/main/java/com/google/errorprone/bugpatterns/AbstractMustBeClosedChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/FilesLinesLeak.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MustBeClosedChecker.java
M	core/src/test/java/com/google/errorprone/bugpatterns/FilesLinesLeakTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/MustBeClosedCheckerNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/MustBeClosedCheckerPositiveCases.java
A	docs/bugpattern/MustBeClosedChecker.md

commit 0833cf22a6509e3496f9e9285d58175e01812313
Author: cushon <cushon@google.com>
Date:   Wed Mar 22 14:19:08 2017 -0700

    Refine the type of the caught exception based on the Matcher type
    
    e.g.:
    Matcher<IOException> matcher = ...;
    thrown.expect(matcher);
    ...
    
    should be:
    IOException thrown = assertThrows(IOException.class...);
    assertThat(thrown, matcher);
    
    not:
    Throwable thrown = assertThrows(Throwable.class...);
    assertThat(thrown, matcher);
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=150926599

M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractExpectedExceptionChecker.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ExpectedExceptionCheckerTest.java

commit ac1be9e390d5a5860a3867488bb671d2a4a3d3a1
Author: clm <clm@google.com>
Date:   Tue Mar 21 14:34:55 2017 -0700

    Prepare to turn FutureReturnValueIgnored into an error.
    
    RELNOTES: None.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=150803860

M	core/src/main/java/com/google/errorprone/bugpatterns/FutureReturnValueIgnored.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit 36336ae79785b3f043be480e1594deb902606c94
Author: andrewrice <andrewrice@google.com>
Date:   Mon Mar 20 15:23:43 2017 -0700

    Expose LineMap from ErrorProneTokens
    
    RELNOTES: Expose LineMap from ErrorProneTokens
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=150684061

M	check_api/src/main/java/com/google/errorprone/util/ErrorProneTokens.java

commit 1736009d78219c1a8cf17f87752f045300d47db0
Author: cushon <cushon@google.com>
Date:   Mon Mar 20 13:39:36 2017 -0700

    Don't remove imports that are used as the array component type
    
    in a javadoc reference, e.g. `@see ModuleFinder#of(Path[])` counts as a
    use of `Path`.
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=150669302

M	core/src/main/java/com/google/errorprone/bugpatterns/RemoveUnusedImports.java
M	core/src/test/java/com/google/errorprone/bugpatterns/RemoveUnusedImportsTest.java

commit d1a1696576d7760caf52432f14dad98ac373755b
Author: cushon <cushon@google.com>
Date:   Mon Mar 20 11:26:16 2017 -0700

    Add a regression test for b/36444786
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=150651633

M	core/src/test/java/com/google/errorprone/bugpatterns/RemoveUnusedImportsTest.java

commit 9444254123586f3b91e6cecb912636f60d645bd2
Author: dawasser <dawasser@google.com>
Date:   Mon Mar 20 00:11:02 2017 -0700

    Add support for constructors to @FormatMethod.
    
    RELNOTES: Add support for constructors to @FormatMethod.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=150596601

M	annotations/src/main/java/com/google/errorprone/annotations/FormatMethod.java
M	core/src/main/java/com/google/errorprone/bugpatterns/formatstring/FormatStringAnnotationChecker.java
M	core/src/test/java/com/google/errorprone/bugpatterns/formatstring/FormatStringAnnotationCheckerTest.java

commit 029302240157f07615960535ff961d6c26d3d9a7
Author: epmjohnston <epmjohnston@google.com>
Date:   Fri Mar 17 18:01:10 2017 -0700

    Improve summary message for JUnit4TestNotRun checkers.
    
    Concisely suggests the multiple courses of action in response to the error.
    
    (Perhaps increased clarity and helpfulness in the Tricorder message will help slow backsliding)
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=150506726

M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TestNotRun.java

commit c3bfaac019fef3d34e5394adadc7568d04bd4458
Author: epmjohnston <epmjohnston@google.com>
Date:   Fri Mar 17 14:03:13 2017 -0700

    Expand JUnit3TestNotRun check to find non-public potential test methods.
    
    RELNOTES: Expand JUnit3TestNotRun check to find non-public test methods.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=150481412

M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit3TestNotRun.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit3TestNotRunTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit3TestNotRunNegativeCase1.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit3TestNotRunPositiveCases.java
A	docs/bugpattern/JUnit3TestNotRun.md

commit 671f58c0126abf08111bf3cc56aa0a9cb8f9b16c
Author: epmjohnston <epmjohnston@google.com>
Date:   Fri Mar 17 13:40:38 2017 -0700

    Update SuggestedFixes: change method signature of removeModifiers, add a renameMethod function, and temporarily ignore EP plugin test broken by the resulting one version violation, until the next JavaBuilder release.
    
    RELNOTES: Added a SuggestedFixes.renameMethod function
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=150478500

M	check_api/src/main/java/com/google/errorprone/fixes/SuggestedFixes.java

commit fa0c55a9dd4aa7e5caa38238466cb02ecfbd9f54
Author: cushon <cushon@google.com>
Date:   Thu Mar 16 18:12:09 2017 -0700

    Discourage parameters of type Iterable<Path>
    
    RELNOTES: Discourage parameters of type Iterable<Path>
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=150395796

A	core/src/main/java/com/google/errorprone/bugpatterns/IterablePathParameter.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/IterablePathParameterTest.java
A	docs/bugpattern/IterablePathParameter.md

commit 5e3cc0ae7828b298467d30c2d4f9034b404c44e1
Author: Kazuaki Matsuo <fly.49.89.over@gmail.com>
Date:   Thu Mar 23 08:46:38 2017 +0900

    fix link in readme (#584)
    
    * fix link in readme
    
    * insert newlines  to wrap the lines

M	README.md

commit c655343841db01a093e1c6dfd8cb136adff6bd79
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Thu Mar 16 18:17:48 2017 -0700

    Bump version numbers for 2.0.19 release

M	examples/ant/ant_fork/build.xml
M	examples/gradle/build.gradle
M	examples/maven/pom.xml
M	examples/plugin/bazel/WORKSPACE
M	examples/plugin/gradle/build.gradle
M	examples/plugin/gradle/sample_plugin/build.gradle
M	examples/plugin/maven/hello/pom.xml
M	examples/plugin/maven/sample_plugin/pom.xml

commit 2c8f38540c2d13a87054b00fe3846dea9287d36d
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Thu Mar 16 15:51:01 2017 -0700

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	annotations/pom.xml
M	ant/pom.xml
M	check_api/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	docgen_processor/pom.xml
M	pom.xml
M	refaster/pom.xml
M	test_helpers/pom.xml

commit 2214a8c2d36d6da8ed937faac9be7f94f97732a9
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Thu Mar 16 15:50:49 2017 -0700

    [maven-release-plugin] prepare release v2.0.19

M	annotation/pom.xml
M	annotations/pom.xml
M	ant/pom.xml
M	check_api/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	docgen_processor/pom.xml
M	pom.xml
M	refaster/pom.xml
M	test_helpers/pom.xml

commit 3bad9fb5e556447d54db6867368759ca78a8d040
Author: cushon <cushon@google.com>
Date:   Thu Mar 16 15:08:35 2017 -0700

    Unbreak @params file handling
    
    MOE_MIGRATED_REVID=150374689

M	check_api/src/main/java/com/google/errorprone/BaseErrorProneCompiler.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
M	docs/bugpattern/ExpectedExceptionChecker.md
M	docs/bugpattern/TestExceptionChecker.md
M	test_helpers/pom.xml

commit 87670d7a1fb74ab51260c81f946c4c23e5a96ede
Author: cushon <cushon@google.com>
Date:   Wed Mar 15 22:10:45 2017 -0700

    Update MethodCanBeStatic docs
    
    MOE_MIGRATED_REVID=150283510

M	docs/bugpattern/MethodCanBeStatic.md

commit 237ee045b8b5680cbb414f1d024455fc5706846b
Author: epmjohnston <epmjohnston@google.com>
Date:   Wed Mar 15 15:27:14 2017 -0700

    Update JUnit4TestNotRun to not flag methods in abstract classes.
    
    Abstract test classes should only be tested in the implementing
    subclasses.
    
    RELNOTES: Update JUnit4TestNotRun to not flag methods in abstract
    classes
    
    MOE_MIGRATED_REVID=150250828

M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TestNotRun.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4TestNotRunTest.java

commit 669024dbbf61025a366ceb76ca81a2c4cda5886c
Author: emcmanus <emcmanus@google.com>
Date:   Wed Mar 15 14:08:48 2017 -0700

    Weaken the wording for the MethodCanBeStatic suggestion.
    
    MOE_MIGRATED_REVID=150239542

M	core/src/main/java/com/google/errorprone/bugpatterns/MethodCanBeStatic.java

commit 8ff74d3d36ea2abcfc37987c024959f61086a56a
Author: bangert <bangert@google.com>
Date:   Wed Mar 15 13:39:16 2017 -0700

    [RestrictedApi] Generate binary names if possible.
    
    hasAnnotation only works with binary names, whereas
    TypeMirror.toString() returns a human-readable type name. This uses a
    binary name when available.
    
    RELNOTES: Fix RestrictedApi with nested whitelist annotations.
    
    MOE_MIGRATED_REVID=150235342

M	core/src/main/java/com/google/errorprone/bugpatterns/RestrictedApiChecker.java
M	core/src/test/java/com/google/errorprone/bugpatterns/RestrictedApiCheckerTest.java

commit cc040da8b8f27ca53e8862fa1cfa216f66fb37ed
Author: epmjohnston <epmjohnston@google.com>
Date:   Sat Jan 7 11:36:57 2017 -0800

    Enable the new JUnit4TestNotRun heuristics as a warning
    
    MOE_MIGRATED_REVID=150219406

M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TestNotRun.java

commit 7e6f0e51e5760c5230ceeec95e2a0d88e987d7fc
Author: ronshapiro <ronshapiro@google.com>
Date:   Wed Mar 15 11:35:49 2017 -0700

    Remove MultibindsInsteadOfMultibindings, as it's going away.
    
    RELNOTES: Remove the MultibindsInsteadOfMultibindings check.
    @dagger.Multibindings is being removed
    
    MOE_MIGRATED_REVID=150219239

D	core/src/main/java/com/google/errorprone/bugpatterns/inject/dagger/MultibindsInsteadOfMultibindings.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
D	core/src/test/java/com/google/errorprone/bugpatterns/inject/dagger/MultibindsInsteadOfMultibindingsTest.java

commit f6a5928cf5f748028e17ab0fbbffbe55c955881e
Author: cushon <cushon@google.com>
Date:   Mon Mar 13 21:24:37 2017 -0700

    Refactor BaseErrorProneCompiler to use the javac API
    
    via BaseErrorProneJavaCompiler, instead of invoking the compiler through
    main. This cuts down on the duplication between the two classes, and
    reduces the use of internal APIs.
    
    MOE_MIGRATED_REVID=150029163

M	check_api/src/main/java/com/google/errorprone/BaseErrorProneCompiler.java
A	check_api/src/main/java/com/google/errorprone/BaseErrorProneJavaCompiler.java
M	check_api/src/main/java/com/google/errorprone/MaskedClassLoader.java
D	core/src/main/java/com/google/errorprone/BaseErrorProneJavaCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorProneJavacPlugin.java
M	core/src/test/java/com/google/errorprone/DiagnosticKindTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneTestCompiler.java
M	test_helpers/src/main/java/com/google/errorprone/CompilationTestHelper.java

commit 0f4096fd6767f1726080f4edf685c6ab94cac011
Author: cushon <cushon@google.com>
Date:   Mon Mar 13 20:14:17 2017 -0700

    MethodCanBeStatic shouldn't report methods in inner classes
    
    RELNOTES: N/A
    
    MOE_MIGRATED_REVID=150025532

M	core/src/main/java/com/google/errorprone/bugpatterns/MethodCanBeStatic.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MethodCanBeStaticTest.java

commit 757253bfbd11fe101ab4f8bba1edd78a9d9e77a7
Author: epmjohnston <epmjohnston@google.com>
Date:   Sat Mar 11 02:14:11 2017 -0800

    Make -XepAllErrorsAsWarnings position-sensitive.
    
    RELNOTES: Make -XepAllErrorsAsWarnings position-sensitive.
    
    MOE_MIGRATED_REVID=149836496

M	check_api/src/main/java/com/google/errorprone/ErrorProneOptions.java
M	core/src/test/java/com/google/errorprone/scanner/ScannerSupplierTest.java

commit 6cb77a456040d1ab298c2be0808ae8ab44d2d895
Author: cushon <cushon@google.com>
Date:   Fri Mar 10 18:05:52 2017 -0800

    Improve TruthSelfEquals docs
    
    MOE_MIGRATED_REVID=149819581

M	core/src/main/java/com/google/errorprone/bugpatterns/TruthSelfEquals.java
A	docs/bugpattern/TruthSelfEquals.md

commit 26abc94386b9b7ab0cebbffeb584d52665517f11
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Mon Mar 13 12:20:09 2017 -0700

    Don't use a snapshot dependency for test_helpers (#571)
    
    Fixes #570

M	test_helpers/pom.xml

commit 650d0ee558b277497b60890fa8425d723ed8c1f6
Author: cushon <cushon@google.com>
Date:   Fri Mar 10 15:11:30 2017 -0800

    Refactor ExpectedExceptionChecker and TestExceptionChecker
    
    so the fixes can be re-used by a migration tool.
    
    MOE_MIGRATED_REVID=149803611

A	core/src/main/java/com/google/errorprone/bugpatterns/AbstractExpectedExceptionChecker.java
A	core/src/main/java/com/google/errorprone/bugpatterns/AbstractTestExceptionChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ExpectedExceptionChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/TestExceptionChecker.java

commit 4cf63f83daf6d198f6d439e33a2559df758cdfa4
Author: epmjohnston <epmjohnston@google.com>
Date:   Fri Mar 10 14:52:53 2017 -0800

    Add an option to disable all Error Prone checks.
    
    Now, passing -XepDisableAllChecks to the javacopts will disable all
    suppressible checks, unless explicitly enabled.
    
    Resolves #555
    
    RELNOTES: Add a -XepDisableAllChecks flag to turn off all suppressible
    checks unless explicitly enabled. Fixes #555.
    
    MOE_MIGRATED_REVID=149801461

M	check_api/src/main/java/com/google/errorprone/ErrorProneOptions.java
M	check_api/src/main/java/com/google/errorprone/scanner/ScannerSupplier.java
M	check_api/src/test/java/com/google/errorprone/ErrorProneOptionsTest.java
M	core/src/test/java/com/google/errorprone/scanner/ScannerSupplierTest.java

commit 777b9c50c6007cab8103665851fbd6b09af73c3c
Author: cushon <cushon@google.com>
Date:   Fri Mar 10 14:40:17 2017 -0800

    Delete SelfEquality, which is obsolesced by IdentityBinaryExpression
    
    also augment IdentityBinaryExpression to suggest {Float,Double}.isNan as
    a replacement for testing that floats and double are not equal to
    themselves.
    
    RELNOTES: Delete SelfEquality, which is obsolesced by
    IdentityBinaryExpression
    
    MOE_MIGRATED_REVID=149800054

M	core/src/main/java/com/google/errorprone/bugpatterns/IdentityBinaryExpression.java
D	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquality.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
M	core/src/test/java/com/google/errorprone/bugpatterns/IdentityBinaryExpressionTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/SelfEqualityTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfEqualityNegativeCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfEqualityPositiveCases.java

commit ad937c0dbcf5547d1ef5daf8d925a30722329753
Author: cushon <cushon@google.com>
Date:   Fri Mar 10 12:36:14 2017 -0800

    Disable SelfEquals inside assertions
    
    This is often done deliberately to test the implementation of an equals
    method. Using EqualsTester instead is recommended, but that isn't
    usually a correctness problem and deserves a separate check.
    
    MOE_MIGRATED_REVID=149786406

M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquals.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfEqualsPositiveCase.java

commit 0abd393fcaa7cc3549aa0141e02af3dd74d1f0a9
Author: eaftan <eaftan@google.com>
Date:   Fri Mar 10 11:57:18 2017 -0800

    Add more justification for why methods that can be static, should.
    
    MOE_MIGRATED_REVID=149782475

M	docs/bugpattern/MethodCanBeStatic.md

commit c849cbf8cd3a5956c2fd9ef995664cf75f4d717c
Author: cushon <cushon@google.com>
Date:   Fri Mar 10 11:32:01 2017 -0800

    Merge GuavaSelfEquals into SelfEquals
    
    RELNOTES: Merge GuavaSelfEquals into SelfEquals
    
    MOE_MIGRATED_REVID=149779438

D	core/src/main/java/com/google/errorprone/bugpatterns/GuavaSelfEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/TruthSelfEquals.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
D	core/src/test/java/com/google/errorprone/bugpatterns/GuavaSelfEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SelfEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfEqualsPositiveCase.java

commit ae4dd953f1421fb11a26c70bf3030b4d5f835752
Author: eaftan <eaftan@google.com>
Date:   Fri Mar 10 11:12:52 2017 -0800

    Disallow disabling or overriding the severity of a check by altname from
    the command line.
    
    Fixes #554
    
    RELNOTES: Command line flags must now use canonical names to override or
    disable checks.
    
    MOE_MIGRATED_REVID=149777068

M	check_api/src/main/java/com/google/errorprone/scanner/ScannerSupplier.java
M	core/src/test/java/com/google/errorprone/CommandLineFlagTest.java

commit 517f76fd26959a0399c23cf7124e8323bf58c532
Author: cushon <cushon@google.com>
Date:   Fri Mar 10 09:52:40 2017 -0800

    Fix a crash in VarChecker on effectively final resource variables
    
    The final modifier appears in the AST even if it was implicit in the
    source.
    
    Fixes #498
    
    MOE_MIGRATED_REVID=149767713

M	core/src/main/java/com/google/errorprone/bugpatterns/VarChecker.java
M	core/src/test/java/com/google/errorprone/bugpatterns/VarCheckerTest.java

commit d1c72b130e1b8ec09478d886bf29cf5723c840f1
Author: andrewrice <andrewrice@google.com>
Date:   Thu Mar 9 15:39:49 2017 -0800

    Add ASTHelpers.getResultType(ExpressionTree)
    
    This method works out what the type will be of an ExpressionTree after
    it is evaluated. e.g. a MethodInvocationTree is given its return type,
    an identifier is its actual type, a NewClassTree is given the type that
    it constructs
    
    MOE_MIGRATED_REVID=149703328

M	check_api/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/test/java/com/google/errorprone/util/ASTHelpersTest.java

commit 55d8440397c817f1bb0ab2e35d49368730b20110
Author: ronshapiro <ronshapiro@google.com>
Date:   Thu Mar 9 08:52:25 2017 -0800

    Add another case to AndroidInjectionBeforeSuper.
    
    Broadcast receivers are left out since onReceive() is an abstract
    method, with no need to call super.
    
    MOE_MIGRATED_REVID=149656779

M	core/src/main/java/com/google/errorprone/bugpatterns/inject/dagger/AndroidInjectionBeforeSuper.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/dagger/testdata/AndroidInjection.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/dagger/testdata/AndroidInjectionBeforeSuperNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/dagger/testdata/AndroidInjectionBeforeSuperPositiveCases.java

commit 01d553cf9af5bd7651f3bae587cf1742ac7cc6b5
Author: cushon <cushon@google.com>
Date:   Wed Mar 8 21:20:06 2017 -0800

    Generalize IdentityBinaryExpression to handle more operators
    
    Fixes #53
    
    RELNOTES: Generalize IdentityBinaryExpression to handle more operators
    
    MOE_MIGRATED_REVID=149618080

M	core/src/main/java/com/google/errorprone/bugpatterns/IdentityBinaryExpression.java
M	core/src/test/java/com/google/errorprone/bugpatterns/IdentityBinaryExpressionTest.java
A	docs/bugpattern/IdentityBinaryExpression.md

commit 3212458510486a45052fcb2c1f57a5daf879be6e
Author: fcardoso <fcardoso@google.com>
Date:   Wed Mar 8 13:32:11 2017 -0800

    Fix a bug in PrivateConstructorForUtilityClass
    
    Skip classes that extend other classes from being advised to have a
    private constructor.
    
    Fixes #530
    
    MOE_MIGRATED_REVID=149576271

M	core/src/main/java/com/google/errorprone/bugpatterns/PrivateConstructorForUtilityClass.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PrivateConstructorForUtilityClassTest.java

commit ffc40ad64980f8a5d691c28c7593c35d518b360c
Author: cushon <cushon@google.com>
Date:   Tue Mar 7 16:42:02 2017 -0800

    Improve FallThrough diagnostics
    
    The fix snippet logic handles newlines poorly, so it ends up asking "did
    you mean to delete this line" for the current fixes. Since the suggested
    fix shouldn't be blindly applied anyways, this change removes it and
    improves the message.
    
    MOE_MIGRATED_REVID=149483749

M	core/src/main/java/com/google/errorprone/bugpatterns/FallThrough.java
M	core/src/test/java/com/google/errorprone/bugpatterns/FallThroughTest.java

commit e8ce230107b353d4a9c55b08c594943fc5ca385f
Author: ronshapiro <ronshapiro@google.com>
Date:   Tue Mar 7 11:47:15 2017 -0800

    Report an error when AndroidInjection.inject(Activity) is invoked after super.onCreate()
    
    RELNOTES: Add enforcement of dagger.android.AndroidInjection usage
    
    MOE_MIGRATED_REVID=149445570

A	core/src/main/java/com/google/errorprone/bugpatterns/inject/dagger/AndroidInjectionBeforeSuper.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/dagger/AndroidInjectionBeforeSuperTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/dagger/testdata/AndroidInjection.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/dagger/testdata/AndroidInjectionBeforeSuperNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/dagger/testdata/AndroidInjectionBeforeSuperPositiveCases.java

commit feabc5a5786017f27841b18bb58a554a04ef6476
Author: fcardoso <fcardoso@google.com>
Date:   Mon Mar 6 13:14:21 2017 -0800

    Skip private inner classes when advising adding Private Constructors to
    utility classes.
    
    MOE_MIGRATED_REVID=149335363

M	core/src/main/java/com/google/errorprone/bugpatterns/PrivateConstructorForUtilityClass.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PrivateConstructorForUtilityClassTest.java

commit 1f6dc3dcccb2a0cbc99e48776060f9693815b6c8
Author: cushon <cushon@google.com>
Date:   Mon Mar 6 10:41:53 2017 -0800

    Merge GuardedByValidator into GuardedByChecker
    
    MOE_MIGRATED_REVID=149316613

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByChecker.java
D	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByValidator.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByValidatorTest.java
D	docs/bugpattern/GuardedByValidator.md

commit b1f011d47be7f17e9b49c9a0a04196c06292721a
Author: dorir <dorir@google.com>
Date:   Sun Mar 5 12:39:11 2017 -0800

    Use immutable interface type for constant field declarations
    
    MOE_MIGRATED_REVID=149247631

M	test_helpers/src/main/java/com/google/errorprone/CompilationTestHelper.java

commit 0a78971de88f359dbe68837be169b09e6a5db3a2
Author: cushon <cushon@google.com>
Date:   Fri Mar 3 18:25:13 2017 -0800

    Restore the GuardedBy checker docs
    
    MOE_MIGRATED_REVID=149175620

A	docs/bugpattern/GuardedBy.md
D	docs/bugpattern/GuardedByChecker.md

commit 20a8664365ef4e7eb2481fe3f43c0af6f61a0546
Author: eaftan <eaftan@google.com>
Date:   Fri Mar 3 17:16:39 2017 -0800

    Change canonical name for GuardedByChecker to GuardedBy.
    
    RELNOTES: Change canonical name for GuardedByChecker to GuardedBy.
    
    MOE_MIGRATED_REVID=149171263

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByChecker.java

commit 46165e4757dc8d4c2f245807bff456db7cd44426
Author: awturner <awturner@google.com>
Date:   Fri Mar 3 16:21:06 2017 -0800

    Error prone check to catch an unrecognized timezone
    
    identifier passed to TimeZone.getTimeZone(String).
    
    RELNOTES: New check for invalid timezone identifiers.
    
    MOE_MIGRATED_REVID=149166270

A	core/src/main/java/com/google/errorprone/bugpatterns/InvalidTimeZoneID.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/InvalidTimeZoneIDTest.java

commit 2928994fae3c4e9788eaa1fdf935bb98e7a014c7
Author: dorir <dorir@google.com>
Date:   Thu Mar 2 17:44:41 2017 -0800

    Use immutable interface type for constant field declarations
    
    MOE_MIGRATED_REVID=149068579

M	core/src/main/java/com/google/errorprone/bugpatterns/SizeGreaterThanOrEqualsZero.java

commit 840bdbdc836ca65f05e466671d75be068071ce23
Author: glorioso <glorioso@google.com>
Date:   Thu Mar 2 17:23:16 2017 -0800

    Add additional test case for -XepAllErrorsAsWarnings
    
    behavior in the presence of disabled errors
    
    MOE_MIGRATED_REVID=149066907

M	core/src/test/java/com/google/errorprone/scanner/ScannerSupplierTest.java

commit bf8560b2aed79ff7f91c24b6e7de33bec3db4c34
Author: cushon <cushon@google.com>
Date:   Thu Mar 2 14:21:08 2017 -0800

    Fix a crash in ArgumentParameterSwap
    
    Resolves #490
    
    MOE_MIGRATED_REVID=149046892

M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractArgumentParameterChecker.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArgumentParameterSwapTest.java

commit 350b678d89dfc3e2b311389963d887e49426313c
Author: cushon <cushon@google.com>
Date:   Thu Mar 2 04:39:46 2017 -0800

    Avoid mutable static state in GuardedByExpression
    
    MOE_MIGRATED_REVID=148990125

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByExpression.java

commit 9c9e4a8abc664cbab0771f9ef8dd131d4acfb49d
Author: cushon <cushon@google.com>
Date:   Wed Mar 1 19:34:33 2017 -0800

    Check for ignored return values of non-terminal stream functions
    
    RELNOTES: Check for ignored return values of non-terminal stream functions
    
    MOE_MIGRATED_REVID=148960664

M	core/src/main/java/com/google/errorprone/bugpatterns/ReturnValueIgnored.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ReturnValueIgnoredTest.java

commit e586fb04266403f3a01c57554314be68fe27471e
Author: cushon <cushon@google.com>
Date:   Wed Mar 1 10:05:14 2017 -0800

    LiteralClassName: don't crash on array literals
    
    MOE_MIGRATED_REVID=148899937

M	core/src/main/java/com/google/errorprone/bugpatterns/LiteralClassName.java
M	core/src/test/java/com/google/errorprone/bugpatterns/LiteralClassNameTest.java

commit 4f1e140f1a929ecb7be4a8b6f1ab7b00608b2ae7
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Tue Feb 28 19:48:02 2017 -0800

    Bump version numbers fo 2.0.18 release

M	examples/ant/ant_fork/build.xml
M	examples/gradle/build.gradle
M	examples/maven/pom.xml
M	examples/plugin/bazel/WORKSPACE
M	examples/plugin/gradle/build.gradle
M	examples/plugin/gradle/sample_plugin/build.gradle
M	examples/plugin/maven/hello/pom.xml
M	examples/plugin/maven/sample_plugin/pom.xml

commit 42d05b9674debee46d2e12f01f7c66fcae2d8509
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Tue Feb 28 19:32:26 2017 -0800

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	annotations/pom.xml
M	ant/pom.xml
M	check_api/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	docgen_processor/pom.xml
M	pom.xml
M	refaster/pom.xml
M	test_helpers/pom.xml

commit 25fa3be2823276c4448ad69bd030872b9bf5c29a
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Tue Feb 28 19:32:11 2017 -0800

    [maven-release-plugin] prepare release v2.0.18

M	annotation/pom.xml
M	annotations/pom.xml
M	ant/pom.xml
M	check_api/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	docgen_processor/pom.xml
M	pom.xml
M	refaster/pom.xml
M	test_helpers/pom.xml

commit 26725a611f26dad3de7880fd6bc40679a1b3eef4
Author: cushon <cushon@google.com>
Date:   Tue Feb 28 18:05:05 2017 -0800

    Suggest Foo.class rather than Class.forName("Foo") when Foo is available
    
    RELNOTES: New check to suggest Foo.class rather than Class.forName("Foo") when Foo is available
    
    MOE_MIGRATED_REVID=148840937

A	core/src/main/java/com/google/errorprone/bugpatterns/LiteralClassName.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/LiteralClassNameTest.java

commit feb4b347f32c6f720901b1fbf549a481d1328ef8
Author: cushon <cushon@google.com>
Date:   Tue Feb 28 17:03:30 2017 -0800

    Initial implementation of a com.sun.source.util.Plugin
    
    This allows Error Prone to be used as a javac plugin (instead of a
    wrapper) via the plugin API that was added in 8:
    https://docs.oracle.com/javase/8/docs/jdk/api/javac/tree/com/sun/source/util/Plugin.html
    
    Demo:
    
    ```
    javac -J-Xbootclasspath/p:javac-9-dev-r3297-3.jar \
      -processorpath error_prone_ant-2.0.18-SNAPSHOT.jar \
      -Xplugin:ErrorProne Test.java
    ...
    ShortSet.java:8: error: [CollectionIncompatibleType] Argument 'i - 1' should not be passed to this method; its type int is not compatible with its collection's type argument Short
          s.remove(i - 1);
                  ^
        (see http://errorprone.info/bugpattern/CollectionIncompatibleType)
    ```
    
    See #535
    
    MOE_MIGRATED_REVID=148835033

M	check_api/src/main/java/com/google/errorprone/BaseErrorProneCompiler.java
M	core/pom.xml
A	core/src/main/java/com/google/errorprone/ErrorProneJavacPlugin.java
A	core/src/test/java/com/google/errorprone/ErrorProneJavacPluginTest.java

commit 6de880ca8cf6b31640414efec4d10225ae7f5160
Author: cushon <cushon@google.com>
Date:   Tue Feb 28 16:53:05 2017 -0800

    Detect floating point literals that lose precision
    
    RELNOTES: New check to detect floating point literals that lose precision
    
    MOE_MIGRATED_REVID=148833881

A	core/src/main/java/com/google/errorprone/bugpatterns/FloatingPointLiteralPrecision.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/FloatingPointLiteralPrecisionTest.java
A	docs/bugpattern/FloatingPointLiteralPrecision.md

commit 9d97e0365e7e891acdb27bfd979209932dc715d2
Author: cushon <cushon@google.com>
Date:   Tue Feb 28 12:43:23 2017 -0800

    Fix FallThrough handling of empty blocks with comments
    
    e.g.
    
    case 0: {
     // fall through
    }
    case 1: ...
    
    MOE_MIGRATED_REVID=148803130

M	core/src/main/java/com/google/errorprone/bugpatterns/FallThrough.java
M	core/src/test/java/com/google/errorprone/bugpatterns/FallThroughTest.java

commit 1f6cc84de81667feabb4a0fbfa6b734fbfd19a3f
Author: glorioso <glorioso@google.com>
Date:   Tue Feb 28 12:32:00 2017 -0800

    Update TypeParameterShadowing replacement-finding logic to deal with
    desugared lambda parameters
    
    MOE_MIGRATED_REVID=148801831

M	core/src/main/java/com/google/errorprone/bugpatterns/TypeParameterShadowing.java
M	core/src/test/java/com/google/errorprone/bugpatterns/TypeParameterShadowingTest.java

commit 2b5239b2537ec82e011718500e5d79699134e719
Author: cushon <cushon@google.com>
Date:   Tue Feb 28 10:11:03 2017 -0800

    Add a regression test for b/35809355
    
    MOE_MIGRATED_REVID=148783497

M	core/src/test/java/com/google/errorprone/bugpatterns/TypeParameterShadowingTest.java

commit a276803ecd2ad9cac8ae87f5143a57a4fa44803c
Author: cushon <cushon@google.com>
Date:   Tue Feb 28 06:13:13 2017 -0800

    Update to javac 9-dev-r3297-4
    
    Fixes #534
    
    MOE_MIGRATED_REVID=148761773

M	pom.xml

commit 5acdd7effa1c46241504e72425395492af22877d
Author: cushon <cushon@google.com>
Date:   Mon Feb 27 19:12:36 2017 -0800

    Rename StaticAccessedFromInstance to StaticQualifiedUsingExpression
    
    RELNOTES: Rename StaticAccessedFromInstance to StaticQualifiedUsingExpression
    
    MOE_MIGRATED_REVID=148725076

D	core/src/main/java/com/google/errorprone/bugpatterns/StaticAccessedFromInstance.java
A	core/src/main/java/com/google/errorprone/bugpatterns/StaticQualifiedUsingExpression.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
D	core/src/test/java/com/google/errorprone/bugpatterns/StaticAccessedFromInstanceTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/StaticQualifiedUsingExpressionTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/StaticAccessedFromInstanceNegativeCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/StaticAccessedFromInstancePositiveCase1.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/StaticAccessedFromInstancePositiveCase2.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/StaticQualifiedUsingExpressionNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/StaticQualifiedUsingExpressionPositiveCase1.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/StaticQualifiedUsingExpressionPositiveCase2.java
M	core/src/test/java/com/google/errorprone/scanner/ScannerSupplierTest.java
D	docs/bugpattern/StaticAccessedFromInstance.md
A	docs/bugpattern/StaticQualifiedUsingExpression.md

commit 8115b37ed71fb8428f9b6f8b681269fb015e52e4
Author: eaftan <eaftan@google.com>
Date:   Mon Feb 27 18:07:41 2017 -0800

    Fix an NPE in MustBeClosedChecker.
    
    MOE_MIGRATED_REVID=148720543

M	core/src/main/java/com/google/errorprone/bugpatterns/MustBeClosedChecker.java

commit fe5ea7dec61511be1cb664d30905b15e2f608689
Author: glorioso <glorioso@google.com>
Date:   Mon Feb 27 17:04:01 2017 -0800

    Fix bug in EqualsIncompatibleType when evaluating type variables with bounds
    
    Fixes #547
    
    MOE_MIGRATED_REVID=148714253

M	check_api/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/test/java/com/google/errorprone/bugpatterns/EqualsIncompatibleTypeTest.java

commit 24489fb72542a62ed7587a08b26b17b41cb2274f
Author: cushon <cushon@google.com>
Date:   Mon Feb 27 15:33:32 2017 -0800

    FallThrough: adjust fix for statement groups containing an empty block
    
    MOE_MIGRATED_REVID=148703509

M	core/src/main/java/com/google/errorprone/bugpatterns/FallThrough.java
M	core/src/test/java/com/google/errorprone/bugpatterns/FallThroughTest.java

commit e1d9aff4b7e552994ff2f8446cd5e4a1bf659fc8
Author: cushon <cushon@google.com>
Date:   Mon Feb 27 14:00:41 2017 -0800

    Raw classes without a 'containerOf' spec are immutable
    
    Fixes #549
    
    MOE_MIGRATED_REVID=148690902

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableAnalysis.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableCheckerTest.java

commit 0eda97243275336b897f96973dc9890056877afa
Author: kevinb <kevinb@google.com>
Date:   Mon Feb 27 10:26:32 2017 -0800

    Explain why qualifying a static member using an expression instead of a
    class is bad in more detail.
    
    MOE_MIGRATED_REVID=148663967

M	core/src/main/java/com/google/errorprone/bugpatterns/StaticAccessedFromInstance.java
A	docs/bugpattern/StaticAccessedFromInstance.md

commit d1ef10f6486629db33370a053161068220bad6ec
Author: cushon <cushon@google.com>
Date:   Sun Feb 26 15:55:02 2017 -0800

    Add a test for #547
    
    MOE_MIGRATED_REVID=148602572

M	core/src/test/java/com/google/errorprone/bugpatterns/EqualsIncompatibleTypeTest.java

commit 2c0f0091a871460e61e8ae3e16e5c8c7b7cd7987
Author: cushon <cushon@google.com>
Date:   Sat Feb 25 15:09:16 2017 -0800

    Fix accidental blank lines
    
    MOE_MIGRATED_REVID=148563212

M	core/src/main/java/com/google/errorprone/bugpatterns/AsyncFunctionReturnsNull.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ClassName.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ComparisonContractViolated.java
M	core/src/main/java/com/google/errorprone/bugpatterns/Finally.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnitAmbiguousTestClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MissingFail.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MultiVariableDeclaration.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MultipleTopLevelClasses.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ProtoStringFieldReferenceEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/RandomModInteger.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StaticAccessedFromInstance.java
M	core/src/main/java/com/google/errorprone/bugpatterns/TryFailThrowable.java
M	core/src/main/java/com/google/errorprone/bugpatterns/formatstring/FormatString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/formatstring/FormatStringAnnotationChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/MoreThanOneInjectableConstructor.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/dagger/PrivateConstructorForNoninstantiableModule.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/dagger/ProvidesNull.java
M	examples/plugin/bazel/java/com/google/errorprone/sample/MyCustomCheck.java
M	examples/plugin/gradle/sample_plugin/src/main/java/com/google/errorprone/sample/MyCustomCheck.java
M	examples/plugin/maven/sample_plugin/src/main/java/com/google/errorprone/sample/MyCustomCheck.java

commit 867a5f3b95dcc1c46fe1bb783da58fc82df225e0
Author: cushon <cushon@google.com>
Date:   Fri Feb 24 18:31:59 2017 -0800

    Disable UnnecessaryDefaultInEnumSwitch
    
    RELNOTES: Disable UnnecessaryDefaultInEnumSwitch
    
    MOE_MIGRATED_REVID=148527961

M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit f680b794126b97ffc875eb7035a4ddb81fc879fb
Author: cushon <cushon@google.com>
Date:   Fri Feb 24 18:02:47 2017 -0800

    Disable InsecureCipherMode in external Error Prone
    
    per
    https://github.com/google/error-prone/wiki/Criteria-for-new-checks#criteria-for-admitting-new-severityerror-checks-that-are-enabled-by-default
    
    See: bazelbuild/bazel#2591
    
    MOE_MIGRATED_REVID=148526284

M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit 96d3222a42a3e4467a01e0d1ef26f95a6f96db9e
Author: cushon <cushon@google.com>
Date:   Fri Feb 24 14:08:13 2017 -0800

    Clarify MutableConstantField docs
    
    MOE_MIGRATED_REVID=148501649

M	core/src/main/java/com/google/errorprone/bugpatterns/MutableConstantField.java
M	docs/bugpattern/MutableConstantField.md

commit 634638fba75a8132c64948d9270ef1caa811ae27
Author: michaelroger <michaelroger@google.com>
Date:   Fri Feb 24 10:09:40 2017 -0800

    Clarify error message for MutableConstantField, to emphasize the _declared_ type.
    
    RELNOTES: Clarify error message for MutableConstantField, to emphasize the _declared_ type.
    
    MOE_MIGRATED_REVID=148472592

M	core/src/main/java/com/google/errorprone/bugpatterns/MutableConstantField.java

commit 8bbb29d1b5108d23a557d79bfc47dcd50425320e
Author: cushon <cushon@google.com>
Date:   Thu Feb 23 20:27:20 2017 -0800

    Clarify NonOverridingEquals diagnostic
    
    MOE_MIGRATED_REVID=148424966

M	core/src/main/java/com/google/errorprone/bugpatterns/NonOverridingEquals.java

commit 58582a1b69d37843a4ad73de2335a6b312eaf3ab
Author: cushon <cushon@google.com>
Date:   Thu Feb 23 17:36:54 2017 -0800

    BigInteger is immutable
    
    MOE_MIGRATED_REVID=148413852

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/WellKnownMutability.java

commit a4fe200aa6c1f0f05a9a138f863c79d74542332b
Author: kak <kak@google.com>
Date:   Thu Feb 23 16:49:48 2017 -0800

    Add a bunch of known immutable Guava types to the WellKnownMutability
    
    list and sort the various sublists.
    
    MOE_MIGRATED_REVID=148409249

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/WellKnownMutability.java

commit ed510bfbbefaa163f49129d824b7c1445928fc0e
Author: cushon <cushon@google.com>
Date:   Thu Feb 23 16:28:46 2017 -0800

    Fix handling of labelled break/continue targets in reachability
    
    Fixes #546
    
    MOE_MIGRATED_REVID=148406851

M	check_api/src/main/java/com/google/errorprone/util/Reachability.java
M	core/src/test/java/com/google/errorprone/util/ReachabilityTest.java

commit c662b1e2b690140167286e9ea8280c0154aabe43
Author: cushon <cushon@google.com>
Date:   Thu Feb 23 15:35:44 2017 -0800

    Remove an assertion from Reachability
    
    Now that we treat System.exit as not completing normally, it is possible
    to observe dead code.
    
    MOE_MIGRATED_REVID=148400695

M	check_api/src/main/java/com/google/errorprone/util/Reachability.java
M	core/src/test/java/com/google/errorprone/util/ReachabilityTest.java

commit 0246f8a50e280867af77ba790f86001ee3526d50
Author: cushon <cushon@google.com>
Date:   Wed Feb 22 23:48:21 2017 -0800

    Fix a crash in TypeParameterShadowing
    
    Symbol#getTypeArguments makes not robust assumptions and should only be
    called on symbols whose type's arguments are type variables.  For
    example, the declaration `class List<T>` has a type argument `T`, but
    the declaration of a local variable of type `List<String>` has a type
    argument `String` which crashes getTypeArguments.
    
    MOE_MIGRATED_REVID=148314122

M	core/src/main/java/com/google/errorprone/bugpatterns/TypeParameterShadowing.java
M	core/src/test/java/com/google/errorprone/bugpatterns/TypeParameterShadowingTest.java

commit 21a6bdf1b93478445a20479a70ce2c0fec4d03ad
Author: cushon <cushon@google.com>
Date:   Wed Feb 22 18:38:01 2017 -0800

    Recommend short-circuiting boolean operators
    
    RELNOTES: New check to recommend short-circuiting boolean operators
    
    MOE_MIGRATED_REVID=148298260

A	core/src/main/java/com/google/errorprone/bugpatterns/ShortCircuitBoolean.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/ShortCircuitBooleanTest.java
A	docs/bugpattern/ShortCircuitBoolean.md

commit 61e5569583684b1a92be1b4b50cf7235b92d5770
Author: cushon <cushon@google.com>
Date:   Wed Feb 22 14:32:17 2017 -0800

    Allow @DoNotCall on methods in final classes
    
    Previously they had to be explicitly final.
    
    MOE_MIGRATED_REVID=148269314

M	core/src/main/java/com/google/errorprone/bugpatterns/DoNotCallChecker.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DoNotCallCheckerTest.java

commit cc02062f3dc6abd8a739b70e4faaed60714a12d4
Author: cushon <cushon@google.com>
Date:   Tue Feb 21 19:37:17 2017 -0800

    Fix handling of `@GuardedBy("itself")`
    
    Resolves #541
    
    MOE_MIGRATED_REVID=148176007

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedBySymbolResolver.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByCheckerTest.java

commit 28c7efa0bfd91bc6795e3ff240fb7a3d23c09752
Author: cushon <cushon@google.com>
Date:   Tue Feb 21 19:21:21 2017 -0800

    Members of local and anonymous classes can't be static
    
    MOE_MIGRATED_REVID=148175159

M	core/src/main/java/com/google/errorprone/bugpatterns/ClassCanBeStatic.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ClassCanBeStaticTest.java

commit 639aa0c42480feb0239f4b5df07c1fc8081bc1c9
Author: cushon <cushon@google.com>
Date:   Tue Feb 21 18:54:50 2017 -0800

    Check for loops where the condition is never updated in the body
    
    RELNOTES: New check for loops where the condition is never updated in
    the body
    
    MOE_MIGRATED_REVID=148173435

A	core/src/main/java/com/google/errorprone/bugpatterns/LoopConditionChecker.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/LoopConditionCheckerTest.java

commit ee28d0e67ee88e08a8137a8fcbe337168a99d67f
Author: cushon <cushon@google.com>
Date:   Tue Feb 21 13:50:19 2017 -0800

    Fix "fall through" comments in switches
    
    Switch statement groups should end with a comment containing "fall
    through" if and only if execution may fall through to the next statement
    group. This change is being made in preparation for enabling a compiler
    error.
    
    MOE_MIGRATED_REVID=148139399

M	core/src/main/java/com/google/errorprone/bugpatterns/ConstantOverflow.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StaticImports.java

commit 14b8157860e14b6db355364eedafd2cd30ddc977
Author: glorioso <glorioso@google.com>
Date:   Tue Feb 21 09:15:43 2017 -0800

    Update EqualsIncompatibleType to not fire if the equality call's parent
    is a method invocation of 'assertFalse'.
    
    This pattern is used in exhaustive .equals method testing:
    assertFalse(myType.equals("some string which is not myType"));
    
    RELNOTES: EqualsIncompatibleType ignores callsites inside a negative
    JUnit assertion: assertFalse(myType.equals("a string which is not
    myType"));
    
    MOE_MIGRATED_REVID=148103204

M	core/src/main/java/com/google/errorprone/bugpatterns/EqualsIncompatibleType.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/EqualsIncompatibleTypeNegativeCases.java

commit 0863c31f48b14788fd8aac1902f7e5f79a303ce5
Author: dorir <dorir@google.com>
Date:   Mon Feb 20 21:32:51 2017 -0800

    Add a check for mutable constant fields.
    
    RELNOTES: New check for mutable constant fields
    
    MOE_MIGRATED_REVID=148058836

A	core/src/main/java/com/google/errorprone/bugpatterns/MutableConstantField.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/MutableConstantFieldTest.java
A	docs/bugpattern/MutableConstantField.md

commit 5037ad1b5372117547e5d968eb41a116dd7b2c8e
Author: cushon <cushon@google.com>
Date:   Mon Feb 20 20:12:12 2017 -0800

    Improve ClassNewInstance suggested fix
    
    Prefer `getDeclaredConstructor().newInstance()` to
    `getConstructor().newInstance()`.
    
    See: https://bugs.openjdk.java.net/browse/JDK-8168681
    
    MOE_MIGRATED_REVID=148055638

M	core/src/main/java/com/google/errorprone/bugpatterns/ClassNewInstance.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ClassNewInstanceTest.java

commit 1eb6705e1158763a3b005c7172b294e6404b8cb2
Author: cushon <cushon@google.com>
Date:   Sat Feb 18 19:12:56 2017 -0800

    s/intentionally continue below/fall out
    
    MOE_MIGRATED_REVID=147943898

M	docs/bugpattern/MissingCasesInEnumSwitch.md

commit 2005567fdcfa590332a5e199cd5ba02ae1358709
Author: glorioso <glorioso@google.com>
Date:   Sat Feb 18 10:54:18 2017 -0800

    Update behavior of EqualsIncompatibleType to not flag
    Object.equals(primitive) in java 1.6 and below.
    
    MOE_MIGRATED_REVID=147931712

M	core/src/main/java/com/google/errorprone/bugpatterns/EqualsIncompatibleType.java
M	core/src/test/java/com/google/errorprone/bugpatterns/EqualsIncompatibleTypeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/EqualsIncompatibleTypeNegativeCases.java

commit 41a352efa836b575622910b608e9f0d1be6bf238
Author: cushon <cushon@google.com>
Date:   Fri Feb 17 23:13:59 2017 -0800

    Initial implementation of @DoNotCall annotation, and enforcement
    
    RELNOTES: Add @DoNotCall annotation, and enforcement
    
    MOE_MIGRATED_REVID=147913678

A	annotations/src/main/java/com/google/errorprone/annotations/DoNotCall.java
A	core/src/main/java/com/google/errorprone/bugpatterns/DoNotCallChecker.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/DoNotCallCheckerTest.java
A	docs/bugpattern/DoNotCall.md

commit 74fb2788a7ed4b79c40b3566bbd2ac30e660a6d9
Author: cushon <cushon@google.com>
Date:   Fri Feb 17 22:40:39 2017 -0800

    Improve switch-related check documentation
    
    Also remove the suggested fixes for MissingCasesInEnumSwitch now that
    it's enabled, since they don't have much documentation value.
    
    MOE_MIGRATED_REVID=147912694

M	core/src/main/java/com/google/errorprone/bugpatterns/MissingCasesInEnumSwitch.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MissingDefault.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MissingCasesInEnumSwitchTest.java
M	docs/bugpattern/MissingDefault.md

commit dfa5b488e4660731244752b4952bbc9d53849fc9
Author: Jake Wharton <jakewharton@gmail.com>
Date:   Fri Feb 17 23:26:39 2017 -0500

    Update pattern index to use correct template.
    
    `master` doesn't select the "Bug Patterns" tab whereas `bugpatterns` does.

M	docgen/src/main/java/com/google/errorprone/BugPatternIndexWriter.java
M	docgen/src/test/java/com/google/errorprone/BugPatternIndexWriterTest.java

commit 786684b6fb391864db6d74b08235f2283f4f55d0
Author: cushon <cushon@google.com>
Date:   Fri Feb 17 17:32:05 2017 -0800

    Remove misleading suppression documentation for import checks
    
    The enclosing element is a package, which @SuppressWarnings cannot be
    applied to: https://bugs.openjdk.java.net/browse/JDK-6299893
    
    MOE_MIGRATED_REVID=147899562

M	core/src/main/java/com/google/errorprone/bugpatterns/NonCanonicalStaticImport.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NonCanonicalStaticMemberImport.java
M	core/src/main/java/com/google/errorprone/bugpatterns/RemoveUnusedImports.java
M	core/src/main/java/com/google/errorprone/bugpatterns/UnnecessaryStaticImport.java
M	core/src/main/java/com/google/errorprone/bugpatterns/WildcardImport.java

commit e22e4a11d9243c11530f7d44a66bb0bf3eae7be1
Author: cushon <cushon@google.com>
Date:   Fri Feb 17 17:11:43 2017 -0800

    Teach reachability about System.exit
    
    MOE_MIGRATED_REVID=147897912

M	check_api/src/main/java/com/google/errorprone/util/Reachability.java
M	core/src/test/java/com/google/errorprone/util/ReachabilityTest.java

commit bee0ce7f3b8989ee7883c0db152cc0491444a1a9
Author: cushon <cushon@google.com>
Date:   Fri Feb 17 17:10:56 2017 -0800

    Improve fall through comment detection
    
    If a case statement group consists of a single block statement, handle
    fall through comments at the end of the block:
    
    ```
    case 1: {
      ...
      // fall through
    }
    case 2:
    ```
    
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=147897849

M	core/src/main/java/com/google/errorprone/bugpatterns/FallThrough.java
M	core/src/test/java/com/google/errorprone/bugpatterns/FallThroughTest.java

commit 69374f175ca1caacc862d1fbc8663cd3a6159331
Author: glorioso <glorioso@google.com>
Date:   Fri Feb 17 15:23:02 2017 -0800

    Tag Matcher with @FunctionalInterface
    
    since it is one, and other tooling can recognize that anonymous
    implementations can be lambda-ified.
    
    MOE_MIGRATED_REVID=147886851

M	check_api/src/main/java/com/google/errorprone/matchers/Matcher.java

commit d54c7ec627d488ba9411a97a27909bb8122780c0
Author: kevinb <kevinb@google.com>
Date:   Fri Feb 17 15:10:45 2017 -0800

    Improve documentation for MethodCanBeStatic
    
    MOE_MIGRATED_REVID=147885371

M	docs/bugpattern/MethodCanBeStatic.md

commit 6f2ee75b25d127cd51d749e1ca909fd9e9ff7aa4
Author: glorioso <glorioso@google.com>
Date:   Fri Feb 17 14:56:47 2017 -0800

    New warning for when a type parameter shadows an enclosing type parameter.
    
    RELNOTES: New warning for when a type parameter shadows an enclosing
    type parameter.
    
    MOE_MIGRATED_REVID=147883649

M	check_api/src/main/java/com/google/errorprone/util/ASTHelpers.java
A	core/src/main/java/com/google/errorprone/bugpatterns/TypeParameterShadowing.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/TypeParameterShadowingTest.java
A	docs/bugpattern/TypeParameterShadowing.md

commit 7a66f3e5e3888cd79d8f59e7e94c4ad22b5b6865
Author: glorioso <glorioso@google.com>
Date:   Fri Feb 17 14:45:51 2017 -0800

    In EqualsIncompatibleType, punt if the types aren't available
    
    MOE_MIGRATED_REVID=147882412

M	core/src/main/java/com/google/errorprone/bugpatterns/EqualsIncompatibleType.java

commit 91ef4d3baecc76af9479403c371777e1231f2e15
Author: cushon <cushon@google.com>
Date:   Thu Feb 16 21:11:43 2017 -0800

    Make "fall through" pattern more precise
    
    MOE_MIGRATED_REVID=147803466

M	core/src/main/java/com/google/errorprone/bugpatterns/FallThrough.java

commit 9d5d90f2ec49583c04977d1ecc0024fbce09f779
Author: cushon <cushon@google.com>
Date:   Thu Feb 16 21:15:31 2017 -0800

    Handle for loops without a condition in 'can complete' logic
    
    Fixes #532
    
    MOE_MIGRATED_REVID=147803663

M	check_api/src/main/java/com/google/errorprone/util/Reachability.java
M	core/src/test/java/com/google/errorprone/bugpatterns/FallThroughTest.java
M	core/src/test/java/com/google/errorprone/util/ReachabilityTest.java

commit 3018c0dfa2f5a1e9e7d1c1739d354073063d0f85
Author: cushon <cushon@google.com>
Date:   Thu Feb 16 20:47:40 2017 -0800

    Make constValue tolerate null
    
    MOE_MIGRATED_REVID=147802131

M	check_api/src/main/java/com/google/errorprone/util/ASTHelpers.java

commit 00b5f66c3517c9b443cc0b67e7126ef4c5f314eb
Author: cushon <cushon@google.com>
Date:   Thu Feb 16 20:04:47 2017 -0800

    Warn on SimpleDataFormat constant fields
    
    SimpleDataFormat is not thread-safe, so it should not be used as a
    constant field.
    
    RELNOTES: New warning for un-threadsafe SimpleDataFormat constant fields
    
    MOE_MIGRATED_REVID=147800014

M	check_api/src/main/java/com/google/errorprone/fixes/SuggestedFixes.java
A	core/src/main/java/com/google/errorprone/bugpatterns/SimpleDateFormatConstant.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/SimpleDateFormatConstantTest.java
A	docs/bugpattern/SimpleDateFormatConstant.md

commit bc0a51eca11e8a058e4a50a01d6f703dc31166a2
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Thu Feb 16 11:33:01 2017 -0800

    Bump version numbers for 2.0.17 release

M	examples/ant/ant_fork/build.xml
M	examples/gradle/build.gradle
M	examples/maven/pom.xml
M	examples/plugin/bazel/WORKSPACE
M	examples/plugin/gradle/build.gradle
M	examples/plugin/gradle/sample_plugin/build.gradle
M	examples/plugin/maven/hello/pom.xml
M	examples/plugin/maven/sample_plugin/pom.xml

commit 740353bb4c7c72fbd8f00d26b7235f40f272f6b7
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Thu Feb 16 11:14:52 2017 -0800

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	annotations/pom.xml
M	ant/pom.xml
M	check_api/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	docgen_processor/pom.xml
M	pom.xml
M	refaster/pom.xml
M	test_helpers/pom.xml

commit 69d8bb758ab941069b4edecbb52c0fbff5489d57
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Thu Feb 16 11:14:41 2017 -0800

    [maven-release-plugin] prepare release v2.0.17

M	annotation/pom.xml
M	annotations/pom.xml
M	ant/pom.xml
M	check_api/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	docgen_processor/pom.xml
M	pom.xml
M	refaster/pom.xml
M	test_helpers/pom.xml

commit 131b0d67865e4af6bea0206dbf10af12b37c091b
Author: cushon <cushon@google.com>
Date:   Thu Feb 16 10:23:22 2017 -0800

    Bump javac version, again
    
    Fixes #529
    
    MOE_MIGRATED_REVID=147735893

M	pom.xml

commit 6240575ff2e9fb9b806a89efbada29833eaa4c56
Author: cushon <cushon@google.com>
Date:   Wed Feb 15 21:53:18 2017 -0800

    Give ExpectedException docs the same treatment as 849dbaa9
    
    MOE_MIGRATED_REVID=147683733

M	docs/bugpattern/ExpectedExceptionChecker.md

commit 849dbaa9076b665d3fbe77a78599d8f0baf30473
Author: kak <kak@google.com>
Date:   Wed Feb 15 15:45:24 2017 -0800

    Fully qualify assertThrows in the TestExceptionChecker docs.
    
    MOE_MIGRATED_REVID=147655198

M	docs/bugpattern/TestExceptionChecker.md

commit 7d49ac947c127dc15adf128dd54e4a0e22dfd3e0
Author: cushon <cushon@google.com>
Date:   Wed Feb 15 15:14:53 2017 -0800

    Discourage throwing null literals
    
    Fixes #158
    
    RELNOTES: Discourage throwing null literals
    
    MOE_MIGRATED_REVID=147651182

A	core/src/main/java/com/google/errorprone/bugpatterns/ThrowNull.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/ThrowNullTest.java

commit 524667c0b4fc6bc2a9b6eb835ba77210008e354a
Author: cushon <cushon@google.com>
Date:   Wed Feb 15 14:10:48 2017 -0800

    Make MissingCasesInEnumSwitch an error
    
    MOE_MIGRATED_REVID=147642606

M	core/src/main/java/com/google/errorprone/bugpatterns/MissingCasesInEnumSwitch.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit 5f0227a4647ddc66d54148bceb0706604df8a524
Author: cushon <cushon@google.com>
Date:   Wed Feb 15 10:46:40 2017 -0800

    Don't rely on equality of Types in TypeParameterUnusedInFormals
    
    Symbols have a meaningful implementation of hashCode and equals, Types
    do not. In practices, the previous approach worked for everything except
    testing annotated type variables against the originals.
    
    MOE_MIGRATED_REVID=147615917

M	core/src/main/java/com/google/errorprone/bugpatterns/TypeParameterUnusedInFormals.java
M	core/src/test/java/com/google/errorprone/bugpatterns/TypeParameterUnusedInFormalsTest.java

commit c4a608775d9d49bf04384779a50de0e0178596fb
Author: cushon <cushon@google.com>
Date:   Tue Feb 14 20:47:52 2017 -0800

    Consolidate suppression logic
    
    MOE_MIGRATED_REVID=147556898

M	check_api/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/AmbiguousMethodReference.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ClassName.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MultipleTopLevelClasses.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzer.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableAnalysis.java

commit 1509c6efa74aed851a76b7d42f118dfb305daa9d
Author: cushon <cushon@google.com>
Date:   Tue Feb 14 17:22:49 2017 -0800

    Improve ExpectedException fix
    
    to rewrite `expectCause(isA(...))` to
    `assertThat(thrown).hasCauseThat().isInstanceOf(...)`.
    
    MOE_MIGRATED_REVID=147542971

M	core/src/main/java/com/google/errorprone/bugpatterns/ExpectedExceptionChecker.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ExpectedExceptionCheckerTest.java

commit e4f560f03cc8d0b4c07c99b0c973445608bd2cee
Author: epmjohnston <epmjohnston@google.com>
Date:   Tue Feb 14 17:01:44 2017 -0800

    Allow suppressing FunctionalInterfaceClash on the methods instead of just the class.
    
    RELNOTES: Allow suppressing FunctionalInterfaceClash on the methods instead of the entire class.
    
    MOE_MIGRATED_REVID=147540627

M	core/src/main/java/com/google/errorprone/bugpatterns/FunctionalInterfaceClash.java
M	core/src/test/java/com/google/errorprone/bugpatterns/FunctionalInterfaceClashTest.java

commit a230574140914bfc2f1b2c996b7881b6f7440dc9
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Tue Feb 14 17:26:17 2017 -0800

    Bump version numbers for 2.0.16 release

M	examples/ant/ant_fork/build.xml
M	examples/gradle/build.gradle
M	examples/maven/pom.xml
M	examples/plugin/bazel/WORKSPACE
M	examples/plugin/gradle/build.gradle
M	examples/plugin/gradle/sample_plugin/build.gradle
M	examples/plugin/maven/hello/pom.xml
M	examples/plugin/maven/sample_plugin/pom.xml

commit 6708696e4450b25d9c660c77a56baace40ae43e9
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Tue Feb 14 17:18:25 2017 -0800

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	annotations/pom.xml
M	ant/pom.xml
M	check_api/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	docgen_processor/pom.xml
M	pom.xml
M	refaster/pom.xml
M	test_helpers/pom.xml

commit ab6bb75e6bb3d80ad867b43818f7d15d08969bba
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Tue Feb 14 17:18:14 2017 -0800

    [maven-release-plugin] prepare release v2.0.16

M	annotation/pom.xml
M	annotations/pom.xml
M	ant/pom.xml
M	check_api/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	docgen_processor/pom.xml
M	pom.xml
M	refaster/pom.xml
M	test_helpers/pom.xml

commit 91abf579c1a609fae7ddef3f570be06c3efef86f
Author: cushon <cushon@google.com>
Date:   Tue Feb 14 14:14:53 2017 -0800

    Update javac dependency to 9-dev-r3297-2
    
    MOE_MIGRATED_REVID=147519592

M	pom.xml

commit a0c9c5a0416a9c3115a799b1332157f03ee353db
Author: wernerd <wernerd@google.com>
Date:   Mon Feb 13 16:24:33 2017 -0800

    Fix a simple copy/paste error from ImmutableEnumChecker.md
    
    MOE_MIGRATED_REVID=147408782

M	docs/bugpattern/ImmutableAnnotationChecker.md

commit 91f34c5c90cec0b4d47f07fa47c199cca2ddb09c
Author: cushon <cushon@google.com>
Date:   Fri Feb 10 20:26:27 2017 -0800

    Remove an extra space in ThrowsUncheckedException fix
    
    MOE_MIGRATED_REVID=147227326

M	check_api/src/main/java/com/google/errorprone/fixes/SuggestedFixes.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ThrowsUncheckedExceptionTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ThrowsUncheckedExceptionPositiveCases.java

commit e6dec608af28cb2c611c4018ac74e9efd81f14ce
Author: cushon <cushon@google.com>
Date:   Fri Feb 10 19:47:21 2017 -0800

    Check that "fall through" comments are present iff a switch case falls through
    
    RELNOTES: New check for undocumented switch case fall through
    
    MOE_MIGRATED_REVID=147225894

A	core/src/main/java/com/google/errorprone/bugpatterns/FallThrough.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/FallThroughTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/FallThroughNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/FallThroughPositiveCases.java
A	docs/bugpattern/FallThrough.md

commit 75596d4bf90218368aa7a32d04810fc7f75a9117
Author: cushon <cushon@google.com>
Date:   Fri Feb 10 16:13:05 2017 -0800

    Document suggested fixes for TestExceptionChecker and ExpectedException
    
    MOE_MIGRATED_REVID=147211399

M	docs/bugpattern/ExpectedExceptionChecker.md
M	docs/bugpattern/TestExceptionChecker.md

commit 0ca21ce9f3cfe8a83edd131da177721f4bbd5d56
Author: cushon <cushon@google.com>
Date:   Thu Feb 9 19:07:19 2017 -0800

    Add a check for missing default in switches
    
    RELNOTES: New check for missing default in switches
    
    MOE_MIGRATED_REVID=147111380

A	core/src/main/java/com/google/errorprone/bugpatterns/MissingDefault.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/MissingDefaultTest.java
A	docs/bugpattern/MissingDefault.md

commit 12603437cbc3e90553d5d8c189e41714e8e59ce7
Author: cushon <cushon@google.com>
Date:   Thu Feb 9 18:34:19 2017 -0800

    Recognize ByteString.copyFrom("...".getBytes()) in DefaultCharset
    
    and suggest ByteString.copyFromUtf8 or ByteString.copyFromUtf8(String, Charset).
    
    MOE_MIGRATED_REVID=147109178

M	core/src/main/java/com/google/errorprone/bugpatterns/DefaultCharset.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DefaultCharsetTest.java

commit 09e41ed1d234f24ea243d9591b899ef2c9974353
Author: cushon <cushon@google.com>
Date:   Wed Feb 8 12:04:38 2017 -0800

    Use streams in MissingCasesInEnumSwitch
    
    MOE_MIGRATED_REVID=146939646

M	core/src/main/java/com/google/errorprone/bugpatterns/MissingCasesInEnumSwitch.java

commit 784440c033e3b13ee12f8f6f295a9a6e29757256
Author: cushon <cushon@google.com>
Date:   Tue Feb 7 17:34:40 2017 -0800

    Add a warning for exhaustive enum switches with an unnecessary default
    
    RELNOTES: New a warning for exhaustive enum switches with an unnecessary default
    
    MOE_MIGRATED_REVID=146858034

A	core/src/main/java/com/google/errorprone/bugpatterns/UnnecessaryDefaultInEnumSwitch.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/UnnecessaryDefaultInEnumSwitchTest.java
A	docs/bugpattern/UnnecessaryDefaultInEnumSwitch.md

commit 8f76b476c2b0f55ff53cd7cd461757dcd3128b3c
Author: cushon <cushon@google.com>
Date:   Tue Feb 7 16:14:03 2017 -0800

    Use immutable collectors
    
    MOE_MIGRATED_REVID=146848829

M	core/src/main/java/com/google/errorprone/bugpatterns/ArgumentParameterMismatch.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArgumentParameterSimilarityMetrics.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArgumentParameterSwap.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ExpectedExceptionChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/FunctionalInterfaceMethodChanged.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ImmutableModification.java
M	core/src/main/java/com/google/errorprone/bugpatterns/TestExceptionChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/collectionincompatibletype/CompatibleWithMisuse.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/ElementPredicates.java

commit 3fb938385c1e7c1a871a726b5cf6869ad4936a3b
Author: cushon <cushon@google.com>
Date:   Tue Feb 7 15:24:44 2017 -0800

    Update guava dependency
    
    MOE_MIGRATED_REVID=146842429

M	core/pom.xml
M	pom.xml
M	test_helpers/pom.xml

commit 4f96d2b8650ae0d4aef74e310c18f5bdb507f128
Author: cushon <cushon@google.com>
Date:   Tue Feb 7 09:53:13 2017 -0800

    Perturb a few dependencies
    
    MOE_MIGRATED_REVID=146797940

M	annotation/pom.xml
M	core/pom.xml
M	pom.xml
M	test_helpers/pom.xml

commit 9e2a977ea5078ce2e11fccaf76b980a647a536b8
Author: cushon <cushon@google.com>
Date:   Mon Feb 6 18:15:32 2017 -0800

    Add a utility for determining whether a statement definitely completes
    
    This can be used e.g. to detect switch statements that fall through.
    
    MOE_MIGRATED_REVID=146736965

A	check_api/src/main/java/com/google/errorprone/util/Reachability.java
A	core/src/test/java/com/google/errorprone/util/ReachabilityTest.java

commit c63b6d3efd43fcb54a2cad1038bc55dc81aac8ed
Author: cushon <cushon@google.com>
Date:   Mon Feb 6 16:30:31 2017 -0800

    Open source tests for util/
    
    MOE_MIGRATED_REVID=146726767

A	core/src/test/java/com/google/errorprone/util/ASTHelpersTest.java
A	core/src/test/java/com/google/errorprone/util/FindIdentifiersTest.java
A	core/src/test/java/com/google/errorprone/util/InheritedAnnotation.java

commit 7a6f8cd5e0e206e68347ea4ce0f0bc5e480267b9
Author: cushon <cushon@google.com>
Date:   Mon Feb 6 16:23:56 2017 -0800

    Fix handling of constant booleans
    
    Which are represented in bytecode as the integer 1 or 0.
    
    MOE_MIGRATED_REVID=146726039

M	check_api/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/main/java/com/google/errorprone/bugpatterns/DefaultCharset.java
M	core/src/main/java/com/google/errorprone/bugpatterns/android/FragmentInjection.java

commit 06569874d5fd1b9c34f20c222e39e45e9dca5aa1
Author: wernerd <wernerd@google.com>
Date:   Fri Feb 3 16:28:28 2017 -0800

    Fix description of ProtocolBufferOrdinal
    
    it currently shows as a heading, but should just be a list item. Small
    rewordings.
    
    MOE_MIGRATED_REVID=146530909

M	core/src/main/java/com/google/errorprone/bugpatterns/ProtocolBufferOrdinal.java

commit c9d9c65dcfe114e9cf427b24b731da98147057d7
Author: eaftan <eaftan@google.com>
Date:   Fri Feb 3 13:52:08 2017 -0800

    Fix NPE in URLEqualsHashCode checker.
    
    Fixes #521
    
    MOE_MIGRATED_REVID=146512854

M	core/src/main/java/com/google/errorprone/bugpatterns/URLEqualsHashCode.java

commit 51c165aec210a2ad614ccdb7efd970b7588dbcab
Author: plumpy <plumpy@google.com>
Date:   Thu Feb 2 14:53:18 2017 -0800

    Allow supressing AmbiguousMethodReference
    
    on the methods instead of the class.
    
    For clarity, you must suppress it on _all_ ambiguous methods rather than
    just one.
    
    RELNOTES: Allow suppressing AmbiguousMethodReference on the ambiguous
    methods instead of the entire class.
    
    MOE_MIGRATED_REVID=146410496

M	core/src/main/java/com/google/errorprone/bugpatterns/AmbiguousMethodReference.java
M	core/src/test/java/com/google/errorprone/bugpatterns/AmbiguousMethodReferenceTest.java

commit 4ead0566a28536c127a08cd7ee4cc68b21cd7116
Author: epmjohnston <epmjohnston@google.com>
Date:   Wed Feb 1 18:07:37 2017 -0800

    Expand the heuristic used by JUnit4TestNotRun checker
    
    to detect forgotten @Test annotations.
    
    Check for methods that contain method calls with names containing a
    testing keyword ("assert", "verify", "check", "fail", or "expect"). Make
    an exception for methods that are already annotated: if the annotation
    is in the com.google.testing.testsize package, it is probably a test, if
    it is something else, it's probably not a test.
    
    MOE_MIGRATED_REVID=146315710

M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TestNotRun.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4TestNotRunTest.java

commit 79c7c91ce597ae48c29816edc60099bec14fa513
Author: avenet <avenet@google.com>
Date:   Wed Feb 1 16:36:13 2017 -0800

    Add the alias "InsecureCipherMode"
    
    (the former name of the check) to InsecureCryptoUsage.
    
    MOE_MIGRATED_REVID=146306442

M	core/src/main/java/com/google/errorprone/bugpatterns/InsecureCipherMode.java

commit 49e53b0bb93ce50053356f8e17d4efb971d82018
Author: andrewrice <andrewrice@google.com>
Date:   Wed Feb 1 11:02:26 2017 -0800

    Implement findAllFields which finds all visible fields in a target type.
    
    MOE_MIGRATED_REVID=146264354

M	check_api/src/main/java/com/google/errorprone/util/FindIdentifiers.java

commit a4b603d633b5becebce6e410e090a0f7fb6b456f
Author: lukes <lukes@google.com>
Date:   Mon Jan 30 19:15:28 2017 -0800

    Allow calls to @ForOverride methods via 'super' from within overrides to
    enable standard override chaining usecases
    
    Fixes error-prone#342
    
    MOE_MIGRATED_REVID=146070367

M	core/src/main/java/com/google/errorprone/bugpatterns/ForOverrideChecker.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ForOverrideCheckerTest.java

commit 9e7e37d4320ac68419b13a6f2b329fcf7dce918d
Author: andrewrice <andrewrice@google.com>
Date:   Mon Jan 30 11:11:25 2017 -0800

    Add findUnusedIdentifiers and findReferencedIdentifiers methods to FindIdentifiers
    
    findUnusedIdentifiers walks up the tree from the current position
    looking for uses and declarations of variables. It returns all variables
    which are declared and not used by the current position.
    findReferencedIdentifiers walks down a tree collecting a set of symbols
    which are referred to.
    
    RELNOTES: Add findUnusedIdentifiers and findReferencedIdentifiers methods to FindIdentifiers
    
    MOE_MIGRATED_REVID=146015029

M	check_api/src/main/java/com/google/errorprone/util/FindIdentifiers.java

commit 3b740432f1d24d7fb71f3b637fe2762364328567
Author: cushon <cushon@google.com>
Date:   Fri Jan 27 14:19:24 2017 -0800

    Enforce invocations of @MustBeClosed within their declaring class
    
    MOE_MIGRATED_REVID=145836006

M	core/src/main/java/com/google/errorprone/bugpatterns/MustBeClosedChecker.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/MustBeClosedCheckerNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/MustBeClosedCheckerPositiveCases.java

commit 45685c94b456becf5051eb043034018d3edff12c
Author: andrewrice <andrewrice@google.com>
Date:   Fri Jan 27 13:58:28 2017 -0800

    Avoid a NullPointerException in FindIdentifiers::inStaticContext which
    can occur if javac has failed to resolve all symbols
    
    RELNOTES: Avoid a NullPointerException in
    FindIdentifiers::inStaticContext
    
    MOE_MIGRATED_REVID=145833469

M	check_api/src/main/java/com/google/errorprone/util/FindIdentifiers.java

commit 6f335c2af1d58c9d8834b0126b2889ede6ddb8eb
Author: bhagwani <bhagwani@google.com>
Date:   Thu Jan 26 22:39:23 2017 -0800

    Add a WARNING for using .ordinal() on proto buffer enums
    
    MOE_MIGRATED_REVID=145762756

A	core/src/main/java/com/google/errorprone/bugpatterns/ProtocolBufferOrdinal.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/ProtocolBufferOrdinalTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ProtocolBufferOrdinalNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ProtocolBufferOrdinalPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/proto/TestEnum.java

commit af9dfefcc1607b991052c8ff5035a1e267b72f30
Author: cushon <cushon@google.com>
Date:   Thu Jan 26 19:15:39 2017 -0800

    Disallow uses of ExpectedException with multiple statements after expect
    
    Fixes #219
    
    RELNOTES: New check to disallow uses of ExpectedException with multiple
    statements after expect
    
    MOE_MIGRATED_REVID=145752085

A	core/src/main/java/com/google/errorprone/bugpatterns/ExpectedExceptionChecker.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/ExpectedExceptionCheckerTest.java
A	docs/bugpattern/ExpectedExceptionChecker.md

commit 99435888f72d9da36dad3b76cbcf62cec43b70e0
Author: cushon <cushon@google.com>
Date:   Thu Jan 26 16:05:27 2017 -0800

    Disallow uses of @Test(expected=...) with multiple statment methods
    
    RELNOTES: New check to disallow uses of @Test(expected=...) with
    multiple statment methods
    
    MOE_MIGRATED_REVID=145734241

M	check_api/src/main/java/com/google/errorprone/matchers/JUnitMatchers.java
A	core/src/main/java/com/google/errorprone/bugpatterns/TestExceptionChecker.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/TestExceptionCheckerTest.java
A	docs/bugpattern/TestExceptionChecker.md

commit 96975bf5cb4e343dd137a6eec3071aa88c1a4b5a
Author: glorioso <glorioso@google.com>
Date:   Thu Jan 26 13:24:27 2017 -0800

    Update ReferenceEquality superclass to recognize a == b || a.equals(b) and suggest removing the LHS.
    
    RELNOTES: ReferenceEquality (and others) detect a == b || a.equals(b)
    and suggest removing the or statement and left-hand side instead of
    replacing a == b with Objects.equals(a, b);
    
    MOE_MIGRATED_REVID=145713067

M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractReferenceEquality.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ReferenceEqualityTest.java

commit 247775dedae87fd33eeb096031d8b47e577a4d3f
Author: clm <clm@google.com>
Date:   Tue Jan 24 11:02:46 2017 -0800

    Check return value of methods that return ListenableFuture
    
    MOE_MIGRATED_REVID=145440802

A	core/src/main/java/com/google/errorprone/bugpatterns/FutureReturnValueIgnored.java
M	core/src/main/java/com/google/errorprone/bugpatterns/android/RectIntersectReturnValueIgnored.java
M	core/src/main/java/com/google/errorprone/refaster/PlaceholderUnificationVisitor.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/FutureReturnValueIgnoredTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/FutureReturnLscTest.expected
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/FutureReturnLscTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/FutureReturnValueIgnoredNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/FutureReturnValueIgnoredPositiveCases.java

commit a770dce6770fa4d14f7ca21f43f58baa9f7b7217
Author: cushon <cushon@google.com>
Date:   Fri Jan 20 14:02:37 2017 -0800

    Fix WildcardImport's handling of non-canonical imports
    
    MOE_MIGRATED_REVID=145124922

M	core/src/main/java/com/google/errorprone/bugpatterns/WildcardImport.java
M	core/src/test/java/com/google/errorprone/bugpatterns/WildcardImportTest.java

commit 3974a3cccc61bb7d80a5c4090f2efcbc3e870b42
Author: cushon <cushon@google.com>
Date:   Thu Jan 19 16:53:22 2017 -0800

    Handle returns inside lambdas in Finally
    
    MOE_MIGRATED_REVID=145028101

M	core/src/main/java/com/google/errorprone/bugpatterns/Finally.java
M	core/src/test/java/com/google/errorprone/bugpatterns/FinallyTest.java

commit b671249542c47a1b0e1925fd6c6f7d66c5fab6cd
Author: cushon <cushon@google.com>
Date:   Thu Jan 19 10:40:04 2017 -0800

    Whitelist ImmutableSortedMap as an immutable type
    
    MOE_MIGRATED_REVID=144979753

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/WellKnownMutability.java

commit 6f525da76d31eb7c478956b44b4c0bde5059664d
Author: eaftan <eaftan@google.com>
Date:   Wed Jan 18 20:25:17 2017 -0800

    ImmutableEnumChecker no longer complains about @Immutable on enums that
    implement an @Immutable interface.
    
    RELNOTES: ImmutableEnumChecker no longer complains about @Immutable on
    enums that implement an @Immutable interface.
    
    MOE_MIGRATED_REVID=144916636

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableEnumChecker.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableEnumCheckerTest.java

commit ddca7129a585a16a7582a1f932bdca084009381f
Author: glorioso <glorioso@google.com>
Date:   Wed Jan 18 17:44:02 2017 -0800

    Update warning message for ImmutableEnumChecker
    
    MOE_MIGRATED_REVID=144905996

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableEnumChecker.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableEnumCheckerTest.java

commit 3b131a40193518557934db2cd013638371dd7692
Author: awturner <awturner@google.com>
Date:   Wed Jan 18 10:09:05 2017 -0800

    Add org.joda.time.Period to list of well-known immutable classes.
    
    http://joda-time.sourceforge.net/apidocs/org/joda/time/Period.html
    "An immutable time period specifying a set of duration field values."
    
    MOE_MIGRATED_REVID=144847911

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/WellKnownMutability.java

commit 3b32489caf98c433b4cb2c89271bb7b12ed78bf0
Author: bhagwani <bhagwani@google.com>
Date:   Mon Jan 16 13:04:28 2017 -0800

    Add a warning for Set/HashSet of URL
    
    RELNOTES: New warning for Set/HashSet of URL
    
    MOE_MIGRATED_REVID=144650638

A	core/src/main/java/com/google/errorprone/bugpatterns/URLEqualsHashCode.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/URLEqualsHashCodeTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/URLEqualsHashCodeNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/URLEqualsHashCodePositiveCases.java
A	docs/bugpattern/URLEqualsHashCode.md

commit 6f50edd1073479b8ebf741c480821c35eed623e3
Author: cushon <cushon@google.com>
Date:   Fri Jan 13 20:06:41 2017 -0800

    Fix @GuardedBy enforcement in lambdas
    
    MOE_MIGRATED_REVID=144511066

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzer.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByCheckerTest.java

commit e049633444b3b35680762e8f03fa4ed34804deab
Author: aljimenez <aljimenez@google.com>
Date:   Wed Jan 11 19:57:14 2017 -0800

    Allowing invocations of @MustBeClosed annotated methods/constructors
    
    in return statements, as long as the caller method is annotated with
    @MustBeClosed. If the caller is not annotated, then a fix which adds the
    annotation is suggested.
    
    MOE_MIGRATED_REVID=144281333

M	core/src/main/java/com/google/errorprone/bugpatterns/MustBeClosedChecker.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/MustBeClosedCheckerNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/MustBeClosedCheckerPositiveCases.java

commit f9f516d8957307c4ef9f892ed4b493e65b773567
Author: cushon <cushon@google.com>
Date:   Wed Jan 11 16:32:06 2017 -0800

    Delete unused and misguided findSuperMethod
    
    MOE_MIGRATED_REVID=144265414

M	check_api/src/main/java/com/google/errorprone/util/ASTHelpers.java

commit e0abc47ab95cd0c3cbf2b7b963321095e02eaef1
Author: clm <clm@google.com>
Date:   Wed Jan 11 13:57:26 2017 -0800

    Add support for Junit's ExpectedException rule
    
    (and other forked copies of it, sigh) to AbstractReturnValueIgnored.
    
    RELNOTES: Code using ExpectedException no longer triggers @CheckReturnValue errors.
    
    MOE_MIGRATED_REVID=144245976

M	check_api/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractReturnValueIgnored.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CheckReturnValueTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/CheckReturnValuePositiveCases.java

commit 4b9391777b95da5c6325219dd9733aeb5eabc2dd
Author: plumpy <plumpy@google.com>
Date:   Wed Jan 11 12:26:01 2017 -0800

    Fix @GuardedBy("itself").
    
    The GuardedByValidator approves this (questionable) usage, but the
    GuardedByChecker never actually checks it.
    
    RELNOTES: Fix checking of fields annotated with @GuardedBy("itself")
    
    MOE_MIGRATED_REVID=144236217

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedBySymbolResolver.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByCheckerTest.java

commit cb7eb6183143b941e0350826cd9ff1a4f229a612
Author: Thomas Broyer <t.broyer@ltgt.net>
Date:   Fri Jan 6 11:59:56 2017 +0100

    Unshade dependencies in error_prone_core
    
    error_prone_core had some dependencies shaded that caused problems
    with build-system integrations. Moreover, they were still referenced
    them in its POM, leading to unnecessary duplications in the classpath.
    
    This commit changes the default error_prone_core artifact to no
    longer use shaded dependencies, and moves the shaded artifact to
    an additional JAR with 'with-dependencies' classifier. This JAR
    is needed to keep the error_prone_refaster JAR identical.
    
    Fixes #501
    Updates #482

M	core/pom.xml
M	refaster/pom.xml

commit 275d07a5f237c741a0d669fa71745c3fcd3b4187
Author: cushon <cushon@google.com>
Date:   Mon Jan 9 12:22:22 2017 -0800

    Recognize format string conversions for java.time
    
    MOE_MIGRATED_REVID=143992911

M	core/src/main/java/com/google/errorprone/bugpatterns/formatstring/FormatStringValidation.java
M	core/src/test/java/com/google/errorprone/bugpatterns/formatstring/FormatStringTest.java

commit cea92dbae1fbc92ac37cb0221157027612302a44
Author: cushon <cushon@google.com>
Date:   Mon Jan 9 11:48:28 2017 -0800

    Use a more precise diagnostic position for MethodCanBeStatic
    
    MOE_MIGRATED_REVID=143988865

M	core/src/main/java/com/google/errorprone/bugpatterns/MethodCanBeStatic.java

commit 70f8a67bbfbe4a38473f3d1494d67130ccc4558a
Author: clm <clm@google.com>
Date:   Sat Jan 7 11:01:05 2017 -0800

    Add some more validation to BugCheckerInfo
    
    MOE_MIGRATED_REVID=143867327

M	check_api/src/main/java/com/google/errorprone/BugCheckerInfo.java

commit 8f9acca2f28f45869f1c0e2e616f072df42433d2
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Jan 9 16:37:21 2017 -0800

    Update maven-project-info-reports-plugin version.
    
    The previous version we were using was printing a stack trace on
    invokedynamic bytecodes.  This filled up the logs and caused our
    Travis build to fail.

M	pom.xml

commit 1b0607d3e4b278b6bc58596b1530e8911c875ef4
Author: gak <gak@google.com>
Date:   Wed Jan 4 15:54:19 2017 -0800

    Fix the UseBindsTest to no longer test for @Produces.type -- it has been removed.
    
    MOE_MIGRATED_REVID=143606226

M	core/src/test/java/com/google/errorprone/bugpatterns/inject/dagger/UseBindsTest.java

commit c9693ecebfce58678980ab9ff9cb21ad2b14ba1e
Author: epmjohnston <epmjohnston@google.com>
Date:   Tue Jan 3 15:57:49 2017 -0800

    Add checker to warn for Fragment Injection vulnerability.
    
    Warn if any class extending PreferenceActivity:
      a) does not override isValidFragment, or
      b) the implementation of isValidFragment trivially returns true.
    
    RELNOTES: Add checker to warn for Fragment Injection vulnerability.
    
    MOE_MIGRATED_REVID=143496013

A	core/src/main/java/com/google/errorprone/bugpatterns/android/FragmentInjection.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/android/FragmentInjectionTest.java
A	docs/bugpattern/android/FragmentInjection.md

commit 9ee7777b4ccaf2c772c657bac6624f36216f64f6
Author: glorioso <glorioso@google.com>
Date:   Tue Jan 3 13:42:27 2017 -0800

    Add caveat to ASTHelpers.resolveExistingMethod.
    
    MOE_MIGRATED_REVID=143480701

M	check_api/src/main/java/com/google/errorprone/util/ASTHelpers.java

commit 9fb40d79e639ede67a129c2c64531ad8c8024297
Author: bhagwani <bhagwani@google.com>
Date:   Tue Jan 3 09:48:21 2017 -0800

    Add a check for JUnit assertSame as a ERROR.
    
    MOE_MIGRATED_REVID=143454066

A	core/src/main/java/com/google/errorprone/bugpatterns/JUnitAssertSameCheck.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/JUnitAssertSameCheckTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnitAssertSameCheckNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnitAssertSameCheckPositiveCase.java

commit 54f82f67e5122cb7dfc07969b2679840189696aa
Author: glorioso <glorioso@google.com>
Date:   Thu Dec 29 14:38:21 2016 -0800

    Change LiteByteStringUtf8 to an error
    
    RELNOTES: LiteByteStringUtf8 is an error
    
    MOE_MIGRATED_REVID=143208564

M	core/src/main/java/com/google/errorprone/bugpatterns/LiteByteStringUtf8.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit 5d7f72c4b01f683b638ab50aa565d353ddbc671e
Author: glorioso <glorioso@google.com>
Date:   Thu Dec 29 11:14:32 2016 -0800

    Update docs for LiteByteStringUtf8 to accurately describe the failure mode of
    ByteString.toStringUtf8()
    
    MOE_MIGRATED_REVID=143195331

M	core/src/main/java/com/google/errorprone/bugpatterns/LiteByteStringUtf8.java
M	docs/bugpattern/LiteByteStringUtf8.md

commit 606871d857340a8516a92c340a9aa92b498cabc6
Author: bhagwani <bhagwani@google.com>
Date:   Thu Dec 29 10:55:54 2016 -0800

    Add checks for isSameAs and isNotSameAs in TruthSelfEquals
    
    MOE_MIGRATED_REVID=143194083

M	core/src/main/java/com/google/errorprone/bugpatterns/TruthSelfEquals.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/TruthSelfEqualsPositiveCases.java

commit 1d92a58b8dc5c43b991ed7872ad1beb939a30628
Author: glorioso <glorioso@google.com>
Date:   Wed Dec 28 16:16:16 2016 -0800

    Add a new Error Prone checker for chaining calls from Message -> ByteString ->
    String, as the ByteString -> String conversion is lossy and may lose bytes.
    
    RELNOTES: New check: LiteByteStringUtf8 to detect lossy conversions from
    protocol messages to Strings.
    
    MOE_MIGRATED_REVID=143140089

M	annotation/src/main/java/com/google/errorprone/BugPattern.java
A	core/src/main/java/com/google/errorprone/bugpatterns/LiteByteStringUtf8.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ProtoFieldNullComparison.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/LiteByteStringUtf8Test.java
A	docs/bugpattern/LiteByteStringUtf8.md

commit 330d6415ab28d73199037dec0c9024b59bb73c88
Author: glorioso <glorioso@google.com>
Date:   Thu Dec 22 19:15:47 2016 -0800

    Update InputStreamSlowMultibyteRead to ignore simple streams that just return
    constant values, or streams nested inside JUnit test cases.
    
    RELNOTES: InputStreamSlowMultibyteRead will now ignore streams that just return
    a compile-time constant, or streams inside JUnit test cases.
    
    MOE_MIGRATED_REVID=142817548

M	check_api/src/main/java/com/google/errorprone/VisitorState.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InputStreamSlowMultibyteRead.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InputStreamSlowMultibyteReadTest.java

commit cc2e66385ca950c5da0d1afcb9cac658d7432482
Author: cushon <cushon@google.com>
Date:   Wed Dec 21 20:45:51 2016 -0800

    Work around issues with plugins conflicting with classes used in the
    Error Prone API.
    
    MOE_MIGRATED_REVID=142729297

M	check_api/src/main/java/com/google/errorprone/VisitorState.java
M	check_api/src/main/java/com/google/errorprone/fixes/SuggestedFixes.java

commit 600e6d6777474d7b88f3e05c3398719f1655e31c
Author: cushon <cushon@google.com>
Date:   Wed Dec 21 17:25:39 2016 -0800

    Clean up getType
    
    remove an unused method, and use java.util.List by default.
    
    RELNOTES: N/A
    
    MOE_MIGRATED_REVID=142718424

M	check_api/src/main/java/com/google/errorprone/VisitorState.java

commit a91c0e1a975c70edfc8477c49d54e85e2fbed082
Author: cushon <cushon@google.com>
Date:   Wed Dec 21 13:27:25 2016 -0800

    Don't suggest making native methods static
    
    RELNOTES: N/A
    
    MOE_MIGRATED_REVID=142695160

M	core/src/main/java/com/google/errorprone/bugpatterns/MethodCanBeStatic.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MethodCanBeStaticTest.java

commit 19024d00ebdebd0b733ffeb607040018d3ae2f01
Author: glorioso <glorioso@google.com>
Date:   Wed Dec 21 11:05:52 2016 -0800

    Initial version of an open source refaster, with an example in the README.md.
    
    Incidental changes performed to get there
    * Shade in check_api to the core jar to allow end users to not need check_api
    if they have core
    * Per feedback, no longer fail the compile when refactorings are performed.
    
    RELNOTES: Barebones implementation of Refaster, a tool allowing for semantic refactorings of codebases using before-and-after templates.
    
    MOE_MIGRATED_REVID=142680811

M	check_api/pom.xml
M	check_api/src/main/java/com/google/errorprone/BaseErrorProneCompiler.java
M	check_api/src/main/java/com/google/errorprone/ErrorProneOptions.java
M	check_api/src/main/java/com/google/errorprone/apply/PatchFileDestination.java
M	check_api/src/test/java/com/google/errorprone/ErrorProneOptionsTest.java
M	core/pom.xml
D	core/src/main/java/com/google/errorprone/refaster/RefasterRuleCompiler.java
D	core/src/main/java/com/google/errorprone/refaster/RefasterRuleCompilerAnalyzer.java
M	docgen/pom.xml
M	docgen_processor/pom.xml
M	examples/maven/pom.xml
A	examples/maven/refaster-based-cleanup/pom.xml
A	examples/maven/refaster-based-cleanup/src/main/java/Main.java
A	examples/refaster/README.md
A	examples/refaster/StringLengthToEmpty.java
M	pom.xml
A	refaster/pom.xml
A	refaster/src/main/java/com/google/errorprone/refaster/RefasterRuleCompiler.java
A	refaster/src/main/java/com/google/errorprone/refaster/RefasterRuleCompilerAnalyzer.java
M	test_helpers/pom.xml

commit fe41858bcf98b9c32f53f0275c4916208abd8747
Author: glorioso <glorioso@google.com>
Date:   Tue Dec 20 16:55:34 2016 -0800

    EqualsIncompatibleType: ignore the Enum supertype when considering if two
    arguments share a non-Object supertype for warning about incompatible argument
    types.
    
    RELNOTES: EqualsIncompatibleType will report when enums of incompatible types
    are passed to .equals()
    
    MOE_MIGRATED_REVID=142612571

M	core/src/main/java/com/google/errorprone/bugpatterns/EqualsIncompatibleType.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/EqualsIncompatibleTypePositiveCases.java

commit a164121a94c69bbbf6b563e31b86a2d17906f9e5
Author: glorioso <glorioso@google.com>
Date:   Tue Dec 20 13:32:27 2016 -0800

    Null-check MethodSymbol in RestrictedApiChecker
    
    RELNOTES: N/A
    
    MOE_MIGRATED_REVID=142590804

M	core/src/main/java/com/google/errorprone/bugpatterns/RestrictedApiChecker.java

commit d7a3a103f6ab8dea9ca7a106df1f449a30daa261
Author: cushon <cushon@google.com>
Date:   Fri Dec 16 18:35:34 2016 -0800

    Discourage calling String.indexOf(int, char)
    
    RELNOTES: New check for calling String.indexOf with the arguments reversed
    
    MOE_MIGRATED_REVID=142319213

A	core/src/main/java/com/google/errorprone/bugpatterns/IndexOfChar.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/IndexOfCharTest.java

commit 48ae4cb6a6d78d015a89ad5c63249e43781b1a9d
Author: cushon <cushon@google.com>
Date:   Fri Dec 16 17:46:42 2016 -0800

    Don't suggest making classes that extend inner classes static
    
    RELNOTES: N/A
    
    MOE_MIGRATED_REVID=142316537

M	core/src/main/java/com/google/errorprone/bugpatterns/ClassCanBeStatic.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ClassCanBeStaticTest.java

commit 9e4d5cb225d826f0861821a7511e85a1268b1093
Author: glorioso <glorioso@google.com>
Date:   Fri Dec 16 17:13:25 2016 -0800

    Split the -XepPatch flags into two:
    
    -XepPatchChecks:Check1,Check2,Check3
    -XepPatchLocation:/some/source/root
    
    This removes the old behavior of -XepPatch which patched all the findings from all normally-configured checks. Instead, patch compiles should only emit fixes for the explicitly-requested checks.
    
    RELNOTES: Update behavior of experimental patch args.
    
    MOE_MIGRATED_REVID=142314304

M	check_api/src/main/java/com/google/errorprone/BaseErrorProneCompiler.java
M	check_api/src/main/java/com/google/errorprone/ErrorProneOptions.java
M	check_api/src/test/java/com/google/errorprone/ErrorProneOptionsTest.java

commit 0baf32721cdf4742b91bc5ae7e0128f38c6aef39
Author: cushon <cushon@google.com>
Date:   Fri Dec 16 16:39:27 2016 -0800

    Fix rawtypes in MockitoCast suggested fix
    
    MOE_MIGRATED_REVID=142311565

M	core/src/main/java/com/google/errorprone/bugpatterns/MockitoCast.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MockitoCastTest.java

commit e1bc1fb6a0acf833e5b2178fcc0080bdc0a2d73a
Author: glorioso <glorioso@google.com>
Date:   Thu Dec 15 17:58:22 2016 -0800

    Refactor the interface of MultiMatcher to not use mutable state, but instead
    return a single object with the match state as well as the list of matching
    nodes.
    
    RELNOTES: N/A
    
    Fixes #494
    
    MOE_MIGRATED_REVID=142212551

M	check_api/src/main/java/com/google/errorprone/matchers/ChildMultiMatcher.java
M	check_api/src/main/java/com/google/errorprone/matchers/MultiMatcher.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/InjectOnConstructorOfAbstractClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/InvalidTargetingOnScopingAnnotation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/JavaxInjectOnAbstractMethod.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/MoreThanOneScopeAnnotationOnClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/QualifierOnMethodWithoutProvides.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/QualifierWithTypeUse.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/AssistedInjectScoping.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/AssistedParameters.java

commit 72f92c9470d687866cfd89634aa9e406fc9c8f67
Author: cushon <cushon@google.com>
Date:   Thu Dec 15 17:15:59 2016 -0800

    Check for mutable annotation implementations
    
    RELNOTES: New check for mutable annotation implementations
    
    MOE_MIGRATED_REVID=142208621

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableAnalysis.java
A	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableAnnotationChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/WellKnownMutability.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableAnnotationCheckerTest.java
A	docs/bugpattern/ImmutableAnnotationChecker.md

commit 646d9412782b330263a12ac40acbf4ce17159b11
Author: bhagwani <bhagwani@google.com>
Date:   Thu Dec 15 16:22:41 2016 -0800

    Make TruthSelfEquals an error by default
    
    RELNOTES: Make TruthSelfEquals an error by default
    
    MOE_MIGRATED_REVID=142203038

M	core/src/main/java/com/google/errorprone/bugpatterns/TruthSelfEquals.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit 6b3974e71e2f94acc776d7878d5ad9c22c363727
Author: emmaborhanian <emmaborhanian@google.com>
Date:   Thu Dec 15 15:04:27 2016 -0800

    Make Matchers.toType generic
    
    MOE_MIGRATED_REVID=142193545

M	check_api/src/main/java/com/google/errorprone/matchers/Matchers.java

commit 8caba68d33d851f1c9d7d4e6df1a88af702fa79a
Author: glorioso <glorioso@google.com>
Date:   Mon Dec 12 16:46:03 2016 -0800

    RestrictedApiChecker will now check for @RestrictedApi
    
    in superclass' method declarations.
    
    RELNOTES: @RestrictedApi now applies to all overriding methods.
    
    MOE_MIGRATED_REVID=141827562

M	core/src/main/java/com/google/errorprone/bugpatterns/RestrictedApiChecker.java
M	core/src/test/java/com/google/errorprone/bugpatterns/RestrictedApiCheckerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/RestrictedApiMethods.java

commit 0a471cdbb117f9ff0d8aea7ddbc3bfef272fbe3d
Author: glorioso <glorioso@google.com>
Date:   Mon Dec 12 13:57:36 2016 -0800

    Adjust the behavior of RefactoringCollection
    
    to be lenient if more than one check suggests replacements to the same
    region of code (it'll pick the first one Description emitted by a check
    during the AST descent, which is arbitrary, but it's somewhat unclear
    what the right thing is here)
    
    MOE_MIGRATED_REVID=141806967

M	check_api/src/main/java/com/google/errorprone/RefactoringCollection.java
M	check_api/src/main/java/com/google/errorprone/apply/DescriptionBasedDiff.java
M	core/src/test/java/com/google/errorprone/refaster/DescriptionBasedDiffTest.java

commit b6fe098e44ea9a4db637a117b20f0417247e77be
Author: epmjohnston <epmjohnston@google.com>
Date:   Fri Dec 9 16:07:36 2016 -0800

    Add checker for type cast compatibility of objects deserialized from android.os.Bundles.
    
    RELNOTES: Add checker for type cast compatibility of objects deserialized from android.os.Bundles.
    
    MOE_MIGRATED_REVID=141611776

A	core/src/main/java/com/google/errorprone/bugpatterns/android/BundleDeserializationCast.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/android/BundleDeserializationCastTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/android/testdata/CustomParcelableList.java
A	docs/bugpattern/android/BundleDeserializationCast.md

commit de219c0f4961aac1f7e22b7ee5cab70e9cff473b
Author: cushon <cushon@google.com>
Date:   Fri Dec 9 13:54:06 2016 -0800

    Refactoring
    
    MOE_MIGRATED_REVID=141595623

M	core/src/main/java/com/google/errorprone/bugpatterns/InsecureCipherMode.java

commit 835ce729b95a9a78a96c13e32bd2c2d83cf0ec07
Author: eaftan <eaftan@google.com>
Date:   Thu Dec 8 15:31:35 2016 -0800

    Set concurrencyLevel of type cache in VisitorState to 1
    
    (was 4 previously).
    
    The type cache resolves symbols, but that is not thread safe, so we
    shouldn't be doing it from more than one thread.
    
    MOE_MIGRATED_REVID=141492407

M	check_api/src/main/java/com/google/errorprone/VisitorState.java

commit 07a5424c98288ca366234bff6271e4525ca38a00
Author: cushon <cushon@google.com>
Date:   Thu Dec 8 11:52:00 2016 -0800

    Fix a bug in "effectively static" analysis
    
    MOE_MIGRATED_REVID=141465691

M	core/src/main/java/com/google/errorprone/bugpatterns/CanBeStaticAnalyzer.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ClassCanBeStaticTest.java

commit 567a2f4e3fc9fa0fceb9afbac2ccc938d9be4419
Author: cushon <cushon@google.com>
Date:   Wed Dec 7 21:26:45 2016 -0800

    Update to javac9-r3297
    
    MOE_MIGRATED_REVID=141396618

M	check_api/pom.xml
M	core/pom.xml
M	core/src/test/java/com/google/errorprone/ErrorProneJavaCompilerTest.java
M	pom.xml
M	test_helpers/pom.xml

commit 6ebd4382b148b762c2ca9e05735d81378529ab98
Author: cushon <cushon@google.com>
Date:   Wed Dec 7 12:11:01 2016 -0800

    CompilationTestHelper clean-up
    
    Ensure that test compilations always set an empty -sourcepath, and use
    UTF-8 everywhere.
    
    MOE_MIGRATED_REVID=141339766

M	test_helpers/src/main/java/com/google/errorprone/CompilationTestHelper.java

commit d82da813306b03925ba09dc2f8766408e98c06d9
Author: eaftan <eaftan@google.com>
Date:   Tue Dec 6 14:03:57 2016 -0800

    Fix typo in FilesLinesLeak doc.
    
    MOE_MIGRATED_REVID=141223191

M	docs/bugpattern/FilesLinesLeak.md

commit 8516a989d00b26524d49aff78fbd1e9aa947612a
Author: kak <kak@google.com>
Date:   Tue Dec 6 11:47:18 2016 -0800

    Prefer Multimap interface types over implementation types.
    
    MOE_MIGRATED_REVID=141205646

M	docgen/src/main/java/com/google/errorprone/BugPatternIndexWriter.java

commit f9f1e5c2957c6fd1e364b37d0814f3eb87fc0dd0
Author: aljimenez <aljimenez@google.com>
Date:   Mon Dec 5 23:49:17 2016 -0800

    Created the MustBeClosedChecker to ensure that constructors or methods
    annotated with MustBeClosed are called within the resource variable
    initializer of a try-with-resources statement.
    
    RELNOTES: New @MustBeClosed annotation and check for methods that return
    resources that must be closed
    
    MOE_MIGRATED_REVID=141146276

A	annotations/src/main/java/com/google/errorprone/annotations/MustBeClosed.java
A	core/src/main/java/com/google/errorprone/bugpatterns/MustBeClosedChecker.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/MustBeClosedCheckerTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/MustBeClosedCheckerNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/MustBeClosedCheckerPositiveCases.java

commit 9d859f49292c60cadd9820d27141d60a878d229e
Author: glorioso <glorioso@google.com>
Date:   Mon Dec 5 11:21:21 2016 -0800

    Update ScopeOrQualifierAnnotationRetention to unconditionally fire for SOURCE retention.
    
    RELNOTES: Update ScopeOrQualifierAnnotationRetention to unconditionally
    fire for SOURCE retention, regardless of whether or not the annotation
    is in a dagger component.
    
    MOE_MIGRATED_REVID=141074854

M	core/src/main/java/com/google/errorprone/bugpatterns/inject/ElementPredicates.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/ScopeOrQualifierAnnotationRetention.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/ScopeOrQualifierAnnotationRetentionTest.java

commit bc4c758c5177a0416d5144cd069a8838b87083ff
Author: epmjohnston <epmjohnston@google.com>
Date:   Fri Dec 2 18:09:59 2016 -0800

    Update version numbers in example files for 2.0.15 release
    
    MOE_MIGRATED_REVID=140916681

M	examples/ant/ant_fork/build.xml
M	examples/gradle/build.gradle
M	examples/maven/pom.xml
M	examples/plugin/bazel/WORKSPACE
M	examples/plugin/gradle/build.gradle
M	examples/plugin/gradle/sample_plugin/build.gradle
M	examples/plugin/maven/hello/pom.xml
M	examples/plugin/maven/sample_plugin/pom.xml

commit bf5e9abf842c4858b8b0b4b2ad3ea3ebcea47d8e
Author: cushon <cushon@google.com>
Date:   Fri Dec 2 15:01:22 2016 -0800

    Recognize conditional expressions in FilesLinesLeak
    
    MOE_MIGRATED_REVID=140898154

M	core/src/main/java/com/google/errorprone/bugpatterns/FilesLinesLeak.java
M	core/src/test/java/com/google/errorprone/bugpatterns/FilesLinesLeakTest.java

commit 8bcbdefd4705ae5eaeb043576dce2ba4f7c736f7
Author: epmjohnston <epmjohnston@google.com>
Date:   Fri Dec 2 14:44:30 2016 -0800

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	annotations/pom.xml
M	ant/pom.xml
M	check_api/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	docgen_processor/pom.xml
M	pom.xml
M	test_helpers/pom.xml

commit a59a4f98367a7e018c7ea93273081ea30740616d
Author: epmjohnston <epmjohnston@google.com>
Date:   Fri Dec 2 14:44:02 2016 -0800

    [maven-release-plugin] prepare release v2.0.15

M	annotation/pom.xml
M	annotations/pom.xml
M	ant/pom.xml
M	check_api/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	docgen_processor/pom.xml
M	pom.xml
M	test_helpers/pom.xml

commit 1a4f314313ef29ae70332ecf1b21b4bd48a9b88d
Author: cushon <cushon@google.com>
Date:   Thu Dec 1 13:52:25 2016 -0800

    Document that MethodCanBeStatic only applies to private methods.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=140773150

M	core/src/main/java/com/google/errorprone/bugpatterns/MethodCanBeStatic.java
A	docs/bugpattern/MethodCanBeStatic.md

commit 7c925542650ada63e5e26a072f5772c76002ab61
Author: glorioso <glorioso@google.com>
Date:   Wed Nov 30 15:30:01 2016 -0800

    Fix integration of AsyncCallableReturnsNull
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=140660914

M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit d43f5867203bb9bb101b3d1100ba79c12b890c0c
Author: cushon <cushon@google.com>
Date:   Wed Nov 30 11:01:01 2016 -0800

    Require Files.lines to be used with try-with-resources
    
    Ameliorates #264
    
    RELNOTES: New check for Files.lines calls where the stream isn't closed
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=140624985

A	core/src/main/java/com/google/errorprone/bugpatterns/FilesLinesLeak.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/FilesLinesLeakTest.java
A	docs/bugpattern/FilesLinesLeak.md

commit fa4b574af84dd8f09d4ecc56f1609a04a05c2bc3
Author: awturner <awturner@google.com>
Date:   Tue Nov 29 15:58:23 2016 -0800

    Errorprone: make GuardedByCheck check inside try-with-resources catch and finally block.
    
    There should be no issue with any locks held by the resources in these blocks because
    the resources are not in scope here, and have been released prior to their execution
    (assuming the fact that any acquired locks are released correctly by those resources).
    
    RELNOTES: Adds checking for @GuardedBy locks/methods inside the catch and finally parts of try-with-resources statements.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=140539161

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzer.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByCheckerTest.java

commit 99a164ffd7137e1a10cbf2bc59f3661e6e86ebed
Author: cpovirk <cpovirk@google.com>
Date:   Tue Nov 29 15:14:28 2016 -0800

    Release AsyncCallableReturnsNull now that AsyncCallable has been released (in Guava 20).
    
    RELNOTES: Add an AsyncCallable analog to AsyncFunctionReturnsNull.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=140533764

A	core/src/main/java/com/google/errorprone/bugpatterns/AsyncCallableReturnsNull.java

commit a1b667fde8849a24e204f7a6d4c774209fe7fecb
Author: cushon <cushon@google.com>
Date:   Mon Nov 28 17:20:32 2016 -0800

    Fix VarChecker handling of TWR and catch variables
    
    Fixes #484
    
    MOE_MIGRATED_REVID=140422462

M	core/src/main/java/com/google/errorprone/bugpatterns/VarChecker.java
M	core/src/test/java/com/google/errorprone/bugpatterns/VarCheckerTest.java

commit 174dc477f54278877e8d68793f007d4cd068db23
Author: cushon <cushon@google.com>
Date:   Mon Nov 28 17:11:09 2016 -0800

    Update to guava 20
    
    Prompted by #482
    
    RELNOTES: N/A
    
    MOE_MIGRATED_REVID=140421560

M	pom.xml

commit 8e17a4123d98322ad0b7f635e6153a5a7e25888c
Author: cpovirk <cpovirk@google.com>
Date:   Tue Nov 22 05:11:28 2016 -0800

    Build annotations package for Java 7.
    
    Fixes #480
    
    MOE_MIGRATED_REVID=139896202

M	annotations/pom.xml

commit 390d90ea894e8270f1c9ddc09df20a01feb1647a
Author: cushon <cushon@google.com>
Date:   Mon Nov 21 08:21:48 2016 -0800

    New check for methods that could be static
    
    RELNOTES: New check for methods that could be static
    
    MOE_MIGRATED_REVID=139787194

A	core/src/main/java/com/google/errorprone/bugpatterns/CanBeStaticAnalyzer.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ClassCanBeStatic.java
A	core/src/main/java/com/google/errorprone/bugpatterns/MethodCanBeStatic.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/MethodCanBeStaticTest.java

commit ba67561b58f38e2e951c7885dbbbb7c7a309fd85
Author: jdd <jdd@google.com>
Date:   Thu Nov 17 11:55:54 2016 -0800

    Slight wording improvements to g3doc.
    
    MOE_MIGRATED_REVID=139488392

M	docs/bugpattern/ReferenceEquality.md

commit f47938e3fe1b5754f4b8e8369142f704fbfde9a2
Author: michaelroger <michaelroger@google.com>
Date:   Mon Nov 14 17:49:46 2016 -0800

    Fix typo in comment: annotation -> declaration
    
    MOE_MIGRATED_REVID=139146204

M	docs/bugpattern/ImmutableEnumChecker.md

commit f03681e1cc77b52678c7b92115a65f486d263056
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Tue Nov 15 22:31:04 2016 -0800

    Don't notify on appveyor build success

M	appveyor.yml

commit b490b0c5471145ae2ea71e8c9c51b1efa44b3103
Author: Michael Hixson <michael.hixson@gmail.com>
Date:   Tue Nov 15 10:30:52 2016 -0800

    Whitelist java.time interfaces whose contracts demand immutability (#478)
    
    Also whitelist abstract classes with the same contract and whitelist the
    implementations of those interfaces and abstract classes.
    
    Fixes #477

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/WellKnownMutability.java

commit 0dbf981604e85f81d5dbdb94773c0955eb934909
Author: glorioso <glorioso@google.com>
Date:   Fri Nov 11 14:28:09 2016 -0800

    Add an annotation-driven version of incompatible type checking.
    
    Where cast-compatibility as having a valid reference casting conversion
    between two types (see JLS 5.5.1)
    
    * @CompatibleWith - an annotation that should be placed on parameters whose
      callers should pass arguments that are  cast-compatible with the instantiation
      of a type argument at the call site.
    * Checker: CompatibleWithMisuse - checks applications of @CompatibleWith to
      ensure that the type argument being referred to is a valid type argument.
    * Checker: IncompatibleArgumentType - checks that callers of methods whose
      parameters are annotated with @CompatibleWith pass arguments that are
      cast-compatible with the generic type in question:
    
      class Foo<X> {
        void something(@CW("X") Object x)
        <T> T somethingElse(@CW("T") Object t);
      }
      ...
      Foo<String> var = new Foo<String>();
      var.something("hi"); // OK
      var.something(0.42); // Not OK
      var.<Double>somethingElse(0.23); // OK
      var.<Double>somethingElse("a"); // Not OK
    
    RELNOTES: New annotation-driven check to enforce that parameters passed to a
    method are 'cast-castable' to a generic instance. See
    http://errorprone.info/bugpattern/CollectionIncompatibleType
    
    MOE_MIGRATED_REVID=138919170

A	annotations/src/main/java/com/google/errorprone/annotations/CompatibleWith.java
M	check_api/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	check_api/src/main/java/com/google/errorprone/util/Signatures.java
M	core/src/main/java/com/google/errorprone/bugpatterns/collectionincompatibletype/CollectionIncompatibleType.java
A	core/src/main/java/com/google/errorprone/bugpatterns/collectionincompatibletype/CompatibleWithMisuse.java
A	core/src/main/java/com/google/errorprone/bugpatterns/collectionincompatibletype/IncompatibleArgumentType.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/collectionincompatibletype/CompatibleWithMisuseTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/collectionincompatibletype/IncompatibleArgumentTypeTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/collectionincompatibletype/testdata/IncompatibleArgumentTypeEnclosingTypes.java
A	core/src/test/java/com/google/errorprone/bugpatterns/collectionincompatibletype/testdata/IncompatibleArgumentTypeGenericMethod.java
A	core/src/test/java/com/google/errorprone/bugpatterns/collectionincompatibletype/testdata/IncompatibleArgumentTypeIntersectionTypes.java
A	core/src/test/java/com/google/errorprone/bugpatterns/collectionincompatibletype/testdata/IncompatibleArgumentTypeMultimapIntegration.java
A	docs/bugpattern/IncompatibleArgumentType.md

commit 3f60de73d8973187c326cb06931998eb798fb6a8
Author: cushon <cushon@google.com>
Date:   Fri Nov 11 12:46:50 2016 -0800

    Disallow calling mutators on immutable collections
    
    RELNOTES: New check to disallow calling mutators on immutable collections
    
    MOE_MIGRATED_REVID=138907781

A	core/src/main/java/com/google/errorprone/bugpatterns/ImmutableModification.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/ImmutableModificationTest.java

commit b17fffc046532625cc49e104bea1fecdc8a2db04
Author: cushon <cushon@google.com>
Date:   Fri Nov 11 11:11:46 2016 -0800

    Improve immutable enum checker docs
    
    MOE_MIGRATED_REVID=138896938

M	docs/bugpattern/ImmutableEnumChecker.md

commit de3a4399a0ef3e7809471076dd776dc58bb03501
Author: cushon <cushon@google.com>
Date:   Fri Nov 11 11:00:09 2016 -0800

    Add Immutable as an alternate name of ImmutableEnumChecker
    
    MOE_MIGRATED_REVID=138895295

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableEnumChecker.java

commit b47de27e8e9d577d498ca1366dd1eb62d83752ef
Author: cushon <cushon@google.com>
Date:   Fri Nov 11 10:42:48 2016 -0800

    Whitelist android.net.Uri as a well known immutable type
    
    MOE_MIGRATED_REVID=138893038

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/WellKnownMutability.java

commit 0bb5a2944ce8f8d0eab1f69ae26a0c2bd9816acd
Author: cushon <cushon@google.com>
Date:   Fri Nov 11 09:50:48 2016 -0800

    Fix a crash handling bug
    
    Blind fix for bazelbuild/bazel#2073
    
    Columns are 1-indexed, but DiagnosticSource#getColumnNumber returns 0 if
    it can't find the position in the current source file. That shouldn't
    happen, but we don't want to crash if it does.
    
    MOE_MIGRATED_REVID=138886640

M	check_api/src/main/java/com/google/errorprone/ErrorProneError.java

commit 789776a0ae401ffb0c9eabaf86ac2382ceb33ecc
Author: cushon <cushon@google.com>
Date:   Thu Nov 10 18:36:07 2016 -0800

    Tolerate missing symbols in FunctionalInterfaceCrash
    
    Fixes #473
    
    MOE_MIGRATED_REVID=138832323

M	core/src/main/java/com/google/errorprone/bugpatterns/FunctionalInterfaceClash.java
M	core/src/test/java/com/google/errorprone/bugpatterns/FunctionalInterfaceClashTest.java

commit 5ce44a428fbf1336dfaf025bec7c63621e05c250
Author: cushon <cushon@google.com>
Date:   Thu Nov 10 14:45:27 2016 -0800

    Adjust ThrowsUncheckedException diagnostic position
    
    Hang the finding off the first exception, rather than the entire method
    declaration.
    
    MOE_MIGRATED_REVID=138808173

M	core/src/main/java/com/google/errorprone/bugpatterns/ThrowsUncheckedException.java

commit 9939352a361bbb67918879d89e9c8b84e695a876
Author: epmjohnston <epmjohnston@google.com>
Date:   Thu Nov 10 12:17:13 2016 -0800

    Add an android-only check to prevent passing a tag to android.util.Log
    isLoggable that is too long.
    
    Produces a compile error for string constant values and class literal
    simple names >23 characters long passed as tag values to isLoggable.
    
    RELNOTES: Add a check to prevent passing a tag to android.util.Log
    isLoggable that is too long.
    
    MOE_MIGRATED_REVID=138789851

A	core/src/main/java/com/google/errorprone/bugpatterns/android/IsLoggableTagLength.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/android/IsLoggableTagLengthTest.java

commit f91884ca43d28979b61ff7cc58794e7793f61d7f
Author: cushon <cushon@google.com>
Date:   Tue Nov 8 11:14:05 2016 -0800

    Improve immutable enum diagnostics
    
    * clarify that @Immutable needs to be added to the declaration of
      a mutable field's type, not the field itself
    
    * discourage annotating enums as explicitly @Immutable
    
    MOE_MIGRATED_REVID=138540384

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableAnalysis.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableEnumChecker.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableEnumCheckerTest.java

commit c2539344179e41e524014b1c064aa71630a09401
Author: eaftan <eaftan@google.com>
Date:   Tue Nov 8 08:37:52 2016 -0800

    Add an ArgumentParameterMismatch check
    
    that finds places where a potential argument is more lexically similar
    to a parameter name than the existing argument, and suggests replacing
    it.
    
    This is an implementation of the argument recommendation analysis from
    Liu et al., "Nomen est Omen: Exploring and Exploiting Similarities
    between Argument and Parameter Names," ICSE 2016.
    
    Fixes #453
    
    RELNOTES: New check for possible incorrect arguments to method calls.
    
    MOE_MIGRATED_REVID=138521607

A	core/src/main/java/com/google/errorprone/bugpatterns/AbstractArgumentParameterChecker.java
A	core/src/main/java/com/google/errorprone/bugpatterns/ArgumentParameterMismatch.java
A	core/src/main/java/com/google/errorprone/bugpatterns/ArgumentParameterSimilarityMetrics.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArgumentParameterSwap.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/ArgumentParameterMismatchTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/ArgumentParameterSimilarityMetricsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArgumentParameterSwapTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArgumentParameterSwapNegativeCases.java

commit ee1b1a198f6ccba3dcfabc60d26afc82f8543df2
Author: avenet <avenet@google.com>
Date:   Mon Nov 7 16:56:59 2016 -0800

    Change InsecureCipherMode message
    
    MOE_MIGRATED_REVID=138458673

M	core/src/main/java/com/google/errorprone/bugpatterns/InsecureCipherMode.java

commit 14da5e0467ef0bbc55bc6f91921ccf3c674b2cfa
Author: cushon <cushon@google.com>
Date:   Mon Nov 7 12:28:51 2016 -0800

    Remove unused imports
    
    MOE_MIGRATED_REVID=138424865

M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByLockMethodTest.java

commit a45b983513fae518edfb2ca835192b1a8668a293
Author: epmjohnston <epmjohnston@google.com>
Date:   Fri Nov 4 15:07:02 2016 -0700

    Add an android only check to disallow the use of static and default
    methods in interfaces.
    
    RELNOTES: Add an android only check to disallow the use of static and
    default methods in interfaces.
    
    MOE_MIGRATED_REVID=138239447

A	core/src/main/java/com/google/errorprone/bugpatterns/android/StaticOrDefaultInterfaceMethod.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/android/StaticOrDefaultInterfaceMethodTest.java
A	docs/bugpattern/android/StaticOrDefaultInterfaceMethod.md

commit 3ce6e2c73044032462a226bce7bce510aba334fc
Author: cushon <cushon@google.com>
Date:   Thu Jul 7 19:41:00 2016 -0400

    Make CollectionIncompatibleType an error
    
    RELNOTES: Enable CollectionIncompatibleType an error by default
    
    MOE_MIGRATED_REVID=138149208

M	core/src/main/java/com/google/errorprone/bugpatterns/collectionincompatibletype/CollectionIncompatibleType.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit 864ded31a18dc0ef3161dd99ef3332edf38d500a
Author: cushon <cushon@google.com>
Date:   Thu Nov 3 15:14:09 2016 -0700

    Add a check for mutable enums
    
    RELNOTES: New check for mutable enums
    
    MOE_MIGRATED_REVID=138124721

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableAnalysis.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableChecker.java
A	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableEnumChecker.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableEnumCheckerTest.java
A	docs/bugpattern/ImmutableEnumChecker.md

commit ddfc9bb4d6ca9172a7672ac8938de62c866a5218
Author: daw <daw@google.com>
Date:   Thu Nov 3 09:59:26 2016 -0700

    Make sure the DefaultCharset fix adds all required imports
    
    RELNOTES: Make sure the DefaultCharset fix adds all required imports
    
    MOE_MIGRATED_REVID=138082745

M	core/src/main/java/com/google/errorprone/bugpatterns/DefaultCharset.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DefaultCharsetTest.java

commit 2b10db140890cdbaf6dc137c74f9f249249ee754
Author: eaftan <eaftan@google.com>
Date:   Wed Nov 2 14:23:29 2016 -0700

    Add a check for cases where a copy of a collection
    
    is passed to a Collections method that modifies the collection in place,
    but the result is not used.
    
    For example:
    Collections.sort(new ArrayList<>(foo));
    
    RELNOTES: New Error Prone check for modifying a collection in place but
    not using the result
    
    MOE_MIGRATED_REVID=137993072

A	core/src/main/java/com/google/errorprone/bugpatterns/UnusedCollectionModifiedInPlace.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/UnusedCollectionModifiedInPlaceTest.java
A	docs/bugpattern/UnusedCollectionModifiedInPlace.md

commit ffc2ff335d0020df7736e4b81ddcc9fcd8a91ddd
Author: bangert <bangert@google.com>
Date:   Mon Oct 31 17:50:51 2016 -0700

    [PluggableType] Fix overloading generics.
    
    MOE_MIGRATED_REVID=137772486

M	check_api/src/main/java/com/google/errorprone/util/ASTHelpers.java

commit 02dd82f7690d20a8d0b32a3606abf60c05cb2bda
Author: glorioso <glorioso@google.com>
Date:   Mon Oct 31 14:35:26 2016 -0700

    Update version numbers in example files for 2.0.14 release
    
    MOE_MIGRATED_REVID=137750347

M	examples/ant/ant_fork/build.xml
M	examples/gradle/build.gradle
M	examples/maven/pom.xml
M	examples/plugin/bazel/WORKSPACE
M	examples/plugin/gradle/build.gradle
M	examples/plugin/gradle/sample_plugin/build.gradle
M	examples/plugin/maven/hello/pom.xml
M	examples/plugin/maven/sample_plugin/pom.xml

commit 9dce9d65b3c6dd496063209c772a1ef1a67cce65
Author: Nick Glorioso <glorioso@google.com>
Date:   Mon Oct 31 13:37:46 2016 -0700

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	annotations/pom.xml
M	ant/pom.xml
M	check_api/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	docgen_processor/pom.xml
M	pom.xml
M	test_helpers/pom.xml

commit b1a5ee6ad002bac3f697fee7eac271fc9f3f3a13
Author: Nick Glorioso <glorioso@google.com>
Date:   Mon Oct 31 13:37:36 2016 -0700

    [maven-release-plugin] prepare release v2.0.14

M	annotation/pom.xml
M	annotations/pom.xml
M	ant/pom.xml
M	check_api/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	docgen_processor/pom.xml
M	pom.xml
M	test_helpers/pom.xml

commit 4e3e2c5d59ba672da52964b4dec4b70a0835026b
Author: glorioso <glorioso@google.com>
Date:   Mon Oct 31 12:55:24 2016 -0700

    Fix javadoc in ASTHelpers
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=137737174

M	check_api/src/main/java/com/google/errorprone/util/ASTHelpers.java

commit d9b01a6601fa761f0ff96aea338d54bf075262a4
Author: avenet <avenet@google.com>
Date:   Mon Oct 31 10:59:58 2016 -0700

    Make ASTHelpers#findPathFromEnclosingNodeToTopLevel() public.
    
    MOE_MIGRATED_REVID=137722461

M	check_api/src/main/java/com/google/errorprone/util/ASTHelpers.java

commit 8c8b17ee70af31a22cb8c0c9215b6d6e1b5ecce3
Author: avenet <avenet@google.com>
Date:   Fri Oct 28 22:33:38 2016 -0700

    Expanding the scope of the checker to encompass a broader class of security vulnerabilities.
    
    Added a matcher for uses of the Diffie-Hellmann protocol on prime fields, which presents of number of security issues.
    
    MOE_MIGRATED_REVID=137585048

M	core/src/main/java/com/google/errorprone/bugpatterns/InsecureCipherMode.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InsecureCipherModeNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InsecureCipherModePositiveCases.java
D	docs/bugpattern/InsecureCipherMode.md
A	docs/bugpattern/InsecureCryptoUsage.md

commit de639a1ef4d962b984741ed346f0519c85eb6122
Author: glorioso <glorioso@google.com>
Date:   Fri Oct 7 17:54:34 2016 -0700

    Add a new Error Prone Option: -XepPatch
    
    which will apply all of the suggested fixes to the compiled sources.
    
    RELNOTES: Add an experimental option: -XepPatch, that will apply all of
    the suggested fixes from Error Prone to the source.
    
    Usages:
    -XepPatch:/absolute/path/to/source/root - This will generate a unixpatch at /absolute/path/to/source/root/error-prone.patch
    -XepPatch:IN_PLACE - This will refactor in place
    
    MOE_MIGRATED_REVID=137573513

M	check_api/pom.xml
M	check_api/src/main/java/com/google/errorprone/BaseErrorProneCompiler.java
M	check_api/src/main/java/com/google/errorprone/DescriptionListener.java
M	check_api/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
M	check_api/src/main/java/com/google/errorprone/ErrorProneOptions.java
M	check_api/src/main/java/com/google/errorprone/JavacErrorDescriptionListener.java
A	check_api/src/main/java/com/google/errorprone/RefactoringCollection.java
A	check_api/src/main/java/com/google/errorprone/apply/FsFileDestination.java
A	check_api/src/main/java/com/google/errorprone/apply/FsFileSource.java
A	check_api/src/main/java/com/google/errorprone/apply/PatchFileDestination.java
M	check_api/src/test/java/com/google/errorprone/ErrorProneOptionsTest.java
M	core/src/main/java/com/google/errorprone/BaseErrorProneJavaCompiler.java
A	examples/maven/error_prone_should_flag/src/main/java/SomethingElse.java
M	examples/maven/pom.xml

commit d1a513fc2312da09314318e51dda2c89367e009f
Author: cushon <cushon@google.com>
Date:   Fri Oct 28 17:04:24 2016 -0700

    Tweak immutable diagnostics
    
    "foo is mutable" is cleaner than "foo is known to be mutable".
    
    MOE_MIGRATED_REVID=137569872

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableAnalysis.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableCheckerTest.java

commit d75acd8015d1cc611c2e1ba45e6653d7b3674dc6
Author: eaftan <eaftan@google.com>
Date:   Fri Oct 28 17:03:27 2016 -0700

    PackageLocation should document suppression mechanism
    
    MOE_MIGRATED_REVID=137569783

M	core/src/main/java/com/google/errorprone/bugpatterns/PackageLocation.java

commit 4dfc65ad93fe42f0fda2577235a01ab68a4901bf
Author: andrewrice <andrewrice@google.com>
Date:   Fri Oct 28 16:14:29 2016 -0700

    Add new maven artifact test_helpers
    
    which can be used as a dependency for bugchecker tests. Some file moves
    from core to check_api to square off the maven dependency tree. No blaze
    targets or classnames should have changed.
    
    RELNOTES: Add new maven artifact test_helpers which can be used as a dependency
    for bugchecker tests.
    
    MOE_MIGRATED_REVID=137565255

A	check_api/src/main/java/com/google/errorprone/BaseErrorProneCompiler.java
A	check_api/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
A	check_api/src/main/java/com/google/errorprone/ErrorProneError.java
A	check_api/src/main/java/com/google/errorprone/ErrorPronePlugins.java
A	check_api/src/main/java/com/google/errorprone/ErrorProneVersion.java
A	check_api/src/main/java/com/google/errorprone/MaskedClassLoader.java
A	check_api/src/main/java/com/google/errorprone/scanner/ErrorProneScanner.java
A	check_api/src/main/java/com/google/errorprone/scanner/ErrorProneScannerTransformer.java
A	check_api/src/main/java/com/google/errorprone/scanner/InstanceReturningScannerSupplierImpl.java
A	check_api/src/main/java/com/google/errorprone/scanner/Scanner.java
A	check_api/src/main/java/com/google/errorprone/scanner/ScannerSupplier.java
A	check_api/src/main/java/com/google/errorprone/scanner/ScannerSupplierImpl.java
M	core/pom.xml
D	core/src/main/java/com/google/errorprone/BaseErrorProneCompiler.java
D	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
D	core/src/main/java/com/google/errorprone/ErrorProneError.java
D	core/src/main/java/com/google/errorprone/ErrorPronePlugins.java
D	core/src/main/java/com/google/errorprone/ErrorProneVersion.java
D	core/src/main/java/com/google/errorprone/MaskedClassLoader.java
D	core/src/main/java/com/google/errorprone/scanner/ErrorProneScanner.java
D	core/src/main/java/com/google/errorprone/scanner/ErrorProneScannerTransformer.java
D	core/src/main/java/com/google/errorprone/scanner/InstanceReturningScannerSupplierImpl.java
D	core/src/main/java/com/google/errorprone/scanner/Scanner.java
D	core/src/main/java/com/google/errorprone/scanner/ScannerSupplier.java
D	core/src/main/java/com/google/errorprone/scanner/ScannerSupplierImpl.java
D	core/src/test/java/com/google/errorprone/BugCheckerRefactoringTestHelper.java
D	core/src/test/java/com/google/errorprone/BugCheckerRefactoringTestHelperTest.java
D	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
D	core/src/test/java/com/google/errorprone/CompilationTestHelperTest.java
D	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java
D	core/src/test/java/com/google/errorprone/ErrorProneInMemoryFileManager.java
M	pom.xml
A	test_helpers/pom.xml
A	test_helpers/src/main/java/com/google/errorprone/BugCheckerRefactoringTestHelper.java
A	test_helpers/src/main/java/com/google/errorprone/CompilationTestHelper.java
A	test_helpers/src/main/java/com/google/errorprone/DiagnosticTestHelper.java
A	test_helpers/src/main/java/com/google/errorprone/ErrorProneInMemoryFileManager.java
A	test_helpers/src/test/java/com/google/errorprone/BugCheckerRefactoringTestHelperTest.java
A	test_helpers/src/test/java/com/google/errorprone/CompilationTestHelperTest.java

commit acea257fc2ec1f4b88eb556d3fddf738f1c8c839
Author: glorioso <glorioso@google.com>
Date:   Fri Oct 28 14:15:28 2016 -0700

    New check for subclasses of InputStream
    
    if a subclasser of InputStream implements int read(), they should also
    override int read(byte[], int, int), otherwise the performance of the
    stream is likely to be slow.
    
    RELNOTES: New Check: InputStream overrides should also override
    int read(byte[], int, int) to improve the speed of multibyte reads.
    
    MOE_MIGRATED_REVID=137551912

M	check_api/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/main/java/com/google/errorprone/bugpatterns/EqualsHashCode.java
A	core/src/main/java/com/google/errorprone/bugpatterns/InputStreamSlowMultibyteRead.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/InputStreamSlowMultibyteReadTest.java
A	docs/bugpattern/InputStreamSlowMultibyteRead.md

commit b030043851375036e097c0220dea2680bd76c0c2
Author: cushon <cushon@google.com>
Date:   Fri Oct 28 12:01:40 2016 -0700

    Refactor immutability analysis out of the @Immutable checker
    
    in preparation for adding a new check for mutable enums.
    
    MOE_MIGRATED_REVID=137536790

A	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableAnalysis.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableChecker.java

commit 78d6dbac381a69115b47d11e789aa079689dcadf
Author: kmb <kmb@google.com>
Date:   Thu Oct 27 18:11:25 2016 -0700

    rudimentary support for lambdas and method refs in nullness analysis
    
    RELNOTES: rudimentary support for lambdas and method refs in nullness analysis
    
    MOE_MIGRATED_REVID=137466445

M	check_api/src/main/java/com/google/errorprone/dataflow/DataFlow.java
M	check_api/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	core/src/test/java/com/google/errorprone/bugpatterns/nullness/FieldMissingNullableTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/nullness/ReturnMissingNullableTest.java

commit 600f52d677728bf04941f0635d6c65350b2a6b12
Author: cushon <cushon@google.com>
Date:   Thu Oct 27 17:45:37 2016 -0700

    Delete obsolete API in ErrorProneAnalyzer
    
    MOE_MIGRATED_REVID=137464177

M	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java

commit c0b8d87a6a0a0e9f67b74a208b517149b0447492
Author: andrewrice <andrewrice@google.com>
Date:   Thu Oct 27 16:49:38 2016 -0700

    Add bug pattern to detect when String.replace could be used in place of String.replaceAll
    
    RELNOTES: Added BranchedSuggestedFixes for building a set of alternative fixes
    
    MOE_MIGRATED_REVID=137458887

A	check_api/src/main/java/com/google/errorprone/fixes/BranchedSuggestedFixes.java
M	check_api/src/main/java/com/google/errorprone/matchers/Description.java
A	check_api/src/test/java/com/google/errorprone/fixes/BranchedSuggestedFixesTest.java
M	core/src/test/java/com/google/errorprone/BugCheckerRefactoringTestHelper.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ConstantFieldTest.java

commit 2e02e662e59883acbe7ebbc299c1d32ca0b180d5
Author: cushon <cushon@google.com>
Date:   Thu Oct 27 15:49:08 2016 -0700

    Recognize PrintWriter in DefaultCharset
    
    The PrintWriter constructors use the default charset.
    
    RELNOTES: Recognize PrintWriter in DefaultCharset
    
    MOE_MIGRATED_REVID=137451993

M	core/src/main/java/com/google/errorprone/bugpatterns/DefaultCharset.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DefaultCharsetTest.java

commit 1d8a430d4639ee6c15800b0a1016a0fa6dfbfc7f
Author: cushon <cushon@google.com>
Date:   Wed Oct 26 12:33:19 2016 -0700

    Disallow type declarations in package-info.java files
    
    RELNOTES: New check to disallow type declarations in package-info.java files
    
    MOE_MIGRATED_REVID=137305812

A	core/src/main/java/com/google/errorprone/bugpatterns/PackageInfo.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/main/javatests/com/google/errorprone/bugpatterns/PackageInfoTest.java
A	docs/bugpattern/PackageInfo.md

commit dbe75956b0a267179e6a6f9cf2012dc61d850dca
Author: bhagwani <bhagwani@google.com>
Date:   Tue Oct 25 12:36:40 2016 -0700

    Add a warning for Truth assertThat calls on constants
    
    MOE_MIGRATED_REVID=137188595

A	core/src/main/java/com/google/errorprone/bugpatterns/TruthConstantAsserts.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/TruthConstantAssertsTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/TruthConstantAssertsNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/TruthConstantAssertsPositiveCases.java
A	docs/bugpattern/TruthConstantAsserts.md

commit 00643ccbdd7ee0f594f42e056cfc3433049e3557
Author: drichter <drichter@google.com>
Date:   Mon Oct 24 15:42:35 2016 -0700

    Tweak docs in @BugPattern.
    
    RELNOTES: Improve @BugPattern docs for JUnit3FloatingPointComparisonWithoutDelta.
    
    MOE_MIGRATED_REVID=137089526

M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit3FloatingPointComparisonWithoutDelta.java

commit 0b3ef62ccb9c949b5ee0c5bb0ab38a718ac3e43d
Author: cushon <cushon@google.com>
Date:   Mon Oct 24 13:44:42 2016 -0700

    Document assumption that enums are immutable
    
    MOE_MIGRATED_REVID=137074404

M	docs/bugpattern/ConstantField.md

commit 8c97bb79aca5c1f07e0da5e282fcf1bd2b3cd6ff
Author: cushon <cushon@google.com>
Date:   Mon Oct 24 11:39:26 2016 -0700

    More line ending fixes
    
    MOE_MIGRATED_REVID=137059488

M	check_api/src/main/java/com/google/errorprone/apply/ImportStatements.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MissingFail.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneInMemoryFileManager.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MultiVariableDeclarationTest.java
M	core/src/test/java/com/google/errorprone/refaster/AbstractUTreeTest.java
M	core/src/test/java/com/google/errorprone/refaster/UIfTest.java

commit 93a737c77a606b402df842ae5533cd5c33a11a55
Author: cushon <cushon@google.com>
Date:   Fri Oct 21 12:39:39 2016 -0700

    Make ImportStatements line break handling more portable
    
    This logic failed to trim the trailing `;` from imports with CRLF line
    endings, so we were emitting extra semi-colons. When javac see:
    
    import a.A;;
    import b.B;
    
    It accepts the extra import as a top-level type declaration due to a
    parser bug [1], and then adds all subsequent imports to the list of type
    declarations. Finally, compile-testing was searching the list of actual
    type declarations and asserting it contained exactly the expected types,
    and failing because of the unexpected import trees.
    
    [1] http://mail.openjdk.java.net/pipermail/compiler-dev/2013-August/006968.html
    
    MOE_MIGRATED_REVID=136861403

M	check_api/src/main/java/com/google/errorprone/apply/ImportStatements.java

commit 7bec7c44ea790df8e45de1384ba94269a8192ded
Author: cushon <cushon@google.com>
Date:   Fri Oct 21 12:17:47 2016 -0700

    Don't assume \n in BlockTemplate
    
    MOE_MIGRATED_REVID=136859367

M	core/src/main/java/com/google/errorprone/refaster/BlockTemplate.java

commit b324bb3775ccc011a0cb58d4a49657fe36d5bc61
Author: cushon <cushon@google.com>
Date:   Fri Oct 21 11:00:18 2016 -0700

    Improve ConstantField fix for c++-style constant names
    
    Drop the 'k' from kSomeConstant when converting to CONST_CASE; it's a
    c++-ism.
    
    RELNOTES: Improve ConstantField fix for c++-style constant names
    
    MOE_MIGRATED_REVID=136850648

M	core/src/main/java/com/google/errorprone/bugpatterns/ConstantField.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ConstantFieldTest.java

commit f3c8eef191060d7cacacdc876a3d058293b174ba
Author: cushon <cushon@google.com>
Date:   Fri Oct 21 08:49:36 2016 -0700

    Add a cast when rewriting `new Double(float)`
    
    the expression may need to auto-box back to Double, and widening
    conversions can't be combined with autoboxing.
    
    MOE_MIGRATED_REVID=136836322

M	core/src/main/java/com/google/errorprone/bugpatterns/BoxedPrimitiveConstructor.java
M	core/src/test/java/com/google/errorprone/bugpatterns/BoxedPrimitiveConstructorTest.java

commit ffa773e641f1e0cc7619fbe724177da52b8e5a82
Author: eaftan <eaftan@google.com>
Date:   Thu Jul 21 21:20:23 2016 -0700

    Set up AppVeyor Windows continuous build.
    
    MOE_MIGRATED_REVID=136795954

A	appveyor.yml

commit 26cdda11ddca00935691499151677f892f79dc75
Author: cushon <cushon@google.com>
Date:   Thu Oct 20 12:06:44 2016 -0700

    Improve MissingCasesInEnumSwitch docs
    
    MOE_MIGRATED_REVID=136742860

M	core/src/main/java/com/google/errorprone/bugpatterns/MissingCasesInEnumSwitch.java
A	docs/bugpattern/MissingCasesInEnumSwitch.md

commit 5e1dd2d1ecf4d295b39cde754e2237cc6dab173c
Author: cushon <cushon@google.com>
Date:   Wed Oct 19 14:53:35 2016 -0700

    Detect methods whose method reference type is ambiguous
    
    Fixes #263
    
    RELNOTES: New check for methods whose method reference type is ambiguous
    
    MOE_MIGRATED_REVID=136645807

A	check_api/src/main/java/com/google/errorprone/util/Signatures.java
A	core/src/main/java/com/google/errorprone/bugpatterns/AmbiguousMethodReference.java
M	core/src/main/java/com/google/errorprone/bugpatterns/FunctionalInterfaceClash.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/AmbiguousMethodReferenceTest.java
A	docs/bugpattern/AmbiguousMethodReference.md

commit dad824e4a5e9d45b303f48a0ff2cf9c0fa2c8d0a
Author: cushon <cushon@google.com>
Date:   Tue Oct 18 19:00:42 2016 -0700

    Recognize effectively final params in NonFinalCompileTimeConstant
    
    And drop the suggested fix, since it doesn't make sense for the
    effectively final case.
    
    MOE_MIGRATED_REVID=136548432

M	core/src/main/java/com/google/errorprone/bugpatterns/NonFinalCompileTimeConstant.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NonFinalCompileTimeConstantTest.java
A	docs/bugpattern/NonFinalCompileTimeConstant.md

commit bb5885610f815f31634c1315701767770df104ab
Author: andrewrice <andrewrice@google.com>
Date:   Mon Oct 17 18:08:13 2016 -0700

    Return NO_MATCH if we can't resolve the symbol for the method
    
    MOE_MIGRATED_REVID=136422169

M	core/src/main/java/com/google/errorprone/bugpatterns/ArgumentParameterSwap.java

commit 16eb5212b1b06fb9397b3e8dd4a75e65d62a23b2
Author: cushon <cushon@google.com>
Date:   Mon Oct 17 10:43:14 2016 -0700

    Assume fields whose type is an enum are immutable in ConstantField
    
    MOE_MIGRATED_REVID=136367628

M	check_api/src/main/java/com/google/errorprone/fixes/SuggestedFixes.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ConstantField.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ConstantFieldTest.java

commit 28071e24f899557d8100d084e5868feb87235066
Author: eaftan <eaftan@google.com>
Date:   Fri Oct 14 15:44:27 2016 -0700

    Fix bug in SuggestedFixes.addModifiers
    
    when you are trying to add a modifier to a method declaration where
    there is an annotation on the line before, e.g.
    
        @Nullable
        void foo() {}
    
    Previously this would add the modifier at the beginning of the line, not
    indenting properly:
    
        @Nullable
    <modifier>    void foo() {}
    
    MOE_MIGRATED_REVID=136207477

M	check_api/src/main/java/com/google/errorprone/fixes/SuggestedFixes.java
M	core/src/test/java/com/google/errorprone/fixes/SuggestedFixesTest.java

commit 276307cd90ec1ec6444fecc83baffd53af7a91af
Author: cushon <cushon@google.com>
Date:   Wed Oct 12 22:30:11 2016 -0700

    Fix RemoveUnusedImport's handling of @link method parameters
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=136001876

M	core/src/main/java/com/google/errorprone/bugpatterns/RemoveUnusedImports.java
M	core/src/test/java/com/google/errorprone/bugpatterns/RemoveUnusedImportsTest.java

commit fbbb5b84ad5ca3b88eb461ec7294ab1c870dfb9e
Author: cushon <cushon@google.com>
Date:   Wed Oct 12 20:00:49 2016 -0700

    Allow tests to optionally emit fixes that don't compile
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=135993696

M	core/src/test/java/com/google/errorprone/BugCheckerRefactoringTestHelper.java

commit 5fbbe3e6ed25de4a46a48662b659ceee892a4e76
Author: eaftan <eaftan@google.com>
Date:   Wed Oct 12 17:25:25 2016 -0700

    Add a utility method to find all identifiers in scope.  Consolidate it and
    ASTHelpers.findIdent() into a new utility class, FindIdentifiers.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=135983619

M	check_api/src/main/java/com/google/errorprone/util/ASTHelpers.java
A	check_api/src/main/java/com/google/errorprone/util/FindIdentifiers.java

commit f24abe839bf87741834d25a952d9c7aa0a94eb4d
Author: cushon <cushon@google.com>
Date:   Wed Oct 12 16:52:24 2016 -0700

    Assert that BugCheckerRefactoringTestHelper outputs compile
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=135979952

M	core/src/test/java/com/google/errorprone/BugCheckerRefactoringTestHelper.java

commit b8a5a3c4a105a52328f8d4a728b2a3e9023f1e02
Author: cushon <cushon@google.com>
Date:   Wed Oct 12 14:14:24 2016 -0700

    Remove a left-over print statement
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=135960633

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableChecker.java

commit 6adbf3e9a1da6356c75df1101717a178b82011ac
Author: cushon <cushon@google.com>
Date:   Wed Oct 12 14:07:14 2016 -0700

    Clean up CompileTimeConstantExpressionMatcher
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=135959755

M	check_api/src/main/java/com/google/errorprone/matchers/CompileTimeConstantExpressionMatcher.java

commit b60f2a4657249a3c93d85297b487dba8dfbd1098
Author: cushon <cushon@google.com>
Date:   Wed Oct 12 12:07:27 2016 -0700

    Fix TruthSelfEquals handling of custom subject-returning methods
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=135945376

M	core/src/main/java/com/google/errorprone/bugpatterns/TruthSelfEquals.java
M	core/src/test/java/com/google/errorprone/bugpatterns/TruthSelfEqualsTest.java

commit 127ec2c873834b5492409e3a9e30f1af8b984ec1
Author: cushon <cushon@google.com>
Date:   Wed Oct 12 11:39:43 2016 -0700

    DefaultCharset: fix variable types
    
    Do a better job of replacing variables of type FileWriter
    or FileReader whose initializers are migrated to use
    Writer or Reader instead.
    
    RELNOTES: Improve DefaultCharset suggested fix
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=135941942

M	core/src/main/java/com/google/errorprone/bugpatterns/DefaultCharset.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DefaultCharsetTest.java

commit ca7e65b9c43142efa3260d97436c94a3e3b6fe6e
Author: cushon <cushon@google.com>
Date:   Wed Oct 12 11:26:15 2016 -0700

    Recognize effectively-final compile time constants
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=135940205

M	check_api/src/main/java/com/google/errorprone/matchers/CompileTimeConstantExpressionMatcher.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CompileTimeConstantCheckerTest.java
M	core/src/test/java/com/google/errorprone/matchers/CompileTimeConstantExpressionMatcherTest.java

commit 9b9744bd0afc0ecd25c55f6c96599e56f132ab23
Author: lowasser <lowasser@google.com>
Date:   Wed Oct 12 11:22:40 2016 -0700

    Add a way, in Refaster, to force the varargs overload of a method to be used with a @Repeated argument.
    
    RELNOTES: none
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=135939725

M	core/src/main/java/com/google/errorprone/refaster/Refaster.java
M	core/src/main/java/com/google/errorprone/refaster/UTemplater.java
M	core/src/test/java/com/google/errorprone/refaster/TemplateIntegrationTest.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/AsVarargsTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/AsVarargsTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/AsVarargsTemplate.java

commit 299fe7330ed11999775825120afd79027c98da2e
Author: andrewrice <andrewrice@google.com>
Date:   Wed Oct 12 11:12:31 2016 -0700

    Add a beta parameter to ArgumentParameterSwap. Candidate arguments will only
    replace the current argument if they are a factor of beta more similar to the
    parameter
    
    RELNOTES: none
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=135938325

M	core/src/main/java/com/google/errorprone/bugpatterns/ArgumentParameterSwap.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArgumentParameterSwapTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArgumentParameterSwapPositiveCases.java

commit 4cbb157f41220b9c1e98c1e9799b775d41d8abc4
Author: glorioso <glorioso@google.com>
Date:   Tue Oct 11 14:04:25 2016 -0700

    Update docs on ScopeOrQualifierAnnotationRetention
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=135838228

M	docs/bugpattern/InjectScopeOrQualifierAnnotationRetention.md

commit df31faec191178913b0177124ccd9516f05f1ddd
Author: cushon <cushon@google.com>
Date:   Tue Oct 11 07:52:27 2016 -0700

    Remove @BugPattern maturity
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=135795703

M	annotation/src/main/java/com/google/errorprone/BugPattern.java

commit 9e83b82124793c5d36867e84e0821b31e3a045f0
Author: andrewrice <andrewrice@google.com>
Date:   Mon Oct 10 17:10:26 2016 -0700

    Update getRelevantName to use the same rules as defined in the paper
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=135740455

M	core/src/main/java/com/google/errorprone/bugpatterns/ArgumentParameterSwap.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArgumentParameterSwapTest.java

commit 3b160b06bf592166e94a53f3cf4f4684b0b28007
Author: lowasser <lowasser@google.com>
Date:   Mon Oct 10 17:05:07 2016 -0700

    Restore changes to Matches.java
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=135739832

M	core/src/main/java/com/google/errorprone/refaster/annotation/Matches.java

commit cf3a28677f9ceb5073528c37ab629eb15d24750c
Author: cushon <cushon@google.com>
Date:   Mon Oct 10 14:43:16 2016 -0700

    Wordsmith UnnecessaryTypeArgument docs
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=135722743

M	docs/bugpattern/UnnecessaryTypeArgument.md

commit 4db9522b988deed4ff30128911cb67fdcb9dbd62
Author: andrewrice <andrewrice@google.com>
Date:   Mon Oct 10 12:22:01 2016 -0700

    Add arguments to ArgumentParameterSwap's constructor so that we can experiment with
    other parameters in the checker.
    
    RELNOTES: none
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=135705443

M	core/src/main/java/com/google/errorprone/bugpatterns/ArgumentParameterSwap.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArgumentParameterSwapTest.java

commit 4c99fd6dc4452d6194d4bcbda959c848d37d7e1a
Author: cushon <cushon@google.com>
Date:   Mon Oct 10 12:21:57 2016 -0700

    Remove references to @BugPattern maturity
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=135705436

M	check_api/src/main/java/com/google/errorprone/BugCheckerInfo.java
M	check_api/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
M	check_api/src/test/java/com/google/errorprone/matchers/DescriptionTest.java
M	core/src/main/java/com/google/errorprone/bugpatterns/CompileTimeConstantChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InsecureCipherMode.java
M	core/src/main/java/com/google/errorprone/bugpatterns/UnnecessaryStaticImport.java
M	core/src/main/java/com/google/errorprone/bugpatterns/nullness/ParameterNotNullable.java
M	docgen/src/test/java/com/google/errorprone/BugPatternFileGeneratorTest.java
M	docgen_processor/src/main/java/com/google/errorprone/BugPatternInstance.java

commit 2e7012eef6986c45361e71c994becb5c80fec2d8
Author: lowasser <lowasser@google.com>
Date:   Mon Oct 10 11:31:42 2016 -0700

    Revert changes to Matches for internal reasons
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=135699120

M	core/src/main/java/com/google/errorprone/refaster/annotation/Matches.java

commit 761c6f3c801a15f8f48da982b398b9024c41fe0d
Author: andrewrice <andrewrice@google.com>
Date:   Fri Oct 7 17:11:32 2016 -0700

    Detect lower_underscore names and split appropriately
    
    RELNOTES: none
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=135535337

M	core/src/main/java/com/google/errorprone/bugpatterns/ArgumentParameterSwap.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArgumentParameterSwapTest.java

commit 5e3536d9e65eef767eb419f77018eadf44c519cd
Author: andrewrice <andrewrice@google.com>
Date:   Fri Oct 7 14:56:35 2016 -0700

    Updated comment on calculateSimilarity to explain contract. Changed tests to
    not rely on direct function being computed.
    
    RELNOTES: none
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=135521068

M	core/src/main/java/com/google/errorprone/bugpatterns/ArgumentParameterSwap.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArgumentParameterSwapTest.java

commit 7262694431208b5e0d882a545d8d1c41845554ec
Author: cushon <cushon@google.com>
Date:   Fri Oct 7 10:06:02 2016 -0700

    Add links to bugpattern pages
    
    MOE_MIGRATED_REVID=135487490

M	docgen/src/main/java/com/google/errorprone/BugPatternFileGenerator.java
M	docgen/src/main/java/com/google/errorprone/DocGenTool.java
M	docgen/src/main/java/com/google/errorprone/resources/bugpattern.mustache
M	docgen/src/test/java/com/google/errorprone/BugPatternFileGeneratorTest.java

commit 9974da800d27d4cedc5babbcec5e39cf49784613
Author: cushon <cushon@google.com>
Date:   Thu Oct 6 21:34:02 2016 -0700

    Tweak sort order of bugpatterns
    
    MOE_MIGRATED_REVID=135441470

M	docgen/src/main/java/com/google/errorprone/BugPatternIndexWriter.java

commit 7a26f95fe4ec60625e46597e0ab3bcb82e397345
Author: ciera <ciera@google.com>
Date:   Thu Oct 6 15:36:30 2016 -0700

    Revise the argument swap algorithm
    
    to be more flexible to fiuture revisions we have planned. In particular,
    we can now change which expressions to consider.
    
    MOE_MIGRATED_REVID=135414105

M	core/src/main/java/com/google/errorprone/bugpatterns/ArgumentParameterSwap.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArgumentParameterSwapTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArgumentParameterSwapPositiveCases.java

commit 1ad1b160a5e0a75d3748ca45e70dd0d46d16cfb0
Author: cushon <cushon@google.com>
Date:   Thu Oct 6 13:49:47 2016 -0700

    Document FunctionalInterfaceMethodChanged
    
    MOE_MIGRATED_REVID=135400048

M	core/src/main/java/com/google/errorprone/bugpatterns/FunctionalInterfaceMethodChanged.java
A	docs/bugpattern/FunctionalInterfaceMethodChanged.md

commit 20a5a9f425feaf8d36f70a3264a69f0e5f0a4802
Author: lowasser <lowasser@google.com>
Date:   Thu Oct 6 12:48:43 2016 -0700

    Add to StreamShortcuts suggestions
    
    for collecting into a mutable collection, and to eliminate roundtrips to
    arrays.
    
    MOE_MIGRATED_REVID=135392527

M	core/src/main/java/com/google/errorprone/refaster/annotation/Matches.java

commit 12ffeec880506fd6e68106f3e760d2a95a6c3ddd
Author: cushon <cushon@google.com>
Date:   Thu Oct 6 10:55:34 2016 -0700

    Remove references to @BugPattern maturity
    
    MOE_MIGRATED_REVID=135378137

M	core/src/main/java/com/google/errorprone/bugpatterns/inject/AssistedInjectAndInjectOnConstructors.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/AssistedInjectAndInjectOnSameConstructor.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/AutoFactoryAtInject.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/InjectedConstructorAnnotations.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/InvalidTargetingOnScopingAnnotation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/JavaxInjectOnAbstractMethod.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/JavaxInjectOnFinalField.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/MoreThanOneQualifier.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/MoreThanOneScopeAnnotationOnClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/OverlappingQualifierAndScopeAnnotation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/QualifierWithTypeUse.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/ScopeAnnotationOnInterfaceOrAbstractClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/ScopeOrQualifierAnnotationRetention.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/dagger/EmptySetMultibindingContributions.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/dagger/MultibindsInsteadOfMultibindings.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/dagger/UseBinds.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/AssistedInjectScoping.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/AssistedParameters.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/BindingToUnqualifiedCommonType.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/InjectOnFinalField.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/OverridesGuiceInjectableMethod.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/OverridesJavaxInjectableMethod.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/ProvidesMethodOutsideOfModule.java

commit 7989a8993c3ebb446e24b107c50765f735b32809
Author: glorioso <glorioso@google.com>
Date:   Wed Oct 5 17:02:33 2016 -0700

    Use ASTHelpers shared code for finding the potential annotation nodes for
    SuppressWarnings fixes.
    
    MOE_MIGRATED_REVID=135300350

M	check_api/src/main/java/com/google/errorprone/fixes/SuggestedFixes.java

commit 8e88b971cd142b94c90328a40e7f4591c88ab83a
Author: glorioso <glorioso@google.com>
Date:   Wed Oct 5 14:32:18 2016 -0700

    Add new SuggestedFixes function
    
    adding a @SuppressWarnings to the nearest suppressible element, and
    install it as an option to the CollectionIncompatibleType checker.
    
    MOE_MIGRATED_REVID=135280826

M	check_api/src/main/java/com/google/errorprone/fixes/SuggestedFixes.java
M	core/src/main/java/com/google/errorprone/bugpatterns/collectionincompatibletype/CollectionIncompatibleType.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/dagger/MultibindsInsteadOfMultibindings.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/dagger/Util.java
M	core/src/test/java/com/google/errorprone/bugpatterns/collectionincompatibletype/CollectionIncompatibleTypeTest.java
M	core/src/test/java/com/google/errorprone/fixes/SuggestedFixesTest.java

commit 66f34c9797ea3b735a400974042f2ab77448793d
Author: cushon <cushon@google.com>
Date:   Fri Jul 22 11:54:59 2016 -0400

    Remove references to @BugPattern maturity
    
    MOE_MIGRATED_REVID=135260609

M	core/src/main/java/com/google/errorprone/bugpatterns/android/FragmentNotInstantiable.java
M	core/src/main/java/com/google/errorprone/bugpatterns/android/HardCodedSdCardPath.java
M	core/src/main/java/com/google/errorprone/bugpatterns/android/MislabeledAndroidString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/nullness/FieldMissingNullable.java
M	core/src/main/java/com/google/errorprone/bugpatterns/nullness/ReturnMissingNullable.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/DoubleCheckedLocking.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/StaticGuardedByInstance.java
M	core/src/test/java/com/google/errorprone/BugCheckerRefactoringTestHelperTest.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelperTest.java
M	core/src/test/java/com/google/errorprone/fixes/SuggestedFixesTest.java
M	core/src/test/java/com/google/errorprone/matchers/MethodMatchersTest.java
M	core/src/test/java/com/google/errorprone/matchers/NextStatementTest.java

commit af1b64465e86484de934820b47d922d2dc43444f
Author: cushon <cushon@google.com>
Date:   Fri Jul 15 11:54:04 2016 -0400

    Remove references to @BugPattern maturity
    
    MOE_MIGRATED_REVID=135260472

M	core/src/main/java/com/google/errorprone/bugpatterns/ArgumentParameterSwap.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArraysAsListPrimitiveArray.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BadComparable.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BigDecimalLiteralDouble.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BoxedPrimitiveConstructor.java
M	core/src/main/java/com/google/errorprone/bugpatterns/CheckReturnValue.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ClassNewInstance.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ConstantField.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ConstantOverflow.java
M	core/src/main/java/com/google/errorprone/bugpatterns/DefaultCharset.java
M	core/src/main/java/com/google/errorprone/bugpatterns/EmptyTopLevelDeclaration.java
M	core/src/main/java/com/google/errorprone/bugpatterns/EqualsHashCode.java
M	core/src/main/java/com/google/errorprone/bugpatterns/EqualsIncompatibleType.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ForOverrideChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GetClassOnAnnotation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GetClassOnClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GetClassOnEnum.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GuavaSelfEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/HashtableContains.java
M	core/src/main/java/com/google/errorprone/bugpatterns/IdentityBinaryExpression.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InfiniteRecursion.java
M	core/src/main/java/com/google/errorprone/bugpatterns/IsInstanceOfClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/IterableAndIterator.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MissingCasesInEnumSwitch.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MissingOverride.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MockitoCast.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MockitoUsage.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ModifyingCollectionWithItself.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NarrowingCompoundAssignment.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NonCanonicalStaticMemberImport.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NullableConstructor.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NullablePrimitive.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NullableVoid.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NumericEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/OperatorPrecedence.java
M	core/src/main/java/com/google/errorprone/bugpatterns/OptionalEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PrivateConstructorForUtilityClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ProtoFieldNullComparison.java
M	core/src/main/java/com/google/errorprone/bugpatterns/RedundantThrows.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ReferenceEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/RequiredModifiersChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfComparison.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StreamToString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StringEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ThrowIfUncheckedKnownChecked.java
M	core/src/main/java/com/google/errorprone/bugpatterns/TruthSelfEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/TypeParameterQualifier.java
M	core/src/main/java/com/google/errorprone/bugpatterns/TypeParameterUnusedInFormals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/UnsynchronizedOverridesSynchronized.java
M	core/src/main/java/com/google/errorprone/bugpatterns/UnusedAnonymousClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/VarChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/WrongParameterPackage.java

commit d2ca992a8d580e753bdb69ef9150f40a0d5f5f8e
Author: glorioso <glorioso@google.com>
Date:   Wed Oct 5 10:17:19 2016 -0700

    Add a new Check: QualifierOnMethodWithoutProvides
    
    as well as refactor of some of the InjectMatchers code.
    
    RELNOTES: New check: QualifierOnMethodWithoutProvides, to detect when
    qualifiers (ex. @Named("something")) are used on method declarations
    outside of Guice/Dagger Module objects.
    
    MOE_MIGRATED_REVID=135246722

M	check_api/src/main/java/com/google/errorprone/matchers/InjectMatchers.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/AssistedInjectAndInjectOnConstructors.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/MoreThanOneScopeAnnotationOnClass.java
A	core/src/main/java/com/google/errorprone/bugpatterns/inject/QualifierOnMethodWithoutProvides.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/ScopeOrQualifierAnnotationRetention.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/ProvidesMethodOutsideOfModule.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/QualifierOnMethodWithoutProvidesTest.java

commit f83c86e772c43db079b3ec8dfeb4ea1fb81b71c7
Author: cushon <cushon@google.com>
Date:   Tue Oct 4 16:22:50 2016 -0700

    Detect clashes between methods that accept the same functional interfaces
    
    See #263
    
    RELNOTES: New check to detect clashes between methods that accept the
    same functional interfaces
    
    MOE_MIGRATED_REVID=135167741

A	core/src/main/java/com/google/errorprone/bugpatterns/FunctionalInterfaceClash.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/FunctionalInterfaceClashTest.java
A	docs/bugpattern/FunctionalInterfaceClash.md

commit b5c1cd195e8633443cb94ec0838676a22598a123
Author: Nick Glorioso <glorioso@google.com>
Date:   Mon Oct 3 17:11:56 2016 -0700

    Attempt number 2 to fix docs

M	docgen/pom.xml

commit 3d2f411285692a560f681b6885b5ee2484bd6f1b
Author: glorioso <glorioso@google.com>
Date:   Mon Oct 3 16:32:29 2016 -0700

    Update generate-latest-docs.sh after changes to the docs source location
    in c2747d07c35bdd937ea43b693ab9344efa05c5cb
    
    MOE_MIGRATED_REVID=135042841

M	util/generate-latest-docs.sh

commit 7ba6b14fc810cb316bf47ceb4cb0308054f391d9
Author: cushon <cushon@google.com>
Date:   Mon Oct 3 12:10:54 2016 -0700

    Remove references to @BugPattern maturity
    
    MOE_MIGRATED_REVID=135010527

M	core/src/main/java/com/google/errorprone/bugpatterns/AsyncFunctionReturnsNull.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ChainingConstructorIgnoresParameter.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ClassCanBeStatic.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ClassName.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ComparisonContractViolated.java
M	core/src/main/java/com/google/errorprone/bugpatterns/Finally.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnitAmbiguousTestClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MissingFail.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MixedArrayDimensions.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MultiVariableDeclaration.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MultipleTopLevelClasses.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PackageLocation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ProtoStringFieldReferenceEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/RandomModInteger.java
M	core/src/main/java/com/google/errorprone/bugpatterns/RemoveUnusedImports.java
M	core/src/main/java/com/google/errorprone/bugpatterns/RestrictedApiChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StaticAccessedFromInstance.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StringBuilderInitWithChar.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ThrowsUncheckedException.java
M	core/src/main/java/com/google/errorprone/bugpatterns/TryFailThrowable.java
M	core/src/main/java/com/google/errorprone/bugpatterns/WildcardImport.java
M	core/src/main/java/com/google/errorprone/bugpatterns/collectionincompatibletype/CollectionIncompatibleType.java
M	core/src/main/java/com/google/errorprone/bugpatterns/formatstring/FormatString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/formatstring/FormatStringAnnotationChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/MoreThanOneInjectableConstructor.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/dagger/PrivateConstructorForNoninstantiableModule.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/dagger/ProvidesNull.java
M	core/src/test/java/com/google/errorprone/fixes/SuggestedFixesTest.java
M	examples/plugin/bazel/java/com/google/errorprone/sample/MyCustomCheck.java
M	examples/plugin/gradle/sample_plugin/src/main/java/com/google/errorprone/sample/MyCustomCheck.java
M	examples/plugin/maven/sample_plugin/src/main/java/com/google/errorprone/sample/MyCustomCheck.java

commit fdce17f74508c395f4c4d4beb1ea203aa8ebfd30
Author: cushon <cushon@google.com>
Date:   Mon Oct 3 10:54:55 2016 -0700

    Remove @BugPattern maturity
    
    MOE_MIGRATED_REVID=135001653

M	annotation/src/test/java/com/google/errorprone/BugPatternValidatorTest.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayHashCode.java
M	core/src/main/java/com/google/errorprone/bugpatterns/AssertFalse.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BadAnnotationImplementation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BadShiftAmount.java
M	core/src/main/java/com/google/errorprone/bugpatterns/CannotMockFinalClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ComparisonOutOfRange.java
M	core/src/main/java/com/google/errorprone/bugpatterns/DeadException.java
M	core/src/main/java/com/google/errorprone/bugpatterns/DepAnn.java
M	core/src/main/java/com/google/errorprone/bugpatterns/DivZero.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ElementsCountedInLoop.java
M	core/src/main/java/com/google/errorprone/bugpatterns/EmptyIfStatement.java
M	core/src/main/java/com/google/errorprone/bugpatterns/EqualsNaN.java
M	core/src/main/java/com/google/errorprone/bugpatterns/FuturesGetCheckedIllegalExceptionType.java
M	core/src/main/java/com/google/errorprone/bugpatterns/IncompatibleModifiersChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidPatternSyntax.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JMockTestWithoutRunWithOrRuleAnnotation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit3FloatingPointComparisonWithoutDelta.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit3TestNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4SetUpNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TearDownNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TestNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffix.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MisusedWeekYear.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NoAllocationChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NonAtomicVolatileUpdate.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NonCanonicalStaticImport.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NonFinalCompileTimeConstant.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NonOverridingEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NonRuntimeAnnotation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/Overrides.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNull.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitive.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsInvalidPlaceholder.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PrimitiveArrayPassedToVarargsMethod.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ProtoFieldPreconditionsCheckNotNull.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ReturnValueIgnored.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfAssignment.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SizeGreaterThanOrEqualsZero.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SuppressWarningsDeprecated.java
M	core/src/main/java/com/google/errorprone/bugpatterns/UnnecessaryTypeArgument.java
M	core/src/main/java/com/google/errorprone/bugpatterns/WaitNotInLoop.java
M	core/src/main/java/com/google/errorprone/bugpatterns/android/RectIntersectReturnValueIgnored.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByValidator.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/LockMethodChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/SynchronizeOnNonFinalField.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/UnlockMethodChecker.java
M	core/src/test/java/com/google/errorprone/CommandLineFlagTest.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelperTest.java
M	core/src/test/java/com/google/errorprone/DiagnosticKindTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneJavaCompilerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzerTest.java
M	core/src/test/java/com/google/errorprone/matchers/MatchersTest.java
A	docs/bugpattern/BadAnnotationImplementation.md
A	docs/bugpattern/BadShiftAmount.md
A	docs/bugpattern/GuardedByValidator.md
A	docs/bugpattern/JUnit4TearDownNotRun.md
A	docs/bugpattern/MisusedWeekYear.md
A	docs/bugpattern/NoAllocation.md
A	docs/bugpattern/SelfAssignment.md

commit e8af2a5f7082fd078969fb7b6b7fda8685626eed
Author: kmb <kmb@google.com>
Date:   Mon Oct 3 10:38:40 2016 -0700

    Make suggestions to remove @Nullable annotations
    
    for method parameters that aren't actually null-checked.  Removing these
    is useful b/c it reduces the burden on callers of these methods.
    
    RELNOTES: experimental suggestions to remove @Nullable annotations on
    method parameters that aren't null-checked
    
    MOE_MIGRATED_REVID=134999517

A	core/src/main/java/com/google/errorprone/bugpatterns/nullness/ParameterNotNullable.java
A	core/src/test/java/com/google/errorprone/bugpatterns/nullness/ParameterNotNullableTest.java

commit a5b6d24a0d34a5b922a036de3fc9dd1704b7cba0
Author: andrewrice <andrewrice@google.com>
Date:   Mon Oct 3 09:25:58 2016 -0700

    Pulled check_api target into a separate directory tree
    
    so that it can be a separate maven artifact. This is preliminary work
    towards pulling test helpers out to a separate maven artifact.
    
    RELNOTES: Move check_api to a separate maven artifact
    
    MOE_MIGRATED_REVID=134991638

A	check_api/pom.xml
A	check_api/src/main/java/com/google/errorprone/BugCheckerInfo.java
A	check_api/src/main/java/com/google/errorprone/CodeTransformer.java
A	check_api/src/main/java/com/google/errorprone/CompositeCodeTransformer.java
A	check_api/src/main/java/com/google/errorprone/DescriptionListener.java
A	check_api/src/main/java/com/google/errorprone/ErrorProneOptions.java
A	check_api/src/main/java/com/google/errorprone/InvalidCommandLineOptionException.java
A	check_api/src/main/java/com/google/errorprone/JavacErrorDescriptionListener.java
A	check_api/src/main/java/com/google/errorprone/SubContext.java
A	check_api/src/main/java/com/google/errorprone/SuppressionHelper.java
A	check_api/src/main/java/com/google/errorprone/VisitorState.java
A	check_api/src/main/java/com/google/errorprone/apply/DescriptionBasedDiff.java
A	check_api/src/main/java/com/google/errorprone/apply/Diff.java
A	check_api/src/main/java/com/google/errorprone/apply/DiffApplier.java
A	check_api/src/main/java/com/google/errorprone/apply/DiffNotApplicableException.java
A	check_api/src/main/java/com/google/errorprone/apply/DiffSupplier.java
A	check_api/src/main/java/com/google/errorprone/apply/DiscardingFileDestination.java
A	check_api/src/main/java/com/google/errorprone/apply/FileDestination.java
A	check_api/src/main/java/com/google/errorprone/apply/FileSource.java
A	check_api/src/main/java/com/google/errorprone/apply/ImportStatements.java
A	check_api/src/main/java/com/google/errorprone/apply/SourceFile.java
A	check_api/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
A	check_api/src/main/java/com/google/errorprone/dataflow/ConstantPropagationAnalysis.java
A	check_api/src/main/java/com/google/errorprone/dataflow/DataFlow.java
A	check_api/src/main/java/com/google/errorprone/dataflow/LocalStore.java
A	check_api/src/main/java/com/google/errorprone/dataflow/LocalVariableValues.java
A	check_api/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/AbstractNullnessPropagationTransfer.java
A	check_api/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/MethodInfo.java
A	check_api/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/Nullness.java
A	check_api/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessAnalysis.java
A	check_api/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
A	check_api/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/TrustingNullnessAnalysis.java
A	check_api/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/TrustingNullnessPropagation.java
A	check_api/src/main/java/com/google/errorprone/errors.properties
A	check_api/src/main/java/com/google/errorprone/fixes/AdjustedPosition.java
A	check_api/src/main/java/com/google/errorprone/fixes/AppliedFix.java
A	check_api/src/main/java/com/google/errorprone/fixes/Fix.java
A	check_api/src/main/java/com/google/errorprone/fixes/IndexedPosition.java
A	check_api/src/main/java/com/google/errorprone/fixes/Replacement.java
A	check_api/src/main/java/com/google/errorprone/fixes/Replacements.java
A	check_api/src/main/java/com/google/errorprone/fixes/SuggestedFix.java
A	check_api/src/main/java/com/google/errorprone/fixes/SuggestedFixes.java
A	check_api/src/main/java/com/google/errorprone/fixes/package-info.java
A	check_api/src/main/java/com/google/errorprone/matchers/AbstractTypeMatcher.java
A	check_api/src/main/java/com/google/errorprone/matchers/AnnotationDoesNotHaveArgument.java
A	check_api/src/main/java/com/google/errorprone/matchers/AnnotationHasArgumentWithValue.java
A	check_api/src/main/java/com/google/errorprone/matchers/AnnotationMatcher.java
A	check_api/src/main/java/com/google/errorprone/matchers/AnnotationMatcherUtils.java
A	check_api/src/main/java/com/google/errorprone/matchers/AnnotationType.java
A	check_api/src/main/java/com/google/errorprone/matchers/Asserts.java
A	check_api/src/main/java/com/google/errorprone/matchers/ChildMultiMatcher.java
A	check_api/src/main/java/com/google/errorprone/matchers/CompileTimeConstantExpressionMatcher.java
A	check_api/src/main/java/com/google/errorprone/matchers/CompoundAssignment.java
A	check_api/src/main/java/com/google/errorprone/matchers/ConstructorOfClass.java
A	check_api/src/main/java/com/google/errorprone/matchers/Contains.java
A	check_api/src/main/java/com/google/errorprone/matchers/DatastoreMatchers.java
A	check_api/src/main/java/com/google/errorprone/matchers/DescendantOf.java
A	check_api/src/main/java/com/google/errorprone/matchers/Description.java
A	check_api/src/main/java/com/google/errorprone/matchers/Enclosing.java
A	check_api/src/main/java/com/google/errorprone/matchers/HasArguments.java
A	check_api/src/main/java/com/google/errorprone/matchers/HasIdentifier.java
A	check_api/src/main/java/com/google/errorprone/matchers/InjectMatchers.java
A	check_api/src/main/java/com/google/errorprone/matchers/InstanceMethod.java
A	check_api/src/main/java/com/google/errorprone/matchers/IsLastStatementInBlock.java
A	check_api/src/main/java/com/google/errorprone/matchers/IsSameType.java
A	check_api/src/main/java/com/google/errorprone/matchers/IsSubtypeOf.java
A	check_api/src/main/java/com/google/errorprone/matchers/IsSymbol.java
A	check_api/src/main/java/com/google/errorprone/matchers/JUnitMatchers.java
A	check_api/src/main/java/com/google/errorprone/matchers/Matcher.java
A	check_api/src/main/java/com/google/errorprone/matchers/Matchers.java
A	check_api/src/main/java/com/google/errorprone/matchers/MethodHasParameters.java
A	check_api/src/main/java/com/google/errorprone/matchers/MethodInvocation.java
A	check_api/src/main/java/com/google/errorprone/matchers/MethodInvocationArgument.java
A	check_api/src/main/java/com/google/errorprone/matchers/MethodInvocationMethodSelect.java
A	check_api/src/main/java/com/google/errorprone/matchers/MethodVisibility.java
A	check_api/src/main/java/com/google/errorprone/matchers/MultiMatcher.java
A	check_api/src/main/java/com/google/errorprone/matchers/NextStatement.java
A	check_api/src/main/java/com/google/errorprone/matchers/NullnessMatcher.java
A	check_api/src/main/java/com/google/errorprone/matchers/ParentNode.java
A	check_api/src/main/java/com/google/errorprone/matchers/Returns.java
A	check_api/src/main/java/com/google/errorprone/matchers/StringLiteral.java
A	check_api/src/main/java/com/google/errorprone/matchers/Suppressible.java
A	check_api/src/main/java/com/google/errorprone/matchers/Throws.java
A	check_api/src/main/java/com/google/errorprone/matchers/WaitMatchers.java
A	check_api/src/main/java/com/google/errorprone/matchers/method/AbstractChainedMatcher.java
A	check_api/src/main/java/com/google/errorprone/matchers/method/AbstractSimpleMatcher.java
A	check_api/src/main/java/com/google/errorprone/matchers/method/AnyMethodMatcherImpl.java
A	check_api/src/main/java/com/google/errorprone/matchers/method/ConstructorClassMatcherImpl.java
A	check_api/src/main/java/com/google/errorprone/matchers/method/ConstructorMatcherImpl.java
A	check_api/src/main/java/com/google/errorprone/matchers/method/InstanceMethodMatcherImpl.java
A	check_api/src/main/java/com/google/errorprone/matchers/method/MatchState.java
A	check_api/src/main/java/com/google/errorprone/matchers/method/MethodClassMatcherImpl.java
A	check_api/src/main/java/com/google/errorprone/matchers/method/MethodMatcher.java
A	check_api/src/main/java/com/google/errorprone/matchers/method/MethodMatchers.java
A	check_api/src/main/java/com/google/errorprone/matchers/method/MethodNameMatcherImpl.java
A	check_api/src/main/java/com/google/errorprone/matchers/method/MethodSignatureMatcherImpl.java
A	check_api/src/main/java/com/google/errorprone/matchers/method/ParameterMatcherImpl.java
A	check_api/src/main/java/com/google/errorprone/matchers/method/StaticMethodMatcherImpl.java
A	check_api/src/main/java/com/google/errorprone/matchers/package-info.java
A	check_api/src/main/java/com/google/errorprone/predicates/TypePredicate.java
A	check_api/src/main/java/com/google/errorprone/predicates/TypePredicates.java
A	check_api/src/main/java/com/google/errorprone/predicates/type/Any.java
A	check_api/src/main/java/com/google/errorprone/predicates/type/Array.java
A	check_api/src/main/java/com/google/errorprone/predicates/type/DescendantOf.java
A	check_api/src/main/java/com/google/errorprone/predicates/type/DescendantOfAny.java
A	check_api/src/main/java/com/google/errorprone/predicates/type/Exact.java
A	check_api/src/main/java/com/google/errorprone/predicates/type/ExactAny.java
A	check_api/src/main/java/com/google/errorprone/suppliers/Supplier.java
A	check_api/src/main/java/com/google/errorprone/suppliers/Suppliers.java
A	check_api/src/main/java/com/google/errorprone/suppliers/package-info.java
A	check_api/src/main/java/com/google/errorprone/util/ASTHelpers.java
A	check_api/src/main/java/com/google/errorprone/util/EditDistance.java
A	check_api/src/main/java/com/google/errorprone/util/ErrorProneToken.java
A	check_api/src/main/java/com/google/errorprone/util/ErrorProneTokens.java
A	check_api/src/main/java/com/google/errorprone/util/OperatorPrecedence.java
A	check_api/src/main/java/com/google/errorprone/util/package-info.java
A	check_api/src/test/java/com/google/errorprone/ErrorProneOptionsTest.java
A	check_api/src/test/java/com/google/errorprone/apply/ImportStatementsTest.java
A	check_api/src/test/java/com/google/errorprone/apply/SourceFileTest.java
A	check_api/src/test/java/com/google/errorprone/dataflow/LocalStoreTest.java
A	check_api/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NonNullAssumptionsTest.java
A	check_api/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessTest.java
A	check_api/src/test/java/com/google/errorprone/fixes/AppliedFixTest.java
A	check_api/src/test/java/com/google/errorprone/fixes/ReplacementsTest.java
A	check_api/src/test/java/com/google/errorprone/matchers/DescriptionTest.java
A	check_api/src/test/java/com/google/errorprone/matchers/StringLiteralTest.java
M	core/pom.xml
D	core/src/main/java/com/google/errorprone/BugCheckerInfo.java
D	core/src/main/java/com/google/errorprone/CodeTransformer.java
D	core/src/main/java/com/google/errorprone/CompositeCodeTransformer.java
D	core/src/main/java/com/google/errorprone/DescriptionListener.java
D	core/src/main/java/com/google/errorprone/ErrorProneOptions.java
D	core/src/main/java/com/google/errorprone/InvalidCommandLineOptionException.java
D	core/src/main/java/com/google/errorprone/JavacErrorDescriptionListener.java
D	core/src/main/java/com/google/errorprone/SubContext.java
D	core/src/main/java/com/google/errorprone/SuppressionHelper.java
D	core/src/main/java/com/google/errorprone/VisitorState.java
D	core/src/main/java/com/google/errorprone/apply/DescriptionBasedDiff.java
D	core/src/main/java/com/google/errorprone/apply/Diff.java
D	core/src/main/java/com/google/errorprone/apply/DiffApplier.java
D	core/src/main/java/com/google/errorprone/apply/DiffNotApplicableException.java
D	core/src/main/java/com/google/errorprone/apply/DiffSupplier.java
D	core/src/main/java/com/google/errorprone/apply/DiscardingFileDestination.java
D	core/src/main/java/com/google/errorprone/apply/FileDestination.java
D	core/src/main/java/com/google/errorprone/apply/FileSource.java
D	core/src/main/java/com/google/errorprone/apply/ImportStatements.java
D	core/src/main/java/com/google/errorprone/apply/SourceFile.java
D	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
D	core/src/main/java/com/google/errorprone/dataflow/ConstantPropagationAnalysis.java
D	core/src/main/java/com/google/errorprone/dataflow/DataFlow.java
D	core/src/main/java/com/google/errorprone/dataflow/LocalStore.java
D	core/src/main/java/com/google/errorprone/dataflow/LocalVariableValues.java
D	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/AbstractNullnessPropagationTransfer.java
D	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/MethodInfo.java
D	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/Nullness.java
D	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessAnalysis.java
D	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
D	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/TrustingNullnessAnalysis.java
D	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/TrustingNullnessPropagation.java
D	core/src/main/java/com/google/errorprone/errors.properties
D	core/src/main/java/com/google/errorprone/fixes/AdjustedPosition.java
D	core/src/main/java/com/google/errorprone/fixes/AppliedFix.java
D	core/src/main/java/com/google/errorprone/fixes/Fix.java
D	core/src/main/java/com/google/errorprone/fixes/IndexedPosition.java
D	core/src/main/java/com/google/errorprone/fixes/Replacement.java
D	core/src/main/java/com/google/errorprone/fixes/Replacements.java
D	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java
D	core/src/main/java/com/google/errorprone/fixes/SuggestedFixes.java
D	core/src/main/java/com/google/errorprone/fixes/package-info.java
D	core/src/main/java/com/google/errorprone/matchers/AbstractTypeMatcher.java
D	core/src/main/java/com/google/errorprone/matchers/AnnotationDoesNotHaveArgument.java
D	core/src/main/java/com/google/errorprone/matchers/AnnotationHasArgumentWithValue.java
D	core/src/main/java/com/google/errorprone/matchers/AnnotationMatcher.java
D	core/src/main/java/com/google/errorprone/matchers/AnnotationMatcherUtils.java
D	core/src/main/java/com/google/errorprone/matchers/AnnotationType.java
D	core/src/main/java/com/google/errorprone/matchers/Asserts.java
D	core/src/main/java/com/google/errorprone/matchers/ChildMultiMatcher.java
D	core/src/main/java/com/google/errorprone/matchers/CompileTimeConstantExpressionMatcher.java
D	core/src/main/java/com/google/errorprone/matchers/CompoundAssignment.java
D	core/src/main/java/com/google/errorprone/matchers/ConstructorOfClass.java
D	core/src/main/java/com/google/errorprone/matchers/Contains.java
D	core/src/main/java/com/google/errorprone/matchers/DatastoreMatchers.java
D	core/src/main/java/com/google/errorprone/matchers/DescendantOf.java
D	core/src/main/java/com/google/errorprone/matchers/Description.java
D	core/src/main/java/com/google/errorprone/matchers/Enclosing.java
D	core/src/main/java/com/google/errorprone/matchers/HasArguments.java
D	core/src/main/java/com/google/errorprone/matchers/HasIdentifier.java
D	core/src/main/java/com/google/errorprone/matchers/InjectMatchers.java
D	core/src/main/java/com/google/errorprone/matchers/InstanceMethod.java
D	core/src/main/java/com/google/errorprone/matchers/IsLastStatementInBlock.java
D	core/src/main/java/com/google/errorprone/matchers/IsSameType.java
D	core/src/main/java/com/google/errorprone/matchers/IsSubtypeOf.java
D	core/src/main/java/com/google/errorprone/matchers/IsSymbol.java
D	core/src/main/java/com/google/errorprone/matchers/JUnitMatchers.java
D	core/src/main/java/com/google/errorprone/matchers/Matcher.java
D	core/src/main/java/com/google/errorprone/matchers/Matchers.java
D	core/src/main/java/com/google/errorprone/matchers/MethodHasParameters.java
D	core/src/main/java/com/google/errorprone/matchers/MethodInvocation.java
D	core/src/main/java/com/google/errorprone/matchers/MethodInvocationArgument.java
D	core/src/main/java/com/google/errorprone/matchers/MethodInvocationMethodSelect.java
D	core/src/main/java/com/google/errorprone/matchers/MethodVisibility.java
D	core/src/main/java/com/google/errorprone/matchers/MultiMatcher.java
D	core/src/main/java/com/google/errorprone/matchers/NextStatement.java
D	core/src/main/java/com/google/errorprone/matchers/NullnessMatcher.java
D	core/src/main/java/com/google/errorprone/matchers/ParentNode.java
D	core/src/main/java/com/google/errorprone/matchers/Returns.java
D	core/src/main/java/com/google/errorprone/matchers/StringLiteral.java
D	core/src/main/java/com/google/errorprone/matchers/Suppressible.java
D	core/src/main/java/com/google/errorprone/matchers/Throws.java
D	core/src/main/java/com/google/errorprone/matchers/WaitMatchers.java
D	core/src/main/java/com/google/errorprone/matchers/method/AbstractChainedMatcher.java
D	core/src/main/java/com/google/errorprone/matchers/method/AbstractSimpleMatcher.java
D	core/src/main/java/com/google/errorprone/matchers/method/AnyMethodMatcherImpl.java
D	core/src/main/java/com/google/errorprone/matchers/method/ConstructorClassMatcherImpl.java
D	core/src/main/java/com/google/errorprone/matchers/method/ConstructorMatcherImpl.java
D	core/src/main/java/com/google/errorprone/matchers/method/InstanceMethodMatcherImpl.java
D	core/src/main/java/com/google/errorprone/matchers/method/MatchState.java
D	core/src/main/java/com/google/errorprone/matchers/method/MethodClassMatcherImpl.java
D	core/src/main/java/com/google/errorprone/matchers/method/MethodMatcher.java
D	core/src/main/java/com/google/errorprone/matchers/method/MethodMatchers.java
D	core/src/main/java/com/google/errorprone/matchers/method/MethodNameMatcherImpl.java
D	core/src/main/java/com/google/errorprone/matchers/method/MethodSignatureMatcherImpl.java
D	core/src/main/java/com/google/errorprone/matchers/method/ParameterMatcherImpl.java
D	core/src/main/java/com/google/errorprone/matchers/method/StaticMethodMatcherImpl.java
D	core/src/main/java/com/google/errorprone/matchers/package-info.java
D	core/src/main/java/com/google/errorprone/predicates/TypePredicate.java
D	core/src/main/java/com/google/errorprone/predicates/TypePredicates.java
D	core/src/main/java/com/google/errorprone/predicates/type/Any.java
D	core/src/main/java/com/google/errorprone/predicates/type/Array.java
D	core/src/main/java/com/google/errorprone/predicates/type/DescendantOf.java
D	core/src/main/java/com/google/errorprone/predicates/type/DescendantOfAny.java
D	core/src/main/java/com/google/errorprone/predicates/type/Exact.java
D	core/src/main/java/com/google/errorprone/predicates/type/ExactAny.java
D	core/src/main/java/com/google/errorprone/suppliers/Supplier.java
D	core/src/main/java/com/google/errorprone/suppliers/Suppliers.java
D	core/src/main/java/com/google/errorprone/suppliers/package-info.java
D	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
D	core/src/main/java/com/google/errorprone/util/EditDistance.java
D	core/src/main/java/com/google/errorprone/util/ErrorProneToken.java
D	core/src/main/java/com/google/errorprone/util/ErrorProneTokens.java
D	core/src/main/java/com/google/errorprone/util/OperatorPrecedence.java
D	core/src/main/java/com/google/errorprone/util/package-info.java
D	core/src/test/java/com/google/errorprone/ErrorProneOptionsTest.java
D	core/src/test/java/com/google/errorprone/apply/ImportStatementsTest.java
D	core/src/test/java/com/google/errorprone/apply/SourceFileTest.java
D	core/src/test/java/com/google/errorprone/dataflow/LocalStoreTest.java
D	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NonNullAssumptionsTest.java
D	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java
D	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessTest.java
D	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/testdata/NullnessPropagationTransferCases1.java
D	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/testdata/NullnessPropagationTransferCases2.java
D	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/testdata/NullnessPropagationTransferCases3.java
D	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/testdata/NullnessPropagationTransferCases4.java
D	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/testdata/NullnessPropagationTransferCases5.java
D	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/testdata/NullnessPropagationTransferCases6.java
D	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/testdata/NullnessPropagationTransferCases7.java
D	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/testdata/NullnessPropagationTransferCases8.java
D	core/src/test/java/com/google/errorprone/fixes/AppliedFixTest.java
D	core/src/test/java/com/google/errorprone/fixes/ReplacementsTest.java
D	core/src/test/java/com/google/errorprone/matchers/DescriptionTest.java
D	core/src/test/java/com/google/errorprone/matchers/StringLiteralTest.java
D	core/src/test/java/com/google/errorprone/suppress/CustomSuppressionTest.java
D	core/src/test/java/com/google/errorprone/suppress/SuppressLintTest.java
D	core/src/test/java/com/google/errorprone/suppress/SuppressWarningsTest.java
D	core/src/test/java/com/google/errorprone/suppress/UnsuppressibleTest.java
D	core/src/test/java/com/google/errorprone/suppress/testdata/SuppressLintNegativeCases.java
D	core/src/test/java/com/google/errorprone/suppress/testdata/SuppressWarningsNegativeCases.java
D	core/src/test/java/com/google/errorprone/suppress/testdata/UnsuppressiblePositiveCases.java
D	core/src/test/java/com/google/errorprone/util/ASTHelpersTest.java
D	core/src/test/java/com/google/errorprone/util/InheritedAnnotation.java
M	pom.xml

commit 3bdb0795f3bb61f80fd295d84e4c60baf2b6b87a
Author: cushon <cushon@google.com>
Date:   Mon Oct 3 08:31:37 2016 -0700

    Improve NarrowingCompoundAssignment
    
    Back out exemption for unsigned right shifts because it only applies to
    positive inputs, and add test coverage.
    
    Also confirm that bitwise operations on deficient types are OK (e.g.
    <byte> &= <byte>).
    
    RELNOTES: Fix NarrowingCompoundAssignment's handling of unsigned right shifts
    
    MOE_MIGRATED_REVID=134986494

M	core/src/main/java/com/google/errorprone/bugpatterns/NarrowingCompoundAssignment.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NarrowingCompoundAssignmentTest.java

commit 3770f92386e6c40c6c134ac3483a4622be7fd1ba
Author: cushon <cushon@google.com>
Date:   Mon Oct 3 08:20:31 2016 -0700

    Handle java.util.function types in ReturnValueIgnored
    
    and move the handling of expected except tests from CheckReturnValue up
    to AbstractReturnValueIgnored.
    
    Fixes #462
    
    RELNOTES: Handle java.util.function types in ReturnValueIgnored
    
    MOE_MIGRATED_REVID=134985523

M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractReturnValueIgnored.java
M	core/src/main/java/com/google/errorprone/bugpatterns/CheckReturnValue.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ReturnValueIgnored.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ReturnValueIgnoredTest.java

commit 3992131001e8b0db0fe909ad05e034563e2078c3
Author: glorioso <glorioso@google.com>
Date:   Fri Sep 30 21:15:45 2016 -0700

    Update Maven examples to use version 2.8 of the plexus compiler plugin
    
    and 'throw new RuntimeException' instead (the suggested fix also didn't
    compile, since the function didn't declare the thrown checked
    exception).
    
    MOE_MIGRATED_REVID=134858407

M	examples/maven/error_prone_should_flag/src/main/java/Main.java
M	examples/maven/pom.xml

commit c612cbcbf9df5eb6bc288a6cd01f626d649e9ff6
Author: lowasser <lowasser@google.com>
Date:   Fri Sep 30 18:52:33 2016 -0700

    Lambda inlining improvements
    
    inline a properly imported and qualified type when the lambda parameter
    type is inferred, and when the original @AfterTemplate leaves the lambda
    type implicit, keep them implicit in the output.
    
    Previously, Refaster would always inline explicit lambda types, and if
    they were inferred, they would be fully qualified e.g. (java.lang.String
    str) -> str.length.
    
    MOE_MIGRATED_REVID=134852428

M	core/src/main/java/com/google/errorprone/refaster/ULambda.java
M	core/src/main/java/com/google/errorprone/refaster/UTemplater.java
M	core/src/main/java/com/google/errorprone/refaster/UTypeVarIdent.java
M	core/src/main/java/com/google/errorprone/refaster/UVariableDecl.java
M	core/src/test/java/com/google/errorprone/refaster/TemplateIntegrationTest.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/InferLambdaTypeExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/LambdaImplicitTypeExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/InferLambdaTypeExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/LambdaImplicitTypeExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/InferLambdaType.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/LambdaImplicitType.java

commit 239e341278801c51882f0961f017fa437b7e0c5a
Author: ciera <ciera@google.com>
Date:   Fri Sep 30 10:20:27 2016 -0700

    Second version of Argument Parameter Swap
    
    This version no longer requires an exact match, but instead looks for
    the best match based on lexical similarity.
    
    RELNOTES: Improvements to ArgumentParameterSwap
    
    MOE_MIGRATED_REVID=134797598

M	core/src/main/java/com/google/errorprone/bugpatterns/ArgumentParameterSwap.java
D	core/src/main/java/com/google/errorprone/bugpatterns/ArgumentParameterUtils.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArgumentParameterSwapTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/ArgumentParameterUtilsTest.java
M	util/generate-latest-docs.sh

commit 7a021dca45e6e214e1018015a965df8e9ad6a2dd
Author: kmb <kmb@google.com>
Date:   Thu Sep 29 16:56:50 2016 -0700

    @Nullable suggestions for fields
    
    RELNOTES: experimental @Nullable suggestions for fields
    
    MOE_MIGRATED_REVID=134727357

A	core/src/main/java/com/google/errorprone/bugpatterns/nullness/FieldMissingNullable.java
D	core/src/main/java/com/google/errorprone/bugpatterns/nullness/MissingNullableReturn.java
A	core/src/main/java/com/google/errorprone/bugpatterns/nullness/ReturnMissingNullable.java
M	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/TrustingNullnessAnalysis.java
M	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/TrustingNullnessPropagation.java
A	core/src/test/java/com/google/errorprone/bugpatterns/nullness/FieldMissingNullableTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/nullness/MissingNullableReturnTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/nullness/ReturnMissingNullableTest.java

commit 482d2efcc87d879b03edc585584236cba72100ec
Author: kmb <kmb@google.com>
Date:   Thu Sep 29 16:13:47 2016 -0700

    Followup to 8182e17 based on cpovirk's comments
    
    MOE_MIGRATED_REVID=134722857

M	core/src/main/java/com/google/errorprone/bugpatterns/nullness/MissingNullableReturn.java
M	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/TrustingNullnessAnalysis.java
M	core/src/test/java/com/google/errorprone/bugpatterns/nullness/MissingNullableReturnTest.java

commit c3d968bcc6e9dc7c4c5441e9e939d57e1212a9fc
Author: glorioso <glorioso@google.com>
Date:   Thu Sep 29 15:35:52 2016 -0700

    Add two new flags to ErrorProneOptions:
    
    * -XepAllErrorsAsWarnings: Will reduce all non-suppressible errors to warnings.
      * This is helpful for once-over builds of new codebases, where there may be
      * many compile errors to resolve, and one wants to see all of them. This flag
      * is logically processed before other checks, so one can make all errors
      * warnings, then turn on a golden set of errors back into errors
    * -XepAllDisabledChecksAsWarnings: Will enable all bundled checks as warnings.
      * This is helpful for eager customers who want to turn on everything. Note
      * that some checks that are disabled by default are disabled because they are
      * not necessarily well-defined or validated in all circumstances. You may
      * experience more crashes with this flag on.
    
    Fixes #424
    
    RELNOTES: Two new flags to control enabling all disabled checks, or
    demoting suppressible errors to warnings.
    
    MOE_MIGRATED_REVID=134718042

M	core/pom.xml
M	core/src/main/java/com/google/errorprone/ErrorProneOptions.java
M	core/src/main/java/com/google/errorprone/scanner/ScannerSupplier.java
M	core/src/test/java/com/google/errorprone/ErrorProneOptionsTest.java
M	core/src/test/java/com/google/errorprone/scanner/ScannerSupplierTest.java
M	docgen/pom.xml
M	pom.xml

commit fe6fe2683f8f2d624ed14db8923158891ef2884e
Author: glorioso <glorioso@google.com>
Date:   Thu Sep 29 11:39:57 2016 -0700

    Start refactoring some of the inject checks against the javax element API
    
    MOE_MIGRATED_REVID=134687245

M	core/pom.xml
A	core/src/main/java/com/google/errorprone/bugpatterns/inject/ElementPredicates.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/JavaxInjectOnFinalField.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/MoreThanOneInjectableConstructor.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/ScopeOrQualifierAnnotationRetention.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/ProvidesMethodOutsideOfModule.java

commit 8723f989e7a14c42d53a10555578c33614888a50
Author: lowasser <lowasser@google.com>
Date:   Thu Sep 29 10:12:07 2016 -0700

    Modify Refaster to correctly insert braces, or not
    
    when inlining a lambda of the form args -> blockPlaceholder().
    
    MOE_MIGRATED_REVID=134674975

M	core/src/main/java/com/google/errorprone/refaster/ULambda.java
M	core/src/test/java/com/google/errorprone/refaster/TemplateIntegrationTest.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/InferLambdaBodyTypeExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/InferLambdaBodyTypeExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/InferLambdaBodyType.java

commit 8182e1730618d33f88718bd59a1d7bca26025ff9
Author: kmb <kmb@google.com>
Date:   Wed Sep 28 15:34:11 2016 -0700

    introduce "trusting" nullness analysis variant
    
    and use it for method return @nullable suggestions
    
    RELNOTES: experimental @Nullable suggestions for method returns
    
    MOE_MIGRATED_REVID=134590714

A	core/src/main/java/com/google/errorprone/bugpatterns/nullness/MissingNullableReturn.java
M	core/src/main/java/com/google/errorprone/dataflow/LocalStore.java
A	core/src/main/java/com/google/errorprone/dataflow/LocalVariableValues.java
M	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/AbstractNullnessPropagationTransfer.java
M	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
A	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/TrustingNullnessAnalysis.java
A	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/TrustingNullnessPropagation.java
A	core/src/test/java/com/google/errorprone/bugpatterns/nullness/MissingNullableReturnTest.java

commit e21390b4287aba9521b0b456b87f8a1707ad2900
Author: ronshapiro <ronshapiro@google.com>
Date:   Wed Sep 28 08:56:56 2016 -0700

    ErrorProne check for @Inject constructors in @AutoFactory classes
    
    RELNOTES: Check that @AutoFactory types do not also have an @Inject
    constructor
    
    MOE_MIGRATED_REVID=134540037

M	core/pom.xml
A	core/src/main/java/com/google/errorprone/bugpatterns/inject/AutoFactoryAtInject.java
M	core/src/main/java/com/google/errorprone/matchers/InjectMatchers.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/AutoFactoryAtInjectTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/AutoFactoryAtInjectNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/AutoFactoryAtInjectPositiveCases.java

commit 4ca4c0a8ad30235032203760688505d28f07e447
Author: lowasser <lowasser@google.com>
Date:   Tue Sep 27 15:42:22 2016 -0700

    Add FunctionalInterfaceMethodChanged check
    
    Add an ErrorProne bug checker to forbid @FI subinterfaces of other @FIs,
    but changing the behavior of their default methods.
    
    This can result in the surprising behavior that a cast will affect the
    behavior of a lambda; that bad.
    
    RELNOTES: Add FunctionalInterfaceMethodChanged check to Error Prone.
    
    MOE_MIGRATED_REVID=134464620

A	core/src/main/java/com/google/errorprone/bugpatterns/FunctionalInterfaceMethodChanged.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/FunctionalInterfaceMethodChangedTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/FunctionalInterfaceMethodChangedNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/FunctionalInterfaceMethodChangedPositiveCases.java

commit 87ffd55805f097b3c43d826eb3dc5303fb6aad1d
Author: glorioso <glorioso@google.com>
Date:   Tue Sep 27 14:39:48 2016 -0700

    Enable InjectOnConstructorOfAbstractClass as a warning by default.
    
    RELNOTES: Enable InjectOnConstructorOfAbstractClass as a warning.
    
    MOE_MIGRATED_REVID=134456260

M	core/src/main/java/com/google/errorprone/bugpatterns/inject/InjectOnConstructorOfAbstractClass.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit becda4e89d6d34f514790213f290a9ca7ede6581
Author: glorioso <glorioso@google.com>
Date:   Tue Sep 27 14:31:09 2016 -0700

    Remove analysis subpackage from errorprone (the code is unused)
    
    MOE_MIGRATED_REVID=134455108

D	core/src/main/java/com/google/errorprone/analysis/AnalysesConfig.java
D	core/src/main/java/com/google/errorprone/analysis/BugCheckerLocalAnalysis.java
D	core/src/main/java/com/google/errorprone/analysis/ErrorProneTopLevelAnalysis.java
D	core/src/main/java/com/google/errorprone/analysis/LocalAnalysis.java
D	core/src/main/java/com/google/errorprone/analysis/LocalAnalysisAsTopLevelAnalysis.java
D	core/src/main/java/com/google/errorprone/analysis/RecompilingTopLevelAnalysis.java
D	core/src/main/java/com/google/errorprone/analysis/SumTopLevelAnalysis.java
D	core/src/main/java/com/google/errorprone/analysis/TopLevelAnalysis.java
D	core/src/main/java/com/google/errorprone/analysis/TopLevelAnalysisWithSeverity.java

commit d51f9d3cbd271a8f4c27e576384aa952c5753654
Author: emmaborhanian <emmaborhanian@google.com>
Date:   Mon Sep 26 17:43:28 2016 -0700

    Consider "verify" an alias for "assert" in MissingFail check.
    
    RELNOTES: Consider "verify" an alias for "assert" in MissingFail check.
    
    MOE_MIGRATED_REVID=134349704

M	core/src/main/java/com/google/errorprone/bugpatterns/MissingFail.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/MissingFailPositiveCases.java

commit 984a17d815cadbc0ddf4305bd4d901fa50ee7216
Author: cushon <cushon@google.com>
Date:   Sat Sep 24 23:06:10 2016 -0700

    Stop including maturity in bugpattern docs
    
    MOE_MIGRATED_REVID=134195604

M	docgen/src/main/java/com/google/errorprone/BugPatternFileGenerator.java
M	docgen/src/main/java/com/google/errorprone/resources/bugpattern.mustache
M	docgen/src/test/java/com/google/errorprone/testdata/DeadException_frontmatter_pygments.md
M	docgen/src/test/java/com/google/errorprone/testdata/DeadException_nofrontmatter_gfm.md
M	docgen/src/test/java/com/google/errorprone/testdata/DontDoThis_nofrontmatter_gfm.md

commit 953940bc5ab5a61b4281735f436d1710195697a7
Author: andrewrice <andrewrice@google.com>
Date:   Fri Sep 23 18:38:35 2016 -0700

    Removed dependency on BuiltInCheckerSuppliers from ErrorProneTestCompiler
    
    This is breaking a loop in preparation for separating out maven
    artifacts for compiling the tests.
    
    RELNOTES: Removed dependency on BuiltInCheckerSuppliers from
    ErrorProneTestCompiler
    
    MOE_MIGRATED_REVID=134140791

M	core/src/test/java/com/google/errorprone/CommandLineFlagTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneTestCompiler.java

commit c2747d07c35bdd937ea43b693ab9344efa05c5cb
Author: glorioso <glorioso@google.com>
Date:   Fri Sep 23 18:17:49 2016 -0700

    Updates to the documentation processor:
    
    * Consider the checks that are enabled by default in
      BuiltInCheckerSuppliers, not @BugPattern maturity, for inclusion in
      the 'enabled by default' list
    
    * Split docgen maven artifact into two: docgen (the tool used to make
      the pages) and docgen-processor (the tool used by core)
    
    * Move the invocation of DocGenTool from core to docgen
    
    RELNOTES: The list of enabled checks on errorprone.info will now look at
    BuiltInCheckerSupplier as opposed to @BugPattern(maturity = MATURE)
    
    MOE_MIGRATED_REVID=134139752

M	core/pom.xml
M	docgen/pom.xml
M	docgen/src/main/java/com/google/errorprone/BugPatternIndexWriter.java
D	docgen/src/main/java/com/google/errorprone/BugPatternInstance.java
D	docgen/src/main/java/com/google/errorprone/DocGenProcessor.java
M	docgen/src/main/java/com/google/errorprone/DocGenTool.java
M	docgen/src/main/java/com/google/errorprone/resources/bugpatterns_internal.mustache
M	docgen/src/test/java/com/google/errorprone/BugPatternIndexWriterTest.java
A	docgen_processor/pom.xml
A	docgen_processor/src/main/java/com/google/errorprone/BugPatternInstance.java
A	docgen_processor/src/main/java/com/google/errorprone/DocGenProcessor.java
M	pom.xml
M	util/update-local-pages.sh

commit 0fd7b5c203dbd6edfcdc6568e8ebcc957156df33
Author: eaftan <eaftan@google.com>
Date:   Fri Sep 23 16:40:00 2016 -0700

    Exempt Android code from PackageLocation check.
    
    MOE_MIGRATED_REVID=134132324

M	core/src/main/java/com/google/errorprone/bugpatterns/PackageLocation.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PackageLocationTest.java

commit d5b7e0647e238f22e1327da004a66b222dc7d95d
Author: cushon <cushon@google.com>
Date:   Fri Sep 23 15:53:30 2016 -0700

    Re-enable test that depends on JDK-8028143
    
    MOE_MIGRATED_REVID=134127569

M	core/src/test/java/com/google/errorprone/bugpatterns/DepAnnTest.java

commit 22c4e2e9d381d7049f70fca63a052ec38a237104
Author: cushon <cushon@google.com>
Date:   Fri Sep 23 14:36:21 2016 -0700

    Make @BugPattern maturity optional
    
    in preparation for removing it. The source of truth for enabled checks
    lives in BuiltInCheckerSuppliers.
    
    MOE_MIGRATED_REVID=134118679

M	annotation/src/main/java/com/google/errorprone/BugPattern.java

commit 2964c529b98ef043e64097fbaf402c8418503c1c
Author: glorioso <glorioso@google.com>
Date:   Fri Sep 23 12:35:45 2016 -0700

    Update ScopeOrQualifierAnnotationRetention
    
    to not flag instances where the Qualifier/Scope is a nested annotation
    inside a Dagger module/component, and improve the documentation on the
    checker.
    
    RELNOTES: ScopeOrQualifierAnnotationRetention won't warn on Qualifier/Scope's
    that are inside a dagger component.
    
    MOE_MIGRATED_REVID=134104765

M	core/src/main/java/com/google/errorprone/bugpatterns/inject/ScopeOrQualifierAnnotationRetention.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/ScopeOrQualifierAnnotationRetentionTest.java
A	docs/bugpattern/InjectScopeOrQualifierAnnotationRetention.md

commit ffeedb603224f1e7c99c4a79d10c4fd8e8e94e41
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Sat Sep 24 11:14:43 2016 -0700

    Don't ignore errors when generating docs

M	util/generate-latest-docs.sh

commit ab0444c9a0020c13a4bcffe992fbf719866311d8
Author: glorioso <glorioso@google.com>
Date:   Thu Sep 22 10:12:10 2016 -0700

    Add test for InjectOnConstructorOfAbstractClass
    
    for Guice-annotated constructor
    
    MOE_MIGRATED_REVID=133967442

M	core/src/test/java/com/google/errorprone/bugpatterns/inject/InjectOnConstructorOfAbstractClassTest.java

commit 93610a2a762ea24570a9dd4e0729b84807bbc6e9
Author: cushon <cushon@google.com>
Date:   Thu Sep 22 10:08:47 2016 -0700

    Enable NarrowingCompoundAssignment as a warning
    
    RELNOTES: Enable NarrowingCompoundAssignment as a warning
    
    MOE_MIGRATED_REVID=133966966

M	core/src/main/java/com/google/errorprone/bugpatterns/NarrowingCompoundAssignment.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit 91befcd93c89421160570afec1f9da03a499bf75
Author: cushon <cushon@google.com>
Date:   Wed Sep 21 19:01:35 2016 -0700

    Document that hasAnnotation expects binary names
    
    MOE_MIGRATED_REVID=133905450

M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java

commit 21cc48f2bbfdb32fa2a302f34014a5eaffa61543
Author: cushon <cushon@google.com>
Date:   Wed Sep 21 18:21:58 2016 -0700

    Detect floating point to integral conversion in NarrowingCompoundAssignment
    
    Previously it only detected compound assignments to 'deficient' types,
    which will always require narrowing conversions. But compound
    assignments from, e.g., double to long also result in implicit narrowing
    conversions.
    
    RELNOTES: Detect floating point to integral conversion in NarrowingCompoundAssignment
    
    MOE_MIGRATED_REVID=133902838

M	core/src/main/java/com/google/errorprone/bugpatterns/NarrowingCompoundAssignment.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NarrowingCompoundAssignmentTest.java
A	docs/bugpattern/NarrowingCompoundAssignment.md

commit 395ed1c287b390c0a4c5692c1af7278fc943af2a
Author: cushon <cushon@google.com>
Date:   Wed Sep 21 17:54:39 2016 -0700

    Prepare to enable UnnecessaryTypeArgument
    
    MOE_MIGRATED_REVID=133900410

M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit acf8ec9e8f78760d3117f13a8214df22acb3c6e1
Author: glorioso <glorioso@google.com>
Date:   Wed Sep 21 16:51:00 2016 -0700

    Add new check: InjectOnConstructorOfAbstractClass
    
    to detect when an @Inject annotation is placed on an abstract class's
    constructor.
    
    RELNOTES: New experimental check: InjectOnConstructorOfAbstractClass
    
    MOE_MIGRATED_REVID=133893705

A	core/src/main/java/com/google/errorprone/bugpatterns/inject/InjectOnConstructorOfAbstractClass.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/InjectOnConstructorOfAbstractClassTest.java

commit 0441d5b24246240cff3e2d7e565c126d75d0099d
Author: glorioso <glorioso@google.com>
Date:   Wed Sep 21 15:45:10 2016 -0700

    Enable JavaxInjectOnAbstractMethod by default
    
    RELNOTES: Enable JavaxInjectOnAbstractMethod by default
    
    MOE_MIGRATED_REVID=133885872

M	core/src/main/java/com/google/errorprone/bugpatterns/inject/JavaxInjectOnAbstractMethod.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit 4273dd62c069517a926418d04e52e9767d85cbef
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Wed Sep 21 13:32:35 2016 -0700

    Bump Error Prone version in examples

M	examples/ant/ant_fork/build.xml
M	examples/gradle/build.gradle
M	examples/maven/pom.xml
M	examples/plugin/bazel/WORKSPACE
M	examples/plugin/gradle/build.gradle
M	examples/plugin/gradle/sample_plugin/build.gradle
M	examples/plugin/maven/hello/pom.xml
M	examples/plugin/maven/sample_plugin/pom.xml

commit 9b8188d442a7fdd498cf20b691af0b2981d0b72b
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Wed Sep 21 13:22:40 2016 -0700

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	annotations/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit 37be0251bc44b2eeaeddc5bb23db3f65f7f38b67
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Wed Sep 21 13:22:26 2016 -0700

    [maven-release-plugin] prepare release v2.0.13

M	annotation/pom.xml
M	annotations/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit f62ee724778577e5f2f27496935f325265119b62
Author: glorioso <glorioso@google.com>
Date:   Wed Sep 21 09:56:47 2016 -0700

    Update JavaxInjectOnAbstractMethod
    
    to detect and raise an error when @javax.inject.Inject is applied to
    default methods on interfaces, and improve the documentation on the
    check.
    
    RELNOTES: Update JavaxInjectOnAbstractMethod to call out @Inject on
    interface default methods
    
    MOE_MIGRATED_REVID=133842040

M	core/src/main/java/com/google/errorprone/bugpatterns/inject/JavaxInjectOnAbstractMethod.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/JavaxInjectOnAbstractMethodPositiveCases.java
A	docs/bugpattern/JavaxInjectOnAbstractMethod.md

commit e72a5205be8b095bff3cce50234f226107bd923c
Author: paulduffin <paulduffin@google.com>
Date:   Wed Sep 21 02:32:03 2016 -0700

    Fix class loading issue with error prone plugins
    
    RELNOTES: Fixes NoClassDefFoundError for error prone classes used by
    plugins.
    
    MOE_MIGRATED_REVID=133810015

M	core/src/main/java/com/google/errorprone/MaskedClassLoader.java

commit 34a6dc4a66b2797121ffcec7c6144901e31a39b3
Author: lowasser <lowasser@google.com>
Date:   Mon Sep 19 16:28:35 2016 -0700

    Fix Refaster NPE
    
    (Not certain how to trigger this, but it's been triggered...)
    
    MOE_MIGRATED_REVID=133647090

M	core/src/main/java/com/google/errorprone/refaster/UMemberReference.java

commit 8316dea6fba7445bac4d26b00f72c014534ae482
Author: glorioso <glorioso@google.com>
Date:   Mon Sep 19 14:53:50 2016 -0700

    Add a check for Guice/JSR330 Qualifiers
    
    where the Qualifier is @Target'ed to be a TYPE_PARAMETER or TYPE_USE.
    Injection frameworks currently don't understand these uses.
    
    RELNOTES: New experiment check: QualifierWithTypeUse, to flag instances
    where Qualifier annotations are declared as eligible for use in TYPE_USE
    or TYPE_PARAMETER contexts.
    
    MOE_MIGRATED_REVID=133635458

M	core/src/main/java/com/google/errorprone/bugpatterns/inject/InvalidTargetingOnScopingAnnotation.java
A	core/src/main/java/com/google/errorprone/bugpatterns/inject/QualifierWithTypeUse.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/QualifierWithTypeUseTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/QualifierWithTypeUseNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/QualifierWithTypeUsePositiveCases.java
A	docs/bugpattern/QualifierWithTypeUse.md

commit e19649b47d90c6e9463543326fe711b82d119df6
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Wed Sep 21 12:22:43 2016 -0700

    Fix travis config, again

M	.travis.yml

commit ed80a0828b8544bbad4d58ead1cc6e8b8c883d5d
Author: cushon <cushon@google.com>
Date:   Sat Sep 17 16:15:42 2016 -0700

    Handle bad symbols more gracefully
    
    This shouldn't be necessary, but it helps with b/31565750.
    
    MOE_MIGRATED_REVID=133491553

M	core/src/main/java/com/google/errorprone/bugpatterns/CompileTimeConstantChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ForOverrideChecker.java

commit cf45077b0f2bac121c4195189780e962b5c1522f
Author: cushon <cushon@google.com>
Date:   Fri Sep 16 15:53:05 2016 -0700

    Improve DefaultCharset fix for FileWriters
    
    Replace `new FileWriter(..., true)` with `Files.newBufferedWriter(...,
    CREATE, APPEND)`, previously only `APPEND` was passed.
    
    MOE_MIGRATED_REVID=133437606

M	core/src/main/java/com/google/errorprone/bugpatterns/DefaultCharset.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DefaultCharsetTest.java

commit 605033d02cf18b438a40a2bebaa0ef41311fcaf5
Author: cushon <cushon@google.com>
Date:   Fri Sep 16 13:43:35 2016 -0700

    Improve ConstantOverflow fix
    
    Don't suggest making int literals longs if the enclosing expression
    already promotes them to long. Previously we would try to "fix" things
    like `2 * Long.MAX_VALUE` by suggesting `2L * Long.MAX_VALUE`.
    
    MOE_MIGRATED_REVID=133422497

M	.travis.yml
M	core/src/main/java/com/google/errorprone/bugpatterns/ConstantOverflow.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ConstantOverflowTest.java

commit 389f2b904a164f67c0efa977d7dacc1c55f1ae58
Author: cushon <cushon@google.com>
Date:   Fri Sep 16 11:25:33 2016 -0700

    Handle the 'default' modifier
    
    MOE_MIGRATED_REVID=133407207

M	core/src/main/java/com/google/errorprone/fixes/SuggestedFixes.java

commit 41c829dc881c8838870ee255cdf36ad0632a6ce3
Author: glorioso <glorioso@google.com>
Date:   Thu Sep 15 14:41:00 2016 -0700

    Refactor a bit of ScopeOrQualifierAnnotationRetention
    
    specifically ignoring it for Android builds, as they are likely to use
    compile-time DI.
    
    RELNOTES: Restrict ScopeOrQualifierAnnotationRetention to non-Android
    builds, as dependency injection frameworks used on Android (e.g. Dagger)
    tend to be compile-time, and are thus practically unaffected by the
    change. It is still incorrect to have @Scope/@Qualifier withou runtime
    retention by spec, but this prevents warnings in circumstances we know
    to be OK.
    
    MOE_MIGRATED_REVID=133310049

M	core/src/main/java/com/google/errorprone/bugpatterns/inject/ScopeOrQualifierAnnotationRetention.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/ScopeOrQualifierAnnotationRetentionTest.java

commit aa92e1084c2bd7fe719369c7918673dbd3b5dd19
Author: cushon <cushon@google.com>
Date:   Thu Sep 15 14:38:06 2016 -0700

    Don't create link text for empty links
    
    MOE_MIGRATED_REVID=133309673

M	core/src/main/java/com/google/errorprone/matchers/Description.java

commit ac1a6614667b23cea44349bb118e76c7450d0ecf
Author: ronshapiro <ronshapiro@google.com>
Date:   Thu Sep 15 10:51:51 2016 -0700

    Check production components as well as components
    
    in Dagger checks
    
    RELNOTES: Consider Dagger @ProductionComponent and
    @ProductionSubcomponent as dagger components for exceptions to
    MoreThanOneScopeAnnotationOnClass
    
    MOE_MIGRATED_REVID=133280641

M	core/src/main/java/com/google/errorprone/matchers/InjectMatchers.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/MoreThanOneScopeAnnotationOnClassNegativeCases.java

commit 897857d2c7b8cbbfa0a6c5f13c3f97094e9ac859
Author: cushon <cushon@google.com>
Date:   Thu Sep 15 08:43:24 2016 -0700

    Fix AsyncFunctionReturnsNull's handling of lambdas
    
    MOE_MIGRATED_REVID=133266058

M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractAsyncTypeReturnsNull.java
M	core/src/main/java/com/google/errorprone/bugpatterns/AsyncFunctionReturnsNull.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/AsyncFunctionReturnsNullNegativeCases.java

commit 7f609fef0f60254c3bb96c9f097a2ec7c0922c72
Author: lowasser <lowasser@google.com>
Date:   Wed Sep 14 13:13:12 2016 -0700

    WildcardType.baseType() always returns itself;
    
    this was always an infinite recursion.  Fixed to use the type that's the
    bound, whichever direction the bound goes.
    
    MOE_MIGRATED_REVID=133163693

M	core/src/main/java/com/google/errorprone/refaster/Inliner.java

commit 7c3e2098e61d8152488bec6afb63b8f3ad54f830
Author: eaftan <eaftan@google.com>
Date:   Wed Sep 14 12:04:49 2016 -0700

    Improve ReferenceEquality documentation.
    
    MOE_MIGRATED_REVID=133155866

M	docs/bugpattern/ReferenceEquality.md

commit 043c7437a087df7536ef45e7935ec59ac4ca57bd
Author: nwatson <nwatson@google.com>
Date:   Wed Sep 14 09:00:02 2016 -0700

    Add java.util.regex.Pattern to the list of well-known immutable types.
    
    According to the javadoc [1], "Instances of this class are immutable and are safe for use by multiple concurrent threads."
    
    com.google.re2j.Pattern is better (and already whitelisted) but
    java.util.regex.Pattern is used by a number of [] classes whose clients
    depend on the behavior.
    
    [1] https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html
    
    MOE_MIGRATED_REVID=133132788

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/WellKnownMutability.java

commit aaeb06a54ea17f263971950f1ea983b640828aaf
Author: cpovirk <cpovirk@google.com>
Date:   Wed Sep 14 08:00:47 2016 -0700

    Fix error when a template returns an instance of a non-static nested class.
    
    Update a template that was failing because of this bug.
    
    My original attempt at a fix broke *static* nested classes (in
    SamePackageImportsTemplate, which returns Map.Entry). I've fixed that by
    triggering the new code *only* on non-static clases.
    
    MOE_MIGRATED_REVID=133127181

M	core/src/main/java/com/google/errorprone/refaster/UClassType.java
M	core/src/test/java/com/google/errorprone/refaster/TemplateIntegrationTest.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/NestedClassTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/NestedClassTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/NestedClassTemplate.java

commit 00fff07a619eec318bcad6d2a2e0c509db516bae
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Thu Sep 15 09:52:42 2016 -0700

    Attempt to fix travis build (2)

M	.travis.yml

commit 4672dd9376e76d56e71d5890998125044f9201c3
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Thu Sep 15 09:47:05 2016 -0700

    Attempt to fix travis build

M	.travis.yml

commit 1e689105b4d2d1e43a0b78a32a5dcf1555516215
Author: dpb <dpb@google.com>
Date:   Wed Sep 14 07:19:46 2016 -0700

    Make SuggestedFix and SuggestedFix.Builder methods
    
    return a SuggestedFix instead of a Fix so that merge(SuggestedFix) makes sense.
    
    MOE_MIGRATED_REVID=133124229

M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java
M	pom.xml

commit 06559c6279de7c606969e9ada53f3fb8ba87bfff
Author: glorioso <glorioso@google.com>
Date:   Tue Sep 13 16:28:42 2016 -0700

    Update maturity level of ModifyingCollectionWithItself
    
    and ProvidesMethodOutsideOfModule.
    
    Also updates documentation on ModifyingCollectionWithItself
    
    RELNOTES: Update documentation on ModifyingCollectionWithItself, and
    upgrade ModifyingCollectionWithItself and ProvidesMethodOutsideOfModule
    to MATURE
    
    MOE_MIGRATED_REVID=133063551

M	core/src/main/java/com/google/errorprone/bugpatterns/ModifyingCollectionWithItself.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/ProvidesMethodOutsideOfModule.java

commit 21fc978db46644354d7854a549926efa2b11778a
Author: glorioso <glorioso@google.com>
Date:   Tue Sep 13 11:33:37 2016 -0700

    Add a new check to detect instances where Strings, primitives, or boxed
    primitives are bound without a qualifier.
    
    RELNOTES: Introduce experimental BindingToUnqualifiedCommonType check,
    for when primitives (int, String, BigDecimal, etc.) are bound without a
    Qualifier annotation
    
    MOE_MIGRATED_REVID=133025339

A	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/BindingToUnqualifiedCommonType.java
M	core/src/main/java/com/google/errorprone/matchers/InjectMatchers.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/BindingToUnqualifiedCommonTypeTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/testdata/BindingToUnqualifiedCommonTypeNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/testdata/BindingToUnqualifiedCommonTypePositiveCases.java
A	docs/bugpattern/BindingToUnqualifiedCommonType.md

commit 57503f40545355e63d20a98e2c1de491773668c8
Author: glorioso <glorioso@google.com>
Date:   Mon Sep 12 18:27:40 2016 -0700

    Enable ProvidesMethodOutsideOfModule and ModifyingCollectionWithItself by default.
    
    RELNOTES: Enable ProvidesMethodOutsideOfModule and ModifyingCollectionWithItself by default
    
    MOE_MIGRATED_REVID=132945295

M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit f36d518c5fcb0ba90b95d8790aa2543a9ca5cda6
Author: glorioso <glorioso@google.com>
Date:   Mon Sep 12 16:36:33 2016 -0700

    Update ModifyingCollectionWithItself
    
    * No longer suggest `this.a.removeAll(a)` as a replacement for `a.removeAll(a)` when a is a field
    * Limit the behavior of suggested fixes when the function call was in a non-ExpressionStatement context and we couldn't find a valid replacement.
    * Match addAll(int, Collection)
    
    RELNOTES: Update the suggested fixes of ModifyingCollectionWithItself to more
    accurately target valid replacements, and detect addAll(int, Collection) as well.
    
    MOE_MIGRATED_REVID=132934338

M	core/src/main/java/com/google/errorprone/bugpatterns/ModifyingCollectionWithItself.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ModifyingCollectionWithItselfPositiveCases.java

commit 36094f3bd226da3cc1f140ee298c8f449cbeb4b3
Author: cushon <cushon@google.com>
Date:   Mon Sep 12 15:23:56 2016 -0700

    Improve ThrowsUncheckedException docs
    
    MOE_MIGRATED_REVID=132925908

M	core/src/main/java/com/google/errorprone/bugpatterns/ThrowsUncheckedException.java
M	docs/bugpattern/ThrowsUncheckedException.md

commit 5ad14c1cdeb04a7ec4f77bd4d8488f039dbc0a3d
Author: dpb <dpb@google.com>
Date:   Mon Sep 12 12:07:22 2016 -0700

    Refactoring that changes @Multibindings interfaces
    
    into @Multibinds methods, either moving those methods up into the
    containing module if possible, or else converting the @Multibindings
    interfaces into @Modules and including them in the enclosing @Module.
    
    RELNOTES: Add a check/refactoring for Dagger 2 that suggests using
    @Multibinds methods instead of @Multibindings interfaces.
    
    MOE_MIGRATED_REVID=132902072

A	core/src/main/java/com/google/errorprone/bugpatterns/inject/dagger/MultibindsInsteadOfMultibindings.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/dagger/UseBinds.java
A	core/src/main/java/com/google/errorprone/bugpatterns/inject/dagger/Util.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/dagger/MultibindsInsteadOfMultibindingsTest.java

commit 310d5c61d8076aabfa1547996698757b33c8a20c
Author: lowasser <lowasser@google.com>
Date:   Mon Sep 12 07:40:48 2016 -0700

    Give up on a Refaster match
    
    if attempting to unify a type variable with a typeless expression.
    
    MOE_MIGRATED_REVID=132873149

M	core/src/main/java/com/google/errorprone/refaster/UTypeVarIdent.java

commit b43023cbb156f8d568e5aeaa7b4c4ba4f63ffec0
Author: lowasser <lowasser@google.com>
Date:   Sat Sep 10 15:33:45 2016 -0700

    Add a suggested fix helper for qualifying types
    
    MOE_MIGRATED_REVID=132777054

M	core/src/main/java/com/google/errorprone/fixes/SuggestedFixes.java
M	core/src/test/java/com/google/errorprone/fixes/SuggestedFixesTest.java

commit 18691726baa08f4d4dde34f74404a97f7957472d
Author: dpb <dpb@google.com>
Date:   Mon Jul 11 12:25:16 2016 -0400

    Allow empty SuggestedFixes.
    
    MOE_MIGRATED_REVID=132702979

M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java
M	core/src/main/java/com/google/errorprone/matchers/Description.java
M	core/src/test/java/com/google/errorprone/fixes/AppliedFixTest.java

commit 37a232c094a7c9dac31063c5820150f4ea4e42ad
Author: glorioso <glorioso@google.com>
Date:   Tue Sep 6 18:29:58 2016 -0700

    Enable GuiceAssistedParameters by default
    
    RELNOTES: Enable GuiceAssistedParameters by default
    
    MOE_MIGRATED_REVID=132386676

M	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/AssistedParameters.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit d72838533b1e0d7adf18847822797fe5cf589937
Author: dpb <dpb@google.com>
Date:   Tue Sep 6 15:15:41 2016 -0700

    Let SuggestedFix.Builder merge other SuggestedFixes
    
    RELNOTES: Let SuggestedFix.Builder merge other SuggestedFixes.
    
    MOE_MIGRATED_REVID=132368386

M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java

commit cff528da81c12143702b887a45e8cd8af71f0ad2
Author: glorioso <glorioso@google.com>
Date:   Fri Sep 2 11:11:43 2016 -0700

    Adjust AssistedParameters
    
    to give a breakdown of the assisted parameters conflicts and not suggest
    the deletion of the @Assisted parameters.
    
    RELNOTES: Adjust AssistedParameters to not suggest the deletion of parameters,
    and also give a breakdown of @Assisted parameter conflicts that occur
    
    MOE_MIGRATED_REVID=132082836

M	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/AssistedParameters.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/testdata/AssistedParametersPositiveCases.java

commit 57e794183c0ba433527d9cb69f6c421808e10b1a
Author: glorioso <glorioso@google.com>
Date:   Fri Sep 2 10:31:02 2016 -0700

    Fix up broken behavior in NextStatement
    
    while a statement is outside of a block, e.g.: a 1-line if statement.
    
    MOE_MIGRATED_REVID=132077774

M	core/src/main/java/com/google/errorprone/matchers/NextStatement.java
A	core/src/test/java/com/google/errorprone/matchers/NextStatementTest.java

commit 32e9b97e2b35a0a11fa10d5dbcd323254dc914a5
Author: glorioso <glorioso@google.com>
Date:   Thu Sep 1 13:10:07 2016 -0700

    Update the explanation message for RemoveUnusedImports
    
    MOE_MIGRATED_REVID=131983082

M	core/src/main/java/com/google/errorprone/bugpatterns/RemoveUnusedImports.java

commit f9ea34b52ace79c5f3e1d39fd0f1ade2eba9b06a
Author: glorioso <glorioso@google.com>
Date:   Thu Sep 1 10:26:48 2016 -0700

    Add check to CheckReturnValue to ignore circumstances where the CRV statement
    is the last statement in a block contained within an assertThrows or
    expectThrows.
    
    Also, refactored NextStatement to use enclosingNode(BlockTree.class);
    
    RELNOTES: CheckReturnValue will ignore a statement if it's the last statement
    in a block that's immediately passed to a JUnit Assert.assertThrows() or
    Assert.expectThrows()
    
    MOE_MIGRATED_REVID=131963202

M	core/pom.xml
M	core/src/main/java/com/google/errorprone/bugpatterns/CheckReturnValue.java
A	core/src/main/java/com/google/errorprone/matchers/IsLastStatementInBlock.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/matchers/NextStatement.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CheckReturnValueTest.java

commit 2abdcb3b2d9e21a40a6db5273215c426e8889dce
Author: glorioso <glorioso@google.com>
Date:   Wed Aug 31 19:07:58 2016 -0700

    Clean up AssistedInjectAndInjectOnConstructors to not suggest the deletion of
    either @AssistedInject or @Inject.
    
    RELNOTES: AssistedInjectAndInjectOnConstructors no longer suggests the deletion
    of annotations.
    
    MOE_MIGRATED_REVID=131901334

M	core/src/main/java/com/google/errorprone/bugpatterns/inject/AssistedInjectAndInjectOnConstructors.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/AssistedInjectAndInjectOnConstructorsPositiveCases.java

commit 0bbe3ab68564e4a4ad5aa8c7919ce3c8b22fecb2
Author: glorioso <glorioso@google.com>
Date:   Wed Aug 31 18:07:05 2016 -0700

    Fix bug in BoxedPrimitiveConstructor to not suggest Float.valueOf(Double), as
    this suggestion is ambiguous. Instead, suggest Float.valueOf((float) Double).
    
    RELNOTES: BoxedPrimitiveConstructor now suggests Float.valueOf((float) Double)
    as opposed to Float.valueOf(Double), which is uncastable to the valid options
    of double or String.
    
    MOE_MIGRATED_REVID=131897441

M	core/src/main/java/com/google/errorprone/bugpatterns/BoxedPrimitiveConstructor.java
M	core/src/test/java/com/google/errorprone/bugpatterns/BoxedPrimitiveConstructorTest.java

commit 053ab688f3008a39c88a6a449f27294683d233da
Author: cushon <cushon@google.com>
Date:   Wed Aug 31 11:16:39 2016 -0700

    Add java.util.Optional as a well-known immutable container
    
    Fixes #454
    
    MOE_MIGRATED_REVID=131851195

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/WellKnownMutability.java

commit 4c4bc6eb2f34d264b71df7e5f0396a2b614eb816
Author: Nick Glorioso <glorioso@google.com>
Date:   Tue Aug 30 15:20:44 2016 -0700

    Reflect Error Prone Release 2.0.12 in examples

M	examples/ant/ant_fork/build.xml
M	examples/gradle/build.gradle
M	examples/maven/pom.xml
M	examples/plugin/bazel/WORKSPACE
M	examples/plugin/gradle/build.gradle
M	examples/plugin/gradle/sample_plugin/build.gradle
M	examples/plugin/maven/hello/pom.xml
M	examples/plugin/maven/sample_plugin/pom.xml

commit 9c9086ec0f71c3c0c215c482766f107ccde65c54
Author: Nick Glorioso <glorioso@google.com>
Date:   Tue Aug 30 14:57:58 2016 -0700

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	annotations/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit d75fe6e0714711465accb02928aa243c9a29be02
Author: Nick Glorioso <glorioso@google.com>
Date:   Tue Aug 30 14:57:49 2016 -0700

    [maven-release-plugin] prepare release 2.0.12

M	annotation/pom.xml
M	annotations/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit b169efa33661681f30948ebbf13af0dcf764e405
Author: glorioso <glorioso@google.com>
Date:   Mon Aug 29 14:53:47 2016 -0700

    Add a new check: ProvidesMethodOutsideOfModule. This detects when
    @Provides methods are defined outside of Module classes.
    
    MOE_MIGRATED_REVID=131638455

M	core/pom.xml
A	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/ProvidesMethodOutsideOfModule.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/ProvidesMethodOutsideOfModuleTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/testdata/ProvidesMethodOutsideOfModuleNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/testdata/ProvidesMethodOutsideOfModulePositiveCases.java

commit 7ff03cf6f8be69d6e29829f5cf042a99be293e55
Author: cushon <cushon@google.com>
Date:   Sat Aug 27 14:20:16 2016 -0700

    Delete isCastableTo matcher
    
    It crashes on nulls, and is not used correctly by any checks.
    
    As described in JLS 5.5.1 a class type S is castable to T if S < T *or* T < S.
    For example, an instance of static type Object is castable to an instance of
    static type String, because the runtime type of the first might also be String.
    Checks using this matcher generally wanted to test assignability instead.
    
    MOE_MIGRATED_REVID=131499298

M	core/src/main/java/com/google/errorprone/bugpatterns/ProtoFieldNullComparison.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ProtoFieldPreconditionsCheckNotNull.java
D	core/src/main/java/com/google/errorprone/matchers/IsCastableTo.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java

commit 11938e6e1e079cc8a6b2430eacb5a55be4941576
Author: bhagwani <bhagwani@google.com>
Date:   Fri Aug 26 19:05:36 2016 -0700

    Add more test cases for sanity
    
    MOE_MIGRATED_REVID=131465592

M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfEqualsPositiveCase.java

commit a51ab7e839eb4d51cd32f4a44e749f117915d19a
Author: glorioso <glorioso@google.com>
Date:   Fri Aug 26 17:39:46 2016 -0700

    Enable MoreThanOneScopeAnnotationOnClass. This raises a compile error
    when a class is annotated with more than one annotation that is a @Scope. This
    pattern is disallowed by injection frameworks.
    
    MOE_MIGRATED_REVID=131461193

M	core/src/main/java/com/google/errorprone/bugpatterns/inject/MoreThanOneScopeAnnotationOnClass.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/MoreThanOneScopeAnnotationOnClassNegativeCases.java

commit d9f2ddc3d982646ff9e746ab9c97a40792ee64f9
Author: avenet <avenet@google.com>
Date:   Fri Aug 26 17:24:29 2016 -0700

    Improved the documentation for the InsecureCipherMode check. In particular, the process for requesting an exception through a security review is fully detailed.
    
    MOE_MIGRATED_REVID=131460147

M	core/src/main/java/com/google/errorprone/bugpatterns/InsecureCipherMode.java
A	docs/bugpattern/InsecureCipherMode.md

commit d4f8875aba1fb30c7efe8fb7cf0eddd679ede870
Author: cushon <cushon@google.com>
Date:   Thu Jan 7 17:08:38 2016 -0800

    Add a check for redunant throws clauses
    
    Suggest removing thrown exceptions that are subtypes of other thrown
    exceptions.
    
    MOE_MIGRATED_REVID=131458931

A	core/src/main/java/com/google/errorprone/bugpatterns/RedundantThrows.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/RedundantThrowsTest.java

commit ff4ceec2a6f39fd3cfac547ec54d33d22de8a1d9
Author: glorioso <glorioso@google.com>
Date:   Fri Aug 26 17:08:36 2016 -0700

    Restrict DefaultCharset to only match when the build is not an Android
    Build (Android guarantees a UTF-8 default charset).
    
    MOE_MIGRATED_REVID=131458928

M	core/src/main/java/com/google/errorprone/bugpatterns/DefaultCharset.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DefaultCharsetTest.java

commit 531bb33bed20493c7ec52743f7635abfff21203f
Author: glorioso <glorioso@google.com>
Date:   Fri Aug 26 16:39:41 2016 -0700

    Enable GuiceInjectOnFinalField by default. This check will emit a compile error when a final field is annotated with @Inject.
    
    This pattern may cause issues when dealing with multiple threads, as the injected value may not be visible to all threads.
    
    MOE_MIGRATED_REVID=131456172

M	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/InjectOnFinalField.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit 5b3008cbcd2b35416ec74b1bd55b3b8804532691
Author: glorioso <glorioso@google.com>
Date:   Fri Aug 26 15:51:51 2016 -0700

    Adjust InvalidTargetingOnScopingAnnotation to only flag instances where there's
    a Target without METHOD and TYPE in its element list.
    
    MOE_MIGRATED_REVID=131451224

M	core/src/main/java/com/google/errorprone/bugpatterns/inject/InvalidTargetingOnScopingAnnotation.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/InvalidTargetingOnScopingAnnotationNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/InvalidTargetingOnScopingAnnotationPositiveCases.java

commit 824f9755fbea855a4c0a5d34bdb28dcd0213bffc
Author: glorioso <glorioso@google.com>
Date:   Fri Aug 26 15:40:49 2016 -0700

    Allow MoreThanOneScopeAnnotationOnClass as an alternate name to
    address InjectMoreThanOneScopeAnnotationOnClass.
    
    MOE_MIGRATED_REVID=131450251

M	core/src/main/java/com/google/errorprone/bugpatterns/inject/MoreThanOneScopeAnnotationOnClass.java

commit 0c8cdd04d830dfc457c1fb159d9b716bdd923b66
Author: mandreescu <mandreescu@google.com>
Date:   Fri Aug 26 00:25:32 2016 -0700

    Changed message for overlapping replacements to pretty-print the Replacement.
    
    The message now looks like: Replacement{range=..., replaceWith=...} overlaps
    with existing replacements: Replacement{...}, ..., Replacement{...}.
    
    MOE_MIGRATED_REVID=131374700

M	core/src/main/java/com/google/errorprone/fixes/Replacements.java
M	core/src/test/java/com/google/errorprone/fixes/ReplacementsTest.java

commit 05c229259db7a0ea16aa6ca9e57635cd9f0d8ee5
Author: cushon <cushon@google.com>
Date:   Thu Aug 25 21:35:39 2016 -0700

    Productionize ThrowsUncheckedException
    
    MOE_MIGRATED_REVID=131366221

M	core/src/main/java/com/google/errorprone/bugpatterns/ThrowsUncheckedException.java
M	core/src/main/java/com/google/errorprone/fixes/SuggestedFixes.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ThrowsUncheckedExceptionTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ThrowsUncheckedExceptionPositiveCases.java
A	docs/bugpattern/ThrowsUncheckedException.md

commit b3b5166850933f56db0419081e529b10906a044e
Author: cushon <cushon@google.com>
Date:   Thu Aug 25 17:18:34 2016 -0700

    New @LazyInit annotation to declare lazily-initialized fields, with support in the @Immutable checker.
    
    MOE_MIGRATED_REVID=131350525

A	annotations/src/main/java/com/google/errorprone/annotations/concurrent/LazyInit.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableChecker.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableCheckerTest.java

commit 6fd4c510784cdd3a1e28e4501f2b05507b2c2618
Author: glorioso <glorioso@google.com>
Date:   Thu Aug 25 17:02:10 2016 -0700

    Enable OverlappingQualifierAndScopeAnnotation by default. This check
    detects when a single annotation is declared as both a @Scope and a @Qualifier
    (or their Guice equivalents). This pattern is likely to cause confusion.
    
    MOE_MIGRATED_REVID=131348667

M	core/src/main/java/com/google/errorprone/bugpatterns/inject/OverlappingQualifierAndScopeAnnotation.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit 4fbb1c31c4d1a237cbbcf9c41bf3e333d1284cf8
Author: cushon <cushon@google.com>
Date:   Thu Aug 25 16:50:09 2016 -0700

    Fix comment handling in mixed array dimension check
    
    MOE_MIGRATED_REVID=131347209

M	core/src/main/java/com/google/errorprone/bugpatterns/MixedArrayDimensions.java
M	core/src/main/java/com/google/errorprone/util/ErrorProneTokens.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MixedArrayDimensionsTest.java

commit 0fd35a5545c22d1d4570e8d6837bf2d21f0b1878
Author: dawasser <dawasser@google.com>
Date:   Thu Aug 25 11:33:51 2016 -0700

    Add StrictFormatStringValidation support for final and effectively final format string variables.
    
    Also, add missing enforcement that method parameters must be final or
    effectively final.
    
    MOE_MIGRATED_REVID=131312221

M	core/src/main/java/com/google/errorprone/bugpatterns/formatstring/StrictFormatStringValidation.java
M	core/src/test/java/com/google/errorprone/bugpatterns/formatstring/FormatStringAnnotationCheckerTest.java

commit 9d6d6b4ece8ef6df333fa19c104b063c6ed430bc
Author: avenet <avenet@google.com>
Date:   Sat May 7 00:01:33 2016 -0400

    Move getFileNameFromUri to ASTHelpers
    
    MOE_MIGRATED_REVID=131257742

M	core/src/main/java/com/google/errorprone/bugpatterns/PackageLocation.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java

commit 9bf1feba89d27cbbfa1c30776dc866132d6e3871
Author: glorioso <glorioso@google.com>
Date:   Wed Aug 24 17:42:49 2016 -0700

    Adjust InjectOnFinalField to use core libraries and become an actual error.
    
    RELNOTES: Make GuiceInjectOnFinalField an error by default
    
    MOE_MIGRATED_REVID=131237108

M	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/InjectOnFinalField.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/testdata/InjectOnFinalFieldPositiveCases.java

commit 7b28b50faebd734f01f5371926778b4c66fa9d9c
Author: glorioso <glorioso@google.com>
Date:   Wed Aug 24 16:59:36 2016 -0700

    Update the interface contract of MultiMatcher
    
    to return all the matching nodes, as opposed to just one of the matching
    nodes, and use this new contract in MoreThanOneScopeAnnotationOnClass.
    
    Also, adjusts the behavior of MoreThanOneScopeAnnotationOnClass to
    ignore Dagger components/subcomponents, and no longer suggest the
    deletion of any particular scope annotation.
    
    RELNOTES: Adjusts the behavior of MoreThanOneScopeAnnotationOnClass to
    ignore Dagger components/subcomponents, and no longer suggest the
    deletion of any particular scope annotation.
    
    MOE_MIGRATED_REVID=131232952

M	core/src/main/java/com/google/errorprone/bugpatterns/MissingFail.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/MoreThanOneScopeAnnotationOnClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/AssistedInjectScoping.java
M	core/src/main/java/com/google/errorprone/matchers/ChildMultiMatcher.java
M	core/src/main/java/com/google/errorprone/matchers/HasIdentifier.java
M	core/src/main/java/com/google/errorprone/matchers/InjectMatchers.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/matchers/MultiMatcher.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/MoreThanOneScopeAnnotationOnClassNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/MoreThanOneScopeAnnotationOnClassPositiveCases.java
M	core/src/test/java/com/google/errorprone/matchers/HasIdentifierTest.java

commit 23e966137b86a0bc3862d394c854f4ac3811411f
Author: bhagwani <bhagwani@google.com>
Date:   Tue Aug 23 14:36:13 2016 -0700

    Suggest EqualsTester Fix for as a replacement for Truth isEqualTo method.
    
    MOE_MIGRATED_REVID=131097665

M	core/src/main/java/com/google/errorprone/bugpatterns/TruthSelfEquals.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/TruthSelfEqualsPositiveCases.java

commit d6996b208afa50d264be4ccb24e078383c1b9c61
Author: glorioso <glorioso@google.com>
Date:   Mon Aug 22 23:32:15 2016 -0700

    Update OverlappingQualifierAndScopeAnnotation
    
    to compile-error on the class that has both annotations (not suggesting
    the removal of any particular annotation), as well as provide some more
    explanatory flavor on why this pattern is a bad idea.
    
    RELNOTES: Improve documentation on
    OverlappingQualifierAndScopeAnnotation, and no longer suggest the
    removal of Qualifiers or Scope annotations from the annotation (allowing
    the developer to make the choice for themselves).
    
    MOE_MIGRATED_REVID=131022884

M	core/src/main/java/com/google/errorprone/bugpatterns/inject/OverlappingQualifierAndScopeAnnotation.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/OverlappingQualifierAndScopeAnnotationPositiveCases.java
A	docs/bugpattern/OverlappingQualifierAndScopeAnnotation.md

commit ff35d7f35bffc100059d07cb5f3e7c0f947bea3b
Author: cushon <cushon@google.com>
Date:   Mon Aug 22 16:54:14 2016 -0700

    Make ASTHelpers.hasAnnotation less thread-hostile
    
    MOE_MIGRATED_REVID=130999168

M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java

commit 2e95f5e2b62c10549c12f2c17d802f53339ab15c
Author: cushon <cushon@google.com>
Date:   Mon Aug 22 14:03:30 2016 -0700

    Fix MultiVariableDeclaration diagnostic position
    
    Report errors at the first fragment in the declaration, not the
    beginning of the enclosing block.
    
    MOE_MIGRATED_REVID=130979199

M	core/src/main/java/com/google/errorprone/bugpatterns/MultiVariableDeclaration.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MultiVariableDeclarationTest.java

commit 5946d0a6e3fbfaa4d567bbaf8b84ccfb9a478d13
Author: glorioso <glorioso@google.com>
Date:   Mon Aug 22 13:39:36 2016 -0700

    Refactor common inject matchers to a shared InjectMatchers class
    
    and alter the behavior of JavaxInjectOnAbstractMethod to match from the
    MethodTree up, rather than the AnnotationTree down.
    
    MOE_MIGRATED_REVID=130976271

M	core/src/main/java/com/google/errorprone/bugpatterns/inject/AssistedInjectAndInjectOnConstructors.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/AssistedInjectAndInjectOnSameConstructor.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/InjectedConstructorAnnotations.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/InvalidTargetingOnScopingAnnotation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/JavaxInjectOnAbstractMethod.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/JavaxInjectOnFinalField.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/MoreThanOneInjectableConstructor.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/MoreThanOneQualifier.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/MoreThanOneScopeAnnotationOnClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/OverlappingQualifierAndScopeAnnotation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/ScopeAnnotationOnInterfaceOrAbstractClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/ScopeOrQualifierAnnotationRetention.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/AssistedInjectScoping.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/AssistedParameters.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/InjectOnFinalField.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/OverridesGuiceInjectableMethod.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/OverridesJavaxInjectableMethod.java
A	core/src/main/java/com/google/errorprone/matchers/InjectMatchers.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/JavaxInjectOnAbstractMethodPositiveCases.java

commit 5ee6c4c4435fe7d33179f0168deb4dbc732f77d0
Author: bhagwani <bhagwani@google.com>
Date:   Fri Aug 19 17:18:38 2016 -0700

    Add TruthSelfEquals and enable it as WARNING
    
    MOE_MIGRATED_REVID=130809136

M	annotation/src/main/java/com/google/errorprone/BugPattern.java
A	core/src/main/java/com/google/errorprone/bugpatterns/TruthSelfEquals.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/TruthSelfEqualsTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/TruthSelfEqualsNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/TruthSelfEqualsPositiveCases.java

commit 3f290427993e20d10121516dfed4cb598425a56e
Author: glorioso <glorioso@google.com>
Date:   Thu Aug 18 20:20:31 2016 -0700

    Enable MoreThanOneInjectableConstructor
    
    RELNOTES: Enable MoreThanOneInjectableConstructor, a check to find
    instances where a class has multiple @Inject constructors, which is a
    disallowed construct.
    
    MOE_MIGRATED_REVID=130713337

M	core/src/main/java/com/google/errorprone/bugpatterns/inject/MoreThanOneInjectableConstructor.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit d0923f561151ef745d2c2569e7eb6ed1cc27abdc
Author: glorioso <glorioso@google.com>
Date:   Thu Aug 18 14:24:19 2016 -0700

    Clean up MoreThanOneInjectableConstructor.
    
    * Issue one compile error per class with more than one @Inject constructor
    * Add additional suppressible names
    
    RELNOTES: Change the behavior of MoreThanOneInjectableConstructor to
    issue one compile error per class, rather than 1 compile error per
    @Inject annotation. We no longer suggest the deletion of any @Inject
    constructor.
    
    MOE_MIGRATED_REVID=130681305

M	core/src/main/java/com/google/errorprone/bugpatterns/inject/MoreThanOneInjectableConstructor.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/MoreThanOneInjectableConstructorNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/MoreThanOneInjectableConstructorPositiveCases.java

commit 9e70f41b84d5ecd51ba22d19ece5f614e7513bd7
Author: glorioso <glorioso@google.com>
Date:   Thu Aug 18 08:44:49 2016 -0700

    Cleanup of OverridesGuiceInjectableMethod
    
    to detect Guice on all super methods, not just those annoted with
    @Override.
    
    RELNOTES: Enhance OverridesGuiceInjectableMethod to inspect methods that
    aren't annotated with @Override as well.
    
    MOE_MIGRATED_REVID=130643645

M	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/OverridesGuiceInjectableMethod.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/testdata/OverridesGuiceInjectableMethodPositiveCases.java

commit e1d310f66e29acfa4741f194ea46efffed182010
Author: glorioso <glorioso@google.com>
Date:   Wed Aug 17 16:46:56 2016 -0700

    Promote FuturesGetCheckedIllegalExceptionType
    
    RELNOTES: Introduce a check for <V, X extends Exception>
    Futures.getChecked(Future<V>, Class<X>), where the exception type (X) is
    not constructable via reflection in a way Futures.getChecked() expects.
    
    MOE_MIGRATED_REVID=130579885

M	annotation/pom.xml
M	core/pom.xml
A	core/src/main/java/com/google/errorprone/bugpatterns/FuturesGetCheckedIllegalExceptionType.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/FuturesGetCheckedIllegalExceptionTypeTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/FuturesGetCheckedIllegalExceptionTypeNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/FuturesGetCheckedIllegalExceptionTypePositiveCases.java
M	docgen/pom.xml
M	pom.xml

commit e68d18739abc80c16e29b25b35c97aba4d9f200c
Author: glorioso <glorioso@google.com>
Date:   Wed Aug 17 10:47:23 2016 -0700

    Enable OverridingJavaxInjectMethod
    
    RELNOTES: Enable OverridingJavaxInjectMethod by default, a check to find
    methods that are not annotated with @Inject, but are overriding methods
    that have @javax.inject.Inject. JSR-330 injectors won't trigger these
    methods in the subclasses, leading to potential initialization issues.
    
    MOE_MIGRATED_REVID=130536934

M	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/OverridesJavaxInjectableMethod.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit 8efa6aad686bb59deb07d9b2a81dadc23c82ad8d
Author: dawasser <dawasser@google.com>
Date:   Tue Aug 16 15:39:37 2016 -0700

    Redacted
    
    MOE_MIGRATED_REVID=130456123

M	core/src/main/java/com/google/errorprone/bugpatterns/formatstring/FormatStringAnnotationChecker.java

commit e40d32cae61f4898c2bbccc67e6d12851a733faa
Author: glorioso <glorioso@google.com>
Date:   Tue Aug 16 15:35:31 2016 -0700

    Cleanup of OverridesJavaxInjectableMethod
    
    look at all super methods, not just when a method has @Override as an
    annotation.
    
    MOE_MIGRATED_REVID=130455624

M	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/OverridesJavaxInjectableMethod.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/testdata/OverridesJavaxInjectableMethodNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/testdata/OverridesJavaxInjectableMethodPositiveCases.java
A	docs/bugpattern/OverridesJavaxInjectableMethod.md

commit 30d408d494d3b6095823629445541e9e203c63f4
Author: bhagwani <bhagwani@google.com>
Date:   Tue Aug 16 13:44:20 2016 -0700

    Add more test cases for SelfEquals
    
    MOE_MIGRATED_REVID=130441140

M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfEqualsNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfEqualsPositiveCase.java

commit 4587aea48493b85fe820ba5efd072837735e95a1
Author: cushon <cushon@google.com>
Date:   Tue Aug 16 12:42:12 2016 -0700

    Fix crash in SelfEquals fix
    
    MOE_MIGRATED_REVID=130434028

M	core/src/main/java/com/google/errorprone/bugpatterns/GuavaSelfEquals.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SelfEqualsTest.java

commit 3ea2b9456511c78eae0f0e1c38a0df9e7aa1dfe9
Author: glorioso <glorioso@google.com>
Date:   Mon Aug 15 16:11:56 2016 -0700

    Update javadoc link for guice javadocs
    
    MOE_MIGRATED_REVID=130337034

M	core/src/main/java/com/google/errorprone/bugpatterns/inject/AssistedInjectAndInjectOnConstructors.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/AssistedParameters.java

commit ca845a256b1ac35c6d6f638a3ab637990e8359a0
Author: dawasser <dawasser@google.com>
Date:   Mon Aug 15 01:08:14 2016 -0700

    Fix handling of an implicit format string param in a @FormatMethod.
    
    Previously StrictFormatStringValidation would incorrectly assume in some
    cases that a format string in a @FormatMethod that was not explicitly
    annotated @FormatString was not a format string.
    
    MOE_MIGRATED_REVID=130258940

M	core/src/main/java/com/google/errorprone/bugpatterns/formatstring/StrictFormatStringValidation.java
M	core/src/test/java/com/google/errorprone/bugpatterns/formatstring/FormatStringAnnotationCheckerTest.java

commit 846dde4b806ff7d88f197a07017a93d793d658df
Author: yulissa <yulissa@google.com>
Date:   Fri Aug 12 13:24:51 2016 -0700

    Added a method that finds the maximum percentage in an array and based on that index returns the argument from argList.
    
    MOE_MIGRATED_REVID=130133403

M	core/src/main/java/com/google/errorprone/bugpatterns/ArgumentParameterUtils.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArgumentParameterUtilsTest.java

commit 95c72309e89e7bbc9cb4cece15f5b9558dffb1ab
Author: cushon <cushon@google.com>
Date:   Fri Aug 12 12:56:30 2016 -0700

    Add style guide links to MultipleTopLevelClasses
    
    and PackageLocation
    
    MOE_MIGRATED_REVID=130130751

M	core/src/main/java/com/google/errorprone/bugpatterns/ClassName.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MultipleTopLevelClasses.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PackageLocation.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit 87c093ccbd2d18c2743f58182a90366e4ecc8674
Author: cushon <cushon@google.com>
Date:   Fri Aug 12 12:19:28 2016 -0700

    Redacted
    
    MOE_MIGRATED_REVID=130127411

M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableCheckerTest.java

commit 3940dcf677062fd36bbceb74a9ae3eb44321e7b0
Author: bhagwani <bhagwani@google.com>
Date:   Thu Aug 11 15:25:23 2016 -0700

    Prepare to make SelfEquality an ERROR
    
    MOE_MIGRATED_REVID=130039146

M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquality.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit 55c6794fd7fbf9804f15b37ebed2bc276644715a
Author: cushon <cushon@google.com>
Date:   Wed Aug 10 11:36:22 2016 -0700

    Add caching to getTypeFromString
    
    Profiling shows this method is somewhat expensive, and is getting
    hammered by certain checks.
    
    MOE_MIGRATED_REVID=129890732

M	core/src/main/java/com/google/errorprone/VisitorState.java

commit 4ae0a018f2726c8e0c5e1e5ea2576393cb8becfd
Author: cushon <cushon@google.com>
Date:   Wed Jul 27 18:16:23 2016 -0700

    Link to the style guide in WildcardImport and UnnecessaryStaticImport
    
    MOE_MIGRATED_REVID=129817951

M	core/src/main/java/com/google/errorprone/bugpatterns/UnnecessaryStaticImport.java
M	core/src/main/java/com/google/errorprone/bugpatterns/WildcardImport.java

commit c08ac44cc3144e90650a979b9692cce7209e9140
Author: cushon <cushon@google.com>
Date:   Tue Aug 9 16:28:52 2016 -0700

    Move ArgumentParameterUtils
    
    MOE_MIGRATED_REVID=129807781

A	core/src/main/java/com/google/errorprone/bugpatterns/ArgumentParameterUtils.java
A	core/src/test/java/com/google/errorprone/bugpatterns/ArgumentParameterUtilsTest.java

commit 237ab8d0fb7ee5095a9efd0fe321df3da810ed34
Author: cushon <cushon@google.com>
Date:   Tue Aug 9 14:22:11 2016 -0700

    Discourage c-style array declarations
    
    MOE_MIGRATED_REVID=129793273

A	core/src/main/java/com/google/errorprone/bugpatterns/MixedArrayDimensions.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/MixedArrayDimensionsTest.java

commit 7e7dfbba29c8e3f7bb48c925031b58fb4b69d452
Author: cushon <cushon@google.com>
Date:   Tue Aug 9 13:26:26 2016 -0700

    Add a check for multi-variable declarations
    
    MOE_MIGRATED_REVID=129786230

A	core/src/main/java/com/google/errorprone/bugpatterns/MultiVariableDeclaration.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/MultiVariableDeclarationTest.java

commit 1352a7499b591d8cdfa66916bbf61102dc136783
Author: yulissa <yulissa@google.com>
Date:   Mon Aug 8 17:17:21 2016 -0700

    Created a new check for argument names of the same type that have been swapped
    
    and for now suggests to fix it by changing the argument name to the same
    as the parameter.
    
    MOE_MIGRATED_REVID=129693286

A	core/src/main/java/com/google/errorprone/bugpatterns/ArgumentParameterSwap.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/ArgumentParameterSwapTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArgumentParameterSwapNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArgumentParameterSwapPositiveCases.java

commit 9df10e7a08289c5140812c4918752c743783a0f6
Author: cushon <cushon@google.com>
Date:   Mon Aug 8 17:02:09 2016 -0700

    Improve error for BugCheckers without a @BugPattern annotation
    
    MOE_MIGRATED_REVID=129691528

M	core/src/main/java/com/google/errorprone/BugCheckerInfo.java

commit 46dd9813cedd9d26c3b085c9dd59cf7234082ad4
Author: cushon <cushon@google.com>
Date:   Mon Aug 8 16:05:39 2016 -0700

    Finish migration from Matchers.staticMethod to MethodMatchers
    
    MOE_MIGRATED_REVID=129685254

M	core/src/main/java/com/google/errorprone/bugpatterns/ThrowIfUncheckedKnownChecked.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
D	core/src/main/java/com/google/errorprone/matchers/StaticMethod.java
M	core/src/main/java/com/google/errorprone/matchers/method/MethodMatchers.java
M	core/src/main/java/com/google/errorprone/matchers/method/StaticMethodMatcherImpl.java
D	core/src/test/java/com/google/errorprone/matchers/StaticMethodTest.java

commit 4da9258c21ed8253e25b6f07d0b2b9f3d139e661
Author: cushon <cushon@google.com>
Date:   Mon Aug 8 12:16:53 2016 -0700

    Fix handling of qualified names in javadoc
    
    Qualified names in javadoc should be recorded as a use of the base type:
    `Map.Entry` is a use of `Map`, `java.util.List` does not require an
    import.
    
    MOE_MIGRATED_REVID=129657934

M	core/src/main/java/com/google/errorprone/bugpatterns/RemoveUnusedImports.java
M	core/src/test/java/com/google/errorprone/bugpatterns/RemoveUnusedImportsTest.java

commit 415b730649c2ba5df0d3950e48d8eda0dbbfef8e
Author: cushon <cushon@google.com>
Date:   Mon Aug 8 11:33:25 2016 -0700

    Don't remove imports referenced by method parameters in javadoc
    
    `{@link #foo(Bar)}` counts as a use of `Bar`.
    
    MOE_MIGRATED_REVID=129652841

M	core/src/main/java/com/google/errorprone/bugpatterns/RemoveUnusedImports.java
M	core/src/test/java/com/google/errorprone/bugpatterns/RemoveUnusedImportsTest.java

commit a30c176ea28bd4a9f02a207dc52cfd5616f00874
Author: bhagwani <bhagwani@google.com>
Date:   Mon Aug 8 08:55:49 2016 -0700

    Refactor SelfEquality check and enable it as a WARNING
    
    MOE_MIGRATED_REVID=129634451

M	core/src/main/java/com/google/errorprone/bugpatterns/GuavaSelfEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquality.java

commit d3a4e291cfaad7a83b842943edb88e29f01f8344
Author: yulissa <yulissa@google.com>
Date:   Fri Aug 5 18:21:40 2016 -0700

    Created a getSymbol method for NewClassTrees that returns a method symbol.
    
    MOE_MIGRATED_REVID=129504511

M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java

commit d69893df33444205f30d7b925fc0a7bedbeaec16
Author: avenet <avenet@google.com>
Date:   Thu Aug 4 20:21:48 2016 -0700

    Reinstate InsecureCipherMode as an error
    
    MOE_MIGRATED_REVID=129403895

M	core/src/main/java/com/google/errorprone/bugpatterns/InsecureCipherMode.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit 93d868fee1ca93aaaa8006072cfad8459576d0c9
Author: cushon <cushon@google.com>
Date:   Wed Aug 3 17:13:17 2016 -0700

    Lint error for logger variables that incorrectly use CONSTANT_CASE
    
    MOE_MIGRATED_REVID=129277696

M	core/src/main/java/com/google/errorprone/bugpatterns/ConstantField.java
M	core/src/main/java/com/google/errorprone/fixes/SuggestedFixes.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ConstantFieldTest.java

commit 975589d166f763e1ee9ec7d586eda018d06c8e33
Author: eaftan <eaftan@google.com>
Date:   Wed Aug 3 15:37:45 2016 -0700

    Escape HTML characters when outputting the summary for bugpattern doc pages.
    
    MOE_MIGRATED_REVID=129267260

M	core/src/main/java/com/google/errorprone/bugpatterns/IdentityBinaryExpression.java
M	docgen/src/main/java/com/google/errorprone/resources/bugpattern.mustache
M	docgen/src/test/java/com/google/errorprone/BugPatternFileGeneratorTest.java
A	docgen/src/test/java/com/google/errorprone/testdata/DontDoThis_nofrontmatter_gfm.md

commit 22e44305c0590035add1d59cea0c01f187ae14c5
Author: avenet <avenet@google.com>
Date:   Wed Aug 3 10:05:23 2016 -0700

    Added IES-based ciphers to the list of vulnerable algorithms banned by
    the InsecureCipherMode checker.
    
    MOE_MIGRATED_REVID=129226606

M	core/src/main/java/com/google/errorprone/bugpatterns/InsecureCipherMode.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InsecureCipherModePositiveCases.java

commit ff733af3b2fc9f6d3a0b1d72d9f66900dfda6315
Author: glorioso <glorioso@google.com>
Date:   Tue Aug 2 22:06:56 2016 -0700

    Re-wrap markdown link to not split across two lines:
    
    http://errorprone.info/bugpattern/DoubleCheckedLocking (see the markdown
    link code bleeding into text).
    
    MOE_MIGRATED_REVID=129179835

M	docs/bugpattern/DoubleCheckedLocking.md

commit c497a04e0a05c6bc030510ba3c1441401b810f02
Author: cushon <cushon@google.com>
Date:   Tue Aug 2 21:02:30 2016 -0700

    Check for mutable enclosing instances
    
    MOE_MIGRATED_REVID=129176422

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableChecker.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableCheckerTest.java

commit 67231441e26eba9727ac960a6ecbc2c935d055f8
Author: cushon <cushon@google.com>
Date:   Tue Aug 2 20:38:51 2016 -0700

    Handle compareTo in ReferenceEquality
    
    Allow a type to be compared for reference equality in its own compareTo
    method.
    
    MOE_MIGRATED_REVID=129175197

M	core/src/main/java/com/google/errorprone/bugpatterns/ReferenceEquality.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ReferenceEqualityTest.java

commit 75c7d8eade146caa979f9fd10515ded4257b05c9
Author: avenet <avenet@google.com>
Date:   Tue Aug 2 19:52:00 2016 -0700

    Update recognized ciphers in InsecureCipherMode
    
    MOE_MIGRATED_REVID=129172775

M	core/src/main/java/com/google/errorprone/bugpatterns/InsecureCipherMode.java

commit f359b33735ebe18e419e62a73e9f9c7ef3907e73
Author: cushon <cushon@google.com>
Date:   Mon Aug 1 15:59:03 2016 -0700

    Fix variables of type FileReader and FileWriter
    
    MOE_MIGRATED_REVID=129037477

M	core/src/main/java/com/google/errorprone/bugpatterns/DefaultCharset.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DefaultCharsetTest.java

commit 1beebe3ea7836bdd9d720c082865954b5198e359
Author: avenet <avenet@google.com>
Date:   Mon Aug 1 14:37:15 2016 -0700

    Redacted
    
    MOE_MIGRATED_REVID=129028166

M	core/src/main/java/com/google/errorprone/bugpatterns/InsecureCipherMode.java

commit 3a76b74d74d0829830189c85aaf5c62afdb401c9
Author: cushon <cushon@google.com>
Date:   Fri Jul 29 15:49:06 2016 -0700

    Handle nulls in IsSubtypeOf
    
    MOE_MIGRATED_REVID=128855548

M	core/src/main/java/com/google/errorprone/matchers/IsSubtypeOf.java

commit 0f8072a1720d05276219d8fb56309ee93fa30f78
Author: cushon <cushon@google.com>
Date:   Fri Jul 29 12:33:47 2016 -0700

    Remove handling of guava's @ForOverride and @RequiredModifiers
    
    MOE_MIGRATED_REVID=128835189

M	core/src/main/java/com/google/errorprone/bugpatterns/ForOverrideChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/RequiredModifiersChecker.java
M	core/src/test/java/com/google/errorprone/bugpatterns/RequiredModifiersCheckerTest.java

commit 1c1260bbabda0b64fa2b7d3b44449b4e2640d80d
Author: mlourenco <mlourenco@google.com>
Date:   Fri Jul 29 00:56:15 2016 -0700

    Add a test for suppressing CompileTimeConstant
    
    MOE_MIGRATED_REVID=128784509

M	core/src/main/java/com/google/errorprone/bugpatterns/CompileTimeConstantChecker.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CompileTimeConstantCheckerTest.java

commit ddaea8de8473a9ac52d4ad0b09270e39a8f3fd61
Author: cushon <cushon@google.com>
Date:   Thu Jul 28 18:15:37 2016 -0700

    Complete fewer symbols in BoxedPrimitiveConstructor
    
    Fixes #441
    
    MOE_MIGRATED_REVID=128764851

M	core/src/main/java/com/google/errorprone/bugpatterns/BoxedPrimitiveConstructor.java
M	core/src/test/java/com/google/errorprone/bugpatterns/BoxedPrimitiveConstructorTest.java

commit 1885c84dd3576c102e3621eec116be106be40f85
Author: kmb <kmb@google.com>
Date:   Tue Jul 12 11:28:24 2016 -0700

    Improve nullness propagation in a few places:
    
    - instanceof tests guarantee non-null
    - mark accessed arrays as non-null
    - consider this non-null
    
    Also added a few more tests for existing features (&&, unboxing)
    
    RELNOTES: improve NullnessAnalysis precision for instanceof and array accesses
    
    MOE_MIGRATED_REVID=128608782

M	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/AbstractNullnessPropagationTransfer.java
M	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java
M	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/testdata/NullnessPropagationTransferCases1.java
M	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/testdata/NullnessPropagationTransferCases3.java

commit 3c8ed036ee250db7e744a8adff6a67f4b2def960
Author: cushon <cushon@google.com>
Date:   Tue Jul 26 18:33:55 2016 -0700

    New check for compile-time constant overflow
    
    Fixes #365
    
    RELNOTES: New check for compile-time constant overflow
    
    MOE_MIGRATED_REVID=128540257

A	core/src/main/java/com/google/errorprone/bugpatterns/ConstantOverflow.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/ConstantOverflowTest.java
A	docs/bugpattern/ConstantOverflow.md

commit 6c440ae18e9df017485279068cd62d8c65407094
Author: eaftan <eaftan@google.com>
Date:   Tue Jul 26 17:26:34 2016 -0700

    Make CheckReturnValue match on any annotation with the simple name "CheckReturnValue"
    
    This is a revised version of PR #435.
    
    Fixes #422
    
    RELNOTES: CheckReturnValue checker now respects any annotation
    named "CheckReturnValue," not just the JSR 305 one.
    
    MOE_MIGRATED_REVID=128535032

M	core/src/main/java/com/google/errorprone/bugpatterns/CheckReturnValue.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/dagger/ProvidesNull.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CheckReturnValueTest.java
M	core/src/test/java/com/google/errorprone/util/ASTHelpersTest.java

commit c883422e922aca7f8092a24e65dc0eb18b170a19
Author: cushon <cushon@google.com>
Date:   Tue Jul 26 16:58:02 2016 -0700

    Fix all the imports
    
    MOE_MIGRATED_REVID=128532029

M	annotation/src/main/java/com/google/errorprone/BugPatternValidator.java
M	annotation/src/test/java/com/google/errorprone/BugPatternValidatorTest.java
M	annotations/src/main/java/com/google/errorprone/annotations/IncompatibleModifiers.java
M	annotations/src/main/java/com/google/errorprone/annotations/RequiredModifiers.java
M	ant/src/main/java/com/google/errorprone/ErrorProneAntCompilerAdapter.java
M	ant/src/main/java/com/google/errorprone/ErrorProneExternalCompilerAdapter.java
M	core/src/main/java/com/google/errorprone/BaseErrorProneJavaCompiler.java
M	core/src/main/java/com/google/errorprone/BugCheckerInfo.java
M	core/src/main/java/com/google/errorprone/CodeTransformer.java
M	core/src/main/java/com/google/errorprone/CompositeCodeTransformer.java
M	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorProneError.java
M	core/src/main/java/com/google/errorprone/ErrorProneJavaCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorProneOptions.java
M	core/src/main/java/com/google/errorprone/ErrorPronePlugins.java
M	core/src/main/java/com/google/errorprone/ErrorProneVersion.java
M	core/src/main/java/com/google/errorprone/JavacErrorDescriptionListener.java
M	core/src/main/java/com/google/errorprone/MaskedClassLoader.java
M	core/src/main/java/com/google/errorprone/SuppressionHelper.java
M	core/src/main/java/com/google/errorprone/analysis/AnalysesConfig.java
M	core/src/main/java/com/google/errorprone/analysis/BugCheckerLocalAnalysis.java
M	core/src/main/java/com/google/errorprone/analysis/ErrorProneTopLevelAnalysis.java
M	core/src/main/java/com/google/errorprone/analysis/LocalAnalysis.java
M	core/src/main/java/com/google/errorprone/analysis/LocalAnalysisAsTopLevelAnalysis.java
M	core/src/main/java/com/google/errorprone/analysis/RecompilingTopLevelAnalysis.java
M	core/src/main/java/com/google/errorprone/analysis/SumTopLevelAnalysis.java
M	core/src/main/java/com/google/errorprone/analysis/TopLevelAnalysis.java
M	core/src/main/java/com/google/errorprone/analysis/TopLevelAnalysisWithSeverity.java
M	core/src/main/java/com/google/errorprone/apply/DescriptionBasedDiff.java
M	core/src/main/java/com/google/errorprone/apply/DiffApplier.java
M	core/src/main/java/com/google/errorprone/apply/DiffSupplier.java
M	core/src/main/java/com/google/errorprone/apply/ImportStatements.java
M	core/src/main/java/com/google/errorprone/apply/SourceFile.java
M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractAsyncTypeReturnsNull.java
M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractJUnit4InitMethodNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractReferenceEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractReturnValueIgnored.java
M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractSuppressWarningsMatcher.java
M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractToString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayHashCode.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/AssertFalse.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BadAnnotationImplementation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BadComparable.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BadShiftAmount.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BigDecimalLiteralDouble.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BoxedPrimitiveConstructor.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/CannotMockFinalClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ChainingConstructorIgnoresParameter.java
M	core/src/main/java/com/google/errorprone/bugpatterns/CheckReturnValue.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ClassCanBeStatic.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ClassName.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ComparisonContractViolated.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ComparisonOutOfRange.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ConstantField.java
M	core/src/main/java/com/google/errorprone/bugpatterns/DeadException.java
M	core/src/main/java/com/google/errorprone/bugpatterns/DepAnn.java
M	core/src/main/java/com/google/errorprone/bugpatterns/DivZero.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ElementsCountedInLoop.java
M	core/src/main/java/com/google/errorprone/bugpatterns/EmptyIfStatement.java
M	core/src/main/java/com/google/errorprone/bugpatterns/EmptyTopLevelDeclaration.java
M	core/src/main/java/com/google/errorprone/bugpatterns/EqualsHashCode.java
M	core/src/main/java/com/google/errorprone/bugpatterns/EqualsIncompatibleType.java
M	core/src/main/java/com/google/errorprone/bugpatterns/EqualsNaN.java
M	core/src/main/java/com/google/errorprone/bugpatterns/Finally.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ForOverrideChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GetClassOnClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/HashtableContains.java
M	core/src/main/java/com/google/errorprone/bugpatterns/IncompatibleModifiersChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InfiniteRecursion.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InsecureCipherMode.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidPatternSyntax.java
M	core/src/main/java/com/google/errorprone/bugpatterns/IsInstanceOfClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/IterableAndIterator.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JMockTestWithoutRunWithOrRuleAnnotation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit3FloatingPointComparisonWithoutDelta.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit3TestNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4SetUpNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TearDownNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TestNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnitAmbiguousTestClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffix.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MissingFail.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MissingOverride.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MisusedWeekYear.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MockitoCast.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MockitoUsage.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ModifyingCollectionWithItself.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MultipleTopLevelClasses.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NarrowingCompoundAssignment.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NoAllocationChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NonAtomicVolatileUpdate.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NonCanonicalStaticImport.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NonCanonicalStaticMemberImport.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NonFinalCompileTimeConstant.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NonOverridingEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NonRuntimeAnnotation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NumericEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/OperatorPrecedence.java
M	core/src/main/java/com/google/errorprone/bugpatterns/OptionalEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/Overrides.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNull.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitive.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsInvalidPlaceholder.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PrimitiveArrayPassedToVarargsMethod.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PrivateConstructorForUtilityClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ProtoFieldPreconditionsCheckNotNull.java
M	core/src/main/java/com/google/errorprone/bugpatterns/RandomModInteger.java
M	core/src/main/java/com/google/errorprone/bugpatterns/RequiredModifiersChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/RestrictedApiChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ReturnValueIgnored.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfAssignment.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfComparison.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SizeGreaterThanOrEqualsZero.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StaticAccessedFromInstance.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StaticImports.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StreamToString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StringBuilderInitWithChar.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StringEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SuppressWarningsDeprecated.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ThrowIfUncheckedKnownChecked.java
M	core/src/main/java/com/google/errorprone/bugpatterns/TryFailThrowable.java
M	core/src/main/java/com/google/errorprone/bugpatterns/TypeParameterQualifier.java
M	core/src/main/java/com/google/errorprone/bugpatterns/TypeParameterUnusedInFormals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/UnnecessaryStaticImport.java
M	core/src/main/java/com/google/errorprone/bugpatterns/UnsynchronizedOverridesSynchronized.java
M	core/src/main/java/com/google/errorprone/bugpatterns/UnusedAnonymousClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/VarChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/WaitNotInLoop.java
M	core/src/main/java/com/google/errorprone/bugpatterns/WildcardImport.java
M	core/src/main/java/com/google/errorprone/bugpatterns/WrongParameterPackage.java
M	core/src/main/java/com/google/errorprone/bugpatterns/android/FragmentNotInstantiable.java
M	core/src/main/java/com/google/errorprone/bugpatterns/android/HardCodedSdCardPath.java
M	core/src/main/java/com/google/errorprone/bugpatterns/android/MislabeledAndroidString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/android/RectIntersectReturnValueIgnored.java
M	core/src/main/java/com/google/errorprone/bugpatterns/collectionincompatibletype/AbstractCollectionIncompatibleTypeMatcher.java
M	core/src/main/java/com/google/errorprone/bugpatterns/collectionincompatibletype/CollectionIncompatibleType.java
M	core/src/main/java/com/google/errorprone/bugpatterns/collectionincompatibletype/MethodArgMatcher.java
M	core/src/main/java/com/google/errorprone/bugpatterns/collectionincompatibletype/TypeArgOfMethodArgMatcher.java
M	core/src/main/java/com/google/errorprone/bugpatterns/formatstring/FormatString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/AssistedInjectAndInjectOnConstructors.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/AssistedInjectAndInjectOnSameConstructor.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/InjectedConstructorAnnotations.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/InvalidTargetingOnScopingAnnotation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/JavaxInjectOnAbstractMethod.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/JavaxInjectOnFinalField.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/MoreThanOneInjectableConstructor.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/MoreThanOneQualifier.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/MoreThanOneScopeAnnotationOnClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/OverlappingQualifierAndScopeAnnotation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/ScopeAnnotationOnInterfaceOrAbstractClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/ScopeOrQualifierAnnotationRetention.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/dagger/DaggerAnnotations.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/dagger/EmptySetMultibindingContributions.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/dagger/PrivateConstructorForNoninstantiableModule.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/dagger/ProvidesNull.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/dagger/UseBinds.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/AssistedInjectScoping.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/AssistedParameters.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/InjectOnFinalField.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/OverridesGuiceInjectableMethod.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/OverridesJavaxInjectableMethod.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/AbstractLockMethodChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/DoubleCheckedLocking.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByExpression.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedBySymbolResolver.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByUtils.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByValidator.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzer.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockSet.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/LockMethodChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/StaticGuardedByInstance.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/SynchronizeOnNonFinalField.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/UnlockMethodChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/WellKnownMutability.java
M	core/src/main/java/com/google/errorprone/dataflow/ConstantPropagationAnalysis.java
M	core/src/main/java/com/google/errorprone/dataflow/DataFlow.java
M	core/src/main/java/com/google/errorprone/dataflow/LocalStore.java
M	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/AbstractNullnessPropagationTransfer.java
M	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessAnalysis.java
M	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	core/src/main/java/com/google/errorprone/fixes/AppliedFix.java
M	core/src/main/java/com/google/errorprone/fixes/Fix.java
M	core/src/main/java/com/google/errorprone/fixes/Replacements.java
M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java
M	core/src/main/java/com/google/errorprone/fixes/SuggestedFixes.java
M	core/src/main/java/com/google/errorprone/internal/NonDelegatingClassLoader.java
M	core/src/main/java/com/google/errorprone/matchers/AbstractTypeMatcher.java
M	core/src/main/java/com/google/errorprone/matchers/AnnotationDoesNotHaveArgument.java
M	core/src/main/java/com/google/errorprone/matchers/AnnotationHasArgumentWithValue.java
M	core/src/main/java/com/google/errorprone/matchers/AnnotationMatcher.java
M	core/src/main/java/com/google/errorprone/matchers/Asserts.java
M	core/src/main/java/com/google/errorprone/matchers/ChildMultiMatcher.java
M	core/src/main/java/com/google/errorprone/matchers/CompileTimeConstantExpressionMatcher.java
M	core/src/main/java/com/google/errorprone/matchers/CompoundAssignment.java
M	core/src/main/java/com/google/errorprone/matchers/ConstructorOfClass.java
M	core/src/main/java/com/google/errorprone/matchers/Contains.java
M	core/src/main/java/com/google/errorprone/matchers/DatastoreMatchers.java
M	core/src/main/java/com/google/errorprone/matchers/DescendantOf.java
M	core/src/main/java/com/google/errorprone/matchers/Description.java
M	core/src/main/java/com/google/errorprone/matchers/Enclosing.java
M	core/src/main/java/com/google/errorprone/matchers/HasArguments.java
M	core/src/main/java/com/google/errorprone/matchers/HasIdentifier.java
M	core/src/main/java/com/google/errorprone/matchers/InstanceMethod.java
M	core/src/main/java/com/google/errorprone/matchers/IsCastableTo.java
M	core/src/main/java/com/google/errorprone/matchers/IsSubtypeOf.java
M	core/src/main/java/com/google/errorprone/matchers/IsSymbol.java
M	core/src/main/java/com/google/errorprone/matchers/JUnitMatchers.java
M	core/src/main/java/com/google/errorprone/matchers/Matcher.java
M	core/src/main/java/com/google/errorprone/matchers/MethodHasParameters.java
M	core/src/main/java/com/google/errorprone/matchers/MethodInvocation.java
M	core/src/main/java/com/google/errorprone/matchers/MethodVisibility.java
M	core/src/main/java/com/google/errorprone/matchers/NextStatement.java
M	core/src/main/java/com/google/errorprone/matchers/NullnessMatcher.java
M	core/src/main/java/com/google/errorprone/matchers/Returns.java
M	core/src/main/java/com/google/errorprone/matchers/StaticMethod.java
M	core/src/main/java/com/google/errorprone/matchers/StringLiteral.java
M	core/src/main/java/com/google/errorprone/matchers/Suppressible.java
M	core/src/main/java/com/google/errorprone/matchers/Throws.java
M	core/src/main/java/com/google/errorprone/matchers/WaitMatchers.java
M	core/src/main/java/com/google/errorprone/matchers/method/AbstractChainedMatcher.java
M	core/src/main/java/com/google/errorprone/matchers/method/AbstractSimpleMatcher.java
M	core/src/main/java/com/google/errorprone/matchers/method/AnyMethodMatcherImpl.java
M	core/src/main/java/com/google/errorprone/matchers/method/ConstructorClassMatcherImpl.java
M	core/src/main/java/com/google/errorprone/matchers/method/ConstructorMatcherImpl.java
M	core/src/main/java/com/google/errorprone/matchers/method/InstanceMethodMatcherImpl.java
M	core/src/main/java/com/google/errorprone/matchers/method/MatchState.java
M	core/src/main/java/com/google/errorprone/matchers/method/MethodClassMatcherImpl.java
M	core/src/main/java/com/google/errorprone/matchers/method/MethodMatcher.java
M	core/src/main/java/com/google/errorprone/matchers/method/MethodMatchers.java
M	core/src/main/java/com/google/errorprone/matchers/method/MethodNameMatcherImpl.java
M	core/src/main/java/com/google/errorprone/matchers/method/MethodSignatureMatcherImpl.java
M	core/src/main/java/com/google/errorprone/matchers/method/ParameterMatcherImpl.java
M	core/src/main/java/com/google/errorprone/matchers/method/StaticMethodMatcherImpl.java
M	core/src/main/java/com/google/errorprone/predicates/TypePredicate.java
M	core/src/main/java/com/google/errorprone/predicates/TypePredicates.java
M	core/src/main/java/com/google/errorprone/predicates/type/Any.java
M	core/src/main/java/com/google/errorprone/predicates/type/Array.java
M	core/src/main/java/com/google/errorprone/predicates/type/DescendantOf.java
M	core/src/main/java/com/google/errorprone/predicates/type/DescendantOfAny.java
M	core/src/main/java/com/google/errorprone/predicates/type/Exact.java
M	core/src/main/java/com/google/errorprone/predicates/type/ExactAny.java
M	core/src/main/java/com/google/errorprone/refaster/Bindings.java
M	core/src/main/java/com/google/errorprone/refaster/BlockTemplate.java
M	core/src/main/java/com/google/errorprone/refaster/BlockTemplateMatch.java
M	core/src/main/java/com/google/errorprone/refaster/Choice.java
M	core/src/main/java/com/google/errorprone/refaster/ControlFlowVisitor.java
M	core/src/main/java/com/google/errorprone/refaster/ExpressionTemplate.java
M	core/src/main/java/com/google/errorprone/refaster/ImportPolicy.java
M	core/src/main/java/com/google/errorprone/refaster/Inliner.java
M	core/src/main/java/com/google/errorprone/refaster/LocalVarBinding.java
M	core/src/main/java/com/google/errorprone/refaster/PlaceholderMethod.java
M	core/src/main/java/com/google/errorprone/refaster/PlaceholderUnificationVisitor.java
M	core/src/main/java/com/google/errorprone/refaster/PlaceholderVerificationVisitor.java
M	core/src/main/java/com/google/errorprone/refaster/RefasterRule.java
M	core/src/main/java/com/google/errorprone/refaster/RefasterRuleBuilderScanner.java
M	core/src/main/java/com/google/errorprone/refaster/RefasterScanner.java
M	core/src/main/java/com/google/errorprone/refaster/StringName.java
M	core/src/main/java/com/google/errorprone/refaster/Template.java
M	core/src/main/java/com/google/errorprone/refaster/TemplateMatch.java
M	core/src/main/java/com/google/errorprone/refaster/UAnnotatedType.java
M	core/src/main/java/com/google/errorprone/refaster/UAnnotation.java
M	core/src/main/java/com/google/errorprone/refaster/UAnyOf.java
M	core/src/main/java/com/google/errorprone/refaster/UArrayAccess.java
M	core/src/main/java/com/google/errorprone/refaster/UArrayType.java
M	core/src/main/java/com/google/errorprone/refaster/UArrayTypeTree.java
M	core/src/main/java/com/google/errorprone/refaster/UAssert.java
M	core/src/main/java/com/google/errorprone/refaster/UAssign.java
M	core/src/main/java/com/google/errorprone/refaster/UAssignOp.java
M	core/src/main/java/com/google/errorprone/refaster/UBinary.java
M	core/src/main/java/com/google/errorprone/refaster/UBlank.java
M	core/src/main/java/com/google/errorprone/refaster/UBlock.java
M	core/src/main/java/com/google/errorprone/refaster/UBreak.java
M	core/src/main/java/com/google/errorprone/refaster/UCatch.java
M	core/src/main/java/com/google/errorprone/refaster/UClassDecl.java
M	core/src/main/java/com/google/errorprone/refaster/UClassIdent.java
M	core/src/main/java/com/google/errorprone/refaster/UClassType.java
M	core/src/main/java/com/google/errorprone/refaster/UConditional.java
M	core/src/main/java/com/google/errorprone/refaster/UContinue.java
M	core/src/main/java/com/google/errorprone/refaster/UDoWhileLoop.java
M	core/src/main/java/com/google/errorprone/refaster/UEnhancedForLoop.java
M	core/src/main/java/com/google/errorprone/refaster/UExpressionStatement.java
M	core/src/main/java/com/google/errorprone/refaster/UForAll.java
M	core/src/main/java/com/google/errorprone/refaster/UForLoop.java
M	core/src/main/java/com/google/errorprone/refaster/UFreeIdent.java
M	core/src/main/java/com/google/errorprone/refaster/UIf.java
M	core/src/main/java/com/google/errorprone/refaster/UInstanceOf.java
M	core/src/main/java/com/google/errorprone/refaster/UIntersectionClassType.java
M	core/src/main/java/com/google/errorprone/refaster/UIntersectionType.java
M	core/src/main/java/com/google/errorprone/refaster/ULabeledStatement.java
M	core/src/main/java/com/google/errorprone/refaster/ULambda.java
M	core/src/main/java/com/google/errorprone/refaster/ULiteral.java
M	core/src/main/java/com/google/errorprone/refaster/ULocalVarIdent.java
M	core/src/main/java/com/google/errorprone/refaster/UMatches.java
M	core/src/main/java/com/google/errorprone/refaster/UMemberReference.java
M	core/src/main/java/com/google/errorprone/refaster/UMemberSelect.java
M	core/src/main/java/com/google/errorprone/refaster/UMethodDecl.java
M	core/src/main/java/com/google/errorprone/refaster/UMethodInvocation.java
M	core/src/main/java/com/google/errorprone/refaster/UMethodType.java
M	core/src/main/java/com/google/errorprone/refaster/UModifiers.java
M	core/src/main/java/com/google/errorprone/refaster/UNewArray.java
M	core/src/main/java/com/google/errorprone/refaster/UNewClass.java
M	core/src/main/java/com/google/errorprone/refaster/UOfKind.java
M	core/src/main/java/com/google/errorprone/refaster/UParens.java
M	core/src/main/java/com/google/errorprone/refaster/UPlaceholderExpression.java
M	core/src/main/java/com/google/errorprone/refaster/UPlaceholderStatement.java
M	core/src/main/java/com/google/errorprone/refaster/UPrimitiveType.java
M	core/src/main/java/com/google/errorprone/refaster/UPrimitiveTypeTree.java
M	core/src/main/java/com/google/errorprone/refaster/URepeated.java
M	core/src/main/java/com/google/errorprone/refaster/UReturn.java
M	core/src/main/java/com/google/errorprone/refaster/USimpleStatement.java
M	core/src/main/java/com/google/errorprone/refaster/UStatement.java
M	core/src/main/java/com/google/errorprone/refaster/UStaticIdent.java
M	core/src/main/java/com/google/errorprone/refaster/USynchronized.java
M	core/src/main/java/com/google/errorprone/refaster/UTemplater.java
M	core/src/main/java/com/google/errorprone/refaster/UThrow.java
M	core/src/main/java/com/google/errorprone/refaster/UTree.java
M	core/src/main/java/com/google/errorprone/refaster/UTry.java
M	core/src/main/java/com/google/errorprone/refaster/UType.java
M	core/src/main/java/com/google/errorprone/refaster/UTypeApply.java
M	core/src/main/java/com/google/errorprone/refaster/UTypeCast.java
M	core/src/main/java/com/google/errorprone/refaster/UTypeParameter.java
M	core/src/main/java/com/google/errorprone/refaster/UTypeVar.java
M	core/src/main/java/com/google/errorprone/refaster/UTypeVarIdent.java
M	core/src/main/java/com/google/errorprone/refaster/UUnary.java
M	core/src/main/java/com/google/errorprone/refaster/UUnionType.java
M	core/src/main/java/com/google/errorprone/refaster/UVariableDecl.java
M	core/src/main/java/com/google/errorprone/refaster/UWhileLoop.java
M	core/src/main/java/com/google/errorprone/refaster/UWildcard.java
M	core/src/main/java/com/google/errorprone/refaster/UWildcardType.java
M	core/src/main/java/com/google/errorprone/refaster/Unifier.java
M	core/src/main/java/com/google/errorprone/refaster/annotation/Matches.java
M	core/src/main/java/com/google/errorprone/refaster/annotation/NotMatches.java
M	core/src/main/java/com/google/errorprone/refaster/annotation/OfKind.java
M	core/src/main/java/com/google/errorprone/refaster/annotation/RequiredAnnotationProcessor.java
M	core/src/main/java/com/google/errorprone/refaster/annotation/UseImportPolicy.java
M	core/src/main/java/com/google/errorprone/scanner/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/scanner/ErrorProneScannerTransformer.java
M	core/src/main/java/com/google/errorprone/scanner/Scanner.java
M	core/src/main/java/com/google/errorprone/scanner/ScannerSupplier.java
M	core/src/main/java/com/google/errorprone/scanner/ScannerSupplierImpl.java
M	core/src/main/java/com/google/errorprone/suppliers/Supplier.java
M	core/src/main/java/com/google/errorprone/suppliers/Suppliers.java
M	core/src/main/java/com/google/errorprone/util/ErrorProneToken.java
M	core/src/main/java/com/google/errorprone/util/ErrorProneTokens.java
M	core/src/test/java/com/google/errorprone/BugCheckerRefactoringTestHelper.java
M	core/src/test/java/com/google/errorprone/BugCheckerRefactoringTestHelperTest.java
M	core/src/test/java/com/google/errorprone/CommandLineFlagTest.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelperTest.java
M	core/src/test/java/com/google/errorprone/DiagnosticKindTest.java
M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneInMemoryFileManager.java
M	core/src/test/java/com/google/errorprone/ErrorProneJavaCompilerTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneOptionsTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneTestCompiler.java
M	core/src/test/java/com/google/errorprone/MatcherChecker.java
M	core/src/test/java/com/google/errorprone/NullAnnotationProcessor.java
M	core/src/test/java/com/google/errorprone/SubContextTest.java
M	core/src/test/java/com/google/errorprone/apply/ImportStatementsTest.java
M	core/src/test/java/com/google/errorprone/apply/SourceFileTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayHashCodeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayToStringTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/AssertFalseTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/AsyncFunctionReturnsNullTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/BadAnnotationImplementationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/BadComparableTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/BadShiftAmountTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/BigDecimalLiteralDoubleTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/BoxedPrimitiveConstructorTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CannotMockFinalClassTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ChainingConstructorIgnoresParameterTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CheckReturnValueTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ClassCanBeStaticTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ClassNameTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ClassNewInstanceTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ComparisonContractViolatedTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ComparisonOutOfRangeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CompileTimeConstantCheckerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ConstantFieldTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DeadExceptionTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DefaultCharsetTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DepAnnTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DivZeroTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ElementsCountedInLoopTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/EmptyIfStatementTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/EmptyTopLevelDeclarationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/EqualsHashCodeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/EqualsIncompatibleTypeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/EqualsNaNTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/FinallyTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ForOverrideCheckerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GetClassOnAnnotationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GetClassOnClassTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GetClassOnEnumTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/HashtableContainsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/IncompatibleModifiersCheckerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InfiniteRecursionTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InsecureCipherModeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InvalidPatternSyntaxTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/IsInstanceOfClassTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/IterableAndIteratorTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit3TestNotRunTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4SetUpNotRunTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4TearDownNotRunTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4TestNotRunTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnitAmbiguousTestClassTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffixTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MissingCasesInEnumSwitchTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MissingFailTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MissingOverrideTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MisusedWeekYearTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MockitoCastTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MockitoUsageTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ModifyingCollectionWithItselfTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MultipleTopLevelClassesTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NarrowingCompoundAssignmentTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NoAllocationCheckerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NonAtomicVolatileUpdateTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NonCanonicalStaticImportTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NonCanonicalStaticMemberImportTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NonFinalCompileTimeConstantTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NonOverridingEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NonRuntimeAnnotationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NumericEqualityTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/OperatorPrecedenceTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/OptionalEqualityTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/OverridesTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitiveTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsInvalidPlaceholderTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PrimitiveArrayPassedToVarargsMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PrivateConstructorForUtilityClassTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ProtoFieldPreconditionsCheckNotNullTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/RandomModIntegerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/RequiredModifiersCheckerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/RestrictedApiCheckerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ReturnValueIgnoredTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SelfAssignmentTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SelfComparisonTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SelfEqualityTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SelfEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SizeGreaterThanOrEqualsZeroTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/StaticAccessedFromInstanceTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/StreamToStringTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/StringBuilderInitWithCharTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/StringEqualityTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SuppressWarningsDeprecatedTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ThrowIfUncheckedKnownCheckedTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/TryFailThrowableTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/TypeParameterQualifierTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/TypeParameterUnusedInFormalsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/UnnecessaryStaticImportTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/UnnecessaryTypeArgumentTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/UnsynchronizedOverridesSynchronizedTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/UnusedAnonymousClassTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/VarCheckerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/WaitNotInLoopTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/WildcardImportTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/WrongParameterPackageTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/android/FragmentNotInstantiableTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/android/HardCodedSdCardPathTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/android/MislabeledAndroidStringTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/android/RectIntersectReturnValueIgnoredTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/collectionincompatibletype/CollectionIncompatibleTypeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/formatstring/FormatStringTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/AssistedInjectAndInjectOnConstructorsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/AssistedInjectAndInjectOnSameConstructorTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/InjectedConstructorAnnotationsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/InvalidTargetingOnScopingAnnotationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/JavaxInjectOnAbstractMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/JavaxInjectOnFinalFieldTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/MoreThanOneInjectableConstructorTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/MoreThanOneQualifierTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/MoreThanOneScopeAnnotationOnClassTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/OverlappingQualifierAndScopeAnnotationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/ScopeAnnotationOnInterfaceOrAbstractClassTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/ScopeOrQualifierAnnotationRetentionTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/dagger/EmptySetMultibindingContributionsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/dagger/PrivateConstructorForNoninstantiableModuleTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/dagger/ProvidesNullTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/dagger/UseBindsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/AssistedInjectScopingTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/AssistedParametersTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/InjectOnFinalFieldTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/OverridesGuiceInjectableMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/OverridesJavaxInjectableMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/DoubleCheckedLockingTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinderTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByLockMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByValidatorTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableCheckerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/LockMethodCheckerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/StaticGuardedByInstanceTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/SynchronizeOnNonFinalFieldTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/UnlockMethodCheckerTest.java
M	core/src/test/java/com/google/errorprone/dataflow/LocalStoreTest.java
M	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NonNullAssumptionsTest.java
M	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java
M	core/src/test/java/com/google/errorprone/fixes/AppliedFixTest.java
M	core/src/test/java/com/google/errorprone/fixes/ReplacementsTest.java
M	core/src/test/java/com/google/errorprone/fixes/SuggestedFixesTest.java
M	core/src/test/java/com/google/errorprone/matchers/AnnotationDoesNotHaveArgumentTest.java
M	core/src/test/java/com/google/errorprone/matchers/AnnotationHasArgumentWithValueTest.java
M	core/src/test/java/com/google/errorprone/matchers/AnnotationMatcherTest.java
M	core/src/test/java/com/google/errorprone/matchers/CompileTimeConstantExpressionMatcherTest.java
M	core/src/test/java/com/google/errorprone/matchers/CompilerBasedAbstractTest.java
M	core/src/test/java/com/google/errorprone/matchers/CompoundAssignmentTest.java
M	core/src/test/java/com/google/errorprone/matchers/ConstructorOfClassTest.java
M	core/src/test/java/com/google/errorprone/matchers/DescendantOfAbstractTest.java
M	core/src/test/java/com/google/errorprone/matchers/DescendantOfTransitiveTest.java
M	core/src/test/java/com/google/errorprone/matchers/DescriptionTest.java
M	core/src/test/java/com/google/errorprone/matchers/EnclosingTest.java
M	core/src/test/java/com/google/errorprone/matchers/HasIdentifierTest.java
M	core/src/test/java/com/google/errorprone/matchers/InstanceMethodTest.java
M	core/src/test/java/com/google/errorprone/matchers/MatchersTest.java
M	core/src/test/java/com/google/errorprone/matchers/MethodHasParametersTest.java
M	core/src/test/java/com/google/errorprone/matchers/MethodMatchersTest.java
M	core/src/test/java/com/google/errorprone/matchers/MethodReturnsNonNullNextTokenTest.java
M	core/src/test/java/com/google/errorprone/matchers/MethodReturnsNonNullStringTest.java
M	core/src/test/java/com/google/errorprone/matchers/MethodReturnsNonNullToStringTest.java
M	core/src/test/java/com/google/errorprone/matchers/MethodReturnsTest.java
M	core/src/test/java/com/google/errorprone/matchers/NonNullLiteralTest.java
M	core/src/test/java/com/google/errorprone/matchers/StaticMethodTest.java
M	core/src/test/java/com/google/errorprone/matchers/StringLiteralTest.java
M	core/src/test/java/com/google/errorprone/refaster/AbstractUTreeTest.java
M	core/src/test/java/com/google/errorprone/refaster/BindingsTest.java
M	core/src/test/java/com/google/errorprone/refaster/ChoiceTest.java
M	core/src/test/java/com/google/errorprone/refaster/CodeTransformerTestHelper.java
M	core/src/test/java/com/google/errorprone/refaster/CompilerBasedTest.java
M	core/src/test/java/com/google/errorprone/refaster/DescriptionBasedDiffTest.java
M	core/src/test/java/com/google/errorprone/refaster/Match.java
M	core/src/test/java/com/google/errorprone/refaster/TemplateIntegrationTest.java
M	core/src/test/java/com/google/errorprone/refaster/TemplatingTest.java
M	core/src/test/java/com/google/errorprone/refaster/UAnnotationTest.java
M	core/src/test/java/com/google/errorprone/refaster/UArrayTypeTest.java
M	core/src/test/java/com/google/errorprone/refaster/UArrayTypeTreeTest.java
M	core/src/test/java/com/google/errorprone/refaster/UAssignOpTest.java
M	core/src/test/java/com/google/errorprone/refaster/UAssignTest.java
M	core/src/test/java/com/google/errorprone/refaster/UBinaryTest.java
M	core/src/test/java/com/google/errorprone/refaster/UBlockTest.java
M	core/src/test/java/com/google/errorprone/refaster/UBreakTest.java
M	core/src/test/java/com/google/errorprone/refaster/UClassIdentTest.java
M	core/src/test/java/com/google/errorprone/refaster/UClassTypeTest.java
M	core/src/test/java/com/google/errorprone/refaster/UConditionalTest.java
M	core/src/test/java/com/google/errorprone/refaster/UContinueTest.java
M	core/src/test/java/com/google/errorprone/refaster/UDoWhileLoopTest.java
M	core/src/test/java/com/google/errorprone/refaster/UEnhancedForLoopTest.java
M	core/src/test/java/com/google/errorprone/refaster/UExpressionStatementTest.java
M	core/src/test/java/com/google/errorprone/refaster/UForAllTest.java
M	core/src/test/java/com/google/errorprone/refaster/UForLoopTest.java
M	core/src/test/java/com/google/errorprone/refaster/UFreeIdentTest.java
M	core/src/test/java/com/google/errorprone/refaster/UIfTest.java
M	core/src/test/java/com/google/errorprone/refaster/UInstanceOfTest.java
M	core/src/test/java/com/google/errorprone/refaster/UIntersectionTypeTest.java
M	core/src/test/java/com/google/errorprone/refaster/ULabeledStatementTest.java
M	core/src/test/java/com/google/errorprone/refaster/ULiteralTest.java
M	core/src/test/java/com/google/errorprone/refaster/ULocalVarIdentTest.java
M	core/src/test/java/com/google/errorprone/refaster/UMemberSelectTest.java
M	core/src/test/java/com/google/errorprone/refaster/UMethodInvocationTest.java
M	core/src/test/java/com/google/errorprone/refaster/UMethodTypeTest.java
M	core/src/test/java/com/google/errorprone/refaster/UNewClassTest.java
M	core/src/test/java/com/google/errorprone/refaster/UParensTest.java
M	core/src/test/java/com/google/errorprone/refaster/UPrimitiveTypeTest.java
M	core/src/test/java/com/google/errorprone/refaster/UPrimitiveTypeTreeTest.java
M	core/src/test/java/com/google/errorprone/refaster/URepeatedTest.java
M	core/src/test/java/com/google/errorprone/refaster/UReturnTest.java
M	core/src/test/java/com/google/errorprone/refaster/USkipTest.java
M	core/src/test/java/com/google/errorprone/refaster/UStaticIdentTest.java
M	core/src/test/java/com/google/errorprone/refaster/USynchronizedTest.java
M	core/src/test/java/com/google/errorprone/refaster/UTemplaterTest.java
M	core/src/test/java/com/google/errorprone/refaster/UThrowTest.java
M	core/src/test/java/com/google/errorprone/refaster/UTypeApplyTest.java
M	core/src/test/java/com/google/errorprone/refaster/UTypeCastTest.java
M	core/src/test/java/com/google/errorprone/refaster/UTypeParameterTest.java
M	core/src/test/java/com/google/errorprone/refaster/UTypeVarIdentTest.java
M	core/src/test/java/com/google/errorprone/refaster/UTypeVarTest.java
M	core/src/test/java/com/google/errorprone/refaster/UUnaryTest.java
M	core/src/test/java/com/google/errorprone/refaster/UUnionTypeTest.java
M	core/src/test/java/com/google/errorprone/refaster/UVariableDeclTest.java
M	core/src/test/java/com/google/errorprone/refaster/UWhileLoopTest.java
M	core/src/test/java/com/google/errorprone/refaster/UWildcardTest.java
M	core/src/test/java/com/google/errorprone/refaster/UWildcardTypeTest.java
M	core/src/test/java/com/google/errorprone/refaster/UnificationTest.java
M	core/src/test/java/com/google/errorprone/scanner/ScannerSupplierTest.java
M	core/src/test/java/com/google/errorprone/suppress/CustomSuppressionTest.java
M	core/src/test/java/com/google/errorprone/suppress/SuppressLintTest.java
M	core/src/test/java/com/google/errorprone/suppress/SuppressWarningsTest.java
M	core/src/test/java/com/google/errorprone/suppress/UnsuppressibleTest.java
M	core/src/test/java/com/google/errorprone/util/ASTHelpersTest.java
M	docgen/src/main/java/com/google/errorprone/BugPatternFileGenerator.java
M	docgen/src/main/java/com/google/errorprone/BugPatternIndexWriter.java
M	docgen/src/main/java/com/google/errorprone/BugPatternInstance.java
M	docgen/src/main/java/com/google/errorprone/DocGenProcessor.java
M	docgen/src/main/java/com/google/errorprone/DocGenTool.java
M	docgen/src/test/java/com/google/errorprone/BugPatternFileGeneratorTest.java
M	docgen/src/test/java/com/google/errorprone/BugPatternIndexWriterTest.java
M	examples/plugin/bazel/java/com/google/errorprone/sample/MyCustomCheck.java
M	examples/plugin/bazel/java/com/google/errorprone/sample/NullAnnotationProcessor.java
M	examples/plugin/gradle/sample_plugin/src/main/java/com/google/errorprone/sample/MyCustomCheck.java
M	examples/plugin/maven/sample_plugin/src/main/java/com/google/errorprone/sample/MyCustomCheck.java

commit d713b6c92cd1a8fa2c3fe5acc1b8e06e96dc6825
Author: mlourenco <mlourenco@google.com>
Date:   Tue Jul 26 01:14:30 2016 -0700

    Make @CompileTimeConstant checker unsuppressible
    
    MOE_MIGRATED_REVID=128445991

M	core/src/main/java/com/google/errorprone/bugpatterns/CompileTimeConstantChecker.java

commit abd7d107a98a581c0716b615c7e375afe267c8c8
Author: eaftan <eaftan@google.com>
Date:   Mon Jul 25 16:59:37 2016 -0700

    Don't generate hasFoo() suggestion that won't compile.
    
    If you compare the result of a getFoo() call on a proto to null,
    ProtoFieldNullComparison suggests calling hasFoo() instead.  But in proto3,
    hasFoo() methods are not generated for scalar types.  The warning is still
    correct (the result of getFoo() cannot be null), but the suggestion won't
    compile.
    
    This CL changes the suggested fix logic to first check whether a hasFoo()
    method exists before suggesting it.  If the method does not exist, it does
    not suggest a fix.
    
    MOE_MIGRATED_REVID=128416640

M	core/pom.xml
M	core/src/main/java/com/google/errorprone/bugpatterns/ProtoFieldNullComparison.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ProtoFieldNullComparisonTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/proto/Proto3Test.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/proto/proto3_test.proto

commit 664602fd9e36d6d446f488aae9426004acee1243
Author: cushon <cushon@google.com>
Date:   Mon Jul 25 15:11:21 2016 -0700

    Prepare to make SelfEquals an error
    
    MOE_MIGRATED_REVID=128404515

M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquals.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit 596e701bf46cda55f1069e13926fa281e73c142f
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Jul 22 14:22:33 2016 -0700

    Don't suggest Long.hashCode in BoxedPrimitiveConstructor
    
    It's only available in JDK 8.
    
    MOE_MIGRATED_REVID=128210248

M	core/src/main/java/com/google/errorprone/bugpatterns/BoxedPrimitiveConstructor.java
M	core/src/test/java/com/google/errorprone/bugpatterns/BoxedPrimitiveConstructorTest.java

commit f79eb2549a50041a39bee9e6c1e625a06f53bf69
Author: cushon <cushon@google.com>
Date:   Fri Jul 22 14:05:35 2016 -0700

    Fix a crash in SelfEquals
    
    Fixes #434
    
    MOE_MIGRATED_REVID=128209345

M	core/src/main/java/com/google/errorprone/bugpatterns/GuavaSelfEquals.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuavaSelfEqualsTest.java

commit 52baf7b87d5e104940266da1a63e38e956c0c183
Author: cushon <cushon@google.com>
Date:   Fri Jul 22 13:12:19 2016 -0700

    Put the caret for unused import suggestions on the first unused import
    
    MOE_MIGRATED_REVID=128203883

M	core/src/main/java/com/google/errorprone/bugpatterns/RemoveUnusedImports.java
M	core/src/test/java/com/google/errorprone/bugpatterns/RemoveUnusedImportsTest.java

commit 1106c0770771fd661b212b42a98daf1ce72bf280
Author: yulissa <yulissa@google.com>
Date:   Sun Jul 10 11:53:32 2016 -0700

    Create ThrowsUncheckedException check
    
    MOE_MIGRATED_REVID=128196414

A	core/src/main/java/com/google/errorprone/bugpatterns/ThrowsUncheckedException.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/ThrowsUncheckedExceptionTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ThrowsUncheckedExceptionNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ThrowsUncheckedExceptionPositiveCases.java

commit 78cd46234b8ec71f453401bd64e3b6f01f460633
Author: dawasser <dawasser@google.com>
Date:   Thu Jul 21 18:52:49 2016 -0700

    Add FormatString, FormatArg, and FormatMethod annotations and checker
    
    MOE_MIGRATED_REVID=128131544

A	annotations/src/main/java/com/google/errorprone/annotations/FormatMethod.java
A	annotations/src/main/java/com/google/errorprone/annotations/FormatString.java
A	core/src/main/java/com/google/errorprone/bugpatterns/formatstring/FormatStringAnnotationChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/formatstring/FormatStringValidation.java
A	core/src/main/java/com/google/errorprone/bugpatterns/formatstring/StrictFormatStringValidation.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/formatstring/FormatStringAnnotationCheckerTest.java
A	docs/bugpattern/FormatStringAnnotation.md

commit bb0f8339e66b6fe383011130079a572598626265
Author: cushon <cushon@google.com>
Date:   Thu Jul 21 11:42:41 2016 -0700

    Change getEndPosition signature to accept Trees
    
    MOE_MIGRATED_REVID=128086178

M	core/src/main/java/com/google/errorprone/VisitorState.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ClassNewInstance.java
M	core/src/main/java/com/google/errorprone/bugpatterns/DefaultCharset.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GetClassOnAnnotation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GetClassOnEnum.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MissingCasesInEnumSwitch.java
M	core/src/main/java/com/google/errorprone/bugpatterns/UnnecessaryTypeArgument.java

commit 6a025bf576238079c5355973ee67927fda2260aa
Author: cushon <cushon@google.com>
Date:   Wed Jul 20 17:27:52 2016 -0700

    Fix some nits in RefasterRuleCompiler
    
    MOE_MIGRATED_REVID=128008920

M	core/src/main/java/com/google/errorprone/BaseErrorProneCompiler.java
M	core/src/main/java/com/google/errorprone/refaster/RefasterRuleCompiler.java
M	core/src/main/java/com/google/errorprone/refaster/RefasterRuleCompilerAnalyzer.java

commit b9e27db92ceee0b437f2562695ba2bd18cff02eb
Author: lowasser <lowasser@google.com>
Date:   Tue Jul 19 14:29:42 2016 -0700

    Add a command line method to build a Refaster analyzer.
    
    MOE_MIGRATED_REVID=127874283

M	core/src/main/java/com/google/errorprone/BaseErrorProneCompiler.java
A	core/src/main/java/com/google/errorprone/refaster/RefasterRuleCompiler.java
A	core/src/main/java/com/google/errorprone/refaster/RefasterRuleCompilerAnalyzer.java

commit 1f075a295639e8b920c8f139f22848c35c7fb6cc
Author: arielb <arielb@google.com>
Date:   Tue Jul 19 10:07:09 2016 -0700

    Add a default boilerplate reason for DoNotMock.
    
    MOE_MIGRATED_REVID=127843240

M	annotations/src/main/java/com/google/errorprone/annotations/DoNotMock.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArraysAsListPrimitiveArray.java
M	core/src/main/java/com/google/errorprone/bugpatterns/IdentityBinaryExpression.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit 3e13db01002cf41329207edcb494892af186a746
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Mon Jul 18 19:18:10 2016 -0700

    Update gradle example to latest version

M	examples/gradle/build.gradle

commit 818d666ac7168f729099c02cc1fe3814d3594fe3
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Jul 18 13:45:30 2016 -0700

    Reflect Error Prone release 2.0.11 in examples

M	examples/ant/ant_fork/build.xml
M	examples/gradle/build.gradle
M	examples/maven/pom.xml
M	examples/plugin/bazel/WORKSPACE
M	examples/plugin/gradle/build.gradle
M	examples/plugin/gradle/sample_plugin/build.gradle
M	examples/plugin/maven/hello/pom.xml
M	examples/plugin/maven/sample_plugin/pom.xml

commit c6339c8bbf8b72188a18991e4c0613405a53e9d0
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Jul 18 13:30:23 2016 -0700

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	annotations/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit 68c8fa06a03443a2891e71c9bc55d9baaca67294
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Jul 18 13:30:01 2016 -0700

    [maven-release-plugin] prepare release v2.0.11

M	annotation/pom.xml
M	annotations/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit f21bf7c4ec95325ac08b4cf30f5448b8086f5db9
Author: eaftan <eaftan@google.com>
Date:   Mon Jul 18 12:52:26 2016 -0700

    Fix issue with Windows paths to source files.
    
    Fixes #432
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127748042

M	core/src/main/java/com/google/errorprone/bugpatterns/PackageLocation.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PackageLocationTest.java

commit cd53809565a6d306d67ce5f9089b56ecd61cf376
Author: cushon <cushon@google.com>
Date:   Mon Jul 18 12:46:08 2016 -0700

    Handle more kinds of members in PrivateConstructorForUtilityClass
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127747392

M	core/src/main/java/com/google/errorprone/bugpatterns/PrivateConstructorForUtilityClass.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PrivateConstructorForUtilityClassTest.java

commit 570675a7dad44007e08ab5fa201a4a0848d9f421
Author: cushon <cushon@google.com>
Date:   Mon Jul 18 11:55:49 2016 -0700

    Move PreconditionsExpensiveString to Klippy
    
    The check looks for unnecessary String formatting in Preconditions:
    
    -checkNotNull(request, String.format("request for if %s must not be null"));
    +checkNotNull(request, "request for if %s must not be null");
    
    Since this is a performance rather than a correctness issue it doesn't belong
    in Error Prone.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127742135

D	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsExpensiveString.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
D	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsExpensiveStringTest.java

commit 63eaaa559ce2df484187cd65f7dc5c13f4769fea
Author: cushon <cushon@google.com>
Date:   Fri Jul 15 16:25:37 2016 -0700

    Detect useless boolean expressions
    
    such as `a && a` and `a || a`.
    
    Fixes #252
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127591241

A	core/src/main/java/com/google/errorprone/bugpatterns/IdentityBinaryExpression.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/IdentityBinaryExpressionTest.java

commit 03495e209823c554a2733d5a37764ab310cb3ddb
Author: Ian Rogers <irogers@irogers.mtv.corp.google.com>
Date:   Fri Jul 15 09:11:30 2016 -0700

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	annotations/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit 18a4614df3113a82c91cc32f252a19fd4ffdb91e
Author: Ian Rogers <irogers@irogers.mtv.corp.google.com>
Date:   Fri Jul 15 09:09:40 2016 -0700

    [maven-release-plugin] prepare release v2.0.10

M	annotation/pom.xml
M	annotations/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit bcaa0f6de70571007467dd6763c93beae9513550
Author: cushon <cushon@google.com>
Date:   Wed Jul 13 16:46:55 2016 -0700

    Make Matchers.isSameType compare erased types
    
    MOE_MIGRATED_REVID=127375534

D	core/src/main/java/com/google/errorprone/matchers/IsSameErasedType.java
M	core/src/main/java/com/google/errorprone/matchers/IsSameType.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java

commit a0e6ba32587824f0cd0e7b196a9dc760acff0fae
Author: cushon <cushon@google.com>
Date:   Wed Jul 13 14:57:09 2016 -0700

    Enable ArraysAsListPrimitiveArray
    
    MOE_MIGRATED_REVID=127363400

M	core/src/main/java/com/google/errorprone/bugpatterns/ArraysAsListPrimitiveArray.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit 2df6a22a9db83a06edd9ebf7030f0ae4009c1290
Author: cushon <cushon@google.com>
Date:   Wed Jul 13 12:19:07 2016 -0700

    Fix a NullPointerException in ReferenceEquality
    
    Symbol#members() returns null for type parameters.
    
    Fixes #423
    
    MOE_MIGRATED_REVID=127345218

M	core/src/main/java/com/google/errorprone/bugpatterns/ReferenceEquality.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ReferenceEqualityTest.java

commit b78d7f336afe2b9b3c0c306d69b0ae619f4875bc
Author: cushon <cushon@google.com>
Date:   Wed Jul 13 12:15:06 2016 -0700

    Fix type annotation handling in Nullable{Constructor,Primitive,Void}
    
    Previously the checks matched on annotations and then assumed the
    annotated element was a parent. That assumption breaks for type
    annotations. Instead, the checks now match on the annotated elements and
    descend into the annotation
    lists.
    
    Fixes #418
    
    MOE_MIGRATED_REVID=127344819

M	core/src/main/java/com/google/errorprone/bugpatterns/NullableConstructor.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NullablePrimitive.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NullableVoid.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NullableConstructorTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NullablePrimitiveTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NullableVoidTest.java

commit 6df243592a5392849e3dd792dbda2c3efe41b148
Author: cushon <cushon@google.com>
Date:   Wed Jul 13 12:09:49 2016 -0700

    Fix a crash in GuardedByBinder
    
    Fixes #426
    
    MOE_MIGRATED_REVID=127344304

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinder.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByCheckerTest.java

commit 8b49eed1f9dcf2d2e37651294094d7f2d2f29a6e
Author: cushon <cushon@google.com>
Date:   Sun Feb 7 18:55:47 2016 -0800

    Make InfiniteRecursion an error
    
    MOE_MIGRATED_REVID=127269635

M	core/src/main/java/com/google/errorprone/bugpatterns/InfiniteRecursion.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit b41d11442eb441cdcbe6bb54220af204c63a5301
Author: cushon <cushon@google.com>
Date:   Tue Jul 12 15:47:40 2016 -0700

    Add a test for PreconditionsExpensiveString
    
    and update the check to include a suggested fix.
    
    MOE_MIGRATED_REVID=127252263

M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsExpensiveString.java
A	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsExpensiveStringTest.java

commit 865a6b8789993b8235b1f91d27b64b600b08e39f
Author: cushon <cushon@google.com>
Date:   Tue Jul 12 15:47:26 2016 -0700

    Add a test for ArraysAsListPrimitiveArray
    
    and then fix the check so the test passes.
    
    MOE_MIGRATED_REVID=127252244

M	core/src/main/java/com/google/errorprone/bugpatterns/ArraysAsListPrimitiveArray.java
A	core/src/test/java/com/google/errorprone/bugpatterns/ArraysAsListPrimitiveArrayTest.java

commit 0d11c44aac58d9f8aed18cdf5db3a4f9c2147ef3
Author: eaftan <eaftan@google.com>
Date:   Tue Jul 12 12:28:21 2016 -0700

    Change Error Prone and Refaster import ordering logic
    
    to match new rules (see: google/styleguide#160).
    
    MOE_MIGRATED_REVID=127228892

M	core/src/main/java/com/google/errorprone/apply/ImportStatements.java
M	core/src/test/java/com/google/errorprone/apply/ImportStatementsTest.java
M	core/src/test/java/com/google/errorprone/refaster/DescriptionBasedDiffTest.java

commit 749671e642236bcca1619b57a0b2e56b9b0eacae
Author: cushon <cushon@google.com>
Date:   Tue Jul 12 11:52:39 2016 -0700

    Delete type matchers that take Types or Trees
    
    Matches should not hold on to state from the current compilation.
    
    MOE_MIGRATED_REVID=127225038

M	core/src/main/java/com/google/errorprone/bugpatterns/ComparisonOutOfRange.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StringBuilderInitWithChar.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/AssistedParameters.java
M	core/src/main/java/com/google/errorprone/matchers/AbstractTypeMatcher.java
M	core/src/main/java/com/google/errorprone/matchers/IsCastableTo.java
M	core/src/main/java/com/google/errorprone/matchers/IsSameType.java
M	core/src/main/java/com/google/errorprone/matchers/IsSubtypeOf.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/suppliers/Suppliers.java
M	core/src/test/java/com/google/errorprone/matchers/MethodReturnsTest.java

commit 6fa3d89ee4cfe35239af9f230badd85b5cbc20bb
Author: cushon <cushon@google.com>
Date:   Tue Jul 12 11:28:57 2016 -0700

    Add a test for ProtoStringFieldReferenceEquality
    
    and then fix the check so the test passes, since it was broken by
    b1d78673f73af9ee158534ff5c406997993f8e98.  AbstractReferenceEquality
    expects the predicate to match both sides of the comparison, but in this
    case we want to match if either side is a proto string field.
    
    MOE_MIGRATED_REVID=127222107

M	core/src/main/java/com/google/errorprone/bugpatterns/ProtoStringFieldReferenceEquality.java
A	core/src/test/java/com/google/errorprone/bugpatterns/ProtoStringFieldReferenceEqualityTest.java

commit 59442c6f965de45bcd6603ebdc05db44826847fb
Author: cushon <cushon@google.com>
Date:   Tue Jul 12 11:05:43 2016 -0700

    Enable DefaultCharset as a warning
    
    MOE_MIGRATED_REVID=127219060

M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit d5df239ec7fc7d858c7b1d985122efe5ffb42609
Author: yanx <yanx@google.com>
Date:   Mon Jul 11 19:36:01 2016 -0700

    Add an IsSameErasedType matcher
    
    MOE_MIGRATED_REVID=127156657

A	core/src/main/java/com/google/errorprone/matchers/IsSameErasedType.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java

commit 203546fa72dee4b1394616d88f9c142b3f675918
Author: cushon <cushon@google.com>
Date:   Mon Jul 11 17:59:38 2016 -0700

    Delete under-used matchers
    
    MOE_MIGRATED_REVID=127150597

D	core/src/main/java/com/google/errorprone/matchers/Constructor.java
D	core/src/main/java/com/google/errorprone/matchers/ExpressionMethodSelect.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
D	core/src/main/java/com/google/errorprone/matchers/NewInstanceAnonymousInnerClass.java
M	core/src/main/java/com/google/errorprone/suppliers/Suppliers.java

commit 16a3e3cb937002d5227d7156416f0ed67cfcae2a
Author: cushon <cushon@google.com>
Date:   Mon Jul 11 17:22:13 2016 -0700

    Create an ErrorProneJavaCompiler that doesn't include checks
    
    MOE_MIGRATED_REVID=127147366

A	core/src/main/java/com/google/errorprone/BaseErrorProneJavaCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorProneJavaCompiler.java

commit fa00e73e1a308abef1149c8b08bdfdae7044aba8
Author: eaftan <eaftan@google.com>
Date:   Mon Jul 11 15:27:10 2016 -0700

    Make StaticAccessedFromInstance check respect Eclipse's name for the same check
    in @SuppressWarnings.
    
    MOE_MIGRATED_REVID=127135275

M	core/src/main/java/com/google/errorprone/bugpatterns/StaticAccessedFromInstance.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/StaticAccessedFromInstanceNegativeCases.java

commit 6d7f2ce6e79a579fd340a36f1f06f8a2829fd4e7
Author: cushon <cushon@google.com>
Date:   Mon Jul 11 14:05:06 2016 -0700

    Discourage use of the default Charset
    
    RELNOTES: New check to discourage use of the default Charset
    
    MOE_MIGRATED_REVID=127125684

M	core/src/main/java/com/google/errorprone/VisitorState.java
A	core/src/main/java/com/google/errorprone/bugpatterns/DefaultCharset.java
M	core/src/main/java/com/google/errorprone/matchers/method/ConstructorClassMatcherImpl.java
M	core/src/main/java/com/google/errorprone/matchers/method/MethodMatchers.java
M	core/src/main/java/com/google/errorprone/matchers/method/MethodNameMatcherImpl.java
M	core/src/main/java/com/google/errorprone/matchers/method/ParameterMatcherImpl.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
M	core/src/main/java/com/google/errorprone/suppliers/Suppliers.java
M	core/src/test/java/com/google/errorprone/BugCheckerRefactoringTestHelper.java
A	core/src/test/java/com/google/errorprone/bugpatterns/DefaultCharsetTest.java
A	docs/bugpattern/DefaultCharset.md

commit 91ec15dde5f6e3fcfcd1d3642118bb8dc0e1f938
Author: cushon <cushon@google.com>
Date:   Mon Jul 11 09:43:02 2016 -0700

    Fix InfiniteRecursion's handling of abstract methods
    
    MOE_MIGRATED_REVID=127095792

M	core/src/main/java/com/google/errorprone/bugpatterns/InfiniteRecursion.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InfiniteRecursionTest.java

commit d1084d8cb0a8c067cbd47bf3d37f78d196f354d2
Author: bhagwani <bhagwani@google.com>
Date:   Sat Jul 9 21:47:30 2016 -0700

    Enable SelfEquals as a WARNING
    
    MOE_MIGRATED_REVID=127011932

M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquals.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit 533c4513b6200071c7fc864e250f0e9202a67c67
Author: bhagwani <bhagwani@google.com>
Date:   Sat Jul 9 20:12:22 2016 -0700

    Enable SelfComparison as an ERROR
    
    MOE_MIGRATED_REVID=127009624

M	core/src/main/java/com/google/errorprone/bugpatterns/SelfComparison.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit a5d598e4c4142d181c7ea111650a8d10d7a72071
Author: arielb <arielb@google.com>
Date:   Fri Jul 8 14:46:39 2016 -0700

    Make @DoNotMock inherited
    
    MOE_MIGRATED_REVID=126949888

M	annotations/src/main/java/com/google/errorprone/annotations/DoNotMock.java

commit b79eb703d756b3b0c99295036294c2fa9fb295e0
Author: cushon <cushon@google.com>
Date:   Fri Jul 8 14:17:46 2016 -0700

    Add a bugpattern to detect infinite recursion
    
    Fixes #205
    
    RELNOTES: New bugpattern to detect infinite recursion
    
    MOE_MIGRATED_REVID=126946849

A	core/src/main/java/com/google/errorprone/bugpatterns/InfiniteRecursion.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/InfiniteRecursionTest.java
A	docs/bugpattern/InfiniteRecursion.md

commit 4975edb84b12dca618c1f981c1e98f507f2a5fad
Author: bhagwani <bhagwani@google.com>
Date:   Thu Jul 7 19:55:18 2016 -0700

    Enable SelfComparison check as WARNING
    
    MOE_MIGRATED_REVID=126874498

M	core/src/main/java/com/google/errorprone/bugpatterns/SelfComparison.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit 6da4640b9b978583547eb2f973e127a40558863c
Author: gak <gak@google.com>
Date:   Fri Jul 1 13:57:08 2016 -0700

    Update UseBinds to handle multibinding methods
    
    MOE_MIGRATED_REVID=126443695

M	core/pom.xml
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/dagger/DaggerAnnotations.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/dagger/UseBinds.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/dagger/UseBindsTest.java

commit 7fc42d6f103abd0f9febcb43b610ce653f5ce1ab
Author: arielb <arielb@google.com>
Date:   Wed Jun 29 16:26:13 2016 -0700

    Introducing DoNotMock
    
    MOE_MIGRATED_REVID=126245833

A	annotations/src/main/java/com/google/errorprone/annotations/DoNotMock.java

commit f4ab2da32f2089a7ab575d5f91dc3b8e060a4040
Author: cushon <cushon@google.com>
Date:   Wed Jun 29 13:53:22 2016 -0700

    Fix hasAnnotationOnAnyOverriddenMethod to handle missing annotation types
    
    MOE_MIGRATED_REVID=126229029

M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4SetUpNotRunTest.java
A	examples/plugin/bazel/java/com/google/errorprone/sample/NullAnnotationProcessor.java

commit 633c5a5a037ae293ad16ca9122c9619488f07bcc
Author: cushon <cushon@google.com>
Date:   Tue Jun 28 20:23:40 2016 -0700

    Improve ReferenceEquality
    
    Check for transitive implementations of equals properly, and don't use
    reference equality to compare types.
    
    MOE_MIGRATED_REVID=126151783

M	core/src/main/java/com/google/errorprone/bugpatterns/ReferenceEquality.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ReferenceEqualityTest.java

commit e41729a145404a805426e3c8e08749b78e8592ae
Author: cushon <cushon@google.com>
Date:   Mon Jun 27 11:40:58 2016 -0700

    Add an operator precedence check
    
    Fixes #34
    
    MOE_MIGRATED_REVID=125979949

A	core/src/main/java/com/google/errorprone/bugpatterns/OperatorPrecedence.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/OperatorPrecedenceTest.java
A	docs/bugpattern/OperatorPrecedence.md

commit 2a0843f4ba46926685106390e8ddfb03e0540de7
Author: cushon <cushon@google.com>
Date:   Sun Jun 26 14:00:58 2016 -0700

    IllegalArgumentException is not a checked exception
    
    MOE_MIGRATED_REVID=125908342

M	docs/bugpattern/ClassNewInstance.md

commit e7074591d45e19ae4d5c6515c2aff0802202918f
Author: eaftan <eaftan@google.com>
Date:   Fri Jun 24 16:59:15 2016 -0700

    Support android.annotation.SuppressLint as a suppression mechanism.
    
    RELNOTES: Error Prone now supports Android's @SuppressLint.
    
    MOE_MIGRATED_REVID=125831283

M	core/src/main/java/com/google/errorprone/SuppressionHelper.java
A	core/src/test/java/com/google/errorprone/suppress/SuppressLintTest.java
A	core/src/test/java/com/google/errorprone/suppress/testdata/SuppressLintNegativeCases.java

commit 77d27088e3bb6a28dc2d425e94233d8e931f6bb4
Author: xtof <xtof@google.com>
Date:   Fri Jun 24 16:28:07 2016 -0700

    Allow multiple insertions at the same insertion point.
    
    A recent change introduced a check to disallow multiple, overlapping
    Replacements.  This check also disallowed multiple replacements of the
    same empty range.  Empty ranges represent insertions, and as such this
    disallowed multiple insertions at the same insertion point. This change
    exempts such ranges from the check, since multiple insertions at the
    same point legitimately occur, for instance when multiple import
    statements are inserted at the same insertion point. Multiple insertions
    at the same insertion point are coalesced into a single empty-range
    Replacement.
    
    MOE_MIGRATED_REVID=125828747

M	core/src/main/java/com/google/errorprone/fixes/Replacements.java
M	core/src/test/java/com/google/errorprone/fixes/ReplacementsTest.java

commit a6ad08052b3baeefe79e350e56454a3a1724dde2
Author: gak <gak@google.com>
Date:   Fri Jun 24 16:08:35 2016 -0700

    Fix a bad classname.
    
    MOE_MIGRATED_REVID=125826949

M	core/src/main/java/com/google/errorprone/bugpatterns/inject/dagger/DaggerAnnotations.java

commit 8eef14c1997d7ae3bb56fb29c38a8e99ae6cb9a0
Author: cushon <cushon@google.com>
Date:   Fri Jun 24 14:41:00 2016 -0700

    Add a test for JUnitAmbiguousTestClassTest
    
    MOE_MIGRATED_REVID=125818292

M	core/src/main/java/com/google/errorprone/bugpatterns/JUnitAmbiguousTestClass.java
A	core/src/test/java/com/google/errorprone/bugpatterns/JUnitAmbiguousTestClassTest.java
A	docs/bugpattern/JUnitAmbiguousTestClass.md

commit f50c93f0f3f2795d7510f054c2fe0efaee159f61
Author: eaftan <eaftan@google.com>
Date:   Fri Jun 24 12:54:25 2016 -0700

    Update package statements for testdata files to match their paths.
    
    MOE_MIGRATED_REVID=125807828

M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneJavaCompilerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/android/testdata/FragmentNotInstantiableNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/android/testdata/FragmentNotInstantiablePositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/android/testdata/HardCodedSdCardPathNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/android/testdata/HardCodedSdCardPathPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/android/testdata/RectIntersectReturnValueIgnoredNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/android/testdata/RectIntersectReturnValueIgnoredPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/collectionincompatibletype/testdata/CollectionIncompatibleTypeClassCast.java
M	core/src/test/java/com/google/errorprone/bugpatterns/collectionincompatibletype/testdata/CollectionIncompatibleTypeNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/collectionincompatibletype/testdata/CollectionIncompatibleTypeOutOfBounds.java
M	core/src/test/java/com/google/errorprone/bugpatterns/collectionincompatibletype/testdata/CollectionIncompatibleTypePositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayEqualsNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayEqualsNegativeCases2.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayEqualsPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayEqualsPositiveCases2.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayHashCodeNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayHashCodeNegativeCases2.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayHashCodePositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayHashCodePositiveCases2.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayStringConcatenationNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayStringConcatenationPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayToStringCompoundAssignmentNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayToStringCompoundAssignmentPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayToStringNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayToStringPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/AssertFalseNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/AssertFalsePositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/AsyncFunctionReturnsNullNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/AsyncFunctionReturnsNullPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/BadComparableNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/BadComparablePositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/BadShiftAmountNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/BadShiftAmountPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ChainingConstructorIgnoresParameterNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ChainingConstructorIgnoresParameterPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/CheckReturnValueNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/CheckReturnValuePositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ClassCanBeStaticNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ClassCanBeStaticPositiveCase1.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ClassCanBeStaticPositiveCase2.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ClassCanBeStaticPositiveCase3.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ComparisonOutOfRangeNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ComparisonOutOfRangePositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/DeadExceptionNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/DeadExceptionPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/DeadExceptionTestingNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/DepAnnNegativeCase1.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/DepAnnNegativeCase2.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/DepAnnPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/DivZeroNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/DivZeroPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ElementsCountedInLoopNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ElementsCountedInLoopPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/EmptyIfStatementNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/EqualsIncompatibleTypeNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/EqualsIncompatibleTypePositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/EqualsNaNNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/EqualsNaNPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/FinallyNegativeCase1.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/FinallyNegativeCase2.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/FinallyPositiveCase1.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/FinallyPositiveCase2.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/GuavaSelfEqualsNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/GuavaSelfEqualsPositiveCase.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InsecureCipherModeNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InsecureCipherModePositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InvalidPatternSyntaxNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InvalidPatternSyntaxPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit3TestNotRunNegativeCase1.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit3TestNotRunNegativeCase2.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit3TestNotRunNegativeCase3.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit3TestNotRunNegativeCase4.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit3TestNotRunNegativeCase5.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit3TestNotRunPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4SetUpNotRunNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4SetUpNotRunPositiveCaseCustomBefore.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4SetUpNotRunPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4TearDownNotRunNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4TearDownNotRunPositiveCaseCustomAfter.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4TearDownNotRunPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4TestNotRunBaseClass.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4TestNotRunNegativeCase1.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4TestNotRunNegativeCase2.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4TestNotRunNegativeCase3.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4TestNotRunNegativeCase4.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4TestNotRunNegativeCase5.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4TestNotRunPositiveCase1.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4TestNotRunPositiveCase2.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/LongLiteralLowerCaseSuffixNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/LongLiteralLowerCaseSuffixPositiveCase1.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/LongLiteralLowerCaseSuffixPositiveCase2.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/MissingFailNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/MissingFailNegativeCases2.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/MissingFailPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/MissingFailPositiveCases2.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/MissingFailPositiveCases3.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/MisusedWeekYearNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/MisusedWeekYearPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/MisusedWeekYearPositiveCases2.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ModifyingCollectionWithItselfNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ModifyingCollectionWithItselfPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/NoAllocationCheckerNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/NoAllocationCheckerPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/NonAtomicVolatileUpdateNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/NonAtomicVolatileUpdatePositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/NonRuntimeAnnotationNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/NonRuntimeAnnotationPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/NullablePrimitiveNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/NullablePrimitivePositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/NumericEqualityNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/NumericEqualityPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/OrderingFromPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/OverridesNegativeCase1.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/OverridesNegativeCase2.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/OverridesNegativeCase3.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/OverridesPositiveCase1.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/OverridesPositiveCase2.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/OverridesPositiveCase3.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/OverridesPositiveCase4.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/OverridesPositiveCase5.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsCheckNotNullNegativeCase1.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsCheckNotNullNegativeCase2.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsCheckNotNullPositiveCase1.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsCheckNotNullPositiveCase2.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsCheckNotNullPositiveCase3.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsCheckNotNullPrimitiveNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsCheckNotNullPrimitivePositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsExpensiveStringNegativeCase1.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsExpensiveStringNegativeCase2.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsExpensiveStringPositiveCase1.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsInvalidPlaceholderNegativeCase1.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsInvalidPlaceholderPositiveCase1.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/PrimitiveArrayPassedToVarargsMethodNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/PrimitiveArrayPassedToVarargsMethodPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ProtoFieldNullComparisonNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ProtoFieldNullComparisonPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ProtoFieldPreconditionsCheckNotNullNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ProtoFieldPreconditionsCheckNotNullPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ReturnValueIgnoredNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ReturnValueIgnoredPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfAssignmentNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfAssignmentPositiveCases1.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfAssignmentPositiveCases2.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfComparisonNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfComparisonPositiveCase.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfEqualityNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfEqualityPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfEqualsNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfEqualsPositiveCase.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SizeGreaterThanOrEqualsZeroNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SizeGreaterThanOrEqualsZeroPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/StaticAccessedFromInstanceNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/StaticAccessedFromInstancePositiveCase1.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/StaticAccessedFromInstancePositiveCase2.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/StringBuilderInitWithCharNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/StringBuilderInitWithCharPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/StringEqualityNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/StringEqualityPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SuppressWarningsDeprecatedNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SuppressWarningsDeprecatedPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ThrowIfUncheckedKnownCheckedTestNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ThrowIfUncheckedKnownCheckedTestPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/TryFailThrowableNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/TryFailThrowablePositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/WrongParameterPackageNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/WrongParameterPackagePositiveCases.java
M	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/testdata/NullnessPropagationTransferCases1.java
M	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/testdata/NullnessPropagationTransferCases2.java
M	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/testdata/NullnessPropagationTransferCases3.java
M	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/testdata/NullnessPropagationTransferCases4.java
M	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/testdata/NullnessPropagationTransferCases5.java
M	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/testdata/NullnessPropagationTransferCases6.java
M	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/testdata/NullnessPropagationTransferCases7.java
M	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/testdata/NullnessPropagationTransferCases8.java
M	core/src/test/java/com/google/errorprone/suppress/testdata/SuppressWarningsNegativeCases.java
M	core/src/test/java/com/google/errorprone/suppress/testdata/UnsuppressiblePositiveCases.java
M	core/src/test/java/com/google/errorprone/testdata/CommandLineFlagTestFile.java
M	core/src/test/java/com/google/errorprone/testdata/ExtendedMultipleTopLevelClassesWithErrors.java
M	core/src/test/java/com/google/errorprone/testdata/ExtendedMultipleTopLevelClassesWithNoErrors.java
M	core/src/test/java/com/google/errorprone/testdata/FlowConstants.java
M	core/src/test/java/com/google/errorprone/testdata/FlowSub.java
M	core/src/test/java/com/google/errorprone/testdata/FlowSuper.java
M	core/src/test/java/com/google/errorprone/testdata/MultipleTopLevelClassesWithErrors.java
M	core/src/test/java/com/google/errorprone/testdata/MultipleTopLevelClassesWithNoErrors.java
M	core/src/test/java/com/google/errorprone/testdata/UsesAnnotationProcessor.java

commit edfe4810baefbcb1f2ec3ca930024572826ec0f4
Author: gak <gak@google.com>
Date:   Fri Jun 24 11:11:09 2016 -0700

    Fix an issue in which classes with abstract binding methods
    
    were being given a private constructor even if they had one declared.
    
    MOE_MIGRATED_REVID=125797551

M	core/src/main/java/com/google/errorprone/bugpatterns/inject/dagger/PrivateConstructorForNoninstantiableModule.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/dagger/PrivateConstructorForNoninstantiableModuleTest.java

commit 69ef9adc7850446b55824c2de4ea20207097d6e4
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Jun 24 12:27:16 2016 -0700

    Clean up Bazel plugin example (#421)

M	.gitignore
M	examples/plugin/bazel/java/com/google/errorprone/sample/BUILD
D	examples/plugin/bazel/java/com/google/errorprone/sample/NullAnnotationProcessor.java

commit 2c38b84ad7418e91ccdbd012731ca622ce9aa12e
Author: Thomas Broyer <t.broyer@ltgt.net>
Date:   Fri Jun 24 18:28:35 2016 +0200

    Add Gradle example of plugin check (#419)

A	examples/plugin/gradle/build.gradle
A	examples/plugin/gradle/hello/build.gradle
A	examples/plugin/gradle/hello/src/main/java/com/google/errorprone/sample/Hello.java
A	examples/plugin/gradle/sample_plugin/build.gradle
A	examples/plugin/gradle/sample_plugin/src/main/java/com/google/errorprone/sample/MyCustomCheck.java
A	examples/plugin/gradle/settings.gradle

commit 0799c209ea3cc168ed3459e827139b0e2766f8ef
Author: cushon <cushon@google.com>
Date:   Thu Jun 23 18:48:07 2016 -0700

    Check for compilation errors in BugCheckerRefactoringTestHelper
    
    MOE_MIGRATED_REVID=125743535

M	core/src/test/java/com/google/errorprone/BugCheckerRefactoringTestHelper.java
M	core/src/test/java/com/google/errorprone/BugCheckerRefactoringTestHelperTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ClassNewInstanceTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/WildcardImportTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/dagger/EmptySetMultibindingContributionsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/dagger/PrivateConstructorForNoninstantiableModuleTest.java

commit b97df850a2888dcff03ee910ab33e8d0b6e214b9
Author: cushon <cushon@google.com>
Date:   Thu Jun 23 15:01:56 2016 -0700

    Allow custom error handling in ErrorProneScanner
    
    MOE_MIGRATED_REVID=125722533

M	core/src/main/java/com/google/errorprone/scanner/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/scanner/InstanceReturningScannerSupplierImpl.java
M	core/src/main/java/com/google/errorprone/scanner/Scanner.java
M	core/src/main/java/com/google/errorprone/scanner/ScannerSupplier.java
M	core/src/main/java/com/google/errorprone/scanner/ScannerSupplierImpl.java

commit cc89864f4a812586275d6f4357222f905183204e
Author: gak <gak@google.com>
Date:   Thu Jun 23 11:56:33 2016 -0700

    Suggest private constructors for Dagger modules that will not be
    instantiated.
    
    MOE_MIGRATED_REVID=125701965

A	core/src/main/java/com/google/errorprone/bugpatterns/inject/dagger/DaggerAnnotations.java
A	core/src/main/java/com/google/errorprone/bugpatterns/inject/dagger/PrivateConstructorForNoninstantiableModule.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/dagger/PrivateConstructorForNoninstantiableModuleTest.java

commit 697ec266fc589262fd981cf08c8c33e001a0081f
Author: arielb <arielb@google.com>
Date:   Wed Jun 22 12:39:37 2016 -0700

    Return a reasonable symbol for parameterized types.
    
    MOE_MIGRATED_REVID=125596209

M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java

commit fcd9d84013c53cfa25cba70d4c0913259a5ea63d
Author: gak <gak@google.com>
Date:   Wed Jun 22 10:39:22 2016 -0700

    Suggest that Dagger 2 @Provides methods that contribute empty sets to
    multibindings be replaced by @Multibinds methods.
    
    MOE_MIGRATED_REVID=125581439

A	core/src/main/java/com/google/errorprone/bugpatterns/inject/dagger/EmptySetMultibindingContributions.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/dagger/EmptySetMultibindingContributionsTest.java

commit b5219f0e2fa371a46884aae50134a7c2d36e0fa9
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Thu Jun 23 16:20:41 2016 -0700

    Add examples of plugin checks (#416)
    
    * Add examples of plugin checks
    
    * Review feedback
    
    * caveat about build order
    * maven-compiler-plugin 3.5.1
    * fix scope of plugin deps
    
    * Move to sample package
    
    * use https, add SupportedAnnotationTypes

A	examples/plugin/bazel/WORKSPACE
A	examples/plugin/bazel/java/com/google/errorprone/sample/BUILD
A	examples/plugin/bazel/java/com/google/errorprone/sample/Hello.java
A	examples/plugin/bazel/java/com/google/errorprone/sample/MyCustomCheck.java
A	examples/plugin/bazel/java/com/google/errorprone/sample/NullAnnotationProcessor.java
A	examples/plugin/bazel/third_party/java/auto_service/BUILD
A	examples/plugin/maven/hello/pom.xml
A	examples/plugin/maven/hello/src/main/java/com/google/errorprone/sample/Hello.java
A	examples/plugin/maven/pom.xml
A	examples/plugin/maven/sample_plugin/pom.xml
A	examples/plugin/maven/sample_plugin/src/main/java/com/google/errorprone/sample/MyCustomCheck.java

commit 7d4e195e5fdc0c961e9a50295e8438f3d170e9de
Author: cushon <cushon@google.com>
Date:   Tue Jun 21 17:57:49 2016 -0700

    Make unused import check non-experimental
    
    MOE_MIGRATED_REVID=125517686

M	core/src/main/java/com/google/errorprone/bugpatterns/RemoveUnusedImports.java

commit ccedcaf9aac08441ea2c26e45d784511189cee2b
Author: cushon <cushon@google.com>
Date:   Tue Jun 21 16:40:21 2016 -0700

    Move plugin loading into core Error Prone
    
    MOE_MIGRATED_REVID=125510378

M	core/src/main/java/com/google/errorprone/BaseErrorProneCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorProneJavaCompiler.java
A	core/src/main/java/com/google/errorprone/ErrorPronePlugins.java
M	core/src/main/java/com/google/errorprone/InvalidCommandLineOptionException.java
A	core/src/main/java/com/google/errorprone/MaskedClassLoader.java
M	core/src/test/java/com/google/errorprone/CommandLineFlagTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneTestCompiler.java

commit 2b610a6204da9281b5382b55a6d03109fd5001e5
Author: cushon <cushon@google.com>
Date:   Tue Jun 21 11:25:00 2016 -0700

    Move test file
    
    MOE_MIGRATED_REVID=125473972

A	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/test.proto
D	core/test.proto

commit c96c3c83fbe4266930d177b0a3c0912aeae27b22
Author: gak <gak@google.com>
Date:   Mon Jun 20 20:42:47 2016 -0700

    Improve RemoveUnusedImports fix
    
    suggest that all unused imports be removed in one suggestion.
    
    MOE_MIGRATED_REVID=125411262

M	core/src/main/java/com/google/errorprone/bugpatterns/RemoveUnusedImports.java
M	core/src/test/java/com/google/errorprone/bugpatterns/RemoveUnusedImportsTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/RemoveUnusedImportsPositiveCases.java

commit f55978b5aacfb90ce2e72c2ff51e5b3e5b1c949e
Author: cushon <cushon@google.com>
Date:   Mon Jun 20 17:46:55 2016 -0700

    Enable the general reference equality check as a warning
    
    MOE_MIGRATED_REVID=125401472

M	core/src/main/java/com/google/errorprone/bugpatterns/ReferenceEquality.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit aa2443cbf0bcdeb8a3a666cdeda786f3453e994b
Author: lowasser <lowasser@google.com>
Date:   Mon Jun 20 17:13:12 2016 -0700

    Add compile check for Random.nextInt() % n.
    
    RELNOTES: added RandomModInteger check
    
    MOE_MIGRATED_REVID=125398508

A	core/src/main/java/com/google/errorprone/bugpatterns/RandomModInteger.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/RandomModIntegerTest.java

commit ca42f62e0027ba32384a490e18cb1fe3f6357539
Author: cushon <cushon@google.com>
Date:   Mon Jun 20 16:55:26 2016 -0700

    Refactor ErrorProneScanner error handling
    
    To allow subclasses to handle exceptions thrown by checkers
    individually, e.g. to log and continue.
    
    MOE_MIGRATED_REVID=125396706

M	core/src/main/java/com/google/errorprone/ErrorProneError.java
M	core/src/main/java/com/google/errorprone/scanner/ErrorProneScanner.java

commit b6a4aa50331dab6b7acb66e13a6b4503ccb1dc2b
Author: gak <gak@google.com>
Date:   Mon Jun 20 16:11:11 2016 -0700

    Add a suggested fix for adding a member.
    
    MOE_MIGRATED_REVID=125391658

M	core/src/main/java/com/google/errorprone/bugpatterns/PrivateConstructorForUtilityClass.java
M	core/src/main/java/com/google/errorprone/fixes/SuggestedFixes.java

commit 050808b35f373dca7aa624cd8afe9c0785819517
Author: cushon <cushon@google.com>
Date:   Fri Jun 17 17:58:36 2016 -0700

    Optimize AbstractToString
    
    Check for an enclosing string concatenation operation before applying
    the type predicate, since the predicate may trigger symbol completions.
    
    MOE_MIGRATED_REVID=125220970

M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractToString.java

commit 750321c82d36fdd91142afa68f281eb52a2099c4
Author: cushon <cushon@google.com>
Date:   Fri Jun 17 17:38:18 2016 -0700

    Improve hasAnnotation check for missing annotation classes
    
    getSymbolForName returns null if the class doesn't exist,
    Symtab.enterClass speculatively enters it in the symbol table even if it
    isn't on the classpath.
    
    MOE_MIGRATED_REVID=125219502

M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java

commit 95792c1386731aa91612fa57af57f1728d6f835a
Author: arielb <arielb@google.com>
Date:   Fri Jun 17 17:06:08 2016 -0700

    Don't suppress annotation processors when they're explicitly passed in.
    
    MOE_MIGRATED_REVID=125217427

M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneTestCompiler.java

commit 20e99b8bab74fd563bbc37cf40bebe58b27ea310
Author: cushon <cushon@google.com>
Date:   Thu Jun 16 17:22:18 2016 -0700

    Sort checks
    
    MOE_MIGRATED_REVID=125120279

M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit 1c1e233ddb254fce0480b84e982dacc14eff6561
Author: cushon <cushon@google.com>
Date:   Thu Jun 16 14:14:40 2016 -0700

    Add a general check for reference equality on types that define equals()
    
    MOE_MIGRATED_REVID=125100859

A	core/src/main/java/com/google/errorprone/bugpatterns/ReferenceEquality.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/ReferenceEqualityTest.java
A	docs/bugpattern/ReferenceEquality.md

commit 38a8a42daa4b715c422c044e562ce7739e1a395d
Author: cushon <cushon@google.com>
Date:   Wed Jun 15 10:55:25 2016 -0700

    Refactor ErrorProneCompiler
    
    The existing implementation depends on all of the built-in checks
    through BuiltInScannerSuppliers. Refactor out a base implementation that
    doesn't include a default scanner supplier for use in tests.
    
    MOE_MIGRATED_REVID=124969040

A	core/src/main/java/com/google/errorprone/BaseErrorProneCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorProneError.java
M	core/src/main/java/com/google/errorprone/ErrorProneJavaCompiler.java
A	core/src/main/java/com/google/errorprone/ErrorProneVersion.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/matchers/DescendantOfTransitiveTest.java

commit cb39c834f1cad530b20c903746e3e6cbe5b4a34a
Author: emcmanus <emcmanus@google.com>
Date:   Wed Jun 15 09:20:09 2016 -0700

    Add a couple of missing spaces in the ClassCanBeStatic description
    
    MOE_MIGRATED_REVID=124958787

M	core/src/main/java/com/google/errorprone/bugpatterns/ClassCanBeStatic.java

commit 421250df821ab1122e54603c6ddd67a5c44d4f02
Author: cushon <cushon@google.com>
Date:   Tue Jun 14 12:09:42 2016 -0700

    RemoveUnusedImports: `Foo.Bar` shouldn't count as a use of `Bar`
    
    MOE_MIGRATED_REVID=124866758

M	core/src/main/java/com/google/errorprone/bugpatterns/RemoveUnusedImports.java
M	core/src/test/java/com/google/errorprone/bugpatterns/RemoveUnusedImportsTest.java

commit 8a8c0dd24c9c61f5c4c11b22227d2cb0cac393df
Author: cushon <cushon@google.com>
Date:   Mon Jun 13 22:06:29 2016 -0700

    Improve WildcardImport fix
    
    If a large number of members are imported from a single wildcard import,
    qualify accesses to the members by the owner's simple name instead of
    adding an import for each member.
    
    MOE_MIGRATED_REVID=124804191

M	core/src/main/java/com/google/errorprone/bugpatterns/WildcardImport.java
M	core/src/test/java/com/google/errorprone/bugpatterns/WildcardImportTest.java

commit 08e96fe2c3d33563e7db80a160ed78bfbbb1dd12
Author: cushon <cushon@google.com>
Date:   Mon Jun 13 21:55:00 2016 -0700

    Clean up testdata handling
    
    MOE_MIGRATED_REVID=124803542

M	core/src/test/java/com/google/errorprone/CommandLineFlagTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneJavaCompilerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/EmptyIfStatementPositiveCases.java

commit db50e045eb52762b4d5dc2959bf1af73171f4875
Author: cushon <cushon@google.com>
Date:   Mon Jun 13 21:17:06 2016 -0700

    Improve BugCheckerRefactoringTestHelper's handling of duplicate files
    
    MOE_MIGRATED_REVID=124802032

M	core/src/test/java/com/google/errorprone/BugCheckerRefactoringTestHelper.java
M	core/src/test/java/com/google/errorprone/BugCheckerRefactoringTestHelperTest.java

commit 370735d96eb68112504c636fef3e0be8112497f9
Author: cushon <cushon@google.com>
Date:   Mon Jun 13 11:56:41 2016 -0700

    Improve WildcardImports
    
    Let javac figure out whether a symbol was imported on-demand, instead of
    trying ot figure it out ourselves. This fixes a couple of bugs with the
    previous version.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=124751473

M	core/src/main/java/com/google/errorprone/bugpatterns/WildcardImport.java
M	core/src/test/java/com/google/errorprone/bugpatterns/WildcardImportTest.java

commit 8d35ea9e9daa65070ed1fd98b85dc36576b04d29
Author: gak <gak@google.com>
Date:   Fri Jun 10 19:40:46 2016 -0700

    Add a check that suggests adding a private constructor
    
    to utility classes (classes with only static members).  This is just the
    application of the advice in EJ2: Item 4.
    
    RELNOTES: Add a check that suggests adding a private constructor to utility classes (classes with only static members).
    
    MOE_MIGRATED_REVID=124620634

A	core/src/main/java/com/google/errorprone/bugpatterns/PrivateConstructorForUtilityClass.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/PrivateConstructorForUtilityClassTest.java

commit 43096e2d5581b4e9fc1e9eecfbfc54d7f420590a
Author: eaftan <eaftan@google.com>
Date:   Fri Jun 10 17:36:25 2016 -0700

    Promote some checks to warnings
    
    MOE_MIGRATED_REVID=124615363

M	core/src/main/java/com/google/errorprone/bugpatterns/BoxedPrimitiveConstructor.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ClassCanBeStatic.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ClassNewInstance.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InsecureCipherMode.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java

commit 0cad321afab22fdf345d2ee6d17cab39838cc4e2
Author: cushon <cushon@google.com>
Date:   Fri Jun 10 15:44:42 2016 -0700

    Delete ErrorProneJavacJavaCompiler
    
    Subclassing JavaCompiler is unnecessary: task listeners now provide all
    information needed to run Error Prone, and we don't have to worry about
    propagating context across annotation processing rounds.
    
    MOE_MIGRATED_REVID=124606208

M	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorProneJavaCompiler.java
D	core/src/main/java/com/google/errorprone/ErrorProneJavacJavaCompiler.java

commit 8f43fca32eab2cde55d41361c37dfe38966b634d
Author: cushon <cushon@google.com>
Date:   Fri Jun 10 15:40:04 2016 -0700

    Make GetClassOnAnnotation an error
    
    RELNOTES: Make GetClassOnAnnotation an error
    
    MOE_MIGRATED_REVID=124605796

M	core/src/main/java/com/google/errorprone/bugpatterns/GetClassOnAnnotation.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit 9bec3b10c5ffb5036fa174efe69f28316cba8055
Author: cushon <cushon@google.com>
Date:   Fri Jun 10 15:25:30 2016 -0700

    Make ErrorProneError quieter
    
    The only context we want from ErrorProneError is the source position,
    its stack trace is less interesting than the stack trace of the
    exception that was thrown by the check.
    
    MOE_MIGRATED_REVID=124604430

M	core/src/main/java/com/google/errorprone/ErrorProneError.java

commit 04ad92da431119b4be111272ee84dae378e124f0
Author: cushon <cushon@google.com>
Date:   Fri Jun 10 11:42:54 2016 -0700

    Improve error handling for non-existent test inputs
    
    MOE_MIGRATED_REVID=124582315

M	core/src/test/java/com/google/errorprone/ErrorProneInMemoryFileManager.java

commit 5329d0f8fdeb2e25e4ca1f008633cfc325de99e6
Author: cushon <cushon@google.com>
Date:   Fri Jun 10 11:38:45 2016 -0700

    Delete unused entry point
    
    MOE_MIGRATED_REVID=124581852

D	core/src/test/java/com/google/errorprone/DogfoodErrorProne.java

commit a8e17bc2a9a4ea46a9b4a5180c2165fd14945632
Author: cushon <cushon@google.com>
Date:   Thu Jun 9 10:44:31 2016 -0700

    Remove NOT_A_PROBLEM
    
    context: ff0c9b22d52c6e0599967d1eec289e27a8cd1ebd
    
    MOE_MIGRATED_REVID=124473128

M	annotation/src/main/java/com/google/errorprone/BugPattern.java

commit 9c17245a6e5e8972f2ed2cc0183ada70ae9a2b70
Author: cushon <cushon@google.com>
Date:   Tue Jun 7 18:17:30 2016 -0700

    Improve BoxedPrimitiveConstructor fixes
    
    * don't auto-unbox if the boxed primitive is used in a select
    * suggest `String.valueOf(x)` for `new Integer(x).toString()`
    * suggest `Integer.compare(x, y)` for `new Integer(x).compareTo(y)`
    * suggest `Integer.hashCode(x)` for `new Integer(x).hashCode()`
    
    MOE_MIGRATED_REVID=124309120

M	core/src/main/java/com/google/errorprone/bugpatterns/BoxedPrimitiveConstructor.java
M	core/src/test/java/com/google/errorprone/bugpatterns/BoxedPrimitiveConstructorTest.java

commit 98962c03fec5c002e3854af00bb6054695ce219e
Author: cushon <cushon@google.com>
Date:   Tue Jun 7 15:10:10 2016 -0700

    Delete expressionMethodSelect
    
    Every usage of this method is redundant or a type inference kludge.
    
    MOE_MIGRATED_REVID=124291375

M	core/src/main/java/com/google/errorprone/matchers/Matchers.java

commit 5422c8e19ba4655e358f20f4c55865ae0afba4ae
Author: cushon <cushon@google.com>
Date:   Tue Jun 7 12:14:29 2016 -0700

    Support 'this' and 'super' calls when matching constructors
    
    MOE_MIGRATED_REVID=124272040

M	core/src/main/java/com/google/errorprone/matchers/method/ConstructorMatcherImpl.java
A	core/src/test/java/com/google/errorprone/matchers/MethodMatchersTest.java

commit cd9df856e9f298e03c898547dbeceb973c308a06
Author: cushon <cushon@google.com>
Date:   Tue Jun 7 12:05:23 2016 -0700

    Expand constant field check to look for primitive constants
    
    Static final fields of primitive or string type should always use
    constant case.
    
    MOE_MIGRATED_REVID=124271111

M	core/src/main/java/com/google/errorprone/bugpatterns/ConstantField.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ConstantFieldTest.java

commit dd6560a4def4cf24b8746f477763eda23d95168d
Author: cushon <cushon@google.com>
Date:   Tue Jun 7 11:43:51 2016 -0700

    Add a toString() method to ScannerSupplierImpl
    
    MOE_MIGRATED_REVID=124268543

M	core/src/main/java/com/google/errorprone/scanner/ScannerSupplierImpl.java

commit c24e9448ff1be2c3f9e54fd357220be99f6f1c19
Author: cushon <cushon@google.com>
Date:   Tue Jun 7 11:42:56 2016 -0700

    Refactor FormatString validation
    
    so the logic can be shared by other checks.
    
    MOE_MIGRATED_REVID=124268432

M	core/src/main/java/com/google/errorprone/bugpatterns/formatstring/FormatString.java
A	core/src/main/java/com/google/errorprone/bugpatterns/formatstring/FormatStringValidation.java
M	core/src/test/java/com/google/errorprone/bugpatterns/formatstring/FormatStringTest.java

commit 7dd325f737e8cab952cec6097a6efa60c8b6f08d
Author: David Pursehouse <david.pursehouse@gmail.com>
Date:   Wed Jun 8 02:41:14 2016 +0900

    Fix source and target values in Maven example pom.xml (#414)
    
    The source and target versions are set as `7`, which is not recognized.
    
    As a result, no source level is set. Generating the Eclipse project with:
    
      mvn eclipse:eclipse
    
    and writing code like:
    
      List<String> myList = new ArrayList<>();
    
    results in the errors:
    
      '<>' operator is not allowed for source level below 1.7
      Incorrect number of arguments for type ArrayList<E>; it cannot be parameterized with arguments <>
      Syntax error, parameterized types are only available if source level is 1.5 or greater
    
    Change the values to `1.7`.
    
    Change-Id: I476555d28e6e8da477f8f46a3403d248219cf3ec

M	examples/maven/pom.xml

commit bc006d4f30b75364ce290a93545bed81533c8e3a
Author: cushon <cushon@google.com>
Date:   Mon Jun 6 14:14:33 2016 -0700

    New check for CONSTANT_CASE fields that are not static and final
    
    RELNOTES: New check for CONSTANT_CASE fields that are not static and final
    
    MOE_MIGRATED_REVID=124176225

M	core/src/main/java/com/google/errorprone/apply/DescriptionBasedDiff.java
A	core/src/main/java/com/google/errorprone/bugpatterns/ConstantField.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
M	core/src/test/java/com/google/errorprone/BugCheckerRefactoringTestHelper.java
A	core/src/test/java/com/google/errorprone/bugpatterns/ConstantFieldTest.java
A	docs/bugpattern/ConstantField.md

commit eb5a3f7afe8a9cb8c98ed8945a556a6ea79709ab
Author: cushon <cushon@google.com>
Date:   Mon Jun 6 11:42:46 2016 -0700

    Fix a crash in WrongParameterPackage
    
    MethodSymbol#params is null if the symbol hasn't been completed,
    params() should be used instead.
    
    Fixes #356
    
    MOE_MIGRATED_REVID=124159835

M	core/src/main/java/com/google/errorprone/bugpatterns/WrongParameterPackage.java
M	core/src/test/java/com/google/errorprone/bugpatterns/WrongParameterPackageTest.java

commit 00c12ee16c4ef3ea69284c4d23627e4afca50b67
Author: cushon <cushon@google.com>
Date:   Mon Jun 6 11:40:38 2016 -0700

    Use standard hasAnnotation method in OverridesJavaxInjectableMethod
    
    See also 4414c70e5a0853a1317ff153d52b754a134bba09
    
    Possible fix for #354
    
    MOE_MIGRATED_REVID=124159583

M	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/OverridesGuiceInjectableMethod.java

commit 4414c70e5a0853a1317ff153d52b754a134bba09
Author: cushon <cushon@google.com>
Date:   Mon Jun 6 11:39:43 2016 -0700

    Use standard hasAnnotation method in OverridesJavaxInjectableMethod
    
    Possible fix for #355
    
    MOE_MIGRATED_REVID=124159488

M	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/OverridesJavaxInjectableMethod.java

commit 2ff1e0722c3100716d039f3f7b33e1880a7d45ca
Author: cushon <cushon@google.com>
Date:   Mon Jun 6 10:23:39 2016 -0700

    Fix typo
    
    MOE_MIGRATED_REVID=124150059

D	core/src/main/java/com/google/errorprone/bugpatterns/SelfComparision.java
A	core/src/main/java/com/google/errorprone/bugpatterns/SelfComparison.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
D	core/src/test/java/com/google/errorprone/bugpatterns/SelfComparisionTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/SelfComparisonTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfComparisionNegativeCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfComparisionPositiveCase.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfComparisonNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfComparisonPositiveCase.java
D	docs/bugpattern/SelfComparision.md
A	docs/bugpattern/SelfComparison.md

commit 9c5abbdfd7b5683e244fe7a371ecbd6a7513a606
Author: gak <gak@google.com>
Date:   Fri Jun 3 14:45:49 2016 -0700

    New check to remove unused imports
    
    Add a check that removes imports for symbols that are not being used.
    In doing so, fix some issues with StaticImports so that it handles the
    case where a single static import imports multiple symbols.
    
    RELNOTES: Add a check that removes imports for symbols that are not being used.
    
    MOE_MIGRATED_REVID=124008239

M	core/src/main/java/com/google/errorprone/bugpatterns/NonCanonicalStaticImport.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NonCanonicalStaticMemberImport.java
A	core/src/main/java/com/google/errorprone/bugpatterns/RemoveUnusedImports.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StaticImports.java
M	core/src/main/java/com/google/errorprone/bugpatterns/UnnecessaryStaticImport.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/RemoveUnusedImportsTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/RemoveUnusedImportsPositiveCases.java

commit e9b95353c581a40900ee51de0e35f84f637d5e49
Author: cushon <cushon@google.com>
Date:   Fri Jun 3 14:18:06 2016 -0700

    Create a suggested fix helper that qualifies references in @link tags
    
    MOE_MIGRATED_REVID=124005450

M	core/src/main/java/com/google/errorprone/fixes/SuggestedFixes.java
M	core/src/test/java/com/google/errorprone/fixes/SuggestedFixesTest.java

commit e2d1a36b61cf36cf522dd446addab8186eb88bfe
Author: cushon <cushon@google.com>
Date:   Thu Jun 2 21:38:37 2016 -0700

    Delete MalformedFormatString
    
    it has been obsolesced by FormatString
    
    MOE_MIGRATED_REVID=123937792

D	core/src/main/java/com/google/errorprone/bugpatterns/MalformedFormatString.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
D	core/src/test/java/com/google/errorprone/bugpatterns/MalformedFormatStringTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/MalformedFormatStringNegativeCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/MalformedFormatStringPositiveCases.java

commit d6be2685cff08311774c70b7070daf86f5381593
Author: cushon <cushon@google.com>
Date:   Thu Jun 2 11:40:50 2016 -0700

    Fix crash in NumericEquality
    
    Assuming that the arguments have symbols isn't correct.
    
    Fixes #415
    
    MOE_MIGRATED_REVID=123890225

M	core/src/main/java/com/google/errorprone/bugpatterns/NumericEquality.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NumericEqualityTest.java

commit 2bf33d590b258fb6835da4bc388695d87a17d971
Author: lowasser <lowasser@google.com>
Date:   Thu Jun 2 11:39:19 2016 -0700

    Add magic methods for emitting comments to Refaster.
    
    MOE_MIGRATED_REVID=123890030

M	core/src/main/java/com/google/errorprone/refaster/ImportPolicy.java
M	core/src/main/java/com/google/errorprone/refaster/Refaster.java
M	core/src/main/java/com/google/errorprone/refaster/Template.java
M	core/src/test/java/com/google/errorprone/refaster/TemplateIntegrationTest.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/EmitCommentBeforeTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/EmitCommentTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/EmitCommentBeforeTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/EmitCommentTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/EmitCommentBeforeTemplate.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/EmitCommentTemplate.java

commit 0a98974b5a1136d0ec23daf6b163ac67eefa66ac
Author: dovwas <dovwas@google.com>
Date:   Wed Jun 1 14:23:10 2016 -0700

    Fix minor comment typo
    
    about which parameter is the receiver in a static method invocation.
    
    MOE_MIGRATED_REVID=123794385

M	core/src/main/java/com/google/errorprone/bugpatterns/EqualsIncompatibleType.java

commit 1b59df659b1b724abd9ddde5b253b0a23ba99e4e
Author: cushon <cushon@google.com>
Date:   Tue May 31 18:20:13 2016 -0700

    Delete FallThroughSuppression
    
    It was a one-time refactoring to remove
    @SuppressWarnings("fallthrough"); I don't think it has any value as an
    actual check.
    
    MOE_MIGRATED_REVID=123706099

D	core/src/main/java/com/google/errorprone/bugpatterns/FallThroughSuppression.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/FallthroughSuppressionNegativeCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/FallthroughSuppressionPositiveCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/FallthroughSuppressionToBeExtended.java

commit f8960ff7fcd6c0c2e200c2305fba6a98ac281c38
Author: cushon <cushon@google.com>
Date:   Tue May 31 17:54:07 2016 -0700

    Discourage getClass() on annotations and enums
    
    resolves #242
    
    RELNOTES: New check for getClass() on annotations an enums
    
    MOE_MIGRATED_REVID=123704111

A	core/src/main/java/com/google/errorprone/bugpatterns/GetClassOnAnnotation.java
A	core/src/main/java/com/google/errorprone/bugpatterns/GetClassOnEnum.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/GetClassOnAnnotationTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/GetClassOnEnumTest.java
A	docs/bugpattern/GetClassOnAnnotation.md
A	docs/bugpattern/GetClassOnEnum.md

commit 29e82b555738da4b51ef895eaa1bc980828da6fc
Author: cushon <cushon@google.com>
Date:   Tue May 31 17:37:42 2016 -0700

    Consolidate scanner suppliers
    
    MOE_MIGRATED_REVID=123702877

M	core/src/main/java/com/google/errorprone/scanner/InstanceReturningScannerSupplierImpl.java
M	core/src/main/java/com/google/errorprone/scanner/ScannerSupplier.java
M	core/src/main/java/com/google/errorprone/scanner/ScannerSupplierImpl.java

commit ff0c9b22d52c6e0599967d1eec289e27a8cd1ebd
Author: cushon <cushon@google.com>
Date:   Tue May 31 16:12:17 2016 -0700

    Decouple disabled checks from BugPattern.SeverityLevel
    
    MOE_MIGRATED_REVID=123694657

M	annotation/src/main/java/com/google/errorprone/BugPattern.java
M	core/src/main/java/com/google/errorprone/analysis/TopLevelAnalysisWithSeverity.java
M	core/src/main/java/com/google/errorprone/bugpatterns/FallThroughSuppression.java
M	core/src/main/java/com/google/errorprone/matchers/Description.java
M	core/src/main/java/com/google/errorprone/scanner/InstanceReturningScannerSupplierImpl.java
M	core/src/main/java/com/google/errorprone/scanner/ScannerSupplier.java
M	core/src/main/java/com/google/errorprone/scanner/ScannerSupplierImpl.java
M	core/src/test/java/com/google/errorprone/BugCheckerRefactoringTestHelperTest.java
M	core/src/test/java/com/google/errorprone/refaster/DescriptionBasedDiffTest.java

commit 5c86b236aa245a45fb3fa856460c12e62ba1afe6
Author: cushon <cushon@google.com>
Date:   Tue May 31 12:08:40 2016 -0700

    Fix usage of Class.newInstance()
    
    MOE_MIGRATED_REVID=123668793

M	core/src/main/java/com/google/errorprone/scanner/ScannerSupplierImpl.java

commit c387064bae0e4909eee00ad8c2db8f3b706535bc
Author: lowasser <lowasser@google.com>
Date:   Tue May 31 10:52:21 2016 -0700

    In DaggerProvidesNull, don't reject if the "return null" appears inside a lambda expression.
    
    RELNOTES: fixed DaggerProvidesNull bug in Java 8 code
    
    MOE_MIGRATED_REVID=123659207

M	core/src/main/java/com/google/errorprone/bugpatterns/inject/dagger/ProvidesNull.java

commit f18d509db231f3948cf26200f613867065456990
Author: eaftan <eaftan@google.com>
Date:   Fri May 27 14:40:00 2016 -0700

    Disable checks that are more stylistic than functional
    
    This will improve signal-to-noise ratio for Android and our external
    users. Specifically, disables ClassName, DepAnn,
    LongLiteralLowerCaseSuffix, MultipleTopLevelClasses, and
    StaticAccessedFromInstance.
    
    MOE_MIGRATED_REVID=123459006

M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
M	core/src/main/java/com/google/errorprone/scanner/InstanceReturningScannerSupplierImpl.java
M	core/src/main/java/com/google/errorprone/scanner/ScannerSupplier.java
M	core/src/main/java/com/google/errorprone/scanner/ScannerSupplierImpl.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneJavaCompilerTest.java

commit e48de3fcb294d99cd811d942a737be50afd05fe5
Author: cushon <cushon@google.com>
Date:   Fri May 27 09:07:24 2016 -0700

    Make FormatString an error
    
    MOE_MIGRATED_REVID=123424263

M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit ab260ee57b68f3de747ec67820fa33bd81b74f77
Author: bhagwani <bhagwani@google.com>
Date:   Tue May 24 13:44:02 2016 -0700

    Add Fix for SelfEquals.
    
    MOE_MIGRATED_REVID=123141445

M	core/src/main/java/com/google/errorprone/bugpatterns/GuavaSelfEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquals.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfEqualsPositiveCase.java

commit 3f47d3a47dd40fd0391c944490e99d3e9a12207e
Author: cpovirk <cpovirk@google.com>
Date:   Mon May 23 13:51:48 2016 -0700

    Revise and expand CollectionIncompatibleType documentation.
    
    - Clarify why the example code is buggy.
    - Focus more throughout on why the signature is contains(Object) and not
      contains(E).
    - Then talk a ton about that in a new "footnote."
    - Attempt to address some comments from CL 107499781. (But I've ignored
      ArrayList vs. LinkedList and List<Object> vs. List<String.)
    
    MOE_MIGRATED_REVID=123033541

M	docs/bugpattern/CollectionIncompatibleType.md

commit eca1792250bc6343d4d8b433a1eb9c52cfd9fe54
Author: cushon <cushon@google.com>
Date:   Fri May 20 15:20:33 2016 -0700

    Use autoboxing for BoxedPrimitiveConstructor fixes
    
    unless the fix occurs as the argument of an invocation, since autoboxing
    may affect overload resolution.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=122872028

M	core/src/main/java/com/google/errorprone/bugpatterns/BoxedPrimitiveConstructor.java
M	core/src/test/java/com/google/errorprone/bugpatterns/BoxedPrimitiveConstructorTest.java

commit 7fa7e9471c6f3e25b1e1da412a39ee7793b83b2f
Author: emcmanus <emcmanus@google.com>
Date:   Fri May 20 13:50:22 2016 -0700

    Improve BoxedPrimitiveConstructor documentation
    
    Rewrite the text of the BoxedPrimitiveConstructor warning slightly, to
    mention that autoboxing is an alternative to explicit valueOf calls, and
    to clean up a couple of other small things.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=122863223

M	core/src/main/java/com/google/errorprone/bugpatterns/BoxedPrimitiveConstructor.java
M	docs/bugpattern/BoxedPrimitiveConstructor.md

commit 6401463873c9ee31596b39101d2a3faad6c02dc8
Author: cushon <cushon@google.com>
Date:   Thu May 19 17:39:55 2016 -0700

    MissingFail should always ignore exceptions named 'tolerated'
    
    Follow-up to 29669f6842f6429eb048c26284ed8e1e68c2e322
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=122788048

M	core/src/main/java/com/google/errorprone/bugpatterns/MissingFail.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MissingFailTest.java

commit ec4949b436c8ce2533967bf74de4f952c0d7bdfb
Author: nwatson <nwatson@google.com>
Date:   Thu May 19 17:00:27 2016 -0700

    Add ImmutableListMultimap, ImmutableSetMultimap, and re2j Pattern
    
    to the list of well-known immutable types.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=122784511

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/WellKnownMutability.java

commit 900e1087f75e9985a6849614c5daaedc46009b61
Author: cushon <cushon@google.com>
Date:   Thu May 19 16:48:01 2016 -0700

    Replace Class#newInstance() with getConstructor().newInstance()
    
    Fixes error-prone#407
    
    RELNOTES: Replace Class#newInstance() with getConstructor().newInstance()
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=122783365

A	core/src/main/java/com/google/errorprone/bugpatterns/ClassNewInstance.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/ClassNewInstanceTest.java
A	docs/bugpattern/ClassNewInstance.md

commit d68fdc4df2f322578a9ccc86ab5e79b98e02320e
Author: bhagwani <bhagwani@google.com>
Date:   Thu May 19 13:32:54 2016 -0700

    Update SelfEquals and SelfComparision documentation.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=122763756

M	core/src/main/java/com/google/errorprone/bugpatterns/SelfComparision.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquals.java
A	docs/bugpattern/SelfComparision.md
A	docs/bugpattern/SelfEquals.md

commit 8ec50cf9b02b742f1c47e0da5cbcc482b59b1d31
Author: cushon <cushon@google.com>
Date:   Wed May 18 21:17:35 2016 -0700

    Add fixes for adding or removing multiple modifiers
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=122698468

M	core/src/main/java/com/google/errorprone/bugpatterns/ClassCanBeStatic.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MockitoCast.java
M	core/src/main/java/com/google/errorprone/bugpatterns/UnsynchronizedOverridesSynchronized.java
M	core/src/main/java/com/google/errorprone/bugpatterns/VarChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/DoubleCheckedLocking.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableChecker.java
M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java
A	core/src/main/java/com/google/errorprone/fixes/SuggestedFixes.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ClassCanBeStaticPositiveCase2.java
D	core/src/test/java/com/google/errorprone/fixes/SuggestedFixTest.java
A	core/src/test/java/com/google/errorprone/fixes/SuggestedFixesTest.java

commit 83af7334eb8e6881e31657704ce5fd8af4d4dac2
Author: irogers <irogers@google.com>
Date:   Wed May 18 19:24:03 2016 -0700

    Enable BadComparable as a warning.
    
    MOE_MIGRATED_REVID=122684354

M	core/src/main/java/com/google/errorprone/bugpatterns/BadComparable.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit 64ae3ac70876100a5e67a781aa96252cbde8c694
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Wed May 18 19:22:40 2016 -0700

    Remove unnecessary casts
    
    MOE_MIGRATED_REVID=122653783

M	core/src/main/java/com/google/errorprone/bugpatterns/EqualsIncompatibleType.java
M	core/src/main/java/com/google/errorprone/bugpatterns/Overrides.java
M	core/src/main/java/com/google/errorprone/bugpatterns/WrongParameterPackage.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/OverridesGuiceInjectableMethod.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/OverridesJavaxInjectableMethod.java

commit 3d41449e391a62ccb9350eb9ef54f8ec62af0786
Author: endobson <endobson@google.com>
Date:   Wed May 18 11:13:53 2016 -0700

    Add logic to not use integral suggestions when using BigDecimal.valueOf().
    
    This is because BigDecimal.valueOf(1.0) => new BigDecimal("1.0") which
    has a different scale than BigDecimal.ONE. This is not usually an issue
    but it affects equality of BigDecimals which means that it causes tests
    that rely on the old scale to fail.
    
    RELNOTES:
    Changes BigDecimalLiteralDouble to avoid suggestions with minor semantic
    differences.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=122649770

M	core/src/main/java/com/google/errorprone/bugpatterns/BigDecimalLiteralDouble.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/BigDecimalLiteralDoublePositiveCases.java

commit a08d1cb18d8d31cace7398c0dc614d97739524d1
Author: cushon <cushon@google.com>
Date:   Tue May 17 21:11:05 2016 -0700

    Improve ClassCanBeStatic
    
    Recognize more references to the enclosing instance, including implicit
    references in the extends clause, and type parameters.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=122596062

M	core/src/main/java/com/google/errorprone/bugpatterns/ClassCanBeStatic.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ClassCanBeStaticTest.java

commit ebbb92e5ff04f2fd9758e44a327c673d7c12bd58
Author: cushon <cushon@google.com>
Date:   Tue May 17 21:09:52 2016 -0700

    Remove unused argument to String.format
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=122596015

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableChecker.java

commit f3ccd97c3105f3363cc79748323739fa412ccb70
Author: cushon <cushon@google.com>
Date:   Tue May 17 21:09:21 2016 -0700

    Fix string formatting bug
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=122595993

M	core/src/main/java/com/google/errorprone/bugpatterns/NarrowingCompoundAssignment.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NarrowingCompoundAssignmentTest.java

commit e72cdf1e67925f16c49dd1ced2c86551cfc1e73a
Author: bhagwani <bhagwani@google.com>
Date:   Tue May 17 20:47:22 2016 -0700

    Add more positive cases for SelfEquals and SelfComparision.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=122594905

M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfComparisionPositiveCase.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfEqualsPositiveCase.java

commit c99f74095dbec2212e3d3171ee5cff37880f1cc3
Author: cushon <cushon@google.com>
Date:   Tue May 17 11:11:22 2016 -0700

    Fix bug in ImportStatements
    
    Allow import fixes to be applied to compilation units in the default
    package, and that have no existing imports.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=122543436

M	core/src/main/java/com/google/errorprone/apply/ImportStatements.java
M	core/src/test/java/com/google/errorprone/apply/ImportStatementsTest.java

commit 9657f2ce186bb3818181d7ce84f7717a4dec2f25
Author: irogers <irogers@google.com>
Date:   Tue May 17 10:08:53 2016 -0700

    Fix CollectionIncompatibleType for null method arguments.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=122536019

M	core/src/main/java/com/google/errorprone/bugpatterns/collectionincompatibletype/AbstractCollectionIncompatibleTypeMatcher.java
M	core/src/test/java/com/google/errorprone/bugpatterns/collectionincompatibletype/testdata/CollectionIncompatibleTypeNegativeCases.java

commit 8c19e6103f6a095db1669222b924e0374a200b1f
Author: polymorpheus <polymorpheus@google.com>
Date:   Mon May 16 10:49:37 2016 -0700

    Make Choice.toString() informative.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=122435284

M	core/src/main/java/com/google/errorprone/refaster/Choice.java

commit 12d6345add6d4c5bb9452f794052d8b870a4e359
Author: cpovirk <cpovirk@google.com>
Date:   Mon May 16 08:46:55 2016 -0700

    Re-enable TryFailThrowable
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=122423749

M	core/src/main/java/com/google/errorprone/bugpatterns/TryFailThrowable.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/TryFailThrowablePositiveCases.java

commit d22faa60dbd3e85594becd9333033d94f573bf9e
Author: cushon <cushon@google.com>
Date:   Fri May 13 21:49:07 2016 -0700

    Don't run checks over compilation with errors
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=122322171

M	core/src/main/java/com/google/errorprone/ErrorProneJavacJavaCompiler.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java

commit c4f3a67f01c5e2650b5684ad623c0aba3682ae55
Author: cushon <cushon@google.com>
Date:   Fri May 13 11:32:04 2016 -0700

    Fix bug in ClassCanBeStatic
    
    References to any type that wasn't a member of the current class (e.g.
    java.lang.String) were preventing a match.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=122278988

M	core/src/main/java/com/google/errorprone/bugpatterns/ClassCanBeStatic.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ClassCanBeStaticTest.java

commit 3a2a0b13f03ecc1ff6898223b02c5c91a1e67d5b
Author: avenet <avenet@google.com>
Date:   Fri May 13 11:30:34 2016 -0700

    Improve EqualsIncompatibleType documentation
    
    Address the situation where one wants to check disequality for testing
    purposes.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=122278834

M	docs/bugpattern/EqualsIncompatibleType.md

commit b1d78673f73af9ee158534ff5c406997993f8e98
Author: cushon <cushon@google.com>
Date:   Thu May 12 19:43:05 2016 -0700

    Consolidate checks for reference equality
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=122224435

A	core/src/main/java/com/google/errorprone/bugpatterns/AbstractReferenceEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NumericEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/OptionalEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ProtoStringFieldReferenceEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StringEquality.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/StringEqualityPositiveCases.java

commit 2da67ef1cadc24d4d781b31577ad9c25650a49a6
Author: cushon <cushon@google.com>
Date:   Tue May 10 12:40:26 2016 -0700

    Detect extra format arguments in FormatString
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=121975681

M	core/src/main/java/com/google/errorprone/bugpatterns/formatstring/FormatString.java
M	core/src/test/java/com/google/errorprone/bugpatterns/formatstring/FormatStringTest.java

commit b415985b4061dcaf892fd270e8b471316e5ad825
Author: cushon <cushon@google.com>
Date:   Tue May 10 12:16:43 2016 -0700

    Add an ASTHelpers wrapper for Resolve#findIdent
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=121973515

M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java

commit 19cbff3a6966b7259fcc8538ea26fd6b87613fda
Author: cushon <cushon@google.com>
Date:   Tue May 10 11:50:23 2016 -0700

    Unbreak tests after 0999b46977e5ff7a1db435f4a3e543e008b24f57
    
    Forcing completion of types in getType was a bad idea, some types (e.g.
    Methods) may have useful information even they can't be completed.
    
    Instead, make FormatString robust against some parameter types being absent.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=121970728

M	core/src/main/java/com/google/errorprone/bugpatterns/formatstring/FormatString.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java

commit 25e7610987a428543e65db7e5883828c17459848
Author: cushon <cushon@google.com>
Date:   Tue May 10 11:48:58 2016 -0700

    Improve ErrorProneError
    
    * Don't bury the lede: include the specific exception message in the
      wrapped message.
    
    * Report the stack trace of the wrapped exception, not the error
      handling code in ErrorProneScanner.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=121970561

M	core/src/main/java/com/google/errorprone/ErrorProneError.java

commit 1f7a81a0f392b1bcd2f9ad5044ca4c7097a1514d
Author: bhagwani <bhagwani@google.com>
Date:   Mon May 9 19:23:10 2016 -0700

    Setting up SelfComparision errorprone check.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=121904580

A	core/src/main/java/com/google/errorprone/bugpatterns/SelfComparision.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/SelfComparisionTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfComparisionNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfComparisionPositiveCase.java

commit 51d9996e45bb528a204613f402c2de2991034b22
Author: eaftan <eaftan@google.com>
Date:   Mon May 9 17:28:16 2016 -0700

    Synchronize list of enabled warnings with those on in Tricorder.
    
    RELNOTES: Enabled several internal warnings in external Error Prone.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=121896902

M	core/src/main/java/com/google/errorprone/bugpatterns/EqualsIncompatibleType.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit3FloatingPointComparisonWithoutDelta.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PackageLocation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/UnsynchronizedOverridesSynchronized.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/DoubleCheckedLocking.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit 0999b46977e5ff7a1db435f4a3e543e008b24f57
Author: cushon <cushon@google.com>
Date:   Mon May 9 15:07:56 2016 -0700

    Validate format strings
    
    This checks that format strings are well-formed, and that the static
    argument types match the format specifiers. The existing
    MalformedFormatString check only detects printf calls were there are
    more arguments than format specifiers.
    
    RELNOTES: New check to validate format strings
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=121881972

A	core/src/main/java/com/google/errorprone/bugpatterns/formatstring/FormatString.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/formatstring/FormatStringTest.java
A	docs/bugpattern/FormatString.md

commit 9291e057a1c318824a7fe52c9d180b095c711ce8
Author: bhagwani <bhagwani@google.com>
Date:   Fri May 6 18:22:14 2016 -0700

    Refactor SelfEquals
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=121728457

A	core/src/main/java/com/google/errorprone/bugpatterns/GuavaSelfEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquals.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/GuavaSelfEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SelfEqualsTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/GuavaSelfEqualsNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/GuavaSelfEqualsPositiveCase.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfEqualsNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfEqualsPositiveCase.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfEqualsPositiveCase1.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfEqualsPositiveCase2.java

commit a0d396cf411c2789654161aa232320f5e336e002
Author: cushon <cushon@google.com>
Date:   Fri May 6 15:43:29 2016 -0700

    Disallow explicit and implicit calls to Stream.toString
    
    Fixes #408
    
    RELNOTES: New check to disallow explicit and implicit calls to Stream.toString
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=121716951

A	core/src/main/java/com/google/errorprone/bugpatterns/AbstractToString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToString.java
A	core/src/main/java/com/google/errorprone/bugpatterns/StreamToString.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/StreamToStringTest.java

commit fb59249c154ee29a6aa654813cb1b0a85a62265a
Author: mrhead <mrhead@google.com>
Date:   Tue May 3 14:42:15 2016 -0700

    fix typo in explanation text.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=121418140

M	core/src/main/java/com/google/errorprone/bugpatterns/MalformedFormatString.java

commit bcad64a6dc6795b0cab33e19ba6e67fec0c58418
Author: cushon <cushon@google.com>
Date:   Tue May 3 14:11:23 2016 -0700

    Fix IsInstanceOfClass documentation
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=121414625

M	core/src/main/java/com/google/errorprone/bugpatterns/IsInstanceOfClass.java

commit 762c135736ee01381e9ff278f4b3f6c56e3fa71f
Author: cushon <cushon@google.com>
Date:   Tue May 3 01:10:22 2016 -0700

    Detect implicit conversions to String in ArrayToString
    
    Fixes #380
    
    RELNOTES: Detect implicit conversions to String in ArrayToString
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=121352407

M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToString.java
D	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToStringCompoundAssignment.java
D	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToStringConcatenation.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
D	core/src/test/java/com/google/errorprone/bugpatterns/ArrayToStringCompoundAssignmentTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/ArrayToStringConcatenationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayToStringTest.java

commit e7eb2913ac61aa911fbe8d74263b399a0ada2dee
Author: lowasser <lowasser@google.com>
Date:   Mon May 2 16:30:35 2016 -0700

    Add special casing for conditional expressions
    
    which appears sufficient to resolve Refaster test failures in Java 8.
    
    RELNOTES: changes Refaster return type handling behavior
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=121324175

M	core/src/main/java/com/google/errorprone/refaster/ExpressionTemplate.java

commit 8c1b88303a9010edfe4f2bbf006d6a24549f3481
Author: eaftan <eaftan@google.com>
Date:   Fri Apr 29 13:54:01 2016 -0700

    Strip broken test case from UseBindsTests.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=121148041

M	core/src/test/java/com/google/errorprone/bugpatterns/inject/dagger/UseBindsTest.java

commit 371defc8a1a35e134a41ae2f1936980c8149c225
Author: gak <gak@google.com>
Date:   Thu Apr 28 16:16:44 2016 -0700

    Add a check that suggests using @Binds over @Provides or @Produces whenever possible.
    
    RELNOTES: Add a check for Dagger 2 that suggests using @Binds over @Provides or @Produces.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=121068371

A	core/src/main/java/com/google/errorprone/bugpatterns/inject/dagger/UseBinds.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/dagger/UseBindsTest.java

commit d4b291e19a40d3292c4fa28ce2fec009363f3e76
Author: cushon <cushon@google.com>
Date:   Thu Apr 28 15:26:38 2016 -0700

    Allow -XDcompilePolicy=simple
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=121063458

M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java

commit b7204489eeb708d8a4a0784c18b28016997fc15d
Author: awturner <awturner@google.com>
Date:   Thu Apr 28 00:58:54 2016 -0700

    Handle no-receiver expressions in ASTHelpers.getReceiver(ExpressionTree)
    
    e.g. invocations of
    - instance methods on self
    - static methods on own class
    - statically-imported methods
    
    RELNOTES: None.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=120995869

M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/test/java/com/google/errorprone/util/ASTHelpersTest.java

commit b3a20389d212ffd2de249cd110f5263d16bd0c07
Author: cushon <cushon@google.com>
Date:   Wed Apr 27 17:12:14 2016 -0700

    Discourage constructors of primitive wrapper objects
    
    RELNOTES: new check for constructors of primitive wrapper objects
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=120971970

A	core/src/main/java/com/google/errorprone/bugpatterns/BoxedPrimitiveConstructor.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/BoxedPrimitiveConstructorTest.java
A	docs/bugpattern/BoxedPrimitiveConstructor.md

commit e8b0995531f114dc7a19428c6663dcdedfe37ec9
Author: cushon <cushon@google.com>
Date:   Tue Apr 26 17:06:41 2016 -0700

    Add Replacement.length()
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=120869126

M	core/src/main/java/com/google/errorprone/fixes/Replacement.java

commit be8ec95accae774aacc464770c36f31c78a5e932
Author: bangert <bangert@google.com>
Date:   Tue Apr 26 16:03:31 2016 -0700

    A generic checker for restricted APIs
    
    (e.g. insecure crypto APIs, things that should be refactored away).
    
    This generalizes the deprecation-like mechanism used in the pluggable
    type checker of allowing legacy callers with an annotation and providing
    a separate annotation for reviewed callers.
    
    RELNOTES: Generic checker to restrict APIs to white-listed call-sites.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=120863028

A	annotations/src/main/java/com/google/errorprone/annotations/RestrictedApi.java
A	core/src/main/java/com/google/errorprone/bugpatterns/RestrictedApiChecker.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/RestrictedApiCheckerTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/RestrictedApiMethods.java

commit ebba7abca7d9160df3b4020e9db4b99c4d52cb42
Author: cpovirk <cpovirk@google.com>
Date:   Tue Apr 26 11:46:59 2016 -0700

    Remove static imports that duplicate non-static imports.
    
    RELNOTES: none.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=120835783

M	core/src/main/java/com/google/errorprone/bugpatterns/inject/InvalidTargetingOnScopingAnnotation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/MoreThanOneScopeAnnotationOnClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/ScopeAnnotationOnInterfaceOrAbstractClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/inject/ScopeOrQualifierAnnotationRetention.java

commit 3d5016d95e2f8394fa41682f830ef382a9646d5b
Author: cpovirk <cpovirk@google.com>
Date:   Tue Apr 26 06:43:08 2016 -0700

    Catch no-op calls to Throwables.propagateIfPossible
    
    RELNOTES: Catch no-op calls to Throwables.propagateIfPossible(e)
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=120808298

A	core/src/main/java/com/google/errorprone/bugpatterns/ThrowIfUncheckedKnownChecked.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/ThrowIfUncheckedKnownCheckedTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ThrowIfUncheckedKnownCheckedTestNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ThrowIfUncheckedKnownCheckedTestPositiveCases.java

commit cf49b947571bec33256076ac43bba73a5a91449e
Author: cpovirk <cpovirk@google.com>
Date:   Mon Apr 25 14:05:11 2016 -0700

    In a case where the returned nullness value is never used, hide it in
    the superclass boilerplate, and make it look more obviously bogus.
    
    follow up to 947ce04b042d82fe3d3a8cb2c2658cc726efc516
    
    RELNOTES: none.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=120744571

M	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/AbstractNullnessPropagationTransfer.java
M	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java

commit a6e69bdceda74bdcb0c6b73cb96a8053a009f369
Author: eaftan <eaftan@google.com>
Date:   Mon Apr 25 12:27:40 2016 -0700

    Make Dagger ProvidesNull check an error.
    
    RELNOTES: New check for @Provides methods that return null
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=120734133

M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit fa5425a1d60481336c2fb2a2d03da6506b2c8b23
Author: ronshapiro <ronshapiro@google.com>
Date:   Mon Apr 25 09:37:03 2016 -0700

    Update Dagger info in poms
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=120714957

M	core/pom.xml

commit 118454ad6e161973ba0e6946d25efc53b5e23821
Author: yanx <yanx@google.com>
Date:   Wed Apr 20 11:53:14 2016 -0700

    Add isSubtypeOf(Class)
    
    RELNOTES: N/A
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=120360368

M	core/src/main/java/com/google/errorprone/matchers/Matchers.java

commit c4dc5da17b63e517b587bedb8606fb91089b7d21
Author: cushon <cushon@google.com>
Date:   Mon Apr 18 19:50:20 2016 -0700

    Improve Replacement handling
    
    * Allow adjacent but non-overlapping replacements.
    * Disallow overlapping replacements in SuggestedFix#getReplacements
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=120188283

M	core/src/main/java/com/google/errorprone/apply/DescriptionBasedDiff.java
M	core/src/main/java/com/google/errorprone/fixes/Replacement.java
A	core/src/main/java/com/google/errorprone/fixes/Replacements.java
M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java
A	core/src/test/java/com/google/errorprone/fixes/ReplacementsTest.java

commit 505514f832fd2db89fbf4e7a9cd1d4c4b9d954e4
Author: cushon <cushon@google.com>
Date:   Thu Apr 14 15:02:45 2016 -0700

    Validate SuggestedFix positions
    
    Certain empty or synthetic tree nodes report their position as -1, and
    can't be used to generate fixes.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=119895287

M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java

commit 5b7cb15df8eb46f804444b0dd51f8436cc77eee4
Author: gak <gak@google.com>
Date:   Thu Apr 14 10:37:41 2016 -0700

    Fix 2 package declarations in test data
    
    that were missed by the automated refactoring.
    
    DELTA=2 (0 added, 0 deleted, 2 changed)
    DELTA_BY_EXTENSION=java=2
    RELNOTES:
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=119866123

M	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/InjectedConstructorAnnotationsNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/InjectedConstructorAnnotationsPositiveCases.java

commit 74369314a2523f7bb195468f05cf2fd0a0ab5833
Author: mwacker <mwacker@google.com>
Date:   Wed Apr 13 22:16:17 2016 -0700

    JUnit 3 floating-point assertEquals() ErrorProne check
    
    RELNOTES: new check for floating-point assertEquals() calls without an error tolerance in JUnit 3
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=119818988

A	core/src/main/java/com/google/errorprone/bugpatterns/JUnit3FloatingPointComparisonWithoutDelta.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/JUnit3FloatingPointComparisonWithoutDeltaTest.java

commit a2a8a5514dd6a8177a991bcec81db6c58baef993
Author: cpovirk <cpovirk@google.com>
Date:   Wed Apr 13 09:04:40 2016 -0700

    BigDoubleValueOfLiteralDouble -> BigDecimalLiteralDouble.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=119751676

M	core/src/main/java/com/google/errorprone/bugpatterns/BigDecimalLiteralDouble.java

commit 043642659940a8bdbc3489a9720db08c81658d29
Author: gak <gak@google.com>
Date:   Tue Apr 12 12:40:46 2016 -0700

    Move bug patterns related to dependency injection
    
    into an "inject" subpackage
    
    Checks specifically for guice and dagger have been moved to the guice
    and dagger subpackages respectively.
    
    Any patterns that were previously prefixed with "Inject", "Guice" or
    "Dagger" no longer have it since it is redundant with the package name.
    
    RELNOTES: Move bug patterns related to dependency injection into an "inject" subpackage.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=119667870

D	core/src/main/java/com/google/errorprone/bugpatterns/DaggerProvidesNull.java
D	core/src/main/java/com/google/errorprone/bugpatterns/GuiceAssistedInjectScoping.java
D	core/src/main/java/com/google/errorprone/bugpatterns/GuiceAssistedParameters.java
D	core/src/main/java/com/google/errorprone/bugpatterns/GuiceInjectOnFinalField.java
D	core/src/main/java/com/google/errorprone/bugpatterns/GuiceOverridesGuiceInjectableMethod.java
D	core/src/main/java/com/google/errorprone/bugpatterns/GuiceOverridesJavaxInjectableMethod.java
D	core/src/main/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnConstructors.java
D	core/src/main/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnSameConstructor.java
D	core/src/main/java/com/google/errorprone/bugpatterns/InjectInvalidTargetingOnScopingAnnotation.java
D	core/src/main/java/com/google/errorprone/bugpatterns/InjectJavaxInjectOnAbstractMethod.java
D	core/src/main/java/com/google/errorprone/bugpatterns/InjectJavaxInjectOnFinalField.java
D	core/src/main/java/com/google/errorprone/bugpatterns/InjectMoreThanOneInjectableConstructor.java
D	core/src/main/java/com/google/errorprone/bugpatterns/InjectMoreThanOneQualifier.java
D	core/src/main/java/com/google/errorprone/bugpatterns/InjectMoreThanOneScopeAnnotationOnClass.java
D	core/src/main/java/com/google/errorprone/bugpatterns/InjectOverlappingQualifierAndScopeAnnotation.java
D	core/src/main/java/com/google/errorprone/bugpatterns/InjectScopeAnnotationOnInterfaceOrAbstractClass.java
D	core/src/main/java/com/google/errorprone/bugpatterns/InjectScopeOrQualifierAnnotationRetention.java
D	core/src/main/java/com/google/errorprone/bugpatterns/InjectedConstructorAnnotations.java
A	core/src/main/java/com/google/errorprone/bugpatterns/inject/AssistedInjectAndInjectOnConstructors.java
A	core/src/main/java/com/google/errorprone/bugpatterns/inject/AssistedInjectAndInjectOnSameConstructor.java
A	core/src/main/java/com/google/errorprone/bugpatterns/inject/InjectedConstructorAnnotations.java
A	core/src/main/java/com/google/errorprone/bugpatterns/inject/InvalidTargetingOnScopingAnnotation.java
A	core/src/main/java/com/google/errorprone/bugpatterns/inject/JavaxInjectOnAbstractMethod.java
A	core/src/main/java/com/google/errorprone/bugpatterns/inject/JavaxInjectOnFinalField.java
A	core/src/main/java/com/google/errorprone/bugpatterns/inject/MoreThanOneInjectableConstructor.java
A	core/src/main/java/com/google/errorprone/bugpatterns/inject/MoreThanOneQualifier.java
A	core/src/main/java/com/google/errorprone/bugpatterns/inject/MoreThanOneScopeAnnotationOnClass.java
A	core/src/main/java/com/google/errorprone/bugpatterns/inject/OverlappingQualifierAndScopeAnnotation.java
A	core/src/main/java/com/google/errorprone/bugpatterns/inject/ScopeAnnotationOnInterfaceOrAbstractClass.java
A	core/src/main/java/com/google/errorprone/bugpatterns/inject/ScopeOrQualifierAnnotationRetention.java
A	core/src/main/java/com/google/errorprone/bugpatterns/inject/dagger/ProvidesNull.java
A	core/src/main/java/com/google/errorprone/bugpatterns/inject/dagger/package-info.java
A	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/AssistedInjectScoping.java
A	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/AssistedParameters.java
A	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/InjectOnFinalField.java
A	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/OverridesGuiceInjectableMethod.java
A	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/OverridesJavaxInjectableMethod.java
A	core/src/main/java/com/google/errorprone/bugpatterns/inject/guice/package-info.java
A	core/src/main/java/com/google/errorprone/bugpatterns/inject/package-info.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
D	core/src/test/java/com/google/errorprone/bugpatterns/DaggerProvidesNullTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/GuiceAssistedInjectScopingTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/GuiceAssistedParametersTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/GuiceInjectOnFinalFieldTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/GuiceOverridesGuiceInjectableMethodTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/GuiceOverridesJavaxInjectableMethodTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnConstructorsTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnSameConstructorTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/InjectInvalidTargetingOnScopingAnnotationTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/InjectJavaxInjectOnAbstractMethodTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/InjectJavaxInjectOnFinalFieldTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/InjectMoreThanOneInjectableConstructorTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/InjectMoreThanOneQualifierTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/InjectMoreThanOneScopeAnnotationOnClassTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/InjectOverlappingQualifierAndScopeAnnotationTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/InjectScopeAnnotationOnInterfaceOrAbstractClassTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/InjectScopeOrQualifierAnnotationRetentionTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/InjectedConstructorAnnotationsTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/AssistedInjectAndInjectOnConstructorsTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/AssistedInjectAndInjectOnSameConstructorTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/InjectedConstructorAnnotationsTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/InvalidTargetingOnScopingAnnotationTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/JavaxInjectOnAbstractMethodTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/JavaxInjectOnFinalFieldTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/MoreThanOneInjectableConstructorTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/MoreThanOneQualifierTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/MoreThanOneScopeAnnotationOnClassTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/OverlappingQualifierAndScopeAnnotationTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/ScopeAnnotationOnInterfaceOrAbstractClassTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/ScopeOrQualifierAnnotationRetentionTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/dagger/ProvidesNullTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/AssistedInjectScopingTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/AssistedParametersTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/InjectOnFinalFieldTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/OverridesGuiceInjectableMethodTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/OverridesJavaxInjectableMethodTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/testdata/AssistedInjectScopingNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/testdata/AssistedInjectScopingPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/testdata/AssistedParametersNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/testdata/AssistedParametersPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/testdata/InjectOnFinalFieldNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/testdata/InjectOnFinalFieldPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/testdata/OverridesGuiceInjectableMethodNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/testdata/OverridesGuiceInjectableMethodPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/testdata/OverridesJavaxInjectableMethodNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/guice/testdata/OverridesJavaxInjectableMethodPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/AssistedInjectAndInjectOnConstructorsNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/AssistedInjectAndInjectOnConstructorsPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/AssistedInjectAndInjectOnSameConstructorNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/AssistedInjectAndInjectOnSameConstructorPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/InjectedConstructorAnnotationsNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/InjectedConstructorAnnotationsPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/InvalidTargetingOnScopingAnnotationNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/InvalidTargetingOnScopingAnnotationPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/JavaxInjectOnAbstractMethodNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/JavaxInjectOnAbstractMethodPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/JavaxInjectOnFinalFieldNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/JavaxInjectOnFinalFieldPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/MoreThanOneInjectableConstructorNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/MoreThanOneInjectableConstructorPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/MoreThanOneQualifierNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/MoreThanOneQualifierPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/MoreThanOneScopeAnnotationOnClassNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/MoreThanOneScopeAnnotationOnClassPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/OverlappingQualifierAndScopeAnnotationNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/OverlappingQualifierAndScopeAnnotationPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/ScopeAnnotationOnInterfaceOrAbstractClassNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/ScopeAnnotationOnInterfaceOrAbstractClassPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/ScopeOrQualifierAnnotationRetentionNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/inject/testdata/ScopeOrQualifierAnnotationRetentionPositiveCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/GuiceAssistedInjectScopingNegativeCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/GuiceAssistedInjectScopingPositiveCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/GuiceAssistedParametersNegativeCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/GuiceAssistedParametersPositiveCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/GuiceInjectOnFinalFieldNegativeCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/GuiceInjectOnFinalFieldPositiveCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/GuiceOverridesGuiceInjectableMethodNegativeCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/GuiceOverridesGuiceInjectableMethodPositiveCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/GuiceOverridesJavaxInjectableMethodNegativeCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/GuiceOverridesJavaxInjectableMethodPositiveCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectAssistedInjectAndInjectOnConstructorsNegativeCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectAssistedInjectAndInjectOnConstructorsPositiveCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectAssistedInjectAndInjectOnSameConstructorNegativeCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectAssistedInjectAndInjectOnSameConstructorPositiveCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectInvalidTargetingOnScopingAnnotationNegativeCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectInvalidTargetingOnScopingAnnotationPositiveCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectJavaxInjectOnAbstractMethodNegativeCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectJavaxInjectOnAbstractMethodPositiveCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectJavaxInjectOnFinalFieldNegativeCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectJavaxInjectOnFinalFieldPositiveCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectMoreThanOneInjectableConstructorNegativeCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectMoreThanOneInjectableConstructorPositiveCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectMoreThanOneQualifierNegativeCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectMoreThanOneQualifierPositiveCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectMoreThanOneScopeAnnotationOnClassNegativeCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectMoreThanOneScopeAnnotationOnClassPositiveCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectOverlappingQualifierAndScopeAnnotationNegativeCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectOverlappingQualifierAndScopeAnnotationPositiveCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectScopeAnnotationOnInterfaceOrAbstractClassNegativeCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectScopeAnnotationOnInterfaceOrAbstractClassPositiveCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectScopeOrQualifierAnnotationRetentionNegativeCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectScopeOrQualifierAnnotationRetentionPositiveCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectedConstructorAnnotationsNegativeCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectedConstructorAnnotationsPositiveCases.java

commit 9a1dfd47a018f1ec577688be2ebce2041cadada2
Author: cushon <cushon@google.com>
Date:   Fri Apr 8 19:34:42 2016 -0700

    Allow ClassName to be suppressed on individual classes
    
    ClassName currently cannot be disabled using @SuppressWarnings because
    the enclosing element is a package declaration, and @SuppressWarnings
    doesn't work on packages.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=119431046

M	core/src/main/java/com/google/errorprone/bugpatterns/ClassName.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ClassNameTest.java
A	docs/bugpattern/ClassName.md

commit 3bda38642a22bdf52668fbb1eecbdc74492d1fae
Author: endobson <endobson@google.com>
Date:   Fri Apr 8 18:12:30 2016 -0700

    Add an errorprone check for literals supplied to BigDecimal.
    
    new BigDecimal(double) => new BigDecimal(String) | new BigDecimal(long)
    BigDecimal.valueOf(double) => new BigDecimal(String) | new BigDecimal(long)
    
    where the string is computed from the source of the literal.
    
    RELNOTES: new check for new BigDecimal(double) and BigDecimal.valueOf(double).
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=119428113

A	core/src/main/java/com/google/errorprone/bugpatterns/BigDecimalLiteralDouble.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/BigDecimalLiteralDoubleTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/BigDecimalLiteralDoubleNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/BigDecimalLiteralDoublePositiveCases.java
A	docs/bugpattern/BigDecimalLiteralDouble.md

commit 6e697f8d9fdbbd9c5f25f719357a9e9e0924f735
Author: yanx <yanx@google.com>
Date:   Fri Apr 8 18:12:00 2016 -0700

    Add hasAnnotation(Class) and typeFromClass(Class)
    
    RELNOTES:
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=119428091

M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/suppliers/Suppliers.java

commit 6644ee7c093263671c5f3ef62c2b87af1e6014c2
Author: eaftan <eaftan@google.com>
Date:   Fri Apr 8 16:52:06 2016 -0700

    Remove unused parameter from ASTHelpers.isJUnitTestCode.
    
    RELNOTES: None
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=119423083

M	core/src/main/java/com/google/errorprone/bugpatterns/android/HardCodedSdCardPath.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java

commit 38276caed4277224638eec92130d42ccd82edc2e
Author: cushon <cushon@google.com>
Date:   Fri Apr 8 16:13:58 2016 -0700

    Improve getTypeFromString javadoc
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=119419989

M	core/src/main/java/com/google/errorprone/VisitorState.java

commit 592aa187c6c285316386bd4de37754700f2d0ea5
Author: cushon <cushon@google.com>
Date:   Fri Apr 8 14:23:52 2016 -0700

    Rename Annotation to AnnotationMatcher
    
    To avoid competing with java.lang.annotation.Annotation.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=119409273

D	core/src/main/java/com/google/errorprone/matchers/Annotation.java
A	core/src/main/java/com/google/errorprone/matchers/AnnotationMatcher.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
A	core/src/test/java/com/google/errorprone/matchers/AnnotationMatcherTest.java
D	core/src/test/java/com/google/errorprone/matchers/AnnotationTest.java

commit 4a5b4c403e6780f190a313657613d0b5e846950c
Author: eaftan <eaftan@google.com>
Date:   Thu Apr 7 16:53:11 2016 -0700

    Remove unused parameter from ASTHelpers.getConstructors.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=119323799

M	core/src/main/java/com/google/errorprone/bugpatterns/android/FragmentNotInstantiable.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java

commit 6bee7870ff4c124a5c87a9907e6340f68b1bb3ef
Author: lowasser <lowasser@google.com>
Date:   Thu Apr 7 16:32:28 2016 -0700

    New check for bad compareTo/compare methods
    
    Detects contract-violating compareTo/compare implementations that are
    not properly symmetric.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=119321839

A	core/src/main/java/com/google/errorprone/bugpatterns/ComparisonContractViolated.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/ComparisonContractViolatedTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ComparisonContractViolatedNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ComparisonContractViolatedPositiveCases.java

commit 7391306b7fae62695d89b083829f282e5386e0d0
Author: cushon <cushon@google.com>
Date:   Thu Apr 7 10:34:10 2016 -0700

    Fix TypeParameterUnusedInFormals bug
    
    Check that the unused type parameter is declared by the method.
    Previously this was handled when computing the fix, but the
    suggested fix was removed in c6c8963927a2da4c18eae81c9d207ed9a4aa3d4f
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=119282059

M	core/src/main/java/com/google/errorprone/bugpatterns/TypeParameterUnusedInFormals.java
M	core/src/test/java/com/google/errorprone/bugpatterns/TypeParameterUnusedInFormalsTest.java

commit 03033090832b7a1c7bfe6f017fed6535bb0212fd
Author: eaftan <eaftan@google.com>
Date:   Wed Apr 6 17:26:05 2016 -0700

    Store NullnessAnalysis instance in the Context
    
    instead of as instance state for each check, so that all checkers can
    share the same instance, and results don't have to be recomputed for
    each one.
    
    RELNOTES: None
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=119220447

M	core/src/main/java/com/google/errorprone/VisitorState.java
M	core/src/main/java/com/google/errorprone/bugpatterns/OptionalEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StringEquality.java
A	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/MethodInfo.java
M	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessAnalysis.java
M	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/matchers/NullnessMatcher.java

commit 578867b3f782bc4c23c083100a89128a4095b068
Author: eatnumber1 <eatnumber1@google.com>
Date:   Wed Apr 6 08:34:35 2016 -0700

    Add a java.util.regex.Pattern constructor to StringLiteral
    
    enables matchers which match based upon whether a Pattern matches.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=119163107

M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/matchers/StringLiteral.java

commit c6c8963927a2da4c18eae81c9d207ed9a4aa3d4f
Author: cushon <cushon@google.com>
Date:   Tue Apr 5 20:37:33 2016 -0700

    Remove suggested fix for TypeParameterUnusedInFormals
    
    The suggested fix was meant to illustrate the problem, but it isn't an
    ideal fix and often doesn't compile without additional refactoring.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=119121903

M	core/src/main/java/com/google/errorprone/bugpatterns/TypeParameterUnusedInFormals.java
M	core/src/test/java/com/google/errorprone/bugpatterns/TypeParameterUnusedInFormalsTest.java

commit 01a77b4615383d6da273873e170590da58b323e4
Author: avenet <avenet@google.com>
Date:   Tue Apr 5 16:42:20 2016 -0700

    Implement the new Android check HardCodedSdCardPath
    
    ensures that there is no hard-coded reference to "/sdcard". This is a
    straight adaptation of the SdCardPath check of Android Lint
    (http://tools.android.com/tips/lint-checks).
    
    RELNOTES: new Android check hard-coded reference to "/sdcard"
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=119106099

A	core/src/main/java/com/google/errorprone/bugpatterns/android/HardCodedSdCardPath.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/android/HardCodedSdCardPathTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/android/testdata/HardCodedSdCardPathNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/android/testdata/HardCodedSdCardPathPositiveCases.java
A	docs/bugpattern/android/HardCodedSdCardPath.md

commit 73a22d4d0458c54c958cffda6e219aeef02563f4
Author: eaftan <eaftan@google.com>
Date:   Tue Apr 5 16:19:34 2016 -0700

    Use AutoValue for value types in DataFlow class.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=119103876

M	core/src/main/java/com/google/errorprone/dataflow/DataFlow.java

commit 79ac0293521203fc455d9c1d17c985506f4c4685
Author: cushon <cushon@google.com>
Date:   Sat Apr 2 18:05:34 2016 -0700

    Untypo MissingFail docs
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=118868607

M	docs/bugpattern/MissingFail.md

commit 78f0f56ed5fb3f53421861b541fb94eb7c48ad85
Author: bshumate <bshumate@google.com>
Date:   Thu Mar 31 13:42:30 2016 -0700

    Update link in @Var documentation
    
    to point to the correct URL
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=118713784

M	annotations/src/main/java/com/google/errorprone/annotations/Var.java

commit bf822abb3bf7757bfbd9623bce0fc2e0bd2a582a
Author: cushon <cushon@google.com>
Date:   Wed Mar 30 12:11:00 2016 -0700

    Make @Immutable inherited
    
    We still enforce that subtypes of immutable types are also immutable,
    but it's unnecessary to require that subtypes be explicitly annotated.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=118598640

M	annotations/src/main/java/com/google/errorprone/annotations/Immutable.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableCheckerTest.java

commit 839041111529c4d73891d160a6d21d40c2dcdf6b
Author: cushon <cushon@google.com>
Date:   Wed Mar 30 12:01:02 2016 -0700

    Fix crash during error reporting
    
    If ErrorProneScanner.scan(Tree, VisitorState) is called directly, the
    TreePath may not have been initialized when it handles a crash.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=118597461

M	core/src/main/java/com/google/errorprone/scanner/ErrorProneScanner.java

commit 5eeebb7e7e2fe524309ae628732ed9a61f25db0c
Author: cushon <cushon@google.com>
Date:   Wed Mar 30 12:00:00 2016 -0700

    Add missing @Override annotations
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=118597362

M	core/src/main/java/com/google/errorprone/bugpatterns/SizeGreaterThanOrEqualsZero.java
M	core/src/main/java/com/google/errorprone/refaster/Unifier.java
M	core/src/test/java/com/google/errorprone/matchers/DescendantOfTransitiveTest.java

commit 416fb5671d4ada6b67e1694eb47fe550fbd75e11
Author: sfoy <sfoy@google.com>
Date:   Tue Mar 29 13:29:08 2016 -0700

    Improve test diagnostics
    
    refuse to overwrite inputs with outputs; instead, assert that input and
    output files are new.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=118497313

M	core/src/test/java/com/google/errorprone/BugCheckerRefactoringTestHelper.java
M	core/src/test/java/com/google/errorprone/ErrorProneInMemoryFileManager.java

commit 36ec0a8f6985ee496d69b40c0e334242e1d01466
Author: cushon <cushon@google.com>
Date:   Fri Mar 25 17:59:09 2016 -0700

    Re-order MissingCasesInEnumSwitch fixes
    
    Adding the missing cases has the most educational value, even if it
    isn't always the right fix.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=118256252

M	core/src/main/java/com/google/errorprone/bugpatterns/MissingCasesInEnumSwitch.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MissingCasesInEnumSwitchTest.java

commit 46b20c757399e3b3c584966ea46638c68d64c5b1
Author: cushon <cushon@google.com>
Date:   Fri Mar 25 17:06:04 2016 -0700

    Untypo MissingCasesInEnumSwitch description
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=118252856

M	core/src/main/java/com/google/errorprone/bugpatterns/MissingCasesInEnumSwitch.java

commit 4212acee20ea42f7aebb98ff2c4f30f6be626dcc
Author: cushon <cushon@google.com>
Date:   Fri Mar 25 10:50:47 2016 -0700

    Cite the style guide in the PackageLocation docs
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=118218480

M	docs/bugpattern/PackageLocation.md

commit 49b1b13df96b60365e956a81e13271c5b5d00b9e
Merge: 739c6c1 df0293e
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Tue Mar 29 12:16:13 2016 -0700

    Merge pull request #404 from google/add_license_to_pom
    
    Add license to POM file.

commit df0293ecfcbf89e18c580d88d2a94c40d59d740b
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Mar 29 11:43:53 2016 -0700

    Add license to POM file.
    
    Fixes #403

M	pom.xml

commit 739c6c155827209fcbee7f056381415e31094768
Author: Kevin Bierhoff <kmb@google.com>
Date:   Wed Mar 23 16:55:24 2016 -0700

    reflect error-prone release 2.0.9 in examples

M	examples/ant/ant_fork/build.xml
M	examples/gradle/build.gradle
M	examples/maven/pom.xml

commit 09b90a92b225f4168ad2210666170da0a26d351a
Author: Kevin Bierhoff <kmb@google.com>
Date:   Wed Mar 23 16:10:13 2016 -0700

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	annotations/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit a7be0da73e5446494453e116d367901016723cb9
Author: Kevin Bierhoff <kmb@google.com>
Date:   Wed Mar 23 16:09:56 2016 -0700

    [maven-release-plugin] prepare release v2.0.9

M	annotation/pom.xml
M	annotations/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit 4f2f4ff6a9ea5c86e60e79dcc78e9f28b06a9885
Author: jsjeon <jsjeon@google.com>
Date:   Tue Mar 22 18:16:23 2016 -0700

    New check to warn if both Iterable and Iterator are implemented.
    
    RELNOTES: New check to warn if both Iterable and Iterator are
    implemented.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117887299

A	core/src/main/java/com/google/errorprone/bugpatterns/IterableAndIterator.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/IterableAndIteratorTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/IterableAndIteratorNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/IterableAndIteratorPositiveCases.java

commit 14fffffe17fbce6f70de6b6d94c07480b218d19f
Author: cushon <cushon@google.com>
Date:   Tue Mar 22 14:24:39 2016 -0700

    Special case for loop variables in VarChecker
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117864072

M	core/src/main/java/com/google/errorprone/bugpatterns/VarChecker.java
M	core/src/test/java/com/google/errorprone/bugpatterns/VarCheckerTest.java

commit 8bec8c3db05f90d062d3b923d8916d1ad506207c
Author: erikbodzsar <erikbodzsar@google.com>
Date:   Tue Mar 22 12:46:46 2016 -0700

    Change the behavior of ChildMultiMatcher.MatchType.ALL
    
    to successfully match empty collections of trees, regardless of the
    specified matcher.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117852855

M	core/src/main/java/com/google/errorprone/matchers/ChildMultiMatcher.java
M	core/src/test/java/com/google/errorprone/matchers/MethodHasParametersTest.java

commit a277aef7352069c1251d30041f7989f5bcfcd0ac
Author: cushon <cushon@google.com>
Date:   Tue Mar 22 11:36:10 2016 -0700

    Add suggested fixes to MissingCasesInEnumSwitch
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117845252

M	core/src/main/java/com/google/errorprone/bugpatterns/MissingCasesInEnumSwitch.java
M	core/src/main/java/com/google/errorprone/fixes/Replacement.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MissingCasesInEnumSwitchTest.java

commit 672a344903588629c97a802e354c3fe6a282e0c0
Author: cpovirk <cpovirk@google.com>
Date:   Tue Mar 22 11:07:50 2016 -0700

    Test assignment to catch() variable.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117841559

M	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/testdata/NullnessPropagationTransferCases8.java

commit 06b7c8c2acc983903696d9c6f790f56cc00deae2
Author: cpovirk <cpovirk@google.com>
Date:   Mon Mar 21 14:19:52 2016 -0700

    Permit variables of type RESOURCE_VARIABLE.
    
    During Google-wide testing, the new checks of the last CL revealed that
    I missed this case (and probably only this case).
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117753627

M	core/src/main/java/com/google/errorprone/dataflow/LocalStore.java
M	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/testdata/NullnessPropagationTransferCases8.java

commit 69cb5a5fa8767ee6c4908b7c9f4c5c1e16dce681
Author: cushon <cushon@google.com>
Date:   Mon Mar 21 14:12:57 2016 -0700

    Disable 5dfa100bcc9fa3c34d01fd198e335cc8d945cdda until the cleanup is done
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117752818

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinder.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByChecker.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByCheckerTest.java

commit 2ceda086bfe9f44b8ee13ca876b8d34285d4166b
Author: cushon <cushon@google.com>
Date:   Mon Mar 21 14:02:56 2016 -0700

    Disable 105d9967c454cfffb4177d06aa4c464fcd9a72c0 until the cleanup is done
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117751555

M	core/src/main/java/com/google/errorprone/bugpatterns/TryFailThrowable.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/TryFailThrowablePositiveCases.java

commit 947ce04b042d82fe3d3a8cb2c2658cc726efc516
Author: cpovirk <cpovirk@google.com>
Date:   Mon Mar 21 12:30:22 2016 -0700

    Recognize that caught exceptions are non-null.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117741730

M	core/src/main/java/com/google/errorprone/dataflow/LocalStore.java
M	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/AbstractNullnessPropagationTransfer.java
M	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java
A	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/testdata/NullnessPropagationTransferCases8.java

commit 54ee4b5d4ba8d8c0c79429b3a0c659b7de41eb40
Author: cushon <cushon@google.com>
Date:   Fri Mar 18 15:07:09 2016 -0700

    Add a getter for raw Description messages
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117588763

M	core/src/main/java/com/google/errorprone/matchers/Description.java

commit d4cb1813b61f490f2a4850ef4dedc0a680f4b5c6
Author: cushon <cushon@google.com>
Date:   Fri Mar 18 12:30:28 2016 -0700

    Disallow modifications to static fields guarded by instance locks
    
    RELNOTES: New check for static writes guarded by instance locks
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117573762

A	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/StaticGuardedByInstance.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/StaticGuardedByInstanceTest.java
A	docs/bugpattern/StaticGuardedByInstance.md

commit 105d9967c454cfffb4177d06aa4c464fcd9a72c0
Author: cpovirk <cpovirk@google.com>
Date:   Fri Mar 18 06:58:53 2016 -0700

    Extend TryFailThrowable to handle catching Error, AssertionError, and
    AssertionFailedError.
    
    Fixes google/error-prone#393
    
    RELNOTES: TryFailThrowable now runs on catch() blocks for Error, AssertionError, and AssertionFailedError.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117543618

M	core/src/main/java/com/google/errorprone/bugpatterns/TryFailThrowable.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/TryFailThrowablePositiveCases.java

commit 5dfa100bcc9fa3c34d01fd198e335cc8d945cdda
Author: cushon <cushon@google.com>
Date:   Thu Mar 17 18:22:54 2016 -0700

    Fix guarded by expression resolution bugs
    
    Handle method selects, and don't ignore expressions where the base can't
    be resolved.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117508407

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinder.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByExpression.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzer.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByCheckerTest.java

commit fe43e06a2e5575da2069a26618ba11feaf5170e7
Author: cushon <cushon@google.com>
Date:   Wed Mar 16 11:33:55 2016 -0700

    Improve paren handling in HeldLockAnalyzer
    
    Works around a compilation ordering issue with multiple top-level classes.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117364293

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinder.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzer.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByCheckerTest.java

commit 5299ad1919ebb4fa831f0c4c30d9a3b7e5668c83
Author: cushon <cushon@google.com>
Date:   Tue Mar 15 21:49:51 2016 -0700

    Add regression test
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117309642

M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByCheckerTest.java

commit cdba2562847039c6a43f35deae27ccf5939c7930
Author: cushon <cushon@google.com>
Date:   Mon Mar 14 17:14:39 2016 -0700

    Improve error message for synchronization on mis-matched enclosing classes
    
    Previously: "should be guarded by 'Outer.this.lock'; instead found:
    'Outer.this.lock'"
    
    Now: "should be guarded by 'lock' in enclosing instance 'Outer.this' of 'x',
    which is not accessible in this scope; instead found: 'Outer.this.lock'"
    
    Also use '<base>.this$0' when pretty-printing outer class accesses on
    expressions other than 'this'.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117190163

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByExpression.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByCheckerTest.java

commit ee3be09d3599b090089484441c19c5f7c066f3e8
Author: bangert <bangert@google.com>
Date:   Mon Mar 14 16:39:04 2016 -0700

    Don't discard prefixWith fixes (replacements that don't remove tests) in
    DescriptionBasedDiff
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117186003

M	core/src/main/java/com/google/errorprone/apply/DescriptionBasedDiff.java
M	core/src/test/java/com/google/errorprone/refaster/DescriptionBasedDiffTest.java

commit 35af48b4534812f1beadf286f7999bdfbc8e2d63
Author: glebm <glebm@google.com>
Date:   Mon Mar 14 04:36:10 2016 -0700

    Expand the PackageLocation suppression docs.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117122172

M	docs/bugpattern/PackageLocation.md

commit 02ff935684d5c1506d39eefce3cbca895264ba1a
Author: cushon <cushon@google.com>
Date:   Sat Mar 5 09:19:56 2016 -0800

    Don't qualify type variable names
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=116452505

M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java
M	core/src/test/java/com/google/errorprone/fixes/SuggestedFixTest.java

commit c218bfdaf53b594ea758163868cc3b0786bb953d
Author: kak <kak@google.com>
Date:   Thu Mar 3 13:16:53 2016 -0800

    Update CheckReturnValue docs re. try/execute/fail/catch pattern.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=116284782

M	docs/bugpattern/CheckReturnValue.md

commit 488ec35cdf53b7ad82c5aeafd84ff68c42b2dff9
Author: gak <gak@google.com>
Date:   Tue Mar 1 12:57:42 2016 -0800

    Put DaggerProvidesNull in alphabetical order.
    
    R_FUTURE=eaftan
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=116039307

M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit 230f4b2f36f91bb59d74a59b02716738e9901c17
Author: cushon <cushon@google.com>
Date:   Mon Feb 29 14:14:22 2016 -0800

    Update @Var documentation to reflect
    1eff97c84bec450a7c6ab84726911a463e4e7222
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=115901319

M	annotations/src/main/java/com/google/errorprone/annotations/Var.java
M	docs/bugpattern/Var.md

commit 22771457f9288c4fa41aeede0833d2d44d6a812a
Author: eaftan <eaftan@google.com>
Date:   Mon Feb 29 11:20:32 2016 -0800

    Properly handle return statements without expressions, e.g. "return;".
    
    RELNOTES: Bug fix for DaggerProvidesNull.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=115876505

M	core/src/main/java/com/google/errorprone/bugpatterns/DaggerProvidesNull.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DaggerProvidesNullTest.java

commit ea3af9d75f74117e79e28050aa6f3e9fbfc80e3c
Author: lowasser <lowasser@google.com>
Date:   Fri Feb 26 12:40:27 2016 -0800

    Eliminate a potential NullPointerException source in ControlFlowVisitor.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=115698199

M	core/src/main/java/com/google/errorprone/refaster/ControlFlowVisitor.java

commit 509b158325472c6cc35c5a7d140a597806c71b08
Author: cushon <cushon@google.com>
Date:   Wed Feb 24 11:58:40 2016 -0800

    Make MockitoCast an error
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=115477357

M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit 9a72244eacf1dcc7767da4f6f983574e16d39cfc
Author: cgdecker <cgdecker@google.com>
Date:   Tue Feb 23 11:47:01 2016 -0800

    This change replaces usages of static final fields on CharMatcher, e.g.
    CharMatcher.WHITESPACE, with the equivalent static factory method, e.g.
    CharMatcher.whitespace().
    
    The change is being made so that we can remove the static final fields,
    primarily because they must be eagerly initialized, causing many
    implementation classes (which may be unnecessary) to be loaded. This is
    a significant performance problem on Android. Using methods allows
    implementation classes to only be loaded when actually needed, as well
    as matching our long-standing preference for factory methods over public
    fields.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=115366102

M	core/src/test/java/com/google/errorprone/refaster/TemplateIntegrationTest.java

commit 3c576845449bec4ed70d6afe262451b9c8593b65
Author: cushon <cushon@google.com>
Date:   Fri Feb 19 12:38:13 2016 -0800

    Whitelist BigDecimal as being immutable
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=115089796

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/WellKnownMutability.java

commit 606c7e506f307420eeabd1c57aa2796e9f7db507
Author: cushon <cushon@google.com>
Date:   Thu Feb 18 13:03:58 2016 -0800

    Detect Mockito usages that will be broken by JDK-8058199
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=114993818

A	core/src/main/java/com/google/errorprone/bugpatterns/MockitoCast.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/MockitoCastTest.java
A	docs/bugpattern/MockitoCast.md

commit bbe4301b405b74c7b1264dcadec3d7c8d5d3dca2
Author: cushon <cushon@google.com>
Date:   Thu Feb 18 11:26:35 2016 -0800

    Refactor SelfEquals initialization so fields can be made final
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=114984296

M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquals.java

commit e971ad44801d6515d9ce785cb39adb78030eb94f
Author: cushon <cushon@google.com>
Date:   Wed Feb 17 16:50:01 2016 -0800

    Make effectively final fields final
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=114913988

M	core/src/main/java/com/google/errorprone/bugpatterns/ClassCanBeStatic.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ComparisonOutOfRange.java
M	core/src/main/java/com/google/errorprone/bugpatterns/Finally.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceAssistedInjectScoping.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceAssistedParameters.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnConstructors.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnSameConstructor.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectJavaxInjectOnAbstractMethod.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectMoreThanOneScopeAnnotationOnClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NoAllocationChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NonOverridingEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/TypeParameterUnusedInFormals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/WildcardImport.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/WellKnownMutability.java
M	core/src/main/java/com/google/errorprone/matchers/Description.java
M	core/src/main/java/com/google/errorprone/scanner/ErrorProneScanner.java
M	core/src/test/java/com/google/errorprone/BugCheckerRefactoringTestHelper.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java
M	core/src/test/java/com/google/errorprone/ErrorProneJavaCompilerTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneTestCompiler.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CannotMockFinalClassTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CheckReturnValueTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinderTest.java
M	core/src/test/java/com/google/errorprone/fixes/AppliedFixTest.java
M	core/src/test/java/com/google/errorprone/matchers/CompilerBasedAbstractTest.java
M	core/src/test/java/com/google/errorprone/matchers/DescendantOfTransitiveTest.java

commit 1585dba1fd11121067fe821c08f59aa4dc93b705
Author: cushon <cushon@google.com>
Date:   Wed Feb 17 16:31:25 2016 -0800

    Fix path of SuggestedFixTest
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=114912156

M	core/src/test/java/com/google/errorprone/fixes/SuggestedFixTest.java
D	core/src/test/java/com/google/errorprone/util/SuggestedFixTest.java

commit dc0ab726af34cda3f34e17ec2e7e026b044c5547
Author: cushon <cushon@google.com>
Date:   Wed Feb 17 12:00:06 2016 -0800

    Improve addModifiers fix
    
    to avoid inserting modifiers before annotations when no real modifiers
    are present.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=114884584

M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java
A	core/src/test/java/com/google/errorprone/fixes/SuggestedFixTest.java

commit 1eff97c84bec450a7c6ab84726911a463e4e7222
Author: cushon <cushon@google.com>
Date:   Wed Feb 17 11:59:36 2016 -0800

    Relax @Var checker for fields
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=114884529

M	core/src/main/java/com/google/errorprone/bugpatterns/VarChecker.java
M	core/src/test/java/com/google/errorprone/bugpatterns/VarCheckerTest.java

commit 4cc8de67e9bcd31a2c2e56e81e6536c23d403bfb
Author: cushon <cushon@google.com>
Date:   Wed Feb 17 11:40:49 2016 -0800

    Create a utility for qualifying type names
    
    When emitting fixes that refer to type names, this provides a way to
    qualify the type name the right amount. Specifically:
    
    * if the type is already imported, its simple name is used
    * if an enclosing type is imported, that enclosing type is used as a qualifier
    * otherwise the outermost enclosing type is imported and used as a qualifier
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=114882487

M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java
A	core/src/test/java/com/google/errorprone/util/SuggestedFixTest.java

commit ebd26367af88cb98a9215673d4bf6dac9550c7cb
Author: eaftan <eaftan@google.com>
Date:   Tue Feb 16 14:11:14 2016 -0800

    New check for @Provides methods that return the null literal
    
    but are not annotated with @Nullable.
    
    RELNOTES: New check for @Provides methods that return the null literal,
    but are not annotated with @Nullable.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=114792382

M	core/pom.xml
A	core/src/main/java/com/google/errorprone/bugpatterns/DaggerProvidesNull.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/DaggerProvidesNullTest.java

commit cb697a105cd1627bef6581278e1dd0cc5e4e969b
Author: gak <gak@google.com>
Date:   Fri Feb 12 12:43:30 2016 -0800

    Prefer Name.contentEquals to name.toString().equals()
    
    because it avoids an extra allocation.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=114560595

M	core/src/main/java/com/google/errorprone/SuppressionHelper.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ClassName.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MissingFail.java
M	core/src/main/java/com/google/errorprone/bugpatterns/WildcardImport.java
M	core/src/main/java/com/google/errorprone/matchers/AnnotationType.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/matchers/NewInstanceAnonymousInnerClass.java
M	core/src/main/java/com/google/errorprone/matchers/method/MethodNameMatcherImpl.java
M	core/src/main/java/com/google/errorprone/matchers/method/MethodSignatureMatcherImpl.java
M	core/src/test/java/com/google/errorprone/util/ASTHelpersTest.java

commit 88cf7b117fa9f69504c7efa1b0093b80d3f0b428
Author: avenet <avenet@google.com>
Date:   Fri Feb 12 12:17:35 2016 -0800

    Implement the new Android check FragmentNotInstantiable
    
    ensures that Fragment subclasses can be instantiated via
    Class#newInstance(). This is a straight adaptation of the ValidFragment
    check of Android Lint (http://tools.android.com/tips/lint-checks).
    
    RELNOTES: new Android check: FragmentNotInstantiable.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=114558467

A	core/src/main/java/com/google/errorprone/bugpatterns/android/FragmentNotInstantiable.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/android/FragmentNotInstantiableTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/android/testdata/FragmentNotInstantiableNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/android/testdata/FragmentNotInstantiablePositiveCases.java
A	docs/bugpattern/android/FragmentNotInstantiable.md

commit 2479f593f91baf6782bf049b9eaf8114c7a1f095
Author: kurs <kurs@google.com>
Date:   Thu Feb 11 16:02:26 2016 -0800

    Extended the KlippyAnalyzer interface to provide access the Bugchecker's link.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=114488184

M	core/src/main/java/com/google/errorprone/matchers/Description.java

commit 90ec8955632100dd9e1f63e4a69bf230ed5257d6
Author: bangert <bangert@google.com>
Date:   Thu Feb 11 09:55:24 2016 -0800

    Compile all affected files at once in BugCheckerRefactoringTestHelper
    
    Allows testing refactorings that look at other compilation units (i.e.
    imported class names).
    
    Add a expectUnchanged function to make including helper files less
    verbose.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=114447929

M	core/src/test/java/com/google/errorprone/BugCheckerRefactoringTestHelper.java
M	core/src/test/java/com/google/errorprone/BugCheckerRefactoringTestHelperTest.java

commit 69923ebaeb27969d7a762d1cc8bece306f7711ac
Author: cushon <cushon@google.com>
Date:   Wed Feb 10 11:17:14 2016 -0800

    Revise README
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=114347377

M	README.md

commit d9c7a5b55ce56f963a8d7c3381c90c9db126d348
Author: kcooney <kcooney@google.com>
Date:   Wed Feb 10 11:16:03 2016 -0800

    Clarify the reasons not to have JUnit4-style tests extends from TestCase.
    
    The previous wording of the first few sentences sounded like this was a
    philosophical "inheritance vs. delegation" issue, but it's functional.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=114347269

M	core/src/main/java/com/google/errorprone/bugpatterns/JUnitAmbiguousTestClass.java

commit 5ab7d93a00373aa01772314b82e980be216ced30
Author: avenet <avenet@google.com>
Date:   Wed Feb 10 10:59:45 2016 -0800

    Added support for Android checks
    
    using the publicly available Maven library 'android.jar' (and
    experimental:android_runtime for our internal version). Deleted the
    handwritten Android stubs.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=114345338

M	core/pom.xml
M	core/src/test/java/com/google/errorprone/bugpatterns/android/MislabeledAndroidStringTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/android/RectIntersectReturnValueIgnoredTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/android/testdata/stubs/android/graphics/Rect.java

commit dd2e66510e9fbab22ee1e44c983f02bf4b7d3b64
Author: cushon <cushon@google.com>
Date:   Mon Feb 8 18:00:13 2016 -0800

    Delete crashy hasAnnotation methods
    
    hasAnnotation(Symbol, Class) and hasAnnotation(Tree, Class) cause the annotation
    symbol to be completed if it is found, which causes crashes when the annotation isn't
    present on the compilation classpath. hasAnnotation(Symbol, Class, VisitorState)
    does trigger symbol completions.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=114171066

M	core/src/main/java/com/google/errorprone/SuppressionHelper.java
M	core/src/main/java/com/google/errorprone/analysis/LocalAnalysisAsTopLevelAnalysis.java
M	core/src/main/java/com/google/errorprone/bugpatterns/CheckReturnValue.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MissingOverride.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PackageLocation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/VarChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableChecker.java
M	core/src/main/java/com/google/errorprone/refaster/RefasterRuleBuilderScanner.java
M	core/src/main/java/com/google/errorprone/scanner/Scanner.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CheckReturnValueTest.java
M	core/src/test/java/com/google/errorprone/util/ASTHelpersTest.java

commit 97e2deb53f8ff6f651508280ca344d6fa2a0899f
Author: maxp <maxp@google.com>
Date:   Mon Feb 8 16:58:40 2016 -0800

    Update "wait-not-in-loop" documentation
    
    to avoid race condition that might cause a wait(0).
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=114166297

M	docs/bugpattern/WaitNotInLoop.md

commit 99ed9b2dba942907bc14a087c93698718ddab9ab
Author: cushon <cushon@google.com>
Date:   Fri Feb 5 14:50:14 2016 -0800

    CheckReturnValue: don't crash if @CRV is not on the compilation claspath
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=113987934

M	core/src/main/java/com/google/errorprone/bugpatterns/CheckReturnValue.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CheckReturnValueTest.java
M	core/src/test/java/com/google/errorprone/util/ASTHelpersTest.java

commit bfc372b2948a9993c9e6b67e39592074f40ca988
Author: cushon <cushon@google.com>
Date:   Fri Feb 5 14:32:26 2016 -0800

    Delete obsolete copy of the intellij plugin
    
    The latest sources are at: https://github.com/JetBrains/intellij-plugins/tree/master/error-prone
    
    context: https://groups.google.com/d/topic/error-prone-discuss/p7nqreAhE6M/discussion
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=113986200

D	idea_plugin/META-INF/plugin.xml
D	idea_plugin/idea-plugin.iml
D	idea_plugin/src/com/google/errorprone/intellij/ErrorProneIdeaBundle.java
D	idea_plugin/src/com/google/errorprone/intellij/ErrorProneIdeaBundle.properties
D	idea_plugin/src/com/google/errorprone/intellij/ErrorProneIdeaCompiler.java

commit a1348aeb41d7c596c5c6caa8cf949c8c80c9d92e
Author: cushon <cushon@google.com>
Date:   Thu Feb 4 13:06:52 2016 -0800

    Fix immutable proto handling
    
    isProto2MutableMessage and isProto2MessageClass exclude subtypes of
    com.google.io.protocol.ProtocolMessage, but the test was failing whenever
    ProtocolMessage was absent from the classpath. If ProtocolMessage is absent we
    should assume the type being checked isn't a subtype.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=113880804

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/WellKnownMutability.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableCheckerTest.java
M	core/test.proto

commit a7d82bfb33884b280e14f14bfb814a303c4e40c8
Author: cushon <cushon@google.com>
Date:   Thu Feb 4 10:40:54 2016 -0800

    Enable symbol completion failure stack traces in tests
    
    If -XDdev is not set, javac caches CompletionFailure exceptions for
    performance. This changes disables the caching when running tests, to make
    debugging easier.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=113865782

M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java

commit ff7eee5045dc8956385cd29305f92d543509529c
Author: sfoy <sfoy@google.com>
Date:   Wed Feb 3 17:17:12 2016 -0800

    Add missing word "not" to NullableConstructor BugPattern summary
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=113800592

M	core/src/main/java/com/google/errorprone/bugpatterns/NullableConstructor.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NullableConstructorTest.java

commit e8e8372a4fd10614a620a2fe51d69714bd10d64e
Author: cushon <cushon@google.com>
Date:   Tue Feb 2 11:15:39 2016 -0800

    Improve ErrorProneError
    
    Make the message and cause visible to callers that don't use logFatalError.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=113657043

M	core/src/main/java/com/google/errorprone/ErrorProneError.java
M	core/src/main/java/com/google/errorprone/scanner/ErrorProneScanner.java

commit 35be12b3dd1e59e2da1de28f549291fa274908c7
Author: cushon <cushon@google.com>
Date:   Tue Feb 2 10:26:05 2016 -0800

    CheckReturnValue: recognize in-order mockito mocks
    
    Expand Mockito exception to include mocking using the InOrder API.
    
    Fixes google/error-prone#226
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=113651327

M	core/src/main/java/com/google/errorprone/bugpatterns/CheckReturnValue.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CheckReturnValueTest.java

commit 6fadc12fca4aa72abee86578639a81cd86d0bff2
Author: cushon <cushon@google.com>
Date:   Mon Feb 1 16:06:41 2016 -0800

    Recognize more kinds of fail() method in @CheckReturnValue
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=113578816

M	core/src/main/java/com/google/errorprone/bugpatterns/CheckReturnValue.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CheckReturnValueTest.java

commit a9cab07405261fec3813fef6e8459ba539226fad
Author: joachimkainz <joachimkainz@google.com>
Date:   Mon Feb 1 10:06:42 2016 -0800

    Marking EnumValueDescriptor as immutable in WellKnownMutability.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=113539939

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/WellKnownMutability.java

commit 60a35c801ead75a69d3c95853f5070be48751b97
Author: cushon <cushon@google.com>
Date:   Fri Jan 29 23:32:03 2016 -0800

    Add tests for @GuardedBy checking of instance, class, and field initializers
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=113538445

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByChecker.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByCheckerTest.java

commit 70a60a31da7897b821403551c81e8d272346888e
Author: cushon <cushon@google.com>
Date:   Fri Jan 29 14:46:44 2016 -0800

    Refactor Error Prone crash handling
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=113400194

M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorProneError.java
M	core/src/main/java/com/google/errorprone/ErrorProneJavacJavaCompiler.java

commit d929ef9f7b517fb5b3468a186d113c47ba9c70ff
Author: cushon <cushon@google.com>
Date:   Fri Jan 29 12:13:38 2016 -0800

    Temporarily disable InsecureCipherMode
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=113386131

M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit 310bddb07679651a8c04fd8e29991b3804b8daa2
Author: cushon <cushon@google.com>
Date:   Thu Jan 28 17:10:14 2016 -0800

    Assume enums are immutable
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=113319016

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableChecker.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableCheckerTest.java

commit 1d9fc0bcd99104f14149bde547071ebc879adef8
Author: cushon <cushon@google.com>
Date:   Thu Jan 28 16:47:18 2016 -0800

    Add tests for bug in @GuardedBy checker
    
    The logic for resolving GuardedBy expressions doesn't handle qualified type
    names.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=113316706

M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByCheckerTest.java

commit 1940443c37972d8eb264d5474b219f0c3ac690ea
Author: cushon <cushon@google.com>
Date:   Thu Jan 28 10:38:37 2016 -0800

    Don't assume protobufs are on the compilation classpath
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=113277736

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/WellKnownMutability.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableCheckerTest.java

commit 1b3d3fab1cb72e8135e4978b2daabfbdc99bc81e
Author: avenet <avenet@google.com>
Date:   Thu Jan 28 09:25:03 2016 -0800

    Enable InsecureCipherMode as an error
    
    RELNOTES: Enable InsecureCipherMode as an error
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=113269806

M	core/src/main/java/com/google/errorprone/bugpatterns/InsecureCipherMode.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit f1dfec956b2fd14b01b2c3b395c2f4710e214ae8
Author: cushon <cushon@google.com>
Date:   Wed Jan 27 17:22:29 2016 -0800

    Report source positions for unrecoverable errors
    
    If an Error Prone check crashes processing an AST node, report the error at the
    source position that caused the crash.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=113218178

A	core/src/main/java/com/google/errorprone/ErrorProneError.java
M	core/src/main/java/com/google/errorprone/ErrorProneJavacJavaCompiler.java
M	core/src/main/java/com/google/errorprone/scanner/ErrorProneScanner.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java

commit ed69570e5176b5be210051413718df2ae2ffb61a
Author: cushon <cushon@google.com>
Date:   Wed Jan 27 16:52:16 2016 -0800

    Clarify that only Error Prone's @Immutable is checked
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=113215613

M	docs/bugpattern/Immutable.md

commit 1f7fc3d6ee6b713378144ecf5cf9569ccbe7db5e
Author: kurs <kurs@google.com>
Date:   Wed Jan 27 13:35:33 2016 -0800

    BugCheckerRefactoringTestHelper for JUnit refactoring tests.
    
    RELNOTES: Helper for refactoring tests from within a JUnit framework.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=113195227

A	core/src/test/java/com/google/errorprone/BugCheckerRefactoringTestHelper.java
A	core/src/test/java/com/google/errorprone/BugCheckerRefactoringTestHelperTest.java

commit a4011ed4ce379f54e5d8e2c4c9a5494f6b97704a
Author: cushon <cushon@google.com>
Date:   Wed Jan 27 11:20:44 2016 -0800

    Fix a NPE in GuardedByBinder
    
    When searching enclosing scopes for a GuardedBy expression, skip over
    initializer blocks.
    
    Resolves google/error-prone#387
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=113181681

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinder.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByExpression.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinderTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByCheckerTest.java

commit adee58382aa6804f94e3dfc1f23c06a00f6cc1b5
Author: Arnaud Venet <avenet@google.com>
Date:   Wed Jan 27 10:25:55 2016 -0800

    Update versions in example config files.

M	examples/ant/ant_fork/build.xml
M	examples/gradle/build.gradle
M	examples/maven/pom.xml

commit 62d10ac0f87beb8b763213feabb26ca328f86d2c
Author: Arnaud Venet <avenet@google.com>
Date:   Wed Jan 27 10:19:23 2016 -0800

    Update version number to 2.0.8.

M	README.md

commit f07000f5d876dd2f54d7b828a67e1373d0da9baa
Author: cushon <cushon@google.com>
Date:   Mon Jan 25 16:27:23 2016 -0800

    Improve anonymous class handling in the @Immutable checker
    
    When checking anonymous classes, search for @Immutable interfaces (not just
    superclasses). Also, ignore anonymous implementations of "well-known" immutable
    types to be consistent with the other subtype checking. Most well-known types
    are final-ish, and the exceptions (e.g. guava's Converter) should be migrated
    to use the annotation explicitly instead of being whitelisted.
    
    Also: fix a typo, and add a couple of new whitelist entries.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=113001908

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/WellKnownMutability.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableCheckerTest.java

commit 2d94e4bea41f5a5fdd312d6a3287c7bd285f2c03
Author: Arnaud Venet <avenet@google.com>
Date:   Mon Jan 25 16:38:37 2016 -0800

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	annotations/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit 62a3cc5c7bbdde83b2715b0fed36d4302e92d3c5
Author: Arnaud Venet <avenet@google.com>
Date:   Mon Jan 25 16:38:21 2016 -0800

    [maven-release-plugin] prepare release v2.0.8

M	annotation/pom.xml
M	annotations/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit d3342905780eca7eeec4c0fcdbd8b8c5d5acb245
Author: cushon <cushon@google.com>
Date:   Mon Jan 25 12:37:17 2016 -0800

    Relax CheckReturnValue in tests
    
    This allows unused return values in tests that assert an exception is thrown,
    e.g.:
    
    ```
    try {
      Foo.newFoo(-1);
      fail();
    } catch (IllegalArgumentException expected) {
    }
    ```
    
    Fixes #error-prone/issues/385
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112976665

M	core/src/main/java/com/google/errorprone/bugpatterns/CheckReturnValue.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CheckReturnValueTest.java

commit e2a2af56732e517283a392e285babb5e065c792f
Author: cushon <cushon@google.com>
Date:   Mon Jan 25 12:31:55 2016 -0800

    Relax UnsynchronizedOverridesSynchronized for InputStream
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112976318

M	core/src/main/java/com/google/errorprone/bugpatterns/UnsynchronizedOverridesSynchronized.java
M	core/src/test/java/com/google/errorprone/bugpatterns/UnsynchronizedOverridesSynchronizedTest.java

commit 5a66ba27bdd4552ccc0736b1074de160b2e3f9e7
Author: cushon <cushon@google.com>
Date:   Wed Jan 20 12:46:44 2016 -0800

    Make DescendantOf less null-hostile
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112609359

M	core/src/main/java/com/google/errorprone/matchers/DescendantOf.java

commit 40b27728142157811f48b8e3555fa5c6621b36b4
Author: cushon <cushon@google.com>
Date:   Tue Jan 19 17:41:19 2016 -0800

    Create a @Var annotation
    
    And check that it is applied to non-final variables.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112533881

A	annotations/src/main/java/com/google/errorprone/annotations/Var.java
A	core/src/main/java/com/google/errorprone/bugpatterns/VarChecker.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/VarCheckerTest.java
A	docs/bugpattern/Var.md

commit 5868947d9648e07b9e1a5f32c2080ccdbb575546
Author: gak <gak@google.com>
Date:   Tue Jan 19 16:40:42 2016 -0800

    Fix the GuiceOverridesGuiceInjectableMethod check to account for cases where @Inject is specified on a supertype that is not a direct supertype and any intermediate types don't redeclare the method.
    
    RELNOTES: Fixed bug in GuiceOverridesGuiceInjectableMethod
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112528681

M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceOverridesGuiceInjectableMethod.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/GuiceOverridesGuiceInjectableMethodNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/GuiceOverridesGuiceInjectableMethodPositiveCases.java

commit 206ac54353dfa128aaf8c001c23cd1410c21c304
Author: cushon <cushon@google.com>
Date:   Tue Jan 19 11:37:11 2016 -0800

    Enable the @Immutable checker as an error
    
    RELNOTES: New error to enforce usage of @Immutable
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112495632

M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit 285d41bd95096809b6635d163b1b43edd44960ef
Author: cushon <cushon@google.com>
Date:   Tue Jan 12 11:04:06 2016 -0800

    Prepare Template.callCheckMethod for the next version of javac
    
    Passing a null resultInfo will stop working in a future version of the
    compiler.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=111967066

M	core/src/main/java/com/google/errorprone/refaster/Template.java

commit 106a829bdb87b256b58429bccc6747d24cdb6edd
Author: cushon <cushon@google.com>
Date:   Tue Jan 12 11:01:56 2016 -0800

    Clean up DoubleCheckedLocking docs
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=111966803

M	docs/bugpattern/DoubleCheckedLocking.md

commit 3333d080c1b0e63f8b9002a0813b135bd5f83051
Author: cushon <cushon@google.com>
Date:   Mon Jan 11 15:08:27 2016 -0800

    Import from external
    
    ------------
    commit: 4a3870405d1c1d454d9c1c9447d19c09841fdba3
    author: Liam Miller-Cushon
    date: 2016/01/07
    Update installation instructions in README
    -------------
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=111892883

M	core/src/main/java/com/google/errorprone/bugpatterns/InsecureCipherMode.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java

commit c7d58d7376e916bf1cae9e602b4f3a8959b426ed
Author: eaftan <eaftan@google.com>
Date:   Mon Jan 11 13:52:11 2016 -0800

    Add support for com.ibm.icu.text.SimpleDateFormat to MisusedWeekYear checker.
    
    RELNOTES: MisusedWeekYear checker now checks for com.ibm.icu.text.SimpleDateFormat.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=111885124

M	core/pom.xml
M	core/src/main/java/com/google/errorprone/bugpatterns/MisusedWeekYear.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MisusedWeekYearTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/MisusedWeekYearPositiveCases2.java

commit 45eacedc6b6ac90a3d4943052da56845ccaa0894
Author: avenet <avenet@google.com>
Date:   Fri Jan 8 00:21:17 2016 -0800

    Enable RectIntersectReturnValueIgnored as an error
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=111672460

M	core/src/main/java/com/google/errorprone/bugpatterns/android/RectIntersectReturnValueIgnored.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit cc5c09633c61f0498f42dbc8c56a562453f9c955
Author: cpovirk <cpovirk@google.com>
Date:   Wed Jan 6 17:33:49 2016 -0800

    Migrate from deprecated isAssignableFrom to equivalent isSupertypeOf.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=111562136

M	core/src/main/java/com/google/errorprone/refaster/UTemplater.java

commit 4a3870405d1c1d454d9c1c9447d19c09841fdba3
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Thu Jan 7 22:00:15 2016 -0800

    Update installation instructions in README

M	README.md

commit ffa6a2ae57be16391c4d20ca472bac70cab4024c
Author: cushon <cushon@google.com>
Date:   Tue Jan 5 11:35:50 2016 -0800

    Actually fix line breaks
    
    follow-up to c33a97d3b6a1215213357a7fd4f76db0704a99d0
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=111434691

M	docgen/src/main/java/com/google/errorprone/resources/bugpatterns_external.mustache
M	docgen/src/test/java/com/google/errorprone/BugPatternIndexWriterTest.java

commit c67cd50ef3cc584f12060757d0e35d02754c1394
Author: eaftan <eaftan@google.com>
Date:   Tue Dec 22 17:21:30 2015 -0800

    Add an .md suffix to markdown links
    
    in internal documentation, but not for external.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=110808330

M	core/pom.xml
M	docgen/src/main/java/com/google/errorprone/BugPatternIndexWriter.java
M	docgen/src/main/java/com/google/errorprone/DocGenTool.java
D	docgen/src/main/java/com/google/errorprone/resources/bugpatterns.mustache
A	docgen/src/main/java/com/google/errorprone/resources/bugpatterns_external.mustache
A	docgen/src/main/java/com/google/errorprone/resources/bugpatterns_internal.mustache
M	docgen/src/test/java/com/google/errorprone/BugPatternIndexWriterTest.java

commit 9544011b59ba13ab46d99f7bfdeadd1fa25389e7
Author: avenet <avenet@google.com>
Date:   Tue Dec 22 14:10:55 2015 -0800

    new check for calling equals() on incompatible types
    
    Added a check that flags usages of the default implementation of
    equals() with objects of incompatible types.
    
    RELNOTES: new check for calling equals() on incompatible types
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=110796942

A	core/src/main/java/com/google/errorprone/bugpatterns/EqualsIncompatibleType.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/EqualsIncompatibleTypeTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/EqualsIncompatibleTypeNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/EqualsIncompatibleTypePositiveCases.java
A	docs/bugpattern/EqualsIncompatibleType.md

commit c33a97d3b6a1215213357a7fd4f76db0704a99d0
Author: cushon <cushon@google.com>
Date:   Tue Dec 22 12:58:17 2015 -0800

    Change line break format in bugpatterns.md
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=110791883

M	docgen/src/main/java/com/google/errorprone/resources/bugpatterns.mustache
M	docgen/src/test/java/com/google/errorprone/BugPatternIndexWriterTest.java

commit 710c5a589819a068469bd92a589b46e2bc89c731
Author: aabdagic <aabdagic@google.com>
Date:   Tue Dec 22 10:00:57 2015 -0800

    Add an overload for Matchers.methodReturns
    
    that accepts a Matcher, and rewire existing methodReturns overloads to
    use it. Also write tests for both existing and new
    Matchers.methodReturns overloads.
    
    RELNOTES: Add an overload for Matchers.methodReturns that accepts a Matcher
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=110778910

M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/test/java/com/google/errorprone/matchers/MatchersTest.java

commit ae1156bebfcbf2fc7b38006fe1701cc22859cf57
Author: avenet <avenet@google.com>
Date:   Thu Dec 17 16:42:50 2015 -0800

    Added a check to Error Prone that flags usages of android.graphics.Rect.intersect() where the return value is ignored.
    
    RELNOTES:
    - New Error Prone check flagging calls to android.graphics.Rect.intersect() where the return value is ignored.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=110501741

M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractReturnValueIgnored.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ReturnValueIgnored.java
A	core/src/main/java/com/google/errorprone/bugpatterns/android/RectIntersectReturnValueIgnored.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/android/RectIntersectReturnValueIgnoredTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/android/testdata/RectIntersectReturnValueIgnoredNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/android/testdata/RectIntersectReturnValueIgnoredPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/android/testdata/stubs/android/graphics/Rect.java

commit 9b8e93fbd5adf0d288ed97911af0eb23158c4837
Author: cushon <cushon@google.com>
Date:   Thu Dec 17 13:43:50 2015 -0800

    Update to Guava 19
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=110485502

M	annotation/pom.xml
M	core/pom.xml
M	docgen/pom.xml

commit 1d461d282debedb25830b004909dc0031924bb70
Author: Yigit Boyar <yboyar@google.com>
Date:   Sun Dec 20 11:45:06 2015 -0800

    Fix removeImport suggestion.
    
    This CL fixes a bug in DescriptionBasedDiff where it does not populate
    importsToRemove list properly. Also added a test to cover that case.
    
    Issue: #378

M	core/src/main/java/com/google/errorprone/apply/DescriptionBasedDiff.java
M	core/src/test/java/com/google/errorprone/refaster/DescriptionBasedDiffTest.java

commit bbdec8bd7d2ca8265fd1f8cd856cdd946df1a330
Author: cushon <cushon@google.com>
Date:   Mon Dec 14 20:23:55 2015 -0800

    Make TypeParameterQualifier an error
    
    RELNOTES: New check for type parameters in qualified names
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=110221837

M	core/src/main/java/com/google/errorprone/bugpatterns/TypeParameterQualifier.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit 9b188dd42077ded55d30687358dbf258bcac9a21
Author: cushon <cushon@google.com>
Date:   Mon Dec 14 19:38:43 2015 -0800

    Enable NullablePrimitive as a warning
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=110219794

M	core/src/main/java/com/google/errorprone/bugpatterns/NullablePrimitive.java
D	core/src/main/java/com/google/errorprone/matchers/AnnotationSimpleName.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NullablePrimitiveTest.java

commit f518862a34fdd8cecfd498bfc41808998325a1bb
Author: cushon <cushon@google.com>
Date:   Mon Dec 14 18:17:18 2015 -0800

    Add checks for @Nullable constructors and void-returning methods
    
    RELNOTES:
    - new check for @Nullable constructors
    - new check for @Nullable void-returning methods
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=110215680

A	core/src/main/java/com/google/errorprone/bugpatterns/NullableConstructor.java
A	core/src/main/java/com/google/errorprone/bugpatterns/NullableVoid.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/NullableConstructorTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/NullableVoidTest.java

commit a6b6154dcae830f7a83888bc676b345dd57f7d21
Author: cushon <cushon@google.com>
Date:   Mon Dec 14 16:13:57 2015 -0800

    Forbid type parameters from being used as name qualifiers
    
    fixes error-prone/issues/371
    
    RELNOTES: New check: forbid type parameters from being used as name qualifiers
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=110204140

A	core/src/main/java/com/google/errorprone/bugpatterns/TypeParameterQualifier.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/TypeParameterQualifierTest.java
A	docs/bugpattern/TypeParameterQualifier.md

commit bc8e7b2da4097a62359870e7f00f90ed00c10a09
Author: cushon <cushon@google.com>
Date:   Mon Dec 14 14:19:08 2015 -0800

    Clean up handling of empty suppression annotations
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=110191512

M	annotation/src/main/java/com/google/errorprone/BugPattern.java
M	annotation/src/main/java/com/google/errorprone/BugPatternValidator.java

commit e72df0c8d6a4319dc97f979f7ed2f606b80fdce9
Author: cushon <cushon@google.com>
Date:   Sun Dec 13 20:39:50 2015 -0800

    Temporarily disable BadComparator
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=110121085

M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit 83fc37655b186ce5d4fa283b6c0d8d8d48ccdc4a
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Thu Dec 10 21:00:05 2015 -0800

    Update versions in examples for 2.0.7 release

M	examples/ant/ant_fork/build.xml
M	examples/gradle/build.gradle
M	examples/maven/pom.xml

commit 5d2516419b8c5c85e2411724f9da9d283d0c432c
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Thu Dec 10 20:13:25 2015 -0800

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	annotations/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit 82f93c433fae63e67cf8dfc55c9af9fe2cf1d232
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Thu Dec 10 20:13:16 2015 -0800

    [maven-release-plugin] prepare release v2.0.7

M	annotation/pom.xml
M	annotations/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit a5a6c96e53174654b5d9b3adbc7b8facd995fe76
Author: kak <kak@google.com>
Date:   Tue Dec 8 13:28:12 2015 -0800

    Remove type parameters from IterableSubject, MultisetSubject, and MultimapSubject.
    
    See https://github.com/google/truth/issues/192
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=109722143

M	core/src/test/java/com/google/errorprone/refaster/testdata/template/WildcardUnificationTemplate.java

commit dc56187164cec06879c0709a5dff23da24fcc012
Author: cushon <cushon@google.com>
Date:   Tue Dec 8 11:42:21 2015 -0800

    Allow suggested fix builders to be merged
    
    This makes it easier to build complex fixes, e.g. that involve edits to
    two difference subtrees each of which may need to add imports.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=109711057

M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java

commit 8f3d5df27fa6f33ce1c41596ad78d5fe4b16b581
Author: avenet <avenet@google.com>
Date:   Tue Dec 8 10:49:01 2015 -0800

    Add a filter to InsecureCipherMode
    
    Added a filter for the algorithm name "RC4", which is used by JSch.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=109704055

M	core/src/main/java/com/google/errorprone/bugpatterns/InsecureCipherMode.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InsecureCipherModeNegativeCases.java

commit 81854243c04744f6689f4460d52ecc361007cf09
Author: irogers <irogers@google.com>
Date:   Tue Dec 8 08:10:09 2015 -0800

    Detection of bad integral narrowing casts in Comparable and Comparator methods
    
    RELNOTES: Add bad comparable cast matcher.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=109688705

A	core/src/main/java/com/google/errorprone/bugpatterns/BadComparable.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/BadComparableTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/BadComparableNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/BadComparablePositiveCases.java

commit 6b489dd58eed17eb001a1d5230ffefa8ce1bb36d
Author: cushon <cushon@google.com>
Date:   Mon Dec 7 19:05:06 2015 -0800

    Add check for missing `@Override` annotations
    
    RELNOTES: new check for missing `@Override`
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=109646358

A	core/src/main/java/com/google/errorprone/bugpatterns/MissingOverride.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/MissingOverrideTest.java
A	docs/bugpattern/MissingOverride.md

commit f994896ed61dae7cc86fa750e6f4c10a21fbf655
Author: avenet <avenet@google.com>
Date:   Mon Dec 7 09:01:24 2015 -0800

    New check for insecure calls to Cipher.getInstance
    
    Added a check to Error Prone that looks for usages of Cipher.getInstance
    with the insecure ECB block chaining mode enabled.
    
    RELNOTES: New check for insecure usages of Cipher.getInstance with the ECB mode
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=109586136

A	core/src/main/java/com/google/errorprone/bugpatterns/InsecureCipherMode.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/InsecureCipherModeTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InsecureCipherModeNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InsecureCipherModePositiveCases.java

commit 6804d6f006e1595247ff4dc67a19ab7f47daa808
Author: zhuht <zhuht@google.com>
Date:   Fri Dec 4 22:36:49 2015 -0800

    Disable CheckReturnType on mocked objects
    
    Check return value on `Mockito.verify(t).foo()` and
    `doReturn(val).when(t).foo()` is not necessary and sometimes annoying
    since people only meant to verify the invocation of the method.
    
    fixes: error-prone/issues/226
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=109477120

M	core/src/main/java/com/google/errorprone/bugpatterns/CheckReturnValue.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CheckReturnValueTest.java
M	docs/bugpattern/CheckReturnValue.md

commit c0a3465aae115a51b8db84931bff6fafc68ce443
Author: eaftan <eaftan@google.com>
Date:   Thu Dec 3 09:43:46 2015 -0800

    Allow a BugChecker to list multiple custom suppression annotations.
    
    RELNOTES: BugCheckers can now list multiple custom suppression annotations.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=109317261

M	annotation/pom.xml
M	annotation/src/main/java/com/google/errorprone/BugPattern.java
M	annotation/src/main/java/com/google/errorprone/BugPatternValidator.java
M	annotation/src/test/java/com/google/errorprone/BugPatternValidatorTest.java
M	core/src/main/java/com/google/errorprone/BugCheckerInfo.java
M	core/src/main/java/com/google/errorprone/SuppressionHelper.java
M	core/src/main/java/com/google/errorprone/analysis/BugCheckerLocalAnalysis.java
M	core/src/main/java/com/google/errorprone/analysis/LocalAnalysisAsTopLevelAnalysis.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PackageLocation.java
M	core/src/main/java/com/google/errorprone/matchers/Suppressible.java
M	core/src/main/java/com/google/errorprone/scanner/ErrorProneScanner.java
M	core/src/test/java/com/google/errorprone/suppress/CustomSuppressionTest.java
D	core/src/test/java/com/google/errorprone/suppress/testdata/CustomSuppressionNegativeCases.java
D	core/src/test/java/com/google/errorprone/suppress/testdata/CustomSuppressionPositiveCases.java
M	docgen/src/main/java/com/google/errorprone/BugPatternFileGenerator.java
M	docgen/src/main/java/com/google/errorprone/BugPatternInstance.java
M	docgen/src/test/java/com/google/errorprone/BugPatternFileGeneratorTest.java

commit 2247f28d3daa9367810d22a22b28cf72ca83e3a1
Author: cushon <cushon@google.com>
Date:   Tue Dec 1 10:13:46 2015 -0800

    Fix typo in EqualsHashCode
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=109097971

M	docs/bugpattern/EqualsHashCode.md

commit 414c6a7c94e025409f65a8f1027ccc970957b33c
Author: cushon <cushon@google.com>
Date:   Mon Nov 30 14:40:38 2015 -0800

    EqualsHashCode: detect inherited equals() methods
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=109016921

M	core/src/main/java/com/google/errorprone/bugpatterns/EqualsHashCode.java
M	core/src/test/java/com/google/errorprone/bugpatterns/EqualsHashCodeTest.java
A	docs/bugpattern/EqualsHashCode.md

commit ea044a28e1b97820692d03cd126d4bd5ebf98e2d
Author: eaftan <eaftan@google.com>
Date:   Tue Nov 24 17:23:44 2015 -0800

    Add a matcher for method declarations with a specific fully-qualified
    enclosing class and method name.
    
    RELNOTES: None
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=108663973

M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/test/java/com/google/errorprone/matchers/MatchersTest.java

commit 142ab38fa2f93e3277ed4a63c4cff6f6f7e1f646
Author: cushon <cushon@google.com>
Date:   Thu Nov 19 17:21:47 2015 -0800

    Improve bugpatterns list generation
    
    moving templating into the doc gen tool, instead of dumping yaml and
    letting jekyll handle it.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=108302103

A	docgen/src/main/java/com/google/errorprone/BugPatternIndexWriter.java
D	docgen/src/main/java/com/google/errorprone/BugPatternIndexYamlWriter.java
M	docgen/src/main/java/com/google/errorprone/DocGenTool.java
A	docgen/src/main/java/com/google/errorprone/resources/bugpatterns.mustache
A	docgen/src/test/java/com/google/errorprone/BugPatternIndexWriterTest.java
D	docgen/src/test/java/com/google/errorprone/BugPatternIndexYamlWriterTest.java

commit 10d21b174d129e61a56c025e6ee5cc72272a221c
Author: kmb <kmb@google.com>
Date:   Thu Nov 19 16:58:08 2015 -0800

    NullnessAnalysis improvements
    
    Visit field initializers in nullness analysis if available to improve precision.
    
    Also:
    - handle array initializers and conditional expressions
    - add some more built-in knowledge of non-null methods and fields
    
    RELNOTES: improved NullnessAnalysis precision using field initializers and other improvements
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=108300064

M	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/AbstractNullnessPropagationTransfer.java
M	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessAnalysis.java
M	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
A	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NonNullAssumptionsTest.java
M	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java
M	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/testdata/NullnessPropagationTransferCases1.java
M	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/testdata/NullnessPropagationTransferCases2.java
M	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/testdata/NullnessPropagationTransferCases3.java

commit 0ea2e843687e97a7257718279ec868fd2e18012b
Author: cushon <cushon@google.com>
Date:   Thu Nov 19 16:48:46 2015 -0800

    subtypes of trusted immutable types are also trusted
    
    RELNOTES: n/a
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=108299319

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableChecker.java

commit a2923b6a8caedc6e229a7c1227a584598ee2816a
Author: cushon <cushon@google.com>
Date:   Tue Nov 17 21:05:22 2015 -0800

    Initial implementation of @Immutable checker
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=108109885

A	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableAnnotationInfo.java
A	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableChecker.java
A	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/WellKnownMutability.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableCheckerTest.java
A	core/test.proto
A	docs/bugpattern/Immutable.md

commit fa8192ad1ba6e1dfaa6736480ce16f2aae1c17e4
Author: kmb <kmb@google.com>
Date:   Sun Nov 15 11:49:53 2015 -0800

    make MislabeledAndroidString an error in javac
    
    RELNOTES: make MislabeledAndroidString an error in javac
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=107891517

M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit 8534e091c821ff8f36fb24d68c7012169799fa58
Author: kevinb <kevinb@google.com>
Date:   Wed Nov 11 16:35:21 2015 -0800

    Improve TypeParameterUnusedInFormals docs
    
    Warn that addressing this warning could break callers.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=107636070

M	core/src/main/java/com/google/errorprone/bugpatterns/TypeParameterUnusedInFormals.java

commit b30cbeeb28e6da630e78e6d54bdcf3eda54e916e
Author: cushon <cushon@google.com>
Date:   Wed Nov 11 10:50:40 2015 -0800

    Revamp documentation for Finally
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=107602206

M	core/src/main/java/com/google/errorprone/bugpatterns/Finally.java
A	docs/bugpattern/Finally.md

commit a8487e8aaed7d7b32eb7b0f02dadb4100cc162ba
Author: kevinb <kevinb@google.com>
Date:   Tue Nov 10 10:27:56 2015 -0800

    Improve CollectionIncompatibleType docs
    
    Try to explain why collection query methods accept Object instead of
    linking to an ancient spam-filled blog post.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=107499781

M	docs/bugpattern/CollectionIncompatibleType.md

commit 8beb689411bf02328f78529e4e5847b16127ebb5
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Mon Nov 2 18:20:12 2015 -0800

    Reenable doclint when generating Javadoc
    
    This reverts commit a6b3312d29c417f9afa3c5fe37ac0adca584a005.

M	pom.xml

commit 88446d211f523b51ad3de5680502bf455ee69568
Author: cushon <cushon@google.com>
Date:   Mon Nov 2 17:28:50 2015 -0800

    Make including test inputs in the generated documentation optional
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=106898125

M	annotation/src/main/java/com/google/errorprone/BugPattern.java
M	core/src/main/java/com/google/errorprone/bugpatterns/Finally.java
M	docgen/src/main/java/com/google/errorprone/BugPatternFileGenerator.java
M	docgen/src/main/java/com/google/errorprone/BugPatternInstance.java

commit 27a9756a1190ff4cfc57ed1c754bed22b01270cd
Author: cushon <cushon@google.com>
Date:   Mon Nov 2 17:19:32 2015 -0800

    Fix all of the doclint
    
    This brings Error Prone into compliance with the "improved" 1.8 doclint errors.
    
    * broken links were replaced with @code tags
    
    * raw annotations in javadoc were escaped with @code
    
    * <pre>{@code ... }</pre> was used for multi-line code snippets, *except* where
      the code includes the literal @. In those cases the old-
      style <pre><code> ... </code></pre> was used with {@literal @} for the @
      and html-entity escaping for angle brackets. Since `{@literal @}` is the
      literal " @" and `{@literal@}` is a parse error, lines starting with @
      were manually un-indented one space.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=106897404

M	annotations/src/main/java/com/google/errorprone/annotations/CanIgnoreReturnValue.java
M	core/src/main/java/com/google/errorprone/bugpatterns/CheckReturnValue.java
M	core/src/main/java/com/google/errorprone/bugpatterns/CompileTimeConstantChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceAssistedInjectScoping.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectMoreThanOneScopeAnnotationOnClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NoAllocationChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitive.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/AbstractLockMethodChecker.java
M	core/src/main/java/com/google/errorprone/matchers/DatastoreMatchers.java
M	core/src/main/java/com/google/errorprone/refaster/Refaster.java
M	core/src/main/java/com/google/errorprone/refaster/annotation/MayOptionallyUse.java
M	core/src/main/java/com/google/errorprone/refaster/annotation/Placeholder.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java

commit 91dcb3457539a6d4ea7a9612cbb910fd6cecc86b
Author: kmb <kmb@google.com>
Date:   Mon Nov 2 16:24:18 2015 -0800

    new check to replace android.R.string.yes/no
    
    with ok/cancel, which reflects better what will be printed on the screen
    
    RELNOTES: new errorprone check to replace android.R.string.yes/no with
    ok/cancel to reflect in code what will be printed on the screen
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=106892496

M	annotation/src/main/java/com/google/errorprone/BugPattern.java
A	core/src/main/java/com/google/errorprone/bugpatterns/android/MislabeledAndroidString.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/android/MislabeledAndroidStringTest.java

commit df4fd2ddd1434b7524ee9c057d039f59df7ad9f9
Author: lowasser <lowasser@google.com>
Date:   Mon Nov 2 14:12:15 2015 -0800

    Add Refaster support for "if fallthrough"
    
    if the "then" condition always returns, allow matches to happen whether
    the remaining block is inside an else statement or not.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=106878576

M	core/src/main/java/com/google/errorprone/refaster/UIf.java
M	core/src/test/java/com/google/errorprone/refaster/AbstractUTreeTest.java
M	core/src/test/java/com/google/errorprone/refaster/TemplateIntegrationTest.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/IfFallthroughTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/IfFallthroughTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/IfFallthroughTemplate.java

commit ea5fe460a6b874c29349bd5d158c4fc79311c123
Author: cushon <cushon@google.com>
Date:   Fri Oct 30 15:06:35 2015 -0700

    Reverse the comment list for tokens
    
    javac stores them in reverse-declaration order because appending to
    linked lists is expensive.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=106728028

M	core/src/main/java/com/google/errorprone/VisitorState.java
M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java
A	core/src/main/java/com/google/errorprone/util/ErrorProneToken.java
A	core/src/main/java/com/google/errorprone/util/ErrorProneTokens.java
D	core/src/main/java/com/google/errorprone/util/Tokens.java
M	core/src/test/java/com/google/errorprone/util/ASTHelpersTest.java

commit 6a28417c74474efeebe8e8cef3b122e2eb3d161e
Author: zorzella <zorzella@google.com>
Date:   Fri Oct 30 10:32:06 2015 -0700

    Add "toString" method to CommentWithTextAndPosition to make debugging easier.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=106703491

M	core/src/main/java/com/google/errorprone/util/Tokens.java

commit 620177840219cddf3701789c352654b247bfa99f
Author: cushon <cushon@google.com>
Date:   Wed Oct 28 14:30:18 2015 -0700

    Fix (another) bug with top-level semi-colons
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=106534588

M	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MultipleTopLevelClassesTest.java

commit 1d5c323d7d36d50cde033a00d2b7feb9dbf1aa30
Author: glorioso <glorioso@google.com>
Date:   Wed Oct 28 13:57:30 2015 -0700

    Update maturity level of SizeGreaterThanOrEqualsZero to MATURE
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=106531045

M	core/src/main/java/com/google/errorprone/bugpatterns/SizeGreaterThanOrEqualsZero.java

commit cd9c02656a23104bd5ea20f10d480875648a1746
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Wed Oct 28 09:38:39 2015 -0700

    Re-enable publishing snapshots and documentation
    
    These were only enabled for jdk7 builds, so they haven't been running
    since 425b9c167800332da711299e7a7ca8211f728889.

M	util/generate-latest-docs.sh
M	util/publish-snapshot-on-commit.sh

commit 52880366d0bdcfe3f8c70ae0874510fb1e88b9c3
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Oct 27 15:59:35 2015 -0700

    Update versions in example config files.

M	examples/ant/ant_fork/build.xml
M	examples/gradle/build.gradle
M	examples/maven/pom.xml

commit 18ed4b2c47daac91834b8e0b870b3add8293f5ee
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Oct 27 15:38:08 2015 -0700

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	annotations/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit 1ff85b4337ca6f19b3cd2ae9da00af8ec82615a7
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Oct 27 15:38:04 2015 -0700

    [maven-release-plugin] prepare release v2.0.6

M	annotation/pom.xml
M	annotations/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit a6b3312d29c417f9afa3c5fe37ac0adca584a005
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Oct 27 15:26:12 2015 -0700

    Disable doclint when generating Javadoc.

M	pom.xml

commit bbffcfc92ef2b8c88222ca8e2f2796e1d1cbb753
Author: kak <kak@google.com>
Date:   Tue Oct 27 08:07:19 2015 -0700

    Migrate users from c.g.c.base.Objects to MoreObjects.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=106398290

M	core/src/main/java/com/google/errorprone/refaster/Bindings.java

commit 17215fe118ee362d894c447a9e72df8896da01f2
Author: eaftan <eaftan@google.com>
Date:   Mon Oct 26 17:03:10 2015 -0700

    Clean up CollectionIncompatibleType's treatment of methods that accept
    a parameterized type (e.g. Collection#containsAll(Collection<?>), and add
    a cast fix for that case.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=106351805

M	core/src/main/java/com/google/errorprone/bugpatterns/collectionincompatibletype/AbstractCollectionIncompatibleTypeMatcher.java
M	core/src/main/java/com/google/errorprone/bugpatterns/collectionincompatibletype/CollectionIncompatibleType.java
M	core/src/main/java/com/google/errorprone/bugpatterns/collectionincompatibletype/TypeArgOfMethodArgMatcher.java
M	core/src/test/java/com/google/errorprone/bugpatterns/collectionincompatibletype/CollectionIncompatibleTypeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/collectionincompatibletype/testdata/CollectionIncompatibleTypeNegativeCases.java

commit 24741015fa29a36562bc0ef97200c8f7911db014
Author: reschly <reschly@google.com>
Date:   Fri Oct 23 17:40:58 2015 -0700

    Fix spacing in JavaOptionalSuggestions:GuicePrivateInjectionPoints suggestion
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=106194310

M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java

commit 00d211dedcdde1ff4b9f8789bed6476368c59a3c
Author: cushon <cushon@google.com>
Date:   Fri Oct 23 17:00:26 2015 -0700

    Load bugpattern category reflectively during documentation generation
    
    This avoids skew when new categories are added and the released error prone
    still has the old version of the enum.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=106191491

M	docgen/src/main/java/com/google/errorprone/BugPatternInstance.java
M	docgen/src/test/java/com/google/errorprone/BugPatternFileGeneratorTest.java

commit 2a5759353a04204642b2938bcc9f31a35dfab163
Author: cushon <cushon@google.com>
Date:   Fri Oct 23 16:53:12 2015 -0700

    First pass at Error Prone's @Immutable annotation
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=106191072

A	annotations/src/main/java/com/google/errorprone/annotations/Immutable.java

commit 5968145e42b5ef4e201d7962d628f0e3a4e6320c
Author: lowasser <lowasser@google.com>
Date:   Fri Oct 23 16:11:19 2015 -0700

    Add a JavaOptionalSuggestions rule for Mockito doReturn(foo).when(bar).baz() => when(bar.baz()).thenReturn(foo), as recommended in the Javadoc.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=106188110

M	core/src/main/java/com/google/errorprone/refaster/UTemplater.java

commit 316d601f6bbe71e46daff63a9b2a2ecd6ca5fb43
Author: eaftan <eaftan@google.com>
Date:   Thu Oct 22 16:30:12 2015 -0700

    CollectionIncompatibleType now checks Collection#containsAll,
    Collection#removeAll, and Collection#retainAll.
    
    This required refactoring how we match on method invocations and extract
    the interesting parts of them.  I also moved this check into its own
    package, as there was getting to be a lot of code.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=106102787

D	core/src/main/java/com/google/errorprone/bugpatterns/CollectionIncompatibleType.java
A	core/src/main/java/com/google/errorprone/bugpatterns/collectionincompatibletype/AbstractCollectionIncompatibleTypeMatcher.java
A	core/src/main/java/com/google/errorprone/bugpatterns/collectionincompatibletype/CollectionIncompatibleType.java
A	core/src/main/java/com/google/errorprone/bugpatterns/collectionincompatibletype/MethodArgMatcher.java
A	core/src/main/java/com/google/errorprone/bugpatterns/collectionincompatibletype/TypeArgOfMethodArgMatcher.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
D	core/src/test/java/com/google/errorprone/bugpatterns/CollectionIncompatibleTypeTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/collectionincompatibletype/CollectionIncompatibleTypeTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/collectionincompatibletype/testdata/CollectionIncompatibleTypeClassCast.java
A	core/src/test/java/com/google/errorprone/bugpatterns/collectionincompatibletype/testdata/CollectionIncompatibleTypeNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/collectionincompatibletype/testdata/CollectionIncompatibleTypeOutOfBounds.java
A	core/src/test/java/com/google/errorprone/bugpatterns/collectionincompatibletype/testdata/CollectionIncompatibleTypePositiveCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/CollectionIncompatibleTypeClassCast.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/CollectionIncompatibleTypeNegativeCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/CollectionIncompatibleTypeOutOfBounds.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/CollectionIncompatibleTypePositiveCases.java

commit bf6387bf622e6e4c08cc3a0d4aa8255b324dda34
Author: cushon <cushon@google.com>
Date:   Wed Oct 21 10:56:35 2015 -0700

    Improve validation of fixes
    
    * complain about edits to generated default constructors
    * sanity-check the replacement range
    
    see: google/error-prone#368
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=105978135

M	core/src/main/java/com/google/errorprone/fixes/Replacement.java
M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/test/java/com/google/errorprone/ErrorProneJavaCompilerTest.java
M	core/src/test/java/com/google/errorprone/fixes/AppliedFixTest.java
A	core/src/test/java/com/google/errorprone/testdata/DeleteGeneratedConstructorTestCase.java

commit aab5bf5573f60949403deb6d04bccf34012ffb7e
Author: cushon <cushon@google.com>
Date:   Wed Oct 21 10:54:50 2015 -0700

    Handle comments in getTokensForNode
    
    javac's lexer drops comments by default, but can be extended to preserve them.
    This change preserves the position and text of comment tokens returned by
    getTokensForNode.
    
    see: google/error-prone#368
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=105977940

M	core/src/main/java/com/google/errorprone/VisitorState.java
A	core/src/main/java/com/google/errorprone/util/Tokens.java
M	core/src/test/java/com/google/errorprone/util/ASTHelpersTest.java

commit 62d3ddc9ebf286f73f1b5586431e3bfd96142b87
Author: cushon <cushon@google.com>
Date:   Tue Oct 20 15:12:58 2015 -0700

    Tweak crash diagnostic
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=105905582

M	core/src/main/java/com/google/errorprone/errors.properties

commit c4c581028a77dcf58434dc8812d1b6c436168c05
Author: eaftan <eaftan@google.com>
Date:   Mon Oct 19 17:31:41 2015 -0700

    Remove incorrect @Nullable from Predicate implementation.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=105814338

M	core/src/main/java/com/google/errorprone/bugpatterns/BadAnnotationImplementation.java

commit 2132ed34950b304da8d50f54f94e2840a6c8d18d
Author: eaftan <eaftan@google.com>
Date:   Mon Oct 19 14:25:54 2015 -0700

    Add a check for implementing Annotation interfaces
    
    Forbids implementing java.lang.annotation.Annotation without overriding
    equals and hashcode.
    
    RELNOTES: New Error Prone check for implementing Annotation without overriding
    equals and hashCode.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=105795921

A	core/src/main/java/com/google/errorprone/bugpatterns/BadAnnotationImplementation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/EqualsHashCode.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
M	core/src/main/java/com/google/errorprone/suppliers/Suppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/BadAnnotationImplementationTest.java

commit e2b30128771d9bff4f4da705ac40078b13ec9978
Author: cushon <cushon@google.com>
Date:   Mon Oct 19 11:52:54 2015 -0700

    Enable MockitoUsage
    
    RELNOTES: New check for Mockito usage errors
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=105779775

M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit fdb6a0c08009580b662106a7301556bf6cabec9d
Author: mwacker <mwacker@google.com>
Date:   Thu Oct 15 15:18:30 2015 -0700

    Improve documentation for JUnitAmbiguousTestClass
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=105548039

M	core/src/main/java/com/google/errorprone/bugpatterns/JUnitAmbiguousTestClass.java

commit 16be1927cf392a2e7038e6be64d3704b0e27913b
Author: kmb <kmb@google.com>
Date:   Sat Jul 18 15:40:18 2015 -0700

    update NumericEquality to use java.util.Objects.equals
    
    RELNOTES: update NumericEquality to use java.util.Objects.equals
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=105254846

M	core/src/main/java/com/google/errorprone/bugpatterns/NumericEquality.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/NumericEqualityPositiveCases.java

commit 980e34abf584fdc67ce5c5561e299db56d56b5da
Author: lowasser <lowasser@google.com>
Date:   Mon Oct 12 15:29:23 2015 -0700

    Add support for @Matches, @NotMatches, @OfKind for placeholder methods.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=105253895

M	core/src/main/java/com/google/errorprone/refaster/PlaceholderMethod.java
M	core/src/main/java/com/google/errorprone/refaster/UMatches.java
M	core/src/main/java/com/google/errorprone/refaster/UPlaceholderExpression.java
M	core/src/main/java/com/google/errorprone/refaster/UTemplater.java
M	core/src/main/java/com/google/errorprone/refaster/annotation/NotMatches.java

commit a6e25016235f2d7ec8c00f4c91f9a1b2744624f3
Author: lukes <lukes@google.com>
Date:   Mon Oct 12 14:03:39 2015 -0700

    Add a helper method for removing modifiers
    
    RELNOTES: new SuggestedFix.removeModifer api
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=105245179

M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java

commit 532ccc2cb03bd1edba7ef74e252c506a20e9b4e0
Author: kmb <kmb@google.com>
Date:   Fri Oct 9 17:47:28 2015 -0700

    additional test cases for NumericEquality
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=105104682

M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/NumericEqualityNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/NumericEqualityPositiveCases.java

commit 383ecca71e77703fe4c1d3a4c713dc5f52d1ab1e
Author: cushon <cushon@google.com>
Date:   Thu Oct 8 17:51:26 2015 -0700

    Enable OptionalEquality
    
    RELNOTES: New error to prevent comparing Optional types by reference equality
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=105016873

M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit 344044c0395663f2244da69ff975936ac6910c7e
Author: cushon <cushon@google.com>
Date:   Thu Oct 8 15:45:23 2015 -0700

    Add a check for using reference equality with Optional
    
    RELNOTES: New check for using reference equality with Optional
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=105005884

A	core/src/main/java/com/google/errorprone/bugpatterns/OptionalEquality.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/OptionalEqualityTest.java

commit 9474ca6f8fba1a448783dab69b9694d9930233bc
Author: cushon <cushon@google.com>
Date:   Thu Oct 8 09:06:28 2015 -0700

    Disallow empty top-level type declarations
    
    A ";" at the top-level counts as an empty type declaration, which is confusing
    and error-prone.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=104966773

A	core/src/main/java/com/google/errorprone/bugpatterns/EmptyTopLevelDeclaration.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/EmptyTopLevelDeclarationTest.java

commit 9ea34b9b04dfecf8e837e4566f4a69fb2b8e3a70
Author: cushon <cushon@google.com>
Date:   Wed Oct 7 17:22:29 2015 -0700

    Fix bug with empty top-level type declarations
    
    The grammar says that a semi-colon at the top level counts as an empty type
    declaration. That breaks the login in ErrorProneAnalyzer that watches flow
    events for top-level element declarations, and then visits the enclosing
    compilation unit tree once we've seen post-flow event for the element of each
    top-level declaration in the AST, since empty type declarations don't get
    elements.
    
    This change fixes that bug by explicitly ignoring empty top-level decls in
    ErrorProneAnalyzer.
    
    It also fixes a secondary bug in MultipleTopLevelClasses, which was complaining
    about empty declarations at the top level. We only really care if there are
    multiple non-empty top level type declarations in a file.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=104916117

M	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MultipleTopLevelClasses.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MultipleTopLevelClassesTest.java

commit 7d582fde292db3dc2adb00e852b535c6da3cdabe
Author: cushon <cushon@google.com>
Date:   Fri Oct 2 18:31:24 2015 -0700

    Detect incorrect calls to verify(mock, verificationMode)
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=104549972

M	core/src/main/java/com/google/errorprone/bugpatterns/MockitoUsage.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MockitoUsageTest.java

commit d66e0046372d16539e1420c63cd7d8c4d1389b09
Author: eaftan <eaftan@google.com>
Date:   Fri Oct 2 16:41:12 2015 -0700

    Simplify CollectionIncompatibleType error messages
    
    to print only the simple name of the incompatible types, unless they are
    identical.  In that case continue to print the fully-qualified name.
    
    Previously the error message looked like this:
    
    Argument 'foo' should not be passed to this method; its type java.lang.String
    is not compatible with its collection's type argument java.lang.Integer
    
    After this change, it looks like:
    
    Argument 'foo' should not be passed to this method; its type String is not
    compatible with its collection's type argument Integer
    
    RELNOTES: Better error messages for CollectionIncompatibleType
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=104542818

M	core/src/main/java/com/google/errorprone/bugpatterns/CollectionIncompatibleType.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/CollectionIncompatibleTypePositiveCases.java

commit 53dede0ed6c5888f40d2acdc114c6d7fc70948ed
Author: eaftan <eaftan@google.com>
Date:   Fri Oct 2 12:26:44 2015 -0700

    Make CollectionIncompatibleType check more methods
    
    from Deque, Dictionary, Stack, and Vector.
    
    RELNOTES: CollectionIncompatibleType now checks Object-accepting methods
    from Deque, Dictionary, Stack, and Vector.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=104520715

M	core/src/main/java/com/google/errorprone/bugpatterns/CollectionIncompatibleType.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/CollectionIncompatibleTypeNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/CollectionIncompatibleTypePositiveCases.java

commit ea79c2188509971d86bcf3694c0dc6f5e0553fef
Author: cushon <cushon@google.com>
Date:   Fri Oct 2 11:26:52 2015 -0700

    Update javac version
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=104515281

M	core/pom.xml

commit 7ffab4fe856c2873aaf1c4c00a81b4a76ed69667
Merge: 884eec7 425b9c1
Author: Eddie Aftandilian <eaftan@users.noreply.github.com>
Date:   Thu Oct 1 11:26:48 2015 -0700

    Merge pull request #367 from cushon/travis
    
    Turn down travis JDK7 build

commit 425b9c167800332da711299e7a7ca8211f728889
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Thu Oct 1 10:59:33 2015 -0700

    Turn down travis JDK7 build
    
    We only support JDK8 as of 884eec772c13541a7b1af249a68373cd9f30e488.

M	.travis.yml

commit 884eec772c13541a7b1af249a68373cd9f30e488
Author: cushon <cushon@google.com>
Date:   Thu Oct 1 10:29:41 2015 -0700

    Update to javac r2973
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=104410793

M	core/pom.xml
M	core/src/main/java/com/google/errorprone/bugpatterns/WildcardImport.java
M	core/src/main/java/com/google/errorprone/refaster/Inliner.java
M	core/src/test/java/com/google/errorprone/ErrorProneInMemoryFileManager.java

commit 402237b602922860462df378f26899babd0d8e96
Author: eaftan <eaftan@google.com>
Date:   Wed Sep 30 19:26:18 2015 -0700

    Add suggested fixes to CollectionIncompatibleType.
    
    The fixes are not suitable as part of the compiler/Tricorder check but
    are useful for the global cleanup.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=104361015

M	core/src/main/java/com/google/errorprone/bugpatterns/CollectionIncompatibleType.java

commit 9dfdbf96a8bad9aac263f2fc92b74a0ca05000f7
Author: eaftan <eaftan@google.com>
Date:   Tue Sep 29 11:56:53 2015 -0700

    Change CollectionIncompatibleType to check whether the types are
    *castable* to each other rather than assignable.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=104222693

M	core/src/main/java/com/google/errorprone/bugpatterns/CollectionIncompatibleType.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/CollectionIncompatibleTypeNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/CollectionIncompatibleTypePositiveCases.java
M	docs/bugpattern/CollectionIncompatibleType.md

commit 3f320898ce7407171385020063f86311ecd739d0
Author: cushon <cushon@google.com>
Date:   Tue Sep 29 09:48:21 2015 -0700

    Fix bug in suggestion for when(mock.foo())
    
    Rewriting verify(mock.foo()) to verify(mock).foo() is only correct for verify,
    so just delete calls like when(mock.foo()).
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=104209094

M	core/src/main/java/com/google/errorprone/bugpatterns/MockitoUsage.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MockitoUsageTest.java

commit d7ba092a25e2de80954df40d43f887d1ece18485
Author: eaftan <eaftan@google.com>
Date:   Mon Sep 28 17:35:52 2015 -0700

    CollectionIncompatibleType fixes:
    
    1) Allow the case in which the argument is a supertype of the contained type,
       e.g. it should be legal to check whether a List<HashMap> contains a Map.
    
    2) Deal properly with subtypes that have a different order of type arguments
       than the interface types we're looking for.  For example,
       ClassToInstanceMap<T> implements Map<Class<? extends T>, T>.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=104155720

M	core/src/main/java/com/google/errorprone/bugpatterns/CollectionIncompatibleType.java
M	core/src/main/java/com/google/errorprone/predicates/TypePredicate.java
M	core/src/main/java/com/google/errorprone/suppliers/Supplier.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CollectionIncompatibleTypeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/CollectionIncompatibleTypeNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/CollectionIncompatibleTypePositiveCases.java

commit d4762ee3207f9318e9585761d00f2a91cf3f34db
Author: cushon <cushon@google.com>
Date:   Mon Sep 28 16:41:10 2015 -0700

    Detect mockito usage errors
    
    RELNOTES: New check for incorrect Mockito usage
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=104150885

M	core/src/main/java/com/google/errorprone/VisitorState.java
A	core/src/main/java/com/google/errorprone/bugpatterns/MockitoUsage.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/MockitoUsageTest.java
A	docs/bugpattern/MockitoUsage.md

commit c5462bb8ecb894e9c220cc6431f4fb63d85aa8f4
Author: mwacker <mwacker@google.com>
Date:   Mon Sep 28 10:52:41 2015 -0700

    Promote JUnitAmbiguousTestClass to MATURE
    
    A recent static analysis found that many such hybrid classes exist.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=104114933

M	core/src/main/java/com/google/errorprone/bugpatterns/JUnitAmbiguousTestClass.java

commit d3a8dbd3f23946f52d70f53983526155c1e55755
Author: lowasser <lowasser@google.com>
Date:   Fri Sep 25 13:23:13 2015 -0700

    Fix RefasterRule from overly qualifying top-level Refaster rules.
    
    Currently Refaster rules are labeled from the *second* level in
    Tricorder findings, but top-level Refaster are fully qualified, making
    them ridiculously long.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=103970100

M	core/src/main/java/com/google/errorprone/refaster/RefasterRule.java
A	core/src/test/java/com/google/errorprone/refaster/RefasterRuleTest.java

commit 0c6ce95e0f453fce953c2cbc36be51eaa6315f3f
Author: lowasser <lowasser@google.com>
Date:   Fri Sep 25 10:17:26 2015 -0700

    Add a property to the Placeholder annotation
    
    identifying whether or not it is permitted to return one of its
    arguments unchanged.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=103952501

M	core/src/main/java/com/google/errorprone/refaster/UPlaceholderExpression.java
M	core/src/main/java/com/google/errorprone/refaster/annotation/Placeholder.java
M	core/src/test/java/com/google/errorprone/refaster/TemplateIntegrationTest.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/PlaceholderAllowsIdentityTemplateExample.java
M	core/src/test/java/com/google/errorprone/refaster/testdata/input/PlaceholderTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/PlaceholderAllowsIdentityTemplateExample.java
M	core/src/test/java/com/google/errorprone/refaster/testdata/output/PlaceholderTemplateExample.java
M	core/src/test/java/com/google/errorprone/refaster/testdata/template/ComparisonChainTemplate.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/PlaceholderAllowsIdentityTemplate.java

commit cb454a469413c227e0d869241bda5799abe7d42d
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Mon Sep 21 12:37:31 2015 -0700

    Allow Suppression documentation to be suppressed
    
    This allows the documentation to be customized for checks with special
    requirements, like MultipleTopLevelClasses and PackageLocation.
    
    Also, various improvements to documentation generation:
    
    * use Gson for serialization, instead of bespoke tab-delimited format
    * use a templating library instead of string munging and MessageFormat
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=103567245

M	annotation/src/main/java/com/google/errorprone/BugPattern.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MultipleTopLevelClasses.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PackageLocation.java
M	docgen/pom.xml
M	docgen/src/main/java/com/google/errorprone/BugPatternFileGenerator.java
M	docgen/src/main/java/com/google/errorprone/BugPatternIndexYamlWriter.java
A	docgen/src/main/java/com/google/errorprone/BugPatternInstance.java
M	docgen/src/main/java/com/google/errorprone/DocGenProcessor.java
A	docgen/src/main/java/com/google/errorprone/resources/bugpattern.mustache
M	docgen/src/test/java/com/google/errorprone/BugPatternFileGeneratorTest.java
M	docgen/src/test/java/com/google/errorprone/BugPatternIndexYamlWriterTest.java
M	docs/bugpattern/MultipleTopLevelClasses.md
A	docs/bugpattern/PackageLocation.md

commit a6397bf3f5d4f0f67de9e15fa7543dea53d0f030
Author: eaftan <eaftan@google.com>
Date:   Mon Sep 21 10:54:10 2015 -0700

    Fix a bug with ASTHelpers.getType().
    
    Previously it was returning uninstantiated generic types for fields and
    method calls (e.g. "A" for Pair#first); this CL fixes it to return the
    concrete type if known.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=103560919

M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/test/java/com/google/errorprone/util/ASTHelpersTest.java

commit e5198ac8d08d9e91fe9ed8dbb9652f0b9afc9582
Author: cushon <cushon@google.com>
Date:   Thu Sep 17 22:03:31 2015 -0700

    Allow TopLevel to be suppressed
    
    Fixes #364
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=103356139

M	core/src/main/java/com/google/errorprone/bugpatterns/MultipleTopLevelClasses.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MultipleTopLevelClassesTest.java
A	docs/bugpattern/MultipleTopLevelClasses.md

commit 399d2a4376c91e7d0d87a9e04d699ecc5ed2aa69
Author: cushon <cushon@google.com>
Date:   Thu Sep 17 16:32:49 2015 -0700

    Allow PackageLocation to be suppressed
    
    Adds a custom suppression annotation for PackageLocation that can be applied to
    packages.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=103337500

A	annotations/src/main/java/com/google/errorprone/annotations/SuppressPackageLocation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PackageLocation.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PackageLocationTest.java

commit d9d1516f27ef5d2459f7ca6d218cbaff43f65a3b
Author: cushon <cushon@google.com>
Date:   Thu Sep 17 16:13:02 2015 -0700

    Fix a bug in DiagnosticTestHelper
    
    An off-by-one was causing diagnostics to be missed if they occurred on the
    first line of a file, or immediately after a line with a `// BUG` comment.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=103335759

M	core/src/test/java/com/google/errorprone/CompilationTestHelperTest.java
M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/NoAllocationCheckerPositiveCases.java

commit ed5988e1bbee09e67bbd9106cc7b90f4cde7f32b
Author: eaftan <eaftan@google.com>
Date:   Wed Sep 16 15:55:34 2015 -0700

    Update CollectionIncompatibleType.
    
    - Rewrite implementation to look more similar to HashtableContains.
    - Remove suggested fix.
    - Rewrite tests to have full coverage of all the methods that we detect
      problems for.
    - Add tests for wildcards.
    - Rewrite explanation.
    
    RELNOTES: Updates to CollectionIncompatibleType.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=103238560

M	core/src/main/java/com/google/errorprone/bugpatterns/CollectionIncompatibleType.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/CollectionIncompatibleTypeNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/CollectionIncompatibleTypePositiveCases.java
A	docs/bugpattern/CollectionIncompatibleType.md

commit 9a3c3d25f99058ec90145ebbb785e2f5b4a5241c
Author: eaftan <eaftan@google.com>
Date:   Wed Sep 16 14:08:21 2015 -0700

    Fix a bug in HashtableContains with bare method calls if you extend Hashtable
    or ConcurrentHashtable.
    
    RELNOTES: Fix a bug in HashtableContains when you extend Hashtable/ConcurrentHashtable.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=103227534

M	core/src/main/java/com/google/errorprone/bugpatterns/HashtableContains.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/test/java/com/google/errorprone/bugpatterns/HashtableContainsTest.java
M	core/src/test/java/com/google/errorprone/util/ASTHelpersTest.java

commit 0264a73ff89b63309d0bcea751b04e0fcc2a0d49
Author: cushon <cushon@google.com>
Date:   Tue Sep 15 17:29:25 2015 -0700

    New check for unsynchronized methods overriding synchronized methods
    
    RELNOTES: New check for unsynchronized methods overriding synchronized methods
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=103148733

A	core/src/main/java/com/google/errorprone/bugpatterns/UnsynchronizedOverridesSynchronized.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/UnsynchronizedOverridesSynchronizedTest.java
A	docs/bugpattern/UnsynchronizedOverridesSynchronized.md

commit 34f4f9d39fa9b9c173f6c7bdb1c3e127e3638d6d
Author: lowasser <lowasser@google.com>
Date:   Tue Sep 15 11:06:58 2015 -0700

    Change Refaster to output a serialized CodeTransformer
    
    compatible with the open-source API as well as the analyzer.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=103109653

M	core/src/main/java/com/google/errorprone/CompositeCodeTransformer.java

commit 7844affa7ba617cec9329c871b5cd32cd088b766
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Mon Sep 14 15:52:22 2015 -0700

    Bump version number to 2.0.5 in examples

M	examples/gradle/build.gradle
M	examples/maven/pom.xml

commit c8628925d4ec623b2a9f6eae25669ca77c0faa56
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Mon Sep 14 15:45:20 2015 -0700

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	annotations/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit c279817ae64671932c382e82a6b7a584c6793c59
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Mon Sep 14 15:45:14 2015 -0700

    [maven-release-plugin] prepare release v2.0.5

M	annotation/pom.xml
M	annotations/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit e1870d8ff77886c85219c4efef1025ea4df83aab
Author: cushon <cushon@google.com>
Date:   Sun Sep 13 16:58:24 2015 -0700

    Enable HashtableContains
    
    RELNOTES: New check to disallow {ConcurrentHashMap,Hashtable}.contains
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=102958828

M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit 082c8c3d2ac609f5995a9554689193e8066c51b1
Author: cushon <cushon@google.com>
Date:   Thu Sep 10 14:39:06 2015 -0700

    Kill {ConcurrentHashMap,Hashtable}.contains
    
    RELNOTES: New check for legacy {ConcurrentHashMap,Hashtable}.contains methods
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=102791372

A	core/src/main/java/com/google/errorprone/bugpatterns/HashtableContains.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/HashtableContainsTest.java
A	docs/bugpattern/HashtableContains.md

commit 213be4ba71214a8e3b199843a6908a7b264a6376
Author: cushon <cushon@google.com>
Date:   Tue Sep 8 21:55:18 2015 -0700

    Document suppressing @CRV with a variable named unused
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=102627861

M	core/src/main/java/com/google/errorprone/bugpatterns/CheckReturnValue.java
A	docs/bugpattern/CheckReturnValue.md

commit 01f713649844a4cc331d8055d7a1e2f693e2e8b0
Author: lowasser <lowasser@google.com>
Date:   Tue Sep 8 15:27:26 2015 -0700

    Move Refaster source to third_party/java_src/error_prone.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=102599962

M	core/pom.xml
A	core/src/main/java/com/google/errorprone/apply/DescriptionBasedDiff.java
A	core/src/main/java/com/google/errorprone/apply/Diff.java
A	core/src/main/java/com/google/errorprone/apply/DiffApplier.java
A	core/src/main/java/com/google/errorprone/apply/DiffNotApplicableException.java
A	core/src/main/java/com/google/errorprone/apply/DiffSupplier.java
A	core/src/main/java/com/google/errorprone/apply/DiscardingFileDestination.java
A	core/src/main/java/com/google/errorprone/apply/FileDestination.java
A	core/src/main/java/com/google/errorprone/apply/FileSource.java
A	core/src/main/java/com/google/errorprone/apply/ImportStatements.java
A	core/src/main/java/com/google/errorprone/apply/SourceFile.java
A	core/src/main/java/com/google/errorprone/refaster/Bindings.java
A	core/src/main/java/com/google/errorprone/refaster/BlockTemplate.java
A	core/src/main/java/com/google/errorprone/refaster/BlockTemplateMatch.java
A	core/src/main/java/com/google/errorprone/refaster/Choice.java
A	core/src/main/java/com/google/errorprone/refaster/ControlFlowVisitor.java
A	core/src/main/java/com/google/errorprone/refaster/CouldNotResolveImportException.java
A	core/src/main/java/com/google/errorprone/refaster/ExpressionTemplate.java
A	core/src/main/java/com/google/errorprone/refaster/ExpressionTemplateMatch.java
A	core/src/main/java/com/google/errorprone/refaster/ImportPolicy.java
A	core/src/main/java/com/google/errorprone/refaster/Inlineable.java
A	core/src/main/java/com/google/errorprone/refaster/Inliner.java
A	core/src/main/java/com/google/errorprone/refaster/LocalVarBinding.java
A	core/src/main/java/com/google/errorprone/refaster/PlaceholderMethod.java
A	core/src/main/java/com/google/errorprone/refaster/PlaceholderUnificationVisitor.java
A	core/src/main/java/com/google/errorprone/refaster/PlaceholderVerificationVisitor.java
A	core/src/main/java/com/google/errorprone/refaster/Refaster.java
A	core/src/main/java/com/google/errorprone/refaster/RefasterRule.java
A	core/src/main/java/com/google/errorprone/refaster/RefasterRuleBuilderScanner.java
A	core/src/main/java/com/google/errorprone/refaster/RefasterScanner.java
A	core/src/main/java/com/google/errorprone/refaster/StringName.java
A	core/src/main/java/com/google/errorprone/refaster/Template.java
A	core/src/main/java/com/google/errorprone/refaster/TemplateMatch.java
A	core/src/main/java/com/google/errorprone/refaster/UAnnotatedType.java
A	core/src/main/java/com/google/errorprone/refaster/UAnnotation.java
A	core/src/main/java/com/google/errorprone/refaster/UAnyOf.java
A	core/src/main/java/com/google/errorprone/refaster/UArrayAccess.java
A	core/src/main/java/com/google/errorprone/refaster/UArrayType.java
A	core/src/main/java/com/google/errorprone/refaster/UArrayTypeTree.java
A	core/src/main/java/com/google/errorprone/refaster/UAssert.java
A	core/src/main/java/com/google/errorprone/refaster/UAssign.java
A	core/src/main/java/com/google/errorprone/refaster/UAssignOp.java
A	core/src/main/java/com/google/errorprone/refaster/UBinary.java
A	core/src/main/java/com/google/errorprone/refaster/UBlank.java
A	core/src/main/java/com/google/errorprone/refaster/UBlock.java
A	core/src/main/java/com/google/errorprone/refaster/UBreak.java
A	core/src/main/java/com/google/errorprone/refaster/UCatch.java
A	core/src/main/java/com/google/errorprone/refaster/UClassDecl.java
A	core/src/main/java/com/google/errorprone/refaster/UClassIdent.java
A	core/src/main/java/com/google/errorprone/refaster/UClassType.java
A	core/src/main/java/com/google/errorprone/refaster/UConditional.java
A	core/src/main/java/com/google/errorprone/refaster/UContinue.java
A	core/src/main/java/com/google/errorprone/refaster/UDoWhileLoop.java
A	core/src/main/java/com/google/errorprone/refaster/UEnhancedForLoop.java
A	core/src/main/java/com/google/errorprone/refaster/UExpression.java
A	core/src/main/java/com/google/errorprone/refaster/UExpressionStatement.java
A	core/src/main/java/com/google/errorprone/refaster/UForAll.java
A	core/src/main/java/com/google/errorprone/refaster/UForLoop.java
A	core/src/main/java/com/google/errorprone/refaster/UFreeIdent.java
A	core/src/main/java/com/google/errorprone/refaster/UIdent.java
A	core/src/main/java/com/google/errorprone/refaster/UIf.java
A	core/src/main/java/com/google/errorprone/refaster/UInstanceOf.java
A	core/src/main/java/com/google/errorprone/refaster/UIntersectionClassType.java
A	core/src/main/java/com/google/errorprone/refaster/UIntersectionType.java
A	core/src/main/java/com/google/errorprone/refaster/ULabeledStatement.java
A	core/src/main/java/com/google/errorprone/refaster/ULambda.java
A	core/src/main/java/com/google/errorprone/refaster/ULiteral.java
A	core/src/main/java/com/google/errorprone/refaster/ULocalVarIdent.java
A	core/src/main/java/com/google/errorprone/refaster/UMatches.java
A	core/src/main/java/com/google/errorprone/refaster/UMemberReference.java
A	core/src/main/java/com/google/errorprone/refaster/UMemberSelect.java
A	core/src/main/java/com/google/errorprone/refaster/UMethodDecl.java
A	core/src/main/java/com/google/errorprone/refaster/UMethodInvocation.java
A	core/src/main/java/com/google/errorprone/refaster/UMethodType.java
A	core/src/main/java/com/google/errorprone/refaster/UModifiers.java
A	core/src/main/java/com/google/errorprone/refaster/UNewArray.java
A	core/src/main/java/com/google/errorprone/refaster/UNewClass.java
A	core/src/main/java/com/google/errorprone/refaster/UOfKind.java
A	core/src/main/java/com/google/errorprone/refaster/UParens.java
A	core/src/main/java/com/google/errorprone/refaster/UPlaceholderExpression.java
A	core/src/main/java/com/google/errorprone/refaster/UPlaceholderStatement.java
A	core/src/main/java/com/google/errorprone/refaster/UPrimitiveType.java
A	core/src/main/java/com/google/errorprone/refaster/UPrimitiveTypeTree.java
A	core/src/main/java/com/google/errorprone/refaster/URepeated.java
A	core/src/main/java/com/google/errorprone/refaster/UReturn.java
A	core/src/main/java/com/google/errorprone/refaster/USimpleStatement.java
A	core/src/main/java/com/google/errorprone/refaster/USkip.java
A	core/src/main/java/com/google/errorprone/refaster/UStatement.java
A	core/src/main/java/com/google/errorprone/refaster/UStaticIdent.java
A	core/src/main/java/com/google/errorprone/refaster/USynchronized.java
A	core/src/main/java/com/google/errorprone/refaster/UTemplater.java
A	core/src/main/java/com/google/errorprone/refaster/UThrow.java
A	core/src/main/java/com/google/errorprone/refaster/UTree.java
A	core/src/main/java/com/google/errorprone/refaster/UTry.java
A	core/src/main/java/com/google/errorprone/refaster/UType.java
A	core/src/main/java/com/google/errorprone/refaster/UTypeApply.java
A	core/src/main/java/com/google/errorprone/refaster/UTypeCast.java
A	core/src/main/java/com/google/errorprone/refaster/UTypeParameter.java
A	core/src/main/java/com/google/errorprone/refaster/UTypeVar.java
A	core/src/main/java/com/google/errorprone/refaster/UTypeVarIdent.java
A	core/src/main/java/com/google/errorprone/refaster/UUnary.java
A	core/src/main/java/com/google/errorprone/refaster/UUnionType.java
A	core/src/main/java/com/google/errorprone/refaster/UVariableDecl.java
A	core/src/main/java/com/google/errorprone/refaster/UWhileLoop.java
A	core/src/main/java/com/google/errorprone/refaster/UWildcard.java
A	core/src/main/java/com/google/errorprone/refaster/UWildcardType.java
A	core/src/main/java/com/google/errorprone/refaster/Unifiable.java
A	core/src/main/java/com/google/errorprone/refaster/Unifier.java
A	core/src/main/java/com/google/errorprone/refaster/annotation/AfterTemplate.java
A	core/src/main/java/com/google/errorprone/refaster/annotation/AllowCodeBetweenLines.java
A	core/src/main/java/com/google/errorprone/refaster/annotation/AlsoNegation.java
A	core/src/main/java/com/google/errorprone/refaster/annotation/BeforeTemplate.java
A	core/src/main/java/com/google/errorprone/refaster/annotation/Matches.java
A	core/src/main/java/com/google/errorprone/refaster/annotation/MayOptionallyUse.java
A	core/src/main/java/com/google/errorprone/refaster/annotation/NoAutoboxing.java
A	core/src/main/java/com/google/errorprone/refaster/annotation/NotMatches.java
A	core/src/main/java/com/google/errorprone/refaster/annotation/OfKind.java
A	core/src/main/java/com/google/errorprone/refaster/annotation/Placeholder.java
A	core/src/main/java/com/google/errorprone/refaster/annotation/Repeated.java
A	core/src/main/java/com/google/errorprone/refaster/annotation/RequiredAnnotation.java
A	core/src/main/java/com/google/errorprone/refaster/annotation/RequiredAnnotationProcessor.java
A	core/src/main/java/com/google/errorprone/refaster/annotation/UseImportPolicy.java
A	core/src/test/java/com/google/errorprone/apply/ImportStatementsTest.java
A	core/src/test/java/com/google/errorprone/apply/SourceFileTest.java
A	core/src/test/java/com/google/errorprone/refaster/AbstractUTreeTest.java
A	core/src/test/java/com/google/errorprone/refaster/BindingsTest.java
A	core/src/test/java/com/google/errorprone/refaster/ChoiceTest.java
A	core/src/test/java/com/google/errorprone/refaster/CodeTransformerTestHelper.java
A	core/src/test/java/com/google/errorprone/refaster/CompilerBasedTest.java
A	core/src/test/java/com/google/errorprone/refaster/DescriptionBasedDiffTest.java
A	core/src/test/java/com/google/errorprone/refaster/Match.java
A	core/src/test/java/com/google/errorprone/refaster/TemplateIntegrationTest.java
A	core/src/test/java/com/google/errorprone/refaster/TemplatingTest.java
A	core/src/test/java/com/google/errorprone/refaster/UAnnotationTest.java
A	core/src/test/java/com/google/errorprone/refaster/UArrayAccessTest.java
A	core/src/test/java/com/google/errorprone/refaster/UArrayTypeTest.java
A	core/src/test/java/com/google/errorprone/refaster/UArrayTypeTreeTest.java
A	core/src/test/java/com/google/errorprone/refaster/UAssignOpTest.java
A	core/src/test/java/com/google/errorprone/refaster/UAssignTest.java
A	core/src/test/java/com/google/errorprone/refaster/UBinaryTest.java
A	core/src/test/java/com/google/errorprone/refaster/UBlockTest.java
A	core/src/test/java/com/google/errorprone/refaster/UBreakTest.java
A	core/src/test/java/com/google/errorprone/refaster/UClassIdentTest.java
A	core/src/test/java/com/google/errorprone/refaster/UClassTypeTest.java
A	core/src/test/java/com/google/errorprone/refaster/UConditionalTest.java
A	core/src/test/java/com/google/errorprone/refaster/UContinueTest.java
A	core/src/test/java/com/google/errorprone/refaster/UDoWhileLoopTest.java
A	core/src/test/java/com/google/errorprone/refaster/UEnhancedForLoopTest.java
A	core/src/test/java/com/google/errorprone/refaster/UExpressionStatementTest.java
A	core/src/test/java/com/google/errorprone/refaster/UForAllTest.java
A	core/src/test/java/com/google/errorprone/refaster/UForLoopTest.java
A	core/src/test/java/com/google/errorprone/refaster/UFreeIdentTest.java
A	core/src/test/java/com/google/errorprone/refaster/UIfTest.java
A	core/src/test/java/com/google/errorprone/refaster/UInstanceOfTest.java
A	core/src/test/java/com/google/errorprone/refaster/UIntersectionTypeTest.java
A	core/src/test/java/com/google/errorprone/refaster/ULabeledStatementTest.java
A	core/src/test/java/com/google/errorprone/refaster/ULiteralTest.java
A	core/src/test/java/com/google/errorprone/refaster/ULocalVarIdentTest.java
A	core/src/test/java/com/google/errorprone/refaster/UMemberSelectTest.java
A	core/src/test/java/com/google/errorprone/refaster/UMethodInvocationTest.java
A	core/src/test/java/com/google/errorprone/refaster/UMethodTypeTest.java
A	core/src/test/java/com/google/errorprone/refaster/UNewClassTest.java
A	core/src/test/java/com/google/errorprone/refaster/UParensTest.java
A	core/src/test/java/com/google/errorprone/refaster/UPrimitiveTypeTest.java
A	core/src/test/java/com/google/errorprone/refaster/UPrimitiveTypeTreeTest.java
A	core/src/test/java/com/google/errorprone/refaster/URepeatedTest.java
A	core/src/test/java/com/google/errorprone/refaster/UReturnTest.java
A	core/src/test/java/com/google/errorprone/refaster/USkipTest.java
A	core/src/test/java/com/google/errorprone/refaster/UStaticIdentTest.java
A	core/src/test/java/com/google/errorprone/refaster/USynchronizedTest.java
A	core/src/test/java/com/google/errorprone/refaster/UTemplaterTest.java
A	core/src/test/java/com/google/errorprone/refaster/UThrowTest.java
A	core/src/test/java/com/google/errorprone/refaster/UTypeApplyTest.java
A	core/src/test/java/com/google/errorprone/refaster/UTypeCastTest.java
A	core/src/test/java/com/google/errorprone/refaster/UTypeParameterTest.java
A	core/src/test/java/com/google/errorprone/refaster/UTypeVarIdentTest.java
A	core/src/test/java/com/google/errorprone/refaster/UTypeVarTest.java
A	core/src/test/java/com/google/errorprone/refaster/UUnaryTest.java
A	core/src/test/java/com/google/errorprone/refaster/UUnionTypeTest.java
A	core/src/test/java/com/google/errorprone/refaster/UVariableDeclTest.java
A	core/src/test/java/com/google/errorprone/refaster/UWhileLoopTest.java
A	core/src/test/java/com/google/errorprone/refaster/UWildcardTest.java
A	core/src/test/java/com/google/errorprone/refaster/UWildcardTypeTest.java
A	core/src/test/java/com/google/errorprone/refaster/UnificationTest.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/AnonymousClassTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/AnyOfTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/ArrayTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/AssertTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/AutoboxingTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/BinaryTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/BlockPlaceholderTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/ComparisonChainTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/DiamondTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/ExplicitTypesPreservedTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/GenericPlaceholderTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/IfTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/ImplicitTypesInlinedTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/ImportClassDirectlyTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/InferredThisTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/IsInstanceTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/LabelTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/LiteralTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/MayOptionallyUseTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/MethodInvocationTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/MultiBoundTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/MultipleReferencesToIdentifierTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/OneLineToTwoTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/ParenthesesOptionalTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/PlaceholderTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/PrecedenceSensitiveTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/ReturnPlaceholderTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/SamePackageImportsTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/StaticFieldTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/TopLevelTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/TryMultiCatchTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/TryTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/TwoLinesToOneTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/VarargTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/VariableDeclTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/WildcardTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/input/WildcardUnificationTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/AnonymousClassTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/AnyOfTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/ArrayTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/AssertTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/AutoboxingTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/BinaryTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/BlockPlaceholderTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/ComparisonChainTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/DiamondTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/ExplicitTypesPreservedTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/GenericPlaceholderTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/IfTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/ImplicitTypesInlinedTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/ImportClassDirectlyTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/InferredThisTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/IsInstanceTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/LabelTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/LiteralTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/MayOptionallyUseTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/MethodInvocationTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/MultiBoundTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/MultipleReferencesToIdentifierTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/OneLineToTwoTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/ParenthesesOptionalTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/PlaceholderTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/PrecedenceSensitiveTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/ReturnPlaceholderTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/SamePackageImportsTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/StaticFieldTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/TopLevelTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/TryMultiCatchTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/TryTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/TwoLinesToOneTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/VarargTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/VariableDeclTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/WildcardTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/output/WildcardUnificationTemplateExample.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/AnonymousClassTemplate.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/AnyOfTemplate.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/ArrayTemplate.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/AssertTemplate.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/AutoboxingTemplate.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/BinaryTemplate.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/BlockPlaceholderTemplate.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/ComparisonChainTemplate.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/DiamondTemplate.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/ExplicitTypesPreservedTemplate.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/GenericPlaceholderTemplate.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/IfTemplate.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/ImplicitTypesInlinedTemplate.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/ImportClassDirectlyTemplate.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/InferredThisTemplate.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/IsInstanceTemplate.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/LabelTemplate.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/LiteralTemplate.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/MayOptionallyUseTemplate.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/MethodInvocationTemplate.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/MultiBoundTemplate.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/MultipleReferencesToIdentifierTemplate.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/OneLineToTwoTemplate.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/ParenthesesOptionalTemplate.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/PlaceholderTemplate.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/PrecedenceSensitiveTemplate.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/ReturnPlaceholderTemplate.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/SamePackageImportsTemplate.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/StaticFieldTemplate.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/TopLevelTemplate.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/TryMultiCatchTemplate.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/TryTemplate.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/TwoLinesToOneTemplate.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/VarargTemplate.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/VariableDeclTemplate.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/WildcardTemplate.java
A	core/src/test/java/com/google/errorprone/refaster/testdata/template/WildcardUnificationTemplate.java

commit f2616c08d6f91b410e109cd0e8d04d87d4cc8dfe
Author: cushon <cushon@google.com>
Date:   Tue Sep 8 13:23:20 2015 -0700

    Enable UnusedAnonymousClass
    
    RELNOTES: New Error Prone check for unused anonymous classes
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=102586902

M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit b68fdebf4bc2c24c7d3165dffdd7091ff808e5c9
Author: sameb <sameb@google.com>
Date:   Tue Sep 8 11:14:51 2015 -0700

    Better generics for expectErrorMessage.  "? super String" lets folks pass a
    Predicate<String>, Predicate<CharSequence>, and Predicate<Object>, all of which
    are OK.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=102573692

M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java

commit cea591a5bf078cd5e5faed97767aba2c896d7934
Author: sameb <sameb@google.com>
Date:   Sun Jun 7 14:42:34 2015 -0700

    Allow programattic building/matching of error messages within
    CompilationTestHelper.
    
    RELNOTES: None
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=102281763

M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelperTest.java
M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java

commit 02c35f55fca1126e28cdcfa82358579465974035
Author: gnoack <gnoack@google.com>
Date:   Thu Sep 3 09:42:30 2015 -0700

    Markdown fixes.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=102250659

M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitive.java

commit 858818ec831b40ad8aabc5ae6b3b7eaab0eee11d
Author: lowasser <lowasser@google.com>
Date:   Tue Aug 25 13:43:46 2015 -0700

    Migrate the creation path for ErrorProneAnalyzer to use a CodeTransformer all the way out.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=101502717

M	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorProneJavaCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorProneJavacJavaCompiler.java

commit 8dbcf3cf19c7fd2d21562412a2be370d78b1c9f6
Author: lowasser <lowasser@google.com>
Date:   Tue Aug 25 13:33:59 2015 -0700

    Add a very simple CompositeCodeTransformer that can stick multiple CodeTransformers together.  This is the model you want for compile checks, where you just run all the checks independently.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=101501579

A	core/src/main/java/com/google/errorprone/CompositeCodeTransformer.java

commit 63d00ee9877c9244ca8650bd873c611a95827a41
Author: lowasser <lowasser@google.com>
Date:   Tue Aug 25 10:33:39 2015 -0700

    Migrate ErrorProneAnalyzer to run with a CodeTransformer instead of a Scanner.  This is dependent on separate work to obviate the need to run top-level analysis separately.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=101480168

M	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java

commit 04732c20a13577c168751cf90a961f70113135ec
Author: cushon <cushon@google.com>
Date:   Mon Aug 24 22:47:00 2015 -0700

    Enable IsInstanceOfClass
    
    RELNOTES: New check for passing a Class to Class#isInstance(Object)
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=101436862

M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit ce501e9230f54aac72bc6a5d8f62c4b1cd1c1bff
Author: cushon <cushon@google.com>
Date:   Mon Aug 24 18:06:47 2015 -0700

    Add a check for anonymous classes that are never used.
    
    The check detects anonymous classes that are never used, and that cannot have
    side-effects.
    
    Fixes #199
    
    RELNOTES: Add a check for anonymous classes that are never used
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=101424274

A	core/src/main/java/com/google/errorprone/bugpatterns/UnusedAnonymousClass.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/UnusedAnonymousClassTest.java
A	docs/bugpattern/UnusedAnonymousClass.md

commit ce3f1f0e4959614c9a61a9e1b5a7b5cd70678524
Author: eaftan <eaftan@google.com>
Date:   Fri Aug 21 17:17:17 2015 -0700

    Change javac's compilation policy in open-source Error Prone to require that
    classes in the same source file must always be at the same compiler phase, and
    remove Error Prone code related to dealing with multiple top-level classes
    that are at different compiler phases.
    
    javac by default processes each class individually through all the compiler
    phases.  This means that if you have multiple top-level classes in the same
    source file, you cannot analyze the whole compilation unit at once since
    one of the classes will have been lowered already.  This CL passes an option
    to javac to tell it to group classes in the same file and process them in
    lockstep.  This lets us remove complexity from Error Prone, and makes it
    easier to unify with Refaster.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=101266905

M	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	core/src/main/java/com/google/errorprone/SuppressionHelper.java
M	core/src/main/java/com/google/errorprone/analysis/BugCheckerLocalAnalysis.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ChainingConstructorIgnoresParameter.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ClassName.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MultipleTopLevelClasses.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PackageLocation.java
M	core/src/main/java/com/google/errorprone/scanner/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/scanner/Scanner.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ClassNameTest.java

commit c2b1a4df042bd837eb455f8a24e75166e02b6ebd
Author: lowasser <lowasser@google.com>
Date:   Fri Aug 21 15:32:35 2015 -0700

    Move SubContext to c.g.errorprone, supporting safely overriding Context contents.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=101258720

A	core/src/main/java/com/google/errorprone/SubContext.java
A	core/src/test/java/com/google/errorprone/SubContextTest.java

commit 643250584e5b2ece0c6b16f6ed66e17a6f5962a3
Author: lowasser <lowasser@google.com>
Date:   Fri Aug 21 14:50:45 2015 -0700

    Rewrite ErrorProneScannerTransformer to match the usage in ErrorProneAnalyzer better.  The severityMap comes from the scanner itself, not passed in via the Context, and an arbitrary Scanner, not just an ErrorProneScanner, is accepted.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=101255007

M	core/src/main/java/com/google/errorprone/scanner/ErrorProneScannerTransformer.java

commit ac153fb2fb0459b0b36c62d5d79b7097a4bce9fd
Author: cushon <cushon@google.com>
Date:   Fri Aug 21 14:28:39 2015 -0700

    Improve IsInstanceOfClass docs
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=101252873

M	docs/bugpattern/IsInstanceOfClass.md

commit 3637ccb6430811ff1f7d94ebfb56e4250e3c28ce
Author: cushon <cushon@google.com>
Date:   Fri Aug 21 12:46:32 2015 -0700

    Disable IsInstanceOfClass
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=101244351

M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit 9f6b5aee3a56bf88b7f679f237e1198b0498003f
Author: cushon <cushon@google.com>
Date:   Fri Aug 21 12:33:22 2015 -0700

    Add a check for passing a Class literal to Class#isInstance
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=101243445

A	core/src/main/java/com/google/errorprone/bugpatterns/IsInstanceOfClass.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/IsInstanceOfClassTest.java
A	docs/bugpattern/IsInstanceOfClass.md

commit ac8cd950cc73a703ec54c2237fb6c351896238c4
Author: lowasser <lowasser@google.com>
Date:   Fri Aug 21 12:29:33 2015 -0700

    Rewrite CodeTransformer to accept a TreePath instead of just a CompilationUnitTree.  Add an adapter from ErrorProneScanner to CodeTransformer.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=101243162

M	core/src/main/java/com/google/errorprone/CodeTransformer.java
A	core/src/main/java/com/google/errorprone/scanner/ErrorProneScannerTransformer.java

commit 7c0438d52bddc231438d813042b3a966871f5aa0
Author: sameb <sameb@google.com>
Date:   Thu Aug 20 13:54:08 2015 -0700

    Followup changes
    
      * Add ASTHelpers.hasAnnotation(Symbol, String, VisitorState), use it in Matchers.hasAnnotation.
      * Update LocalStore to accept more things.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=101156354

M	core/src/main/java/com/google/errorprone/dataflow/LocalStore.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java

commit 86828e401bb7ddbacf02607ec7646f1a060085ab
Author: cushon <cushon@google.com>
Date:   Tue Aug 18 17:08:03 2015 -0700

    Disallow multiple top-level class declarations.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=100977836

A	core/src/main/java/com/google/errorprone/bugpatterns/MultipleTopLevelClasses.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/MultipleTopLevelClassesTest.java

commit adb487a7b11cef9d154cedebe7f060f433325055
Author: lowasser <lowasser@google.com>
Date:   Tue Aug 18 14:47:48 2015 -0700

    Migrate CodeTransformer to com.google.errorprone.
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=100964337

A	core/src/main/java/com/google/errorprone/CodeTransformer.java

commit 14a1fffd5e94a8835cb7d39c1d6fc5a202c501da
Author: cushon <cushon@google.com>
Date:   Sun Jul 19 11:05:36 2015 -0700

    Work around a type inference change in javac
    
    The javac compiler's behavior when handling wildcards and "capture" type
    variables has been improved for conformance to the language specification. This
    improves type checking behavior in certain unusual circumstances. It is also a
    source-incompatible change: certain uses of wildcards that have compiled in the
    past may fail to compile because of a program's reliance on the javac bug.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=99196709

M	core/src/main/java/com/google/errorprone/matchers/Matchers.java

commit 098eea4c9ca0f9b5ec6b5aa0e3fbf9fab4fd22ea
Author: kmuhlrad <kmuhlrad@google.com>
Date:   Thu Jul 16 15:24:28 2015 -0700

    Turn on GetClassOnClass check
    
    PAI
    RELNOTES:
    - New Error Prone check for calling getClass on a
      Class object.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=99067762

M	core/src/main/java/com/google/errorprone/bugpatterns/GetClassOnClass.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit 29669f6842f6429eb048c26284ed8e1e68c2e322
Author: cushon <cushon@google.com>
Date:   Fri Jul 24 14:55:05 2015 -0700

    Confirm that MissingFail ignores exceptions named 'tolerated'
    
    Also move documentation of the heuristics to markdown so it's visible to users.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=99064918

M	core/src/main/java/com/google/errorprone/bugpatterns/MissingFail.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MissingFailTest.java
A	docs/bugpattern/MissingFail.md

commit 65875dfad3b6defe71d4a47e00b6ed75764ab9c1
Author: cushon <cushon@google.com>
Date:   Fri Jul 24 14:42:23 2015 -0700

    Move ArrayHashCode docs to a sidecar
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=99063744

M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayHashCode.java
A	docs/bugpattern/ArrayHashCode.md

commit 384940fa2917f18a4d7928857448c5554dc961eb
Author: cushon <cushon@google.com>
Date:   Thu Jul 23 13:50:21 2015 -0700

    Rollback of 661381dee2
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=98966765

M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java

commit 97efa36c6e283aa8e7373ad6ea7f0b698a05bed5
Author: cushon <cushon@google.com>
Date:   Wed Jul 22 15:04:07 2015 -0700

    Remove questionable handling of JCFieldAccess from ASTHelpers
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=98874704

M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java

commit cf7bb07b85a98820585425a138f17ada5edb710d
Author: chy <chy@google.com>
Date:   Wed Jul 22 13:39:57 2015 -0700

    Errorprone analyzer for calling query.setKeysOnly() and calling a method on entity that is not needs more properties than a key, and not calling query.setKeysOnly() and only calling methods on entity that only need a key.
    
    RELNOTES: none
    
    Results from global refactoring: [] []
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=98865076

M	core/src/main/java/com/google/errorprone/bugpatterns/MissingFail.java
A	core/src/main/java/com/google/errorprone/matchers/Contains.java
A	core/src/main/java/com/google/errorprone/matchers/DatastoreMatchers.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java

commit 1c728e44f048356a4a3619523a529df67f0f00d5
Author: cushon <cushon@google.com>
Date:   Thu May 7 18:06:20 2015 -0700

    Extend handling of non-canonical imports to include fields and methods.
    
    RELNOTES: New check for non-canonical imports of fields and methods
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=98793924

M	core/src/main/java/com/google/errorprone/bugpatterns/NonCanonicalStaticImport.java
A	core/src/main/java/com/google/errorprone/bugpatterns/NonCanonicalStaticMemberImport.java
A	core/src/main/java/com/google/errorprone/bugpatterns/StaticImports.java
M	core/src/main/java/com/google/errorprone/bugpatterns/UnnecessaryStaticImport.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/NonCanonicalStaticMemberImportTest.java
A	docs/bugpattern/NonCanonicalStaticMemberImport.md

commit f0d1937fbd7def9971605c538be9c66b7f2a2387
Author: cushon <cushon@google.com>
Date:   Tue Jul 21 17:27:41 2015 -0700

    Enable NonCanonicalStaticImport
    
    FEATURE: Promote NonCanonicalStaticImport to an error.
    
    GOOGLE:
    RELNOTES:
    - New Error Prone check for non-canonical static imports (http://[]
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=98791191

M	core/src/main/java/com/google/errorprone/bugpatterns/NonCanonicalStaticImport.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit eb4ff73aabfcf2da2dc6afc9de648dfaee6bd193
Author: cushon <cushon@google.com>
Date:   Tue Jul 21 17:19:54 2015 -0700

    Don't report ClassName errors for public classes
    
    javac already checks that case, so we were double-reporting the error.
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=98790609

M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ClassName.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ClassNameTest.java

commit 1e5c000564aed96cd011591fcaf3d0fe623f7414
Author: cushon <cushon@google.com>
Date:   Mon Jul 20 12:29:47 2015 -0700

    Minor documentation fixes to NonCanonicalStaticImport
    
    RELNOTES: N/A
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=98663743

M	core/src/main/java/com/google/errorprone/bugpatterns/NonCanonicalStaticImport.java
A	docs/bugpattern/NonCanonicalStaticImport.md

commit cc168a034655c407a44d1f0face2aa659c5135d2
Author: eaftan <eaftan@google.com>
Date:   Fri Jul 17 15:48:03 2015 -0700

    Turn on AsyncCallableReturnsNull and AsyncFunctionReturnsNull checks.
    
    RELNOTES:
    - New Error Prone check for returning null from AsyncCallables and
      AsyncFunctions.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=98530304

M	core/src/main/java/com/google/errorprone/bugpatterns/AsyncFunctionReturnsNull.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit d3890b306f741e4032a060407afb36c6e55c1214
Author: erikbodzsar <erikbodzsar@google.com>
Date:   Wed Jul 15 06:42:47 2015 -0700

    Add a category for Dagger checks
    
    RELNOTES: none
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=98304584

M	annotation/src/main/java/com/google/errorprone/BugPattern.java

commit 4b1124329bf32ea45f64231fe1269981ffa6f25d
Author: cgruber <cgruber@google.com>
Date:   Sat Jul 18 13:16:17 2015 -0700

    Fix a bad (presumably out of date) reference in the javadocs to *Checker (which should be *Matcher)
    
    RELNOTES:
      Minor fix to BugCatcher's javadoc
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=97991449

M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java

commit af389657b00bf8dad020031615c3c2f0d4fbec23
Author: cushon <cushon@google.com>
Date:   Tue Jul 7 10:46:10 2015 -0700

    Enable ClassName
    
    RELNOTES: new check to enforce filenames and top-level class names match
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=97686952

M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit 86585d3f0d0ec0605c462919e3f5d2c29aa55e31
Author: eaftan <eaftan@google.com>
Date:   Mon Jul 6 15:13:28 2015 -0700

    Refactor documentation generator.
    
    This is in preparation for extracting examples from code inlined into
    tests. It creates a value type to store information about the example
    and refactors the existing documentation generator to use that instead
    of accessing the example file directly.
    
    It also separates positive and negative examples, and prints the positive
    ones first.
    
    RELNOTES: None
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=97617255

M	core/pom.xml
M	docgen/pom.xml
M	docgen/src/main/java/com/google/errorprone/BugPatternFileGenerator.java
M	docgen/src/main/java/com/google/errorprone/DocGenTool.java
A	docgen/src/main/java/com/google/errorprone/ExampleInfo.java
M	docgen/src/test/java/com/google/errorprone/testdata/DeadException_frontmatter_pygments.md
M	docgen/src/test/java/com/google/errorprone/testdata/DeadException_nofrontmatter_gfm.md

commit 2622c4ed2eacd84b59ebacb4ce82be6fc457a267
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Thu Sep 10 16:55:34 2015 -0700

    documentation: fix yaml frontmatter escaping

M	annotation/src/main/java/com/google/errorprone/BugPattern.java
M	docgen/src/main/java/com/google/errorprone/BugPatternFileGenerator.java
M	docgen/src/test/java/com/google/errorprone/testdata/DeadException_frontmatter_pygments.md

commit 1c33b929d7223b23e282ce6d15f51d601b01da64
Merge: 610679a 9b371e2
Author: Eddie Aftandilian <eaftan@users.noreply.github.com>
Date:   Wed Jul 8 16:55:35 2015 -0700

    Merge pull request #345 from garricko/ant-fork-fixes
    
    Ant forked compile fixes

commit 9b371e22f1aeecdabaac93bc1778264ce8f2d8f8
Author: Garrick Olson <garricko@stanford.edu>
Date:   Tue Jul 7 23:53:43 2015 -0700

    Put jar on the boot classpath rather than classpath, and revert previous class loader hacks

M	ant/src/main/java/com/google/errorprone/ErrorProneExternalCompilerAdapter.java
M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java

commit 610679ae247268b3bd345671c418a063388710d5
Merge: 51ec2fd 9a23c65
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Thu Jul 2 22:36:21 2015 -0700

    Merge pull request #357 from JnRouvignac/master
    
    javac.inject => javax.inject

commit 9a23c656c1ddca6e6938c3e9d5bf45f850a13c82
Author: Jean-Noël Rouvignac <jn.rouvignac@gmail.com>
Date:   Thu Jul 2 23:05:32 2015 +0200

    javac.inject => javax.inject

M	core/src/main/java/com/google/errorprone/bugpatterns/InjectJavaxInjectOnFinalField.java

commit 51ec2fdceb8d3189a92d587b3c7032cf50d7c1ce
Author: cushon <cushon@google.com>
Date:   Mon Jun 29 18:05:25 2015 -0700

    Allow warnings to be suppressed for generated code.
    
    Adds a -XepDisableWarningsInGeneratedCode flag, which if set suppressings
    warnings from being emitted inside code annotation with @Generated. Error are
    not affected.
    
    Fixes #329
    
    RELNOTES: Add -XepDisableWarningsInGeneratedCode to suppress warnings in generated code
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=97185343

M	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorProneJavaCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorProneJavacJavaCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorProneOptions.java
M	core/src/main/java/com/google/errorprone/SuppressionHelper.java
M	core/src/main/java/com/google/errorprone/VisitorState.java
M	core/src/main/java/com/google/errorprone/analysis/BugCheckerLocalAnalysis.java
M	core/src/main/java/com/google/errorprone/matchers/Suppressible.java
M	core/src/main/java/com/google/errorprone/scanner/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/scanner/Scanner.java
M	core/src/main/java/com/google/errorprone/scanner/ScannerSupplier.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneJavaCompilerTest.java

commit 239c2ae3f39b863c407c5ff8e873b559e76681d0
Author: cushon <cushon@google.com>
Date:   Thu Jun 25 14:38:29 2015 -0700

    Fix PackageLocation diagnostics
    
    Instead of trying to infer the expected package name from the path, report the actual package name and the expected path.
    
    RELNOTES: N/A
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=96912198

M	core/src/main/java/com/google/errorprone/bugpatterns/PackageLocation.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PackageLocationTest.java

commit f75bca61dffdf207c9eb38e8c9627d7f6781d924
Author: Garrick Olson <garricko@stanford.edu>
Date:   Thu Jun 25 21:53:29 2015 -0700

    Copy class loader hacks from non-forked ant compiler adapter
    
    This should avoid the NoSuchFieldError: NATIVE_HEADER_OUTPUT if you
    build with JDK8 and run with JDK7

M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java

commit 5aadc37d71610ddadd3d87d66ee220ff33fa88f7
Author: Garrick Olson <garricko@stanford.edu>
Date:   Thu Jun 25 16:06:09 2015 -0700

    Update snapshot version

M	examples/ant/ant_fork/build.xml

commit 9c4dbd8e72308497a30755cbe09004b6bc3e0cc2
Author: Garrick Olson <garricko@stanford.edu>
Date:   Thu Jun 25 16:05:45 2015 -0700

    Do not add tools.jar to forked compile

M	ant/src/main/java/com/google/errorprone/ErrorProneExternalCompilerAdapter.java

commit 8bdc63d45ad9a27e2243af8267202270f498a4bc
Author: Garrick Olson <garricko@stanford.edu>
Date:   Thu Jun 25 16:05:07 2015 -0700

    Avoid CreateProcess error=206 on Windows
    
    Make sure command lines involving many files get placed in a temp file
    to avoid overflowing the command buffer

M	ant/src/main/java/com/google/errorprone/ErrorProneExternalCompilerAdapter.java

commit 5f29fe6f504ca430f430096b90d76945599adf68
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Tue Jun 23 15:40:20 2015 -0700

    Update examples to use latest version

M	examples/gradle/build.gradle
M	examples/maven/pom.xml

commit b71f14499c6ed9edd21e2293f451ea4faffa4364
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Tue Jun 23 15:33:31 2015 -0700

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	annotations/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit 4beb2f6fb2e9d83d1798ef2448ac6cbdcf5b9c88
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Tue Jun 23 15:33:26 2015 -0700

    [maven-release-plugin] prepare release v2.0.4

M	annotation/pom.xml
M	annotations/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit 8af272e681e9b8430445efc9c428f4386421bc37
Author: cushon <cushon@google.com>
Date:   Mon Jun 22 11:05:18 2015 -0700

    Small fixes to TypeParameterUnusedInFormals
    
    - Don't add casts to Object. (The fixes could still add unnecessary casts, but
      a general fix is difficult.)
    
    - Handle intersection types.
    
    Fixes #343
    
    RELNOTES: N/A
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=96585391

M	core/src/main/java/com/google/errorprone/bugpatterns/TypeParameterUnusedInFormals.java
M	core/src/test/java/com/google/errorprone/bugpatterns/TypeParameterUnusedInFormalsTest.java

commit 8c129199c4422531b356f33a35291933a65b1637
Author: cushon <cushon@google.com>
Date:   Thu Jun 18 16:00:43 2015 -0700

    Unredact TODOs
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=96356988

M	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
M	core/src/main/java/com/google/errorprone/SuppressionHelper.java
M	core/src/main/java/com/google/errorprone/VisitorState.java
M	core/src/main/java/com/google/errorprone/analysis/TopLevelAnalysisWithSeverity.java
M	core/src/main/java/com/google/errorprone/bugpatterns/CannotMockFinalClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ComparisonOutOfRange.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ForOverrideChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/IncompatibleModifiersChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit3TestNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TestNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MalformedFormatString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MissingFail.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NoAllocationChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitive.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsExpensiveString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/RequiredModifiersChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfAssignment.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StaticAccessedFromInstance.java
M	core/src/main/java/com/google/errorprone/bugpatterns/TryFailThrowable.java
M	core/src/main/java/com/google/errorprone/bugpatterns/TypeParameterUnusedInFormals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/WaitNotInLoop.java
M	core/src/main/java/com/google/errorprone/bugpatterns/WildcardImport.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/DoubleCheckedLocking.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinder.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedBySymbolResolver.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzer.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/SynchronizeOnNonFinalField.java
M	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/Nullness.java
M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java
M	core/src/main/java/com/google/errorprone/matchers/CompileTimeConstantExpressionMatcher.java
M	core/src/main/java/com/google/errorprone/matchers/Constructor.java
M	core/src/main/java/com/google/errorprone/matchers/Description.java
M	core/src/main/java/com/google/errorprone/matchers/JUnitMatchers.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/matchers/NextStatement.java
M	core/src/main/java/com/google/errorprone/matchers/method/ConstructorMatcherImpl.java
M	core/src/main/java/com/google/errorprone/matchers/method/MethodSignatureMatcherImpl.java
M	core/src/main/java/com/google/errorprone/matchers/method/ParameterMatcherImpl.java
M	core/src/main/java/com/google/errorprone/predicates/type/DescendantOf.java
M	core/src/main/java/com/google/errorprone/scanner/Scanner.java
M	core/src/main/java/com/google/errorprone/scanner/ScannerSupplierImpl.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NonOverridingEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitiveTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/DivZeroPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/MalformedFormatStringNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/MisusedWeekYearPositiveCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/OverridesPositiveCase2.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/OverridesPositiveCase3.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/OverridesPositiveCase4.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/WaitNotInLoopNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinderTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByCheckerTest.java
M	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/testdata/NullnessPropagationTransferCases4.java
M	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/testdata/NullnessPropagationTransferCases5.java
M	core/src/test/java/com/google/errorprone/matchers/AnnotationTest.java
M	core/src/test/java/com/google/errorprone/matchers/CompileTimeConstantExpressionMatcherTest.java
M	core/src/test/java/com/google/errorprone/matchers/ConstructorOfClassTest.java
M	core/src/test/java/com/google/errorprone/matchers/DescendantOfTransitiveTest.java

commit 5bc8d851e199bf3ddc131ccf0f0604d60a0e0970
Merge: 5629caa ef5ace0
Author: Eddie Aftandilian <eaftan@users.noreply.github.com>
Date:   Fri Jun 19 14:22:07 2015 -0700

    Merge pull request #344 from tbroyer/patch-1
    
    Update Gradle example to use latest plugin release

commit 5629caa29a0d3913f4aebae6b2f4cfbbe51334c0
Author: lowasser <lowasser@google.com>
Date:   Tue Jun 16 12:27:14 2015 -0700

    Fix NoAllocationChecker to not care about arrays in annotations.
    
    RELNOTES: NoAllocationChecker no longer generates false positives on arrays in annotations.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=96132107

M	core/src/main/java/com/google/errorprone/bugpatterns/NoAllocationChecker.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/NoAllocationCheckerNegativeCases.java

commit 37f22f05105245e4bc2363a81f6a314a755f4092
Author: cushon <cushon@google.com>
Date:   Mon Jun 15 20:19:37 2015 -0700

    Handle generic classes in onExactClass()
    
    by erasing the types before comparing them.
    
    RELNOTES: N/A
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=96072304

M	core/src/main/java/com/google/errorprone/bugpatterns/GetClassOnClass.java
M	core/src/main/java/com/google/errorprone/predicates/type/Exact.java
M	core/src/main/java/com/google/errorprone/predicates/type/ExactAny.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java

commit 78fc6b4ab86bee79fba8d698cc8092fba0bfb5ce
Author: eaftan <eaftan@google.com>
Date:   Mon Jun 15 14:16:11 2015 -0700

    Add methods from java.nio.file.Path to ReturnValueIgnored.
    
    RELNOTES: ReturnValueIgnored now flags misuses of java.nio.file.Path.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=96042616

M	core/src/main/java/com/google/errorprone/bugpatterns/ReturnValueIgnored.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ReturnValueIgnoredPositiveCases.java

commit 5a89046a4f1f9ce1f51d2e8e5021cb458ea18f65
Author: chy <chy@google.com>
Date:   Fri Jun 12 15:31:11 2015 -0700

    Added a check for calling getClass() on Class (reflective types).
    
    RELNOTES: adding Class.getClass() check
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=95880402

A	core/src/main/java/com/google/errorprone/bugpatterns/GetClassOnClass.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/GetClassOnClassTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/GetClassOnClassNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/GetClassOnClassPositiveCases.java

commit ef5ace0bd897292e2a486006746543142b84e9cd
Author: Thomas Broyer <t.broyer@ltgt.net>
Date:   Fri Jun 12 15:45:31 2015 +0200

    Update Gradle example to use latest plugin release
    
    Uses fixed versions as `latest.release` no longer works with the Gradle Plugin Portal.
    Also uses a fixed version for EP as a “best practice” to make the build reproducible.

M	examples/gradle/build.gradle

commit 85b5f9b62166c9698e9ea5a9b73cc25ee354e2cd
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Jun 9 13:54:43 2015 -0700

    Use EnumSet in NoAllocationChecker.
    
    RELNOTES: none
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=95570540

M	core/src/main/java/com/google/errorprone/bugpatterns/NoAllocationChecker.java

commit f9db54ade543e706d66eeb29123a015e568c8c59
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Jun 8 10:43:10 2015 -0700

    Make PackageLocation unsuppressible
    
    RELNOTES: N/A
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=95451467

M	core/src/main/java/com/google/errorprone/bugpatterns/PackageLocation.java

commit 83290c55ecf72a666129c683f2f236193d781b73
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Jun 9 14:03:17 2015 -0700

    Update maven-compiler-plugin to 3.3 in example.

M	examples/maven/pom.xml

commit 9689c6bae106364af725bd3775dbcfcc63aec9d0
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Jun 9 11:03:20 2015 -0700

    Add comment explaining why we have to set source/target in pom.xml.

M	examples/maven/pom.xml

commit a0004b4257b1966c1dcef9c26fcc24942d210d98
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Jun 9 10:56:43 2015 -0700

    Update Maven example to use latest EP release.

M	examples/maven/error_prone_should_flag/README.txt
M	examples/maven/pom.xml

commit 71ce253d87e2aed8280cd667aa2fe34a42b3cda9
Merge: 28e24d0 967f84c
Author: Eddie Aftandilian <eaftan@users.noreply.github.com>
Date:   Thu Jun 4 14:50:23 2015 -0700

    Merge pull request #341 from google/fix_platform_line_separator_issue
    
    Fix platform line separator issue

commit 967f84c72e65500bf35fb106000fb81fd685faab
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Jun 4 13:27:16 2015 -0700

    Avoid platform dependencies in ASTHelpersTest.
    
    For tests that expect a specific offset in the file, add separate tests for
    Windows and UNIX line separators, instead of using the platform's line
    separator.  This ensures that the tests are hermetic and do not depend on the
    platform on which they are run.

M	core/src/test/java/com/google/errorprone/util/ASTHelpersTest.java

commit 6bf1015bc50bb2561c153c35d6515de0d3af7afb
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Jun 3 17:18:13 2015 -0700

    Makes ASTHelpersTest pass on Windows.
    
    Windows uses 2-character line separators, but some of the tests in
    ASTHelpers encode positions assuming a single-character line separator.
    This change makes the tests compute the correct position regardless of
    the platform's line separator.
    
    Fixes #336.

M	core/src/test/java/com/google/errorprone/util/ASTHelpersTest.java

commit 28e24d02683bad4678f02da903225a23076d5041
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri May 29 13:40:43 2015 -0700

    Fix type

M	core/pom.xml

commit ccdc295fb8ca21dedc0226f111d2c2af099c2d37
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Tue May 26 17:48:30 2015 -0700

    Update bugpattern file generation
    
    -add summary to frontmatter
    -emit frontmatter xor html metadata
    -add script for updating generated content

M	docgen/src/main/java/com/google/errorprone/BugPatternFileGenerator.java
M	docgen/src/test/java/com/google/errorprone/testdata/DeadException_frontmatter_pygments.md
M	docgen/src/test/java/com/google/errorprone/testdata/DeadException_nofrontmatter_gfm.md
A	util/update-local-pages.sh

commit c0528123f34abe2fad3f36f8bbd9d0cd5a78ab24
Merge: 1f48936 b02fe25
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Wed May 27 11:11:00 2015 -0700

    Merge pull request #335 from google/finally_altname
    
    Add ThrowFromFinallyBlock as an altname for Finally.

commit b02fe25bb4902e2903b469ea52663e1a458af089
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed May 27 10:49:59 2015 -0700

    Add ThrowFromFinallyBlock as an altname for Finally.
    
    Fixes #333

M	core/src/main/java/com/google/errorprone/bugpatterns/Finally.java

commit 1f489360460e0058f23570933ceb0593b52ec397
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Thu May 21 17:20:05 2015 -0700

    Add null-checks to WrongParameterPackage
    
    Fixes #330
    
    RELNOTES: N/A
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=94239141

M	core/src/main/java/com/google/errorprone/bugpatterns/WrongParameterPackage.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/bugpatterns/WrongParameterPackageTest.java

commit 733e883c38978ba0fd58ba17fd2a7a828ef1662b
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri May 22 10:35:29 2015 -0700

    Sync with internal

M	annotation/src/main/java/com/google/errorprone/BugPattern.java
M	docgen/src/main/java/com/google/errorprone/DocGenProcessor.java

commit 19ebb59c1b8808f0d67c29cd69ba9c4e4c25506f
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Tue May 19 10:53:18 2015 -0700

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	annotations/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit 31efad5242c3f9e271c11be27479ecf91ef7269d
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Tue May 19 10:53:12 2015 -0700

    [maven-release-plugin] prepare release v2.0.3

M	annotation/pom.xml
M	annotations/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit 72bd09a5a52f92be7d3bd3e5595b3b6550b5c6fe
Author: tom-smalls <tommckee@gmail.com>
Date:   Thu May 14 16:04:54 2015 -0700

    Stop ignoring everything under .idea

M	.gitignore

commit 101e84bef61f2f7f913a3a2a137dacd65b9adf73
Merge: a1b536f 3c97f9e
Author: Eddie Aftandilian <eaftan@users.noreply.github.com>
Date:   Thu May 14 14:18:47 2015 -0700

    Merge pull request #328 from cushon/google-style
    
    Add google intellij style.

commit 3c97f9eac60b95e95b09193f724ae43a5244daad
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Thu May 14 11:35:38 2015 -0700

    Add google intellij style.
    
    Apparently intellij 14 won't pick this up from the project's .idea directory,
    so it has to be copied to, e.g., `~/Library/Preferences/IdeaIC14/codestyles/`

A	.idea/GoogleStyle.xml

commit a1b536f9d1040d968159fd2e9f563977c8d83c87
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri May 8 09:39:35 2015 -0700

    Turn on NonOverridingEquals check in shipshape canary.
    
    RELNOTES:
    - Turn on NonOverridingEquals warning.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=93137994

M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java

commit 20ea90891d96e3fb19be71cc710fd79e1838fd3c
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu May 7 17:02:32 2015 -0700

    Update CovariantEquals check
    
    Detects more cases and doesn't provide a fix when it doesn't make sense. Also
    stops flagging static equals methods.  And improves the documentation.
    
    RELNOTES:
    - Improvements to CovariantEquals/NonOverridingEquals check.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=93082349

D	core/src/main/java/com/google/errorprone/bugpatterns/CovariantEquals.java
A	core/src/main/java/com/google/errorprone/bugpatterns/NonOverridingEquals.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
M	core/src/main/java/com/google/errorprone/suppliers/Suppliers.java
D	core/src/test/java/com/google/errorprone/bugpatterns/CovariantEqualsTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/NonOverridingEqualsTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/CovariantEqualsNegativeCases.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/CovariantEqualsPositiveCase1.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/CovariantEqualsPositiveCase2.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/CovariantEqualsPositiveCase3.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/CovariantEqualsPositiveCase4.java
D	core/src/test/java/com/google/errorprone/bugpatterns/testdata/CovariantEqualsPositiveCase5.java
A	docs/bugpattern/NonOverridingEquals.md

commit 99cdb7996091b88969c862feed16bdaf5cbb318e
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Thu Apr 30 18:31:51 2015 -0700

    Remove CompilationTestHelper.newInstance(BugChecker, Class<?>)
    
    It's misleading, because it doesn't allow per-instance state to be propagated
    through: we call getClass() and then drop the instance that's passed in.
    
    RELNOTES: N/A
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=92514999

M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelperTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayHashCodeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayToStringCompoundAssignmentTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayToStringConcatenationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayToStringTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/AssertFalseTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/AsyncFunctionReturnsNullTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/BadShiftAmountTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CannotMockFinalClassTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ChainingConstructorIgnoresParameterTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CheckReturnValueTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ClassCanBeStaticTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ClassNameTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CollectionIncompatibleTypeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ComparisonOutOfRangeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CompileTimeConstantCheckerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CovariantEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DeadExceptionTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DepAnnTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DivZeroTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ElementsCountedInLoopTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/EmptyIfStatementTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/EqualsHashCodeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/EqualsNaNTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/FinallyTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ForOverrideCheckerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceAssistedInjectScopingTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceAssistedParametersTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceInjectOnFinalFieldTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceOverridesGuiceInjectableMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceOverridesJavaxInjectableMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/IncompatibleModifiersCheckerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnConstructorsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnSameConstructorTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectInvalidTargetingOnScopingAnnotationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectJavaxInjectOnAbstractMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectJavaxInjectOnFinalFieldTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectMoreThanOneInjectableConstructorTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectMoreThanOneQualifierTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectMoreThanOneScopeAnnotationOnClassTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectOverlappingQualifierAndScopeAnnotationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectScopeAnnotationOnInterfaceOrAbstractClassTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectScopeOrQualifierAnnotationRetentionTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectedConstructorAnnotationsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InvalidPatternSyntaxTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JMockTestWithoutRunWithOrRuleAnnotationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit3TestNotRunTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4SetUpNotRunTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4TearDownNotRunTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4TestNotRunTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffixTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MalformedFormatStringTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MissingCasesInEnumSwitchTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MissingFailTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MisusedWeekYearTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ModifyingCollectionWithItselfTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NarrowingCompoundAssignmentTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NoAllocationCheckerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NonAtomicVolatileUpdateTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NonCanonicalStaticImportTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NonFinalCompileTimeConstantTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NonRuntimeAnnotationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NullablePrimitiveTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NumericEqualityTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/OverridesTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PackageLocationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitiveTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsInvalidPlaceholderTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PrimitiveArrayPassedToVarargsMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ProtoFieldNullComparisonTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ProtoFieldPreconditionsCheckNotNullTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/RequiredModifiersCheckerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ReturnValueIgnoredTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SelfAssignmentTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SelfEqualityTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SelfEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SizeGreaterThanOrEqualsZeroTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/StaticAccessedFromInstanceTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/StringBuilderInitWithCharTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/StringEqualityTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SuppressWarningsDeprecatedTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/TryFailThrowableTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/TypeParameterUnusedInFormalsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/UnnecessaryStaticImportTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/UnnecessaryTypeArgumentTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/WaitNotInLoopTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/WildcardImportTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/WrongParameterPackageTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/DoubleCheckedLockingTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByCheckerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByLockMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByValidatorTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/LockMethodCheckerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/SynchronizeOnNonFinalFieldTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/UnlockMethodCheckerTest.java
M	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java
M	core/src/test/java/com/google/errorprone/matchers/MatchersTest.java

commit 073ddda42da015789db87d50c803e23d7da08a68
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Tue Apr 28 13:50:10 2015 -0700

    Make Error Prone less thread-hostile
    
    Some checks rely on mutable per-instance state, which makes them un-threadsafe.
    This change refactors scanner creation to instantiate new instances of checks
    for each compilation.
    
    RELNOTES: N/A
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=92283383

A	core/src/main/java/com/google/errorprone/BugCheckerInfo.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/WildcardImport.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
M	core/src/main/java/com/google/errorprone/scanner/InstanceReturningScannerSupplierImpl.java
M	core/src/main/java/com/google/errorprone/scanner/ScannerSupplier.java
M	core/src/main/java/com/google/errorprone/scanner/ScannerSupplierImpl.java
M	core/src/test/java/com/google/errorprone/CommandLineFlagTest.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelperTest.java
M	core/src/test/java/com/google/errorprone/DiagnosticKindTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
M	core/src/test/java/com/google/errorprone/MatcherChecker.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SelfEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/WildcardImportTest.java
M	core/src/test/java/com/google/errorprone/matchers/MatchersTest.java
M	core/src/test/java/com/google/errorprone/scanner/ScannerSupplierTest.java
M	core/src/test/java/com/google/errorprone/suppress/CustomSuppressionTest.java
M	core/src/test/java/com/google/errorprone/suppress/UnsuppressibleTest.java

commit 86fabc1a6ab1adbaa54ff76e47fe4b68673783d7
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Apr 24 14:16:57 2015 -0700

    Add a check for double-checked locking on non-volatile fields
    
    RELNOTES: new check for double-checked locking on non-volatile fields
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=92013627

A	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/DoubleCheckedLocking.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/DoubleCheckedLockingTest.java
A	docs/bugpattern/DoubleCheckedLocking.md

commit 9fdeba4bb365ab97c2d53e8c5d263b37691fa4b6
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Apr 23 11:03:19 2015 -0700

    Multiple improvements to WaitNotInLoop.
    
    Changes:
    1) Now detects only the case where the wait is not in a loop. No longer detects
       the case where it is in a loop, but the synchronized block is inside the
       loop. (I will move that to a separate check)
    2) Much better explanation in the markdown file, including suggestions for how
       to fix common patterns.
    3) Now matches Condition.await() in addition to Object.wait().
    4) Now produces a suggested fix for the simple case of changing the enclosing
       if to a while.
    
    RELNOTES:
    - Improvements to WaitNotInLoop. Detects a somewhat different set of problems,
      but explains them better, and fixes a subset.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=91902359

M	core/src/main/java/com/google/errorprone/bugpatterns/WaitNotInLoop.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
A	core/src/main/java/com/google/errorprone/matchers/WaitMatchers.java
A	core/src/test/java/com/google/errorprone/MatcherChecker.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/WaitNotInLoopNegativeCases.java
M	core/src/test/java/com/google/errorprone/bugpatterns/testdata/WaitNotInLoopPositiveCases.java
A	core/src/test/java/com/google/errorprone/matchers/MatchersTest.java
A	docs/bugpattern/WaitNotInLoop.md

commit 5b393acb32810bc45e960a5f83f51194d7237a37
Author: tom-smalls <tommckee@gmail.com>
Date:   Fri Apr 17 14:12:08 2015 +0100

    Create a checker to ensure that a jMock Mockery is assigned as a JUnit rule
    or uses the jMock test runner.

M	annotation/src/main/java/com/google/errorprone/BugPattern.java
M	core/pom.xml
A	core/src/main/java/com/google/errorprone/bugpatterns/JMockTestWithoutRunWithOrRuleAnnotation.java
M	core/src/main/java/com/google/errorprone/matchers/JUnitMatchers.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/JMockTestWithoutRunWithOrRuleAnnotationTest.java

commit 48484507f8bf39dd3b1aa388acff018d9a161a96
Merge: 2c5d979 88042fb
Author: Eddie Aftandilian <eaftan@users.noreply.github.com>
Date:   Mon Apr 20 16:20:01 2015 -0700

    Merge pull request #319 from cushon/bazel
    
    Initial bazel build

commit 2c5d9792bcbc47ee07bd0ce24c7a6e80ee989788
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Sat Apr 18 14:24:16 2015 -0700

    Unbreak bugpattern docs
    
    Move autogenerated warning after frontmatter.

M	docgen/src/main/java/com/google/errorprone/BugPatternFileGenerator.java
M	docgen/src/test/java/com/google/errorprone/testdata/DeadException_frontmatter_pygments.md

commit 88042fb7ff4a1fe79a18404ef711c487b6ef4bd7
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Apr 17 16:56:50 2015 -0700

    Initial bazel build

M	WORKSPACE
A	annotation/BUILD
A	annotations/BUILD
A	core/BUILD
A	third_party/java/auto/BUILD

commit 21d1511af01f2b463d709800ff7a65509cae2fe7
Author: cushon <cushon@google.com>
Date:   Fri Apr 17 13:43:37 2015 -0700

    Move resources into java/ directories
    
    Having separate java and resource directories is a maven-ism that makes using
    bazel more difficult (see https://github.com/google/bazel/issues/97).
    
    RELNOTES: N/A
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=91436330

M	core/pom.xml
A	core/src/main/java/com/google/errorprone/errors.properties
D	core/src/main/resources/com/google/errorprone/errors.properties
M	core/src/test/java/com/google/errorprone/CommandLineFlagTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneInMemoryFileManager.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayEqualsNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayEqualsNegativeCases2.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayEqualsPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayEqualsPositiveCases2.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayHashCodeNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayHashCodeNegativeCases2.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayHashCodePositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayHashCodePositiveCases2.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayStringConcatenationNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayStringConcatenationPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayToStringCompoundAssignmentNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayToStringCompoundAssignmentPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayToStringNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayToStringPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/AssertFalseNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/AssertFalsePositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/AsyncFunctionReturnsNullNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/AsyncFunctionReturnsNullPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/BadShiftAmountNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/BadShiftAmountPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/CannotMockFinalClassNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/CannotMockFinalClassNegativeCases2.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/CannotMockFinalClassPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ChainingConstructorIgnoresParameterNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ChainingConstructorIgnoresParameterPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/CheckReturnValueNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/CheckReturnValuePositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ClassCanBeStaticNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ClassCanBeStaticPositiveCase1.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ClassCanBeStaticPositiveCase2.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ClassCanBeStaticPositiveCase3.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/CollectionIncompatibleTypeClassCast.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/CollectionIncompatibleTypeNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/CollectionIncompatibleTypeOutOfBounds.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/CollectionIncompatibleTypePositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ComparisonOutOfRangeNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ComparisonOutOfRangePositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/CovariantEqualsNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/CovariantEqualsPositiveCase1.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/CovariantEqualsPositiveCase2.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/CovariantEqualsPositiveCase3.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/CovariantEqualsPositiveCase4.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/CovariantEqualsPositiveCase5.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/DeadExceptionNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/DeadExceptionPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/DeadExceptionTestingNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/DepAnnNegativeCase1.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/DepAnnNegativeCase2.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/DepAnnPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/DivZeroNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/DivZeroPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ElementsCountedInLoopNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ElementsCountedInLoopPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/EmptyIfStatementNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/EmptyIfStatementPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/EqualsHashCodeTestNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/EqualsHashCodeTestPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/EqualsNaNNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/EqualsNaNPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/FallthroughSuppressionNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/FallthroughSuppressionPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/FallthroughSuppressionToBeExtended.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/FinallyNegativeCase1.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/FinallyNegativeCase2.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/FinallyPositiveCase1.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/FinallyPositiveCase2.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/GuiceAssistedInjectScopingNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/GuiceAssistedInjectScopingPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/GuiceAssistedParametersNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/GuiceAssistedParametersPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/GuiceInjectOnFinalFieldNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/GuiceInjectOnFinalFieldPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/GuiceOverridesGuiceInjectableMethodNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/GuiceOverridesGuiceInjectableMethodPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/GuiceOverridesJavaxInjectableMethodNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/GuiceOverridesJavaxInjectableMethodPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectAssistedInjectAndInjectOnConstructorsNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectAssistedInjectAndInjectOnConstructorsPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectAssistedInjectAndInjectOnSameConstructorNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectAssistedInjectAndInjectOnSameConstructorPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectInvalidTargetingOnScopingAnnotationNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectInvalidTargetingOnScopingAnnotationPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectJavaxInjectOnAbstractMethodNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectJavaxInjectOnAbstractMethodPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectJavaxInjectOnFinalFieldNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectJavaxInjectOnFinalFieldPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectMoreThanOneInjectableConstructorNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectMoreThanOneInjectableConstructorPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectMoreThanOneQualifierNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectMoreThanOneQualifierPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectMoreThanOneScopeAnnotationOnClassNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectMoreThanOneScopeAnnotationOnClassPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectOverlappingQualifierAndScopeAnnotationNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectOverlappingQualifierAndScopeAnnotationPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectScopeAnnotationOnInterfaceOrAbstractClassNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectScopeAnnotationOnInterfaceOrAbstractClassPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectScopeOrQualifierAnnotationRetentionNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectScopeOrQualifierAnnotationRetentionPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectedConstructorAnnotationsNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectedConstructorAnnotationsPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InvalidPatternSyntaxNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/InvalidPatternSyntaxPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit3TestNotRunNegativeCase1.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit3TestNotRunNegativeCase2.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit3TestNotRunNegativeCase3.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit3TestNotRunNegativeCase4.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit3TestNotRunNegativeCase5.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit3TestNotRunPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4SetUpNotRunNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4SetUpNotRunPositiveCaseCustomBefore.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4SetUpNotRunPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4TearDownNotRunNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4TearDownNotRunPositiveCaseCustomAfter.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4TearDownNotRunPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4TestNotRunBaseClass.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4TestNotRunNegativeCase1.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4TestNotRunNegativeCase2.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4TestNotRunNegativeCase3.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4TestNotRunNegativeCase4.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4TestNotRunNegativeCase5.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4TestNotRunPositiveCase1.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4TestNotRunPositiveCase2.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/LongLiteralLowerCaseSuffixNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/LongLiteralLowerCaseSuffixPositiveCase1.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/LongLiteralLowerCaseSuffixPositiveCase2.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/MalformedFormatStringNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/MalformedFormatStringPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/MissingFailNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/MissingFailNegativeCases2.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/MissingFailPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/MissingFailPositiveCases2.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/MissingFailPositiveCases3.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/MisusedWeekYearNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/MisusedWeekYearPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ModifyingCollectionWithItselfNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ModifyingCollectionWithItselfPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/NoAllocationCheckerNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/NoAllocationCheckerPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/NonAtomicVolatileUpdateNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/NonAtomicVolatileUpdatePositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/NonRuntimeAnnotationNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/NonRuntimeAnnotationPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/NullablePrimitiveNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/NullablePrimitivePositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/NumericEqualityNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/NumericEqualityPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/OrderingFromPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/OverridesNegativeCase1.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/OverridesNegativeCase2.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/OverridesNegativeCase3.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/OverridesPositiveCase1.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/OverridesPositiveCase2.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/OverridesPositiveCase3.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/OverridesPositiveCase4.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/OverridesPositiveCase5.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsCheckNotNullNegativeCase1.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsCheckNotNullNegativeCase2.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsCheckNotNullPositiveCase1.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsCheckNotNullPositiveCase2.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsCheckNotNullPositiveCase3.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsCheckNotNullPrimitiveNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsCheckNotNullPrimitivePositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsExpensiveStringNegativeCase1.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsExpensiveStringNegativeCase2.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsExpensiveStringPositiveCase1.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsInvalidPlaceholderNegativeCase1.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsInvalidPlaceholderPositiveCase1.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/PrimitiveArrayPassedToVarargsMethodNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/PrimitiveArrayPassedToVarargsMethodPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ProtoFieldNullComparisonNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ProtoFieldNullComparisonPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ProtoFieldPreconditionsCheckNotNullNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ProtoFieldPreconditionsCheckNotNullPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ReturnValueIgnoredNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/ReturnValueIgnoredPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfAssignmentNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfAssignmentPositiveCases1.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfAssignmentPositiveCases2.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfEqualityNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfEqualityPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfEqualsNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfEqualsPositiveCase1.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfEqualsPositiveCase2.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SizeGreaterThanOrEqualsZeroNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SizeGreaterThanOrEqualsZeroPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/StaticAccessedFromInstanceNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/StaticAccessedFromInstancePositiveCase1.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/StaticAccessedFromInstancePositiveCase2.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/StringBuilderInitWithCharNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/StringBuilderInitWithCharPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/StringEqualityNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/StringEqualityPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SuppressWarningsDeprecatedNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/SuppressWarningsDeprecatedPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/TryFailThrowableNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/TryFailThrowablePositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/WaitNotInLoopNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/WaitNotInLoopPositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/WrongParameterPackageNegativeCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/WrongParameterPackagePositiveCases.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/proto/ProtoTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/testdata/proto/proto_test.proto
A	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/testdata/NullnessPropagationTransferCases1.java
A	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/testdata/NullnessPropagationTransferCases2.java
A	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/testdata/NullnessPropagationTransferCases3.java
A	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/testdata/NullnessPropagationTransferCases4.java
A	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/testdata/NullnessPropagationTransferCases5.java
A	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/testdata/NullnessPropagationTransferCases6.java
A	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/testdata/NullnessPropagationTransferCases7.java
A	core/src/test/java/com/google/errorprone/suppress/testdata/CustomSuppressionNegativeCases.java
A	core/src/test/java/com/google/errorprone/suppress/testdata/CustomSuppressionPositiveCases.java
A	core/src/test/java/com/google/errorprone/suppress/testdata/SuppressWarningsNegativeCases.java
A	core/src/test/java/com/google/errorprone/suppress/testdata/UnsuppressiblePositiveCases.java
A	core/src/test/java/com/google/errorprone/testdata/CommandLineFlagTestFile.java
A	core/src/test/java/com/google/errorprone/testdata/ExtendedMultipleTopLevelClassesWithErrors.java
A	core/src/test/java/com/google/errorprone/testdata/ExtendedMultipleTopLevelClassesWithNoErrors.java
A	core/src/test/java/com/google/errorprone/testdata/FlowConstants.java
A	core/src/test/java/com/google/errorprone/testdata/FlowSub.java
A	core/src/test/java/com/google/errorprone/testdata/FlowSuper.java
A	core/src/test/java/com/google/errorprone/testdata/MultipleTopLevelClassesWithErrors.java
A	core/src/test/java/com/google/errorprone/testdata/MultipleTopLevelClassesWithNoErrors.java
A	core/src/test/java/com/google/errorprone/testdata/UsesAnnotationProcessor.java
D	core/src/test/resources/com/google/errorprone/CommandLineFlagTestFile.java
D	core/src/test/resources/com/google/errorprone/ExtendedMultipleTopLevelClassesWithErrors.java
D	core/src/test/resources/com/google/errorprone/ExtendedMultipleTopLevelClassesWithNoErrors.java
D	core/src/test/resources/com/google/errorprone/FlowConstants.java
D	core/src/test/resources/com/google/errorprone/FlowSub.java
D	core/src/test/resources/com/google/errorprone/FlowSuper.java
D	core/src/test/resources/com/google/errorprone/MultipleTopLevelClassesWithErrors.java
D	core/src/test/resources/com/google/errorprone/MultipleTopLevelClassesWithNoErrors.java
D	core/src/test/resources/com/google/errorprone/NullAnnotationProcessor.java
D	core/src/test/resources/com/google/errorprone/UsesAnnotationProcessor.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayEqualsNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayEqualsNegativeCases2.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayEqualsPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayEqualsPositiveCases2.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayHashCodeNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayHashCodeNegativeCases2.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayHashCodePositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayHashCodePositiveCases2.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayStringConcatenationNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayStringConcatenationPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayToStringCompoundAssignmentNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayToStringCompoundAssignmentPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayToStringNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayToStringPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/AssertFalseNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/AssertFalsePositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/AsyncFunctionReturnsNullNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/AsyncFunctionReturnsNullPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/BadShiftAmountNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/BadShiftAmountPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/CannotMockFinalClassNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/CannotMockFinalClassNegativeCases2.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/CannotMockFinalClassPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/ChainingConstructorIgnoresParameterNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/ChainingConstructorIgnoresParameterPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/CheckReturnValueNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/CheckReturnValuePositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/ClassCanBeStaticNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/ClassCanBeStaticPositiveCase1.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/ClassCanBeStaticPositiveCase2.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/ClassCanBeStaticPositiveCase3.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/CollectionIncompatibleTypeClassCast.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/CollectionIncompatibleTypeNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/CollectionIncompatibleTypeOutOfBounds.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/CollectionIncompatibleTypePositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/ComparisonOutOfRangeNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/ComparisonOutOfRangePositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/CovariantEqualsNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/CovariantEqualsPositiveCase1.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/CovariantEqualsPositiveCase2.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/CovariantEqualsPositiveCase3.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/CovariantEqualsPositiveCase4.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/CovariantEqualsPositiveCase5.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/DeadExceptionNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/DeadExceptionPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/DeadExceptionTestingNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/DepAnnNegativeCase1.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/DepAnnNegativeCase2.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/DepAnnPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/DivZeroNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/DivZeroPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/ElementsCountedInLoopNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/ElementsCountedInLoopPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/EmptyIfStatementNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/EmptyIfStatementPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/EqualsHashCodeTestNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/EqualsHashCodeTestPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/EqualsNaNNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/EqualsNaNPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/FallthroughSuppressionNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/FallthroughSuppressionPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/FallthroughSuppressionToBeExtended.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/FinallyNegativeCase1.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/FinallyNegativeCase2.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/FinallyPositiveCase1.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/FinallyPositiveCase2.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceAssistedInjectScopingNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceAssistedInjectScopingPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceAssistedParametersNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceAssistedParametersPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceInjectOnFinalFieldNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceInjectOnFinalFieldPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceOverridesGuiceInjectableMethodNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceOverridesGuiceInjectableMethodPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceOverridesJavaxInjectableMethodNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceOverridesJavaxInjectableMethodPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnConstructorsNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnConstructorsPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnSameConstructorNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnSameConstructorPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/InjectInvalidTargetingOnScopingAnnotationNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/InjectInvalidTargetingOnScopingAnnotationPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/InjectJavaxInjectOnAbstractMethodNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/InjectJavaxInjectOnAbstractMethodPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/InjectJavaxInjectOnFinalFieldNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/InjectJavaxInjectOnFinalFieldPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/InjectMoreThanOneInjectableConstructorNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/InjectMoreThanOneInjectableConstructorPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/InjectMoreThanOneQualifierNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/InjectMoreThanOneQualifierPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/InjectMoreThanOneScopeAnnotationOnClassNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/InjectMoreThanOneScopeAnnotationOnClassPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/InjectOverlappingQualifierAndScopeAnnotationNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/InjectOverlappingQualifierAndScopeAnnotationPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/InjectScopeAnnotationOnInterfaceOrAbstractClassNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/InjectScopeAnnotationOnInterfaceOrAbstractClassPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/InjectScopeOrQualifierAnnotationRetentionNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/InjectScopeOrQualifierAnnotationRetentionPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/InjectedConstructorAnnotationsNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/InjectedConstructorAnnotationsPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/InvalidPatternSyntaxNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/InvalidPatternSyntaxPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit3TestNotRunNegativeCase1.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit3TestNotRunNegativeCase2.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit3TestNotRunNegativeCase3.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit3TestNotRunNegativeCase4.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit3TestNotRunNegativeCase5.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit3TestNotRunPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4SetUpNotRunNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4SetUpNotRunPositiveCaseCustomBefore.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4SetUpNotRunPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4TearDownNotRunNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4TearDownNotRunPositiveCaseCustomAfter.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4TearDownNotRunPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4TestNotRunBaseClass.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4TestNotRunNegativeCase1.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4TestNotRunNegativeCase2.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4TestNotRunNegativeCase3.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4TestNotRunNegativeCase4.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4TestNotRunNegativeCase5.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4TestNotRunPositiveCase1.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4TestNotRunPositiveCase2.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffixNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffixPositiveCase1.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffixPositiveCase2.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/MalformedFormatStringNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/MalformedFormatStringPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/MissingFailNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/MissingFailNegativeCases2.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/MissingFailPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/MissingFailPositiveCases2.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/MissingFailPositiveCases3.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/MisusedWeekYearNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/MisusedWeekYearPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/ModifyingCollectionWithItselfNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/ModifyingCollectionWithItselfPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/NoAllocationCheckerNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/NoAllocationCheckerPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/NonAtomicVolatileUpdateNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/NonAtomicVolatileUpdatePositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/NonRuntimeAnnotationNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/NonRuntimeAnnotationPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/NullablePrimitiveNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/NullablePrimitivePositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/NumericEqualityNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/NumericEqualityPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/OrderingFromPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/OverridesNegativeCase1.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/OverridesNegativeCase2.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/OverridesNegativeCase3.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/OverridesPositiveCase1.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/OverridesPositiveCase2.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/OverridesPositiveCase3.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/OverridesPositiveCase4.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/OverridesPositiveCase5.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullNegativeCase1.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullNegativeCase2.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPositiveCase1.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPositiveCase2.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPositiveCase3.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitiveNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitivePositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsExpensiveStringNegativeCase1.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsExpensiveStringNegativeCase2.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsExpensiveStringPositiveCase1.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsInvalidPlaceholderNegativeCase1.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsInvalidPlaceholderPositiveCase1.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/PrimitiveArrayPassedToVarargsMethodNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/PrimitiveArrayPassedToVarargsMethodPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/ProtoFieldNullComparisonNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/ProtoFieldNullComparisonPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/ProtoFieldPreconditionsCheckNotNullNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/ProtoFieldPreconditionsCheckNotNullPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/ReturnValueIgnoredNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/ReturnValueIgnoredPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/SelfAssignmentNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/SelfAssignmentPositiveCases1.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/SelfAssignmentPositiveCases2.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/SelfEqualityNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/SelfEqualityPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/SelfEqualsNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/SelfEqualsPositiveCase1.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/SelfEqualsPositiveCase2.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/SizeGreaterThanOrEqualsZeroNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/SizeGreaterThanOrEqualsZeroPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/StaticAccessedFromInstanceNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/StaticAccessedFromInstancePositiveCase1.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/StaticAccessedFromInstancePositiveCase2.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/StringBuilderInitWithCharNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/StringBuilderInitWithCharPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/StringEqualityNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/StringEqualityPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/SuppressWarningsDeprecatedNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/SuppressWarningsDeprecatedPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/TryFailThrowableNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/TryFailThrowablePositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/WaitNotInLoopNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/WaitNotInLoopPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/WrongParameterPackageNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/WrongParameterPackagePositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/proto/ProtoTest.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/proto/proto_test.proto
D	core/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases1.java
D	core/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java
D	core/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases3.java
D	core/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases4.java
D	core/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases5.java
D	core/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases6.java
D	core/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases7.java
D	core/src/test/resources/com/google/errorprone/suppress/CustomSuppressionNegativeCases.java
D	core/src/test/resources/com/google/errorprone/suppress/CustomSuppressionPositiveCases.java
D	core/src/test/resources/com/google/errorprone/suppress/SuppressWarningsNegativeCases.java
D	core/src/test/resources/com/google/errorprone/suppress/UnsuppressiblePositiveCases.java
M	docgen/src/test/java/com/google/errorprone/BugPatternFileGeneratorTest.java
A	docgen/src/test/java/com/google/errorprone/testdata/DeadException_frontmatter_pygments.md
A	docgen/src/test/java/com/google/errorprone/testdata/DeadException_nofrontmatter_gfm.md
D	docgen/src/test/resources/com/google/errorprone/DeadException_frontmatter_pygments.md
D	docgen/src/test/resources/com/google/errorprone/DeadException_nofrontmatter_gfm.md
M	pom.xml

commit ac2d8b7bfb08d19448461cfe0f29333977862356
Author: eaftan <eaftan@google.com>
Date:   Thu Apr 16 13:31:05 2015 -0700

    Rewrite CompilationTestHelper into a builder style, to avoid the complexity
    and duplication of the various assertCompile* methods in the current version.
    
    A CompilationTestHelper instance now holds all state related to the
    compilation being tested, including test files, custom args, and
    expectations.  In addition, expectations for the diagnostics being produced
    are inferred from the bug marker patterns in the file, rather than having to
    be explicitly provided.
    
    RELNOTES: Rewrite CompilationTestHelper into a builder style, to make tests
    easier to write.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=91331885

M	core/src/test/java/com/google/errorprone/CommandLineFlagTest.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelperTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneInMemoryFileManager.java
M	core/src/test/java/com/google/errorprone/ErrorProneJavaCompilerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayHashCodeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayToStringCompoundAssignmentTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayToStringConcatenationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayToStringTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/AssertFalseTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/AsyncFunctionReturnsNullTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/BadShiftAmountTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CannotMockFinalClassTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ChainingConstructorIgnoresParameterTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CheckReturnValueTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ClassCanBeStaticTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ClassNameTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CollectionIncompatibleTypeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ComparisonOutOfRangeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CompileTimeConstantCheckerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CovariantEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DeadExceptionTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DepAnnTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DivZeroTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ElementsCountedInLoopTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/EmptyIfStatementTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/EqualsHashCodeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/EqualsNaNTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/FinallyTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ForOverrideCheckerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceAssistedInjectScopingTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceAssistedParametersTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceInjectOnFinalFieldTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceOverridesGuiceInjectableMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceOverridesJavaxInjectableMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/IncompatibleModifiersCheckerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnConstructorsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnSameConstructorTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectInvalidTargetingOnScopingAnnotationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectJavaxInjectOnAbstractMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectJavaxInjectOnFinalFieldTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectMoreThanOneInjectableConstructorTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectMoreThanOneQualifierTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectMoreThanOneScopeAnnotationOnClassTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectOverlappingQualifierAndScopeAnnotationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectScopeAnnotationOnInterfaceOrAbstractClassTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectScopeOrQualifierAnnotationRetentionTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectedConstructorAnnotationsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InvalidPatternSyntaxTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit3TestNotRunTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4SetUpNotRunTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4TearDownNotRunTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4TestNotRunTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffixTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MalformedFormatStringTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MissingCasesInEnumSwitchTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MissingFailTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MisusedWeekYearTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ModifyingCollectionWithItselfTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NarrowingCompoundAssignmentTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NoAllocationCheckerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NonAtomicVolatileUpdateTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NonCanonicalStaticImportTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NonFinalCompileTimeConstantTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NonRuntimeAnnotationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NullablePrimitiveTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NumericEqualityTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/OverridesTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PackageLocationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitiveTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsInvalidPlaceholderTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PrimitiveArrayPassedToVarargsMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ProtoFieldNullComparisonTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ProtoFieldPreconditionsCheckNotNullTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/RequiredModifiersCheckerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ReturnValueIgnoredTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SelfAssignmentTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SelfEqualityTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SelfEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SizeGreaterThanOrEqualsZeroTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/StaticAccessedFromInstanceTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/StringBuilderInitWithCharTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/StringEqualityTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SuppressWarningsDeprecatedTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/TryFailThrowableTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/TypeParameterUnusedInFormalsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/UnnecessaryStaticImportTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/UnnecessaryTypeArgumentTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/WaitNotInLoopTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/WildcardImportTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/WrongParameterPackageTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinderTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByCheckerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByLockMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByValidatorTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/LockMethodCheckerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/SynchronizeOnNonFinalFieldTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/UnlockMethodCheckerTest.java
M	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java
M	core/src/test/java/com/google/errorprone/matchers/CompileTimeConstantExpressionMatcherTest.java
M	core/src/test/java/com/google/errorprone/matchers/CompilerBasedAbstractTest.java
M	core/src/test/java/com/google/errorprone/suppress/CustomSuppressionTest.java
M	core/src/test/java/com/google/errorprone/suppress/SuppressWarningsTest.java
M	core/src/test/java/com/google/errorprone/suppress/UnsuppressibleTest.java

commit 73e6df4f2f78cece47c2397ed27d60a8d237bd0e
Author: cushon <cushon@google.com>
Date:   Tue Apr 14 11:26:38 2015 -0700

    Add a helper method for fixes that add modifiers
    
    RELNOTES: N/A
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=91107033

M	core/src/main/java/com/google/errorprone/VisitorState.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ClassCanBeStatic.java
M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ClassCanBeStaticPositiveCase2.java

commit 9b4b74348de60ae80268a0c334970a492a4d51b8
Author: cushon <cushon@google.com>
Date:   Mon Apr 13 11:32:30 2015 -0700

    Move MisusedFormattingLogger into internal-only checks.
    
    It's re-packaged as part of gdata, but it's not really intended for
    external use.
    
    RELNOTES: N/A
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=91007969

M	core/pom.xml
D	core/src/main/java/com/google/errorprone/bugpatterns/MisusedFormattingLogger.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
D	core/src/test/java/com/google/errorprone/bugpatterns/MisusedFormattingLoggerTest.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/MisusedFormattingLoggerNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/MisusedFormattingLoggerPositiveCases.java
M	docgen/src/main/java/com/google/errorprone/BugPatternFileGenerator.java

commit c97cc08808a9c5db6caff342d21cb982ee3cd62b
Author: cushon <cushon@google.com>
Date:   Fri Apr 10 13:33:58 2015 -0700

    Remove some unnecessary uses of javac's List
    
    RELNOTES: N/A
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=90834910

M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/ErrorProneTestCompiler.java

commit b966bb6724d46408b6936db513b965648aeb2542
Author: eaftan <eaftan@google.com>
Date:   Fri Apr 10 12:18:58 2015 -0700

    Standardize list of on-by-default checks
    
    Currently we have different methods for enabling checks internally and
    externally, and this leads to skew for which checks are on in each
    environment.
    
    Note that this doesn't fix the problem for warnings checks, only errors.
    Those still need to be synced manually.
    
    RELNOTES: Synchronize list of on-by-default checks for open-source Error Prone
    and internal Error Prone.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=90828929

M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorProneJavaCompiler.java
M	core/src/main/java/com/google/errorprone/bugpatterns/CannotMockFinalClass.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CannotMockFinalClassTest.java

commit 3bd1bd77a3336ae1f430359c99cdd29ce6f270f1
Author: cushon <cushon@google.com>
Date:   Wed Apr 8 20:02:54 2015 -0700

    Add warning in auto-generated documentation
    
    RELNOTES: N/A
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=90674212

M	docgen/src/main/java/com/google/errorprone/BugPatternFileGenerator.java
M	docgen/src/test/resources/com/google/errorprone/DeadException_frontmatter_pygments.md
M	docgen/src/test/resources/com/google/errorprone/DeadException_nofrontmatter_gfm.md

commit 9415dfff65dee97db3958e526445f94d45f8cca5
Author: cushon <cushon@google.com>
Date:   Wed Apr 8 18:02:35 2015 -0700

    Post-review fixes to GuardedBy docs
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=90667292

M	docs/bugpattern/GuardedByChecker.md

commit 412aea7e4f13dc33b6b36055f712de3b324d2949
Author: cushon <cushon@google.com>
Date:   Wed Apr 8 12:13:55 2015 -0700

    Promote GuardedBy from experimental
    
    RELNOTES: N/A
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=90633962

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByChecker.java

commit 859f9015b3bd27b280aa8748d87334255fc4ae38
Author: cushon <cushon@google.com>
Date:   Tue Apr 7 19:03:19 2015 -0700

    Add documentation for GuardedBy
    
    RELNOTES: N/A
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=90570670

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByChecker.java
A	docs/bugpattern/GuardedByChecker.md

commit 76e749a052286b3b365632d9af8886a571d04e7d
Author: cushon <cushon@google.com>
Date:   Tue Apr 7 12:09:02 2015 -0700

    Allow the GuardedBy checker to be suppressed for local variables
    
    The analysis matches on Method trees and then manually visits the method
    bodies, so it doesn't get variable-level suppression for free.
    
    RELNOTES: N/A
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=90533655

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzer.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByCheckerTest.java

commit a45468878d1d9ed7c79989bdd93b7f5a943ab8f6
Author: cushon <cushon@google.com>
Date:   Tue Apr 7 12:05:32 2015 -0700

    Re-arrange documentation links
    
    RELNOTES: N/A
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=90533297

M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
M	core/src/test/java/com/google/errorprone/matchers/DescriptionTest.java

commit 403b18b8abedc3d627b8ae9ffbc5de3537912eb7
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Tue Apr 7 17:16:55 2015 -0700

    set explicit heap size for maven-surefire-plugin
    
    works around: travis-ci/travis-ci/issues/3396

M	core/pom.xml

commit 5e056e1d6d4a9475cf7165cb7926a224dbc31325
Author: Daniel Agar <daniel@agar.ca>
Date:   Tue Apr 7 18:49:52 2015 -0400

    travis-ci lint fix
    
    see http://lint.travis-ci.org/google/error-prone

M	.travis.yml

commit c8f86054b4b0d015ea52fa0876539582a8ac67db
Author: Daniel Agar <daniel@agar.ca>
Date:   Tue Apr 7 18:49:22 2015 -0400

    travis-ci cache maven

M	.travis.yml

commit 0f20cbd7137d93345411994538ed139c53157a8b
Author: Daniel Agar <daniel@agar.ca>
Date:   Tue Apr 7 18:46:41 2015 -0400

    switch to travis-ci docker based infrastructure
    
    -new docker instances are slightly faster and allow caching

M	.travis.yml

commit 32c0d573207de7c270befe233d811183993e7c17
Author: cushon <cushon@google.com>
Date:   Fri Apr 3 17:57:18 2015 -0700

    Fix NPE in PackageLocation
    
    The original version didn't work with files in source jars.
    
    Fixes #315
    
    RELNOTES: N/A
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=90298212

M	core/src/main/java/com/google/errorprone/bugpatterns/PackageLocation.java

commit 3d5d0ec91bf3cb60fc15ff2e60d68450e09c920c
Author: cushon <cushon@google.com>
Date:   Fri Apr 3 10:23:24 2015 -0700

    Defer calling findSuperMethods as late as possible
    
    Calling it in cases we aren't actually going to emit an error can trigger
    unnecessary symbol completions.
    
    RELNOTES: N/A
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=90260680

M	core/src/main/java/com/google/errorprone/bugpatterns/UnnecessaryTypeArgument.java

commit 45ca9f55ec7ec3a5a394405285c89dc35283b009
Author: cushon <cushon@google.com>
Date:   Thu Apr 2 17:42:55 2015 -0700

    Complain if negative tests include BUG comments
    
    Also create a horrible mechanism for ignoring BUG comments in positive tests,
    e.g. to test that disabling checks works as expected.
    
    RELNOTES: N/A
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=90213717

M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DepAnnTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffixTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SelfEqualsTest.java

commit 1e5b4280cea2bfa0ea2e0205fa27c764d983ec70
Author: cushon <cushon@google.com>
Date:   Thu Apr 2 11:41:47 2015 -0700

    Add a check for non-generic methods that are invoked with type arguments
    
    RELNOTES: Add a check for non-generic methods that are invoked with type arguments
    
    Fixes #307
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=90181044

A	core/src/main/java/com/google/errorprone/bugpatterns/UnnecessaryTypeArgument.java
A	core/src/test/java/com/google/errorprone/bugpatterns/UnnecessaryTypeArgumentTest.java
A	docs/bugpattern/UnnecessaryTypeArgument.md

commit f3c0d071e893af5585c6acce03d31dc18e900353
Author: schmitt <schmitt@google.com>
Date:   Thu Apr 2 10:55:27 2015 -0700

    Adding new error prone check to discover missing fail() calls in
    try/catch blocks within tests.
    
    RELNOTES: None.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=90176430

A	core/src/main/java/com/google/errorprone/bugpatterns/MissingFail.java
A	core/src/main/java/com/google/errorprone/matchers/Asserts.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
A	core/src/main/java/com/google/errorprone/matchers/MethodInvocation.java
A	core/src/main/java/com/google/errorprone/matchers/Returns.java
A	core/src/main/java/com/google/errorprone/matchers/Throws.java
M	core/src/main/java/com/google/errorprone/matchers/method/AnyMethodMatcherImpl.java
M	core/src/main/java/com/google/errorprone/matchers/method/MethodClassMatcherImpl.java
M	core/src/main/java/com/google/errorprone/matchers/method/MethodMatcher.java
M	core/src/main/java/com/google/errorprone/matchers/method/MethodMatchers.java
M	core/src/main/java/com/google/errorprone/matchers/method/MethodNameMatcherImpl.java
A	core/src/test/java/com/google/errorprone/bugpatterns/MissingFailTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/MissingFailNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/MissingFailNegativeCases2.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/MissingFailPositiveCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/MissingFailPositiveCases2.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/MissingFailPositiveCases3.java

commit 55bd36ef6af6d7000ded99fbd71784df19863bf2
Author: schmitt <schmitt@google.com>
Date:   Thu Apr 2 07:34:54 2015 -0700

    Move usages of Matchers.adaptMatcherType to .toType, which is slightly simpler.
    
    Note that this isn't an entirely equivalent replacement as toType always returns
    Matcher<Tree> whereas adaptMatcherType used to allow setting the returned
    matcher's tree type. However, this setting didn't really have any effect: any
    kind of tree is a legal input to the returned matcher. Since any place that
    takes Matcher<Foo> should really take Matcher<? super Foo> (and can easily be
    made to), toType's model tends to be easier to read at call sites.
    
    RELNOTES: None.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=90160315

M	core/src/main/java/com/google/errorprone/bugpatterns/NonAtomicVolatileUpdate.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java

commit 5de74f1b65b53cddb422dc0cd0d1457992261767
Author: eaftan <eaftan@google.com>
Date:   Wed Apr 1 16:52:11 2015 -0700

    Add matcher for fields, and refactor isStatic()
    
    RELNOTES: None
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=90114452

D	core/src/main/java/com/google/errorprone/matchers/IsStatic.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java

commit a8c5d4ac8dc001bfc1e7a93b7616b36a7133f4f4
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Wed Apr 1 13:53:54 2015 -0700

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	annotations/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit fbb45800ee968558fdf474711ff4df31e084033d
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Wed Apr 1 13:53:49 2015 -0700

    [maven-release-plugin] prepare release v2.0.2

M	annotation/pom.xml
M	annotations/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit 61d52bac9b795fa73bed943e25e9faf96228c184
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Wed Apr 1 13:43:02 2015 -0700

    Remove print statements from docgen test

M	docgen/src/test/java/com/google/errorprone/BugPatternFileGeneratorTest.java

commit f31523a1818e4fe2f8ca5f6231b3d548439d3f81
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Wed Apr 1 13:13:01 2015 -0700

    Update docgen to handle side-car explanations
    
    RELNOTES: N/A

M	core/pom.xml

commit 73fdff21c61d8783addd4678045e8c6b31ffdc47
Author: cushon <cushon@google.com>
Date:   Wed Apr 1 10:55:26 2015 -0700

    New check for packages declared in the wrong path
    
    RELNOTES: New check for packages declared in the wrong path
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=90079456

A	core/src/main/java/com/google/errorprone/bugpatterns/PackageLocation.java
A	core/src/test/java/com/google/errorprone/bugpatterns/PackageLocationTest.java

commit 19cf690b5a27798774aaf33c4c2af0d9072873fc
Author: cushon <cushon@google.com>
Date:   Wed Apr 1 10:53:59 2015 -0700

    Allow check explanations to be specified in side-car files
    
    This makes it possible to write long-form check explanations without fighting
    with string literals.
    
    RELNOTES: Allow check documentation to be written in markdown
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=90079289

M	annotation/src/main/java/com/google/errorprone/BugPattern.java
M	core/src/main/java/com/google/errorprone/bugpatterns/TypeParameterUnusedInFormals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/WildcardImport.java
M	docgen/src/main/java/com/google/errorprone/BugPatternFileGenerator.java
M	docgen/src/main/java/com/google/errorprone/DocGenTool.java
M	docgen/src/test/java/com/google/errorprone/BugPatternFileGeneratorTest.java
M	docgen/src/test/resources/com/google/errorprone/DeadException_frontmatter_pygments.md
M	docgen/src/test/resources/com/google/errorprone/DeadException_nofrontmatter_gfm.md
A	docs/bugpattern/TypeParameterUnusedInFormals.md
A	docs/bugpattern/WildcardImport.md

commit 3f9dedd90c946797d1a33cac9d317449c81f1d4d
Author: schmitt <schmitt@google.com>
Date:   Tue Mar 31 09:39:06 2015 -0700

    Rename MatchType.ANY to the more accurate MatchType.AT_LEAST_ONE.
    
    RELNOTES: None.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=89973606

M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayHashCode.java
M	core/src/main/java/com/google/errorprone/bugpatterns/CannotMockFinalClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceAssistedInjectScoping.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceInjectOnFinalField.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnConstructors.java
M	core/src/main/java/com/google/errorprone/matchers/ChildMultiMatcher.java
M	core/src/main/java/com/google/errorprone/matchers/JUnitMatchers.java
M	core/src/test/java/com/google/errorprone/matchers/AnnotationTest.java
M	core/src/test/java/com/google/errorprone/matchers/ConstructorOfClassTest.java
M	core/src/test/java/com/google/errorprone/matchers/MethodHasParametersTest.java

commit 9e9530f6c6502f03e91e68544d4e9441176ab195
Author: Sebastian Monte <sebastian.h.monte@gmail.com>
Date:   Thu Mar 26 21:09:06 2015 +0200

    Added a checker for @Nullable annotated primitives.

A	core/src/main/java/com/google/errorprone/bugpatterns/NullablePrimitive.java
A	core/src/main/java/com/google/errorprone/matchers/AnnotationSimpleName.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/NullablePrimitiveTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/NullablePrimitiveNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/NullablePrimitivePositiveCases.java

commit 3445a3550bdc6e300ce995514e0fac15a44e1369
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Mar 27 15:15:27 2015 -0700

    Unbreak doc generation
    
    also quiet javadoc timestamps

M	docgen/src/main/java/com/google/errorprone/DocGenTool.java
M	pom.xml

commit 44838bbe1f738005be89e459010e14c2e680c725
Author: cushon <cushon@google.com>
Date:   Fri Mar 27 13:34:57 2015 -0700

    Fix ClassCastException in {Incompatible,Required}Modifiers
    
    Also bail out more quickly for un-annotated elements.
    
    Fixes #313
    
    RELNOTES: N/A
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=89722756

M	core/src/main/java/com/google/errorprone/bugpatterns/IncompatibleModifiersChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/RequiredModifiersChecker.java
M	core/src/test/java/com/google/errorprone/bugpatterns/IncompatibleModifiersCheckerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/RequiredModifiersCheckerTest.java

commit 1f92263158e4397a351e04fc44f1f5c540aa49b7
Author: cushon <cushon@google.com>
Date:   Thu Mar 26 16:10:42 2015 -0700

    Add a check for filenames that don't match a top-level class name
    
    RELNOTES: New check: filenames should match a top-level class name
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=89646261

A	core/src/main/java/com/google/errorprone/bugpatterns/ClassName.java
A	core/src/test/java/com/google/errorprone/bugpatterns/ClassNameTest.java

commit 7aafd8f5226d4f7423eca6ebabcf21d12b59dba7
Author: cushon <cushon@google.com>
Date:   Wed Mar 25 09:05:49 2015 -0700

    Skip emitting a fix when there are multiple top-level type declarations
    
    RELNOTES: N/A
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=89505788

M	core/src/main/java/com/google/errorprone/bugpatterns/WildcardImport.java

commit 6d68e543e43874514a5379b7ab8d6dd7b15d4f97
Author: cushon <cushon@google.com>
Date:   Wed Mar 25 09:01:32 2015 -0700

    Refactor CompilationUnitTreeMatcher
    
    * Update ErrorProneAnalyzer to visit the compilation unit in post-order
    
    * Remove 'DeclFreeCompilationUnitWrapper', which was hacky and overly
    restrictive. It also wasn't being used when compilation units were visited (!),
    only to prevent other visitors from using
    visitorState.getPath().getCompilationUnit() to get at the unit's tree.
    
    * Add a class containing all of the information that's safe to access, and update
    CompilationUnitTreeMatcher to accept it instead of having a parameter for each
    piece of state. This will allow us to expose more information (if necessary)
    without churning existing checks.
    
    RELNOTES: N/A
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=89505356

M	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
M	core/src/main/java/com/google/errorprone/analysis/BugCheckerLocalAnalysis.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ChainingConstructorIgnoresParameter.java
M	core/src/main/java/com/google/errorprone/scanner/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/scanner/Scanner.java
M	core/src/test/java/com/google/errorprone/matchers/NonNullLiteralTest.java

commit 4b6ffdb61e988c7ecce3ea4dfa66fcaee5980d0e
Author: eaftan <eaftan@google.com>
Date:   Tue Mar 24 17:06:53 2015 -0700

    Add a SeverityLevel for SUGGESTION.  This is useful for Klippy-type checkers.
    It maps to the NOTE Diagnostic kind, and on the command-line the message is
    prefixed by "Note: ".
    
    RELNOTES: Error Prone checkers can now emit suggestions.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=89452935

M	annotation/src/main/java/com/google/errorprone/BugPattern.java
M	core/src/main/java/com/google/errorprone/JavacErrorDescriptionListener.java
M	core/src/main/resources/com/google/errorprone/errors.properties
A	core/src/test/java/com/google/errorprone/DiagnosticKindTest.java

commit 1d58513dc3e3bbee782fd15c88da2050b8e5ef4f
Author: cushon <cushon@google.com>
Date:   Tue Mar 24 15:01:27 2015 -0700

    Add a check for types imported using a non-canonical name
    
    RELNOTES: New check for types imported using a non-canonical name
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=89440777

A	core/src/main/java/com/google/errorprone/bugpatterns/NonCanonicalStaticImport.java
A	core/src/test/java/com/google/errorprone/bugpatterns/NonCanonicalStaticImportTest.java

commit ad84be531ed1e2cacf58f48127529c02952a5a85
Author: cushon <cushon@google.com>
Date:   Tue Mar 24 14:53:49 2015 -0700

    Add a check for static imports of types
    
    RELNOTES: New check for static imports of types
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=89439909

A	core/src/main/java/com/google/errorprone/bugpatterns/UnnecessaryStaticImport.java
A	core/src/test/java/com/google/errorprone/bugpatterns/UnnecessaryStaticImportTest.java

commit 3a36f9a6d4a7212756df40933d4d0ed8c379dba6
Author: cushon <cushon@google.com>
Date:   Tue Mar 24 14:40:03 2015 -0700

    Fix a bug in the GuardedBy checker
    
    The test for RW locks was handling the type of methods annotated with
    @GuardedBy incorrectly, and checking the method type directly instead of the
    return type.
    
    RELNOTES: N/A
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=89438318

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByExpression.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByCheckerTest.java

commit e2b7a3077eacf45b82d87f1b312ac08a0e8db489
Author: cushon <cushon@google.com>
Date:   Tue Mar 24 09:56:47 2015 -0700

    Prepare to productionize the @GuardedBy checker
    
    This improves the diagnostic message and fixes some minor bugs.
    
    RELNOTES: N/A
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=89409086

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinder.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedBySymbolResolver.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzer.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinderTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByCheckerTest.java

commit 617056808ab08e4597208d48cfa6c23ade6fd676
Author: cushon <cushon@google.com>
Date:   Fri Mar 20 16:50:31 2015 -0700

    Add a check to forbid wildcard imports
    
    RELNOTES: New check: forbid wildcard imports
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=89168570

A	core/src/main/java/com/google/errorprone/bugpatterns/WildcardImport.java
A	core/src/test/java/com/google/errorprone/bugpatterns/WildcardImportTest.java

commit 07d2ded7851df4f5b88f5ea5c257f3e704b092a0
Author: cushon <cushon@google.com>
Date:   Thu Mar 19 10:09:05 2015 -0700

    Add an alt name for GuardedBy
    
    This allows it to be suppressed with `-Xep:GuardedBy:OFF`
    
    RELNOTES: N/A
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=89041355

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByChecker.java

commit b0ae1ae4d3257d5c4594d6c6357071db764a3285
Author: cushon <cushon@google.com>
Date:   Wed Mar 18 15:05:52 2015 -0700

    Recognize -XepIgnoreUnknownCheckNames as a supported option
    
    RELNOTES: N/A
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=88972395

M	core/src/main/java/com/google/errorprone/ErrorProneOptions.java
M	core/src/test/java/com/google/errorprone/ErrorProneJavaCompilerTest.java

commit 85dfed4fc2f73a6f37192f9e6255f26a8450a969
Author: cushon <cushon@google.com>
Date:   Wed Mar 18 13:45:42 2015 -0700

    Another documentation generator UTF-8 fix
    
    RELNOTES: N/A
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=88964070

M	docgen/src/main/java/com/google/errorprone/BugPatternFileGenerator.java

commit 914aed1d729b8e1950984c977e5591343d352fd8
Author: cushon <cushon@google.com>
Date:   Wed Mar 18 10:20:56 2015 -0700

    Use UTF-8 in DocGenProcessor
    
    RELNOTES: N/A
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=88943500

M	docgen/src/main/java/com/google/errorprone/DocGenProcessor.java

commit 80c8f1725743e5954d15329f7b9fcdded8666452
Author: cushon <cushon@google.com>
Date:   Tue Mar 17 20:47:01 2015 -0700

    Make CompileTimeConstantChecker smarter about non-final @CompileTimeConstant variables
    
    Follow-up to []
    
    RELNOTES: N/A
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=88896975

M	core/src/main/java/com/google/errorprone/bugpatterns/CompileTimeConstantChecker.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CompileTimeConstantCheckerTest.java

commit 87639e6b017306a50712413e3a458bfd975edb60
Author: cushon <cushon@google.com>
Date:   Tue Mar 17 20:40:35 2015 -0700

    Add a check for non-final @CompileTimeConstant parameters.
    
    This could be enforced by @RequiredModifiers, but we need a way to do the
    clean-up first.
    
    RELNOTES: enforce that @CompileTimeConstant parameters are final
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=88896717

A	core/src/main/java/com/google/errorprone/bugpatterns/NonFinalCompileTimeConstant.java
A	core/src/test/java/com/google/errorprone/bugpatterns/NonFinalCompileTimeConstantTest.java

commit c8769866462b053c8259f353712cd403234bc0be
Author: cushon <cushon@google.com>
Date:   Tue Mar 17 11:13:48 2015 -0700

    Add @CRV to methods for creating Descriptions
    
    RELNOTES: N/A
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=88844720

M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java

commit 9efebde2b9c60d6caaf0f1da3a2e4b79ba961a16
Author: cpovirk <cpovirk@google.com>
Date:   Mon Mar 16 15:26:25 2015 -0700

    Generalize AsyncFunctionReturnsNull to also check implementations of AsyncCallable, but don't open-source an AsyncCallable version yet, as AsyncCallable hasn't yet been released in Guava.
    
    RELNOTES: none
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=88771254

A	core/src/main/java/com/google/errorprone/bugpatterns/AbstractAsyncTypeReturnsNull.java
M	core/src/main/java/com/google/errorprone/bugpatterns/AsyncFunctionReturnsNull.java

commit 7eb4f0706612d7d85f649160e7dd81d35d5d8e8b
Author: cushon <cushon@google.com>
Date:   Mon Mar 16 11:54:19 2015 -0700

    De-couple BugChecker from Description.
    
    RELNOTES: N/A
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=88748636

M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByValidator.java
M	core/src/main/java/com/google/errorprone/matchers/Description.java
M	core/src/test/java/com/google/errorprone/matchers/DescriptionTest.java

commit cce847ce4a1267e0b6a79f66b71a4096826d8fe9
Author: cushon <cushon@google.com>
Date:   Fri Mar 13 17:34:24 2015 -0700

    Roll back e58737a9ece9e6ada1398faaa335ed47aa1ca48a
    
    Even though it's type-safe to declare a method with this signature that always
    returns null or throws, there's still no good reason to do that.
    
    RELNOTES: N/A
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=88594969

M	core/src/main/java/com/google/errorprone/bugpatterns/TypeParameterUnusedInFormals.java
M	core/src/test/java/com/google/errorprone/bugpatterns/TypeParameterUnusedInFormalsTest.java

commit efe94bf8a84745cd6a7d935a44c268dfbca73ee8
Author: cushon <cushon@google.com>
Date:   Fri Mar 13 17:03:41 2015 -0700

    Fix NPEs in DiagnosticTestHelper
    
    RELNOTES: N/A
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=88592734

M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java

commit 431e2782ea0fe11ba76c8eb1306c6564ffb3ba37
Author: cushon <cushon@google.com>
Date:   Fri Mar 13 11:16:18 2015 -0700

    Allow checks to be overridden by alt name.
    
    This makes the command-line flag behaviour consistent with @SuppressWarnings,
    and provides a convenient way to disable a group of related checks (e.g.
    GuardedByChecker, GuardedByValidator) with a single flag.
    
    RELNOTES: N/A
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=88562782

M	core/src/main/java/com/google/errorprone/scanner/ScannerSupplier.java
M	core/src/main/java/com/google/errorprone/scanner/ScannerSupplierImpl.java
M	core/src/test/java/com/google/errorprone/CommandLineFlagTest.java

commit 8c94a3df4669cfcb24eb8cc241c8a5d188d97e2f
Author: cushon <cushon@google.com>
Date:   Thu Mar 12 19:11:31 2015 -0700

    Clean up the docgen processor
    
    so it can be run as part of the internal build
    
    RELNOTES: N/A
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=88503913

M	core/pom.xml
M	docgen/pom.xml
M	docgen/src/main/java/com/google/errorprone/BugPatternFileGenerator.java
D	docgen/src/main/java/com/google/errorprone/DocGen.java
A	docgen/src/main/java/com/google/errorprone/DocGenProcessor.java
A	docgen/src/main/java/com/google/errorprone/DocGenTool.java
M	docgen/src/test/java/com/google/errorprone/BugPatternFileGeneratorTest.java
D	docgen/src/test/resources/com/google/errorprone/DeadException.md
A	docgen/src/test/resources/com/google/errorprone/DeadException_frontmatter_pygments.md
A	docgen/src/test/resources/com/google/errorprone/DeadException_nofrontmatter_gfm.md

commit b378de241a1c4183db3fa737d8656689c8ee6c0d
Merge: 393a9fb 710f245
Author: Eddie Aftandilian <eaftan@users.noreply.github.com>
Date:   Wed Mar 25 09:52:03 2015 -0700

    Merge pull request #309 from cushon/style
    
    Update readme to use "Error Prone" instead of "error-prone"

commit 393a9fb35bee599e469b58f070e9292682e4c2f9
Merge: db454b8 549a627
Author: Eddie Aftandilian <eaftan@users.noreply.github.com>
Date:   Wed Mar 25 09:50:20 2015 -0700

    Merge pull request #310 from cushon/bazel
    
    Bazel

commit 549a627204d014554025d40f4454cc3a2f3ef859
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Wed Mar 25 08:35:24 2015 -0700

    Initial commit of bazel WORKSPACE
    
    with maven_jar mappings for existing deps

A	WORKSPACE

commit ec86f9e12b1f8936fd210084fdeb7f37517f839e
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Wed Mar 25 08:33:49 2015 -0700

    gitignore bazel output tree

M	.gitignore

commit 710f2450b72cda739d0f80aedc08f8df679820c7
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Wed Mar 25 08:29:16 2015 -0700

    Update readme to use 'Error Prone' instead of 'error-prone'
    
    The former is now the preferred style, since it makes it clearer that
    the Error Prone Java compiler is a proper noun instead of a buggy
    compiler.

M	README.md

commit db454b86d0c864a779b6a0ece25ed34a20fd28fb
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Thu Mar 12 17:24:37 2015 -0700

    Finish renaming idea-plugin to idea_plugin
    
    These files were moved internally but didn't get synced correctly.

D	idea-plugin/META-INF/plugin.xml
D	idea-plugin/idea-plugin.iml
D	idea-plugin/src/com/google/errorprone/intellij/ErrorProneIdeaBundle.java
D	idea-plugin/src/com/google/errorprone/intellij/ErrorProneIdeaBundle.properties
D	idea-plugin/src/com/google/errorprone/intellij/ErrorProneIdeaCompiler.java
A	idea_plugin/META-INF/plugin.xml

commit 9cd77237e175230ab2b9db93c48e1704fceb948c
Author: clm <clm@google.com>
Date:   Wed Mar 11 15:58:37 2015 -0700

    Improve error message for @CompileTimeConstant.
    
    I wasted some time trying to figure out why error prone was unhappy, and now other people hopefully won't.
    
    RELNOTES: none
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=88382840

M	core/src/main/java/com/google/errorprone/bugpatterns/CompileTimeConstantChecker.java

commit 311ab126d7540a1e03c986739bd28e5af7b1b6a4
Author: eaftan <eaftan@google.com>
Date:   Tue Mar 3 13:39:17 2015 -0800

    Relax @ForOverride restriction so that it can apply to package-private as
    well as protected methods.
    
    Fixes #302 in the external bug tracker
    
    RELNOTES: Allow @ForOverride to apply to package-private methods.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=87643772

M	annotations/src/main/java/com/google/errorprone/annotations/ForOverride.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ForOverrideChecker.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ForOverrideCheckerTest.java

commit dbfa80680a743ac5f2cced9b0d0a66851faff8a1
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Thu Mar 12 11:32:06 2015 -0700

    Fix whitespace.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=87165604

M	core/src/main/java/com/google/errorprone/matchers/Matchers.java

commit 0b8b4a790ad3f0731827fb63c760b752ba5882e3
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Wed Mar 4 10:54:10 2015 -0500

    Use hamcrest 1.3's TypeSafeDiagnosingMatcher
    
    We don't need to preserve compatibility with 1.1 any more.
    
    This backs out a change I made in
    ef2223477951f70bfb1395f356a60bee68a9625c.

M	.gitignore
M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneJavaCompilerTest.java

commit 4d7bf6c81b596f6e7ce75717d419a9494c710df0
Merge: c3c8cb9 c6be298
Author: Eddie Aftandilian <eaftan@users.noreply.github.com>
Date:   Wed Mar 4 11:05:17 2015 -0800

    Merge pull request #304 from cushon/endpos
    
    Delete EndPosTableUtil

commit c6be2981c60e5d0d9455dea321229afef9f97d6e
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Wed Mar 4 10:58:14 2015 -0500

    Delete EndPosTableUtil
    
    It's been absolete since I fixed #228.

D	core/src/main/java/com/google/errorprone/EndPosTableUtil.java

commit c3c8cb986fec4ef21d79f1a38b4fff9e9ae3f5eb
Author: cushon <cushon@google.com>
Date:   Tue Feb 24 08:45:59 2015 -0800

    Make error-prone compatible with hamcrest 1.3
    
    RELNOTES: N/A
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=87060296

M	core/pom.xml
M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneJavaCompilerTest.java

commit 4b4f41e9ac0a7c195fdd0e5d599e427bab5fb249
Author: cpovirk <cpovirk@google.com>
Date:   Mon Feb 23 07:24:08 2015 -0800

    Use Matchers.hasMethod.
    
    RELNOTES: none
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=86955505

M	core/src/main/java/com/google/errorprone/matchers/JUnitMatchers.java

commit cbe4aa9da32e25ace3362a1d56439f58ce25ddeb
Author: eaftan <eaftan@google.com>
Date:   Fri Feb 20 16:43:56 2015 -0800

    Update ArrayHashCode check to catch more cases.
    
    Previously the ArrayHashCode check only flagged misuses when a single argument
    of primitive array type was passed to a hashCode method.  This revision extends
    the check to also catch when there are multiple arguments, any of which is of
    array type.  It suggests wrapping each argument of array type in
    Arrays.hashCode, so that a content hash code is used rather than an identity
    hashcode.
    
    Fixes #244
    
    RELNOTES: ArrayHashCode check catches more cases.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=86833787

M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayHashCode.java
A	core/src/main/java/com/google/errorprone/matchers/HasArguments.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/test/java/com/google/errorprone/util/ASTHelpersTest.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayHashCodeNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayHashCodeNegativeCases2.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayHashCodePositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayHashCodePositiveCases2.java

commit 354f8c9bfa01d8349499d79d709a0d81c05c9069
Author: cpovirk <cpovirk@google.com>
Date:   Fri Feb 20 11:10:21 2015 -0800

    Make it an error for an AsyncFunction to return null.
    
    RELNOTES: Make it an error for an AsyncFunction to return null.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=86804440

A	core/src/main/java/com/google/errorprone/bugpatterns/AsyncFunctionReturnsNull.java
A	core/src/test/java/com/google/errorprone/bugpatterns/AsyncFunctionReturnsNullTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/AsyncFunctionReturnsNullNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/AsyncFunctionReturnsNullPositiveCases.java

commit ca95f8d45422bfeeeb9c781e8b81a0d6bcf71a8f
Author: cushon <cushon@google.com>
Date:   Wed Feb 18 10:38:15 2015 -0800

    Address post-review comments.
    
    RELNOTES: N/A
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=86608080

M	ant/src/main/java/com/google/errorprone/ErrorProneExternalCompilerAdapter.java

commit e1dadc62a3e6d90473d4a5dfbf280ccc0046ecb6
Author: cushon <cushon@google.com>
Date:   Fri Feb 13 13:09:04 2015 -0800

    Add CheckReturnValue as an alt name of ReturnValueIgnored.
    
    This allows users to suppress both with a single
    @SuppressWarnings("CheckReturnValue").
    
    RELNOTES: N/A
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=86297921

M	core/src/main/java/com/google/errorprone/bugpatterns/ReturnValueIgnored.java

commit da97425121c4b07e6494b2a6ed044f62b1b63493
Author: Sebastian Monte <sebastian.h.monte@gmail.com>
Date:   Wed Feb 11 20:38:51 2015 +0200

    Add a checker to replace "assert false" with "throw new AssertionError()".
    
    "assert false" is often used to ensure that execution never proceeds
    past a known bad state.  However, assertions may not be enabled at
    runtime, so this statement does not guarantee anything.  Consider
    throwing an AssertionError instead if the correctness of your code
    depends on the assertion being executed.
    
    Fixes #261

A	core/src/main/java/com/google/errorprone/bugpatterns/AssertFalse.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/AssertFalseTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/AssertFalseNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/AssertFalsePositiveCases.java

commit 9dc7a93cc53adf458e8fad6d814e2b728d5f3b91
Author: erikbodzsar <erikbodzsar@google.com>
Date:   Wed Feb 11 10:16:51 2015 -0800

    Fix AnnotationType matcher to match nested and fully qualified annotations.
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=86096326

M	core/src/main/java/com/google/errorprone/matchers/AnnotationType.java
M	core/src/test/java/com/google/errorprone/matchers/AnnotationTest.java

commit 246a882e4b33964e9e128cde54bbb69f0f78dec2
Author: kak <kak@google.com>
Date:   Tue Feb 10 10:09:47 2015 -0800

    Migrate from Truth's deprecated .is(expected) to .isEqualTo(expected).
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=85998867

M	core/src/test/java/com/google/errorprone/ErrorProneJavaCompilerTest.java

commit 69a525c835010058ee249457645a1773cfe79e0a
Author: cushon <cushon@google.com>
Date:   Mon Feb 9 19:31:18 2015 -0800

    Migrate to new method matcher API.
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=85951062

M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayHashCode.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArraysAsListPrimitiveArray.java
M	core/src/main/java/com/google/errorprone/bugpatterns/CannotMockFinalClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/CollectionIncompatibleType.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ElementsCountedInLoop.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidPatternSyntax.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MalformedFormatString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MisusedFormattingLogger.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MisusedWeekYear.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ModifyingCollectionWithItself.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NonRuntimeAnnotation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNull.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitive.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsExpensiveString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsInvalidPlaceholder.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ProtoFieldNullComparison.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ProtoFieldPreconditionsCheckNotNull.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ProtoStringFieldReferenceEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfAssignment.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SizeGreaterThanOrEqualsZero.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StaticAccessedFromInstance.java
M	core/src/main/java/com/google/errorprone/bugpatterns/TryFailThrowable.java
M	core/src/main/java/com/google/errorprone/bugpatterns/WaitNotInLoop.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzer.java
M	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java

commit 244e0318463df0e3f2054e3f56a8778e3f55bafe
Author: cushon <cushon@google.com>
Date:   Mon Feb 9 15:37:54 2015 -0800

    More exhaustive tests for NarrowingCompoundAssignment's precedence handling
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=85933433

M	core/src/main/java/com/google/errorprone/util/OperatorPrecedence.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NarrowingCompoundAssignmentTest.java

commit edcebbc565dd23fe6a97da98c86bcd92ee6d46cc
Author: cushon <cushon@google.com>
Date:   Fri Feb 6 14:43:24 2015 -0800

    New method matcher API.
    
    Fixes #71
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=85751140

M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
A	core/src/main/java/com/google/errorprone/matchers/method/AbstractChainedMatcher.java
A	core/src/main/java/com/google/errorprone/matchers/method/AbstractSimpleMatcher.java
A	core/src/main/java/com/google/errorprone/matchers/method/AnyMethodMatcherImpl.java
A	core/src/main/java/com/google/errorprone/matchers/method/ConstructorClassMatcherImpl.java
A	core/src/main/java/com/google/errorprone/matchers/method/ConstructorMatcherImpl.java
A	core/src/main/java/com/google/errorprone/matchers/method/InstanceMethodMatcherImpl.java
A	core/src/main/java/com/google/errorprone/matchers/method/MatchState.java
A	core/src/main/java/com/google/errorprone/matchers/method/MethodClassMatcherImpl.java
A	core/src/main/java/com/google/errorprone/matchers/method/MethodMatcher.java
A	core/src/main/java/com/google/errorprone/matchers/method/MethodMatchers.java
A	core/src/main/java/com/google/errorprone/matchers/method/MethodNameMatcherImpl.java
A	core/src/main/java/com/google/errorprone/matchers/method/MethodSignatureMatcherImpl.java
A	core/src/main/java/com/google/errorprone/matchers/method/ParameterMatcherImpl.java
A	core/src/main/java/com/google/errorprone/matchers/method/StaticMethodMatcherImpl.java
A	core/src/main/java/com/google/errorprone/predicates/TypePredicate.java
A	core/src/main/java/com/google/errorprone/predicates/TypePredicates.java
A	core/src/main/java/com/google/errorprone/predicates/type/Any.java
A	core/src/main/java/com/google/errorprone/predicates/type/Array.java
A	core/src/main/java/com/google/errorprone/predicates/type/DescendantOf.java
A	core/src/main/java/com/google/errorprone/predicates/type/DescendantOfAny.java
A	core/src/main/java/com/google/errorprone/predicates/type/Exact.java
A	core/src/main/java/com/google/errorprone/predicates/type/ExactAny.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java

commit 17db22dc31f0b5ada8701bd98f641058f9270f88
Author: cushon <cushon@google.com>
Date:   Fri Feb 6 11:57:30 2015 -0800

    Add EqualsHashCode check.
    
    Fixes #129
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=85736676

A	core/src/main/java/com/google/errorprone/bugpatterns/EqualsHashCode.java
M	core/src/main/java/com/google/errorprone/suppliers/Suppliers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/EqualsHashCodeTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/EqualsHashCodeTestNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/EqualsHashCodeTestPositiveCases.java

commit 53d8d9df547115d579cadcc1a4467be38c93ce5e
Author: cushon <cushon@google.com>
Date:   Fri Feb 6 11:48:14 2015 -0800

    Temporarily support guava's {Required,Incompatible}Modifier annotations
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=85735871

M	core/src/main/java/com/google/errorprone/bugpatterns/IncompatibleModifiersChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/RequiredModifiersChecker.java
M	core/src/test/java/com/google/errorprone/bugpatterns/IncompatibleModifiersCheckerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/RequiredModifiersCheckerTest.java

commit e911f719c740c7ab4d419fa5bec0e49e2d0cc5d6
Author: lowasser <lowasser@google.com>
Date:   Fri Feb 6 11:24:28 2015 -0800

    Expand the factory methods available in ErrorProneTopLevelAnalysis.
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=85733671

M	core/src/main/java/com/google/errorprone/analysis/ErrorProneTopLevelAnalysis.java
M	core/src/main/java/com/google/errorprone/analysis/TopLevelAnalysisWithSeverity.java

commit c9d406216432a26a30e7a9853dcf100602227602
Author: lowasser <lowasser@google.com>
Date:   Fri Feb 6 11:16:19 2015 -0800

    Enable AnalysesConfig to validate that configuration is restricted to known analyses.
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=85732889

M	core/src/main/java/com/google/errorprone/analysis/AnalysesConfig.java
M	core/src/main/java/com/google/errorprone/analysis/BugCheckerLocalAnalysis.java
M	core/src/main/java/com/google/errorprone/analysis/LocalAnalysis.java
M	core/src/main/java/com/google/errorprone/analysis/LocalAnalysisAsTopLevelAnalysis.java
M	core/src/main/java/com/google/errorprone/analysis/RecompilingTopLevelAnalysis.java
M	core/src/main/java/com/google/errorprone/analysis/SumTopLevelAnalysis.java
M	core/src/main/java/com/google/errorprone/analysis/TopLevelAnalysis.java
M	core/src/main/java/com/google/errorprone/analysis/TopLevelAnalysisWithSeverity.java

commit cfbbe696a603448240f8ad4a59d388b4ce3edcf4
Author: cushon <cushon@google.com>
Date:   Thu Feb 5 16:07:41 2015 -0800

    Migrate javac-based tools to the latest version of javac.
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=85668019

M	core/pom.xml
M	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ForOverrideChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceOverridesJavaxInjectableMethod.java
M	core/src/main/java/com/google/errorprone/bugpatterns/WrongParameterPackage.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedBySymbolResolver.java
M	core/src/main/java/com/google/errorprone/matchers/Annotation.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java

commit 8baf63ca3a39f3e300d1e862dcf3cd6a08550df3
Author: lowasser <lowasser@google.com>
Date:   Thu Feb 5 13:40:55 2015 -0800

    Adds a generalized API for static analysis to error-prone.
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=85653304

A	core/src/main/java/com/google/errorprone/analysis/AnalysesConfig.java
A	core/src/main/java/com/google/errorprone/analysis/BugCheckerLocalAnalysis.java
A	core/src/main/java/com/google/errorprone/analysis/ErrorProneTopLevelAnalysis.java
A	core/src/main/java/com/google/errorprone/analysis/LocalAnalysis.java
A	core/src/main/java/com/google/errorprone/analysis/LocalAnalysisAsTopLevelAnalysis.java
A	core/src/main/java/com/google/errorprone/analysis/RecompilingTopLevelAnalysis.java
A	core/src/main/java/com/google/errorprone/analysis/SumTopLevelAnalysis.java
A	core/src/main/java/com/google/errorprone/analysis/TopLevelAnalysis.java
A	core/src/main/java/com/google/errorprone/analysis/TopLevelAnalysisWithSeverity.java
M	core/src/main/java/com/google/errorprone/matchers/Description.java

commit b4bb08b47f65ebfa201e21ca5b0e5e7fff4aa8a3
Author: cushon <cushon@google.com>
Date:   Wed Feb 4 14:01:24 2015 -0800

    Recognize java.lang.Void-returning methods in CheckReturnValue
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=85557251

M	core/src/main/java/com/google/errorprone/bugpatterns/CheckReturnValue.java
M	core/src/main/java/com/google/errorprone/suppliers/Suppliers.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CheckReturnValueTest.java

commit 94f4ac6d7a3a273fcaa7c43e51188b56b08136bd
Author: paulduffin <paulduffin@google.com>
Date:   Wed Feb 4 12:39:10 2015 -0800

    Clean up some work arounds for limitations in Hamcrest
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=85549504

M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java

commit 8fe88807ad6943453cd30bc551bbd8ed184a3935
Author: cushon <cushon@google.com>
Date:   Mon Feb 2 15:46:58 2015 -0800

    Record Moe equivalence.
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=85371784

M	.gitignore

commit 5c7278df046c5e6a549da2e7bc63800ca77672a9
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Tue Feb 10 21:34:51 2015 -0800

    gitter badge

M	README.md

commit b08efec2ad154a8103ff7b48228a1e7f2d2486f9
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Tue Feb 10 22:15:34 2015 -0800

    travis / gitter config, round 2

M	.travis.yml

commit fa6208073b5770d0c7b78a1d680c78a527b89c7c
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Tue Feb 10 21:46:15 2015 -0800

    add travis config for gitter

M	.travis.yml

commit 0623eae2cf56580ad3b712a84e8d9f21f5dc7562
Merge: 9f3839f fefc700
Author: Eddie Aftandilian <eaftan@users.noreply.github.com>
Date:   Mon Feb 9 14:03:23 2015 -0800

    Merge pull request #297 from google/update_check_return_value_docs
    
    Mention @CanIgnoreReturnValue in CheckReturnValue docs

commit 9f3839fd061e2301eaef2d5e63dc464f5ff292b5
Merge: 2d34237 e64da1d
Author: Eddie Aftandilian <eaftan@users.noreply.github.com>
Date:   Mon Feb 9 14:02:48 2015 -0800

    Merge pull request #298 from google/update_for_release
    
    Add mailing list info to README

commit fefc700ae0cab174296c191337951ad0fdfce0a2
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Feb 9 13:37:54 2015 -0800

    Document that you can apply @CanIgnoreReturnValue to classes

M	core/src/main/java/com/google/errorprone/bugpatterns/CheckReturnValue.java

commit 74ea3a5242621e55a174284659d29e5cc505633e
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Feb 9 11:51:43 2015 -0800

    Mention @CanIgnoreReturnValue in CheckReturnValue docs

M	core/src/main/java/com/google/errorprone/bugpatterns/CheckReturnValue.java

commit 2d34237234bfa4153c3e773efc4b56d7910bc290
Merge: b3bc659 748c554
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Feb 6 16:17:58 2015 -0800

    Merge pull request #295 from cushon/ant-examples
    
    Add more ant examples

commit 748c5544c57cbac6b1a0ac7e0a8254a9f0b27434
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Thu Feb 5 13:53:33 2015 -0800

    Add more ant examples

A	examples/ant/ant_fork/build.xml
A	examples/ant/ant_fork/src/Main.java
A	examples/ant/ant_lib/build.xml
A	examples/ant/ant_lib/src/Main.java
D	examples/ant/build.xml
A	examples/ant/compilerclasspath/build.xml
A	examples/ant/compilerclasspath/src/Main.java
D	examples/ant/src/Main.java

commit e64da1dd76eda84e20fc89a9892987858201a450
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Feb 6 12:59:57 2015 -0800

    Add mailing list info to README

M	README.md

commit b3bc65934d72a667f1201d22534ce4d904de0a7a
Merge: 84045c5 6b6e9b0
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Feb 6 12:41:51 2015 -0800

    Merge pull request #296 from cushon/update-installation
    
    Add installation info to README

commit 6b6e9b0cdca2b0fc35f318a5c571264c5325c1d9
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Thu Feb 5 15:35:08 2015 -0800

    Add installation info to README

M	README.md

commit 84045c535ea62795d438ec39ea99ce57f0c47251
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Thu Feb 5 11:29:28 2015 -0800

    Update maven example to use the latest plugin version

M	examples/maven/pom.xml

commit 7628f26c55cb99a3550f104dd5071130880a55fb
Merge: fd65e86 0dd7810
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Wed Feb 4 16:31:32 2015 -0800

    Merge pull request #294 from cushon/moar-ant-fixes
    
    More ant classloading fixes.

commit 0dd7810ebd8c85e91da69e6d66caa773351c5a96
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Wed Feb 4 01:27:36 2015 -0800

    More ant classloading fixes.
    
    Resolves #292

M	ant/src/main/java/com/google/errorprone/ErrorProneAntCompilerAdapter.java
M	core/src/main/java/com/google/errorprone/internal/NonDelegatingClassLoader.java
D	core/src/main/java/com/google/errorprone/internal/NonDelegatingClassLoaderRunner.java

commit fd65e8657e6081b7c5d7084b93e9fdb3dd1ce74c
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Wed Feb 4 15:36:31 2015 -0800

    Remove transitive dependency on checker-framework javacutil

M	core/pom.xml

commit 6eb797cd56ba1755ee7767e4166618a53d672fac
Merge: bd2d57b 95e6aa7
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Tue Feb 3 17:49:52 2015 -0800

    Merge pull request #293 from garricko/ant-external
    
    Ant external adapter to launch error-prone in a separate process

commit 95e6aa777cdd503398867abd7c751fe6a1a371f8
Author: Garrick Olson <garricko@stanford.edu>
Date:   Tue Feb 3 15:39:28 2015 -0800

    Remove obsolete -Xjcov and cleanup based on @cushon review

M	ant/src/main/java/com/google/errorprone/ErrorProneExternalCompilerAdapter.java
M	examples/ant/build.xml

commit 1e4f28a4bdbe9316337ad08f5467262453748d0a
Author: Garrick Olson <garricko@stanford.edu>
Date:   Tue Feb 3 14:54:17 2015 -0800

    Add an external adapter to launch error-prone in a separate process

A	ant/src/main/java/com/google/errorprone/ErrorProneExternalCompilerAdapter.java
M	examples/ant/build.xml

commit bd2d57b0e2c4abf9436065fc12fbd1ecb451d0fd
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Mon Feb 2 15:58:29 2015 -0800

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	annotations/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit cd963e69d115a5303078f9a024e82b409f2784e6
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Mon Feb 2 15:58:24 2015 -0800

    [maven-release-plugin] prepare release v2.0.1

M	annotation/pom.xml
M	annotations/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit 4ff4668a9ec91453f8509cde050ca50b0c06647b
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Mon Feb 2 14:01:50 2015 -0800

    Update deps to latest release versions

M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit 9c9b2ffb63296fe21127e656d24d351bf18431e4
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Mon Feb 2 12:54:50 2015 -0800

    Fix unchecked/rawtypes

M	core/src/main/java/com/google/errorprone/internal/NonDelegatingClassLoader.java
M	core/src/main/java/com/google/errorprone/internal/NonDelegatingClassLoaderRunner.java

commit e734f3f68288b1e2a2989b909d40c412c120307f
Author: cushon <cushon@google.com>
Date:   Fri Jan 30 17:43:53 2015 -0800

    Truthify error-prone
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=85208607

M	core/src/test/java/com/google/errorprone/CommandLineFlagTest.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelperTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneJavaCompilerTest.java

commit ec5e0f66b1a4dc33396f46329af7c1a074ced348
Author: mwacker <mwacker@google.com>
Date:   Fri Jan 30 16:53:10 2015 -0800

    Add matcher for an annotation argument not existing.
    
    Two scenarios envisioned:
    
    Scenario 1: Checking for annotations that do not (but should) have a certain argument.
    
    Scenario 2: Checking that an argument does not contain a certain value, when the argument has a default. This requires two separate checks:
    1) Annotation has the argument, and it does not contain the value, or
    2) Annotation does not have the argument (and implicitly the default does not contain the value).
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=85204887

A	core/src/main/java/com/google/errorprone/matchers/AnnotationDoesNotHaveArgument.java
M	core/src/main/java/com/google/errorprone/matchers/AnnotationHasArgumentWithValue.java
A	core/src/main/java/com/google/errorprone/matchers/AnnotationMatcherUtils.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
A	core/src/test/java/com/google/errorprone/matchers/AnnotationDoesNotHaveArgumentTest.java

commit 53ff8b89de41b87aa66978ac0f031bce88edd75d
Author: lowasser <lowasser@google.com>
Date:   Fri Jan 30 15:34:47 2015 -0800

    Use Throwables.getStackTraceAsString in error-prone.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=85198158

M	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
M	core/src/main/java/com/google/errorprone/ErrorProneJavacJavaCompiler.java

commit 7702f36fed11ca80e6ece43c649c4a731d218a5d
Author: cushon <cushon@google.com>
Date:   Fri Jan 30 11:25:10 2015 -0800

    Create @CanIgnoreReturnValue
    
    Fixes #279
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=85175748

A	annotations/src/main/java/com/google/errorprone/annotations/CanIgnoreReturnValue.java
M	core/src/main/java/com/google/errorprone/bugpatterns/CheckReturnValue.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CheckReturnValueTest.java

commit 792f43fbcb7e999c9e9b815346d90685ab1c2e0f
Author: cushon <cushon@google.com>
Date:   Fri Jan 30 10:39:37 2015 -0800

    Move existing checks into error-prone
    
    - CompileTimeConstant
    - ForOverride
    - Required/IncompatibleModifiers
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=85171389

A	core/src/main/java/com/google/errorprone/bugpatterns/CompileTimeConstantChecker.java
A	core/src/main/java/com/google/errorprone/bugpatterns/ForOverrideChecker.java
A	core/src/main/java/com/google/errorprone/bugpatterns/IncompatibleModifiersChecker.java
A	core/src/main/java/com/google/errorprone/bugpatterns/RequiredModifiersChecker.java
A	core/src/main/java/com/google/errorprone/matchers/CompileTimeConstantExpressionMatcher.java
A	core/src/test/java/com/google/errorprone/bugpatterns/CompileTimeConstantCheckerTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/ForOverrideCheckerTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/IncompatibleModifiersCheckerTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/RequiredModifiersCheckerTest.java
A	core/src/test/java/com/google/errorprone/matchers/CompileTimeConstantExpressionMatcherTest.java

commit 37093382fe32f5261ab665e2ccb026e7aa869f36
Author: cushon <cushon@google.com>
Date:   Wed Jan 28 14:20:43 2015 -0800

    Fix NPE in GuardedByBinder on non-existent methods
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=85002153

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinder.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByValidatorTest.java

commit 9adeefd6c485363322e350c1159f647fa2251777
Author: cushon <cushon@google.com>
Date:   Wed Jan 28 12:03:09 2015 -0800

    Relocate @LockMethod and @UnlockMethod to new annotations package.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=84989739

A	annotations/src/main/java/com/google/errorprone/annotations/concurrent/LockMethod.java
A	annotations/src/main/java/com/google/errorprone/annotations/concurrent/UnlockMethod.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzer.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/LockMethodChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/UnlockMethodChecker.java
D	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/annotations/LockMethod.java
D	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/annotations/UnlockMethod.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByLockMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/LockMethodCheckerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/UnlockMethodCheckerTest.java

commit f0a868041298d41cb9fbbea7a53328315bb86afe
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Sun Feb 1 19:54:13 2015 -0800

    Make ant sample error less contrived

M	examples/ant/src/Main.java

commit 15d48be8fb47b6b1abd1f70119a3c8f93a73ceeb
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Sun Feb 1 18:16:42 2015 -0800

    Ignore .idea again

M	.gitignore

commit 1f912d223295f55acca7456e46eea2a035e4629a
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Sun Feb 1 18:06:25 2015 -0800

    Fix for compilation units getting stuck at 'flow'
    
    The regression was introduced in 40112e84, and prevented classes from
    being emitted for compilation units that were desugared early (e.g.
    because they were referenced from classes in an earlier compilation
    unit).
    
    This will be less bug-prone once we start using TaskListener instead of
    overriding flow().

M	core/src/main/java/com/google/errorprone/ErrorProneJavacJavaCompiler.java

commit b9d6983a0519419b8b51ba2878ee66e52a1f34c0
Merge: 1620bcc c93d305
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Jan 30 17:47:10 2015 -0800

    Merge pull request #290 from cushon/fix-ant
    
    Make ant work with javac8 and JDK7

commit c93d305a391c147124146e16f0acf099338c79d6
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Thu Jan 29 17:35:56 2015 -0800

    Make ant work with javac8 and JDK7
    
    This generalizes some classloading infrastructure that could be shared
    with maven.

M	ant/src/main/java/com/google/errorprone/ErrorProneAntCompilerAdapter.java
A	core/src/main/java/com/google/errorprone/internal/NonDelegatingClassLoader.java
A	core/src/main/java/com/google/errorprone/internal/NonDelegatingClassLoaderRunner.java

commit 1620bcc32cef1c975b18e6bb813c6effc011158d
Merge: 878abff 9d66ee5
Author: Eddie Aftandilian <eaftan@users.noreply.github.com>
Date:   Wed Jan 28 20:48:59 2015 -0800

    Merge pull request #289 from cushon/sample-errors
    
    Fix sample errors for maven and gradle

commit 9d66ee51d0687fec8bfaaa0827df6584ca2ced1d
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Wed Jan 28 18:13:14 2015 -0800

    Fix sample errors for maven and gradle

M	examples/gradle/src/main/java/Main.java
M	examples/maven/error_prone_should_flag/src/main/java/Main.java

commit 878abffec1e0b2a803495309c71e073fba5790c3
Merge: 274230c 29910cf
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Wed Jan 28 16:05:36 2015 -0800

    Merge pull request #288 from cushon/fix287
    
    Fix JDK8 part of #287

commit 29910cf2d69454382d3ce5c103faba4ee0d4ebd9
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Wed Jan 28 15:57:45 2015 -0800

    Update the ant example to contain an error

M	examples/ant/src/Main.java

commit d747ebfc37ea65836a46b56f869b884000a88f57
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Wed Jan 28 15:56:37 2015 -0800

    Expunge references to -Xjcov now that #228 is fixed

M	core/src/main/java/com/google/errorprone/VisitorState.java
M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
D	core/src/test/java/com/google/errorprone/EndPosTest.java
M	examples/ant/build.xml

commit 274230c12a84a613ca4330d7397eb21b50a2a42c
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Jan 28 14:42:11 2015 -0800

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	annotations/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit 5d2633c25809607336927e12d64d580a44ccab85
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Jan 28 14:35:39 2015 -0800

    [maven-release-plugin] prepare release v2.0

M	annotation/pom.xml
M	annotations/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit c5fb7fe08ccc28328baf0aaaa6e00d37667e8dae
Merge: 4af7fd4 4b323a3
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Wed Jan 28 14:29:09 2015 -0800

    Merge pull request #286 from google/fix_packaging
    
    Update dependencies with license information and fix JAR packaging

commit 4b323a3f4c57cd2b3bc2c6b15d9353c74c105b6e
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Jan 22 17:18:05 2015 -0800

    Update dependencies with license information and make sure everything is
    packaged properly.

M	core/pom.xml
M	pom.xml

commit 4af7fd4696467263ad0b53cba7b8325a0770781a
Merge: d6d653a 1b8d11a
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Wed Jan 28 12:41:11 2015 -0800

    Merge pull request #285 from JakeWharton/jw/static-compile-method
    
    Add static convenience method for compiling without exit.

commit 1b8d11aa30ef3880730d470b82af341dbccd120d
Author: Jake Wharton <jw@squareup.com>
Date:   Wed Jan 28 12:00:17 2015 -0800

    Add static convenience method for compiling without exit.
    
    As this method would result in a collision with an instance method of the same signature, that method has been renamed to 'run'.

M	ant/src/main/java/com/google/errorprone/ErrorProneAntCompilerAdapter.java
M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/DogfoodErrorProne.java
M	core/src/test/java/com/google/errorprone/ErrorProneTestCompiler.java
M	core/src/test/java/com/google/errorprone/matchers/DescendantOfTransitiveTest.java

commit d6d653aeb43dfb5f8b624e6421488e5ea8f3f937
Author: cushon <cushon@google.com>
Date:   Tue Jan 27 20:42:14 2015 -0800

    Remove BugCheckerSupplier now that BugChecker instances are immutable.
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=84933878

D	core/src/main/java/com/google/errorprone/BugCheckerSupplier.java
D	core/src/main/java/com/google/errorprone/FromClassBugCheckerSupplier.java
D	core/src/main/java/com/google/errorprone/FromInstanceBugCheckerSupplier.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
M	core/src/main/java/com/google/errorprone/scanner/InstanceReturningScannerSupplierImpl.java
M	core/src/main/java/com/google/errorprone/scanner/ScannerSupplier.java
M	core/src/main/java/com/google/errorprone/scanner/ScannerSupplierImpl.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzerTest.java
M	core/src/test/java/com/google/errorprone/scanner/ScannerSupplierTest.java

commit 3d587c22e97cb4e8738fb4f9b5f98e010c4df552
Author: cushon <cushon@google.com>
Date:   Tue Jan 27 16:24:43 2015 -0800

    Copy existing static analysis annotations into error-prone.
    
    Checks to follow.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=84917651

A	annotations/src/main/java/com/google/errorprone/annotations/CompileTimeConstant.java
A	annotations/src/main/java/com/google/errorprone/annotations/ForOverride.java
A	annotations/src/main/java/com/google/errorprone/annotations/IncompatibleModifiers.java
A	annotations/src/main/java/com/google/errorprone/annotations/RequiredModifiers.java

commit 54b05f43d14b09764f047f144f168105d9ffbde1
Author: cushon <cushon@google.com>
Date:   Tue Jan 27 12:46:56 2015 -0800

    Fix NPE in TypeParameterUnusedInFormals
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=84897561

M	core/src/main/java/com/google/errorprone/bugpatterns/TypeParameterUnusedInFormals.java
M	core/src/test/java/com/google/errorprone/bugpatterns/TypeParameterUnusedInFormalsTest.java

commit d8e26a0a73b0414fadbc02d55c25692f712fe7a1
Author: eaftan <eaftan@google.com>
Date:   Tue Jan 27 11:28:34 2015 -0800

    Remove references to wiki in BugPattern documentation, and update other
    Javadoc to give better guidance to bug checker authors.
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=84890904

M	annotation/src/main/java/com/google/errorprone/BugPattern.java
M	annotation/src/main/java/com/google/errorprone/BugPatternValidator.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java

commit 01b7dfaa29936971ed90b1f7a2b353aad0052316
Author: agoode <agoode@google.com>
Date:   Mon Jan 26 20:26:26 2015 -0800

    Introduce an error-prone test to validate @NoAllocation.
    
    Methods annotated with @NoAllocation are not allowed to allocate Java
    heap memory. This annotation can be used in server request handlers and
    other places where allocations are not acceptable.
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=84843123

M	core/pom.xml
A	core/src/main/java/com/google/errorprone/bugpatterns/NoAllocationChecker.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/NoAllocationCheckerTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/NoAllocationCheckerNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/NoAllocationCheckerPositiveCases.java

commit 691926e4128744e96ec37dd637caf47374ccda51
Author: eaftan <eaftan@google.com>
Date:   Fri Jan 23 17:11:01 2015 -0800

    Delete OrderingFrom check.  It is a simplification that is already performed
    by Klippy.  This is old code and is not currently used anywhere.
    
    Resolves github issue #239
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=84666586

D	core/src/main/java/com/google/errorprone/bugpatterns/OrderingFrom.java
D	core/src/test/java/com/google/errorprone/bugpatterns/OrderingFromTest.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/OrderingFromNegativeCases.java

commit 584bb3ca30d6c77127d827bcdf212be92152b777
Author: glorioso <glorioso@google.com>
Date:   Wed Jan 21 22:21:36 2015 -0800

    Error-prone bugpattern for patterns of the form:
    
    foo.size() >= 0
    foo.length() >= 0
    array.length >= 0
    
    where foo is one of a particular set of types where size() or length() is guaranteed to be >= 0 (Collection, String, Map, etc.)
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=84499462

A	core/src/main/java/com/google/errorprone/bugpatterns/SizeGreaterThanOrEqualsZero.java
A	core/src/test/java/com/google/errorprone/bugpatterns/SizeGreaterThanOrEqualsZeroTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/SizeGreaterThanOrEqualsZeroNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/SizeGreaterThanOrEqualsZeroPositiveCases.java

commit 9ba17df97a40beb8b170e67e4188f3c8b883cf8a
Author: cushon <cushon@google.com>
Date:   Wed Jan 21 21:16:12 2015 -0800

    Make BugCheckers immutable.
    
    Severity override is now accomplished by keeping a separate immutable map
    between checkers and severity levels.
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=84496729

M	annotation/src/main/java/com/google/errorprone/BugPattern.java
M	core/src/main/java/com/google/errorprone/BugCheckerSupplier.java
M	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
M	core/src/main/java/com/google/errorprone/FromClassBugCheckerSupplier.java
M	core/src/main/java/com/google/errorprone/FromInstanceBugCheckerSupplier.java
M	core/src/main/java/com/google/errorprone/VisitorState.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ChainingConstructorIgnoresParameter.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByChecker.java
M	core/src/main/java/com/google/errorprone/matchers/Description.java
M	core/src/main/java/com/google/errorprone/scanner/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/scanner/InstanceReturningScannerSupplierImpl.java
M	core/src/main/java/com/google/errorprone/scanner/Scanner.java
M	core/src/main/java/com/google/errorprone/scanner/ScannerSupplier.java
M	core/src/main/java/com/google/errorprone/scanner/ScannerSupplierImpl.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
M	core/src/test/java/com/google/errorprone/scanner/ScannerSupplierTest.java

commit 51f96797af4aa0b26f2bcfb6f90a397a107a0629
Author: cushon <cushon@google.com>
Date:   Wed Jan 21 20:49:42 2015 -0800

    Ignore void-returning methods in classes/packages with @CheckReturnValue.
    
    Also enforce that @CRV is not applied directly to void methods. This is more
    important now that we support the annotation on classes and packages.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=84495547

M	core/src/main/java/com/google/errorprone/bugpatterns/CheckReturnValue.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CheckReturnValueTest.java

commit 596c19b13e504994d4a672e1748dcb74c7d2af0f
Merge: 3eb00f4 71660b2
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Tue Jan 27 20:20:33 2015 -0800

    Merge pull request #281 from JakeWharton/patch-1
    
    Point to new repository and issue creation page on GitHub.

commit 71660b2bcb0331e808098d1460f4f661050ea195
Author: Jake Wharton <JakeWharton@GMail.com>
Date:   Tue Jan 27 18:49:04 2015 -0800

    Point to new repository and issue creation page on GitHub.

M	core/src/main/resources/com/google/errorprone/errors.properties

commit 3eb00f483f2636f6aff0187e02008bd1ddf31a75
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Jan 22 14:43:55 2015 -0800

    Bump version to 2.0-SNAPSHOT in preparation for release

M	annotation/pom.xml
M	annotations/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit 2b34bc3f5baf4fc081990730831a59de8795cbc0
Author: eaftan <eaftan@google.com>
Date:   Wed Jan 21 15:51:11 2015 -0800

    Add util and .travis.yml file to opensource_filegroup, so they get synced with
    the external repo.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=84476475

M	.gitignore

commit b013561bcbd740df867c080b1ee1f82741043f68
Author: cushon <cushon@google.com>
Date:   Wed Jan 21 10:29:19 2015 -0800

    Suppress options warnings when setting the -source and -target explicitly.
    
    This avoids warnings like 'bootstrap class path not set in conjunction with
    -source 1.7', which are meaningless if the explicit source level matches the
    default bootclasspath.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=84447009

M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java

commit 874aa226223c7f316fdb394dd0ddd7b92ea2fbbb
Author: cushon <cushon@google.com>
Date:   Tue Jan 20 18:41:21 2015 -0800

    Default to compiling with the same source/target as the host's javac.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=84397138

M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java

commit 56b53e9d2c81c33fe5bd7bf2a526305212b7d548
Author: cushon <cushon@google.com>
Date:   Fri Jan 16 12:59:06 2015 -0800

    Remove the 'disableable' attribute from @BugPattern.
    
    There's usually not a good reason to make checks undisableable, and it
    interferes with clean-up. Checks that should be undisableable (e.g. for
    security reasons) are already unsuppressible.
    
    RELNOTES: none
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=84155911

M	annotation/src/main/java/com/google/errorprone/BugPattern.java
M	core/src/main/java/com/google/errorprone/BugCheckerSupplier.java
M	core/src/main/java/com/google/errorprone/FromClassBugCheckerSupplier.java
M	core/src/main/java/com/google/errorprone/FromInstanceBugCheckerSupplier.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ChainingConstructorIgnoresParameter.java
M	core/src/main/java/com/google/errorprone/bugpatterns/DepAnn.java
M	core/src/main/java/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffix.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NarrowingCompoundAssignment.java
M	core/src/main/java/com/google/errorprone/scanner/ScannerSupplier.java
M	core/src/test/java/com/google/errorprone/CommandLineFlagTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneJavaCompilerTest.java
M	core/src/test/java/com/google/errorprone/scanner/ScannerSupplierTest.java

commit e58737a9ece9e6ada1398faaa335ed47aa1ca48a
Author: cushon <cushon@google.com>
Date:   Fri Jan 16 09:43:45 2015 -0800

    TypeParameterUnusedInFormals: ignore methods that always return null or throw.
    
    It's OK for a method to declare that it can return any type as long as it never
    returns anything, or always returns null. We check for casts to the return type
    as a heuristic.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=84139059

M	core/src/main/java/com/google/errorprone/bugpatterns/TypeParameterUnusedInFormals.java
M	core/src/test/java/com/google/errorprone/bugpatterns/TypeParameterUnusedInFormalsTest.java

commit 5ea72787ddbf4e763858a2b7221c957c0e22c955
Author: eaftan <eaftan@google.com>
Date:   Thu Jan 15 16:35:55 2015 -0800

    Add checker to flag uses of YYYY ("week year") in date patterns.  The week
    year often begins before the actual year.  For example, the week year 2015
    began on December 29, 2014.  Thus if you use "week year" when you really meant
    "year", during the last week of many years, you will get an incorrect year in
    your date string.  These are almost always intended to be yyyy ("year")
    instead.
    
    This bug caused a major Twitter outage earlier this week.  See
    https://twitter.com/jmhodges/status/549430032616017921.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=84088469

A	core/src/main/java/com/google/errorprone/bugpatterns/MisusedWeekYear.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StringEquality.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/MisusedWeekYearTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/MisusedWeekYearNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/MisusedWeekYearPositiveCases.java

commit 51da68ddc08883864942040b914be00043388579
Author: cushon <cushon@google.com>
Date:   Thu Jan 15 16:19:52 2015 -0800

    Improve TypeParameterUnusedInFormals documentation.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=84087045

M	core/src/main/java/com/google/errorprone/bugpatterns/TypeParameterUnusedInFormals.java

commit 17dd800f7737447ce7e44988216cc4c7433713da
Author: eaftan <eaftan@google.com>
Date:   Thu Jan 15 12:12:04 2015 -0800

    Make NullnessAnalysis Serializable so it can be used in JavacFlume jobs, and add a matcher to make it
    more easily usable.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=84063363

M	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessAnalysis.java
M	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	core/src/main/java/com/google/errorprone/matchers/Matcher.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
A	core/src/main/java/com/google/errorprone/matchers/NullnessMatcher.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java

commit 3bfc714165032e0f55fa778985d56fd0a1a13c88
Author: agoode <agoode@google.com>
Date:   Tue Jan 13 11:38:27 2015 -0800

    Introduce a new place to put generally useful annotations for error-prone tests.
    
    Initially populated with @NoAllocation, pending another CL with an error-prone test to validate it. Methods annotated with @NoAllocation are not allowed to allocate Java heap memory. This annotation can be used in server request handlers and other places where allocations are not acceptable.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=83865071

A	annotations/pom.xml
A	annotations/src/main/java/com/google/errorprone/annotations/NoAllocation.java
M	pom.xml

commit 75151853903ce8399ceea9ab4a502840f112793c
Author: cushon <cushon@google.com>
Date:   Tue Jan 13 11:33:02 2015 -0800

    Fix typos in NarrowingCompoundAssignment
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=83864582

M	core/src/main/java/com/google/errorprone/bugpatterns/NarrowingCompoundAssignment.java

commit d167afda0f385077dd4aa583ebd74635a75781e1
Author: cushon <cushon@google.com>
Date:   Mon Jan 12 14:19:01 2015 -0800

    Make NarrowingCompoundAssignment disableable.
    
    Also remove incorrect alternate name.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=83789868

M	core/src/main/java/com/google/errorprone/bugpatterns/NarrowingCompoundAssignment.java

commit 257b174785e9d2c8cb4027f8fd4eae749937bb59
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Jan 9 15:20:47 2015 -0800

    Convert documentation to markdown

M	core/src/main/java/com/google/errorprone/bugpatterns/TypeParameterUnusedInFormals.java

commit 2384e2435f19a5c370f7f76cca96e7e4c52f6637
Author: cushon <cushon@google.com>
Date:   Tue Jan 6 16:19:49 2015 -0800

    Support @CheckReturnValue annotations applied to the enclosing class or package
    declaration.
    
    See: https://github.com/google/error-prone/issues/276
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=83384910

M	core/src/main/java/com/google/errorprone/bugpatterns/CheckReturnValue.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CheckReturnValueTest.java

commit 5c6577173cfbf7eef2d8fba20cdb536292a6d3a2
Author: eaftan <eaftan@google.com>
Date:   Mon Dec 22 16:07:58 2014 -0800

    Allow error-prone flags that refer to checks we don't know about yet.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=82684584

M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorProneJavaCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorProneOptions.java
M	core/src/main/java/com/google/errorprone/scanner/ScannerSupplier.java
M	core/src/test/java/com/google/errorprone/CommandLineFlagTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneJavaCompilerTest.java
M	core/src/test/java/com/google/errorprone/scanner/ScannerSupplierTest.java

commit 91abf5c00e7607aefcebf7fb046738d8b2463722
Author: eaftan <eaftan@google.com>
Date:   Fri Dec 19 17:01:37 2014 -0800

    The nullness analysis now assumes that methods annotated with @Nullable are
    capable of returning null, regardless of whether they are on the whitelist.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=82553869

M	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessAnalysis.java
M	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	core/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java

commit ab80080e344e15457efd5262ff848e7735e7230e
Author: eaftan <eaftan@google.com>
Date:   Fri Dec 19 13:47:50 2014 -0800

    Remove support for old-style "-Xepdisable" flags.
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=82540077

M	annotation/src/main/java/com/google/errorprone/BugPattern.java
M	core/src/main/java/com/google/errorprone/ErrorProneOptions.java
M	core/src/test/java/com/google/errorprone/CommandLineFlagTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneJavaCompilerTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneOptionsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DepAnnTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffixTest.java

commit 1dbbefdf663ce027e0e7663f7b1e12320d52b69b
Author: cushon <cushon@google.com>
Date:   Thu Dec 18 18:28:23 2014 -0800

    Preserve precedence when rewriting compound assignments where the rhs is a binary expression.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=82481621

M	core/src/main/java/com/google/errorprone/bugpatterns/NarrowingCompoundAssignment.java
A	core/src/main/java/com/google/errorprone/util/OperatorPrecedence.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NarrowingCompoundAssignmentTest.java

commit 37cb93b8e6e2e18f89edd7a0f3aa499a13fadb9e
Author: lowasser <lowasser@google.com>
Date:   Tue Dec 16 12:45:58 2014 -0800

    Support multiple suggested fixes.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=82257217

M	core/src/main/java/com/google/errorprone/matchers/Description.java

commit db67779b5a027e553d24d55dc4fec4926eb3a927
Author: cushon <cushon@google.com>
Date:   Tue Dec 16 11:36:13 2014 -0800

    Allow right shifts.
    
    This case can never result in a loss of precision, since there's no way to
    distinguish between:
    
    1) a byte that gets widened to int, right-shifted, and converted back to byte
    2) a byte that gets right-shifted directly
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=82251342

M	core/src/main/java/com/google/errorprone/bugpatterns/NarrowingCompoundAssignment.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NarrowingCompoundAssignmentTest.java

commit 00b16aff5444ee9abde5cc8ac0b936b4c034e978
Author: awturner <awturner@google.com>
Date:   Tue Dec 9 07:43:33 2014 -0800

    Remove reference to Fix.NO_FIX
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=81674971

M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java

commit 46358f3709328f137632f87676b13887cf4010cb
Author: cushon <cushon@google.com>
Date:   Thu Dec 4 16:28:48 2014 -0800

    Add a check for type parameters unused in formals.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=81380820

A	core/src/main/java/com/google/errorprone/bugpatterns/TypeParameterUnusedInFormals.java
A	core/src/test/java/com/google/errorprone/bugpatterns/TypeParameterUnusedInFormalsTest.java

commit 1fdeeedf5e504d6dc05e93244032105bd7decf2b
Author: lowasser <lowasser@google.com>
Date:   Thu Dec 4 15:13:45 2014 -0800

    Add error-prone check for attempts to mock (with Mockito) final classes.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=81374124

M	annotation/src/main/java/com/google/errorprone/BugPattern.java
A	core/src/main/java/com/google/errorprone/bugpatterns/CannotMockFinalClass.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/CannotMockFinalClassTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/CannotMockFinalClassNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/CannotMockFinalClassNegativeCases2.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/CannotMockFinalClassPositiveCases.java

commit c55ddf84bcc5421ec4321fe53d9e258e77713d97
Author: cushon <cushon@google.com>
Date:   Thu Dec 4 14:57:47 2014 -0800

    Disallow static members guarded by instance locks.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=81372746

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByUtils.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByValidator.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByValidatorTest.java

commit 920b56fe23bee92168abf5590d0e4103ec4934de
Author: cpovirk <cpovirk@google.com>
Date:   Thu Dec 4 14:35:13 2014 -0800

    Rename NullnessValue to Nullness.
    
    Also:
    - Remove the visitNumericalAddition override. It's already covered by visitNumericalOperation.
    - Add documentation of autoboxing in NullnessAnalysis.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=81370747

M	core/src/main/java/com/google/errorprone/bugpatterns/StringEquality.java
M	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/AbstractNullnessPropagationTransfer.java
A	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/Nullness.java
M	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessAnalysis.java
M	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
D	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessValue.java
M	core/src/test/java/com/google/errorprone/dataflow/LocalStoreTest.java
A	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessTest.java
D	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessValueTest.java

commit c5f6ec0d7abd7a03b4974c280c475990770f4139
Author: awturner <awturner@google.com>
Date:   Thu Dec 4 01:17:07 2014 -0800

    Add errorprone check for Preconditions.checkNotNull on a proto field.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=81318124

A	core/src/main/java/com/google/errorprone/bugpatterns/ProtoFieldPreconditionsCheckNotNull.java
A	core/src/test/java/com/google/errorprone/bugpatterns/ProtoFieldPreconditionsCheckNotNullTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/ProtoFieldPreconditionsCheckNotNullNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/ProtoFieldPreconditionsCheckNotNullPositiveCases.java

commit 8a1073d3917b65626a11469ae3bc423d42ebc572
Author: eaftan <eaftan@google.com>
Date:   Wed Dec 3 14:01:07 2014 -0800

    In JavacErrorDescriptionListener, filter nulls from the list of applied fixes,
    after being transformed from unapplied fixes.  The applied fix can be null if
    it only affects imports.
    
    For example, consider a checker that just switches out one API for a
    compatible one.  If there is a static import for a method from the old API,
    then error-prone will match on the methodInvocation, but the fix will only
    update the static import and not modify the method call itself.  In this case,
    we want the following behavior:
    1) In the diagnostic message, we do not want to provide a fix snippet, because
    the fix is not local to where the caret will be (on the method invocation).
    2) In automated fixes, we do want to update the static import but not
    change the method call itself.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=81279147

M	core/src/main/java/com/google/errorprone/JavacErrorDescriptionListener.java

commit 6f4dbaf22423bc66437d69a03c69ac9db8d1ef73
Author: cushon <cushon@google.com>
Date:   Wed Dec 3 11:06:26 2014 -0800

    Delete GuardedBy again.
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=81262140

D	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedBy.java

commit 2460410e7a1a9f59f590e4e74efba53a81bb4f54
Author: cpovirk <cpovirk@google.com>
Date:   Mon Dec 1 11:42:03 2014 -0800

    Generalize NullnessPropagationStore to work with any kind of AbstractValue.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=81083580

A	core/src/main/java/com/google/errorprone/dataflow/LocalStore.java
M	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/AbstractNullnessPropagationTransfer.java
D	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationStore.java
A	core/src/test/java/com/google/errorprone/dataflow/LocalStoreTest.java
D	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationStoreTest.java

commit b9fd38127b94ca0898c931d67026a69ed3eb0745
Author: cushon <cushon@google.com>
Date:   Wed Nov 26 16:45:54 2014 -0800

    Add a check for narrowing compound assignments.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=80872891

A	core/src/main/java/com/google/errorprone/bugpatterns/NarrowingCompoundAssignment.java
A	core/src/test/java/com/google/errorprone/bugpatterns/NarrowingCompoundAssignmentTest.java

commit 659bae0bc876abc5b21d62e8ee2b5e1bd48ce985
Author: lowasser <lowasser@google.com>
Date:   Tue Nov 25 08:23:59 2014 -0800

    Use contentEquals in StaticMethod instead of converting Name.toString().
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=80731376

M	core/src/main/java/com/google/errorprone/matchers/StaticMethod.java

commit c299f92e39007ec8b63329e8691c0f47c409926e
Author: cushon <cushon@google.com>
Date:   Mon Nov 24 14:12:54 2014 -0800

    Add the constaint that Matchers can only operate on Trees.
    
    Allowing things like Matcher<List<Statement>> made it impossible to provide the
    matcher with a VisitorState with the correct path. This also de-duplicates the
    MultiMatcher implementations and ensures that they use correct TreePaths.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=80664674

M	core/src/main/java/com/google/errorprone/bugpatterns/ChainingConstructorIgnoresParameter.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ClassCanBeStatic.java
M	core/src/main/java/com/google/errorprone/bugpatterns/DeadException.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceAssistedInjectScoping.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceInjectOnFinalField.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnConstructors.java
M	core/src/main/java/com/google/errorprone/matchers/Annotation.java
A	core/src/main/java/com/google/errorprone/matchers/ChildMultiMatcher.java
M	core/src/main/java/com/google/errorprone/matchers/ConstructorOfClass.java
M	core/src/main/java/com/google/errorprone/matchers/Enclosing.java
M	core/src/main/java/com/google/errorprone/matchers/HasIdentifier.java
M	core/src/main/java/com/google/errorprone/matchers/JUnitMatchers.java
D	core/src/main/java/com/google/errorprone/matchers/LastStatement.java
M	core/src/main/java/com/google/errorprone/matchers/Matcher.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/matchers/MethodHasParameters.java
M	core/src/main/java/com/google/errorprone/matchers/MultiMatcher.java
M	core/src/test/java/com/google/errorprone/matchers/AnnotationTest.java
M	core/src/test/java/com/google/errorprone/matchers/ConstructorOfClassTest.java
M	core/src/test/java/com/google/errorprone/matchers/DescendantOfAbstractTest.java
M	core/src/test/java/com/google/errorprone/matchers/EnclosingTest.java
M	core/src/test/java/com/google/errorprone/matchers/HasIdentifierTest.java
M	core/src/test/java/com/google/errorprone/matchers/MethodHasParametersTest.java

commit a45bc6a1cbe1d59b4e4e45d0835ea5bf407c725e
Author: cpovirk <cpovirk@google.com>
Date:   Fri Nov 21 13:18:51 2014 -0800

    Add or correct package statements for test resources.
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=80500937

M	core/src/test/resources/com/google/errorprone/CommandLineFlagTestFile.java
M	core/src/test/resources/com/google/errorprone/ExtendedMultipleTopLevelClassesWithErrors.java
M	core/src/test/resources/com/google/errorprone/ExtendedMultipleTopLevelClassesWithNoErrors.java
M	core/src/test/resources/com/google/errorprone/MultipleTopLevelClassesWithErrors.java
M	core/src/test/resources/com/google/errorprone/MultipleTopLevelClassesWithNoErrors.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/DepAnnNegativeCase1.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/DepAnnNegativeCase2.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/DepAnnPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/FinallyNegativeCase1.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceAssistedParametersNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/MisusedFormattingLoggerNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/MisusedFormattingLoggerPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ProtoFieldNullComparisonNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ProtoFieldNullComparisonPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/StaticAccessedFromInstancePositiveCase2.java

commit 2fa1e3b5dc3c78eb2901acc3221619f9ab219186
Author: cpovirk <cpovirk@google.com>
Date:   Fri Nov 21 12:24:09 2014 -0800

    Set VisitorState.getTreePath() correctly for Matchers that look at enclosing elements:
    The existing code left the path to the original element in place. The new code updates the path to point to the enclosing element being matched against.
    This brings the enclosing-element Matchers in line with the parentNode Matcher, which I believe is the desirable behavior.
    
    There is one subtlety to this around Enclosing.BlockOrCase. See the comments I've inserted into DeadException.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=80496579

M	core/src/main/java/com/google/errorprone/VisitorState.java
M	core/src/main/java/com/google/errorprone/bugpatterns/DeadException.java
M	core/src/main/java/com/google/errorprone/matchers/Enclosing.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
A	core/src/test/java/com/google/errorprone/matchers/EnclosingTest.java

commit a84b1a3fabb78235d1d09de584a45c0b2650a453
Author: eaftan <eaftan@google.com>
Date:   Wed Nov 19 11:02:12 2014 -0800

    Refactor nullness analysis to allow users to customize the set of methods
    known never to return null.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=80310289

D	core/src/main/java/com/google/errorprone/JDKCompatible.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StringEquality.java
A	core/src/main/java/com/google/errorprone/dataflow/ConstantPropagationAnalysis.java
A	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessAnalysis.java
M	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
D	core/src/main/java/com/google/errorprone/matchers/DefinitelyNonNull.java
M	core/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java

commit 6e60ecb7dd6cc9fd48fa9dec1ed69fa1a566f8b5
Author: cpovirk <cpovirk@google.com>
Date:   Thu Nov 13 13:20:41 2014 -0800

    Set the storeChanged bit:
    https://github.com/google/error-prone/issues/268
    
    Most of the interesting work in this CL consists of making NullnessPropagationStore (and, by extension, TransferInput) immutable so that I'm not deathly afraid to compute storeChanged from the result of oldStore.equals(newStore). As it turns out, I later introduced an updateStore() method that would by itself have done a pretty good job of localizing the mutation of NullnessPropagationStore. Maybe I don't need an immutable NullnessPropagationStore anymore, but I've kept it that way for now, partially because immutability is nice in general, partially because it might avoid unnecessary copies in the framework, and partially because I didn't see much reason to change it back.
    
    There's some additional churn in this CL now that I don't mutate the NullnessPropagationStore/TransferInput in place: I split result() into noStoreChanges() and updateRegularStore(). This also lets me move some more work into updateRegularStore(). I figured that the renaming to updateRegularStore() would help explain what that method did and that the corresponding renaming to noStoreChanges() would maintain the parallelism between the two.
    
    I also added some tests. All of them passed before this CL, and all of them pass after. I added the one only because I almost introduced a bug, got curious whether the tests would have caught it, and found that they wouldn't have. Now they would. I added the others (the loop tests) in the hope of proving that storeChanged is necessary, but they work with or without it. I'm leaving them because we probably should have some tests of loops. I'm still not sure how to prove that the storeChanged bit matters.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=79884827

M	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/AbstractNullnessPropagationTransfer.java
M	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationStore.java
M	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationStoreTest.java
M	core/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java
M	core/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases3.java

commit fafa729d388eede5150c0881db711c5793c6ab48
Author: eaftan <eaftan@google.com>
Date:   Tue Nov 11 11:54:02 2014 -0800

    Disallow demoting an error to a warning if the check is currently enabled and
    is not disableable.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=79685818

M	core/src/main/java/com/google/errorprone/scanner/ScannerSupplier.java
M	core/src/test/java/com/google/errorprone/CommandLineFlagTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneJavaCompilerTest.java
M	core/src/test/java/com/google/errorprone/scanner/ScannerSupplierTest.java

commit ba838af03e10d5c49e884e92d88541ad9d930ac7
Author: cpovirk <cpovirk@google.com>
Date:   Tue Nov 11 11:44:27 2014 -0800

    Update Checker Framework to 1.8.7.
    
    https://github.com/google/error-prone/issues/267
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=79684907

M	pom.xml

commit ffb7cc675eb0349ce55083e0d1ec91a860925976
Author: eaftan <eaftan@google.com>
Date:   Fri Nov 7 16:47:03 2014 -0800

    Refactor ScannerSuppliers to keep track of both all known checks and enabled
    checks.  This lets us separate knowledge of all known checks from the initial
    list of built-in checks in BuiltInCheckerSuppliers.
    
    This lets us compose lists of built-in checks while retaining the ability to
    enable ones that are off by default.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=79459733

M	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
M	core/src/main/java/com/google/errorprone/scanner/InstanceReturningScannerSupplierImpl.java
M	core/src/main/java/com/google/errorprone/scanner/ScannerSupplier.java
M	core/src/main/java/com/google/errorprone/scanner/ScannerSupplierImpl.java
M	core/src/test/java/com/google/errorprone/scanner/ScannerSupplierTest.java

commit 61560ad8c9a1fa75067f2edefb1db8205a126276
Author: cushon <cushon@google.com>
Date:   Thu Nov 6 15:53:06 2014 -0800

    Remove 'search' mode from error-prone.
    
    The current implementation is almost entirely unused, and annoying to support.
    It could be re-implemented using custom severities in the future, if anyone
    needs it.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=79376803

M	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorProneJavacJavaCompiler.java
D	core/src/main/java/com/google/errorprone/MatchListener.java
D	core/src/main/java/com/google/errorprone/SearchResultsPrinter.java
M	core/src/main/java/com/google/errorprone/VisitorState.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ChainingConstructorIgnoresParameter.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedBy.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByChecker.java
M	core/src/main/java/com/google/errorprone/scanner/Scanner.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneTestCompiler.java

commit e0e92eeca120cf51a168440bb0c0b23f7b90f0ff
Author: eaftan <eaftan@google.com>
Date:   Wed Nov 5 10:25:10 2014 -0800

    Improve error-prone options handling to allow enabling non-default checks and
    promoting warnings to errors and errors to warnings.
    
    This CL changes error-prone options handling to make it cleaner, allow users
    to enable non-default checks, and allow users to override the built-in severity
    level (warning vs. error).
    
    Old-style error-prone flags looked like:
    -Xepdisable:<checkName[,checkName...]
    
    New error-prone flags look like:
    -Xep:<checkName>[:severity]
    where severity is one of {OFF, WARN, ERROR}.  If no severity is provided, then
    the default severity is used.
    
    This change retains support for the old-style flags until we can clean
    the depot.
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=79264413

M	core/src/main/java/com/google/errorprone/BugCheckerSupplier.java
M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorProneJavaCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorProneOptions.java
M	core/src/main/java/com/google/errorprone/FromClassBugCheckerSupplier.java
M	core/src/main/java/com/google/errorprone/FromInstanceBugCheckerSupplier.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
A	core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
D	core/src/main/java/com/google/errorprone/scanner/ErrorProneScannerSuppliers.java
M	core/src/main/java/com/google/errorprone/scanner/InstanceReturningScannerSupplierImpl.java
M	core/src/main/java/com/google/errorprone/scanner/ScannerSupplier.java
M	core/src/main/java/com/google/errorprone/scanner/ScannerSupplierImpl.java
D	core/src/test/java/com/google/errorprone/CommandLineFlagDisableTest.java
A	core/src/test/java/com/google/errorprone/CommandLineFlagTest.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneJavaCompilerTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneOptionsTest.java
A	core/src/test/java/com/google/errorprone/scanner/ScannerSupplierTest.java

commit d9538f316c1934890933391d17f246a97acc3022
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Wed Jan 7 14:38:15 2015 -0800

    Revert to setting git username and email explicitly

M	util/generate-latest-docs.sh

commit d254857944e10d346e653416098bde3f6195b9df
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Wed Jan 7 14:23:34 2015 -0800

    fix punctuation nit

M	README.md

commit 350819f213db87766a6730d7c9736593d71f66ae
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Wed Jan 7 14:09:34 2015 -0800

    add links to README

M	README.md

commit da9d5ec1792bfb414ad65ad8fd506ec3a523d1cf
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Wed Jan 7 13:53:42 2015 -0800

    Set travis git config less aggressively

M	util/generate-latest-docs.sh

commit 3ff59ade93663ad00a829fb0267deb92cebacf28
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Wed Jan 7 13:51:16 2015 -0800

    Generate javadoc.

M	util/generate-latest-docs.sh

commit 98d6eb39cb3a7f3dc89c2bac4b22bc8d4d11ec58
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Wed Jan 7 12:56:29 2015 -0800

    Fix repo name.

M	util/generate-latest-docs.sh
M	util/publish-snapshot-on-commit.sh

commit d1bd7d55b1a04ab332a5730b332bc0da3b728415
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Wed Jan 7 12:52:14 2015 -0800

    Link to wiki from README

M	README.md

commit a9044130fb1b6b8461204001ffa2ec3b36107454
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Tue Jan 6 17:10:55 2015 -0800

    Configure travis to publish snapshots and update documentation.

M	.travis.yml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml
A	util/generate-latest-docs.sh
A	util/publish-snapshot-on-commit.sh
A	util/settings.xml

commit 3426910d73710d3e914cab60df4636ca72bdcdf1
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Thu Dec 18 14:44:43 2014 -0800

    Add CONTRIBUTING file

A	CONTRIBUTING.md

commit b5b201b11a8afdc5a046c02320d45df87de9adc5
Merge: b3e8921 89941d1
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Oct 31 13:47:31 2014 -0700

    Merge pull request #266 from cushon/master
    
    Fix lint.

commit 89941d172466c9da6007b501f9ffe8667903fc75
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Oct 31 13:38:40 2014 -0700

    Fix lint.

M	docgen/src/main/java/com/google/errorprone/BugPatternIndexYamlWriter.java
M	docgen/src/main/java/com/google/errorprone/DocGen.java
M	docgen/src/test/java/com/google/errorprone/BugPatternFileGeneratorTest.java
M	docgen/src/test/java/com/google/errorprone/BugPatternIndexYamlWriterTest.java

commit b3e8921f8e8a425a98409ade5a7258de03fd9077
Merge: 27c0e47 153fd2d
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Oct 31 13:26:17 2014 -0700

    Merge pull request #265 from cushon/master
    
    Update from internal.

commit 153fd2df1bc1eb8c28a7b976dfe71d4ce2f839ee
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Oct 31 11:52:55 2014 -0700

    Change another URL to errorprone.info

M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java

commit 17f75c50edc4100a92b11cf71cf56aa6e32da502
Author: cushon <cushon@google.com>
Date:   Thu Oct 30 17:16:20 2014 -0700

    Refactor error-prone's entry points to be compatible with javac9.
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=78889068

M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/ErrorProneTestCompiler.java

commit 20565dba2fd32318f9f3c6bd543b8191baa742ab
Author: eaftan <eaftan@google.com>
Date:   Thu Oct 30 14:59:37 2014 -0700

    Change DiagnosticTestHelper to allow clearing of collected diagnostics.  This
    lets us assert properties on diagnostics across two invocations of the same
    ErrorProneTestCompiler.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=78877748

M	core/pom.xml
M	core/src/test/java/com/google/errorprone/CommandLineFlagDisableTest.java
M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java
M	core/src/test/java/com/google/errorprone/ErrorProneTestCompiler.java

commit 59c29e7ac1ad3ea1a54a98ff76b8c953a06808cf
Author: eaftan <eaftan@google.com>
Date:   Thu Oct 30 14:07:53 2014 -0700

    Change if statements in ErrorProneScanner to match style rule that braces
    are required.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=78872632

M	core/src/main/java/com/google/errorprone/scanner/ErrorProneScanner.java

commit bde14949718a7c09a2093a198e14077a627e9ff7
Author: eaftan <eaftan@google.com>
Date:   Thu Oct 30 13:36:22 2014 -0700

    Implement suppliers for ErrorProneScanners.  This decouples the set of checks
    that error-prone is initialized with from which checks are enabled for a
    particular compilation, which may vary based on command-line arguments and
    error-prone plugins.
    
    ScannerSuppliers are immutable.  To apply command-line options to a
    ScannerSupplier, you use a static utility method,
    ScannerSuppliers.applyOverrides(), to produce a new ScannerSupplier with
    the correct set of checks.  To compose ScannerSuppliers (e.g., to add plugin
    checks to the default checks), you use another static utility method,
    ScannerSuppliers.compose().
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=78869827

M	core/pom.xml
A	core/src/main/java/com/google/errorprone/BugCheckerSupplier.java
M	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorProneJavaCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorProneJavacJavaCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorProneOptions.java
D	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
A	core/src/main/java/com/google/errorprone/FromClassBugCheckerSupplier.java
A	core/src/main/java/com/google/errorprone/FromInstanceBugCheckerSupplier.java
D	core/src/main/java/com/google/errorprone/Scanner.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
D	core/src/main/java/com/google/errorprone/matchers/Disableable.java
A	core/src/main/java/com/google/errorprone/scanner/ErrorProneScanner.java
A	core/src/main/java/com/google/errorprone/scanner/ErrorProneScannerSuppliers.java
A	core/src/main/java/com/google/errorprone/scanner/InstanceReturningScannerSupplierImpl.java
A	core/src/main/java/com/google/errorprone/scanner/Scanner.java
A	core/src/main/java/com/google/errorprone/scanner/ScannerSupplier.java
A	core/src/main/java/com/google/errorprone/scanner/ScannerSupplierImpl.java
M	core/src/test/java/com/google/errorprone/CommandLineFlagDisableTest.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneJavaCompilerTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneOptionsTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneTestCompiler.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitiveTest.java
M	core/src/test/java/com/google/errorprone/matchers/AnnotationHasArgumentWithValueTest.java
M	core/src/test/java/com/google/errorprone/matchers/AnnotationTest.java
M	core/src/test/java/com/google/errorprone/matchers/CompilerBasedAbstractTest.java
M	core/src/test/java/com/google/errorprone/matchers/CompoundAssignmentTest.java
M	core/src/test/java/com/google/errorprone/matchers/ConstructorOfClassTest.java
M	core/src/test/java/com/google/errorprone/matchers/DescendantOfAbstractTest.java
M	core/src/test/java/com/google/errorprone/matchers/DescendantOfTransitiveTest.java
M	core/src/test/java/com/google/errorprone/matchers/HasIdentifierTest.java
M	core/src/test/java/com/google/errorprone/matchers/InstanceMethodTest.java
M	core/src/test/java/com/google/errorprone/matchers/MethodHasParametersTest.java
M	core/src/test/java/com/google/errorprone/matchers/MethodReturnsNonNullNextTokenTest.java
M	core/src/test/java/com/google/errorprone/matchers/MethodReturnsNonNullStringTest.java
M	core/src/test/java/com/google/errorprone/matchers/MethodReturnsNonNullToStringTest.java
M	core/src/test/java/com/google/errorprone/matchers/MethodReturnsTest.java
M	core/src/test/java/com/google/errorprone/matchers/NonNullLiteralTest.java
M	core/src/test/java/com/google/errorprone/matchers/StaticMethodTest.java
M	core/src/test/java/com/google/errorprone/suppress/CustomSuppressionTest.java
M	core/src/test/java/com/google/errorprone/suppress/SuppressWarningsTest.java
M	core/src/test/java/com/google/errorprone/suppress/UnsuppressibleTest.java
M	core/src/test/java/com/google/errorprone/util/ASTHelpersTest.java

commit f1eca97cb8be50e14fb7b4749c0eb628a5430af6
Author: cpovirk <cpovirk@google.com>
Date:   Thu Oct 30 07:16:01 2014 -0700

    More documentation for nullness propagation.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=78839960

M	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java

commit 9265d0fe23deb0132161d09408e01b3269047960
Author: cushon <cushon@google.com>
Date:   Wed Oct 29 15:44:15 2014 -0700

    Remove WrappedTreeMap and enable end positions by default.
    
    The memory overhead for end positions is now significantly lower, thanks to
    JDK-8033287.
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=78797260

M	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	core/src/main/java/com/google/errorprone/JavacErrorDescriptionListener.java
D	core/src/main/java/com/google/errorprone/WrappedTreeMap.java

commit 103bf3b7e5d2feb330ac0ee7a880a8bff7be3a5b
Author: cushon <cushon@google.com>
Date:   Tue Oct 21 09:29:39 2014 -0700

    Prepare NonNullLiteralTest for javac9.
    
    The test assumes there's only one MemberSelectTree in each test program, and
    javac9 uses that AST type to represent qualified import names.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=78177513

M	core/src/test/java/com/google/errorprone/matchers/NonNullLiteralTest.java

commit 81b5daba755d5a8e7d3c07133b1af23d0664aeff
Author: cushon <cushon@google.com>
Date:   Fri Oct 17 13:38:31 2014 -0700

    More output handling clean-up.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=77967092

M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java

commit ca888eb4f6a4d26bd5ae3756441fffa64397eed9
Author: cpovirk <cpovirk@google.com>
Date:   Fri Oct 17 09:56:13 2014 -0700

    Make ChainingConstructorIgnoresParameter an error.
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=77948812

M	core/src/main/java/com/google/errorprone/bugpatterns/ChainingConstructorIgnoresParameter.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ChainingConstructorIgnoresParameterTest.java

commit 0a57b756a792eaa86ac10d26aae79f9f7dba837f
Author: cushon <cushon@google.com>
Date:   Wed Oct 15 15:42:35 2014 -0700

    Clean up output handling in compiler-based tests.
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=77802161

M	core/src/test/java/com/google/errorprone/CommandLineFlagDisableTest.java
M	core/src/test/java/com/google/errorprone/EndPosTest.java

commit 40112e847348bca3204bdd6eec8134c6b991336c
Author: cushon <cushon@google.com>
Date:   Wed Oct 15 15:27:29 2014 -0700

    Merge the error-prone implementations of javac.main.JavaCompiler, and begin
    using the javac8 TaskListener interface for ErrorProneAnalyzer.
    
    Actually wiring up the TaskListener (see ErrorProneAnalyzer#register) is
    blocked on having the context be preserved across annotation processing rounds.
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=77800781

M	core/pom.xml
M	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorProneJavaCompiler.java
A	core/src/main/java/com/google/errorprone/ErrorProneJavacJavaCompiler.java
D	core/src/main/java/com/google/errorprone/ErrorReportingJavaCompiler.java
M	core/src/main/java/com/google/errorprone/JavacErrorDescriptionListener.java
M	core/src/main/java/com/google/errorprone/SearchResultsPrinter.java
D	core/src/main/java/com/google/errorprone/SearchingJavaCompiler.java
M	core/src/test/java/com/google/errorprone/CommandLineFlagDisableTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneTestCompiler.java

commit f93f5be2dc0a65db1aa4a6bb0af8b7aeb78b5fcc
Author: cushon <cushon@google.com>
Date:   Tue Oct 14 11:23:16 2014 -0700

    Fix Moe tracking of examples.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=77684250

A	examples/maven/annotation_processing_bug_repro/README.txt
A	examples/maven/annotation_processing_bug_repro/pom.xml
A	examples/maven/annotation_processing_bug_repro/src/main/java/NeedsAnnotationProcessing.java
A	examples/maven/error_prone_should_flag/README.txt
A	examples/maven/error_prone_should_flag/pom.xml
A	examples/maven/error_prone_should_flag/src/main/java/Main.java

commit b1750dbc7b3be309d704e3e3580fce4ceda296e0
Author: eaftan <eaftan@google.com>
Date:   Tue Oct 14 11:19:59 2014 -0700

    Refactor BugChecker not to store @BugPattern annotation and just copy
    needed information into fields.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=77683869

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/Scanner.java
M	core/src/main/java/com/google/errorprone/SuppressionHelper.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ComparisonOutOfRange.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidPatternSyntax.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MalformedFormatString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MissingCasesInEnumSwitch.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MisusedFormattingLogger.java
M	core/src/main/java/com/google/errorprone/bugpatterns/Overrides.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StaticAccessedFromInstance.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/AbstractLockMethodChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedBy.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByChecker.java
M	core/src/main/java/com/google/errorprone/matchers/Description.java
M	core/src/main/java/com/google/errorprone/matchers/Disableable.java
M	core/src/main/java/com/google/errorprone/matchers/Suppressible.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzerTest.java
M	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java
M	core/src/test/java/com/google/errorprone/matchers/DescriptionTest.java

commit 93332fab263dd87d4aa92795ac874599af3f047b
Author: cpovirk <cpovirk@google.com>
Date:   Tue Oct 14 09:21:52 2014 -0700

    Suppress constructor-chaining error so that it can be fixed upstream and incorporated into [] at that point without blocking the enabling of the error-prone check.
    (There is one other third_party occurrence, but it's in ICU4J, where all error-prone warnings are already suppressed: <http://[]
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=77670668

M	core/src/main/java/com/google/errorprone/bugpatterns/ChainingConstructorIgnoresParameter.java

commit 27c0e4761adeb09213150ece02c61ea279232647
Merge: 8aae5f8 1f093f1
Author: Eddie Aftandilian <eaftan@users.noreply.github.com>
Date:   Mon Oct 27 16:06:44 2014 -0700

    Merge pull request #24 from google/alexeagle
    
    Update URLs we print in compiler output.

commit 8aae5f892cb78b32081d4173f5f4499b9893109a
Merge: c360b57 f409a0c
Author: Eddie Aftandilian <eaftan@users.noreply.github.com>
Date:   Mon Oct 27 16:04:56 2014 -0700

    Merge pull request #25 from google/wikisyntax
    
    Remove triple curly braces.

commit f409a0ceb0611f839c6e4606d9117ef243217cbc
Author: Alex Eagle <alexeagle@google.com>
Date:   Tue Oct 14 22:40:26 2014 -0700

    More triple curly braces.

M	core/src/main/java/com/google/errorprone/bugpatterns/SuppressWarningsDeprecated.java

commit ee064df28c554370b2aed82224c5f714eabd8435
Author: Alex Eagle <alexeagle@google.com>
Date:   Tue Oct 14 22:37:37 2014 -0700

    Remove triple curly braces.
    
    These are valid syntax for code.google but Github interprets them as fluid markup. Switch to backticks.

M	core/src/main/java/com/google/errorprone/bugpatterns/OrderingFrom.java

commit c360b57adfe23ef98dd0e0cdac4ed65d7327aece
Author: Alex Eagle <eagle@post.harvard.edu>
Date:   Tue Oct 14 21:10:26 2014 -0700

    Update README.md

M	README.md

commit 1f093f134ec74ae1e9fe69b93ac9bafc9d0d601b
Author: Alex Eagle <alexeagle@google.com>
Date:   Tue Oct 14 21:06:08 2014 -0700

    Change URLs to errorprone.info

M	core/src/main/java/com/google/errorprone/matchers/Description.java
M	core/src/test/java/com/google/errorprone/matchers/DescriptionTest.java

commit cec807234eede115729fccaf6606b43a44c54b31
Author: Alex Eagle <alexeagle@google.com>
Date:   Tue Oct 14 17:09:41 2014 -0700

    Update URLs we print in compiler output.
    
    They now point to the generated github pages rather than google codesite.

M	core/src/main/java/com/google/errorprone/matchers/Description.java
M	core/src/test/java/com/google/errorprone/matchers/DescriptionTest.java

commit 5c761150bb15dee9056e07de43587d3e1be42c08
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Tue Oct 14 16:30:06 2014 -0700

    Update travis notification email

M	.travis.yml

commit f6b77c3b0f619fc73a4dedfdf6b3a5887f766a54
Author: Alex Eagle <alexeagle@google.com>
Date:   Tue Oct 14 16:30:30 2014 -0700

    Reproduce the build break from Travis, fix the test again.

M	docgen/src/main/java/com/google/errorprone/BugPatternIndexYamlWriter.java

commit 64b1b4189d3597c04b399cc6ea211bbfb18f65e6
Author: Alex Eagle <alexeagle@google.com>
Date:   Tue Oct 14 16:13:13 2014 -0700

    Use a TreeMap to preserve key order.

M	docgen/src/main/java/com/google/errorprone/BugPatternIndexYamlWriter.java

commit 3c182deda8197de6304630858dd0a2b811dca0f6
Author: Alex Eagle <alexeagle@google.com>
Date:   Tue Oct 14 16:02:40 2014 -0700

    Write the bugpatterns YAML in a consistent order so the test is deterministic

M	docgen/src/main/java/com/google/errorprone/BugPatternIndexYamlWriter.java

commit d10e766f2e32d4044bcf94a9f063da58c41b42a6
Merge: fdf7a92 0109139
Author: Alex Eagle <alexeagle@google.com>
Date:   Tue Oct 14 15:20:52 2014 -0700

    Merge https://github.com/google/error-prone
    
    Conflicts:
    	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4SetUpNotRunPositiveCaseCustomBefore.java
    	core/src/test/resources/com/google/errorprone/bugpatterns/StringBuilderInitWithCharPositiveCases.java
    	jdk6/src/main/java/com/google/errorprone/fixes/IndexedPosition6.java
    	jdk7/src/main/java/com/google/errorprone/fixes/IndexedPosition7.java
    	jdk8/src/main/java/com/google/errorprone/fixes/IndexedPosition8.java

commit 0109139c82b4e6054e0079d956ec483c72d65e53
Author: Alex Eagle <eagle@post.harvard.edu>
Date:   Tue Oct 14 14:37:05 2014 -0700

    Update README.md

M	README.md

commit fdf7a922e0384664e3d50aae3ec46644e027d58a
Author: Alex Eagle <alexeagle@google.com>
Date:   Tue Oct 14 14:34:30 2014 -0700

    Fix missing directory in docgen

M	docgen/src/main/java/com/google/errorprone/DocGen.java

commit d75160dd4b0f8f4cd2b8086429019c0dcc8ff386
Author: Alex Eagle <alexeagle@google.com>
Date:   Tue Oct 14 13:52:53 2014 -0700

    Fix the docgen Guava versions.

M	.gitignore
M	.idea/vcs.xml
M	core/pom.xml
M	docgen/pom.xml
M	docgen/src/main/java/com/google/errorprone/BugPatternFileGenerator.java
M	docgen/src/main/java/com/google/errorprone/BugPatternIndexYamlWriter.java
M	docgen/src/main/java/com/google/errorprone/DocGen.java
M	docgen/src/test/java/com/google/errorprone/BugPatternIndexYamlWriterTest.java
M	idea-plugin/idea-plugin.iml

commit 0a2a14ec9772ddcb54fa369cc8da65a2a2376677
Author: Alex Eagle <alexeagle@google.com>
Date:   Tue Oct 14 13:47:47 2014 -0700

    Refactor DocGen to multiple classes and add basic tests

A	docgen/src/main/java/com/google/errorprone/BugPatternFileGenerator.java
A	docgen/src/main/java/com/google/errorprone/BugPatternIndexYamlWriter.java
A	docgen/src/test/java/com/google/errorprone/BugPatternFileGeneratorTest.java
A	docgen/src/test/java/com/google/errorprone/BugPatternIndexYamlWriterTest.java
A	docgen/src/test/resources/com/google/errorprone/DeadException.md

commit 7b07f9dfa48e5dabf863e0a3455b1e461dcfd8e3
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon Oct 13 23:46:58 2014 -0700

    Revert "Merge branch 'alexeagle'"
    
    This reverts commit 8b8386eed6429cb03d71d670baf546412bfdc808, reversing
    changes made to 71c8962d0af6562de730d5e96f4e88d4959f860e.

D	Gemfile
D	_data/bugpatterns.yaml
D	_layouts/bugpattern.html
D	_layouts/master.html
D	bugpattern/ArrayEquals.md
D	bugpattern/ArrayHashCode.md
D	bugpattern/ArrayToString.md
D	bugpattern/ArrayToStringCompoundAssignment.md
D	bugpattern/ArrayToStringConcatenation.md
D	bugpattern/ArraysAsListPrimitiveArray.md
D	bugpattern/AssistedInjectAndInjectOnConstructors.md
D	bugpattern/AssistedInjectAndInjectOnSameConstructor.md
D	bugpattern/BadShiftAmount.md
D	bugpattern/ChainingConstructorIgnoresParameter.md
D	bugpattern/CheckReturnValue.md
D	bugpattern/ClassCanBeStatic.md
D	bugpattern/CollectionIncompatibleType.md
D	bugpattern/ComparisonOutOfRange.md
D	bugpattern/CovariantEquals.md
D	bugpattern/DeadException.md
D	bugpattern/DepAnn.md
D	bugpattern/DivZero.md
D	bugpattern/ElementsCountedInLoop.md
D	bugpattern/EmptyIf.md
D	bugpattern/EqualsNaN.md
D	bugpattern/FallthroughSuppression.md
D	bugpattern/Finally.md
D	bugpattern/GuardedBy.md
D	bugpattern/GuardedByChecker.md
D	bugpattern/GuardedByValidator.md
D	bugpattern/GuiceAssistedInjectScoping.md
D	bugpattern/GuiceAssistedParameters.md
D	bugpattern/GuiceInjectOnFinalField.md
D	bugpattern/InjectInvalidTargetingOnScopingAnnotation.md
D	bugpattern/InjectMoreThanOneQualifier.md
D	bugpattern/InjectMoreThanOneScopeAnnotationOnClass.md
D	bugpattern/InjectScopeAnnotationOnInterfaceOrAbstractClass.md
D	bugpattern/InjectScopeOrQualifierAnnotationRetention.md
D	bugpattern/InjectedConstructorAnnotations.md
D	bugpattern/InvalidPatternSyntax.md
D	bugpattern/JUnit3TestNotRun.md
D	bugpattern/JUnit4SetUpNotRun.md
D	bugpattern/JUnit4TearDownNotRun.md
D	bugpattern/JUnit4TestNotRun.md
D	bugpattern/JUnitAmbiguousTestClass.md
D	bugpattern/JavaxInjectOnAbstractMethod.md
D	bugpattern/JavaxInjectOnFinalField.md
D	bugpattern/LockMethodChecker.md
D	bugpattern/LongLiteralLowerCaseSuffix.md
D	bugpattern/MalformedFormatString.md
D	bugpattern/MissingCasesInEnumSwitch.md
D	bugpattern/MisusedFormattingLogger.md
D	bugpattern/ModifyingCollectionWithItself.md
D	bugpattern/MoreThanOneInjectableConstructor.md
D	bugpattern/NonAtomicVolatileUpdate.md
D	bugpattern/NonRuntimeAnnotation.md
D	bugpattern/NumericEquality.md
D	bugpattern/OrderingFrom.md
D	bugpattern/OverlappingQualifierAndScopeAnnotation.md
D	bugpattern/Overrides.md
D	bugpattern/OverridesGuiceInjectableMethod.md
D	bugpattern/OverridesJavaxInjectableMethod.md
D	bugpattern/ParameterPackage.md
D	bugpattern/PreconditionsCheckNotNull.md
D	bugpattern/PreconditionsCheckNotNullPrimitive.md
D	bugpattern/PreconditionsErrorMessageEagerEvaluation.md
D	bugpattern/PreconditionsInvalidPlaceholder.md
D	bugpattern/PrimitiveArrayPassedToVarargsMethod.md
D	bugpattern/ProtoFieldNullComparison.md
D	bugpattern/ProtoStringFieldReferenceEquality.md
D	bugpattern/ReturnValueIgnored.md
D	bugpattern/SelfAssignment.md
D	bugpattern/SelfEquality.md
D	bugpattern/SelfEquals.md
D	bugpattern/StaticAccessedFromInstance.md
D	bugpattern/StringBuilderInitWithChar.md
D	bugpattern/StringEquality.md
D	bugpattern/SuppressWarningsDeprecated.md
D	bugpattern/SynchronizeOnNonFinalField.md
D	bugpattern/TryFailThrowable.md
D	bugpattern/UnlockMethod.md
D	bugpattern/WaitNotInLoop.md
D	bugpatterns.md
D	images/bkg.png
D	images/blacktocat.png
D	images/checker.png
D	index.md
D	installation.md
D	javascripts/main.js
D	javascripts/scale.fix.js
D	params.json
D	stylesheets/pygment_trac.css
D	stylesheets/styles.css

commit 8b8386eed6429cb03d71d670baf546412bfdc808
Merge: 71c8962 8b88114
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon Oct 13 23:25:29 2014 -0700

    Merge branch 'alexeagle'

commit 8b88114fd3f18cb338224ff66f9387b859191a5b
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon Oct 13 23:24:59 2014 -0700

    Final commit before pushing to live site for a demo.

M	_layouts/bugpattern.html
M	_layouts/master.html
M	bugpattern/CheckReturnValue.md
M	bugpattern/DeadException.md
M	bugpattern/DepAnn.md
M	bugpattern/DivZero.md
M	bugpattern/EmptyIf.md
M	bugpattern/Finally.md
M	bugpattern/LockMethodChecker.md
M	bugpattern/Overrides.md
M	bugpattern/ReturnValueIgnored.md
M	bugpattern/StaticAccessedFromInstance.md
M	bugpattern/UnlockMethod.md
D	index.html
M	index.md
D	stylesheets/stylesheet.css

commit 655fb3317acda2587bb5b5ab2e7c98ec56aa55fc
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon Oct 13 23:23:18 2014 -0700

    Fill out the top-level nav and fix some doc bugs.

A	installation.md

commit b997ba5e5a141eb087ac84f6770f24669b147369
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon Oct 13 22:50:59 2014 -0700

    first working export of a markdown-based documentation site

A	Gemfile
A	_data/bugpatterns.yaml
A	_layouts/bugpattern.html
A	_layouts/master.html
A	bugpattern/ArrayEquals.md
A	bugpattern/ArrayHashCode.md
A	bugpattern/ArrayToString.md
A	bugpattern/ArrayToStringCompoundAssignment.md
A	bugpattern/ArrayToStringConcatenation.md
A	bugpattern/ArraysAsListPrimitiveArray.md
A	bugpattern/AssistedInjectAndInjectOnConstructors.md
A	bugpattern/AssistedInjectAndInjectOnSameConstructor.md
A	bugpattern/BadShiftAmount.md
A	bugpattern/ChainingConstructorIgnoresParameter.md
A	bugpattern/CheckReturnValue.md
A	bugpattern/ClassCanBeStatic.md
A	bugpattern/CollectionIncompatibleType.md
A	bugpattern/ComparisonOutOfRange.md
A	bugpattern/CovariantEquals.md
A	bugpattern/DeadException.md
A	bugpattern/DepAnn.md
A	bugpattern/DivZero.md
A	bugpattern/ElementsCountedInLoop.md
A	bugpattern/EmptyIf.md
A	bugpattern/EqualsNaN.md
A	bugpattern/FallthroughSuppression.md
A	bugpattern/Finally.md
A	bugpattern/GuardedBy.md
A	bugpattern/GuardedByChecker.md
A	bugpattern/GuardedByValidator.md
A	bugpattern/GuiceAssistedInjectScoping.md
A	bugpattern/GuiceAssistedParameters.md
A	bugpattern/GuiceInjectOnFinalField.md
A	bugpattern/InjectInvalidTargetingOnScopingAnnotation.md
A	bugpattern/InjectMoreThanOneQualifier.md
A	bugpattern/InjectMoreThanOneScopeAnnotationOnClass.md
A	bugpattern/InjectScopeAnnotationOnInterfaceOrAbstractClass.md
A	bugpattern/InjectScopeOrQualifierAnnotationRetention.md
A	bugpattern/InjectedConstructorAnnotations.md
A	bugpattern/InvalidPatternSyntax.md
A	bugpattern/JUnit3TestNotRun.md
A	bugpattern/JUnit4SetUpNotRun.md
A	bugpattern/JUnit4TearDownNotRun.md
A	bugpattern/JUnit4TestNotRun.md
A	bugpattern/JUnitAmbiguousTestClass.md
A	bugpattern/JavaxInjectOnAbstractMethod.md
A	bugpattern/JavaxInjectOnFinalField.md
A	bugpattern/LockMethodChecker.md
A	bugpattern/LongLiteralLowerCaseSuffix.md
A	bugpattern/MalformedFormatString.md
A	bugpattern/MissingCasesInEnumSwitch.md
A	bugpattern/MisusedFormattingLogger.md
A	bugpattern/ModifyingCollectionWithItself.md
A	bugpattern/MoreThanOneInjectableConstructor.md
A	bugpattern/NonAtomicVolatileUpdate.md
A	bugpattern/NonRuntimeAnnotation.md
A	bugpattern/NumericEquality.md
A	bugpattern/OrderingFrom.md
A	bugpattern/OverlappingQualifierAndScopeAnnotation.md
A	bugpattern/Overrides.md
A	bugpattern/OverridesGuiceInjectableMethod.md
A	bugpattern/OverridesJavaxInjectableMethod.md
A	bugpattern/ParameterPackage.md
A	bugpattern/PreconditionsCheckNotNull.md
A	bugpattern/PreconditionsCheckNotNullPrimitive.md
A	bugpattern/PreconditionsErrorMessageEagerEvaluation.md
A	bugpattern/PreconditionsInvalidPlaceholder.md
A	bugpattern/PrimitiveArrayPassedToVarargsMethod.md
A	bugpattern/ProtoFieldNullComparison.md
A	bugpattern/ProtoStringFieldReferenceEquality.md
A	bugpattern/ReturnValueIgnored.md
A	bugpattern/SelfAssignment.md
A	bugpattern/SelfEquality.md
A	bugpattern/SelfEquals.md
A	bugpattern/StaticAccessedFromInstance.md
A	bugpattern/StringBuilderInitWithChar.md
A	bugpattern/StringEquality.md
A	bugpattern/SuppressWarningsDeprecated.md
A	bugpattern/SynchronizeOnNonFinalField.md
A	bugpattern/TryFailThrowable.md
A	bugpattern/UnlockMethod.md
A	bugpattern/WaitNotInLoop.md
A	bugpatterns.md
A	index.md
M	stylesheets/stylesheet.css

commit 78fe5ddcad626860beb8f7ea3202270f0cceb8df
Author: Alex Eagle <eagle@post.harvard.edu>
Date:   Mon Oct 13 15:25:11 2014 -0700

    Create gh-pages branch via GitHub

A	images/checker.png
M	index.html
A	javascripts/scale.fix.js
M	stylesheets/pygment_trac.css
A	stylesheets/styles.css

commit 29026150a2f71bff04b9441906d68aa44958cfad
Author: Alex Eagle <eagle@post.harvard.edu>
Date:   Mon Oct 13 13:48:24 2014 -0700

    Create gh-pages branch via GitHub

A	images/bkg.png
A	images/blacktocat.png
A	index.html
A	javascripts/main.js
A	params.json
A	stylesheets/pygment_trac.css
A	stylesheets/stylesheet.css

commit 71c8962d0af6562de730d5e96f4e88d4959f860e
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Mon Oct 13 13:22:30 2014 -0700

    drop jdk6 from travis build

M	.travis.yml

commit 497258ee61d4488ea5973d2a12b1b762e5aff340
Author: cushon <cushon@google.com>
Date:   Fri Oct 10 14:53:49 2014 -0700

    Ignore deprecated JUnit 4.11 methods in tests.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=77457596

M	core/src/test/resources/com/google/errorprone/bugpatterns/TryFailThrowableNegativeCases.java
M	core/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java

commit 9557dcba31591a28c072df808f04616ddf5bfdc9
Author: supertri <supertri@google.com>
Date:   Thu Oct 9 09:34:07 2014 -0700

    Handle additional exception types in format strings.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=77352187

M	core/src/main/java/com/google/errorprone/bugpatterns/MisusedFormattingLogger.java

commit 2b81289bf6c2535a392710abec12b29d2e001a7b
Author: cushon <cushon@google.com>
Date:   Wed Oct 8 17:35:42 2014 -0700

    DepAnn: assume that annotations exist.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=77307791

M	core/src/main/java/com/google/errorprone/bugpatterns/DepAnn.java

commit de518fc7cde1c60ecc7781683570bc8e9aba58d2
Author: cushon <cushon@google.com>
Date:   Wed Oct 8 12:13:34 2014 -0700

    Use javac8's Main.Result enum instead of int status codes.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=77283109

M	ant/src/main/java/com/google/errorprone/ErrorProneAntCompilerAdapter.java
M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	core/src/test/java/com/google/errorprone/CommandLineFlagDisableTest.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/EndPosTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneTestCompiler.java
M	core/src/test/java/com/google/errorprone/matchers/DescendantOfTransitiveTest.java
M	core/src/test/java/com/google/errorprone/suppress/CustomSuppressionTest.java
M	core/src/test/java/com/google/errorprone/suppress/SuppressWarningsTest.java
M	core/src/test/java/com/google/errorprone/suppress/UnsuppressibleTest.java

commit 20a7f59580282cd46f46aaa4366dc6cd3596e6f1
Author: cushon <cushon@google.com>
Date:   Tue Oct 7 14:53:51 2014 -0700

    Remove ErrorProneEndPosMap and use the new javac8 EndPosTable directly.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=77212442

D	core/src/main/java/com/google/errorprone/EndPosMap8.java
A	core/src/main/java/com/google/errorprone/EndPosTableUtil.java
M	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
D	core/src/main/java/com/google/errorprone/ErrorProneEndPosMap.java
M	core/src/main/java/com/google/errorprone/JDKCompatible.java
M	core/src/main/java/com/google/errorprone/JavacErrorDescriptionListener.java
M	core/src/main/java/com/google/errorprone/WrappedTreeMap.java
M	core/src/main/java/com/google/errorprone/fixes/AppliedFix.java
M	core/src/main/java/com/google/errorprone/fixes/Fix.java
M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java
M	core/src/test/java/com/google/errorprone/fixes/AppliedFixTest.java

commit 349e87bbe351c62ebd3e0b2a32e310c7d7b4438f
Author: cushon <cushon@google.com>
Date:   Tue Oct 7 13:43:37 2014 -0700

    Remove more of JDKCompatible.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=77206048

M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	core/src/main/java/com/google/errorprone/JDKCompatible.java
D	core/src/main/java/com/google/errorprone/JDKCompatibleShim.java
D	core/src/main/java/com/google/errorprone/JDKShim.java
M	core/src/main/java/com/google/errorprone/WrappedTreeMap.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByUtils.java
D	core/src/main/java/com/google/errorprone/fixes/AbstractAdjustedPosition.java
D	core/src/main/java/com/google/errorprone/fixes/AbstractIndexedPosition.java
A	core/src/main/java/com/google/errorprone/fixes/AdjustedPosition.java
D	core/src/main/java/com/google/errorprone/fixes/AdjustedPosition8.java
A	core/src/main/java/com/google/errorprone/fixes/IndexedPosition.java
D	core/src/main/java/com/google/errorprone/fixes/IndexedPosition8.java
M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java

commit ade02525490603eb5b9131fdceb4acfc4771c1b8
Author: cushon <cushon@google.com>
Date:   Sun Oct 5 20:20:51 2014 -0700

    Prepare for javac8 u20 update.
    
    u20 changes how end positions are stored, which breaks error-prone.
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=77066214

M	core/pom.xml
M	core/src/main/java/com/google/errorprone/EndPosMap8.java
M	core/src/main/java/com/google/errorprone/JDKCompatible.java
M	core/src/main/java/com/google/errorprone/JDKCompatibleShim.java
M	core/src/main/java/com/google/errorprone/JDKShim.java
M	core/src/main/java/com/google/errorprone/WrappedTreeMap.java
M	pom.xml

commit 9b9458aefa531dba8b9733708a63c2223c0f214d
Author: cushon <cushon@google.com>
Date:   Fri Oct 3 19:06:41 2014 -0700

    Add Java 7 and 8-specific matchers.
    
    - AnnotatedType
    - IntersectionType
    - LambdaExpression
    - MemberReference
    - UnionType
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=77001972

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java

commit ca65f87244b176e282443e3927bafac76004a20c
Author: cushon <cushon@google.com>
Date:   Fri Oct 3 17:14:13 2014 -0700

    Drop javac7 support: remove jdk7-compatibility shims, and merge jdk8
    implementations into core.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=76996707

M	core/pom.xml
A	core/src/main/java/com/google/errorprone/EndPosMap8.java
A	core/src/main/java/com/google/errorprone/ErrorProneEndPosMap.java
A	core/src/main/java/com/google/errorprone/JDKCompatibleShim.java
A	core/src/main/java/com/google/errorprone/JDKShim.java
A	core/src/main/java/com/google/errorprone/dataflow/DataFlow.java
A	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/AbstractNullnessPropagationTransfer.java
A	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationStore.java
A	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
A	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessValue.java
A	core/src/main/java/com/google/errorprone/fixes/AbstractAdjustedPosition.java
A	core/src/main/java/com/google/errorprone/fixes/AbstractIndexedPosition.java
A	core/src/main/java/com/google/errorprone/fixes/AdjustedPosition8.java
A	core/src/main/java/com/google/errorprone/fixes/IndexedPosition8.java
A	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationStoreTest.java
A	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java
A	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessValueTest.java
A	core/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases1.java
A	core/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java
A	core/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases3.java
A	core/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases4.java
A	core/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases5.java
A	core/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases6.java
A	core/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases7.java
D	jdk7/pom.xml
D	jdk7/src/main/java/com/google/errorprone/EndPosMap7.java
D	jdk7/src/main/java/com/google/errorprone/JDKShim.java
D	jdk7/src/main/java/com/google/errorprone/fixes/AdjustedPosition7.java
D	jdk7/src/main/java/com/google/errorprone/fixes/IndexedPosition7.java
D	jdk8/pom.xml
D	jdk8/src/main/java/com/google/errorprone/EndPosMap8.java
D	jdk8/src/main/java/com/google/errorprone/JDKShim.java
D	jdk8/src/main/java/com/google/errorprone/dataflow/DataFlow.java
D	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/AbstractNullnessPropagationTransfer.java
D	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationStore.java
D	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
D	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessValue.java
D	jdk8/src/main/java/com/google/errorprone/fixes/AdjustedPosition8.java
D	jdk8/src/main/java/com/google/errorprone/fixes/IndexedPosition8.java
D	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationStoreTest.java
D	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java
D	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessValueTest.java
D	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases1.java
D	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java
D	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases3.java
D	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases4.java
D	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases5.java
D	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases6.java
D	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases7.java
D	jdkcompat/pom.xml
D	jdkcompat/src/main/java/com/google/errorprone/ErrorProneEndPosMap.java
D	jdkcompat/src/main/java/com/google/errorprone/JDKCompatibleShim.java
D	jdkcompat/src/main/java/com/google/errorprone/fixes/AbstractAdjustedPosition.java
D	jdkcompat/src/main/java/com/google/errorprone/fixes/AbstractIndexedPosition.java
M	pom.xml

commit 91f90cd07536ca56af799db2e32a6548ed9b319b
Author: eaftan <eaftan@google.com>
Date:   Fri Oct 3 15:30:58 2014 -0700

    error-prone can now output multiple suggested fixes.  Also remove Fix.NO_FIX
    since that has been effectively replaced by an empty list of fixes.
    
    Multiple fixes are now presented in the diagnostic message when used as a
    compiler, joined by 'or'.  They look like:
    StringEqualityPositiveCases.java:28: error: [StringEquality] String comparison using reference equality instead of value equality
    retVal = (x == y);
    ^
    (see http://code.google.com/p/error-prone/wiki/StringEquality)
    Did you mean 'retVal = (Objects.equals(x, y));' or 'retVal = (x.equals(y));'?
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=76989307

M	core/src/main/java/com/google/errorprone/JavacErrorDescriptionListener.java
M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractJUnit4InitMethodNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ComparisonOutOfRange.java
M	core/src/main/java/com/google/errorprone/bugpatterns/DivZero.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ElementsCountedInLoop.java
M	core/src/main/java/com/google/errorprone/bugpatterns/Finally.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidPatternSyntax.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnitAmbiguousTestClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MalformedFormatString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MisusedFormattingLogger.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NonAtomicVolatileUpdate.java
M	core/src/main/java/com/google/errorprone/bugpatterns/Overrides.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsExpensiveString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PrimitiveArrayPassedToVarargsMethod.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StaticAccessedFromInstance.java
M	core/src/main/java/com/google/errorprone/bugpatterns/WaitNotInLoop.java
M	core/src/main/java/com/google/errorprone/bugpatterns/WrongParameterPackage.java
A	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedBy.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByValidator.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/SynchronizeOnNonFinalField.java
M	core/src/main/java/com/google/errorprone/fixes/Fix.java
D	core/src/main/java/com/google/errorprone/fixes/NoFix.java
M	core/src/main/java/com/google/errorprone/matchers/Description.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelperTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
M	core/src/test/java/com/google/errorprone/matchers/DescriptionTest.java
M	core/src/test/java/com/google/errorprone/suppress/CustomSuppressionTest.java
M	core/src/test/java/com/google/errorprone/suppress/UnsuppressibleTest.java

commit 0068375329f83fca716f209bccd11a6ae3aa3151
Author: cushon <cushon@google.com>
Date:   Wed Oct 1 15:22:39 2014 -0700

    Rename GuardedBy to GuardedByChecker, to avoid using the same simple name
    as the annotation.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=76825033

D	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedBy.java
A	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByChecker.java
A	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByCheckerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByLockMethodTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzerTest.java
M	core/src/test/java/com/google/errorprone/suppress/CustomSuppressionTest.java

commit b3b122fa9a4dc605f64016e65cc71c65e3f0560b
Author: eaftan <eaftan@google.com>
Date:   Tue Sep 30 17:23:22 2014 -0700

    Make CompilationTestHelper.assertCompileSucceeds fail if any warnings are
    produced.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=76744268

M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayHashCodeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ChainingConstructorIgnoresParameterTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByTest.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayHashCodeNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayHashCodeNegativeCases2.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceOverridesGuiceInjectableMethodNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/MalformedFormatStringNegativeCases.java

commit e0dff3a1ca78f2830b807e1019bd6556323192b1
Author: eaftan <eaftan@google.com>
Date:   Tue Sep 30 16:03:16 2014 -0700

    Synchronize the set of checks run in open-source error-prone with the set
    from internal error-prone.
    
    Sets maturity = MATURE for all checks that are on inside Google and
    maturity = EXPERIMENTAL for checks that are not.  Sets severity = ERROR
    if it is on as a compiler error and severity = WARNING it is only on at
    code review time.
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=76736418

M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToStringCompoundAssignment.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToStringConcatenation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArraysAsListPrimitiveArray.java
M	core/src/main/java/com/google/errorprone/bugpatterns/DeadException.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ElementsCountedInLoop.java
M	core/src/main/java/com/google/errorprone/bugpatterns/EmptyIfStatement.java
M	core/src/main/java/com/google/errorprone/bugpatterns/FallThroughSuppression.java
M	core/src/main/java/com/google/errorprone/bugpatterns/Finally.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidPatternSyntax.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4SetUpNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TearDownNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffix.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MisusedFormattingLogger.java
M	core/src/main/java/com/google/errorprone/bugpatterns/OrderingFrom.java
M	core/src/main/java/com/google/errorprone/bugpatterns/Overrides.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitive.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsInvalidPlaceholder.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PrimitiveArrayPassedToVarargsMethod.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ProtoStringFieldReferenceEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StaticAccessedFromInstance.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StringEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/WaitNotInLoop.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/SynchronizeOnNonFinalField.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneJavaCompilerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/FinallyTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MisusedFormattingLoggerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsInvalidPlaceholderTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PrimitiveArrayPassedToVarargsMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/StaticAccessedFromInstanceTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/StringEqualityTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/WaitNotInLoopTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/SynchronizeOnNonFinalFieldTest.java

commit a81ff1d2dc6ffc1347e6b5fc156f0092488908a8
Author: cushon <cushon@google.com>
Date:   Mon Sep 29 13:08:07 2014 -0700

    Improve error message for Incompatible/RequiredModifiers
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=76623087

M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java

commit 8ed3567d8048ff92bfcd12ee81052e7ef3f9b4e9
Author: eaftan <eaftan@google.com>
Date:   Mon Sep 29 12:41:34 2014 -0700

    Update IncrementDecrementVolatile check to account for non-integer types.
    
    Renamed it to NonAtomicVolatileUpdate, updated the wiki text, and added test
    cases for updates to Strings.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=76620892

D	core/src/main/java/com/google/errorprone/bugpatterns/IncrementDecrementVolatile.java
A	core/src/main/java/com/google/errorprone/bugpatterns/NonAtomicVolatileUpdate.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/IncrementDecrementVolatileTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/NonAtomicVolatileUpdateTest.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/IncrementDecrementVolatileNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/IncrementDecrementVolatilePositiveCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/NonAtomicVolatileUpdateNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/NonAtomicVolatileUpdatePositiveCases.java

commit 46268ab100f33869bf8ff0c77b269a201543b6be
Author: cushon <cushon@google.com>
Date:   Mon Sep 29 12:21:42 2014 -0700

    Improve error message for Finally.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=76619269

M	core/src/main/java/com/google/errorprone/bugpatterns/Finally.java

commit 1621b33b32ebbb62a23fa509e45c87288ae139ff
Author: mwacker <mwacker@google.com>
Date:   Thu Sep 25 22:53:05 2014 -0700

    Only apply @RunWith check to top-level classes
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=76405736

M	core/src/main/java/com/google/errorprone/matchers/JUnitMatchers.java

commit c0aedae5f6eded0db6fa7416a7f4cc996a65d0c7
Author: cushon <cushon@google.com>
Date:   Thu Sep 25 15:07:45 2014 -0700

    Add tests to sanity-check the examples in the documentation.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=76375406

M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByTest.java

commit a9d7be179119c21df8ee0601af5bd73e7a3de0f5
Author: cushon <cushon@google.com>
Date:   Mon Sep 22 20:37:44 2014 -0700

    Fix bugs in expression normalization.
    
    - do a better job of canonicalizing select expressions into: simple this /
    qualified this / static
    - fix an NPE in expression binding
    - fix a crash involving guard expressions referencing locks that aren't visible
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=76131882

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinder.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByExpression.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedBySymbolResolver.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinderTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByValidatorTest.java

commit 257f6eb163748298a175e1bc87a2be84f4107b4f
Author: konne <konne@google.com>
Date:   Thu Sep 18 14:35:30 2014 -0700

    Fix bug where expressionDataflow would throw an exception for expressions in a method that doesn't have a body, e.g. Map.Entry in:
    
    abstract Set<Map.Entry<K, V>> entries();
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75844945

M	jdk8/src/main/java/com/google/errorprone/dataflow/DataFlow.java

commit b6811615b3adc3b3f3bcdd0356b2a80663c8fa05
Author: olegv <olegv@google.com>
Date:   Thu Sep 18 13:12:51 2014 -0700

    Fix ASTHelpers#getType for nested types.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75836433

M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/test/java/com/google/errorprone/util/ASTHelpersTest.java

commit 2127562621500919dcbf64f53a6ab48641e542b2
Author: cushon <cushon@google.com>
Date:   Thu Sep 18 12:55:06 2014 -0700

    Add simple checks for @LockMethod, @UnlockMethod usage.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75835126

A	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/AbstractLockMethodChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzer.java
A	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/LockMethodChecker.java
A	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/UnlockMethodChecker.java
A	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/LockMethodCheckerTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/UnlockMethodCheckerTest.java

commit c99808aace1d53277fcdba96ab38335725e59ce3
Author: cushon <cushon@google.com>
Date:   Thu Sep 18 12:39:07 2014 -0700

    Suppression logic shouldn't assume check names are unique.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75833886

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java

commit acc5866b8becdb3de270873894da6f87f0b66667
Author: cushon <cushon@google.com>
Date:   Wed Sep 17 18:09:59 2014 -0700

    Support @UnlockMethod in GuardedBy checker.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75771113

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinder.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByUtils.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzer.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinderTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByLockMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzerTest.java

commit 23c81a8dd053e38691e57915da97f90ee827df0c
Author: konne <konne@google.com>
Date:   Tue Sep 16 16:04:37 2014 -0700

    Added caching to dataflow
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75667075

M	jdk8/src/main/java/com/google/errorprone/dataflow/DataFlow.java

commit d1cbff1963738ad156ac0050522b87a60bbcf9d5
Author: konne <konne@google.com>
Date:   Tue Sep 16 12:35:20 2014 -0700

    Extend StringEquality checker to use the nullness analysis when
    creating suggested fixes.  The fixes now use .equals() if we can
    prove that one of the operands is non-null.
    
    Also fixed a bug in the checker, namely that
    
    x == ""
    
    was turned into
    
    x.isEmpty()
    
    And extend the nullness analysis to consider string concatenation.
    
    (String) a + (String) b
    
    is always non-null, even if a and b are null.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75649171

M	core/src/main/java/com/google/errorprone/bugpatterns/StringEquality.java
M	core/src/test/java/com/google/errorprone/bugpatterns/StringEqualityTest.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/StringEqualityNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/StringEqualityPositiveCases.java
M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases1.java

commit c96d88d4fc44ae41a5055f91b6bff77caae7f25a
Author: cpovirk <cpovirk@google.com>
Date:   Tue Sep 16 10:02:15 2014 -0700

    Recognize an individual method known to return non-null values in a class where not all methods are that way.
    I chose Files.toString, which I happen to need for my current cleanup.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75635917

M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java
A	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases7.java

commit 8675690ad94c29fb2c9db084d5f595ce8a36fb5d
Author: cpovirk <cpovirk@google.com>
Date:   Tue Sep 16 09:49:58 2014 -0700

    Handle methods whose return value indicates whether a parameter is provably non-null.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75634831

M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/AbstractNullnessPropagationTransfer.java
M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases6.java

commit e41a4efd305c7aa698a5cd6705af7f570d5ddbfb
Author: cpovirk <cpovirk@google.com>
Date:   Tue Sep 16 05:57:46 2014 -0700

    Handle checkNotNull and assertNotNull.
    This means not only concluding that checkNotNull must return non-null but also that it (and assertNotNull) prove their *parameters* to be non-null.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75621576

M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java

commit 508e176b7158e61e95ec60bbe4efdaa1f91f4295
Author: cushon <cushon@google.com>
Date:   Mon Sep 15 17:54:49 2014 -0700

    Use AutoValue for GuardedByExpressions.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75589167

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByExpression.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzer.java

commit df8474602899eb44aaf6ccbf9be4370580a17f7d
Author: cushon <cushon@google.com>
Date:   Mon Sep 15 17:49:14 2014 -0700

    Fix all of the unchecked/rawtypes warnings.
    
    Also, we can use @SafeVarargs now that we're no longer tied to
    JDK6-compatibility.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75588801

M	core/src/main/java/com/google/errorprone/ErrorProneJavaCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/VisitorState.java
M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractJUnit4InitMethodNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractReturnValueIgnored.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayHashCode.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToStringConcatenation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BadShiftAmount.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ClassCanBeStatic.java
M	core/src/main/java/com/google/errorprone/bugpatterns/CollectionIncompatibleType.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ComparisonOutOfRange.java
M	core/src/main/java/com/google/errorprone/bugpatterns/CovariantEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/DeadException.java
M	core/src/main/java/com/google/errorprone/bugpatterns/DivZero.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceAssistedInjectScoping.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceAssistedParameters.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceOverridesGuiceInjectableMethod.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceOverridesJavaxInjectableMethod.java
M	core/src/main/java/com/google/errorprone/bugpatterns/IncrementDecrementVolatile.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnConstructors.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnSameConstructor.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectInvalidTargetingOnScopingAnnotation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectJavaxInjectOnAbstractMethod.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectJavaxInjectOnFinalField.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectMoreThanOneInjectableConstructor.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectMoreThanOneQualifier.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectMoreThanOneScopeAnnotationOnClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectOverlappingQualifierAndScopeAnnotation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectScopeAnnotationOnInterfaceOrAbstractClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectScopeOrQualifierAnnotationRetention.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidPatternSyntax.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit3TestNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4SetUpNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TearDownNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TestNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnitAmbiguousTestClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MisusedFormattingLogger.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ModifyingCollectionWithItself.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NumericEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitive.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsInvalidPlaceholder.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ReturnValueIgnored.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StaticAccessedFromInstance.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StringEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/WaitNotInLoop.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedBySymbolResolver.java
M	core/src/main/java/com/google/errorprone/matchers/Enclosing.java
M	core/src/main/java/com/google/errorprone/matchers/JUnitMatchers.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/matchers/ParentNode.java
M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneJavaCompilerTest.java
M	core/src/test/java/com/google/errorprone/matchers/AnnotationTest.java
M	core/src/test/java/com/google/errorprone/matchers/InstanceMethodTest.java
M	core/src/test/java/com/google/errorprone/suppress/SuppressWarningsTest.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/FallthroughSuppressionNegativeCases.java
M	jdk8/src/main/java/com/google/errorprone/EndPosMap8.java
M	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java

commit c1c8be9be346df097e12ce8f4b5ca4564fe56d11
Author: cpovirk <cpovirk@google.com>
Date:   Mon Sep 15 16:43:31 2014 -0700

    Handle widening conversions, and more explicitly test narrowing conversions.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75583812

M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java

commit 7fb61b354b1d5d251504e3e3ee9a95dcbb8bc4ef
Author: cpovirk <cpovirk@google.com>
Date:   Mon Sep 15 16:33:22 2014 -0700

    Add summary methods for bitwise and numerical operations.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75583057

M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/AbstractNullnessPropagationTransfer.java
M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java
A	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases6.java

commit c4a36bf12a447624e3561030561b62202fb4e23d
Author: cpovirk <cpovirk@google.com>
Date:   Mon Sep 15 16:03:17 2014 -0700

    Pull the boilerplate into a superclass.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75580690

A	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/AbstractNullnessPropagationTransfer.java
M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationStore.java
M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java

commit 593467ecfd2b0d0c8a221f944ecb19d25149c9a4
Author: cushon <cushon@google.com>
Date:   Mon Sep 15 10:14:48 2014 -0700

    Temporarily ignore ReadWriteLocks.
    
    Suppress the analysis for ReadWriteLocks until we can detect copies of the read
    or write lock, and there are annotations to specify read/write policies for
    guarded members.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75550236

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedBy.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzer.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzerTest.java

commit dae91422f106e4297112f6d5f0e639cab6d509e9
Author: cushon <cushon@google.com>
Date:   Mon Sep 15 10:12:41 2014 -0700

    Add first usage of AutoValue.
    
    So far only Replacement has been converted.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75550071

M	core/pom.xml
M	core/src/main/java/com/google/errorprone/fixes/Replacement.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/ErrorProneTestCompiler.java

commit 36890f01e3ef9833c8791f124de8ea3f595eec96
Author: cushon <cushon@google.com>
Date:   Mon Sep 15 09:13:08 2014 -0700

    Ignore try with resources statements until there's a canonical way to use them
    with locks.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75545086

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzer.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByTest.java

commit f8236b5329788fd5d8d7cb96571d5a18bd926735
Author: cushon <cushon@google.com>
Date:   Sun Sep 14 16:39:36 2014 -0700

    Add @LockMethod, @UnlockMethod annotations.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75507096

A	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/annotations/LockMethod.java
A	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/annotations/UnlockMethod.java

commit 3dcd01d99f05c40ffc5999bef4f63603e52d4531
Author: cushon <cushon@google.com>
Date:   Sat Sep 13 13:28:26 2014 -0700

    Refactor Replacement API before switching it to use @AutoValue.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75467202

M	core/src/main/java/com/google/errorprone/fixes/AppliedFix.java
M	core/src/main/java/com/google/errorprone/fixes/Replacement.java
M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java

commit 53969f2f893737d8b0b5fa39482566f72024d514
Author: cushon <cushon@google.com>
Date:   Fri Sep 12 16:30:44 2014 -0700

    Allow custom sets of BugCheckers in ErrorProneJavaCompiler
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75422141

M	core/src/main/java/com/google/errorprone/ErrorProneJavaCompiler.java
M	core/src/test/java/com/google/errorprone/ErrorProneJavaCompilerTest.java

commit 8d643d1a2b2b53bbcb5d5e9659ac30e13819d97d
Author: cushon <cushon@google.com>
Date:   Fri Sep 12 15:56:22 2014 -0700

    Use PathFileManager and Jimfs instead of compile-testing's InMemoryFileManager.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75419526

M	core/pom.xml
M	core/src/test/java/com/google/errorprone/CommandLineFlagDisableTest.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelperTest.java
M	core/src/test/java/com/google/errorprone/EndPosTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
A	core/src/test/java/com/google/errorprone/ErrorProneInMemoryFileManager.java
M	core/src/test/java/com/google/errorprone/ErrorProneJavaCompilerTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneTestCompiler.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayHashCodeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayToStringCompoundAssignmentTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayToStringConcatenationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayToStringTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/BadShiftAmountTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ChainingConstructorIgnoresParameterTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CheckReturnValueTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ClassCanBeStaticTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CollectionIncompatibleTypeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ComparisonOutOfRangeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CovariantEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DeadExceptionTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DepAnnTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DivZeroTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ElementsCountedInLoopTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/EmptyIfStatementTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/EqualsNaNTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/FinallyTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceAssistedInjectScopingTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceAssistedParametersTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceInjectOnFinalFieldTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceOverridesGuiceInjectableMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceOverridesJavaxInjectableMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/IncrementDecrementVolatileTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnConstructorsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnSameConstructorTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectInvalidTargetingOnScopingAnnotationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectJavaxInjectOnAbstractMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectJavaxInjectOnFinalFieldTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectMoreThanOneInjectableConstructorTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectMoreThanOneQualifierTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectMoreThanOneScopeAnnotationOnClassTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectOverlappingQualifierAndScopeAnnotationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectScopeAnnotationOnInterfaceOrAbstractClassTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectScopeOrQualifierAnnotationRetentionTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectedConstructorAnnotationsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InvalidPatternSyntaxTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit3TestNotRunTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4SetUpNotRunTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4TearDownNotRunTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4TestNotRunTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffixTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MalformedFormatStringTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MissingCasesInEnumSwitchTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MisusedFormattingLoggerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ModifyingCollectionWithItselfTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NonRuntimeAnnotationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NumericEqualityTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/OrderingFromTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/OverridesTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitiveTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsInvalidPlaceholderTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PrimitiveArrayPassedToVarargsMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ProtoFieldNullComparisonTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ReturnValueIgnoredTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SelfAssignmentTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SelfEqualityTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SelfEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/StaticAccessedFromInstanceTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/StringBuilderInitWithCharTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/StringEqualityTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SuppressWarningsDeprecatedTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/TryFailThrowableTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/WaitNotInLoopTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/WrongParameterPackageTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinderTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByValidatorTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/SynchronizeOnNonFinalFieldTest.java
M	core/src/test/java/com/google/errorprone/matchers/AnnotationTest.java
M	core/src/test/java/com/google/errorprone/matchers/CompilerBasedAbstractTest.java
M	core/src/test/java/com/google/errorprone/matchers/CompoundAssignmentTest.java
M	core/src/test/java/com/google/errorprone/matchers/ConstructorOfClassTest.java
M	core/src/test/java/com/google/errorprone/matchers/DescendantOfAbstractTest.java
M	core/src/test/java/com/google/errorprone/matchers/DescendantOfTest.java
M	core/src/test/java/com/google/errorprone/matchers/DescendantOfTransitiveTest.java
M	core/src/test/java/com/google/errorprone/matchers/InstanceMethodTest.java
M	core/src/test/java/com/google/errorprone/matchers/MethodHasParametersTest.java
M	core/src/test/java/com/google/errorprone/matchers/MethodReturnsNonNullNextTokenTest.java
M	core/src/test/java/com/google/errorprone/matchers/MethodReturnsNonNullStringTest.java
M	core/src/test/java/com/google/errorprone/matchers/MethodReturnsNonNullToStringTest.java
M	core/src/test/java/com/google/errorprone/matchers/NonNullLiteralTest.java
M	core/src/test/java/com/google/errorprone/matchers/StaticMethodTest.java
M	core/src/test/java/com/google/errorprone/suppress/CustomSuppressionTest.java
M	core/src/test/java/com/google/errorprone/suppress/SuppressWarningsTest.java
M	core/src/test/java/com/google/errorprone/suppress/UnsuppressibleTest.java
M	core/src/test/java/com/google/errorprone/util/ASTHelpersTest.java
M	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java

commit 3dd9ca5df3ea32aaeb72246735b7a78c3cb3798d
Author: cushon <cushon@google.com>
Date:   Thu Sep 11 11:52:52 2014 -0700

    Stop using ToolProvider.getSystemJavaCompiler()
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75311916

M	core/src/main/java/com/google/errorprone/ErrorProneJavaCompiler.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinderTest.java

commit 0e0bb04723393eab6c3f0aeb4eae61a73ee5590f
Author: cpovirk <cpovirk@google.com>
Date:   Thu Sep 11 11:22:17 2014 -0700

    Work around a bug in the counting of varargs parameters.
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75308864

M	core/src/main/java/com/google/errorprone/bugpatterns/ChainingConstructorIgnoresParameter.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ChainingConstructorIgnoresParameterNegativeCases.java

commit 09bd92c13dd991828ca321fb54d2a76a52b1cadb
Author: cushon <cushon@google.com>
Date:   Wed Sep 10 13:53:13 2014 -0700

    Fix a bug involving locks in enclosing classes.
    
    The analysis now checks that qualified 'this' accesses correspond to the
    correct instance. Previously they were considered to be globally distinct.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75229559

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinder.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByExpression.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinderTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByTest.java

commit d159d95bb1c09015ab9ba92843124817946cd656
Author: cushon <cushon@google.com>
Date:   Wed Sep 10 13:50:38 2014 -0700

    Add a check for code that synchronizes on non-final fields.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75229318

A	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/SynchronizeOnNonFinalField.java
A	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/SynchronizeOnNonFinalFieldTest.java

commit da73a78ed972bcaacbdbd9fe8bd58060e0bf9161
Author: cushon <cushon@google.com>
Date:   Wed Sep 10 13:15:26 2014 -0700

    Catch UnknownFormatConversionException in MisusedFormattingLogger.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75226019

M	core/src/main/java/com/google/errorprone/bugpatterns/MisusedFormattingLogger.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/MisusedFormattingLoggerPositiveCases.java

commit 95b68d55a6c603b9dd7e1c50594906e9ca19b3c5
Author: cpovirk <cpovirk@google.com>
Date:   Wed Sep 10 10:40:17 2014 -0700

    Checks, if two constructors in a class both accept |Foo foo| and one calls the other, that the caller passes |foo| as a parameter. The goal is to catch copy-paste errors:
    
    MissileLauncher(Location target, boolean askForConfirmation) {
    ...
    }
    MissileLauncher(Location target) {
    this(target, false);
    }
    MissileLauncher(boolean askForConfirmation) {
    this(TEST_TARGET, false); // "false" should be "askForConfirmation"
    }
    
    (Bonuses: Fix a NPE in HasIdentifier. Expand methodReturnType() to handle unparameterized classes. Introduce ASTHelpers.getType(Tree). Add debugging information to "Saw unexpected error" failures. Add some related tests.)
    
    Finally, I considered widening the check to handle cases in which the variable is not directly assignable, e.g.,
    
    Foo(File f, boolean b) {
    ...
    }
    
    Foo(String s) {
    this("/tmp", false); // "/tmp" should be "new File(s)"
    }
    
    However, I found that this produced poor results in practice, so I cut it.
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75211878

A	core/src/main/java/com/google/errorprone/bugpatterns/ChainingConstructorIgnoresParameter.java
M	core/src/main/java/com/google/errorprone/matchers/HasIdentifier.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java
A	core/src/test/java/com/google/errorprone/bugpatterns/ChainingConstructorIgnoresParameterTest.java
A	core/src/test/java/com/google/errorprone/matchers/HasIdentifierTest.java
A	core/src/test/java/com/google/errorprone/matchers/MethodReturnsTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/ChainingConstructorIgnoresParameterNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/ChainingConstructorIgnoresParameterPositiveCases.java

commit d9dda899290a40ef087fdc8fb5b3d8765c30044d
Author: konne <konne@google.com>
Date:   Wed Sep 10 10:30:48 2014 -0700

    Simplify the interface to the dataflow analysis and make it ready to improve speed by passing a path directly into the analysis.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75211008

M	core/src/main/java/com/google/errorprone/JDKCompatible.java
M	core/src/main/java/com/google/errorprone/matchers/DefinitelyNonNull.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	jdk7/src/main/java/com/google/errorprone/JDKShim.java
M	jdk8/src/main/java/com/google/errorprone/JDKShim.java
M	jdk8/src/main/java/com/google/errorprone/dataflow/DataFlow.java
D	jdk8/src/main/java/com/google/errorprone/util/Constants.java
M	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java
M	jdkcompat/src/main/java/com/google/errorprone/JDKCompatibleShim.java

commit 43f30476a4751671f49c0168e059f1459ac0f493
Author: eaftan <eaftan@google.com>
Date:   Mon Sep 8 21:53:00 2014 -0700

    Extend nullness analysis to distinguish definitely-null from nullable.
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75083067

M	jdk7/src/main/java/com/google/errorprone/JDKShim.java
M	jdk8/src/main/java/com/google/errorprone/JDKShim.java
M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessValue.java
M	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java
A	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessValueTest.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases1.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases3.java
A	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases4.java
A	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases5.java
M	jdkcompat/src/main/java/com/google/errorprone/JDKCompatibleShim.java

commit 4c228cf082150aaad87672535af2706c15e15e2b
Author: eaftan <eaftan@google.com>
Date:   Mon Sep 8 15:44:01 2014 -0700

    Revert 'Extend nullness analysis to distinguish definitely-null from nullable.'
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75059462

M	jdk8/src/main/java/com/google/errorprone/JDKShim.java
M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessValue.java
M	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java
D	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessValueTest.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases1.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases3.java
D	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases4.java
D	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases5.java
M	jdkcompat/src/main/java/com/google/errorprone/JDKCompatibleShim.java

commit f93495aef797aa33cfcaf884b3050b9b806a35e0
Author: eaftan <eaftan@google.com>
Date:   Mon Sep 8 14:38:38 2014 -0700

    Extend nullness analysis to distinguish definitely-null from nullable.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75053772

M	jdk8/src/main/java/com/google/errorprone/JDKShim.java
M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessValue.java
M	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java
A	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessValueTest.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases1.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases3.java
A	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases4.java
A	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases5.java
M	jdkcompat/src/main/java/com/google/errorprone/JDKCompatibleShim.java

commit fb4b88e054acb956e2a16450ae74d2ce91acabb1
Author: cushon <cushon@google.com>
Date:   Mon Sep 8 07:42:21 2014 -0700

    Remove reflection from JDKCompatible.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75019820

M	core/src/main/java/com/google/errorprone/JDKCompatible.java
D	jdk7/src/main/java/com/google/errorprone/JDK7Shim.java
A	jdk7/src/main/java/com/google/errorprone/JDKShim.java
D	jdk8/src/main/java/com/google/errorprone/JDK8Shim.java
A	jdk8/src/main/java/com/google/errorprone/JDKShim.java

commit ac46906bcf06a7757ae4dcefae199a09f94434b8
Author: eaftan <eaftan@google.com>
Date:   Fri Sep 5 16:37:33 2014 -0700

    Add error-handling to ease debugging NPEs when trying to analyze a method with
    no body (i.e., an abstract method).
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74907541

M	jdk8/src/main/java/com/google/errorprone/dataflow/DataFlow.java

commit 05a0236e0737fc21abec8b05afd86b260cd1f9ed
Author: cpovirk <cpovirk@google.com>
Date:   Thu Sep 4 07:47:36 2014 -0700

    Smooth over some rough edges in the test:
    
    - Don't put the method name in the error message. This not only encourages less verbose expectations but also eliminates the confusing errors that resulting from accidentally writing "triggerNullnessChecker" instead of "triggerNullnessCheckerOnInt."
    - Force callers who pass primitive to explicitly choose whether to autobox. In the process, discover that a few of our tests weren't testing what I thought, and improve the analysis to get most of them right.
    - Create a third file of tests. I thought I might be hitting the javac error limit, though I may be wrong about that. Ultimately the tests should be reorganized further, but this is a start in reducing the number of errors to wade through during debugging.
    
    (Also, simplify visitNode, and increase the symmetry between visitEqualTo and visitNotEqual.)
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74776547

M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases1.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java
A	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases3.java

commit 4cd9a52f144da8ea58a9f67c69e3f0705190c018
Author: cpovirk <cpovirk@google.com>
Date:   Thu Sep 4 07:41:52 2014 -0700

    Recognize non-null compile-time constants.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74776199

M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java

commit 09995a313a5c7bbdd2e63c71a5ce7024232f1103
Author: cpovirk <cpovirk@google.com>
Date:   Thu Sep 4 07:32:36 2014 -0700

    Stop duplicating information between the result value and the store. New policy:
    - Local variables go into the store (setInformation) and come out of the store (getInformation).
    - Everything else goes into the result value ("return new RegularTransferResult<>(VALUE, ...))") and comes out of TransferInput.getValueOfSubNode.
    
    This saves us the trouble of keeping the two in sync and of worrying what happens if we don't. In particular, update() and updateConditional() are now trivial.
    
    Along the way, improve things around |final| variables referenced by local/anonymous classes:
    - Recognize that they're different variables than any variables of the same name inside the class.
    - Check whether they have constant values available.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74775700

M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationStore.java
M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java

commit ee8abd35f0d33dc40674cf8bbd6c2b873871138d
Author: cpovirk <cpovirk@google.com>
Date:   Thu Sep 4 06:45:22 2014 -0700

    NullnessPropagationStore rework:
    - Fix a bug in leastUpperBound.
    - Minor simplifications.
    - Error checking.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74773112

M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationStore.java
A	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationStoreTest.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases1.java

commit 798dadec2fba331d22e4a70a2cf3c88055f394ae
Author: cpovirk <cpovirk@google.com>
Date:   Thu Sep 4 06:21:05 2014 -0700

    Recognize that the methods on java.lang.String never return null.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74772094

M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java

commit 2a253c037b67e5247e9000f1a60107c36b90499e
Author: cpovirk <cpovirk@google.com>
Date:   Thu Sep 4 06:08:22 2014 -0700

    Rework handling of field and method accesses and of assignments in general.
    
    Here are some things that now work:
    - obj.field = something; // obj is now non-null because we now look at field accesses even if they are on the LHS
    - intField = nullableValue() // whole expression is non-null because we now see that the implicit intValue() call returns a non-null value
    
    Additionally, I've split the handling of "special" fields and methods (e.g., enum constants, valueOf methods) off from the handling of static fields. This should make it easier for me to hardcode *non-static* methods that are known to return non-null.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74771575

M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java

commit c2390c1a6019f68c9692e67344630d0950daca60
Author: cpovirk <cpovirk@google.com>
Date:   Thu Sep 4 05:57:17 2014 -0700

    Handle &&, ||, and !.
    
    We're unlikely to care that they themselves return a non-null value (though I've handled that).
    What we do care about is that their conditional-ness is preserved. We do so by returning a ConditionalTransferResult rather than a RegularTransferResult, the latter of which would merge the true and false cases together, throwing away all the information from the comparison.
    I considered changing the vanilla visitNode method to always preserve conditional-ness. However, I was spooked by the fact that this would have done exactly the wrong thing for the ! operator.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74770849

M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases1.java

commit 9d61ec3ccfbba8f59978af6a16e22de272a44f92
Author: cpovirk <cpovirk@google.com>
Date:   Thu Sep 4 05:45:35 2014 -0700

    Give a value (usually) to the assignment expression itself (in addition to the value that we already give to any LHS variable).
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74770232

M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java

commit 5ef708165da480662eccddc19fdd53e0011671e8
Author: cpovirk <cpovirk@google.com>
Date:   Thu Sep 4 05:19:02 2014 -0700

    Give a value to the == and != expressions themselves (in addition to the value that we already give to their arguments).
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74768973

M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases1.java

commit 3885fdd2f708772176d78b30df7fe7d8544f0482
Author: cpovirk <cpovirk@google.com>
Date:   Wed Sep 3 14:18:53 2014 -0700

    Stop accidentally labeling all method invocations and field accesses as non-null.
    Continue labeling some particular ones that are known to be non-null by adding special handling.
    
    We had intended to label only the objects that they were performed on as non-null, as you can see from their setInformation calls. However, by merely returning NONNULL from the method, we accidentally labeled the expression value itself, too. The main part of this change is to distinguish between the value assigned using setInformation and the value assigned by the return value, defaulting the latter to NULLABLE if we don't know any better.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74720885

M	jdk8/pom.xml
M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java

commit 799d00bb526bbc7a00839642a7d84544b858a4ba
Author: eaftan <eaftan@google.com>
Date:   Fri Aug 29 17:25:12 2014 -0700

    External error-prone now depends on republished javac artifact.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74434768

M	core/pom.xml
M	jdkcompat/pom.xml
M	pom.xml

commit e3046f49395115145458831c504a3e8e4a4086fc
Author: cushon <cushon@google.com>
Date:   Fri Aug 29 15:46:37 2014 -0700

    Add better error handling for lock expressions that the analysis doesn't
    handle.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74428083

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinder.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzer.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/IllegalGuardedBy.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByTest.java

commit c772174a401de1edf063b05d7a05ddf07517d04c
Author: cushon <cushon@google.com>
Date:   Fri Aug 29 14:57:22 2014 -0700

    Stop over-catching exceptions: use Java 7's union exception types and
    ReflectiveOperationException.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74424222

M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/ErrorReportingJavaCompiler.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java

commit 25551f003c2b338a99d604a7f7b58df89ac6c4b3
Author: cushon <cushon@google.com>
Date:   Fri Aug 29 14:36:23 2014 -0700

    Ignore synthetic constructors.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74422767

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java

commit 912c09783d2e89027a46014a216b500556123d03
Author: cushon <cushon@google.com>
Date:   Fri Aug 29 10:44:14 2014 -0700

    Expunge the parts of JDKCompatible that were only needed for jdk6.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74404301

M	core/src/main/java/com/google/errorprone/JDKCompatible.java
M	core/src/main/java/com/google/errorprone/VisitorState.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedBySymbolResolver.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzer.java
M	jdk7/src/main/java/com/google/errorprone/JDK7Shim.java
M	jdk8/src/main/java/com/google/errorprone/JDK8Shim.java
M	jdkcompat/src/main/java/com/google/errorprone/JDKCompatibleShim.java

commit 8da9d154b877dd6b916e58d5b093a6f7fb37c2fb
Author: cushon <cushon@google.com>
Date:   Fri Aug 29 10:38:37 2014 -0700

    Still more post-jdk6 cleanup.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74403855

M	core/src/main/java/com/google/errorprone/ErrorReportingJavaCompiler.java
M	core/src/main/java/com/google/errorprone/SearchingJavaCompiler.java

commit 1002d27276cca54be6d50ad222a24b2ec3e6c424
Author: cushon <cushon@google.com>
Date:   Fri Aug 29 08:41:40 2014 -0700

    More post-jdk6 changes.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74395632

M	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
M	core/src/main/java/com/google/errorprone/ErrorReportingJavaCompiler.java

commit 6eccea7e8d8f77e794fcad2ca42fd453944bfcbb
Author: cushon <cushon@google.com>
Date:   Fri Aug 29 08:30:24 2014 -0700

    Drop JDK6 support.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74395048

M	core/pom.xml
M	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
M	core/src/main/java/com/google/errorprone/ErrorProneOptions.java
M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/JDKCompatible.java
M	core/src/main/java/com/google/errorprone/Scanner.java
M	core/src/main/java/com/google/errorprone/SearchResultsPrinter.java
M	core/src/main/java/com/google/errorprone/SuppressionHelper.java
M	core/src/main/java/com/google/errorprone/WrappedTreeMap.java
M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractSuppressWarningsMatcher.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArraysAsListPrimitiveArray.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MalformedFormatString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MissingCasesInEnumSwitch.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MisusedFormattingLogger.java
M	core/src/main/java/com/google/errorprone/bugpatterns/OrderingFrom.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitive.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ReturnValueIgnored.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzer.java
M	core/src/main/java/com/google/errorprone/fixes/AppliedFix.java
M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java
M	core/src/main/java/com/google/errorprone/matchers/CompoundAssignment.java
M	core/src/main/java/com/google/errorprone/matchers/Constructor.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
D	jdk6/pom.xml
D	jdk6/src/main/java/com/google/errorprone/EndPosMap6.java
D	jdk6/src/main/java/com/google/errorprone/JDK6Shim.java
D	jdk6/src/main/java/com/google/errorprone/fixes/AdjustedPosition6.java
D	jdk6/src/main/java/com/google/errorprone/fixes/IndexedPosition6.java
M	jdkcompat/pom.xml
M	pom.xml

commit f2b28d37c608dcd06408faddbf8c4219485d75c1
Author: cushon <cushon@google.com>
Date:   Thu Aug 28 17:44:52 2014 -0700

    Refactor check for generated contructors into ASTHelpers.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74356869

M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java

commit c8f1f225187fb74c3add8130eb4c16cab0d2e12a
Author: cgdecker <cgdecker@google.com>
Date:   Thu Aug 28 13:28:55 2014 -0700

    Fix Description to not add an extra newline when a CUSTOM link is provided, and to avoid having separate logic for WIKI vs. CUSTOM links to begin with.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74334563

M	core/src/main/java/com/google/errorprone/matchers/Description.java
M	core/src/test/java/com/google/errorprone/matchers/DescriptionTest.java

commit 0167149f3e2d54bd6e359e90917f7b292df65863
Author: mwacker <mwacker@google.com>
Date:   Wed Aug 27 00:44:31 2014 -0700

    Refinements to JUnit 4 error checks
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74198991

M	core/src/main/java/com/google/errorprone/bugpatterns/JUnitAmbiguousTestClass.java
M	core/src/main/java/com/google/errorprone/matchers/JUnitMatchers.java

commit 6cb04514d8bffc6d2faf451db7eec8fef1570d4a
Author: glorioso <glorioso@google.com>
Date:   Tue Aug 26 15:30:33 2014 -0700

    Update JUnitMatchers to check for void return types on JUnit3 test methods,
    setUp(), and tearDown()
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74168446

M	core/src/main/java/com/google/errorprone/matchers/JUnitMatchers.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4SetUpNotRunNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4TearDownNotRunNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4TestNotRunNegativeCase3.java

commit 7e55297eb5073b9e7323634479f4a0137b44ae61
Author: lowasser <lowasser@google.com>
Date:   Tue Aug 26 14:46:41 2014 -0700

    Add error-prone bug pattern for == NaN.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74164013

A	core/src/main/java/com/google/errorprone/bugpatterns/EqualsNaN.java
A	core/src/test/java/com/google/errorprone/bugpatterns/EqualsNaNTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/EqualsNaNNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/EqualsNaNPositiveCases.java

commit 7fbe042fef3f5ca75010282a01597b998d2b8458
Author: cushon <cushon@google.com>
Date:   Mon Aug 25 16:23:27 2014 -0700

    Rename 'ThreadSafe' checker to 'GuardedBy'.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74084036

A	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedBy.java
D	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ThreadSafe.java
A	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzerTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/ThreadSafeTest.java

commit d0a46082254fc3350488b7b057663ccb84bdc86b
Author: eaftan <eaftan@google.com>
Date:   Mon Aug 25 12:15:46 2014 -0700

    Add static compile(String[], PrintWriter) method to ErrorProneCompiler
    to match com.sun.tools.javac.main.Main.  Will be used by
    plexus-java-compiler-errorprone.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74062051

M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java

commit 04d8347d32a98e07635283bb5f725bbe660d8a86
Author: eaftan <eaftan@google.com>
Date:   Mon Aug 25 11:57:35 2014 -0700

    Separate Maven examples into (1) bug repro and (2) sanity check that
    error-prone flags an EmptyIf bug.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74060120

M	examples/maven/pom.xml
D	examples/maven/src/main/java/Main.java
D	examples/maven/src/main/java/NeedsAnnotationProcessing.java

commit 135be864cea2edf1185c943f669492fded342c8e
Author: cpovirk <cpovirk@google.com>
Date:   Mon Aug 25 10:26:36 2014 -0700

    Simplify visitLocalVariable, remove visitMethodAccess, remove TODO (since there are a large number of possible "handle x" tasks).
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74051294

M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java

commit cbda18ad6a67ab03f90ca5baa876ca31824670d8
Author: cpovirk <cpovirk@google.com>
Date:   Mon Aug 25 10:07:43 2014 -0700

    Use NULLABLE as the default rather than null.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74049589

M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java

commit 837a9bcc25c04cc255481d58448e8905770dc391
Author: cpovirk <cpovirk@google.com>
Date:   Mon Aug 25 10:02:47 2014 -0700

    Add regression tests.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74049142

M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java

commit f8e67e3f3954dbed7fee351e539f9f21315c263b
Author: cushon <cushon@google.com>
Date:   Fri Aug 22 19:05:39 2014 -0700

    Throw IAE instead of using 'assert'.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=73941191

M	core/src/main/java/com/google/errorprone/ErrorReportingJavaCompiler.java
M	core/src/main/java/com/google/errorprone/SearchingJavaCompiler.java

commit 2a3d7697f8cb9868b050bcb42f116e1ac33b3ed1
Author: cpovirk <cpovirk@google.com>
Date:   Fri Aug 22 09:20:49 2014 -0700

    Avoid NullPointerException when getSource() returns null. The NPE was hiding the stack trace of the real error.
    This can happen if the compiler (well, the error-prone check I'm writing) throws an exception.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=73898986

M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java

commit 5da9f9b90ba9c080eef9b31fab8be7a1d038b4b0
Author: mwacker <mwacker@google.com>
Date:   Thu Aug 21 16:17:06 2014 -0700

    V1 @RunWith check and ambiguous JUnit test class check. Matches but does not fix error - the fix could be different depending on the context.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=73850059

A	core/src/main/java/com/google/errorprone/bugpatterns/JUnitAmbiguousTestClass.java
M	core/src/main/java/com/google/errorprone/matchers/JUnitMatchers.java

commit 9d25501b27e26c601e84f23a5e3d9fde85909932
Author: cgdecker <cgdecker@google.com>
Date:   Thu Aug 21 14:44:05 2014 -0700

    Change ErrorReportingJavaCompiler and SearchingJavaCompiler to propagate the same Scanner through annotation processing rounds rather than creating a new ErrorProneScanner with default checkers each time.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=73842276

M	core/src/main/java/com/google/errorprone/ErrorReportingJavaCompiler.java
M	core/src/main/java/com/google/errorprone/SearchingJavaCompiler.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java

commit fd274f8edfe718a805713ca5e6d0b4a5a089e3d8
Author: cpovirk <cpovirk@google.com>
Date:   Thu Aug 21 12:10:09 2014 -0700

    Simplifications and new tests.
    - Add tests, including a couple that show bugs.
    - Make NullnessValue an enum, as suggested by Demi's TODO.
    - Implement visitValueLiteral instead of each of visitIntegerLiteral, visitLongLiteral, etc.
    - More aggressively static import, including changing NullnessPropagationTest to work with static-import calls to triggerNullnessChecker.
    - Various other things.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=73829578

M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationStore.java
M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessValue.java
M	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases1.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java

commit 72c4828c8e65f1b2c331d1fcaf7acab043b0b07e
Author: lowasser <lowasser@google.com>
Date:   Mon Aug 18 15:31:59 2014 -0700

    Add error-prone check for new StringBuilder(char).
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=73575507

A	core/src/main/java/com/google/errorprone/bugpatterns/StringBuilderInitWithChar.java
A	core/src/test/java/com/google/errorprone/bugpatterns/StringBuilderInitWithCharTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/StringBuilderInitWithCharNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/StringBuilderInitWithCharPositiveCases.java

commit d01134fd9b0ba443ec11f4830cb4c18e9416cf6e
Author: cushon <cushon@google.com>
Date:   Mon Aug 18 11:25:59 2014 -0700

    Make getTypeFromString/getSymbolFromString handle missing types more
    gracefully.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=73553370

M	core/src/main/java/com/google/errorprone/VisitorState.java

commit 76c19eed8db544f1812afa5b7f506fd1eef0e218
Author: cushon <cushon@google.com>
Date:   Fri Aug 15 13:55:26 2014 -0700

    Readability.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=73411217

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinder.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedBySymbolResolver.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzer.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockSet.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/IllegalGuardedBy.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ThreadSafe.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinderTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/ThreadSafeTest.java

commit 42e9cdaf2d7ee2eaff9e9839362fb27a3f8e6b03
Author: deminguyen <deminguyen@google.com>
Date:   Fri Aug 15 11:03:21 2014 -0700

    Matcher for provably non-null expressions
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=73397622

M	core/src/main/java/com/google/errorprone/JDKCompatible.java
A	core/src/main/java/com/google/errorprone/matchers/DefinitelyNonNull.java
M	jdk6/src/main/java/com/google/errorprone/JDK6Shim.java
M	jdk7/src/main/java/com/google/errorprone/JDK7Shim.java
M	jdk8/src/main/java/com/google/errorprone/JDK8Shim.java
M	jdkcompat/src/main/java/com/google/errorprone/JDKCompatibleShim.java

commit 29ee7d1f0ae1e5250bd39bb6ea5780df39708efc
Author: deminguyen <deminguyen@google.com>
Date:   Thu Aug 14 10:13:00 2014 -0700

    Miscellaneous cleanup
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=73312124

M	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java

commit fb68d7bd30ec690a27831cb7ab03d11d65e72627
Author: konne <konne@google.com>
Date:   Tue Aug 12 16:31:26 2014 -0700

    Fixing maven build for nullness propagation.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=73172564

M	jdk8/pom.xml
M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationStore.java
M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java

commit 4b31b555a9bf45f133c61fb2f4caaf8affda3723
Author: konne <konne@google.com>
Date:   Mon Aug 11 17:19:03 2014 -0700

    Adding maven support to data-flow, and making error-prone depend on it.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=73089202

M	pom.xml

commit 2641aea9726ed3533477b79da5de37308af804ce
Author: deminguyen <deminguyen@google.com>
Date:   Mon Aug 11 16:25:13 2014 -0700

    Prototype of nullability analysis in error-prone
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=73084694

A	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationStore.java
A	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
A	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessValue.java
A	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java
A	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases1.java
A	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java

commit 5fca63e182f07cd8f45c08def66195b45e1dfab0
Author: konne <konne@google.com>
Date:   Mon Aug 11 10:23:43 2014 -0700

    Fix classpath resolution for maven build.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=73053547

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java

commit 1f3728a0e671c91152d6ca949fde00fb4c67512d
Author: jeremymanson <jeremymanson@google.com>
Date:   Fri Aug 8 13:36:06 2014 -0700

    Delete EmptyStatement.
    
    EmptyStatements are pretty common in reasonable code.  For example:
    
    for (int i = 0; i < arr.length && arr[i] != 3; i++);
    
    finds the first instance of 3 in the array.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=72921583

D	core/src/main/java/com/google/errorprone/bugpatterns/EmptyStatement.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/EmptyStatementNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/EmptyStatementPositiveCases.java

commit 4018d9cb9fa620439bdd075229aa6cafbd033440
Author: eaftan <eaftan@google.com>
Date:   Thu Aug 7 17:21:02 2014 -0700

    Remove CompilationTestHelper factory method that checks against list of
    all known bug checkers.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=72858239

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayHashCodeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayToStringCompoundAssignmentTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayToStringConcatenationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayToStringTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/BadShiftAmountTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CheckReturnValueTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ClassCanBeStaticTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CollectionIncompatibleTypeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ComparisonOutOfRangeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CovariantEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DeadExceptionTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DepAnnTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DivZeroTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ElementsCountedInLoopTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/EmptyIfStatementTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/FinallyTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceAssistedInjectScopingTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceAssistedParametersTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceInjectOnFinalFieldTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceOverridesGuiceInjectableMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceOverridesJavaxInjectableMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/IncrementDecrementVolatileTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnConstructorsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnSameConstructorTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectInvalidTargetingOnScopingAnnotationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectJavaxInjectOnAbstractMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectJavaxInjectOnFinalFieldTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectMoreThanOneInjectableConstructorTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectMoreThanOneQualifierTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectMoreThanOneScopeAnnotationOnClassTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectOverlappingQualifierAndScopeAnnotationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectScopeAnnotationOnInterfaceOrAbstractClassTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectScopeOrQualifierAnnotationRetentionTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectedConstructorAnnotationsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InvalidPatternSyntaxTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit3TestNotRunTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4SetUpNotRunTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4TearDownNotRunTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4TestNotRunTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffixTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MalformedFormatStringTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MissingCasesInEnumSwitchTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MisusedFormattingLoggerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ModifyingCollectionWithItselfTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NonRuntimeAnnotationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NumericEqualityTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/OrderingFromTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/OverridesTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitiveTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsInvalidPlaceholderTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PrimitiveArrayPassedToVarargsMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ProtoFieldNullComparisonTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ReturnValueIgnoredTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SelfAssignmentTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SelfEqualityTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/StaticAccessedFromInstanceTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/StringEqualityTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SuppressWarningsDeprecatedTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/TryFailThrowableTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/WaitNotInLoopTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/WrongParameterPackageTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByValidatorTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/ThreadSafeTest.java

commit d3b86ebd7957432f9719aa4272a79d6887e3444c
Author: konne <konne@google.com>
Date:   Thu Aug 7 10:28:00 2014 -0700

    Dataflow analysis for integer constants.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=72823098

M	core/src/main/java/com/google/errorprone/JDKCompatible.java
M	jdk6/src/main/java/com/google/errorprone/JDK6Shim.java
M	jdk7/src/main/java/com/google/errorprone/JDK7Shim.java
M	jdk8/src/main/java/com/google/errorprone/JDK8Shim.java
A	jdk8/src/main/java/com/google/errorprone/dataflow/DataFlow.java
A	jdk8/src/main/java/com/google/errorprone/util/Constants.java
M	jdkcompat/src/main/java/com/google/errorprone/JDKCompatibleShim.java

commit 6312a2273468b7cdc831a088634c7b1aa4371cbc
Author: glorioso <glorioso@google.com>
Date:   Wed Aug 6 17:31:12 2014 -0700

    Create error-prone matchers for finding setUp() and tearDown() methods that
    look like JUnit3 overridden methods, but are actually part of a JUnit4 test
    class.
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=72772812

A	core/src/main/java/com/google/errorprone/bugpatterns/AbstractJUnit4InitMethodNotRun.java
A	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4SetUpNotRun.java
A	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TearDownNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TestNotRun.java
M	core/src/main/java/com/google/errorprone/matchers/JUnitMatchers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4SetUpNotRunTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4TearDownNotRunTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4SetUpNotRunNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4SetUpNotRunPositiveCaseCustomBefore.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4SetUpNotRunPositiveCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4TearDownNotRunNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4TearDownNotRunPositiveCaseCustomAfter.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4TearDownNotRunPositiveCases.java

commit 5913f9eac8722b30ae5b825f0f423674dcb34530
Author: cushon <cushon@google.com>
Date:   Wed Aug 6 09:53:11 2014 -0700

    Discover all @BugPattern-annotated classes.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=72731590

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java

commit 0e227c3af7065f8e18c666c6c5cbdaa6d7771cd6
Author: cushon <cushon@google.com>
Date:   Wed Aug 6 08:53:19 2014 -0700

    Miscellaneous clean-up, and add first usages of guava.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=72727041

M	core/pom.xml
M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractSuppressWarningsMatcher.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MalformedFormatString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MisusedFormattingLogger.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ModifyingCollectionWithItself.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NumericEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitive.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PrimitiveArrayPassedToVarargsMethod.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ProtoFieldNullComparison.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfAssignment.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StaticAccessedFromInstance.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StringEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/TryFailThrowable.java
M	core/src/main/java/com/google/errorprone/bugpatterns/WrongParameterPackage.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinder.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByExpression.java
M	core/src/main/java/com/google/errorprone/fixes/Replacement.java
M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java
M	core/src/main/java/com/google/errorprone/matchers/DescendantOf.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/matchers/StaticMethod.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayHashCodeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffixTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzerTest.java
M	core/src/test/java/com/google/errorprone/matchers/AnnotationTest.java
M	core/src/test/java/com/google/errorprone/matchers/ConstructorOfClassTest.java
M	core/src/test/java/com/google/errorprone/matchers/DescendantOfAbstractTest.java
M	core/src/test/java/com/google/errorprone/matchers/MethodHasParametersTest.java

commit 86a371c79a1934d882dd9bac52a70d25053ea2e3
Author: eaftan <eaftan@google.com>
Date:   Mon Aug 4 15:41:14 2014 -0700

    Refactor explicit construction for Description.Builder to static builder
    method to match SuggestedFix.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=72586370

M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ComparisonOutOfRange.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidPatternSyntax.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MalformedFormatString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MissingCasesInEnumSwitch.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MisusedFormattingLogger.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StaticAccessedFromInstance.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ThreadSafe.java
M	core/src/main/java/com/google/errorprone/matchers/Description.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzerTest.java
M	core/src/test/java/com/google/errorprone/matchers/DescriptionTest.java

commit b6416db4b09dda8adc610497ea717ae410fd1763
Author: cushon <cushon@google.com>
Date:   Tue Jul 29 15:58:10 2014 -0700

    Add check for missing cases in enum switches.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=72186980

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
A	core/src/main/java/com/google/errorprone/bugpatterns/MissingCasesInEnumSwitch.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/MissingCasesInEnumSwitchTest.java

commit 282416bf84538575f002fa45b8106073f0966a28
Author: lowasser <lowasser@google.com>
Date:   Thu Jul 24 11:46:36 2014 -0700

    Only match usage of bad placeholders in PreconditionsTooManyArgs, updating the error message summary appropriately.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=71848531

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
A	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsInvalidPlaceholder.java
D	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsTooManyArgs.java
A	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsInvalidPlaceholderTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsTooManyArgsTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsInvalidPlaceholderNegativeCase1.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsInvalidPlaceholderPositiveCase1.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsTooManyArgsNegativeCase1.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsTooManyArgsPositiveCase1.java

commit 24731457ca3de670294dd6b19d60252d113b3564
Author: cushon <cushon@google.com>
Date:   Fri Jul 18 15:30:49 2014 -0700

    Record Moe equivalence.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=71460506

M	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
M	core/src/main/java/com/google/errorprone/JDKCompatible.java
M	core/src/main/java/com/google/errorprone/JavacErrorDescriptionListener.java
M	core/src/main/java/com/google/errorprone/Scanner.java
M	core/src/main/java/com/google/errorprone/SuppressionHelper.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ComparisonOutOfRange.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit3TestNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TestNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MalformedFormatString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitive.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsExpensiveString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfAssignment.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StaticAccessedFromInstance.java
M	core/src/main/java/com/google/errorprone/bugpatterns/TryFailThrowable.java
M	core/src/main/java/com/google/errorprone/bugpatterns/WaitNotInLoop.java
M	core/src/main/java/com/google/errorprone/bugpatterns/WrongParameterPackage.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinder.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedBySymbolResolver.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzer.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ThreadSafe.java
M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java
M	core/src/main/java/com/google/errorprone/matchers/Constructor.java
M	core/src/main/java/com/google/errorprone/matchers/Description.java
M	core/src/main/java/com/google/errorprone/matchers/JUnitMatchers.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/matchers/MethodHasParameters.java
M	core/src/main/java/com/google/errorprone/matchers/MultiMatcher.java
M	core/src/main/java/com/google/errorprone/matchers/NextStatement.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitiveTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinderTest.java
M	core/src/test/java/com/google/errorprone/matchers/AnnotationTest.java
M	core/src/test/java/com/google/errorprone/matchers/ConstructorOfClassTest.java
M	core/src/test/java/com/google/errorprone/matchers/DescendantOfTransitiveTest.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/DivZeroPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/MalformedFormatStringNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/OverridesPositiveCase2.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/OverridesPositiveCase3.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/OverridesPositiveCase4.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/WaitNotInLoopNegativeCases.java
M	jdk8/src/main/java/com/google/errorprone/EndPosMap8.java

commit e85da2e8985924dee1f843e859373b659817f7a4
Author: cushon <cushon@google.com>
Date:   Fri Oct 10 14:53:49 2014 -0700

    Ignore deprecated JUnit 4.11 methods in tests.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=77457596

M	core/src/test/resources/com/google/errorprone/bugpatterns/TryFailThrowableNegativeCases.java
M	core/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java

commit 8f31a19311a52b8630a41d642d71e5878cc14dc5
Author: supertri <supertri@google.com>
Date:   Thu Oct 9 09:34:07 2014 -0700

    Handle additional exception types in format strings.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=77352187

M	core/src/main/java/com/google/errorprone/bugpatterns/MisusedFormattingLogger.java

commit 4634ebee6487839778dc2eae15f02f8fbc26bc81
Author: cushon <cushon@google.com>
Date:   Wed Oct 8 17:35:42 2014 -0700

    DepAnn: assume that annotations exist.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=77307791

M	core/src/main/java/com/google/errorprone/bugpatterns/DepAnn.java

commit 04cb45885dc01f3aa99140a76272805aecd6bf94
Author: cushon <cushon@google.com>
Date:   Wed Oct 8 12:13:34 2014 -0700

    Use javac8's Main.Result enum instead of int status codes.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=77283109

M	ant/src/main/java/com/google/errorprone/ErrorProneAntCompilerAdapter.java
M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	core/src/test/java/com/google/errorprone/CommandLineFlagDisableTest.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/EndPosTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneTestCompiler.java
M	core/src/test/java/com/google/errorprone/matchers/DescendantOfTransitiveTest.java
M	core/src/test/java/com/google/errorprone/suppress/CustomSuppressionTest.java
M	core/src/test/java/com/google/errorprone/suppress/SuppressWarningsTest.java
M	core/src/test/java/com/google/errorprone/suppress/UnsuppressibleTest.java

commit bebc6a0beae5e140b718270c71936a3a71f4860f
Author: cushon <cushon@google.com>
Date:   Tue Oct 7 14:53:51 2014 -0700

    Remove ErrorProneEndPosMap and use the new javac8 EndPosTable directly.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=77212442

D	core/src/main/java/com/google/errorprone/EndPosMap8.java
A	core/src/main/java/com/google/errorprone/EndPosTableUtil.java
M	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
D	core/src/main/java/com/google/errorprone/ErrorProneEndPosMap.java
M	core/src/main/java/com/google/errorprone/JDKCompatible.java
M	core/src/main/java/com/google/errorprone/JavacErrorDescriptionListener.java
M	core/src/main/java/com/google/errorprone/WrappedTreeMap.java
M	core/src/main/java/com/google/errorprone/fixes/AppliedFix.java
M	core/src/main/java/com/google/errorprone/fixes/Fix.java
M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java
M	core/src/test/java/com/google/errorprone/fixes/AppliedFixTest.java

commit 0adc57f305fa82ad7639c8ef04c8ce18ab9949c3
Author: cushon <cushon@google.com>
Date:   Tue Oct 7 13:43:37 2014 -0700

    Remove more of JDKCompatible.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=77206048

M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	core/src/main/java/com/google/errorprone/JDKCompatible.java
D	core/src/main/java/com/google/errorprone/JDKCompatibleShim.java
D	core/src/main/java/com/google/errorprone/JDKShim.java
M	core/src/main/java/com/google/errorprone/WrappedTreeMap.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByUtils.java
D	core/src/main/java/com/google/errorprone/fixes/AbstractAdjustedPosition.java
D	core/src/main/java/com/google/errorprone/fixes/AbstractIndexedPosition.java
A	core/src/main/java/com/google/errorprone/fixes/AdjustedPosition.java
D	core/src/main/java/com/google/errorprone/fixes/AdjustedPosition8.java
A	core/src/main/java/com/google/errorprone/fixes/IndexedPosition.java
D	core/src/main/java/com/google/errorprone/fixes/IndexedPosition8.java
M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java

commit e9526add8324af9362979d7fd72640159ac157fe
Author: cushon <cushon@google.com>
Date:   Sun Oct 5 20:20:51 2014 -0700

    Prepare for javac8 u20 update.
    
    u20 changes how end positions are stored, which breaks error-prone.
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=77066214

M	core/pom.xml
M	core/src/main/java/com/google/errorprone/EndPosMap8.java
M	core/src/main/java/com/google/errorprone/JDKCompatible.java
M	core/src/main/java/com/google/errorprone/JDKCompatibleShim.java
M	core/src/main/java/com/google/errorprone/JDKShim.java
M	core/src/main/java/com/google/errorprone/WrappedTreeMap.java
M	pom.xml

commit 7321b788c1921eb1baaf95d9729f0e114f1a0852
Author: cushon <cushon@google.com>
Date:   Fri Oct 3 19:06:41 2014 -0700

    Add Java 7 and 8-specific matchers.
    
    - AnnotatedType
    - IntersectionType
    - LambdaExpression
    - MemberReference
    - UnionType
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=77001972

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java

commit a9047b812db584b68b93dca594b8e4b4c562daa2
Author: cushon <cushon@google.com>
Date:   Fri Oct 3 17:14:13 2014 -0700

    Drop javac7 support: remove jdk7-compatibility shims, and merge jdk8
    implementations into core.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=76996707

M	core/pom.xml
A	core/src/main/java/com/google/errorprone/EndPosMap8.java
A	core/src/main/java/com/google/errorprone/ErrorProneEndPosMap.java
A	core/src/main/java/com/google/errorprone/JDKCompatibleShim.java
A	core/src/main/java/com/google/errorprone/JDKShim.java
A	core/src/main/java/com/google/errorprone/dataflow/DataFlow.java
A	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/AbstractNullnessPropagationTransfer.java
A	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationStore.java
A	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
A	core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessValue.java
A	core/src/main/java/com/google/errorprone/fixes/AbstractAdjustedPosition.java
A	core/src/main/java/com/google/errorprone/fixes/AbstractIndexedPosition.java
A	core/src/main/java/com/google/errorprone/fixes/AdjustedPosition8.java
A	core/src/main/java/com/google/errorprone/fixes/IndexedPosition8.java
A	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationStoreTest.java
A	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java
A	core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessValueTest.java
A	core/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases1.java
A	core/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java
A	core/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases3.java
A	core/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases4.java
A	core/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases5.java
A	core/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases6.java
A	core/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases7.java
D	jdk7/pom.xml
D	jdk7/src/main/java/com/google/errorprone/EndPosMap7.java
D	jdk7/src/main/java/com/google/errorprone/JDKShim.java
D	jdk7/src/main/java/com/google/errorprone/fixes/AdjustedPosition7.java
D	jdk7/src/main/java/com/google/errorprone/fixes/IndexedPosition7.java
D	jdk8/pom.xml
D	jdk8/src/main/java/com/google/errorprone/EndPosMap8.java
D	jdk8/src/main/java/com/google/errorprone/JDKShim.java
D	jdk8/src/main/java/com/google/errorprone/dataflow/DataFlow.java
D	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/AbstractNullnessPropagationTransfer.java
D	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationStore.java
D	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
D	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessValue.java
D	jdk8/src/main/java/com/google/errorprone/fixes/AdjustedPosition8.java
D	jdk8/src/main/java/com/google/errorprone/fixes/IndexedPosition8.java
D	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationStoreTest.java
D	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java
D	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessValueTest.java
D	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases1.java
D	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java
D	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases3.java
D	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases4.java
D	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases5.java
D	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases6.java
D	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases7.java
D	jdkcompat/pom.xml
D	jdkcompat/src/main/java/com/google/errorprone/ErrorProneEndPosMap.java
D	jdkcompat/src/main/java/com/google/errorprone/JDKCompatibleShim.java
D	jdkcompat/src/main/java/com/google/errorprone/fixes/AbstractAdjustedPosition.java
D	jdkcompat/src/main/java/com/google/errorprone/fixes/AbstractIndexedPosition.java
M	pom.xml

commit cdbd8d780edaf5ea010fa6af8b4a6d31c9691c9c
Author: eaftan <eaftan@google.com>
Date:   Fri Oct 3 15:30:58 2014 -0700

    error-prone can now output multiple suggested fixes.  Also remove Fix.NO_FIX
    since that has been effectively replaced by an empty list of fixes.
    
    Multiple fixes are now presented in the diagnostic message when used as a
    compiler, joined by 'or'.  They look like:
    StringEqualityPositiveCases.java:28: error: [StringEquality] String comparison using reference equality instead of value equality
    retVal = (x == y);
    ^
    (see http://code.google.com/p/error-prone/wiki/StringEquality)
    Did you mean 'retVal = (Objects.equals(x, y));' or 'retVal = (x.equals(y));'?
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=76989307

M	core/src/main/java/com/google/errorprone/JavacErrorDescriptionListener.java
M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractJUnit4InitMethodNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ComparisonOutOfRange.java
M	core/src/main/java/com/google/errorprone/bugpatterns/DivZero.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ElementsCountedInLoop.java
M	core/src/main/java/com/google/errorprone/bugpatterns/Finally.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidPatternSyntax.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnitAmbiguousTestClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MalformedFormatString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MisusedFormattingLogger.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NonAtomicVolatileUpdate.java
M	core/src/main/java/com/google/errorprone/bugpatterns/Overrides.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsExpensiveString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PrimitiveArrayPassedToVarargsMethod.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StaticAccessedFromInstance.java
M	core/src/main/java/com/google/errorprone/bugpatterns/WaitNotInLoop.java
M	core/src/main/java/com/google/errorprone/bugpatterns/WrongParameterPackage.java
A	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedBy.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByValidator.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/SynchronizeOnNonFinalField.java
M	core/src/main/java/com/google/errorprone/fixes/Fix.java
D	core/src/main/java/com/google/errorprone/fixes/NoFix.java
M	core/src/main/java/com/google/errorprone/matchers/Description.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelperTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
M	core/src/test/java/com/google/errorprone/matchers/DescriptionTest.java
M	core/src/test/java/com/google/errorprone/suppress/CustomSuppressionTest.java
M	core/src/test/java/com/google/errorprone/suppress/UnsuppressibleTest.java

commit 75b39ef3ebd863e02f8185b76af5420d994f321e
Author: cushon <cushon@google.com>
Date:   Wed Oct 1 15:22:39 2014 -0700

    Rename GuardedBy to GuardedByChecker, to avoid using the same simple name
    as the annotation.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=76825033

D	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedBy.java
A	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByChecker.java
A	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByCheckerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByLockMethodTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzerTest.java
M	core/src/test/java/com/google/errorprone/suppress/CustomSuppressionTest.java

commit 998430d124b3acd77d6a69610bc2561c3d1221ea
Author: eaftan <eaftan@google.com>
Date:   Tue Sep 30 17:23:22 2014 -0700

    Make CompilationTestHelper.assertCompileSucceeds fail if any warnings are
    produced.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=76744268

M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayHashCodeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ChainingConstructorIgnoresParameterTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByTest.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayHashCodeNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayHashCodeNegativeCases2.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceOverridesGuiceInjectableMethodNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/MalformedFormatStringNegativeCases.java

commit 62db9085f537ed319499d2f0088b5f0fdb627f57
Author: eaftan <eaftan@google.com>
Date:   Tue Sep 30 16:03:16 2014 -0700

    Synchronize the set of checks run in open-source error-prone with the set
    from internal error-prone.
    
    Sets maturity = MATURE for all checks that are on inside Google and
    maturity = EXPERIMENTAL for checks that are not.  Sets severity = ERROR
    if it is on as a compiler error and severity = WARNING it is only on at
    code review time.
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=76736418

M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToStringCompoundAssignment.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToStringConcatenation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArraysAsListPrimitiveArray.java
M	core/src/main/java/com/google/errorprone/bugpatterns/DeadException.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ElementsCountedInLoop.java
M	core/src/main/java/com/google/errorprone/bugpatterns/EmptyIfStatement.java
M	core/src/main/java/com/google/errorprone/bugpatterns/FallThroughSuppression.java
M	core/src/main/java/com/google/errorprone/bugpatterns/Finally.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidPatternSyntax.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4SetUpNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TearDownNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffix.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MisusedFormattingLogger.java
M	core/src/main/java/com/google/errorprone/bugpatterns/OrderingFrom.java
M	core/src/main/java/com/google/errorprone/bugpatterns/Overrides.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitive.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsInvalidPlaceholder.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PrimitiveArrayPassedToVarargsMethod.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ProtoStringFieldReferenceEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StaticAccessedFromInstance.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StringEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/WaitNotInLoop.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/SynchronizeOnNonFinalField.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneJavaCompilerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/FinallyTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MisusedFormattingLoggerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsInvalidPlaceholderTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PrimitiveArrayPassedToVarargsMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/StaticAccessedFromInstanceTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/StringEqualityTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/WaitNotInLoopTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/SynchronizeOnNonFinalFieldTest.java

commit 9c899b23e9c6a135e7b6bc54f3385be60c3bd5fb
Author: cushon <cushon@google.com>
Date:   Mon Sep 29 13:08:07 2014 -0700

    Improve error message for Incompatible/RequiredModifiers
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=76623087

M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java

commit 596f654a498548905032e0dfbfbaed3dbb9013aa
Author: eaftan <eaftan@google.com>
Date:   Mon Sep 29 12:41:34 2014 -0700

    Update IncrementDecrementVolatile check to account for non-integer types.
    
    Renamed it to NonAtomicVolatileUpdate, updated the wiki text, and added test
    cases for updates to Strings.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=76620892

D	core/src/main/java/com/google/errorprone/bugpatterns/IncrementDecrementVolatile.java
A	core/src/main/java/com/google/errorprone/bugpatterns/NonAtomicVolatileUpdate.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/IncrementDecrementVolatileTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/NonAtomicVolatileUpdateTest.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/IncrementDecrementVolatileNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/IncrementDecrementVolatilePositiveCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/NonAtomicVolatileUpdateNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/NonAtomicVolatileUpdatePositiveCases.java

commit a07d98ae9f9bb92ae4cb56c2525000c93beded49
Author: cushon <cushon@google.com>
Date:   Mon Sep 29 12:21:42 2014 -0700

    Improve error message for Finally.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=76619269

M	core/src/main/java/com/google/errorprone/bugpatterns/Finally.java

commit b48d55b7c9df8d424a3216aa76a814fb9e58b4d8
Author: mwacker <mwacker@google.com>
Date:   Thu Sep 25 22:53:05 2014 -0700

    Only apply @RunWith check to top-level classes
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=76405736

M	core/src/main/java/com/google/errorprone/matchers/JUnitMatchers.java

commit b43021397f736ed9ed5bea2632456f570c31218a
Author: cushon <cushon@google.com>
Date:   Thu Sep 25 15:07:45 2014 -0700

    Add tests to sanity-check the examples in the documentation.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=76375406

M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByTest.java

commit 2a08aff7d01faa31b11e135ff379bbabb35d5cb1
Author: cushon <cushon@google.com>
Date:   Mon Sep 22 20:37:44 2014 -0700

    Fix bugs in expression normalization.
    
    - do a better job of canonicalizing select expressions into: simple this /
    qualified this / static
    - fix an NPE in expression binding
    - fix a crash involving guard expressions referencing locks that aren't visible
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=76131882

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinder.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByExpression.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedBySymbolResolver.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinderTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByValidatorTest.java

commit 0f0632da80c713df4288d1e14492a42d78e9938f
Author: konne <konne@google.com>
Date:   Thu Sep 18 14:35:30 2014 -0700

    Fix bug where expressionDataflow would throw an exception for expressions in a method that doesn't have a body, e.g. Map.Entry in:
    
    abstract Set<Map.Entry<K, V>> entries();
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75844945

M	jdk8/src/main/java/com/google/errorprone/dataflow/DataFlow.java

commit 8d682a6203adaefeddde30b5e9bbb4b31560f85b
Author: olegv <olegv@google.com>
Date:   Thu Sep 18 13:12:51 2014 -0700

    Fix ASTHelpers#getType for nested types.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75836433

M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/test/java/com/google/errorprone/util/ASTHelpersTest.java

commit f94140aee37832e2424faacd9de79f18654557a6
Author: cushon <cushon@google.com>
Date:   Thu Sep 18 12:55:06 2014 -0700

    Add simple checks for @LockMethod, @UnlockMethod usage.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75835126

A	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/AbstractLockMethodChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzer.java
A	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/LockMethodChecker.java
A	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/UnlockMethodChecker.java
A	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/LockMethodCheckerTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/UnlockMethodCheckerTest.java

commit 39e1d3c4fd420bc832288cc49d8af3827347a64c
Author: cushon <cushon@google.com>
Date:   Thu Sep 18 12:39:07 2014 -0700

    Suppression logic shouldn't assume check names are unique.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75833886

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java

commit cce9351aa340a3631ad0292b07c20e36e6d3afdc
Author: cushon <cushon@google.com>
Date:   Wed Sep 17 18:09:59 2014 -0700

    Support @UnlockMethod in GuardedBy checker.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75771113

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinder.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByUtils.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzer.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinderTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByLockMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzerTest.java

commit 9c66dce83df8a19748b130fcc60bec3e3e6dca73
Author: konne <konne@google.com>
Date:   Tue Sep 16 16:04:37 2014 -0700

    Added caching to dataflow
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75667075

M	jdk8/src/main/java/com/google/errorprone/dataflow/DataFlow.java

commit 7ef388407edbc657025ace97c26defd789ad93fa
Author: konne <konne@google.com>
Date:   Tue Sep 16 12:35:20 2014 -0700

    Extend StringEquality checker to use the nullness analysis when
    creating suggested fixes.  The fixes now use .equals() if we can
    prove that one of the operands is non-null.
    
    Also fixed a bug in the checker, namely that
    
    x == ""
    
    was turned into
    
    x.isEmpty()
    
    And extend the nullness analysis to consider string concatenation.
    
    (String) a + (String) b
    
    is always non-null, even if a and b are null.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75649171

M	core/src/main/java/com/google/errorprone/bugpatterns/StringEquality.java
M	core/src/test/java/com/google/errorprone/bugpatterns/StringEqualityTest.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/StringEqualityNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/StringEqualityPositiveCases.java
M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases1.java

commit b64d2af50d9357caf4c561445a8c9b0f582a8adb
Author: cpovirk <cpovirk@google.com>
Date:   Tue Sep 16 10:02:15 2014 -0700

    Recognize an individual method known to return non-null values in a class where not all methods are that way.
    I chose Files.toString, which I happen to need for my current cleanup.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75635917

M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java
A	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases7.java

commit be3ad6a5fb0e70446f696b1183967c22ddbba6d4
Author: cpovirk <cpovirk@google.com>
Date:   Tue Sep 16 09:49:58 2014 -0700

    Handle methods whose return value indicates whether a parameter is provably non-null.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75634831

M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/AbstractNullnessPropagationTransfer.java
M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases6.java

commit 0b57dbbdf784f36e90ba267657b78616e0ef80e7
Author: cpovirk <cpovirk@google.com>
Date:   Tue Sep 16 05:57:46 2014 -0700

    Handle checkNotNull and assertNotNull.
    This means not only concluding that checkNotNull must return non-null but also that it (and assertNotNull) prove their *parameters* to be non-null.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75621576

M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java

commit cbf59c6ad560a29a8de804f8d82334a217acc467
Author: cushon <cushon@google.com>
Date:   Mon Sep 15 17:54:49 2014 -0700

    Use AutoValue for GuardedByExpressions.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75589167

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByExpression.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzer.java

commit 60689d9e9d3cf463d444f381c6142c755028744a
Author: cushon <cushon@google.com>
Date:   Mon Sep 15 17:49:14 2014 -0700

    Fix all of the unchecked/rawtypes warnings.
    
    Also, we can use @SafeVarargs now that we're no longer tied to
    JDK6-compatibility.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75588801

M	core/src/main/java/com/google/errorprone/ErrorProneJavaCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/VisitorState.java
M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractJUnit4InitMethodNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractReturnValueIgnored.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayHashCode.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToStringConcatenation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BadShiftAmount.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ClassCanBeStatic.java
M	core/src/main/java/com/google/errorprone/bugpatterns/CollectionIncompatibleType.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ComparisonOutOfRange.java
M	core/src/main/java/com/google/errorprone/bugpatterns/CovariantEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/DeadException.java
M	core/src/main/java/com/google/errorprone/bugpatterns/DivZero.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceAssistedInjectScoping.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceAssistedParameters.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceOverridesGuiceInjectableMethod.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceOverridesJavaxInjectableMethod.java
M	core/src/main/java/com/google/errorprone/bugpatterns/IncrementDecrementVolatile.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnConstructors.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnSameConstructor.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectInvalidTargetingOnScopingAnnotation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectJavaxInjectOnAbstractMethod.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectJavaxInjectOnFinalField.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectMoreThanOneInjectableConstructor.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectMoreThanOneQualifier.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectMoreThanOneScopeAnnotationOnClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectOverlappingQualifierAndScopeAnnotation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectScopeAnnotationOnInterfaceOrAbstractClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectScopeOrQualifierAnnotationRetention.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidPatternSyntax.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit3TestNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4SetUpNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TearDownNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TestNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnitAmbiguousTestClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MisusedFormattingLogger.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ModifyingCollectionWithItself.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NumericEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitive.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsInvalidPlaceholder.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ReturnValueIgnored.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StaticAccessedFromInstance.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StringEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/WaitNotInLoop.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedBySymbolResolver.java
M	core/src/main/java/com/google/errorprone/matchers/Enclosing.java
M	core/src/main/java/com/google/errorprone/matchers/JUnitMatchers.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/matchers/ParentNode.java
M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneJavaCompilerTest.java
M	core/src/test/java/com/google/errorprone/matchers/AnnotationTest.java
M	core/src/test/java/com/google/errorprone/matchers/InstanceMethodTest.java
M	core/src/test/java/com/google/errorprone/suppress/SuppressWarningsTest.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/FallthroughSuppressionNegativeCases.java
M	jdk8/src/main/java/com/google/errorprone/EndPosMap8.java
M	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java

commit bcda15cda54500eb03898a86e0512abc58101aa4
Author: cpovirk <cpovirk@google.com>
Date:   Mon Sep 15 16:43:31 2014 -0700

    Handle widening conversions, and more explicitly test narrowing conversions.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75583812

M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java

commit f8fc71676de9aa3d930fc3241d4419303a8a7169
Author: cpovirk <cpovirk@google.com>
Date:   Mon Sep 15 16:33:22 2014 -0700

    Add summary methods for bitwise and numerical operations.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75583057

M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/AbstractNullnessPropagationTransfer.java
M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java
A	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases6.java

commit 86d5a2b494027c5614839485058718d65b4681fb
Author: cpovirk <cpovirk@google.com>
Date:   Mon Sep 15 16:03:17 2014 -0700

    Pull the boilerplate into a superclass.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75580690

A	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/AbstractNullnessPropagationTransfer.java
M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationStore.java
M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java

commit 76b46f1dfc86e49401c7fd1bf17667e187568daf
Author: cushon <cushon@google.com>
Date:   Mon Sep 15 10:14:48 2014 -0700

    Temporarily ignore ReadWriteLocks.
    
    Suppress the analysis for ReadWriteLocks until we can detect copies of the read
    or write lock, and there are annotations to specify read/write policies for
    guarded members.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75550236

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedBy.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzer.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzerTest.java

commit eb81ef854731246061cf59da023bb4a20b80917e
Author: cushon <cushon@google.com>
Date:   Mon Sep 15 10:12:41 2014 -0700

    Add first usage of AutoValue.
    
    So far only Replacement has been converted.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75550071

M	core/pom.xml
M	core/src/main/java/com/google/errorprone/fixes/Replacement.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/ErrorProneTestCompiler.java

commit 1dc9e6f697c0af3ee9712adf2f374fb48666544e
Author: cushon <cushon@google.com>
Date:   Mon Sep 15 09:13:08 2014 -0700

    Ignore try with resources statements until there's a canonical way to use them
    with locks.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75545086

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzer.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByTest.java

commit 711609c0964c054014dcb6ab76bf0d50734cfedb
Author: cushon <cushon@google.com>
Date:   Sun Sep 14 16:39:36 2014 -0700

    Add @LockMethod, @UnlockMethod annotations.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75507096

A	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/annotations/LockMethod.java
A	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/annotations/UnlockMethod.java

commit f352717b21014ede93830a0deca3f7acc24a78eb
Author: cushon <cushon@google.com>
Date:   Sat Sep 13 13:28:26 2014 -0700

    Refactor Replacement API before switching it to use @AutoValue.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75467202

M	core/src/main/java/com/google/errorprone/fixes/AppliedFix.java
M	core/src/main/java/com/google/errorprone/fixes/Replacement.java
M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java

commit 12ff0b46a10065dc2f7691d4184e34431a1d4108
Author: cushon <cushon@google.com>
Date:   Fri Sep 12 16:30:44 2014 -0700

    Allow custom sets of BugCheckers in ErrorProneJavaCompiler
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75422141

M	core/src/main/java/com/google/errorprone/ErrorProneJavaCompiler.java
M	core/src/test/java/com/google/errorprone/ErrorProneJavaCompilerTest.java

commit 33dba149f46227cccf7441a5979c4acf0af408ed
Author: cushon <cushon@google.com>
Date:   Fri Sep 12 15:56:22 2014 -0700

    Use PathFileManager and Jimfs instead of compile-testing's InMemoryFileManager.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75419526

M	core/pom.xml
M	core/src/test/java/com/google/errorprone/CommandLineFlagDisableTest.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelperTest.java
M	core/src/test/java/com/google/errorprone/EndPosTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
A	core/src/test/java/com/google/errorprone/ErrorProneInMemoryFileManager.java
M	core/src/test/java/com/google/errorprone/ErrorProneJavaCompilerTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneTestCompiler.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayHashCodeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayToStringCompoundAssignmentTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayToStringConcatenationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayToStringTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/BadShiftAmountTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ChainingConstructorIgnoresParameterTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CheckReturnValueTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ClassCanBeStaticTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CollectionIncompatibleTypeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ComparisonOutOfRangeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CovariantEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DeadExceptionTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DepAnnTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DivZeroTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ElementsCountedInLoopTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/EmptyIfStatementTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/EqualsNaNTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/FinallyTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceAssistedInjectScopingTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceAssistedParametersTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceInjectOnFinalFieldTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceOverridesGuiceInjectableMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceOverridesJavaxInjectableMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/IncrementDecrementVolatileTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnConstructorsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnSameConstructorTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectInvalidTargetingOnScopingAnnotationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectJavaxInjectOnAbstractMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectJavaxInjectOnFinalFieldTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectMoreThanOneInjectableConstructorTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectMoreThanOneQualifierTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectMoreThanOneScopeAnnotationOnClassTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectOverlappingQualifierAndScopeAnnotationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectScopeAnnotationOnInterfaceOrAbstractClassTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectScopeOrQualifierAnnotationRetentionTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectedConstructorAnnotationsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InvalidPatternSyntaxTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit3TestNotRunTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4SetUpNotRunTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4TearDownNotRunTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4TestNotRunTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffixTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MalformedFormatStringTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MissingCasesInEnumSwitchTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MisusedFormattingLoggerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ModifyingCollectionWithItselfTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NonRuntimeAnnotationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NumericEqualityTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/OrderingFromTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/OverridesTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitiveTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsInvalidPlaceholderTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PrimitiveArrayPassedToVarargsMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ProtoFieldNullComparisonTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ReturnValueIgnoredTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SelfAssignmentTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SelfEqualityTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SelfEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/StaticAccessedFromInstanceTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/StringBuilderInitWithCharTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/StringEqualityTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SuppressWarningsDeprecatedTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/TryFailThrowableTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/WaitNotInLoopTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/WrongParameterPackageTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinderTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByValidatorTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/SynchronizeOnNonFinalFieldTest.java
M	core/src/test/java/com/google/errorprone/matchers/AnnotationTest.java
M	core/src/test/java/com/google/errorprone/matchers/CompilerBasedAbstractTest.java
M	core/src/test/java/com/google/errorprone/matchers/CompoundAssignmentTest.java
M	core/src/test/java/com/google/errorprone/matchers/ConstructorOfClassTest.java
M	core/src/test/java/com/google/errorprone/matchers/DescendantOfAbstractTest.java
M	core/src/test/java/com/google/errorprone/matchers/DescendantOfTest.java
M	core/src/test/java/com/google/errorprone/matchers/DescendantOfTransitiveTest.java
M	core/src/test/java/com/google/errorprone/matchers/InstanceMethodTest.java
M	core/src/test/java/com/google/errorprone/matchers/MethodHasParametersTest.java
M	core/src/test/java/com/google/errorprone/matchers/MethodReturnsNonNullNextTokenTest.java
M	core/src/test/java/com/google/errorprone/matchers/MethodReturnsNonNullStringTest.java
M	core/src/test/java/com/google/errorprone/matchers/MethodReturnsNonNullToStringTest.java
M	core/src/test/java/com/google/errorprone/matchers/NonNullLiteralTest.java
M	core/src/test/java/com/google/errorprone/matchers/StaticMethodTest.java
M	core/src/test/java/com/google/errorprone/suppress/CustomSuppressionTest.java
M	core/src/test/java/com/google/errorprone/suppress/SuppressWarningsTest.java
M	core/src/test/java/com/google/errorprone/suppress/UnsuppressibleTest.java
M	core/src/test/java/com/google/errorprone/util/ASTHelpersTest.java
M	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java

commit c8ae0f7dc79b67291ea6ad1eff8e892edf6e29b9
Author: cushon <cushon@google.com>
Date:   Thu Sep 11 11:52:52 2014 -0700

    Stop using ToolProvider.getSystemJavaCompiler()
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75311916

M	core/src/main/java/com/google/errorprone/ErrorProneJavaCompiler.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinderTest.java

commit f9e62ebf474fa2c05d93cb85c5f1ee1791c5793f
Author: cpovirk <cpovirk@google.com>
Date:   Thu Sep 11 11:22:17 2014 -0700

    Work around a bug in the counting of varargs parameters.
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75308864

M	core/src/main/java/com/google/errorprone/bugpatterns/ChainingConstructorIgnoresParameter.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ChainingConstructorIgnoresParameterNegativeCases.java

commit 98d846d1d4a0e01c3625b735066de786cdea4365
Author: cushon <cushon@google.com>
Date:   Wed Sep 10 13:53:13 2014 -0700

    Fix a bug involving locks in enclosing classes.
    
    The analysis now checks that qualified 'this' accesses correspond to the
    correct instance. Previously they were considered to be globally distinct.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75229559

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinder.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByExpression.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinderTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByTest.java

commit 73b2969216bfb74ce1f30e99c5ba499ba0a1dcc6
Author: cushon <cushon@google.com>
Date:   Wed Sep 10 13:50:38 2014 -0700

    Add a check for code that synchronizes on non-final fields.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75229318

A	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/SynchronizeOnNonFinalField.java
A	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/SynchronizeOnNonFinalFieldTest.java

commit 16991cc5759cc0b22c386690e15ef997b753701f
Author: cushon <cushon@google.com>
Date:   Wed Sep 10 13:15:26 2014 -0700

    Catch UnknownFormatConversionException in MisusedFormattingLogger.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75226019

M	core/src/main/java/com/google/errorprone/bugpatterns/MisusedFormattingLogger.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/MisusedFormattingLoggerPositiveCases.java

commit 9ec3912e7424281e86c687a80dfcd6c03e7a130b
Author: cpovirk <cpovirk@google.com>
Date:   Wed Sep 10 10:40:17 2014 -0700

    Checks, if two constructors in a class both accept |Foo foo| and one calls the other, that the caller passes |foo| as a parameter. The goal is to catch copy-paste errors:
    
    MissileLauncher(Location target, boolean askForConfirmation) {
    ...
    }
    MissileLauncher(Location target) {
    this(target, false);
    }
    MissileLauncher(boolean askForConfirmation) {
    this(TEST_TARGET, false); // "false" should be "askForConfirmation"
    }
    
    (Bonuses: Fix a NPE in HasIdentifier. Expand methodReturnType() to handle unparameterized classes. Introduce ASTHelpers.getType(Tree). Add debugging information to "Saw unexpected error" failures. Add some related tests.)
    
    Finally, I considered widening the check to handle cases in which the variable is not directly assignable, e.g.,
    
    Foo(File f, boolean b) {
    ...
    }
    
    Foo(String s) {
    this("/tmp", false); // "/tmp" should be "new File(s)"
    }
    
    However, I found that this produced poor results in practice, so I cut it.
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75211878

A	core/src/main/java/com/google/errorprone/bugpatterns/ChainingConstructorIgnoresParameter.java
M	core/src/main/java/com/google/errorprone/matchers/HasIdentifier.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java
A	core/src/test/java/com/google/errorprone/bugpatterns/ChainingConstructorIgnoresParameterTest.java
A	core/src/test/java/com/google/errorprone/matchers/HasIdentifierTest.java
A	core/src/test/java/com/google/errorprone/matchers/MethodReturnsTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/ChainingConstructorIgnoresParameterNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/ChainingConstructorIgnoresParameterPositiveCases.java

commit a3805da1b75b6a59b215584594c44b9321bd3e6f
Author: konne <konne@google.com>
Date:   Wed Sep 10 10:30:48 2014 -0700

    Simplify the interface to the dataflow analysis and make it ready to improve speed by passing a path directly into the analysis.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75211008

M	core/src/main/java/com/google/errorprone/JDKCompatible.java
M	core/src/main/java/com/google/errorprone/matchers/DefinitelyNonNull.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	jdk7/src/main/java/com/google/errorprone/JDKShim.java
M	jdk8/src/main/java/com/google/errorprone/JDKShim.java
M	jdk8/src/main/java/com/google/errorprone/dataflow/DataFlow.java
D	jdk8/src/main/java/com/google/errorprone/util/Constants.java
M	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java
M	jdkcompat/src/main/java/com/google/errorprone/JDKCompatibleShim.java

commit 0b66d555f55948b3134be65af16d5b6bde3568b5
Author: eaftan <eaftan@google.com>
Date:   Mon Sep 8 21:53:00 2014 -0700

    Extend nullness analysis to distinguish definitely-null from nullable.
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75083067

M	jdk7/src/main/java/com/google/errorprone/JDKShim.java
M	jdk8/src/main/java/com/google/errorprone/JDKShim.java
M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessValue.java
M	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java
A	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessValueTest.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases1.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases3.java
A	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases4.java
A	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases5.java
M	jdkcompat/src/main/java/com/google/errorprone/JDKCompatibleShim.java

commit 2348bbce3da27bcb330632ade8ec940f8b0d14d4
Author: eaftan <eaftan@google.com>
Date:   Mon Sep 8 15:44:01 2014 -0700

    Revert 'Extend nullness analysis to distinguish definitely-null from nullable.'
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75059462

M	jdk8/src/main/java/com/google/errorprone/JDKShim.java
M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessValue.java
M	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java
D	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessValueTest.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases1.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases3.java
D	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases4.java
D	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases5.java
M	jdkcompat/src/main/java/com/google/errorprone/JDKCompatibleShim.java

commit cc4f0af831ebd100a5e873c45f001bc1d96b9afd
Author: eaftan <eaftan@google.com>
Date:   Mon Sep 8 14:38:38 2014 -0700

    Extend nullness analysis to distinguish definitely-null from nullable.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75053772

M	jdk8/src/main/java/com/google/errorprone/JDKShim.java
M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessValue.java
M	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java
A	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessValueTest.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases1.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases3.java
A	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases4.java
A	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases5.java
M	jdkcompat/src/main/java/com/google/errorprone/JDKCompatibleShim.java

commit c8577817afbd72f9c64223e6944e023f9e4e8d7e
Author: cushon <cushon@google.com>
Date:   Mon Sep 8 07:42:21 2014 -0700

    Remove reflection from JDKCompatible.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=75019820

M	core/src/main/java/com/google/errorprone/JDKCompatible.java
D	jdk7/src/main/java/com/google/errorprone/JDK7Shim.java
A	jdk7/src/main/java/com/google/errorprone/JDKShim.java
D	jdk8/src/main/java/com/google/errorprone/JDK8Shim.java
A	jdk8/src/main/java/com/google/errorprone/JDKShim.java

commit 4c2ac2d724ea82f59a834df2275a7bc40e308700
Author: eaftan <eaftan@google.com>
Date:   Fri Sep 5 16:37:33 2014 -0700

    Add error-handling to ease debugging NPEs when trying to analyze a method with
    no body (i.e., an abstract method).
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74907541

M	jdk8/src/main/java/com/google/errorprone/dataflow/DataFlow.java

commit cae7ac7a9b1170592b1058ca0d48507c128d3691
Author: cpovirk <cpovirk@google.com>
Date:   Thu Sep 4 07:47:36 2014 -0700

    Smooth over some rough edges in the test:
    
    - Don't put the method name in the error message. This not only encourages less verbose expectations but also eliminates the confusing errors that resulting from accidentally writing "triggerNullnessChecker" instead of "triggerNullnessCheckerOnInt."
    - Force callers who pass primitive to explicitly choose whether to autobox. In the process, discover that a few of our tests weren't testing what I thought, and improve the analysis to get most of them right.
    - Create a third file of tests. I thought I might be hitting the javac error limit, though I may be wrong about that. Ultimately the tests should be reorganized further, but this is a start in reducing the number of errors to wade through during debugging.
    
    (Also, simplify visitNode, and increase the symmetry between visitEqualTo and visitNotEqual.)
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74776547

M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases1.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java
A	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases3.java

commit 532c0a83603b093dbbdd68c45f1f06177918fef9
Author: cpovirk <cpovirk@google.com>
Date:   Thu Sep 4 07:41:52 2014 -0700

    Recognize non-null compile-time constants.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74776199

M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java

commit 960dd01f83b6ed7b982fcba1a0c457178c0c912a
Author: cpovirk <cpovirk@google.com>
Date:   Thu Sep 4 07:32:36 2014 -0700

    Stop duplicating information between the result value and the store. New policy:
    - Local variables go into the store (setInformation) and come out of the store (getInformation).
    - Everything else goes into the result value ("return new RegularTransferResult<>(VALUE, ...))") and comes out of TransferInput.getValueOfSubNode.
    
    This saves us the trouble of keeping the two in sync and of worrying what happens if we don't. In particular, update() and updateConditional() are now trivial.
    
    Along the way, improve things around |final| variables referenced by local/anonymous classes:
    - Recognize that they're different variables than any variables of the same name inside the class.
    - Check whether they have constant values available.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74775700

M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationStore.java
M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java

commit 8b12d48a188ef47933924610082c2b10beede472
Author: cpovirk <cpovirk@google.com>
Date:   Thu Sep 4 06:45:22 2014 -0700

    NullnessPropagationStore rework:
    - Fix a bug in leastUpperBound.
    - Minor simplifications.
    - Error checking.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74773112

M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationStore.java
A	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationStoreTest.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases1.java

commit 5c364cf1f4c9e57b04b6ebd33a22500f905334cc
Author: cpovirk <cpovirk@google.com>
Date:   Thu Sep 4 06:21:05 2014 -0700

    Recognize that the methods on java.lang.String never return null.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74772094

M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java

commit 2a8930116c7481361fbff40851ce639d7c0b7ef3
Author: cpovirk <cpovirk@google.com>
Date:   Thu Sep 4 06:08:22 2014 -0700

    Rework handling of field and method accesses and of assignments in general.
    
    Here are some things that now work:
    - obj.field = something; // obj is now non-null because we now look at field accesses even if they are on the LHS
    - intField = nullableValue() // whole expression is non-null because we now see that the implicit intValue() call returns a non-null value
    
    Additionally, I've split the handling of "special" fields and methods (e.g., enum constants, valueOf methods) off from the handling of static fields. This should make it easier for me to hardcode *non-static* methods that are known to return non-null.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74771575

M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java

commit 30a830fa2e37a4f9a0aeb7afc877ffb46583c2df
Author: cpovirk <cpovirk@google.com>
Date:   Thu Sep 4 05:57:17 2014 -0700

    Handle &&, ||, and !.
    
    We're unlikely to care that they themselves return a non-null value (though I've handled that).
    What we do care about is that their conditional-ness is preserved. We do so by returning a ConditionalTransferResult rather than a RegularTransferResult, the latter of which would merge the true and false cases together, throwing away all the information from the comparison.
    I considered changing the vanilla visitNode method to always preserve conditional-ness. However, I was spooked by the fact that this would have done exactly the wrong thing for the ! operator.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74770849

M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases1.java

commit bbb89075095a9e696cae54470ff8d5775429d166
Author: cpovirk <cpovirk@google.com>
Date:   Thu Sep 4 05:45:35 2014 -0700

    Give a value (usually) to the assignment expression itself (in addition to the value that we already give to any LHS variable).
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74770232

M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java

commit 77ddfa9b33356ac2336dbd0c161d8c906b6a8324
Author: cpovirk <cpovirk@google.com>
Date:   Thu Sep 4 05:19:02 2014 -0700

    Give a value to the == and != expressions themselves (in addition to the value that we already give to their arguments).
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74768973

M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases1.java

commit 6b579fddb7ce009fef3442bccc6da4ba4f7ea99b
Author: cpovirk <cpovirk@google.com>
Date:   Wed Sep 3 14:18:53 2014 -0700

    Stop accidentally labeling all method invocations and field accesses as non-null.
    Continue labeling some particular ones that are known to be non-null by adding special handling.
    
    We had intended to label only the objects that they were performed on as non-null, as you can see from their setInformation calls. However, by merely returning NONNULL from the method, we accidentally labeled the expression value itself, too. The main part of this change is to distinguish between the value assigned using setInformation and the value assigned by the return value, defaulting the latter to NULLABLE if we don't know any better.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74720885

M	jdk8/pom.xml
M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java

commit 7f5d5b30f351a6cc9cd348ab887c27e55ea382e0
Author: eaftan <eaftan@google.com>
Date:   Fri Aug 29 17:25:12 2014 -0700

    External error-prone now depends on republished javac artifact.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74434768

M	core/pom.xml
M	jdkcompat/pom.xml
M	pom.xml

commit 29e0ff92cbcc385d295ebaba96c4f603d463257b
Author: cushon <cushon@google.com>
Date:   Fri Aug 29 15:46:37 2014 -0700

    Add better error handling for lock expressions that the analysis doesn't
    handle.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74428083

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinder.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzer.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/IllegalGuardedBy.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByTest.java

commit 2da24beb6ee487d0a175bd13c8dc00ded9da3c8a
Author: cushon <cushon@google.com>
Date:   Fri Aug 29 14:57:22 2014 -0700

    Stop over-catching exceptions: use Java 7's union exception types and
    ReflectiveOperationException.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74424222

M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/ErrorReportingJavaCompiler.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java

commit 0aa31b811dd26df4adf06f7969ca4c671af047f7
Author: cushon <cushon@google.com>
Date:   Fri Aug 29 14:36:23 2014 -0700

    Ignore synthetic constructors.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74422767

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java

commit 16de2678a37e4ffb0e17f23ba26bcbb64d63cf00
Author: cushon <cushon@google.com>
Date:   Fri Aug 29 10:44:14 2014 -0700

    Expunge the parts of JDKCompatible that were only needed for jdk6.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74404301

M	core/src/main/java/com/google/errorprone/JDKCompatible.java
M	core/src/main/java/com/google/errorprone/VisitorState.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedBySymbolResolver.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzer.java
M	jdk7/src/main/java/com/google/errorprone/JDK7Shim.java
M	jdk8/src/main/java/com/google/errorprone/JDK8Shim.java
M	jdkcompat/src/main/java/com/google/errorprone/JDKCompatibleShim.java

commit e6cd3d6c676a71af5cef5e73f94b0136962be398
Author: cushon <cushon@google.com>
Date:   Fri Aug 29 10:38:37 2014 -0700

    Still more post-jdk6 cleanup.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74403855

M	core/src/main/java/com/google/errorprone/ErrorReportingJavaCompiler.java
M	core/src/main/java/com/google/errorprone/SearchingJavaCompiler.java

commit 9459db61f8d7dfc1ff3109eb25484931ecb2ee1d
Author: cushon <cushon@google.com>
Date:   Fri Aug 29 08:41:40 2014 -0700

    More post-jdk6 changes.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74395632

M	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
M	core/src/main/java/com/google/errorprone/ErrorReportingJavaCompiler.java

commit ef8e5fa64520a029ed54266fdebe8edbbdcbdc29
Author: cushon <cushon@google.com>
Date:   Fri Aug 29 08:30:24 2014 -0700

    Drop JDK6 support.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74395048

M	core/pom.xml
M	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
M	core/src/main/java/com/google/errorprone/ErrorProneOptions.java
M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/JDKCompatible.java
M	core/src/main/java/com/google/errorprone/Scanner.java
M	core/src/main/java/com/google/errorprone/SearchResultsPrinter.java
M	core/src/main/java/com/google/errorprone/SuppressionHelper.java
M	core/src/main/java/com/google/errorprone/WrappedTreeMap.java
M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractSuppressWarningsMatcher.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArraysAsListPrimitiveArray.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MalformedFormatString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MissingCasesInEnumSwitch.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MisusedFormattingLogger.java
M	core/src/main/java/com/google/errorprone/bugpatterns/OrderingFrom.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitive.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ReturnValueIgnored.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzer.java
M	core/src/main/java/com/google/errorprone/fixes/AppliedFix.java
M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java
M	core/src/main/java/com/google/errorprone/matchers/CompoundAssignment.java
M	core/src/main/java/com/google/errorprone/matchers/Constructor.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
D	jdk6/pom.xml
D	jdk6/src/main/java/com/google/errorprone/EndPosMap6.java
D	jdk6/src/main/java/com/google/errorprone/JDK6Shim.java
D	jdk6/src/main/java/com/google/errorprone/fixes/AdjustedPosition6.java
D	jdk6/src/main/java/com/google/errorprone/fixes/IndexedPosition6.java
M	jdkcompat/pom.xml
M	pom.xml

commit b6579e7aa4c407383e63f3e5a2e690c32100823f
Author: cushon <cushon@google.com>
Date:   Thu Aug 28 17:44:52 2014 -0700

    Refactor check for generated contructors into ASTHelpers.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74356869

M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java

commit 55aae9e9b4326617f9550006e9dfaedf77d24478
Author: cgdecker <cgdecker@google.com>
Date:   Thu Aug 28 13:28:55 2014 -0700

    Fix Description to not add an extra newline when a CUSTOM link is provided, and to avoid having separate logic for WIKI vs. CUSTOM links to begin with.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74334563

M	core/src/main/java/com/google/errorprone/matchers/Description.java
M	core/src/test/java/com/google/errorprone/matchers/DescriptionTest.java

commit f12c4f58ec0eeccfb193a08b1316c0d50b5e7e7f
Author: mwacker <mwacker@google.com>
Date:   Wed Aug 27 00:44:31 2014 -0700

    Refinements to JUnit 4 error checks
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74198991

M	core/src/main/java/com/google/errorprone/bugpatterns/JUnitAmbiguousTestClass.java
M	core/src/main/java/com/google/errorprone/matchers/JUnitMatchers.java

commit 23957c8c648558a717cd351b5a9b2c7c28adde55
Author: glorioso <glorioso@google.com>
Date:   Tue Aug 26 15:30:33 2014 -0700

    Update JUnitMatchers to check for void return types on JUnit3 test methods,
    setUp(), and tearDown()
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74168446

M	core/src/main/java/com/google/errorprone/matchers/JUnitMatchers.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4SetUpNotRunNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4TearDownNotRunNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4TestNotRunNegativeCase3.java

commit 1785c9154c875107ed5fc6c8226bcec37616810b
Author: lowasser <lowasser@google.com>
Date:   Tue Aug 26 14:46:41 2014 -0700

    Add error-prone bug pattern for == NaN.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74164013

A	core/src/main/java/com/google/errorprone/bugpatterns/EqualsNaN.java
A	core/src/test/java/com/google/errorprone/bugpatterns/EqualsNaNTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/EqualsNaNNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/EqualsNaNPositiveCases.java

commit 986108197e3651e668d36b1ceea0c61f973acb77
Author: cushon <cushon@google.com>
Date:   Mon Aug 25 16:23:27 2014 -0700

    Rename 'ThreadSafe' checker to 'GuardedBy'.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74084036

A	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedBy.java
D	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ThreadSafe.java
A	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzerTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/ThreadSafeTest.java

commit 1b1bcd02e342d3a86a7ae64271a7a68970c047e8
Author: eaftan <eaftan@google.com>
Date:   Mon Aug 25 12:15:46 2014 -0700

    Add static compile(String[], PrintWriter) method to ErrorProneCompiler
    to match com.sun.tools.javac.main.Main.  Will be used by
    plexus-java-compiler-errorprone.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74062051

M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java

commit a1c3a5ffe3f37530e414d048ddd50e97aeab9c2c
Author: eaftan <eaftan@google.com>
Date:   Mon Aug 25 11:57:35 2014 -0700

    Separate Maven examples into (1) bug repro and (2) sanity check that
    error-prone flags an EmptyIf bug.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74060120

M	examples/maven/pom.xml
D	examples/maven/src/main/java/Main.java
D	examples/maven/src/main/java/NeedsAnnotationProcessing.java

commit 8b1ec1a6e9e00d2bc8c6f6eaaf62ad60d92781b9
Author: cpovirk <cpovirk@google.com>
Date:   Mon Aug 25 10:26:36 2014 -0700

    Simplify visitLocalVariable, remove visitMethodAccess, remove TODO (since there are a large number of possible "handle x" tasks).
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74051294

M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java

commit dcca6d3825d5cdd6c0c7bd37470768fe7868a144
Author: cpovirk <cpovirk@google.com>
Date:   Mon Aug 25 10:07:43 2014 -0700

    Use NULLABLE as the default rather than null.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74049589

M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java

commit 728105b0a2836999b1d0ef5ad504d99ce64543bb
Author: cpovirk <cpovirk@google.com>
Date:   Mon Aug 25 10:02:47 2014 -0700

    Add regression tests.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=74049142

M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java

commit f718ad5f0cf9069c490154520ed57185e2e090f6
Author: cushon <cushon@google.com>
Date:   Fri Aug 22 19:05:39 2014 -0700

    Throw IAE instead of using 'assert'.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=73941191

M	core/src/main/java/com/google/errorprone/ErrorReportingJavaCompiler.java
M	core/src/main/java/com/google/errorprone/SearchingJavaCompiler.java

commit 1887e77e5c26437d5259de1395a96cefcab6efe0
Author: cpovirk <cpovirk@google.com>
Date:   Fri Aug 22 09:20:49 2014 -0700

    Avoid NullPointerException when getSource() returns null. The NPE was hiding the stack trace of the real error.
    This can happen if the compiler (well, the error-prone check I'm writing) throws an exception.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=73898986

M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java

commit 93eb8825e0b97b24f8acebc951954313dcd0e979
Author: mwacker <mwacker@google.com>
Date:   Thu Aug 21 16:17:06 2014 -0700

    V1 @RunWith check and ambiguous JUnit test class check. Matches but does not fix error - the fix could be different depending on the context.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=73850059

A	core/src/main/java/com/google/errorprone/bugpatterns/JUnitAmbiguousTestClass.java
M	core/src/main/java/com/google/errorprone/matchers/JUnitMatchers.java

commit 993cdf275971859fd60309af7b842f852ae5a3dc
Author: cgdecker <cgdecker@google.com>
Date:   Thu Aug 21 14:44:05 2014 -0700

    Change ErrorReportingJavaCompiler and SearchingJavaCompiler to propagate the same Scanner through annotation processing rounds rather than creating a new ErrorProneScanner with default checkers each time.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=73842276

M	core/src/main/java/com/google/errorprone/ErrorReportingJavaCompiler.java
M	core/src/main/java/com/google/errorprone/SearchingJavaCompiler.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java

commit 65e7ba59a1eab7b266c3b012476e8321df0491e9
Author: cpovirk <cpovirk@google.com>
Date:   Thu Aug 21 12:10:09 2014 -0700

    Simplifications and new tests.
    - Add tests, including a couple that show bugs.
    - Make NullnessValue an enum, as suggested by Demi's TODO.
    - Implement visitValueLiteral instead of each of visitIntegerLiteral, visitLongLiteral, etc.
    - More aggressively static import, including changing NullnessPropagationTest to work with static-import calls to triggerNullnessChecker.
    - Various other things.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=73829578

M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationStore.java
M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessValue.java
M	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases1.java
M	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java

commit f0268fa8adbe11c168dd294a73624f8186df6f3e
Author: lowasser <lowasser@google.com>
Date:   Mon Aug 18 15:31:59 2014 -0700

    Add error-prone check for new StringBuilder(char).
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=73575507

A	core/src/main/java/com/google/errorprone/bugpatterns/StringBuilderInitWithChar.java
A	core/src/test/java/com/google/errorprone/bugpatterns/StringBuilderInitWithCharTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/StringBuilderInitWithCharNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/StringBuilderInitWithCharPositiveCases.java

commit 98ac6cf12d6daacfae5ed76b00ba7ea2e66b27d0
Author: cushon <cushon@google.com>
Date:   Mon Aug 18 11:25:59 2014 -0700

    Make getTypeFromString/getSymbolFromString handle missing types more
    gracefully.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=73553370

M	core/src/main/java/com/google/errorprone/VisitorState.java

commit 75a510183cd11292083e776b662cece12fc72409
Author: cushon <cushon@google.com>
Date:   Fri Aug 15 13:55:26 2014 -0700

    Readability.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=73411217

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinder.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedBySymbolResolver.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzer.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockSet.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/IllegalGuardedBy.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ThreadSafe.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinderTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/ThreadSafeTest.java

commit 06f598ddfa70466b4d396becb3c5f974b07b54f7
Author: deminguyen <deminguyen@google.com>
Date:   Fri Aug 15 11:03:21 2014 -0700

    Matcher for provably non-null expressions
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=73397622

M	core/src/main/java/com/google/errorprone/JDKCompatible.java
A	core/src/main/java/com/google/errorprone/matchers/DefinitelyNonNull.java
M	jdk6/src/main/java/com/google/errorprone/JDK6Shim.java
M	jdk7/src/main/java/com/google/errorprone/JDK7Shim.java
M	jdk8/src/main/java/com/google/errorprone/JDK8Shim.java
M	jdkcompat/src/main/java/com/google/errorprone/JDKCompatibleShim.java

commit 846d4c65d69ebf0acd9d2c4bdd8901714f730cdc
Author: deminguyen <deminguyen@google.com>
Date:   Thu Aug 14 10:13:00 2014 -0700

    Miscellaneous cleanup
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=73312124

M	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java

commit 40bbae07d04fd8dadcdc620898bfeb7c6b3757d5
Author: konne <konne@google.com>
Date:   Tue Aug 12 16:31:26 2014 -0700

    Fixing maven build for nullness propagation.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=73172564

M	jdk8/pom.xml
M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationStore.java
M	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
M	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java

commit f4f622ff269984942a9b248ccccffa908342874d
Author: konne <konne@google.com>
Date:   Mon Aug 11 17:19:03 2014 -0700

    Adding maven support to data-flow, and making error-prone depend on it.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=73089202

M	pom.xml

commit c05b7b083ae75fd637d230b8b95f60ef03fa44cc
Author: deminguyen <deminguyen@google.com>
Date:   Mon Aug 11 16:25:13 2014 -0700

    Prototype of nullability analysis in error-prone
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=73084694

A	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationStore.java
A	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
A	jdk8/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessValue.java
A	jdk8/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java
A	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases1.java
A	jdk8/src/test/resources/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransferCases2.java

commit d0f56e027e9c2112da64950b20be4d5ae900adbf
Author: konne <konne@google.com>
Date:   Mon Aug 11 10:23:43 2014 -0700

    Fix classpath resolution for maven build.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=73053547

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java

commit 26bf9c3ee01f6977510512a9611bc03ec41d036b
Author: jeremymanson <jeremymanson@google.com>
Date:   Fri Aug 8 13:36:06 2014 -0700

    Delete EmptyStatement.
    
    EmptyStatements are pretty common in reasonable code.  For example:
    
    for (int i = 0; i < arr.length && arr[i] != 3; i++);
    
    finds the first instance of 3 in the array.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=72921583

D	core/src/main/java/com/google/errorprone/bugpatterns/EmptyStatement.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/EmptyStatementNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/EmptyStatementPositiveCases.java

commit 810ba134c3c7b37bf0e32b1ad21d94630739567f
Author: eaftan <eaftan@google.com>
Date:   Thu Aug 7 17:21:02 2014 -0700

    Remove CompilationTestHelper factory method that checks against list of
    all known bug checkers.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=72858239

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayHashCodeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayToStringCompoundAssignmentTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayToStringConcatenationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayToStringTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/BadShiftAmountTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CheckReturnValueTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ClassCanBeStaticTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CollectionIncompatibleTypeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ComparisonOutOfRangeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CovariantEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DeadExceptionTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DepAnnTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DivZeroTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ElementsCountedInLoopTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/EmptyIfStatementTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/FinallyTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceAssistedInjectScopingTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceAssistedParametersTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceInjectOnFinalFieldTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceOverridesGuiceInjectableMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceOverridesJavaxInjectableMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/IncrementDecrementVolatileTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnConstructorsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnSameConstructorTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectInvalidTargetingOnScopingAnnotationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectJavaxInjectOnAbstractMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectJavaxInjectOnFinalFieldTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectMoreThanOneInjectableConstructorTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectMoreThanOneQualifierTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectMoreThanOneScopeAnnotationOnClassTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectOverlappingQualifierAndScopeAnnotationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectScopeAnnotationOnInterfaceOrAbstractClassTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectScopeOrQualifierAnnotationRetentionTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectedConstructorAnnotationsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InvalidPatternSyntaxTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit3TestNotRunTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4SetUpNotRunTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4TearDownNotRunTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4TestNotRunTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffixTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MalformedFormatStringTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MissingCasesInEnumSwitchTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MisusedFormattingLoggerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ModifyingCollectionWithItselfTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NonRuntimeAnnotationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NumericEqualityTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/OrderingFromTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/OverridesTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitiveTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsInvalidPlaceholderTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PrimitiveArrayPassedToVarargsMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ProtoFieldNullComparisonTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ReturnValueIgnoredTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SelfAssignmentTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SelfEqualityTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/StaticAccessedFromInstanceTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/StringEqualityTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SuppressWarningsDeprecatedTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/TryFailThrowableTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/WaitNotInLoopTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/WrongParameterPackageTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByValidatorTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/ThreadSafeTest.java

commit d3bb144151deb50a5ae0844551ad0b37c21c3bca
Author: konne <konne@google.com>
Date:   Thu Aug 7 10:28:00 2014 -0700

    Dataflow analysis for integer constants.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=72823098

M	core/src/main/java/com/google/errorprone/JDKCompatible.java
M	jdk6/src/main/java/com/google/errorprone/JDK6Shim.java
M	jdk7/src/main/java/com/google/errorprone/JDK7Shim.java
M	jdk8/src/main/java/com/google/errorprone/JDK8Shim.java
A	jdk8/src/main/java/com/google/errorprone/dataflow/DataFlow.java
A	jdk8/src/main/java/com/google/errorprone/util/Constants.java
M	jdkcompat/src/main/java/com/google/errorprone/JDKCompatibleShim.java

commit 56d72cdae5ae4db1a4b2934f59ca70f125b1ed2c
Author: glorioso <glorioso@google.com>
Date:   Wed Aug 6 17:31:12 2014 -0700

    Create error-prone matchers for finding setUp() and tearDown() methods that
    look like JUnit3 overridden methods, but are actually part of a JUnit4 test
    class.
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=72772812

A	core/src/main/java/com/google/errorprone/bugpatterns/AbstractJUnit4InitMethodNotRun.java
A	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4SetUpNotRun.java
A	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TearDownNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TestNotRun.java
M	core/src/main/java/com/google/errorprone/matchers/JUnitMatchers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4SetUpNotRunTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4TearDownNotRunTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4SetUpNotRunNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4SetUpNotRunPositiveCaseCustomBefore.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4SetUpNotRunPositiveCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4TearDownNotRunNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4TearDownNotRunPositiveCaseCustomAfter.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4TearDownNotRunPositiveCases.java

commit 2889a5624194b7808f75858ffa438e35f12db323
Author: cushon <cushon@google.com>
Date:   Wed Aug 6 09:53:11 2014 -0700

    Discover all @BugPattern-annotated classes.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=72731590

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java

commit 6df8cbfe0fec7085a92c93d27fb34077b9f9032a
Author: cushon <cushon@google.com>
Date:   Wed Aug 6 08:53:19 2014 -0700

    Miscellaneous clean-up, and add first usages of guava.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=72727041

M	core/pom.xml
M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractSuppressWarningsMatcher.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MalformedFormatString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MisusedFormattingLogger.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ModifyingCollectionWithItself.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NumericEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitive.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PrimitiveArrayPassedToVarargsMethod.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ProtoFieldNullComparison.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfAssignment.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StaticAccessedFromInstance.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StringEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/TryFailThrowable.java
M	core/src/main/java/com/google/errorprone/bugpatterns/WrongParameterPackage.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinder.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByExpression.java
M	core/src/main/java/com/google/errorprone/fixes/Replacement.java
M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java
M	core/src/main/java/com/google/errorprone/matchers/DescendantOf.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/matchers/StaticMethod.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayHashCodeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffixTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzerTest.java
M	core/src/test/java/com/google/errorprone/matchers/AnnotationTest.java
M	core/src/test/java/com/google/errorprone/matchers/ConstructorOfClassTest.java
M	core/src/test/java/com/google/errorprone/matchers/DescendantOfAbstractTest.java
M	core/src/test/java/com/google/errorprone/matchers/MethodHasParametersTest.java

commit 09eb8177b5a198efc90d0eaaed08d96ced39634e
Author: eaftan <eaftan@google.com>
Date:   Mon Aug 4 15:41:14 2014 -0700

    Refactor explicit construction for Description.Builder to static builder
    method to match SuggestedFix.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=72586370

M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ComparisonOutOfRange.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidPatternSyntax.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MalformedFormatString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MissingCasesInEnumSwitch.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MisusedFormattingLogger.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StaticAccessedFromInstance.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ThreadSafe.java
M	core/src/main/java/com/google/errorprone/matchers/Description.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzerTest.java
M	core/src/test/java/com/google/errorprone/matchers/DescriptionTest.java

commit 84a39c0734e779a3ad20dd3a777e9f5ac09ac409
Author: cushon <cushon@google.com>
Date:   Tue Jul 29 15:58:10 2014 -0700

    Add check for missing cases in enum switches.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=72186980

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
A	core/src/main/java/com/google/errorprone/bugpatterns/MissingCasesInEnumSwitch.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/MissingCasesInEnumSwitchTest.java

commit bafbcdbf70dce80f46349a96ff3fd1a272fdfb96
Author: lowasser <lowasser@google.com>
Date:   Thu Jul 24 11:46:36 2014 -0700

    Only match usage of bad placeholders in PreconditionsTooManyArgs, updating the error message summary appropriately.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=71848531

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
A	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsInvalidPlaceholder.java
D	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsTooManyArgs.java
A	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsInvalidPlaceholderTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsTooManyArgsTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsInvalidPlaceholderNegativeCase1.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsInvalidPlaceholderPositiveCase1.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsTooManyArgsNegativeCase1.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsTooManyArgsPositiveCase1.java

commit b66d3b74b75074cc26b999bd9ffd64e2b8b77b7d
Author: cushon <cushon@google.com>
Date:   Fri Jul 18 15:30:49 2014 -0700

    Record Moe equivalence.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=71460506

M	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
M	core/src/main/java/com/google/errorprone/JDKCompatible.java
M	core/src/main/java/com/google/errorprone/JavacErrorDescriptionListener.java
M	core/src/main/java/com/google/errorprone/Scanner.java
M	core/src/main/java/com/google/errorprone/SuppressionHelper.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ComparisonOutOfRange.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit3TestNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TestNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MalformedFormatString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitive.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsExpensiveString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfAssignment.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StaticAccessedFromInstance.java
M	core/src/main/java/com/google/errorprone/bugpatterns/TryFailThrowable.java
M	core/src/main/java/com/google/errorprone/bugpatterns/WaitNotInLoop.java
M	core/src/main/java/com/google/errorprone/bugpatterns/WrongParameterPackage.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinder.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedBySymbolResolver.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzer.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ThreadSafe.java
M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java
M	core/src/main/java/com/google/errorprone/matchers/Constructor.java
M	core/src/main/java/com/google/errorprone/matchers/Description.java
M	core/src/main/java/com/google/errorprone/matchers/JUnitMatchers.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/matchers/MethodHasParameters.java
M	core/src/main/java/com/google/errorprone/matchers/MultiMatcher.java
M	core/src/main/java/com/google/errorprone/matchers/NextStatement.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitiveTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinderTest.java
M	core/src/test/java/com/google/errorprone/matchers/AnnotationTest.java
M	core/src/test/java/com/google/errorprone/matchers/ConstructorOfClassTest.java
M	core/src/test/java/com/google/errorprone/matchers/DescendantOfTransitiveTest.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/DivZeroPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/MalformedFormatStringNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/OverridesPositiveCase2.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/OverridesPositiveCase3.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/OverridesPositiveCase4.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/WaitNotInLoopNegativeCases.java
M	jdk8/src/main/java/com/google/errorprone/EndPosMap8.java

commit 3ca736f3e1c7450d713661a30b016e0576e5d022
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Thu Aug 21 17:10:04 2014 -0700

    Update travis config and README.

M	.travis.yml
D	README
A	README.md

commit ecb0fc5b14a92946ffbfe958b252a35fced8f399
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Thu Aug 21 17:01:31 2014 -0700

    Add travis config.

A	.travis.yml

commit cc09335b3a7f300cd6a41d997c76e78d44331e6a
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Jul 18 15:17:21 2014 -0700

     Unbreak jdk6, jdk8 builds.
    
     Maven's release:update-versions plugin appears to only update versions
     of submodules that the released profile depends on, so bump the
     versions manually.

M	jdk6/pom.xml
M	jdk8/pom.xml

commit c028e398ed41d312d39b9eb2bb0f468b739d0d7a
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Jul 18 14:08:30 2014 -0700

    Fix wildcard imports.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=71448088

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToStringConcatenation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/CollectionIncompatibleType.java
M	core/src/main/java/com/google/errorprone/bugpatterns/FallThroughSuppression.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceAssistedInjectScoping.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TestNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ModifyingCollectionWithItself.java
M	core/src/main/java/com/google/errorprone/bugpatterns/OrderingFrom.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitive.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsExpensiveString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StringEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SuppressWarningsDeprecated.java
M	core/src/main/java/com/google/errorprone/matchers/Enclosing.java

commit 763707a1a7a35abb03aeff2e7f5703052ba9b69d
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Jul 18 14:07:50 2014 -0700

    Refactor SuggestedFix API.
    
    - SuggestedFix is now immutable. Fixes can be created using factory methods for
    single-operation fixes, or by using a builder that chains several operations
    together.
    - Building an empty SuggestedFix is now illegal.
    
    RELNOTES: none
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=71447261

M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractReturnValueIgnored.java
M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractSuppressWarningsMatcher.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayHashCode.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToStringCompoundAssignment.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToStringConcatenation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArraysAsListPrimitiveArray.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BadShiftAmount.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ClassCanBeStatic.java
M	core/src/main/java/com/google/errorprone/bugpatterns/CollectionIncompatibleType.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ComparisonOutOfRange.java
M	core/src/main/java/com/google/errorprone/bugpatterns/CovariantEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/DeadException.java
M	core/src/main/java/com/google/errorprone/bugpatterns/DepAnn.java
M	core/src/main/java/com/google/errorprone/bugpatterns/DivZero.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ElementsCountedInLoop.java
M	core/src/main/java/com/google/errorprone/bugpatterns/EmptyIfStatement.java
M	core/src/main/java/com/google/errorprone/bugpatterns/EmptyStatement.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceAssistedInjectScoping.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceAssistedParameters.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceInjectOnFinalField.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceOverridesGuiceInjectableMethod.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceOverridesJavaxInjectableMethod.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnConstructors.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnSameConstructor.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectInvalidTargetingOnScopingAnnotation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectJavaxInjectOnAbstractMethod.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectJavaxInjectOnFinalField.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectMoreThanOneInjectableConstructor.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectMoreThanOneQualifier.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectMoreThanOneScopeAnnotationOnClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectOverlappingQualifierAndScopeAnnotation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectScopeAnnotationOnInterfaceOrAbstractClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectScopeOrQualifierAnnotationRetention.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectedConstructorAnnotations.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidPatternSyntax.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit3TestNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TestNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffix.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MalformedFormatString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MisusedFormattingLogger.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ModifyingCollectionWithItself.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NonRuntimeAnnotation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NumericEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/OrderingFrom.java
M	core/src/main/java/com/google/errorprone/bugpatterns/Overrides.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNull.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitive.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsTooManyArgs.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ProtoFieldNullComparison.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ProtoStringFieldReferenceEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfAssignment.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StaticAccessedFromInstance.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StringEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/TryFailThrowable.java
M	core/src/main/java/com/google/errorprone/bugpatterns/WaitNotInLoop.java
M	core/src/main/java/com/google/errorprone/bugpatterns/WrongParameterPackage.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ThreadSafe.java
M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java
M	core/src/test/java/com/google/errorprone/fixes/AppliedFixTest.java

commit 6bce9610d3445620410ede0ed06585a910b7e850
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Jul 18 14:07:09 2014 -0700

    Refactor diagnostic message creation to (1) ensure that the wiki link is always
    added, and (2) make custom messages more flexible.
    
    As our checks have gotten more complicated, we've started to need multiple
    different error messages from one check.  Previously you could use the
    formatSummary attribute of the BugPattern annotation to customize the message,
    but to make totally different messages you would have to work around it by
    giving a blank message template and interpolating the whole message.  In
    addition, it was easy to accidentally leave off the wiki link when using a
    custom message.
    
    I've removed the formatSummary attribute from the BugPattern annotation.  Now
    when you construct a Description, you can either use the summary from the
    BugPattern annotation, or you give a custom error message.  The Description
    now handles adding the "[checkname]" and link to the message printed by the
    compiler or displayed in Tricorder.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=71445195

M	annotation/src/main/java/com/google/errorprone/BugPattern.java
M	core/src/main/java/com/google/errorprone/JavacErrorDescriptionListener.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ComparisonOutOfRange.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidPatternSyntax.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MalformedFormatString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MisusedFormattingLogger.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StaticAccessedFromInstance.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ThreadSafe.java
M	core/src/main/java/com/google/errorprone/matchers/Description.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzerTest.java
M	core/src/test/java/com/google/errorprone/matchers/DescriptionTest.java

commit 6a6fa36743cd3557d56c9edad66eb56bf32acb96
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Jul 18 14:06:28 2014 -0700

    Fix jdk6 maven build.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=71393160

M	core/pom.xml
M	core/src/main/java/com/google/errorprone/JDKCompatible.java
M	core/src/main/java/com/google/errorprone/VisitorState.java
M	core/src/main/java/com/google/errorprone/bugpatterns/IncrementDecrementVolatile.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MisusedFormattingLogger.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedBySymbolResolver.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByUtils.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzer.java
A	jdk6/pom.xml
A	jdk6/src/main/java/com/google/errorprone/EndPosMap6.java
A	jdk6/src/main/java/com/google/errorprone/JDK6Shim.java
A	jdk6/src/main/java/com/google/errorprone/fixes/AdjustedPosition6.java
A	jdk6/src/main/java/com/google/errorprone/fixes/IndexedPosition6.java
M	jdk7/src/main/java/com/google/errorprone/EndPosMap7.java
M	jdk7/src/main/java/com/google/errorprone/JDK7Shim.java
M	jdk8/src/main/java/com/google/errorprone/EndPosMap8.java
M	jdk8/src/main/java/com/google/errorprone/JDK8Shim.java
M	jdkcompat/src/main/java/com/google/errorprone/JDKCompatibleShim.java
M	pom.xml

commit 8c6a591e1ed6d3d4e15745a36056784b8bd219a5
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Jul 18 14:05:44 2014 -0700

    Fix handling of 'this' during lock expression resolution.
    
    The lock expression resolution logic now distinguishes correctly between
    'simple' this accesses (e.g. this.foo) and 'named' this accesses (e.g.
    OuterClass.this.foo).
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=71377361

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinder.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByExpression.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedBySymbolResolver.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByUtils.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzer.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinderTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByValidatorTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/ThreadSafeTest.java

commit a4fca1b28415af4af5352c9ff3b3d2d47629c7db
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Jul 18 14:04:59 2014 -0700

    Improve assertion message when diagnostics don't match, and remove duplication
    of test for check name in the diagnostic.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=71210907

M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java

commit 0a4ec87970486075561b6bf7792081db9a0da7a1
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Jul 18 14:04:17 2014 -0700

    Improve StringEquality fixes:
    
    - use Objects.equals(String, String) instead of x.equals(y) unless at least one
    operand is known to be non-null
    - use isEmpty() instead of comparing to an empty string literal
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=71184752

M	core/src/main/java/com/google/errorprone/bugpatterns/StringEquality.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/StringEqualityPositiveCases.java

commit 3045f19e93e71640e90121e1dd7423eef4963c7c
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Jul 18 14:03:31 2014 -0700

    Locks held over try/finally statements are also held in the catch block.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=71104325

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzer.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/ThreadSafeTest.java

commit 577b03ac9da26a25d726f9511e70efb201af8317
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Jul 18 14:02:47 2014 -0700

    Include class literals for non-null literal matcher
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=71103569

M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
A	core/src/test/java/com/google/errorprone/matchers/NonNullLiteralTest.java

commit fa784d290c91a868faca2d16569830565efe5b96
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Jul 18 14:02:05 2014 -0700

    Test infrastructure now confirms that check name is included in diagnostics.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=70983731

M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelperTest.java
M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayHashCodeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayToStringCompoundAssignmentTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayToStringConcatenationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayToStringTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/BadShiftAmountTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CheckReturnValueTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ClassCanBeStaticTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CollectionIncompatibleTypeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ComparisonOutOfRangeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CovariantEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DeadExceptionTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DepAnnTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DivZeroTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ElementsCountedInLoopTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/EmptyIfStatementTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/FinallyTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceAssistedInjectScopingTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceAssistedParametersTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceInjectOnFinalFieldTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceOverridesGuiceInjectableMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceOverridesJavaxInjectableMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/IncrementDecrementVolatileTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnConstructorsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnSameConstructorTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectInvalidTargetingOnScopingAnnotationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectJavaxInjectOnAbstractMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectJavaxInjectOnFinalFieldTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectMoreThanOneInjectableConstructorTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectMoreThanOneQualifierTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectMoreThanOneScopeAnnotationOnClassTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectOverlappingQualifierAndScopeAnnotationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectScopeAnnotationOnInterfaceOrAbstractClassTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectScopeOrQualifierAnnotationRetentionTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectedConstructorAnnotationsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InvalidPatternSyntaxTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit3TestNotRunTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4TestNotRunTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffixTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MalformedFormatStringTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MisusedFormattingLoggerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ModifyingCollectionWithItselfTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NonRuntimeAnnotationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NumericEqualityTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/OrderingFromTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/OverridesTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitiveTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsTooManyArgsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PrimitiveArrayPassedToVarargsMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ProtoFieldNullComparisonTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ReturnValueIgnoredTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SelfAssignmentTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SelfEqualityTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SelfEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/StaticAccessedFromInstanceTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/StringEqualityTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SuppressWarningsDeprecatedTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/TryFailThrowableTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/WaitNotInLoopTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/WrongParameterPackageTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByValidatorTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/ThreadSafeTest.java
M	core/src/test/java/com/google/errorprone/matchers/CompilerBasedAbstractTest.java

commit a66ceecd95381053a6847d6871878a5f80a9848d
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Jul 18 14:01:30 2014 -0700

    Don't report false positives for members guarded by ReadWriteLocks.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=70920491

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzer.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/ThreadSafeTest.java

commit c70a6ed0bd86f5f96e424aa4e6712b24c038b147
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Jul 18 14:00:54 2014 -0700

    JUnit4TestNotRun checker now understands that @Test, @Before, and @After
    annotations are inherited by overriding methods.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=70907724

M	core/src/main/java/com/google/errorprone/matchers/JUnitMatchers.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4TestNotRunTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4TestNotRunBaseClass.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4TestNotRunNegativeCase5.java

commit ea5dad3c7e0f16de2f9c92b71d21798fa7d426d1
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Jul 18 14:00:17 2014 -0700

    Delete unused JUnit4TestNotRun test case.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=70907125

D	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4TestNotRunPositiveCase3.java

commit e51574403a55ea81ee5f22dd8762e37ac21d6fcf
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Jul 18 13:59:39 2014 -0700

    Fix TryFailThrowable check to work with JUnit 4.11
    ------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=70749037

M	core/src/main/java/com/google/errorprone/bugpatterns/TryFailThrowable.java

commit c5660d938ac9083aded60d31f6e898bc09486b8f
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Jul 18 13:59:01 2014 -0700

    Add a Matcher for a whitelist of methods that never return null
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=70736188

M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
A	core/src/test/java/com/google/errorprone/matchers/MethodReturnsNonNullNextTokenTest.java
A	core/src/test/java/com/google/errorprone/matchers/MethodReturnsNonNullStringTest.java
A	core/src/test/java/com/google/errorprone/matchers/MethodReturnsNonNullToStringTest.java

commit 3bb0cda3047bee2bf7d3fe0d41ed771d4c470c3b
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Jul 18 13:58:23 2014 -0700

    Add TODO for safer fix to StringEquality.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=70420560

M	core/src/main/java/com/google/errorprone/bugpatterns/StringEquality.java

commit 269c29da8ab1c02e7bf22c6a9bb21d7be45d126a
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Jul 18 13:57:44 2014 -0700

    Reject guard expressions that contain only a simple type name.
    
    e.g. @GuardedBy("MyClass") vs. @GuardedBy("MyClass.class")
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=70365862

M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinder.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByValidatorTest.java

commit 4c010f5337dbc312c83fb16294b82e805ac5d19f
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Jul 18 13:57:09 2014 -0700

    Improved error message for StaticAccessedFromInstance.  Message now tells you
    whether it was a variable or a method that matched, the name of the
    variable or method, and the correct replacement.  For example:
    
    Old message: "A static variable or method should not be accessed from an
    instance"
    New message: "Static variable foo should not be accessed from an object instance; instead use MyClass.foo"
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=70354383

M	core/src/main/java/com/google/errorprone/bugpatterns/StaticAccessedFromInstance.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/StaticAccessedFromInstancePositiveCase1.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/StaticAccessedFromInstancePositiveCase2.java

commit 96ced9da4ee50779768c9451d1308bbd1682edfa
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Jul 18 13:56:31 2014 -0700

    JUnit4TestNotRun should match on test runners that are subclasses of known
    junit4 test runners.
    
    RELNOTES: JUnit4TestNotRun now matches subclasses of known test runners.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=70288575

M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TestNotRun.java
M	core/src/main/java/com/google/errorprone/matchers/JUnitMatchers.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4TestNotRunTest.java

commit 568f8fb22ff96462a193ab630a0de2699c21c4d9
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Jul 18 13:55:50 2014 -0700

    Initial implementation of @GuardedBy analysis.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=70283996

M	core/pom.xml
M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByExpression.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByUtils.java
M	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByValidator.java
A	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzer.java
A	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockSet.java
A	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ThreadSafe.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinderTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzerTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/ThreadSafeTest.java

commit d51f4a86b4562f3a74f0480cc9133d148f79bbfd
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Jul 18 13:55:00 2014 -0700

    Make ASTHelpers.getSymbol(MethodInvocationTree) robust to erroneous ASTs.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=70042934

M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java

commit 6fbb811eddcffbb31e1b256af2652e35c20a3fa3
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Jul 18 13:54:27 2014 -0700

    Check that test programs are well-formed: they shouldn't produce any
    diagnostics when compiled without error-prone enabled.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=69964474

M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
A	core/src/test/java/com/google/errorprone/CompilationTestHelperTest.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/MalformedFormatStringPositiveCases.java

commit a9bd9294f9b1c9e5bb07a050330241bd993a86fa
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Jul 18 13:53:51 2014 -0700

    Allow custom flags to be passed to assertCompileFailsWithMessages.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=69954317

M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java

commit 471502d4fc4f7483c11e98827913a40e350bdf57
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Jul 18 13:53:14 2014 -0700

    Replace usages of JUnitMatchers' static methods with equivalent ones on Hamcrest's CoreMatchers or Matchers
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=69952436

M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java

commit c14bae0f978f6da32661fccd3a5ad4402560e588
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Jul 18 13:52:40 2014 -0700

    Switch from using JUnit's StringContains Matcher class to JUnitMatcher.containString method
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=69841402

M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java

commit c139a55a1606058a3c78ce620789afacd8d18b67
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Jul 18 13:51:25 2014 -0700

    Change bug marker format for test files.
    
    This change improves the bug marker format we use for test files.  Previously
    the bug markers looked like:
    //BUG: Suggestion includes "foo.bar()"
    
    With this change, they look like:
    // BUG: Diagnostic contains: foo.bar()
    
    This change also allows you to check that multiple substrings all appear in the
    diagnostic:
    // BUG: Diagnostic contains: foo.bar()
    // bar.baz()
    // baz.foo()
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=69778023

M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java
M	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByValidatorTest.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayEqualsPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayEqualsPositiveCases2.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayHashCodePositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayHashCodePositiveCases2.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayStringConcatenationPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayToStringCompoundAssignmentPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayToStringPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/BadShiftAmountPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/CheckReturnValuePositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ClassCanBeStaticPositiveCase1.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ClassCanBeStaticPositiveCase2.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ClassCanBeStaticPositiveCase3.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/CollectionIncompatibleTypePositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ComparisonOutOfRangePositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/CovariantEqualsPositiveCase1.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/CovariantEqualsPositiveCase2.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/CovariantEqualsPositiveCase3.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/CovariantEqualsPositiveCase4.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/CovariantEqualsPositiveCase5.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/DeadExceptionPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/DepAnnPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/DivZeroPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ElementsCountedInLoopPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/EmptyIfStatementPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/FinallyPositiveCase1.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/FinallyPositiveCase2.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceAssistedInjectScopingPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceAssistedParametersPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceInjectOnFinalFieldPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceOverridesGuiceInjectableMethodPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceOverridesJavaxInjectableMethodPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/IncrementDecrementVolatilePositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnConstructorsPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnSameConstructorPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InjectInvalidTargetingOnScopingAnnotationPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InjectJavaxInjectOnAbstractMethodPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InjectJavaxInjectOnFinalFieldPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InjectMoreThanOneInjectableConstructorPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InjectMoreThanOneQualifierPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InjectMoreThanOneScopeAnnotationOnClassPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InjectOverlappingQualifierAndScopeAnnotationPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InjectScopeAnnotationOnInterfaceOrAbstractClassPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InjectScopeOrQualifierAnnotationRetentionPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InjectedConstructorAnnotationsPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InvalidPatternSyntaxPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit3TestNotRunPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4TestNotRunPositiveCase1.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4TestNotRunPositiveCase2.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4TestNotRunPositiveCase3.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffixPositiveCase1.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffixPositiveCase2.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/MalformedFormatStringPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/MisusedFormattingLoggerPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ModifyingCollectionWithItselfPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/NonRuntimeAnnotationPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/NumericEqualityPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/OrderingFromPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/OverridesPositiveCase1.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/OverridesPositiveCase2.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/OverridesPositiveCase3.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/OverridesPositiveCase4.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/OverridesPositiveCase5.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPositiveCase1.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPositiveCase2.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPositiveCase3.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitivePositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsTooManyArgsPositiveCase1.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/PrimitiveArrayPassedToVarargsMethodPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ProtoFieldNullComparisonPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ReturnValueIgnoredPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/SelfAssignmentPositiveCases1.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/SelfAssignmentPositiveCases2.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/SelfEqualityPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/SelfEqualsPositiveCase1.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/SelfEqualsPositiveCase2.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/StaticAccessedFromInstancePositiveCase1.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/StaticAccessedFromInstancePositiveCase2.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/StringEqualityPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/SuppressWarningsDeprecatedPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/TryFailThrowablePositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/WaitNotInLoopPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/WrongParameterPackagePositiveCases.java

commit 28a89991aba5ea47caf919d1b2363f216c5edd96
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Jul 18 13:50:48 2014 -0700

    Add a matcher for non-null literals
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=69650238

M	core/src/main/java/com/google/errorprone/matchers/Matchers.java

commit 84ef442ab669520d126f74123da5cb6f94862818
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Jul 18 13:50:13 2014 -0700

    Replaced import of org.hamcrest.text.StringContains with org.hamcrest.Matchers
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=69609348

M	core/src/test/java/com/google/errorprone/ErrorProneJavaCompilerTest.java

commit d1f8d5a9c8fbe29e95c559de449493560c6ef56e
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Jul 18 13:49:37 2014 -0700

    Initial implementation of @GuardedBy lock expression resolution.
    
    Includes an error-prone check to validate that @GuardedBy annotations contain
    legal lock expressions. Does not include any analysis of operations on guarded
    fields/methods.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=69572567

M	core/pom.xml
M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
A	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinder.java
A	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByExpression.java
A	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedBySymbolResolver.java
A	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByUtils.java
A	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByValidator.java
A	core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/IllegalGuardedBy.java
A	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinderTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByValidatorTest.java

commit bba21dad152b4608bddb1ba84cd39616e105ae53
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Jul 18 13:48:53 2014 -0700

    ASTHelpers.getSymbol(MethodInvocationTree) should return a MethodSymbol.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=69192502

M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java

commit 7f9d45dd5594bddafcc093bf367b88433ffe30dc
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Jul 18 13:48:16 2014 -0700

    Improve error message for MisusedFormattingLogger.
    
    Adds additional information on unmatched single quotes to the wiki entry, and
    modifies the error message to include a link to the wiki.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=68917022

M	core/src/main/java/com/google/errorprone/bugpatterns/MisusedFormattingLogger.java

commit 8d7cf649af8fc9978f236d16b0e6977d5d96fd4b
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri May 23 15:16:45 2014 -0700

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	jdk7/pom.xml
M	jdkcompat/pom.xml
M	pom.xml

commit b7d06dd45f4277e6d965a523ca23876b3ca51c4f
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri May 23 15:16:43 2014 -0700

    [maven-release-plugin] prepare release v1.1.2

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	jdk7/pom.xml
M	jdkcompat/pom.xml
M	pom.xml

commit bdbc9526753ff6b39e8f99c8099a98747d2c107f
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri May 23 15:00:24 2014 -0700

    Remove requirement that the volatile variable must be incremented by
    exactly 1.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=67802000

M	core/src/main/java/com/google/errorprone/bugpatterns/IncrementDecrementVolatile.java

commit 895f46002974e3f4c30c7ac56b67b7ec5aa45029
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri May 23 14:59:57 2014 -0700

    Replace various matchers for modifiers with one true hasModifiers()
    matcher.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=67726191

M	core/src/main/java/com/google/errorprone/bugpatterns/ClassCanBeStatic.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit3TestNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TestNotRun.java
D	core/src/main/java/com/google/errorprone/matchers/ClassModifier.java
M	core/src/main/java/com/google/errorprone/matchers/JUnitMatchers.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
D	core/src/main/java/com/google/errorprone/matchers/MethodModifier.java

commit 6985609077e5095ebca6d2474cc8e86ade03596f
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri May 23 14:59:27 2014 -0700

    Remove fix from WaitNotInLoop.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=67716299

M	core/src/main/java/com/google/errorprone/bugpatterns/WaitNotInLoop.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/WaitNotInLoopPositiveCases.java

commit 717daf6b0ae0d1f8219216981d2a13a06c8ba8a4
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri May 23 14:58:57 2014 -0700

    Add checker for incrementing or decrementing a volatile without
    explicit locking.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=67711102

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
A	core/src/main/java/com/google/errorprone/bugpatterns/IncrementDecrementVolatile.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/IncrementDecrementVolatileTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/IncrementDecrementVolatileNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/IncrementDecrementVolatilePositiveCases.java

commit 4b6f76acc199d3a64cd5302f458e9a38a9b9afd1
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Tue May 13 15:09:48 2014 -0700

    Fix java 6 compilation failure.

M	core/src/main/java/com/google/errorprone/matchers/Matchers.java

commit 6631ef8f4f49b9c1159aff06d5e43fbe89488cba
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Tue May 13 13:51:09 2014 -0700

    Rename idea-plugin module.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=66910819

A	idea_plugin/idea-plugin.iml
A	idea_plugin/src/com/google/errorprone/intellij/ErrorProneIdeaBundle.java
A	idea_plugin/src/com/google/errorprone/intellij/ErrorProneIdeaBundle.properties
A	idea_plugin/src/com/google/errorprone/intellij/ErrorProneIdeaCompiler.java

commit 10a9fee113d5fde0b69aaf13eb0532f3133a9788
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Tue May 13 13:49:56 2014 -0700

    Update description construction for InvalidPatternSyntax.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=66813339

M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidPatternSyntax.java

commit 3bfab810b16fb0cba282c026d180f142687fc550
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Tue May 13 13:49:07 2014 -0700

    InvalidPatternSyntax: Show the user the error message from Pattern.compile() to make it easier to debug.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=66809812

M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidPatternSyntax.java
M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InvalidPatternSyntaxPositiveCases.java

commit 702129b50ac80e7e808015b33942c08b18a4f1ff
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Tue May 13 13:48:21 2014 -0700

    Provide the check name that generated a match.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=66675396

M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ComparisonOutOfRange.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MalformedFormatString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MisusedFormattingLogger.java
M	core/src/main/java/com/google/errorprone/matchers/Description.java
A	core/src/test/java/com/google/errorprone/matchers/DescriptionTest.java

commit b79cc8970e47b000f09dd916b7e2d7de9b87d15a
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Tue May 13 13:46:15 2014 -0700

    Improve description for Finally check.
    
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=66238965

M	core/src/main/java/com/google/errorprone/bugpatterns/Finally.java

commit 848b9cfcfdb263b6cdecf0baef72f058b78b3677
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Tue May 13 13:44:46 2014 -0700

    Made MisusedFormattingLogger switch method type rather than format string when the method and string are mismatched.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=65458942

M	core/src/main/java/com/google/errorprone/bugpatterns/MisusedFormattingLogger.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/MisusedFormattingLoggerNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/MisusedFormattingLoggerPositiveCases.java

commit d23a80488a66472eb98bd28722e14b9c249b69b4
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Tue May 13 13:43:20 2014 -0700

    Fix tabs.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=64726183

M	core/src/main/java/com/google/errorprone/bugpatterns/ClassCanBeStatic.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ComparisonOutOfRange.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnConstructors.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectInvalidTargetingOnScopingAnnotation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectOverlappingQualifierAndScopeAnnotation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TestNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitive.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsExpensiveString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ReturnValueIgnored.java
M	core/src/main/java/com/google/errorprone/bugpatterns/WaitNotInLoop.java
M	docgen/src/main/java/com/google/errorprone/DocGen.java

commit 582676ae9ddf1a8c6223d7bef517d6d08f1fdb61
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Tue May 13 13:42:37 2014 -0700

    Add isEmpty() method to Fix interface.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=64715478

M	core/src/main/java/com/google/errorprone/fixes/Fix.java
M	core/src/main/java/com/google/errorprone/fixes/NoFix.java
M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java

commit e8c42351fe0e4a85078b3f5972a9878dbf4c67c1
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Tue May 13 13:41:00 2014 -0700

    Delete UnneededConditionalOperator check. This check doesn't meet the
    criteria for error-prone warnings or errors, because it doesn't flag
    something with significant impact.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=64654827

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
D	core/src/main/java/com/google/errorprone/bugpatterns/UnneededConditionalOperator.java
D	core/src/test/java/com/google/errorprone/bugpatterns/UnneededConditionalOperatorTest.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/UnneededConditionalOperatorNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/UnneededConditionalOperatorPositiveCases.java

commit e3459d893ca7b4a1c523e3f78de5e2479ca1f377
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Tue May 13 13:40:13 2014 -0700

    Add checker for injected constructor annotations.
    
    Add two matchers to match constructors and boolean literals respectively.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=64578069

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
A	core/src/main/java/com/google/errorprone/bugpatterns/InjectedConstructorAnnotations.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/InjectedConstructorAnnotationsTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/InjectedConstructorAnnotationsNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/InjectedConstructorAnnotationsPositiveCases.java

commit 2fe5ee0bb1fba2955502100fd22960e1fe547887
Author: Radoslaw Burny <rburny@google.com>
Date:   Tue Apr 8 09:22:22 2014 -0700

    MalformedFormatString - finished first phase
    
    * added more specific format string (I intend to have specific error message for each of printf failure modes)
    * support for non-literal formats (understands at least final variables)
    * fixed false positives caused by templated types
    * supported more methods - I think all built-in printf-alikes except java.io.Console
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=64541102

M	core/src/main/java/com/google/errorprone/bugpatterns/MalformedFormatString.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/MalformedFormatStringNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/MalformedFormatStringPositiveCases.java

commit b862c38e58c71602bfb3dff976a05a7166295d28
Author: Louis Wasserman <lowasser@google.com>
Date:   Tue Apr 8 09:21:48 2014 -0700

    Add license_headers_test to error-prone, and add appropriately dated Apache licenses to each file that was missing them.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=64503787

M	core/src/main/java/com/google/errorprone/JDKCompatible.java
M	core/src/main/java/com/google/errorprone/SuppressionHelper.java
M	core/src/main/java/com/google/errorprone/WrappedTreeMap.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnConstructors.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnSameConstructor.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectOverlappingQualifierAndScopeAnnotation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ProtoFieldNullComparison.java
M	core/src/main/java/com/google/errorprone/bugpatterns/package-info.java
M	core/src/main/java/com/google/errorprone/fixes/package-info.java
M	core/src/main/java/com/google/errorprone/matchers/package-info.java
M	core/src/main/java/com/google/errorprone/suppliers/package-info.java
M	core/src/main/java/com/google/errorprone/util/package-info.java
M	core/src/test/java/com/google/errorprone/ErrorProneTestCompiler.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnConstructorsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnSameConstructorTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectOverlappingQualifierAndScopeAnnotationTest.java
M	core/src/test/java/com/google/errorprone/util/ASTHelpersTest.java
M	core/src/test/java/com/google/errorprone/util/InheritedAnnotation.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/CollectionIncompatibleTypeClassCast.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/CollectionIncompatibleTypeOutOfBounds.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceOverridesGuiceInjectableMethodNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceOverridesGuiceInjectableMethodPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnConstructorsNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnConstructorsPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnSameConstructorNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnSameConstructorPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InjectOverlappingQualifierAndScopeAnnotationNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InjectOverlappingQualifierAndScopeAnnotationPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ProtoFieldNullComparisonNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ProtoFieldNullComparisonPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/WrongParameterPackageNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/WrongParameterPackagePositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/proto/ProtoTest.java
M	examples/ant/src/Main.java
M	examples/gradle/src/main/java/Main.java
M	examples/maven/src/main/java/Main.java
M	jdk7/src/main/java/com/google/errorprone/EndPosMap7.java
M	jdk7/src/main/java/com/google/errorprone/JDK7Shim.java
M	jdk7/src/main/java/com/google/errorprone/fixes/AdjustedPosition7.java
M	jdk7/src/main/java/com/google/errorprone/fixes/IndexedPosition7.java
M	jdk8/src/main/java/com/google/errorprone/EndPosMap8.java
M	jdk8/src/main/java/com/google/errorprone/JDK8Shim.java
M	jdk8/src/main/java/com/google/errorprone/fixes/AdjustedPosition8.java
M	jdk8/src/main/java/com/google/errorprone/fixes/IndexedPosition8.java
M	jdkcompat/src/main/java/com/google/errorprone/ErrorProneEndPosMap.java
M	jdkcompat/src/main/java/com/google/errorprone/JDKCompatibleShim.java
M	jdkcompat/src/main/java/com/google/errorprone/fixes/AbstractAdjustedPosition.java
M	jdkcompat/src/main/java/com/google/errorprone/fixes/AbstractIndexedPosition.java

commit 6daae54b6f92d079250d3f31671da37e32209d85
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Thu Apr 3 13:09:14 2014 -0700

    Remove unused exception.

M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/matchers/AnnotationHasArgumentWithValueTest.java

commit d33470125252c44861dcd5674ade0dd95153783d
Author: Amin Shali <amshali@google.com>
Date:   Thu Apr 3 13:06:55 2014 -0700

    Fixed an IndexOutOfBounds issue in Suppliers.java in methods
    `genericTypeOf` and `genericTypeOfType` where we fail in some cases when
    the input 'n' is greater than the number of type arguments. Technically
    it should not happen. However, sometimes we get faulty information from
    javac AST.

M	core/src/main/java/com/google/errorprone/suppliers/Suppliers.java

commit c82cd5b16bb57107d450f7e8bed6d856c2609671
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Thu Apr 3 13:05:41 2014 -0700

    Degrade gracefully if jdk7 and jdk8 versions of error-prone are
    available.

M	core/src/main/java/com/google/errorprone/JDKCompatible.java
M	jdk8/src/main/java/com/google/errorprone/JDK8Shim.java

commit 3ca43a5546ee3df815b408d0c9b4673dce1bcb2a
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Wed Apr 2 18:06:50 2014 -0700

    Cleanup: sort imports, de-lint.

M	core/src/main/java/com/google/errorprone/ErrorProneJavaCompiler.java
M	core/src/main/java/com/google/errorprone/Scanner.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MisusedFormattingLogger.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PrimitiveArrayPassedToVarargsMethod.java
M	core/src/test/java/com/google/errorprone/ErrorProneJavaCompilerTest.java

commit 06bded33429b6daa027f8d0526f23b20f1990bcd
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Wed Apr 2 17:44:42 2014 -0700

    Fix a ClassCastException when getting an uninferred method return type.

M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/CheckReturnValuePositiveCases.java

commit 1efae0d9ff9aedfd49702d8f5bce2f5ab46c6ad4
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Tue Apr 1 20:36:57 2014 -0700

    Cleanup: @RunWith annotations, explicit tmpdirs, findbugs 1.3.x compat.

M	core/src/main/java/com/google/errorprone/bugpatterns/MisusedFormattingLogger.java
M	core/src/test/java/com/google/errorprone/ErrorProneJavaCompilerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MisusedFormattingLoggerTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PrimitiveArrayPassedToVarargsMethodTest.java

commit 058cbc29f7eff3f7cd7fecc1e5898fb87e80c2cb
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Apr 1 15:27:09 2014 -0700

    Remove .idea from .gitignore

M	.gitignore

commit db8fe007096a153233766143ecc7cd935d69fe1b
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Apr 1 15:18:08 2014 -0700

    Address Eclipse compiler warnings

M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/matchers/AnnotationHasArgumentWithValueTest.java
M	core/src/test/java/com/google/errorprone/matchers/CompilerBasedAbstractTest.java

commit 24b3b549ed3f36ec7373f3fbc28c53e6b6f39d9a
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Apr 1 15:17:53 2014 -0700

    Fix merge conflict

M	core/src/test/java/com/google/errorprone/bugpatterns/MisusedFormattingLoggerTest.java

commit a467339e90370f53dcb505f123702fcbe04f5d10
Author: Will Holen <vidarh@google.com>
Date:   Tue Mar 25 16:41:56 2014 -0700

    Add MisusedFormattingLogger check.
    
    This check detects buggy calls to FormattingLogger from the Google Data
    API. Detected issues with fixes:
    
     - Wrong format string style: suggests a converted version.
     - Parameters masked by single quotes: suggests escaping them.
     - Throwable passed last when it should be first: suggests moving it.
     - Parameters not used in the format string: suggests appending them.
     - All combinations of the above.
    
    Detected issues without fixes:
    
     - Unparsable format string.
     - Parameters are referenced but not provided.

M	core/pom.xml
M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
A	core/src/main/java/com/google/errorprone/bugpatterns/MisusedFormattingLogger.java
A	core/src/test/java/com/google/errorprone/bugpatterns/MisusedFormattingLoggerTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/MisusedFormattingLoggerNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/MisusedFormattingLoggerPositiveCases.java

commit 45dd4a7847657ace14769a7e61bd197541621869
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Thu Mar 27 15:15:11 2014 -0700

    Fix jdk6 build failure.

M	core/src/test/java/com/google/errorprone/ErrorProneJavaCompilerTest.java

commit 6242ce5780a82aa7962635c0442cac418c03b003
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Mar 25 12:07:42 2014 -0700

    Add experimental check for varargs/array mistakes due to boxing.
    
    This check flags any place where a primitive array is passed as a varargs
    parameter and is autoboxed into an array with a single element of
    primitive array type.  This grew out of our ArrayHashCode check; we
    wanted to know if it is *ever* a good idea to do this.  It needs more
    tuning before having the maturity bumped to MATURE.

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
A	core/src/main/java/com/google/errorprone/bugpatterns/PrimitiveArrayPassedToVarargsMethod.java
A	core/src/test/java/com/google/errorprone/bugpatterns/PrimitiveArrayPassedToVarargsMethodTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/PrimitiveArrayPassedToVarargsMethodNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/PrimitiveArrayPassedToVarargsMethodPositiveCases.java

commit d3bcbd9f0c844c79ab7d9320d9d982a938d08090
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Tue Mar 25 11:34:00 2014 -0700

    Provide an implementation of JavaCompiler.

A	core/src/main/java/com/google/errorprone/ErrorProneJavaCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorProneOptions.java
M	core/src/main/java/com/google/errorprone/Scanner.java
A	core/src/test/java/com/google/errorprone/ErrorProneJavaCompilerTest.java

commit a1a18e98a13b780d591a93f8074e8e20eb51eaa4
Merge: ffc4dad 302b675
Author: Amin Shali <amshali@google.com>
Date:   Mon Mar 24 18:23:17 2014 -0700

    Fixed issue 222
    
    We had two issues here:
    1- Class cast exception because sometimes the method we are looking at is not a
    field access.
    2- Index out of bound exception because sometimes type parameters are missing
    for a type.
    
    I fixed this issue by introducing a new function which extracts type parameters
    from a type and not an expression. Why? Because when we are trying to get the
    type parameters of the instance object of a method that is not field access, we
    have no expression to start with. However, we do have type information about its
    owner. This change will take care of class cast exception.
    
    For index out of bound exception I had to change the code for the new
    genericTypeOfType and old genericTypeOf to check if the number of type arguments
    is zero. In that case we return the java.lang.Object type from symbol table as
    the type argument's type.

commit ffc4dad1b1d34290b97d942450d5962e9d422cc9
Author: Amin Shali <amshali@google.com>
Date:   Mon Mar 24 18:19:44 2014 -0700

    ==Fixing issue 222
    
    We had two issues here:
    1- Class cast exception because sometimes the method we are looking at is not a
    field access.
    2- Index out of bound exception because sometimes type parameters are missing
    for a type.
    
    I fixed this issue by introducing a new function which extracts type parameters
    from a type and not an expression. Why? Because when we are trying to get the
    type parameters of the instance object of a method that is not field access, we
    have no expression to start with. However, we do have type information about its
    owner. This change will take care of class cast exception.
    
    For index out of bound exception I had to change the code for the new
    genericTypeOfType and old genericTypeOf to check if the number of type arguments
    is zero. In that case we return the java.lang.Object type from symbol table as
    the type argument's type.

M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/CollectionIncompatibleTypeClassCast.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/CollectionIncompatibleTypeOutOfBounds.java

commit 302b675dc4276d70c8a9ac59fdace4d35106abb6
Author: Amin Shali <amshali@google.com>
Date:   Mon Mar 24 18:19:44 2014 -0700

    Applied comments

M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/CollectionIncompatibleTypeClassCast.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/CollectionIncompatibleTypeOutOfBounds.java

commit cae8f211218141dd686a2f7d7ea1856cccd8dd3a
Author: Amin Shali <amshali@google.com>
Date:   Thu Mar 20 17:41:15 2014 -0700

    Fixed the issue with CollectionIncompatibleType.

M	core/src/main/java/com/google/errorprone/bugpatterns/CollectionIncompatibleType.java
M	core/src/main/java/com/google/errorprone/suppliers/Suppliers.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CollectionIncompatibleTypeTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/CollectionIncompatibleTypeClassCast.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/CollectionIncompatibleTypeOutOfBounds.java

commit ef2223477951f70bfb1395f356a60bee68a9625c
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Wed Mar 19 15:07:20 2014 -0700

    Convert compiler based tests to use an in-memory file manager.

M	core/pom.xml
M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	core/src/test/java/com/google/errorprone/CommandLineFlagDisableTest.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java
M	core/src/test/java/com/google/errorprone/EndPosTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
M	core/src/test/java/com/google/errorprone/ErrorProneOptionsTest.java
A	core/src/test/java/com/google/errorprone/ErrorProneTestCompiler.java
A	core/src/test/java/com/google/errorprone/NullAnnotationProcessor.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayHashCodeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayToStringCompoundAssignmentTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayToStringConcatenationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayToStringTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/BadShiftAmountTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/BugPatternUnitTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CheckReturnValueTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ClassCanBeStaticTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CollectionIncompatibleTypeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ComparisonOutOfRangeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CovariantEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DeadExceptionTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DepAnnTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DivZeroTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ElementsCountedInLoopTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/EmptyIfStatementTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/FinallyTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceAssistedInjectScopingTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceAssistedParametersTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceInjectOnFinalFieldTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceOverridesGuiceInjectableMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceOverridesJavaxInjectableMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnConstructorsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnSameConstructorTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectInvalidTargetingOnScopingAnnotationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectJavaxInjectOnAbstractMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectJavaxInjectOnFinalFieldTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectMoreThanOneInjectableConstructorTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectMoreThanOneQualifierTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectMoreThanOneScopeAnnotationOnClassTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectOverlappingQualifierAndScopeAnnotationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectScopeAnnotationOnInterfaceOrAbstractClassTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectScopeOrQualifierAnnotationRetentionTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InvalidPatternSyntaxTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit3TestNotRunTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4TestNotRunTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffixTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/MalformedFormatStringTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ModifyingCollectionWithItselfTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NonRuntimeAnnotationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NumericEqualityTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/OrderingFromTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/OverridesTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitiveTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsTooManyArgsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ProtoFieldNullComparisonTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ReturnValueIgnoredTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SelfAssignmentTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SelfEqualityTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SelfEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/StaticAccessedFromInstanceTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/StringEqualityTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SuppressWarningsDeprecatedTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/TryFailThrowableTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/UnneededConditionalOperatorTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/WaitNotInLoopTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/WrongParameterPackageTest.java
M	core/src/test/java/com/google/errorprone/fixes/AppliedFixTest.java
M	core/src/test/java/com/google/errorprone/matchers/AnnotationHasArgumentWithValueTest.java
M	core/src/test/java/com/google/errorprone/matchers/AnnotationTest.java
A	core/src/test/java/com/google/errorprone/matchers/CompilerBasedAbstractTest.java
D	core/src/test/java/com/google/errorprone/matchers/CompilerBasedTest.java
M	core/src/test/java/com/google/errorprone/matchers/CompoundAssignmentTest.java
M	core/src/test/java/com/google/errorprone/matchers/ConstructorOfClassTest.java
A	core/src/test/java/com/google/errorprone/matchers/DescendantOfAbstractTest.java
M	core/src/test/java/com/google/errorprone/matchers/DescendantOfTest.java
A	core/src/test/java/com/google/errorprone/matchers/DescendantOfTransitiveTest.java
M	core/src/test/java/com/google/errorprone/matchers/InstanceMethodTest.java
M	core/src/test/java/com/google/errorprone/matchers/MethodHasParametersTest.java
M	core/src/test/java/com/google/errorprone/matchers/StaticMethodTest.java
M	core/src/test/java/com/google/errorprone/matchers/StringLiteralTest.java
M	core/src/test/java/com/google/errorprone/suppress/CustomSuppressionTest.java
M	core/src/test/java/com/google/errorprone/suppress/SuppressWarningsTest.java
M	core/src/test/java/com/google/errorprone/suppress/UnsuppressibleTest.java
M	core/src/test/java/com/google/errorprone/util/ASTHelpersTest.java

commit 3a994d55bb731ee4d0786c02a5478f2c09d4d50e
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Mon Mar 10 19:14:11 2014 -0700

    Fix issue with wrapped adjusted end positions.
    
    The WrappedTreeNode end position lookup assumed that the
    DiagnosticPosition had an underlying tree, which isn't the case for
    adjusted nodes.

M	core/src/main/java/com/google/errorprone/JDKCompatible.java
M	core/src/main/java/com/google/errorprone/WrappedTreeMap.java
M	jdk7/src/main/java/com/google/errorprone/EndPosMap7.java
M	jdk7/src/main/java/com/google/errorprone/JDK7Shim.java
M	jdk8/src/main/java/com/google/errorprone/EndPosMap8.java
M	jdk8/src/main/java/com/google/errorprone/JDK8Shim.java
M	jdkcompat/src/main/java/com/google/errorprone/JDKCompatibleShim.java

commit 4bcce0e5b24e85b0c71af45707d1a60fa85f0cc4
Author: Gregory Kick <gk5885@gmail.com>
Date:   Thu Mar 6 14:06:30 2014 -0500

    Feedback from eaftan

M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceInjectOnFinalField.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceInjectOnFinalFieldPositiveCases.java

commit 28185211ec4475c4e9be4a76ba96ff48d4554245
Author: Gregory Kick <gk5885@gmail.com>
Date:   Wed Mar 5 16:31:57 2014 -0500

    Change the suggested fix for GuiceInjectOnFinalField to remove final rather than removing @Inject as that is the behavior-preserving change.

M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceInjectOnFinalField.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceInjectOnFinalFieldPositiveCases.java

commit 1d8a2a094c31d011956bc41af6b11a2dcf405892
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Mar 5 14:52:05 2014 -0500

    Fix bug in CompilationTestHelper

M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java

commit c2405fb35807479fcbc133c7fcf3a061f1a642d5
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Feb 28 17:34:27 2014 -0800

    Update ArrayEquals check to match Guava and JDK7 static helper methods.

M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayEquals.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayEqualsTest.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayEqualsNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayEqualsNegativeCases2.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayEqualsPositiveCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayEqualsPositiveCases2.java

commit ad7255824b96a6a72c9dcdbf2f66c54e11ae6365
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Feb 28 17:27:01 2014 -0800

    Add ASTHelpers.getSymbol() overrides.

M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java

commit 8471d46360e14beda686a9dc55e3dd7bf460728c
Author: Louis Wasserman <lowasser@google.com>
Date:   Mon Feb 24 14:25:08 2014 -0800

    Add ProtoStringFieldReferenceEquality check to error-prone

A	core/src/main/java/com/google/errorprone/bugpatterns/ProtoStringFieldReferenceEquality.java

commit 32cdec35a5dade529ec9e179fb12a0eca24924a0
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Wed Feb 19 17:26:35 2014 -0800

    Add an ASTHelpers method for retrieving reified annotations.

M	core/src/main/java/com/google/errorprone/SuppressionHelper.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectInvalidTargetingOnScopingAnnotation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectScopeOrQualifierAnnotationRetention.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NonRuntimeAnnotation.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/test/java/com/google/errorprone/matchers/CompilerBasedTest.java
M	core/src/test/java/com/google/errorprone/util/ASTHelpersTest.java
A	core/src/test/java/com/google/errorprone/util/InheritedAnnotation.java

commit b1a79db7570b9f20c505e0864b0e3e899c8f220d
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Feb 19 17:17:15 2014 -0800

    SuggestedFixes must be nonnull.
    
    Refactored to ensure that all SuggestedFixes in Descriptions must be non
    null.  Refactored fixes into a separate interface that SuggestedFix
    implements.  Also provided a canonical NO_FIX Fix for when there is no
    fix.

M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractReturnValueIgnored.java
M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractSuppressWarningsMatcher.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayHashCode.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToStringCompoundAssignment.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToStringConcatenation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArraysAsListPrimitiveArray.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BadShiftAmount.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ClassCanBeStatic.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ComparisonOutOfRange.java
M	core/src/main/java/com/google/errorprone/bugpatterns/CovariantEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/DeadException.java
M	core/src/main/java/com/google/errorprone/bugpatterns/DivZero.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ElementsCountedInLoop.java
M	core/src/main/java/com/google/errorprone/bugpatterns/EmptyIfStatement.java
M	core/src/main/java/com/google/errorprone/bugpatterns/Finally.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidPatternSyntax.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit3TestNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TestNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffix.java
M	core/src/main/java/com/google/errorprone/bugpatterns/MalformedFormatString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ModifyingCollectionWithItself.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NumericEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/OrderingFrom.java
M	core/src/main/java/com/google/errorprone/bugpatterns/Overrides.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNull.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitive.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsExpensiveString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsTooManyArgs.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfAssignment.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StaticAccessedFromInstance.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StringEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/UnneededConditionalOperator.java
M	core/src/main/java/com/google/errorprone/bugpatterns/WrongParameterPackage.java
M	core/src/main/java/com/google/errorprone/fixes/AppliedFix.java
A	core/src/main/java/com/google/errorprone/fixes/Fix.java
A	core/src/main/java/com/google/errorprone/fixes/NoFix.java
M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java
M	core/src/main/java/com/google/errorprone/matchers/Description.java
M	core/src/test/java/com/google/errorprone/CommandLineFlagDisableTest.java
M	core/src/test/java/com/google/errorprone/suppress/CustomSuppressionTest.java
M	core/src/test/java/com/google/errorprone/suppress/UnsuppressibleTest.java

commit 7b288a62ab8770dff594aa6ff204f51df0be0c18
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Feb 18 10:10:59 2014 -0800

    Refactor CompilationTestHelper to allow passing arbitrary args.
    
    This lets us test that specific checks should be disableable.  I also
    cleaned up the interface to CompilationTestHelper to reduce duplication.

M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DepAnnTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffixTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ProtoFieldNullComparisonTest.java

commit 1faf15bf71721e31e25214112afcf320958722d8
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Feb 14 14:52:18 2014 -0800

    WrappedTreeMap end position fix.
    
    The javac8 compatibility change broke WrappedTreeMap end positions,
    because it incorrectly assumed that all AST nodes get entries in the end
    position map.

M	core/src/main/java/com/google/errorprone/JDKCompatible.java
M	core/src/main/java/com/google/errorprone/WrappedTreeMap.java
M	jdk7/src/main/java/com/google/errorprone/EndPosMap7.java
M	jdk7/src/main/java/com/google/errorprone/JDK7Shim.java
M	jdk8/src/main/java/com/google/errorprone/EndPosMap8.java
M	jdk8/src/main/java/com/google/errorprone/JDK8Shim.java
M	jdkcompat/src/main/java/com/google/errorprone/ErrorProneEndPosMap.java
M	jdkcompat/src/main/java/com/google/errorprone/JDKCompatibleShim.java

commit b89af170f4bc0a80d947e5af785a85966ed95cda
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Feb 12 11:31:59 2014 -0800

    Pass "-encoding UTF-8" arg for test cases.

M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java

commit b673d1a16f03f9b60e36925ede376fa1fc26f4f9
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Feb 12 10:36:12 2014 -0800

    Allow LongLiteralLowerCaseSuffix check to be disabled.

M	core/src/main/java/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffix.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffixTest.java

commit 8e68674a17e1d94e22a94ff46644aa39d688a7ce
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Tue Feb 4 16:05:41 2014 -0800

    Make error-prone compatible with JDK8.
    
    The 'jdkcompat' project defines an interface that abstracts over
    internal APIs that changed in JDK8, and the 'jdk8' and 'jdk7' modules
    implement versions of the inferface that work against the different
    versions of the JDK. (JDK6 is still supported, but doesn't require
    separate handling from JDK7).
    
    When error-prone is built the current JAVA_HOME setting is used to
    determine which jdkcompat library to use.

M	core/pom.xml
M	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
A	core/src/main/java/com/google/errorprone/JDKCompatible.java
M	core/src/main/java/com/google/errorprone/JavacErrorDescriptionListener.java
M	core/src/main/java/com/google/errorprone/SuppressionHelper.java
M	core/src/main/java/com/google/errorprone/WrappedTreeMap.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectInvalidTargetingOnScopingAnnotation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectScopeOrQualifierAnnotationRetention.java
M	core/src/main/java/com/google/errorprone/fixes/AppliedFix.java
M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java
M	core/src/test/java/com/google/errorprone/fixes/AppliedFixTest.java
A	jdk7/pom.xml
A	jdk7/src/main/java/com/google/errorprone/EndPosMap7.java
A	jdk7/src/main/java/com/google/errorprone/JDK7Shim.java
A	jdk7/src/main/java/com/google/errorprone/fixes/AdjustedPosition7.java
A	jdk7/src/main/java/com/google/errorprone/fixes/IndexedPosition7.java
A	jdk8/pom.xml
A	jdk8/src/main/java/com/google/errorprone/EndPosMap8.java
A	jdk8/src/main/java/com/google/errorprone/JDK8Shim.java
A	jdk8/src/main/java/com/google/errorprone/fixes/AdjustedPosition8.java
A	jdk8/src/main/java/com/google/errorprone/fixes/IndexedPosition8.java
A	jdkcompat/pom.xml
A	jdkcompat/src/main/java/com/google/errorprone/ErrorProneEndPosMap.java
A	jdkcompat/src/main/java/com/google/errorprone/JDKCompatibleShim.java
A	jdkcompat/src/main/java/com/google/errorprone/fixes/AbstractAdjustedPosition.java
A	jdkcompat/src/main/java/com/google/errorprone/fixes/AbstractIndexedPosition.java
M	pom.xml

commit b120426403d2d2083332ff155c4c61796e0bde1f
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Feb 4 15:08:32 2014 -0800

    Fixed and added test cases for InvalidPatternSyntax

M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidPatternSyntax.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InvalidPatternSyntaxPositiveCases.java

commit e42eb802da33e5e9414ad2913d6c7cd7bb056ca6
Merge: bf8dba9 c4e0676
Author: Louis Wasserman <lowasser@google.com>
Date:   Tue Feb 4 14:53:05 2014 -0800

    Merge branch 'fix-invalid-pattern-syntax'

commit c4e0676aaf1dfbd0706026d6c1c01ad8351cb073
Author: Louis Wasserman <lowasser@google.com>
Date:   Tue Feb 4 13:59:52 2014 -0800

    Update InvalidPatternSyntax to allow arbitrary inputs to Pattern.compile.

M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidPatternSyntax.java

commit bf8dba9d9552534ebd923fe7324727fc4744c0bd
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Feb 4 14:27:11 2014 -0800

    Fix inaccurate comment

M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java

commit 0f9ea1dce16f13dcc89b3ac551d3dd0af35bfca6
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Mon Feb 3 16:15:02 2014 -0800

    Make DepAnn disableable.

M	core/src/main/java/com/google/errorprone/bugpatterns/DepAnn.java

commit a3b48378e951e179cf9cea556ddcee5b658aa42a
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Feb 3 15:19:30 2014 -0800

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit bfbe3e397f4c72c23e990a5dcdda2d0803e5104d
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Feb 3 15:19:18 2014 -0800

    [maven-release-plugin] prepare release error_prone_parent-1.1.1

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit 187e4b4c38dc39418a36e3c8f33f7931d17d3c6d
Author: Radoslaw Burny <rburny@google.com>
Date:   Mon Feb 3 13:28:32 2014 -0800

    Add MalformedFormatString check.
    
    This check looks for calls to printf-like methods in which the format
    string does not match the arguments in the method call.  As a first
    step, it only flags the case where there are extra arguments, so that we
    can provide a safe fix that simply deletes the extra args.  Eventually
    this will detect other format-string-related bugs.

M	core/pom.xml
M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/VisitorState.java
A	core/src/main/java/com/google/errorprone/bugpatterns/MalformedFormatString.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/matchers/StaticMethod.java
A	core/src/test/java/com/google/errorprone/bugpatterns/MalformedFormatStringTest.java
M	core/src/test/java/com/google/errorprone/matchers/StaticMethodTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/MalformedFormatStringNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/MalformedFormatStringPositiveCases.java

commit 22e798ce42aae862d4b423727aeff72101056a03
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Jan 31 15:04:35 2014 -0800

    Allow certain checks to be disabled at the command line.
    
    Adds a command-line flag, -Xepdisable:, to allow the user to disable
    certain error-prone checks.  The @BugPattern annotation for the check
      must have the disableable element set to true.

M	annotation/src/main/java/com/google/errorprone/BugPattern.java
M	core/pom.xml
M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
A	core/src/main/java/com/google/errorprone/ErrorProneOptions.java
M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
A	core/src/main/java/com/google/errorprone/InvalidCommandLineOptionException.java
M	core/src/main/java/com/google/errorprone/Scanner.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/EmptyIfStatement.java
A	core/src/main/java/com/google/errorprone/matchers/Disableable.java
A	core/src/test/java/com/google/errorprone/CommandLineFlagDisableTest.java
A	core/src/test/java/com/google/errorprone/ErrorProneOptionsTest.java
A	core/src/test/resources/com/google/errorprone/CommandLineFlagTestFile.java

commit 475f342545865db4444cf5b659f5fcd65defb30f
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Jan 31 14:57:42 2014 -0800

    Fix ArrayHashCode tests for JDK6.

M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayHashCodeTest.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayHashCodeNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayHashCodeNegativeCases2.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayHashCodePositiveCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayHashCodePositiveCases2.java

commit 2c0b04326757405114b4f916d7e5d09f892d83a3
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Jan 31 13:47:40 2014 -0800

    Cleanup unused imports

M	core/src/main/java/com/google/errorprone/VisitorState.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NumericEquality.java
M	core/src/main/java/com/google/errorprone/matchers/Enclosing.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4TestNotRunTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitiveTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SelfEqualsTest.java

commit 945244020a12e2143b50be4eb6f6a0dc89859627
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Jan 31 13:02:02 2014 -0800

    Adds ArrayHashCode check.
    
    This check flags uses of the identity hash code on arrays.  It suggests
    substituting Arrays.hashCode to get a hashcode that takes the array
    contents into account.

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
A	core/src/main/java/com/google/errorprone/bugpatterns/ArrayHashCode.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/ArrayHashCodeTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayHashCodeNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayHashCodePositiveCases.java

commit c99f92bc422826ce7719631f719d31711ab31a19
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Thu Jan 30 18:13:18 2014 -0800

    Fix crash when javac performs dataflow on the same class twice.

M	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
A	core/src/test/resources/com/google/errorprone/FlowConstants.java
A	core/src/test/resources/com/google/errorprone/FlowSub.java
A	core/src/test/resources/com/google/errorprone/FlowSuper.java

commit 55c54d299803c44c409a6590c6ffc20ed4438ddf
Author: Louis Wasserman <lowasser@google.com>
Date:   Mon Jan 27 10:17:12 2014 -0800

    Add ArraysAsListPrimitiveArray bug pattern to error-prone

A	core/src/main/java/com/google/errorprone/bugpatterns/ArraysAsListPrimitiveArray.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java

commit 80d7b56a439ac7124d5b08f4baf8e4066875f9a6
Author: Louis Wasserman <lowasser@google.com>
Date:   Fri Jan 24 16:10:11 2014 -0800

    Improve the suggested fix of PreconditionsTooManyArgs to be more behavior-preserving in the case that there aren't obvious placeholders in the format string.

M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsTooManyArgs.java

commit 8623355f4b87dff92239b7a9b358b74fe63f6573
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Jan 22 15:59:29 2014 -0800

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit 096eee86ca3563cdd2b0b69938b2aa57a999320f
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Jan 22 15:59:22 2014 -0800

    [maven-release-plugin] prepare release v1.1RC5

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit 09228ca28915185bffe9797f6fa213ba3241091d
Merge: 740411f 5a13bac
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Jan 22 15:26:47 2014 -0800

    Merge branch 'master' of https://code.google.com/p/error-prone

commit 5a13bac847b4de744e9b7b9f93cdf5f418ee2f92
Author: Fuyao Zhao <fuyaoz@fuyaoz-macbookpro3.roam.corp.google.com>
Date:   Fri Nov 22 20:14:37 2013 -0800

    Fix the case of multiple decls in the same file and simplify the code, fix tests for multiple decls

M	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
M	core/src/test/resources/com/google/errorprone/MultipleTopLevelClassesWithErrors.java

commit 740411f7a489dce37d0510dc04a4ded044b11fb6
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Jan 17 17:32:00 2014 -0800

    Increment version to 1.1.0-SNAPSHOT

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit fe07cf17fa9c5aad9feeb820b87b15b61864d1bd
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Jan 15 17:10:34 2014 -0800

    Fixed bug with SuppressionHelper

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/Scanner.java

commit 91f22f0121c9e1b0f35fb323ec5f84f5f026a530
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Jan 15 16:55:42 2014 -0800

    Move suppression logic from Scanner to a new class, SuppressionHelper

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/Scanner.java
A	core/src/main/java/com/google/errorprone/SuppressionHelper.java

commit 86b453105aa650062bdaf6af52be021b45d3c01d
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Jan 14 17:20:59 2014 -0800

    Added tests for custom suppresion on an enclosing scope

M	core/src/test/java/com/google/errorprone/suppress/CustomSuppressionTest.java
M	core/src/test/resources/com/google/errorprone/suppress/CustomSuppressionNegativeCases.java
M	core/src/test/resources/com/google/errorprone/suppress/CustomSuppressionPositiveCases.java

commit c007448ddff8c142b05274396d3da55034e153d2
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Jan 14 16:56:18 2014 -0800

    Added support for multiple custom suppressions

M	core/src/main/java/com/google/errorprone/Scanner.java
M	core/src/test/resources/com/google/errorprone/suppress/CustomSuppressionNegativeCases.java

commit bb513c69244702e59137642c5ddf9f291698281c
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Jan 14 16:52:55 2014 -0800

    Add tests for multiple custom suppressions

M	core/src/test/java/com/google/errorprone/suppress/CustomSuppressionTest.java
M	core/src/test/resources/com/google/errorprone/suppress/CustomSuppressionNegativeCases.java
M	core/src/test/resources/com/google/errorprone/suppress/CustomSuppressionPositiveCases.java
M	docgen/src/main/java/com/google/errorprone/DocGen.java

commit ae4405fab936f3c97514577a2697c838b58c4621
Merge: e3ce014 7ea45aa
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Jan 14 16:28:36 2014 -0800

    Merge branch 'master' into special_suppressible

commit 7ea45aa92ec63e46f08520c318b048f8d0bb4270
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Jan 10 17:28:26 2014 -0800

    Fix for possible exception on Context.put

M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java

commit 6bcc7624a7ef5b5031fa714531d886fc75acad7d
Merge: ecb49ba 0db9e9e
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Jan 10 13:39:53 2014 -0800

    Merge branch 'master' into debug_maven_exception

commit ecb49ba9ebaee742ece13f9d34c7f9ab63a47901
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Jan 10 13:39:25 2014 -0800

    Fix from code review

M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java

commit e3ce0147fc6f5c64eec4037252c782c4df5eeb6e
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Jan 10 12:02:11 2014 -0800

    Cleanups

M	annotation/src/main/java/com/google/errorprone/ValidationException.java
M	annotation/src/test/java/com/google/errorprone/BugPatternValidatorTest.java

commit 182051ab24cf3db5c8166f38d3b1c21eecbf0aa0
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Jan 10 11:55:32 2014 -0800

    Remove completed FIXME

M	annotation/src/main/java/com/google/errorprone/BugPattern.java

commit 6c21f642c1fee1c3c48b7710868e3c1f8b81c8b7
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Jan 10 11:53:58 2014 -0800

    Add unit tests for BugPatternValidator

M	annotation/pom.xml
M	annotation/src/main/java/com/google/errorprone/BugPatternValidator.java
A	annotation/src/test/java/com/google/errorprone/BugPatternValidatorTest.java

commit cfca4320d98fbf912708485d024ba8e6b5139ea0
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Jan 10 11:53:33 2014 -0800

    Fix docgen for custom suppression

M	docgen/src/main/java/com/google/errorprone/DocGen.java

commit 0f097588a8f8cf30822483f7b166716227fa4447
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Jan 9 17:58:07 2014 -0800

    Fix MirroredTypeException in docgen

M	docgen/src/main/java/com/google/errorprone/DocGen.java

commit 0dfcb851505ecbd15b1913304aa07cd1692077ea
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Jan 9 14:44:24 2014 -0800

    Added support to wiki generator to give correct suppression info

M	annotation/src/main/java/com/google/errorprone/BugPattern.java
M	docgen/src/main/java/com/google/errorprone/DocGen.java

commit c243a0136cd1041c3b3c83af46cc3475ac15fb13
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Jan 9 14:17:24 2014 -0800

    cleanup

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/Scanner.java
M	core/src/main/java/com/google/errorprone/matchers/Suppressible.java
M	core/src/test/java/com/google/errorprone/suppress/UnsuppressibleTest.java

commit d16b2bf1740b391d2c58865bd3b95f64a39a76c5
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Jan 9 14:08:13 2014 -0800

    Renamed suppresswarnings package to suppress

A	core/src/test/java/com/google/errorprone/suppress/CustomSuppressionTest.java
A	core/src/test/java/com/google/errorprone/suppress/SuppressWarningsTest.java
A	core/src/test/java/com/google/errorprone/suppress/UnsuppressibleTest.java
D	core/src/test/java/com/google/errorprone/suppresswarnings/CustomSuppressionTest.java
D	core/src/test/java/com/google/errorprone/suppresswarnings/SuppressWarningsTest.java
D	core/src/test/java/com/google/errorprone/suppresswarnings/UnsuppressibleTest.java
A	core/src/test/resources/com/google/errorprone/suppress/CustomSuppressionNegativeCases.java
A	core/src/test/resources/com/google/errorprone/suppress/CustomSuppressionPositiveCases.java
A	core/src/test/resources/com/google/errorprone/suppress/SuppressWarningsNegativeCases.java
A	core/src/test/resources/com/google/errorprone/suppress/UnsuppressiblePositiveCases.java
D	core/src/test/resources/com/google/errorprone/suppresswarnings/CustomSuppressionNegativeCases.java
D	core/src/test/resources/com/google/errorprone/suppresswarnings/CustomSuppressionPositiveCases.java
D	core/src/test/resources/com/google/errorprone/suppresswarnings/SuppressWarningsNegativeCases.java
D	core/src/test/resources/com/google/errorprone/suppresswarnings/UnsuppressiblePositiveCases.java

commit 36e9872a2106da1650f117cf2697bc55ecb63c2d
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Jan 9 14:03:47 2014 -0800

    Added tests for all suppression functionality

M	core/src/main/java/com/google/errorprone/Scanner.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
M	core/src/main/java/com/google/errorprone/matchers/Suppressible.java
M	core/src/test/java/com/google/errorprone/suppresswarnings/CustomSuppressionTest.java
M	core/src/test/java/com/google/errorprone/suppresswarnings/SuppressWarningsTest.java
A	core/src/test/java/com/google/errorprone/suppresswarnings/UnsuppressibleTest.java
A	core/src/test/resources/com/google/errorprone/suppresswarnings/CustomSuppressionNegativeCases.java
A	core/src/test/resources/com/google/errorprone/suppresswarnings/CustomSuppressionPositiveCases.java
D	core/src/test/resources/com/google/errorprone/suppresswarnings/NegativeCases.java
A	core/src/test/resources/com/google/errorprone/suppresswarnings/SuppressWarningsNegativeCases.java
A	core/src/test/resources/com/google/errorprone/suppresswarnings/UnsuppressiblePositiveCases.java

commit b608a0fe8e8c78abb0aca6150289b03cb6feeb78
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Jan 9 12:12:10 2014 -0800

    Functionality should be there, need to write a test

M	core/src/main/java/com/google/errorprone/Scanner.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
M	core/src/main/java/com/google/errorprone/matchers/Suppressible.java

commit b374d6e7fc902489b757fe40535e99fad9c50e03
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Jan 9 12:04:25 2014 -0800

    Start of support for custom suppressions.  Refactored Scanner code, didn't break it.

M	core/src/main/java/com/google/errorprone/Scanner.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java

commit 1a3dc4dca9892b4e17bd2476aa40982ade35c5e3
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Jan 8 17:20:48 2014 -0800

    intermediate checkin

M	annotation/src/main/java/com/google/errorprone/BugPattern.java
A	annotation/src/main/java/com/google/errorprone/BugPatternValidator.java
A	annotation/src/main/java/com/google/errorprone/ValidationException.java
M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/Scanner.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
A	core/src/test/java/com/google/errorprone/suppresswarnings/CustomSuppressionTest.java

commit 936a2921282bf171b06c3c77450e93c78c6beb7d
Merge: bdcd05a 0db9e9e
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Jan 8 14:58:29 2014 -0800

    merge from master

commit 0db9e9e72bc48bab57c6c1c3fc7f4dd4c438fd05
Merge: e55275f b2c3b71
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Jan 8 14:41:31 2014 -0800

    Merge branch 'master' of https://code.google.com/p/error-prone

commit e55275fc6df6b1b6b6e56a3c905da8dbea05d4df
Merge: 698603b 7f8b89f
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Jan 8 14:40:34 2014 -0800

    Merged master branch

commit b2c3b7132868cb7b0f465ecc53808dcd9c0755b3
Author: Alex Eagle <alexeagle@google.com>
Date:   Wed Jan 8 14:37:54 2014 -0800

    Check for null when matching against an enclosing tree node. If there is no such enclosing tree node, we return false, because there can't be a match against any matcher.
    
    Fixes #223

M	core/src/main/java/com/google/errorprone/VisitorState.java
M	core/src/main/java/com/google/errorprone/matchers/Enclosing.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/DeadExceptionPositiveCases.java

commit 951fe6247ef13ef0166580b7c1407a5d026e2bda
Author: Alex Eagle <alexeagle@google.com>
Date:   Wed Dec 11 16:02:43 2013 -0800

    Improve DeadException check's suggestion, so that if the last statement in a case (esp. default) is a dead exception, we suggest throwing it.

M	core/src/main/java/com/google/errorprone/VisitorState.java
M	core/src/main/java/com/google/errorprone/bugpatterns/CovariantEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/DeadException.java
M	core/src/main/java/com/google/errorprone/matchers/Enclosing.java
M	core/src/main/java/com/google/errorprone/matchers/LastStatement.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/matchers/NextStatement.java
M	core/src/main/java/com/google/errorprone/suppliers/Suppliers.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/DeadExceptionPositiveCases.java

commit 698603b99b9f2f20daddfbf787defed88050171f
Author: Martynas Venckus <martynas@google.com>
Date:   Wed Jan 8 14:02:09 2014 -0800

    Add an ability to make BugPatterns unsuppressable

M	annotation/src/main/java/com/google/errorprone/BugPattern.java
M	core/src/main/java/com/google/errorprone/Scanner.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
M	core/src/main/java/com/google/errorprone/matchers/Suppressable.java

commit bdcd05a5ce5b555965ba2c9cc20c3875a243fec2
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Jan 8 14:16:22 2014 -0800

    Intermediate checkin

M	annotation/src/main/java/com/google/errorprone/BugPattern.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
M	core/src/main/java/com/google/errorprone/matchers/Suppressible.java

commit 9caa3b58f0876ed46604a2a43893574d35f344d4
Merge: 6262b30 7f8b89f
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Jan 7 17:45:18 2014 -0800

    merged changes from master

commit 7f8b89ff159e2d8f47c6b842729e50c24b115a8a
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Jan 7 17:43:01 2014 -0800

    Fix spelling of Suppressible interface

M	core/src/main/java/com/google/errorprone/Scanner.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
D	core/src/main/java/com/google/errorprone/matchers/Suppressable.java
A	core/src/main/java/com/google/errorprone/matchers/Suppressible.java

commit 6262b3066b922c67c94f77f2380607a712355057
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Jan 7 17:41:27 2014 -0800

    Checkin so that I can switch branches

M	annotation/src/main/java/com/google/errorprone/BugPattern.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
M	core/src/main/java/com/google/errorprone/matchers/Suppressable.java

commit a4aaefb48bd3ea94127d4d07b7c16c8b0bbe54ae
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Dec 30 16:19:17 2013 -0800

    Moved ProtoTest file to satisfy Maven

M	core/src/test/java/com/google/errorprone/bugpatterns/ProtoFieldNullComparisonTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/proto/ProtoTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/proto/proto_test.proto
D	core/src/test/resources/com/google/errorprone/proto/ProtoTest.java
D	core/src/test/resources/com/google/errorprone/proto/proto_test.proto

commit 963d1a0f02440f45cd7a4dff2c23a2b2a53110d2
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Dec 30 16:01:11 2013 -0800

    Cleanup

M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java

commit 0a1d6c702b38984c5009db4e9824828c87cfd139
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Dec 30 15:50:50 2013 -0800

    Passes integration tests

M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorReportingJavaCompiler.java
M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java

commit 43be8b1345ab2d71deffd1c32cc0cfce9c83b7e7
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Dec 30 13:39:33 2013 -0800

    Comment change

M	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java

commit 643d13a31fb1b10cd892a652efc1dfee0c584c55
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Dec 30 13:38:30 2013 -0800

    Added failing regression test for Issue 188

M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
A	core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
D	core/src/test/java/com/google/errorprone/ErrorReportingJavaCompilerIntegrationTest.java
A	core/src/test/resources/com/google/errorprone/NullAnnotationProcessor.java
A	core/src/test/resources/com/google/errorprone/UsesAnnotationProcessor.java

commit c048b72119bef274cbe62dd73682c79fdbad1f0f
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Dec 27 16:30:29 2013 -0800

    Remove unused import

M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToString.java

commit aef44235af2d50f2110121f464d9a2bd3346d446
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Dec 27 16:28:44 2013 -0800

    Tell .gitignore to ignore .gitignores in subdirectories

M	.gitignore

commit aadcce35324ddb3fc9118f1585cc7fa766a1d31c
Author: Radoslaw Burny <radoslaw.burny@gmail.com>
Date:   Wed Dec 4 19:52:12 2013 +0100

    Add support for @Inherited annotations.

M	core/src/main/java/com/google/errorprone/matchers/JUnitMatchers.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit3TestNotRunNegativeCase5.java

commit d3f645f65149e2caae406163b2bc7a3485d9b700
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Wed Dec 4 15:00:37 2013 -0800

    Overrides: ignore synthetic methods.
    
    The overrides check was incorrectly reporting errors for synthetic
    copies of varargs methods that had been lowered to a non-varargs form.

M	core/src/main/java/com/google/errorprone/bugpatterns/Overrides.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/OverridesNegativeCase1.java

commit a04d4fe407e16da4bc832a0965a4aa50b7e7d3ac
Author: Radoslaw Burny <radoslaw.burny@gmail.com>
Date:   Tue Dec 3 15:59:22 2013 -0800

    Test that JUnit3TestNotRun fix is well-formed.

M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit3TestNotRun.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit3TestNotRunPositiveCases.java

commit 65623c87500c0c5dd4ab61dca27d16ee9eea802a
Author: Radoslaw Burny <radoslaw.burny@gmail.com>
Date:   Sun Dec 1 01:55:41 2013 +0100

    Make fix smaller (resolves Issue #204).

M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit3TestNotRun.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit3TestNotRunPositiveCases.java

commit 52be5f762689f8e44426019dfffaf84d4228cd58
Author: Alex Eagle <alexeagle@google.com>
Date:   Thu Nov 21 17:08:09 2013 -0800

    Missing file in previous commit.

A	core/src/main/java/com/google/errorprone/matchers/Enclosing.java

commit f938d321136e8072c6e619f991bd0d151a5d0828
Author: Alex Eagle <alexeagle@google.com>
Date:   Thu Nov 21 17:07:11 2013 -0800

    Do a todo: clean up Enclosing{Class,Method,Block} to share code.

M	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
M	core/src/main/java/com/google/errorprone/bugpatterns/CovariantEquals.java
D	core/src/main/java/com/google/errorprone/matchers/EnclosingBlock.java
D	core/src/main/java/com/google/errorprone/matchers/EnclosingClass.java
D	core/src/main/java/com/google/errorprone/matchers/EnclosingMethod.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/suppliers/Suppliers.java
M	idea-plugin/META-INF/plugin.xml

commit 7637cad771eccf11de3138cb91f42a690d5d1ef3
Author: Alex Eagle <alexeagle@google.com>
Date:   Wed Nov 20 20:28:59 2013 -0800

    Update DeadException bug pattern to exempt code in test cases. We found many instances of tests creating exceptions just to assert on side-effects of the constructor.

M	core/src/main/java/com/google/errorprone/bugpatterns/DeadException.java
A	core/src/main/java/com/google/errorprone/matchers/EnclosingMethod.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DeadExceptionTest.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/DeadExceptionPositiveCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/DeadExceptionTestingNegativeCases.java

commit f1f3b109429f307fc586d3a29ae807595811e91a
Author: Caitlin Sadowski <supertri@google.com>
Date:   Wed Nov 20 18:33:12 2013 -0800

    [maven-release-plugin] prepare release v1.0.8

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit eeceba3f1845f7a65cd6e6032186dbff6a7dfb40
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Wed Nov 20 18:22:25 2013 -0800

    Fixes for Overrides check.
    
    Situations with multiple interface inheritance were not being handled correctly.

M	core/src/main/java/com/google/errorprone/VisitorState.java
M	core/src/main/java/com/google/errorprone/bugpatterns/Overrides.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/OverridesNegativeCase1.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/OverridesPositiveCase1.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/OverridesPositiveCase2.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/OverridesPositiveCase3.java

commit 5c6d46fa4d971d63dce0d547e323d7b03c857172
Author: Alex Eagle <alexeagle@google.com>
Date:   Wed Nov 20 18:05:04 2013 -0800

    Refactor junit matchers to be reusable.

M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit3TestNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TestNotRun.java
A	core/src/main/java/com/google/errorprone/matchers/JUnitMatchers.java

commit 6b8a565baa44bbc3f15f215bc5ef881c54a0ce56
Author: Alex Eagle <alexeagle@google.com>
Date:   Wed Nov 20 17:31:24 2013 -0800

    Use a less problematic checker as our example of a 'warning' for integration testing.

M	core/src/test/java/com/google/errorprone/ErrorReportingJavaCompilerIntegrationTest.java

commit de6a7daae92f1344c850c0b7ca8aacec3e6f7e3e
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Wed Nov 20 08:41:59 2013 -0800

    Add StaticAccessedFromInstance bugpatten.
    
    A static variable or method should not be accessed from an instance.

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
A	core/src/main/java/com/google/errorprone/bugpatterns/StaticAccessedFromInstance.java
A	core/src/main/java/com/google/errorprone/matchers/IsStatic.java
A	core/src/main/java/com/google/errorprone/matchers/IsSymbol.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/matchers/StaticMethod.java
A	core/src/test/java/com/google/errorprone/bugpatterns/StaticAccessedFromInstanceTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/StaticAccessedFromInstanceNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/StaticAccessedFromInstancePositiveCase1.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/StaticAccessedFromInstancePositiveCase2.java

commit fd6e439250d3d86c37dde2971e207bc7d32eeec3
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Tue Nov 19 18:47:38 2013 -0800

    Unbreak the JDK6 build.

M	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
M	core/src/main/java/com/google/errorprone/bugpatterns/WaitNotInLoop.java
M	core/src/test/java/com/google/errorprone/ErrorReportingJavaCompilerIntegrationTest.java

commit 116ffdd851de1d63f3fe60bb91f4d588bd2cc5d5
Author: Alex Eagle <alexeagle@google.com>
Date:   Tue Nov 19 18:11:54 2013 -0800

    Catch exceptions before they propagate back up to the compiler, and report them clearly as an error-prone bug with a link to our bug tracker.
    
    Fixes #174

M	core/src/main/java/com/google/errorprone/ErrorReportingJavaCompiler.java
M	core/src/main/resources/com/google/errorprone/errors.properties
M	core/src/test/java/com/google/errorprone/ErrorReportingJavaCompilerIntegrationTest.java

commit 8c7e2e82186be14341023617448becf89d12f5d5
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Fri Nov 15 17:02:50 2013 -0800

    Don't crash the compiler on symbol completion failures.

M	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java

commit 41267b56608edfd75cda9f3e249d5ca92b271421
Merge: edad49f 005ec79
Author: Louis Wasserman <lowasser@google.com>
Date:   Fri Nov 15 09:48:51 2013 -0800

    Merge branch 'master' of https://code.google.com/p/error-prone into liberal-static-method

commit 005ec79523460adcd04d2454d0f1e4c1bf17e26c
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Wed Nov 13 14:55:54 2013 -0800

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit dff6f732317c33e5906e279bf0264f5fb2aaf17d
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Wed Nov 13 14:54:58 2013 -0800

    [maven-release-plugin] prepare release v1.0.8

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit 0fbe0275c783270516ab90dbea945827e6f6cfb5
Author: Matthew Dempsky <mdempsky@google.com>
Date:   Tue Nov 12 17:01:42 2013 -0800

    Fix node collision from folded string literals.
    
    Fixes issue 209.
    
    Review-Link: https://codereview.appspot.com/25460044/

M	core/src/main/java/com/google/errorprone/JavacErrorDescriptionListener.java
M	core/src/main/java/com/google/errorprone/WrappedTreeMap.java
M	core/src/test/java/com/google/errorprone/EndPosTest.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/SelfAssignmentPositiveCases1.java

commit 04ce80c2ac391c5ceddaffd935c2b5473c31f7e0
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Tue Nov 12 14:03:49 2013 -0800

    Finally bugfix: don't assume completion statements occur inside methods.

M	core/src/main/java/com/google/errorprone/bugpatterns/Finally.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/FinallyPositiveCase1.java

commit 53bfc3c7e33d7436233ceb6138a13ffaa54b818b
Author: Caitlin Sadowski <supertri@google.com>
Date:   Mon Nov 11 18:18:05 2013 -0800

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit e1a1fdfddd29d89b48e698655d24a529179abc9d
Author: Caitlin Sadowski <supertri@google.com>
Date:   Mon Nov 11 18:17:58 2013 -0800

    [maven-release-plugin] prepare release v1.0.6

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit 2460a4919c21a6903f828d5df6b211f341944725
Author: Liam Miller-Cushon <cushon@google.com>
Date:   Mon Nov 11 13:44:16 2013 -0800

    Add checks for xlint warnings: dep-ann, overrides, finally, divzero

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/VisitorState.java
A	core/src/main/java/com/google/errorprone/bugpatterns/DepAnn.java
A	core/src/main/java/com/google/errorprone/bugpatterns/DivZero.java
A	core/src/main/java/com/google/errorprone/bugpatterns/Finally.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceOverridesGuiceInjectableMethod.java
A	core/src/main/java/com/google/errorprone/bugpatterns/Overrides.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/DepAnnTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/DivZeroTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/FinallyTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/OverridesTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/DepAnnNegativeCase1.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/DepAnnNegativeCase2.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/DepAnnPositiveCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/DivZeroNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/DivZeroPositiveCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/FinallyNegativeCase1.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/FinallyNegativeCase2.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/FinallyPositiveCase1.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/FinallyPositiveCase2.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/OverridesNegativeCase1.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/OverridesNegativeCase2.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/OverridesNegativeCase3.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/OverridesPositiveCase1.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/OverridesPositiveCase2.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/OverridesPositiveCase3.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/OverridesPositiveCase4.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/OverridesPositiveCase5.java

commit 3b84397e193f6042fbe6323f9bd472681fb3cd75
Author: Amin Shali <amshali@google.com>
Date:   Wed Nov 6 11:55:53 2013 -0800

    Added more cases to CollectionIncompatibleType. This CL adds more incompatibility cases from List and Map. From List I added indexOf and lastIndexOf and from Map I added containsKey, containsValue and remove.

M	core/src/main/java/com/google/errorprone/bugpatterns/CollectionIncompatibleType.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/CollectionIncompatibleTypeNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/CollectionIncompatibleTypePositiveCases.java

commit ae6ef9f2fd85ca560cdbe332977d21d9a27b7154
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Nov 4 16:26:12 2013 -0800

    Promote ProtoFieldNullComparison checker to MATURE

M	core/src/main/java/com/google/errorprone/bugpatterns/ProtoFieldNullComparison.java

commit 89f41c9b459f416d97826e1817fdb87737ceaea7
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Nov 4 16:24:46 2013 -0800

    Minor cleanups for JUnit3TestNotRun. Promote to MATURE.

M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit3TestNotRun.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit3TestNotRunTest.java

commit 349a8ad5aa26b5a2fd6099e4a871c324711116c5
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Nov 1 17:26:37 2013 -0700

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit eddccfe8d285cf5be667ebc0a499e875554c79a5
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Nov 1 17:26:30 2013 -0700

    [maven-release-plugin] prepare release v1.0.5

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit f95b432f949ca794b9445058d5f5fa185142c7ff
Merge: 4965553 2b34d53
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Nov 1 17:15:28 2013 -0700

    Merge master into WaitNotInLoop branch

commit 2b34d5374cc5e6e3b1ec318fa3f10d60d9302237
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Nov 1 13:53:12 2013 -0700

    Cleanup on ElementsCountedInLoop checker

M	core/src/main/java/com/google/errorprone/bugpatterns/ElementsCountedInLoop.java
A	core/src/test/java/com/google/errorprone/bugpatterns/ElementsCountedInLoopTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/IterablesSizeTest.java

commit 72c3ca20154ddb10f30aee6778a005a42e38c7a9
Author: Amin Shali <amshali@google.com>
Date:   Thu Oct 31 10:54:55 2013 -0700

    Applied the comments. Renamed class IterablesSize to ElementsCountedInLoop. Renamed all test cases and test base.

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
A	core/src/main/java/com/google/errorprone/bugpatterns/ElementsCountedInLoop.java
D	core/src/main/java/com/google/errorprone/bugpatterns/IterablesSize.java
M	core/src/test/java/com/google/errorprone/bugpatterns/IterablesSizeTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/ElementsCountedInLoopNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/ElementsCountedInLoopPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/IterablesSizeNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/IterablesSizePositiveCases.java

commit 7a69dc0b97f584dc616148809211ae9a689b00f5
Author: Amin Shali <amshali@google.com>
Date:   Tue Oct 29 20:27:42 2013 -0700

    IterablesSize: Fixed the issue of wrongly suggesting to use Iterables for cases when we are dealing with a Collection or an array where we can use .size() and .length respectively.

M	core/src/main/java/com/google/errorprone/bugpatterns/IterablesSize.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/IterablesSizePositiveCases.java

commit eaf8bed058b733761ae5c81619ef49d2b6ef5fd5
Author: Matthew Dempsky <mdempsky@google.com>
Date:   Thu Oct 10 03:47:29 2013 -0700

    Fix WrappedTreeNode.equals()
    
    Under the previous WrappedTreeNode.equals(), the tree for
    "System.out.println" would be considered equal to subtree for just
    "System.out" because they have the same start position (right before
    "System"), same kind (MEMBER_SELECT), and same tag (SELECT).
    
    This commit changes it to also take into account the tree's "preferred
    position", which should be more unique.  E.g., for
    "System.out.println" the preferred position is the second dot, while
    for the subtree "System.out" it's the first dot.
    
    Additionally, this commit adds a runtime check to WrappedTreeMap's
    constructor to detect collisions so we don't risk silently returning
    the wrong end positions.
    
    Fixes issue 200.

M	core/src/main/java/com/google/errorprone/WrappedTreeMap.java

commit 3d327bc182e846f8ba56bc7af2ed695b902ee6ed
Author: Matthew Dempsky <mdempsky@google.com>
Date:   Wed Oct 23 13:06:42 2013 -0700

    Fix PreconditionsNotNullPrimitive bug checker
    
    Fixes a bad assertion error in the PreconditionsNotNullPrimitive bug
    checker that was triggered when various unhandled expressions were
    passed as an argument to checkNotNull().

M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitive.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitiveTest.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitivePositiveCases.java

commit fb48b35a206926fdb38d2d665413f9450cdd00fa
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Oct 29 15:19:20 2013 -0700

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit 42644c2d329a0ad5d246251f82eab268b566d4ac
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Oct 29 15:19:13 2013 -0700

    [maven-release-plugin] prepare release v1.0.4

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit 272373ddc98ababefc001cfcb8e3947475196a7b
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Oct 29 15:10:30 2013 -0700

    Revert @SafeVarargs change.
    
    Because it was a git submodule, this was causing problems for our
    contributors and was also blocking our release.  We will add this back
    in when the @SafeVarargs for Java 6 support is available on Maven Central.

D	.gitmodules
M	core/pom.xml
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	pom.xml
D	safevarargs

commit edad49fb4227237f6145cad51fd9c827c5793990
Author: Louis Wasserman <lowasser@google.com>
Date:   Wed Oct 23 13:53:29 2013 -0700

    Make StaticMethod fail the match rather than throwing an exception when not passed a method invocation.

M	core/src/main/java/com/google/errorprone/matchers/StaticMethod.java

commit 90aa6c4e861cb1e90ba9f1317c8e188d0fc5a624
Author: Alex Eagle <alexeagle@google.com>
Date:   Sun Oct 6 17:11:52 2013 -0700

    Add an example for using the gradle plugin.

A	examples/gradle/build.gradle
A	examples/gradle/src/main/java/Main.java

commit 32f91c3362dfc16dcf20cf3bd826dc928a9731a5
Merge: a941408 11da477
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Oct 1 14:19:20 2013 -0500

    Merge branch 'master' of https://code.google.com/p/error-prone

commit 11da477da2eb53004393b6d7a1e7bd8f8e6cfbf3
Merge: 22ba558 6051895
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Oct 1 12:08:42 2013 -0700

    Merge branch 'master' of https://code.google.com/p/error-prone

commit 60518956b9e93ef9ef4f58ef4d4979fa4ebf2141
Merge: 2112c50 9307b1b
Author: Matthew Dempsky <mdempsky@google.com>
Date:   Tue Oct 1 09:47:53 2013 -0700

    Merge branch 'mdempsky/safevarargs'

commit 22ba558f2f2b31f888619fce47ed94ac4ddcb7c4
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Oct 1 09:29:59 2013 -0700

    Minor change to satisfy javac 6 type checker

M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractReturnValueIgnored.java

commit 42ef0d62aba890bcd4b2b3d620e3a1bdbb2b4d73
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Oct 1 09:12:46 2013 -0700

    Fix for slow javadoc action on Google workstations

M	pom.xml

commit a941408130333747f0625830a06c1584b071f618
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Sep 30 22:54:45 2013 -0500

    Fix SearchingJavaCompiler

M	annotation/.classpath
M	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
M	core/src/main/java/com/google/errorprone/ErrorReportingJavaCompiler.java
M	core/src/main/java/com/google/errorprone/SearchingJavaCompiler.java

commit 2112c506fc16a593961d7bc3453ce4a18fe455ff
Author: Amin Shali <amshali@google.com>
Date:   Mon Sep 30 11:17:42 2013 -0700

    Fixed the issue with while loop pattern recognition for the iterable size.

M	core/src/main/java/com/google/errorprone/bugpatterns/IterablesSize.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/IterablesSizeNegativeCases.java

commit 9307b1bcee8f94212eed415b00388d31dcc66212
Author: Matthew Dempsky <mdempsky@google.com>
Date:   Mon Sep 30 09:06:06 2013 -0700

    Allow @SafeVarargs to be used even on JDK 6
    
    This commit adds https://github.com/google/safevarargs as a Git
    submodule and adding it as a conditional compile-time-only dependency,
    which makes it possible to use @SafeVarargs annotations while staying
    compatible with JDK 6.
    
    Using a submodule is necessary because com.google.backport:safevarargs
    is not available in Maven Central.

A	.gitmodules
M	core/pom.xml
M	pom.xml
A	safevarargs

commit 84aa6d99c64ec38e4cc79d15bacf2964371ca552
Author: Matthew Dempsky <mdempsky@google.com>
Date:   Wed Sep 25 14:56:45 2013 -0700

    Mark the anyOf() and allOf() helper methods as @SafeVarargs so they
    don't trigger varargs warnings.
    
    Also, add nothing() to complement anything().
    
    Fixes issue 195.

M	core/src/main/java/com/google/errorprone/matchers/Matchers.java

commit 7de7f24eb75b8b0cca1da435befb982bbbaa5943
Author: Alex Eagle <alexeagle@google.com>
Date:   Sun Sep 22 20:58:57 2013 -0700

    Add a repro for bug where annotation processing causes broken error-prone triggering.
    
    Update issue 188

M	examples/maven/pom.xml
A	examples/maven/src/main/java/NeedsAnnotationProcessing.java

commit f027f0696da2c79312338bf9ce3f6e36f67537b4
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Sep 20 14:23:08 2013 -0700

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit c51783efed92748e7320ab28de79e449fe1fb283
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Sep 20 14:22:58 2013 -0700

    [maven-release-plugin] prepare release 1.0.3

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit 3b523eef26f92bb5c942ca07d94fd6a2e255b7f5
Author: Radoslaw Burny <rburny@google.com>
Date:   Wed Sep 18 17:52:40 2013 -0700

    Fix false positive ("est" prefix), fix comments.

M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit3TestNotRun.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit3TestNotRunNegativeCase1.java

commit 751c191db14eaf26fc7023dd94b8b1fe58705fe4
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Sep 20 13:48:47 2013 -0700

    Add missing files

A	core/src/main/java/com/google/errorprone/bugpatterns/ProtoFieldNullComparison.java
A	core/src/test/java/com/google/errorprone/bugpatterns/ProtoFieldNullComparisonTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/ProtoFieldNullComparisonNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/ProtoFieldNullComparisonPositiveCases.java

commit 12b79e426eb147bd406ec6546c3c2e5276b5941b
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Sep 20 13:48:26 2013 -0700

    Rename InvalidProtoFieldNullComparison -> ProtoFieldNullComparison

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
D	core/src/main/java/com/google/errorprone/bugpatterns/InvalidProtoFieldNullComparison.java
D	core/src/test/java/com/google/errorprone/bugpatterns/InvalidProtoFieldNullComparisonTest.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/InvalidProtoFieldNullComparisonNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/InvalidProtoFieldNullComparisonPositiveCases.java

commit 07559b47674594fdf40f2855f83b492f67f9093c
Merge: 80add4f a5e7730
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Sep 20 13:44:57 2013 -0700

    Update InvalidProtoFieldNullComparison checker to 1.0 API

commit 80add4f0726d81895097e95dc0451aecd0c8c689
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Sep 19 17:07:37 2013 -0700

    Fix bug in SelfAssignment checker

M	core/src/main/java/com/google/errorprone/bugpatterns/SelfAssignment.java

commit 6cea670c380294bcd6d44539a98b781bee9d067e
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Sep 18 15:27:21 2013 -0700

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit 9d45bbd2b83455f918c4b9636dbc2e3763fbcc10
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Sep 18 15:27:14 2013 -0700

    [maven-release-plugin] prepare release v1.0.2

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit 5e849a47eb77a5476d0e3b64ef7c3d6b5b0b2600
Author: Amin Shali <amshali@google.com>
Date:   Wed Sep 18 14:27:54 2013 -0700

    Fixes from code review

M	core/src/main/java/com/google/errorprone/bugpatterns/IterablesSize.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/IterablesSizeNegativeCases.java

commit 78cf5869c867674615da6bb7038ef4b226a9e65f
Author: Amin Shali <amshali@google.com>
Date:   Tue Sep 17 12:01:58 2013 -0700

    Added IterablesSize

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
A	core/src/main/java/com/google/errorprone/bugpatterns/IterablesSize.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
A	core/src/test/java/com/google/errorprone/bugpatterns/IterablesSizeTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/IterablesSizeNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/IterablesSizePositiveCases.java

commit 60ed04f6fc41c0038d222ad4641264f42b48b11d
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Sep 18 11:44:38 2013 -0700

    Fixed bug in SelfAssignment and added a test case

M	core/src/main/java/com/google/errorprone/bugpatterns/SelfAssignment.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/SelfAssignmentNegativeCases.java

commit a5e7730c7dfe1ce5929048cff91202bfb94b0d0f
Author: Felix Berger <flx@google.com>
Date:   Mon Sep 16 14:36:27 2013 -0400

    ok

M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidProtoFieldNullComparison.java
M	core/src/main/java/com/google/errorprone/matchers/InstanceMethod.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/test/java/com/google/errorprone/matchers/InstanceMethodTest.java

commit 53208d355ed6484aa5589de5ceea5e1521f4daae
Merge: b95d6ad da2681c
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Sep 13 17:59:50 2013 -0700

    Merge branch 'master' of https://code.google.com/p/error-prone

commit b95d6adf38f523a374c7563eef870a8400e45ac6
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Sep 13 17:59:44 2013 -0700

    Fix for very slow mvn package command

M	pom.xml

commit da2681c8ec8211e2197de0bd17ff24eff2baa7dd
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Sep 13 15:08:42 2013 -0700

    Rename InvalidStringEquality to StringEquality

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
D	core/src/main/java/com/google/errorprone/bugpatterns/InvalidStringEquality.java
A	core/src/main/java/com/google/errorprone/bugpatterns/StringEquality.java
D	core/src/test/java/com/google/errorprone/bugpatterns/InvalidStringEqualityTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/StringEqualityTest.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/InvalidStringEqualityNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/InvalidStringEqualityPositiveCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/StringEqualityNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/StringEqualityPositiveCases.java

commit b259ceb84d8259782d0f59244f47cefe561b30a7
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Sep 13 15:06:12 2013 -0700

    Rename InvalidNumericEquality to NumericEquality

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
D	core/src/main/java/com/google/errorprone/bugpatterns/InvalidNumericEquality.java
A	core/src/main/java/com/google/errorprone/bugpatterns/NumericEquality.java
D	core/src/test/java/com/google/errorprone/bugpatterns/InvalidNumericEqualityTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/NumericEqualityTest.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/InvalidNumericEqualityNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/InvalidNumericEqualityPositiveCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/NumericEqualityNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/NumericEqualityPositiveCases.java

commit 0655d420e414c659fe0eef70e00b3a7d1bffbf9b
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Sep 12 17:14:22 2013 -0700

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit 7d6111b2b1767362a7e0d68829274d7b95dad3d3
Author: Radoslaw Burny <rburny@google.com>
Date:   Wed Sep 11 17:44:26 2013 -0700

    Enable testCase5

M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit3TestNotRunTest.java

commit 8357aaf0d08efc436347d32af2a71c428421a5c9
Author: Radoslaw Burny <rburny@google.com>
Date:   Wed Sep 11 17:31:04 2013 -0700

    Support abstract classes & annotation inheritance.

M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit3TestNotRun.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit3TestNotRunTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit3TestNotRunNegativeCase4.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit3TestNotRunNegativeCase5.java

commit 9658454318d455e268e37155523a9d8274f82d8e
Author: Radoslaw Burny <rburny@google.com>
Date:   Tue Sep 10 18:58:40 2013 -0700

    Added JUnit3TestNotRun, now with @Test detection.

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
A	core/src/main/java/com/google/errorprone/bugpatterns/JUnit3TestNotRun.java
A	core/src/test/java/com/google/errorprone/bugpatterns/JUnit3TestNotRunTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit3TestNotRunNegativeCase1.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit3TestNotRunNegativeCase2.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit3TestNotRunNegativeCase3.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit3TestNotRunPositiveCases.java

commit ed6eecae3ac353b4226dd752feb2b36c8122eb93
Author: Radoslaw Burny <rburny@google.com>
Date:   Wed Sep 11 17:31:04 2013 -0700

    fixed NPE, added Supplier.VOID_TYPE

M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/suppliers/Suppliers.java

commit dcfe4b47765e50a050a9543371e2dcccf9d77b06
Author: Felix Berger <flx@google.com>
Date:   Thu Sep 12 15:10:35 2013 -0400

    ok

M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidProtoFieldNullComparison.java

commit dd02fc3b55202cdf863c55fcb8f8924e2f10e554
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Sep 12 10:46:16 2013 -0700

    [maven-release-plugin] prepare release v1.0.1

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit c094b17b4bbfa91395dfc93dc6ac9236f1e12211
Merge: f86dc4a 2f355ff
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Sep 11 17:40:45 2013 -0700

    Merge branch 'master' of https://code.google.com/p/error-prone

commit f86dc4a1bb00caec0c47f3227f708bf5afde99e7
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Sep 11 17:40:40 2013 -0700

    Minor fixes for TryFailThrowable

M	core/src/main/java/com/google/errorprone/bugpatterns/TryFailThrowable.java

commit e7d1c35eae1797618630fc3bf53a57d491fa6065
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Sep 11 17:39:48 2013 -0700

    Add constructor case to ASTHelpers.getSymbol()

M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java

commit 2f355ff21916659f146c8f5324948bfabfd19254
Author: Alex Eagle <alexeagle@google.com>
Date:   Wed Sep 11 11:10:16 2013 -0700

    Update maven example now that 1.0 is launched.

M	examples/maven/pom.xml

commit a6d2ac59eb292c4ecb983b071f1a099abfa987bb
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Sep 10 16:43:22 2013 -0700

    Forgot to add new files

A	core/src/main/java/com/google/errorprone/bugpatterns/TryFailThrowable.java
A	core/src/test/java/com/google/errorprone/bugpatterns/TryFailThrowableTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/TryFailThrowableNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/TryFailThrowablePositiveCases.java

commit af92da936f9e6450db3764c37cf78c7e77ea7652
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Sep 10 16:28:04 2013 -0700

    Rename TryFailWithEmptyCatchThrowable checker

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
D	core/src/main/java/com/google/errorprone/bugpatterns/TryFailWithEmptyCatchThrowable.java
D	core/src/test/java/com/google/errorprone/bugpatterns/TryFailWithEmptyCatchThrowableTest.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/TryFailWithEmptyCatchThrowableNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/TryFailWithEmptyCatchThrowablePositiveCases.java

commit bddd896a32d90181f8c6c8233c33d935311f57d5
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Sep 10 13:24:06 2013 -0700

    Scanner creation now fails if there are no enabled checks

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java

commit 854330470b03650a38ce2ecaf151c218175fc8c0
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Sep 9 20:40:55 2013 -0700

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit 89acd9c087c53ec34225c1daa9a66181aeb53938
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Sep 9 18:05:32 2013 -0700

    [maven-release-plugin] prepare release v1.0

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit 435a763fb2a16841b8c9c6db7c9301bfd699ab25
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Sep 9 17:27:45 2013 -0700

    make BugChecker serializable

M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java

commit 85165fe8090b6e115d679786909c66a6f6a06837
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Sep 9 13:37:47 2013 -0700

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit daaa7f7d55f29a4eb1fd17c82b8712e64329ef29
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Sep 9 13:37:45 2013 -0700

    [maven-release-plugin] prepare release v1.0

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit 422010e991ec1057bec43b36e831a3bdcad2d83c
Author: Alex Eagle <alexeagle@google.com>
Date:   Wed Sep 4 17:54:39 2013 -0700

    Toggle maturity of BugChecks with Severity=ERROR to match those which we've released in Google.

M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/CovariantEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidNumericEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/TryFailWithEmptyCatchThrowable.java

commit 2e2efd0394681b20111ae9a39340e6847e77745f
Author: Alex Eagle <alexeagle@google.com>
Date:   Wed Sep 4 17:10:03 2013 -0700

    Update example to point at a working staged 1.0 release. Should be updated again soon when the release is done.

M	examples/maven/pom.xml

commit 437e4bf808eaabb016310dfb3343c2b9d6bafe04
Author: Alex Eagle <alexeagle@google.com>
Date:   Wed Sep 4 17:09:12 2013 -0700

    Improve formatting of the BugPatterns page so I don't have to manually fix descriptions containing un-escaped wiki syntax. Also make the ordering constant.

M	annotation/src/main/java/com/google/errorprone/BugPattern.java
M	docgen/src/main/java/com/google/errorprone/DocGen.java

commit d4f3c495b7a1b268f51f02b0d3a7726dace69bcb
Author: Alex Eagle <alexeagle@google.com>
Date:   Wed Sep 4 14:17:40 2013 -0700

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit 0c34dedfee2cb00e01dfd3182b6313abc2109312
Author: Alex Eagle <alexeagle@google.com>
Date:   Wed Sep 4 14:17:39 2013 -0700

    [maven-release-plugin] prepare release v1.0a3

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit d04b5618716fda175705f0ff6a44fd313ab6ebca
Merge: e3aa60d 51240b9
Author: Alex Eagle <alexeagle@google.com>
Date:   Wed Sep 4 13:50:19 2013 -0700

    Merge https://github.com/olamy/error-prone
    
    Conflicts:
    	.gitignore

commit e3aa60d1edbe06282bea0fa10a5041468ab15a80
Merge: 0e97a33 46a2d84
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Sep 3 21:35:08 2013 -0700

    Merge branch 'catchthrowable' into real_master

commit 0e97a336019b2590a5a486cd4d0249a60db36eb7
Merge: 4147425 6642ef9
Author: Alex Loh <alexloh@google.com>
Date:   Tue Sep 3 14:45:15 2013 -0700

    Merge from master

commit 51240b9111c48b459882a266e33785423fe13bef
Author: Olivier Lamy <olamy@apache.org>
Date:   Tue Sep 3 11:31:08 2013 +1000

    do not use a dependency-reduced pom for shaded plugin to prevent rewriting pom with tools.jar location

M	.gitignore
M	.idea/vcs.xml
M	ant/pom.xml
M	core/pom.xml
M	pom.xml

commit 46a2d84fa751b5346a932bfce981e9f8aa3db6d7
Author: Adam Wos <adamwos@google.com>
Date:   Mon Sep 2 16:29:46 2013 +0200

    Review comments for TryFailWithEmptyCatchThrowable

M	core/src/main/java/com/google/errorprone/bugpatterns/TryFailWithEmptyCatchThrowable.java

commit 6642ef92e599d43a18920efa3553e77d7da9a39c
Merge: 47f1b1b e631ef0
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Aug 30 10:57:22 2013 -0700

    Merge branch 'checkreturnvalue-super' into real_master

commit 4147425bcae55b942e8270a5774d1b2bc61b4bb9
Author: Alex Loh <alexloh@google.com>
Date:   Thu Aug 29 14:36:19 2013 -0700

    Renamed static inner class check to ClassCanBeStatic

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
A	core/src/main/java/com/google/errorprone/bugpatterns/ClassCanBeStatic.java
D	core/src/main/java/com/google/errorprone/bugpatterns/NonStaticInnerClass.java
A	core/src/test/java/com/google/errorprone/bugpatterns/ClassCanBeStaticTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/NonStaticInnerClassTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/ClassCanBeStaticNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/ClassCanBeStaticPositiveCase1.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/ClassCanBeStaticPositiveCase2.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/ClassCanBeStaticPositiveCase3.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/NonStaticInnerClassNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/NonStaticInnerClassPositiveCase1.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/NonStaticInnerClassPositiveCase2.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/NonStaticInnerClassPositiveCase3.java

commit d8dc4233fdb65fe060a78884aadc78b5e0373ee9
Author: Felix Berger <flx@google.com>
Date:   Thu Aug 29 13:31:25 2013 -0400

    cleanup

M	core/src/test/resources/com/google/errorprone/proto/proto_test.proto

commit 4f4d59fbb4d7de8019a07c4750c98abdfe94bee7
Author: Felix Berger <flx@google.com>
Date:   Thu Aug 29 13:29:43 2013 -0400

    cleaned up protos

M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidProtoFieldNullComparison.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InvalidProtoFieldNullComparisonTest.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InvalidProtoFieldNullComparisonNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InvalidProtoFieldNullComparisonPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/Test.java
A	core/src/test/resources/com/google/errorprone/proto/ProtoTest.java
A	core/src/test/resources/com/google/errorprone/proto/proto_test.proto

commit fb7453ed2a1f7b6a8dd36d5f606c5276b27d7594
Author: Felix Berger <flx@google.com>
Date:   Thu Aug 29 12:28:51 2013 -0400

    working proto receiver matcher

M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidProtoFieldNullComparison.java
M	core/src/main/java/com/google/errorprone/matchers/InstanceMethod.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java

commit d89d5b4be6e2ff69653e826ad3ecb3c7835a4bad
Author: Felix Berger <flx@google.com>
Date:   Thu Aug 29 11:19:17 2013 -0400

    wild card match

M	core/src/main/java/com/google/errorprone/matchers/InstanceMethod.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/test/java/com/google/errorprone/matchers/InstanceMethodTest.java

commit 9da9e5e9213fa1928c5feec3969d748f2e06ed6d
Author: Felix Berger <flx@google.com>
Date:   Wed Aug 28 14:42:13 2013 -0400

    ok

M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidProtoFieldNullComparison.java

commit b1c648bbe2630a21308bb5d11c2dae2d9a1500c8
Merge: 9ea47fa 1a87c33
Author: Adam Wos <adamwos@google.com>
Date:   Wed Aug 28 11:28:09 2013 +0200

    Merge branch 'catchthrowable' of https://code.google.com/r/adamwos-errorprone-catchthrowable into catchthrowable

commit 9ea47faa7f1fc0e4c79e2a3ffae6c7879eb35d78
Author: Adam Wos <adamwos@google.com>
Date:   Wed Aug 28 11:21:31 2013 +0200

    Modify the try-fail to work with non-last fail or assert, and with *MoreAsserts classes

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/bugpatterns/TryFailWithEmptyCatchThrowable.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/TryFailWithEmptyCatchThrowableNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/TryFailWithEmptyCatchThrowablePositiveCases.java

commit d7799220f370587efbafb105cedba099deb01955
Author: Adam Wos <adamwos@google.com>
Date:   Mon Aug 26 11:39:32 2013 +0200

    x

M	.gitignore
A	core/src/main/java/com/google/errorprone/bugpatterns/TryFailWithEmptyCatchThrowable.java
A	core/src/test/java/com/google/errorprone/bugpatterns/TryFailWithEmptyCatchThrowableTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/TryFailWithEmptyCatchThrowableNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/TryFailWithEmptyCatchThrowablePositiveCases.java

commit 1a87c33bd18648f484133794840e94bd8d1d4a64
Merge: 063f0e5 b4a1570
Author: Adam Wos <adamwos@google.com>
Date:   Wed Aug 28 11:24:38 2013 +0200

    Merge

commit 063f0e52f3e6ae46b3098b833eed9a391b1af960
Author: Adam Wos <adamwos@google.com>
Date:   Wed Aug 28 11:21:31 2013 +0200

    Modify the try-fail to work with non-last fail or assert, and with *MoreAsserts classes

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/bugpatterns/TryFailWithEmptyCatchThrowable.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/TryFailWithEmptyCatchThrowableNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/TryFailWithEmptyCatchThrowablePositiveCases.java

commit e0bff912d469a2fac26a14c943577acf12a2965d
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Aug 27 16:22:18 2013 -0700

    Add missing tree node types and corresponding visit methods to ErrorProneScanner

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java

commit 6f493bea247d4a00ab9ecfe5a54635b18d7f65b6
Author: Adam Wos <adamwos@google.com>
Date:   Mon Aug 26 11:39:32 2013 +0200

    Initial version of the TryFailWithEmptyCatchThrowable check

M	.gitignore
A	core/src/main/java/com/google/errorprone/bugpatterns/TryFailWithEmptyCatchThrowable.java
A	core/src/test/java/com/google/errorprone/bugpatterns/TryFailWithEmptyCatchThrowableTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/TryFailWithEmptyCatchThrowableNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/TryFailWithEmptyCatchThrowablePositiveCases.java

commit 47f1b1b5159951ae2f4a44c9a08a11c69f8de9cf
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Aug 27 16:22:18 2013 -0700

    Add missing tree node types and corresponding visit methods to ErrorProneScanner

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java

commit e631ef04aebe8cf77840b3d5e9a532471896f845
Author: Chris Povirk <cpovirk@google.com>
Date:   Mon Aug 26 17:05:11 2013 -0400

    initial export

M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractReturnValueIgnored.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/CheckReturnValuePositiveCases.java

commit b4a1570dfce58a88f5b8762502c1939337875ec6
Author: Adam Wos <adamwos@google.com>
Date:   Mon Aug 26 11:39:32 2013 +0200

    x

M	.gitignore
A	core/src/main/java/com/google/errorprone/bugpatterns/TryFailWithEmptyCatchThrowable.java
A	core/src/test/java/com/google/errorprone/bugpatterns/TryFailWithEmptyCatchThrowableTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/TryFailWithEmptyCatchThrowableNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/TryFailWithEmptyCatchThrowablePositiveCases.java

commit 87467d059fa9c4d485ff0e9678b69e3f3b178558
Author: Alex Loh <alexloh@google.com>
Date:   Sun Aug 25 14:34:36 2013 -0700

    Included fixes from code review (8/21/13)

M	core/src/main/java/com/google/errorprone/bugpatterns/NonStaticInnerClass.java
M	core/src/main/java/com/google/errorprone/matchers/HasIdentifier.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/NonStaticInnerClassNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/NonStaticInnerClassPositiveCase1$Inner1.class
M	core/src/test/resources/com/google/errorprone/bugpatterns/NonStaticInnerClassPositiveCase1.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/NonStaticInnerClassPositiveCase2.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/NonStaticInnerClassPositiveCase3.java

commit e196b3f0746106e97bf011f1ad3e62396ba92f0d
Author: Alex Loh <alexloh@google.com>
Date:   Sun Aug 25 14:29:29 2013 -0700

    Submitted for code review

M	core/src/main/java/com/google/errorprone/bugpatterns/NonStaticInnerClass.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/NonStaticInnerClassNegativeCases.java

commit 5f38675ec51c16d54b4d36677b8f88923d59a9f0
Merge: 13661b9 c7b0a26
Author: Louis Wasserman <lowasser@google.com>
Date:   Fri Aug 23 15:10:38 2013 -0700

    Merge with error-prone upstream

commit c7b0a26638de4f4b9bd3f674e0c2924775f78fc6
Merge: 8edcd72 5070bb4
Author: Louis Wasserman <lowasser@google.com>
Date:   Fri Aug 23 15:08:41 2013 -0700

    Merge remote-tracking branch 'origin/master' into abstractMethodInjection

commit 5070bb4801aaeb9f30d56222ccae5cc90d0aadef
Merge: 92c5d46 ec9880e
Author: Louis Wasserman <lowasser@google.com>
Date:   Fri Aug 23 15:07:35 2013 -0700

    Merge with error-prone upstream

commit ec9880eae5b8d071ae630a77c8184a8e6865ce3b
Merge: 535a840 09b36a1
Author: Louis Wasserman <lowasser@google.com>
Date:   Fri Aug 23 15:04:44 2013 -0700

    Merge branch 'master' into QualifiersAndScopeExclusive

commit 09b36a13b8e996e9b67cfeebabc8db9b06c46173
Merge: 6f1fdb0 6f83c08
Author: Louis Wasserman <lowasser@google.com>
Date:   Fri Aug 23 15:01:55 2013 -0700

    Merge branch 'master' into makemixingwarning

commit 6f83c0839dd0343f229406d4222d8c5bea768c47
Merge: 1ca38ed f223e76
Author: Louis Wasserman <lowasser@google.com>
Date:   Fri Aug 23 14:58:11 2013 -0700

    Merge with error-prone upstream

commit 4c6b9e38ffe68eb98f820f7a77d436a47f76c16a
Author: Felix Berger <flx@google.com>
Date:   Fri Aug 23 17:20:07 2013 -0400

    ok

M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java

commit 2c600867be13bda7b159d16cfc61203195cd0232
Author: Felix Berger <flx@google.com>
Date:   Fri Aug 23 17:19:51 2013 -0400

    ok

M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java

commit 6f1fdb09a296763da231350a85ae4d09bfe4a08c
Author: Steven Goldfeder <sgoldfed@gmail.com>
Date:   Thu Aug 22 16:48:26 2013 -0700

    added suppression test, removed prefix from suppression string, other nits

M	core/src/main/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnConstructors.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnConstructorsNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnConstructorsPositiveCases.java

commit 535a840af729ccaca4584de7f47d1627bdd39144
Author: Steven Goldfeder <sgoldfed@gmail.com>
Date:   Thu Aug 22 16:41:55 2013 -0700

    Added suppression tests, changed suppresion string and bugpattern name. Other refactorings from code review

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
D	core/src/main/java/com/google/errorprone/bugpatterns/InjectBothQualifierAndScope.java
A	core/src/main/java/com/google/errorprone/bugpatterns/InjectOverlappingQualifierAndScopeAnnotation.java
D	core/src/test/java/com/google/errorprone/bugpatterns/InjectBothQualifierAndScopeTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/InjectOverlappingQualifierAndScopeAnnotationTest.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/InjectBothQualifierAndScopeNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/InjectBothQualifierAndScopePositiveCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/InjectOverlappingQualifierAndScopeAnnotationNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/InjectOverlappingQualifierAndScopeAnnotationPositiveCases.java

commit 92c5d46c935d806818dc0596420cd8239dd31d4f
Author: Steven Goldfeder <sgoldfed@gmail.com>
Date:   Thu Aug 22 16:26:40 2013 -0700

    added supression tests, removed prefix from suppression strings, removed extra space

M	core/src/main/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnSameConstructor.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnSameConstructorNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnSameConstructorPositiveCases.java

commit 1ca38edede921430f54beb12e54bcedc4ffeb253
Author: Steven Goldfeder <sgoldfed@gmail.com>
Date:   Thu Aug 22 16:11:57 2013 -0700

    added suppression test and removed extra space

M	core/src/test/resources/com/google/errorprone/bugpatterns/InjectMoreThanOneInjectableConstructorNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InjectMoreThanOneInjectableConstructorPositiveCases.java

commit 13661b985eadb9daa8b3e456ff8ebeb603ca8f13
Author: Steven Goldfeder <sgoldfed@gmail.com>
Date:   Thu Aug 22 16:03:07 2013 -0700

    added suppression tests, removed prefix from suppression string, other code review fixes

M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceOverridesGuiceInjectableMethod.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceOverridesJavaxInjectableMethod.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceOverridesGuiceInjectableMethodNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceOverridesJavaxInjectableMethodNegativeCases.java

commit 8edcd72948e7059804b5babae2e2ba5b663d83f8
Author: Steven Goldfeder <sgoldfed@gmail.com>
Date:   Thu Aug 22 15:23:17 2013 -0700

    Added Suppression test and removed prefix from suppression string

M	core/src/main/java/com/google/errorprone/bugpatterns/InjectJavaxInjectOnAbstractMethod.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InjectJavaxInjectOnAbstractMethodNegativeCases.java

commit f223e76a3d4569f904f9ab1861298dc774d73675
Author: Steven Goldfeder <sgoldfed@gmail.com>
Date:   Mon Aug 19 16:58:39 2013 -0700

    refactored to use new error-prone API

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceInjectOnFinalField.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectJavaxInjectOnFinalField.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceInjectOnFinalFieldTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectJavaxInjectOnFinalFieldTest.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceInjectOnFinalFieldNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceInjectOnFinalFieldPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InjectJavaxInjectOnFinalFieldNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InjectJavaxInjectOnFinalFieldPositiveCases.java

commit 76a0748b639d8a358a15eaeba94644f40b34fa13
Author: Steven Goldfeder <sgoldfed@gmail.com>
Date:   Mon Jun 24 13:50:06 2013 -0700

    new bugpatterns for injecting final fields. If you use
    javax.inject.Inject, an error is given in compliance with the JSR-330
    spec that forbids using javax.inject.Inject on final fields. If you use
    com.google.inject.Inject, a warning is given in compliance with the
    Guice documentation that allows this, but reccomends not to do it.

A	core/src/main/java/com/google/errorprone/bugpatterns/GuiceInjectOnFinalField.java
A	core/src/main/java/com/google/errorprone/bugpatterns/InjectJavaxInjectOnFinalField.java
A	core/src/test/java/com/google/errorprone/bugpatterns/GuiceInjectOnFinalFieldTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/InjectJavaxInjectOnFinalFieldTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceInjectOnFinalFieldNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceInjectOnFinalFieldPositiveCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/InjectJavaxInjectOnFinalFieldNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/InjectJavaxInjectOnFinalFieldPositiveCases.java

commit cdcd29163286c473921ee697383d39b9badebbc3
Author: Steven Goldfeder <sgoldfed@gmail.com>
Date:   Mon Aug 19 16:22:53 2013 -0700

    refactored to use new error-prone API

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceOverridesGuiceInjectableMethod.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceOverridesJavaxInjectableMethod.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceOverridesGuiceInjectableMethodTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceOverridesJavaxInjectableMethodTest.java

commit 84e188d0c3dfbcaea8d7a6233891b458a05abfbb
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Aug 20 11:01:04 2013 -0700

    Add ability to construct an ErrorProneScanner with a list of checks

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java

commit 0130f17cc7e7082ddb398847e11e94d702559ab2
Author: Steven Goldfeder <sgoldfed@gmail.com>
Date:   Mon Aug 19 15:37:59 2013 -0700

    refactored to use new error-prone API

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectBothQualifierAndScope.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectBothQualifierAndScopeTest.java

commit 6fcf4f91f31e602c05dbefeb411ab11e660c4a3a
Author: Steven Goldfeder <sgoldfed@gmail.com>
Date:   Wed Jun 19 13:03:33 2013 -0700

    new check to fail if an annotation is declared to be both a qualifier
    and a scope annotation. That is, this is a test for annotation types.

A	core/src/main/java/com/google/errorprone/bugpatterns/InjectBothQualifierAndScope.java
A	core/src/test/java/com/google/errorprone/bugpatterns/InjectBothQualifierAndScopeTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/InjectBothQualifierAndScopeNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/InjectBothQualifierAndScopePositiveCases.java

commit b37bc8c7233fcd7d99009f55eff650859c33ffcb
Author: Steven Goldfeder <sgoldfed@gmail.com>
Date:   Mon Aug 19 20:21:07 2013 -0700

    refactored to use new error-prone API

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectMoreThanOneInjectableConstructor.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectMoreThanOneInjectableConstructorTest.java

commit 25289fe8fd65223742c69dacdfbe519303bbe941
Author: Steven Goldfeder <sgoldfed@gmail.com>
Date:   Mon Jul 8 14:32:44 2013 -0700

    bugpattern for classes with more than one injectable constructor.

A	core/src/main/java/com/google/errorprone/bugpatterns/InjectMoreThanOneInjectableConstructor.java
A	core/src/test/java/com/google/errorprone/bugpatterns/InjectMoreThanOneInjectableConstructorTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/InjectMoreThanOneInjectableConstructorNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/InjectMoreThanOneInjectableConstructorPositiveCases.java

commit 97783e2f83720fd102d74e6b04f7552a2bb217cb
Author: Steven Goldfeder <sgoldfed@gmail.com>
Date:   Mon Aug 19 20:09:06 2013 -0700

    refactored to use new error-prone API

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnSameConstructor.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnSameConstructorTest.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnConstructorsNegativeCases.java

commit c3298123b509313f7a5a2f23173f32198e59c6dc
Author: Steven Goldfeder <sgoldfed@gmail.com>
Date:   Wed Jul 3 10:55:47 2013 -0700

    Added a warning for methods that
     *   1) are not themselves annotated with @Inject
     *     (neither javax.inject.Inject nor com.google.inject.Inject)
     *   2) descend from a method that is annotated with
    @com.google.inject.Inject

A	core/src/main/java/com/google/errorprone/bugpatterns/GuiceOverridesGuiceInjectableMethod.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceOverridesJavaxInjectableMethod.java
A	core/src/test/java/com/google/errorprone/bugpatterns/GuiceOverridesGuiceInjectableMethodTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceOverridesGuiceInjectableMethodNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceOverridesGuiceInjectableMethodPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceOverridesJavaxInjectableMethodNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceOverridesJavaxInjectableMethodPositiveCases.java

commit 14221d7fe2361db3e8c3f2afd15481721a4cda57
Author: Steven Goldfeder <sgoldfed@gmail.com>
Date:   Mon Jul 1 19:36:28 2013 -0700

    new bugpattern checker matches methods that
     * 1) are not themselves annotated with @Inject
     * 2) descend from a method that is annotated with @javax.inject.Inject
     * 3) do not descent from a method that is annotated with
    @com.google.inject.Inject

A	core/src/main/java/com/google/errorprone/bugpatterns/GuiceOverridesJavaxInjectableMethod.java
A	core/src/test/java/com/google/errorprone/bugpatterns/GuiceOverridesJavaxInjectableMethodTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceOverridesJavaxInjectableMethodNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceOverridesJavaxInjectableMethodPositiveCases.java

commit 2ad33b9090ded449798b4c8e42ce96c8762780bc
Author: Steven Goldfeder <sgoldfed@gmail.com>
Date:   Mon Aug 19 16:08:34 2013 -0700

    refactored to use new error-prone API

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectJavaxInjectOnAbstractMethod.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectJavaxInjectOnAbstractMethodTest.java

commit af3078399e637b2b00095f1ceac149e16b28060d
Author: Steven Goldfeder <sgoldfed@gmail.com>
Date:   Mon Jun 24 15:36:47 2013 -0700

    new bugpattern for @javax.inject.Inject on abstract methods

A	core/src/main/java/com/google/errorprone/bugpatterns/InjectJavaxInjectOnAbstractMethod.java
A	core/src/test/java/com/google/errorprone/bugpatterns/InjectJavaxInjectOnAbstractMethodTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/InjectJavaxInjectOnAbstractMethodNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/InjectJavaxInjectOnAbstractMethodPositiveCases.java

commit 5bfe391ab1e7b2ec1e32ae9dace392f75267a21f
Merge: 4c78252 670cf9e
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Aug 19 15:42:46 2013 -0700

    Merge branch 'master' of https://code.google.com/p/error-prone

commit 51a84c4ea9e3c26137d2872cd7226d7c66073771
Author: Steven Goldfeder <sgoldfed@gmail.com>
Date:   Wed Jun 19 13:03:33 2013 -0700

    new bugpattern for @Inject and @AssistedInject on
    the same constructor

A	core/src/main/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnSameConstructor.java
A	core/src/test/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnSameConstructorTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnSameConstructorNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnSameConstructorPositiveCases.java

commit 670cf9ebf3a0080e320073ff7db8e27e3d61476b
Author: Alex Eagle <alexeagle@google.com>
Date:   Fri Aug 16 17:09:59 2013 -0700

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit 1b3f3bdcc88193c9dc65941ebd578af67a118660
Author: Alex Eagle <alexeagle@google.com>
Date:   Fri Aug 16 17:09:51 2013 -0700

    [maven-release-plugin] prepare release 1.0

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit 0b550dafbd434324979098f50e68ca28bd6885ea
Author: Steven Goldfeder <sgoldfed@gmail.com>
Date:   Fri Aug 16 15:54:25 2013 -0700

    Changed mixing AssistedInject and @Inject in the same class and different constructors to a warning

M	core/src/main/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnConstructors.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnConstructorsTest.java

commit 4a5350df30e9c5e16d3a82d72b7679712ea41414
Author: Alex Eagle <alexeagle@google.com>
Date:   Fri Aug 16 13:27:20 2013 -0700

    Use another approach for the tools.jar dep - don't use the <optional>true which causes brokenness in maven compiler, instead just disable the profile automatically when the file isn't found.

M	ant/pom.xml
M	core/pom.xml

commit 4c782528cc8cb53d783be5c4369d6ed75fc92da2
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Aug 16 13:17:03 2013 -0700

    Fixes to SelfAssignment checker, including better suggested fix

M	core/src/main/java/com/google/errorprone/bugpatterns/SelfAssignment.java
D	core/src/main/java/com/google/errorprone/bugpatterns/SelfAssignmentChecker.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/SelfAssignmentPositiveCases1.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/SelfAssignmentPositiveCases2.java

commit fa2f28ad7dd241156d935fa4c963aa6f2f56e7b7
Author: Alex Eagle <alexeagle@google.com>
Date:   Tue Aug 13 11:37:19 2013 -0700

    Disable the PreconditionsExpensiveString check, since it has a bug.
    Update issue 173

M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsExpensiveString.java

commit 14f949ba928dfacca917c6ef889f44191b817ba6
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon Aug 12 17:28:25 2013 -0700

    Fix remaining cases where it was necessary to create a scanner specifically inside a BugChecker. This also makes it easier to create custom BugCheckers in private codebases.

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TestNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquals.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4TestNotRunTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SelfEqualsTest.java

commit 3fc3eb99b6ed23e0ca96ac31723d5aef60c44885
Merge: bc0102d 6cce93c
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon Aug 12 17:19:07 2013 -0700

    Merge branch 'RefactorBugPatterns'

commit 6cce93c1a5a2cd2055ba62fe91a92359fb72cebf
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon Aug 12 17:17:30 2013 -0700

    Revert my partial merge of SelfAssignment{,Checker} and re-perform the refactoring. Still need to merge these two manually.

M	core/src/main/java/com/google/errorprone/bugpatterns/SelfAssignment.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfAssignmentChecker.java

commit f701f2aa8d1078e506c1b41e3f280204dd41c2bb
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon Aug 12 16:56:35 2013 -0700

    Move new Matchers to inner classes of BugChecker, since they go together. Also fix some matchers which weren't static, and were hard to read the condition due to negation.

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/Scanner.java
M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractReturnValueIgnored.java
M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractSuppressWarningsMatcher.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToStringCompoundAssignment.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToStringConcatenation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BadShiftAmount.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/CollectionIncompatibleType.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ComparisonOutOfRange.java
M	core/src/main/java/com/google/errorprone/bugpatterns/CovariantEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/DeadException.java
M	core/src/main/java/com/google/errorprone/bugpatterns/EmptyIfStatement.java
M	core/src/main/java/com/google/errorprone/bugpatterns/EmptyStatement.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceAssistedInjectScoping.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceAssistedParameters.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnConstructors.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectInvalidTargetingOnScopingAnnotation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectMoreThanOneQualifier.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectMoreThanOneScopeAnnotationOnClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectScopeAnnotationOnInterfaceOrAbstractClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectScopeOrQualifierAnnotationRetention.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidNumericEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidPatternSyntax.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidStringEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TestNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffix.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ModifyingCollectionWithItself.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NonRuntimeAnnotation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/OrderingFrom.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNull.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitive.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsExpensiveString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsTooManyArgs.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfAssignment.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfAssignmentChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/UnneededConditionalOperator.java
M	core/src/main/java/com/google/errorprone/bugpatterns/WrongParameterPackage.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/suppliers/Suppliers.java
M	idea-plugin/idea-plugin.iml

commit 34fdb093bf1f4e1eda1ac767e94dfc790ef461d0
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon Aug 12 15:17:58 2013 -0700

    Add missing file.

A	core/src/main/java/com/google/errorprone/matchers/Suppressable.java

commit 496555378f8c4fc588bbdc36a568483c0c456f46
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Aug 12 14:54:14 2013 -0700

    Working on WaitNotInLoop fixes

M	core/src/main/java/com/google/errorprone/bugpatterns/WaitNotInLoop.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/WaitNotInLoopPositiveCases.java

commit bc0102dd741ad6de7cedf1631a41bd3c34d35abe
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon Aug 12 14:43:58 2013 -0700

    Got the idea-plugin working again. Tweak the messaging that shows up in the UI.

M	idea-plugin/META-INF/plugin.xml
M	idea-plugin/idea-plugin.iml

commit ae319032fb4ac210d6020ed822fb4c5c1cd013d8
Merge: b7ad454 3131389
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon Aug 12 14:20:23 2013 -0700

    Merge https://code.google.com/r/sergeysimonchik-error-prone

commit 38d71667c76b6018b3d27baf54b968495c89665c
Author: Alex Loh <alexloh@google.com>
Date:   Mon Aug 12 13:45:20 2013 -0700

    Changed severity type on NonStaticInnerClass so that it activates in unit tests

M	core/src/main/java/com/google/errorprone/bugpatterns/NonStaticInnerClass.java

commit 0aa55cdcc5c335a397769003d87bfe513385e036
Merge: aab2f0d b7ad454
Author: Alex Loh <alexloh@google.com>
Date:   Mon Aug 12 13:38:55 2013 -0700

    Merge branch 'master' of https://code.google.com/p/error-prone

commit aab2f0d5ef574d8cfd566b4d2adb8ce7bf49efff
Author: Alex Loh <alexloh@google.com>
Date:   Thu Jul 18 12:01:16 2013 -0700

    Check for non-static inner class using DSL matchers

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
A	core/src/main/java/com/google/errorprone/bugpatterns/NonStaticInnerClass.java
A	core/src/main/java/com/google/errorprone/matchers/ClassModifier.java
A	core/src/main/java/com/google/errorprone/matchers/HasIdentifier.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/NonStaticInnerClassTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/NonStaticInnerClassNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/NonStaticInnerClassPositiveCase1$Inner1.class
A	core/src/test/resources/com/google/errorprone/bugpatterns/NonStaticInnerClassPositiveCase1.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/NonStaticInnerClassPositiveCase2.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/NonStaticInnerClassPositiveCase3.java

commit 481dba79f084f18a050342b6cc0ec597eea9d1d3
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon Aug 12 01:11:10 2013 -0700

    More refactoring based on what Eddie started. Highlights:
    - Almost no checks implement their own Scanner
    - DescribingMatcher class deleted
    - Checks can implement more than one kind of matcher
    - Use a sentinel value rather than null for "no match"
    - Still construct efficient lists for executing checks against tree nodes based on the type of node
    All tests passing, and this feels nearly ready to merge to trunk. Big question is the proper resolution of the diverged SelfAssignment and SelfAssignmentChecker.

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/Scanner.java
M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractReturnValueIgnored.java
M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractSuppressWarningsMatcher.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayEquals.java
D	core/src/main/java/com/google/errorprone/bugpatterns/ArrayEqualsChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToString.java
D	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToStringChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToStringCompoundAssignment.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToStringConcatenation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BadShiftAmount.java
D	core/src/main/java/com/google/errorprone/bugpatterns/BadShiftAmountChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/CheckReturnValue.java
M	core/src/main/java/com/google/errorprone/bugpatterns/CollectionIncompatibleType.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ComparisonOutOfRange.java
M	core/src/main/java/com/google/errorprone/bugpatterns/CovariantEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/DeadException.java
M	core/src/main/java/com/google/errorprone/bugpatterns/EmptyIfStatement.java
M	core/src/main/java/com/google/errorprone/bugpatterns/EmptyStatement.java
M	core/src/main/java/com/google/errorprone/bugpatterns/FallThroughSuppression.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceAssistedInjectScoping.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceAssistedParameters.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnConstructors.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectInvalidTargetingOnScopingAnnotation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectMoreThanOneQualifier.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectMoreThanOneScopeAnnotationOnClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectScopeAnnotationOnInterfaceOrAbstractClass.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InjectScopeOrQualifierAnnotationRetention.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidNumericEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidPatternSyntax.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidStringEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TestNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffix.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ModifyingCollectionWithItself.java
M	core/src/main/java/com/google/errorprone/bugpatterns/NonRuntimeAnnotation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/OrderingFrom.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNull.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitive.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsExpensiveString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsTooManyArgs.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ReturnValueIgnored.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfAssignment.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfAssignmentChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SuppressWarningsDeprecated.java
M	core/src/main/java/com/google/errorprone/bugpatterns/UnneededConditionalOperator.java
M	core/src/main/java/com/google/errorprone/bugpatterns/WrongParameterPackage.java
D	core/src/main/java/com/google/errorprone/matchers/DescribingMatcher.java
M	core/src/main/java/com/google/errorprone/matchers/Description.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayToStringTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/BadShiftAmountTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/BugPatternUnitTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SelfAssignmentTest.java
M	core/src/test/java/com/google/errorprone/suppresswarnings/SuppressWarningsTest.java

commit a55753d55f1c7f517bb977441785ff84cb4b9a04
Merge: d3cc7c0 b7ad454
Author: Alex Eagle <alexeagle@google.com>
Date:   Sat Aug 10 15:47:38 2013 -0700

    Merge remote-tracking branch 'origin/master' into RefactorBugPatterns
    
    Conflicts:
    	core/src/test/java/com/google/errorprone/bugpatterns/ArrayEqualsTest.java
    	core/src/test/java/com/google/errorprone/bugpatterns/ArrayToStringTest.java
    	core/src/test/java/com/google/errorprone/bugpatterns/SelfAssignmentTest.java

commit b7ad4540f69d6dd9e329b8a29963644aa5cbc93b
Author: Alex Eagle <alexeagle@google.com>
Date:   Sat Aug 10 15:17:20 2013 -0700

    Apply fixes from olamy for the dependency on tools.jar. As a result of this change, the build now requires telling Maven to activate the "tools.jar" profile (eg. "-Ptools.jar")

M	ant/pom.xml
M	core/pom.xml

commit 5f6af256da06e24205c8f3f6889615320607899a
Merge: 95e3ac1 8f47fab
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Aug 9 15:56:07 2013 -0700

    Merge branch 'master' into WaitNotInLoop

commit 8f47fab865bf9c636805e68f757e39dbca1ef252
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Aug 9 15:54:51 2013 -0700

    Allow SuggestedFixes on arbitrary indices

M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java

commit 95e3ac19d03bf5d5f46238547a68bb407a2812ee
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Aug 9 15:45:53 2013 -0700

    Intermediate commit iterating on WaitNotInLoop

M	core/src/main/java/com/google/errorprone/bugpatterns/WaitNotInLoop.java

commit ab412db6bb557d0ac81b2dfe428f6d34a1cf087a
Author: Felix Berger <flx@google.com>
Date:   Thu Aug 8 10:52:27 2013 -0400

    test files

A	core/src/test/java/com/google/errorprone/bugpatterns/InvalidProtoFieldNullComparisonTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/InvalidProtoFieldNullComparisonNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/InvalidProtoFieldNullComparisonPositiveCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/Test.java

commit 36f49a909e06f0a261df73e2091fc3f5279669f1
Author: Felix Berger <flx@google.com>
Date:   Thu Aug 8 10:51:31 2013 -0400

    ok

M	core/pom.xml
M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java

commit 7bc72556254ded77cc11e5592f9af43aa3a714dc
Author: Felix Berger <flx@google.com>
Date:   Wed Aug 7 15:44:55 2013 -0400

    more changes

M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidProtoFieldNullComparison.java

commit b66ecf17fbf58ffc58ef28f7b8d832f924a1e0f5
Author: Felix Berger <flx@google.com>
Date:   Wed Aug 7 15:43:54 2013 -0400

    review changes

M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidProtoFieldNullComparison.java

commit d044c68184cbc83f07693ed1fc4ad5124164d675
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Aug 7 10:03:12 2013 -0700

    First cut at WaitNotInLoop checker

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
A	core/src/main/java/com/google/errorprone/bugpatterns/WaitNotInLoop.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/WaitNotInLoopTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/WaitNotInLoopNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/WaitNotInLoopPositiveCases.java

commit 818bd2c8270a8d080d61d050f32805046563bbbf
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon Aug 5 08:54:08 2013 -0700

    Remove maven plugin from our VCS since it will instead be part of
    plexus-compilers.

D	maven/pom.xml
D	maven/src/main/java/org/codehaus/plexus/compiler/javac/PlexusErrorProneCompiler.java
D	maven/src/main/resources/META-INF/plexus/components.xml
M	pom.xml

commit 1942ffaf53a17c321fa5e2d92ccd07fde0392313
Author: Alex Eagle <alexeagle@google.com>
Date:   Sun Aug 4 16:36:31 2013 -0700

    Change maven example to work with current plugin at https://github.com/alexeagle/plexus-compiler

M	examples/maven/pom.xml

commit ca00dac87d5cdc41a5cfbeb1c4f7dbc572f71114
Author: Alex Eagle <alexeagle@google.com>
Date:   Sun Aug 4 14:50:44 2013 -0700

    For checks annotated with @BugPattern(severity = WARNING), report a warning rather than an error.
    
    Fixes issue #28

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/JavacErrorDescriptionListener.java
M	core/src/main/java/com/google/errorprone/Scanner.java
M	core/src/main/java/com/google/errorprone/matchers/Description.java
M	core/src/main/resources/com/google/errorprone/errors.properties
M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/ErrorReportingJavaCompilerIntegrationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DeadExceptionTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/OrderingFromTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/UnneededConditionalOperatorTest.java
M	core/src/test/resources/com/google/errorprone/MultipleTopLevelClassesWithErrors.java

commit e48da092eed16c2fbe35bf87ecd45c9dbd0f756f
Author: Alex Eagle <alexeagle@google.com>
Date:   Sun Aug 4 13:48:07 2013 -0700

    Add missing checks to the ErrorProneScanner.
    
    Fixes issue #169

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayToStringCompoundAssignmentTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayToStringConcatenationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayToStringTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CheckReturnValueTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CollectionIncompatibleTypeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ComparisonOutOfRangeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CovariantEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DeadExceptionTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/EmptyIfStatementTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceAssistedInjectScopingTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceAssistedParametersTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnConstructorsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectInvalidTargetingOnScopingAnnotationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectMoreThanOneQualifierTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectMoreThanOneScopeAnnotationOnClassTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectScopeAnnotationOnInterfaceOrAbstractClassTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectScopeOrQualifierAnnotationRetentionTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InvalidNumericEqualityTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InvalidPatternSyntaxTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InvalidStringEqualityTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4TestNotRunTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffixTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ModifyingCollectionWithItselfTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/NonRuntimeAnnotationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/OrderingFromTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitiveTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsTooManyArgsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ReturnValueIgnoredTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SelfAssignmentTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SelfEqualityTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SuppressWarningsDeprecatedTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/UnneededConditionalOperatorTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/WrongParameterPackageTest.java

commit 143a085ecca7788f6197fa1d8196e77d69ebff0d
Author: Alex Eagle <alexeagle@google.com>
Date:   Thu Aug 1 16:50:42 2013 -0700

    Revert <optional>true on tools.jar since it causes some strange maven breakage when compiling

M	core/pom.xml

commit 6aa3db81ef1576a1aa5195ede8045902986e7f96
Author: Alex Eagle <alexeagle@google.com>
Date:   Thu Aug 1 09:01:41 2013 -0700

    Prep for using error-prone in a new maven plugin.

M	core/pom.xml
M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java

commit ee05977a733fcc002e2a6767c1fdfacfbe22129e
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon Jul 29 15:55:53 2013 -0700

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	maven/pom.xml
M	pom.xml

commit c30fd2cbe0d0693ecbbcab5ed1778dfe7d860410
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon Jul 29 15:55:44 2013 -0700

    [maven-release-plugin] prepare release v1.0a2

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	maven/pom.xml
M	pom.xml

commit 9ff6fcec711c06f2a3c3b498e04c9dde72f00c21
Merge: 6d9af1b 86e33b1
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon Jul 29 15:47:43 2013 -0700

    Merge branch 'master' of https://code.google.com/p/error-prone

commit 6d9af1bfc9a50668e2ce836cadabecefd5db45bf
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon Jul 29 15:42:58 2013 -0700

    Update maven plugin to work with plexus-compiler-javac version 2.2+

M	examples/maven/pom.xml
M	maven/pom.xml
D	maven/src/main/java/com/google/errorprone/PlexusErrorProneCompiler.java
A	maven/src/main/java/org/codehaus/plexus/compiler/javac/PlexusErrorProneCompiler.java
M	maven/src/main/resources/META-INF/plexus/components.xml

commit 86e33b144fb626234150cee2ca2eb05d06eed131
Merge: eb5164c 7f7c31b
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon Jul 29 12:38:46 2013 -0700

    Merge branch 'master' of https://code.google.com/p/error-prone

commit 7f7c31b7bec52d2bf0b79493891c49031a9847f0
Merge: d977058 91b30d2
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon Jul 29 12:38:21 2013 -0700

    Merge branch 'master' of https://code.google.com/p/error-prone

commit d977058c216a806cb48c5e21d4c40478f083ebb4
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon Jul 29 12:37:49 2013 -0700

    Try moving tools.jar dependency back to a profile to see if the release plugin handles it differently.

D	annotation/release-pom.xml
D	ant/release-pom.xml
M	core/pom.xml
D	core/release-pom.xml
D	docgen/release-pom.xml
D	maven/release-pom.xml
D	release-pom.xml

commit eb5164c0cd37510fbb9b298974e0e85df9364fe7
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon Jul 29 12:10:41 2013 -0700

    Finish release.

D	annotation/release-pom.xml
D	ant/release-pom.xml
D	core/release-pom.xml
D	docgen/release-pom.xml
D	maven/release-pom.xml
D	release-pom.xml

commit 91b30d2ecf3f96ab230f2c3d701acda5a567a50e
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon Jul 29 10:23:15 2013 -0700

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	maven/pom.xml
M	pom.xml

commit 8d908f642cb97fd44f3b0b52d0f1785273f1ca1f
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon Jul 29 10:07:38 2013 -0700

    [maven-release-plugin] prepare release v1.0_alpha

M	annotation/pom.xml
A	annotation/release-pom.xml
M	ant/pom.xml
A	ant/release-pom.xml
M	core/pom.xml
A	core/release-pom.xml
M	docgen/pom.xml
A	docgen/release-pom.xml
M	maven/pom.xml
A	maven/release-pom.xml
M	pom.xml
A	release-pom.xml

commit a698a55ba385ea274668cb3ee091cc33c1f26163
Merge: d84e14b 450322e
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon Jul 29 08:35:08 2013 -0700

    Merge branch 'master' of https://code.google.com/p/error-prone
    
    Conflicts:
    	annotation/pom.xml
    	ant/pom.xml
    	core/pom.xml
    	docgen/pom.xml
    	maven/pom.xml
    	pom.xml

commit d84e14b13bf8131f986216143bc274f87ed6a658
Author: Alex Eagle <alexeagle@google.com>
Date:   Sun Jul 28 18:38:37 2013 -0700

    [maven-release-plugin] prepare release v0.9.14

M	annotation/pom.xml
A	annotation/release-pom.xml
M	ant/pom.xml
A	ant/release-pom.xml
M	core/pom.xml
A	core/release-pom.xml
M	docgen/pom.xml
A	docgen/release-pom.xml
M	maven/pom.xml
A	maven/release-pom.xml
M	pom.xml
A	release-pom.xml

commit d968ad92bc57ef266d4e3dbe9e62d2d3ef69387b
Author: Felix Berger <flx@google.com>
Date:   Thu Jul 25 16:12:26 2013 -0400

    comparison

A	core/src/main/java/com/google/errorprone/bugpatterns/InvalidProtoFieldNullComparison.java

commit 3131389962d1c2f0a2d53b4a006dc90470b92204
Author: Sergey.Simonchik@gmail.com <sergey.simonchik@jetbrains.com>
Date:   Thu Jul 25 14:57:25 2013 +0400

    don't load ErrorProneCompiler in IDE main process, because IDE could be started with java6, and error-prone requires java7

M	idea-plugin/src/com/google/errorprone/intellij/ErrorProneIdeaCompiler.java

commit 450322e7b8fddf85f22ac9dfb65666fd5f51e606
Author: Scott Johnson <scottjohnson@google.com>
Date:   Mon Jun 17 13:42:18 2013 -0400

    Added ModifyingCollectionWithItself bugpattern.

A	core/src/main/java/com/google/errorprone/bugpatterns/ModifyingCollectionWithItself.java
A	core/src/test/java/com/google/errorprone/bugpatterns/ModifyingCollectionWithItselfTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/ModifyingCollectionWithItselfNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/ModifyingCollectionWithItselfPositiveCases.java

commit 2b6519cd67eef6c9046d6106eadb19227a237e16
Author: Sergey Simonchik <sergey.simonchik@jetbrains.com>
Date:   Wed Jul 24 00:07:56 2013 +0400

    compatibility with IDEA 12.1.4

M	idea-plugin/META-INF/plugin.xml
M	idea-plugin/src/com/google/errorprone/intellij/ErrorProneIdeaCompiler.java

commit 76755d5e8622ed6ae896d556f69a84496b08ce77
Author: Louis Wasserman <lowasser@google.com>
Date:   Wed Jul 10 09:38:17 2013 -0700

    Rollback InjectMisuseOfScopingAnnotation, which is invalid for other DI frameworks from Guice

D	core/src/main/java/com/google/errorprone/bugpatterns/InjectMisuseOfScopingAnnotation.java
D	core/src/test/java/com/google/errorprone/bugpatterns/InjectMisuseOfScopingAnnotationTest.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/InjectMisuseOfScopingAnnotationNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/InjectMisuseOfScopingAnnotationPositiveCases.java

commit ab5720a74b3fb6127996aaab2dc318bd966149e6
Author: Steven Goldfeder <sgoldfed@gmail.com>
Date:   Fri Jun 21 16:52:39 2013 -0700

    new bugpattern to ensure that scoping and qualifier annotations have
    runtime retention.

A	core/src/main/java/com/google/errorprone/bugpatterns/InjectScopeOrQualifierAnnotationRetention.java
A	core/src/test/java/com/google/errorprone/bugpatterns/InjectScopeOrQualifierAnnotationRetentionTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/InjectScopeOrQualifierAnnotationRetentionNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/InjectScopeOrQualifierAnnotationRetentionPositiveCases.java

commit 00037094ccbc11406c60fde84396f6d3d8c68fab
Author: Steven Goldfeder <sgoldfed@gmail.com>
Date:   Thu Jun 20 18:51:38 2013 -0700

    new bugpattern to check that scoping annotations have @Target set to
    TYPE and/or METHOD.

A	core/src/main/java/com/google/errorprone/bugpatterns/InjectInvalidTargetingOnScopingAnnotation.java
A	core/src/test/java/com/google/errorprone/bugpatterns/InjectInvalidTargetingOnScopingAnnotationTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/InjectInvalidTargetingOnScopingAnnotationNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/InjectInvalidTargetingOnScopingAnnotationPositiveCases.java

commit 395dc015f3deea36b1668ce69497709e69ad13c2
Author: Steven Goldfeder <sgoldfed@gmail.com>
Date:   Thu Jun 20 10:46:11 2013 -0700

    bugpattern for scoping annotations on interfaces or abstract classes

M	core/src/main/java/com/google/errorprone/bugpatterns/InjectScopeAnnotationOnInterfaceOrAbstractClass.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InjectScopeAnnotationOnInterfaceOrAbstractClassTest.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InjectScopeAnnotationOnInterfaceOrAbstractClassNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InjectScopeAnnotationOnInterfaceOrAbstractClassPositiveCases.java

commit 4e6cc1028c99947f51a5b568afaac29c82de6bb0
Author: Steven Goldfeder <sgoldfed@gmail.com>
Date:   Wed Jun 19 15:46:02 2013 -0700

    new bugpattern that only allows scoping annotation on classes and
    @Provides methods

A	core/src/main/java/com/google/errorprone/bugpatterns/InjectMisuseOfScopingAnnotation.java
A	core/src/test/java/com/google/errorprone/bugpatterns/InjectMisuseOfScopingAnnotationTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/InjectMisuseOfScopingAnnotationNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/InjectMisuseOfScopingAnnotationPositiveCases.java

commit 1f1d8693ef9cd794505711593bb126d833d645b2
Author: Steven Goldfeder <sgoldfed@gmail.com>
Date:   Tue Jun 18 15:18:04 2013 -0700

    more than one qualifier annotation bugpattern

A	core/src/main/java/com/google/errorprone/bugpatterns/InjectMoreThanOneQualifier.java
A	core/src/test/java/com/google/errorprone/bugpatterns/InjectMoreThanOneQualifierTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/InjectMoreThanOneQualifierNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/InjectMoreThanOneQualifierPositiveCases.java

commit 335bca9202ee3d7f2c79398e11ec619426f8fb89
Author: Scott Johnson <scottjohnson@google.com>
Date:   Thu Jun 13 15:27:44 2013 -0400

    SelfEquality bugfix added

A	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquality.java
A	core/src/test/java/com/google/errorprone/bugpatterns/SelfEqualityTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/SelfEqualityNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/SelfEqualityPositiveCases.java

commit 109f0f9f5d2f0aaafb970c620ae34a4657452128
Merge: a92fc6e e7793bc
Author: Louis Wasserman <lowasser@google.com>
Date:   Mon Jul 1 15:57:06 2013 -0700

    Merge remote-tracking branch 'origin/master' into assistedInjectParameters

commit a92fc6e1f5b29f256098fc9141adafb8c9c891b0
Author: Steven Goldfeder <sgoldfed@gmail.com>
Date:   Fri Jun 28 11:50:04 2013 -0700

    added a new bugattern to check if more than one @Assisted parameter in a
    constructor has the  same type and exact same @Assisted annotation
    (including the value of the annotation).

A	core/src/main/java/com/google/errorprone/bugpatterns/GuiceAssistedParameters.java
A	core/src/test/java/com/google/errorprone/bugpatterns/GuiceAssistedParametersTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceAssistedParametersNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceAssistedParametersPositiveCases.java

commit e7793bc559e358e89ff7c1358b0c20d9b9bfe82b
Author: Steven Goldfeder <sgoldfed@gmail.com>
Date:   Wed Jun 19 13:03:33 2013 -0700

    new bugpattern for a class with @Inject and @AssistedInject on
    constructors

A	core/src/main/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnConstructors.java
A	core/src/test/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnConstructorsTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnConstructorsNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnConstructorsPositiveCases.java

commit d3cc7c042cb9ec1256c7b6613898d256e3ce1cc0
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Jun 25 17:38:58 2013 -0700

    Added BugChecker abstract class and started converting existing bug checkers over to use it

M	core/src/main/java/com/google/errorprone/Scanner.java
A	core/src/main/java/com/google/errorprone/bugpatterns/ArrayEqualsChecker.java
A	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToStringChecker.java
A	core/src/main/java/com/google/errorprone/bugpatterns/BadShiftAmountChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfAssignment.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfAssignmentChecker.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayToStringTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/BadShiftAmountTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SelfAssignmentTest.java

commit d7b6f761adedf7eba825864a27b1adf59d2e4400
Merge: d7ec600 2a3251f
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Jun 25 13:35:12 2013 -0700

    Merge branch 'master' into RefactorBugPatterns

commit 2a3251f211bb8e567f2374e3fad0513ef8463fbb
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Jun 25 10:00:17 2013 -0700

    Added todo for SelfAssignment on Objects.requireNonNull()

M	core/src/main/java/com/google/errorprone/bugpatterns/SelfAssignment.java

commit d7ec600d8f3455514fa1eb2dd6e549a2a26aaa79
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Jun 25 09:58:38 2013 -0700

    Started fixing SelfAssignment in variable declaration

D	core/src/main/java/com/google/errorprone/bugpatterns/ArrayEqualsChecker.java
A	core/src/main/java/com/google/errorprone/bugpatterns/SelfAssignmentChecker.java

commit 6721e480316daf021679d0d0846c7c7f04c1c5cd
Merge: 8424067 ea561a2
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Jun 24 16:48:45 2013 -0700

    Merge branch 'master' into RefactorBugPatterns

commit 878e653a9b8293805d82ddf9ed821a5278a3a00c
Author: Steven Goldfeder <sgoldfed@gmail.com>
Date:   Tue Jun 11 10:42:50 2013 -0700

    bugpattern for scoping annotations on interfaces or abstract classes

A	core/src/main/java/com/google/errorprone/bugpatterns/InjectScopeAnnotationOnInterfaceOrAbstractClass.java
A	core/src/test/java/com/google/errorprone/bugpatterns/InjectScopeAnnotationOnInterfaceOrAbstractClassTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/InjectScopeAnnotationOnInterfaceOrAbstractClassNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/InjectScopeAnnotationOnInterfaceOrAbstractClassPositiveCases.java

commit 30be5818310bf7f9df6765a8870f8d454f8cc902
Author: Scott Johnson <scottjohnson@google.com>
Date:   Thu Jun 13 15:27:04 2013 -0400

    NonRuntimeAnnotation bugfix added.

A	core/src/main/java/com/google/errorprone/bugpatterns/NonRuntimeAnnotation.java
A	core/src/test/java/com/google/errorprone/bugpatterns/NonRuntimeAnnotationTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/NonRuntimeAnnotationNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/NonRuntimeAnnotationPositiveCases.java

commit b88e619c3e45f7750bc0394d0cef2f4c77300710
Author: Scott Johnson <scottjohnson@google.com>
Date:   Fri Jun 14 16:30:16 2013 -0400

    SelfAssignment - Added support for Preconditions.checkNotNull()

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfAssignment.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/SelfAssignmentNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/SelfAssignmentPositiveCases2.java

commit 00e8aa85a44b9ccad38e4beae7927caea440bf3d
Author: Scott Johnson <scottjohnson@google.com>
Date:   Thu Jun 13 15:56:14 2013 -0400

    SelfAssignment bugfix modified to catch variable declarations.

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfAssignment.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/SelfAssignmentNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/SelfAssignmentPositiveCases2.java

commit 6583def1abc05398c9fd5e7bccb1c944d5eb6978
Author: Steven Goldfeder <sgoldfed@gmail.com>
Date:   Tue Jun 11 10:42:50 2013 -0700

    New bugpattern that checks for correct targeting on scoping annotations. Valid targets are TYPE and/or METHOD. The suggested Fix is to add "@Target({TYPE, METHOD})" if @Target is not present. If incorrect targeting is present, it suggests replacing it with "@Target({TYPE, METHOD})". In all cases, it suggests adding all the needed imports.

A	annotation/.classpath
M	annotation/src/main/java/com/google/errorprone/BugPattern.java
A	core/src/main/java/com/google/errorprone/bugpatterns/InjectMoreThanOneScopeAnnotationOnClass.java
A	core/src/test/java/com/google/errorprone/bugpatterns/InjectMoreThanOneScopeAnnotationOnClassTest.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceAssistedInjectScopingNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/InjectMoreThanOneScopeAnnotationOnClassNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/InjectMoreThanOneScopeAnnotationOnClassPositiveCases.java

commit f55ec1af5f9db55b63b085bcc3d83cf47be72a3c
Author: Louis Wasserman <lowasser@google.com>
Date:   Fri Jun 21 14:12:52 2013 -0700

    Alternative approach that doesn't generate NPEs with langtools6.

M	core/src/main/java/com/google/errorprone/bugpatterns/WrongParameterPackage.java

commit d108927eaa9b7d8037341cc14b60ba0e09339459
Author: Louis Wasserman <lowasser@google.com>
Date:   Fri Jun 21 13:16:58 2013 -0700

    Avoid using Scope.getElementsByName, which requires langtools7, and instead use the older Scope.lookup.

M	core/src/main/java/com/google/errorprone/bugpatterns/WrongParameterPackage.java

commit bf507c6b7db2fdf1e6dd503bb053769f811d2ffd
Author: Scott Johnson <scottjohnson@google.com>
Date:   Mon Jun 17 09:29:09 2013 -0400

    WrongParameterPackage bugfix added

M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidNumericEquality.java
A	core/src/main/java/com/google/errorprone/bugpatterns/WrongParameterPackage.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InvalidNumericEqualityTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/WrongParameterPackageTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/WrongParameterPackageNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/WrongParameterPackagePositiveCases.java

commit ea561a2bbfe35e9edb1185f8ca69e50f276abfb3
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Jun 19 18:00:23 2013 -0700

    Removed typeInfer variants of matchers, refactored to use normal generics stuff

M	core/src/main/java/com/google/errorprone/Scanner.java
M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractReturnValueIgnored.java
M	core/src/main/java/com/google/errorprone/bugpatterns/CheckReturnValue.java
M	core/src/main/java/com/google/errorprone/bugpatterns/CollectionIncompatibleType.java
M	core/src/main/java/com/google/errorprone/bugpatterns/CovariantEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/DeadException.java
M	core/src/main/java/com/google/errorprone/bugpatterns/EmptyIfStatement.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceAssistedInjectScoping.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNull.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsExpensiveString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ReturnValueIgnored.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/test/java/com/google/errorprone/matchers/AnnotationTest.java

commit ff41058c8e67d164b15ce1e7fb7179a58e901a86
Author: Scott Johnson <scottjohnson@google.com>
Date:   Fri Jun 14 10:39:25 2013 -0400

    Fixes as described in code review

M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidNumericEquality.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InvalidNumericEqualityPositiveCases.java

commit 54878cbc6f0c52e7ecdc57cb7246fc065e3062d1
Author: Scott Johnson <scottjohnson@google.com>
Date:   Thu Jun 13 16:31:21 2013 -0400

    small formatting changes

M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidNumericEquality.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InvalidNumericEqualityNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InvalidNumericEqualityPositiveCases.java

commit c91bf2f2bff6de05c2546bf845d5076539ed122f
Author: Scott Johnson <scottjohnson@google.com>
Date:   Thu Jun 13 15:58:46 2013 -0400

    Revert "ignore all eclipse files"
    
    This reverts commit dbbbace4fc8408c6fff1bd44f5d2aaeb74fe13d0.

M	.gitignore

commit 16b3ac0fc47112e2c0cac8d216ed6a43627dc403
Author: Scott Johnson <scottjohnson@google.com>
Date:   Thu Jun 13 15:23:08 2013 -0400

    InvalidNumericEquality Bugfix added.

A	core/src/main/java/com/google/errorprone/bugpatterns/InvalidNumericEquality.java
A	core/src/test/java/com/google/errorprone/bugpatterns/InvalidNumericEqualityTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/InvalidNumericEqualityNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/InvalidNumericEqualityPositiveCases.java

commit a9391697547cb88fc9285434683dbc9c1f75a9b1
Author: Scott Johnson <scottjohnson@google.com>
Date:   Thu Jun 13 15:31:48 2013 -0400

    ignore all eclipse files

M	.gitignore

commit b2fe77bc5573a469ea0907ddc2888da1e75131d5
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Jun 13 17:43:08 2013 -0700

    Added a binaryTree matcher

M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToStringConcatenation.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java

commit 9eef9417f7ceccd956c8bdb1bf25f9344f5dbe46
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Jun 13 14:22:48 2013 -0700

    Fixes from code review

M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToString.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/test/java/com/google/errorprone/util/ASTHelpersTest.java

commit 1cc7f1bffb99acfdb94ab103785f3d8c873895e5
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Jun 5 12:04:44 2013 -0700

    Better suggested fix for ArrayToString when printing a stack trace

M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToString.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java

commit 760588cfd8c373d1e6455a870d98db0b80e5d60a
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Jun 3 17:52:50 2013 -0700

    Working but needs cleanup

M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToString.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayToStringPositiveCases.java

commit 842406795769fd12eccf7012e442c0e65b08b823
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Jun 3 16:14:24 2013 -0700

    Starting refactoring of DescribingMatcher to BugChecker

A	core/src/main/java/com/google/errorprone/bugpatterns/ArrayEqualsChecker.java
A	core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java

commit 36c2b05f00c9c2731871620de9a6ecd7ecba70c9
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon May 20 11:21:16 2013 -0700

    Better error message for ArrayToString check

M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToString.java

commit 44194cb85e74960a3dccbd8fe5633ad4b3346b4c
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Apr 29 11:22:24 2013 -0700

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	maven/pom.xml
M	pom.xml

commit 07a391dc7e0da0f923582b41d9578b5b5b500835
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Apr 29 11:22:12 2013 -0700

    [maven-release-plugin] prepare release v0.9.15

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	maven/pom.xml
M	pom.xml

commit d5bcf5406961880d8dddd09d6cf2108110d53826
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Apr 29 10:48:32 2013 -0700

    bug fix for BadShiftAmount

M	core/src/main/java/com/google/errorprone/bugpatterns/BadShiftAmount.java

commit 671fa62d13851bfa9ec974fac60d5f85522424c5
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Apr 25 14:03:59 2013 -0700

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	maven/pom.xml
M	pom.xml

commit d3b7a6772f1279b1cf00da4ce39e3f40ac019cfa
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Apr 25 14:03:47 2013 -0700

    [maven-release-plugin] prepare release v0.9.14

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	maven/pom.xml
M	pom.xml

commit c3b8a5e83489a048d26879648ec90ebf5f97ec8d
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Apr 24 14:35:40 2013 -0700

    Fix wiki generator to include proper example files

M	docgen/src/main/java/com/google/errorprone/DocGen.java

commit 0de160355f6377c84019a7349d916cf40cfd7943
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Apr 24 13:58:09 2013 -0700

    Fix for format strings showing up in wiki pages.
    
    Added a new element to @BugPattern to specify a format string that can
    be used to generate specialized compiler error messages. Previously I
    was using the summary element for that, but that is also used for wiki
    pages.

M	annotation/src/main/java/com/google/errorprone/BugPattern.java
M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractReturnValueIgnored.java
M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractSuppressWarningsMatcher.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToStringCompoundAssignment.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToStringConcatenation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/BadShiftAmount.java
M	core/src/main/java/com/google/errorprone/bugpatterns/CollectionIncompatibleType.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ComparisonOutOfRange.java
M	core/src/main/java/com/google/errorprone/bugpatterns/CovariantEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/DeadException.java
M	core/src/main/java/com/google/errorprone/bugpatterns/EmptyIfStatement.java
M	core/src/main/java/com/google/errorprone/bugpatterns/EmptyStatement.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceAssistedInjectScoping.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidPatternSyntax.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidStringEquality.java
M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TestNotRun.java
M	core/src/main/java/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffix.java
M	core/src/main/java/com/google/errorprone/bugpatterns/OrderingFrom.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNull.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitive.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsExpensiveString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsTooManyArgs.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfAssignment.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/UnneededConditionalOperator.java
M	core/src/main/java/com/google/errorprone/matchers/DescribingMatcher.java

commit de898bb7e2fec27c4412eff28d782e9b93b5dcde
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Apr 24 13:26:23 2013 -0700

    Cleanup on BugPattern

M	annotation/src/main/java/com/google/errorprone/BugPattern.java

commit 58b12481f75965634f3c9938373cc08fa8a776df
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Apr 24 10:56:02 2013 -0700

    Fixes from code review with supertri

M	core/src/main/java/com/google/errorprone/bugpatterns/BadShiftAmount.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/test/java/com/google/errorprone/bugpatterns/BadShiftAmountTest.java
M	core/src/test/java/com/google/errorprone/util/ASTHelpersTest.java

commit 960ae38ca01fc971981fafe35813c4e7091b81d0
Merge: 5feb5de 9b50783
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Apr 23 13:38:32 2013 -0700

    Merge 2 new checks from adgar

commit 9b50783a1a2091de5f8d93bfde7602857ef72659
Author: Mike Edgar <adgar@google.com>
Date:   Sat Apr 20 19:08:01 2013 -0400

    Rename Concatenation and CompoundAssignment matcher test files.

M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToStringCompoundAssignment.java
A	core/src/test/java/com/google/errorprone/bugpatterns/ArrayToStringCompoundAssignmentTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/StringArrayConcatenateCompoundAssignmentTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayToStringCompoundAssignmentNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayToStringCompoundAssignmentPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/StringArrayConcatenateCompoundAssignmentNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/StringArrayConcatenateCompoundAssignmentPositiveCases.java

commit bb687c899ed238932425e6f14db5f276a48383e9
Author: Mike Edgar <adgar@google.com>
Date:   Sat Apr 20 19:03:17 2013 -0400

    Code review with eaftan@.

D	core/src/main/java/com/google/errorprone/bugpatterns/ArrayStringConcatenation.java
A	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToStringCompoundAssignment.java
A	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToStringConcatenation.java
D	core/src/main/java/com/google/errorprone/bugpatterns/StringArrayConcatenateCompoundAssignment.java
D	core/src/main/java/com/google/errorprone/matchers/BinaryOperator.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
D	core/src/test/java/com/google/errorprone/bugpatterns/ArrayStringConcatenationTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/ArrayToStringConcatenationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/StringArrayConcatenateCompoundAssignmentTest.java
D	core/src/test/java/com/google/errorprone/matchers/BinaryOperatorTest.java
M	core/src/test/java/com/google/errorprone/matchers/CompoundAssignmentTest.java

commit 5feb5de269866599fba0c7d983c6e9881276c32e
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Apr 19 15:23:32 2013 -0700

    Fixed javac6 bug with BadShiftAmount, added test for ASTHelpers

M	core/src/main/java/com/google/errorprone/bugpatterns/BadShiftAmount.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ComparisonOutOfRange.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
A	core/src/test/java/com/google/errorprone/util/ASTHelpersTest.java

commit 72452b4171b0041e1ef981a9923ed5e9038bc164
Author: Alex Eagle <alexeagle@google.com>
Date:   Thu Apr 18 22:15:03 2013 -0700

    Revert special error formatting for April 1.

M	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
M	core/src/main/java/com/google/errorprone/JavacErrorDescriptionListener.java
M	core/src/main/resources/com/google/errorprone/errors.properties

commit 9a6506428fd7775a44b2b3c154532159a7a114f5
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Apr 18 21:22:47 2013 -0700

    Fixes from code review

M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/BadShiftAmountPositiveCases.java

commit 0530a5b32bd039e298fc275a993fa1352f3206e4
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Apr 17 15:46:34 2013 -0700

    Better suggested fix when left operand is a literal

M	core/src/main/java/com/google/errorprone/bugpatterns/BadShiftAmount.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/BadShiftAmountPositiveCases.java

commit 72771b8166e62111d2a6ea4e3d13b3b7dd7e72be
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Apr 17 14:30:56 2013 -0700

    Cleanup on BadShiftAmount checker

M	core/src/main/java/com/google/errorprone/bugpatterns/BadShiftAmount.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/BadShiftAmountNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/BadShiftAmountPositiveCases.java

commit 4f399b4c23082b65f8155b351f8268ab358d5eb5
Merge: 93110f8 ad9eb7f
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Apr 17 13:56:06 2013 -0700

    Merge branch 'master' into BadShiftAmount

commit ad9eb7f00c7c150863a763bcbb48b2667740c0ce
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Apr 17 13:41:33 2013 -0700

    Bug fix for Issue 121

M	core/src/main/java/com/google/errorprone/JavacErrorDescriptionListener.java
M	core/src/main/java/com/google/errorprone/fixes/AppliedFix.java
M	core/src/test/java/com/google/errorprone/fixes/AppliedFixTest.java

commit 93110f89cc0e24b1cebfe3c5a5aba61bf73b5a2a
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Apr 16 14:04:00 2013 -0700

    Add a couple additional test cases

M	core/src/main/java/com/google/errorprone/bugpatterns/BadShiftAmount.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/BadShiftAmountNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/BadShiftAmountPositiveCases.java

commit 68f731bff312bd72d875b63fb67a2bd232dbdb13
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Apr 16 14:02:55 2013 -0700

    intermediate commit while fixing bug

M	core/src/test/java/com/google/errorprone/fixes/AppliedFixTest.java

commit 1ac215ee16a0bba9a412a909d4ab0e1a3736004d
Author: Mike Edgar <adgar@google.com>
Date:   Sun Apr 14 16:58:00 2013 -0400

    Fixed copyright notifications

M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayStringConcatenation.java
M	core/src/main/java/com/google/errorprone/bugpatterns/StringArrayConcatenateCompoundAssignment.java
M	core/src/main/java/com/google/errorprone/matchers/BinaryOperator.java
M	core/src/main/java/com/google/errorprone/matchers/CompoundAssignment.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayStringConcatenationNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayStringConcatenationPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/StringArrayConcatenateCompoundAssignmentNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/StringArrayConcatenateCompoundAssignmentPositiveCases.java

commit ce61416fbd8773003d86bd5f56b3e42569d9e068
Merge: 8ed4805 d512530
Author: Mike Edgar <adgar@google.com>
Date:   Sun Apr 14 16:53:46 2013 -0400

    Merged with ArrayToStringPositiveChanges EOL

commit 8ed4805179fcc5a92bfa709d6200d2b5ce35e30f
Author: Mike Edgar <adgar@google.com>
Date:   Sun Apr 14 16:52:54 2013 -0400

    Added ArrayStringConcatenation and StringArrayConcatenateCompoundAssignment checks.

A	core/src/main/java/com/google/errorprone/bugpatterns/ArrayStringConcatenation.java
A	core/src/main/java/com/google/errorprone/bugpatterns/StringArrayConcatenateCompoundAssignment.java
A	core/src/main/java/com/google/errorprone/matchers/BinaryOperator.java
A	core/src/main/java/com/google/errorprone/matchers/CompoundAssignment.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/ArrayStringConcatenationTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/StringArrayConcatenateCompoundAssignmentTest.java
A	core/src/test/java/com/google/errorprone/matchers/BinaryOperatorTest.java
A	core/src/test/java/com/google/errorprone/matchers/CompoundAssignmentTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayStringConcatenationNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayStringConcatenationPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayToStringPositiveCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/StringArrayConcatenateCompoundAssignmentNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/StringArrayConcatenateCompoundAssignmentPositiveCases.java

commit f10f48c87d828881dda9912f050bccf8bb36776c
Merge: 391418a a90b6a7
Author: Mike Edgar <adgar@google.com>
Date:   Fri Apr 12 22:19:27 2013 -0400

    Merge branch 'master' of https://code.google.com/r/error-prone
    
    Conflicts:
    	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
    	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToString.java
    	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayToStringNegativeCases.java
    	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayToStringPositiveCases.java

commit d51253011690def06db835d5ad605ca134c94d84
Merge: 391418a a90b6a7
Author: Mike Edgar <adgar@google.com>
Date:   Fri Apr 12 22:19:27 2013 -0400

    Merge branch 'master' of https://code.google.com/r/error-prone
    
    Conflicts:
    	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
    	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToString.java
    	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayToStringNegativeCases.java
    	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayToStringPositiveCases.java

commit 61d5a7a860dcc0643101c79b5a6a8923697e11dd
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Apr 10 17:21:12 2013 -0700

    First pass at BadShiftAmount checker

M	core/src/main/java/com/google/errorprone/bugpatterns/BadShiftAmount.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/BadShiftAmountNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/BadShiftAmountPositiveCases.java

commit a90b6a7ce9d496a4ebc5c83e29c32c557a19a67d
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Apr 10 15:37:54 2013 -0700

    Slight change for exit code 4 fix

M	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
M	core/src/main/java/com/google/errorprone/ErrorReportingJavaCompiler.java

commit ef77b52c616c12ee0d47d6feaa6e6088e4651f60
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Apr 9 16:47:58 2013 -0700

    Fix javac exits with code 4 bug

M	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
M	core/src/main/java/com/google/errorprone/ErrorReportingJavaCompiler.java

commit d49ea43e08a1823002b128b52fb018238aa9f056
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Apr 8 15:57:10 2013 -0700

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	maven/pom.xml
M	pom.xml

commit 8e711930c4460049fdcca1507b6cae28e8e20dce
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Apr 8 15:57:06 2013 -0700

    [maven-release-plugin] prepare release v0.9.13

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	maven/pom.xml
M	pom.xml

commit 418b700350aa655176fe0cd4f7b6956adae03fac
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Apr 8 13:43:48 2013 -0700

    Changes from code review

M	core/src/main/java/com/google/errorprone/bugpatterns/ComparisonOutOfRange.java
M	core/src/main/java/com/google/errorprone/fixes/AppliedFix.java
M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java

commit 81f3fe542e9bcda2ddf75c02c4939e734f6c6159
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Apr 8 12:06:31 2013 -0700

    Better parameter name for JUnit4TestNotRun constructor

M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TestNotRun.java

commit 5f7c27ae650a954fbff2d5bcac9a43f6b74082bd
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Apr 5 11:26:29 2013 -0700

    JUnit4TestNotRun now uses a whitelist of test runners

M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TestNotRun.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4TestNotRunTest.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4TestNotRunPositiveCase2.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4TestNotRunPositiveCase3.java

commit 71ec8bc8f4754e55c0f6ca186a0142f5d31ec3fe
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Apr 2 11:48:02 2013 -0700

    Remove IncompatibleEquals checker; it's not ready yet and was causing test failures in javac 6

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
D	core/src/main/java/com/google/errorprone/bugpatterns/IncompatibleEquals.java
D	core/src/test/java/com/google/errorprone/bugpatterns/IncompatibleEqualsTest.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/IncompatibleEqualsNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/IncompatibleEqualsPositiveCases.java

commit 0b535f49d3513e273de2fb1110d6e1b029ae6c97
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Apr 2 11:39:05 2013 -0700

    Fix a test failure with javac 6

M	core/src/main/java/com/google/errorprone/bugpatterns/ComparisonOutOfRange.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceAssistedInjectScoping.java
M	core/src/main/java/com/google/errorprone/fixes/AppliedFix.java
M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ComparisonOutOfRangePositiveCases.java

commit 1d0c6ed11a7a134c38046c7cb1bf8eb06238e728
Merge: 88cd5b2 f4fc582
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Apr 1 11:45:46 2013 -0700

    Merge branch 'ComparisonOutOfRangeTrimmed'

commit f4fc5827f724155deddeba0d3d0564f38abe8e64
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Apr 1 11:45:36 2013 -0700

    Changes from code review

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ComparisonOutOfRange.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ComparisonOutOfRangeNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ComparisonOutOfRangePositiveCases.java

commit 88cd5b2ef7c71219b8b82f4b78add0315026df35
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Mar 29 16:44:52 2013 -0700

    Fixed bug that results when the class file for a requested type is not available

M	core/src/main/java/com/google/errorprone/VisitorState.java

commit c6b709d91d26baa22a8b4da43cb3ae09bd78421f
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Mar 29 09:55:12 2013 -0700

    Cleanup before code review

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ComparisonOutOfRange.java
D	core/src/main/java/com/google/errorprone/bugpatterns/InvalidCharComparison.java
D	core/src/main/java/com/google/errorprone/bugpatterns/InvalidSignedByteComparison.java
M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java

commit 014ff90c15664202edf46d901d6ef85b975cbd51
Merge: fcf95c6 e1375ff
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Mar 29 09:48:06 2013 -0700

    Merge branch 'master' into ComparisonOutOfRange

commit fcf95c64bf10a0972ee96cfa5feb7db6c62df11b
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Mar 28 16:47:45 2013 -0700

    Fix bug related to Character literals

M	core/src/main/java/com/google/errorprone/bugpatterns/ComparisonOutOfRange.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ComparisonOutOfRangeNegativeCases.java

commit e1375ff5d012aeb18e3d6ddbdd9dd376e4718ebb
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Mar 28 11:56:53 2013 -0700

    Remove duplicated code from Scanner

M	core/src/main/java/com/google/errorprone/Scanner.java

commit 909b4cf1cb25e6282b4f9fd073046880dd0ec222
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Mar 28 10:07:53 2013 -0700

    Better exception description for DescendantOf matcher

M	core/src/main/java/com/google/errorprone/matchers/DescendantOf.java

commit cc13a0110fbb7e20b3febe4ad2a6671dfdb6d948
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Mar 27 17:24:32 2013 -0700

    Minor cleanup

M	core/src/main/java/com/google/errorprone/bugpatterns/ComparisonOutOfRange.java

commit dde0cbf36b09635fe86492fc364bad1f690d8955
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Mar 27 16:52:17 2013 -0700

    Better error message and suggested fix for ComparisonOutOfRange.
    
    Also wrote code to use a format string as the summary field in the
    @BugPattern annotation.  Now you can specialize error messages for the
    particular case you found.

M	core/src/main/java/com/google/errorprone/bugpatterns/ComparisonOutOfRange.java
M	core/src/main/java/com/google/errorprone/bugpatterns/IncompatibleEquals.java
M	core/src/main/java/com/google/errorprone/matchers/DescribingMatcher.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ComparisonOutOfRangePositiveCases.java

commit 1c1ec1c4d9189f1daee315e730e0f394922d6632
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Mar 27 15:26:46 2013 -0700

    More cleanup on ComparisonOutOfRange matcher

M	core/src/main/java/com/google/errorprone/bugpatterns/ComparisonOutOfRange.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ComparisonOutOfRangePositiveCases.java

commit 73151be19e28f88ba7ba1f694d0f9b3bc72fc7ff
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Mar 27 15:04:51 2013 -0700

    Combined InvalidCharComparison and InvalidSignedByteComparison checks into a single ComparisonOutOfRange checker. Cleaned up code.

A	core/src/main/java/com/google/errorprone/bugpatterns/ComparisonOutOfRange.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidCharComparison.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/bugpatterns/BugPatternUnitTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/ComparisonOutOfRangeTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/InvalidCharComparisonTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/InvalidSignedByteComparisonTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/ComparisonOutOfRangeNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/ComparisonOutOfRangePositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/InvalidCharComparisonNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/InvalidCharComparisonPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/InvalidSignedByteNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/InvalidSignedBytePositiveCases.java

commit 46004cda86592ed9edfb9e65a52174eca8e6e74d
Merge: 6679c5b bb42cb5
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Mar 26 17:17:18 2013 -0700

    Merge remote-tracking branch 'billpugh/master' into ComparisonOutOfRange

commit 6679c5b6f03492e78032b11356969f380d836336
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Mar 26 16:04:49 2013 -0700

    Fixes from code review

M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TestNotRun.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java

commit bb42cb59565afda680dc93db760d72d527db81ca
Author: Bill Pugh <pugh@cs.umd.edu>
Date:   Sun Mar 24 22:42:25 2013 -0400

    Updated IncompatibleEquals to include java.util.Objects

M	core/src/main/java/com/google/errorprone/bugpatterns/IncompatibleEquals.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/IncompatibleEqualsNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/IncompatibleEqualsPositiveCases.java

commit 36195d6cae2bcc02b31311b44c4e0f2a8bfd106f
Author: Bill Pugh <pugh@cs.umd.edu>
Date:   Sun Mar 24 22:24:18 2013 -0400

    Give more information when we have an error

M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java

commit fbd9eaf276a9009a2892eac58bbbb8a826219a42
Author: Bill Pugh <pugh@cs.umd.edu>
Date:   Sun Mar 24 22:23:16 2013 -0400

    fix capitalization of retVal

M	core/src/test/resources/com/google/errorprone/bugpatterns/InvalidStringEqualityPositiveCases.java

commit 2c7c33eb901f650de41bda569431895c744cf05f
Author: Bill Pugh <pugh@cs.umd.edu>
Date:   Sun Mar 24 22:22:49 2013 -0400

    Add thrown exception declaration

M	core/src/test/resources/com/google/errorprone/bugpatterns/InvalidCharComparisonPositiveCases.java

commit 8bb6792c37a5ad6cf20b366681f949600f7ef70d
Author: Bill Pugh <pugh@cs.umd.edu>
Date:   Sun Mar 24 22:22:20 2013 -0400

    Fix incorrect package declarations

M	core/src/test/resources/com/google/errorprone/bugpatterns/EmptyStatementNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/EmptyStatementPositiveCases.java

commit 2416ecfa04b0fd927061874115d3ae67d1766021
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Mar 21 16:16:01 2013 -0700

    Cleanup

M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TestNotRun.java

commit d017a5411de869929dd03efc6c952aa708a9bd2a
Merge: a81d8a4 3f9fa2f
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Mar 21 16:06:47 2013 -0700

    Merge master into JUnitChecks branch

commit 3f9fa2fcfdfe8a28fa28fb8d1b8294e0ccc22456
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Mar 21 16:03:36 2013 -0700

    Refactoring type matchers to have a more consistent interface and use the same backing implementation

A	core/src/main/java/com/google/errorprone/matchers/AbstractTypeMatcher.java
A	core/src/main/java/com/google/errorprone/matchers/IsCastableTo.java
A	core/src/main/java/com/google/errorprone/matchers/IsSameType.java
A	core/src/main/java/com/google/errorprone/matchers/IsSubtypeOf.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/suppliers/Suppliers.java

commit a81d8a431339e1688da73b95be64d74f1e528061
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Mar 21 14:36:22 2013 -0700

    JUnit4 checker now checks that class does not extend TestCase

M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TestNotRun.java
A	core/src/main/java/com/google/errorprone/matchers/IsSubtypeOf.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4TestNotRunTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4TestNotRunNegativeCase4.java

commit 1ca8f4d84b5691d05432ad022672037f9a88f1d1
Author: Bill Pugh <pugh@cs.umd.edu>
Date:   Thu Mar 21 10:43:57 2013 -0700

    Only complain if one of the types is core, if if they are incompatible collections

M	core/src/main/java/com/google/errorprone/bugpatterns/IncompatibleEquals.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/IncompatibleEqualsNegativeCases.java

commit 728d06cce7cf51107c655e6d99d06e462d8a2ef1
Author: Bill Pugh <pugh@cs.umd.edu>
Date:   Thu Mar 21 10:32:36 2013 -0700

    Don't complain about incompatible equals if the result is passed to an assertFalse method

M	core/src/main/java/com/google/errorprone/bugpatterns/IncompatibleEquals.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/IncompatibleEqualsNegativeCases.java

commit 377a39408ee3bdde9febb7ea3cd8345b207638fe
Author: Bill Pugh <pugh@cs.umd.edu>
Date:   Thu Mar 21 10:31:48 2013 -0700

    When a negative test fails, throw an exception containing the diagnostic that was generated

M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java

commit dac81874d55ce4d1f8b3d8050ad97b9cd3224004
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Mar 20 17:35:31 2013 -0700

    Don't error out on methods annotated with @Before, @After, @BeforeClass, or @AfterClass

M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TestNotRun.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4TestNotRunTest.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4TestNotRunNegativeCase3.java

commit 12057f8078a90d284f8d68849c6af70b68962931
Author: Bill Pugh <pugh@cs.umd.edu>
Date:   Wed Mar 20 15:23:19 2013 -0700

    Don't depend on jdk7 methods

M	core/src/main/java/com/google/errorprone/bugpatterns/IncompatibleEquals.java

commit 509eacbb2d46bedf63ca708afec556a7222bac9d
Author: Bill Pugh <pugh@cs.umd.edu>
Date:   Wed Mar 20 15:07:02 2013 -0700

    dont use method only available in jdk7

M	core/src/main/java/com/google/errorprone/bugpatterns/IncompatibleEquals.java

commit f7913074147239c0d47cb33e02ccee185c76b5e9
Author: Bill Pugh <pugh@cs.umd.edu>
Date:   Wed Mar 20 14:01:29 2013 -0700

    Switch to using isCastable rather than isAssignable
    Handle primitive types

M	core/src/main/java/com/google/errorprone/bugpatterns/IncompatibleEquals.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/IncompatibleEqualsNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/IncompatibleEqualsPositiveCases.java

commit b723959f7003177e3716cb06f2de3a3201b2d5c8
Author: Bill Pugh <pugh@cs.umd.edu>
Date:   Wed Mar 20 12:32:03 2013 -0700

    Change IncompatibleEquals to include a message containing the incompatible types

M	core/src/main/java/com/google/errorprone/bugpatterns/IncompatibleEquals.java
M	core/src/main/java/com/google/errorprone/matchers/DescribingMatcher.java
M	core/src/test/java/com/google/errorprone/bugpatterns/BadShiftAmountTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/IncompatibleEqualsTest.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/IncompatibleEqualsPositiveCases.java

commit 715428943df0e363296c6e5d8884498b7353c250
Author: Bill Pugh <pugh@cs.umd.edu>
Date:   Wed Mar 20 10:43:27 2013 -0700

    Used better check for incompatible types

M	core/src/main/java/com/google/errorprone/bugpatterns/IncompatibleEquals.java

commit 6b4014502770f82df711792f6e5f1877108aca48
Author: Bill Pugh <pugh@cs.umd.edu>
Date:   Wed Mar 20 09:50:45 2013 -0700

    Updated bug patterns and test cases

M	core/src/main/java/com/google/errorprone/bugpatterns/BadShiftAmount.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidSignedByteComparison.java
M	core/src/test/java/com/google/errorprone/bugpatterns/BadShiftAmountTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/IncompatibleEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/InvalidSignedByteComparisonTest.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/BadShiftAmountNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/BadShiftAmountPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InvalidSignedByteNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InvalidSignedBytePositiveCases.java

commit aca2f265b2446eea43eb6c8d34c26e5cd4938ec6
Author: Bill Pugh <pugh@cs.umd.edu>
Date:   Wed Mar 20 09:50:23 2013 -0700

    Register new scanners

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java

commit dfce217cb89905170fef70a6ad35ca0f4dd69313
Author: Bill Pugh <pugh@cs.umd.edu>
Date:   Wed Mar 20 09:49:27 2013 -0700

    Add check for comparing char value is values that are out of range

A	core/src/main/java/com/google/errorprone/bugpatterns/InvalidCharComparison.java
A	core/src/test/java/com/google/errorprone/bugpatterns/InvalidCharComparisonTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/InvalidCharComparisonNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/InvalidCharComparisonPositiveCases.java

commit 3ecc9cb55c087669110a5e29501031096381e877
Author: Bill Pugh <pugh@cs.umd.edu>
Date:   Wed Mar 20 09:47:39 2013 -0700

    Add abstract base class for bug pattern unit tests

A	core/src/test/java/com/google/errorprone/bugpatterns/BugPatternUnitTest.java

commit bfbbff92f4f89ec63476910adc9a07e2a88755b3
Author: Bill Pugh <pugh@cs.umd.edu>
Date:   Wed Mar 20 09:38:43 2013 -0700

    Give better error msg when no errors are generated

M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java

commit 9b65167382e2b1b8aca271882e3cc56dcf283a3f
Author: Bill Pugh <pugh@cs.umd.edu>
Date:   Tue Mar 19 22:45:19 2013 -0700

    Added check for incompatible equals

A	core/src/main/java/com/google/errorprone/bugpatterns/IncompatibleEquals.java
A	core/src/test/java/com/google/errorprone/bugpatterns/IncompatibleEqualsTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/IncompatibleEqualsNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/IncompatibleEqualsPositiveCases.java

commit 6375eea1ffaf65c18bb997c7638b4418d38d2c73
Author: Bill Pugh <pugh@cs.umd.edu>
Date:   Tue Mar 19 22:44:41 2013 -0700

    Check for bade comparison with signed byte

A	core/src/main/java/com/google/errorprone/bugpatterns/InvalidSignedByteComparison.java
A	core/src/test/java/com/google/errorprone/bugpatterns/InvalidSignedByteComparisonTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/InvalidSignedByteNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/InvalidSignedBytePositiveCases.java

commit e9e7d2b879ceec4f0855b95b5bb46911597ac951
Author: Bill Pugh <pugh@cs.umd.edu>
Date:   Tue Mar 19 22:44:12 2013 -0700

    Check for bad shift amount

A	core/src/main/java/com/google/errorprone/bugpatterns/BadShiftAmount.java
A	core/src/test/java/com/google/errorprone/bugpatterns/BadShiftAmountTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/BadShiftAmountNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/BadShiftAmountPositiveCases.java

commit 858219878a5411aec5f3e660e1249e4b3b323003
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Mar 19 17:37:13 2013 -0700

    Working JUnit4TestNotRun check.  Still needs cleanup.

M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TestNotRun.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4TestNotRunTest.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4TestNotRunPositiveCase2.java

commit 0c6fac3cb3f84af00106869a75cd0181c3b55297
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Mar 19 16:18:28 2013 -0700

    intermediate commit

M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TestNotRun.java
M	core/src/main/java/com/google/errorprone/matchers/AnnotationHasArgumentWithValue.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java

commit 3d307f1c7c87b0f3be4eb1a976bd0f763a2c2df3
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Mar 19 15:06:14 2013 -0700

    Intermediate commit working on JUnit4TestNotRun

M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TestNotRun.java
M	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4TestNotRunTest.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4TestNotRunNegativeCase2.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4TestNotRunNegativeCase3.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4TestNotRunPositiveCase1.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4TestNotRunPositiveCase2.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4TestNotRunPositiveCases.java

commit 33cf3a1f57c91378e2ae69746a164dbfe94b3b01
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Mar 18 21:28:02 2013 -0700

    Provide suggested fix for Junit4TestNotRun static case

M	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TestNotRun.java

commit 869c7196720b53fe4c8f656a7fe20896e1e2289d
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Mar 18 20:33:11 2013 -0700

    Forgot some modified files

M	annotation/src/main/java/com/google/errorprone/BugPattern.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java

commit 9f4ce90e1afb463ba16d9f881002d0970b15e3ef
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Mar 18 20:32:52 2013 -0700

    First pass at writing JUnitTestNotRun check

A	core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TestNotRun.java
A	core/src/test/java/com/google/errorprone/bugpatterns/JUnit4TestNotRunTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4TestNotRunNegativeCase1.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4TestNotRunNegativeCase2.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/JUnit4TestNotRunPositiveCases.java

commit 93f30598969d72f6c051eb5d4f77613a7ecee3ff
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Mar 5 13:44:32 2013 -0800

    Documentation update for PreconditionsCheckNotNullPrimitive

M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitive.java

commit 7ecf828d762015281884fd29a8ffb96d4f9c69e6
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Mar 5 13:21:00 2013 -0800

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	maven/pom.xml
M	pom.xml

commit db198ed28f89e525c429c06483da7f9c4784963b
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Mar 5 13:20:56 2013 -0800

    [maven-release-plugin] prepare release v0.9.12

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	maven/pom.xml
M	pom.xml

commit 23c56f09f8b39793e97cd3c6aa1356934b69fac3
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Mar 4 11:58:30 2013 -0800

    Bugfix for overly parenthesized arguments to annotations

M	core/src/main/java/com/google/errorprone/matchers/AnnotationHasArgumentWithValue.java
M	core/src/test/java/com/google/errorprone/matchers/AnnotationHasArgumentWithValueTest.java

commit d7caa272dad37cc83d70314c520053309dcef36b
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Feb 27 21:55:26 2013 -0800

    Fix bug in WrappedTreeMap

M	core/src/main/java/com/google/errorprone/WrappedTreeMap.java

commit 8ac260e51c8431a01ab37b762ad919635ae452aa
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Feb 27 17:28:39 2013 -0800

    Fix javac7 test failure

M	core/src/main/java/com/google/errorprone/matchers/Annotation.java

commit 8f2c275750bea7c7ab3f6ebba282e7aba8ce251e
Merge: d81042e 8daaccf
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Feb 27 16:42:23 2013 -0800

    Merge branch 'guice_refactor_2'

commit 8daaccf0c94aea0508c89120e391f843ef242f97
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Feb 27 16:41:03 2013 -0800

    Changes from code review

M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceAssistedInjectScoping.java
M	core/src/main/java/com/google/errorprone/matchers/Annotation.java
M	core/src/main/java/com/google/errorprone/matchers/ConstructorOfClass.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/matchers/MethodHasParameters.java
M	core/src/main/java/com/google/errorprone/matchers/MultiMatcher.java

commit 2bf4f0f84786f16a2fd9eaf6d40c081ac03bc52b
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Feb 27 16:00:10 2013 -0800

    Support JSR330 annotations in GuiceAssistedInjectScoping

M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceAssistedInjectScoping.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceAssistedInjectScopingPositiveCases.java

commit 08b1d0476d18c8ac46a411efcdb50cf2ba7068b3
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Feb 27 15:36:04 2013 -0800

    better summary message for GuiceAssistedInjectScoping

M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceAssistedInjectScoping.java

commit d81042e42b5c63fbe78d590d549b336e434304d9
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Feb 27 12:39:39 2013 -0800

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	maven/pom.xml
M	pom.xml

commit 58890559337154c5167d4fbe3b21ec177426405e
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Feb 27 12:39:37 2013 -0800

    [maven-release-plugin] prepare release v0.9.11

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	maven/pom.xml
M	pom.xml

commit 54cd9903fbafe5112921190cb537a7af89655d38
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Feb 26 21:34:22 2013 -0800

    Fixed another bug with suggested fix for PreconditionsCheckNotNullPrimitive

M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractReturnValueIgnored.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitivePositiveCases.java

commit 14da007c1b292eab8f73e4d5648d412c18b71e56
Merge: 701a2e8 0cdd2ec
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Feb 26 17:13:48 2013 -0800

    Merge branch 'master' of https://code.google.com/p/error-prone

commit 701a2e8e530cbab6ffa0cc99e719608539b59cfa
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Feb 26 17:13:06 2013 -0800

    Fixed a bug in PreconditionsCheckNotNullPrimitive suggested fix

M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitive.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitivePositiveCases.java

commit 4911990929ecba88a38467ea2ef91efc2d7c6f4c
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Feb 25 13:53:56 2013 -0800

    Better parameter names for tests

M	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceAssistedInjectScopingNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceAssistedInjectScopingPositiveCases.java

commit a14fb74102c8983e51009eb2f2b6a6ada63576c8
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Feb 25 11:36:58 2013 -0800

    Better summary and description for GuiceAssistedInjectScoping check

M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceAssistedInjectScoping.java

commit 59dd15f740aa55566580da2d071294b76016636a
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Feb 25 11:17:50 2013 -0800

    Reworked GuiceAssistedInjectScoping checker to actually match the right things.  Added lots of test cases.

M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceAssistedInjectScoping.java
M	core/src/main/java/com/google/errorprone/matchers/MultiMatcher.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceAssistedInjectScopingNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceAssistedInjectScopingPositiveCases.java

commit 2398f1393612d48547e2ea9a51b9dd9ad3351a22
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Feb 21 17:34:08 2013 -0800

    Removed logic duplication in GuiceAssistedInjectScoping describe() vs. matches()

M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceAssistedInjectScoping.java

commit ad01f27f0602b87cd5f5b77f51efc19bd12f2770
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Feb 21 17:33:39 2013 -0800

    Refactored MethodHasParameters matcher into MultiMatcher

M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/matchers/MethodHasParameters.java
M	core/src/test/java/com/google/errorprone/matchers/MethodHasParametersTest.java

commit 3eb4c1d00e3787fe4592669741b7e716fe4064eb
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Feb 21 17:07:23 2013 -0800

    Refactored Annotation and ConstructorOfClass matchers into an abstract base class and two implementation classes.  Provides access to the matched node.

M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceAssistedInjectScoping.java
M	core/src/main/java/com/google/errorprone/matchers/Annotation.java
M	core/src/main/java/com/google/errorprone/matchers/ConstructorOfClass.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
A	core/src/main/java/com/google/errorprone/matchers/MultiMatcher.java
M	core/src/test/java/com/google/errorprone/matchers/AnnotationTest.java
M	core/src/test/java/com/google/errorprone/matchers/ConstructorOfClassTest.java

commit cb0c03418fc1187d9d4467f5238b81e9686ffec6
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Feb 21 17:04:16 2013 -0800

    Warning cleanup

M	core/src/main/java/com/google/errorprone/Scanner.java
M	core/src/main/java/com/google/errorprone/SearchingJavaCompiler.java
M	core/src/main/java/com/google/errorprone/bugpatterns/OrderingFrom.java
M	core/src/main/java/com/google/errorprone/matchers/AnnotationHasArgumentWithValue.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SelfEqualsTest.java

commit 3d0d5f19457207eb5e06a926f435b6c82699d09b
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Feb 21 16:10:00 2013 -0800

    Added Guice check category, promoted GuiceAssistedInjectScoping to ERROR and MATURE

M	annotation/src/main/java/com/google/errorprone/BugPattern.java
M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceAssistedInjectScoping.java

commit 3023f80b749a2f4c3a7743a5e5c1d754a007dcb4
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Feb 21 16:07:17 2013 -0800

    Refactored GuiceAssistedInjectScoping to use matcher library

M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceAssistedInjectScoping.java

commit 12630518a3bb0932f748d4dbb809ca828e155e5e
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Feb 21 15:53:38 2013 -0800

    Added test cases for multiple constructors

M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceAssistedInjectScoping.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceAssistedInjectScopingNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceAssistedInjectScopingPositiveCases.java

commit 38076f500165cb5d30205f4cb52e7b9d557fd951
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Feb 21 14:45:38 2013 -0800

    Renamed Guice refactoring to GuiceAssistedInjectScoping

A	core/src/main/java/com/google/errorprone/bugpatterns/GuiceAssistedInjectScoping.java
D	core/src/main/java/com/google/errorprone/bugpatterns/GuiceAssistedInjectScopingRefactor.java
D	core/src/test/java/com/google/errorprone/bugpatterns/GuiceAssistedInjectScopingRefactorTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/GuiceAssistedInjectScopingTest.java
M	core/src/test/java/com/google/errorprone/matchers/AnnotationTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceAssistedInjectScopingNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceAssistedInjectScopingPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceAssistedInjectScopingRefactorNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceAssistedInjectScopingRefactorPositiveCases.java

commit 0cdd2eced3a71513c811f2670044bea4096b2aa0
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Feb 20 20:47:33 2013 -0800

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	maven/pom.xml
M	pom.xml

commit 5d295056247e393a1bc133fc563b0e92f7683525
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Feb 20 20:47:31 2013 -0800

    [maven-release-plugin] prepare release v0.9.10

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	maven/pom.xml
M	pom.xml

commit 97872a06454fb8bb00216b8cd415a1b2c840aab3
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Feb 20 15:58:11 2013 -0800

    Added tests for new Matchers.

M	core/src/test/java/com/google/errorprone/matchers/AnnotationTest.java
A	core/src/test/java/com/google/errorprone/matchers/ConstructorOfClassTest.java
A	core/src/test/java/com/google/errorprone/matchers/MethodHasParametersTest.java

commit 621cfb8537e6a8555a515559491524c75d9a59e6
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Feb 20 15:27:08 2013 -0800

    Refactored GuiceAssistedInjectScopingRefactor into reusable matchers. Still need to write tests for them.

M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceAssistedInjectScopingRefactor.java
A	core/src/main/java/com/google/errorprone/matchers/ConstructorOfClass.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
A	core/src/main/java/com/google/errorprone/matchers/MethodHasParameters.java

commit cd672ce25fc9fce7192597887ea83f2aa71cb2e8
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Feb 20 14:41:56 2013 -0800

    Wrote unit tests for Annotation matcher

M	core/src/main/java/com/google/errorprone/matchers/Annotation.java
M	core/src/test/java/com/google/errorprone/matchers/AnnotationTest.java

commit d70af4cdea4398916806978e8e4509a8d56ed420
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Feb 20 13:39:46 2013 -0800

    Renamed Guice refactor

M	core/pom.xml
A	core/src/main/java/com/google/errorprone/bugpatterns/GuiceAssistedInjectScopingRefactor.java
D	core/src/main/java/com/google/errorprone/bugpatterns/GuiceScopingRefactor.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/GuiceAssistedInjectScopingRefactorTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/GuiceScopingRefactorTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceAssistedInjectScopingRefactorNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceAssistedInjectScopingRefactorPositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceScopingRefactorNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceScopingRefactorPositiveCases.java

commit e122cc7ee0c91da90697e8f8e5e34c31eee3c39e
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Feb 19 17:51:56 2013 -0800

    Cleanup after rebase

M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/test/java/com/google/errorprone/matchers/AnnotationTest.java

commit 5f37466edf062f99ca705ec09a5381c48865a09d
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Feb 19 17:37:10 2013 -0800

    Working on refactoring Guice matcher

M	core/src/main/java/com/google/errorprone/bugpatterns/GuiceScopingRefactor.java
A	core/src/main/java/com/google/errorprone/matchers/Annotation.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
A	core/src/test/java/com/google/errorprone/matchers/AnnotationTest.java

commit 537394e05faff555c052e1796dd5800c94044732
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Feb 19 16:24:02 2013 -0800

    Better test cases for GuiceScopingRefactor

M	core/src/test/java/com/google/errorprone/bugpatterns/GuiceScopingRefactorTest.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceScopingRefactorNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceScopingRefactorPositiveCases.java

commit 2b1caeac5a0a71a1263ee0cc6e754a7ae61bb9e3
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Feb 19 16:01:06 2013 -0800

    First cut at Guice refactoring

M	core/pom.xml
M	core/src/main/java/com/google/errorprone/bugpatterns/CheckReturnValue.java
A	core/src/main/java/com/google/errorprone/bugpatterns/GuiceScopingRefactor.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/GuiceScopingRefactorTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceScopingRefactorNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/GuiceScopingRefactorPositiveCases.java

commit 3f3f37454c5b415c301a7ad845e807d1079a3dfb
Merge: f097a9e 7984d2b
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Feb 11 21:02:28 2013 -0800

    Merge branch 'ptoomey/master'

commit f097a9ead23e6884236bc528928f3721d7f6b60e
Author: Alex Eagle <alexeagle@google.com>
Date:   Sun Feb 10 15:08:39 2013 -0800

    Add a special case error rendering which is shown on April 1.

M	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
M	core/src/main/java/com/google/errorprone/JavacErrorDescriptionListener.java
M	core/src/main/resources/com/google/errorprone/errors.properties

commit 8b3cdede1933095c495a7c6615cd6542dda2f86c
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Feb 8 17:54:27 2013 -0800

    Fixed bug in WrappedTreeMap

M	core/src/main/java/com/google/errorprone/WrappedTreeMap.java

commit c8748b0c40130144037de80f8f70c570c4df0c30
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Jan 31 11:02:26 2013 -0800

    One more case for PreconditionsCheckNotNullPrimitive suggested fix

M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitive.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitivePositiveCases.java

commit cc8587291e8cceeaa312d2b836f57507262d5c9b
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Jan 30 17:01:35 2013 -0800

    Better suggested fixes for PreconditionsCheckNotNullPrimitive

M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitive.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitivePositiveCases.java

commit 1de573d88ce9ae3e56d9618bc1eb3e1f3fd6ad28
Merge: f3ab61d 7f65eef
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Jan 14 20:55:15 2013 -0800

    Merge remote-tracking branch 'adgar/arraytostring'

commit f3ab61d15b6d12b8041cf1496090a1e0d001b6e5
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Jan 14 16:29:45 2013 -0800

    Better javadoc for matchers on method names

M	core/src/main/java/com/google/errorprone/matchers/Matchers.java

commit 7f65eefbbf5e6945919e8c0187e161b3969cc4a6
Author: Mike Edgar <adgar@google.com>
Date:   Mon Jan 14 16:07:21 2013 -0500

    Changed bug summary from 'arrays' to 'an array'.

M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToString.java

commit 7984d2b249101b75b3d5673faaffc0b14d3ccca3
Author: Patrick Toomey <ptoomey@google.com>
Date:   Mon Jan 14 10:14:54 2013 -0800

    Made the matcher an ERROR instead of WARNING. Spacing fixes.

M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidStringEquality.java

commit 91cc65813a3ed9a6b6639b591c63634022652b83
Author: Patrick Toomey <ptoomey@google.com>
Date:   Mon Jan 14 10:08:45 2013 -0800

    Added a missing space

M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidStringEquality.java

commit b057a4096a00363468271f8b4e925024c7384630
Author: Patrick Toomey <ptoomey@google.com>
Date:   Mon Jan 14 08:24:16 2013 -0800

    Minor formatting changes

M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidStringEquality.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InvalidStringEqualityNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InvalidStringEqualityPositiveCases.java

commit 7fa0c790d523a15418fb83d53480aab5d29f939b
Author: Patrick Toomey <ptoomey@google.com>
Date:   Mon Jan 14 08:02:51 2013 -0800

    Addess @SuppressWarnings unit test

M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidStringEquality.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InvalidStringEqualityNegativeCases.java

commit 4df2839166fff323c6a499eae613d501e69b935b
Author: Mike Edgar <adgar@google.com>
Date:   Sat Jan 12 18:16:44 2013 -0500

    Fixed incorrectly-named test case classes.

M	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayToStringNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayToStringPositiveCases.java

commit 1402898dc083213048212d54bee0829d619ab562
Author: Mike Edgar <adgar@google.com>
Date:   Sat Jan 12 18:04:48 2013 -0500

    Added check for Array#toString, advising Arrays.toString.

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
A	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToString.java
A	core/src/test/java/com/google/errorprone/bugpatterns/ArrayToStringTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayToStringNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayToStringPositiveCases.java

commit 391418a1dcba68d1d584264db9e375259dfb11ac
Author: Mike Edgar <adgar@google.com>
Date:   Sat Jan 12 17:57:15 2013 -0500

    Added check for Array#toString, advising Arrays.toString.

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
A	core/src/main/java/com/google/errorprone/bugpatterns/ArrayToString.java
A	core/src/test/java/com/google/errorprone/bugpatterns/ArrayToStringTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayToStringNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayToStringPositiveCases.java

commit 55a84f21401c9e941da080ef08bdc8663129e455
Author: Patrick Toomey <ptoomey@google.com>
Date:   Sat Jan 12 09:27:52 2013 -0800

    Minor refactor (removed unused import, added JavaDoc)

M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidStringEquality.java

commit 3e9bd97e6cd5ec5090d2c357d72975d2cb08f8ad
Author: Patrick Toomey <ptoomey@google.com>
Date:   Sat Jan 12 09:06:15 2013 -0800

    Modified to use the DSL, add a valid fix, and misc cleanup

M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidStringEquality.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InvalidStringEqualityPositiveCases.java

commit 3801e09689d42e45efbbcb25b5acf625b4ba7bc7
Author: Patrick Toomey <ptoomey@google.com>
Date:   Fri Jan 11 14:32:29 2013 -0800

    Minor variable name refactor and a cleaner way of looking of the string representation of String class

M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidStringEquality.java

commit 69995ee68a0d75070d4186fcf7c0612347efc1e6
Author: Patrick Toomey <ptoomey@google.com>
Date:   Fri Jan 11 13:07:24 2013 -0800

    Add a matcher to detect invalid string equality using == and !=

A	core/src/main/java/com/google/errorprone/bugpatterns/InvalidStringEquality.java
A	core/src/test/java/com/google/errorprone/bugpatterns/InvalidStringEqualityTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/InvalidStringEqualityNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/InvalidStringEqualityPositiveCases.java

commit bd85e0a23c2575383c8967454bcbb36a4ac7b2eb
Merge: 7577258 32edb2c
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Jan 3 11:28:34 2013 -0800

    Merge branch 'better_error_messages2'

commit 32edb2c17915b1d3a20f88e0228922e759723ec4
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Jan 3 11:17:50 2013 -0800

    WrappedTreeMap now throws UnsupportedOperationException on entrySet()

M	core/src/main/java/com/google/errorprone/JavacErrorDescriptionListener.java
M	core/src/main/java/com/google/errorprone/WrappedTreeMap.java

commit 81d87a286b7429145ed94ff02cf6e707efcd37fb
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Jan 2 17:23:49 2013 -0800

    Move sources method to CompilationTestHelper

M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/EndPosTest.java
M	core/src/test/java/com/google/errorprone/ErrorReportingJavaCompilerIntegrationTest.java
D	core/src/test/java/com/google/errorprone/IntegrationTest.java

commit c2d430b5a8676b4226a48bd9418e33b5d5bf15e4
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Dec 28 11:19:54 2012 -0800

    Provide suggested fixes even with -Xjcov off.
    
    This change reworks the error message generation so that suggested fixes
    ("Did you mean...?") are provided even when tree end positions are not
    available.  When error-prone wants to print an error message, if tree
    end positions are not available, we reparse the file and store the end
    position map for later use.
    
    This should have no performance cost in the common case when error-prone
    does not detect any errors.

M	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
M	core/src/main/java/com/google/errorprone/JavacErrorDescriptionListener.java
A	core/src/main/java/com/google/errorprone/WrappedTreeMap.java
A	core/src/test/java/com/google/errorprone/EndPosTest.java
M	core/src/test/java/com/google/errorprone/ErrorReportingJavaCompilerIntegrationTest.java
A	core/src/test/java/com/google/errorprone/IntegrationTest.java

commit 757725894382693d64b61094385a0eb0f9dee90d
Author: Alex Eagle <alexeagle@google.com>
Date:   Fri Dec 28 11:42:44 2012 -0800

    Fix broken build!

M	core/src/main/java/com/google/errorprone/bugpatterns/FallThroughSuppression.java

commit 39f98aa3b321f4a24895eb2b35a80d52e45a69f2
Author: Alex Eagle <alexeagle@google.com>
Date:   Fri Dec 28 11:39:37 2012 -0800

    Remove "Maturity.PROPOSED" checks, since we've decided these will be stored only in the issue tracker.

D	core/src/main/java/com/google/errorprone/bugpatterns/IncompatibleEqualsAndHashcode.java
D	core/src/main/java/com/google/errorprone/bugpatterns/RuntimeAccessToNonRetainedAnnotation.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/IncompatibleEqualsAndHashcodePositiveCases.java

commit 5f0b50224d0cb35a3cb2255006cc50fb32e3a4c2
Merge: 99c3cde 51297a0
Author: Alex Eagle <alexeagle@google.com>
Date:   Fri Dec 28 11:14:10 2012 -0800

    Merge branch 'master' of https://code.google.com/p/error-prone

commit 99c3cdeb97a9dd40df37bca31ea14dce7471f0a0
Author: Alex Eagle <alexeagle@google.com>
Date:   Fri Dec 28 11:02:45 2012 -0800

    Minor cleanup

M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/matchers/MethodVisibility.java

commit 51297a01f663b7186d8a11fa282460add0cbece2
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Dec 19 14:17:04 2012 -0800

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	maven/pom.xml
M	pom.xml

commit 403a680e30fcc0e81a076508f76555bea43a0a45
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Dec 19 14:17:00 2012 -0800

    [maven-release-plugin] prepare release v0.9.9

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	maven/pom.xml
M	pom.xml

commit 63146143804b8b8b479b9e6675d37f801c204a43
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Dec 18 17:27:36 2012 -0800

    Changes from code review

M	core/src/main/java/com/google/errorprone/bugpatterns/CheckReturnValue.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ReturnValueIgnored.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java

commit ff5e794ca74d4e8c08b88f9c61dfc272617fbdaf
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Dec 18 13:38:17 2012 -0800

    Small change to compile with javac 6

M	core/src/main/java/com/google/errorprone/bugpatterns/ReturnValueIgnored.java

commit 9d9c1c09f826801cd77a0ae87f1ba59019ef1eed
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Dec 17 21:25:14 2012 -0800

    Refactored ReturnValueIgnored and CheckReturnValue checks.
    
    Combined them into an abstract base class and two implementation
    classes, reducing code duplication.

A	core/src/main/java/com/google/errorprone/bugpatterns/AbstractReturnValueIgnored.java
M	core/src/main/java/com/google/errorprone/bugpatterns/CheckReturnValue.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ReturnValueIgnored.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java

commit 80b740bb66c1dbdc5fd6baddae41cacf2257c5c8
Merge: a453f06 244b578
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Dec 14 17:46:02 2012 -0800

    Merge branch 'master' of https://code.google.com/p/error-prone

commit a453f064fa747265cd4fcc16d33dc4b9eaec905f
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Dec 14 17:44:18 2012 -0800

    Separated ReturnValueIgnored into two checks.
    
    Previously ReturnValueIgnored checked for methods known to be
    side-effect free and for methods that were marked with the
    @CheckReturnValue annotation.  This led to confusion from users who saw
    the same error message for both cases.  This change separates the check
    into two cases, ReturnValueIgnored for the side-effect free case and
    CheckReturnValue for the @CheckReturnValue case.

A	core/src/main/java/com/google/errorprone/bugpatterns/CheckReturnValue.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ReturnValueIgnored.java
M	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/CheckReturnValueTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ReturnValueIgnoredTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/CheckReturnValueNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/CheckReturnValuePositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/ReturnValueIgnoredPositiveCase1.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/ReturnValueIgnoredPositiveCase2.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/ReturnValueIgnoredPositiveCases.java

commit 244b5787a91fe9edb4eb564c591809eb0245edc5
Author: Caitlin Sadowski <supertri@google.com>
Date:   Fri Dec 14 16:42:55 2012 -0800

    Small improvements to the error messages for SuppressWarningsDeprecated and PreconditionsCheckNotNull

M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNull.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SuppressWarningsDeprecated.java

commit c6071742586f0cf27f1561ea714a292675b0e5ce
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Dec 11 17:12:17 2012 -0800

    Even better suggested fix for PreconditionsCheckNotNullPrimitive.

M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitive.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitivePositiveCases.java

commit 68ad2e493dab3b2de675027140eea5b967cd3383
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Dec 11 12:13:47 2012 -0800

    Better suggested fix for PrecondtionsCheckNotNullPrimitive.

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
A	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitive.java
D	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitive1stArg.java
M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
A	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitiveTest.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitive1stArgPositiveCase1.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitiveNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitivePositiveCases.java

commit c537eaf053470b9dd0972c78be2890af13e407b3
Author: Alex Eagle <alexeagle@google.com>
Date:   Sun Dec 9 19:22:57 2012 -0800

    More cleanup of Matchers

M	core/src/main/java/com/google/errorprone/bugpatterns/DeadException.java
M	core/src/main/java/com/google/errorprone/bugpatterns/FallThroughSuppression.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SuppressWarningsDeprecated.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java

commit ccf32d6fb38d8ccc8dad89b842af863ff2769e93
Author: Alex Eagle <alexeagle@google.com>
Date:   Sun Dec 9 17:41:28 2012 -0800

    Fill in missing javadoc and minor cleanup renaming.

M	core/src/main/java/com/google/errorprone/bugpatterns/EmptyIfStatement.java
A	core/src/main/java/com/google/errorprone/bugpatterns/package-info.java
A	core/src/main/java/com/google/errorprone/fixes/package-info.java
A	core/src/main/java/com/google/errorprone/matchers/AnnotationHasArgumentWithValue.java
D	core/src/main/java/com/google/errorprone/matchers/AnnotationHasElementWithValue.java
M	core/src/main/java/com/google/errorprone/matchers/Matcher.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
D	core/src/main/java/com/google/errorprone/matchers/Same.java
A	core/src/main/java/com/google/errorprone/matchers/package-info.java
A	core/src/main/java/com/google/errorprone/suppliers/package-info.java
A	core/src/main/java/com/google/errorprone/util/package-info.java
A	core/src/test/java/com/google/errorprone/matchers/AnnotationHasArgumentWithValueTest.java
D	core/src/test/java/com/google/errorprone/matchers/AnnotationHasElementWithValueTest.java

commit ba75fd7fea6c2e2ff7caed2aa426635323eee4e5
Author: Alex Eagle <alexeagle@google.com>
Date:   Fri Dec 7 16:32:37 2012 -0800

    Add a couple of proposed checks to our bugpatterns. This lets them appear in our generated wiki, under the Proposed section.

A	core/src/main/java/com/google/errorprone/bugpatterns/IncompatibleEqualsAndHashcode.java
A	core/src/main/java/com/google/errorprone/bugpatterns/RuntimeAccessToNonRetainedAnnotation.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/IncompatibleEqualsAndHashcodePositiveCases.java

commit 855c92147b7749fef0648e68c7c04d9dea55b28a
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Dec 7 11:51:06 2012 -0800

    Cleanup for SeverityLevel and MaturityLevel.
    
    The old values for SeverityLevel and MaturityLevel were confusing.  We
    eliminated unnecessary ones, renamed the others, recategorized our
    checks, and fixed the documentation generator.

M	annotation/src/main/java/com/google/errorprone/BugPattern.java
M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/CovariantEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/DeadException.java
M	core/src/main/java/com/google/errorprone/bugpatterns/EmptyIfStatement.java
M	core/src/main/java/com/google/errorprone/bugpatterns/EmptyStatement.java
M	core/src/main/java/com/google/errorprone/bugpatterns/FallThroughSuppression.java
M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidPatternSyntax.java
M	core/src/main/java/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffix.java
M	core/src/main/java/com/google/errorprone/bugpatterns/OrderingFrom.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNull.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitive1stArg.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsExpensiveString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsTooManyArgs.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ReturnValueIgnored.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfAssignment.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SuppressWarningsDeprecated.java
M	docgen/src/main/java/com/google/errorprone/DocGen.java

commit 100c937771f524da536e3c1e9094469ab70fedd3
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Dec 5 17:47:40 2012 -0800

    Added a utility method to get the original source code that corresponds to an AST node

M	core/src/main/java/com/google/errorprone/VisitorState.java

commit c36027ec750d691dcf9e1b8f4f7493ff040d4cd4
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Dec 4 16:32:31 2012 -0800

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	maven/pom.xml
M	pom.xml

commit 2322947f8c40d17fc5aa9540e807daa5c6d84626
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Dec 4 16:32:26 2012 -0800

    [maven-release-plugin] prepare release error_prone_parent-0.9.8

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	maven/pom.xml
M	pom.xml

commit 82abe8b1725c263a03a94e4ec4250e7c7b3d055d
Merge: 399770d bbcd830
Author: Alex Eagle <alexeagle@alexeagle-macbookair.local>
Date:   Sat Nov 17 13:23:35 2012 -0800

    Merge branch 'master' of https://code.google.com/p/error-prone

commit 399770dc84f2e40445c51ce68a33654355da1f56
Author: Alex Eagle <alexeagle@alexeagle-macbookair.local>
Date:   Sat Nov 17 13:22:51 2012 -0800

    Add a README file so developers can discover our documentation if they start by cloning our repository.

A	README

commit bbcd830aa32204984bb3ca7982f1e1255f1a6acd
Author: Caitlin Sadowski <supertri@google.com>
Date:   Thu Nov 15 15:12:13 2012 -0800

    Changed default scanner class creation for SelfEquals to Guava-only check.

M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquals.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SelfEqualsTest.java

commit 40fc80425d27c9fed3218285010826dfda9b3926
Merge: 80f3ea8 6b69b22
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Nov 13 15:39:23 2012 -0800

    Merge branch 'mdempsky/java7test'

commit 80f3ea8dafb7a6f106f1b7b8a8c27fe6a0426724
Merge: c836eeb 1f1fb1a
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Nov 13 15:32:17 2012 -0800

    Merge branch 'mdempsky/transitivefix'

commit c836eeb299233aa4b1d7a43d4d78c0ce2f30b6c7
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Nov 13 15:17:43 2012 -0800

    Fixes from code review by supertri.

M	core/src/main/java/com/google/errorprone/matchers/DescendantOf.java

commit 6b69b2272f337bf81bffdb997d7480423b799432
Author: Matthew Dempsky <mdempsky@google.com>
Date:   Thu Nov 8 13:24:28 2012 -0800

    Use assumeTrue() to let JUnit know this test is specific to Java 7.

M	core/src/test/java/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffixTest.java

commit c1bcf7940ad468aced744aeb3544b073c0ec4775
Merge: f3f253e eb51e16
Author: Alex Eagle <alexeagle@dhcp-172-19-30-12.mtv.corp.google.com>
Date:   Thu Nov 8 11:48:16 2012 -0800

    Merge branch 'mdempsky/utf8'

commit f3f253efb071516ec1c724c6dd7116484e2c99a8
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Nov 7 21:14:13 2012 -0800

    Added missing resource files for LongLiteralLowerCaseSuffixTest.

A	core/src/test/resources/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffixPositiveCase1.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffixPositiveCase2.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffixPositiveCases.java

commit f4a8da7446b46cf87e4fea513ba6468ba03324e2
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Nov 7 17:29:54 2012 -0800

    Fix to LongLiteralLowerCaseSuffixTest to work on both JDK6 and 7.

M	core/src/test/java/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffixTest.java

commit 6105959a2130d833eaefdb1f6023f539c5f1cfa4
Merge: 171c396 2234b99
Author: Matthew Dempsky <mdempsky@google.com>
Date:   Wed Nov 7 16:40:39 2012 -0800

    Merge branch 'mdempsky/add-postfixWith'

commit eb51e1605350f701851e1b8c162dca7117751f5a
Author: Matthew Dempsky <mdempsky@google.com>
Date:   Wed Nov 7 16:36:01 2012 -0800

    Explicitly use UTF-8 encoding.

M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	pom.xml

commit 171c3962cf73e88cdd4951fd6a2333ebd7659706
Merge: 38c0730 8a994c8
Author: Matthew Dempsky <mdempsky@google.com>
Date:   Wed Nov 7 15:18:48 2012 -0800

    Merge branch 'mdempsky/regexMatcher'

commit 8a994c8fb03000412ea672e254bc13537af4e97d
Author: Matthew Dempsky <mdempsky@google.com>
Date:   Wed Nov 7 15:04:59 2012 -0800

    Add TODO as suggested by eaftan.

M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidPatternSyntax.java

commit 38c0730b6b0bfe638981e77c33d37048a876adec
Merge: e99460f 95b69a7
Author: Matthew Dempsky <mdempsky@google.com>
Date:   Wed Nov 7 15:02:15 2012 -0800

    Merge branch 'mdempsky/longliteral'

commit 1f1fb1ad77e36c61f96d58921131a620c5d31765
Author: Matthew Dempsky <mdempsky@google.com>
Date:   Tue Nov 6 17:00:54 2012 -0800

    Fix test for resolveIdent() return value.
    
    If resolveIdent() returns null, then getTypeFromString() should also
    return null.  Further, since "null instanceof Foo" always evaluates to
    false, we can simplify the conditional and not worry about checking
    for null.

M	core/src/main/java/com/google/errorprone/VisitorState.java

commit 773100c46a010c266858a6807ac1096f7577a3ad
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Nov 6 16:06:24 2012 -0800

    Use JavaCompiler.resolveIdent() in VisitorState.getTypeFromString().
    
    When the symbol table does not contain a symbol that is needed, javac
    calls JavaCompiler.resolveIdent() to resolve it.  I changed
    VisitorState.getTypeFromString() to use resolveIdent() to get types, for
    more robustness.

M	core/src/main/java/com/google/errorprone/VisitorState.java
M	core/src/main/java/com/google/errorprone/matchers/DescendantOf.java

commit e99460f788976a564f3a9ffbc33a3f446774f2a5
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Nov 6 13:40:09 2012 -0800

    Fixes to StaticMethodMatcher pointed out by Matthew.

M	core/src/test/java/com/google/errorprone/matchers/StaticMethodTest.java

commit 02574cdf1e5900836a0710ccffde1fa1c1a145f5
Author: Matthew Dempsky <mdempsky@google.com>
Date:   Tue Nov 6 12:31:26 2012 -0800

    Fix DescendantOf handling for transitive descendants.
    
    If a type A inherits from type B, and type B inherits from type C,
    it's possible that when analyzing type A that type C isn't present in
    the compiler's memory.  To remedy this, when checking if a particular
    type is a subtype of another named type, we need to recursively walk
    all of the types supertypes and interfaces to ensure they're loaded in
    memory so we can do a proper subtype check.

M	core/src/main/java/com/google/errorprone/matchers/DescendantOf.java
M	core/src/test/java/com/google/errorprone/matchers/CompilerBasedTest.java
M	core/src/test/java/com/google/errorprone/matchers/DescendantOfTest.java

commit 95b69a7b28b669950f778287fcf5cbf115bbd9d5
Author: Matthew Dempsky <mdempsky@google.com>
Date:   Tue Nov 6 10:02:58 2012 -0800

    Use a regex to reparse literals instead of using endPositions.
    
    endPositions isn't available unless we compile with -Xjcov, and we
    want to still provide errors in those situations even if we can't
    provide fix suggestions.
    
    Also, add a unit test to check that we handle underscores correctly.

M	core/src/main/java/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffix.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffixPositiveCases.java

commit de77ccfe57d273ea6b8ea609e7aa1db8fedfd0f2
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Nov 5 21:49:23 2012 -0800

    Generalized isDescendantOf matcher to match bare method calls.
    
    Also added tests for the DescendantOf matcher. This is a fix for issue 52.

A	core/src/main/java/com/google/errorprone/matchers/DescendantOf.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
A	core/src/test/java/com/google/errorprone/matchers/DescendantOfTest.java

commit e059d99817e6871d3f3e8e65b61dfc3d53fdcb32
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Nov 5 21:07:43 2012 -0800

    Added regression test for StaticMethod matcher matching static imports.

M	core/src/test/java/com/google/errorprone/matchers/StaticMethodTest.java

commit 02e47dae19be75d9da5b7cbd87150b0c6cd631ea
Author: Matthew Dempsky <mdempsky@google.com>
Date:   Mon Nov 5 18:22:55 2012 -0800

    Check more Pattern and String methods for invalid regex syntax.
    
    Also, provide a suggested fix to replace "." with "\\.", since the
    former is silly when used as a regex.

M	core/src/main/java/com/google/errorprone/bugpatterns/InvalidPatternSyntax.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InvalidPatternSyntaxNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/InvalidPatternSyntaxPositiveCases.java

commit e75564a7e9b9cefc89c28385d7791b3853a9f689
Author: Matthew Dempsky <mdempsky@google.com>
Date:   Fri Nov 2 16:18:03 2012 -0700

    Don't crash when compiling without -Xjcov.
    
    compilationUnit.endPositions may be null when compiling without
    -Xjcov, so handle that gracefully.

M	core/src/main/java/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffix.java

commit 1d85dc7abd04b9a2aee05de9c97543971176adce
Author: Matthew Dempsky <mdempsky@google.com>
Date:   Fri Nov 2 16:05:21 2012 -0700

    Simplify and fix LongLiteralLowerCaseSuffix.
    
    Instead of re-parsing long literals, take advantage of the fact that
    the compiler already knows the end positions of literals.  Simplifies
    the logic for extract the source code, and fixes the test cases for
    "-12345l" and "- 12345l".

M	core/src/main/java/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffix.java

commit 2ecef62b34ca3c6fa8d24fdde0cfd964f2052160
Author: Matthew Dempsky <mdempsky@google.com>
Date:   Thu Nov 1 19:29:05 2012 -0700

    Add a matcher to detect invalid pattern syntax in string literals.

A	core/src/main/java/com/google/errorprone/bugpatterns/InvalidPatternSyntax.java
A	core/src/test/java/com/google/errorprone/bugpatterns/InvalidPatternSyntaxTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/InvalidPatternSyntaxNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/InvalidPatternSyntaxPositiveCases.java

commit 2234b99f77b7c40267c0149e833ac818412d65ce
Author: Matthew Dempsky <mdempsky@google.com>
Date:   Thu Nov 1 18:41:58 2012 -0700

    Add postfixWith(Node, String) method to SuggestedFix.

M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java
M	core/src/test/java/com/google/errorprone/fixes/AppliedFixTest.java

commit 03da40279d946382a9e87545c261e69b676bc76a
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Oct 30 14:08:23 2012 -0700

    Changes from code review. Also allow turning on and off each part of the SelfEquals check.

M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquals.java
M	core/src/main/java/com/google/errorprone/matchers/InstanceMethod.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SelfEqualsTest.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/SelfEqualsNegativeCases.java

commit c96d583e8e5ccf646635a037dab0f03b55f4ea10
Author: Louis Wasserman <lowasser@google.com>
Date:   Tue Oct 30 07:42:35 2012 -0700

    Respond to comments

M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsTooManyArgs.java

commit 32751e59c24753ad5096763f26227e4589f4a93e
Author: Louis Wasserman <lowasser@google.com>
Date:   Fri Oct 26 15:43:24 2012 -0700

    Add PreconditionsTooManyArgs bug

A	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsTooManyArgs.java
M	core/src/main/java/com/google/errorprone/matchers/StaticMethod.java
A	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsTooManyArgsTest.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPositiveCase1.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsTooManyArgsNegativeCase1.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsTooManyArgsPositiveCase1.java

commit bf9f4450236942b500655ff4dfed82a0ce3b4d76
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Oct 26 11:47:01 2012 -0700

    Change to staticMethod matcher to detect statically imported method calls.

M	core/src/main/java/com/google/errorprone/matchers/StaticMethod.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPositiveCase3.java

commit e166c4c7ec959f5779fc41825b24f00a992d923c
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Oct 22 17:30:24 2012 -0700

    Better SelfEquals suggested fix.
    
    The suggested fix now handles the case where one or both of the
    arguments to Objects.equal() are field accesses.  Before it would crash
    on those cases.

M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquals.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/SelfEqualsPositiveCase1.java

commit 50da08ae5259ac25f634200853e386e621c5dcf9
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Oct 22 17:29:51 2012 -0700

    Removed an inaccurate comment.

M	core/src/test/resources/com/google/errorprone/bugpatterns/SelfAssignmentPositiveCases1.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/SelfAssignmentPositiveCases2.java

commit 833c1028c2c11ff97298fcdb0bfd8ab5b8fad419
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Oct 22 16:25:41 2012 -0700

    Cache the result of SelfEquals.matches() for use in describe().

M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquals.java

commit c718b79c552fa6d03db9b3c2368bcf34097ce39d
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Oct 22 15:45:56 2012 -0700

    SelfEquals checker now understands when a.foo is the same as foo.

M	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquals.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/SelfEqualsNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/SelfEqualsPositiveCase1.java

commit 7413e064226426fac746f47b4ba17893b2b5a499
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Oct 22 15:23:46 2012 -0700

    Refactored variable comparison code from SelfAssignment to a utility class.
    
    The code in SelfAssignment that compares whether two expressions refer
    to the same variable is also useful for other checks, such as
    SelfEquals.  I moved it into a utility class so I can reuse it.

M	core/src/main/java/com/google/errorprone/bugpatterns/SelfAssignment.java
M	core/src/main/java/com/google/errorprone/matchers/InstanceMethod.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
D	core/src/main/java/com/google/errorprone/matchers/SelfAssignmentMatcher.java
A	core/src/main/java/com/google/errorprone/util/ASTHelpers.java
D	core/src/test/java/com/google/errorprone/matchers/SelfAssignmentMatcherTest.java

commit 6f8ddb6318908cf488cbc206d4abdb56d4ac3c51
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Oct 19 16:24:33 2012 -0700

    Reworked ObjectsEqualSelfComparison checker.
    
    Renamed ObjectsEqualSelfComparion to SelfEquals. SelfEquals now also
    matches calls to .equals() in which the receiver is the same as the
    argument, e.g., foo.equals(foo).

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
D	core/src/main/java/com/google/errorprone/bugpatterns/ObjectsEqualSelfComparison.java
A	core/src/main/java/com/google/errorprone/bugpatterns/SelfEquals.java
M	core/src/main/java/com/google/errorprone/matchers/InstanceMethod.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
D	core/src/test/java/com/google/errorprone/bugpatterns/ObjectsEqualSelfComparisonTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/SelfEqualsTest.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/ObjectsEqualSelfComparisonNegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/ObjectsEqualSelfComparisonPositiveCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/SelfEqualsNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/SelfEqualsPositiveCase1.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/SelfEqualsPositiveCase2.java

commit cc23f4d0f732afa930dc940bb9ad8d58e172e6bd
Author: Simon Nickerson <sjnickerson@google.com>
Date:   Fri Oct 19 09:28:13 2012 +0100

    Remove unused imports.

M	core/src/main/java/com/google/errorprone/bugpatterns/UnneededConditionalOperator.java

commit 1cf6d4ee1af4a99a1c256e34c02ab9c24c451730
Author: Simon Nickerson <sjnickerson@google.com>
Date:   Thu Oct 18 14:32:36 2012 +0100

    Better treatment of negations for the unneeded conditional operator
    refactoring.
    
    e.g. (x >= y) now gets negated to (x < y) rather than (!(x >= y))

M	core/src/main/java/com/google/errorprone/bugpatterns/UnneededConditionalOperator.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/UnneededConditionalOperatorPositiveCases.java

commit 4ecb2a79ca555fb1c66124362da1dc94cff1b90d
Author: Simon Nickerson <sjnickerson@google.com>
Date:   Thu Oct 18 10:37:28 2012 +0100

    New checker for unneeded conditional operators, e.g.
    
      isFoo(blah) ? true : false
    
    can be replaced with:
    
      isFoo(blah)

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
A	core/src/main/java/com/google/errorprone/bugpatterns/UnneededConditionalOperator.java
A	core/src/test/java/com/google/errorprone/bugpatterns/UnneededConditionalOperatorTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/UnneededConditionalOperatorNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/UnneededConditionalOperatorPositiveCases.java

commit 5c255db3b320ca22e6e3c2d6488ee7f95b9b7f51
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Oct 16 20:51:23 2012 -0700

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	maven/pom.xml
M	pom.xml

commit d8b0ae63710d1d877a771025f1d3c0b99b21f4e7
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Oct 16 20:51:16 2012 -0700

    [maven-release-plugin] prepare release v0.9.7

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	maven/pom.xml
M	pom.xml

commit 80dd5aa930e7f77b9c8ed5efe31592dcfb74058d
Merge: 731372a ffee604
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Oct 16 16:32:13 2012 -0700

    Merge branch 'returnvalueignored'

commit ffee604d8958a2d2888cdce2f5b5a8fdcc313dad
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Oct 16 16:31:27 2012 -0700

    Better error message for ReturnValueIgnored.

M	core/src/main/java/com/google/errorprone/bugpatterns/ReturnValueIgnored.java

commit da9bf1fee4fd0277ecb2bc5c2fd7ac316b80a107
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Oct 16 16:23:48 2012 -0700

    Fixed another edge case with ReturnValueIgnored.

M	core/src/main/java/com/google/errorprone/bugpatterns/ReturnValueIgnored.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ReturnValueIgnoredNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ReturnValueIgnoredPositiveCase1.java

commit a2deaf61abf3e68b9f57dcc635221efe1ba47196
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Oct 15 15:26:34 2012 -0700

    Removed URI, Color, and Fonts from instrumented classes, and fixed the SuggestedFix for static methods called via fully-qualified class names.

M	core/src/main/java/com/google/errorprone/bugpatterns/ReturnValueIgnored.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ReturnValueIgnoredPositiveCase1.java

commit 731372a75f0ed9cc78fab3eb320a4786370146e3
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Oct 12 12:01:05 2012 -0700

    Corrected typo in check metadata: ObjectsEqualsSelfComparison => ObjectsEqualSelfComparison

M	core/src/main/java/com/google/errorprone/bugpatterns/ObjectsEqualSelfComparison.java

commit 01b4c13e574172c4b9023ccd0ae3a0343050b758
Author: Caitlin Sadowski <supertri@google.com>
Date:   Thu Oct 11 15:41:08 2012 -0700

    Added support for a few more classes to ReturnValueIgnored
    
    Paired with eaftan

M	core/src/main/java/com/google/errorprone/bugpatterns/ReturnValueIgnored.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ReturnValueIgnoredPositiveCase1.java

commit 7a8ea9c2ef35cd4acda768e6c5ebe31e8ca8278e
Merge: 5f0f9b9 46b9b60
Author: Caitlin Sadowski <supertri@google.com>
Date:   Thu Oct 11 15:21:15 2012 -0700

    Merge branch 'returnvalueignored' of https://code.google.com/p/error-prone into returnvalueignored

commit 46b9b6003baa9ddd93038bbe0c41d776fc64bf5f
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Oct 10 15:18:23 2012 -0700

    Fixed 2 bugs in ReturnValueIgnored suggested fix.
    
    Now correctly handles static methods like String.format() and generates
    an assignment if the method return value is assignable to, rather than
    the same type as, the identifier.

M	core/src/main/java/com/google/errorprone/bugpatterns/ReturnValueIgnored.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ReturnValueIgnoredPositiveCase1.java

commit a9e2e78ed487e43a0e1082d575888db8105b53eb
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Oct 10 15:18:00 2012 -0700

    Style cleanup for imports in Matchers class.

M	core/src/main/java/com/google/errorprone/matchers/Matchers.java

commit a3928c9422cd8d316b8db03bcae29f035f978d3b
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Oct 10 11:19:19 2012 -0700

    Cleaned up code for ReturnValueIgnored checker.

M	core/src/main/java/com/google/errorprone/bugpatterns/ReturnValueIgnored.java

commit a873aa293d8373da9890a2240fa4752c542fde6c
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Oct 9 17:37:08 2012 -0700

    Style fix for indentation.

M	core/src/test/java/com/google/errorprone/ErrorReportingJavaCompilerIntegrationTest.java

commit 3c9e124ae8c4313837c97b451aaf67a9d07edc9e
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Oct 9 17:27:12 2012 -0700

    Fixes from code review.
    
    Fixed a bug for multiple top-level classes, and made some refactoring
    changes to make the code more understandable.

M	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java

commit 5f0f9b921631d087e53a40ff825b060180eeb141
Merge: c4e1650 45b8852
Author: Caitlin Sadowski <supertri@google.com>
Date:   Tue Oct 9 17:01:20 2012 -0700

    Merge branch 'master' into returnvalueignored

commit c4e1650a8fec3fd5c1c11c526ba4b588dc89ea18
Author: Caitlin Sadowski <supertri@google.com>
Date:   Tue Oct 9 16:58:12 2012 -0700

    Working version of the ReturnValueIgnored check.
    
    Check now handles various tricky cases involving calling methods on
    "this". Still could use a little refactoring.
    
    Paired with eaftan.

M	core/src/main/java/com/google/errorprone/bugpatterns/ReturnValueIgnored.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ReturnValueIgnoredNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ReturnValueIgnoredPositiveCase1.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ReturnValueIgnoredPositiveCase2.java

commit f1a112829882de876ecef725cd4c919805dc643e
Merge: 2f710ac a16364e
Author: Caitlin Sadowski <supertri@google.com>
Date:   Tue Oct 9 14:42:54 2012 -0700

    Merge branch 'master' into returnvalueignored

commit 45b8852806789bdd54af531104857d7387a1d267
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon Oct 8 20:42:24 2012 -0700

    Improve the message when our integration tests fail due to wrong diagnostics produced. Assert on each line rather than one assert for the whole file.
    
    Previously, we'd get a giant matcher description like
    Compiler returned unexpected diagnostics
    Expected: (not a collection containing a diagnostic on line <1L> and not a collection containing a diagnostic on line <2L> and not a collection containing a diagnostic on line <3L> and not a collection containing a diagnostic on line <4L> and not a collection containing a diagnostic on line <5L> and not a collection containing a diagnostic on line <6L> and not a collection containing a diagnostic on line <7L> and not a collection containing a diagnostic on line <8L> and not a collection containing a diagnostic on line <9L> and not a collection containing a diagnostic on line <10L> and not a collection containing a diagnostic on line <11L> and not a collection containing a diagnostic on line <12L> and not a collection containing a diagnostic on line <13L> and not a collection containing a diagnostic on line <14L> and not a collection containing a diagnostic on line <15L> and not a collection containing a diagnostic on line <16L> and not a collection containing a diagnostic on line <17L> and not a collection containing a diagnostic on line <18L> and not a collection containing a diagnostic on line <19L> and not a collection containing a diagnostic on line <20L> and not a collection containing a diagnostic on line <21L> and not a collection containing a diagnostic on line <22L> and not a collection containing a diagnostic on line <23L> and not a collection containing a diagnostic on line <24L> and not a collection containing a diagnostic on line <25L> and not a collection containing a diagnostic on line <26L> and not a collection containing a diagnostic on line <27L> and not a collection containing a diagnostic on line <28L> and not a collection containing a diagnostic on line <29L> and a collection containing a diagnostic on line <31L> that contains
    "value = 123432L"
     and not a collection containing a diagnostic on line <32L> and not a collection containing a diagnostic on line <33L>
     and so on...

M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java

commit 2f710ac5cb5c767e94badd248beed58300f50f7d
Author: Caitlin Sadowski <supertri@google.com>
Date:   Fri Oct 5 18:02:58 2012 -0700

    Rewrote ReturnValueIgnored to check that the method has same return type as the receiver type. Paired with Eddie.

M	core/src/main/java/com/google/errorprone/bugpatterns/ReturnValueIgnored.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ReturnValueIgnoredTest.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ReturnValueIgnoredPositiveCase1.java

commit a16364e0449695498b8a23e10096b7368e81a383
Author: Caitlin Sadowski <supertri@google.com>
Date:   Fri Oct 5 13:48:50 2012 -0700

    Refactored the compiler integration tests to increase readability.

M	core/src/test/java/com/google/errorprone/ErrorReportingJavaCompilerIntegrationTest.java
A	core/src/test/resources/com/google/errorprone/ExtendedMultipleTopLevelClassesWithErrors.java
A	core/src/test/resources/com/google/errorprone/ExtendedMultipleTopLevelClassesWithNoErrors.java
D	core/src/test/resources/com/google/errorprone/MultipleTopLevelClassesExtended.java
D	core/src/test/resources/com/google/errorprone/MultipleTopLevelClassesExtender.java
A	core/src/test/resources/com/google/errorprone/MultipleTopLevelClassesWithErrors.java

commit 3a655c8d8f67bb9f65b1c59d0cb7dcc90dad8e51
Merge: 1abb3a8 14e0c60
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Oct 4 17:40:30 2012 -0700

    Merge branch 'master' of https://code.google.com/p/error-prone

commit 1abb3a810bd31280f88c8e38acd939dd699240b4
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Oct 4 17:40:13 2012 -0700

    Escape certain camelcase words in wiki output

M	docgen/src/main/java/com/google/errorprone/DocGen.java

commit 14e0c6052a1a9210cee8bf627be58bb3bd2ee8f5
Author: Alex Eagle <alexeagle@google.com>
Date:   Thu Oct 4 16:02:10 2012 -0700

    Delete two unused methods. One of them didn't compile with JDK7. I still need to upgrade my CentOS box where the continuous build runs, so we have better coverage for this...

M	core/src/main/java/com/google/errorprone/VisitorState.java

commit aef6e90b3f32ed13d01334dca051af63d3ad786b
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Oct 4 10:40:28 2012 -0700

    Work in progress on fixing ReturnValueIgnored. Previously it was matching way too many methods.

M	core/src/main/java/com/google/errorprone/bugpatterns/ReturnValueIgnored.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ReturnValueIgnoredTest.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/CollectionIncompatibleTypeNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ReturnValueIgnoredNegativeCases.java

commit 27b5661a0cd595f195159c3ba8900397c0894981
Merge: 3fae796 d5a19e9
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Oct 2 11:23:55 2012 -0700

    Merge branch 'returnvalueignored'

commit d5a19e9264690413b098803b9cb1ca85d4b9d042
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Oct 2 11:23:12 2012 -0700

    ReturnValueIgnored check now respects @CheckReturnValue annotation.

M	core/pom.xml
M	core/src/main/java/com/google/errorprone/VisitorState.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ReturnValueIgnored.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ReturnValueIgnoredTest.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ReturnValueIgnoredPositiveCase2.java

commit 3fae79651d09da4bb8bcd225f91348b347dc7a55
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Oct 1 15:32:09 2012 -0700

    Fixed a bug related to multiple top-level classes causing NullPointerExceptions

M	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
M	core/src/test/java/com/google/errorprone/ErrorReportingJavaCompilerIntegrationTest.java

commit 0a3ecd90bb1173b5c824838d2982b33fbfb98a1c
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Oct 1 15:27:22 2012 -0700

    New test case for NPE error now actually triggers error

M	core/src/main/java/com/google/errorprone/bugpatterns/SelfAssignment.java
M	core/src/test/resources/com/google/errorprone/MultipleTopLevelClassesExtended.java

commit f1d70f2236e2e4723533fb55be07d8e6006b7db4
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Oct 1 15:08:54 2012 -0700

    Added failing test case

M	core/src/test/java/com/google/errorprone/ErrorReportingJavaCompilerIntegrationTest.java
A	core/src/test/resources/com/google/errorprone/MultipleTopLevelClassesExtended.java
A	core/src/test/resources/com/google/errorprone/MultipleTopLevelClassesExtender.java

commit 25502534ab1ecef7a7251991c784d71a7753c2a2
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Oct 1 14:40:42 2012 -0700

    Working on making ReturnValueIgnored respect @CheckReturnValue annotation

M	core/pom.xml
M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/VisitorState.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ReturnValueIgnored.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ReturnValueIgnoredTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/ReturnValueIgnoredPositiveCase1.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/ReturnValueIgnoredPositiveCase2.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/ReturnValueIgnoredPositiveCases.java

commit c3dfb9894a38ab6a9cac8a8b05010c4a0f6c8ba0
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Sep 19 16:53:55 2012 -0700

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	maven/pom.xml
M	pom.xml

commit 168a68aa840900a753deaa18d324209e27337096
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Sep 19 16:53:51 2012 -0700

    [maven-release-plugin] prepare release 0.9.6

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	maven/pom.xml
M	pom.xml

commit c3ba03b8eb3b2bd36c2ee54a0533a0144f71ddf5
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Sep 19 16:52:26 2012 -0700

    Fixed a bug in SearchingJavaCompiler that was causing a NPE

M	core/src/main/java/com/google/errorprone/SearchingJavaCompiler.java

commit 37e87c34e36b07222b7562d41897334580713008
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Sep 19 15:13:53 2012 -0700

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	maven/pom.xml
M	pom.xml

commit cf7c6419265c3ada81dc9fb9911abcd23d06cdf4
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Sep 19 15:13:48 2012 -0700

    [maven-release-plugin] prepare release v0.9.5

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	maven/pom.xml
M	pom.xml

commit 5df102d027fa6b1c600ee7e751d7471627310597
Merge: 76c489d f50a776
Author: Simon Nickerson <sjnickerson@google.com>
Date:   Thu Sep 13 10:01:56 2012 +0100

    Merge branch 'longliteral'

commit f50a776578368142f70f5ef6fe1c7a758dced137
Author: Simon Nickerson <sjnickerson@google.com>
Date:   Thu Sep 13 10:00:14 2012 +0100

    Review comments from Eddie - make getSourceCode() a utility method.

M	core/src/main/java/com/google/errorprone/VisitorState.java
M	core/src/main/java/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffix.java

commit 76c489d07ef4cfdecd0412145f5ee23039649306
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Sep 12 16:48:55 2012 -0700

    Wiki generator now gives info on how to suppress an error

M	docgen/src/main/java/com/google/errorprone/DocGen.java

commit 3a8cd959f5c37371f24f8a482d30d97b315198ee
Author: Simon Nickerson <sjnickerson@google.com>
Date:   Wed Sep 12 08:29:02 2012 +0100

    Make sure we can detect hex strings with characters a-f / A-F in them.
    Also add some extra checks to the test case to make sure we're not
    confusing bytes and chars.

M	core/src/main/java/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffix.java
M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffixPositiveCases.java

commit 6d2be72400d98a397c338a54f5fa2aea3d5d8849
Merge: 0e5b012 0b674c4
Author: Simon Nickerson <sjnickerson@google.com>
Date:   Tue Sep 11 14:21:21 2012 +0100

    Merge branch 'master' into longliteral

commit 0e5b012d301fd92bbd34be4e48221922aaca247f
Author: Simon Nickerson <sjnickerson@google.com>
Date:   Tue Sep 11 14:20:22 2012 +0100

    Fixes to the long literal matcher to cope with octal, hex and
    negative long literals.

M	core/src/main/java/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffix.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffixNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffixPositiveCases.java

commit 69660d43e3a12744798aed5ba1cd768a7bf2fc5b
Author: Simon Nickerson <sjnickerson@google.com>
Date:   Tue Sep 11 12:11:02 2012 +0100

    New error-prone checker for long literals ending in a lower case ell
    (e.g. 123432l). These should probably be written as 123432L as in a lot
    of fonts, the 'l' can be misread as a '1'.
    
    I've had to resort to drastic measures to write my Matcher, because
    the suffix doesn't seem to be available in the AST. If you know of
    a better way of approaching this, please let me know.
    
    For http://code.google.com/p/error-prone/issues/detail?id=23

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
A	core/src/main/java/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffix.java
A	core/src/test/java/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffixTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffixNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffixPositiveCases.java

commit 0b674c4c6b99ace296b90d08ae3db44475265e50
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Sep 7 15:32:15 2012 -0700

    Removed debug code that was causing a test to fail

M	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayEqualsPositiveCases.java

commit 82ee5e6b049ac6cd601f7493e66805751fb1aec1
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Sep 7 15:19:48 2012 -0700

    Done with getType -- create arbitrary Types for matchers

M	core/src/main/java/com/google/errorprone/VisitorState.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayEquals.java

commit f56063d6d5795e426ea33101602ef5f1bac75afc
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Sep 7 13:59:55 2012 -0700

    Reworking interface to getType

M	core/src/main/java/com/google/errorprone/VisitorState.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java

commit 0fc2db498ce028a5e9089c7cd81f6bc688a516b2
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Aug 3 11:21:59 2012 -0700

    First cut at getType(String)

M	core/src/main/java/com/google/errorprone/VisitorState.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayEqualsPositiveCases.java

commit eaeae92b89cc1302588a7db416f2e592395481f5
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Sep 6 16:12:37 2012 -0700

    Add a matcher for string representations of types

M	core/src/main/java/com/google/errorprone/matchers/Matchers.java

commit 95f4d6555823985e41751c0f216add0571c5ad02
Merge: e3f77fa 174e671
Author: Simon Nickerson <sjnickerson@google.com>
Date:   Thu Sep 6 12:41:08 2012 +0100

    Merge branch 'suppress'

commit e3f77fa86b10ce037b8fc23ff28b76a4ccd3c47a
Author: Simon Nickerson <sjnickerson@google.com>
Date:   Wed Sep 5 09:49:27 2012 +0100

    Enable commented out test for OrderingFrom. (Also add Apache copyright notice)

M	core/src/test/java/com/google/errorprone/bugpatterns/OrderingFromTest.java

commit 174e67158e4600aeedb787560642e69dc8d6c5c1
Author: Simon Nickerson <sjnickerson@google.com>
Date:   Wed Sep 5 09:27:44 2012 +0100

    Review comments from Alex.

M	core/src/main/java/com/google/errorprone/bugpatterns/AbstractSuppressWarningsMatcher.java
M	core/src/main/java/com/google/errorprone/bugpatterns/FallThroughSuppression.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SuppressWarningsDeprecated.java
M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java
M	core/src/test/java/com/google/errorprone/bugpatterns/SuppressWarningsDeprecatedTest.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/SuppressWarningsDeprecatedNegativeCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/SuppressWarningsDeprecatedPositiveCases.java

commit af7fb4200fc9811c3a3a3854408443ce28904b43
Author: Simon Nickerson <sjnickerson@google.com>
Date:   Tue Sep 4 12:03:58 2012 +0100

    Fix javadoc for SuppressWarningsDeprecated.

M	core/src/main/java/com/google/errorprone/bugpatterns/SuppressWarningsDeprecated.java

commit b89314d4a1984765fc050fb1c7d502a110eb252d
Author: Simon Nickerson <sjnickerson@google.com>
Date:   Tue Sep 4 11:47:52 2012 +0100

    Finds incorrect usages of the @SuppressWarnings annotation with
    "deprecated" instead of "deprecation". Refactors some of the logic
    from FallThroughSuppression.

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
A	core/src/main/java/com/google/errorprone/bugpatterns/AbstractSuppressWarningsMatcher.java
M	core/src/main/java/com/google/errorprone/bugpatterns/FallThroughSuppression.java
A	core/src/main/java/com/google/errorprone/bugpatterns/SuppressWarningsDeprecated.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java
A	core/src/test/java/com/google/errorprone/bugpatterns/SuppressWarningsDeprecatedTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/SuppressWarningsDeprecatedNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/SuppressWarningsDeprecatedPositiveCases.java

commit f3e0287b07bc1d97f26dbc3db9e3205da9cc69aa
Author: Alex Eagle <alexeagle@google.com>
Date:   Sun Sep 2 12:25:07 2012 -0700

    Performance optimization for CollectionIncompatibleType: don't create new instances of any objects in the matches() method. Introduced a new "Supplier" concept so we can lazily get references to things rather than using the arguments to "matches".
    I'm very curious how much performance this actually buys us, since it introduces more indirection.

M	core/src/main/java/com/google/errorprone/bugpatterns/CollectionIncompatibleType.java
M	core/src/main/java/com/google/errorprone/matchers/DescribingMatcher.java
M	core/src/main/java/com/google/errorprone/matchers/Matcher.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
A	core/src/main/java/com/google/errorprone/suppliers/Supplier.java
A	core/src/main/java/com/google/errorprone/suppliers/Suppliers.java

commit 71fd2d0a9080843de06bbc1669204c4baf7edeaa
Author: Simon Nickerson <sjnickerson@google.com>
Date:   Wed Aug 29 15:58:53 2012 +0100

    Refactoring for Ordering.from(new Comparator<T>() { ... }) to
    new Ordering<T>() { ... }.
    
    Suggested fix now includes a possible replacement.
    
    Made test cases actually run.

M	core/src/main/java/com/google/errorprone/bugpatterns/OrderingFrom.java
M	core/src/main/java/com/google/errorprone/fixes/AppliedFix.java
A	core/src/test/java/com/google/errorprone/bugpatterns/OrderingFromTest.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/OrderingFromPositiveCases.java

commit a57faa23fc0dbca6bf549cbaf7f0c04a3d9b6b7b
Author: Alex Eagle <alexeagle@google.com>
Date:   Fri Aug 10 10:20:34 2012 -0700

    Fix non-generic return type.

M	core/src/main/java/com/google/errorprone/bugpatterns/CollectionIncompatibleType.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java

commit a3295003e827d0c03da9ca910482d55800de9535
Author: Alex Eagle <alexeagle@google.com>
Date:   Fri Aug 10 10:16:35 2012 -0700

    Optimization: try to create a single instance of our compound matchers rather than building them every time the matches() method is called.
    Sadly, some compound matchers are not purely compound; they use the state variable passed in. That makes it harder to re-use an instance of the matcher. We could do more of this optimization.

M	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ArrayEquals.java
M	core/src/main/java/com/google/errorprone/bugpatterns/CollectionIncompatibleType.java
M	core/src/main/java/com/google/errorprone/bugpatterns/FallThroughSuppression.java
M	core/src/main/java/com/google/errorprone/bugpatterns/ObjectsEqualSelfComparison.java
M	core/src/main/java/com/google/errorprone/bugpatterns/OrderingFrom.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNull.java
M	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsExpensiveString.java
M	core/src/main/java/com/google/errorprone/bugpatterns/SelfAssignment.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
D	core/src/main/java/com/google/errorprone/matchers/SelfAssignment.java
A	core/src/main/java/com/google/errorprone/matchers/SelfAssignmentMatcher.java
A	core/src/test/java/com/google/errorprone/matchers/SelfAssignmentMatcherTest.java
D	core/src/test/java/com/google/errorprone/matchers/SelfAssignmentTest.java

commit 9e3da0de713aa5c5e2be11c16ec1e0da9edfb102
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Aug 3 16:19:09 2012 -0700

    Added a matcher for method modifiers

M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
A	core/src/main/java/com/google/errorprone/matchers/MethodModifier.java
M	core/src/main/java/com/google/errorprone/matchers/MethodVisibility.java
M	core/src/main/java/com/google/errorprone/matchers/StaticMethod.java

commit bce1804982a6d537b936d61c4d69265c94ca8750
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Aug 3 12:20:23 2012 -0700

    Fix a bug in CovariantEquals for methods with no method body

M	core/src/main/java/com/google/errorprone/bugpatterns/CovariantEquals.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CovariantEqualsTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/CovariantEqualsPositiveCase5.java

commit 1153d03d54b0b804f06ddd87e183e89f844b8269
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Aug 1 12:17:42 2012 -0700

    Another pass at refactoring error prone compiler phase so that it can be easily reused

A	core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
M	core/src/main/java/com/google/errorprone/ErrorReportingJavaCompiler.java
M	core/src/test/java/com/google/errorprone/ErrorReportingJavaCompilerIntegrationTest.java

commit dd5759179f4637f4e9c67e0512f021f9f367ad3e
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Jul 31 15:37:04 2012 -0700

    Refactored error-prone compiler phase so that it can be easily reused

M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorReportingJavaCompiler.java

commit f147b5d38ec625d2c2fa18bef866f0db1297d3a7
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Jul 31 14:36:19 2012 -0700

    Small performance optimization for scanning files with one enclosed class

M	core/src/main/java/com/google/errorprone/ErrorReportingJavaCompiler.java

commit f2fbecd23a9deb000df34e70a8a4eed62ecf1a7a
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Jul 30 17:20:08 2012 -0700

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	maven/pom.xml
M	pom.xml

commit ad5622432b8d74e1ee4919f585bdc2849178b18e
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Jul 30 17:20:01 2012 -0700

    [maven-release-plugin] prepare release v0.9.4

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	maven/pom.xml
M	pom.xml

commit ef686ff08ed3f448f8f5e2736c0f1474552b9eb3
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Jul 30 17:16:00 2012 -0700

    Fixed a problem with javac not being able to infer types correctly

M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java

commit a0d33c18cf02e3fe39d5c7d5ef71bd86b2eed80d
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Jul 30 16:32:56 2012 -0700

    Added a test for SelfAssignment checker

A	core/src/test/java/com/google/errorprone/bugpatterns/SelfAssignmentTest.java

commit 3edb41aa5b3d5881ea746af9364a58429cee3688
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Jul 30 16:32:32 2012 -0700

    Changed bug marker format for test cases

M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayEqualsPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/CollectionIncompatibleTypePositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/CovariantEqualsPositiveCase1.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/CovariantEqualsPositiveCase2.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/CovariantEqualsPositiveCase3.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/CovariantEqualsPositiveCase4.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/DeadExceptionPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/EmptyIfStatementPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ObjectsEqualSelfComparisonPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPositiveCase1.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPositiveCase2.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ReturnValueIgnoredPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/SelfAssignmentPositiveCases1.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/SelfAssignmentPositiveCases2.java

commit 5187dac09a093bffbe699e911c6f1fb038268f18
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Jul 26 16:21:13 2012 -0700

    Wiki generation fixed to work with new example directory structure

M	docgen/src/main/java/com/google/errorprone/DocGen.java

commit 7f35ef857d7adb3380c91501bcc99b80be55e3b3
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Jul 26 16:20:40 2012 -0700

    Bugfix for javac's poor type inference

M	core/src/main/java/com/google/errorprone/bugpatterns/ReturnValueIgnored.java

commit 543a8d5aab54288bfa46c88e1ce7afb7574a221f
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Jul 26 14:53:05 2012 -0700

    Small optimization for scanning compilation units, better comments

M	core/src/main/java/com/google/errorprone/ErrorReportingJavaCompiler.java
M	core/src/test/resources/com/google/errorprone/MultipleTopLevelClassesWithNoErrors.java

commit f4430cb1c44a7f3d83ae0e174cafce4d9061dcce
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Jul 26 14:29:57 2012 -0700

    Forgot a file

A	core/src/test/java/com/google/errorprone/ErrorReportingJavaCompilerIntegrationTest.java

commit 0be9bb5d3535d0a436fb0634325155d4da1bfa36
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Jul 26 14:29:36 2012 -0700

    Reworked scanner so that imports and package declarations are scanned

M	core/src/main/java/com/google/errorprone/ErrorReportingJavaCompiler.java
D	core/src/test/java/com/google/errorprone/ErrorFindingCompilerIntegrationTest.java
D	core/src/test/resources/com/google/errorprone/Foo.java
A	core/src/test/resources/com/google/errorprone/MultipleTopLevelClassesWithNoErrors.java

commit 9a0e7e76675788a052aaddaca9b7dca3d423131e
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Jul 25 17:22:14 2012 -0700

    Remove a .class file that was accidentally checked in

D	core/src/test/resources/com/google/errorprone/bugpatterns/array_equals/PositiveCases.class

commit 1aa65b9ef053e58c4413c1c4043bbba1b970f1ff
Merge: f82983c 017c50e
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Jul 25 17:21:30 2012 -0700

    Merge branch 'master' of https://code.google.com/p/error-prone

commit f82983c320f8f7001448690a6da9e490e3ce1062
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Jul 25 17:21:17 2012 -0700

    Rename assertCompileFails method, and fix test failure

M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/ErrorFindingCompilerIntegrationTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CollectionIncompatibleTypeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CovariantEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DeadExceptionTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/EmptyIfStatementTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ObjectsEqualSelfComparisonTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ReturnValueIgnoredTest.java

commit 8ce44104f7286a7dcf8fa0e66f27c3065a58c329
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Jul 25 17:14:41 2012 -0700

    cleanup

M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayEqualsTest.java

commit 9b85aaa9f5457abe6a8d51d22d433f0d6baac56d
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Jul 24 17:58:05 2012 -0700

    Restructured tests so that expected error messages are part of the //BUG marker in test files

M	core/src/main/java/com/google/errorprone/fixes/AppliedFix.java
M	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ArrayEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CollectionIncompatibleTypeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/CovariantEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/DeadExceptionTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/EmptyIfStatementTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ObjectsEqualSelfComparisonTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/ReturnValueIgnoredTest.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayEqualsPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/CollectionIncompatibleTypePositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/CovariantEqualsPositiveCase1.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/CovariantEqualsPositiveCase2.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/CovariantEqualsPositiveCase3.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/CovariantEqualsPositiveCase4.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/CovariantEqualsPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/DeadExceptionPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/EmptyIfStatementPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ObjectsEqualSelfComparisonPositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPositiveCase1.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPositiveCase2.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/ReturnValueIgnoredPositiveCases.java

commit 244a019e64bfed28100dadab9a83f16847bec08a
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Jul 24 15:39:33 2012 -0700

    Refactored tests so they are all in the com.google.errorprone.bugpatterns package

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
A	core/src/main/java/com/google/errorprone/bugpatterns/ArrayEquals.java
A	core/src/main/java/com/google/errorprone/bugpatterns/CollectionIncompatibleType.java
A	core/src/main/java/com/google/errorprone/bugpatterns/CovariantEquals.java
A	core/src/main/java/com/google/errorprone/bugpatterns/DeadException.java
A	core/src/main/java/com/google/errorprone/bugpatterns/EmptyIfStatement.java
A	core/src/main/java/com/google/errorprone/bugpatterns/EmptyStatement.java
A	core/src/main/java/com/google/errorprone/bugpatterns/FallThroughSuppression.java
A	core/src/main/java/com/google/errorprone/bugpatterns/ObjectsEqualSelfComparison.java
A	core/src/main/java/com/google/errorprone/bugpatterns/OrderingFrom.java
A	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNull.java
A	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitive1stArg.java
A	core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsExpensiveString.java
A	core/src/main/java/com/google/errorprone/bugpatterns/ReturnValueIgnored.java
A	core/src/main/java/com/google/errorprone/bugpatterns/SelfAssignment.java
D	core/src/main/java/com/google/errorprone/bugpatterns/array_equals/ArrayEquals.java
D	core/src/main/java/com/google/errorprone/bugpatterns/collection_incompatible_type/CollectionIncompatibleType.java
D	core/src/main/java/com/google/errorprone/bugpatterns/covariant_equals/CovariantEquals.java
D	core/src/main/java/com/google/errorprone/bugpatterns/dead_exception/DeadException.java
D	core/src/main/java/com/google/errorprone/bugpatterns/empty_if_statement/EmptyIfStatement.java
D	core/src/main/java/com/google/errorprone/bugpatterns/emptystatement/EmptyStatement.java
D	core/src/main/java/com/google/errorprone/bugpatterns/fallthroughsuppression/FallThroughSuppression.java
D	core/src/main/java/com/google/errorprone/bugpatterns/objects_equal_self_comparison/ObjectsEqualSelfComparison.java
D	core/src/main/java/com/google/errorprone/bugpatterns/orderingfrom/OrderingFrom.java
D	core/src/main/java/com/google/errorprone/bugpatterns/preconditions_checknotnull/PreconditionsCheckNotNull.java
D	core/src/main/java/com/google/errorprone/bugpatterns/preconditionschecknotnullprimitive1starg/PreconditionsCheckNotNullPrimitive1stArg.java
D	core/src/main/java/com/google/errorprone/bugpatterns/preconditionsexpensivestring/PreconditionsExpensiveString.java
D	core/src/main/java/com/google/errorprone/bugpatterns/return_value_ignored/ReturnValueIgnored.java
D	core/src/main/java/com/google/errorprone/bugpatterns/selfassignment/SelfAssignment.java
A	core/src/test/java/com/google/errorprone/bugpatterns/ArrayEqualsTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/CollectionIncompatibleTypeTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/CovariantEqualsTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/DeadExceptionTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/EmptyIfStatementTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/ObjectsEqualSelfComparisonTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/ReturnValueIgnoredTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/array_equals/ArrayEqualsTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/collection_incompatible_type/CollectionIncompatibleTypeTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/covariant_equals/CovariantEqualsTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/dead_exception/DeadExceptionTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/empty_if_statement/EmptyIfStatementTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/objects_equal_self_comparison/ObjectsEqualSelfComparisonTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/preconditions_checknotnull/PreconditionsCheckNotNullTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/return_value_ignored/ReturnValueIgnoredTest.java
M	core/src/test/java/com/google/errorprone/suppresswarnings/SuppressWarningsTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayEqualsNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/ArrayEqualsPositiveCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/CollectionIncompatibleTypeNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/CollectionIncompatibleTypePositiveCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/CovariantEqualsNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/CovariantEqualsPositiveCase1.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/CovariantEqualsPositiveCase2.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/CovariantEqualsPositiveCase3.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/CovariantEqualsPositiveCase4.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/CovariantEqualsPositiveCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/DeadExceptionNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/DeadExceptionPositiveCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/EmptyIfStatementNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/EmptyIfStatementPositiveCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/EmptyStatementNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/EmptyStatementPositiveCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/FallthroughSuppressionNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/FallthroughSuppressionPositiveCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/FallthroughSuppressionToBeExtended.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/ObjectsEqualSelfComparisonNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/ObjectsEqualSelfComparisonPositiveCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/OrderingFromNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/OrderingFromPositiveCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullNegativeCase1.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullNegativeCase2.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPositiveCase1.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPositiveCase2.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitive1stArgPositiveCase1.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsExpensiveStringNegativeCase1.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsExpensiveStringNegativeCase2.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/PreconditionsExpensiveStringPositiveCase1.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/ReturnValueIgnoredNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/ReturnValueIgnoredPositiveCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/SelfAssignmentNegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/SelfAssignmentPositiveCases1.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/SelfAssignmentPositiveCases2.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/array_equals/NegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/array_equals/PositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/collection_incompatible_type/NegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/collection_incompatible_type/PositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/covariant_equals/NegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/covariant_equals/PositiveCase1.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/covariant_equals/PositiveCase2.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/covariant_equals/PositiveCase3.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/covariant_equals/PositiveCase4.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/covariant_equals/PositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/dead_exception/NegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/dead_exception/PositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/empty_if_statement/NegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/empty_if_statement/PositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/emptystatement/NegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/emptystatement/PositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/fallthroughsuppression/NegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/fallthroughsuppression/PositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/fallthroughsuppression/ToBeExtended.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/objects_equal_self_comparison/NegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/objects_equal_self_comparison/PositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/orderingfrom/NegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/orderingfrom/PositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/preconditions_checknotnull/NegativeCase1.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/preconditions_checknotnull/NegativeCase2.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/preconditions_checknotnull/PositiveCase1.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/preconditions_checknotnull/PositiveCase2.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/preconditionschecknotnullprimitive1starg/PositiveCase1.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/preconditionsexpensivestring/NegativeCase1.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/preconditionsexpensivestring/NegativeCase2.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/preconditionsexpensivestring/PositiveCase1.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/return_value_ignored/NegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/return_value_ignored/PositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/selfassignment/NegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/selfassignment/PositiveCases.class
D	core/src/test/resources/com/google/errorprone/bugpatterns/selfassignment/PositiveCases1.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/selfassignment/PositiveCases2.java

commit 604dfe99625ec9e7edafc5ccbc79bd54ba9952b2
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Jul 24 14:20:44 2012 -0700

    Refactoring changes from code review

D	core/src/test/java/com/google/errorprone/CompilationHelper.java
A	core/src/test/java/com/google/errorprone/CompilationTestHelper.java
M	core/src/test/java/com/google/errorprone/bugpatterns/array_equals/ArrayEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/collection_incompatible_type/CollectionIncompatibleTypeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/covariant_equals/CovariantEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/dead_exception/DeadExceptionTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/empty_if_statement/EmptyIfStatementTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/objects_equal_self_comparison/ObjectsEqualSelfComparisonTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/preconditions_checknotnull/PreconditionsCheckNotNullTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/return_value_ignored/ReturnValueIgnoredTest.java

commit 1619cd93a6f6747675474553755a3483cd605cb3
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Jul 23 17:53:17 2012 -0700

    Fixed copyright notices

M	core/src/main/java/com/google/errorprone/bugpatterns/array_equals/ArrayEquals.java
M	core/src/main/java/com/google/errorprone/matchers/InstanceMethod.java
M	core/src/main/java/com/google/errorprone/matchers/MethodVisibility.java
M	core/src/test/java/com/google/errorprone/CompilationHelper.java
M	core/src/test/resources/com/google/errorprone/Foo.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/covariant_equals/PositiveCase3.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/covariant_equals/PositiveCase4.java
M	core/src/test/resources/com/google/errorprone/suppresswarnings/NegativeCases.java

commit a0b790c6e623d24e4993023e338605b6efc52af8
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Jul 23 17:26:00 2012 -0700

    Revised SuggestedFix.addImport to take just the type name and not the 'import'. Added a separate addStaticImport method as well.

M	core/src/main/java/com/google/errorprone/bugpatterns/array_equals/ArrayEquals.java
M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java

commit 017c50e9173fd8139eb666b580625cc4109b8b38
Author: Alex Eagle <alexeagle@google.com>
Date:   Sun Jul 22 19:06:38 2012 -0700

    Improve the index page of our documentation by including the summary of each bug pattern

M	annotation/src/main/java/com/google/errorprone/BugPattern.java
M	docgen/src/main/java/com/google/errorprone/DocGen.java

commit 52a84091fbe4454043c2eed9f411117c384b50a8
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Jul 10 16:41:26 2012 -0700

    First cut at a checker for ArrayEquals

A	core/src/test/resources/com/google/errorprone/bugpatterns/array_equals/PositiveCases.class

commit 67bf83baed8d7ef92c32a25e84a75ce47361cb65
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Jul 20 17:28:41 2012 -0700

    Forgot to add new files

A	core/src/main/java/com/google/errorprone/bugpatterns/collection_incompatible_type/CollectionIncompatibleType.java
A	core/src/main/java/com/google/errorprone/bugpatterns/return_value_ignored/ReturnValueIgnored.java
A	core/src/test/java/com/google/errorprone/bugpatterns/collection_incompatible_type/CollectionIncompatibleTypeTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/return_value_ignored/ReturnValueIgnoredTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/collection_incompatible_type/NegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/collection_incompatible_type/PositiveCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/return_value_ignored/NegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/return_value_ignored/PositiveCases.java

commit b286611bc44a9f64141b45a2e899bda442afff4a
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Jul 20 17:28:05 2012 -0700

    Refactored tests to be more consistent and extract common parts into a separate class

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
D	core/src/main/java/com/google/errorprone/bugpatterns/collectionIncompatibleType/CollectionIncompatibleType.java
M	core/src/main/java/com/google/errorprone/bugpatterns/covariant_equals/CovariantEquals.java
D	core/src/main/java/com/google/errorprone/bugpatterns/returnvalueignored/ReturnValueIgnored.java
M	core/src/test/java/com/google/errorprone/CompilationHelper.java
M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java
M	core/src/test/java/com/google/errorprone/bugpatterns/array_equals/ArrayEqualsTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/collectionIncompatibleType/CollectionIncompatibleTypeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/covariant_equals/CovariantEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/dead_exception/DeadExceptionTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/empty_if_statement/EmptyIfStatementTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/objects_equal_self_comparison/ObjectsEqualSelfComparisonTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/preconditions_checknotnull/PreconditionsCheckNotNullTest.java
D	core/src/test/java/com/google/errorprone/bugpatterns/returnvalueignored/ReturnValueIgnoredTest.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/collectionIncompatibleType/NegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/collectionIncompatibleType/PositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/covariant_equals/PositiveCase1.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/covariant_equals/PositiveCase2.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/covariant_equals/PositiveCase3.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/covariant_equals/PositiveCase4.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/dead_exception/PositiveCases.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/empty_if_statement/PositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/returnvalueignored/NegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/returnvalueignored/PositiveCases.java

commit 979089de9f73c953fe1826d1690e4135b3d14799
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Jul 19 17:42:51 2012 -0700

    Cleanup on tests

M	core/src/test/java/com/google/errorprone/CompilationHelper.java
M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java
M	core/src/test/java/com/google/errorprone/bugpatterns/objects_equal_self_comparison/ObjectsEqualSelfComparisonTest.java

commit b419068fd6c5a6780e98bcbf834cf6fa6039bda9
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Jul 19 17:35:52 2012 -0700

    Added tests for PreconditionsCheckNotNull and refactored how we run tests

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
A	core/src/main/java/com/google/errorprone/bugpatterns/preconditions_checknotnull/PreconditionsCheckNotNull.java
D	core/src/main/java/com/google/errorprone/bugpatterns/preconditionschecknotnull/PreconditionsCheckNotNull.java
A	core/src/test/java/com/google/errorprone/CompilationHelper.java
M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java
M	core/src/test/java/com/google/errorprone/bugpatterns/array_equals/ArrayEqualsTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/preconditions_checknotnull/PreconditionsCheckNotNullTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/preconditions_checknotnull/NegativeCase1.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/preconditions_checknotnull/NegativeCase2.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/preconditions_checknotnull/PositiveCase1.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/preconditions_checknotnull/PositiveCase2.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/preconditionschecknotnull/NegativeCase1.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/preconditionschecknotnull/PositiveCase1.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/preconditionschecknotnull/PositiveCase2.java

commit ad72ae912bbbcf5acf0a8cd20edba37a80596c37
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Jul 19 16:32:22 2012 -0700

    Added a test for ObjectsEqualSelfComparison

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
A	core/src/main/java/com/google/errorprone/bugpatterns/objects_equal_self_comparison/ObjectsEqualSelfComparison.java
D	core/src/main/java/com/google/errorprone/bugpatterns/objectsequalselfcomparison/ObjectsEqualSelfComparison.java
A	core/src/test/java/com/google/errorprone/bugpatterns/objects_equal_self_comparison/ObjectsEqualSelfComparisonTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/objects_equal_self_comparison/NegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/objects_equal_self_comparison/PositiveCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/objectsequalselfcomparison/NegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/objectsequalselfcomparison/PositiveCases.java

commit a9fdcdfc5a4c163ff6a7dbed1a99818920fc5217
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Jul 13 17:38:46 2012 -0700

    Code cleanup

M	core/src/main/java/com/google/errorprone/bugpatterns/array_equals/ArrayEquals.java

commit b90b756a7bd06054b850ab0b7a2b1e12e27b7d49
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Jul 12 17:20:39 2012 -0700

    Bugfixes for ArrayEquals checker

M	core/src/main/java/com/google/errorprone/bugpatterns/array_equals/ArrayEquals.java
M	core/src/main/java/com/google/errorprone/matchers/InstanceMethod.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/array_equals/PositiveCases.java

commit 1e731ece44283e89f0049e88bfcd7b4a240ad42f
Merge: 40638c1 fb6a9d6
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Jul 11 11:50:06 2012 -0700

    Merge branch 'master' of https://code.google.com/p/error-prone

commit 40638c189227c5aa19c91fb97e83e68881525515
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Jul 11 11:49:06 2012 -0700

    Added tests for ArrayEquals checker

M	core/src/main/java/com/google/errorprone/bugpatterns/array_equals/ArrayEquals.java
M	core/src/main/java/com/google/errorprone/matchers/InstanceMethod.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java
A	core/src/test/java/com/google/errorprone/bugpatterns/array_equals/ArrayEqualsTest.java
A	core/src/test/java/com/google/errorprone/matchers/InstanceMethodTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/array_equals/NegativeCases.java
D	core/src/test/resources/com/google/errorprone/bugpatterns/array_equals/PositiveCases.class
M	core/src/test/resources/com/google/errorprone/bugpatterns/array_equals/PositiveCases.java

commit fb6a9d6955add0664ef38c37903a53d251e817cd
Author: Alex Eagle <alexeagle@google.com>
Date:   Tue Jul 10 22:21:53 2012 -0700

    Create a new BugPattern for method calls whose return value should not be ignored.

M	core/src/main/java/com/google/errorprone/bugpatterns/collectionIncompatibleType/CollectionIncompatibleType.java
M	core/src/main/java/com/google/errorprone/bugpatterns/dead_exception/DeadException.java
A	core/src/main/java/com/google/errorprone/bugpatterns/returnvalueignored/ReturnValueIgnored.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/matchers/StaticMethod.java
A	core/src/test/java/com/google/errorprone/bugpatterns/returnvalueignored/ReturnValueIgnoredTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/returnvalueignored/NegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/returnvalueignored/PositiveCases.java

commit 3b8076d6fd26406ee29b4b39366483ef1d5704ef
Author: Alex Eagle <alexeagle@google.com>
Date:   Tue Jul 10 22:21:29 2012 -0700

    Change comments to javadoc, so these are easier to fill in

M	annotation/src/main/java/com/google/errorprone/BugPattern.java

commit 572ec84d9ffe62d5c668004fae7be8994f7d4d08
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Jul 10 17:28:01 2012 -0700

    Bugfix for StaticMethod matcher

M	core/src/main/java/com/google/errorprone/matchers/StaticMethod.java
M	core/src/test/java/com/google/errorprone/matchers/StaticMethodTest.java

commit f84beedd4e36528b51aad784db6bde3747fb92de
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Jul 10 16:41:26 2012 -0700

    First cut at a checker for ArrayEquals

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
A	core/src/main/java/com/google/errorprone/bugpatterns/array_equals/ArrayEquals.java
A	core/src/main/java/com/google/errorprone/matchers/InstanceMethod.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/matchers/StaticMethod.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/array_equals/PositiveCases.class
A	core/src/test/resources/com/google/errorprone/bugpatterns/array_equals/PositiveCases.java

commit cee01315ab49a971a3d263b7bdca224c2478533a
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Jun 29 16:11:28 2012 -0700

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	maven/pom.xml
M	pom.xml

commit 012c5d0a38708362eab1399b794623ed6ebe6698
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Jun 29 16:11:25 2012 -0700

    [maven-release-plugin] prepare release v0.9.3

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	maven/pom.xml
M	pom.xml

commit 2084fa433310d60b1044f51b072d4eb616a23650
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Jun 29 15:33:49 2012 -0700

    Fix typo

M	core/src/main/java/com/google/errorprone/matchers/DescribingMatcher.java

commit 86ee8c3a1681df85613b0103e4ddd1d77560126e
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Jun 29 14:53:13 2012 -0700

    Better error messages
    
    Added a new element to @BugPattern annotation that lets you specify the
    link to display in the error message, or to have no link at all.  Also
    fixed a typo in the error messages.

M	annotation/src/main/java/com/google/errorprone/BugPattern.java
M	core/src/main/java/com/google/errorprone/JavacErrorDescriptionListener.java
M	core/src/main/java/com/google/errorprone/matchers/DescribingMatcher.java
M	core/src/test/java/com/google/errorprone/bugpatterns/collectionIncompatibleType/CollectionIncompatibleTypeTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/covariant_equals/CovariantEqualsTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/dead_exception/DeadExceptionTest.java
M	core/src/test/java/com/google/errorprone/bugpatterns/empty_if_statement/EmptyIfStatementTest.java

commit 15717cba2aa756fd0505afa855196d24e44bd0c2
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Jun 26 12:17:13 2012 -0700

    Fix broken build

M	core/src/main/java/com/google/errorprone/matchers/DescribingMatcher.java

commit 2e54b2a4aa5bd639b9ab1445cc07ac2ba9a83db3
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Jun 26 12:10:30 2012 -0700

    Cleaner handling of altnames with SuppressWarnings

M	core/src/main/java/com/google/errorprone/Scanner.java
M	core/src/main/java/com/google/errorprone/matchers/DescribingMatcher.java

commit 4ef6790ee3d8f5f510511baa8759cd31841b58aa
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Jun 26 11:38:22 2012 -0700

    Modify docgen to generate altnames bullet only if check has an altname

M	docgen/src/main/java/com/google/errorprone/DocGen.java

commit 1ec551694f608a51e07709d26da43c09f719106c
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Jun 25 13:41:48 2012 -0700

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	maven/pom.xml
M	pom.xml

commit 03f3c7f0405df4f63b82ead09e0880aab756d6c3
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Jun 25 13:41:44 2012 -0700

    [maven-release-plugin] prepare release 0.92

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	maven/pom.xml
M	pom.xml

commit 942038efc699de514953b592a78110d5a3edc66f
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Jun 22 14:04:04 2012 -0700

    Docgen now generates wiki documentation for alternate names

M	docgen/src/main/java/com/google/errorprone/DocGen.java

commit 7917836beec5a72b7c1437be3eec30d9411f3a96
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Jun 22 11:42:00 2012 -0700

    First cut at altnames for SuppressWarnings

M	annotation/src/main/java/com/google/errorprone/BugPattern.java
M	core/src/main/java/com/google/errorprone/Scanner.java
M	core/src/main/java/com/google/errorprone/bugpatterns/empty_if_statement/EmptyIfStatement.java
M	core/src/main/java/com/google/errorprone/matchers/DescribingMatcher.java

commit ae324cfb59d1b455c70ce986d2d1fd07a24e830a
Merge: 1228961 583f593
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Jun 19 15:57:18 2012 -0700

    Merge branch 'master' of https://code.google.com/p/error-prone

commit 1228961f3171959252139f6215e034e0ea4f7cc1
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Jun 19 15:57:09 2012 -0700

    Commented a test case

M	core/src/main/java/com/google/errorprone/bugpatterns/covariant_equals/CovariantEquals.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/covariant_equals/PositiveCase4.java

commit 583f5937932bc2f86ad6f4a50d3daa9223d12a7a
Author: Alex Eagle <alexeagle@google.com>
Date:   Sat Jun 9 10:48:19 2012 -0700

    Add idea-plugin code contributed by Sergey Simonchek

A	idea-plugin/META-INF/plugin.xml
A	idea-plugin/idea-plugin.iml
A	idea-plugin/src/com/google/errorprone/intellij/ErrorProneIdeaBundle.java
A	idea-plugin/src/com/google/errorprone/intellij/ErrorProneIdeaBundle.properties
A	idea-plugin/src/com/google/errorprone/intellij/ErrorProneIdeaCompiler.java

commit 7aac65847ba969336e0c8db1b145ee7ff9874017
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Jun 13 17:04:38 2012 -0700

    CovariantEquals check now deletes equals methods defined on enums

M	core/src/main/java/com/google/errorprone/bugpatterns/covariant_equals/CovariantEquals.java
M	core/src/test/java/com/google/errorprone/bugpatterns/covariant_equals/CovariantEqualsTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/covariant_equals/PositiveCase4.java

commit fbe07ad0940825639fb3a798ecb25f98586f1b53
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Jun 13 11:44:33 2012 -0700

    CovariantEquals suggested fix now adds @Override annotation to equals method

M	core/src/main/java/com/google/errorprone/bugpatterns/covariant_equals/CovariantEquals.java
M	core/src/test/java/com/google/errorprone/bugpatterns/covariant_equals/CovariantEqualsTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/covariant_equals/PositiveCase3.java

commit fc4d14866e5e98f75cc087ce07e39a928a5f632d
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Jun 11 17:01:30 2012 -0700

    Reworked CovariantEquals suggeste fix. I think it's correct now.

M	core/src/main/java/com/google/errorprone/bugpatterns/covariant_equals/CovariantEquals.java
M	core/src/test/java/com/google/errorprone/bugpatterns/covariant_equals/CovariantEqualsTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/covariant_equals/PositiveCase1.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/covariant_equals/PositiveCase2.java

commit f25c38b51e0f35ea1637832e1ea6680c343203e2
Merge: 8c5d87e fc3d878
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Jun 11 16:57:15 2012 -0700

    Merged from master

commit 8c5d87e676adbefc17eba087a62a218d5e13ece7
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Jun 11 14:15:15 2012 -0700

    Working on CovariantEquals suggested fix

M	core/src/main/java/com/google/errorprone/refactors/covariant_equals/CovariantEquals.java

commit fc3d878903fb22e68a35c5a164fbd877da6b48df
Author: Alex Eagle <alexeagle@google.com>
Date:   Sat Jun 9 11:38:01 2012 -0700

    Add an integration test for @SuppressWarnings feature

A	core/src/test/java/com/google/errorprone/suppresswarnings/SuppressWarningsTest.java

commit 4cd2cf648bf954f21c0f2b0151212cafee1eab46
Author: Alex Eagle <alexeagle@google.com>
Date:   Sat Jun 9 11:26:23 2012 -0700

    Fix unit tests.

M	core/src/test/java/com/google/errorprone/ErrorFindingCompilerIntegrationTest.java
M	core/src/test/resources/com/google/errorprone/bugpatterns/preconditionsexpensivestring/PositiveCase1.java

commit 66a86d1652c383ea3921d03f49f444f1d1000765
Merge: bf62397 7f4b309
Author: Alex Eagle <alexeagle@google.com>
Date:   Sat Jun 9 11:20:25 2012 -0700

    Merge conflicts.

commit bf623976e0fbfe9abc685646b63ad5d50368de97
Author: Alex Eagle <alexeagle@google.com>
Date:   Sat Jun 9 11:07:36 2012 -0700

    More name changes, goes with prior commit.

A	core/src/main/java/com/google/errorprone/DescriptionListener.java
M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/ErrorReportingJavaCompiler.java
A	core/src/main/java/com/google/errorprone/JavacErrorDescriptionListener.java
D	core/src/main/java/com/google/errorprone/JavacErrorRefactorListener.java
D	core/src/main/java/com/google/errorprone/RefactorListener.java
M	core/src/main/java/com/google/errorprone/Scanner.java
M	core/src/main/java/com/google/errorprone/SearchingJavaCompiler.java
M	core/src/main/java/com/google/errorprone/VisitorState.java
A	core/src/main/java/com/google/errorprone/bugpatterns/collectionIncompatibleType/CollectionIncompatibleType.java
A	core/src/main/java/com/google/errorprone/bugpatterns/covariant_equals/CovariantEquals.java
A	core/src/main/java/com/google/errorprone/bugpatterns/dead_exception/DeadException.java
A	core/src/main/java/com/google/errorprone/bugpatterns/empty_if_statement/EmptyIfStatement.java
A	core/src/main/java/com/google/errorprone/bugpatterns/emptystatement/EmptyStatement.java
A	core/src/main/java/com/google/errorprone/bugpatterns/fallthroughsuppression/FallThroughSuppression.java
A	core/src/main/java/com/google/errorprone/bugpatterns/objectsequalselfcomparison/ObjectsEqualSelfComparison.java
A	core/src/main/java/com/google/errorprone/bugpatterns/orderingfrom/OrderingFrom.java
A	core/src/main/java/com/google/errorprone/bugpatterns/preconditionschecknotnullprimitive1starg/PreconditionsCheckNotNullPrimitive1stArg.java
A	core/src/main/java/com/google/errorprone/bugpatterns/preconditionsexpensivestring/PreconditionsExpensiveString.java
A	core/src/main/java/com/google/errorprone/bugpatterns/selfassignment/SelfAssignment.java
A	core/src/main/java/com/google/errorprone/matchers/DescribingMatcher.java
A	core/src/main/java/com/google/errorprone/matchers/Description.java
D	core/src/main/java/com/google/errorprone/refactors/RefactoringMatcher.java
D	core/src/main/java/com/google/errorprone/refactors/collectionIncompatibleType/CollectionIncompatibleType.java
D	core/src/main/java/com/google/errorprone/refactors/covariant_equals/CovariantEquals.java
D	core/src/main/java/com/google/errorprone/refactors/dead_exception/DeadException.java
D	core/src/main/java/com/google/errorprone/refactors/empty_if_statement/EmptyIfStatement.java
D	core/src/main/java/com/google/errorprone/refactors/emptystatement/EmptyStatement.java
D	core/src/main/java/com/google/errorprone/refactors/fallthroughsuppression/FallThroughSuppression.java
D	core/src/main/java/com/google/errorprone/refactors/objectsequalselfcomparison/ObjectsEqualSelfComparison.java
D	core/src/main/java/com/google/errorprone/refactors/orderingfrom/OrderingFrom.java
D	core/src/main/java/com/google/errorprone/refactors/preconditionschecknotnullprimitive1starg/PreconditionsCheckNotNullPrimitive1stArg.java
D	core/src/main/java/com/google/errorprone/refactors/preconditionsexpensivestring/PreconditionsExpensiveString.java
D	core/src/main/java/com/google/errorprone/refactors/selfassignment/SelfAssignment.java
M	core/src/test/java/com/google/errorprone/ErrorFindingCompilerIntegrationTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/collectionIncompatibleType/CollectionIncompatibleTypeTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/covariant_equals/CovariantEqualsTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/dead_exception/DeadExceptionTest.java
A	core/src/test/java/com/google/errorprone/bugpatterns/empty_if_statement/EmptyIfStatementTest.java
M	core/src/test/java/com/google/errorprone/matchers/CompilerBasedTest.java
D	core/src/test/java/com/google/errorprone/refactors/collectionIncompatibleType/CollectionIncompatibleTypeTest.java
D	core/src/test/java/com/google/errorprone/refactors/covariant_equals/CovariantEqualsTest.java
D	core/src/test/java/com/google/errorprone/refactors/dead_exception/DeadExceptionTest.java
D	core/src/test/java/com/google/errorprone/refactors/empty_if_statement/EmptyIfStatementTest.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/collectionIncompatibleType/NegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/collectionIncompatibleType/PositiveCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/covariant_equals/NegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/covariant_equals/PositiveCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/dead_exception/NegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/dead_exception/PositiveCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/empty_if_statement/NegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/empty_if_statement/PositiveCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/emptystatement/NegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/emptystatement/PositiveCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/fallthroughsuppression/NegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/fallthroughsuppression/PositiveCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/fallthroughsuppression/ToBeExtended.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/objectsequalselfcomparison/NegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/objectsequalselfcomparison/PositiveCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/orderingfrom/NegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/orderingfrom/PositiveCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/preconditionschecknotnull/NegativeCase1.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/preconditionschecknotnull/PositiveCase1.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/preconditionschecknotnull/PositiveCase2.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/preconditionschecknotnullprimitive1starg/PositiveCase1.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/preconditionsexpensivestring/NegativeCase1.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/preconditionsexpensivestring/NegativeCase2.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/preconditionsexpensivestring/PositiveCase1.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/selfassignment/NegativeCases.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/selfassignment/PositiveCases.class
A	core/src/test/resources/com/google/errorprone/bugpatterns/selfassignment/PositiveCases1.java
A	core/src/test/resources/com/google/errorprone/bugpatterns/selfassignment/PositiveCases2.java
D	core/src/test/resources/com/google/errorprone/refactors/collectionIncompatibleType/NegativeCases.java
D	core/src/test/resources/com/google/errorprone/refactors/collectionIncompatibleType/PositiveCases.java
D	core/src/test/resources/com/google/errorprone/refactors/covariant_equals/NegativeCases.java
D	core/src/test/resources/com/google/errorprone/refactors/covariant_equals/PositiveCases.java
D	core/src/test/resources/com/google/errorprone/refactors/dead_exception/NegativeCases.java
D	core/src/test/resources/com/google/errorprone/refactors/dead_exception/PositiveCases.java
D	core/src/test/resources/com/google/errorprone/refactors/empty_if_statement/NegativeCases.java
D	core/src/test/resources/com/google/errorprone/refactors/empty_if_statement/PositiveCases.java
D	core/src/test/resources/com/google/errorprone/refactors/emptystatement/NegativeCases.java
D	core/src/test/resources/com/google/errorprone/refactors/emptystatement/PositiveCases.java
D	core/src/test/resources/com/google/errorprone/refactors/fallthroughsuppression/NegativeCases.java
D	core/src/test/resources/com/google/errorprone/refactors/fallthroughsuppression/PositiveCases.java
D	core/src/test/resources/com/google/errorprone/refactors/fallthroughsuppression/ToBeExtended.java
D	core/src/test/resources/com/google/errorprone/refactors/objectsequalselfcomparison/NegativeCases.java
D	core/src/test/resources/com/google/errorprone/refactors/objectsequalselfcomparison/PositiveCases.java
D	core/src/test/resources/com/google/errorprone/refactors/orderingfrom/NegativeCases.java
D	core/src/test/resources/com/google/errorprone/refactors/orderingfrom/PositiveCases.java
D	core/src/test/resources/com/google/errorprone/refactors/preconditionschecknotnull/NegativeCase1.java
D	core/src/test/resources/com/google/errorprone/refactors/preconditionschecknotnull/PositiveCase1.java
D	core/src/test/resources/com/google/errorprone/refactors/preconditionschecknotnull/PositiveCase2.java
D	core/src/test/resources/com/google/errorprone/refactors/preconditionschecknotnullprimitive1starg/PositiveCase1.java
D	core/src/test/resources/com/google/errorprone/refactors/preconditionsexpensivestring/NegativeCase1.java
D	core/src/test/resources/com/google/errorprone/refactors/preconditionsexpensivestring/NegativeCase2.java
D	core/src/test/resources/com/google/errorprone/refactors/preconditionsexpensivestring/PositiveCase1.java
D	core/src/test/resources/com/google/errorprone/refactors/selfassignment/NegativeCases.java
D	core/src/test/resources/com/google/errorprone/refactors/selfassignment/PositiveCases.class
D	core/src/test/resources/com/google/errorprone/refactors/selfassignment/PositiveCases1.java
D	core/src/test/resources/com/google/errorprone/refactors/selfassignment/PositiveCases2.java
M	core/src/test/resources/com/google/errorprone/suppresswarnings/NegativeCases.java
M	docgen/src/main/java/com/google/errorprone/DocGen.java

commit 518c0f2b29d2f2d6199ee727621f28069a653082
Author: Alex Eagle <alexeagle@google.com>
Date:   Sat Jun 9 11:06:49 2012 -0700

    Significant renaming: remove the term "refactor" from error-prone, as that's just one particular use case, and probably not a common one.

A	core/src/main/java/com/google/errorprone/bugpatterns/preconditionschecknotnull/PreconditionsCheckNotNull.java
D	core/src/main/java/com/google/errorprone/refactors/preconditionschecknotnull/PreconditionsCheckNotNull.java

commit 7f4b3090a371cc5366fd51709953082ef2ea6334
Author: Alex Eagle <alexeagle@google.com>
Date:   Thu May 31 14:01:19 2012 -0700

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	maven/pom.xml
M	pom.xml

commit 57d22532ab7b444a49cd444db86d240b2158ee03
Author: Alex Eagle <alexeagle@google.com>
Date:   Thu May 31 14:01:15 2012 -0700

    [maven-release-plugin] prepare release v0.9.1

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	maven/pom.xml
M	pom.xml

commit b2064e667f57d423ce29e222464471415fe19e43
Author: Alex Eagle <alexeagle@google.com>
Date:   Thu May 31 12:19:37 2012 -0700

    Move the openjdk dependency back into a profile, so it doesn't appear as a transitive dependency to users.
    
    Fixes issue 18

M	core/pom.xml

commit 4e70a2b2ae7aceef7ec0e6b9328c93104affedc8
Author: Alex Eagle <alexeagle@google.com>
Date:   Thu May 31 11:01:35 2012 -0700

    Broke the build with my last commit. This integration test was overly brittle because it asserted more than needed.

M	core/src/test/java/com/google/errorprone/ErrorFindingCompilerIntegrationTest.java

commit d06853bf2d3beb56393b3cfaa1fe7fad50c07cb4
Author: Alex Eagle <alexeagle@google.com>
Date:   Thu May 31 10:55:25 2012 -0700

    Indicate the semicolon when reporting the location of an EmptyIf error, to match javac.
    
    Fixes issue 19

M	core/src/main/java/com/google/errorprone/refactors/empty_if_statement/EmptyIfStatement.java
M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java
M	core/src/test/java/com/google/errorprone/refactors/empty_if_statement/EmptyIfStatementTest.java

commit 704de3c8614ddfc326a41ead92b46a3ffcdc7bee
Author: Alex Eagle <alexeagle@google.com>
Date:   Tue May 29 17:02:11 2012 -0700

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	maven/pom.xml
M	pom.xml

commit 3249a1d6416c238b76d5a40b882676c48b54eec8
Author: Alex Eagle <alexeagle@google.com>
Date:   Tue May 29 17:02:07 2012 -0700

    [maven-release-plugin] prepare release v0.9a

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	maven/pom.xml
M	pom.xml

commit ceafaeeedd3eace9c14a18a132e031637c1a39a6
Author: Alex Eagle <alexeagle@google.com>
Date:   Tue May 29 16:45:12 2012 -0700

    Fix compile errors caused by weak generic type inference in JDK 1.6.0-google-v4

M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/refactors/collectionIncompatibleType/CollectionIncompatibleType.java
M	core/src/main/java/com/google/errorprone/refactors/covariant_equals/CovariantEquals.java
M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java
M	core/src/test/java/com/google/errorprone/refactors/collectionIncompatibleType/CollectionIncompatibleTypeTest.java

commit b0046809dccfb492a6464f2c119798db6af9bc20
Author: Alex Eagle <alexeagle@google.com>
Date:   Sun May 27 20:38:55 2012 -0700

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	maven/pom.xml
M	pom.xml

commit 35b3b22ef188df63fd0c3baf024f5a6507e45752
Author: Alex Eagle <alexeagle@google.com>
Date:   Sun May 27 20:38:47 2012 -0700

    [maven-release-plugin] prepare release v0.9

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	maven/pom.xml
M	pom.xml

commit e257519d18019dce981e194f2d28fbf38e2d7e23
Author: Alex Eagle <alexeagle@google.com>
Date:   Sun May 27 20:35:22 2012 -0700

    Fix a minor TODO.

M	docgen/src/main/java/com/google/errorprone/DocGen.java

commit b3b2b408c7f9b9569c37678be7b62a964a6e6e84
Author: Alex Eagle <alexeagle@google.com>
Date:   Sun May 27 20:02:12 2012 -0700

    Fix a TODO by inlining the verbose enumeration of the known checks.

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java

commit 373928f648eee1408fa276572abce7e69465084c
Author: Alex Eagle <alexeagle@google.com>
Date:   Sun May 27 19:58:11 2012 -0700

    Clean up the code for choosing enabled checks by using a Predicate interface.

M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java

commit 5eb26ea0780c9d37129ee2efac0090d19936fcf7
Author: Alex Eagle <alexeagle@google.com>
Date:   Sat May 26 20:23:04 2012 -0700

    Use the BugPattern annotation to decide which checks to enable by default.

M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java

commit d18948769a26b9001ab385e465240a10ac9d284c
Author: Alex Eagle <alexeagle@google.com>
Date:   Sun May 20 21:45:39 2012 -0700

    Add better messaging if we run on an Apple JDK. I confused myself by running maven from IDEA, getting the Apple JDK, and chased down the error.

M	examples/ant/src/Main.java
M	examples/maven/src/main/java/Main.java
M	pom.xml

commit b30ecb191f43e976d95270a2c2d101a291ab944e
Author: Alex Eagle <alexeagle@google.com>
Date:   Sun May 20 20:37:12 2012 -0700

    Add better messaging if we run on an Apple JDK. I confused myself by running maven from IDEA, getting the Apple JDK, and chased down the error.

M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	examples/maven/pom.xml
M	maven/src/main/java/com/google/errorprone/PlexusErrorProneCompiler.java

commit ea14142ceaab1a60b92befcde71b6019153891ae
Author: Alex Eagle <alexeagle@google.com>
Date:   Sun May 20 20:14:14 2012 -0700

    Finish wiring up the plexus compiler. Now the maven output looks good, compared with a compile break with the standard javac support.

M	maven/src/main/java/com/google/errorprone/PlexusErrorProneCompiler.java

commit 7dc1ec8c551a493a41854ab6f30efa923367a8c9
Author: Alex Eagle <alexeagle@google.com>
Date:   Sun May 20 19:53:26 2012 -0700

    Implement the compiler hook. Now the maven build runs with error-prone and reports our errors, but it doesn't detect the outcome of the failed build correctly, so it needs us to emit errors.

M	maven/src/main/java/com/google/errorprone/PlexusErrorProneCompiler.java

commit 925c1a82a6f8f7e561bc2b1d7cecdcb718ae11c2
Author: Alex Eagle <alexeagle@google.com>
Date:   Sun May 20 15:54:28 2012 -0700

    Now the compiler plugin is found, and throws the expected exception. Next step is to wire it up.

D	maven/src/main/java/com/google/errorprone/ErrorProneCompiler.java
A	maven/src/main/java/com/google/errorprone/PlexusErrorProneCompiler.java
A	maven/src/main/resources/META-INF/plexus/components.xml

commit c97304ffa3a826cf71122390ac42e2259d653d7c
Author: Alex Eagle <alexeagle@google.com>
Date:   Sun May 20 15:39:27 2012 -0700

    Create the maven compiler plugin. The compiler isn't yet found when you try to use this plugin.

M	examples/maven/pom.xml
A	maven/pom.xml
A	maven/src/main/java/com/google/errorprone/ErrorProneCompiler.java

commit b816942b87d73c994d0da27ed02503aefd54055e
Author: Alex Eagle <alexeagle@google.com>
Date:   Sun May 20 15:15:08 2012 -0700

    Start an example with maven - no error-prone wiring yet.

A	examples/maven/pom.xml
A	examples/maven/src/main/java/Main.java
M	pom.xml

commit ac6f54f7e23f3f50a289b897e64e71f5ec158de5
Author: Alex Eagle <alexeagle@google.com>
Date:   Thu May 17 23:16:24 2012 -0700

    simplify the generics, they made javac in JDK6 barf

M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java

commit 28bcc44797837fc1f3a706e5201b8913bdc46bdb
Author: Alex Eagle <alexeagle@google.com>
Date:   Thu May 17 23:06:33 2012 -0700

    It's brittle to write tests which assert on the exact line numbers where bugs occur, since imports change and you have to find the line numbers all over again. Instead, just add a comment on the lines, and read the source file to see where we should assert that we get a diagnostic.

M	core/src/main/java/com/google/errorprone/refactors/collectionIncompatibleType/CollectionIncompatibleType.java
M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java
M	core/src/test/java/com/google/errorprone/refactors/collectionIncompatibleType/CollectionIncompatibleTypeTest.java
M	core/src/test/resources/com/google/errorprone/refactors/collectionIncompatibleType/PositiveCases.java

commit 13e199d8c375e8e55ff4fc1034737d6c79b7d369
Author: Alex Eagle <alexeagle@google.com>
Date:   Thu May 17 22:38:46 2012 -0700

    Refactor the CollectionIncompatibleType matcher to use predicate DSL. It's still a bit rough, but this made it easy to add another positive case for Map.get(Object).

M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/refactors/collectionIncompatibleType/CollectionIncompatibleType.java
M	core/src/test/java/com/google/errorprone/refactors/collectionIncompatibleType/CollectionIncompatibleTypeTest.java
M	core/src/test/resources/com/google/errorprone/refactors/collectionIncompatibleType/PositiveCases.java

commit e8aabbfe69b003556bf47b78181d4ecb0ed380ec
Author: Alex Eagle <alexeagle@google.com>
Date:   Tue May 15 22:09:50 2012 -0700

    A bit more logic simplification in CollectionIncompatibleType.java. Getting close to converting it to matcher DSL.

M	core/src/main/java/com/google/errorprone/refactors/collectionIncompatibleType/CollectionIncompatibleType.java

commit dc8b9cd881602e125a2412cded8623dc87d58c59
Author: Alex Eagle <alexeagle@google.com>
Date:   Tue May 15 22:04:16 2012 -0700

    Another bugfix in CollectionIncompatibleType.java

M	core/src/main/java/com/google/errorprone/refactors/collectionIncompatibleType/CollectionIncompatibleType.java
M	core/src/test/resources/com/google/errorprone/refactors/collectionIncompatibleType/NegativeCases.java

commit be444ff7784c222fb830a8458b4ff6823472e74d
Author: Alex Eagle <alexeagle@google.com>
Date:   Tue May 15 22:00:39 2012 -0700

    Shake out a bug in CollectionIncompatibleType.java by adding a negative test case

M	core/src/main/java/com/google/errorprone/refactors/collectionIncompatibleType/CollectionIncompatibleType.java
M	core/src/test/java/com/google/errorprone/refactors/collectionIncompatibleType/CollectionIncompatibleTypeTest.java
M	core/src/test/resources/com/google/errorprone/refactors/collectionIncompatibleType/NegativeCases.java
M	core/src/test/resources/com/google/errorprone/refactors/collectionIncompatibleType/PositiveCases.java

commit 507942eb010e4502e48c3b4cf1220dbea84043cd
Author: Alex Eagle <alexeagle@google.com>
Date:   Tue May 15 21:52:44 2012 -0700

    Simplify logic for CollectionIncompatibleType.java

M	core/src/main/java/com/google/errorprone/refactors/collectionIncompatibleType/CollectionIncompatibleType.java

commit 1bdad7a453b800ed478e68c9e5ae49948da53b05
Merge: d7ef112 6239ac9
Author: Alex Eagle <alexeagle@google.com>
Date:   Tue May 15 20:52:41 2012 -0700

    Merge branch 'master' of https://code.google.com/p/error-prone

commit d7ef1124a8d8ae351863a4d376fadfb9e1ebce90
Author: Alex Eagle <alexeagle@google.com>
Date:   Tue May 15 20:52:19 2012 -0700

    Make our Names access work in both JDK6 and JDK7. This is getting complicated, but I think it's still better than maintaining a separate branch of the code for JDK6 and backporting all the changes.

M	core/src/main/java/com/google/errorprone/ErrorReportingJavaCompiler.java
M	core/src/main/java/com/google/errorprone/VisitorState.java
M	core/src/main/java/com/google/errorprone/matchers/StaticMethod.java
M	core/src/main/java/com/google/errorprone/refactors/collectionIncompatibleType/CollectionIncompatibleType.java

commit 6239ac9068507ccc391c05ed722f9685d1213ea8
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue May 15 11:27:13 2012 -0700

    forgot a file

A	core/src/main/java/com/google/errorprone/matchers/MethodVisibility.java

commit 7b862cc40bebc69d30774655c746b8db070019d9
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue May 15 11:24:57 2012 -0700

    Covariant equals check should only trigger if method is public

M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/refactors/covariant_equals/CovariantEquals.java
M	core/src/test/resources/com/google/errorprone/refactors/covariant_equals/NegativeCases.java

commit 8ec3be1329ece50a8c86117e832947e70b1ec31c
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon May 14 13:19:56 2012 -0700

    Covariant equals matcher should not match when the class has already defined a method that overrides Object.equals()

M	core/src/main/java/com/google/errorprone/matchers/EnclosingClass.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/refactors/covariant_equals/CovariantEquals.java
M	core/src/test/resources/com/google/errorprone/refactors/covariant_equals/NegativeCases.java

commit db2a1bb7b835ab61bd9ff756b1360f3b8b4959f5
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon May 14 11:03:00 2012 -0700

    Forgot to uncomment after debugging

M	core/src/test/resources/com/google/errorprone/refactors/covariant_equals/NegativeCases.java

commit fb17036e1055a7d9adf288cc2ea0dbafccd2c974
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon May 14 10:59:16 2012 -0700

    Fixed a bug in CovariantEquals and added additional test cases

M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/test/resources/com/google/errorprone/refactors/covariant_equals/NegativeCases.java

commit 5ef075cb2c8fa591bd0dc1f59d7048d286c9d13a
Author: Alex Eagle <alexeagle@google.com>
Date:   Fri May 11 18:13:43 2012 -0700

    Beginning of a check for incompatible types passed to non-generic methods of generic collections.

M	core/src/main/java/com/google/errorprone/JavacErrorRefactorListener.java
A	core/src/main/java/com/google/errorprone/refactors/collectionIncompatibleType/CollectionIncompatibleType.java
A	core/src/test/java/com/google/errorprone/refactors/collectionIncompatibleType/CollectionIncompatibleTypeTest.java
A	core/src/test/resources/com/google/errorprone/refactors/collectionIncompatibleType/NegativeCases.java
A	core/src/test/resources/com/google/errorprone/refactors/collectionIncompatibleType/PositiveCases.java

commit 02cf649662fa6144e2ecb836740ac6cfc4f7d307
Author: Alex Eagle <alexeagle@google.com>
Date:   Fri May 11 16:09:06 2012 -0700

    Include wiki link in our error message to the user.

M	core/src/main/java/com/google/errorprone/refactors/RefactoringMatcher.java

commit 647c7cde4d9e3cbc9e95b2095431c8d608d860c9
Author: Alex Eagle <alexeagle@google.com>
Date:   Fri May 11 15:51:50 2012 -0700

    Make BugPattern names more consistent

M	core/src/main/java/com/google/errorprone/refactors/objectsequalselfcomparison/ObjectsEqualSelfComparison.java
M	core/src/main/java/com/google/errorprone/refactors/preconditionschecknotnull/PreconditionsCheckNotNull.java
M	core/src/main/java/com/google/errorprone/refactors/preconditionschecknotnullprimitive1starg/PreconditionsCheckNotNullPrimitive1stArg.java
M	core/src/main/java/com/google/errorprone/refactors/preconditionsexpensivestring/PreconditionsExpensiveString.java
M	core/src/main/java/com/google/errorprone/refactors/selfassignment/SelfAssignment.java

commit 9f6b7745507f2be9e4f4aac4908e767473409997
Author: Alex Eagle <alexeagle@google.com>
Date:   Fri May 11 15:26:48 2012 -0700

    Fix tests while running docgen by changing the phase where we run docgen from package to site.
     We do a lot of extra crap when running mvn site, which we ought to remove.

M	core/pom.xml
M	core/src/test/java/com/google/errorprone/ErrorFindingCompilerIntegrationTest.java
M	pom.xml

commit 54efcf415c5ab9ec40588fb408d1e70e52ff409f
Author: Alex Eagle <alexeagle@google.com>
Date:   Fri May 11 14:34:33 2012 -0700

    Profiled error-prone, and found the spot which needed the most optimization. We were throwing an exception to indicate a condition.

M	core/src/main/java/com/google/errorprone/ErrorReportingJavaCompiler.java
M	core/src/main/java/com/google/errorprone/VisitorState.java
M	core/src/main/java/com/google/errorprone/matchers/StaticMethod.java
A	core/src/test/java/com/google/errorprone/DogfoodErrorProne.java

commit 4d6889c9ba4133b3f97552d5b968cccc958b25f0
Author: Alex Eagle <alexeagle@google.com>
Date:   Tue May 8 10:24:18 2012 -0700

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit 0cc1868f249b536f09365e4e89e27e786283167d
Author: Alex Eagle <alexeagle@google.com>
Date:   Tue May 8 10:24:13 2012 -0700

    [maven-release-plugin] prepare release v0.8

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit 85080e7d0cf09587430109ae90499ffc8f43433e
Author: Alex Eagle <alexeagle@google.com>
Date:   Tue May 8 10:19:06 2012 -0700

    Improve the UI slightly, by moving the suggested fix to a new line. It seems that the javac error printer somehow puts the code snippet on a line in between:
    
    refactors/empty_if_statement/PositiveCases.java:27: error: [EmptyIf] Empty statement after if
        if (i == 10); {
        ^
      did you mean 'if (i == 10) {'?

M	core/src/main/java/com/google/errorprone/JavacErrorRefactorListener.java

commit 02c85dea0c101be34e2d9baf419db79acf5c20e6
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon May 7 22:04:08 2012 -0700

    Include -Xjcov argument in ant example, to demonstrate suggested fix.

M	examples/ant/build.xml

commit b00e67f5d2da46b4c322ecc3f2f05e8ca7580690
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon May 7 21:56:30 2012 -0700

    Extract shared code for evaluating a match: set the treepath into the state, check for suppressions, and run the matcher

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/Scanner.java
M	core/src/main/java/com/google/errorprone/refactors/covariant_equals/CovariantEquals.java
M	core/src/main/java/com/google/errorprone/refactors/dead_exception/DeadException.java
M	core/src/main/java/com/google/errorprone/refactors/empty_if_statement/EmptyIfStatement.java
M	core/src/main/java/com/google/errorprone/refactors/fallthroughsuppression/FallThroughSuppression.java
M	core/src/main/java/com/google/errorprone/refactors/objectsequalselfcomparison/ObjectsEqualSelfComparison.java
M	core/src/main/java/com/google/errorprone/refactors/orderingfrom/OrderingFrom.java
M	core/src/main/java/com/google/errorprone/refactors/preconditionschecknotnull/PreconditionsCheckNotNull.java
M	core/src/main/java/com/google/errorprone/refactors/preconditionschecknotnullprimitive1starg/PreconditionsCheckNotNullPrimitive1stArg.java
M	core/src/main/java/com/google/errorprone/refactors/preconditionsexpensivestring/PreconditionsExpensiveString.java
M	core/src/main/java/com/google/errorprone/refactors/selfassignment/SelfAssignment.java

commit ca076eec2c520c3f4ef6e3366c94eccdbf4b19ab
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon May 7 20:05:29 2012 -0700

    Missed a rename in previous commit.

D	core/src/test/resources/com/google/errorprone/refactors/covariant_equals/PositiveCase.java
A	core/src/test/resources/com/google/errorprone/refactors/covariant_equals/PositiveCases.java

commit b95e06ddc19717efa895c3b04d8ab4210beb6051
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon May 7 20:04:14 2012 -0700

    Add integration test for EmptyIfStatement, and some more shuffling.

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
A	core/src/main/java/com/google/errorprone/refactors/empty_if_statement/EmptyIfStatement.java
D	core/src/main/java/com/google/errorprone/refactors/emptyifstatement/EmptyIfStatement.java
M	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java
M	core/src/test/java/com/google/errorprone/ErrorFindingCompilerIntegrationTest.java
M	core/src/test/java/com/google/errorprone/refactors/covariant_equals/CovariantEqualsTest.java
M	core/src/test/java/com/google/errorprone/refactors/dead_exception/DeadExceptionTest.java
A	core/src/test/java/com/google/errorprone/refactors/empty_if_statement/EmptyIfStatementTest.java
D	core/src/test/resources/com/google/errorprone/refactors/covariant_equals/NegativeCase.java
A	core/src/test/resources/com/google/errorprone/refactors/covariant_equals/NegativeCases.java
D	core/src/test/resources/com/google/errorprone/refactors/dead_exception/NegativeCase.java
A	core/src/test/resources/com/google/errorprone/refactors/dead_exception/NegativeCases.java
D	core/src/test/resources/com/google/errorprone/refactors/dead_exception/PositiveCase.java
A	core/src/test/resources/com/google/errorprone/refactors/dead_exception/PositiveCases.java
D	core/src/test/resources/com/google/errorprone/refactors/deadexception/NegativeCase1.java
D	core/src/test/resources/com/google/errorprone/refactors/deadexception/PositiveCase1.java
A	core/src/test/resources/com/google/errorprone/refactors/empty_if_statement/NegativeCases.java
A	core/src/test/resources/com/google/errorprone/refactors/empty_if_statement/PositiveCases.java
D	core/src/test/resources/com/google/errorprone/refactors/emptyifstatement/NegativeCases.java
D	core/src/test/resources/com/google/errorprone/refactors/emptyifstatement/PositiveCases.java

commit b88970c72270bbf77c76470811931462c84b7adb
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon May 7 16:37:55 2012 -0700

    Add integration test for DeadException checker

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
A	core/src/main/java/com/google/errorprone/refactors/dead_exception/DeadException.java
D	core/src/main/java/com/google/errorprone/refactors/deadexception/DeadException.java
A	core/src/test/java/com/google/errorprone/refactors/dead_exception/DeadExceptionTest.java
A	core/src/test/resources/com/google/errorprone/refactors/dead_exception/NegativeCase.java
A	core/src/test/resources/com/google/errorprone/refactors/dead_exception/PositiveCase.java

commit 790b992d26e0af0072119181c44979a64fd8e220
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon May 7 16:20:18 2012 -0700

    Rename checkers not to have spaces. This seems more intuitive for a unique key, and matches how IntelliJ adds custom @SuppressWarnings.

M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/refactors/covariant_equals/CovariantEquals.java
M	core/src/main/java/com/google/errorprone/refactors/deadexception/DeadException.java
M	core/src/main/java/com/google/errorprone/refactors/emptyifstatement/EmptyIfStatement.java
M	core/src/main/java/com/google/errorprone/refactors/emptystatement/EmptyStatement.java
M	core/src/main/java/com/google/errorprone/refactors/fallthroughsuppression/FallThroughSuppression.java
M	core/src/main/java/com/google/errorprone/refactors/objectsequalselfcomparison/ObjectsEqualSelfComparison.java
M	core/src/main/java/com/google/errorprone/refactors/orderingfrom/OrderingFrom.java
M	core/src/main/java/com/google/errorprone/refactors/preconditionschecknotnull/PreconditionsCheckNotNull.java
M	core/src/main/java/com/google/errorprone/refactors/preconditionschecknotnullprimitive1starg/PreconditionsCheckNotNullPrimitive1stArg.java
M	core/src/main/java/com/google/errorprone/refactors/preconditionsexpensivestring/PreconditionsExpensiveString.java
M	core/src/main/java/com/google/errorprone/refactors/selfassignment/SelfAssignment.java
M	core/src/test/resources/com/google/errorprone/refactors/covariant_equals/NegativeCase.java

commit 51b1f60fc5f2e86bc073c39ea4e880bce8adb5a1
Merge: 15574a6 d69bd7e
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon May 7 16:03:32 2012 -0700

    Merge branch 'master' of https://code.google.com/p/error-prone

commit 15574a6da7d9dbecb02b9ea3a77f6cbae100f0d1
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon May 7 15:57:43 2012 -0700

    These files were moved.

D	core/src/main/java/com/google/errorprone/refactors/failed_to_override_equals/FailedToOverrideEquals.java
D	core/src/test/java/com/google/errorprone/refactors/failed_to_override_equals/FailedToOverrideEqualsTest.java

commit f1095c17743edb1115bd559d9f50883352bf64f4
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon May 7 15:57:17 2012 -0700

    Rename "failed to override equals" so that the name looks better in a @SuppressWarnings, and to match findbugs: http://findbugs.sourceforge.net/bugDescriptions.html#EQ_ABSTRACT_SELF

A	core/src/main/java/com/google/errorprone/refactors/covariant_equals/CovariantEquals.java
A	core/src/test/java/com/google/errorprone/refactors/covariant_equals/CovariantEqualsTest.java
A	core/src/test/resources/com/google/errorprone/refactors/covariant_equals/NegativeCase.java
A	core/src/test/resources/com/google/errorprone/refactors/covariant_equals/PositiveCase.java
D	core/src/test/resources/com/google/errorprone/refactors/failed_to_override_equals/NegativeCase.java
D	core/src/test/resources/com/google/errorprone/refactors/failed_to_override_equals/PositiveCase.java

commit d69bd7ec9596be5249e61a2356d570042ecd72a8
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon May 7 14:12:29 2012 -0700

    Deploy error-prone to the central maven repository.
    In order to run mvn release:perform or deploy, you'll need to have valid login for sonatype.org in your settings.xml.
    See current snapshot deployed here:
    https://oss.sonatype.org/content/groups/public/com/google/errorprone/error_prone_core/0.8-SNAPSHOT/

M	core/src/test/java/com/google/errorprone/refactors/failed_to_override_equals/FailedToOverrideEqualsTest.java
M	pom.xml

commit 67be5984ae28fec04db7758d120c8621951360ca
Author: Alex Eagle <alexeagle@google.com>
Date:   Sun May 6 22:01:58 2012 -0700

    Implement a new check, for equals methods which are probably meant to Override Object.equals but instead overload that method with one that takes a different parameter type than "Object".

M	annotation/src/main/java/com/google/errorprone/BugPattern.java
A	core/src/main/java/com/google/errorprone/matchers/EnclosingClass.java
D	core/src/main/java/com/google/errorprone/matchers/IsSubtypeOf.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/refactors/RefactoringMatcher.java
A	core/src/main/java/com/google/errorprone/refactors/failed_to_override_equals/FailedToOverrideEquals.java
A	core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java
M	core/src/test/java/com/google/errorprone/ErrorFindingCompilerIntegrationTest.java
A	core/src/test/java/com/google/errorprone/refactors/failed_to_override_equals/FailedToOverrideEqualsTest.java
A	core/src/test/resources/com/google/errorprone/refactors/failed_to_override_equals/NegativeCase.java
A	core/src/test/resources/com/google/errorprone/refactors/failed_to_override_equals/PositiveCase.java

commit 9253ff306ac80ca3b8283690a8508871addc178f
Author: Alex Eagle <alexeagle@google.com>
Date:   Fri May 4 11:34:52 2012 -0700

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit 4f3c4a7d883c2bbcf4519c44529c8f0265a7cb28
Author: Alex Eagle <alexeagle@google.com>
Date:   Fri May 4 11:34:48 2012 -0700

    [maven-release-plugin] prepare release v0.7

M	annotation/pom.xml
M	ant/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit 0a19fc39218f0845d5b1b86a40a1eb56dfff6531
Author: Alex Eagle <alexeagle@google.com>
Date:   Thu May 3 21:16:02 2012 -0700

    Add support for Ant builds. Users are expected to add our error_prone_ant.jar to their ANT_HOME/lib directory, which is common practice for installing ant extensions. This places our ant compiler wrapper, as well as the whole error-prone library, on the classpath of the root classloader.
    This is actually necessary since the <javac> task loads the javac classes from the root classloader, and they in turn classload our message bundle. There's no API available for us to load the bundle ourselves; we must give a String which indicates the path.

A	ant/pom.xml
A	ant/src/main/java/com/google/errorprone/ErrorProneAntCompilerAdapter.java
M	core/pom.xml
A	examples/ant/build.xml
A	examples/ant/src/Main.java
M	pom.xml

commit 6621b2acc7bec97350d34fc0536228e3fe6b1b3b
Author: Alex Eagle <alexeagle@google.com>
Date:   Thu May 3 20:38:21 2012 -0700

    Don't allow a runtime dependency on guava, since that could conflict with guava versions in the compilation classpath.

M	core/pom.xml

commit 2de638f71fefda1a5935940957e9f0f73c332a8a
Author: Alex Eagle <alexeagle@google.com>
Date:   Sat Apr 28 12:15:48 2012 -0700

    Add test for AnnotationHasElementWithValue

A	core/src/test/java/com/google/errorprone/matchers/AnnotationHasElementWithValueTest.java
M	core/src/test/java/com/google/errorprone/matchers/CompilerBasedTest.java
M	core/src/test/java/com/google/errorprone/matchers/StaticMethodTest.java

commit 38dbab95f94d3c3b1566b84c7b15d79cdc03d929
Author: Alex Eagle <alexeagle@google.com>
Date:   Sat Apr 28 11:54:09 2012 -0700

    Start filling in missing tests.

A	core/src/test/java/com/google/errorprone/matchers/CompilerBasedTest.java
A	core/src/test/java/com/google/errorprone/matchers/SelfAssignmentTest.java
M	core/src/test/java/com/google/errorprone/matchers/StaticMethodTest.java
A	core/src/test/java/com/google/errorprone/matchers/StringLiteralTest.java

commit c629e0da6da7c4432aaaee182e5cea2465684044
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon Mar 26 12:10:21 2012 -0700

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit d42ca5193fb7fe9616c730d0fa513c1005bb17ea
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon Mar 26 12:10:18 2012 -0700

    [maven-release-plugin] prepare release 0.6

M	annotation/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit a417f9a7b828c4d0672814b4f4836959b57df46c
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Mar 23 17:41:57 2012 -0700

    Added support to SuggestedFix to specify imports to add or remove

M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java

commit c2e7c4299d766602ba8d37f261e3c4d61a419d75
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Mar 9 15:12:02 2012 -0800

    Temp fix for NullPointerExceptions with ExcelDelimitedWriter refactoring

M	core/src/main/java/com/google/errorprone/matchers/Constructor.java

commit 941b504c1e7d886ef739840dc965a90453316333
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Mar 8 16:40:20 2012 -0800

    Added a matcher for construtors with a specified signature

A	core/src/main/java/com/google/errorprone/matchers/Constructor.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java

commit 120c0dbc153e2fb5c19f8cfd62bb6d544ab2d700
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Mar 2 17:31:43 2012 -0800

    Simplified test case for compiling files with multiple top-level classes

M	core/src/test/java/com/google/errorprone/ErrorFindingCompilerIntegrationTest.java
D	core/src/test/resources/com/google/errorprone/ClassFileWriter.java
A	core/src/test/resources/com/google/errorprone/Foo.java

commit c013cba7d06c22de7e438e15847a94bffeaf051a
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Mar 2 17:23:15 2012 -0800

    Added a test case for compiling files with multiple top-level classes

M	core/src/test/java/com/google/errorprone/ErrorFindingCompilerIntegrationTest.java
A	core/src/test/resources/com/google/errorprone/ClassFileWriter.java

commit 66f9b5bb0201c8c4059af09a004db4cf47d7929f
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Mar 2 14:56:07 2012 -0800

    Fixed a bug in which compiling files that contain multiple top-level classes causes NullPointerExceptions when accessing symbol information.

M	core/src/main/java/com/google/errorprone/ErrorReportingJavaCompiler.java

commit eeef918ed9c595a6843226be24d43ddd96ae5546
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Feb 24 11:49:30 2012 -0800

    Changes from code review

M	core/src/main/java/com/google/errorprone/Scanner.java

commit 1df93afef61ef20df296708a3d34e289e662981e
Merge: ec94288 9e37238
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Feb 15 15:31:27 2012 -0800

    Merge branch 'master' of https://code.google.com/p/error-prone

commit ec94288aa57a1a68b863fa83e345aaf6b6ac99f0
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Feb 15 15:25:39 2012 -0800

    Fixed copyright notices

M	core/src/main/java/com/google/errorprone/matchers/SelfAssignment.java
M	core/src/main/java/com/google/errorprone/refactors/selfassignment/SelfAssignment.java
M	core/src/main/java/com/google/errorprone/util/EditDistance.java
M	core/src/test/resources/com/google/errorprone/refactors/fallthroughsuppression/NegativeCases.java
M	core/src/test/resources/com/google/errorprone/refactors/fallthroughsuppression/ToBeExtended.java
M	core/src/test/resources/com/google/errorprone/refactors/objectsequalselfcomparison/NegativeCases.java
M	core/src/test/resources/com/google/errorprone/refactors/objectsequalselfcomparison/PositiveCases.java

commit 2c9c6aa6a312248660a46bc78b5ad6929ab52af2
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Feb 15 15:09:28 2012 -0800

    Renamed test case file for SuppressWarnings

D	core/src/test/resources/com/google/errorprone/refactors/SuppressWarningsTest.java
A	core/src/test/resources/com/google/errorprone/suppresswarnings/NegativeCases.java

commit 701d05c59520770d6cd563824f077f863557ec56
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Feb 15 15:00:46 2012 -0800

    Error Prone now respects SuppressWarnings annotations

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/Scanner.java
M	core/src/main/java/com/google/errorprone/refactors/RefactoringMatcher.java
M	core/src/main/java/com/google/errorprone/refactors/emptyifstatement/EmptyIfStatement.java
M	core/src/main/java/com/google/errorprone/refactors/fallthroughsuppression/FallThroughSuppression.java
M	core/src/main/java/com/google/errorprone/refactors/objectsequalselfcomparison/ObjectsEqualSelfComparison.java
M	core/src/main/java/com/google/errorprone/refactors/selfassignment/SelfAssignment.java
A	core/src/test/resources/com/google/errorprone/refactors/SuppressWarningsTest.java

commit c1b7453a6930206e3888314b7f2ea040830faeda
Author: Alex Eagle <alexeagle@google.com>
Date:   Tue Feb 7 12:36:11 2012 -0800

    Fixes to run error-prone on OpenJDK7 on Mac. We might want to be able to compile and run with the Apple-provided JDK as well, but I haven't evaluated how hard that will be.

M	core/pom.xml
M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorReportingJavaCompiler.java
M	core/src/main/java/com/google/errorprone/SearchingJavaCompiler.java
M	core/src/test/java/com/google/errorprone/matchers/StaticMethodTest.java

commit 615cba014222622e493af34b07d04a140ad32dde
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon Jan 30 11:21:01 2012 -0800

    Avoid using the JavacFileManager, as the java-1.6.0-openjdk package I installed
    on CentOS has that class in a different package.

M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java

commit 4c76ee0b5587cdd33a5108326567e2d4ddbac6cb
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon Jan 30 11:05:01 2012 -0800

    Change trunk back to JDK6. I think I'll create a JDK7 branch for working on Mac,
    for the moment.

M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorReportingJavaCompiler.java
M	core/src/main/java/com/google/errorprone/SearchingJavaCompiler.java

commit a40cac0e7f5cb0a1a9477c6d1b467c8d39bd6344
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon Jan 30 09:41:18 2012 -0800

    Fix compile breakage against OpenJDK7.
    We will need to figure out a way to compile against OpenJDK6 as well. I haven't found a build for Mac which allows me to test that locally.

M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorReportingJavaCompiler.java
M	core/src/main/java/com/google/errorprone/SearchingJavaCompiler.java

commit 9e37238dec2684794049b237a79870a0f7c96e9a
Author: Alex Eagle <alexeagle@google.com>
Date:   Tue Feb 7 12:36:11 2012 -0800

    Fixes to run error-prone on OpenJDK7 on Mac. We might want to be able to compile and run with the Apple-provided JDK as well, but I haven't evaluated how hard that will be.

M	core/pom.xml
M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorReportingJavaCompiler.java
M	core/src/main/java/com/google/errorprone/SearchingJavaCompiler.java
M	core/src/test/java/com/google/errorprone/matchers/StaticMethodTest.java

commit 7bf0717235fad19c52b3f7212adaf6f9626ff8aa
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon Jan 30 11:21:01 2012 -0800

    Avoid using the JavacFileManager, as the java-1.6.0-openjdk package I installed
    on CentOS has that class in a different package.

M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java

commit f2d4a9b6ef7f4a70829899659ac75eb89bc71a04
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon Jan 30 11:05:01 2012 -0800

    Change trunk back to JDK6. I think I'll create a JDK7 branch for working on Mac,
    for the moment.

M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorReportingJavaCompiler.java
M	core/src/main/java/com/google/errorprone/SearchingJavaCompiler.java

commit 6ccb7508ec1a8561c69ced8aa74c4ed03419cc14
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon Jan 30 09:41:18 2012 -0800

    Fix compile breakage against OpenJDK7.
    We will need to figure out a way to compile against OpenJDK6 as well. I haven't found a build for Mac which allows me to test that locally.

M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorReportingJavaCompiler.java
M	core/src/main/java/com/google/errorprone/SearchingJavaCompiler.java

commit 82d9289031387acae0d22414d8612d79f39b8f63
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Sun Jan 29 15:03:34 2012 -0800

    Added missing EditDistance.java file

A	core/src/main/java/com/google/errorprone/util/EditDistance.java

commit bb8a99b7a79bfc52b161a184509c4f74ddf690d4
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Jan 26 16:01:03 2012 -0800

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit 372e279d5ca607351b86da71f76b8db3c0cc0671
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Jan 26 16:00:59 2012 -0800

    [maven-release-plugin] prepare release error_prone_parent-0.5

M	annotation/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit e15729f7c3063837cce53d04abd3d659d73653b3
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Jan 23 16:12:16 2012 -0800

    Better suggested fixes for self assignment checker

M	core/src/main/java/com/google/errorprone/VisitorState.java
M	core/src/main/java/com/google/errorprone/matchers/SelfAssignment.java
M	core/src/main/java/com/google/errorprone/refactors/selfassignment/SelfAssignment.java
M	core/src/test/resources/com/google/errorprone/refactors/selfassignment/NegativeCases.java
M	core/src/test/resources/com/google/errorprone/refactors/selfassignment/PositiveCases2.java

commit 9de78f6029c507728da15e9df34b01389851b62a
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Jan 9 17:52:45 2012 -0800

    Working(?) self assignment checker

M	core/src/main/java/com/google/errorprone/matchers/SelfAssignment.java
D	core/src/test/resources/com/google/errorprone/refactors/selfassignment/PositiveCases.java
A	core/src/test/resources/com/google/errorprone/refactors/selfassignment/PositiveCases1.java
A	core/src/test/resources/com/google/errorprone/refactors/selfassignment/PositiveCases2.java

commit d8ab52e9bf3a1e39147b3b67359193b1077784af
Merge: a3000e6 6e11f0f
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Jan 9 16:56:47 2012 -0800

    Merge branch 'fixing_scanners'

commit 6e11f0f679f6122c5dbd1c40b34ec4a3e66e7409
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Jan 9 16:56:32 2012 -0800

    Added test case for bug #9

M	core/src/test/resources/com/google/errorprone/refactors/emptyifstatement/PositiveCases.java

commit cf154c4a7289eb20f4c9037f0454a9914308f16e
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Jan 9 16:21:47 2012 -0800

    Fixed EmptyIfStatement.Search to correctly pass path in VisitorState to refactor method

M	core/src/main/java/com/google/errorprone/refactors/emptyifstatement/EmptyIfStatement.java

commit a3000e64c24cec9a243902ad3691b3e028f9b391
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Jan 9 15:54:24 2012 -0800

    Working on SelfAssignment checker

M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
A	core/src/main/java/com/google/errorprone/matchers/SelfAssignment.java
A	core/src/main/java/com/google/errorprone/refactors/selfassignment/SelfAssignment.java
A	core/src/test/resources/com/google/errorprone/refactors/selfassignment/NegativeCases.java
A	core/src/test/resources/com/google/errorprone/refactors/selfassignment/PositiveCases.class
A	core/src/test/resources/com/google/errorprone/refactors/selfassignment/PositiveCases.java

commit 9d824fb72c2205f2f526d4d96b1cbf1500c12187
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Thu Jan 5 14:34:29 2012 -0800

    Changed core pom.xml so that annotation processor and wiki generation occurs only if maven is executed with the "-P run-annotation-processor" option

M	core/pom.xml

commit e33bf33a04dfe8ff11b27b2278990e8faca7e34f
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Jan 4 17:45:49 2012 -0800

    Changed error messages to be generated using information from the @BugPattern annotation. Messages now contain the name of the check in brackets.

M	annotation/src/main/java/com/google/errorprone/BugPattern.java
M	core/src/main/java/com/google/errorprone/refactors/RefactoringMatcher.java
M	core/src/main/java/com/google/errorprone/refactors/deadexception/DeadException.java
M	core/src/main/java/com/google/errorprone/refactors/emptyifstatement/EmptyIfStatement.java
M	core/src/main/java/com/google/errorprone/refactors/emptystatement/EmptyStatement.java
M	core/src/main/java/com/google/errorprone/refactors/fallthroughsuppression/FallThroughSuppression.java
M	core/src/main/java/com/google/errorprone/refactors/objectsequalselfcomparison/ObjectsEqualSelfComparison.java
M	core/src/main/java/com/google/errorprone/refactors/orderingfrom/OrderingFrom.java
M	core/src/main/java/com/google/errorprone/refactors/preconditionschecknotnull/PreconditionsCheckNotNull.java
M	core/src/main/java/com/google/errorprone/refactors/preconditionschecknotnullprimitive1starg/PreconditionsCheckNotNullPrimitive1stArg.java
M	core/src/main/java/com/google/errorprone/refactors/preconditionsexpensivestring/PreconditionsExpensiveString.java
M	core/src/test/java/com/google/errorprone/ErrorFindingCompilerIntegrationTest.java

commit 6dac65178b7c4ac03bb52826e7270d6e5b082696
Merge: ba1f49d 62e2fb2
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Jan 4 14:44:02 2012 -0800

    Merge branch 'master' of https://code.google.com/p/error-prone

commit ba1f49d17ca3baf9bce3531712d81485ff3a380f
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Jan 4 14:43:11 2012 -0800

    Changed @BugPattern annotation and FallThroughSuppression refactor to allow one-off refactorings

M	annotation/src/main/java/com/google/errorprone/BugPattern.java
M	core/src/main/java/com/google/errorprone/refactors/fallthroughsuppression/FallThroughSuppression.java

commit e4c9a3661253df846a81e97b16a0116dd59aab14
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Jan 4 14:42:42 2012 -0800

    Missed a change that should have gone with previous commit

M	docgen/src/main/java/com/google/errorprone/DocGen.java

commit f0842997e6e643b4605ff2b8a2e01a183e35bc41
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Jan 4 14:36:10 2012 -0800

    Fixed BugPatterns wiki page generation
    
    Changed generation of BugPatterns wiki page to:
    1) Correctly link to checks with spaces in their names
    2) Output categories in a fixed order
    3) Make category headings smaller

M	docgen/src/main/java/com/google/errorprone/DocGen.java

commit 62e2fb2605059d75e242a6bec3378b60e651d744
Author: Alex Eagle <alexeagle@google.com>
Date:   Wed Jan 4 14:14:55 2012 -0800

    Disable inheritance from the google maven project, since it provides deployment to the central repo which we don't want yet.

M	pom.xml

commit 6c47629104691eb5ebf9c6405fc2be20764de042
Author: Alex Eagle <alexeagle@google.com>
Date:   Wed Jan 4 12:59:54 2012 -0800

    [maven-release-plugin] prepare for next development iteration

M	annotation/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit 345c0c5f9bebf418bbb3325ad0b0fe63908b6acf
Author: Alex Eagle <alexeagle@google.com>
Date:   Wed Jan 4 12:59:50 2012 -0800

    [maven-release-plugin] prepare release v0.4

M	annotation/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit 3aa52cd09d6fc0b14a4994d8ed5acc52ff1c6818
Author: Alex Eagle <alexeagle@google.com>
Date:   Wed Jan 4 12:05:46 2012 -0800

    Add developer SCM connection, which mvn release wants to use

M	pom.xml

commit 26df9d1461e4d7cdab79457f402bcd8cff75486c
Merge: 1976587 ab2b850
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Jan 4 11:41:45 2012 -0800

    merge with remote master

commit 1976587aadb9d56871616a242b89219b679abda4
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Jan 4 11:34:01 2012 -0800

    Lots of changes.  First, added @BugPattern documentation for all refactors. Second, changed directory layout for both refactors and example files. Finally, fixed docgen to correctly generate documentation when there are many refactors.

M	core/pom.xml
M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
D	core/src/main/java/com/google/errorprone/refactors/EmptyIfStatement.java
D	core/src/main/java/com/google/errorprone/refactors/EmptyStatement.java
D	core/src/main/java/com/google/errorprone/refactors/FallThroughSuppression.java
D	core/src/main/java/com/google/errorprone/refactors/OrderingFrom.java
D	core/src/main/java/com/google/errorprone/refactors/PreconditionsCheckNotNull.java
D	core/src/main/java/com/google/errorprone/refactors/PreconditionsCheckNotNullPrimitive1stArg.java
D	core/src/main/java/com/google/errorprone/refactors/PreconditionsExpensiveString.java
D	core/src/main/java/com/google/errorprone/refactors/dead_exception/DeadException.java
A	core/src/main/java/com/google/errorprone/refactors/deadexception/DeadException.java
A	core/src/main/java/com/google/errorprone/refactors/emptyifstatement/EmptyIfStatement.java
A	core/src/main/java/com/google/errorprone/refactors/emptystatement/EmptyStatement.java
A	core/src/main/java/com/google/errorprone/refactors/fallthroughsuppression/FallThroughSuppression.java
D	core/src/main/java/com/google/errorprone/refactors/objects_equal_self_comparison/ObjectsEqualSelfComparison.java
A	core/src/main/java/com/google/errorprone/refactors/objectsequalselfcomparison/ObjectsEqualSelfComparison.java
A	core/src/main/java/com/google/errorprone/refactors/orderingfrom/OrderingFrom.java
A	core/src/main/java/com/google/errorprone/refactors/preconditionschecknotnull/PreconditionsCheckNotNull.java
A	core/src/main/java/com/google/errorprone/refactors/preconditionschecknotnullprimitive1starg/PreconditionsCheckNotNullPrimitive1stArg.java
A	core/src/main/java/com/google/errorprone/refactors/preconditionsexpensivestring/PreconditionsExpensiveString.java
M	core/src/test/java/com/google/errorprone/ErrorFindingCompilerIntegrationTest.java
D	core/src/test/resources/com/google/errorprone/refactors/dead_exception/NegativeCase1.java
D	core/src/test/resources/com/google/errorprone/refactors/dead_exception/PositiveCase1.java
A	core/src/test/resources/com/google/errorprone/refactors/deadexception/NegativeCase1.java
A	core/src/test/resources/com/google/errorprone/refactors/deadexception/PositiveCase1.java
D	core/src/test/resources/com/google/errorprone/refactors/empty_if_statement/NegativeCases.java
D	core/src/test/resources/com/google/errorprone/refactors/empty_if_statement/PositiveCases.java
D	core/src/test/resources/com/google/errorprone/refactors/empty_statement/NegativeCases.java
D	core/src/test/resources/com/google/errorprone/refactors/empty_statement/PositiveCases.java
A	core/src/test/resources/com/google/errorprone/refactors/emptyifstatement/NegativeCases.java
A	core/src/test/resources/com/google/errorprone/refactors/emptyifstatement/PositiveCases.java
A	core/src/test/resources/com/google/errorprone/refactors/emptystatement/NegativeCases.java
A	core/src/test/resources/com/google/errorprone/refactors/emptystatement/PositiveCases.java
A	core/src/test/resources/com/google/errorprone/refactors/fallthroughsuppression/NegativeCases.java
A	core/src/test/resources/com/google/errorprone/refactors/fallthroughsuppression/PositiveCases.java
A	core/src/test/resources/com/google/errorprone/refactors/fallthroughsuppression/ToBeExtended.java
D	core/src/test/resources/com/google/errorprone/refactors/objects_equal_self_comparison/NegativeCases.java
D	core/src/test/resources/com/google/errorprone/refactors/objects_equal_self_comparison/PositiveCases.java
A	core/src/test/resources/com/google/errorprone/refactors/objectsequalselfcomparison/NegativeCases.java
A	core/src/test/resources/com/google/errorprone/refactors/objectsequalselfcomparison/PositiveCases.java
D	core/src/test/resources/com/google/errorprone/refactors/ordering_from/NegativeCases.java
D	core/src/test/resources/com/google/errorprone/refactors/ordering_from/PositiveCases.java
A	core/src/test/resources/com/google/errorprone/refactors/orderingfrom/NegativeCases.java
A	core/src/test/resources/com/google/errorprone/refactors/orderingfrom/PositiveCases.java
D	core/src/test/resources/com/google/errorprone/refactors/preconditions_checkNotNull/NegativeCase1.java
D	core/src/test/resources/com/google/errorprone/refactors/preconditions_checkNotNull/PositiveCase1.java
D	core/src/test/resources/com/google/errorprone/refactors/preconditions_checkNotNull/PositiveCase2.java
D	core/src/test/resources/com/google/errorprone/refactors/preconditions_checkNotNull_first_arg_boolean/PositiveCase1.java
D	core/src/test/resources/com/google/errorprone/refactors/preconditions_expensive_string/NegativeCase1.java
D	core/src/test/resources/com/google/errorprone/refactors/preconditions_expensive_string/NegativeCase2.java
D	core/src/test/resources/com/google/errorprone/refactors/preconditions_expensive_string/PositiveCase1.java
A	core/src/test/resources/com/google/errorprone/refactors/preconditionschecknotnull/NegativeCase1.java
A	core/src/test/resources/com/google/errorprone/refactors/preconditionschecknotnull/PositiveCase1.java
A	core/src/test/resources/com/google/errorprone/refactors/preconditionschecknotnull/PositiveCase2.java
A	core/src/test/resources/com/google/errorprone/refactors/preconditionschecknotnullprimitive1starg/PositiveCase1.java
A	core/src/test/resources/com/google/errorprone/refactors/preconditionsexpensivestring/NegativeCase1.java
A	core/src/test/resources/com/google/errorprone/refactors/preconditionsexpensivestring/NegativeCase2.java
A	core/src/test/resources/com/google/errorprone/refactors/preconditionsexpensivestring/PositiveCase1.java
D	core/src/test/resources/com/google/errorprone/refactors/remove_fallthrough_suppression/NegativeCases.java
D	core/src/test/resources/com/google/errorprone/refactors/remove_fallthrough_suppression/PositiveCases.java
D	core/src/test/resources/com/google/errorprone/refactors/remove_fallthrough_suppression/ToBeExtended.java
M	docgen/src/main/java/com/google/errorprone/DocGen.java

commit ab2b8504bcd15538c898758761cf37a981e0107f
Author: Alex Eagle <alexeagle@google.com>
Date:   Wed Jan 4 11:19:59 2012 -0800

    Fix copyrights

M	annotation/src/main/java/com/google/errorprone/BugPattern.java
M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorReportingJavaCompiler.java
M	core/src/main/java/com/google/errorprone/JavacErrorRefactorListener.java
M	core/src/main/java/com/google/errorprone/MatchListener.java
M	core/src/main/java/com/google/errorprone/Scanner.java
M	core/src/main/java/com/google/errorprone/SearchResultsPrinter.java
M	core/src/main/java/com/google/errorprone/SearchingJavaCompiler.java
M	core/src/main/java/com/google/errorprone/VisitorState.java
M	core/src/main/java/com/google/errorprone/matchers/MethodInvocationArgument.java
M	core/src/main/java/com/google/errorprone/matchers/NewInstanceAnonymousInnerClass.java
M	core/src/main/java/com/google/errorprone/matchers/StringLiteral.java
M	core/src/main/java/com/google/errorprone/refactors/EmptyIfStatement.java
M	core/src/main/java/com/google/errorprone/refactors/EmptyStatement.java
M	core/src/main/java/com/google/errorprone/refactors/OrderingFrom.java
M	core/src/main/java/com/google/errorprone/refactors/objects_equal_self_comparison/ObjectsEqualSelfComparison.java
M	core/src/main/resources/com/google/errorprone/errors.properties
M	docgen/src/main/java/com/google/errorprone/DocGen.java

commit a86405d02140df1a0ba1c148c40c4aaaf0067bbe
Merge: 5357a58 8a1a22a
Author: Alex Eagle <alexeagle@google.com>
Date:   Wed Jan 4 11:05:53 2012 -0800

    Merge branch 'master' of https://code.google.com/p/error-prone

commit 5357a5887c14b9975ba93cf52247dfc36e3dfd5c
Author: Alex Eagle <alexeagle@google.com>
Date:   Wed Jan 4 11:03:32 2012 -0800

    Add some IDEA metadata files which are globally useful

A	.gitignore
A	.idea/.name
A	.idea/copyright/Google.xml
A	.idea/copyright/profiles_settings.xml
A	.idea/projectCodeStyle.xml
A	.idea/vcs.xml

commit 8a1a22a456ac72395a56cb0ac0cd94e55e218103
Merge: 846a551 32bf06e
Author: Alex Eagle <alexeagle@google.com>
Date:   Wed Jan 4 10:56:10 2012 -0800

    Merge branch 'master' of https://code.google.com/p/error-prone
    
    Conflicts:
    	core/src/main/java/com/google/errorprone/refactors/EmptyIfStatement.java
    	core/src/main/java/com/google/errorprone/refactors/EmptyStatement.java
    	core/src/main/java/com/google/errorprone/refactors/FallThroughSuppression.java
    	core/src/main/java/com/google/errorprone/refactors/OrderingFrom.java
    	core/src/main/java/com/google/errorprone/refactors/PreconditionsCheckNotNull.java
    	core/src/main/java/com/google/errorprone/refactors/PreconditionsCheckNotNullPrimitive1stArg.java
    	core/src/main/java/com/google/errorprone/refactors/PreconditionsExpensiveString.java
    	core/src/main/java/com/google/errorprone/refactors/dead_exception/DeadException.java
    	core/src/main/java/com/google/errorprone/refactors/objects_equal_self_comparison/ObjectsEqualSelfComparison.java

commit 846a55129dab110e2b850672ca78cdb51f2c3408
Author: Alex Eagle <alexeagle@google.com>
Date:   Tue Jan 3 18:28:45 2012 -0800

    Only need one kind of scanner, regardless of whether refactoring is enabled.

M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/ErrorReportingJavaCompiler.java
D	core/src/main/java/com/google/errorprone/RefactoringScanner.java
A	core/src/main/java/com/google/errorprone/Scanner.java
M	core/src/main/java/com/google/errorprone/SearchingJavaCompiler.java
D	core/src/main/java/com/google/errorprone/SearchingScanner.java
M	core/src/main/java/com/google/errorprone/refactors/EmptyIfStatement.java
M	core/src/main/java/com/google/errorprone/refactors/EmptyStatement.java
M	core/src/main/java/com/google/errorprone/refactors/FallThroughSuppression.java
M	core/src/main/java/com/google/errorprone/refactors/OrderingFrom.java
M	core/src/main/java/com/google/errorprone/refactors/PreconditionsCheckNotNull.java
M	core/src/main/java/com/google/errorprone/refactors/PreconditionsCheckNotNullPrimitive1stArg.java
M	core/src/main/java/com/google/errorprone/refactors/PreconditionsExpensiveString.java
M	core/src/main/java/com/google/errorprone/refactors/RefactoringMatcher.java
M	core/src/main/java/com/google/errorprone/refactors/dead_exception/DeadException.java
M	core/src/main/java/com/google/errorprone/refactors/objects_equal_self_comparison/ObjectsEqualSelfComparison.java
M	core/src/test/java/com/google/errorprone/matchers/StaticMethodTest.java

commit a44f90289983f5fd32fb546d1df9e47ef4638013
Author: Alex Eagle <alexeagle@google.com>
Date:   Tue Jan 3 18:01:24 2012 -0800

    Don't pass nulls for the unused kind of reporter.

M	core/src/main/java/com/google/errorprone/ErrorReportingJavaCompiler.java
M	core/src/main/java/com/google/errorprone/SearchingJavaCompiler.java
M	core/src/main/java/com/google/errorprone/VisitorState.java

commit 96eb0a3c7627c9a0cd2adcc905541a424e50b213
Author: Alex Eagle <alexeagle@google.com>
Date:   Tue Jan 3 17:54:22 2012 -0800

    Re-introduce a subclass of TreeScanner for matchers to implement. This lets us merge the RefactoringVisitorState and SearchingVisitorState back into one VisitorState, though it now has a dependency on both kinds of listener.

M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/ErrorReportingJavaCompiler.java
A	core/src/main/java/com/google/errorprone/JavacErrorRefactorListener.java
D	core/src/main/java/com/google/errorprone/JavacErrorReporter.java
D	core/src/main/java/com/google/errorprone/Refactor.java
A	core/src/main/java/com/google/errorprone/RefactorListener.java
A	core/src/main/java/com/google/errorprone/RefactoringScanner.java
D	core/src/main/java/com/google/errorprone/RefactoringVisitorState.java
D	core/src/main/java/com/google/errorprone/Reporter.java
M	core/src/main/java/com/google/errorprone/SearchingJavaCompiler.java
A	core/src/main/java/com/google/errorprone/SearchingScanner.java
D	core/src/main/java/com/google/errorprone/SearchingVisitorState.java
M	core/src/main/java/com/google/errorprone/VisitorState.java
M	core/src/main/java/com/google/errorprone/refactors/EmptyIfStatement.java
M	core/src/main/java/com/google/errorprone/refactors/EmptyStatement.java
M	core/src/main/java/com/google/errorprone/refactors/FallThroughSuppression.java
M	core/src/main/java/com/google/errorprone/refactors/OrderingFrom.java
M	core/src/main/java/com/google/errorprone/refactors/PreconditionsCheckNotNull.java
M	core/src/main/java/com/google/errorprone/refactors/PreconditionsCheckNotNullPrimitive1stArg.java
M	core/src/main/java/com/google/errorprone/refactors/PreconditionsExpensiveString.java
M	core/src/main/java/com/google/errorprone/refactors/RefactoringMatcher.java
M	core/src/main/java/com/google/errorprone/refactors/dead_exception/DeadException.java
M	core/src/main/java/com/google/errorprone/refactors/objects_equal_self_comparison/ObjectsEqualSelfComparison.java
M	core/src/test/java/com/google/errorprone/matchers/StaticMethodTest.java

commit 32bf06e47ba240ffb25239262e049b627ce4bc5c
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Jan 3 16:49:17 2012 -0800

    Added @BugPattern description for ObjectsEqualsSelfComparison

M	core/src/main/java/com/google/errorprone/refactors/PreconditionsCheckNotNull.java
M	core/src/main/java/com/google/errorprone/refactors/PreconditionsCheckNotNullPrimitive1stArg.java
M	core/src/main/java/com/google/errorprone/refactors/objects_equal_self_comparison/ObjectsEqualSelfComparison.java

commit 4115f72939ac3d244499d18a5da6ea4951f7409f
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Jan 3 15:03:51 2012 -0800

    Refined description of PreconditionsExpensiveString

M	core/src/main/java/com/google/errorprone/refactors/PreconditionsExpensiveString.java

commit 526ea16785270074f088860fcf8446779aa54a8b
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Jan 3 15:00:09 2012 -0800

    Added @BugPattern descriptions for all matchers/refactors

M	annotation/src/main/java/com/google/errorprone/BugPattern.java
M	core/src/main/java/com/google/errorprone/refactors/EmptyIfStatement.java
M	core/src/main/java/com/google/errorprone/refactors/EmptyStatement.java
M	core/src/main/java/com/google/errorprone/refactors/FallThroughSuppression.java
M	core/src/main/java/com/google/errorprone/refactors/OrderingFrom.java
M	core/src/main/java/com/google/errorprone/refactors/PreconditionsCheckNotNull.java
M	core/src/main/java/com/google/errorprone/refactors/PreconditionsCheckNotNullPrimitive1stArg.java
M	core/src/main/java/com/google/errorprone/refactors/PreconditionsExpensiveString.java
M	core/src/main/java/com/google/errorprone/refactors/dead_exception/DeadException.java
M	docgen/src/main/java/com/google/errorprone/DocGen.java

commit 03321ca14e7e54ecd1c7b96d623b28c9ee655c4d
Author: Alex Eagle <alexeagle@google.com>
Date:   Tue Jan 3 14:25:20 2012 -0800

    We've already released a v0.3, so we're currently on the snapshot of v0.4.
    Update the POM with version control info as well, so we can use the maven
    release plugin.

M	annotation/pom.xml
M	core/pom.xml
M	core/src/main/java/com/google/errorprone/refactors/EmptyIfStatement.java
M	docgen/pom.xml
M	pom.xml

commit 916414d2fbe40f24c01cd1963bd79bc97bed601e
Author: Alex Eagle <alexeagle@google.com>
Date:   Tue Jan 3 10:56:01 2012 -0800

    Improve naming consistency. Remove "checker" from our vocabulary.

M	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/JavacErrorReporter.java
M	core/src/main/java/com/google/errorprone/Refactor.java
M	core/src/main/java/com/google/errorprone/Reporter.java
D	core/src/main/java/com/google/errorprone/checkers/EmptyIfChecker.java
D	core/src/main/java/com/google/errorprone/checkers/EmptyStatementChecker.java
D	core/src/main/java/com/google/errorprone/checkers/FallThroughSuppressionChecker.java
D	core/src/main/java/com/google/errorprone/checkers/OrderingFromChecker.java
D	core/src/main/java/com/google/errorprone/checkers/PreconditionsCheckNotNullChecker.java
D	core/src/main/java/com/google/errorprone/checkers/PreconditionsCheckNotNullPrimitive1stArgChecker.java
D	core/src/main/java/com/google/errorprone/checkers/PreconditionsExpensiveStringChecker.java
D	core/src/main/java/com/google/errorprone/checkers/RefactoringMatcher.java
D	core/src/main/java/com/google/errorprone/checkers/dead_exception/Checker.class
D	core/src/main/java/com/google/errorprone/checkers/dead_exception/DeadExceptionChecker.java
D	core/src/main/java/com/google/errorprone/checkers/objects_equal_self_comparison/ObjectsEqualSelfComparisonChecker.java
A	core/src/main/java/com/google/errorprone/matchers/AnnotationType.java
D	core/src/main/java/com/google/errorprone/matchers/AnnotationTypeMatcher.java
A	core/src/main/java/com/google/errorprone/matchers/ExpressionMethodSelect.java
D	core/src/main/java/com/google/errorprone/matchers/ExpressionMethodSelectMatcher.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
A	core/src/main/java/com/google/errorprone/matchers/MethodInvocationArgument.java
D	core/src/main/java/com/google/errorprone/matchers/MethodInvocationArgumentMatcher.java
A	core/src/main/java/com/google/errorprone/matchers/MethodInvocationMethodSelect.java
D	core/src/main/java/com/google/errorprone/matchers/MethodInvocationMethodSelectMatcher.java
A	core/src/main/java/com/google/errorprone/matchers/NewInstanceAnonymousInnerClass.java
D	core/src/main/java/com/google/errorprone/matchers/NewInstanceAnonymousInnerClassMatcher.java
A	core/src/main/java/com/google/errorprone/matchers/StaticMethod.java
D	core/src/main/java/com/google/errorprone/matchers/StaticMethodMatcher.java
A	core/src/main/java/com/google/errorprone/matchers/StringLiteral.java
D	core/src/main/java/com/google/errorprone/matchers/StringLiteralMatcher.java
A	core/src/main/java/com/google/errorprone/refactors/EmptyIfStatement.java
A	core/src/main/java/com/google/errorprone/refactors/EmptyStatement.java
A	core/src/main/java/com/google/errorprone/refactors/FallThroughSuppression.java
A	core/src/main/java/com/google/errorprone/refactors/OrderingFrom.java
A	core/src/main/java/com/google/errorprone/refactors/PreconditionsCheckNotNull.java
A	core/src/main/java/com/google/errorprone/refactors/PreconditionsCheckNotNullPrimitive1stArg.java
A	core/src/main/java/com/google/errorprone/refactors/PreconditionsExpensiveString.java
A	core/src/main/java/com/google/errorprone/refactors/RefactoringMatcher.java
A	core/src/main/java/com/google/errorprone/refactors/dead_exception/DeadException.java
A	core/src/main/java/com/google/errorprone/refactors/objects_equal_self_comparison/ObjectsEqualSelfComparison.java
M	core/src/test/java/com/google/errorprone/ErrorFindingCompilerIntegrationTest.java
D	core/src/test/java/com/google/errorprone/matchers/StaticMethodMatcherTest.java
A	core/src/test/java/com/google/errorprone/matchers/StaticMethodTest.java
D	core/src/test/resources/com/google/errorprone/checkers/dead_exception/NegativeCase1.java
D	core/src/test/resources/com/google/errorprone/checkers/dead_exception/PositiveCase1.java
D	core/src/test/resources/com/google/errorprone/checkers/empty_if_statement/NegativeCases.java
D	core/src/test/resources/com/google/errorprone/checkers/empty_if_statement/PositiveCases.java
D	core/src/test/resources/com/google/errorprone/checkers/empty_statement/NegativeCases.java
D	core/src/test/resources/com/google/errorprone/checkers/empty_statement/PositiveCases.java
D	core/src/test/resources/com/google/errorprone/checkers/objects_equal_self_comparison/NegativeCases.java
D	core/src/test/resources/com/google/errorprone/checkers/objects_equal_self_comparison/PositiveCases.java
D	core/src/test/resources/com/google/errorprone/checkers/ordering_from/NegativeCases.java
D	core/src/test/resources/com/google/errorprone/checkers/ordering_from/PositiveCases.java
D	core/src/test/resources/com/google/errorprone/checkers/preconditions_checkNotNull/NegativeCase1.java
D	core/src/test/resources/com/google/errorprone/checkers/preconditions_checkNotNull/PositiveCase1.java
D	core/src/test/resources/com/google/errorprone/checkers/preconditions_checkNotNull/PositiveCase2.java
D	core/src/test/resources/com/google/errorprone/checkers/preconditions_checkNotNull_first_arg_boolean/PositiveCase1.java
D	core/src/test/resources/com/google/errorprone/checkers/preconditions_expensive_string/NegativeCase1.java
D	core/src/test/resources/com/google/errorprone/checkers/preconditions_expensive_string/NegativeCase2.java
D	core/src/test/resources/com/google/errorprone/checkers/preconditions_expensive_string/PositiveCase1.java
D	core/src/test/resources/com/google/errorprone/checkers/remove_fallthrough_suppression/NegativeCases.java
D	core/src/test/resources/com/google/errorprone/checkers/remove_fallthrough_suppression/PositiveCases.java
D	core/src/test/resources/com/google/errorprone/checkers/remove_fallthrough_suppression/ToBeExtended.java
A	core/src/test/resources/com/google/errorprone/refactors/dead_exception/NegativeCase1.java
A	core/src/test/resources/com/google/errorprone/refactors/dead_exception/PositiveCase1.java
A	core/src/test/resources/com/google/errorprone/refactors/empty_if_statement/NegativeCases.java
A	core/src/test/resources/com/google/errorprone/refactors/empty_if_statement/PositiveCases.java
A	core/src/test/resources/com/google/errorprone/refactors/empty_statement/NegativeCases.java
A	core/src/test/resources/com/google/errorprone/refactors/empty_statement/PositiveCases.java
A	core/src/test/resources/com/google/errorprone/refactors/objects_equal_self_comparison/NegativeCases.java
A	core/src/test/resources/com/google/errorprone/refactors/objects_equal_self_comparison/PositiveCases.java
A	core/src/test/resources/com/google/errorprone/refactors/ordering_from/NegativeCases.java
A	core/src/test/resources/com/google/errorprone/refactors/ordering_from/PositiveCases.java
A	core/src/test/resources/com/google/errorprone/refactors/preconditions_checkNotNull/NegativeCase1.java
A	core/src/test/resources/com/google/errorprone/refactors/preconditions_checkNotNull/PositiveCase1.java
A	core/src/test/resources/com/google/errorprone/refactors/preconditions_checkNotNull/PositiveCase2.java
A	core/src/test/resources/com/google/errorprone/refactors/preconditions_checkNotNull_first_arg_boolean/PositiveCase1.java
A	core/src/test/resources/com/google/errorprone/refactors/preconditions_expensive_string/NegativeCase1.java
A	core/src/test/resources/com/google/errorprone/refactors/preconditions_expensive_string/NegativeCase2.java
A	core/src/test/resources/com/google/errorprone/refactors/preconditions_expensive_string/PositiveCase1.java
A	core/src/test/resources/com/google/errorprone/refactors/remove_fallthrough_suppression/NegativeCases.java
A	core/src/test/resources/com/google/errorprone/refactors/remove_fallthrough_suppression/PositiveCases.java
A	core/src/test/resources/com/google/errorprone/refactors/remove_fallthrough_suppression/ToBeExtended.java

commit 310d448347df5a50c4bfe519d26bf90d6eb63107
Author: Alex Eagle <alexeagle@google.com>
Date:   Thu Dec 29 17:13:39 2011 -0800

    Finish support for searching for matches.

D	core/src/main/java/com/google/errorprone/ErrorFindingCompiler.java
A	core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
A	core/src/main/java/com/google/errorprone/ErrorReportingJavaCompiler.java
A	core/src/main/java/com/google/errorprone/MatchListener.java
A	core/src/main/java/com/google/errorprone/Refactor.java
A	core/src/main/java/com/google/errorprone/RefactoringVisitorState.java
A	core/src/main/java/com/google/errorprone/SearchResultsPrinter.java
A	core/src/main/java/com/google/errorprone/SearchingJavaCompiler.java
A	core/src/main/java/com/google/errorprone/SearchingVisitorState.java
M	core/src/main/java/com/google/errorprone/VisitorState.java
M	core/src/main/java/com/google/errorprone/checkers/EmptyIfChecker.java
M	core/src/main/java/com/google/errorprone/checkers/EmptyStatementChecker.java
M	core/src/main/java/com/google/errorprone/checkers/FallThroughSuppressionChecker.java
M	core/src/main/java/com/google/errorprone/checkers/OrderingFromChecker.java
M	core/src/main/java/com/google/errorprone/checkers/PreconditionsCheckNotNullChecker.java
M	core/src/main/java/com/google/errorprone/checkers/PreconditionsCheckNotNullPrimitive1stArgChecker.java
M	core/src/main/java/com/google/errorprone/checkers/PreconditionsExpensiveStringChecker.java
M	core/src/main/java/com/google/errorprone/checkers/RefactoringMatcher.java
M	core/src/main/java/com/google/errorprone/checkers/dead_exception/DeadExceptionChecker.java
M	core/src/main/java/com/google/errorprone/checkers/objects_equal_self_comparison/ObjectsEqualSelfComparisonChecker.java
M	core/src/main/java/com/google/errorprone/matchers/EnclosingBlock.java
M	core/src/main/java/com/google/errorprone/matchers/IsSubtypeOf.java
M	core/src/main/java/com/google/errorprone/matchers/LastStatement.java
M	core/src/main/java/com/google/errorprone/matchers/Matcher.java
M	core/src/main/java/com/google/errorprone/matchers/Matchers.java
M	core/src/main/java/com/google/errorprone/matchers/MethodInvocationArgumentMatcher.java
M	core/src/main/java/com/google/errorprone/matchers/MethodInvocationMethodSelectMatcher.java
M	core/src/main/java/com/google/errorprone/matchers/ParentNode.java
M	core/src/main/java/com/google/errorprone/matchers/Same.java
M	core/src/main/java/com/google/errorprone/matchers/StaticMethodMatcher.java
M	core/src/main/resources/com/google/errorprone/errors.properties
M	core/src/test/java/com/google/errorprone/ErrorFindingCompilerIntegrationTest.java
M	core/src/test/java/com/google/errorprone/matchers/StaticMethodMatcherTest.java

commit e983a9df3aa42b044a7872235df19e147ce19120
Author: Alex Eagle <alexeagle@google.com>
Date:   Thu Dec 29 15:51:09 2011 -0800

    Remove middleman class ErrorCollectingTreeScanner

D	core/src/main/java/com/google/errorprone/ErrorCollectingTreeScanner.java
M	core/src/main/java/com/google/errorprone/ErrorFindingCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/VisitorState.java
M	core/src/main/java/com/google/errorprone/checkers/EmptyIfChecker.java
M	core/src/main/java/com/google/errorprone/checkers/FallThroughSuppressionChecker.java
M	core/src/main/java/com/google/errorprone/checkers/objects_equal_self_comparison/ObjectsEqualSelfComparisonChecker.java
M	core/src/test/java/com/google/errorprone/matchers/StaticMethodMatcherTest.java

commit 907c6f4984df12d2335f60f1eb9985b7b87a69a3
Author: Alex Eagle <alexeagle@google.com>
Date:   Thu Dec 29 15:42:55 2011 -0800

    Rename the match+suggested fix to "Refactor"

M	core/src/main/java/com/google/errorprone/ErrorFindingCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
A	core/src/main/java/com/google/errorprone/JavacErrorReporter.java
D	core/src/main/java/com/google/errorprone/LogReporter.java
M	core/src/main/java/com/google/errorprone/Reporter.java
M	core/src/main/java/com/google/errorprone/VisitorState.java
D	core/src/main/java/com/google/errorprone/checkers/DescribingMatcher.java
M	core/src/main/java/com/google/errorprone/checkers/EmptyIfChecker.java
M	core/src/main/java/com/google/errorprone/checkers/EmptyStatementChecker.java
M	core/src/main/java/com/google/errorprone/checkers/FallThroughSuppressionChecker.java
M	core/src/main/java/com/google/errorprone/checkers/OrderingFromChecker.java
M	core/src/main/java/com/google/errorprone/checkers/PreconditionsCheckNotNullChecker.java
M	core/src/main/java/com/google/errorprone/checkers/PreconditionsCheckNotNullPrimitive1stArgChecker.java
M	core/src/main/java/com/google/errorprone/checkers/PreconditionsExpensiveStringChecker.java
A	core/src/main/java/com/google/errorprone/checkers/RefactoringMatcher.java
M	core/src/main/java/com/google/errorprone/checkers/dead_exception/DeadExceptionChecker.java
M	core/src/main/java/com/google/errorprone/checkers/objects_equal_self_comparison/ObjectsEqualSelfComparisonChecker.java

commit 73ccc236fa8e6b0cd7c9a273831026a26fa4c4e1
Author: Alex Eagle <alexeagle@google.com>
Date:   Thu Dec 29 15:27:35 2011 -0800

    Instead of returning a list of matches from each visit, report them to the reporter directly.

M	core/src/main/java/com/google/errorprone/ErrorCollectingTreeScanner.java
M	core/src/main/java/com/google/errorprone/ErrorFindingCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
D	core/src/main/java/com/google/errorprone/ErrorReporter.java
M	core/src/main/java/com/google/errorprone/LogReporter.java
A	core/src/main/java/com/google/errorprone/Reporter.java
M	core/src/main/java/com/google/errorprone/VisitorState.java
M	core/src/main/java/com/google/errorprone/checkers/EmptyIfChecker.java
M	core/src/main/java/com/google/errorprone/checkers/FallThroughSuppressionChecker.java
M	core/src/main/java/com/google/errorprone/checkers/objects_equal_self_comparison/ObjectsEqualSelfComparisonChecker.java
M	core/src/test/java/com/google/errorprone/matchers/StaticMethodMatcherTest.java

commit 18a088f557b926db9df7b55224afea47130321a4
Author: Alex Eagle <alexeagle@google.com>
Date:   Thu Dec 29 15:13:05 2011 -0800

    Don't try to suggest fixes if we have no endPositions table.

M	core/src/main/java/com/google/errorprone/LogReporter.java
M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java

commit d6494a8eadecc6b2e70c7976fb5256c42669cbe7
Author: Alex Eagle <alexeagle@google.com>
Date:   Thu Dec 29 15:05:32 2011 -0800

    Major refactoring so that we can do a search using just a matcher, without needing to produce a suggested fix or error text.

M	core/pom.xml
M	core/src/main/java/com/google/errorprone/ErrorCollectingTreeScanner.java
M	core/src/main/java/com/google/errorprone/ErrorFindingCompiler.java
M	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
M	core/src/main/java/com/google/errorprone/ErrorReporter.java
M	core/src/main/java/com/google/errorprone/LogReporter.java
A	core/src/main/java/com/google/errorprone/checkers/DescribingMatcher.java
M	core/src/main/java/com/google/errorprone/checkers/EmptyIfChecker.java
M	core/src/main/java/com/google/errorprone/checkers/EmptyStatementChecker.java
D	core/src/main/java/com/google/errorprone/checkers/ErrorChecker.java
M	core/src/main/java/com/google/errorprone/checkers/FallThroughSuppressionChecker.java
M	core/src/main/java/com/google/errorprone/checkers/OrderingFromChecker.java
M	core/src/main/java/com/google/errorprone/checkers/PreconditionsCheckNotNullChecker.java
M	core/src/main/java/com/google/errorprone/checkers/PreconditionsCheckNotNullPrimitive1stArgChecker.java
M	core/src/main/java/com/google/errorprone/checkers/PreconditionsExpensiveStringChecker.java
M	core/src/main/java/com/google/errorprone/checkers/dead_exception/DeadExceptionChecker.java
M	core/src/main/java/com/google/errorprone/checkers/objects_equal_self_comparison/ObjectsEqualSelfComparisonChecker.java
M	core/src/main/java/com/google/errorprone/fixes/AppliedFix.java
M	core/src/main/java/com/google/errorprone/fixes/Replacement.java
M	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java
M	core/src/test/java/com/google/errorprone/ErrorFindingCompilerIntegrationTest.java
M	core/src/test/java/com/google/errorprone/fixes/AppliedFixTest.java
M	core/src/test/java/com/google/errorprone/matchers/StaticMethodMatcherTest.java
M	core/src/test/resources/com/google/errorprone/checkers/preconditions_expensive_string/NegativeCase1.java
M	core/src/test/resources/com/google/errorprone/checkers/preconditions_expensive_string/NegativeCase2.java
M	core/src/test/resources/com/google/errorprone/checkers/preconditions_expensive_string/PositiveCase1.java

commit 35e3ff3226a1196c0ee0df3b3c4a27f519136ba8
Author: Alex Eagle <alexeagle@google.com>
Date:   Thu Dec 29 10:42:41 2011 -0800

    Add <name> element to the POM's for nicer display in the maven output.

M	annotation/pom.xml
M	core/pom.xml
M	docgen/pom.xml
M	pom.xml

commit d82275e82bac91f28c36330a152a2f074f5b58d6
Author: Alex Eagle <alexeagle@google.com>
Date:   Thu Dec 29 10:09:37 2011 -0800

    Merge my changes following the maven project modularization

D	annotation/.classpath
D	annotation/.project
A	core/src/main/java/com/google/errorprone/checkers/objects_equal_self_comparison/ObjectsEqualSelfComparisonChecker.java
A	core/src/test/resources/com/google/errorprone/checkers/objects_equal_self_comparison/NegativeCases.java
A	core/src/test/resources/com/google/errorprone/checkers/objects_equal_self_comparison/PositiveCases.java
D	src/main/java/com/google/errorprone/checkers/objects_equal_self_comparison/ObjectsEqualSelfComparisonChecker.java
D	src/test/resources/objects_equal_self_comparison/NegativeCases.java
D	src/test/resources/objects_equal_self_comparison/PositiveCases.java

commit 2a0b50ec65fbfc8a7a466e2fb937356c7f1e3b9a
Merge: b124e76 21d1cfe
Author: Alex Eagle <alexeagle@google.com>
Date:   Thu Dec 29 10:02:32 2011 -0800

    Merge branch 'master' of https://code.google.com/p/error-prone

commit b124e76dfb318ecb188668475bfb261b08164b25
Author: Alex Eagle <alexeagle@google.com>
Date:   Thu Dec 29 10:02:28 2011 -0800

    Improve the ObjectsEqualSelfComparisonChecker fix, by trying to find a local variable declaration which has the needed field.

M	src/main/java/com/google/errorprone/VisitorState.java
M	src/main/java/com/google/errorprone/checkers/objects_equal_self_comparison/ObjectsEqualSelfComparisonChecker.java
M	src/main/java/com/google/errorprone/matchers/Matchers.java
M	src/test/resources/objects_equal_self_comparison/PositiveCases.java

commit 21d1cfe45d6e8a5f876e6189cfd9f52b8ccfbf90
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Dec 28 17:48:17 2011 -0800

    Generate wiki as part of package process, put in a Maven target directory

M	annotation/pom.xml
M	annotation/src/main/java/com/google/errorprone/BugPattern.java
A	core/pom.xml
A	core/src/main/java/com/google/errorprone/ErrorCollectingTreeScanner.java
A	core/src/main/java/com/google/errorprone/ErrorFindingCompiler.java
A	core/src/main/java/com/google/errorprone/ErrorProneScanner.java
A	core/src/main/java/com/google/errorprone/ErrorReporter.java
A	core/src/main/java/com/google/errorprone/LogReporter.java
A	core/src/main/java/com/google/errorprone/VisitorState.java
A	core/src/main/java/com/google/errorprone/checkers/EmptyIfChecker.java
A	core/src/main/java/com/google/errorprone/checkers/EmptyStatementChecker.java
A	core/src/main/java/com/google/errorprone/checkers/ErrorChecker.java
A	core/src/main/java/com/google/errorprone/checkers/FallThroughSuppressionChecker.java
A	core/src/main/java/com/google/errorprone/checkers/OrderingFromChecker.java
A	core/src/main/java/com/google/errorprone/checkers/PreconditionsCheckNotNullChecker.java
A	core/src/main/java/com/google/errorprone/checkers/PreconditionsCheckNotNullPrimitive1stArgChecker.java
A	core/src/main/java/com/google/errorprone/checkers/PreconditionsExpensiveStringChecker.java
A	core/src/main/java/com/google/errorprone/checkers/dead_exception/Checker.class
A	core/src/main/java/com/google/errorprone/checkers/dead_exception/DeadExceptionChecker.java
A	core/src/main/java/com/google/errorprone/fixes/AppliedFix.java
A	core/src/main/java/com/google/errorprone/fixes/Replacement.java
A	core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java
A	core/src/main/java/com/google/errorprone/matchers/AnnotationHasElementWithValue.java
A	core/src/main/java/com/google/errorprone/matchers/AnnotationTypeMatcher.java
A	core/src/main/java/com/google/errorprone/matchers/EnclosingBlock.java
A	core/src/main/java/com/google/errorprone/matchers/ExpressionMethodSelectMatcher.java
A	core/src/main/java/com/google/errorprone/matchers/IsSubtypeOf.java
A	core/src/main/java/com/google/errorprone/matchers/LastStatement.java
A	core/src/main/java/com/google/errorprone/matchers/Matcher.java
A	core/src/main/java/com/google/errorprone/matchers/Matchers.java
A	core/src/main/java/com/google/errorprone/matchers/MethodInvocationArgumentMatcher.java
A	core/src/main/java/com/google/errorprone/matchers/MethodInvocationMethodSelectMatcher.java
A	core/src/main/java/com/google/errorprone/matchers/NewInstanceAnonymousInnerClassMatcher.java
A	core/src/main/java/com/google/errorprone/matchers/NextStatement.java
A	core/src/main/java/com/google/errorprone/matchers/ParentNode.java
A	core/src/main/java/com/google/errorprone/matchers/Same.java
A	core/src/main/java/com/google/errorprone/matchers/StaticMethodMatcher.java
A	core/src/main/java/com/google/errorprone/matchers/StringLiteralMatcher.java
A	core/src/main/resources/com/google/errorprone/errors.properties
A	core/src/test/java/com/google/errorprone/ErrorFindingCompilerIntegrationTest.java
A	core/src/test/java/com/google/errorprone/fixes/AppliedFixTest.java
A	core/src/test/java/com/google/errorprone/matchers/StaticMethodMatcherTest.java
A	core/src/test/resources/com/google/errorprone/checkers/dead_exception/NegativeCase1.java
A	core/src/test/resources/com/google/errorprone/checkers/dead_exception/PositiveCase1.java
A	core/src/test/resources/com/google/errorprone/checkers/empty_if_statement/NegativeCases.java
A	core/src/test/resources/com/google/errorprone/checkers/empty_if_statement/PositiveCases.java
A	core/src/test/resources/com/google/errorprone/checkers/empty_statement/NegativeCases.java
A	core/src/test/resources/com/google/errorprone/checkers/empty_statement/PositiveCases.java
A	core/src/test/resources/com/google/errorprone/checkers/ordering_from/NegativeCases.java
A	core/src/test/resources/com/google/errorprone/checkers/ordering_from/PositiveCases.java
A	core/src/test/resources/com/google/errorprone/checkers/preconditions_checkNotNull/NegativeCase1.java
A	core/src/test/resources/com/google/errorprone/checkers/preconditions_checkNotNull/PositiveCase1.java
A	core/src/test/resources/com/google/errorprone/checkers/preconditions_checkNotNull/PositiveCase2.java
A	core/src/test/resources/com/google/errorprone/checkers/preconditions_checkNotNull_first_arg_boolean/PositiveCase1.java
A	core/src/test/resources/com/google/errorprone/checkers/preconditions_expensive_string/NegativeCase1.java
A	core/src/test/resources/com/google/errorprone/checkers/preconditions_expensive_string/NegativeCase2.java
A	core/src/test/resources/com/google/errorprone/checkers/preconditions_expensive_string/PositiveCase1.java
A	core/src/test/resources/com/google/errorprone/checkers/remove_fallthrough_suppression/NegativeCases.java
A	core/src/test/resources/com/google/errorprone/checkers/remove_fallthrough_suppression/PositiveCases.java
A	core/src/test/resources/com/google/errorprone/checkers/remove_fallthrough_suppression/ToBeExtended.java
M	docgen/pom.xml
M	docgen/src/main/java/com/google/errorprone/DocGen.java
M	pom.xml
D	src/main/java/com/google/errorprone/ErrorCollectingTreeScanner.java
D	src/main/java/com/google/errorprone/ErrorFindingCompiler.java
D	src/main/java/com/google/errorprone/ErrorProneScanner.java
D	src/main/java/com/google/errorprone/ErrorReporter.java
D	src/main/java/com/google/errorprone/LogReporter.java
D	src/main/java/com/google/errorprone/VisitorState.java
D	src/main/java/com/google/errorprone/checkers/EmptyIfChecker.java
D	src/main/java/com/google/errorprone/checkers/EmptyStatementChecker.java
D	src/main/java/com/google/errorprone/checkers/ErrorChecker.java
D	src/main/java/com/google/errorprone/checkers/FallThroughSuppressionChecker.java
D	src/main/java/com/google/errorprone/checkers/OrderingFromChecker.java
D	src/main/java/com/google/errorprone/checkers/PreconditionsCheckNotNullChecker.java
D	src/main/java/com/google/errorprone/checkers/PreconditionsCheckNotNullPrimitive1stArgChecker.java
D	src/main/java/com/google/errorprone/checkers/PreconditionsExpensiveStringChecker.java
D	src/main/java/com/google/errorprone/checkers/dead_exception/Checker.class
D	src/main/java/com/google/errorprone/checkers/dead_exception/DeadExceptionChecker.java
D	src/main/java/com/google/errorprone/fixes/AppliedFix.java
D	src/main/java/com/google/errorprone/fixes/Replacement.java
D	src/main/java/com/google/errorprone/fixes/SuggestedFix.java
D	src/main/java/com/google/errorprone/matchers/AnnotationHasElementWithValue.java
D	src/main/java/com/google/errorprone/matchers/AnnotationTypeMatcher.java
D	src/main/java/com/google/errorprone/matchers/EnclosingBlock.java
D	src/main/java/com/google/errorprone/matchers/ExpressionMethodSelectMatcher.java
D	src/main/java/com/google/errorprone/matchers/IsSubtypeOf.java
D	src/main/java/com/google/errorprone/matchers/LastStatement.java
D	src/main/java/com/google/errorprone/matchers/Matcher.java
D	src/main/java/com/google/errorprone/matchers/Matchers.java
D	src/main/java/com/google/errorprone/matchers/MethodInvocationArgumentMatcher.java
D	src/main/java/com/google/errorprone/matchers/MethodInvocationMethodSelectMatcher.java
D	src/main/java/com/google/errorprone/matchers/NewInstanceAnonymousInnerClassMatcher.java
D	src/main/java/com/google/errorprone/matchers/NextStatement.java
D	src/main/java/com/google/errorprone/matchers/ParentNode.java
D	src/main/java/com/google/errorprone/matchers/Same.java
D	src/main/java/com/google/errorprone/matchers/StaticMethodMatcher.java
D	src/main/java/com/google/errorprone/matchers/StringLiteralMatcher.java
D	src/main/resources/com/google/errorprone/errors.properties
D	src/test/java/com/google/errorprone/ErrorFindingCompilerIntegrationTest.java
D	src/test/java/com/google/errorprone/fixes/AppliedFixTest.java
D	src/test/java/com/google/errorprone/matchers/StaticMethodMatcherTest.java
D	src/test/resources/com/google/errorprone/checkers/dead_exception/NegativeCase1.java
D	src/test/resources/com/google/errorprone/checkers/dead_exception/PositiveCase1.java
D	src/test/resources/com/google/errorprone/checkers/empty_if_statement/NegativeCases.java
D	src/test/resources/com/google/errorprone/checkers/empty_if_statement/PositiveCases.java
D	src/test/resources/com/google/errorprone/checkers/empty_statement/NegativeCases.java
D	src/test/resources/com/google/errorprone/checkers/empty_statement/PositiveCases.java
D	src/test/resources/com/google/errorprone/checkers/ordering_from/NegativeCases.java
D	src/test/resources/com/google/errorprone/checkers/ordering_from/PositiveCases.java
D	src/test/resources/com/google/errorprone/checkers/preconditions_checkNotNull/NegativeCase1.java
D	src/test/resources/com/google/errorprone/checkers/preconditions_checkNotNull/PositiveCase1.java
D	src/test/resources/com/google/errorprone/checkers/preconditions_checkNotNull/PositiveCase2.java
D	src/test/resources/com/google/errorprone/checkers/preconditions_checkNotNull_first_arg_boolean/PositiveCase1.java
D	src/test/resources/com/google/errorprone/checkers/preconditions_expensive_string/NegativeCase1.java
D	src/test/resources/com/google/errorprone/checkers/preconditions_expensive_string/NegativeCase2.java
D	src/test/resources/com/google/errorprone/checkers/preconditions_expensive_string/PositiveCase1.java
D	src/test/resources/com/google/errorprone/checkers/remove_fallthrough_suppression/NegativeCases.java
D	src/test/resources/com/google/errorprone/checkers/remove_fallthrough_suppression/PositiveCases.java
D	src/test/resources/com/google/errorprone/checkers/remove_fallthrough_suppression/ToBeExtended.java

commit 819eff7cdbbfb8ee13092d0bd2411b537afd85b0
Merge: fa7190a 4adaa76
Author: Alex Eagle <alexeagle@google.com>
Date:   Wed Dec 28 15:33:10 2011 -0800

    Merge branch 'master' of https://code.google.com/p/error-prone

commit fa7190a644cb994d5407ad9fd6048e98df0b07f3
Author: Alex Eagle <alexeagle@google.com>
Date:   Wed Dec 28 15:18:39 2011 -0800

    Add a check for Objects.equal(a,a)

M	src/main/java/com/google/errorprone/ErrorFindingCompiler.java
M	src/main/java/com/google/errorprone/ErrorProneScanner.java
A	src/main/java/com/google/errorprone/checkers/objects_equal_self_comparison/ObjectsEqualSelfComparisonChecker.java
A	src/test/resources/objects_equal_self_comparison/NegativeCases.java
A	src/test/resources/objects_equal_self_comparison/PositiveCases.java

commit 4adaa76fb43af31a4e77e82c21dbb0f7a29aa5ee
Merge: 597a00a deb7d18
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Dec 28 15:14:36 2011 -0800

    Merge branch 'master' of https://code.google.com/p/error-prone

commit 597a00acce52709d0194a0a6bcdba4c869a052a6
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Dec 28 15:14:17 2011 -0800

    Separated annotation from annotation processor project, set compile to run annotation processor

A	annotation/.classpath
A	annotation/.project
A	annotation/pom.xml
A	annotation/src/main/java/com/google/errorprone/BugPattern.java
D	docgen/.classpath
D	docgen/.project
D	docgen/.settings/org.eclipse.jdt.core.prefs
D	docgen/.settings/org.eclipse.m2e.core.prefs
M	docgen/pom.xml
D	docgen/src/main/java/com/google/errorprone/BugPattern.java
M	docgen/src/main/java/com/google/errorprone/DocGen.java
D	docgen/target/classes/com/google/errorprone/BugPattern$Category.class
D	docgen/target/classes/com/google/errorprone/BugPattern$MaturityLevel.class
D	docgen/target/classes/com/google/errorprone/BugPattern$SeverityLevel.class
D	docgen/target/classes/com/google/errorprone/BugPattern.class
D	docgen/target/classes/com/google/errorprone/DocGen$1.class
D	docgen/target/classes/com/google/errorprone/DocGen.class
D	docgen/target/error_prone_docgen-0.3-SNAPSHOT-sources.jar
D	docgen/target/error_prone_docgen-0.3-SNAPSHOT.jar
D	docgen/target/maven-archiver/pom.properties
M	pom.xml
M	src/main/java/com/google/errorprone/checkers/dead_exception/DeadExceptionChecker.java

commit a7e5f657efbd7a60b56bf8be73816401e0022ac1
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Dec 28 13:54:37 2011 -0800

    Forgot to add some files

A	docgen/.classpath
A	docgen/.project
A	docgen/.settings/org.eclipse.jdt.core.prefs
A	docgen/.settings/org.eclipse.m2e.core.prefs
A	docgen/pom.xml
A	docgen/src/main/java/com/google/errorprone/BugPattern.java
A	docgen/src/main/java/com/google/errorprone/DocGen.java
A	docgen/target/classes/com/google/errorprone/BugPattern$Category.class
A	docgen/target/classes/com/google/errorprone/BugPattern$MaturityLevel.class
A	docgen/target/classes/com/google/errorprone/BugPattern$SeverityLevel.class
A	docgen/target/classes/com/google/errorprone/BugPattern.class
A	docgen/target/classes/com/google/errorprone/DocGen$1.class
A	docgen/target/classes/com/google/errorprone/DocGen.class
A	docgen/target/error_prone_docgen-0.3-SNAPSHOT-sources.jar
A	docgen/target/error_prone_docgen-0.3-SNAPSHOT.jar
A	docgen/target/maven-archiver/pom.properties
A	src/main/java/com/google/errorprone/checkers/dead_exception/Checker.class
A	src/main/java/com/google/errorprone/checkers/dead_exception/DeadExceptionChecker.java

commit 6a3d4e24627e014137b780a2457e702201acaffb
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Dec 28 13:52:54 2011 -0800

    Partway working wiki generation

M	pom.xml
M	src/main/java/com/google/errorprone/ErrorProneScanner.java
D	src/main/java/com/google/errorprone/checkers/DeadExceptionChecker.java
A	src/test/resources/com/google/errorprone/checkers/dead_exception/NegativeCase1.java
A	src/test/resources/com/google/errorprone/checkers/dead_exception/PositiveCase1.java
A	src/test/resources/com/google/errorprone/checkers/empty_if_statement/NegativeCases.java
A	src/test/resources/com/google/errorprone/checkers/empty_if_statement/PositiveCases.java
A	src/test/resources/com/google/errorprone/checkers/empty_statement/NegativeCases.java
A	src/test/resources/com/google/errorprone/checkers/empty_statement/PositiveCases.java
A	src/test/resources/com/google/errorprone/checkers/ordering_from/NegativeCases.java
A	src/test/resources/com/google/errorprone/checkers/ordering_from/PositiveCases.java
A	src/test/resources/com/google/errorprone/checkers/preconditions_checkNotNull/NegativeCase1.java
A	src/test/resources/com/google/errorprone/checkers/preconditions_checkNotNull/PositiveCase1.java
A	src/test/resources/com/google/errorprone/checkers/preconditions_checkNotNull/PositiveCase2.java
A	src/test/resources/com/google/errorprone/checkers/preconditions_checkNotNull_first_arg_boolean/PositiveCase1.java
A	src/test/resources/com/google/errorprone/checkers/preconditions_expensive_string/NegativeCase1.java
A	src/test/resources/com/google/errorprone/checkers/preconditions_expensive_string/NegativeCase2.java
A	src/test/resources/com/google/errorprone/checkers/preconditions_expensive_string/PositiveCase1.java
A	src/test/resources/com/google/errorprone/checkers/remove_fallthrough_suppression/NegativeCases.java
A	src/test/resources/com/google/errorprone/checkers/remove_fallthrough_suppression/PositiveCases.java
A	src/test/resources/com/google/errorprone/checkers/remove_fallthrough_suppression/ToBeExtended.java
D	src/test/resources/dead_exception/NegativeCase1.java
D	src/test/resources/dead_exception/PositiveCase1.java
D	src/test/resources/empty_if_statement/NegativeCases.java
D	src/test/resources/empty_if_statement/PositiveCases.java
D	src/test/resources/empty_statement/NegativeCases.java
D	src/test/resources/empty_statement/PositiveCases.java
D	src/test/resources/ordering_from/NegativeCases.java
D	src/test/resources/ordering_from/PositiveCases.java
D	src/test/resources/preconditions_checkNotNull/NegativeCase1.java
D	src/test/resources/preconditions_checkNotNull/PositiveCase1.java
D	src/test/resources/preconditions_checkNotNull/PositiveCase2.java
D	src/test/resources/preconditions_checkNotNull_first_arg_boolean/PositiveCase1.java
D	src/test/resources/preconditions_expensive_string/NegativeCase1.java
D	src/test/resources/preconditions_expensive_string/NegativeCase2.java
D	src/test/resources/preconditions_expensive_string/PositiveCase1.java
D	src/test/resources/remove_fallthrough_suppression/NegativeCases.java
D	src/test/resources/remove_fallthrough_suppression/PositiveCases.java
D	src/test/resources/remove_fallthrough_suppression/ToBeExtended.java

commit deb7d182f191fc2afcc19b968b831d17624f7266
Author: Alex Eagle <alexeagle@google.com>
Date:   Wed Dec 28 10:47:37 2011 -0800

    Create a main which can replace javac.

M	src/main/java/com/google/errorprone/ErrorFindingCompiler.java
M	src/main/java/com/google/errorprone/VisitorState.java
M	src/test/java/com/google/errorprone/ErrorFindingCompilerIntegrationTest.java
M	src/test/java/com/google/errorprone/matchers/StaticMethodMatcherTest.java
M	src/test/resources/empty_if_statement/NegativeCases.java
M	src/test/resources/empty_if_statement/PositiveCases.java
M	src/test/resources/empty_statement/NegativeCases.java
M	src/test/resources/empty_statement/PositiveCases.java
M	src/test/resources/ordering_from/NegativeCases.java
M	src/test/resources/ordering_from/PositiveCases.java

commit 4fa41715d9076d5df4b82d8e3fc93d54e17fe7f3
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Dec 27 11:45:23 2011 -0800

    Refactored empty if checker to match on empty statements rather than ifs. Hoping to improve performance.

M	src/main/java/com/google/errorprone/ErrorProneScanner.java
M	src/main/java/com/google/errorprone/checkers/EmptyIfChecker.java

commit 05e6cd0ad3817c2d85b7830fb2b83237a45c7e3c
Merge: 47fc56a f6038f2
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Dec 13 13:35:26 2011 -0800

    Merge branch 'master' of https://code.google.com/p/error-prone

commit 47fc56a2caea9785e6f76f8dae877d86235ccba3
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Dec 12 16:16:05 2011 -0800

    Bound source:jar to the maven package phase

M	pom.xml

commit 45cd3fcd60b9093d4a7dd1ad6167f23964861631
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Dec 12 14:57:58 2011 -0800

    Prettier presentation of error messages and suggested fixes

M	src/main/java/com/google/errorprone/LogReporter.java
M	src/main/java/com/google/errorprone/checkers/EmptyIfChecker.java
M	src/main/java/com/google/errorprone/fixes/AppliedFix.java

commit f6038f27b424b922b8d9ab99c3af40fac0faf815
Author: Simon Nickerson <sjnickerson@google.com>
Date:   Fri Dec 9 13:18:02 2011 +0100

    New checker for calls to Ordering.from() which take an anonymous
    inner subclass of Comparator as an argument. These can be unrolled
    to new Ordering() { ... }.
    
    This change required me to make the replace(int, int, String) method in
    SuggestedFix public.

M	src/main/java/com/google/errorprone/ErrorProneScanner.java
M	src/main/java/com/google/errorprone/checkers/ErrorChecker.java
A	src/main/java/com/google/errorprone/checkers/OrderingFromChecker.java
M	src/main/java/com/google/errorprone/fixes/SuggestedFix.java
A	src/main/java/com/google/errorprone/matchers/NewInstanceAnonymousInnerClassMatcher.java
A	src/test/resources/ordering_from/NegativeCases.java
A	src/test/resources/ordering_from/PositiveCases.java

commit 3001bce457943e89af990198a94e1b933e969174
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Nov 30 08:29:33 2011 -0800

    Cleanup

M	src/main/java/com/google/errorprone/checkers/DeadExceptionChecker.java
M	src/main/java/com/google/errorprone/checkers/EmptyIfChecker.java

commit f2cfc59281073b9dc05a38af320c5ea21af816aa
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Nov 30 08:24:21 2011 -0800

    Forgot NextStatement file

A	src/main/java/com/google/errorprone/matchers/NextStatement.java

commit 98cc3be364a4716f8780a123e1e61c470d87a843
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Nov 30 08:23:38 2011 -0800

    Refactored empty if checker into matchers for DSL

M	src/main/java/com/google/errorprone/ErrorProneScanner.java
M	src/main/java/com/google/errorprone/checkers/DeadExceptionChecker.java
M	src/main/java/com/google/errorprone/checkers/EmptyIfChecker.java
M	src/main/java/com/google/errorprone/checkers/EmptyStatementChecker.java
M	src/main/java/com/google/errorprone/matchers/Matchers.java
M	src/test/java/com/google/errorprone/ErrorFindingCompilerIntegrationTest.java
A	src/test/resources/empty_if_statement/NegativeCases.java
A	src/test/resources/empty_if_statement/PositiveCases.java

commit c1e46ca743b16b1de6384e387315c32c0307331a
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Nov 21 17:10:56 2011 -0800

    Modified empty if checker to match only if then part of if is empty and
    else part exists.  This matches javac's empty check.

M	src/main/java/com/google/errorprone/ErrorProneScanner.java
A	src/main/java/com/google/errorprone/checkers/EmptyIfChecker.java
D	src/main/java/com/google/errorprone/checkers/EmptyIfStatementChecker.java

commit a28042b3137a361fd6ac4f218e2bb93cb6499159
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Nov 21 09:44:46 2011 -0800

    Forgot to add 2 files

A	src/main/java/com/google/errorprone/checkers/EmptyIfStatementChecker.java
A	src/test/resources/remove_fallthrough_suppression/ToBeExtended.java

commit 8f7916a3a837173eff589eb39634c7a963fb33f6
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Nov 18 13:55:36 2011 -0800

    Added checker for empty if statement

M	src/main/java/com/google/errorprone/ErrorProneScanner.java

commit 22feb92183b9358927eaaf3daaed3279448afc37
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Nov 16 17:14:23 2011 -0800

    Added test case for fallthrough suppression with a non-SuppressWarnings
    annotation.

M	src/test/resources/remove_fallthrough_suppression/NegativeCases.java

commit b29b55d5a06ef4a12f69443a53d0f714af1a21fc
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Nov 16 10:45:27 2011 -0800

    Implemented empty statement check

M	src/main/java/com/google/errorprone/ErrorProneScanner.java
A	src/main/java/com/google/errorprone/checkers/EmptyStatementChecker.java
A	src/test/resources/empty_statement/NegativeCases.java
A	src/test/resources/empty_statement/PositiveCases.java

commit 57cc4fb13ede549fb95ca95e328cc993557d271f
Author: Alex Eagle <alexeagle@google.com>
Date:   Tue Nov 15 22:08:40 2011 -0800

    Pass the context to the VisitorState, and let it get access to the javac singletons itself.
    Also add a Scanner inner class in the FallThroughSuppressionChecker, so that it may be run more conveniently. Ultimately, I think we want each Checker to provide a scanner for itself, allowing that check to be run in isolation. Perhaps we can even build our ErrorProneScanner by composing the scanners for all the checks.

M	src/main/java/com/google/errorprone/ErrorFindingCompiler.java
M	src/main/java/com/google/errorprone/VisitorState.java
M	src/main/java/com/google/errorprone/checkers/FallThroughSuppressionChecker.java

commit d71b8015cd24ecaff10ef74260d96ba3de3e38b2
Merge: 966c21f b92df45
Author: Alex Eagle <alexeagle@google.com>
Date:   Fri Nov 11 17:52:41 2011 -0800

    Merge branch 'master' of https://code.google.com/p/error-prone
    
    Conflicts:
    	pom.xml

commit b92df456de539386eaccd674bfbf91989183a956
Author: Peter Epstein <pepstein@google.com>
Date:   Fri Nov 11 17:44:30 2011 -0800

    Add a new error check for suppressing the fallthrough warning. This is only appropriate if you always compile your code with this warning suppressed.

M	src/main/java/com/google/errorprone/ErrorCollectingTreeScanner.java
M	src/main/java/com/google/errorprone/ErrorFindingCompiler.java
M	src/main/java/com/google/errorprone/ErrorProneScanner.java
M	src/main/java/com/google/errorprone/LogReporter.java
M	src/main/java/com/google/errorprone/VisitorState.java
M	src/main/java/com/google/errorprone/checkers/ErrorChecker.java
A	src/main/java/com/google/errorprone/checkers/FallThroughSuppressionChecker.java
M	src/main/java/com/google/errorprone/checkers/PreconditionsCheckNotNullChecker.java
A	src/main/java/com/google/errorprone/matchers/AnnotationHasElementWithValue.java
A	src/main/java/com/google/errorprone/matchers/AnnotationTypeMatcher.java
M	src/main/java/com/google/errorprone/matchers/IsSubtypeOf.java
M	src/main/java/com/google/errorprone/matchers/Matchers.java
A	src/main/java/com/google/errorprone/matchers/StringLiteralMatcher.java
M	src/test/java/com/google/errorprone/matchers/StaticMethodMatcherTest.java
M	src/test/resources/preconditions_checkNotNull/PositiveCase2.java
M	src/test/resources/preconditions_expensive_string/NegativeCase2.java
M	src/test/resources/preconditions_expensive_string/PositiveCase1.java
A	src/test/resources/remove_fallthrough_suppression/NegativeCases.java
A	src/test/resources/remove_fallthrough_suppression/PositiveCases.java

commit 9c80e462719eba71059850f9a63770de5430c99d
Author: Peter Epstein <pepstein@google.com>
Date:   Fri Nov 11 11:23:33 2011 -0800

    Fix compile error caused by poor type inference in Java.
    Update the version to 0.3-SNAPSHOT.

M	pom.xml
M	src/main/java/com/google/errorprone/checkers/PreconditionsExpensiveStringChecker.java

commit 9d0bdaef87505526d1be706857fd9a985005c64f
Author: Simon Nickerson <sjnickerson@google.com>
Date:   Fri Nov 4 14:10:01 2011 +0000

    Checker for statements of the form
    
    Preconditions.checkNotNull(foo != null, "Blah");
    
    which becomes
    
    Preconditions.checkNotNull(foo, "Blah");

M	src/main/java/com/google/errorprone/ErrorProneScanner.java
A	src/main/java/com/google/errorprone/checkers/PreconditionsCheckNotNullPrimitive1stArgChecker.java
M	src/main/java/com/google/errorprone/fixes/SuggestedFix.java
A	src/test/resources/preconditions_checkNotNull_first_arg_boolean/PositiveCase1.java

commit 411bdd18ae022c1a1d1fe04836daf3c50b7ac71a
Merge: 1566f28 650563e
Author: Simon Nickerson <sjnickerson@google.com>
Date:   Fri Nov 4 11:58:16 2011 +0000

    Merge branch 'string-format'

commit 650563ef25b45dbd9599a41e0a7dc6101f5d003c
Merge: ce2ab77 eb283ea
Author: Simon Nickerson <sjnickerson@google.com>
Date:   Fri Nov 4 11:54:18 2011 +0000

    Merge branch 'string-format' of https://code.google.com/p/error-prone into string-format

commit ce2ab77589f1f2c0743bfa94cb8465e9dc004d67
Author: Simon Nickerson <sjnickerson@google.com>
Date:   Fri Nov 4 11:51:41 2011 +0000

    Review comments from alexeagle.

M	src/main/java/com/google/errorprone/checkers/PreconditionsExpensiveStringChecker.java
M	src/main/java/com/google/errorprone/matchers/ExpressionMethodSelectMatcher.java
M	src/test/resources/preconditions_expensive_string/NegativeCase1.java
M	src/test/resources/preconditions_expensive_string/NegativeCase2.java
M	src/test/resources/preconditions_expensive_string/PositiveCase1.java

commit 966c21f9b8985c32ce670aaaca2b87789aa9550c
Author: Alex Eagle <alexeagle@google.com>
Date:   Thu Nov 3 16:04:30 2011 -0700

    Update version to 0.2 in prep for a second release.

M	pom.xml

commit 1566f28328eb9b0e362970657492e093fd359722
Author: Alex Eagle <alexeagle@google.com>
Date:   Tue Nov 1 22:19:51 2011 -0700

    Instead of printing offsets when a checker fails, print a nice snippet of the code we think was intended.

M	src/main/java/com/google/errorprone/ErrorFindingCompiler.java
M	src/main/java/com/google/errorprone/ErrorProneScanner.java
M	src/main/java/com/google/errorprone/LogReporter.java
M	src/main/java/com/google/errorprone/checkers/PreconditionsCheckNotNullChecker.java
A	src/main/java/com/google/errorprone/fixes/AppliedFix.java
M	src/main/java/com/google/errorprone/fixes/SuggestedFix.java
A	src/test/java/com/google/errorprone/fixes/AppliedFixTest.java
M	src/test/resources/preconditions_checkNotNull/PositiveCase1.java

commit eb283ea21b68d377914c21f0ad914a8fc3887d6b
Merge: c7da780 5a023a5
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon Oct 31 11:01:11 2011 -0700

    Merge branch 'string-format' of https://code.google.com/p/error-prone into string-format

commit c7da7804ff27ac05970a1125cd621b10b767b2f6
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon Oct 31 11:00:15 2011 -0700

    Move Replacement from inner-class to top-level.

A	src/main/java/com/google/errorprone/fixes/Replacement.java
M	src/main/java/com/google/errorprone/fixes/SuggestedFix.java

commit 5a023a538ace95823792f7fe2682436f0b4bfce7
Author: Simon Nickerson <sjnickerson@google.com>
Date:   Fri Oct 28 09:54:43 2011 +0100

    Initial ErrorChecker for calls to Preconditions.check(State|Argument|NotNull)
    where the error message argument is a call to String.format() (with just
    %s as the string to call).

M	src/main/java/com/google/errorprone/ErrorProneScanner.java
A	src/main/java/com/google/errorprone/checkers/PreconditionsExpensiveStringChecker.java
A	src/main/java/com/google/errorprone/matchers/ExpressionMethodSelectMatcher.java
M	src/main/java/com/google/errorprone/matchers/Matchers.java
A	src/test/resources/preconditions_expensive_string/NegativeCase1.java
A	src/test/resources/preconditions_expensive_string/NegativeCase2.java
A	src/test/resources/preconditions_expensive_string/PositiveCase1.java

commit 34554b1ce94e533449c41ffefed9fc2ecb211019
Author: Alex Eagle <alexeagle@google.com>
Date:   Thu Oct 27 14:52:16 2011 -0700

    Update the suggested fix for Preconditions.checkNotNull("string", thing) to swap the two arguments.

D	error-patterns/guava/NegativeCase1.java
D	error-patterns/guava/PositiveCase1.java
D	error-patterns/guava/PositiveCase2.java
M	src/main/java/com/google/errorprone/LogReporter.java
M	src/main/java/com/google/errorprone/checkers/ErrorChecker.java
M	src/main/java/com/google/errorprone/checkers/PreconditionsCheckNotNullChecker.java
M	src/main/java/com/google/errorprone/fixes/SuggestedFix.java
A	src/test/resources/preconditions_checkNotNull/NegativeCase1.java
A	src/test/resources/preconditions_checkNotNull/PositiveCase1.java
A	src/test/resources/preconditions_checkNotNull/PositiveCase2.java

commit d53ff9047a632cef3f1b8f0fec5b8fe1a8f11db6
Author: Alex Eagle <alexeagle@google.com>
Date:   Thu Oct 27 14:12:47 2011 -0700

    Rewrite StaticMethodMatcher.java to use the symbol table rather than poking around in the imports. This lets us avoid visiting the import statements.

M	src/main/java/com/google/errorprone/ErrorFindingCompiler.java
M	src/main/java/com/google/errorprone/ErrorProneScanner.java
M	src/main/java/com/google/errorprone/VisitorState.java
M	src/main/java/com/google/errorprone/checkers/PreconditionsCheckNotNullChecker.java
M	src/main/java/com/google/errorprone/matchers/Matchers.java
M	src/main/java/com/google/errorprone/matchers/StaticMethodMatcher.java
M	src/test/java/com/google/errorprone/matchers/StaticMethodMatcherTest.java

commit 0b1998397d3699f8dbb759b34165614150394d7b
Author: Alex Eagle <alexeagle@google.com>
Date:   Thu Oct 27 11:50:50 2011 -0700

    Tests passing!
    Added a proper unit test for one of the matchers. More unit testing is still needed.

M	pom.xml
M	src/main/java/com/google/errorprone/ErrorCollectingTreeScanner.java
M	src/main/java/com/google/errorprone/ErrorFindingCompiler.java
M	src/test/java/com/google/errorprone/ErrorFindingCompilerIntegrationTest.java
A	src/test/java/com/google/errorprone/matchers/StaticMethodMatcherTest.java
D	src/test/resources/NegativeCase1.java
D	src/test/resources/PositiveCase1.java
A	src/test/resources/dead_exception/NegativeCase1.java
A	src/test/resources/dead_exception/PositiveCase1.java

commit 52cbf466c4dea636b2a52a0f592f90b7f4dd887a
Author: Alex Eagle <alexeagle@google.com>
Date:   Thu Oct 27 09:58:39 2011 -0700

    Missed the corresponding test in my previous commit.

D	src/test/java/com/google/errorprone/ErrorProneProcessorIntegrationTest.java

commit d4fade48c89fab556d78ec68e98631b50ae0998d
Author: Alex Eagle <alexeagle@google.com>
Date:   Thu Oct 27 09:55:54 2011 -0700

    Delete annotation processor stuff. It's hard to build cleanly without running error prone against itself at compile-time, and we don't think it's useful to run this way.
    
    Still need a clean way to run as part of javac, though.

M	pom.xml
D	src/main/deploy-only-resources/META-INF/services/javax.annotation.processing.Processor
D	src/main/java/com/google/errorprone/ASTVisitor.java
A	src/main/java/com/google/errorprone/ErrorCollectingTreeScanner.java
M	src/main/java/com/google/errorprone/ErrorFindingCompiler.java
D	src/main/java/com/google/errorprone/ErrorProneProcessor.java
A	src/main/java/com/google/errorprone/ErrorProneScanner.java
D	src/main/java/com/google/errorprone/JSR269ErrorReporter.java
M	src/test/java/com/google/errorprone/ErrorProneProcessorIntegrationTest.java

commit b3c7982718c29f0b74a0b6a3a8e81521b5b45575
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon Oct 24 17:52:54 2011 -0700

    Static factories for creating fixes, which are more self-describing.
    Cleanup unused matchers.

M	src/main/java/com/google/errorprone/checkers/DeadExceptionChecker.java
M	src/main/java/com/google/errorprone/checkers/ErrorChecker.java
M	src/main/java/com/google/errorprone/checkers/PreconditionsCheckNotNullChecker.java
M	src/main/java/com/google/errorprone/fixes/SuggestedFix.java
D	src/main/java/com/google/errorprone/matchers/CapturingMatcher.java
M	src/main/java/com/google/errorprone/matchers/Matchers.java
D	src/main/java/com/google/errorprone/matchers/Not.java
M	src/main/java/com/google/errorprone/matchers/Same.java
D	src/main/java/com/google/errorprone/matchers/StoreToBoolean.java
D	src/main/java/com/google/errorprone/matchers/TreeHolder.java

commit 62643fa74ac93833173930bf282b25a3cc0fb400
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon Oct 24 17:40:35 2011 -0700

    Reorganize packages

M	src/main/java/com/google/errorprone/ASTVisitor.java
M	src/main/java/com/google/errorprone/ErrorFindingCompiler.java
M	src/main/java/com/google/errorprone/ErrorProneProcessor.java
M	src/main/java/com/google/errorprone/ErrorReporter.java
M	src/main/java/com/google/errorprone/JSR269ErrorReporter.java
M	src/main/java/com/google/errorprone/LogReporter.java
D	src/main/java/com/google/errorprone/SuggestedFix.java
A	src/main/java/com/google/errorprone/checkers/DeadExceptionChecker.java
A	src/main/java/com/google/errorprone/checkers/ErrorChecker.java
A	src/main/java/com/google/errorprone/checkers/PreconditionsCheckNotNullChecker.java
A	src/main/java/com/google/errorprone/fixes/SuggestedFix.java
D	src/main/java/com/google/errorprone/matchers/DeadExceptionChecker.java
D	src/main/java/com/google/errorprone/matchers/ErrorChecker.java
D	src/main/java/com/google/errorprone/matchers/PreconditionsCheckNotNullChecker.java

commit ce163e566d91a907d7ce8c3bdff70226956dbab7
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon Oct 24 17:38:56 2011 -0700

    Refactoring based on code review with Peter. Rename the base class for matching and producing an error, and split up these two responsibilities into their own method.

M	error-patterns/guava/NegativeCase1.java
M	src/main/java/com/google/errorprone/ASTVisitor.java
M	src/main/java/com/google/errorprone/ErrorFindingCompiler.java
M	src/main/java/com/google/errorprone/ErrorProneProcessor.java
M	src/main/java/com/google/errorprone/ErrorReporter.java
M	src/main/java/com/google/errorprone/JSR269ErrorReporter.java
M	src/main/java/com/google/errorprone/LogReporter.java
A	src/main/java/com/google/errorprone/matchers/DeadExceptionChecker.java
D	src/main/java/com/google/errorprone/matchers/DeadExceptionMatcher.java
A	src/main/java/com/google/errorprone/matchers/ErrorChecker.java
D	src/main/java/com/google/errorprone/matchers/ErrorProducingMatcher.java
A	src/main/java/com/google/errorprone/matchers/PreconditionsCheckNotNullChecker.java
D	src/main/java/com/google/errorprone/matchers/PreconditionsCheckNotNullMatcher.java

commit 2546b6cc9036c40a5372e09961f2293b28e1c3a9
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon Oct 24 11:54:40 2011 -0700

    Handle the case where an if statement body has no block.

M	src/main/java/com/google/errorprone/ASTVisitor.java
M	src/main/java/com/google/errorprone/VisitorState.java
M	src/main/java/com/google/errorprone/matchers/DeadExceptionMatcher.java
M	src/main/java/com/google/errorprone/matchers/Matchers.java
A	src/main/java/com/google/errorprone/matchers/ParentNode.java
D	src/main/java/com/google/errorprone/matchers/ParentNodeIs.java
M	src/main/java/com/google/errorprone/matchers/PreconditionsCheckNotNullMatcher.java
M	src/test/resources/PositiveCase1.java

commit a806a40a22f9fea52aaac515f9fd98c4975bb5d2
Author: Alex Eagle <alexeagle@google.com>
Date:   Sun Oct 23 22:25:14 2011 -0700

    Take care of the TODO from the previous commit: extend the Predicate DSL to support the features in the DeadExceptionMatcher. Wrangle some generic type parameters to be shinier.

M	src/main/java/com/google/errorprone/matchers/CapturingMatcher.java
M	src/main/java/com/google/errorprone/matchers/DeadExceptionMatcher.java
A	src/main/java/com/google/errorprone/matchers/EnclosingBlock.java
A	src/main/java/com/google/errorprone/matchers/LastStatement.java
M	src/main/java/com/google/errorprone/matchers/Matchers.java
M	src/main/java/com/google/errorprone/matchers/MethodInvocationArgumentMatcher.java
M	src/main/java/com/google/errorprone/matchers/ParentNodeIs.java
M	src/main/java/com/google/errorprone/matchers/PreconditionsCheckNotNullMatcher.java
A	src/main/java/com/google/errorprone/matchers/Same.java
A	src/main/java/com/google/errorprone/matchers/StoreToBoolean.java
A	src/main/java/com/google/errorprone/matchers/TreeHolder.java

commit 0e9c459d1e3a4f7391faff45f3fcf1aa85e9aea4
Author: Alex Eagle <alexeagle@google.com>
Date:   Sun Oct 23 20:37:46 2011 -0700

    Based on some large-scale analysis, there are cases where an exception is created but it's not the last statement in a block. In this case, suggesting adding a "throw" in front is bad, since that doesn't compile. Instead, suggest removing the whole statement in this case.

M	src/main/java/com/google/errorprone/ErrorFindingCompiler.java
M	src/main/java/com/google/errorprone/matchers/DeadExceptionMatcher.java
M	src/main/java/com/google/errorprone/matchers/Matchers.java
M	src/main/java/com/google/errorprone/matchers/MethodInvocationArgumentMatcher.java
M	src/main/java/com/google/errorprone/matchers/ParentNodeIs.java
M	src/test/resources/NegativeCase1.java
M	src/test/resources/PositiveCase1.java

commit 18d7b3ad6e07addb77ef60c2e622027ba954c517
Author: Alex Eagle <alexeagle@google.com>
Date:   Fri Oct 21 18:00:19 2011 -0700

    Instead of blacklisting cases which aren't a dead store, just check for an entire statement which only contains the new Exception.
    This may restrict the cases we can detect, but is safer and more specific.

M	src/main/java/com/google/errorprone/matchers/DeadExceptionMatcher.java

commit 771107ad3d8da3eb63df4224139d01474223ab89
Author: Alex Eagle <alexeagle@google.com>
Date:   Fri Oct 21 08:26:54 2011 -0700

    Fix a missing case where an exception is created and then assigned to an existing variable.

M	src/main/java/com/google/errorprone/matchers/DeadExceptionMatcher.java
M	src/test/resources/NegativeCase1.java

commit 899ea4849d56bfa2c8b142e821f8f346f961c671
Author: Alex Eagle <alexeagle@google.com>
Date:   Thu Oct 20 22:31:33 2011 -0700

    Use the predicate DSL to express the Dead Exception match.

M	src/main/java/com/google/errorprone/matchers/DeadExceptionMatcher.java
A	src/main/java/com/google/errorprone/matchers/IsSubtypeOf.java
M	src/main/java/com/google/errorprone/matchers/Matchers.java
A	src/main/java/com/google/errorprone/matchers/Not.java
A	src/main/java/com/google/errorprone/matchers/ParentNodeIs.java
M	src/main/java/com/google/errorprone/matchers/PreconditionsCheckNotNullMatcher.java

commit c73284ebab79d64decfd9ef40b0404794411cb07
Author: Alex Eagle <alexeagle@google.com>
Date:   Thu Oct 20 22:13:10 2011 -0700

    Refactor the base Matcher to be an interface, and organize imports.

M	src/main/java/com/google/errorprone/ASTVisitor.java
M	src/main/java/com/google/errorprone/ErrorFindingCompiler.java
M	src/main/java/com/google/errorprone/ErrorProneProcessor.java
M	src/main/java/com/google/errorprone/JSR269ErrorReporter.java
M	src/main/java/com/google/errorprone/LogReporter.java
M	src/main/java/com/google/errorprone/VisitorState.java
M	src/main/java/com/google/errorprone/matchers/CapturingMatcher.java
M	src/main/java/com/google/errorprone/matchers/DeadExceptionMatcher.java
M	src/main/java/com/google/errorprone/matchers/ErrorProducingMatcher.java
M	src/main/java/com/google/errorprone/matchers/Matcher.java
A	src/main/java/com/google/errorprone/matchers/Matchers.java
M	src/main/java/com/google/errorprone/matchers/MethodInvocationArgumentMatcher.java
M	src/main/java/com/google/errorprone/matchers/MethodInvocationMethodSelectMatcher.java
M	src/main/java/com/google/errorprone/matchers/PreconditionsCheckNotNullMatcher.java
M	src/main/java/com/google/errorprone/matchers/StaticMethodMatcher.java

commit df2f43b27eaf7831f05cb6460e7e67b6cd666032
Author: Alex Eagle <alexeagle@google.com>
Date:   Thu Oct 20 22:07:03 2011 -0700

    Fix the DeadExceptionMatcher, by keeping the AST path so we can see our parent node's type.

M	src/main/java/com/google/errorprone/ASTVisitor.java
M	src/main/java/com/google/errorprone/ErrorFindingCompiler.java
M	src/main/java/com/google/errorprone/VisitorState.java
M	src/main/java/com/google/errorprone/matchers/DeadExceptionMatcher.java
A	src/test/resources/NegativeCase1.java
M	src/test/resources/PositiveCase1.java

commit c7d7850d2a4e73869f992769079d35c36bb0ab1f
Author: Alex Eagle <alexeagle@google.com>
Date:   Wed Oct 12 08:01:46 2011 -0700

    Fix new test. Get the output to show up on stdout when running main, and try to produce a suggested fix as well.

M	src/main/java/com/google/errorprone/ASTVisitor.java
D	src/main/java/com/google/errorprone/CommandLineReporter.java
M	src/main/java/com/google/errorprone/ErrorFindingCompiler.java
A	src/main/java/com/google/errorprone/LogReporter.java
M	src/main/java/com/google/errorprone/matchers/DeadExceptionMatcher.java
M	src/main/java/com/google/errorprone/matchers/ErrorProducingMatcher.java
M	src/main/java/com/google/errorprone/matchers/PreconditionsCheckNotNullMatcher.java
M	src/test/java/com/google/errorprone/ErrorFindingCompilerIntegrationTest.java

commit 40ffed04ee759105c6fe0ce287b6ba4ef9420e8d
Author: Alex Eagle <alexeagle@google.com>
Date:   Sun Oct 9 21:42:56 2011 -0700

    First stab at a matcher for an exception which is created, is not thrown, and the reference is lost.

A	src/main/java/com/google/errorprone/matchers/DeadExceptionMatcher.java

commit f3b0335130117740f1ac414e7ae6aa9be6305c40
Author: Alex Eagle <alexeagle@google.com>
Date:   Sun Oct 9 21:42:25 2011 -0700

    Since the JSR-269 processor doesn't have access to resolved names in the symbol table, try a different way to run our checkers. Boot up a javac and run it through the analysis phase, then visit all the compilation units. Test doesn't pass yet.

A	src/main/java/com/google/errorprone/CommandLineReporter.java
A	src/main/java/com/google/errorprone/ErrorFindingCompiler.java
M	src/main/java/com/google/errorprone/ErrorProneProcessor.java
M	src/main/java/com/google/errorprone/VisitorState.java
M	src/main/java/com/google/errorprone/matchers/ErrorProducingMatcher.java
A	src/test/java/com/google/errorprone/ErrorFindingCompilerIntegrationTest.java
A	src/test/java/com/google/errorprone/ErrorProneProcessorIntegrationTest.java
D	src/test/java/com/google/errorprone/PreconditionsCheckNotNullTest.java
A	src/test/resources/PositiveCase1.java

commit 34afa438e1e0f94d69cc23552417060c818ffde1
Author: Alex Eagle <alexeagle@google.com>
Date:   Sun Oct 9 21:39:31 2011 -0700

    Add a way to produce a suggested fix as well as the error message. This will let us automate the corrections, just as some IDE warnings do.

M	src/main/java/com/google/errorprone/ASTVisitor.java
A	src/main/java/com/google/errorprone/SuggestedFix.java
M	src/main/java/com/google/errorprone/matchers/PreconditionsCheckNotNullMatcher.java

commit 5a77535278fcdda5f813705c7f9f35f5f99a76eb
Merge: 2dd6ec4 bd63968
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon Oct 3 16:25:08 2011 -0700

    Merge branch 'master' of https://code.google.com/p/error-prone
    
    Also move the error reporting outside the visitor, by returning the errors.
    
    Conflicts:
    	src/main/java/com/google/errorprone/ASTVisitor.java

commit 2dd6ec4ebb1b6e20635909cd80e4bb41981192e8
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon Oct 3 14:28:29 2011 -0700

    Make ASTVisitor public so we can enter from there.

M	src/main/java/com/google/errorprone/ASTVisitor.java

commit bd639689ee9b45b6f177e917b03396096ebb4684
Author: Alex Eagle <alexeagle@google.com>
Date:   Mon Oct 3 10:57:55 2011 -0700

    Change our Visitor to use the TreeScanner base class, which provides the traversal of all the tree nodes. This removes a bunch of code.
    It also means we don't have a way to print where we are in the tree, but I think this trade-off is worth it.

M	src/main/java/com/google/errorprone/ASTVisitor.java
M	src/main/java/com/google/errorprone/ErrorProneProcessor.java
M	src/test/java/com/google/errorprone/PreconditionsCheckNotNullTest.java

commit 9d7b799c3080b6d6986b5551c61b9113e7c0c23d
Author: Alex Eagle <alexeagle@google.com>
Date:   Fri Sep 30 11:04:53 2011 -0700

    Fix broken test on linux. The classloader in the in-process compiler is not
    inherited from the test runner's classloader, so our classes aren't visible.
    So we explicitly create a classpath to run the compiler.

M	src/test/java/com/google/errorprone/PreconditionsCheckNotNullTest.java

commit 190905a5f3a6d8f91f42dd537c9360c0a1e03979
Author: Alex Eagle <alexeagle@google.com>
Date:   Fri Sep 30 11:03:51 2011 -0700

    Add google parent POM

M	pom.xml

commit 0555fa7a32bd9cded0079f875e4b9ab3953aac8a
Author: Alex Eagle <alexeagle@google.com>
Date:   Fri Sep 30 10:05:41 2011 -0700

    Move error reporting behind an interface, so that our ASTVisitor is not JSR-269-specific.
    
    This will allow us to invoke the checker in other ways. Ultimately, it's possible that the annotation processor will not work well because of annotations taken by other processors, or changes in the javac internals.

M	src/main/java/com/google/errorprone/ASTVisitor.java
M	src/main/java/com/google/errorprone/ErrorProneProcessor.java
A	src/main/java/com/google/errorprone/ErrorReporter.java
A	src/main/java/com/google/errorprone/JSR269ErrorReporter.java
M	src/test/java/com/google/errorprone/PreconditionsCheckNotNullTest.java

commit 2d77247ad6f86323b76492d6323d3f2085c7fe06
Author: Alex Eagle <alexeagle@google.com>
Date:   Fri Sep 30 09:53:32 2011 -0700

    Don't include the tools.jar dependency on MacOS. It's already in the classpath, and can't be found by the path we use.

M	pom.xml

commit 5484b0782b9cd35aa213b9fc94b078ebc9b26504
Merge: 000e1a5 a6b3efd
Author: Alex Eagle <alexeagle@google.com>
Date:   Fri Sep 30 09:12:07 2011 -0700

    Merge branch 'master' of https://code.google.com/p/error-prone

commit 000e1a58b78bfdba4cf14c8cd315f1e8c37be79c
Author: Alex Eagle <alexeagle@google.com>
Date:   Fri Sep 30 09:11:58 2011 -0700

    Fix clean builds by copying the SPI manifest right before running tests.

M	pom.xml

commit a6b3efdecae6ae06b80b4a6f43ec285c812ffe3b
Merge: 95f2643 d12591e
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Wed Sep 28 09:44:22 2011 -0700

    Merge branch 'fixmultipleimports'

commit d12591e712d69dfa1191a446cf45d98571ddf098
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Sep 27 16:30:23 2011 -0700

    Forgot to add PositiveCase2 file, also a break out of a loop in import
    matching.

M	error-patterns/guava/PositiveCase1.java
A	error-patterns/guava/PositiveCase2.java
M	src/main/java/com/google/errorprone/matchers/StaticMethodMatcher.java

commit ca1a1df53e0632a61f9caebc3198755cde53a967
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Sep 27 15:24:00 2011 -0700

    Fixed two problems: (1) Matcher now checks all imports, and (2) matcher
    now supports fully-qualified method calls.

M	error-patterns/guava/PositiveCase1.java
M	pom.xml
M	src/main/java/com/google/errorprone/matchers/StaticMethodMatcher.java
M	src/test/java/com/google/errorprone/PreconditionsCheckNotNullTest.java

commit 95f2643369798f3273cfba2e327fecdf9b9c5ac6
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Sep 27 11:25:15 2011 -0700

    Small changes from code review

M	src/main/java/com/google/errorprone/ErrorProneProcessor.java

commit 202f4a2cf1171768bb84e6eca20e9c56fc32df2c
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Tue Sep 27 09:53:47 2011 -0700

    Working on PositiveTestCase1

M	error-patterns/guava/PositiveCase1.java
M	pom.xml
M	src/test/java/com/google/errorprone/PreconditionsCheckNotNullTest.java

commit ed7c9cbd4bf1d55dfdda79335c66ceae2c837452
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Sep 26 16:37:18 2011 -0700

    Removed TODO that I had fixed in the last commit.

M	src/test/java/com/google/errorprone/PreconditionsCheckNotNullTest.java

commit 5bdce0003d1dd1fa696cfc632ff5fee2c73a553a
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Mon Sep 26 16:32:53 2011 -0700

    Previously we weren't processing imports, so our StaticMethodMatcher
    would match too many calls. Fixed this.  Now NoErrorForNegativeCase1
    test passes.

M	src/main/java/com/google/errorprone/ASTVisitor.java
M	src/main/java/com/google/errorprone/ErrorProneProcessor.java
M	src/main/java/com/google/errorprone/VisitorState.java
M	src/main/java/com/google/errorprone/matchers/StaticMethodMatcher.java
M	src/test/java/com/google/errorprone/PreconditionsCheckNotNullTest.java

commit 038a4aaaf24199eb0f7ae5aab0a53f951a4a5aba
Author: Eddie Aftandilian <eaftan@google.com>
Date:   Fri Sep 23 09:58:21 2011 -0700

    Set compiler to java6 target and source
    Fixed logic for finding project root directory

M	pom.xml
M	src/test/java/com/google/errorprone/PreconditionsCheckNotNullTest.java

commit 4e5c6eaf2b1737942cdc33ebc1f14910589b5798
Author: Peter Epstein <pepstein@google.com>
Date:   Thu Sep 22 19:07:20 2011 -0700

    Add dependency on tools.jar so project builds on non-Mac platforms.

M	pom.xml
M	src/main/java/com/google/errorprone/matchers/Matcher.java

commit 045a1d27514912d50484cb6ab8a02bd2665f30dd
Author: Alex Eagle <eagle@post.harvard.edu>
Date:   Wed Sep 14 22:25:50 2011 -0700

    Fix broken build.

M	src/main/java/com/google/errorprone/ASTVisitor.java
M	src/main/java/com/google/errorprone/ErrorProneProcessor.java
M	src/test/java/com/google/errorprone/PreconditionsCheckNotNullTest.java

commit 10d91db7267465ee38edb044b0cb85a050383eba
Author: Alex Eagle <eagle@post.harvard.edu>
Date:   Wed Sep 14 22:11:58 2011 -0700

    Remove .class file which doesn't belong.

D	error-patterns/guava/PositiveCase1.class

commit 05adb770263dffe5aacb34b5cb3047ffcee759dd
Author: Alex Eagle <eagle@post.harvard.edu>
Date:   Wed Sep 14 22:10:29 2011 -0700

    Initial commit. Basic Predicate DSL for matchers, and check for one error.

A	COPYING
A	error-patterns/guava/NegativeCase1.java
A	error-patterns/guava/PositiveCase1.class
A	error-patterns/guava/PositiveCase1.java
A	pom.xml
A	src/main/deploy-only-resources/META-INF/services/javax.annotation.processing.Processor
A	src/main/java/com/google/errorprone/ASTVisitor.java
A	src/main/java/com/google/errorprone/ErrorProneProcessor.java
A	src/main/java/com/google/errorprone/VisitorState.java
A	src/main/java/com/google/errorprone/matchers/CapturingMatcher.java
A	src/main/java/com/google/errorprone/matchers/ErrorProducingMatcher.java
A	src/main/java/com/google/errorprone/matchers/Matcher.java
A	src/main/java/com/google/errorprone/matchers/MethodInvocationArgumentMatcher.java
A	src/main/java/com/google/errorprone/matchers/MethodInvocationMethodSelectMatcher.java
A	src/main/java/com/google/errorprone/matchers/PreconditionsCheckNotNullMatcher.java
A	src/main/java/com/google/errorprone/matchers/StaticMethodMatcher.java
A	src/main/resources/com/google/errorprone/errors.properties
A	src/test/java/com/google/errorprone/PreconditionsCheckNotNullTest.java
