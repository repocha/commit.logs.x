----------------------------
"WL#7316 Optimizer cost model: Command for online updating of cost model constants Implements the FLUSH OPTIMIZER_COSTS command. This command will reload the optimizer ""cost constants"" from the configuration tables into the ""cost constant"" cache. New sessions will use the updated ""cost constants"". "	b6a6075d32d734f99bb79b4782d5c32d37b239f0
----------------------------
"Merge: 74ee145 ca875fa WL#7793: Add native support for syslog on unixoid platforms mysqld did not have native support for traditional unix-style syslog; it instead used a shell-script wrapper that would pipe the daemon's output to the syslog.  This implied certain limitations: - it was impossible to see the syslog status at runtime - it was impossible to change the syslog status at runtime - the shell script could interfere with log rotation - the setup would often result in log lines containing two timestamps a) add native syslog support for unixoid OSs. The following can be set a start-up as well as viewed and set at runtime via system variables (requiring the SUPER privilege). --log_syslog[=0|1] on/off switch, defaults to off --log_syslog_include_pid[=0|1] Include mysqld's process ID on each syslog line? Defaults to on.  (UNIX only) --log_syslog_facility=local5 choose the syslog ""facility"". Well-known facilities may be selected by name. Defaults to ""daemon"".  (UNIX only) --log_syslog-tag=<string> If empty and by default, an ident of ""mysqld"" is used. If e.g. tag ""abcd"" is supplied, ""mysqld-abcd"" will be used. (The hyphen will be used automatically, the user need not supply it.) b) refactoring: mysys/my_syslog.cc and sql/log.cc had some duplication of effort with regard to the Windows EventLog.  This patch attempts to eliminate the duplicates from log.cc, and merge the remaining useful code into my_syslog.cc so that other binaries may have a chance to benefit from it. c) Support features of a) on Windows where possible. d) Update mysqld_safe to use features of a) instead of trying to emulate them in the wrapper script where possible, with as little change in syntax as possible. journalctl -f SYSLOG_IDENTIFIER=mysqld-meow -o json| jq '.SYSLOG_IDENTIFIER + "" "" + .SYSLOG_FACILITY + "": "" + .MESSAGE' 2>/dev/null "	0a7c569083d9ef92f97bd1aa9f910c9b1917e223
----------------------------
"WL#7276 Configuration data base for Optimizer Cost Model This worklogs adds two new tables to the ""mysql"" database for storing ""cost constants"" that will be used by the optimizer cost model. The two new tables are: - server_cost: This stores cost constants for server cost model. - engine_cost: For storing cost constants for the cost model for storage engines. The tables are created by the mysql_system_tables.sql script that is run when bootstrapping and upgrading the MySQL server. "	1ff69ecb3d0a5a8fcf676039d3ea7f7d99a6a1ad
----------------------------
Pass --core-file when starting mysqld in order to catch crashes such as Bug#19505636 INNODB.LOG_FILE_SIZE FAILS WITH WRONG ERRNO 2006 Approved by Jimmy Yang. 	58cba4ddaced67999b7dcd1b54351352300626e7
----------------------------
Bug#18192817: IGNORE_SERVER_IDS IS SHOWING DUPLICATE SERVER ID FOR LAST VALUE Problem: The list of insert_id is stored in an array. Before inserting in the array, there is a binary search to find if the same server_id already exists in the list. The issue is that the list is not sorted. Note that binary search can ONLY be applied on a sorted list. As a result the list can sometimes contain a value but not be spotted by the binary search logic. In such a case, the value is again added to the list. Fix: The bug was fixed by the patch for Bug#18920203. The patch for this bug implemented insertion-sort in Prealloced_array, and used insert_unique() to keep the array sorted at all times. The current patch only adds a test to verify that we dont have duplicate values in the list at any time. 	c4e6ff6c52c634d79caed5d3c6e1a8aee48a181c
----------------------------
"Bug#19463877: I_MAIN.AUDIT_GENERAL_LOG TEST FAILS WITH RESULT CONTENT MISMATCH Bug#19463867: MAIN.AUDIT_PLUGIN FAILS WITH RESULT CONTENT MISMATCH Hotfix to address pushbuild failures: Fix for 12368204 changed logging behaviour, but audit_plugin.test was updated only with respect to normal protocol, not others such as --ps-protocol, so it failed in those modes. Hotfix updates the results expected by the test to match those produced by the server. Fix for 12368204 added audit_general_log.test which was set up only with respect to normal mode; hotfix adds support for all other modes, and aligns expected values with those produced. This fix addresses the immediate pb failure and updates the ""multi mode deficiency"" in the tests/results; any change to the actual code and behaviour introduced by 12368204 can then happen in that framework. "	41f0ad76bc39313557dcdfb6bf3104dbd0f64372
----------------------------
"Bug#18404381: REMOVE UNNEEDE CMAKE CHECKS AND #IFDEFS IN 5.7.5 Patch #5: This patch does the following: - Removes HAVE_CRYPT_H, HAVE_CXXABI_H, HAVE_SYNCH_H, HAVE_SYS_MALLOC_H, HAVE_SYS_PRCTL_H, HAVE_ASM_TERMBITS_H, HAVE_TERMCAP_H, HAVE_UTIME_H, HAVE_SYS_UTIME_H. The header they check for is not needed. - Removes the inclusion of several system header files that is not needed. - Moves inclusion of serveral system header files from header files to impl files. - Removes serveral unneeded extern ""C"" blocks. - Uses HAVE_xxx checks consistently when including system headers. - Removes NEED_EXPLICITY_SYNC_DIR - only used in one file. Replaced with __linux__ - Changes many timespec macros to inline functions, removes dead code. - Adds a missing header guard. "	af8d08cc29788fd5adb0d1081d271c54ab174e1d
----------------------------
WL# 7583 - THD transitional string refactoring. This patch does transitional refactoring of string types in the THD class. This will ease on the migration to the new strings framework. A number of places in the server uses char* instead of const char*. A gradual transformation of the server code is required to use const char* and use const references to pass objects around functions. This will enable the smooth transition of the server code to use the new string framework classes. This changeset is responsible for changing the type of db name of the Statement class from a raw char* to LEX_CSTRING. This results in set of cascade changes across several files. The following data members are modified as part of this patch: 1. sp_name LEX_CSTRING m_db 2. Alter_table_ctx const char *db const char *table_name const char *alias const char *new_db const char *new_alias 3. Foreign_key LEX_CSTRING ref_db LEX_CSTRING ref_table 4. Statement LEX_CSTRING m_db 5. Table_ident LEX_CSTRING db LEX_CSTRING table 6. TABLE_LIST const char *db, *table_name, *alias LEX_CSTRING view_db LEX_CSTRING view_name 7. Trigger LEX_CSTRING m_db_name LEX_CSTRING m_subject_table_name 8. user_var_entry LEX_CSTRING m_catalog The functions which are modified as part of this patch include: 1. create_embedded_thd 2. check_embedded_connection 3. acl_getroot 4. check_routine_access 5. acl_authenticate 6. check_access 7. mysql_table_grant 8. get_table_grant 9. acl_notify_htons 10. log_loaded_block 11. decide_logging_format 12. net_after_header_psi 13. Event_job_data::execute 14. Events::update_event 15. Events::drop_schema_events 16. filesort 17. write_schema_op_to_binlog 18. injectApplyStatusWriteRow 19. ndb_binlog_thread_func 20. handler::ha_external_lock 21. Item_field::fix_fields 23. Item_func_sp::itemize 24. Item_func_database::val_str 25. File_query_log::write_slow 26. set_thd_db 27. Query_log_event::Query_log_event 28. Query_log_event::do_apply_event 29. Load_log_event::do_apply_event 30. Log_event::get_db 31. handle_slave_io 32. handle_slave_sql 33. Current_schema_tracker::store 34. db_load_routine 35. lock_db_routines 36. sp_drop_db_routines 37. sp_load_for_information_schema 38. sp_head::execute 39. sp_head::execute_trigger 40. sp_instr_stmt::exec_core 41. mysql_admin_table 42. Alter_table_ctx::Alter_table_ctx 43. MYSQL_AUDIT_NOTIFY_CONNECTION_CONNECT (macro) 44. MYSQL_AUDIT_NOTIFY_CONNECTION_CHANGE_USER (macro) 45. list_open_tables 46. open_table 47. make_cache_key 48. Query_cache::invalidate 49. THD::~THD 50. thd_binlog_filter_ok 51. db 52. set_db 53. reset_db 54. copy_db_to 55. Table_ident::Table_ident 56. Table_ident::change_db 57. mysql_open_cursor 58. mysql_change_db_impl 59. write_to_binlog 60. get_default_db_collation 61. mysql_create_db 62. mysql_alter_db 63. mysql_rm_db 64. mysql_change_db_impl 65. backup_current_db_name 66. mysql_change_db 67. mysql_opt_change_db 68. mysql_upgrade_db 69. mysql_derived_prepare 70. Sql_cmd_handler_open::execute 71. db_is_default_db 72. mysql_load 73. write_execute_load_query_log_event 74. mysql_load 75. all_tables_not_ok 76. dispatch_command 77. mysql_execute_command 78. mysql_parse 79. add_table_to_list 80. plugin_load 81. Prepared_statement::set_db 82. Prepared_statement::prepare 83. Prepared_statement::reprepare 84. Prepared_statement::swap_prepared_statement 85. Prepared_statement::execute 86. mysql_rename_tables 87. do_rename 88. close_cached_connection_tables 89. mysqld_show_create_db 90. store_create_info 91. view_store_create_info 92. List_process_list::operator() 93. Fill_process_list::operator() 94. make_table_list 95. fill_schema_table_by_open 96. get_all_tables 97. make_schema_select 98. get_trigger_table 99. initialize_information_schema_acl 100. mysql_rm_table_no_locks 101. mysql_alter_table 102. add_table_for_trigger 103. udf_init 104. mysql_create_view 105. mysql_make_view 106. mysql_drop_view 107. get_table_category 108. open_table_def 109. TABLE_LIST::prepare_view_securety_context 110. TABLE_LIST::prepare_security 111. init_one_table 112. new_nested_join 113. TABLE_LIST::get_db_name 114. TABLE_LIST::get_table_name 115. Table_trigger_dispatcher::Table_trigger_dispatcher 116. Trigger::create_from_dd 117. Trigger::execute 118. Trigger::parse 119. Trigger::get_db_name 120. Trigger::get_subject_table_name 121. Trigger_creation_ctx::create 122. Trigger_loader::load_triggers 123. Trigger_loader::drop_all_triggers 124. my_tz_init 125. initialize_performance_schema_acl 126. ParserTest::parse 127. ACL_internal_schema_registry::register_schema 128. mysql_routine_grant 129. Log_to_csv_event_handler::log_slow 130. sp_exist_routines 131. create_file 132. Statement::Statement 133. end_connection 134. prepare_new_connection_state 135. mysql_ha_hash_get_key 136. init_lex_with_single_table 137. innobase_get_foreign_key_info 138. ha_myisammrg::append_create_info 139. initialize_peformance_schema_acl. A new helper function to_lex_cstring(const char*) has been introduced which converts a const char* null-terminated string to LEX_CSTRING type. 	d75834078b508be1fe0db3d582bb208c6121f1e1
----------------------------
Disable i_main.audit_general_log.test 	1929aaa0aa25296b34d8eb00adc013ccc11ade7c
----------------------------
Disable main.audit_plugin (BUG#19463867) and i_main.audit_general_log (BUG#19463877) tests, since they are failing frequently on PB2. Make rpl.rpl_gtid_server_sighup experimental (BUG#19470658). Approved by Anitha 	5d4e9a8268a770a55b61c1cd974e57b5a7179900
----------------------------
#Testing for mysql user as siwtch to mysql is needed for Solaris in chroot 	228763479b888f9fa083bd41a766f6579c47fb85
----------------------------
WL#7817- RPL Monitoring: Move status variables to replication P_S tables Added more fields to replication P_S tables. Following variables that were a part of SHOW STATUS have now been added: Show status like 'Slave_last_heartbeat'; Show status like 'Slave_received_heartbeats'; show status like 'Slave_heartbeat_period'; Show status like 'Slave_retried_transactions'; 	2f6eb219b79bebb27deb3b85f6bfe91be13138be
----------------------------
The following tests take too long in Valgrind. Only run them with --big-test. auth_sec.openssl_cert_generation innodb_gis.rtree_create_inplace main.ctype_binary main.ctype_uca main.mysql_upgrade main.partition parts.part_exch_valid_key_innodb parts.part_exch_valid_range_innodb rpl.rpl_server_uuid 	267ab2ad1eea4f706e45a2e6b240aedbc2d63c86
----------------------------
WL#7159: Move time zone tables and help tables from MyISAM to transactional storage. Pushed on behalf of Dmitry Shulga. The following system tables are migrated to InnoDB by this patch: - help_category - help_keyword - help_relation - help_topic - time_zone - time_zone_leap_second - time_zone_name - time_zone_transition, - time_zone_transition_type Attachable transaction provided by previously pushed WLs (7828 and 8003) is started to be used by this patch. 	27bc1cd214ae591343c8ef2d6fd0b940e3d14ce4
----------------------------
WL#7828: InnoDB: attachable transaction support. This is a cumulative patch from Satya Bodapati and Alexander Nozdrin. The patch introduces the InnoDB-side support (as opposed to the server-side support) of attachable transactions. Attachable transaction is a tiny subclass of a nested transaction. Attachable transactions are AC-RO-RC-NL transactions (auto-commit, read-only, read-committed, non-locking). The patch does the following: - Adds asserts to verify that the attachable transaction: - doesn't take locks, - is READ-COMMITTED, - is READ-ONLY, - is AUTOCOMMIT. - Adds test cases to ensure that InnoDB handles attachable transactions properly. 	8bcb244ae40ab1406cddc941a20fa444c9a96e2f
----------------------------
"BUG#18385953 - RPL_GTID_STRESS_FAILOVER FAILS WITH ""ERROR IN SYNC_WITH_MASTER.INC"" This test failed sporadically in the cleanup code. The cleanup code contained this: for each server: DROP DATABASE --source include/stop_slave.inc CHANGE MASTER TO MASTER_AUTO_POSITION = 0; --source include/start_slave.inc The problem is that CHANGE MASTER will drop the relay logs.  If the IO thread was ahead of the SQL thread at this point, received and not-yet-executed transactions in the relay log would be lost.  Since it does not use the auto-position protocol when it does the start_slave.inc, replication would resume after the lost transaction rather than retransmit it. This caused two types of failures: 1. The IO thread could be stopped in the middle of a transaction, when the SQL thread had processed only up to the last complete transaction. Here all transactions consist of two events: Gtid followed by Query. Thus, the last received transaction was a Gtid and after start_slave.inc the slave would receive a Query. The slave SQL thread would then see a Query without Gtid. This looks like an anonymous transaction, which is not allowed when GTID_MODE = ON. So the SQL thread would stop with error 1782: ""Error '@@SESSION.GTID_NEXT cannot be set to ANONYMOUS when @@GLOBAL.GTID_MODE = ON.' on query. Default database: 'db_3'. Query: 'DROP DATABASE db_3'"". 2. The IO thread could be stopped between transactions, when the SQL thread had processed only up to the second-last transaction. Then the entire transaction would get lost. Later, in rpl_sync.inc, the GTID would not be received at all by the slave, so the sync would fail with a timeout. Fixed by dropping the databases and syncing all servers before stopping all the slave threads and executing CHANGE MASTER. "	07be0ac6e40b81eea735e09bc1f48887e8be9284
----------------------------
Bug#19424197 : MYSQLSLAP --SQL-MODE OPTION OF OUT ORDER IN --HELP MESSAGE --sql-mode option was added by WL#7764 to mysqlslap tool. It was added out of order in --help message. Fixed --sql-mode option position to appear in lexical order in the --help message. 	78c2d214d5cd26979ea2608bf7581b649f7f5e90
----------------------------
Bug#19179338 GET RID OF DYNAMIC_ARRAY IN RELAY_LOG_INFO AND DEFERRED_LOG_EVENTS Bug#19191355 PB2 A NUMBER OF RPL TESTS CRASHED THE SERVER IN METHOD LOG_EVENT::APPLY_EVENT Our array abstractions should be removed, and substituted with modern data structures. Templatized vectors are: - type safe - easier to read/maintain - faster Also: fix a bug introduced by WL#6964 MTS: Support SLAVE_TRANSACTION_RETRIES in MTS mode The curr_group_da array now contains Slave_job_item structs, rather than Log_event pointers. One part of that refactoring was missed, and we were still inserting pointers into the array. Also: make code more type-safe by changing Slave_job_item::data from void* to Log_event* 	f0406babedea2268fb04cc19cf4a423d1486c7bc
----------------------------
BUG#17286856 - SOCKET FILE OF A RUNNING MYSQLD INSTANCE CAN BE TAKEN OVER BY ANOTHER ONE. PROBLEM DESCRIPTION AND FIX: Multiple instances of mysqld can be started specifying the same unix socket socket file. When one instance of mysqld is shutdown, the unix socket file goes away. The fix is to use a lock file for each unique socket file name. The lock file contains the pid of the running mysqld instance it is attached to. If another instance with the same socket filename comes up, the lock file is checked and the pid of the process is read and it is checked to see if it is running via calling kill with signal 0. If so the current instance is not allowed to come up. Thus this prevents multiple of mysqld running on the same unix socket file. The lock pathname is the name of the unix socket file pathname with .lock appended, which by default is /tmp/mysql. sock.lock. 	251888c3d3c3d0c5b55cdecc9cd99e229b7081c4
----------------------------
"Bug#11762739: MYSQLD GENERAL LOG OUTPUT TO SYSLOG WL#7793: Add native support for syslog on unixoid platforms mysqld did not have native support for traditional unix-style syslog; it instead used a shell-script wrapper that would pipe the daemon's output to the syslog.  This implied certain limitations: - it was impossible to see the syslog status at runtime - it was impossible to change the syslog status at runtime - the shell script could interfere with log rotation - the setup would often result in log lines containing two timestamps a) add native syslog support for unixoid OSs. The following can be set a start-up as well as viewed and set at runtime via system variables (requiring the SUPER privilege). --log_syslog[=0|1] on/off switch, defaults to off --log_syslog_include_pid[=0|1] Include mysqld's process ID on each syslog line? Defaults to on.  (UNIX only) --log_syslog_facility=local5 choose the syslog ""facility"". Well-known facilities may be selected by name. Defaults to ""daemon"".  (UNIX only) --log_syslog-tag=<string> If empty and by default, an ident of ""mysqld"" is used. If e.g. tag ""abcd"" is supplied, ""mysqld-abcd"" will be used. (The hyphen will be used automatically, the user need not supply it.) b) refactoring: mysys/my_syslog.cc and sql/log.cc had some duplication of effort with regard to the Windows EventLog.  This patch attempts to eliminate the duplicates from log.cc, and merge the remaining useful code into my_syslog.cc so that other binaries may have a chance to benefit from it. c) Support features of a) on Windows where possible. d) Update mysqld_safe to use features of a) instead of trying to emulate them in the wrapper script where possible, with as little change in syntax as possible. Now incorporates following additions after review: - mysql-test-run.pl disables syslog/EventLog - mysqld--help-win.result updated to reflect the above - my_syslog.c: EventID temporarily wasn't used after refactoring - mysqld.cc: syslog activated earlier in start-up, for more information Syslog query on systemd platforms: journalctl -f SYSLOG_IDENTIFIER=mysqld-mytag -o json|jq '.SYSLOG_IDENTIFIER + "" "" + .SYSLOG_FACILITY + "": "" + .MESSAGE' 2>/dev/null "	173b6bb1e44bd9ea4d6b634b548d8689542c6d62
----------------------------
WL#6942 InnoDB GIS: Store GIS POINT datatype as fixed length column than BLOB We can store POINT as fixed length data(DATA_POINT) or var length data (DATA_VAR_POINT). A new session variable called innodb_optimize_point_storage is introduced to control the format of POINT we want. rb#3839, approved by Jimmy and Allen 	797ab9c396abc8347420eaa86206ffe194dca03e
----------------------------
Bug#19419463 ASSERT FROM->M_BYTE_COUNT == 0 AT SQL_DIGEST_STORAGE::COPY IN SQL_DIGEST.H Before this bug, a select from table performance_schema.events_statements_current could cause a failed assert in debug mode. The assert did fail under load, when reading the digest of a query that is concurrently starting. Note that tables - performance_schema.events_statements_history - performance_schema.events_statements_history_long are not affected by this bug, as only reading from a live query can expose the race condition found. The root cause is that the copy is doing a dirty read by design, but the code is not robust to handle data changing unexpectedly. Fixed sql_digest_storage::copy to be more robust. 	b1da60366be9892e62c577eccf78382b4b36c749
----------------------------
Bug #19435077 MYSQL_UPGRADE MUST HAVE --SECURE-AUTH OPTION DEPRECATED WL#7308 introduces rewritten mysql_upgrade. Before completion of WL#7308 the WL#8006 was pushed, which makes --secure-auth option in all clients deprecated. --secure-auth option is made deprecated. 	cc88307d9e03d64b34a3bbd6a6a6db8d65f0cd13
----------------------------
Bug#19229231 INNODB.LOG_FILE_NAME FAILS SPORADICALLY ON PB2 or revisiting Bug#11763660 PLEASE ASSERT INSTEAD OF CALLING EXIT(1) On crash recovery, InnoDB was calling exit() when noticing corruption or inconsistency. This call triggered a debug assertion failure ut_ad(!m_freed) in a I/O handler thread that was trying to acquire a mutex. A better solution is to return an error to the caller of innobase_init() and letting a proper shutdown happen. innodb.log_corruption: Adjust the excepted message. We no longer trigger a crash (assertion failure) when noticing a corrupted log record. fil_op_replay_rename(): Return whether the operation was successfully processed. The operation can fail if both the old and new name exist, and the old name is for the requested tablespace_id. recv_sys_t::found_corrupt_fs: A new field, to be set when inconsistency between the redo log and the file system is detected and manual intervention is needed. fil_name_process(): Set recv_sys->found_corrupt_fs when needed. fil_name_parse(): When finding invalid contents inside a MLOG_FILE_* record, let the caller know the presumed length of the record.  When failing to replay a MLOG_FILE_RENAME operation, set recv_sys->found_corrupt_fs. recv_report_corrupt_log(): Return whether processing should continue. (If innodb_force_recovery is set, it may continue.) recv_parse_log_recs(): Return true also if processing was aborted due to corruption. This will let the caller stop the processing. recv_scan_log_recs(): Check for recv_sys->found_corrupt_fs. recv_group_scan_log_recs(): If corruption was noticed, return false. recv_recovery_from_checkpoint_start(): Return an error to the caller if recv_sys->found_corrupt_log or recv_sys->found_corrupt_fs is set. Add a missing log_mutex_exit() call to apparently uncovered error handling code. innobase_start_or_create_for_mysql(): Remove a check if pthread_mutex_trylock() works, and the associated exit() call. rb#6341 approved by Jimmy Yang 	d50a9ab252e75e5ef3bfc0bf13af6c99fa00a142
----------------------------
Bug#12368204: AUDIT PLUGIN API: NO MYSQL_AUDIT_GENERAL_LOG NOTIFICATIONS WITH GENERAL L ISSUE: Audit notification for MYSQL_AUDIT_GENERAL_LOG events is not generated without general_log enabled. Currently to write a audit_log plugin which logs MYSQL_AUDIT_GENERAL_LOG events we have to enable the general log also. To log general_log events server checks for general_log handlers. If no handler is found it does provide any notification to audit_log plugin. SOLUTION: Server should provide notification to audit_log plugin regardless of any handlers (general_log enabled) present in the list. Moving out the audit_log function from the check and making sure its always called when a general_log event occurs. 	0beb6e39a58b68eb712a9627adf3f6eaefa88e29
----------------------------
"BUG#17326020 ASSERTION ON SLAVE AFTER STOP/START SLAVE USING MTS+GTID REPLICATION Problem: ======= When the IO thread reconnects to a master using GTID auto positioning while in the middle of a transaction, it will left the partial transaction on the relaylog and will fully retrieve the same transaction again. If the slave is configured to use MTS, it will hit an assert ""!worker"" once reaching the ROTATE_LOG_EVENT send by the master in the IO thread reconnection. Analysis: ======== Once a slave with MTS reaches the beginning of a group (by an GTID_LOG_EVENT or QUERY(BEGIN)), it will expect to feed the same worker with events until reaching the end of the transaction. No events that should be applied synchronously (by the MTS coordinator with all workers waiting for jobs) can be applied while MTS is feeding a worker with events. The assertion exists to stop the server execution in such situations. The correct behavior of the slave once knowing that a transaction was left in the middle and will not finish (as it will be applied again from the beginning later) is to abort this transaction. STS SQL thread knows how to rollback the incomplete transaction, but MTS doesn't know how to do it yet. Fix: === The SQL slave will now check if it is going to apply a synchronous ROTATE_LOG_EVENT sent by the master during GTID auto negotiation after IO thread reconnection. Before applying this ROTATE_LOG_EVENT, the SQL slave will check also if it is in the middle of a group. If it is, it will queue to the current worker a QUERY(ROLLBACK) event to make the worker gracefully finish its work and, only then, will let the MTS coordinator to apply the ROTATE_LOG_EVENT in synchronous mode. @ sql/rpl_slave.cc Added code into exec_relay_log_event() to inject a QUERY(ROLLBACK) event if necessary to make the current worker gracefully finish its job before applying an event that needs synchronous MTS execution. "	85e4d1805752dfffaf928f6ad57d6445504696ef
----------------------------
WL#6964 MTS: Support SLAVE_TRANSACTION_RETRIES in MTS mode Removed the unnecessary statement 'SELECT @@slave_parallel_type' which would have different result and cause a test failure if LOGICAL_CLOCK was set as the default through mysqld option. 	f99c44e6dc649d31bd71ea9b72f5a587a407eeb2
----------------------------
Bug#17879675:SHUTDOWN HANG IF SEMISYNC IS ENABLED AND SLAVE ABORT Problem: ======== Step 1. enable semisync and set a big value for rpl_semi_sync_master_timeout. Step 2. kill io thread of slave, so the threads on master will keep on WAITING ACK FROM SLAVE. Step 3. shutdown the master ---hang Analysis: ======== On master when semisync is enabled the transaction thread will wait for an ack from the slave in a conditional timed wait. Since the IO thread is already killed and on master a huge timeout value is set transaction thread will continue to wait for an ack for a long time. At this time if shutdown command is issued dump thread will try to go down. But dump thread when goes down it has a check if user has enabled rpl_semi_sync_master_wait_no_slave or not. If it is enabled dump thread will go down without switching off semi sync. Transaction thread will continue to wait for an ack even when slave count drops to zero. Because of this shutdown also will wait for the transaction thread to go down and shutdown hangs. Fix: === At the time of shutdown if dump thread finds that there no semi sync slaves that are connected to master it will switch off semisync even when rpl_semi_sync_master_wait_no_slave is set to on. i.e if shutdown finds no slaves are there to provide ack it will not honour rpl_semi_sync_master_wait_no_slave and it will switch off semisync. The transaction thread when woken up realises the semi sync is switched off it will not wait any more for ack it will continue and shutdown will be complete. When semi sync is forcefully shutdown at the time of waiting for an ack a warning is written to error log to convey to users that it was forceful shutdown. There can be a scenario where dump thread is already gone and transaction thread still waits for an ack. Hence a similar fix is implemented for the waiting transaction thread. I.e at the time of shutdown the thread gets a wakeup signal and it checks if shutdown is in progress if no slaves are connected then it will switch off the semi sync. 	a41e4d1263c0448f489b9275ce373b16b7bb8e6c
----------------------------
WL#6964 MTS: Support SLAVE_TRANSACTION_RETRIES in MTS mode Postfix: Fixed the valgrind warning that trans_retries was not initialized. And a possible memory leak on the allocated Log_event if it was a Rotate_log_event or other types of event didn't belong to the transaction. 	eb76050c8b0016b21dc90ab6166d218ea40cc9c9
----------------------------
WL#6964  MTS: Support SLAVE_TRANSACTION_RETRIES in MTS mode DESCRIPTION =========== This patch implemented slave_transaction_retries feature on multi-threaded slave. Workers can retry the transactions being applied automatically if any temporary error is encountered. Basically, the behaviour of retrying transaction on multi-threaded slave is same to the behavior of retrying transaction on singled-threaded slave. Definitions of temporary error are same, and sleep policies are same too. DESIGN ====== - How To Retry The worker reads the transaction's event from relay logs and applies them. But it just reads and applies the events from the first one to the one on which temporary error happens. The following events are still in job queue, so they are not read from relay logs. - How To Know Events' Positions of The Transaction When coordinator dispatches each event to a worker, it stores the event's position (relay log name and offset) into Slave_job_item structure together with the event. To minimize the performance impact, relay log name is not stored as a string. As you know, relay log's extension is an auto-increment number. So we just store the number as a integer into Slave_job_item. Workers can construct the real relay log name by using relay_log_basename server variable and the number. NOTE: Workers may construct a wrong relay log name if users have changed relay log base name and events of the transactions are in the relay log with old basename. In this case, slave will stop with an error. 	d7c2070c7de6a899bed68717e54f07a2f4146a87
----------------------------
bug#14041454: INNODB.INNODB_BUG-13628249 TEST FAILS SPORADICALLY ON PB2 Added abort if shutdown_server failed in mysqltest. On windows abort is simulated by creating a minidump file if core_file variable is ON. Also included more information in the minidump file to help crash analysis on Windows. Also some minor typing errors fixed in mysqltest. 	ea9b8ebf89e02a2c54778f3e59031c53e2081e65
----------------------------
"Bug#11762739: MYSQLD GENERAL LOG OUTPUT TO SYSLOG WL#7793: Add native support for syslog on unixoid platforms mysqld did not have native support for traditional unix-style syslog; it instead used a shell-script wrapper that would pipe the daemon's output to the syslog.  This implied certain limitations: - it was impossible to see the syslog status at runtime - it was impossible to change the syslog status at runtime - the shell script could interfere with log rotation - the setup would often result in log lines containing two timestamps a) add native syslog support for unixoid OSs. The following can be set a start-up as well as viewed and set at runtime via system variables (requiring the SUPER privilege). --log_syslog[=0|1] on/off switch, defaults to off --log_syslog_include_pid[=0|1] Include mysqld's process ID on each syslog line? Defaults to on.  (UNIX only) --log_syslog_facility=local5 choose the syslog ""facility"". Well-known facilities may be selected by name. Defaults to ""daemon"".  (UNIX only) --log_syslog-tag=<string> If empty and by default, an ident of ""mysqld"" is used. If e.g. tag ""abcd"" is supplied, ""mysqld-abcd"" will be used. (The hyphen will be used automatically, the user need not supply it.) b) refactoring: mysys/my_syslog.cc and sql/log.cc had some duplication of effort with regard to the Windows EventLog.  This patch attempts to eliminate the duplicates from log.cc, and merge the remaining useful code into my_syslog.cc so that other binaries may have a chance to benefit from it. c) Support features of a) on Windows where possible. d) Update mysqld_safe to use features of a) instead of trying to emulate them in the wrapper script where possible, with as little change in syntax as possible. "	91d4e9555b8be0f5be22970de7a220f2196ca4f9
----------------------------
BUG#16741603: MYSQLD SCANS ALL BINARY LOGS ON CRASH RECOVERY Mysql server iterates backwards through binary logs, looking for the last binary log that contains a Previous_gtids_log_event for gathering the set of gtid_executed, and iterates forwards through binary logs, looking for the first binary log that contains both Previous_gtids_log_event and gtid_log_event for gathering the set of gtid_purged on crash recovery. Mysql server also iterates forwards through binary logs, looking for the first binary log that contains both Previous_gtids_log_event and gtid_log_event for gathering the set of gtid_purged when purging binary logs. This may take very long time if the mysql server has many binary logs and almost all of them are out of filesystem cache. To fix the problem, introduce an option 'simplified-binlog-gtid-recovery', whose default value is false. If the option is enabled, we do this: In the first scan (where it iterates over binary logs from the newest to the oldest): If the last binary log does not contain any GTID event, do not read any more binary logs, and set GTID_EXECUTED = '' and GTID_PURGED = ''. Otherwise, initialize GTID_EXECUTED as usual. Then, in the second scan (where it iterates from the oldest to the newest): If the first binary log does not contain any GTID event, do not read any more binary logs, and set GTID_PURGED = ''. 	7d6d053dabbdf0b842eae5e82abbc0b3bd9dc29f
----------------------------
WL#7764: Make STRICT mode for transactional SEs default in 5.7 Change default SQL mode from 'NO_ENGINE_SUBSTITUTION' to 'NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES'. Introduce command line option --sql_mode to mysqlslap tool. This facilitates to emulate client load in user defined SQL mode. 	cef46617b9449e9dcfc475a53b6f5af17ad1c3cf
----------------------------
WL#7802 PERFORMANCE_SCHEMA BATCH TABLE IO Improved test cases 	91a9091be42f311ee2987144518039ab63887440
----------------------------
"Bug#17867478 BINLOG.BINLOG_SERVER_START_OPTIONS FAILING DUE TO ERROR IN SERVER LOGS Problem: An error in the logs is causing the test to fail Analysis: If one has a closer look at the issue has always been there. But since mysqld was waiting for an error, the test didn't failed when mysqld crashed because a the missing property. But i went further on the analysis and the test was not testing what was coded, which was ""if the param 'datadir' is empty then we should switch its value to point to the actual 'datadir'"" This possibly corrects also other bugs. Fix: Rewrite the mysql test to check if the modification of the variable value suceeded only on the context of rpl_make_log_name. "	79101e63ccff68391d6592857a68bf13673a4188
----------------------------
- WL#6965: Truncate UNDO logs. - Renamed innodb_undo_truncate to innodb_undo_log_truncate based on review comments to clarify the context of truncate is undo log. 	0682c3cabf3995ff832301899064fc8040972acd
----------------------------
"Bug #18415196 MYSQL_UPGRADE DUPLICATE KEY ERROR FOR MYSQL.USER FOR 5.5.35+, 5.6.15+, 5.7.3+ Description: mysql_upgrade fails with below error, when there are duplicate entries(like 'root'@'LOCALHOST' and 'root'@'localhost') in mysql.user table. ERROR 1062 (23000) at line 1140: Duplicate entry 'localhost-root' for key 'PRIMARY' FATAL ERROR: Upgrade failed Analysis: As part of the bug 12917151 fix we are making all the hostnames as lower case hostnames. So, this has been done by mysql_upgrade. In case of above mentioned duplicate entries mysql_upgrade tries to change hostname to lowercase. Since there is already 'root'@'localhost' exists. it is failing with ""duplicate entry"" error. Fix: Since its a valid error failure. We are making the error more verbose. So, that user will delete the duplicate errors manually. Along with existing error we are printing below error as well. ERROR 1644 (45000) at line 1153: Multiple accounts exist for @user_name, @host_name that differ only in Host lettercase; remove all except one of them "	91dafff1b0537784c8e92fd5161ae6d223efc2c7
----------------------------
Fix for bug #19192826 and bug #19192849 * Added $basedir/sbin to the list of directories to search for mysqld * added $basedir/share/mysql/english to the list of directories to search for language * Addressed a failure to set the group id reported by Sunanda 	6e22d0fb0710a334ac8109dd17a78d948c2d6936
----------------------------
WL#7445 PERFORMANCE_SCHEMA, SX-locks Implemented code review comments. 	7a0ffb760dd75c1c855aea863861a2e41739c21c
----------------------------
"Bug#19129559 -  pb2 main.max_statement_time.test crashing the server in weekly trunk. Analysis: --------- This test is failing because few reasons, 1. Issue mentioned in the bug report: (Started failing on Window from some time 21 June) qld-debug.exe!timer_notify_thread_func()[win_timers.c:78] 7ff74fe2b42e    mysqld-debug.exe!pfs_spawn_thread()[pfs.cc:2074] 7ff74f92d306    mysqld-debug.exe!pthread_start()[my_winthread.c:73] 7ff74ff964f5    mysqld-debug.exe!_callthreadstartex()[threadex.c:376] 7ff74ff96747    mysqld-debug.exe!_threadstartex()[threadex.c:359] 7ff86d0015dd    KERNEL32.DLL!BaseThreadInitThunk() 7ff86f6343d1    ntdll.dll!RtlUserThreadStart() => This issue is seen on Windows 64 bit machines. In function ""timer_notify_thread_func"" pointer value of timer object is stored in ULONG variable then type casted to pointer of my_timer_t. This works well in 32 bit machine and 64 bit machine until address crosses 2^32 value. Windows 64 is of LLP64 model. So ULONG variable is of 32 bit and pointer is of 64 bit. Because of this pointer value was getting corrupted when 64 bit value is stored in 32 bit ULONG type variable. Accessing this memory was causing an issue on Windows 64. To fix this issue, changed type of variable from ULONG to ULONG_PTR. 2.  (Sporadic failure) mysqltest: At line 472: query 'SELECT CONVERT(VARIABLE_VALUE, UNSIGNED) INTO @qc_hits FROM INFORMATION_SCHEMA.GLOBAL_STATUS WHERE VARIABLE_NAME = 'Qcache_hits'' failed: 1909: Query execution was interrupted, max_statement_time exceeded => Issue here is, max_statement_time is set 50 milliseconds and assumption was ""SELECT CONVERT(VARIABLE_NAME,...."" returns withing 50 millisecond. But on some slow platforms it took more than that so query terminated. To fix this issues, Changed session max_statement_time to 0. 3.  (Sporadic failure) mysqltest: At line 119: query 'SELECT * from t1' succeeded - should have failed with errno 1909... =>Issue here is, max_statement_time at session level is set to 2 milliseconds and query ""SELECT * FROM..."" is executed. Here, expectation is SELECT will take more than 2 milliseconds but on some platforms it returned before 2 millisecond. So it is not timed out. To fix this issues, changed query to select *, sleep(0.5) FROM t1; Now sleep(0.5) is executed for each row. This will make query execution time greater than 2 microsecond. 4.  (Sporadic failure) SET @@SESSION.max_statement_time = 950; SELECT SLEEP(1); SLEEP(1) -1 +0 => Test case 10, checks timer precision. In this test case, query calls sleep(1) function and for that timer with different timeout values are set. And expectation is, if timer is set for less than 1 sec then sleep should be interrupted. But, max_statement_time is a soft hint for queries, on loaded machines or slow machines time taken notify thread after timer expiration would be little bit more. Because of this sleep() is not interrupted. We can reduce statement execution timeout value, but test case to check timer precision will be incorrect. Not changing test case will result in sporadic test case failure. Removed this test case to avoid sporadic failure. 5. (sporadic failure) @@ -151,7 +151,7 @@ ERROR HY000: Query execution was interrupted, max_statement_time exceeded SELECT @a; @a -1 +NULL => Here we set sessions level max_statement_time to 2 and execute stored function having ""SELECT SLEEP(2) INTO @a"". After SELECT query interruption value of variable @a is printed. But some times, the SELECT is interrupted before populating variable. Actually test case is verified by checking error reported. We need not have to print variable value here. To avoid this failure, removed ""SELECT @a"" statement. "	23c609d298c8c8798f0d35a19f93f568fdef3bae
----------------------------
"WL#8006: remove mysql_old_password * Marked server-side --secure-auth as a ""zombie"" option: can't set it to anything but 1. Throws a warning when used. * Marked client-side --secure-auth option as a ""zombie"" option. Returns a deprecation warning when used.And returns an error is anything but 1 is specified. * Removed mysql_old_passwords server plugin * Removed mysql_old_passwords libmysql plugin * old_passwords server side option does not allow setting to 1. So it's only 0 and 2 * Removed the OLD_PASSWORD() SQL function. * Multiple internal special cases clean up from the server. * Cleanup of the test cases testing old_password * Update of the relevant test cases to cover the new functionality. * Created a macro for the deprecation warning in the client tools. * Explictly marked --secure-auth as zombie in the help text too. * Removed all the calls to mysql_options(MYSQL_SECURE_AUTH) from the client tools. * Added a check to mysql_options(MYSQL_SECURE_AUTH) to generate an error if value is anything but 1 * Removed the SKIPSECUREAUTH mysqltest connection option. * Cleaned up trailing space. * Removed references to old_plugin from scripts/ "	a7cd8b08443320a2d73279690282b5eadb300e41
----------------------------
WL#7976: Deprecate skip-innodb in 5.6, remove in 5.7. This patch marks the InnoDB plugin as mandatory, meaning that there is no way to disable it from the configuration (including command line options). Added a test case to ensure that there is no way to disable InnoDB. 	4ad284c2142afd4b20815fc6ddbdfca5925472d9
----------------------------
Fix Bug 19204759 - DAEMON_MEMCACHED_OPTION NOT SHOWN CORRECTLY rb://6072 approved by Sunny Bains 	7a2481c0c77e22957bbfd9e7bc58c1e173249b8a
----------------------------
making rpl.rpl_server_uuid experimental on windows 	7c2f11d4d3679ceefa566282896ad1cf51670db3
----------------------------
WL#7796 - WAIT_FOR_EXECUTED_GTID_SET This worklog aims at adding a new sql function WAIT_FOR_EXECUTED_GTID_SET which make the current syncing option for the slave with master independent of the slave threads. The use of the new function will be : WAIT_FOR_EXECUTED_GTID_SET(GTID_SET [, TIMEOUT]) Wait until all the transactions whose global transaction identifiers are being specified, are contained in gtid_set. ie. After this function returns with success, it must hold that GTID_SUBSET(GTID_SET, @@global.gtid_executed) returns true. 	a26f72732b3cd87d5573b7b30b9db8bbb7f0dcc5
----------------------------
WL#7777 Integrate PFS memory instrumentation with InnoDB Followup to: vasil.dimov@oracle.com-20140711135727-3jtss2fq6c7diyhb adjust mtr result files after lifting the limits of performance_schema_max_memory_classes. 	3fc0578bcec5f0ae31ae5adf9abf61a310c686bc
----------------------------
"BUG#18472603 SQL THREAD COMMITS PARTIAL TRANSACTION WITH GTID AND AUTO POSITIONING ENABLED Problem: ======= When using GTID with auto positioning, if the IO thread restarts it might be stopped in the middle of a transaction and will ask the master for the whole transaction again. When the SQL thread reads this stream of events, it should rollback the partial transaction before starting the complete one, but it is only rolling back the previous GTID set, and setting the new GTID, letting the partial transaction untouched. The effect of this problem is that the SQL thread is committing the partial transaction left on the relay log before IO thread restart once it reaches the ""BEGIN"" of the transaction right after the partial transaction, consuming the GTID. When trying to commit the complete transaction, the SQL thread is stopping with ER_GTID_NEXT_TYPE_UNDEFINED_GROUP, because the GTID was already consumed by the partial transaction. By restating the SQL thread, it will try to apply the complete transaction again from the beginning. Unfortunately, SQL thread will silently skip the complete transaction as the GTID is already logged. Analysis: ======== There were two issues related to the reported problem: one related to master's dump thread and how it clears the ""created"" variable of it's FD event before sending it to the slave; other related to SQL thread rolling back partial transactions relying only on master's FD event ""created"" variable. Master's dump thread clearing FD's ""created"" variable ----------------------------------------------------- When not using GTID protocol, the dump thread sends the original master's binlog FD to the slave with it's original ""created"" variable set only if the slave asked for FD event position (4). If the slave asked for a position greater than 4, the dump thread assumes that it must clear the ""created"" variable before sending the FD event to the slave. So, the slave will only have this ""created"" set in master's FD event if the master has just (re)started. Assuming that if the master sent partial transaction before ""crashing/recovering"" and it also lost temporary tables, the ""created"" variable set in master's FD event will instruct the slave do two tasks: a) Rollback current transaction (if there is one); b) Drop the temporary tables; For GTID protocol, the master was always sending the original FD of the binlog. So, if a slave reconnected asking for transactions in the first master binlog file, it was receiving an FD event with the ""created"" variable set, making slave to rollback the current transaction (not a problem here, as the whole transaction would appear again in the relay log) and dropping the temporary tables (this was a problem). SQL thread rolling back partial transactions -------------------------------------------- SQL thread relied on master's FD ""created"" variable to rollback partial transactions left on the relay log by a master crash, but there was no mechanism to do the same for partial transactions left on the relay log by the GTID protocol. The ""created"" flag on master's FD seemed to be an effective way but worked only when the master was in the first binlog after it's startup. After the first binlog rotation, and before restarting the server again, all master FD's will not have the ""created"" variable set. So, a slave reconnecting and asking for transactions to any master binlog file but the first didn't rolled back the partial transactions left by GTID protocol. The only effective way to SQL thread know that the IO thread has left partial transactions in the relay log when using GTID protocol is by verifying if the SQL thread has a partial transaction when applying a Gtid_log_event. In this case, the SQL thread should rollback the whole partial transaction, and not only the GTID. Fix: === Master's dump thread must clear ""created"" variable on the FD event before sending it to slave if the slave already has the first transaction in the masters binlog file. SQL thread cannot rely only in master's FD event to rollback partial transactions left by GTID protocol on relay log. It must also rely on Gtid_log_events being applied before committing transactions. @ sql/binlog.cc / sql/binlog.h Changed read_gtids_from_binlog() and find_first_log_not_in_gtid_set() to return the first GTID found on the binlog file if asked. @ sql/rpl_master.cc Added code to mysql_binlog_send() to obtain the first GTID of the binlog file to be sent to slave, and to verify if slave already has this first GTID before sending the FD event, cleaning the ""created"" variable in this case. @ sql/rpl_slave.cc Added a debug point to help test case design. @ sql/log_event.cc Added code to make the Gtid_log_event to rollback the incomplete transaction before rolling back the GTID. "	ef3c0f2b48f272908b30009a362b8d59529c92c2
----------------------------
"BUG#18652178 STOP SQL_THREAD, START SQL_THREAD CAUSES A TRX TO LOG WITH A DIFFERENT GTID BUG#18306199 START SLAVE UNTIL MASTER_LOG_POS=MIDDLE-OF-GTID-EVENT STOPS BEFORE TRANSACTION Problem: ======= Slave loses track of GTID-header group boundaries when the group spans across multiple relay log files. This means that when the transaction is retried, or if you stop the SQL thread in the middle of a transaction after some Rotates (considering that the transaction/group was spanned into multiple relay log files), the Gtid_log_event will be silently skipped on slave, and the transaction will be logged with a slave's GTID. Also, when using ""START SLAVE UNTIL MASTER_LOG_POS = x;"", if ""x"" is in the middle of a transaction, the server is supposed to complete the transaction. This works fine when GTIDs are disabled. However, when GTIDs are enabled, if ""x"" is in the middle of the Gtid_log_event, it will stop before the transaction, not considering the Gtid_log_event as the beginning of the transaction. Analysis: ======== When Rotate events are applied at the slave, the SQL thread verifies if it is not inside of a transaction to update SQL thread position. For STS, the SQL thread uses the Relay_log_info::is_in_group() function to determine if it is inside of a transaction. It was found a problem in Relay_log_info::is_in_group(). It wasn't considering a Gtid_log_event as the beginning of a group/transaction. Because of this problem, the SQL thread was updating its position when applying a Rotate_log_event that immediately follows a Gtid_log_event (i.e., in the middle of a transaction but outside BEGIN...COMMIT). This should not happen, as SQL thread position should not be updated in the middle of a transaction so it could retry (or re-apply) the transaction from the beginning in the case of failures because of InnoDB deadlock or because the transaction's execution time exceeded InnoDB's innodb_lock_wait_timeout (or in the case of a request to stop the SQL thread). For the problem with ""START SLAVE UNTIL MASTER..."", the SQL thread uses the Relay_log_info::is_until_satisfied() function to verify if the until condition is satisfied. In this function, when the until condition is UNTIL_MASTER_POS, the SQL thread will use the current transaction position if in the middle of a transaction or the current event position if not in the middle of a transaction. This verification wasn't considering an Gtid_log_event as the beginning of a transaction. Fix: === Made Relay_log_info::is_in_group() to check if the thread has a GTID set to the current transaction. If so, it will return true, stating that it is already in a group. Made Relay_log_info::is_until_satisfied() to use the is_in_group() function to verify if the SQL thread is in the middle of a transaction. With this change, is_until_satisfied() will consider the Gtid_log_event as part of the transaction. "	aca2c83266d52608548d6c687341c31f331455fd
----------------------------
WL#7777 Integrate PFS memory instrumentation with InnoDB Followup to: vasil.dimov@oracle.com-20140711135727-3jtss2fq6c7diyhb adjust mtr result files after lifting the limits of performance_schema_max_memory_classes. 	e2aaa38c8b71921948d1cffb51a30af18798bae5
----------------------------
Merge: f217d68 2ecfd75 Bug#18731211  Duplicate slave server_uuid in replication forum gives no specific error message Merge from mysql-5.6 	945a261aec9846bd726681b75be4f13c907ef2cd
----------------------------
"Bug#18731211  Duplicate slave server_uuid in replication forum gives no specific error message Problem & Analysis: =================== When a new slave joins to a replication forum with uuid which is exactly same as one of the existing slave's uuid, then master is confused between old slave and the newly joined slave. When com_binlog_send request comes from newly joined slave, it thinks that old slave's dump thread is zombie and kills it. After some time, old slave tries to reconnect to the master and sends com_binlog_send request to Master. Then Master thinks that newly joined slave's dump thread is zombie and kills it. This ping-pong reconnections between Master->old_slave and Master->new_slave happens continously. This is known expected behaviour but the error message in old_slave and new_slave's error log file is not clear enough to identify this situation. Information in error log file was: ""received end packet from server, apparent master shutdown"" which does not say anything about server_uuid misconfiguration in the replication forum. Fix: Changing the error message which clearly mentions all the possible causes which resulted this disconnection. New information in error log file is: ""Slave: received end packet from server due to dump thread being killed on master. Dump threads are killed for example during master shutdown, explicitly by a user, or when the master receives a binlog send request from a duplicate server UUID <server_uuid>. "" And also a NOTE is added on master's error log file with the following information when log_warnings is greater than 1. ""While initializing dump thread for slave with UUID <slave_uuid>, found a zombie dump thread with the same UUID. Master is killing the zombie dump thread."" "	2ecfd75b12541bcb70c6dd4dcd0bc2be4df63f79
----------------------------
Merge: 0ef9305 1c8f9d3 Bug#14757009: WHEN THE GENERAL_LOG IS A SOCKET AND THE READER GOES AWAY, MYSQL QUITS WORKING. Merging from 5.6 to trunk. 	dda1847943ad3f3dffa906142aaa2567bc5e6ac5
----------------------------
Merge: 80e8613 e3731ef Bug#14757009: WHEN THE GENERAL_LOG IS A SOCKET AND THE READER GOES AWAY, MYSQL QUITS WORKING. Merging from 5.5 to 5.6. 	1c8f9d36a412198f3ecfa0e7b51606535b325aa9
----------------------------
Bug#14757009: WHEN THE GENERAL_LOG IS A SOCKET AND THE READER GOES AWAY, MYSQL QUITS WORKING. Analysis: ----------------- Issue in this bug and in bug 11907705 is, the socket file or fifo file is set for general log at command line while starting the server. But currently, only regular file can be set for the general log. Instead of reporting any error, the provided files are opened for writing and continued. Because of this issues mentioned in the bug reports are seen. As mentioned, only when any non-regular file is set for general log at command line while starting the server, these issues are seen. If general log file is set to non-regular file from CLI using system variable general_log_file then error is reported. These issues can also be faced with slow query log file, if it is set to non-regular file. Fix: ----------------- Currently while starting the server if we fail to open log file then we report an error, disable logging to file and continue. To fix issue reported code is modified to check whether file is regular file or not before opening it. If file is not a regular file then error is logged to error log and logging to file is disabled. 	e3731ef6bbe047c326d08ac20f8da14df5df91e7
----------------------------
- WL#6965: Truncate UNDO logs. - Added test case to cover boundary value scenario for innodb_max_undo_log_size. 	928cce084eaeff9fc4864dba6601ce0e612acad4
----------------------------
- WL#6965: Truncate UNDO logs. - Increased the limit of innodb_max_undo_log_size from LONGLONG_MAX to ULONGLONG_MAX. 	67bfd90f2d7c2a91f1984007a7477ae23f8ced74
----------------------------
"Bug #19140865 	PB2 INNODB_ZIP.INNODB_4K AND INNODB_ZIP.INNODB_8K TEST FAILS FOR RESULT MISMATCH PB2 innodb_zip.innodb_4k and innodb_zip.innodb_8k test fails for result mismatch. The result mismatch is introduced after 'gtid_executed' table is introduced in wl#6559. We missed to update it. So fix to update it. "	3df594793cba78889c594b5bfb514d596b072acd
----------------------------
"WL#7777 Integrate PFS memory instrumentation with InnoDB Increase performance_schema_max_memory_classes: max from 256 to 1024 default from 250 to 1024 InnoDB will add about 100-200 new entries. Approved by:	Marc Alff (via email) "	84af3d896e85cd5874aab0a5027928d4a403d3ae
----------------------------
Bug#19179338 GET RID OF DYNAMIC_ARRAY IN RELAY_LOG_INFO AND DEFERRED_LOG_EVENTS Some tests are failing when run with: --mysqld=--slave-parallel-workers=4 --mysqld=--slave-transaction-retries=0 --mysqld=--slave-parallel-type=database rpl.rpl_row_corruption rpl.rpl_row_idempotency rpl.rpl_rotate_row_trans ... Revert by doing: bzr merge -r 8421..8420 . 	685bc03861713de69f6159219288522ae7e53af7
----------------------------
Bug#19179338 GET RID OF DYNAMIC_ARRAY IN RELAY_LOG_INFO AND DEFERRED_LOG_EVENTS Our array abstractions should be removed, and substituted with modern data structures. Templatized vectors are: - type safe - easier to read/maintain - faster 	6d76589bf474ef57cb50f086cf5bc8722728692d
----------------------------
Bug#19142753 ASSERT: MODE !=LOCK_X || LOCK_TABLE_HAS(THR_GET_TRX(THR), INDEX->TABLE, LOCK_IX) WL6742-Improve InnoDB SELECT COUNT(*) performance by using handler::records() introduced new functionality in InnoDB. handler::records can now fail in ways never seen by the server before. This improved things on the InnoDB side: kevin.lewis@oracle.com-20130626194505-muocxuem7bd2wiw8 bug#16802288 - FAILING ASSERTION: PREBUILT->SQL_STAT_START || TRX->STATE == TRX_STATE_ACTIVE Add error handling for DB_DEADLOCK and DB_LOCK_TABLE_FULL to handler::records() for COUNT(*).  Also rollback transaction when handler::records receive DB_DEADLOCK, DB_LOCK_TABLE_FULL or DB_LOCK_WAIT_TIMEOUT. However: thd_mark_transaction_to_rollback() isn't enough. The optimizer needs to abort immediately for the cases mentioned above. Fix: improve error handling for all calls to handler::records() Add a new public function ha_records() which does the error checking, make handler::records() protected. 	75fd543a496cd58f5a5eb23c84bf1ead4bc83dc5
----------------------------
"Bug#16953758: PREPARED STATEMENT IS WRITTEN TO GENERAL QUERY LOG AFTER ITS EXECUTION IS FINISH When general-logging, the ""Execute"" line for prepared statements was always written after that execution. The Execute line will be written before execution, same as for other statements, for consistency, and so if something crashes, we'll be able to more easily tell what it was. audit_plugin.test: Since general-logging (and therefore the call to audit plugins) happens before execution now, the SHOW counter will be one higher now (it ""sees itself"", so to say). Expected behaviour, test adjusted. "	fe9006eb0e7edb01b161d80687058130273e6fff
----------------------------
WL#6117 InnoDB: Resize the InnoDB Buffer Pool Online - 'innodb_buffer_pool_size' is changed to 'Dynamic Variable' (The Default value is still 128M. not changed.) - able to monitor progress of resizing buffer pool (by global status 'innodb_buffer_pool_resize_status' or server error log) - 'innodb_buffer_pool_chunk_size' is a new global read-only variable, default value is 128M. The 'innodb_buffer_pool_chunk_size' unit is 1M. And the actual buffer pool size is always aligned to 'innodb_buffer_pool_chunk_size' * 'innodb_buffer_pool_instances' granularity. (rb#4225 : Approved by Vasil and Sunny) This push also contains following bug fixes: Bug#19001299 : SEGV WHILE INITIALIZING BUFFER POOL Bug#19069698 : ASSERT BTR_SEARCH_ENABLED IN PURGE AFTER SET GLOBAL INNODB_ADAPTIVE_HASH_INDEX=0 	c5e6841707828dd7b596d302ec78c43f903db4d6
----------------------------
WL#6711: Made the result file of internal_tmp_disk_storage_engine.test stable. 	d14634ff100ad57269006e1a77c9f3f5b0f4807a
----------------------------
Bug#19157369 GET RID OF DYNAMIC_ARRAY IN RELAY_LOG_INFO::WORKERS Our array abstractions should be removed, and substituted with modern data structures. Templatized vectors are: - type safe - easier to read/maintain - faster 	93bda71b598c51582765a4d7a94580eecdf3036c
----------------------------
Make innodb.blob_page_reserve innodb.log_file_size_checkpoint sys_vars.log_slow_admin_statements_func no_valgrind_without_big since they take more than 5 mins to run. 	123a5969d08d036028208c078e499b2af6bdd65c
----------------------------
Bug#18404381: REMOVE UNNEEDE CMAKE CHECKS AND #IFDEFS IN 5.7.5 Patch #3: This patch does the following: - Remove the HAVE_WVLA check since all used versions of GCC/Clang now supports -Wvla - Remove HAVE_GETCURRENTPROCESSORNUMBER as it is true on all supported Windows versions - Remove workaround for old Intellisense bug - Unconditionally define S_IROTH/S_IFIFO on Windows rather than doing a check with hardcoded result - Use SIGTERM/SIGINT explicitly on Windows rather than define SIGQUIT/SIGPIPE to them - Use isnan() directly on Windows, remove unneeded check - Typedef ssize_t on Windows rather than doing check with hardcoded result - Remove HAVE_SCHED_H and HAVE_PTHREAD_YIELD_ZERO_ARG checks, results not needed anymore - Remove HAVE_MMAP, always true - Remove HAVE_SCHED_YIELD, always true on non-Windows - No point in testing size of char, defined to 1 in standard - Remove inline check, explicitly define for Visual Studio in C mode instead - Combine separate C/C++ checks for builtin_unreachable as we now always use the same compiler for C/C++ - Remove HAVE_ACCESS, was never defined. Update code to work like intended. - Set SOCKET_SIZE_TYPE, size_socket and sigset_t and mode_t using typedef rather than CMake #define - Remove unused FN_NO_CASE_SENCE, ulong_to_double() and table_case_convert(). - Remove use of non-standard pthread_yield(), use POSIX standard sched_yield() instead - Remove unneeded thread pool config.h.cmake, add missing WindowsCache.cmake entry - Rewrite InnoDB CMake futex check to avoid having to do unset/remove_definitions 	2fbbc0d1ef90324f304d4c75649cf99908a5691f
----------------------------
"Bug#18757964:RPL.RPL_CIRCULAR_FOR_4_HOSTS FAILS WITH RESULT MISMATCH NON DETERMINISTIC RESULTS Problem: ======== rpl_circular_for_4_hosts  failing sporadically in pb2 regression runs. Test lead to non deterministic results in case of lower performance. If the lock of the table will be later than the inert in next session then the result may differ from the expected one. Analysis: ======== This bug is clearly reproducible in windows with MTS and --slave-parallel-type=logical_clock. Test script has circular replication like 1->2->3->4->1. As part of test they do following two steps. 1) Insert value 6 in the autoinc column on server_3 (and prevent it from replicating further using SQL_SLAVE_SKIP_COUNTER on server_4). Due to the auto_increment_offset setting, the autoinc value 6 is normally generated on server_2. When we later insert a row on server_2,we thus cause a duplicate key error on server_3. 2) Reconfigure the topology to like this 1->2->4->1,2->3. On server 4 change master is executed by taking Server 3's Exec_master_log_pos and Master_Log_File. On Server 3 Exec master position changes as per the order in which workers execute the following parallel transactions. use `test`; INSERT INTO t1(b,c) VALUES('B',2) use `mtr`; INSERT INTO test_suppressions (pattern) VALUES ( NAME_CONST('pattern',_latin1'Slave SQL.*Duplicate entry Example: Normal case: ""Server 3 pos_c is ------3639"" ""Server 3 file_c is -----slave-bin.000001"" slave-bin.000001 3554 Query  4 3639 COMMIT slave-bin.000001 3639 Query  2 3732 BEGIN slave-bin.000001 3732 Intvar 2 3764 INSERT_ID=6 slave-bin.000001 3764 Query  2 3876 use `test`; INSERT INTO t1(b,c) VALUES('B',2) slave-bin.000001 3876 Query  2 3961 COMMIT slave-bin.000001 3961 Query  3 4047 BEGIN slave-bin.000001 4047 Query  3 4294 use `mtr`; INSERT INTO test_suppressions (pattern) VALUES ( NAME_CONST Error case: ""Server 3 pos_c is ------4372"" ""Server 3 file_c is -----slave-bin.000001"" slave-bin.000001 3554 Query  4 3639 COMMIT slave-bin.000001 3639 Query  2 3732 BEGIN slave-bin.000001 3732 Intvar 2 3764 INSERT_ID=6 slave-bin.000001 3764 Query  2 3876 use `test`; INSERT INTO t1(b,c) VALUES('B',2) slave-bin.000001 3876 Query 2 3961  COMMIT slave-bin.000001 3961 Query 3 4047  BEGIN slave-bin.000001 4047 Query 3 4294  use `mtr`; INSERT INTO test_suppressions (pattern) VALUES ( NAME_CONST('pattern', _latin1'Slave SQL.*Duplicate entry .6. for key .PRIMARY.* Error_code: 1062' COLLATE 'latin1_swedish_ci')) slave-bin.000001 4294 Query 3 4372  COMMIT Because of this incorrect position in change master INSERT B gets missed in 4 & 1. Fix: === Since the main intention is to generate duplicate key error on Server 3 to make test script more deterministic moved the mtr add suppression statement to a place bit ahead where we do a proper sync up of all servers. "	df2bec7d596d23274e79b91051f0ac5cb333020d
----------------------------
Bug#19061440 CMAKE -DINNODB_PAGE_ATOMIC_REF_COUNT:BOOL=OFF IS BROKEN The configuration option cmake -DINNODB_PAGE_ATOMIC_REF_COUNT:BOOL=OFF is broken ever since WL#7682 was merged. It is also useless since WL#7655, because MySQL 5.7 can no longer be built on systems that do not support atomic memory access primitives. This patch removes the option. It should be a non-functional change, because the undocumented build-time option was ON by default. rb#5844 approved by Yasufumi Kinoshita 	d9efa4769415eba1f373deca3777ebd0a3ee9186
----------------------------
BUG#18844897:  ASSERT AT INFO.DRY_RUN A test case configured with --skip-innodb and that checks whether the slave server is able to restart and replication is able to either restart or step into a degraded mode when using slave_master_info and slave_relay_log_info tables on InnoDB, was failing with two crashes. One during the shutdown and another during recovery on server restart. The former, even though not entirely related to replication, was triggering the latter. Since the former crash was sporadic, so was the subsequent one. This was noticed in that test, because the test stops and restarts the slave server several times. The core of the problem was that the shutdown crash was causing the server not to close the binary log properly. Then, on server restart, while opening the the binary log, the server would find that it had not been closed properly. Therefore, it would engage the log for recovery and roll forward or roll back the pending prepared transactions in the engine. This results in the server scanning the binary log, collect xids - in this case none, since the tests was running with MyISAM (remeber --skip-innodb?) - and call ha_recover. But, inside, this function would run into an assert that checks whether there are sufficient parties to resume the pending prepared phases of the 2PC. Since the engine involved was MyISAM and no xid had been collected and ha_recover was called regardless, this assert would be triggered. This patch fixes this issue by checking if there are enough 2PC parties involved before calling into ha_recover. 	06b2726ae18c591bc6463c3d1437fd09557ae641
----------------------------
"Merge: 5f50793 8bc840c wl#7277: InnoDB: Bulk Load for Create Index We build index from bottom up other than by insert rows repeatedly, so that we avoid B-tree split and merge operations. We introduce a new global configuration variable ""innodb_fill_factor"". It determines percentage of space on page to be filled with data, reserving the remainder on each page as free space for future growth. Its valid range is 10 ~ 100. rb://4237 approved by Krunal & Satya. "	53218d2e5ef0de7c482fa38c2e49a9130e00e969
----------------------------
Merge: e876e45 87520c2 Bug#17873011 NO DEPRECATION WARNING FOR THREAD_CONCURRENCY Null Merge from mysql-5.6 to mysql-trunk. 	203b89cdd915450b0775ed2d07233a5b13767a80
----------------------------
Bug#17873011 NO DEPRECATION WARNING FOR THREAD_CONCURRENCY Description: THREAD_CONCURRENCY is deprecated and there is no deprecation warning message while setting this variable while starting the server. Analysis: This variable is specific to Solaris 8 and earlier systems and is ignored on all other platforms. But since many customers, who uses other than Solaris, still has this variable in their configuration file, it is important to have a deprecation warning. Fix: THREAD_CONCURRENCY deprecation warning message is added. 	e9ed72a1b9cc37904b485a892c67d461de813f00
----------------------------
"Bug#17453826:ASSERTION ERROR WHEN SETTING FUTURE BINLOG FILE/POS WITH SEMISYNC Problem: ======== When DMLs are in progress on the master stopping a slave and setting ahead binlog name/pos will cause an assert on the master. Analysis: ======== Trx1 is waiting for ack on certain position meanwhile change master command is issued from the slave to master with a future log file name and position. Upon receipt master's dump thread assumes that it has received ack till the future log file and position and clears the active transaction list and sets the reply_file_name_ and reply_file_pos_ to future file name and pos. since reply file name and position are ahead of Trx1's current position Trx1 completes successfully. Execute a new DML Trx2. During commit Trx2 waits for an ack on some position but the reply file name and position are already pointing to future file name and position so this current transaction thinks that it has already got an ack and no need to wait and proceeds further. But the active transaction has not actually received any ack the transaction node is not cleared from active transaction list. During the exit of commit operation there is an assert which expects active transaction node to be cleared from the transaction list which fails this leads to an assert. Fix: === Ideally when a request for change master is received the request file name and position should be validated for correctness and only after the validation the transmit_start hook should be fired.  Hence moved the transmit_start hook position to appropriate place where it is placed post the validation of file name and position. Post fix when a future log file name and position is specified ER_MASTER_FATAL_ERROR_READING_BINLOG error will be returned to slave. Note: During fixing this bug one more bug was identified. Rpl_semi_sync_master_clients this parameter can become negative at certain conditions causing UNINSTALL PLUGIN rpl_semi_sync_master to fail. 'Rpl_semi_sync_master_clients' client is incremented when dump thread initiates transmission and when a new slave connection is established. This value is decremented when dump thread exits and slave gets disconnected. On a certain condition if IO thread stops due to an error and dump thread exited before ""transmit_start"" hook dump thread will still try to call ""transmit_stop"" and this will cause Rpl_semi_sync_master_clients= -1 which is invalid state. Hence as part of the fix a new flag is introduced such that ""transmit_stop"" will be called only when ""transmit_start"" is called. "	40c69d00a5f2df851be64b4a80cd9ac94d0b8a49
----------------------------
Bug#18404381: REMOVE UNNEEDE CMAKE CHECKS AND #IFDEFS IN 5.7.5 Patch #2: This patch does the following: - Enforces Visual Studio 2013 as the minimum version of Visual Studio, in accordance with our supported platform list for 5.7 - Removes the unused CYBOZU and BACKUP_TEST CMake options - Removes the following CMake checks which were always false for our supported platforms: HAVE_TERMBITS_H, HAVE_NDIR_H, HAVE_SELECT_H, HAVE_SYS_NDIR_H, HAVE_SYSENT_H, HAVE_RDTSCLL - Removes the following CMake checks which were always true for our supported platforms: HAVE_SYS_TYPES_H, HAVE_FCNTL_H, HAVE_FENV_H, HAVE_INTTYPES_H, HAVE_STDINT_H, HAVE_SYS_STAT_H, HAVE_RINT, HAVE_FESETROUND - Removes the following CMake checks where the results are not needed: HAVE_SYS_DIR_H, HAVE_DLERROR, HAVE_ASM_MSR_H, HAVE_DECL_MADVISE - Moves the defintion of NOGDI from my_global.h to the Windows CMake file so its defintion no longer depends on including my_global.h - Moves the defintion of __EXTENSIONS, _POSIX_THREAD_SEMANTICS and _REENTRANT from my_global.h to the Solaris CMake file so their defintion no longer depends on including my_global.h - Moves the HAVE_SOLARIS_STYLE_GETHOST CMake check to the Solaris CMake file so that it is not run on all platforms - Removes use of #_lint - Removes use of TARGET_OS_LINUX, use __linux__ instead - Removes use of HAVE_LONG_LONG, always true - Removes various __GNUC__ version checks which are no longer relevant - Changes remaining use of DBUG_ON to !DBUG_OFF - Removes setting of _GNU_SOURCE from my_global.h, already set by CMake - Removes setting of _THREAD_SAFE from my_global.h, not needed - Removes declaration of madvise from my_global.h, not used - Removes duplicate declaration of closesocket from my_global.h - Removes STACK_DIRECTION check from my_global.h, already done by CMake - Removes various defintions from my_global, use limits.h instead - Removes many unused declarations from my_sys.h and my_static.h - Removes various definitions of __attribute__, use my_compiler.h instead - Removes the following files with only dead code: include/t_ctype.h, mysys/my_getncpus.c - Removes dead code from mysys/my_getsystime.c - Removes mysys/mf_sort.c and moves used code to bounded_queue unit test - Removes st_my_thread_var::cmp_length, not used - Removes st_my_thread_var::pthread_self, use pthread_self() instead 	9d0a68841d3415f76a6cba9fc1e60171c51df5b8
----------------------------
"Bug#18258933 CONCATENATION OF MYSQLBINLOG OUTPUT DOES NOT WORK WITH GTID Problem:  When mysqlbinlog processes and concatenates multiple binary log files into one output file, this output file is not in useful state. When it is later used for point-in-time recovery, it is producing ER_GTID_NEXT_TYPE_UNDEFINED_GROUP ""ERROR 1837: When @@SESSION.GTID_NEXT is set to a GTID, you must explicitly set it to a different value after a COMMIT or ROLLBACK. Please check GTID_NEXT variable manual page for detailed explanation. Current @@SESSION.GTID_NEXT is 'xyz'"". Analysis: When mysqlbinlog processes a GTID enabled binary log, it outputs SET GTID_NEXT statements. As GTID_NEXT is set to 'undefined' when a transaction commits (or DDL commits implicitly), this will leave GTID_NEXT as 'undefined' when the server has processed all output from mysqlbinlog. Also, there can be some anonymous statements/transactions at the beginning of binary log (i.e., without SET GTID_NEXT statements). When mysqlbinlog processes and concatenates two (or more) binary log files into one output file, the combination (GTID_NEXT is undefined at the end of first binary log and second binary log can contain anonymous transactions) will not work and will result in ERROR 1837 (ER_GTID_NEXT_TYPE_UNDEFINED_GROUP). Fix: When mysqlbinlog processes second binary log's start_log_event, it can output ""SET GTID_NEXT=AUTOMATIC"" if required i.e., if previous binary log is leaving the GTID_NEXT state in 'undefined' state. In the old code (before this patch), when mysqlbinlog processes multiple binary log files from multiple command line arguments, it used a new PRINT_EVENT_INFO object for each file, so the state at the end of the previous file is lost. To solve this problem, this patch changes the logic to use the same PRINT_EVENT_INFO structure for all command line arguments. And to keep track of gtid_next state, we are introducing is_gtid_next_valid and is_gtid_next_set variables. At the beginning of mysqlbinlog process is_gtid_next_set is set to false and is_gtid_next_valid is set to true. When mysqlbinlog encounters a i) GTID_LOG_EVENT: it sets is_gtid_next_set to true and is_gtid_next_valid to true. ii) XID_LOG_EVENT /end_group() : it sets is_gtid_next_valid to false if is_gtid_next_set to true. And when mysqlbinlog is processing start_log_event, if it finds gtid_next is not valid (i.e., undefined) then it produces ""SET GTID_NEXT=AUTOMATIC"" in the output file to avoid mentioned ER_GTID_NEXT_TYPE_UNDEFINED_GROUP error and it resets is_gtid_next_set to false and is_gtid_next_valid to true (the initial values). mysqlbinlog also produces 'SET GTID_NEXT=AUTOMATIC' in the output file at the end of processing all the command line arguments if it finds GTID_NEXT is in invalid state. After this patch, if you are merging two or more binary log files, you will see two differences in the output when compared to the before the patch a) When mysqlbinlog start processing the second binary log file, if required (i.e., if the previous binary log left gtid_next in a invalid state), it generates SET GTID_NEXT=AUTOMATIC. b) Before the patch, mysqlbinlog outputs session variable information for every binary log. Now that we will have only one print_event_info per run, this session variables value will be printed only once *unless there is a change*. Example of session variables: SET @@session.pseudo_thread_id=999999999/*!*/; SET @@session.foreign_key_checks=1 SET @@session.sql_mode=1073741824/*!*/; SET @@session.auto_increment_increment=1, SET @@session.auto_increment_offset=1/*!*/; SET @@session.lc_time_names=0/*!*/; SET @@session.collation_database=DEFAULT/*!*/; "	164c135b0d0fce909d4913a2a86eb8c88531235d
----------------------------
"BUG#19010820 START SLAVE UNTIL WILL TIMEOUT IF WAITING FOR THE LAST TRANSACTION IN RELAYLOG Problem: ======= ""START SLAVE UNTIL"" with master binlog file/position or slave relay log file/position clauses won't stop if the position in the until clause is of the last transaction present on the relay log. Analysis: ======== The UNTIL verification for master binlog file/position or slave relay log file/position clauses is only checked inside next_event() function, after calling read_log_event(). If read_log_event() return no event because it reached the end of the relay log, it will not check the UNTIL clause, and will wait for the relay log update by calling relay_log.wait_for_update_relay_log(). There is a UNTIL verification in the exec_relay_log_event() function, before calling next_event() function, but only for until clauses containing SQL_AFTER_GTIDS option. Fix: === @sql/rpl_slave.cc Added both UNTIL_MASTER_POS and UNTIL_RELAY_POS options to the verification at the exec_relay_log_event() function that is called before the next_event() function. "	b50e1f1ca5e7503ffdac82180edef76d2cf4f41b
----------------------------
WL#6815 Adapt MySQL Cluster to 5.7 - While implementing 'WL7149 Remove storage_engine system variable in 5.7' all usages of the 'storage_engine' system variable was changed to use 'default_storage_engine' system variable. - Fix one missing replace in ndb_load.result 	c4129665cc98f57f894101c6e56ee01371960794
----------------------------
Bug#18205019: RPM INSTALLATION GENERATES /USR/MY.CNF A feature added to mysql_install_db in MySQL 5.6 was to generate my.cnf config file from template. The reason was a wish to set a specific value of sql_mode option for new installations. This is useful for many systems, however for some install methods and layouts this was not needed, and for some, even not wanted. Solution is add new option --keep-my-cnf to mysql_install_db. When used mysql_install_db will not generate my.cnf from template. Patch will also resolve issue mentioned in bug #68117 and #68318. 	4aa58bff12f0e8b011e924e7d4516bdc9cba450c
----------------------------
BUG#14135002: RPL.RPL_ROTATE_PURGE_DEADLOCK FAILS WITH TIMEOUT ON PB2. The test case makes use of the fine DEBUG_SYNC facility to synchronize the execution of different threads. The problem was that the test was using DEBUG_SYNC to signal the waiting threads and then right away resetting it (SET DEBUG_SYNC=RESET). This could in some cases clear the signal before the waiting thread received it. In those cases the waiting thread would remain waiting ad eternum, thus causing the test case to timeout. We fix this by waiting for the threads to receive the signal and only then issue the reset. 	fba6f7ead3a3dadd9a852deb9d33af1cc289355b
----------------------------
BUG#13874553: rpl.rpl_stop_slave fails sporadically on pb2 The test case makes use of the fine DEBUG_SYNC facility. Furthermore, since it needs synchronization on internal threads (dump and SQL threads) the server code has DEBUG_SYNC commands internally deployed and activated through the DBUG_EXECUTE_IF macro. The internal DBUG_SYNC commands are then controlled from the test case through the DEBUG variable. There were three problems around the DEBUG + DEBUG_SYNC facility usage: 1. When signaling the SQL thread to continue, the test would reset immediately the DEBUG_SYNC variable. This could mean that the SQL thread might loose the signal and continue to wait forever; 2. A similar scenario was happening with the dump thread on the master. This thread was instructed to wait, and later it would be signaled to continue, but immediately after the DEBUG_SYNC would be reset. This could lead to the dump thread missing the signal and wait forever; 3. The test was not cleaning itself up with respect to the instrumentation of the dump thread. This would leave the conditional execution of an internal DEBUG_SYNC command active (through the usage of DBUG_EXECUTE_IF). We fix #1 and #2 by waiting for the threads to receive the signal and only then issue the reset. We fix #3 by reseting the DEBUG variable, thus deactivating the dump thread internal DEBUG_SYNC command. 	ddf6a40cfd27b3ef642cb8fa4ec2c7997253fb3b
----------------------------
Bug#19060799 GET RID OF DYNAMIC_ARRAY IN MY_TMPDIR Our array abstractions should be removed, and substituted with modern data structures. Templatized vectors are: - type safe - easier to read/maintain - faster Move mysys/mf_tmpdir.c to mysys_ssl (which is a misnomer, it's the C++ part of mysys) Move mutex_lock.h to the include directory, so it can be used outside of server code. 	69d558df0e3acb96e4c580fcbd7b28cd410c219e
----------------------------
Bug#18463911 : SERVER CRASHES ON CREATING A TEMP TABLE WITH CERTAIN MAX_HEAP_TABLE_SIZE VALUES Followup patch to fix failure on Window machine. 	a95abd68faf5befcf2c7062a91b0cb711ea913e2
----------------------------
Bug#18463911 : SERVER CRASHES ON CREATING A TEMP TABLE WITH CERTAIN MAX_HEAP_TABLE_SIZE VALUES Followup patch to fix failure on Window machine. 	b36ed8188cd6f4718eaa970907752e7c227e47e5
----------------------------
Bug #18463911 : SERVER CRASHES ON CREATING A TEMP TABLE WITH CERTAIN MAX_HEAP_TABLE_SIZE VALUES Description: When the  system variable 'max_heap_table_size' is set to 20GB, the server crashes on creation of a temporary tables or tables using MEMORY storage engine. Analysis: The variable 'max_record' determines the amount heap allocated for the records of the table. This value is determined using the 'max_heap_table_size' variable. 'records_in_block' in turn uses the max_records to determine the number of records per block. When the 'max_heap_table_size' is set to 20GB, then the 'records_in_block' is calculated to a value of 2^28. The size of the block determined by multiplying the 'records_in_block' and 'recbuffer' results in overflow and hence the value becomes zero. As a result, zero bytes of the heap is allocated for the table. This will result in a server crash when the table is accessed. Fix: The variables 'records_in_block' and 'recbuffer' are typecasted to 'unsigned long' while calculating the size of the block. 	9cb278488762924febb619e40c917e8f863ccd2f
----------------------------
Merge: 8adac44 2c82605 WL#7436: Deprecate and remove timed_mutexes system variable This is the 5.7 version of the patch. Remove the timed_mutexes system variable. 	802cd3be4085b774668b7782bd855808ffff1b06
----------------------------
Merge: 76389ed 45c8ec3 WL#7436: Deprecate and remove timed_mutexes system variable Merge from mysql-5.5 to mysql-5.6 	2c82605e05d5479eb041d40dd1aba9758c6123a0
----------------------------
WL#7436: Deprecate and remove timed_mutexes system variable This is the 5.5/5.6 version of the patch. Add deprecation warning for timed_mutexes. 	45c8ec3a1bcc57bc250a33ad915f18d5c355745e
----------------------------
Bug #18939073: PARAMETERS ARE NOT PROPERLY PARSED IN MYSQLD A conservative fix for this bug. The problem was that m_i_db was still adding --no-defaults even if --defaults-extra-file was specified when constructing the mysqld command line. Fixed by the same measure as for --defaults-file : by not adding --no-defaults. 	0b0eea903c0eb7afab7cce2785f85515c69c99ac
----------------------------
"WL#6671 ""Improve scalability by not using thr_lock.c locks for InnoDB tables"". Avoid scalability bottleneck associated with THR_LOCK::mutex locks for InnoDB tables by not using thr_lock.c locks for them. The patch tries to make minimal changes to SE API and locking code on SQL-layer. Further improvements in these areas enabled by this change will be done as separate WLs. Before this patch InnoDB downgraded strong TL_READ_NO_INSERT/TL_WRITE thr_lock.c locks to weaker ones compatible with each other in most cases. So it has really relied on thr_lock.c locking only in a few scenarios: 1) To isolate HANDLER READ statements from LOCK TABLES WRITE statements. 2) To isolate LOCK TABLES statements that lock tables for write implicitly or for read, both explicitly or implicitly, from concurrent DML statements. 3) Due to coding mistake thr_lock.c lock was necessary to isolate ALTER TABLE IMPORT/DISCARD TABLESPACE under LOCK TABLES from concurrent I_S queries/ open HANDLERs. 4) To indicate that InnoDB tables don't support LOCK TABLES READ LOCAL by upgrading TL_READ lock requested by statement to TL_READ_NO_INSERT After addressing these scenarios it became possible to completely abandon thr_lock.c locking for InnoDB tables. To do this this patch: 1)   Changes code for HANDLER READ statements to upgrade S metadata lock to SR metadata lock for the duration of read. This allows us properly isolate HANDLER READ from LOCK TABLES WRITE and makes metadata locking for these statements consistent with locking for other DML. 2.a) Introduces new type of metadata lock - MDL_SHARED_READ_ONLY. This lock is similar to SR lock with exception that it is not compatible with SW locks. This type of lock is used as replacement for TL_READ_NO_INSERT thr_lock.c locks for tables locked by LOCK TABLES for read (both explicitly or implicitly). To preserve backward compatibility SRO lock was assigned lower priority than SW locks (acquired by DML that modify data). This means that stream of DML can lead to starvation of LOCK TABLES READ statement. To provide a way out from such a situation, MDL subsystem was changed to respect max_write_lock_count limit for SW locks as well. Also new MDL_SHARED_WRITE_LOW_PRIO type of lock was introduced. It has lower priority than SRO locks and is used by DML with LOW_PRIORITY clause (i.e. for the same DML which had lower priority than LOCK TABLES READ before the patch). 2.b) Changes code for LOCK TABLES to acquire SNRW lock on tables implicitly locked for write to compensate for removal of TL_WRITE lock. 2.c) After 2.a) and 2.b) were implemented it became impossible to predict in which order SNRW and SRO locks will be acquired, so we no longer can rely on that ""strong"" locks are always acquired in the same order to avoid deadlocks for DDL. To solve this issue and keep behavior compatible we had to change function which chooses deadlock resolution victim to prefer waits for ""strong"" locks from LOCK TABLES over locks from other DDL (MDL subsystem was extended for this) and to ensure that attempt to acquire locks for LOCK TABLES is restarted when we get ER_LOCK_DEADLOCK error. 3)   Changes ALTER TABLE IMPORT/DISCARD TABLESPACE code to acquire X lock on table being imported/discarded even under lock tables. 4)   New storage engine flag HA_NO_READ_LOCAL_LOCK was introduced to mark storage engines which don't support LOCK TABLES READ LOCAL but don't want to use thr_lock.c locks to indicate this. LOCK TABLES READ LOCAL automatically acquires SRO locks for them. After the above steps InnoDB code was changed to indicate that InnoDB no longer needs thr_lock.c locks acquired. This was done by changing ha_innobase::lock_count() to return 0 and by ensuring that ha_innobase::store_lock() doesn't try to store type of thr_lock.c lock in MYSQL_LOCK::locks[] array it gets as a parameter. It is worth to emphasize the following non-obvious behavior changes caused by this patch: *) LOCK TABLES READ blocks and is blocked by concurrent transactions changing the table, for all storage engines, similarly to how LOCK TABLES WRITE work now. *) Tables which are implicitly used by LOCK TABLES (e.g. through view or trigger) are locked using metadata locks in addition to (all SEs except InnoDB) or instead of (InnoDB) THR_LOCK locks. This means that previous item also applies to such tables. *) Multi-update is blocking/starts to be blocked by concurrent LOCK TABLES READ on any table from its join, even though such table will be only used for reading and won't be updated. Many test cases which were relying on old behavior had to be adjusted. Particularly: *) HANDLER-related tests had to be adjusted to take into account that HANDLER READ will wait for and acquire SR lock. *) Some tests using thr_lock.c locks had to be adjusted to use statements other than LOCK TABLES READ. *) Some tests which waited until LOCK TABLES READ will block DML on thr_lock.c locks now wait for blocking on MDL. *) P_S test coverage for aggregates now either uses MyISAM tables or were updated to take into account that InnoDB doesn't acquire thr_lock.c locks. *) Coverage for new behavior and new types of MDL locks were added, as well as unit tests for the latter. "	d3b17c4af4f7378d4f2fc85f6fdcf26fc9c05c23
----------------------------
"Bug#18920203 GET RID OF DYNAMIC_ARRAY IN SERVER_IDS::DYNAMIC_I Our array abstractions should be removed, and substituted with modern data structures. Templatized vectors are: - type safe - easier to read/maintain - faster Also: remove some dead code. The class Database_ids is unused, which means we can remove it, and the base class Dynamic_ids. The member function Server_ids::do_search_id is also unused, and can be removed. The macro sort_dynamic() is no longer in use, and can be removed. There was a bug in change_receive_options(): If we are inserting multiple ids into mi->ignore_server_ids then we need to re-sort before doing a binary_search. The old code worked ""by accident"", bsearch() found an element, even though the array was no longer sorted after an insert_dynamic() The fix for the sort/bsearch() bug: implement insertion-sort in Prealloced_array, and use insert_unique() to keep the array sorted at all times. This is a short array of ints, with pre-allocation, so insert-sort should be fairly efficient. "	14a7e5616b701d28ce2fcb1b2557de9a3bf9b931
----------------------------
Bug #18816897- IGNORE_SERVER_IDS NOT RESETTING POST RESET SLAVE ALL RESET SLAVE ALL is supposed to clear everything that is set by CHANGE MASTER TO. Following RESET SLAVE ALL, the server should forget that it was used as a slave. Because of the buggy behaviour RESET SLAVE ALL did not clear ignore_server_ids. This followed by by a new replication set up still contained the old list of server-ids. Fixed by emptying the list contaning server-ids to ignore on RESET SLAVE ALL. 	2bf2bd989aa854159a2b608de5d6208337505827
----------------------------
Bug #18487724 SETTING DEFAULT_STORAGE_ENGINE CAN CRASH IN INTERN_PLUGIN_LOCK When for some reason the evaluation of the SET default_storage_engine returned a NULL value the sys_var::check() code decided to just set the new storage engine to C NULL and continue. This caused problems down the road. Fixed by properly checking for a null value (val_str() returning a NULL) and propagating the error up. Fixed spacing 	ef53822e7e31c4f974cee5b906b23c1412d3683d
----------------------------
Bug#18956787 LOGIN DOES NOT GOES INTO SANDBOX MODE IF M_I_DB READS USERID FROM CONFIG EDITOR fixed: Changed meaning of login-path to mean the category in an encrypted cnf file rather than the location of this file. fixed: Added new option 'login-file' to mean the location of an encrypted cnf file with login credentials. 	57c13f87b3f778e5c7be3da35d4947291efd5f57
----------------------------
Fix Bug #18816381 - INNODB MEMCACHED PLUGIN CONFIGURATION - TEST DATABASE Approved by Marko 	b770d8d1d4adb32a69cba9d42052a83dcabcb6ef
----------------------------
Fix for bug #18923685: PROPERLY INITIALIZE DB OPTION HASH TABLE We should use case sensitive db names search if lower_case_table_names=0 and case insensitive if 1 or 2. Changed initialization of the db option hash table. Test case added. 	255cd78a66b83f46ba06052c5756374a802bce86
----------------------------
BUG#18791604 SERVER HITS ER 1200 ON START SLAVE CMD, STILL HEARTBEAT_PERIOD SETS TO DEFAULT, BUG#18777899 HEARTBEAT_PERIOD AUTOMATICALLY SETS TO DEFAULT POST RESET SLAVE COMMAND, BUG#18778485 SSL_VERIFY_SERVER_CERT AUTOMATICALLY SETS TO NO POST RESET SLAVE COMMAND) Problem: ======= There are three problems we address in this patch. The cause of these is more or less the same problem. But this exhibits different symptoms as described in the three bugs listed above, namely: 1) reset slave automatically sets heartbeat_period to default. 2) reset slave automatically sets ssl_verify_server_cert to default. 3) When a server is not configured as a slave (no CHANGE MASTER done yet), START SLAVE will fail and that is fine. But this resets the heartbeat_period to default which is strange and un-intuitive. Analysis: ======== The function init_master_log_pos() reset heartbeat_period to default and ssl_verify_server_cert= 0. This was called from reset slave as: reset_slave() => clear_in_memory_info() => init_master_log_info Fix: === 1) relocated code to reset heartbeat period to default to change_receive_options() and removed ssl_verify_server_cert= 0 in init_master_log_pos(). init_master_log_pos() is a different thing altogether, it shouldn't care about heartbeat or ssl certificate at all. 2) As a side-effect of (1), on a CHANGE MASTER if host and port are given but heartbeat_period is not specified, it remains 0 which means heartbeats are disabled. While adding/switching master, we want to keep heartbeat enabled by default. So in such a situation we force heartbeat_period to default heartbeat_count= 0 and last_heartbeat_timestamp= 0 unless the user specifically chooses to disable heartbeats. 	f0c2c3539a946d45c7f703380c8424f190ca768d
----------------------------
Bug #18684389-SPAM ERROR 'FILE NOT FOUND' MSG WHEN 'DATA DIRECTORY' CLAUSE IN 'CREATE TABLE' The patch for WL7142 caused this regression in which an error message is written to the log at startup for every remote tablespace that was created with DATA DIRECTORY.  A 'strict' parameter was added to Datafile::open_read_only(strict) in order to determine if the message would be logged.  The function fil_open_single_table_tablespace() tries to find the file in three possible locations and it always looks at the default location.  If the file is not there, this strict parameter causes the spam message. But by the time the default-location filepath is attempted, fil_open_single_table_tablespace() has already tried the other two locations.  So the fix is to print the message only if the file is not found elsewhere. Approved by marko in RB#5536 	d5bff2980e2b6fa5233bf9099d2dcd8645806c22
----------------------------
Merge: 12c0f55 7c91a95 WL6559    Optimize GTIDs for passive slave - store GTIDs in table If gtid_mode is enabled, store GTIDs in table always as below: - If binlog is disabled, store transaction owned GTID in table within each transaction. - If binlog is enabled and log_slave_updates is enabled, store set of GTIDs of the last binlog in table on each binlog rotation and on server shutdown. - If binlog is enabled and log_slave_updates is disabled, do below: - slave SQL thread or slave worker stores transaction owned GTID in table within each transaction. - store set of GTIDs of the last binlog in table on each binlog rotation and on server shutdown. 	8089982819d24d1c106133c5354beffee94b8122
----------------------------
"Bug #18889568	 OUT OF SOURCE BUILDS CHANGES SOURCE DIR FOR CLUSTERJ AND NDBINFO_SQL Bug #72843	out of source builds changes source dir for clusterj and ndbinfo_sql For clusterj, CMake files are changed so that manifest.mf files, pom.xml files, and mvn_install_ndbjtie.sh are created in build dir instead of source dir. ndbinfo.sql are configured as output to build dir instead of source dir.  The file are already created in build dir. "	470ac8f0b74c7e0490049861ebe2ce991b512b0f
----------------------------
Merge of the fix for Bug#18791851 CRASH IN ST_SELECT_LEX::PRINT WITH OPTIMIZER_TRACE ON SUBQUERY. Because of wl7082 the same bug cannot happen (we still add the testcase), but this variant can crash: - query is SET @a:=(SELECT ROW(1, 2)= ROW((SELECT 1 FROM t1 LEFT JOIN t1 t2 ON 1 HAVING 3 IN (SELECT 2 FROM DUAL)), 1)); (i.e. the rare conditions of fixed bug18345786 CRASH AROUND ST_JOIN_TABLE::AND_WITH_CONDITION). - simplify_joins() runs in JOIN::optimize(), when JOIN::where_cond/having_cond and TABLE_LIST::optim_join_cond() are still unset (==0x1). - it prints the transformed query; select_lex::print() sees JOIN::optimized==true, so uses unset members above. Crash. Fix: break the link between JOIN::optimized and conditions: in select_lex::print(), do cur_where = (join && join->where_cond != 0x1) ? // it is ready for reading, and the most up-to-date condition join->where_cond : select_where->where; 	1dec252aecc1ecc66a6caaf7caf51683ff2f6456
----------------------------
BUG#18466390 INCORRECT BEHAIVIOR WHEN SETTING UP SEMISYNC VARIABLES AS STARTUP OPTIONS Semisync didn't work as exepected if below two variables were set at starting server. - rpl_semi_sync_master_wait_no_slave - rpl_semi_sync_master_wait_for_slave_count The reason was that the variables were changed but the related internal status were not changed when initializing semisync. To fix it, internal actions are executed to change the internal status when initializing semisync at starting server. 	7f4eb5141bb287f9a8e8262846e13aa3f73be368
----------------------------
Bug 16368498 - MYSQL_CONFIG_EDITOR FORGETS ABOUT FREEING SOME MEMORY Memory tools detects memory leaks in mysql_config_editor. Fix: Closing opened files when they are not needed anymore. Reviewed by Kristofer. 	908b60e949086d27d140d9a88a59a70eea932b11
----------------------------
Bug#18947996 GET RID OF DYNAMIC_ARRAY IN IGNORE_DB_DIRS_ARRAY Our array abstractions should be removed, and substituted with modern data structures. Templatized vectors are: - type safe - easier to read/maintain - faster 	d4af579ad4d614735647c229934f5c8819fa1c31
----------------------------
"Bug#18791851 CRASH IN ST_SELECT_LEX::PRINT WITH OPTIMIZER_TRACE ON SUBQUERY The top query ends with: HAVING  alias1 . col_int_nokey  IN ( SELECT 2 FROM DUAL ) ; JOIN::prepare on the query owning HAVING saves select_lex->having to having_for_explain. Item_in_subselect::fix_fields (select_lex->having->fix_fields) replaces select_lex->having with ""alias1 . col_int_nokey=2"". SELECT 2 FROM DUAL becomes ""detached"", ""orphan"" (unit::exclude_level())), it won't be optimized, which is normal. having_for_explain is not changed, still points to item_in_subselect (bad). Later JOIN::optimize on the query owning HAVING wants to print this query, (in simplify_joins), select_lex::print gets HAVING from having_for_explain (stale item) and crashes when it reads master_unit() of 'SELECT 2 FROM DUAL' (NULL pointer, because 'detached' query). In trunk this does not happen because of WL7082: simplify_joins moved to the prepare phase, so join->optimized is false then, so select_lex::print uses select_lex::having which is correct (however, this bug has put me on the track of variant queries which do crash trunk, so a trunk-specific patch will be submitted; the present patch will not be put in trunk). Fix (conservative): update having_for_explain after fix_fields. Additionnally, a related robustness fix is added in select_lex::print (back-ported from trunk). "	c26f60a59fd1fbe19f02e97a66b60e5e48b5fe3b
----------------------------
WL7220 Spatial Relation Check Functions WL7221 Geometry Set Operations WL7280 WKB geometry container Entire implementation of new GIS which uses Boost.Geometry(BG)'s GIS algorithm to do geometric computations. Currently we use Boost1.55.0 and some old GIS algorithms are still used if BG doesn't yet support the feature; OTOH, if BG supports a feature, we use BG's implementation. From now on server internally uses boost library, there are several implications: 1. We should follow the coding guideline when taking care of exceptions; 2. Boost is more picky to C++ compilers than existing MySQL code, so one might has to upgrade his C++ compiler. 3. You have to specify -DWITH_BOOST=/your/local/boost/root/dir when doing cmake configuration, and for only once you have to either manually download boost1.55.0 or specify -DDOWNLOAD_BOOST=1. We implemented a WKB container (WL7280) as an efficient adapter layer between MySQL GIS and BG, WKB data exchange between them has little cost(data copy/conversion is completely avoided), and this adapter is fit into existing Geometry classes to maximize code reuse and logical OO model. Based on that we reimplemented spatial relation check functions(WL7220: within, contains, intersects, disjoint, equal, touches, crosses, overlaps) and geometry set operations(WL7221: union, intersection, difference, symdifference) using BG, by dispatching to specific BG function calls according to the triplet: { operation-type, type-of-argument1, type-of-argument2}. And we implemented support for many of the triplet combinations that are not directly supported by BG but can be computed using BG's existing features. We also implemented support for geometry collection for above two groups of GIS operations indirectly using BG, because BG doesn't directly support geometry collections. We had to implement each GIS operation according to its OGC specification using BG's support for the six basic geometry types, i.e point, linestring, polygon, multipoint, multilinestring, multipolygon. We also implemented support for empty geometry collections and nested geometry collections, enabling both of them to be operand of above GIS operations, which makes GIS computation more practically usable. This is especially true for the support for empty geometry collections because in a tree of set operations any node can produce an empty geometry collection, which shouldn't stop the computation as old GIS did before, but allow operating on this empty collection and proceed GIS computation. This commit also contains some general purpose data structures and algorithms, including an Inplace_vector and its unit tests; an implementation of GIS algorithm to detect and reverse polygon ring order and its unit tests; as well as other unit tests for various functionality of new GIS. It also contains Tor's cmake build system support for using boost, which is able to download and make use of boost library, and also make use of our customized patches for multiple versions of BG as first priority over standard boost released code, by automatically choose the right version of customized patches according to the version of boost library used. It also contains Adam and Menelaos's customized BG patch for boost1.55.0. Finally, it contains QA team's entire test work which are prepared for the three GIS WLs. Some bugs that are found on old GIS are now naturally gone because we are using BG, and all bugs that are found on new GIS(WL7220, WL7221 and WL7280) are fixed. Bugs fixed: Bug #18423730 - WL7220: ASSERTION FAILED: LIST ITERATOR NOT INCREMENTABLE Bug #18701114 - WL7220: ASSERTION FAILED: (PTR != 0 && NBYTES > 0) || (PTR == 0 && NBYTES == 0), Bug #18851092 - GEOMFROMTEXT DOES NOT UNDERSTAND NESTED GEOMETRYCOLLECTIONS Bug 18408988 - WL7220 : OVERLAPPING MEMCPY CRASH IN BG_GEOMETRY_COLLECTION::CUT Bug 18408919 - WL7220 : OVERLAPPING MEMCPY CRASH IN GEOMETRY::AS_WKB Bug 18408875 - WL7220 : ASSERTION FAILED: *P == 0 || *P == 1 Bug #17168699 OPEN POLYGON LISTED IN OGC GUIDELINES BUT NOT SUPPORTED IN MYSQL Bug #17168643 GEOMETRY COLLECTION IGNORES THE PROPER GEOMETRIES FOR ONE OPEN POLYGON Bug #17167765 ST_EQUALS FUNCTION RETURNS TRUE FOR THE SPATIALLY DIFFERENT GEOMETRIES. Bug#18492266 BOOST VERSION CHECK IN 5.7.5 LAB RELEASE Bug#72172    Boost version check in 5.7.4 lab release Bug#18503366 CHANGE OF WITH_BOOST SETTING IGNORED? Bug#72186    Change of WITH_BOOST setting ignored Bug#18497231 RELATIVE PATH FOR WITH_BOOST DOESN'T WORK Bug#72185    Relative path for WITH_BOOST doesn't work Bug#18499359 Bug#72188    WITH_BOOST not shown in cmake-gui 	435cae2f75cbc41221e04e633b22e5f15a6d3e6a
----------------------------
WL#7777 Integrate PFS memory instrumentation with InnoDB Start with a prototype for accounting new-like allocations. Usage of the provided accounting methods is: new int;       --replacedby--> UT_NEW(int); new Foo;       --replacedby--> UT_NEW(Foo); new Foo(args); --replacedby--> UT_NEW(Foo(args)); delete x;      --replacedby--> UT_DELETE(x); new Foo[8];    --replacedby--> UT_NEW_ARRAY(Foo, 8); delete[] arr;  --replacedby--> UT_DELETE_ARRAY(arr); Output in performance_schema looks like this: mysql> SELECT * FROM memory_summary_global_by_event_name WHERE event_name LIKE '%/innodb/%'\G *************************** 1. row *************************** EVENT_NAME: memory/innodb/btr0btr COUNT_ALLOC: 80 COUNT_FREE: 80 SUM_NUMBER_OF_BYTES_ALLOC: 1675 SUM_NUMBER_OF_BYTES_FREE: 1675 LOW_COUNT_USED: 0 CURRENT_COUNT_USED: 0 HIGH_COUNT_USED: 1 LOW_NUMBER_OF_BYTES_USED: 0 CURRENT_NUMBER_OF_BYTES_USED: 0 HIGH_NUMBER_OF_BYTES_USED: 25 *************************** 2. row *************************** EVENT_NAME: memory/innodb/dict0dict COUNT_ALLOC: 3 COUNT_FREE: 0 SUM_NUMBER_OF_BYTES_ALLOC: 624 SUM_NUMBER_OF_BYTES_FREE: 0 LOW_COUNT_USED: 0 CURRENT_COUNT_USED: 3 HIGH_COUNT_USED: 3 LOW_NUMBER_OF_BYTES_USED: 0 CURRENT_NUMBER_OF_BYTES_USED: 624 HIGH_NUMBER_OF_BYTES_USED: 624 ... *************************** 6. row *************************** EVENT_NAME: memory/innodb/other COUNT_ALLOC: 0 COUNT_FREE: 0 SUM_NUMBER_OF_BYTES_ALLOC: 0 SUM_NUMBER_OF_BYTES_FREE: 0 LOW_COUNT_USED: 0 CURRENT_COUNT_USED: 0 HIGH_COUNT_USED: 0 LOW_NUMBER_OF_BYTES_USED: 0 CURRENT_NUMBER_OF_BYTES_USED: 0 HIGH_NUMBER_OF_BYTES_USED: 0 6 rows in set (0.00 sec) 	206d889c32138454b1125efd91b8010e22d0308d
----------------------------
Bug #18599198 NDB : LIMIT TIME SPENT BY SUMA WAITING FOR API CONNECTIONS IN PHASE 101 This patch adds a limit for how long Suma will wait for all subscribers to connect before continuing with suma handover during start phase 101. The root couse to why some subscribers does not connect to restarted data nodes is not found nor fixed. A new configuration parameter RestartSubscriberConnectTimeout for data nodes are added.  This timeout specifies how long Suma will wait in phase 101 for all subscribing API nodes to connect. Those API nodes that have not connected in time will be reported failed. And eventually when all those API nodes have failed, SUMA will continue handover. 	d32be25dcebf0039db0f6e0887589f397bdc40bc
----------------------------
"Bug#17620053 SET GTID_NEXT AND DROP TABLE WITH BOTH REGULAR AND TEMPORARY TABLES Problem: ======= DROP TABLE statement may be split before be sent to binlog if it contains regular tables and temporary tables or if it contains temporary tables with transactional and non-transactional storage engines. Issuing a DROP TABLE like the described above with GTIDs enables and having only one GTID associated to the statement (like the SQL thread does after issuing a SET GTID_NEXT='UUID:NUMBER') would lead to a problem as there is no GTIDs for all statements after splitting the original DROP TABLE. Analysis: ======== DROP TABLE statements might be split because the behavior of the command in respect to the current transaction vary depending on table characteristics as follows: a) DROP TABLE <regular table> will be committed immediately; b) DROP TABLE <temp trans table> will be committed with the current transaction (after COMMIT); c) DROP TABLE <temp non-trans table> will be committed immediately. So, mixing these types of tables in a single DROP statement will make MySQL server to split the statement in up to three DROP statements in the binlog. Without using GTID, there is no problem with this approach. If GTIDs are enabled, and it is not in AUTOMATIC mode, issuing a DROP TABLE statement that mixes table types above described would lead the server to have no GTIDs enough to log all split statements into binlog. Also, DROP TABLE using IF EXISTS will always binlog the drop for all tables specified in the statement, even if the tables doesn't exist. With regular tables it doesn't represent a problem, but with temporary tables this was leading to the following problem: as temporary tables are split into transactional and non-transactional ones, the non-existent tables of a DROP TEMPORARY TABLE statement were assumed as transactional ones. So, if a DROP TEMPORARY TABLE with two non-transactional temporary tables were issued at the master server, it would binlog only one DROP statement containing the two tables. But if a filter made one of the temporary tables inexistent on the slave, when the SQL thread executes the statement it would try to split the statement as it would have a non-transactional existent temporary table and a transactional non-existent temporary table. And this split will be a problem because the SQL thread will have only one GTID for the original DROP statement but having to binlog two DROP statements. Found also a problem with the slave dropping temporary tables when it detects that the master has restarted, by calling close_temporary_tables()@sql_base.cc, as it was ""binlogging"" one DROP statement per pseudo-thread and per database, but was mixing transactional and non-transactional temporary tables in a single DROP statement. Fix: === The first part of the patch was to throw an error in the client session if GTID_NEXT is set to an 'UUID:NUMBER' and a DROP TABLE statement is issued mixing the table types above described. The second part of the patch was to group the inexistent temporary tables and only assume them as transactional if at least one transactional temporary table is dropped. If no transactional temporary tables are dropped, the inexistent temporary tables are assumed as non-transactional temporary tables. The third part of the patch fixed the problem with close_temporary_tables(). @ mysql-test/include/save_master_pos.inc Moved the code that saved the master position to a place that it will always be executed. @ mysql-test/include/sync_slave_sql.inc Added a new parameter to permit forcing the sync using master position instead of GTID_EXECUTED, even if the use_gtids option is enabled. Added a code before the sync to verify is the SQL slave is in the current master position (it is already synced). If the SQL slave is assumed as already synced, we reduce the sync timeout to only 1 second. So, if the test is using GTIDs and not specified to force sync using master position, the sync command will use the master GTID_EXECUTED to sync and will timeout only if there is a discrepancy between master and slave GTID_EXECUTED. @ mysql-test/*/rpl/?/rpl_gtid_drop_table* mtr files for testing the bug/patch. @ mysql-test/suite/rpl/r/*.result Some tests had their result file changed because they listed the binlog events for DROP TABLE statements that were split both at master and slave and now some of these statements do not split anymore. @ sql/share/errmsg-utf8.txt Added a new error message for statements that would be split in the binary log when @@SESSION.GTID_NEXT is set to 'UUID:NUMBER'. @ sql/sql_table.cc Added code to mysql_rm_table() to verify if the statement is safe to be executed (if it is not mixing table types or if @@SESSION.GTID_NEXT is not set to 'UUID:NUMBER'). Added code to mysql_rm_table_no_locks() to group the inexistent temporary tables and assume them as non-transactional if there is no transactional temporary tables dropped in the statement. @sql/sql_base.cc Changed close_temporary_tables() function to binlog transactional and non-transactional temporary tables in distinct DROP statements. "	6630447a3537d1ca5686781e60f234431f0cb3d6
----------------------------
Bug#18851597 GET RID OF DYNAMIC_ARRAY IN REPL_IGNORE_SERVER_IDS Our array abstractions should be removed, and substituted with modern data structures. Templatized vectors are: - type safe - easier to read/maintain - faster 	25e64a3d4fb1e953cbada8b3acb1f5db4f05a68f
----------------------------
Bug#18281535 - Updated usergroup to mysql on datadir 	8c9101fec9e4839a9d9b1554e822ca5edf0f3598
----------------------------
Bug#18281535 - Updated usergroup to mysql on datadir 	7e706177aa690b53371d6e557944d44d08fff7f4
----------------------------
Merge: cfef80a 7c77618 BUG#18830493 - REQUEST TO BACKPORT BUG#18311024 TO 5.6 mysql_config_editor: invalid write in remove_login_path when given empty path. Fix was to calculate correct indexes to copy. By the way memory check tool found memory leaks, which were easy to get fixed, so I attach them in this commit. 	600baf481b169d0cd402a1c114798ecb381dafb1
----------------------------
BUG#18830493 - REQUEST TO BACKPORT BUG#18311024 TO 5.6 mysql_config_editor: invalid write in remove_login_path when given empty path. Fix was to calculate correct indexes to copy. By the way memory check tool found memory leaks, which were easy to get fixed, so I attach them in this commit. 	7c77618238d3834f06e7b1b507005b9362f294f3
----------------------------
WL6559    Optimize GTIDs for passive slave - store GTIDs in table Commit current transaction to save GTIDs into 'gtid_executed' table on binlog rotation and server shutdown. 	8c7791ca1f60551019a2faffb536b6fe5805076b
----------------------------
Bug#18826853: SERVER HANG WHEN ENABLE/DISABLE OFFLINE_MODE Problem: When offline_mode was set to on, other global variables were allowed to be updated. This caused a deadlock on the mutex LOCK_global_system_variables. Fix: When offline_mode is set to on the the LOCK_global_system_variables mutex is not unlocked until the update completes, thereby preventing a deadlock. 	7475ff6d20103d4d72644754c080910ba1d81193
----------------------------
- WL#6965: Truncate UNDO logs. - Added new configuration variable related sys_var test. - Based on discussion adjusting the default value of innodb_max_undo_log_size = 1GB. 	d84536c1e69cb546cf4fc06e42ceafda37de306d
----------------------------
- WL#6965: Truncate UNDO logs. - Added entries to daily and weekly run to schedule run of innodb_undo suite with undo-tablespace configured Approved by: Anitha (over IM) 	bde708344ce66ee8867c7c503ddc70f3ccb330eb
----------------------------
Re-enable tests which now pass with updated PB2 configurations. 	eb394af365e0e156c7b363e85e149ed655cddee7
----------------------------
WL#6614 : Define and reimplement IGNORE WL#6891 : Define and reimplement STRICT MODE IGNORE Reimplementation : This worklog reimplements IGNORE. In the previous implementation, errors were downgraded to warnings inside THD::raise_condition() based on SELECT_LEX::no_error. This patch changes it to use an Internal_error_handler activated just for statements which support IGNORE keyword to downgrade specific errors to warnings. Bugs Fixed by this worklog : - Bug#11744960 : INSERT IGNORE SHOULD RETURN WARNINGS - Bug#11752648 : MULTI-DELETE IGNORE DOES NOT REPORT WARNINGS - Bug#16522924 : UPDATE TRIGGER INVOKED WHEN UPDATE IGNORE MEANS THAT NO UPDATE IS PERFORMED - Bug#16860715 : ASSERT IN PROTOCOL::END_STATEMENT DURING DELETE IGNORE - Bug#16860829 : ASSERT IN DIAGNOSTICS_AREA::SET_ERROR_STATUS - Bug#17550423 : DELETE IGNORE GIVES INCORRECT RESULT WITH FOREIGN KEY FOR PARENT TABLE STRICT Mode Reimplementation : This worklog reimplements STRICT mode. In the previous implementation When STRICT MODE was enabled, warning were upgraded to errors inside THD::raise_condition() based on THD::abort_on_warning flag. This patch uses an Internal_error_handler activated just for STRICT MODE to do the upgrade of specific warnings to errors. Bugs Fixed by this worklog : - BUG#11751889: TRIGGERS OVERRIDE STRICT SQL_MODE - Bug#16976939: FIX ERROR MESSAGE ON DUPLICATE INDEX CREATION AND STRICT MODE - BUG#18526888: STRICT MODE DOES NOT APPLY TO MULTI DELETE STATEMENT 	1b938d11ecb6adf0941f5b4d9903a0b76b105bd4
----------------------------
Bug#18718491: MSI PACKING BROKEN WITH VS2013 This patch fixes problems building MSI packages with Visual Studio 2013. VS2013 requires WiX Toolkit 3.8 and before this patch the code only worked with 3.5 and 3.6. The patch raises the minimum required version of CMake to 2.8.12 for Windows only, as this version of CMake is required for VS2013. This also allows removing a workaround for an old CMake bug (CPACK_MONOLITHIC_INSTALL). The recommended way of building ZIP and MSI packages is: 1: Run CMake as normal, specifying VS2013 as generator. 2: cmake --build . --config (e.g debug) --target package 3: cmake --build . --config (e.g. debug) --target msi 	da7a155b62db1f31483a4d77a544824da76dfaf2
----------------------------
Merge: 8679b5a 4192c35 Bug#18000079 - binlog_dump_non_block disappeared in mysql 5.6 Problem:- Before 5.6.5 or so, it was possible for a client(like Mysql-connector) to set the BINLOG_DUMP_NON_BLOCK flag in the initial handshake packet (COM_BINLOG_DUMP). Then this was (wrongly) removed, and the current patch adds it back. As such, clients connecting to a server issuing a COM_BINLOG_DUMP with the flag not set will not get an EOF when the server has sent the last event in the binary log. The connection will block. In all versions, it is possible to get the same behaviour by setting server_id=0(while is the default value of server_id). A slave server never sets the flag and never sets server_id=0, because it never needs non-blocking behaviour. Mysqlbinlog never sets the flag. If it needs the non-blocking behaviour, it sets server_id=0. In order to test the patch, we need mysqlbinlog to set the flag when it needs non-blocking behaviour. However, since mysqlbinlog also sets server_id=0, *just changing it to allow* setting the flag in mysqlbinlog will not verify the bug in an unpatched server. Currently it is possible to set the server_id used by mysqlbinlog, but only if *blocking* behaviour is requested (using mysqlbinlog --stop-never-slave-server-id=X), and then the value 0 is not allowed. Solution:- So in order to test the bug, We are introducing a new option: --connection-server-id=NUMBER When mysqlbinlog is run in blocking mode: - default is 1 - range is 1..maxint When mysqlbinlog is run in non-blocking mode: - default is 0 - range is 0..maxint The difference in default value is needed for backward compatibility. The difference in range is needed since 0 forces non-blocking mode regardless of the flag. With this in place, we can verify the bug in a non-patched server by running mysqlbinlog in non-blocking mode and set connection-server-id=1. NOTES:- A few remarks about this flag and also about the clients shipped with the server that make use of COM_BINLOG_DUMP. - An IO thread never issues (and has never issued) COM_BINLOG_DUMP with the flag set; -  Mysqlbinlog will set the flag always, unless --stop-never is specified. - The dump thread falls back to non-blocking behavior if the connecting client states that it has server_id=0; 	23d6b3fc2820afbbaf47fd84b5c22dd2ec2b8b3c
----------------------------
Bug#18000079 - binlog_dump_non_block disappeared in mysql 5.6 Problem:- Before 5.6.5 or so, it was possible for a client(like Mysql-connector) to set the BINLOG_DUMP_NON_BLOCK flag in the initial handshake packet (COM_BINLOG_DUMP). Then this was (wrongly) removed, and the current patch adds it back. As such, clients connecting to a server issuing a COM_BINLOG_DUMP with the flag not set will not get an EOF when the server has sent the last event in the binary log. The connection will block. In all versions, it is possible to get the same behaviour by setting server_id=0(while is the default value of server_id). A slave server never sets the flag and never sets server_id=0, because it never needs non-blocking behaviour. Mysqlbinlog never sets the flag. If it needs the non-blocking behaviour, it sets server_id=0. In order to test the patch, we need mysqlbinlog to set the flag when it needs non-blocking behaviour. However, since mysqlbinlog also sets server_id=0, *just changing it to allow* setting the flag in mysqlbinlog will not verify the bug in an unpatched server. Currently it is possible to set the server_id used by mysqlbinlog, but only if *blocking* behaviour is requested (using mysqlbinlog --stop-never-slave-server-id=X), and then the value 0 is not allowed. Solution:- So in order to test the bug, We are introducing a new option (available only for debug builds): --connection-server-id=NUMBER When mysqlbinlog is run in blocking mode: - default is 1 - range is 1..maxint When mysqlbinlog is run in non-blocking mode: - default is 0 - range is 0..maxint The difference in default value is needed for backward compatibility. The difference in range is needed since 0 forces non-blocking mode regardless of the flag. With this in place, we can verify the bug in a non-patched server by running mysqlbinlog in non-blocking mode and set connection-server-id=1. NOTES:- A few remarks about this flag and also about the clients shipped with the server that make use of COM_BINLOG_DUMP. - An IO thread never issues (and has never issued) COM_BINLOG_DUMP with the flag set; -  Mysqlbinlog will set the flag always, unless --stop-never is specified. - The dump thread falls back to non-blocking behavior if the connecting client states that it has server_id=0; 	4192c356cc887822e47798f042101afbbf53d107
----------------------------
Bug#11760197:INCORRECT RESULTS WITH COUNT DISTINCT AND BIG_TABLES Problem: When big_tables is enabled, COUNT DISTINCT on simple join with constant equality condition gives wrong result. Analysis:- In case of count distinct with sql_big_tables enable, optimizer saves data in myisam file instead of heap unique tree. When a constant equality condition is present, it does not detect duplicate field values when inserting the records into the temporary table. Original solution: While creating temporary table, allow creations of fields for constant items. When we have distinct query, this will make sure the duplicate value filtered out when inserting rows in the temporary table. Side Effects: Bug#17555462 - SELECT DISTINCT OF VIEW WITH CONSTANT STRING RETURNS WRONG RESULT Problem: In a temporary table if a field is created for a const ref_item, and if this ref_item is a reference over a constant string and not on a field results are not as expected. Analysis: This is a regression from the patch for Bug#11760197. Post this bugfix, a field gets created in temporary table even for const_item's. If the const_item is of type Item_ref, while creating the temporary field, item->result_field is made to point to the newly created field. While the original item would hold the constant's value, the new field created while changing ref's to use temporary fields, will not be having the value. As a result we loose the value when fetching the results. In similar lines: Bug #17607155: ASSERTION FAILED: ((ITEM_RESULT_FIELD*)ITEM)->RESULT_FIELD Bug #17957913: ASSERTION `((ITEM_RESULT_FIELD*)ITEM)->RESULT_FIELD' FAILS IN CREATE_TMP_FIELD Problem: Query having a GROUP BY CLAUSE with ROLLUP modifier and a GROUP_CONCAT/COUNT(DISTINCT) function with constant expression, causes an assert. Analysis: The GROUP_CONCAT/COUNT(DISTINCT) uses its own temporary table. When ROLLUP is present it creates the second copy of temporary table. This copy receives the same list of arguments that original group_concat/count(distinct) does which will help to copy the content of the result_field for the function under GROUP_CONCAT/COUNT from  the first temporary table to the second temporary table. In the case, when constant item is present, result_field will carry null value. After the fix for Bug#11760197, while creating field for second temporary table as result_field for the constant expression is not set, it asserts. Bug#17634335: SELECT DISTINCT...GROUP BY RETURNS WRONG RESULTS IN SOME CASES Query creating temporary table to find the distinct value and has constant value in projected list doesn't give correct result. Analysis: After the fix for Bug#11760197 const_items also were created as part of temporary tables. In the call to remove_duplicates() an assumption against the same was made which resulted in the above bug. All the above bugs were side effects of the fix made for Bug#11760197. Current solution: Distinct of a constant value will always be the constant value and count distinct of the same will always be one. Based on this, a new variable const_distinct is introduced. If enabled, temporary table is not created and aggregation is also avoided as the result will always be one. Works in similar lines to always_null. 	04ed91a28a385f9d88db71248ad78a128e110c58
----------------------------
"Fix for Bug #18770217 	DIFFERENT RESULT WITH SP ON 2ND EXECUTION OF QUERY WITH STRAIGHT_JOIN IN NOT IN We have this subquery predicate: NOT IN ( SELECT sq1_alias1.col_varchar_nokey FROM t3 AS sq1_alias1 JOIN ( t1 AS sq1_alias2 STRAIGHT_JOIN view_d AS sq1_alias3 ) WHERE ( SELECT col_int_key FROM t1 AS c_sq1_alias1 WHERE c_sq1_alias1.col_varchar_key = sq1_alias3.col_varchar_nokey ) ) which is handled with subquery materialization. It contains a WHERE clause involving a scalar subquery which returns two rows. Thus, it is expected that when we fill the temporary table, we hit and report an error. However, in the second execution of a stored procedure it is not the case. A necessary ingredient is the view column of view_d, used as outer reference in the scalar subquery. First execution: - view_d is merged - the view's column is resolved by fix_outer_field(): prev_subselect_item->used_tables_cache|= (*reference)->used_tables();     // 1 prev_subselect_item->const_item_cache&= (*reference)->const_item(); mark_as_dependent(thd, last_checked_context->select_lex, // 2 *reference is Item_direct_view_ref. Its depended_from is NULL at (1). So its used_tables() returns the map of t2.col_varchar_nokey (==4). This goes into used_tables_cache of the scalar subquery item, which is correct - from the POV of the materialized subquery which owns the scalar subquery, this scalar subquery depends on view_d, the table of map 4 in the materialized subquery. At (2), depended_from becomes ""select#2"" i.e. the materialized subquery. It is correct: the item_direct_view_ref has the scalar subquery as context, so it is an outer reference. Second execution: - in find_field_in_tables() we go through code specific of any not-first execution: if (item->cached_table) <<<< this is true on non-first execution { ... /* If the field was an outer referencee, mark all selects using this sub query as dependent on the outer query */ if (current_sel != last_select) mark_select_range_as_dependent(thd, last_select, current_sel, found, *ref, item); This sets depended_from of the item_direct_view_ref to ""select#2"" (correct). - then we go into the same fix_outer_field() as in the first execution, but note that this time we enter it with depended_from!=NULL, so: prev_subselect_item->used_tables_cache|= (*reference)->used_tables();     // 1 adds OUTER_REF_TABLE_BIT to used_tables_cache of the scalar subquery. That is wrong. - then, this scalar subquery gets lost by make_join_select() because this function (as it is operating for a materialized subquery) excludes conditions using OUTER_REF_TABLE_BIT (see join->allow_outer_refs). - the condition being lost, it won't throw the expected ""more than one row"" error. Fix: use resolved_used_tables(). Indeed, prev_subselect_item is owned by the qualifying query of the item. A second similar line is changed too. "	c302f211ddbd0ff5e3278e192d99eaac1985e804
----------------------------
Merge: 149a39a c26f60a Null-Merge of the fix for Bug#18791851 CRASH IN ST_SELECT_LEX::PRINT WITH OPTIMIZER_TRACE ON SUBQUERY. A different fix will be pushed for trunk. 	33f1f0bd7659c17b57205e56fc79958a135e3de4
----------------------------
Merge: ef7e862 be7afce BUG#18432770 - SYS_VARS.LOG_SLOW_ADMIN_STATEMENTS_FUNC TEST IS FAILING ON WINDOWS ON 5.6 Merging from 5.6 to trunk. 	27b5b1c8b5d2128c364366edcd38c169e8a73ad9
----------------------------
"BUG#18432770 - SYS_VARS.LOG_SLOW_ADMIN_STATEMENTS_FUNC TEST IS FAILING ON WINDOWS ON 5.6 Analysis: --------- In test file ""SYS_VARS.LOG_SLOW_ADMIN_STATEMENTS_FUNC.test"", logging of slow admin statement such as ALTER, OPTIMIZE and ANALYZE operations is verified . When ""long_query_time"" is zero then admin statement which runs for  at least 1 microsecond is considered for logging. On some platforms (special on Windows) time taken for OPTIMIZE and ANALYZE table is less than 1 microsecond sometimes. So test is failed sporadically. Fix: ---- To make sure OPTIMIZE table operation take enough time so that it is logged, increased the number of rows in table. With the current changes also ANALYZE table returned within 1 microsecond sometimes.Removed ANALYZE table operation from the test to avoid sporadic failure of this test case. CHECK table is another admin table which is logged to slow log table. Added CHECK table operation to test case. To test the changes, ran SYS_VARS.LOG_SLOW_ADMIN_STATEMENTS_FUNC for many times on windows machine. "	be7afce7e9d8135857c98583fcd52d02d02ff62e
----------------------------
"Bug #17309863 AUTO RECONNECT DOES NOT WORK WITH 5.6 LIBMYSQLCLIENT Problem Statement: Automatic reconnection does not work for MySQL client programs linked with 5.6 libmysqlclient, even if MYSQL_OPT_RECONNECT is enabled. Analysis: When we have two connections (say con_1 and con_2) in which 'con_1' has auto-reconnect enabled. In such case if 'con_2' sends 'KILL <con_1 id>' (killing 'con_1'), then the server closes the socket for 'con_1'. After that when we send any query to 'con_1' it is failing with ""Lost connection to MySQL server during query"" error, even though auto-reconnect is enabled for 'con_1'. This is because send() which sends query might still succeed on client even though connection has been already closed on server. Since send() returns success at client side, client tries to recv() the data. Now client receives '0' means that the peer has closed the connection. Hence the query fails with the error mentioned above. Problem didn't exist in 5.5 and earlier versions because in them we tried to read-up all data remaining from previous command before sending new one to the server. As result we detected that connection was closed before query was sent and re-established connection. Fix: Check if socket is alive using vio_is_connected() call in case if auto-reconnect is enabled before sending query to server. If socket was disconnected by server set net->error to 2 so the socket on the client will be closed as well and reconnect will be initiated before sending the query. Reconnect doesn't make sense in case of COM_QUIT so skip the connection check for this command. Note: This fix doesn't solve the problem fully as bug still can occur if connection is killed exactly after this check and before query is sent. But this is acceptable since similar problem exists in 5.5. Also note that this patch might cause slight performance degradation, but it affects only auto-reconnect mode and therefore acceptable. "	80a59d29b3825976e7044db04bd66ccae920d983
----------------------------
Merge: 05b7a91 3f06e04 Bug#11762867 DEFAULT VALUES FOR INITLOGFILEGROUP CAUSE ERROR 2350: 'INVALID CONFIGURAT - Add testcase for the new error message - Add testcase for starting cluster with InitialLogFileGroup with undo_buffer_size greater than available  SharedGlobalMemory. Check that memory was allocated for undo buffer and that the created log file group is usable. - Slight change of error message to indicate that user can choose between reducing the undo_buffer_size or increase SharedGlobalMemory - Slight change of logic in the code which (pre)allocates the memory to only peek at the undo_buffer_size value in the InitialLogFileGroup spec. This avoids duplicating all the logic from NdbCntrMain.cpp and should make the behaviour more distinct. 	d07d96439c2ee9f43487e9ae610f7c10e5205214
----------------------------
"Bug#11758766:MYSQLD CONTINUES OPERATION WITHOUT LOGGING WHEN BINLOGS CANNOT BE WRITTEN Problem: ======== If an error occurs that prevents mysqld writing to the binary logs (disk full, readonly file system, etc) then the logs are disabled and operations continue. This can lead to out of sync slaves and improper backups. Analysis: ========= When binlogging becomes impossible due to readonly file system at present the binlog gets closed along with an error message in error log which says binlog is turned off for the whole duration of the server to fix the cause shutdown the server and fix the problem. The master continues without binlogging which causes the slave to go out of sync. At present there is no way user can control the behaviour so it will be better to let the user provide an option to stop the server immediately on the error. Fix: ==== A new option ""binlogging_impossible_mode"" has been introduced whose values are ""IGNORE"" or ""ABORT"". When binlogging becomes impossible if user sets the variable to ""ABORT"" server will stop if user sets it to ""IGNORE"" binlog will be turned off and server will continue. "	06c40282a5999a94ad033d0c836876de7b7a7e7c
----------------------------
Bug#18443096:  --DEFAULTS-EXTRA-FILE WITH NONEXISTENT FILE CAUSES SEGFAULT Problem: --defaults-file with a nonexistent file argument results in a segfault. Fix: For a non-existent file, the free_used_memory need not be called. A check is made, as to whether the arguments are valid before freeing that memory. 	1f5ea6ce1d4404f6d629d8b2340a42e4d4af539d
----------------------------
"Bug#18620520 CORRECT TYPO IN ER 1755(ER_MTS_CANT_PARALLEL) Problem ------ TYPO in ER 1755. Show Slave Status: ................ ................ Last_Errno: 1755 Last_Error: Cannot execute the current event group in the parallel mode. Encountered event Gtid, relay-log name ./slave-relay-bin.000002, position 363 which prevents execution of this event group in parallel mode. Reason: The master does not support the selected parallelization mode. It may be too old, or replication was started from an event internal to a transaaction.. Fix ------ Change in: File: log_event.cc Line number: 2894 Line: ""to a transaaction.""); "	26c9fe3c50de048088a23f15e3e95df16d3ddd12
----------------------------
Bug#18266989 ACK_RECEIVER THREAD DOESN'T START WHEN STARTING SEMISYNC THROUGH SERVER OPTIONS Ack_receiver thread on the master didn't start successfully when setting up semisync replication through server options. To fix it, ack receiver thread is created if rpl_semi_sync_master_enabled is set 1 through server option. It also corrected the defination of REPLY_MESSAGE_MAX_LENGTH. 	fa96f0fed495f0fc18fcb4a8d3cecea3e02beb37
----------------------------
"Backport from trunk: Bug #18382225 MYSQL_CONFIG CAN'T HANDLE RELOCABLE PACKAGES THAT USES ""LIB64"" OR ""-64"" SUFFIX 'lib' is hardcoded into mysql_config, so 'cmake -DINSTALL_LIBDIR=lib64' will not work. Use INSTALL_LIBDIR when generating mysql_config. mysql_config may be renamed to e.g. mysql_config-32, fix the basedir pattern matching. "	53e2e8b807c2da5ded30932303a2197ac4015529
----------------------------
Bug#11762867 - DEFAULT VALUES FOR INITLOGFILEGROUP CAUSE ERROR 2350: 'INVALID CONFIGURAT Problem: The config.ini specifies that a log file group should be created during initial start of the cluster with the help of InitialLogFileGroupSpec. When no undo_buffer_size=<size> is specified, the default value for undo_buffer_size will be used. When cluster starts initial with default values, it fails to allocate undo buffer of the requested size from the SharedGlobalMemory pool. This is very likely in 7.0-1, where defaults for SGA is 20M and undo_buffer_size is 64M. Suggested solution: 1) At initial startup, allocate the memory for the undo_buffer_size specified in the InitialLogFileGroupSpec or the default, in addition to the sga. 2)Improve the error message printed when ndbd detects that it cannot allocate the undo buffer. 	3f06e040c31da072eab35b47ce8fff75725faf77
----------------------------
"Bug #18045646 LOCAL USER CAN RUN ARBITRARY CODE IN THE CONTEXT OF THE MYSQL SERVER Description: Using the temporary file vulnerability an attacker can create a file with arbitrary content at a location of his choice. This can be used to create the file /var/lib/mysql/my.cnf, which will be read as a configuration file by MySQL, because it is located in the home directory of the mysql user. With this configuration file, the attacker can specify his own plugin_dir variable, which then allows him to load arbitrary code via ""INSTALL PLUGIN..."". Analysis: While creating the "".TMD"" file we are not checking if the file is already exits or not in mi_repair() function. And we are truncating if the "".TMD"" file exits and going ahead This is creating the security breach. Fix: We need to use O_EXCL flag along with O_RDWR and O_TRUNC which will make sure if any user creates "".TMD"" file, will fails the repair table with ""cannot create "".TMD"" file error"". Actually we are initialing ""param.tmpfile_createflag"" member with O_RDWR | O_TRUNC | O_EXCL in myisamchk_init(). And we are modifying it in ha_myisam::repair() to O_RDWR | O_TRUNC. So, we need to remove the line which is modifying the ""param.tmpfile_createflag"". "	d2154ef4535869ad5edf5863333381a8bedb26c7
----------------------------
Bug#18675099: WINDOWSCACHE.CMAKE MUST BE UPDATED FOR VS2013 WindowsCache.cmake hardcodes results for CMake configure checks so they don't have to be performed on Windows (as this is very slow). The problem was that the cache file had several values which were no longer correct. The consequence that we were using Windows specific workarounds in cases where it was no longer needed. This patch removes the outdated values from the cache file so that the checks are actually made. It also reorganizes the cache file so that it matches config.h.cmake, removes duplicate entries, removes dead entries and adds missing entries. The patch also removes some unneeded Visual Studio version checks. 	734475bd2e943f530674485f3bd216e51e0ee769
----------------------------
WL6559    Optimize GTIDs for passive slave - store GTIDs in table Using exact table nmae 'gtid_executed' in comments. Update colume name and comments for gtid_executed table. Optimize code and remove unnecessary changes. Fix affected tests. Resolve compile error on some platforms. Fix random failure of binlog_simulate_crash_and_error_on_compress_gtid_table.test on windows. 	5f867a4d7f59c827d731b8bec04cf038b945a4b2
----------------------------
"Backport from trunk: Bug#18187290 ISSUE WITH BUILDING MYSQL USING CMAKE 2.8.12 We want to upgrade to VS2013 on Windows. In order to do this, we need to upgrade to cmake 2.8.12 This has introduced some incompatibilities for .pdb files, and ""make install"" no longer works. To reproduce: cmake --build . --target package --config debug The fix: Rather than installing .pdb files for static libraries, we use the /Z7 flag to store symbolic debugging information in the .obj files. "	28455666794dfb07506f420fe251b21d74e43794
----------------------------
"Backport from trunk: Bug#18187290 ISSUE WITH BUILDING MYSQL USING CMAKE 2.8.12 We want to upgrade to VS2013 on Windows. In order to do this, we need to upgrade to cmake 2.8.12 This has introduced some incompatibilities for .pdb files, and ""make install"" no longer works. To reproduce: cmake --build . --target package --config debug The fix: Rather than installing .pdb files for static libraries, we use the /Z7 flag to store symbolic debugging information in the .obj files. "	d9fd75c586c3f922ae4eafa95c08e399a6206cd5
----------------------------
"Merge: e963be1 c5849c1 BUG#17798076 - BUG#16418661 CLEANUP: REMOVE UNNECESSARY BUF_FLUSH_LIST() DURING RECOVERY Why and when the extra buf_flush_list() was added? --------------------------------------------------- The extra buf_flush_list() was added as part of Bug#16418661 CHANGING NAME IN FOR INNODB_DATA_FILE_PATH SHOULD NOT SUCCEED WITH LOG FILES. The testcase for rb#2293 failed randomly reporting inconsistent number of undo tablespaces. MTR didn't provide a way to use custom innodb_data_file_path, innodb_undo_tablespaces. See Bug#17059436. So the workaround is to use ""--exec $MYSQLD --args my.cnf"" on a empty data directory. This will create necessary files and aborts after that. The extra flush made sure that correct the number of undo tablespaces reported. This is not correct because the changes are already covered by redo. So the the ideal solution would be have been to run ""--exec $MYSQLD"" on the datadir again to apply redo or allow the bootstrapping to finish properly and exit. Fix: ---- Remove uncessary flush. Fix the inconsistent number of undo tablespaces issue by passing '--skip-grant-tables --innodb-unkown-parameter' to $MYSQLD. This would allow the bootstrapping to finish and properly exit. Another side effect of the unnecessary flush is, it masked a problem in WL#7142: Side effect Issue: ------------------ An MLOG_CHECKPOINT record for an earlier checkpoint can be mistaken as the MLOG_CHECKPOINT record for the latest checkpoint. Fix: ---- The fix is to grow the MLOG_CHECKPOINT record size from 1 to 9 bytes, so that it will contains the checkpoint LSN. On the first scan of the redo log, we will ignore MLOG_CHECKPOINT records, unless the LSN matches the latest checkpoint. SIZE_OF_MLOG_CHECKPOINT: Grow from 1 to 9. mtr_t::commit_checkpoint(), recv_parse_log_recs(), recv_scan_log_recs(): Add the parameter checkpoint_lsn. Approved by Marko, Kevin. rb#5234 rb#5320 "	b787d988ebb9d9abe1e13eb0cee470e637149208
----------------------------
"BUG#17798076 - BUG#16418661 CLEANUP: REMOVE UNNECESSARY BUF_FLUSH_LIST() DURING RECOVERY Why and when the extra buf_flush_list() was added? -------------------------------------------------- The extra buf_flush_list() was added as part of rb#2293. The testcase for rb#2293 failed randomly reporting inconsistent number of undo tablespaces. MTR didn't provide a way to use custom innodb_data_file_path, innodb_undo_tablespaces. See Bug#17059436 So the workaround is to use ""--exec $MYSQLD --args my.cnf"" on a empty data directory. This will create  necessary files and aborts after that. The extra flush made sure that correct the number of undo tablespaces reported. This is not correct because the changes are already covered by redo. So the the ideal solution would be have been to run ""--exec $MYSQLD on the datadir"" again to apply redo or allow the bootstrapping to finish properly and exit. Fix: ---- Remove uncessary flush. Fix the inconsistent number of undo tablespaces issue by passing '--skip-grant-tables --innodb-unkown-parameter' to $MYSQLD. This would allow the bootstrapping to finish and properly exit. Approved by Marko, Kevin. rb#5234, rb#5320 "	c5849c17a79911fdb49f361bf8dc0a4548da1dda
----------------------------
Fix the failing ndb_big_addnode.test which started failing after increasing ThreadConfig to 4 LDM threads. Similar changes has already been performed on the similar 'non-big' ndb_addnode.test 	82646ef2d13a473b7b9e59e7a62755a12ed1b636
----------------------------
Reduction of 'MaxNoOfConcurrentScans' in 'default_ndbd.cnf' caused ndb_bushy_joins.test to fail due to 'out of scans'. Increased this config variable in the test specific config file. Also removes the [ENV] setting as this is now included in the new default config. 	2008aa9723e894d7d3bfd6e65e22a5a77460bedf
----------------------------
"Bug#17638477 UNINSTALL AND INSTALL SEMI-SYNC PLUGIN CAUSES SLAVES TO BREAK Problem: Uninstallation of semi sync plugin causes replication to break. Analysis: A semisync enabled replication is mutual agreement between Master and Slave when the connection (I/O thread) is established. Once I/O thread is started and if semisync is enabled on both master and slave, master appends special magic header to events using semisync plugin functions and sends it to slave. And slave expects that each event will have that special magic header format and reads those bytes using semisync plugin functions. When semi sync replication is in use if users execute uninstallation of the plugin on master, slave gets confused while interpreting that event's content because it expects special magic header at the beginning of the event. Slave SQL thread will be stopped with ""Missing magic number in the header"" error. Similar problem will happen if uninstallation of the plugin happens on slave when semi sync replication is in in use. Master sends the events with magic header and slave does not know about the added magic header and thinks that it received a corrupted event. Hence slave SQL thread stops with ""Found  corrupted event"" error. Fix: Uninstallation of semisync plugin will be blocked when semisync replication is in use and will throw 'ER_UNKNOWN_ERROR' error. To detect that semisync replication is in use, this patch uses semisync status variable values. > On Master, it checks for 'Rpl_semi_sync_master_status' to be OFF before allowing the uninstallation of rpl_semi_sync_master plugin. >> Rpl_semi_sync_master_status is OFF when >>> there is no dump thread running >>> there are no semisync slaves > On Slave, it checks for 'Rpl_semi_sync_slave_status' to be OFF before allowing the uninstallation of rpl_semi_sync_slave plugin. >> Rpl_semi_sync_slave_status is OFF when >>> there is no I/O thread running >>> replication is asynchronous replication. "	41538015f9044cd8fbcff59c2fcfdec24b214ae2
----------------------------
Change default config for MTR tests such that the ndbmtd deamon memory footprint is reduced from ~900M to ~400M. 	7630c659a313603a6761e8cd28d8ce146e3685ee
----------------------------
"Bug #17449901	 TABLE DISAPPEARS WHEN ALTERING WITH FOREIGN KEY CHECKS OFF Analysis: By removing the FK index with out removing the foreign key constraint, we are moving the table into inconsistent state. FK index lookup happens during load table process. So it fails to open the table when FK index is missing. Fix: Don't allow to drop an index if it is needed for an FK constraint, even if foreign_key_checks is disabled. Approved by Jimmy (rb-5274) "	502c310a7f4bd1e701b005220b36085f53988fb7
----------------------------
Bug#18694238 REMOVE UNDOCUMENTED SCRIPT SUPPORT-FILES/BINARY-CONFIGURE.SH FROM 5.7 	a10f7a84cf9b6713ac6d69ee441e7590b513b509
----------------------------
ndb_backup_rate.test checks that we are able to recover normal operation after a 'Redo log full' situation. This is done by configuring a slow 'DiskCheckpointSpeed=1M', and letting the test program produce lots of logging by inserting and deleting rows while waiting for a 'Redo log full' error. However, when running with debug compiled binaries, the insert + delete performance could be so slow that we are unable to fill the redo log. Thus this test often failed in the 'mix-debug' part of the test. This fix disable the test when run with debug binaries. NOTE: It was already disabled for Valgrind for the same reasons. 	3c9c279df363da2cd9aee87fd9931be19395c00b
----------------------------
WL6559    Optimize GTIDs for passive slave - store GTIDs in table 1. If binlog is enabled and log_slave_updates is disabled, slave SQL thread or slave worker thread saves transaction owned gtid into table before transaction prepare. 2. Slave SQL thread or slave worker thread saves gtid into table for a DDL statement if binlog is enabled and log_slave_updates is disabled. 3. Slave SQL thread or slave worker thread adds transaction owned gtid into global executed_gtids if binlog is enabled and log_slave_updates is disabled. 4. Slave SQL thread or slave worker thread adds transaction owned gtid into global gtids_only_in_table if binlog is enabled and log_slave_updates is disabled. 5. If binlog is enabled and log_slave_updates is disabled, slave SQL thread or slave worker thread does not log a empty gtid group. 6. Write new 'rpl_gtids_table_disable_log_slave_updates.test' to cover above changes. 	028e8fe4e242b39b140314b779e96aec8e99d101
----------------------------
After the default_ndbd.cnf was changed to run with 4 LDM threads, clusterj.test has been failing due to insufficient IndexMemory. This patch introduce clusterj.cnf which overrides the default IndexMemory config for clusterj.test to 16M which has been (experimentally) determined to be sufficient. 	f46ea35eef41dc2a402e8f32cd15d1126beadabe
----------------------------
"Bug #17026898 PREVIOUS GTID EVENT IS NOT WRITTEN WHEN BINLOG IS ROTATED VIA SIGHUP Problem: When Binlog is rotated via SIGHUP signal, the newly generated binlog does not contain previous gtid event which is very important for processing that binlog's gtid events later. If there are any transactions written to this binlog then on next restart, while server is processing available binary logs, it was failing with following error: ""The first global transaction identifier was read, but no other information regarding identifiers existing on the previous log files was found."" and the server refuses to start. Or If the new GTID transactions which were written to this new binlog are replicated, Slave gets confused after seeing a GTID event without a previous_gtid_event and enters into ""Fatal 1236"" error. Analysis: SIGHUP siganl causes the server to reload the grant tables and to flush tables, logs, the thread cache, and the host cache. As part of flush logs, server rotates binary log as well. When server receives SIGHUP signal, it calls reload_acl_and_cache and which eventually executes the following code to write PREVIOUS_GTID_EVENT. if (current_thd && gtid_mode > 0) { /* write previous gtid event */ } And current_thd is NULL when server reaches this code through signal handler. Hence the newly generated binary log is not containing previous gtid event which resulted in reported issue at the time of restart. Fix: If reload_acl_and_cache() is called from SIGHUP handler, then allocate temporary THD before execution of binary log rotation function. The same above problem can be seen with relay log as well. Hence this temporary THD will be allocated even before relay log rotation function. And delete the THD object after finishing the task. "	d9b376c11ab8fea3f71c66179e570b1532ddcc3d
----------------------------
Adjust 'initial size' of tablespace used as part of ndb_restore_conv_more.test. Required by introducing more LDM threads in the ThreadConfig. 	805ccfcb0a3f044ef3fc782467ae1462ed513c77
----------------------------
WL#7593: New data dictionary: don't hold LOCK_open while reading table definition While retrieving a table definition when getting a table share, the LOCK_open mutex may be temporarily released. This allows a higher degree of concurrency when opening tables, and is needed for the new data dictionary where dictionary tables may need to be opened recursively. The following changes have been implemented: 1. A new TABLE_SHARE member m_open_in_progress is introduced to flag that a share is being initialized. Concurrent threads opening the same share must check this flag to see whether they must wait for the share to be initialized. 2. A condition variable COND_open is introduced for threads that need to wait for a share which is being opened. 3. We must wait for the share to be completely opened before returning from get_cached_table_share(). 4. There are loops iterating over all elements in the table definition cache. One loop is in close_cached_tables(), this is safe to keep as is because shares being opened are handled. The other loop is in list_open_tables(), here we found it better to ignore shares being opened to avoid situations where we would incorrectly present a table as being open (e.g. if the opening actually failed). 5. We must assert that the newly inserted share is actually present in the cache before returning from get_table_share(). 6. Shares being opened (m_open_in_progress == true) in close_cached_connection_tables() are skipped. Otherwise, due to the way TABLE_SHARE::connect_string is initialized in open_binary_frm(), there is a risk that connect_string.length is initialized while connect_string.str is not, hence making us read into uninitialized memory further down in close_cached_connection_tables(). Thus, in theory, there is a risk that shares are left in the cache that should really be closed (matching the submitted connection string), and this risk is already present since LOCK_open is unlocked before calling close_cached_connection_tables(). Now, close_cached_connection_tables() is called as the final step of DROP/ALTER SERVER, so its goal is to flush all tables which were open before DROP/ALTER SERVER started. Thus, if a share gets opened after close_cached_connection_tables() has started, the information about the server has already been updated, so the new table will use the new definition of the server. It might have been an issue, however if one thread started opening a federated table, read the old server definition into a share, and then a switch to another thread doing ALTER SERVER happened right before setting m_open_in_progress to false for the share. Because in this case ALTER SERVER would not flush the share opened by the first thread as it should have been. But luckily, server definitions affected by * SERVER statements are not read into TABLE_SHARE structures, but are read when we create the TABLE object in ha_federated::open(). This means that in close_cached_connection_tables(), ignoring shares that are in the process of being opened is safe, because such shares don't have TABLE objects associated with them yet. 	149c7b372e8b75ce508a8d51bab026701f3ac1b7
----------------------------
"Bug#18521389 CMAKE -DFEATURE_SET=XSMALL FAILS WITH MTR BOOTSTRAPPING When building with FEATURE_SET=xsmall (or small or classic) mysql-test-run.pl will not succeed in bootstrapping the test due to default-storage-engine is InnoDB which is not included. Fix: remove feature sets, enable ""xlarge""/""community"" by default. "	6ca9e7023d030ca4ebea2c60ed2dec1bd691ca63
----------------------------
Removed the MTR test ndb_mt_recv.test: This test was introduced in order to have a minimum of testing with multiple receiver threads in the ThreadConfig. The testload itself for this test, was the ndb_basic.test As multiple receiver threads now has been made part of default_ndbd.cnf, this special variant of ndb_basic.test is obsolete. 	296585c5e148fc45cdd4e75ab071afeae3ad3d23
----------------------------
"Bug#18187290 ISSUE WITH BUILDING MYSQL USING CMAKE 2.8.12 We want to upgrade to VS2013 on Windows. In order to do this, we need to upgrade to cmake 2.8.12 This has introduced some incompatibilities for .pdb files, and ""make install"" no longer works. To reproduce: cmake --build . --target package --config debug The fix: Rather than installing .pdb files for static libraries, we use the /Z7 flag to store symbolic debugging information in the .obj files. "	26b989dc73a395977fb7f16b00c718770e82e73e
----------------------------
Bug#18599982: HAVE_DECL_FDATASYNC & HAVE_FEDISABLEEXCEPT CMAKE CONFIGURE CHECKS ARE BROKEN The problem was that the results of the HAVE_DECL_FDATASYNC and HAVE_FEDISABLEEXCEPT CMake configure checks were not stored in my_config.h due to them being absent from the config.h.cmake template. This meant that code relying on these checks was in fact broken. The affected code was used to prefer fdatasync() over fsync() and to disable floating point exceptions. The patch fixes the problem by updating config.h.cmake so that the results of these two checks are saved. The patch also reorganizes config.h.cmake to make it easier to match the file with configure.cmake and other CMake files where checks are defined. In addition, the patch removes some duplicate CMake checks and some unused items from config.h.cmake. 	922e687135ad4ff073dbeee8ef70043ad8f4968f
----------------------------
* Fixed: Use the target datadir if it is empty * Fixed: Default location for .mysql_secret is the home dir of the euid 	b695e640eeb41816e33ee712f0ef8d046db00f4e
----------------------------
"* Datadir now created with the euid owner if specified and running with sufficient priv. * Disabled default signal handler for SIGPIPE * Adjusted process handling for stability. Non-blocking mode seems to cause saturation and EPIPE failure. Using blocking mode seems to work better. * Language dir is not identified by the mandatory ""english"" subdirectory * Fixed File_exist functor so that path isn't modified if the target isn't found * introduced proper escaping of strings when creating sql * Created defines for constants * moved Access_privileges and option parser code to auth_utils.cc * moved Path helper class to path.h * Added unittest for auth_utils and Path helper class "	61d15f543c228513077c626813e36201562965c9
----------------------------
WL#7806: Detect the current system tablespace size. We still skip the test if the tablespace name differs. The reason for this is that the test would hang if --mysqld=--innodb-data-file-path is passed. This is because the parameter would override whatever is specified in the configuration file. Also, we do not escape any ; that might have been specified in --innodb-data-file-path. 	97a4d6ed3bd420a9be56ab68ddb08207e124cbd3
----------------------------
BUG#18432744: RPL_CORRUPTION TEST FAILING ON 5.6 rpl_corruption test was sporadically failing with a different slave error code then expected on PB2 when it was run with gtid-mode=ON. When gtid-mode is ON, and in particular when MASTER_AUTO_POSITION=1, slave informs master which transactions it already retrieved and applied so that master (dump thread) can move forward on binary logs until it reaches the missing transactions and send them to slave. The injected event corruption through corrupt_read_log_event debug flag was also corrupting Previous_gtids_log_event and Gtid_log_event events disallowing dump thread to walk through the binary logs what was causing the unexpected ER_MASTER_FATAL_ERROR_READING_BINLOG error. Also the injected corruption was only corrupting the first read event from binary log, since dump thread was skipping the transactions already sent to slave the corrupted read event was not sent to slave. Fixed the failure by: 1) Excluding Previous_gtids_log_event and Gtid_log_event events from the injected corruption. 2) Corrupting all read events when corrupt_read_log_event debug flag is set. 	ed1c13c9f5ce7803a2a7007581644d934c4e36f0
----------------------------
WL#7415 PERFORMANCE_SCHEMA STAGE PROGRESS Implemented code review comments 	05a5168593d2558ffa1dbbebf202b79df5132d51
----------------------------
Bug#18259356 - PROCESSLIST_ID FOR SLAVE SQL THREAD IS MISSING For historical reasons, background replication threads are assigned a connection_id(), and displayed in: - SHOW PROCESSLIST - table INFORMATION_SCHEMA.PROCESSLIST. In the performance schema, these threads are also displayed, but with a NULL PROCESSLIST_ID. Having the same thread displayed: - with a PROCESSLIST_ID (in the information_schema) - without a PROCESSLIST_ID (in the performance_schema) is inconsistent, and is a bug. With this fix, the ID assigned in the server code is also given to the instrumentation, so that column PROCESSLIST_ID for replication threads is correctly populated in table performance_schema.threads. 	141ddd4c0e80e69756cadd4bc241c55668766c0c
----------------------------
Bug#18069107 SLAVE CRASHES WITH GTIDS,TEMP TABLE, STOP IO_THREAD, START SLAVE Problem: When Slave SQL thread detects that the master was restarted with the help of information sent by master's 'Format Description' event, slave SQL thread drops all the opened temporary tables inorder to have proper cleanup. When GTID mode is on and while slave SQL thread is generating DROP TEMPORARY statement for all these temporary tables, server is hitting an assert DEBUG_ASSERT(gtid.spec_type != UNDEF_GROUP). Analysis: When the server was cleaning up a threadd (client disconnected for example) it was setting up thd's GTID_NEXT variable to AUTOMATIC at THD::cleanup just before calling close_temporary_tables(thd) function in order to generate proper GTID events for any 'DROP TEMPORARY' query created. No problem here. When slave SQL thread applies a FD/Start_log_event_v3 supposed be from a master that had just (re)started, it assumes that the master doesn't has the temporary tables anymore. So, slave SQL thread needs to do a cleanup of the current temporary tables by calling close_temporary_tables(thd). Slave SQL thread always starts with GTID_NEXT set to AUTOMATIC. So, when the first FD event sent by the master after slave SQL thread started was calling close_temporary_tables(thd), it had GTID_NEXT set to AUTOMATIC, not hitting the assert. When slave SQL thread applies transactions with GTID, at the time of commit/rollback of that transaction, GTID_NEXT is set to UNDEF_GROUP. Any thread with it's GTID_NEXT set to UNDEF_GROUP cannot generate Gtid events. Hence, after applying some transactions, slave SQL thread was hitting this assert when having to close temporary tables if it detected that the master had restarted. Fix: Moved the code that set GTID_NEXT to AUTOMATIC from THD::cleanup() to close_temporary_tables(THD *thd). 	e33a0a61c7f83a2680ed72778c050ce7a1e859c6
----------------------------
WL#7806 InnoDB: Log-based discovery of built-in tablespaces This is follow-up to WL#7142 InnoDB: Simplify tablespace discovery during crash recovery We will write MLOG_FILE_NAME for all persistent tablespaces, not only for *.ibd files. Currently, this includes the following: * The InnoDB system tablespace (ibdata*) * The InnoDB undo log tablespaces (undo*) On startup, the InnoDB system tablespace and the InnoDB redo log will be opened. If there are redo log records to be applied since the latest checkpoint, any tablespaces requiring cleanup will be opened and recovered based on MLOG_FILE_NAME records in the redo log. If the MLOG_FILE_NAME records for the system tablespace disagree with the server configuration affecting the data file names for the system tablespace, recovery will be aborted with an error message, before applying any redo log. After recovery, any undo log tablespaces for which no redo log records were applied will be opened based on existing mechanism. The system tablespace will remain open at all times. is_predefined_tablespace(): Remove. All redo-logged tablespaces will be treated in the same way. mtr_t::m_undo_space, mtr_t::set_undo_space(): New field and method, to associate an undo tablespace associate with the mini-transaction. mtr_t::m_modifies_sys_space, mtr_t::set_sys_modified(): New field and method, to note that the mini-transaction is modifying the system tablespace. mtr_t::set_spaces(): A kind of copy constructor that copies the information on modified tablespaces from another mini-transaction. mtr_t::is_undo_space(): A debug method to ensure that set_undo_space() has been called. mtr_t::Command::prepare_write(): Invoke fil_spaces_lookup() before log_mutex_enter(), to look up all tablespaces that were flagged as modified by the mini-transaction, and optimistically invoke fil_names_write() for the system tablespace. (This is equivalent to old behaviour introduced in WL#7142, with the exception that we may look up an undo tablespace and the system tablespace.) After log_mutex_enter(), truncate the log if the fil_names_write() was not needed. If an undo tablespace or the system tablespace were flagged and fil_names_dirty() holds for them, invoke fil_names_write() for them. dyn_buf_t::set_size(): New method, used for truncating unneeded MLOG_FILE_NAME records from the tail of mtr_t::log. mtr_write_log_t::m_len: Remove. We will write the entire log. The log can be truncated by dyn_buf_t::set_size(). srv_undo_tablespaces, srv_undo_tablespaces_open: Set the initial value to 0 on server startup, so that fil_space_belongs_in_lru() will behave in a predictable way during redo log apply. trx_rseg_t: Note that space,page_no are constant and need not be protected by mutex. fil_load_single_file_tablespace(): Renamed from fil_load_single_table_tablespace(). fil_space_system_check(): New function, to check that MLOG_FILE_NAME records match the system tablespace data files. fil_space_undo_check(): New function, to reopen possibly existing undo log files after redo log apply has completed. fil_spaces_lookup(): New function, to replace previous usage of fil_names_write(). At mini-transaction commit, this looks up all modified redo logged tablespaces. fil_names_write(): Renamed from fil_names_write_low(). We will get the fil_space_t* looked up by fil_spaces_lookup(). fil_name_parse(): Support undo tablespaces and multi-file system tablespace. 	45c2309bc6563d29486490b1255a4f100a9dbc2b
----------------------------
Bug #18405677 CRASH WHEN SETTING SESSION_TRACK_SYSTEM_VARIABLES Problem: Server crashes when @@session_track_system_variables is set with a blank value under some special conditions. Solution: The key value of the hash member is not updated when session variable is changed in the current code. Used appropriate hash functions in the patch to update the key. 	fcd12ade05778556ac706e471069bced0f10a8f9
----------------------------
"- Bug #18511398: TRUNCATE TABLE IS WRITING PAGE-LEVEL REDO LOG RECORDS FOR THE ""DROP TABLE"" PART Truncate is done by dropping existing indexes and then re-creating the new ones. If tablespace is user-tablespace (innodb_file_per_table=1) then we can skip redo logging given that if server crashes then we don't apply redo logs instead we fix the truncate using ddl log. On successful completion log-checkpoint is done and so that, any crash post this point will not scan into previous redo-logs. Approved by: Sunny (rb#5145) "	82ed207609a3fce6d2f7487d3467ee2166b4be0b
----------------------------
Change innodb_bulk_load_fill_factor to innodb_fill_factor 	91bf03a276e098ab62411218aeb69735a5776e26
----------------------------
Bug #18329348 RESETCONNECTION DOESN'T CLEAR TIMESTAMP Bug #18329560 RESETCONNECTION DOESN'T CLEAR RAND SEED Bug #18328396 RESETCONNECTION DOESN'T CLEAR WARNINGS Bug #18329452 RESETCONNECTION DOESN'T CLEAR PROFILING Problem: resetconnection does not reset some of the system variables. Most of the system variables are declared in THD::variables struct. The variables which are declared outside this struct are not handled in resetconnection ex: last_insert_id, insert_id, timestamp, rand_seed1, rand_seed2 etc. Fix: Fix is to reset these session variables to its default values in COM_RESET_CONNECTION. Even though @@profiling is reset, the profiling information is not cleaned up before, with this fix this information will be cleaned up. 	a6823435c4fe6e11e3e5ecbe5b4c59500fbfa811
----------------------------
Follow-up patch for Bug#13106350: MRR initialization on a derived table caused crash Updated test case by removing out-commented setting of optimizer_switch materialization to off. This was commented out due to at the time this test was back-ported to mysql-trunk, the materalization switch was not part of optimizer_switch on mysql-trunk. 	badb769333584ba0916a50325a94efdae6b7caad
----------------------------
Bug#18127243: MYSQLD --GENERAL-LOG HAS INCORRECT HELP TEXT Add missing whitespace to and clarify --general-log help text. 	ba392ababfcd06a991b16ecb71bbbbc6da8d2e4a
----------------------------
Fix for Enhancement Request Bug#18490331 DEFAULT CONFIG FOR MTR TESTS SHOULD BE MORE MULTITHREADED Set the default config for NDB datanodes such that we actually runs the test with ndbmtd *and* multiple worker threads. 	fbf1d4b6a3ff1bae80e6f3b3af15e1808d8aa52c
----------------------------
"Bug #18382225 MYSQL_CONFIG CAN'T HANDLE RELOCABLE PACKAGES THAT USES ""LIB64"" OR ""-64"" SUFFIX 'lib' is hardcoded into mysql_config, so 'cmake -DINSTALL_LIBDIR=lib64' will not work. Use INSTALL_LIBDIR when generating mysql_config. mysql_config may be renamed to e.g. mysql_config-32, fix the basedir pattern matching. "	a9c85835989341ddfa65e7b8ce3125fc397bcf19
----------------------------
Fix for bug#18490173: TEST RESULTS SHOULD NOT DEPEND ON NUMBER OF TC / LDM THREADS IN CONFIG Several MTR tests are modified such that the expected *.result file is independent of how many LDM / TC threads are configured, and on whether the ndbd or ndbmtd is used. Most changes are related to default 'partiotions' being a function of number of LDM's. Thus explicit 'partiotions <n>' spec has been added to several create table statements. A few places the test itself tests that the expected number of default partitions are created. In these places we have included 'ThreadConfig=ldm={count=1}' in the *.cnf file. Also had to increase setting of some config variable in order to account for possible more partitions being created with bigger configs. Also fixed a testcase for bug#58280 (ndb_index.test), which required that 'index_merge' access method was used to test aganst a previous defect. (Added more non-matching rows to test table to make 'index_merge' more favourable) In the join_pushdown test, I have now removed verification of some 'info_counters'. These has in the past caused several issues due to failing test, and maintaining these are IMO not worth the effort anymore. 	b269eb8af3c5b0156c0b42fc93b010a4f5dcd0f8
----------------------------
"Bug #13029450	OFF BY ONE ERROR IN INNODB_MAX_DIRTY_PAGES_PCT LOGIC If the percentage of dirty pages in the buffer pool exceeds innodb_max_dirty_pages_pct (set by the user) then we flush the pages.If user sets innodb_max_dirty_pages_pct=0,then the flushing mechanism will not kick in unless the percentage of dirty pages reaches at least 1%.For huge buffer pools even 1% of the buffer pool can be a huge number. FIX --- Flush the dirty pages in buffer pool if percentage of dirty pages is greater than zero and innodb_max_dirty_pages_pct is set to zero. [Approved by vasil #rb4776] "	5600b9e887ddf27b5a03f5b40576bf0b854c524c
----------------------------
Reduce PB2 time, require --big-test to run some tests in Valgrind: innodb.innodb-import-partition innodb.innodb_update_time_wl6658 main.merge_recover rpl.rpl_alter_repository rpl.rpl_extra_col_slave_innodb rpl.rpl_gtid_mode rpl.rpl_row_img_sanity Approved by Jon Olav over IM. 	90e3a6b86585bea62c920be0c61fb93b8b0e6e83
----------------------------
Cherry pick fix for BUG#18482854 RPL : ROTATE_LOG_EVENT INCORRECTLY ADVANCES GROUP_RELAY_LOG_POS IN A GROUP 	7b915628382052879cf60519d08b1d2bdab1bb32
----------------------------
"Merge: f3fa72d 5600b9e Bug #13029450	OFF BY ONE ERROR IN INNODB_MAX_DIRTY_PAGES_PCT LOGIC [ Null Merge since issue already fixed in trunk ] "	cfbdc8eff5ba748cdcaefcbd3a71bdb4e1527183
----------------------------
BUG#18482854 RPL : ROTATE_LOG_EVENT INCORRECTLY ADVANCES GROUP_RELAY_LOG_POS IN A GROUP Problem: ======= Rotate events can cause the group_relay_log_pos to be incorrectly moved forward within a group. This means that when the transaction is retried, or if you stop the SQL thread in the middle of a transaction after some Rotates (considering that the transaction/group was spanned into multiple relay log files), the group (or part of the group from the beginning) will be silently skipped. Analysis: ======== It was found a problem in the logic for avoiding to touch SQL thread coordinates in Rotate_log_event::do_update_pos(). The logic was allowing to update SQL thread coordinates if not using MTS regardless rli->is_in_group() signaling that it was in the middle of a group. Fix: === Corrected the logic. 	7fe09d581c7fbfa17c79cd1f6f8b808424b6cfa1
----------------------------
WL#7142: Clean up innodb.innodb-multiple-tablespaces test. Use shutdown_server 0 for killing the server. Allow the test to run with non-debug servers, and with Valgrind. Clean up message suppressions. Remove some sleeps. Do not restart with force-recovery, but instead do a test restart that is expected to fail to start up. Then, clean up the injected error and restart normally. This test started failing after the change marko.makela@oracle.com-20140328123744-ewk9sgbtwxfmurio started to completely ignore *.isl files during redo log processing. The problem was that the redo log was being ignored for the affected tablespaces due to --innodb-force-recovery=1, and the tablespaces were corrupted. Enabling innodb_force_recovery should be a last resort, it can corrupt data also in other cases. 	40f2371fd3f97979a639bced0379af2eca58e814
----------------------------
WL#7148 Remove storage_engine system variable in 5.7 Post-push fix: Update tests in the engines/funcs suite. 	2a8e041edc90071c88308ef4564b595f75d153ee
----------------------------
Merge: 5f11ef0 5c668ec Bug#18364070: Backporting Bug#18236612 to Mysql-5.6 Problem: When Slave SQL thread detects that Master was restarted with the help of information sent by Master through 'FormatDescription' event, slave SQL drops all the opened temporary tables inorder to have proper cleanup. While slave SQL thread is dropping the temporary tables, it is not decrementing Slave_open_temp_tables count. Fix: Set slave_open_temp_tables=0 in close_temporary_tables(thd). 	9080156753b7a8acf30b6794b3beda2f70377721
----------------------------
WL#7148 Remove storage_engine system variable in 5.7 This patch removes the deprecated storage_engine system variable. Any remaining usage is replaced by default_storage_engine. 	e7f7a5ef47a583843a11ab5b0a1bc122a5c5aab4
----------------------------
Bug#18463441 DATA IN OK PACKET NOT POPULATED PROPERLY IN INFO_LIST ARRAY IN STATE_INFO STRUCT Problem: Entire change information in OK packet is put in info_list array of STATE_INFO struct in the first member, irrespective of what type of information is being read. Hence, mysql_session_track_get_first function fails to fetch the information if type parameter other than SESSION_TRACK_SYSTEM_VARIABLES is used. Solution: ADD_INFO macro in sql-common/client.c hard codes the type parameter to SESSION_TRACK_SYSTEM_VARIABLES. It should take the parameter from caller instead. Made a fix to provide the right parameter. 	0aac8d0f5eb90fd17ddd632aff7d3dd21e550ad1
----------------------------
WL#7774 Make MTR sync_slave_sql_with_master.inc handle NDB The sync_slave_with_master command in mysqltest is patched in MySQL Cluster to make sure that the current epoch is binlogged entirely before getting master binlog position. Bug #18375920 NDB TESTING : SYNC_SLAVE_WITH_MASTER CAN TIMEOUT AND CONTINUE sync_slave_with_master are more and more being replaced by include/sync_slave_sql_with_master.inc, for example in coming WL#7205 Make the MTR rpl suite GTID_MODE agnostic This patch imitates the functionality added to sync_slave_with_master in sync_slave_sql_with_master.inc by adding a file wait_for_ndb_committed_to_binlog.inc with logic that first look at latest_trans_epoch in SHOW ENGINE NDB STATUS and then waits until latest_handled_binlog_epoch catch up. Changes are only done to mysql-test subsystem. 	a76b40a1e41ad716c93a3396b7cd2e3d2cb20f91
----------------------------
BUG#17458054: OPTIMIZER_TRACE: CRASH BELOW OPT_TRACE_PRINT_EXPANDED_QUERY For the issued query, Having condition will be transformed into an DEFAULT_VALUE_ITEM. Therefore, subquery in Having condition will be excluded permanently. In mysql-5.6, optimizer trace uses join->having_for_explain to print Having condition. However, join->having_for_explain points to the subquery before transformation. At this moment, the original subquery in Having condition has been transformed away, which results in server crash when optimizer_trace prints Item_subselect. So before join->having_for_explain is reset in JOIN::optimizer, we just trace transformed having condition. 	09c801d85d75e41709d1cae8a9abe71abe83b9f4
----------------------------
Bug#18366909 MGMD BINARY CONFIG LOOSES SERVERPORT AND OTHER SETTINGS WITH TYPE KEY_INTERNAL - follow up fix which moves the two new config parameters up a notch to avoid conflict with already used number 634 	2470ae4e74412393ca3fadf63b02cf74b57e8c2c
----------------------------
WL#7582 - LEX_USER String transitional refactoring. The patch does transitional refactoring which is required to migrate to the new strings framework. A number of places in the server uses char* instead of const char* which includes the LEX_STRING which has a char* member. A gradual transformation of the server code is required to use const char* and use const references to pass objects around functions. This will enable smooth transition of ther server code to use the new string framework classes. This commit transforms the LEX_USER members user,host, password plugin and auth to use LEX_CSTRING. Thus the following classes/data members are modified to acommodate this change: 1. LEX_USER (sql/structs.h) LEX_CSTRING user LEX_CSTRING host LEX_CSTRING password LEX_CSTRING plugin LEX_CSTRING auth 2. ACL_USER (sql/auth/sql_auth_cache.h) LEX_CSTRING plugin 3. MPVIO_EXT (sql/auth/sql_authentication.h) LEX_CSTRING acl_user_plugin; 4. change of following variables in sql/auth/sql_authentication.h to be of LEX_CSTRING (1) native_password_plugin_name (2) old_password_plugin_name (3) sha256_password_plugin_name (4) validate_password_plugin_name (5) default_auth_plugin_name 5. Event_time (sql/event_data_objects.h) LEX_CSTRING m_definer_user LEX_CSTRING m_definer_host 6. Event_job_data (sql/event_data_objects.h) LEX_CSTRING m_definer_user LEX_CSTRING m_definer_host 7. THD (sql/sql_class.h) LEX_CSTRING m_invoker_user LEX_CSTRING m_invoker_host The function names whose prototypes or other changes that are modified as part of the refactoring include: 1. optimize_plugin_compare_by_pointer 2. acl_insert_user 3. ACL_PROXY_USER::store_pk 4. ACL_PROXY_USER::store_data_record 5. acl_update_user 6. do_auth_once 7. check_change_password 8. plugin_is_ready 9. create_string (sp.cc) 10. sp_head::set_definer 11. make_lex_string_root 12. make_lex_string 13. change_security_context 14. check_string_byte_length 15. check_host_name 16. check_string_byte_length 17. check_string_char_length 18. plugin_find_internal 19. plugin_status 20. plugin_lock_by_name 21. plugin_find_by_type 22. append_definer 23. reconstruct_definer_clause The refactoring has been done to some cohesive set of functions that relates to the authentication subsystem with some changes in plugin & stored procedure layer. Refactoring has been stopped and char* string is passed around as changes need to be done at storage engine handler layer or certain low-level platform API(memroot,string related functionality) that will affect every part of the code. 	c04813ce709183a6536929efe612f009f308fdf6
----------------------------
"Bug #17461576 	NDB REPLICATION : STOP SLAVE WHEN MASTER EPOCH DECLINES Fix which monitors the epochs received from the immediately upstream master, determined by server_id column == server_id metadata. Specifically, an observed epoch decline will have different results depending on the state of the Slave SQL thread. 1.  Just after a RESET SLAVE statement No effect 2.  Just after a START SLAVE statement A warning is produced 3.  None of the above. The Slave SQL thread will stop. The intention with 1) is to enable warning free setting. The intention with 2) is to warn when a Slave is being positioned on a previously applied epoch. The intention with 3) is to stop the Slave when there is some system malfunction resulting in the re-application of an existing epoch. Testing is performed using error insertion on the upstream master. A new testcase, ndb_rpl_slave_replay is added to the ndb_rpl suite. "	8237211c0fd5c92e6c38b87c0955f79004eac937
----------------------------
BUG#18311024: mysql_config_editor: invalid write in remove_login_path when given empty path Fix to test. Fixed GCC error when converting const string to not const in one place. 	6ed4af7788cab4c18c8d30c2532d899a89920a17
----------------------------
BUG#18311024: mysql_config_editor: invalid write in remove_login_path when given empty path Post-push fix, broken build: error: deprecated conversion from string constant to ‘char*’ 	aee4fdbb4acc692b0aabc53b0c8d2afb49bffab0
----------------------------
Merge: 5c7fe0d 5feb5cc BUG#18311024: mysql_config_editor: invalid write in remove_login_path when given empty path There is bug resulting in access to non-accessible memory. Fix was to calculate correct indexes to copy. By the way memory check tool found memory leaks, which were easy to get fixed, so I attach them in this commit. Approved by Joro #rb4977 	5a8b70bf66256c046b5c2f689ddc7500540e69d4
----------------------------
BUG#18311024: mysql_config_editor: invalid write in remove_login_path when given empty path There is bug resulting in access to non-accessible memory. Fix was to calculate correct indexes to copy. By the way memory check tool found memory leaks, which were easy to get fixed, so I attach them in this commit. 	5feb5cc4eceace7ce147ec2c043050a5969421e5
----------------------------
Bug#17350716 INNODB-WL6045-2 FAILS ON PB2 DUE TO WARNING IN SERVER LOGS Problem: Warning message is due to small innodb_buffer_pool_size=8MB (by default) as buffer pool is getting more full when using compression. This doesn't occur with --innodb_buffer_pool_size=10MB. Fixed: suppressed the warning message. Approved by Marko over IM. 	f31698aa39ea3c694d4497770ec4d6a971a2951b
----------------------------
WL#6146 Extend Ndb conflict exceptions table The original conflict table is defined like this: CREATE TABLE original_table$EX  ( server_id INT UNSIGNED, master_server_id INT UNSIGNED, master_epoch BIGINT UNSIGNED, count INT UNSIGNED, original_table_pk_columns, [additional_columns,] PRIMARY KEY(server_id, master_server_id, master_epoch, count) ) ENGINE=NDB; Requirements ------------ 1) Support backwards compatibility so that existing conflict detection users needn't change their table schema 1.1 Mandatory columns may have any names 1.2 Main table primary key columns may have any names 1.3 Additional columns sharing names with main table columns are treated as user columns. 2) Support use of a reserved column name namespace for metacolumns, allowing an arbitrary subset of non-pk main table columns to be recorded 2.1 NDB$ prefix used for all mandatory (non main table / user data columns) 2.2 Existing mandatory columns prefixed with NDB$ 2.3 The full user table PK needn't be recorded 2.4 Matching of main table columns to exceptions table columns to be on the basis of name and type. 2.5 Informative error message to be produces when column name/types mismatch 2.5.1 NDB$ prefixed column with invalid suffix 2.5.2 Column type not matching expectation 3) Support recording rejected non-primary key after values in the exceptions table where available 3.1 None, some or all non-primary key after values may be stored. 3.2 WRITE_ROW events may not have all column after values due to i) Logging updated only on the Master ii) Master having fewer columns than the Slave 3.3 UPDATE_ROW events may not have all column after values due to i) Logging updated only on the Master ii) Master having fewer columns than the Slave 3.4 DELETE_ROW events have no after values 3.5 All non primary key main table columns must be NULLABLE or natively DEFAULTed in the Exceptions table 4) Support recording optional conflicting operation type 4.1 e.g. NDB$OP_TYPE INT UNSIGNED NOT NULL 4.2 Current types : WRITE_ROW, UPDATE_ROW, DELETE_ROW 5) Support recording optional conflict cause 5.1 e.g. NDB$CFT_CAUSE INT UNSIGNED NOT NULL 5.2 Current causes : ROW_DOES_NOT_EXIST (UPDATE_ROW, WRITE_ROW) ROW_ALREADY_EXISTS (WRITE_ROW) DATA_IN_CONFLICT   (UPDATE_ROW, DELETE_ROW) TRANS_IN_CONFLICT  (*) 5.3 Note that TRANS_IN_CONFLICT obscures per-row causation information, so perhaps warn when a table with transactional conflict detection is configured with a conflict cause column in the exceptions table 6) Support recording optional originating transaction id info 6.1 e.g. NDB$ORIG_TRANSID BIGINT UNSIGNED NOT NULL 6.2 Note that this is most likely to be useful with transactional conflict detection, so perhaps warn if it's configured for a non-transactional algorithm 7) Additional added functionality 7.1 Support for referencing old/new values of non-primary key columns <column_name>$old and <column_name>$new (same as just writing <column_name>) columns in the extended exceptions will reference old and new values in update operations. For write operations the old value will be NULL and for delete operations the new value will be NULL. Checks will be made that such columns will have to be declared as nullable or with a default value (native ndb default) and cannot be part of the primary key. 7.2 NDB$OP_TYPE will be also aligned with ENUM('WRITE_ROW','UPDATE_ROW', 'DELETE_ROW') NOT NULL 7.3  NDB$CFT_CAUSE will also be aligned with ENUM('ROW_DOES_NOT_EXIST','ROW_ALREADY_EXISTS','DATA_IN_CONFLICT','TRANS_IN_CONFLICT') NOT NULL 	d208647e0b64f74b54ee9a8e5ab5c5fa9762dd14
----------------------------
post-push test fix for bug#18167648. Query plans changed for innodb_page_size=4k require that the page size is 16k. Also added requirement that partitioning is available. 	1e374765bb229f8913dfdb1dc7525bd0c691cb3d
----------------------------
"Test push of WL#7142 InnoDB: Simplify tablespace discovery during crash recovery When the setting innodb_file_per_table=ON was introduced in MySQL 4.1, InnoDB crash recovery was changed so that the directories will be searched for *.ibd files if any redo needs to be applied. The scanning and opening of all *.ibd files (including ones for which no redo log needs to be applied) can be very slow, especially on deployments that contain a large number of *.ibd files. Furthermore, if we allow a more liberal placement of tablespace files in the file system, we might have to extend the search to an even broader range of directories. This worklog eliminates the *.ibd file scan by guaranteeing the following: If there are redo log records for any non-predefined tablespace, there will also be an MLOG_FILE_NAME record. The InnoDB redo log format will be changed as follows: MLOG_FILE_NAME(space_id, filename): A new redo log record. Replaces MLOG_FILE_CREATE, MLOG_FILE_CREATE2. MLOG_FILE_RENAME2(space_id, old, new): The names will be file names (directory/databasename/tablename.ibd). Replaces MLOG_FILE_RENAME, which used table names (databasename/tablename). NOTE: We will write MLOG_FILE_NAME once since the latest redo log checkpoint. Immediately after a checkpoint, the log may contain some MLOG_FILE_NAME records that were ""copied across the checkpoint"" and a MLOG_CHECKPOINT marker to signal the end of a checkpoint. On redo log apply during crash recovery, we will scan the log up to three times: Recovery scan 1: Look for the first MLOG_FILE_CHECKPOINT marker since the latest checkpoint. If there is no MLOG_FILE_CHECKPOINT, we will skip the entire log. The data files will correspond to the system state as of the checkpoint. Recovery scan 2: Read the redo log since the latest checkpoint. Copy scanned records to recv_sys->addr_hash, and construct a map of recv_spaces, based on MLOG_FILE_NAME and MLOG_FILE_DELETE records. Before applying the records from recv_sys->addr_hash, we will check if any tablespace files are missing. If there are missing tablespaces, we will refuse to start up, so that the DBA can intervene, for example to manually rename files. This new safeguard of WL#7142 can be disabled by setting innodb_force_recovery. If not all redo log records in recv_sys->addr_hash, we will need a third log scan: Recovery scan 3: Read the redo log since the latest checkpoint. If recv_sys->addr_hash fills up, apply the batch of log records and read a new one. mlog_id_t: Remove MLOG_FILE_CREATE, MLOG_FILE_CREATE2, MLOG_FILE_RENAME. Add MLOG_FILE_NAME, MLOG_FILE_RENAME2, MLOG_CHECKPOINT. MLOG_FILE_FLAG_TEMP: Remove. This was a flag for MLOG_FILE_CREATE*. enum dict_check_t: Remove DICT_CHECK_ALL_LOADED. Crash recovery no longer loads all tablespaces. mtr_t::m_named_space: Associates a tablespace with a mini-transaction. A mini-transaction may be associated with up to one non-predefined tablespace. It may also modify predefined tablespaces for change buffering and undo logging. mtr_t::set_named_space(ulint space): Sets m_named_space. mtr_t::is_named_space(ulint space): Checks if the mini-transaction is associated with a given tablespace. mtr_t::Command::prepare_write(): Write an MLOG_FILE_NAME record if needed. This is executed as part of mtr_commit(). mtr_t::commit_checkpoint(): A special method to emit redo log records to the redo log buffer when the caller already invoked log_mutex_enter(). This is only used by fil_names_clear(). fil_space_t::max_lsn: LSN of the most recent fil_names_write() call, or 0 if the tablespace has not been dirtied since fil_names_clear(). fil_space_t::named_spaces, fil_system_t::named_spaces: List of tablespaces for which MLOG_FILE_NAME has been written since the latest checkpoint. recv_sys_t: mlog_checkpoint_lsn: The LSN of the first scanned MLOG_CHECKPOINT record, or 0 if none was read yet. fil_space_get(): Look up a tablespace. This is invoked during mtr_t::Command::prepare_write() while not holding the log mutex, to prepare for a fil_names_write() call. The idea is to minimize the log_mutex hold time. fil_space_create(): Add an output parameter for returning a duplicate tablespace (same space_id). fil_space_free(): Make this an externally callable function, to free a tablespace from the cache when applying MLOG_FILE_DELETE. fil_space_free_low(): Renamed from fil_space_free(). The new wrapper fil_space_free() will acquire fil_system->mutex. fil_op_log_parse_or_replay(): Change the order of parameters. Remove log_flags, and rename parse_only to replay. We no longer attempt to replay log records of a multi-item mini-transaction, unless the MLOG_MULTI_REC_END was seen. fil_rename_tablespace(): Change the function signature. Take old_path, new_name, new_path_in. MLOG_FILE_RENAME2 is logging file names, not table names like MLOG_FILE_RENAME was. Also invoke fil_name_write(). enum fil_load_status: Outcomes of fil_load_single_table_tablespace(). fil_load_single_table_tablespace(): Do not exit on failure. Instead, return a status value to the caller. fil_load_single_table_tablespaces(): Remove. We no longer try to load all *.ibd files. fil_create_new_single_table_tablespace(): Do not write any MLOG_FILE_CREATE or MLOG_FILE_CREATE2. Instead, invoke fil_name_write() to write MLOG_FILE_NAME. fil_mtr_rename_log(): Change the signature. Take dict_table_t instead of names. Take a tmp_name. fil_names_write_low(): Write MLOG_FILE_NAME record(s) for a tablespace. fil_names_write(): Write MLOG_FILE_NAME record(s) for a tablespace if not already written since the latest checkpoint. fil_names_clear(): Write MLOG_FILE_NAME records and MLOG_CHECKPOINT on a log checkpoint or at system startup. If do_write=true, writes MLOG_CHECKPOINT even if no MLOG_FILE_NAME was written. Reset those fil_space_t::max_lsn for which fil_names_write() has not been invoked after the checkpoint LSN. Return true to the caller if any redo log was written. fil_op_write_log(): Replace log_flags with first_page_no, and replace table names with file paths. The parameter first_page_no is currently being passed as 0, because we do not have non-predefined multi-file tablespaces yet. fil_name_write(): Write an MLOG_FILE_NAME record for a file. Datafile::open_read_only(): Add the parameter bool strict. fsp_names_write(): Wrapper for mtr->set_named_space(). This must be called when a mini-transaction is going to modify a non-predefined tablespace. is_predefined_tablespace(): Check if a tablespace is a predefined one (system tablespace, undo tablespace or shared temporary tablespace). enum recv_addr_state: Add RECV_DISCARDED, so that buffered redo log records can be retroactively deleted if an MLOG_FILE_DELETE was later recovered for a tablespace. btr_free_but_not_root(), btr_free_root(): Call fsp_names_write(). btr_cur_ins_lock_and_undo(), btr_cur_optimistic_insert(), btr_cur_pessimistic_insert(), btr_cur_update_in_place(), btr_cur_optimistic_update(), btr_cur_pessimistic_update(), btr_cur_del_mark_set_clust_rec_log(), btr_cur_del_mark_set_clust_rec(), btr_cur_optimistic_delete_func(), btr_cur_pessimistic_delete(): Call fsp_names_write() after successful locking and undo logging. btr_store_big_rec_extern_fields(), btr_free_externally_stored_field(), row_ins_index_entry_big_rec_func(): Call fsp_names_write(). dict_build_tablespace(), dict_create_index_tree_step(), dict_recreate_index_tree(), fil_reinit_space_header(): Call fsp_names_write(). page_cur_insert_rec_write_log(), page_copy_rec_list_to_created_page_write(), page_cur_delete_rec_write_log(), page_cur_delete_rec(), page_create(): Assert that fsp_names_write() has been called. dict_table_rename_in_cache(): Pass old_path to fil_rename_tablespace(). dict_check_tablespaces_and_store_max_id(): Remove the logic for DICT_CHECK_ALL_LOADED. We could probably remove this entire function, given that the maximum is also stored in the DICT_HDR page. mlog_write_initial_log_record_for_file_op(): Replaced by mlog_write_initial_log_record_low(). log_checkpoint(): Before invoking log_write_up_to(), invoke fil_names_clear() to copy any MLOG_FILE_NAME records across the checkpoint. Flush the log up to the MLOG_CHECKPOINT marker, instead of only up to the checkpoint LSN. Without this step, the log between oldest_lsn and log_sys->lsn would be essentially corrupted (missing MLOG_FILE_NAME records on redo log apply). When the redo log scanner sees the first MLOG_CHECKPOINT since the latest checkpoint, it knows that there must be no missing MLOG_FILE_NAME record for any page operation on a non-predefined tablespace. If the MLOG_CHECKPOINT marker is missing, no redo log will be applied, and the system would be at the state of the checkpoint. fil_name_parse(): New function, to update the recv_spaces map based on MLOG_FILE_NAME and MLOG_FILE_DELETE records during recovery. recv_parse_or_apply_log_rec_body(), recv_parse_log_rec(): Add the parameter ""apply"". Do not apply file-level redo log records unless the entire mini-transaction has been recovered. Fail if an MLOG_FILE_NAME record is missing for a page-level operation. recv_recover_page_func(): Assert that no LSN is after the latest scanned redo log LSN. recv_parse_log_rec(): Check for some more log corruption. recv_parse_log_recs(): Add a parameter ""store_to_hash"" to control whether the records should be stored into recv_sys->addr_hash. Add a parameter ""apply"" to specify whether log records should be applied (apply=false during the first scan for MLOG_CHECKPOINT). Return true if an MLOG_CHECKPOINT record was seen for the first time. Improve DBUG_PRINT output, and detect some more log corruption. recv_scan_log_recs(): Add a parameter ""store_to_hash"" to control whether the records should be stored into recv_sys->addr_hash. recv_group_scan_log_recs(): Initialize the variables and data structures to begin reading redo log records. Add a parameter ""last_phase"" that is set when a multi-pass recovery is needed and we are scanning the redo log for a third time. In last_phase, we will invoke recv_apply_hashed_log_recs() to empty recv_sys->addr_hash between passes. If last_phase=false, we would stop filling recv_sys->addr_hash, only processing file-level redo log records. recv_init_crash_recovery(): Split some code into recv_init_crash_recovery_spaces(), to be invoked after the first call to recv_group_scan_log_recs(). recv_recovery_from_checkpoint_start(): Invoke recv_group_scan_log_recs() up to 3 times if needed. After processing all redo log, write an MLOG_CHECKPOINT marker so that in case we will crash before making a checkpoint, the log will be replayed by subsequent crash recovery. checkpoint_now_set(): Avoid an infinite loop in case an MLOG_CHECKPOINT marker is the only thing that was written since the latest checkpoint. rb#4700r6 "	21175a7b2a341b3dc7baf49bc8df3173e4a120f7
----------------------------
WL#6813: Intra-schema MTS: ordered commits (sequential consistency) DESCRIPTION =========== This worklog ensures that the commits by slave worker threads running in parallel are done in the same order as on the master. This also means that the slave will never externalize a database state which was never externalized by the master. DESIGN ====== - slave_preserve_commit_order The behavior is optional. Users can control it through a new system variable named slave_preserve_commit_order. - Commit_order_manager We implement a commit order manager which maintains a queue of transactions which are applying by workers. Coordinator registers them into the queue when dispatching them to a worker. So the transactions in the queue have the order as they are in the relay log. All the transactions should go into the flush stage(see Binlog Group commit) in the queue sequence. When a worker commits its transaction(before the transaction goes into flush stage), it must wait until it becomes the queue head. It does means all transactions before it have entered into flush stage. Once the transaction enters flush stage, It is popped from the queue and signals the next transaction to go ahead. The feature is for only intra-schema multi-threaded slave, but not database partitioned multi-threaded slave. And it is not supported when log_bin or log_slave_updates is OFF. 	2c117d4822738a6f142c27c23c1b4fe6dfb45836
----------------------------
Bug#18364070: Backporting Bug#18236612 to Mysql-5.6 Problem: When Slave SQL thread detects that Master was restarted with the help of information sent by Master through 'FormatDescription' event, slave SQL drops all the opened temporary tables inorder to have proper cleanup. While slave SQL thread is dropping the temporary tables, it is not decrementing Slave_open_temp_tables count. Fix: Set slave_open_temp_tables=0 in close_temporary_tables(thd). 	5c668ec001db039fe7a21a24281c01fa44209449
----------------------------
Fix for Bug#11746486 CLUSTER RELATED PARAMETERS CANNOT BE SET IN MY.CNF The config parameters ndb_index_stat_cache_entries and ndb_index_stat_update_freq has been deprecated, but was not completely removed from the set of variables. This fix removes these variables. NOTE: The bug report also mention multi_read_range and ndb_use_transactions. These will require a document update, see bug report. 	8047d8018527348dc5a1db40487c69dec8ae87c8
----------------------------
"ndb - revert test configuration for testFK With the fix for Bug #18082045	 TESTFK CREATEDROPWITHDATA NEED HIGH MAXNOOFCONCURRENTSCANS AND MAXNOOFLOCALSCANS the higher MaxNoOfConcurrentScans are no longer needed for testFK -n CreateDropWithData introduced in revision-id: mauritz.sundell@oracle.com-20140110163326-48yzitisfij7y26m message: ndb - test: testFK -n CreateDropWithData T1 needs higher MaxNoOfConcurrentScans Raising to MaxNoOfConcurrentScans = 300. Experiments gave that ~257 is needed. "	b00ed9c4739682ad4a9221a00e0593ba6433f6c8
----------------------------
Bug#18403670 VERIFY THAT ENUM VALUE IN BINARY CONFIG ARE CONSECUTIVELY ASCENDING 	a3831a654bfadd957e4279aec8d573e4a9681e86
----------------------------
Bug#18366909 MGMD BINARY CONFIG LOOSES SERVERPORT AND OTHER SETTINGS WITH TYPE KEY_INTERNAL - Neither ServerPort or TcpBind_INADDR_ANY ended up in the binary config since they was marked as internal. This was probably done intentionally since both these settings are only used to calculate values which end up in other places of the config. But it's hard to reverse engineer and thus it's better to add both the original value and the calculated value to the binary config. There are more options marked as internal but they are either deprecated or undocumented. - Fix by giving the two options a proper value and ass testcase to show the values with ndb_config. 	58f1363240522a09733732e72da61868cfd308a2
----------------------------
Bug #13029450  OFF BY ONE ERROR IN INNODB_MAX_DIRTY_PAGES_PCT LOGIC Corrected the format specifier in the warning message. 	2d3096e73be8e5aee4cf26bbe166cec67719b1e3
----------------------------
Bug #13029450  OFF BY ONE ERROR IN INNODB_MAX_DIRTY_PAGES_PCT LOGIC Fixed compilation warning in linux. 	933defaebe0c00d4ba31daf661ca7e497b42e689
----------------------------
Bug #13029450  OFF BY ONE ERROR IN INNODB_MAX_DIRTY_PAGES_PCT LOGIC If the percentage of dirty pages in the buffer pool exceeds innodb_max_dirty_pages_pct (set by the user) then we flush the pages.If user sets innodb_max_dirty_pages_pct=0,then the flushing mechanism will not kick in unless the percentage of dirty pages reaches at least 1%.For huge buffer pools even 1% of the buffer pool can be a huge number. FIX --- Flush the dirty pages in buffer pool if percentage of dirty pages equals innodb_max_dirty_pages_pct or exceeds it. We have changed the innodb_max_dirty_pages_pct and innodb_max_dirty_pages_pct_lwm to double value,so that user can fine tune the percentage of dirty pages in the buffer pool. [ Approved by vasil #rb4778 ] 	7ee041cfba5f7943764ac319f529b75239f0db68
----------------------------
Bug#18383169: QUERIES WITH RANDOM_BYTES() ENTER QUERY CACHE The problem was that queries using RANDOM_BYTES, AES_ENCRYPT or AES_DECRYPT could be cached in the query cache. RANDOM_BYTES is random and AES_* are dependent on block_encryption_mode system variable. This patch fixes the problem by tagging queries using these functions as unsafe to cache. 	bf58abbcff3eaa4cee56961b20ed25f7956b6799
----------------------------
Merge: 295db0a 85c1b83 Merged the changeset for: Bug#18145032: NO EMPTY TRANSACTION IS CREATED FOR A FILTERED CREATE TEMPORARY TABLE WITH GTIDS Bug#18095502: NO EMPTY TRANSACTION IS CREATED FOR REPLICATE-IGNORE-DB OR REPLICATE-DO-DB from 5.6 to trunk. 	089482aeb926ebc71c3a11192f81d998f26a2c23
----------------------------
Bug#18145032: NO EMPTY TRANSACTION IS CREATED FOR A FILTERED CREATE TEMPORARY TABLE WITH GTIDS Bug#18095502: NO EMPTY TRANSACTION IS CREATED FOR REPLICATE-IGNORE-DB OR REPLICATE-DO-DB Background: When gtid_mode=on, and a transaction is filtered out on the slave, the GTID of the transaction is still logged on the slave as a so-called empty transaction (just a GTID followed by BEGIN and then COMMIT). This is necessary to prevent the transaction from being re-transmitted next time the slave reconnects or does a fail-over. Symptom: 1. If a CREATE TEMPORARY TABLE or DROP TEMPORARY TABLE statement was filtered out, no empty transaction was generated. 2. If the slave has a database filter (--replicate-[do|ignore]-db), no empty transaction was generated. Analysis: 1. Empty transactions are normally generated after a committing statement ends, i.e., after an explicit COMMIT statement or after a statement that causes an implicit commit. However, CREATE TEMPORARY TABLE and DROP TEMPORARY TABLE have very special semantics when it comes to implicit commit. The statements do not have the implicit commit flag set and will not commit an ongoing transaction. However, they cannot be rolled back. So when executed out of transactional context, they effectively perform a commit after execution. When GTID_MODE=ON, these statements are only allowed outside transactional context, and they are not written to the binary log within BEGIN/COMMIT statements. Therefore, when such a statement has been executed and filtered out, an empty transaction must be explicitly committed. The reason for the bug is that the current condition for checking if empty transaction should be generated is that stmt_causes_implicit_commit returns true. 2. Empty transactions are generated in mysql_parse. However, database filters were evaluated before mysql_parse was even called. Fix: 1. When checking if an empty transaction should be generated, also check explicitly for CREATE/DROP TEMPORARY. 2. Move database filter checking into mysql_parse. Further bugs: 3. In the special case that a statement has an 'unexpected' error code according to the check in log_event.cc:unexpected_error_code(), mysql_parse() is not executed and instead mysql_test_parse_for_slave() is executed. This is for the sole purpose of parsing without executing, so that an error is only generated on the slave for non-filtered tables. Thus, when moving the filter rule checking from do_apply_event() into mysql_parse(), we also need to perform the same check in mysql_test_parse_for_slave(). Test framework fixes: - To ease testing of this and other GTID-related bugs, I added the test framework files gtid_step_reset.inc and gtid_step_assert.inc. gtid_step_assert.inc asserts that the statements executed since last gtid_step_reset.inc generated a given number of GTIDs. This in turn needed some extra functions in gtid_utils.inc, and I also cleaned up and simplified gtid_utils a little and added a test case for it. - Small improvement in mysql-test/include/wait_for_slave_sql_to_stop.inc to allow comments after the error code(s). 	85c1b8306968ba8c54db1970748ce9976f071956
----------------------------
"Bug #11766596 UPDATE A TIMESTAMP VARIABLE EVERY TIME REACHES MAX_USED_CONNECTIONS Problem: Max_used_connections works as a high-water mark, so, you cannot know if it reached that level just a minute ago or at server startup. A timestamp needs to be updated every time it reaches that level. Fix: A new status variable 'max_used_connections_time' was introduced.This variable would be updated only when the connection count strictly exceeds the previous highest. The time would be displayed in local time zone on issuing the ""SHOW STATUS"" command. "	2c2cc32bfcf495f0e06087960a07fcddb3e44d87
----------------------------
Fix for Bug#18346750 OPTIMIZER_TRACE & DBUG_PRINT CRASH IN ST_SELECT_LEX::PRINT Regression of WL#7082. JOIN::optimize of select#1 wants to evalute select#2 during partition pruning. This triggers JOIN::optimize() on select#2. During optimization of GROUP BY of select#2 we evaluate select#3 ; this evaluation gives an error (too many result rows), so optimization of select#2 aborts. So evaluation of select#2 simply returns 0, because Item::val*() functions never signal an error: longlong Item_singlerow_subselect::val_int() { DBUG_ASSERT(fixed == 1); if (!no_rows && !exec() && !value->null_value) { null_value= FALSE; return value->val_int(); } else //we take this branch! { reset(); return 0; } } then optimization of select#1 goes on, at some point wants to prints the complete query to optimizer trace, which prints select#2 which wants to print having_for_explain but this member has not been set properly as optimization of select#2 aborted. Fix: don't print a select if there was any error. After this fix, optimization of select#1 goes on, finally checks thd->is_error() and aborts. Pre-WL, we also tried to print the broken select#2, but because having_for_explain was initialized to NULL (not 0x1 like post-WL) there was no crash. 	c911058803fb71ff0e4c9355902dc1afafedd220
----------------------------
Bug#18312967 REMOVE RECV_MAX_PARSED_PAGE_NO The variable recv_max_parsed_page_no is only being used in a diagnostic message when not all redo log records were applied to user pages. It might have been more useful before MySQL 4.1 introduced the innodb_file_per_table setting. With multiple tablespaces, the variable has limited usefulness. rb#4837 approved by Vasil Dimov 	19a4e8e305bc49558dca539297969ca124d35254
----------------------------
"Bug#18313717: ENABLE -WERROR IN MAINTANER MODE WHEN COMPILING WITH CLANG Post-push fix: Setting -Werror also for ""Debug"" CMake build type (and not just WITH_DEBUG), caused a compilation warning in the HAVE_PERRCREED auth plugin CMake check to be upgraded to error, causing the check to fail for debug builds. This meant that auth_socket was not built, leading to RPM build failure on EL6. This patch fixes the compilation warning, causing the check to pass again. "	5ae3ed3ea49c10a6ed14e3a646a1f2df42e6433d
----------------------------
WL#6936 - Implementation of server-side statement timeout. This is a follow up patch for WL#6936 to fix max_statement_time test failure on some(may be slower) machines. - Test has SELECTs which checks result of event and triggers. These selects were timed out on some machines because of the delay. * Changed timeout value for such SELECTs. - Disabling timer for non-read only select is done after checking SELECT is read only or not at runtime. Since time out value was small for non-read only select before disabling timer query is timed out. Increased timeout value for non-read only select in test file. 	12953c044c89e6153102ac4b57177088cdbb4e33
----------------------------
BUG#18311187 - SQL_MODE IS CHANGED TO WRONG VALUE AFTER DUMP/DATA UPGRADE FOR TRIGGERS BACKGROUND: With the push of WL#7467, it was observed that SQL_MODE is changed to wrong value in triggers during live/dump upgrade which is not desired behaviour. ANALYSIS: SQL_MODE for triggers is stored in .TRG files at trigger creation time. If the user upgraded to the version in which WL#7467 was pushed, the value of SQL_MODES in .TRG files started mapping to the new SQL_MODES currently available which was not desired and might lead to wrong behaviour of triggers after upgrade. FIX: As a fix for this issue, the removed SQL_MODES are again introduced for backward compatibility during upgrade. However, Setting NO_ZERO_DATE, NO_ZERO_IN_DATE and ERROR_FOR_DIVISION_BY_ZERO will have no effect and user will get a warning if he tries to explicitly set these modes. NOTE TO DOCUMENTATION: ===================== For stored routines that were created in 5.6 with NO_ZERO_* modes, after upgrade to 5.7, these modes will *not* show up in the output of SHOW CREATE PROC/FUNC/EVENTS/TRIGGERS, and SELECT * FROM information_schema.triggers. Only Select * from mysql.proc and mysql.events table will show the NO_ZERO_* modes after upgrade for the procs/events that were created in 5.6. In 5.7, since we cannot use NO_ZERO_* modes, mysql.proc/mysql.events or even SHOW CREATE will not show any of NO_ZERO_* Modes. 	90e1bbc93569b6666c98663d50e92e0e28d7e03d
----------------------------
WL#6120 -post push fix Testing relay log numbers with gtids in the test situation is non-deterministic. So, this test will fail on gtid-mode=on. Disabled the test with gtid-mode=on. 	9314418c80e221a812a9571453e54c24dd05ca14
----------------------------
Bug#18259193: I_RPL.RPL_RELAY_LOG_5_5_FILTER_PERF_SCHEMA TIMING OUT The test was added as part of fix for Bug#16814264 to test PFS replication from 5.5 -> 5.7(slave). This test fails when an intraschema MTS (slave_parallel_type=logical_clock) is enabled on the 5.7 slave. But this is not supported. 1) Fixed by disabling this test for MTS run. 2) Also, removed this test from experimental list. 	d933b95d205c9b7b5aebc62d257f0da1773cde69
----------------------------
Bug #18324650- BINLOG.BINLOG_SPURIOUS_DDL_ERRORS FAILS WITH GTID ON After WL#7205 mtr tests are run with gtid-mode in daily and weekly. This test was disabled when the WL was pushed and hence this was not caught. The test relies on CREATE..SELECT which is unsafe with gtids. Disabled the test with gtid-mode=on. 	cd849efb029fd64f522e099f188d4ca0c8fcc098
----------------------------
WL#6885: Flag to indicate session state In order to ensure session migration from one server to another we need a means to know if there is any session context available so that the context can be migrated to the target server. This worklog will implement a means to let the connectors/fabric know that there is a change in session state by sending a tracker(flag) to the client in the OK packet. A session state is considered to change in following cases: - user defined variable assignment - successful session specific value for server configuration variables assignment - temporary tables created, altered or deleted - prepared statements added or removed - change of the current database 	44ac242164a726c7420661ab96028f5c45533331
----------------------------
WL#4797 Extending protocol's OK packet For several commands (e.g. SET NAMES, SET character_set, USE database, SET SQL_MODE) the client receives an ok packet without information about server status changes. e.g. After SET NAMES big5 the server assumes that the client sends big5 encoded data, while the client character set is still latin1. This patch extends the OK packet to allow server to send more information. List of server changes transmitted: - Session system variables - current database (schema) - info is sent as a lenenc string when CLIENT_SERVER_STATE_CHANGE is supported. Else the previous format is followed. A resource manager is also introduced to support session level char pointer system variables. 	91972606a749d5b276008d97195048a86b376235
----------------------------
Bug#17986385:LOG-WARNINGS=2 UNUSABLE ON SLAVE WITH FILTERS Retaining the error log to identify the test behaviour. 	3b4c70921b238180545c08a2819a8292cf0dae39
----------------------------
WL#6120 -post push fix After WL#7205 was pushed, mtr tests are also run in gtid-mode with auto_position=1. The chaged tests here had CHANGE MASTER TO a file/position related field which failed saying this can not be done with auto_positio=1. Fixed by saving the auto_position value in the beginning of the test, setting auto_position= 0 explicitly before using file/position related options in the test and restoring auto_position value at the end of the test. 	d76b67c71d1d23276210738b87d8cecc5db875f3
----------------------------
Bug#17730320: REMOVE UNNEEDE CMAKE CHECKS AND #IFDEFS IN 5.7.4 Patch #3. This patch removes the following: HAVE_SETENV - always true HAVE_DECL_SHM_HUGETLB - use HAVE_LARGE_PAGES instead HUGETLB_USE_PROC_MEMINFO - use HAVE_LARGE_PAGES instead HAVE_LARGE_PAGE_OPTION - use HAVE_LARGE_PAGES || HAVE_SOLARIS_LARGE_PAGES instead HAVE_RWLOCK_T - never used HAVE_DECL_MHA_MAPSIZE_CA - use HAVE_SOLARIS_LARGE_PAGES instead HAVE_SYS_IPC_H - always true (where used) HAVE_SYS_SHM_H - always true (where used) Removed _MSC_VER checks where they are not relevant as we require Visual Studio 2010 (which has _MSC_VER = 1600). Also added CMake check which aborts configuration if an older version of Visual Studio is used. Removed HAVE_PREAD checks where they are not relevant. HAVE_PREAD is always true for non-Windows supported platforms (POSIX). 	2eb5f1473be2433762cd4ff48a270578e14f8b24
----------------------------
Merge: bc18bfd 04b4479 WL#6120- Change master without stopping slave Currently, the way we move from a topology M1->S to M2->S is: a) STOP SLAVE b) SHOW SLAVE STATUS to get (Read_Master_Log_Pos, Master_Log_File) c) START SLAVE UNTIL <position> d) SELECT MASTER_POS_WAIT(<position>) e) CHANGE MASTER <new master> f) START SLAVE The proposal is to reduce these steps to just CHANGE MASTER <new master> wherever applicable. See points (a-d) below regarding these rules. a) If IO thread is running and SQL thread is stopped: - CHANGE MASTER TO RELAY_LOG_FILE/RELAY_LOG_POS/MASTER_DELAY will be allowed. - All other CHANGE MASTER options will be disallowed b) If SQL thread is running and IO thread is stopped: - CHANGE MASTER TO RELAY_LOG_FILE/RELAY_LOG_POS/MASTER_DELAY will be disallowed - All other CHANGE MASTER options will be allowed. c) CHANGE MASTER TO MASTER_AUTO_POSITION=1 will be allowed only if both IO and SQL threads are stopped. d) If the receiver/applier is running and the slave has open temporary tables, we print a warning on CHANGE MASTER. 2) In the above mentioned change, there could be an instant of time when the IO thread is reading from M2 and the SQL thread is executing events that had been received from M1, *both at the same time*. Also there is no overhead of killing and spawning new threads. 3) Currently, CHANGE MASTER purges relay log files unless the command uses RELAY_LOG_FILE/RELAY_LOG_POS option. This behavior will be kept intact when the both thread are stopped. The reason for this is that we can't remove the relay log(s) with a running SQL thread. When any one thread is running while we do a CHANGE MASTER, we dont delete relaylogs. The relaylog deletion can be handled by using the relay-log-purge option. 4) With Statement based replication (SBR), we don't recommend using temporary tables. One reason is that there is a possibility that the temporary tables are left open forever on a failover. To warn users that there could be such a situation we introduce warnings in the error log when one does a change master or stop slave. More precisely, we follow the following rules: 4.1 change master should never drop temp tables 4.2 We introduce a new command to drop temp tables. This will be done in WL#7441. 4.3 The options under change master can be grouped under three groups: a) To change a connection configuration but remain connected to the same master. b) To change positions in binary or relay log(eg: master_log_pos). c) To change the master you are replicating from. Change master should generate a warning if there are open temp tables in cases a and b above. 4.4 Stop slave should generate a warning if there are open temp tables. 	a5f30d5da25d667efdcc85fa9b9c2e70a4b21a27
----------------------------
Bug#17772560 -DWITH_EXAMPLE_STORAGE_ENGINE=1 IS IGNORED -DWITH_EXAMPLE_STORAGE_ENGINE=1 was ignored, although, according to the docs, it shouldn't be If DWITH_EXAMPLE_STORAGE_ENGINE=0 then build it as a plugin. Fix error messages in case the plugin wasn't found (old ones referred to mtr-v1 functionality) 	74e1ea02f4f25183afb0b92711b3fe2e129f04bc
----------------------------
WL#7628 - Remove innodb_use_sys_malloc & innodb_additional_mem_pool_size system variables in 5.7 This effort involves deleting and changing the following code, code files and test files. * Global setting innodb_use_sys_malloc * Test suite/sys_vars/innodb_use_sys_malloc_basic * Global setting innodb_additional_mem_pool_size * Test suite/sys_vars/innodb_additional_mem_pool_size_basic * The common memory pool and all the code that implements memory pools in mem0pool.cc, mem0pool.h, mem0pool.ic * Rename test innodb_use_sys_malloc to innodb-large-prefix and delete the portion of this test that relates to the innodb_use_sys_malloc setting. * Change ut_malloc() so that it always attempts the malloc() 60 times in 60 seconds. Previously, it would try only one malloc() with innodb_use_sys_malloc=ON. If OFF, it used to do the 60 tries in 60 seconds using the common memory pool. * Change ut_realloc so that it always attempts the realloc() 60 times in 60 seconds. Previously, it would try only one realloc() with innodb_use_sys_malloc=ON. If OFF, it used call ut_malloc() for a new buffer and ut_free() for the old buffer. * Deleted metadata_pool_size from information_schema.innodb_metrics * Deleted all UNIV_MEM_DEBUG code. * Greatly simplified mem_heap_validate and mem_heap_check().  All other parts of mem0dbg are removed * Removed all code under MEM_PERIODIC_CHECK and all calls to mem_analyze_corruption(). * Changed some conditional calls to ib_logf(FATAL,...) to just an assert so that the system will stop all threads sooner after a memory corruption. Approved in rb#4512 by Marko 	7d8e9c7c9ce35c59da2e7dc654f4941f46a4d9e3
----------------------------
Bug#18236612: I_S.INNODB_TEMP_TABLE_INFO AND SLAVE_OPEN_TEMP_TABLES SHOWS DIFFERENT RESULTS Problem: With gtid-mode=on, STOP SLAVE followed by START SLAVE resulted in a mismatch between I_S.INNODB_TEMP_TABLE_INFO and SLAVE_OPEN_TEMP_TABLES. The innodb table shows that no such table exists but the slave_open_temp_table variable is non-zero. The mismatch was also seen with gtid-mode=off with STOP SLAVE, CHANGE MASTER TO, START SLAVE. Analysis: Start_log_event_v3::do_apply_event(rli) calls close_temporary_tables(thd) which cleans thd->temporary_tables but does not set the slave_open_temp_tables to 0. Fix: Set slave_open_temp_tables=0 and thd->temporary=NULL in close_temporary_tables(thd). 	5b1138e49e5eae92490c78f34fa32212c9bc6f88
----------------------------
Bug#18235669 MYSQL_CONFIG TO PROVIDE R FLAG ON SOLARIS 'mysql_config --libs' outputs -L/path/to/library on SunOS we also want it to output '-R/path/to/library' in order to find libraries at runtime. 	14ecc25532496014973bc01e54123d2b4771612e
----------------------------
Merge: 1c10a5a 57c2f73 Manual Merge BUG#17632285 SLAVE CAN'T CONTINUE REPLICATION AFTER MASTER'S CRASH RECOVERY Binary events might be sent to slaves before they are flushed to disk on master, even sync_binlog is set to 1. It can cause two problems if the master restarts after an OS crash. * Replication cannot continue because the slaves are requesting to replication the events don't exist on master. * Data exists on slaves, but not exists on the master. The problems are expected on less durable settings( sync_binlog != 1), but it should not happen on durable setting(sync_binlog = 1). Since 5.7 LOCK_log is removed from dump thread. Dump threads can read the binary events before binlog_end_pos simultaneously, even it is not synced to disk. To fixing the problem on durable setting, binlog_end_pos is updated after binlog is flushed to disk. 	1eed3ac02a49b79d4f2b75bf24f20a2687a2470b
----------------------------
BUG#17632285 SLAVE CAN'T CONTINUE REPLICATION AFTER MASTER'S CRASH RECOVERY Binary events might be sent to slaves before they are flushed to disk on master, even sync_binlog is set to 1. It can cause two problems if the master restarts after an OS crash. * Replication cannot continue because the slaves are requesting to replication the events don't exist on master. * Data exists on slaves, but not exists on the master. The problems are expected on less durable settings( sync_binlog != 1), but it should not happen on durable setting(sync_binlog = 1). Since 5.6 binlog group commit implementation, binlog write and sync have been protected by separate mutexes. So dump threads can read the binary events simultaneously or even before it is synced to disk. To fixing the problem on durable setting, LOCK_log is hold in sync stage and it is released after the binary events are synced to disk. 	57c2f739d8348e5152c81e92e9215c7fb8e00815
----------------------------
WL#6781: Support multiple AES Encryption modes * Implemented 128,192 and 256 ECB and CBC for YaSSL * Implemented 128,192 and 256 ECB,CBC,cfb1,cfb8,cfb128 and ofb modes for OpenSSL * added an enum session/global/config/command line variable block_encryption_mode that takes <cipher>-<bits>-<block-mode> values * added an function to generate random byte strings using the ssl library random generator : RANDOM_BYTES(bytelen). * added an optional second parameter for the initialization vector to aes_encrypt() and aes_decrypt(). * updated config editor to use the proper extended C apis. * added tests * fixed the type of the opmode session variable holder * fixed test case failures and compilation errors on linux * fixed IV buffers to account for the terminating 0 * now IV is checked only if needed by the cipher/block size combo. * if IV is not needed by the combo and is supplied a warning is generated * handled bug #18259229 * Added extra tests created during QA 	a7b541c5c2d0492e08ece74ad9982e8715ea9508
----------------------------
WL6559    Optimize GTIDs for passive slave - store GTIDs in table Write test case to cover error branches of resetting gtid table. Write a transaction rollback test case when binlog is disabled and gtid_mode is on. Remove redundant sync_slave_sql_with_master.inc before rpl_end.inc. 	97824f0e4617f6cd350153a5566b34889cc6bb05
----------------------------
Merge: 298404c 71f9d99 WL#7467: Deprecate (5.6) and remove (5.7) ERROR_FOR_DIVISION_BY_ZERO, NO_ZERO_DATE, NO_ZERO_IN_DATE SQL MODES and make their functionality part of STRICT MODE This is the 5.7 version of the patch. This patch removes the functionality of ERROR_FOR_DIVISION_BY_ZERO, NO_ZERO_DATE, NO_ZERO_IN_DATE SQL MODES and makes their functionality part of STRICT MODE. All the tests are updated according to the new behaviour. NOTE:Here STRICT MODE refers to STRICT_ALL_TABLES and STRICT_TRANS_TABLES. NOTE:Also a small refactoring is done for TIME_NO_ZERO_* flags which makes the code conceptually clear and easy to understand. Previously in old code there was an implicit dependency between MODE_NO_ZERO* and TIME_NO_ZERO* flags and they could be freely mixed and the code was confusing and conceptually wrong. With the elimination of MODE_NO_ZERO_* flags handled in this WL, TIME_NO_ZERO_* flags which control the datetime behaviour are also updated. This refactoring is also done to keep the existing behaviour if SQL_MODE is traditional/STRICT. 	d9dad3ed8553bac33baee94d4aa4e685e9e7dc5a
----------------------------
Follow up fix for BUG#18180057: MANUAL DOES NOT EXPLAIN UPPER LIMIT FOR INNODB_FT_RESULT_CACHE_LIMIT VALUE Build error in some 32-bit platform handler/ha_innodb.cc:15819:1: error: this decimal constant is unsigned only in ISO C90 [-Werror] Approved by Jimmy.Yang in IM. 	5d64150320c71098b6eecc3e272ca536063c0059
----------------------------
"Bug#17581990:SLAVE SQL: COULD NOT EXECUTE QUERY EVENT. DETAILED ERROR: ;, ERROR_CODE: 0 Problem: ======== Setting slave-skip-errors=all on the slave will make mysql slave error log to grow continuously with the following warnings. [Warning] Slave SQL: Could not execute Query event. Detailed error: ;, Error_code: 0 Analysis: ======== This warning is generated during execution of Query event from the following peace of code. else if ((expected_error == actual_error && !concurrency_error_code(expected_error)) || ignored_error_code(actual_error)) { DBUG_PRINT(""info"",(""error ignored"")); if (log_warnings > 1 && ignored_error_code(actual_error)) rli->report(WARNING_LEVEL, actual_error,... The warning mainly depends on two parameters named ""expected_error"" and ""actual_error"". These two variables are initialised to zero by default. During the execution when there is no change in their values their values will remain as zeroes. Condition1: becomes true Condition2: It considers 0 as non concurrency related error code causing condition 2 to become true. condition3: 0 is considered as ignored error code. Hence the whole condition becomes true and warning gets generated. Fix: === Having ""actual == expected == 0"" must not be considered as a valid error condition. Hence if non zero value exists for this variable only then it should be checked for ignored error. "	75edea6490d287567033f0909761f0e9cd441886
----------------------------
WL6559    Optimize GTIDs for passive slave - store GTIDs in table When binlog is off, report @@GLOBAL.GTID_PURGED from executed_gtids, since @@GLOBAL.GTID_PURGED and @@GLOBAL.GTID_EXECUTED are always same, so we did not save gtid into lost_gtids for every transaction for improving performance. Optimize conditions of saving gtid into table when binlog is off. Optimize code. 	48a8938db4dbe20f263f20a275e7bb726b865320
----------------------------
BUG# 13975227: ONLINE OPTIMIZE TABLE FOR INNODB TABLES Analysis: -------- OPTIMIZE TABLE on INNODB or PARTITIONED INNODB tables doesn't allow concurrent changes to the same table, thus causing down time in user applications. OPTIMIZE TABLE for INNODB or PARTITIONED INNODB tables uses ALTER TABLE FORCE operation internally to address the fragmentation problem. This operations involves a table copy and taking a strong lock on SQL-layer which blocks all concurrent changes to the table. The downtime is high while performing the operation for large tables. Fix: ---- MySQL supports online rebuilding of tables within the storage engine for INNODB or PARTITIONED INNODB tables starting from MySQL 5.6.4. With this patch, the operations listed below will trigger online rebuild of table. a) OPTIMIZE TABLE. b) ALTER TABLE FORCE and c) ALTER TABLE ENGINE= INNODB(Same engine during creation) The online rebuild involves taking strong lock only for brief interval of time thus reducing the downtime for the operations. Concurrent changes to the table are allowed and the time taken to complete the operation is reduced considerably. Note that these operations will continue to use table copy under any of the below conditions: a) 'old_alter_table' system variable is turned ON. b) 'skip-new' mysqld option is enabled and OPTIMIZE TABLE operation is performed. c) Algorithm COPY is explicitly specified for the ALTER TABLE operations. 	f4611b1c650ee8bc3e9229bae562cf3ef4ed8c73
----------------------------
"* HOME environment variable is not defined when a program is executed under ""service"" + fix by assume a standard root account with home in /root. * DROP DATABASE produce error message despite success + use DROP DATABASE IF EXISTS instead. * --defaults-file option must be first argument "	16f4b1a4835e071caca95ee255c3718012086588
----------------------------
Bug#17986385:LOG-WARNINGS=2 UNUSABLE ON SLAVE WITH FILTERS Fixing a post push test issue. 	ceeb04ded10af687084906a892976fdddd673e8a
----------------------------
Merge: aa1c273 a2b37cb WL#7205 - Making MTR rpl suite GTID_MODE agnostic upmerge from mysql-5.6 -> mysql-trunk 	e9a0063b30046ff021d2dbfb1507b2dfa2212478
----------------------------
WL#7205 - Making MTR rpl suite GTID_MODE agnostic Post push fix to address failing test cases on pb2 daily runs. 	a2b37cb688386467c5d2270143680b90604ed86a
----------------------------
Bug#17947926 COMPILING WITH -DWITHOUT_PARTITION_STORAGE_ENGINE=1 FAILS Storage engines which are built by default according to feature_set.cmake can now be disabled with -DWITH_${eng}_STORAGE_ENGINE=0 or -DWITHOUT_${eng}_STORAGE_ENGINE=1 	29fbf252fac104323848b172283975022880302a
----------------------------
BUG#18180057: MANUAL DOES NOT EXPLAIN UPPER LIMIT FOR INNODB_FT_RESULT_CACHE_LIMIT VALUE Analysis: We set max value of fts_result_cache_limit to ~0UL(max value of ulong), but ulong is 4 bytes on windows, the max value is 4294967295(2**32 -1), which is not consistent with linux(2**64 -1). Solution: We explicitly set the max value to 4294967295. rb://4651 approved by Jimmy.Yang 	bea37de20fe9273fc8ce16740781a20c44f30d8a
----------------------------
WL#5608 Assert that all distributed files follow the principle of most restrictive permission possible Add logic to run mysql_secure_installation after initial server configuration. 	9ba3aa38221dbf9e47e5e35b763af3add4ff85e1
----------------------------
WL6559    Optimize GTIDs for passive slave - store GTIDs in table Saving thd->variables.sql_mode is not necessary, remove it. 	14c96c3fae6bb88a955ddea56b881f0e146ec2ee
----------------------------
WL6559    Optimize GTIDs for passive slave - store GTIDs in table Fix failed 'rpl.rpl_slow_query_log' after merge 	788fff5d4fab3a57cdcbf74273d2c22ba0b6c4fe
----------------------------
Bug#18226934 INNODB WRITES REDO LOG FOR TEMPORARY TABLESPACE Temporary tablespaces in InnoDB are supposed to be discarded and recreated on startup. Therefore, it does not make sense to write redo log for operations on temporary tablespaces. InnoDB was writing some redo log for some operations on temporary undo logs and B-trees, and associated page allocation and freeing. dict_create_index_tree_in_mem(): Assert that the table is temporary, and remove some bogus code and comments that was copied from dict_create_index_tree_step(). dict_truncate_index_tree_in_mem(): Assert that the table is temporary. fsp_init_file_page(), fsp_header_inc_size(), fsp_try_extend_data_file_with_pages(), fsp_try_extend_data_file(), fsp_fill_free_list(), fsp_alloc_free_page(), fsp_free_page(), fsp_free_seg_inode(), fseg_create_general(), fseg_fill_free_list(), fseg_alloc_free_extent(), fseg_alloc_free_page_low(), fseg_free_page_low(), fseg_free_extent(): Assert that redo logging is disabled when a temporary tablespace is being modified. fsp_header_init(): Remove some duplicated code. mtr_t::commit_lsn(): Remove the assertion that m_commit_lsn must be nonzero.  After these fixes, it can be zero if the transaction only modified temporary tables. mtr_t::set_log_mode(): Add debug assertions for enforcing rules on the state changes. Most notably, MTR_LOG_NO_REDO is sticky and can only be set before writing any redo log. page_parse_create(): Remove the parameter mtr. page_copy_rec_list_end_to_created_page(): Do not set log mode to MTR_LOG_SHORT_INSERTS when compressing the tree during IMPORT TABLESPACE. IMPORT TABLESPACE should not be writing any redo log until the tablespace has been fully imported. trx_undo_insert_cleanup(), trx_purge_free_segment(), trx_undo_seg_free(): Add the parameter noredo, for disabling redo logging when removing temporary undo logs. trx_purge_truncate_rseg_history(), trx_rseg_create(), trx_undo_truncate_end_func(), trx_undo_assign_undo(): Do not write redo log for modifying temporary undo logs. trx_write_serialisation_history(): Use a separate mini-transaction for modifying the temporary undo logs. trx_commit_in_memory(): Treat mtr->commit_lsn()==0 specially.  Adjust to other code changes. trx_prepare_low(): Assert that mtr->commit_lsn() if and only if we are preparing a transaction in the temporary undo logs. srv_open_tmp_tablespace(), innobase_start_or_create_for_mysql(): Remove some duplicated code. rb#4611 approved by Vasil Dimov 	bbd11156e8d7b2f8ef6af7f39c9e8df470e06ac3
----------------------------
WL#5608 Assert that all distributed files follow the principle of most restrictive permission possible Add logic to run mysql_secure_installation after initial server configuration. 	b51af914845190c4c06b2a84f4a11cb0345d7a6b
----------------------------
WL6559    Optimize GTIDs for passive slave - store GTIDs in table Remove options '--enforce-gtid-consistency --log-slave-updates --gtid-mode=ON' and replace '--sync_slave_with_master' with 'sync_slave_sql_with_master.inc' 	9dd4249905ede0d53b0026b810584eb8c5d49caf
----------------------------
Merge: cecc705 5c161d7 Bug #14049391   INNODB MISCALCULATES AUTO-INCREMENT AFTER DECREASING AUTO_INCREMENT_INCREMENT Merge from 5.6 	0e67479a1ba7263bae057b38293596c68d9d6fde
----------------------------
Merge: 60cbe6e 90b16f3 Bug #14049391   INNODB MISCALCULATES AUTO-INCREMENT AFTER DECREASING AUTO_INCREMENT_INCREMENT Merge from 5.5 	5c161d7a2beead4aba483b9cad39548639f23d3b
----------------------------
Bug #14049391   INNODB MISCALCULATES AUTO-INCREMENT AFTER DECREASING AUTO_INCREMENT_INCREMENT Problem: ======= When auto_increment_increment system variable decreases, immediate next value of auto increment column is not affected. Solution: ======== Get the previous inserted value of auto increment column by subtracting the previous auto_increment_increment from next auto increment value. After that calculate the current autoinc value using newly changed auto_increment_increment variable. Approved by Sunny [rb#4394] 	90b16f313c4c2719df63fbf4ca9cd3ddd52e924d
----------------------------
ndbapi examples - need to include <windows.h> before <mysql.h> on Windows since SOCKET is used in datatypes and functions. 	4c01af3c6fd64ba612d081514326241497294bbc
----------------------------
Added clarification to the text during password validation configuration. 	34aecc0faa2b677d685810de6a5557630a79343d
----------------------------
Bug#18192896: USE NOMINMAX WHEN BUILDING ON WINDOWS Set NOMINMAX by using ADD_DEFINTIONS() in CMake rather than in config.h.cmake as this makes sure NOMINMAX is set even without including my_config.h The patch also removes workarounds that are no longer needed. The workarounds fixed Windows compilation errors, but they in several places caused windows.h macros to be used instead of std::min / std::max. 	c979d42e25a11ae9423c9534a679dc08717bf551
----------------------------
Bug#18165937 HITTING CRASH WHEN SETTING SSL OPTIONS THROUGH CHANGE MASTER COMMAND Problem: The SSL_CRL options are not available with YASSL. Therefore, there is an assertion in the SSL code to check that ssl_crl and ssl_crlpath are not set by mistake when YASSL is enabled. This assertion was hit from replication code because replication code did not have a special case to set these to NULL when YASSL is enabled. Fix: Replication code would set ssl_crl/ssl_crlpath in two places: 1. In connect_to_master, we fix the bug by setting these variables to NULL when YASSL is enabled. 2. The options are also set in rpl_connect_master. However, it turns out this function is not used anywhere. So here we fix the bug by removing the dead code. 	dd62eb9446f43a75d9b361035a23cff82174ac4c
----------------------------
Merge: aa49182 d3d8542 Bug#14211271 ISSUES WITH SSL ON DEBIAN WHEEZY I386 AND KFREEBSD-I386 Problem: It was reported that on Debian and KFreeBSD platforms, i386 architecture machines certain SSL tests are failing. main.ssl_connect  rpl.rpl_heartbeat_ssl rpl.rpl_ssl1 rpl.rpl_ssl main.ssl_cipher, main.func_encrypt were the tests that were reportedly failing (crashing). The reason for the crashes are said to be due to the assembly code of yaSSL. Solution: There was initially a workaround suggested i.e., to enable -DTAOCRYPT_DISABLE_X86ASM flag which would prevent the crash, but at an expense of 4X reduction of speed. Since this was unacceptable, the fix was the functions using assembly, now input variables from the function call using extended inline assembly on GCC instead of relying on direct assembly code. 	611e978a496d2b17447e5b2b3073372da8487477
----------------------------
Merge: d09e4a9 a41465e Bug#14211271 ISSUES WITH SSL ON DEBIAN WHEEZY I386 AND KFREEBSD-I386 Problem: It was reported that on Debian and KFreeBSD platforms, i386 architecture machines certain SSL tests are failing. main.ssl_connect  rpl.rpl_heartbeat_ssl rpl.rpl_ssl1 rpl.rpl_ssl main.ssl_cipher, main.func_encrypt were the tests that were reportedly failing (crashing). The reason for the crashes are said to be due to the assembly code of yaSSL. Solution: There was initially a workaround suggested i.e., to enable -DTAOCRYPT_DISABLE_X86ASM flag which would prevent the crash, but at an expense of 4X reduction of speed. Since this was unacceptable, the fix was the functions using assembly, now input variables from the function call using extended inline assembly on GCC instead of relying on direct assembly code. 	d3d85423e84359a6f12d2bcbe6e6452891578eeb
----------------------------
Bug#14211271 ISSUES WITH SSL ON DEBIAN WHEEZY I386 AND KFREEBSD-I386 Problem: It was reported that on Debian and KFreeBSD platforms, i386 architecture machines certain SSL tests are failing. main.ssl_connect  rpl.rpl_heartbeat_ssl rpl.rpl_ssl1 rpl.rpl_ssl main.ssl_cipher, main.func_encrypt were the tests that were reportedly failing (crashing). The reason for the crashes are said to be due to the assembly code of yaSSL. Solution: There was initially a workaround suggested i.e., to enable -DTAOCRYPT_DISABLE_X86ASM flag which would prevent the crash, but at an expense of 4X reduction of speed. Since this was unacceptable, the fix was the functions using assembly, now input variables from the function call using extended inline assembly on GCC instead of relying on direct assembly code. 	a41465e01a4794ac897ff49f59dd2572ec1aee2c
----------------------------
"Merge: 6dffca3 a110887 Bug#17495562 WRONG DESCRIPTION OF LENGTH OF AUTH-PLUGIN-DATA IN PROTOCOL::HANDSHAKEV10 Unclear requirements on how auth-plugin-data is sent to the client in the initial server-packet leads to situations where the client can't authenticate to a server. This patch introduces an incompatible change to fix this. A concrete example when this happens is when Connector/J 5.1.18 and server option  --default-authentication-plugin=sha256_password  is used. Background: The sha256_password plugin wants to send a 20-bytes salt to the client which is split into 8 + 12 bytes according to http://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::HandshakeV10 The 2nd part (12 bytes) + the auth-plugin-name looks like ...KHe8SY[]bP9rsha256_password\0 If default-authentication-plugin would be left at its default value ""mysql_native_password"" the same data would look like: ...KHe8SY[]bP9r\0mysql_native_password\0 (note the extra \0 before mysql_native_password) If a client connects that doesn't understand the CLIENT_PLUGIN_AUTH capability (like C/J 5.1.18) they will read up to the terminating \0 and will use the scramble to authenticate. Other older connectors like libmysql-5.1 always only read 12 bytes and ignore everything after that. Therefore they are not affected by the missing \0 character. One could argue that reading always 12 bytes is the correct way, but that doesn't match what the 5.1 (and earlier) server send: ...KHe8SY[]bP9r\0 If it would be fixed size, there would be no need for the \0. Whatever the original intent was there are two ways to parse this data: 1) read up to the \0 byte 2) read 12 bytes, ignore the rest All connectors that take the route of 1) break in the mysql-server configuration described above. Bug has the PIG-stamp-of-approval. "	33f6e47e9fc823d94e6022e4da14ebf1ca9f77d4
----------------------------
"Bug#17495562 WRONG DESCRIPTION OF LENGTH OF AUTH-PLUGIN-DATA IN PROTOCOL::HANDSHAKEV10 Unclear requirements on how auth-plugin-data is sent to the client in the initial server-packet leads to situations where the client can't authenticate to a server. This patch introduces an incompatible change to fix this. A concrete example when this happens is when Connector/J 5.1.18 and server option  --default-authentication-plugin=sha256_password  is used. Background: The sha256_password plugin wants to send a 20-bytes salt to the client which is split into 8 + 12 bytes according to http://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::HandshakeV10 The 2nd part (12 bytes) + the auth-plugin-name looks like ...KHe8SY[]bP9rsha256_password\0 If default-authentication-plugin would be left at its default value ""mysql_native_password"" the same data would look like: ...KHe8SY[]bP9r\0mysql_native_password\0 (note the extra \0 before mysql_native_password) If a client connects that doesn't understand the CLIENT_PLUGIN_AUTH capability (like C/J 5.1.18) they will read up to the terminating \0 and will use the scramble to authenticate. Other older connectors like libmysql-5.1 always only read 12 bytes and ignore everything after that. Therefore they are not affected by the missing \0 character. One could argue that reading always 12 bytes is the correct way, but that doesn't match what the 5.1 (and earlier) server send: ...KHe8SY[]bP9r\0 If it would be fixed size, there would be no need for the \0. Whatever the original intent was there are two ways to parse this data: 1) read up to the \0 byte 2) read 12 bytes, ignore the rest All connectors that take the route of 1) break in the mysql-server configuration described above. Bug has the PIG-stamp-of-approval. "	ac8754632830b5b2335317cd0bad7436d6d2a531
----------------------------
"Bug#17495562 WRONG DESCRIPTION OF LENGTH OF AUTH-PLUGIN-DATA IN PROTOCOL::HANDSHAKEV10 Unclear requirements on how auth-plugin-data is sent to the client in the initial server-packet leads to situations where the client can't authenticate to a server. This patch introduces an incompatible change to fix this. A concrete example when this happens is when Connector/J 5.1.18 and server option  --default-authentication-plugin=sha256_password  is used. Background: The sha256_password plugin wants to send a 20-bytes salt to the client which is split into 8 + 12 bytes according to http://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::HandshakeV10 The 2nd part (12 bytes) + the auth-plugin-name looks like ...KHe8SY[]bP9rsha256_password\0 If default-authentication-plugin would be left at its default value ""mysql_native_password"" the same data would look like: ...KHe8SY[]bP9r\0mysql_native_password\0 (note the extra \0 before mysql_native_password) If a client connects that doesn't understand the CLIENT_PLUGIN_AUTH capability (like C/J 5.1.18) they will read up to the terminating \0 and will use the scramble to authenticate. Other older connectors like libmysql-5.1 always only read 12 bytes and ignore everything after that. Therefore they are not affected by the missing \0 character. One could argue that reading always 12 bytes is the correct way, but that doesn't match what the 5.1 (and earlier) server send: ...KHe8SY[]bP9r\0 If it would be fixed size, there would be no need for the \0. Whatever the original intent was there are two ways to parse this data: 1) read up to the \0 byte 2) read 12 bytes, ignore the rest All connectors that take the route of 1) break in the mysql-server configuration described above. Bug has the PIG-stamp-of-approval. "	a11088710a2e8775a97406a60ecbb2eda1ce3d13
----------------------------
Bug#18152490- WL6120: UPDATE ERROR MESSAGE FOR 'SET GLOBAL SQL_SLAVE_SKIP_COUNTER' AND MORE Problem: WL#6120 introduced ER_SLAVE_IO_THREAD_MUST_STOP and WL#7057 introduced ER_SLAVE_SQL_THREAD_MUST_STOP. Prior to that, we only had ER_SLAVE_MUST_STOP which was used when one of the slave threads needed to be stopped. The bug report asks for spotting all usage of ER_SLAVE_MUST_STOP and analyzing if stopping only one of IO/SQL thread is enough in the given situation. If possible replace with the corresponding error. Fix: Replaced the usage of ER_SLAVE_MUST_STOP in the following situations: - set slave parallel type names. - set SQL_SLAVE_SKIP_COUNTER. Updated tests accordingly. 	75e201c966faf194e51446e254765d6fcd7a9d63
----------------------------
"Bug#18165088 FAILURE TO SETUP EVENT LISTENER DETECTED BY NDB_RESTORE_COMPAT_COMPRESSION Problem: - The ndb_mgmd processes the  ""listen event"" command, writes the reply ""listen event"" to m_output and then adds the new listener to the list of active listeners. But since m_output is buffered(using BufferedSockOutputStream) there is a probability that check_socket_listener() is called before the output is flushed. This caused the client to receive the string ""<PING>"" instead of the expected ""listen event"". - Actually it's also possible for a new log event (from Ndb_mgmd_event_service::log() ) to be written to the socket while pending reply was in the output buffer. Solution: - Flush the reply from buffer before adding the new event listener to the list of active listeners. - Unlock m_mutex while flushing to avoid holding the mutex while doing network IO. This is smilar to the other place where m_oputput is flushed and thus the same logic should apply here. "	445a6a624c48a79bd195a158956fb57a6fcda10c
----------------------------
Bug #18174719: P_S.REPLICATION_CONNECTION_CONFIGURATION'S COL SSL_CRL_PATH THROWS WARNING 1366 Problem: The ssl_crl_path option was not set properly for replication PS table. We have a temporary variable where we have copied values and intended to copy the temporary variable back to the crl_path. Instead of memcpy(destination, source, len), the code contained memcpy(detination, destination, len) and hence the garbage value+warning. Fix: - Correct the memcpy() call. - Made changes in the test accordingly. - Minor cleanups in test. 	9e238c7455b8ac5b6dcac358f844edf30799291f
----------------------------
WL#6890 - MySQL client-server protocol testing - Make it visible in the build logs whether test trace plugin was enabled during build. - Add definitions of tests to be run as part of protocol test. - Fix protocol stage set after new command COM_RESET_CONNECTION. - Fix test trace plugin to skip detailed checks if error was reported for a command. 	3ba43bc7bee0a659b7947850aaf387f1ad106719
----------------------------
Bug#17935314 INCREMENT PERFORMANCE_SCHEMA_DIGEST_LOST WHEN AGGREGATING NULL DIGESTS Before this fix, when the table performance_schema.events_statements_summary_by_digest was already full, the following happened when a new statement with a new digest was found: - the NULL row in events_statements_summary_by_digest was updated (as expected) so that statement statistics were only partially collected, - the Performance_schema_digest_lost status counter was not incremented (questionable, given that statistics were not fully collected) With this fix, for the same scenario, the counter Performance_schema_digest_lost is incremented, to indicate that the table events_statements_summary_by_digest is undersized for the application workload. 	c480b6a15ecc9242a41f30804c0a3c094ece8a28
----------------------------
"Merge: 10009b1 5380312 Bug#11751526 / Bug#42421 - MYSQL_INSTALL_DB.PL NOT RELOCATABLE ON WINDOWS Merge from 5.5->5.6 In addition, changes are - Use the "".ini"" file extension for config files on Windows - Set the default system config file path - In addition, search the top directory for config files on Windows "	986af43da3e67e0d5d0f91fd9a30fa8a6792acc0
----------------------------
"Merge: d8c7a46 95c72a7 Bug#17495562 WRONG DESCRIPTION OF LENGTH OF AUTH-PLUGIN-DATA IN PROTOCOL::HANDSHAKEV10 Unclear requirements on how auth-plugin-data is sent to the client in the initial server-packet leads to situations where the client can't authenticate to a server. This patch introduces an incompatible change to fix this. A concrete example when this happens is when Connector/J 5.1.18 and server option --default-authentication-plugin=sha256_password is used. Background: The sha256_password plugin wants to send a 20-bytes salt to the client which is split into 8 + 12 bytes according to http://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::HandshakeV10 The 2nd part (12 bytes) + the auth-plugin-name looks like ...KHe8SY[]bP9rsha256_password\0 If default-authentication-plugin would be left at its default value ""mysql_native_password"" the same data would look like: ...KHe8SY[]bP9r\0mysql_native_password\0 (note the extra \0 before mysql_native_password) If a client connects that doesn't understand the CLIENT_PLUGIN_AUTH capability (like C/J 5.1.18) they will read up to the terminating \0 and will use the scramble to authenticate. Other older connectors like libmysql-5.1 always only read 12 bytes and ignore everything after that. Therefore they are not affected by the missing \0 character. One could argue that reading always 12 bytes is the correct way, but that doesn't match what the 5.1 (and earlier) server send: ...KHe8SY[]bP9r\0 If it would be fixed size, there would be no need for the \0. Whatever the original intent was there are two ways to parse this data: 1) read up to the \0 byte 2) read 12 bytes, ignore the rest All connectors that take the route of 1) break in the mysql-server configuration described above. Bug has the PIG-stamp-of-approval. "	03c220e0467fe480758fb4022b4afa48d4d22c00
----------------------------
"It's a follow-up patch for the WL#7193 (Decouple THD and st_transactions). - remove the usage of WITH_NDBCLUSTER_STORAGE_ENGINE define from ""new"" code "	f27589a847fe3720b472e994d5e6053beb0a4dc0
----------------------------
WL#5768 : PERFORMANCE SCHEMA, prepared statements instrumentation. Details: - Made max_prepared_stmt_count to be read early as it would be used for sizing hint in P_S. 	5cd5f9bd963387a748d44040b69486b4ea4e3440
----------------------------
Bug #18146422 WHEN BUILDING WITH GCC ON SOLARIS, MAKE EXTRA COPY OF MYSQL_CONFIG Set a variable in mysql_release.cmake so this only applies to release builds, devel builds should not need this. If variable set, then just copy the generated mysql_config. Also, mysql_config matches its own name to find basedir, make that more generic so mysql_server_config also finds itself. 	5d07bba442535ce07d6541f7317be81fd28e6f37
----------------------------
Merge: 63454f2 db1072c Bug#16723046 MYSQLDUMP: UNKNOWN OPTION '--SECURE-AUTH' Problem: Since after 5.6.xx the secure-auth option was by default set to true from false in mysql clients. But the support for this option was added only in mysql client. Other client tools were missing this option and hence were resulting in the error, Unknown option '--secure-auth' Solution: The secure-auth parameter was added to the mysql client utilities which connect to the server i.e., Mysqldump, Mysqladmin, Mysqlcheck, Mysqlbinlog, MysqlImport, Mysqlslap, Mysqlshow, which avoids the error now. 	986e586486514c5b73b219c2be21feb1e30a4e48
----------------------------
Bug#16723046 MYSQLDUMP: UNKNOWN OPTION '--SECURE-AUTH' Problem: Since after 5.6.7 the secure-auth option was by default set to true from false in mysql clients. But the support for this option was added only in mysql client. Other client tools were missing this option and hence were resulting in the error, Unknown option '--secure-auth', when trying to connect to the server Solution: The secure-auth parameter was added to the mysql client utilities which connect to the server i.e., Mysqldump, Mysqladmin, Mysqlcheck, Mysqlbinlog, MysqlImport, Mysqlslap, Mysqlshow, and also mysql_client_fw which now prevents the error. 	db1072c39872b22432faf338ecdefc923d8f128e
----------------------------
Bug#17986385:LOG-WARNINGS=2 UNUSABLE ON SLAVE WITH FILTERS Fixing a post push test failure. 	63454f2e421076f81eb8a8c1f0aae22cf31dc80a
----------------------------
Merge: f41104f 16eb938 Bug#14117012 - CHILD PROCESS MYSQL UTILITIES PICKING UP LOCAL CONFIG FILES CAUSES TEST Merging from 5.6 to trunk. 	edb6aa1db463a9c749ce764b326d906d83879fc2
----------------------------
Merge: 7463a8d 2e1f305 Bug#14117012 - CHILD PROCESS MYSQL UTILITIES PICKING UP LOCAL CONFIG FILES CAUSES TEST Merging from 5.5 to 5.6. 	16eb938d477d964a0991c36b6d07eae7ad5d35cd
----------------------------
"Bug#14117012 - CHILD PROCESS MYSQL UTILITIES PICKING UP LOCAL CONFIG FILES CAUSES TEST Utility as ""mysql_upgrade"" forks ""mysql""/""mysqlcheck"". Attaching ""mysql_upgrade"" shows following calls after forking ""mysql"" or ""mysql_check"" when configuration file information is passed as first argument to ""mysql_upgrade"". strace -f ./mysql_upgrade --defaults-file=../pdb/my.cnf --socket=../pdb/mysql.sock -f [pid  6254] stat(""/etc/my.cnf"", 0x7fff8e772680) = -1 ENOENT (No such file or directory) [pid  6254] stat(""/etc/mysql/my.cnf"", 0x7fff8e772680) = -1 ENOENT (No such file or directory) [pid  6254] stat(""/usr/local/mysql/etc/my.cnf"", 0x7fff8e772680) = -1 ENOENT (No such file or directory) [pid  6254] stat(""/home/user_name/.my.cnf"", {st_mode=S_IFREG|0664, st_size=19, ...}) = 0 [pid  6254] open(""/home/user_name/.my.cnf"", O_RDONLY) = 3 But when tool forks ""mysqlcheck""/""mysql"", ""--no-defaults"" is passed as first argument. Before forking, in function ""find_tool"" of ""mysql_upgrade"", check is made to verify whether tool can be executable or not by calling ""mysqlcheck --help"" and ""mysql --help"". But argument ""--no-defaults"", ""--defaults-file"" or ""defaults-extra-file"" is not passed to ""mysql"" and ""mysqlcheck"". So my.cnf is searched in default paths. Fix: ------ Modified code to pass ""--no-defaults"" as first argument to ""mysql"" and ""mysqlcheck"" while checking tool can be executed or not. "	2e1f305a7379059470d9746cc58b9d4b3398233d
----------------------------
Merge: b38147b 7463a8d Bug#16814264:FILTER OUT THE PERFORMANCE_SCHEMA RELAY LOG EVENTS IN 5.5 AND 5.6 UpMerge from 5.6->trunk 	f41104ff5efd15851eee9968f0c3efca2025eb82
----------------------------
Merge: 0c8057d 567dee0b Bug#16814264 - FILTER OUT THE PERFORMANCE_SCHEMA RELAY LOG EVENTS IN 5.5 AND 5.6 Merge from 5.5->5.6 In addition to the code merge, this patch contains the cross version testing from 5.5 to 5.6 of the following: 1) Binlog containing pfs events generated on a 5.5 server executed on 5.6 server 2) Replication of pfs events from Master 5.5 to slave 5.6 for all formats. 	7463a8da302c47024d7142a64a284329b1414f16
----------------------------
Bug#16814264: FILTER OUT THE PERFORMANCE_SCHEMA RELAY LOG EVENTS FROM RELAY LOG Performance schema tables are local to a server and they should not be allowed to be executed by the slave from the relay log. From 5.6.10, P_S events are not written into the binary log. But prior to that, from mysql 5.5 onwards, P_S events are written to the binary log by master. The following are problematic scenarios: 1. Master 5.5 -> Slave 5.5 ======================== A) RBR: Slave crashes B) SBR: P_S statements are replicated. 2.Master 5.5 -> Slave 5.6 ======================== A) RBR: SQL thd generates error B) SBR : P_S statements are replicated 3. 5.5 binlog executed on a server 5.5 using mysqlbinlog|mysql ================================================================= A) RBR: Server crash  (because of BINLOG'... statement) B) SBR: P_S statements are executed 4. 5.5 binlog executed on server 5.6 using mysqlbinlog|mysql ================================================================ A) RBR: SQL error (because of BINLOG'... statement) B) SBR: P_S statements are executed. The generalized behaviour should be: a) Slave SQL thread should certainly ignore P_S events read from the relay log. b) mysqlbinlog|mysql should replay the binlog succesfully. 	567dee0b5a7969a38d26c435885a0534725930c3
----------------------------
"Bug#17986385:LOG-WARNINGS=2 UNUSABLE ON SLAVE WITH FILTERS Problem: ======== If a slave is configured with replication filters, and log-warnings=2, every statement which is filtered writes an entry to the error log: [Warning] Slave SQL: Could not execute Query event. Detailed error: Slave SQL thread ignored the query because of replicate-*-table rules. For busy servers which generate a lot of statements that get filtered, the result is an error log which can quickly grow into the GB range. Analysis: ======== This warning appears when log_warnings > 1 along with error ER_SLAVE_IGNORE_TABLE. This causes the error log to grow very quickly. Fix: === ""Error_log_throttle"" is used to fix the issue. ""Error_log_throttle"" is a time based way to control the error messages. Throttle is used for errors which are generated very frequently. For such errors first a log_throttle is defined and a time window_size is specified. For example when window is set to 1 min, for every 1 min an error message will be printed which says that this particular error has occurred n number of times. "	0c8057d867c7c022e4bea0442ba5758cae6ae575
----------------------------
Bug#18147458: CONFIGURE.CMAKE IMPROPERLY CHECKS FOR C++ HEADER CXXABI.H The problem was that CHECK_INCLUDE_FILES() was used to check for the presence of the cxxabi.h header file during configure. But as this is a C++ header file, CHECK_INCLUDE_FILE_CXX() should have been used instead. 	c7f52efb02b4dcee18cd5f2b01b1cab519770638
----------------------------
"Bug#18024455 NUMBER OF ROWS IN PERFORMANCE SCHEMA TABLES Before this fix, the estimated number of rows for a performance schema table was a hard coded value 1000 for most tables. This value was intended only as a way to convey to the optimizer the information that a table has ""many"" rows, as opposed to none (0) or just one (1), which can be optimizer differently. This innacurate row count has no negative effects, but is still visible in: - the output of EXPLAIN - the information_schema In particular, it causes confusion, as the number of rows claimed in EXPLAIN is inconsistent with the number or rows really used. This fix implements a ::get_row_count() method for every performance_schema table, which computes a more accurate number of rows, based on sizing parameters used when allocating memory for each table. "	9365ea8e36c27b777bb94441da6f9e143f09f502
----------------------------
Bug#17938255 : SUM_SORT_MERGE_PASSES IN STATEMENT DIGESTS IS NOT CORRECT Details: - There was wrong assignment in source code which was causing this issue. - Fixed it. 	119b6c3da257c634d4640aa77f4a49b67eedd4db
----------------------------
Bug#18003651 VALGRIND: MEMORY LEAK AT THE TIME OF SERVER START UP The race conditions during server shutdown are gone, so cleanup of of pfs_instr_config_array is simply a matter of deleting all allocated objects. Swich from DYNAMIC_ARRAY to Prealloced_array: it is faster, and it is type safe. Remove valgrind suppressions related pfs_instr_config_array. 	62815b83dabc788a673a484c381dbe706f8b692f
----------------------------
Merge: 839894e da59b0e WL#7205 - Making MTR rpl suite GTID_MODE agnostic NULL merge from mysql-5.6 -> mysql-trunk 	bd74adc231f7cc7cd4a38e4d9150a61f08d6a1f1
----------------------------
WL#7205 - Making MTR rpl suite GTID_MODE agnostic Post push fix for failing test on mysql-5.6. The failure was because the result file were not updated. 	da59b0e48176bfe5864b404a8c1e26967c48a4d0
----------------------------
Merge: dbd1972 619a25d WL#7205- Making MTR rpl suite GTID_MODE agnostic Upmerge from mysql-5.6 -> mysql-trunk 	839894e6584ecdb4014ce5de3e2603c07a55b0eb
----------------------------
WL#7205 - Making MTR rpl suite GTID_MODE agnostic Post push fix for failing test on mysql-5.6. The failure was because the result file were not updated. 	619a25dddc637277e8b4eab54343369b8a5e4755
----------------------------
"Bug#17495562 WRONG DESCRIPTION OF LENGTH OF AUTH-PLUGIN-DATA IN PROTOCOL::HANDSHAKEV10 Unclear requirements on how auth-plugin-data is sent to the client in the initial server-packet leads to situations where the client can't authenticate to a server. This patch introduces an incompatible change to fix this. A concrete example when this happens is when Connector/J 5.1.18 and server option  --default-authentication-plugin=sha256_password  is used. Background: The sha256_password plugin wants to send a 20-bytes salt to the client which is split into 8 + 12 bytes according to http://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::HandshakeV10 The 2nd part (12 bytes) + the auth-plugin-name looks like ...KHe8SY[]bP9rsha256_password\0 If default-authentication-plugin would be left at its default value ""mysql_native_password"" the same data would look like: ...KHe8SY[]bP9r\0mysql_native_password\0 (note the extra \0 before mysql_native_password) If a client connects that doesn't understand the CLIENT_PLUGIN_AUTH capability (like C/J 5.1.18) they will read up to the terminating \0 and will use the scramble to authenticate. Other older connectors like libmysql-5.1 always only read 12 bytes and ignore everything after that. Therefore they are not affected by the missing \0 character. One could argue that reading always 12 bytes is the correct way, but that doesn't match what the 5.1 (and earlier) server send: ...KHe8SY[]bP9r\0 If it would be fixed size, there would be no need for the \0. Whatever the original intent was there are two ways to parse this data: 1) read up to the \0 byte 2) read 12 bytes, ignore the rest All connectors that take the route of 1) break in the mysql-server configuration described above. Bug has the PIG-stamp-of-approval. "	ade1c94f734f1471175df9f311c7ba96f99b2377
----------------------------
Merge: d28e24d c34ab84 WL#7205 - Making MTR rpl suite GTID_MODE agnostic Upmerge from mysql-5.6 -> mysql-trunk 	c45949701c588263c05147aced309e0be41d9b4e
----------------------------
WL#7205 - Make the MTR rpl suite GTID_MODE agnostic This worklog aims at making the MTR rpl suite GTID_MODE agnostic, so that we can have run it daily on pushbuild with --gtid-mode=ON. 	c34ab84e4f594504781b9b784b2fd6c41abd172a
----------------------------
WL6559    Optimize GTIDs for passive slave - store GTIDs in table If gtid_mode is enabled and binlog is disabled, initialize executed_gtids from gtid table and lost_gtids has a same gtid set with executed_gtids during server startup. 	6fb9e0a28f71288bbfd2c94df7aa631e568447df
----------------------------
"Merge: eb24975 36546be Bug#17319380 ERROR 1406 (22001): DATA TOO LONG FOR COLUMN 'PROCESSLIST_STATE' FOR SLAVE SQL Problem: SQL thread's idle state message (Slave has read all relay log; waiting for the slave I/O thread to update it) is 75 chars length. But performance_schema.threads processlist_state column is defined as char(64). When SQL thread is instrumented and 75 chars state message is inserted into this varchar(64) column. Server will generate either warning/error depends on sql_mode empty or 'strict_all_tables'. Fix: Changing all the state messages which are greater than 64 chars in leangth into a *less than 64 chars* state message. 1) ""Slave has read all relay log; waiting for the slave I/O thread to update it"" (75 chars state message) is changed into ""Slave has read all relay log; waiting for more updates"" (54 chars state message) 2) ""Master has sent all binlog to slave; waiting for binlog to be updated"" (69 chars state message) is changed into ""Master has sent all binlog to slave; waiting for more updates"" (61 chars state message). 3) ""Making temporary file (create) before replaying LOAD DATA INFILE."" (65 chars state message) is changed into ""Making temporary file (append) before replaying LOAD DATA INFILE"" (64 chars state message). 4) ""Making temporary file (append) before replaying LOAD DATA INFILE."" (65 chars state message) is changed into ""Making temporary file (append) before replaying LOAD DATA INFILE."" (64 chars state message). "	27bd4338fe8ed9c0fa723a55ef3d6817e80fc3c0
----------------------------
Bug#17319380 ERROR 1406 (22001): DATA TOO LONG FOR COLUMN 'PROCESSLIST_STATE' FOR SLAVE SQL Problem: SQL thread's idle state message (Slave has read all relay log; waiting for the slave I/O thread to update it) is 75 chars length. But performance_schema.threads processlist_state column is defined as char(64). When SQL thread is instrumented and 75 chars state message is inserted into this varchar(64) column. Server will generate either warning/error depends on sql_mode empty or 'strict_all_tables'. Fix: Truncate the state message to 64 chars before inserting into the column (No Warning/No error). 	36546be8051d7a6befc5cfd15018c7426ee3afd1
----------------------------
Bug#17730320: REMOVE UNNEEDE CMAKE CHECKS AND #IFDEFS IN 5.7.4 Patch #2. This patch removes the following CMake checks: TIME_T_UNSIGNED - always false on supported platforms. HAVE_GETADDRINFO - always true on supported platforms. HAVE_SELECT - always true on supported platforms. QSORT_TYPE_IS_VOID - always true on supported platforms. HAVE_SOCKET_SIZE_T_AS_socklen_t - always true for non-Windows. SIGNAL_RETURN_TYPE_IS_VOID - always true on supported platforms. HAVE_POSIX_SIGNALS - result not used. HAVE_BSD_SIGNALS - always false on supported platforms. HAVE_SVR3_SIGNALS - result not used. HAVE_V7_SIGNALS - result not used. Remove the following typedefs: puchar - not used pshort - not used pfloat - not used Remove the following macros: STRUCT_RLIMIT - always struct rlimit sig_handler - always void qsort_t - always void SORT_RETURN - always return Remove the following files: dbug_long.h - not used my_sleep.c - move contents to my_sys.h 	eb249758e72a4946f5d219626ed22c293f560ca2
----------------------------
BUG#17863690 - ASSERTION `THR_THD_INITIALIZED' FAILED. FIX AND DESCRIPTION:- i_rpl.rpl_innodb_disabled sporadically fails with the assertion THR_THD_INITIALIZED. In the course of execution this MTR test, mysqld server is restarted multiple times. This involves the shutdown of server and there are some connections (including connections established at start of MTR) that are waiting on network read event.  If some connections are not terminated gracefully, connections are closed and waited until the thd list goes empty. Once thd list becomes empty, there could be some number of threads could be executing the thd destructor while the main shutdown thread could go ahead with the cleanup including the destruction of THR_THD and THR_MALLOC pthread keys which causes the assertion. All connection related threads (including the replication threads call) call the function release_resource after which thd is removed from the global list and hence move restore_ globals into the release_resources to fix the test case which indicates ASSERTION `THR_THD_INITIALIZED' FAILED. This patch also moves Relay_log_info::end_info and mysql_audit_free_thd into release_resources. 	805d8e0491e3b4440eed581181b651eddf39342a
----------------------------
Merge: bf11794 b36dc8b BUG 18117322 - DEFINE INNODB_THREAD_SLEEP_DELAY MAX VALUE The maximum value for innodb_thread_sleep_delay is 4294967295 (32-bit) or 18446744073709551615 (64-bit) microseconds. This is way too big, since the max value of innodb_thread_sleep_delay is limited by innodb_adaptive_max_sleep_delay if that value is set to non-zero value (its default is 150,000). Solution The maximum value of innodb_thread_sleep_delay should be the same as the maximum value of innodb_adaptive_max_sleep_delay, which is 1000000. Approved by Jimmy, rb#4429 	639ec724e3c0452aa4f1b19c6bf8e25e9161c5c4
----------------------------
Merge: 5f265fe 8ac3933 BUG 18117322 - DEFINE INNODB_THREAD_SLEEP_DELAY MAX VALUE The maximum value for innodb_thread_sleep_delay is 4294967295 (32-bit) or 18446744073709551615 (64-bit) microseconds. This is way too big, since the max value of innodb_thread_sleep_delay is limited by innodb_adaptive_max_sleep_delay if that value is set to non-zero value (its default is 150,000). Solution The maximum value of innodb_thread_sleep_delay should be the same as the maximum value of innodb_adaptive_max_sleep_delay, which is 1000000. Approved by Jimmy, rb#4429 	b36dc8bb4a4ded9428ee99d1c8d9563f9b45268b
----------------------------
BUG 18117322 - DEFINE INNODB_THREAD_SLEEP_DELAY MAX VALUE The maximum value for innodb_thread_sleep_delay is 4294967295 (32-bit) or 18446744073709551615 (64-bit) microseconds. This is way too big, since the max value of innodb_thread_sleep_delay is limited by innodb_adaptive_max_sleep_delay if that value is set to non-zero value (its default is 150,000). Solution The maximum value of innodb_thread_sleep_delay should be the same as the maximum value of innodb_adaptive_max_sleep_delay, which is 1000000. Approved by Jimmy, rb#4429 	8ac393341c6da15be98c66ac91849c97c1be42ec
----------------------------
WL#6120- Change master without stopping slave - Added mysql_mutex_assert_owner(get_log_lock()); in MYSQL_BIN_LOG.open_binlog() so that it complains if the lock is not taken. If the assert isnt there it could lead to races in future. Also added locks in the callers to avoid crashes after adding the assert. - The variable 'data_cond' is only being used in class Relay_log_info and not in the class Master_info. Added a note in the code regarding this observation. - CHANGE MASTER TO with a MASTER_LOG_FILE clause but no MASTER_LOG_POS clause may not be safe. The old position value is unlikely to be valid for the new binary log file. Added a warning regarding this. - Also corrected rpl_change_topology.inc for the same reason as in the above point. - Added comments in an aim to get a more verbose and better organized test/result file - Other minor bug fixes and cleanup. 	4a9465b9af38a6072ae123efc79fa229ee104485
----------------------------
Bug#18021493: PLEASE BACKPORT FIX FOR 15909788 TO 5.6 Description: ------------ Please backport this bugfix to 5.6.  Running out of tmpdir space can cripple a server. Bug 15909788 - TEMPORARY FILES CREATED BY BINARY LOG CACHE ARE NOT PURGED AFTER TRANSACTION COM. 	65378edfc8f244dcecbb5c8bb3d74dbdfc9299b2
----------------------------
Follow up to wl7342 which refactored the tablespace class in InnoDB.  There were some regressions in the embedded runs of pushbuild.  Most were unforseen changes in the testcases.  But there was one issure in the way InnoDB converted a filepath to lower case on Windows.  The solution is to store the filepath with the case provided and compare to other filepaths as case insensitive if lower_case_table_names is not 0. 	a0a475ec686f8301857060b9d1c16294c3dc2eed
----------------------------
Bug#18082702 LIBMYSQLD.A KEEPS ON GROWING AND GROWING AND GROWING AND .... Remove duplicates when merging several libraries into one. Initialize MYSQLD_STATIC_EMBEDDED_PLUGIN_LIBS before CONFIGURE_PLUGINS() 	bc3508024389a42667192301ef906ea8a028d2a4
----------------------------
Bug#18102839 MYSQL_CONFIG SHOULD NOT REPORT EMBEDDED LIBS IF CONFIGURED WITHOUT_SERVER=1 	30280c6510e3577b43809621cfb737ea5ad19c6d
----------------------------
BUG#17813449 post-merge fixes Problem 1: The patch for BUG#17813449 introduced a new point where the SQL thread sets GTID_NEXT. Before, the SQL thread only set GTID_NEXT in Gtid_log_event::do_apply_event. Now, it additionally sets GTID_NEXT in rpl_pre_statement_checks, when processing a relay log from an old master that does not generate any Gtid events at all. When setting GTID_NEXT for a slave thread, in 5.7 we also have to copy the GTID to Slave_worker::currently_executing_gtid, so that PERFORMANCE_SCHEMA.REPLICATION_EXECUTE_STATUS_BY_WORKER can read it. This copying was missing in the first patch for the bug because the patch was based on 5.6. Fix 1: Factor out the code for copying the GTID to THD::set_currently_executing_gtid_for_slave_thread and call it from both places. Problem 2: PERFORMANCE_SCHEMA.REPLICATION_EXECUTE_STATUS_BY_WORKER would set the GTID wrong in corner cases: - It assumes that the last executing transaction is ANONYMOUS just because gtid_mode=OFF. This is not necessarily true, we have to check the actual transaction type. - If gtid_mode=off, it shows that the last executing transaction is 'ANONYMOUS' even if no transaction has been executed. It should show '' in this case. Fix 2: - Change type of currently_executing_transaction from Gtid to Gtid_specification, so that it can contain an anonymous transaction. - Correct the logic in table_replication_execute_status_by_worker::make_row 	bff11cce04e228791eeb3725372737e55302cc11
----------------------------
Bug#18047865 UNDERSIZED MAX-THREAD-INSTANCES CAUSE OVERHEAD IN 5.6 OR CRASH IN 5.7 When tables are re opened from the table cache, and when the current thread is not instrumented for the performance schema, the following happens: - In 5.7, the code crash, while attempting to populate column OWNER_THREAD_ID in table performance_schema.table_handles - In 5.6, the code instruments a table handle when not necessary, causing performance degradations. The fix is to never instrument table handles, when re opening a table from the table cache from a non instrumented thread. 	5e3e0c411ab1931cf2148786772f3956728a18c9
----------------------------
WL#6120- Change master without stopping slave - Moved code to set 'need_relay_log_purge' variable from change_execute_options() to have_execute_option(). - Removed 'ret' variable from change_master(). - Removed mysql_cond_broadcast(&mi->data_cond); This has no listener. - Modified the signature of set_password(). The second argument was not being used so removed it. The callers always make sure NULL is not being passed as password, so added an assert for the same. - Improved tests comments. - Fixed indentation issues. 	a0b3da054932a6ea35f1278b837c31980abd6b51
----------------------------
Bug#16316074 RFE: MAKE TMPDIR A BUILD-TIME CONFIGURABLE OPTION Bug#68338    RFE: make tmpdir a build-time configurable option Post-push fix: windows needs DEFAULT_TMPDIR as well. 	a7cdd02ccdacb30dcafc8850ceb05fe639ff5315
----------------------------
Bug#14298560: DOCUMENTATION FOR SOURCE CONFIGURATION SHOULD LIST COMPLIATION_COMMENT Change configure.pl so that it uses the correct CMake optin COMPILATION_COMMENT and not the outdated WITH_COMMENT. 	a9a0cee23c8b48ff13960ea586aa7aef04c4e6e8
----------------------------
Bug#16316074 RFE: MAKE TMPDIR A BUILD-TIME CONFIGURABLE OPTION Bug#68338    RFE: make tmpdir a build-time configurable option Post-push fix: 'cmake -LH | grep TMP' showed TMPDIR as a BOOL option, which was a bit confusing: show it as a PATH instead. 	6b1066db900cd74feca14fe6b0e61b98bbececdb
----------------------------
Bug #17415203  MYSQL_SECURE_INSTALLATION CRASHED WHILE CONNECTING WITH USER PASSWORD EXPIRED Problem: mysql_secure_installation crashes when the password for root has expired. It occurs only on windows. Solution: The cause for the bug is that 'shared_memory_base_name' is freed in mysql_close_free_options when the connection fails on calling mysql_real_connect. Hence there will be a segmentation fault when a connection is retried. A patch is made to init the connection options once again before the attempt to reconnect. 	32fc83f1eebfe7f8aac1c1fe79538e69bac234bf
----------------------------
"Bug#17803141 ASSERT FAILURE WHEN RUNNING OPTIMIZE TABLE WITH GTID_MODE=ON Solving post-fix failures in valgrind tests. There are some ""alter_commands"" in sql_yacc.yy that will call mysql_admin_table() without initializing thd->lex->no_write_to_binlog because they don't have this option (CHECK TABLE for example). We fix the valgrind issue by removing thd->lex->no_write_to_binlog verification from gtid_rollback_must_be_skipped variable. This will not compromise the original patch functionality and will avoid the possibility of using an uninitialized variable. "	320789f2770ca237000d122081f0bf381e8b51c5
----------------------------
Fixing the failure for binlog.binlog_checksum.test triggered by wl 7411. The test main.ctype_gbk_binlog.test was not properly cleaned up. Adding the cleanup statement: --remove_file $MYSQLD_DATADIR/master-bin.saved as the file $MYSQLD_DATADIR/master-bin.saved is used in other tests as well. 	779df1c1df8aa484ae6cb5d2847300f07720b25d
----------------------------
Bug#17959689: MAKE GCC AND CLANG GIVE CONSISTENT COMPILATION WARNINGS Post-push fix: On some OS X configurations we use different compilers for C and C++ code. The original patch could cause problems for such configurations as it used the C compiler to check if -Wvla was supported and then applied the flag to both the C and C++ compiler. So if clang was used as C compiler (supports the flag) and G++ 4.2 was used as C++ compiler (does not support the flag), the build broke. This patch fixes the problem by doing the check twice, once for the C compiler and once for the C++ compiler. 	f44c8b2ff462d304eff26b096e2b1f115b4c1970
----------------------------
"Bug#17803141 ASSERT FAILURE WHEN RUNNING OPTIMIZE TABLE WITH GTID_MODE=ON Problem: ======= The rpl_failed_optimize MTR test running with GTIDs enabled is making an assert to fail at the slave server. This happens when the slave SQL thread tries to binlog an OPTIMIZE TABLE statement for an inexistent table that was successfully executed (and binlogged) at the master. Background: ========== It is a general property of all commands based on mysql_admin_table() to return errors as part of a result set instead of failing the statement as they rarely end-up in error. Because of this property it is possible to do something like ""OPTIMIZE TABLE t1, t2, t3;"" and get different results/errors for t1, t2 and t3 and do not fail the whole statement. Also, from locking perspective, each table in this list is processed individually: i.e. the client session will acquire locks on a single table, open it, process it and then release the locks (and commit/rollback transaction) before processing next table in the statement. Analysis: ======== The reported problem happens when the rpl_failed_optimize test is running with GITDs enabled and tries to execute an OPTIMIZE TABLE for an inexistent table in the master server. This command succeeds at the master, goes to master's binlog, goes to slave's relay log, is executed by the SQL thread and then fails to be binlogged to the slave's binlog. The issue happens inside mysql_admin_table(), that is called by Sql_cmd_optimize_table::execute(). Sql_cmd_optimize_table::execute() will binlog the current statement unless the call to mysql_admin_table() returns error. For each table to be processed, the mysql_admin_table() function will call open_and_lock_tables() function that might call trans_rollback_stmt() if an error is found when trying to open an table (if the table doesn't exists for example). The trans_rollback_stmt() function will call gtid_rollback() to ensure that the GTID_NEXT associated with the current session will not be used in the case of a rolled back statement. The problem is that mysql_admin_table() has a property of not throwing errors to the client session as stated earlier in the Background section. So, because of this property, mysql_admin_table() will return that it has succeed to Sql_cmd_optimize_table::execute(), even if some minor errors had happened. As the mysql_admin_table() call has succeed, Sql_cmd_optimize_table::execute() will try to binlog the statement but it will fail to do so because GTIDs are enabled and some minor error happened (and gtid_rollback() was called), and no GTID_NEXT is available to binlog the current statement. The same behavior will happen not only with OPTIMIZE TABLE, but also with ANALYZE TABLE and REPAIR TABLE table maintenance statements, all based on mysql_admin_table(). Fix: === This fix aims only to ensure that the same behavior that happened at the master will happen in the slave, even if GTIDs are enabled. It will assure that if a GTID_NEXT was set to GTID_GROUP for the statement execution, the same GTID will be available to be binlogged if the command succeeds. @ sql/sql_class.h A new flag was created into THD object named ""skip_gtid_rollback"". @ sql/sql_class.cc This flag is initialized as ""false"" at the THD object constructor. @ sql/rpl_gtid_execution.cc At the gtid_rollback() function, a test in the ""skip_gtid_rollback"" flag will prevent the rollback of the GTID if the flag is enabled. @ sql/sql_admin.cc In the beginning of the mysql_admin_table() function, we added code to check if the current statement have to go to binlog, if the GTID_NEXT type is set to GTID_GROUP and if the THD->skip_gtid_rollback flag is not enabled, setting the result on a local flag variable named ""gtid_rollback_must_be_skipped"". Then, before entering the main loop for processing the tables, we check if the ""gtid_rollback_must_be_skipped"" flag is set, changing THD->skip_gtid_rollback to ""true"" if needed. Finally, we check if the ""gtid_rollback_must_be_skipped"" flag is set, restoring the gtid_rollback() normal behavior by setting THD->skip_gtid_rollback to ""false"" again in three mysql_admin_table() locations: - Just before returning that the mysql_admin_table() has succeeded; - Before the ""err:"" section calls to trans_rollback_stmt(); - Before mysql_admin_table() exit in the case of a ER_PARTITION_MGMT_ON_NONPARTITIONED error. "	fede9c047d7a451836d3bf1c46395c8f51c334a1
----------------------------
Bug#17666774 - FK: CRASH WHEN ADDING PREFIXED CONSTRAINT When foreign key checking is disabled (SET foreign_key_checks=0), InnoDB crashes trying to add an invalid Foreign key. Return ER_CANNOT_ADD_FOREIGN error message when we cannot add a foreign key without a referenced column. Approved by Jimmy. rb#3759 	391327b08587ea16592f5b834b70cb428c50c387
----------------------------
BUG#17772911: SHOW SLAVE STATUS DISPLAYS WRONG VALUES FOR SSL_CRL FIELDS SHOW SLAVE STATUS would not report the correct values for MASTER_SSL_CRL and MASTER_SSL_CRLPATH. It was picking the values to show from the wrong place (mi->ssl_ca instead of mi->ssl_crl and mi->ssl_capath instead of mi->ssl_crlpath). This patch fixes that and deploys a minimal test case to validate that the correct values are displyed on SHOW SLAVE STATUS. 	061fcd9bf173652934e999885b518387263552c0
----------------------------
"POTENTIALLY SERIOUS COMPILER WARNING: ""_FILE_OFFSET_BITS"" REDEFINED '_FILE_OFFSET_BITS' is defined in my_config.h to either 32 or 64 depending on wheteher configure determines that 32 or 64 bits file offsets should be used by the filesystem calls. (Like 'offs' argumet to lseek()) If not defined, and compiled as 32 bit binaries, some OS'es assume that 32 bit offsets will be used and thus provides the default '#define _FILE_OFFSET_BITS 32'. If 'my_config.h' is included to late (or my_global.h / ndb_global.h which include 'config'), '_FILE_OFFSET_BITS 32' will first be defined, and then later redefined to '64' by my_config.h. This could result in undefined behaviour by using a mix of normal, and the 'large' filesystem calls. In addition to silence this warning, this fix also seems to fix an issue where several tests in the main suite fails with errno=29. (ESPIPE 29 /* Illegal seek */ ) "	de328a1877f3fcffe53add55e1a9ab31a4c0fdad
----------------------------
"WL#7305 ""Improve MDL scalability by using lock-free hash"". The main benefit of this patch is that it opens the way for implementing WL7306 which brings significant improvement to MDL performance/scalability in some scenarios. The basic idea behind this patch is to change the MDL_map implementation to use LF_HASH instead of a partitioned HASH container, where each partition is protected by individual mutexes. Nice results of such a change: - Since on systems with atomic support LF_HASH is lock-free, MDL_map_partition::m_mutex and potential concurrency bottleneck associated with it was removed. - For the same reason it doesn't make sense to partition LF_HASH. So we returned back to the scheme with one hash for the whole MDL_map and removed the MDL_map_partition class and the mdl_locks_hash_partitions start-up parameter. - Thanks to the fact that LF_HASH is integrated with LF_ALLOCATOR and uses per-thread hazard pointers to avoid objects in the hash from being deleted immediately after they were looked up, we were able to get rid of all MDL_map/MDL_lock machinery responsible for reference counting (i.e. MDL_lock::m_ref_usage/m_ref_release/ m_version). - We also no longer need the MDL_map_partition::m_unused_locks_cache as LF_ALLOCATOR has its own mechanism for caching objects which are expensive to create/destroy. To support the above changes the following additional steps were taken: - Since it is tricky to use LF_HASH with objects of different types stored in LF_ALLOCATOR, to support these changes we had to get rid of MDL_object_lock/MDL_scoped_lock dichotomy. This was done by moving out their differences to a MDL_lock_strategy structure which is referenced from the MDL_lock object by pointer. - To make it easier to use LF_HASH with non-trivially copyable objects (such as MDL_lock) a new callback ""initialize"" was added to it. This callback allows finishing of initialization of the object provided by LF_ALLOCATOR and set element key from the object passed as parameter to lf_hash_insert. Also LF_HASH was extended to support a user-provided hash function such as MurmurHash3 used in the MDL subsystem. - LF_HASH and LF_ALLOCATOR initialization functions were extended to be able to accept callback functions used in them as explicit parameters. - lf_alloc_direct_free() was fixed to call destructor callback before doing my_free() on memory belong to object being freed. Also the following user visible change was made -- --metadata_locks_cache_size and --metadata_locks_hash_instances startup options and corresponding system variables were declared as deprecated as they now have no effect. "	74091505aee777376d3a12e85b62ad9afb2e823e
----------------------------
WL#6642 - Follow up fix, buf_dblwr_flush_buffered_writes() opportunity should not be reduced. * WL#6642 - InnoDB: multiple page_cleaner threads * 'innodb_page_cleaners' option is added to perform flushing dirty pages * and keeping free pages for each buffer pool instance in parallel. * Increasing the value of the options increases scalability of the activity. * This patch was originally written by Inaam Rana, * and refactored by Yasufumi Kinoshita. * rb#3004 Approved by Kevin Lewis and Marko Makela 	2cebc48d1a75d9dec4185a610a5def32d6db7670
----------------------------
"Fix for bug#18053050  POTENTIALLY SERIOUS COMPILER WARNING: ""_FILE_OFFSET_BITS"" REDEFINED '_FILE_OFFSET_BITS' is defined in my_global.h to either 32 or 64 depending on wheteher configure determines that 32 or 64 bits file offsets should be supported by lseek(). If not defined, and compiled as 32 bit binaries, some OS'es assume that 32 bit lseek() will be used, and thus provides the default '#define _FILE_OFFSET_BITS 32'. If 'my_global.h' is included to late, '_FILE_OFFSET_BITS 32' will first be defined, and then later redefined to '64' by my_global.h. This could result in part of the code using 32 bit lseek() while later part use 64 bit lseek(). In addition to silence this warning, this fix also seems to fix an issue where several tests in the main suite fails with errno=29 (ESPIPE 29 /* Illegal seek */ ) "	88f5a8a74d86fecbae930f854bf6596aa0f9a9b0
----------------------------
Merge: 9d0efa6 b689a32 Bug#16287752    INNODB_DATA_FILE_PATH MINIMUM SIZE IN DOCUMENTATION [Merge from 5.6] 	baacab195207f2f18cf236933742b9f2ab25e8c3
----------------------------
Merge: 386d1f8 970a705 Bug#16287752    INNODB_DATA_FILE_PATH MINIMUM SIZE IN DOCUMENTATION [ Merge from 5.5 ] 	b689a32757a9daac3420d305790fd9262aa78112
----------------------------
Bug#16287752    INNODB_DATA_FILE_PATH MINIMUM SIZE IN DOCUMENTATION Problem ------- The documentation says that we support 'K' prefix while specifiying size for innodb datafile in the server variable for innodb_data_file_path ,but the function srv_parse_megabytes() only handles only 'M' (megabytes) and 'G' (gigabytes) . Fix --- Modify srv_parse_megabytes() to handle Kilobytes. Add in documentation that while specifying size in KB it should be mentioned in multiples of 1024 other wise they will be rounded off to nearest MB (megabyte) boundry .(eg if size mentioned as 2313KB will be considered as 2 MB ). [ Approved by Marko #rb 2387 ] 	970a7058ba4fc34f87ad52e1dbe9aafe0677efd3
----------------------------
Merge: f8697f9 386d1f8 Bug#16715064 MYSQL COMMUNITY UTILITIES CANNOT CONNECT TO MYSQL ENTERPRISE WITH SSL ENABLED Problem: It was reported that MySQL community utilities cannot connect to a MySQL Enterprise 5.6.x server with SSL configured. We can reproduce the issue when we try to connect an MySQL Enterprise Server with a MySQL Client with --ssl-ca parameter enabled. We get an ERROR 2026 (HY000): SSL connection error: unknown error number. Solution: The root cause of the problem was determined to be the difference in handling of the certificates by OpenSSL(Enterprise) and yaSSL(Community). OpenSSL expects a blank certificate to be sent when a parameter (ssl-ca, or ssl-cert or ssl-key) has not been specified.On the other hand yaSSL doesn't send any certificate and since OpenSSL does not expect this behaviour it returns an Unknown SSL error. The issue was resolved by yaSSL adding capability to send blank certificate when any of the parameter is missing. 	7becc5d6332031f6db4d5f7d1035b72aff148699
----------------------------
Bug#16715064 MYSQL COMMUNITY UTILITIES CANNOT CONNECT TO MYSQL ENTERPRISE WITH SSL ENABLED Problem: It was reported that MySQL community utilities cannot connect to a MySQL Enterprise 5.6.x server with SSL configured. We can reproduce the issue when we try to connect an MySQL Enterprise Server with a MySQL Client with --ssl-ca parameter enabled. We get an ERROR 2026 (HY000): SSL connection error: unknown error number. Solution: The root cause of the problem was determined to be the difference in handling of the certificates by OpenSSL(Enterprise) and yaSSL(Community). OpenSSL expects a blank certificate to be sent when a parameter (ssl-ca, or ssl-cert or ssl-key) has not been specified.On the other hand yaSSL doesn't send any certificate and since OpenSSL does not expect this behaviour it returns an Unknown SSL error. The issue was resolved by yaSSL adding capability to send blank certificate when any of the parameter is missing. 	386d1f81225ce9ba25a0357f53fee7c75a48e212
----------------------------
"Bug#18046811 COMPILATION ERRORS WHILE BUILDING MYSQL-5.6.16 ON SOLARIS 10 Include my_config.h before any system headers, to avoid Warning (Anachronism): Attempt to redefine _FILE_OFFSET_BITS without using #undef. Include <stdio.h> before <vector> to avoid ""/usr/include/floatingpoint.h"", line 164: Error: FILE is not defined."" ""/usr/include/stdio.h"", line 82: Error: Multiple declaration for std::FILE."" (this must be a bug in the solaris header files) "	d8d3342fb2ca690c9d6c02b1a74acea68cdd32ba
----------------------------
Bug#16715064 MYSQL COMMUNITY UTILITIES CANNOT CONNECT TO MYSQL ENTERPRISE WITH SSL ENABLED Problem: It was reported that MySQL community utilities cannot connect to a MySQL Enterprise 5.6.x server with SSL configured. We can reproduce the issue when we try to connect an MySQL Enterprise Server with a MySQL Client with --ssl-ca parameter enabled. We get an ERROR 2026 (HY000): SSL connection error: unknown error number. Solution: The root cause of the problem was determined to be the difference in handling of the certificates by OpenSSL(Enterprise) and yaSSL(Community). OpenSSL expects a blank certificate to be sent when a parameter (ssl-ca, or ssl-cert or ssl-key) has not been specified.On the other hand yaSSL doesn't send any certificate and since OpenSSL does not expect this behaviour it returns an Unknown SSL error. The issue was resolved by yaSSL adding capability to send blank certificate when any of the parameter is missing. 	f67ccf469d8d89b7c0be2e79c4f39d46bdd9f17b
----------------------------
"Bug#18046811 COMPILATION ERRORS WHILE BUILDING MYSQL-5.6.16 ON SOLARIS 10 Include my_config.h before any system headers, to avoid Warning (Anachronism): Attempt to redefine _FILE_OFFSET_BITS without using #undef. Include <stdio.h> before <vector> to avoid ""/usr/include/floatingpoint.h"", line 164: Error: FILE is not defined."" ""/usr/include/stdio.h"", line 82: Error: Multiple declaration for std::FILE."" (this must be a bug in the solaris header files) "	2d1f41fad3c87764450aee37d5dc4383a581370f
----------------------------
Merge: 7c00c7e f67ccf4 Bug#16715064 MYSQL COMMUNITY UTILITIES CANNOT CONNECT TO MYSQL ENTERPRISE WITH SSL ENABLED Problem: It was reported that MySQL community utilities cannot connect to a MySQL Enterprise 5.6.x server with SSL configured. We can reproduce the issue when we try to connect an MySQL Enterprise Server with a MySQL Client with --ssl-ca parameter enabled. We get an ERROR 2026 (HY000): SSL connection error: unknown error number. Solution: The root cause of the problem was determined to be the difference in handling of the certificates by OpenSSL(Enterprise) and yaSSL(Community). OpenSSL expects a blank certificate to be sent when a parameter (ssl-ca, or ssl-cert or ssl-key) has not been specified.On the other hand yaSSL doesn't send any certificate and since OpenSSL does not expect this behaviour it returns an Unknown SSL error. The issue was resolved by yaSSL adding capability to send blank certificate when any of the parameter is missing. 	0d63353b56e7e3284e84c54a5b43f4367da96506
----------------------------
"Bug#17993294 MORE THAN ONE STAGE NAMED ""STAGE/SQL/INIT""? Before this fix, the very first stage executed within a statement was ""stage/sql/init"". For statements and stages instrumentation, the instrumented code that creates this stage looks like: MYSQL_START_STATEMENT(...); THD_STAGE_INFO(thd, stage_init); The older SHOW PROFILE instrumentation, however, uses a hard coded name for the first proc_info state, ""starting"". See PROFILING::start_new_query(). Using THD_STAGE_INFO(thd, stage_init) at the beginning of a statement is incorrect for two reasons: - it is incompatible with the previous SHOW PROFILE instrumentation, - it collides with a different stage named ""init"", already used as part of some statements execution, causing confusion. This fix defines a ""stage/sql/starting"" stage, which is now the very first stage executed after MYSQL_START_STATEMENT(). Bug#18035404 ""WAITING TO GET READLOCK"" STAGE IS NOT USED IN 5.6 ANY MORE Before this fix, stage ""stage/sql/Waiting to get readlock"" in table performance_schema.setup_instruments was unused in the code. This fix removes the orphaned instrument. "	821fe39207278aab923082654c1536f9841687bf
----------------------------
Merge: bdf3f52 0d63353 Bug#16715064 MYSQL COMMUNITY UTILITIES CANNOT CONNECT TO MYSQL ENTERPRISE WITH SSL ENABLED Problem: It was reported that MySQL community utilities cannot connect to a MySQL Enterprise 5.6.x server with SSL configured. We can reproduce the issue when we try to connect an MySQL Enterprise Server with a MySQL Client with --ssl-ca parameter enabled. We get an ERROR 2026 (HY000): SSL connection error: unknown error number. Solution: The root cause of the problem was determined to be the difference in handling of the certificates by OpenSSL(Enterprise) and yaSSL(Community). OpenSSL expects a blank certificate to be sent when a parameter (ssl-ca, or ssl-cert or ssl-key) has not been specified.On the other hand yaSSL doesn't send any certificate and since OpenSSL does not expect this behaviour it returns an Unknown SSL error. The issue was resolved by yaSSL adding capability to send blank certificate when any of the parameter is missing. 	d0e6480d5487af5297793a162d4b55481be47270
----------------------------
Bug#17959689: MAKE GCC AND CLANG GIVE CONSISTENT COMPILATION WARNINGS This patch sets the same compiler warning flags when using Clang as for GCC regardless of debug or release build. With the exception of -Werror which is still only set for GCC when using MYSQL_MAINTAINER_MODE (default ON when building debug versions). This makes it easier to avoid introducing GCC build breaks when using Clang as compiler (e.g. on OS X). The patch also moves setting of some warning flags from configure.cmake to cmake/maintainer.cmake where the rest of the flags are set. Also note that after this patch, the list of warning flags listed during configuration is the list of flags actually used for compiling the server (excluding memcached and cluster). In addition, the following warning flag changes are done: * -Wformat-security is added for both GCC/Clang. This is desidered by Fedora (https://fedoraproject.org/wiki/Format-Security-FAQ). Compiling trunk gives no new warnings with this flag added. * -Wwrite-strings is only set for C code. It has different meaning for C++ where it is default on anyway. * CMake check for -Wdeclaration-after-statement is removed as this flag is supported by all current versions of GCC/Clang. * -Wunused is removed as it included with -Wall and -Wextra. * -Wno-strict-aliasing is removed as it has no effect when compiling with -fno-strict-aliasing. If -fno-strict-aliasing at some point in the future is removed, we will very likely want to get strict alias warnings reported. * -Wno-compare-distinct-pointer-types is now set when compiling GUnit to silence warnings for code we don't control. * COMPILE_FLAG_WERROR is removed as it is unused. 	cd61aed74ee7d972d62d54282c92e8a5ba0ad86e
----------------------------
Fix for bug#16620938  SOL 10/11 X64 32BIT FAILING TO BUILD NDBMTD '#if defines' in mt-asm.h didn't check for 32bit x86 platforms '__i386' Inluded this as suggested in bug report by Laasya Moduludu. Also change configure and makefiles such that we always try to compile 'WITH_NDBMTD' - As 'ndbmtd' is a mandatory part of our deliveries, and failure to build this should *not* be ignored. 	4ff5e2d5ca7fc8a0d392b278552741f377e949ba
----------------------------
Bug #17503460 MYSQL READ ONLY DOESN'T WORK FOR DROP TRIGGER Problem: Drop Trigger succeeds even after setting read_only variable to ON. Fix: Fix is to report the standard error (ER_OPTION_PREVENTS_STATEMENT)when global read_only variable is set to ON. 	08e6dee9144842486ea5934505233a81159a5b83
----------------------------
Bug#18004599 LINKTEST FAILURES ON SOLARIS SPARC AND LINUX 64 BIT PLATFORMS scripts/mysql_config depends on client and server targets, so ADD_SUBDIRECTORY(scripts) after all source code directories. 	0b7cf9f789915b226c2594de574e8534485a6ada
----------------------------
"Bug#17587952: ADJUST EQ_RANGE_INDEX_DIVE_LIMIT DEFAULT VALUE Adjust default value for system variable ""eq_range_index_dive_limit"" from 10 to 200. Change requested by community. "	14973df8251ef755e77fec83dbd0c534bd736842
----------------------------
"Bug#17510411: AN INDEPENDENT INSTANCE WITH SEMISYNC ENABLED STILL NEED ACK FROM SLAVE Problem: ======== When Semi synchronous replication is configured on an independent server without any slave and ""rpl_semi_sync_master_wait_no_slave"" is set to ""off"" the master still waits for an ack from the slave. Analysis: ======== As per the documentation if the value of the variable ""rpl_semi_sync_master_wait_no_slave"" is set to OFF, the master reverts to normal replication if the slave count drops to zero during the time out period. But in the existing code the above changes are not implemented. Fix: === When ""rpl_semi_sync_master_wait_no_slave"" is set to off check if semi sync is switched on or not if on then check if any slaves are connected or not. If not connected switch_off the semi sync and turn it on when user sets the variable to on. "	da0e47d1d1e66dc12736f63845ab6c48819f7436
----------------------------
Fix for Bug#17857442: MULTITHREADED JOB SCHEDULER SHOULD HANDLE LEAPS IN CLOCK TIME We have seen customer bug reports, like bug 17475425, where it looks like delayed signal processing from the 'time_queue' comes completely out of control: There seems to be two scenarios: - Processing of delayes signals stops completely for a long periode, or forever. This will cause issues like the disk write speed throttling to completely halt any disk activity (Local checkpoints stop) - We see a burst of signals which should have been delayed relatively to each other, executed withing the same clock second. Inspecting the mt-scheduler code, we find that this may happen if the NdbTick clock moves forward or backwards in large leaps. When the time moved backwards, it will stop the time_queue handling until the same amount of clock time has passed again. A forward leap will force the scheduler to simulate that the same amount of time passing by expiring all time_queue event in the elapsed periode. Such timer leaps might happen if the platform does not support monotonic timers, or we didn't implement the usage of these on the specific platform. Windows used to be such a platform prior to fixing bug 17647637. However, there are still such platforms, OSX seems to be one of these, and possible some Linux variants. Furthermore there seems to be several OS/HW/VM bugs related to monotonic timers not always being monotonic after all. And there might be time leaps due to CPU starvation such that we are stuck for a long time - So this has to be expected and handled somehow. Looking at the single threaded scheduler we find that it actually handle such leaps - see ThreadConfig::scanTimeQueue(). This logic doesn't seem to have been ported to the mt-version !! The single threaded handling is to accept a backtick as the new current time. A forward leap of more than 1500ms will be consumed by resetting the current time to 'now-1000'ms and continue from there. This fix introduce the same handling in the MT-scheduler. Furthermore, we also found that the mt-scheduler allowed itself to yield CPU, or wait for receiving signals, even if it has possibly expired event to handle from the time_queue. (see: 'lagging_timers') We are not sure about whether this has any ill effects - However, it doesn't seem like a good idea to let possible expired signals linger any longer than necessary - also fixed. Also removed a ndbout_c() which was a leftover from previous debugging. 	a05b20e58c79d123d804485127550ac3b83b5d08
----------------------------
WL#6630 Semisync separate acks collector FEATURE ======= Before this feature, acknowledgments were received in dump threads. After sending an acknowledgment request, dump threads needed to receive the acknowledgment immediately. So the following events were delayed and delaying time was depended on the network situation. All slave connections are based on TCP which is duplex. It means we can send binary events and receive acknowledgments simultaneously. In this way, binary events can be sent without delay. This worklog implement above feature. DESIGN ====== * Start/Stop ack receive thread The thread is controlled automatically by semisync master. - It is started automatically when enabling semisync master through SET rpl_semi_sync_master_enabled = ON - It is stopped automatically when disabling semisync master through SET rpl_semi_sync_master_enabled = OFF * Show ack receive thread status to performance_schema.threads - Ack receive thread status can be showed through querying performance_schema.threads table, when semisync master is on(ack thread is up). - PROCESSLIST_STATE contents 1. Waiting for semi-sync slave connection. 2. Waiting for semi-sync ACK from slave. 3. Reading semi-sync ACK from slave. 	e20b8c545a16e964f9bb921c3e13c27c59e4ec8c
----------------------------
WL6559    Optimize GTIDs for passive slave - store GTIDs in table Resolve the problem between 'RESET MASTER' thread and 'TRANSACTION' theads, which will cause inconsistency between GLOBAL.GTID_EXECUTED and gtid table after resetting the master. And optimize code. 	3e2a45e54b012bc50ec2c58e81135482b8994161
----------------------------
This patch fixes the bug#17911445 - TC_LOG_PAGE_SIZE SHOULD BE UNFLUSHABLE OR SERVER CRASHES IF 2 XA SES INSTALLED. The status variable tc_log_page_size is directly bound to tc_log_page_size source variable, which is setup once in TC_LOG_MMAP::open(). Running of statement FLUSH STATUS would cause it to be reset to zero. Then during doing implicit commit the TC_LOG_MMAP::unlog() would attempt to divide by it that led to crash. To fix this bug a type of status variable tc_log_page_size was changed to SHOW_LONG_NOFLUSH that denies reset of status variable value to zero. MTR test isn't added since there isn't currently any other engine with XA feature enabled aside from INNODB. I tested my patch using the fake second engine with XA feature enabled that I created from ha_example.cc. I think it won't be correct to modify ha_example.cc just for the sake of patch test coverage. 	afa3107b8089153e0c4f21e2e5ab94668bdefb41
----------------------------
WL#6642 - InnoDB: multiple page_cleaner threads 'innodb_page_cleaners' option is added to perform flushing dirty pages and keeping free pages for each buffer pool instance in parallel. Increasing the value of the options increases scalability of the activity. 'innodb_page_cleaners' Variable Scope   | Global Dynamic Variable | No Type             | numeric Default          | 1 Range            | 1 .. 64 This patch was originally written by Inaam Rana, and refactored by Yasufumi Kinoshita. rb#3004 Approved by Kevin Lewis and Marko Makela 	2e392f865c1f15aa950ebb061946b80c820d0794
----------------------------
Merge: ae5a1bd 5e6c62c Bug #17209750 OLD FILES NOT BEING REMOVED FROM PERFORMANCE_SCHEMA.FILE_INSTANCES Merging from mysql-5.6 to mysql-trunk 	4042443778573b1833f56ad2ad55205774e095f2
----------------------------
"Bug #17209750 OLD FILES NOT BEING REMOVED FROM PERFORMANCE_SCHEMA.FILE_INSTANCES Description: ""When a file is deleted from the disk, it is also removed from the file_instances table.""  This is not true on either 5.5.23 or 5.6.11.  When there are three relay log files on disk, but the file_instances table lists more number of relay logs. Even this case is happening for master bin and slave bin logs. Analysis: When we are deleting the slave-relay-bin/master-bin/slave-bin log files we were using the my_delete() function which is not P_S instrumented function. Hence, the files are not removed from the file_instances table. Fix: As part of the fix we replaced my_delete() function with P_S instrumented mysql_file_delete() function. "	5e6c62c8701e8eea2fc776eaaa977b5dbac3d310
----------------------------
WL6559    Optimize GTIDs for passive slave - store GTIDs in table 1. Correct the behavior of the transaction commit when saving gtid into the gtid table. We just need to commit the transaction when compressing the gtid table, reseting the gtid table, and fetching gtids from the gtid table. 2. Fix bugs caused by XA transaction. 3. Remove an assertion as we generate transaction's gtid and save it into table on the top of XA_END. So the thd->owned_gtid.sidno is assigned in XA_PREPARE and XA_COMMIT phase. 4. Set default value of system variable 'executed_gtids_compression_period' to 1000, as we got a good performance with the value in performance test. 5. Add test cases to verify that XA transactions' gtids are stored into gtid table and can be reported from global.gtid_executed correctly. 	c59649f4b6b2374623ed3e8c981999a0076f0c4f
----------------------------
BUG#17827018: SLAVE WITH GTID_MODE=OFF LOSES GTID OF GTID-TRANSACTION IN RELAY LOG BUG#17813449: SLAVE WITH GTID_MODE=ON GENERATES A GTID FOR ANONYMOUS TRANSACTIONS IN RELAY LOG Background: In replication, all transactions that have a GTID are supposed to be replicated with the same GTID, and all transactions that don't have a GTID are supposed to be replicated without a GTID. If the current GTID_MODE prevents preserving GTIDs or non-GTIDs in this way, an error should be generated. Problem 1: If a transaction was replicated to the slave and stored in the relay log but not executed, and then the slave was restarted with the opposite GTID_MODE, then the transaction would be executed and assigned a wrong GTID: 1.1. (BUG#17813449) If the transaction was anonymous and the slave changed from GTID_MODE=OFF to ON, then a new GTID was generated for the transactions. 1.2. (BUG#17827018) If the transaction was a GTID-transaction and the slave changed from GTID_MODE=ON to OFF, then the transaction would lose its GTID.  If the slave was built in debug-mode, an assertion was raised. The correct behavior in both cases is to generate an error and not execute the transaction. Problem 2: The server would generate an error message when it started with gtid_mode=off and there exists GTIDs in some old binary log. Problem 3: Gtid_log_event::do_apply_event did not check if the event was an Anonymous_gtid_log_event. So an Anonymous_gtid_log_event would be applied like a Gtid_log_event and thus it would set a wrong gtid on the transaction. Problem 4: Implicit commits inside a transaction is disallowed in GTID-transactions, and generate an error.  However, the check for this was too strong: it generated an error also if gtid_mode='anonymous'. That will cause replication errors in NEW->OLD once the server generates Anonymous_gtid_log_events. Fix 1.1: The slave applier thread has to use gtid_next=anonymous when it executes transactions from an old relay log. However, the slave only knows that it executes an old relay log by the absence of Gtid_log_event before a transaction. So the solution is: 1.1.1. Set thd->variables.gtid_next.type to the new value NOT_YET_DETERMINED_GROUP when executing a Format_description_log_event originating from another server, and: 1.1.1.1. In Gtid_log_event::do_apply_event, silently convert this value to the correct GTID (this gets executed for relay logs generated with GTID_MODE=ON). Generate an error if gtid_mode=off. 1.1.1.2. In gtid_pre_statement_checks, silently convert this value to ANONYMOUS (this gets executed for relay logs generated with GTID_MODE=OFF).  Generate an error if gtid_mode=on. (This error fixes the bug.) 1.1.2. Setting NOT_YET_DETERMINED_GROUP must be done both for parallel slave workers and for the legacy SQL thread; thus both in rpl_rli.cc and rpl_rli_pdb.h. 1.1.3. In order for the NOT_YET_DETERMINED_GROUP flag to be correctly converted to ANONYMOUS_GROUP in RBR, we need to call gtid_pre_statement_checks for row events even if opt_bin_log is off. 1.1.4. The change in row events would generate an assertion for setting the diagnostics area twice, because gtid_pre_statement_checks was called before mysql_reset_thd_for_next_command. Thus, we move the call to gtid_pre_statement_checks to just after mysql_reset_thd_for_next_command in Rows_log_event::do_apply_event 1.1.5. When using mysqlbinlog --skip-gtids, the user expects a client that replays the output to generate new GTIDs. However, with this change, the client is 'too smart'; when it processes the Format_description_log_event it sets gtid_next to NOT_YET_DETERMINED, and later when it executes a statement without having seen any GTID (as the GTIDs are filtered out by --skip-gtids), it will force the transaction to be anonymous. So when --skip-gtids is given, mysqlbinlog now prints a SET GTID_NEXT='AUTOMATIC' statement, just after the BINLOG base64 statement. Fix 1.2: 1.2.1. Remove the assertion: It is perfectly possible that the applier thread reads a Gtid_log_event when gtid_mode is not off. 1.2.2. Add a check to ensure error is generated when trying to execute a Gtid_log_event when gtid_mode=off. Fix 2: This error message should never be generated, so just remove it. Fix 3: In Gtid_log_event::do_apply_event, check if spec.type==ANONYMOUS_GROUP, if yes set gtid_next='anonymous'. If gtid_mode=on, generate an error. Fix 4: Generate error only if gtid_next is a GTID. 	94600812d043d2e905b7b71ddb3844d63b2c0c29
----------------------------
"Bug#17287443	ERROR(1030): GOT ERROR -1 FROM STORAGE ENGINE PROBLEM ------- When we try to do DML operations in innodb force recovery mode.we get a cryptic error message. ERROR(1030): GOT ERROR -1 FROM STORAGE ENGINE FIX --- Introduced a new error ER_INNODB_FORCE_RECOVERY which will print proper error message. [Approved by Kevin and Krunal #rb4095 and rb#4137] "	bc2dc7163ba9df215056c491451fbacd1a4a8423
----------------------------
Clusterj create mvn pom.xml files Change configure and cmake files to create mvn pom.xml files with proper version numbers and optional suffix, e.g. -SNAPSHOT 	7b00f2fe5b26384dccbe78c95e2578420dd54d56
----------------------------
"ndb - remove some test from default.daily ndb.ndb_share, ndb_rpl.ndb_rpl_slave_lsu, and ndb_rpl.ndb_rpl_slave_lsu_anyval starts some mysqld without log-bin enabled and fails with [ERROR] You need to use --log-bin to make --binlog-format work. for runs in default.daily that sets binlog-format. The error is changed to warning for 5.5/7.2 and up as fix of Bug #11751903	 42928: BINLOG-FORMAT SETTING PREVENTS SERVER FROM START IF BINARY LOGGING IS DIS "	0c269434a275a2fab8cc2d168cd9b07c6507fecf
----------------------------
Merge: 081249c 254a1bf Followup fix for Bug 17827378 MTR DOES NOT REPORT IF A TEST FAILS TO DROP CREATED EVENTS: - Check for triggers should exclude mtr's own - Move the code to before checksum table as it might affects result of some autdit_log tests - Remove duplicated show status like 'slave_open_temp_tables'; 	b75acf30f994aea9a96cbfb4d465129c68f2d4ea
----------------------------
Followup fix for Bug 17827378 MTR DOES NOT REPORT IF A TEST FAILS TO DROP CREATED EVENTS: - Check for triggers should exclude mtr's own - Move the code to before checksum table as it might affect result of some autdit_log tests (does in 5.6) - Replace SHOW STATUS LIKE 'slave_open_temp_tables' to be like in 5.6 	254a1bfb9d315eeffaf73b2b932992dd96ebe314
----------------------------
ndb - re-record test result for main.ctype_cp932_binlog_row Test is not run without adding --mysqld=--binlog-format=row to mtr command line. log event Write_rows changed to Write_rows_v1 by revision-id: frazer.clement@oracle.com-20110921101158-0js4hali1q25aa1e timestamp: Wed 2011-09-21 11:11:58 +0100 message: WL5353 : Implement v2 of Binlog row events 	acf576e655ac4ccfddb5567efae63c1ea4a2e326
----------------------------
Bug#16316074 RFE: MAKE TMPDIR A BUILD-TIME CONFIGURABLE OPTION Bug#68338    RFE: make tmpdir a build-time configurable option Background: Some distributions use tmpfs for mounting /tmp by default, which has some advantages, but brings also new issues. Fedora started using tmpfs on /tmp in version 18 for example. If not configured otherwise in my.cnf, MySQL uses system's constant P_tmpdir expanded to /tmp on Linux. This can introduce some problems with limited space in /tmp and also some data loss in case of replication slave [1]. In case distributions would like to use /var/tmp, which should be better for MySQL purposes, then we have to patch the source or change tmpdir option in my.cnf, which is however not updated in case it has already existed. Thus, it would be useful to be able to specify default tmpdir path using a configure option, while using P_tmpdir in case it is not defined explicitly. Based on a contribution from Honza Horak 	08d5b6a53e457835c37054d5056f77b7a80afc2e
----------------------------
ndb - change error number in test result for i_main.valgrind and parts.partition_debug_sync_innodb Error ER_DEBUG_SYNC_TIMEOUT has number 1639 in 5.1 but 1640 in 6.3, 7.0, 7.1. 	6ac4e3224a10131564acc325b04ba962790d0909
----------------------------
WL6559    Optimize GTIDs for passive slave - store GTIDs in table 1. Create a mysql system table named gtid_executed, a row in the table can contain an interval of several GTIDs, all having the same SID and consecutive GNOs as following: CREATE TABLE gtid_executed( sid CHAR(36) NOT NULL,       -- Source ID gno_start BIGINT NOT NULL,   -- First GNO of interval gno_end BIGINT NOT NULL,     -- Last GNO of interval PRIMARY KEY(sid, gno_start)  -- PK on interval start ) ENGINE = InnoDB; 2. Store gtids into the gtid_executed table always if gtid_mode is enabled as following: INSERT INTO gtid_executed VALUES (SID, GNO, GNO) - If binlog is disabled and gtid_mode is enabled, store gtids from master's transactions, relayed BINLOG transactions and 'SET @@SESSION.GTID_NEXT' statement into gtid_executed table right before transaction prepare. - If binlog is enabled and gtid_mode is enabled, store GTIDs into both binlog and gtid_executed table. 3. The gtid_executed table would be filled with singleton interval as we cannot use UPDATE instead of INSERT, because any concurrently executing transactions would conflict on the update. So we propose to create a FOREGROUND thread (we can not create a BACKGROUND thread as we have to create THD object to open gtid_executed table) and introduce a user variable 'executed_gtids_compression_period' to control how often the thread should be woken up to compress the gtid_executed table regularly. - To the user variable 'executed_gtids_compression_period', if value is 0, the thread never wakes up, if value is 1, wakes up every transaction. If value is 1000, wakes up every 1000 transactions. - We also added the thread's state info (suspending, compressing gtid_executed table) into performance_schema.threads table, so that user can monitor it and tune the user variable 'executed_gtids_compression_period' (The thread is in suspended mode most of the time, wakes up only when it needs). - THe thread runs always, user cannot kill it as we didn't add it into PROCESSLIST. - The thread opens a transactional context to execute the following within a single transaction on an non-autocommit mode: - Read each row by the PK in increasing order, delete consecutive rows from the gtid_executed table and fetch these deleted gtids at the same time. - Store compressed intervals from these deleted gtids into the gtid_executed table. 4. Report @@GLOBAL.GTID_EXECUTED and @@GLOBAL.GTID_PURGED from both binlog and gtid_executed table as following: - GLOBAL.GTID_EXECUTED = all gtids of gtid_executed table; - GLOBAL.GTID_PURGED = GLOBAL.GTID_EXECUTED - (GTID_EXECUTED_BINLOG - GTID_PURGED_BINLOG); (GTID_EXECUTED_BINLOG: gtid_set of gtids is ever logged in binary logs. GTID_PURGED_BINLOG  : gtid_set of gtids is purged from binary logs.) - GLOBAL.GTID_EXECUTED is initialized with all gtids of gtid_executed table during server restarting. Every transaction's gtid is added into the GLOBAL.GTID_EXECUTED and gtid_executed table if gtid_mode is enabled after server restarts. - GLOBAL.GTID_PURGED is initialized with gtids from gtid_executed table and binlogs and precomputed as above during server restarting. After server restarts, added purged gtids into GLOBAL.GTID_PURGED when purging logs (regardless binlog is enabled or not), and added every transaction's gtid into GLOBAL.GTID_PURGED if binlog is disabled and gtid_mode is enabled. - A previous log event with GTID_EXECUTED_BINLOG (GTID_EXECUTED - GTID_ONLY_IN_TABLE) set is created when rotating binlog, so GTID_ONLY_IN_TABLE variable is maintained when binlog is enabled. GTID_ONLY_IN_TABLE is initialized with difference gtids from gtid_executed table and the latest binlog during server restarting. GTID_ONLY_IN_TABLE will never change since starting server. (we don't need maintain GTID_ONLY_IN_TABLE when binlog is disabled) - If gtid_executed_table is empty, add all gtids in GTID_EXECUTED_BINLOG into gtid_executed table during server restarting (Handle the upgrade case, and the case that a slave is provisioned from a backup of the master and the slave is cleaned by RESET MASTER and RESET SLAVE before this.). - The gtid_executed table is also initialized with gtid_purged when user is initializing it through SET GLOBAL gtid_purged. (It is possible to update the value of gtid_purged, but only by adding GTIDs to those already listed, and only when gtid_executed is unset—that is, on a new server.) 5. The gtid_executed table is reset when resetting master. 6. Gtid_table_persistor class It manages all operations on the gtid table. - m_count Count the append rows of the table. - save(Gtid *gtid) Insert the gtid into table. - save(Gtid_set *gtid_set) Store gtid set into the table. - compress() Compress intervals into consecutive GNOs in the table. - reset() Delete all rows from the table. - fetch_gtids_from_table(Gtid_set *gtid_set) Fetch gtids from the table and store them into gtid set. 	2b578d7fa6d0d59ce623987104055c1a5d6a6409
----------------------------
"The fix for Bug#16249481 was not enabled for builds. ""#cmakedefine INNODB_PAGE_ATOMIC_REF_COUNT"" is added to config.h.cmake Patch made by Sunny Bains (by mail) Approved by Yasufumi Kinoshita * revno: 5677 * committer: Sunny Bains <Sunny.Bains@Oracle.Com> * branch nick: 5.6 * timestamp: Tue 2013-12-10 14:30:34 +0530 * message: *  Bug#16249481 - INNODB DOES NOT SCALE WELL ON 12 CORE SYSTEM FOR SPECIFIC ALL IN MEMORY SELECT * *  Add a new build option: INNODB_PAGE_ATOMIC_REF_COUNT, default is ON. * *  If this option is enabled then use atomic reference counting to track *  block use. If it is off then use the old way. * *  Approved by Yasufumi Kinoshita rb#3958. "	d01a7fe365c3b5bea60b24f3b6676efec093fa26
----------------------------
Bug #17513341 : >=4G JOIN_BUFFER_SIZE CRASH WHEN JOINING TABLES, VIEWS. Post-push fix : Fixed valgrind reported leak issue. Reason wrong merge from 5.6 to trunk has misplaced DBUG_EXECUTE_IF after my_malloc in JOIN_CACHE::alloc_buffer. Fixed the same. 	c551dda3e7a68ac51c472127341149840424f945
----------------------------
BUG#16807964 - NEED A NEW ERROR CODE: HA_OUT_OF_MEMORY FOR ENGINES post push fix for compilation errors which occurs when source is compiled with cmake option -DWITH_PARTITION_STORAGE_ENGINE=0. 	1117bdfae874bb4d02523803b68a48731f5cd675
----------------------------
Merge: 86a59dc e14dd76 Bug #17513341 : >=4G JOIN_BUFFER_SIZE CRASH WHEN JOINING TABLES, VIEWS. Merge from 5.6 to trunk 	2621831bf7a16a8725785154ae8e9066ac3041e0
----------------------------
Bug #17513341 : >=4G JOIN_BUFFER_SIZE CRASH WHEN JOINING TABLES, VIEWS ISSUE         : 1. Offset address from a join buffer of size >=4gb can be >4 bytes long. But we have only considered offsets upto 4bytes long. This will lead to invalid buffer read and memory corruption henceforth. 2. If we fail to allocate join buffer then we are not freeing the JOIN_CACHE_X instance. Now next join buffer will wrongly take this unfreed JOIN_CACHE_X instance as its previous cache. Hence in incremental join buffer implementation there will be a chance for unallocated memory access. Solution      : 1. Now for join buffer >=4gb we have made offest address size = 8 bytes. 2. If we fail to allocate the join buffer we free the JOIN_CACHE_X instance also. 	e14dd7657d97b32401e0613b372baba8e8d44d87
----------------------------
Change default charset for connections to UTF8MB4 MySQLConnectionPool.js allow user to specify mysql_charset in connection properties send the settings on each new connection to the database SET character_set_client SET character_set_connection SET character_set_results mysql_service_provider.js set the default to UTF8MB4 in getConnectionProperties 	a5de73d098e7f315d2faf6afdb38a2c8a1dba31b
----------------------------
Bug#17928281 'CHECK_PERFORMANCE_SCHEMA()' LEAVES 'CURRENT_THD' REFERRING DESTRUCTED THD OBJ Prior to fix, function check_performance_schema() could leave behind stale pointers in thread local storage, for the following keys: - THR_THD (used by _current_thd) - THR_MALLOC (used for memory allocation) This is an unsafe practice, which can potentially cause crashes, and that can cause other bugs when code is modified during maintenance. With this fix, thread local storage keys used temporarily within function check_performance_schema() are cleaned up after use. 	4511229d350c04153ecae756c5f47dd26f73c6aa
----------------------------
Bug#17600176: This query returns a row in 5.5 but not 5.6 or current 5.7 The problem query contains an IN subquery that is transformed to a semi-join. The subquery contains an outer join operation. When run standalone, the outer join in the subquery is preserved as an outer join and returns one row. However, when the full query is run, the outer join is converted into an inner join, and the subquery no longer returns any row. This causes the outer query to return no rows. The problem is with the IF clause in the WHERE clause of the subquery, When transforming into semi-join, we rely on Item::fix_after_pullout() to adjust used_tables and not_null_tables information within the condition objects, in order to determine e.g. the outer join to inner join transform. However, there is no specific implementation of ::fix_after_pullout() for the IF clause, so it returns generic information generated by Item_func::fix_after_pullout(). The fix is to add this function. By analysis, this appears to be a problem for BETWEEN predicates and IN predicates too. A specific implementation of :;fix_after_pullout() is added for both classes. In addition, it was detected that not_null_tables information was not updated correctly for class Item_row. However, I was not able to think out any failing test for this problem, so no test case was added. 	0254c516bfa298ab3b796a96c46d09b996b01102
----------------------------
Bug#17600176: This query returns a row in 5.5 but not 5.6 or current 5.7 The problem query contains an IN subquery that is transformed to a semi-join. The subquery contains an outer join operation. When run standalone, the outer join in the subquery is preserved as an outer join and returns one row. However, when the full query is run, the outer join is converted into an inner join, and the subquery no longer returns any row. This causes the outer query to return no rows. The problem is with the IF clause in the WHERE clause of the subquery, When transforming into semi-join, we rely on Item::fix_after_pullout() to adjust used_tables and not_null_tables information within the condition objects, in order to determine e.g. the outer join to inner join transform. However, there is no specific implementation of ::fix_after_pullout() for the IF clause, so it returns generic information generated by Item_func::fix_after_pullout(). The fix is to add this function. By analysis, this appears to be a problem for BETWEEN predicates and IN predicates too. A specific implementation of :;fix_after_pullout() is added for both classes. In addition, it was detected that not_null_tables information was not updated correctly for class Item_row. However, I was not able to think out any failing test for this problem, so no test case was added. 	ce8ad2eefdcb563a8ffe8baf005fc69c94941c65
----------------------------
Bug#17400967 MYSQL_CONFIG FAILS TO FILTER OUT SOME WARNING FLAG For clang and gcc we set some warning flags when compiling the server. Remove them when generating the script mysqld_config. 	8be6bfd8c31ccca30ac07c43184537be7ab6a516
----------------------------
WL#5768 : PERFORMANCE SCHEMA, prepared statements instrumentation. Details: - Added instrumentation code for prepared stmt/execute/close issued from C APIs (mysql_stmt_prepare, mysql_stmt_execute and mysql_stmt_close) i.e. forThe 'binary' protocol, implemented with: - COM_STMT_PREPARE - COM_STMT_EXECUTE - COM_STMT_CLOSE 	6214afa8296c12492854233797c70e576f4b207d
----------------------------
Bug#17865689 GET RID OF DYNAMIC_ARRAY IN OPEN_TABLES_STATE Use Prealloced_array instead. 	209351d71436a82589a998c71c2a4588d84c52c8
----------------------------
BUG#13788920 - CRASH WHEN SHUTTING DOWN LOADED SERVER WITH THREAD POOLING ENABLED. PROBLEM DESCRIPTION AND FIX: When huge number of concurrent connections are made with the thread pool plugin enabled and mysqladmin shutdown is executed, the server crashes. The thread pool after accepting a connection enqueue onto the epoll wait queue with the connection context thd holding a reference to the thread specific context mysys_var which is associated with accept thread. Before closing the connections, the accept thread goes out of scope which includes freeing the mysys_var context. In close_connections , we refer the thread specific mysys_var context of the accept thread thereby causing a crash. The fix is to set the mysys_var context to NULL before enqueuing the connection context thd onto epoll wait queue to listen for events. The patch also reset the thread local THD pointer and thread local malloc pointer. No test case could not be written because debug_sync could not be used for the code paths in question. This fix also fixes the exact same issue mentioned in BUG#17420644. 	c6b8bd7c120e2121adfc6c4978c9185358b0d67c
----------------------------
WL#7377: Unbreak the test on Windows. Thanks to Mattias Jonsson for helping me with this. Windows needs --no-console in order to obey --log-error. There is some variation in the shutdown message too. (One test is checking that InnoDB is not displaying anything between startup and shutdown.) 	d48347b836ca9b767590f85c39a6313fb6c4dec8
----------------------------
WL#7377 Deprecate the innodb_*monitor tables. InnoDB has a few hardcoded special table names: CREATE TABLE on one of these names will set flags inside InnoDB to enable additional debug output to the error log. DROP TABLE will clear the flags and stop the output. We are deprecating this awkward mechanism. Replacements are available as follows: innodb_monitor: Replace with SET GLOBAL innodb_status_output=ON|OFF; innodb_lock_monitor: Replace with SET GLOBAL innodb_status_output=ON|OFF; SET GLOBAL innodb_status_output_locks=ON|OFF; (CREATE/DROP TABLE innodb_lock_monitor is affecting both flags.) innodb_tablespace_monitor: innodb_table_monitor: There is no direct replacement for these. Use INFORMATION_SCHEMA.INNODB_SYS_* tables. innodb_mem_validate: Remove. This depends on UNIV_MEM_DEBUG, which is not normally enabled even in debug builds. 	434b50e0f051787eedf1fcdf91f821611b5d80e6
----------------------------
BUG#16321920 : CREATE A SEPARATE INNODB_ZIP TEST SUITE Fix : ------- Created separate suites called innodb_zip ans i_innodb_zip that contain all compression tests. Running the new suites with following compression-related parameters : * innodb_compression_level = {1/9} * innodb_log_compressed_pages = {ON/OFF} 	e095fe022af113d94de199fd7d8649b19d955210
----------------------------
BUG#16321920 : CREATE A SEPARATE INNODB_ZIP TEST SUITE Fix : ------- Created separate suites called innodb_zip ans i_innodb_zip that contain all compression tests. Running the new suites with following compression-related parameters : * innodb_compression_level = {1/9} * innodb_log_compressed_pages = {ON/OFF} 	9c470ccb85edbf9de4d0f7a2ffdcaebd1b6d67fc
----------------------------
"BUG#17509011: DDL QUERIES INCREASES RPL_SEMI_SYNC_MASTER_YES_TX BY A VALUE OF 2 The problem is that the after_commit hook is being called twice during the DDL execution: first on the COMMIT stage of the binlog group commit procedure (MYSQL_BIN_LOG::process_after_commit_stage_queue) and a second time during the transaction implicit commit (trans_commit_implicit). And this happens even though the first time the hook is called, the flag transaction->run_hooks is set to false. The smallest and quickest fix for this issue is to deploy checks when we call the after_commit hook, to verify that we have not called the hook already during this ""transaction"" lifecycle. "	d8faf1f1a346463768bc771275af80b1c8d563fa
----------------------------
Bug#17309657 UPDATE ON P_S SETUP_CONSUMERS THROUGH JOIN ONLY UPDATES FIRST ROW Before this fix, complex updates to performance schema tables, when involving joins / sub queries, failed to update every row as expected. The root cause is that a storage engine implementation is supposed to initialize the table->status field every time a row is scanned, but the performance_schema failed to do so. table->status is used in particular in multi_update::send_data() to keep track of which rows have been updated already. The lack of initialization of table->status for each new row confused this code, causing the bug found. The fix is to initialize table->status in ha_perfschema::rnd_next() and ha_perfschema::rnd_pos(), in a manner consistent with exiting storage engines such as innodb or myisam. 	2194ffc5f3ef07d28fdb1dd4e30a2c89b1da36eb
----------------------------
Updated the url and sql_mode in my.cnf 	4f6aa2e6eb30276fa726c8c15a1e9788285aec32
----------------------------
Merge: cd968cb d3e3a45 Bug #16344230 - DROP --INNODB_FAST_SHUTDOWN=2 FOR FIRST MTR (BOOTSTRAP) STARTUP 	5b13fb4e51a2287c3ea6c9f3cd922559678da8c6
----------------------------
Bug #17168602 MYSQL_PLUGIN REMOVES NON-DIRECTORY TYPE FILES SPECIFIED WITH THE BASEDIR OPTION Description: The mysql_plugin client attempts to remove any filename specified to the --basedir option. The problem is that if the filename does not end with a slash, it will attempt to unlink it, which succeeds for files, but not for directories. Analysis: When we are starting mysql_plugin with basedir option and if we are giving path of a file as basedir, it deletes that file. It was because it uses a function my_delete which unlinks the file path given. Fix:  As a fix we replace that line using another function my_free, which will only free the  pointer which is having that file path. 	c96b67a2a99ac583c1c7e8633fd3373cfce021fe
----------------------------
bug#17703157  HAVE_BINLOG_ROWS_QUERY.INC : IMPLEMENTATION LOGIC DOES NOT MATCH PURPOSE The 'have_binlog_rows_query.inc' and 'have_binlog_rows_query.require' are introduced to ensure that the server is running with binlog_rows_query_log_events on for rpl_row_ignorable_event.test. However, the current implementation is as following: 1) Fetch variable binlog_rows_query_log_events 2) Replace ON by OFF in the result 3) Check if result value is OFF The purpose and implementation are not aligned. Actually the 'have_binlog_rows_query.inc' and 'have_binlog_rows_query.require' are not necessary as we already enabled binlog-rows-query-log-events option in rpl_row_ignorable_event-master.opt. So we remove the redundent two files. 	5f59b8f5db722b68545ee474ff96186655544773
----------------------------
Bug#17826757 CMAKE SUPPORT FOR GCC ON SOLARIS For gcc on solaris, we must add suport for - finding libstdc++ and libgcc_s - installing the same libraries - propagating library paths to the mysql_config script We should also change the package name. Also: bump cmake minimum required version. Also: use 64bit build by default (for gcc and sun studio) 	ed81139f47b100ef658d10c18095f16f2c44e422
----------------------------
Bug#17813333 PSI KEYS WERE INCORRECTLY PASSED TO FUNCTION SET_PSI_KEYS Before this fix, the mutex 'wait/synch/mutex/sql/MYSQL_RELAY_LOG::LOCK_sync' was not properly instrumented for the performance schema. In particular, no wait time was recorded for this mutex, and no mutex instance was instrumented, because the incorrect key was used when instrumenting the code. The root cause is a simple mismatch in the parameters order, in the call to relay_log.set_psi_keys(). This fix uses the proper keys when calling set_psi_keys() for the relay log. 	4a96655082477b356de6defeb5d28b223fee88d9
----------------------------
Merge: b6fc90d 9177962 Bug #17708621 : EXCEEDING SORT_BUFFER_SIZE (FILE SORT) WITH SORT ABORTED LEAKS FILE DESCRIPTORS Merge from 5.6 to trunk 	46c9a970467e05a3992990b48b65374dac59fb4e
----------------------------
Merge: fa31d1f d694bc7 Bug #17708621 : EXCEEDING SORT_BUFFER_SIZE (FILE SORT) WITH SORT ABORTED LEAKS FILE DESCRIPTORS Merge from 5.5 to 5.6 	9177962298af3ed663eab040e8601f7a0aa1f742
----------------------------
Bug #17708621 : EXCEEDING SORT_BUFFER_SIZE (FILE SORT) WITH SORT ABORTED LEAKS FILE DESCRIPTORS ISSUE : IO_CACHE used for index_merge quick select is freed only on successful retrieval of all rows from index merge. Suppose if there is a interrupt( or failure) to this operation of row retrieval (let it be a KILL_QUERY signal) then we are not freeing the IO_CACHE resources allocated by index_merge quick select. And hence temp file associated with it is also not closed. This lead to a file descriptor leak. SOLUTION : As part of file sort operation now we always free the IO_CACHE allocated by index_merge quick select. 	d694bc7d27e92340822f3ef663709e5075af28b7
----------------------------
Part1 of fix for bug#17647637: Refactor of NdbTick as prep for real fix My rational for this refactoring is that I want a safer interface for calculating elapsed time and doing timeout calculation. The general pattern in this patch is that the common code sequence: Ex1. NDB_TICKS start = NdbTick_CurrentMillisecond(); ... Do some work ... NDB_TICKS end = NdbTicks_CurrentMillisecond(); Uint64 elapsed = (end - start); Has been refactored into: Ex2: NDB_TICKS start = NdbTick_getCurrentTicks(); ... Do some work ... NDB_TICKS end = NdbTicks_getCurrentTicks(); Uint64 elapsed = NdbTick_ElapsedMilliseconds(start,end); As part of this, NDB_TICKS has been redefined into an opague type with the max 'tick resolution' the underlying hardware can provide. No assumption about the resolution of a single tick is exposed through the interface. Thus, it is not any longer an int, and all interval calculations has to go through the new NdbTick_Elapsed() function. (There are also Micro, Nano and Second variants which all can be calculated from the same NDB_TICKS). Asserts has also been included into these functions such that uninitialized 'ticks' are being asserted, and negative intervals resulting from mixing start-end arguments(Bug#17739131) or non-monotonic timers. (Bug#17647637) The problems I try to rectify in this patch are: 1) NdbTick.h defined 'typedef Uint64 NDB_TICKS' which was the type returned from NdbTick_CurrentMillisecond(), NdbTick_CurrentMicrosecond, NdbTick_CurrentSecond and NdbTick_CurrentNanosecond. This provided no type safety, and was quite often mixed with using plain Uint64 such that it didn't really offer anything of value. Furthermore it did not protect against misuse as: start = NdbTick_CurrentMillisecond() ... do some end = NdbTick_CurrentMicrosecond; << Mix ms / us elapsed = (end - start); or: elapsed = (start - end)  << bug#17739131 2) Catch 'elapsed time' calculation based on uninitialized timers - Several bugs had been filed and fixes as a result of this 3) Avoid precision loss due to timer rollover: Depending on the underlying platform, the timers might have resolution in the microsecond range. By converting into milliseconds as we usually did, we get less accuracy as this extra precision is truncated, considder: t1 = 1000 us -> truncates to 1ms t2 = 1999 us -> truncates to 1ms t3 = 2001 us -> truncates to 2ms t4 = 2999 us -> truncates to 2ms So calculating intervals between these time ticks using the old NdbTick_CurrentMillisecond(), we will get: (t2-t1) = 0ms ... Sort of correct as it is < 1ms (t3-t2) = 1ms ... Not what you would expect !!! 4) Get rid of 'struct MicroSecondTimer', NdbTick_getMicroTimer(), NdbTick_getMicrosPassed() and NdbTick_getMillisecond(). This was just another timer mechanism which partly overlapped the functionality provided by NDB_TICKS. In places where both a Milli- and Microseconds timer was required, it even caused that the system clock had to be read twice (ThreadConfig.cpp) or we had to convert between timers represented either as a 'MicroSecondTimer' or a NDB_TICKS. 	6f43ad9aadc2a7a7335e4ddc90dafbf6d398b7cd
----------------------------
Fix for bug#17739131 JOB SCHEDULER IN SINGLE THREADED NDBD DOES NOT 'YIELD' CPU AS INTENDED When the internal single threaded job scheduler is configured to use 'RealTimeScheduler=1', it is intended to temporary lower its scheduling priority to 'normal' every 10ms. This will allow other, non realtime threads, to get a chance to run, and thus avoid CPU starvation of these. However, the arguments to the function which calculated elapsed time singe last yield where swapped. Thus, '0' was always returned as elapsed time from this function, and the CPU never yielded as intended. 	594fc5a93e96ed9d7d0c02ae77c1e8693e866f64
----------------------------
Bug#17675622 INNODB MEMCACHED LEAKS MEMORY IF INNODB_API_ENABLE_BINLOG = 1 The binlog name of current transaction is stored into thread buffer when the events are flushed into binlog. It is used by semisync later. Thread buffer is freed automatically after each server command(e.g COM_QUEYR). But Innodb memcached doesn't use server command, hence the thread buffer is not freed until the THD object is freed. So the thread buffer takes more and more memory after every binlog flush. To fix it, strcpy is used to replace strdup_root. For memcached, buffer for m_trans_fixed_log_file is allocated only once when it is used first time and following binlog operations just copy binlog name into m_trans_fixed_log_file. char[] cannot allocate from thread buffer by using new operator. So it is replaced by alloc_root. 	e03965a2210062901ae33fce80132b89df969c10
----------------------------
"Bug#11756699 : MYSQL-TEST MAIN.LOG_TABLES-BIG FAILS ON 5.1.40 Fix : Added ""set @@global.log_output = 'TABLE';"" line so that the details of SQL statements that take more than long_query_time seconds to execute are stored in mysql.slow_log table. "	6758370248cfadba31e79c5a4f329add0142ebce
----------------------------
Bug#17796161 UNUSED DEFINE NDB_MGMAPI IN CONFIGINFO - Remove unused NDB_MGMAPI define since ConfigInfo is no longer compiled as part of mgmapi 	ff758f7e5eb7d39b7c2163b510b93ca3a99db65c
----------------------------
"- Bug #17779822 INNODB COMPRESSED TEMPORARY TABLE SHOWS 'TABLE FULL' ERROR WHEN UNDO LOG IS FULL DML action on table (temporary + non-temporary) results in generation of UNDO log. This UNDO log resides in either system/temporary/dedicated undo tablespace. UNDO Log page allocation can fail if filesystem reaches its limit or tablespace file[s] is configured to restrict to certain size (w/o autoextension). In configuration where-in table file is different from undo log file error like ""Table is full"" can be mis-leading. Fix help in generating proper error message if undo log page allocation fails so that user knows what to look for. Approved by: Sunny (rb#3882) "	f192b6e35e641e84872c5c0e6adc4d1558de8058
----------------------------
Merge: 3d7b1c8 ff63a52 Bug #17049656 : MYSQLD --LOCAL-SERVICE PARAMETER DOES NOT WORK Null Merging the patch from mysql-5.6 to mysql-trunk. 	8b1d9bfc7982102a55697e8bfda6b71cd7b9bc5e
----------------------------
Merge: 9bd4e0f 155af82 Bug #17049656 : MYSQLD --LOCAL-SERVICE PARAMETER DOES NOT WORK Merging the patch from mysql-5.5 to mysql-5.6. 	ff63a5215de55db2d3f6c05ec71e893ec999c370
----------------------------
"Bug #17049656 : MYSQLD --LOCAL-SERVICE PARAMETER DOES NOT WORK Problem: The ""--local-install"" service does not perform as expected for, at least, Windows. Fix: A NULL pointer was dereferenced due to which there was crash.A check was introduced for NULL string before dereferencing it.No test cases written as it is a bug during installation. "	155af822148b274ed82a448232d6540eb4788e2e
----------------------------
BUG#17398792 - VALGRIND ERRORS IN THREAD_POOL.THREAD_POOL CONNECTION_HANDLER PROBLEM AND FIX: The function net_write_raw_loop in the NET layer calls the thd_increment_bytes_sent. This function uses the current_thd macro which depends on pthread specific key THR_THD to get THD associated with the current connection. But before a connection context THD is initialized and hence THR_THD key is associated with a thread, errors like Out of memory can happen in which case we use send_error_and_close_channel of Channel_info object to propagate the error to the client. In the main process/thread that accepts the connection in thread pool, thd is instantiated and initialized and the connection-related contexts thd and thd->mem_root is associated with the connection accept thread. Another subsequent connection can fail before it's thd is initialized in which case the accept thread may contain stale thd of previous disconnected connection which causes the valgrind failure. The fix is to diassociate the THD context when THD is enqueued on to OS epoll wait queue to listen for query command processing events. 	3d7b1c837ad7f4143ea76047a86e8661c6fbbd30
----------------------------
Bug#17641586 INCORRECTLY PRINTED BINLOG DUMP INFORMATION Problem: When log_warnings is greater than 1, master prints binlog dump thread information in mysqld.1.err file. The information contains slave server id, binlog file and binlog position. The slave server id is uint32 and the print format was wrongly specifified (%d instead of %u). Hence a server id which is more than 2 billion is getting printed with a negative value. Eg: Start binlog_dump to slave_server(-1340259414), pos(mysql-bin.001663, 325187493) Fix: Changed the uint32 format to %u. 	4432803b646bbcbab752c13c78611724aa108cfe
----------------------------
Bug#17372396: PLEASE REMOVE SORT ABORTED ERRORS FROM THE ERROR LOG If filesort fails, only alert the client by default (especially when they're to blame). Only additionally print a notice to the error log if log_error_verbosity is high enough, and thd->is_fatal_error is set (OOM etc.). Finally, when printing to log now include the actual error message. 	580d9fa92a858d05aba8e2aa3b5791e6235e75f1
----------------------------
"Bug#17740390 COMPILE MYSQL WITH GCC ON SPARC This patch fixes build and execution problems detected when building with gcc 4.8.1 in 32bit mode on sparc. Build Problems fixed: - missing dependency on -lsocket for mysys_ssl - link api_test.c as a C++ application (missing C++ symbols) - Always include ""my_config.h"" before any C/C++ headers (to get correct definition of  _FILE_OFFSET_BITS) - SEQ_UNINIT is manipulated as an int8, so must be an LL constant compile warning: right shift count >= width of type - extern declarations of C functions (getpagesizes et.al) must use 'extern ""C""' Execution Prolems fixed (BUS errors): - Alignment problems in Prealloced_array and Item_func_group_concat::Item_func_group_concat() - va_list problem (int vs ha_rows) in mysql_audit_general_log() "	1f5f8b0879fb41d5df3d28cac6921a2a4a1ec1e1
----------------------------
Bug#13924750 -  PARTITION_LOCKING_4.TEST LOOSES THE CONNECTION Description: The test fails with the error message 'MySQL server has gone away'. Analysis: The test sets value of innodb_lock_wait_timeout and lock_wait_timeout variable as 1. The test also sets wait_timeout variable value as 1. So, client is disconnected before it can get the error message ER_LOCK_WAIT_TIMEOUT from the server. Test executes successfully if the the value of wait_timeout is increased. FIX : Test will not set the value of wait_timeout variable. Updated result file according to the test. 	8a1747997ae0c118b4f64b5e5148fe6035dac898
----------------------------
Bug#13924750 -  PARTITION_LOCKING_4.TEST LOOSES THE CONNECTION Description: The test fails with the error message 'MySQL server has gone away'. Analysis: The test sets value of innodb_lock_wait_timeout and lock_wait_timeout variable as 1. The test also sets wait_timeout variable value as 1. So, client is disconnected before it can get the error message ER_LOCK_WAIT_TIMEOUT from the server. Test executes successfully if the the value of wait_timeout is increased. FIX : Test will not set the value of wait_timeout variable. Updated result file according to the test. 	1da0b88d810aba1152feb37e29ceae9b4e5ee3ab
----------------------------
"Bug#17571371 : UNSTABLE THROUGHPUT FOR HUGE LOG_FILE_SIZE New option innodb_log_write_ahead_size is added to avoid read-on-write for the transaction log file when not cached enough to the OS/FS cache. innodb_log_write_ahead_size ""Redo log write ahead unit size to avoid read-on-write,"" "" it should match the OS cache block IO size"" The write ahead should be cached to OS/FS and individual write log blocks in the cached area never cause read-on-write. Its default value is 8K, because it is the block size at Solaris and larger than Linux default (4K). So enough for both cases. Approved by Sunny in rb#3595 "	1b8aba4249a6f4a34b7974258eea5a50fa96086a
----------------------------
Bug #16344230 - DROP --INNODB_FAST_SHUTDOWN=2 FOR FIRST MTR (BOOTSTRAP) STARTUP 	d3e3a450e3c719b7b9757b80bf2adce65e8a7d7d
----------------------------
Bug#17733393: BACKPORT BUG#16354789 TO 5.6 Backport from mysql-trunk to mysql-5.6 of: ------------------------------------------------------------ revno: 5793 committer: Thayumanavar <thayumanavar.x.sachithanantha@oracle.com> branch nick: mysql-trunk timestamp: Fri 2013-05-17 16:50:00 +0530 message: BUG#16354789 RPL_SLAVE_SYSVAR_DEADLOCK CRASHING OCCASIONALLY ON OS X 10.7 PROBLEM DESCRIPTION AND FIX: i_rpl.rpl_slave_sysvar_deadlock test case crashes most of time on OS X 10.7 on PB2. The crash is due to race condition involving vio_shutdown and select based implementation of vio_io_wait. If vio_shutdown sets the file descriptor of the vio.fd to INVALID_SOCKET which is negative one in one thread after which the select-based implementation of vio_io_wait use this fd value with FD_* macros in another thread of control, it segfaults. The reason for segfault is because FD_* macros use this fd value as an index into a static buffer or array. The fix checks the copied fd from mysql_socket_getfd is not INVALID_SOCKET so that FD_SET doesn't incorrect index which avoids the segfault. 	8a120e8c9c1348840655d0e6ae70f4eaf8aa653c
----------------------------
"Merge: 34b11c0 26f0b74 Bug#17280176 TRANSACTIONS SKIPPED ON SLAVE AFTER ""STOP/START SLAVE"" USING GTID REPLICATION Merging fix from mysql-5.6 Fixing post push solaris compiler warning ""last_retrieved_gtid hides Relay_log_info::last_retrieved_gtid."" "	2a82f947a4e283f154acc3d98e58b51b79e13578
----------------------------
"Bug#17280176 TRANSACTIONS SKIPPED ON SLAVE AFTER ""STOP/START SLAVE"" USING GTID REPLICATION Fixing post push solaris compiler warning ""last_retrieved_gtid hides Relay_log_info::last_retrieved_gtid."" "	26f0b74aec074e16441097d9e60ad31e46a83d6e
----------------------------
Bug#17617945 BUFFER OVERFLOW IN GET_MERGE_MANY_BUFFS_COST WITH SMALL SORT_BUFFER_SIZE Post-push fix of unittest (broken for -DMERGE_UNITTESTS=0) 	65420581b28a05d5bbdd09ff6c309083828e62c5
----------------------------
crund -- misc configs, properties, scripts updates 	b703aa64ca7e8252a6764875022534aa057cd6e0
----------------------------
Bug#17617945 BUFFER OVERFLOW IN GET_MERGE_MANY_BUFFS_COST WITH SMALL SORT_BUFFER_SIZE get_cost_calc_buff_size() could return wrong value for the size of imerge_cost_buff. 	7a244e2777a24a5a219cb3cddcee8429d1b28c6a
----------------------------
"Bug #12917164 DROP USER CAN'T DROP USERS WITH LEGACY UPPER CASE HOST NAME ANYMORE Description: It is not possible to drop users with host names with upper case letters in them. i.e DROP USER 'root'@'Tmp_Host_Name'; is failing with error. Analysis: Since the fix 11748570 we came up with lower case hostnames as standard. But in the current bug the hostname is created by mysql_install_db script is still having upper case hostnames. So, if we have the hostname with upper case letters like(Tmp_Host_Name) then we will have as it is stored in the mysql.user table. In this case if use ""'DROP USER 'root'@'Tmp_Host_Name';"" it gives error because we do compare with the lower case of hostname since the 11748570 fix. Fix: We need to convert the hostname to lower case before storing into the mysql.user table when we run the mysql_install_db script. "	21b4bebfa7c5a12afe9749c1e27f1e6ef71ef734
----------------------------
Bug#17720496: Test failure in innodb.innodb_mysql with query cache This is a regression after WL#6987. The problem can be reproduced with the following test: ./mysql-test-run --mem main.view \ --mysqld=--query_cache_type=1 --mysqld=--query_cache_size=1M The problem was a missing rewrite of a query cache update for LOAD statements, so that the query cache assumed a view was updated and not the underlying base table. The fix is to use the same query cache invalidate function as INSERT does. 	f8170a4d52031be58eeac6656382de7abca469ad
----------------------------
WL#7260: Split LOCK_thread_count After the improvements made in WL#6606, performance testing has shown that the major bottleneck for connect/disconnect performance now is the LOCK_thd_count mutex. This patch increases the connect/disconnect performance by splitting LOCK_thd_count so that it no longer protects several different structures/variables. LOCK_thd_count is now only used to protect the list of connections (THDs). Changes made to existing usage of LOCK_thd_count: LOCK_thread_cache is introduced to protect the thread cache used by the default connection handler (one thread per connection). Synchronization during startup of signal handler thread is now done using LOCK_start_signal_handler. Synchronization during shutdown of main thread connection listening is now done using LOCK_socket_listener_active. The global thread_id counter is now incremented using atomics, rather than being protected by LOCK_thd_count. THD::current_linfo is now protected by THD::LOCK_thd_data rather than LOCK_thd_count. max_used_connections is now reset under protection of LOCK_connection_count rather than LOCK_thd_count. 	b815a4de3b6e0b5b0b3509c0c4e57ad23cbde9cc
----------------------------
"Bug#16041903 CONTINUE HANDLER NOT INVOKED IN A STORED FUNCTION AFTER A LOCK WAIT TIMEOUT Overview -------- When the SQL layer is executing a sub statement (stored function or trigger), some errors cannot be safely recovered until we leave sub statement mode. This is the case for e.g. ER_LOCK_WAIT_TIMEOUT. When this error is caught, the handler does a callback to ""mark_transaction_for_rollback()"" in the SQL layer, which makes the transaction be rolled back implicitly. In ""mark_transaction_for_rollback()"", the flag ""THD::is_fatal_sub_stmt_error"" is set. This flag is used to effectievly disable the execution of a condition handler in a stored function while handling the error. The flag is reset when leaving sub statement mode, in ""restore_sub_statement_state()"", if leaving the last level of sub statements (i.e., nested sub statements are handled by keeping the value of the flag when going to the previous ""stack frame""). The problem here is that the flag is set in ""mark_transaction_for_rollback()"" even if the SQL layer is not in sub statement mode. If this happens, and the transaction afterwards calls a stored function with a condition handler, the handler will be disabled since the flag is already set when calling the function. Suggested fix ------------- The suggested fix is to set ""is_fatal_sub_stmt_error"" in ""mark_transaction_for_rollback()"" only in the case where the SQL layer is currently executing a sub statement (""in_sub_stmt==true""). If not in a sub statement, setting the ""is_fatal_sub_stmt_error"" flag really has no meaning. Additionally, when the flag is set when the SQL layer is not actually in a sub statement, the flag is never cleared since this happens only in ""THD::restore_sub_statement_state()"" when leaving sub statement mode. "	9eaf4437659df7da8ea9368a19378c5a1f831705
----------------------------
WL#6791 : Redefine client --ssl option to imply enforced encryption # Changed the meaning of the --ssl=1 option of all client binaries to mean force ssl, not try ssl and fail over to eunecrypted # Added a new MYSQL_OPT_SSL_ENFORCE mysql_options() option to specify that an ssl connection is required. # Added a new macro SSL_SET_OPTIONS() to the client SSL handling headers that sets all the relevant SSL options at once. # Revamped all of the current native clients to use the new macro # Removed some Windows line endings. # Added proper handling of the new option into the ssl helper headers. # If SSL is mandatory assume that the media is secure enough for the sha256 plugin to do unencrypted password exchange even before establishing a connection. # Set the default ssl cipher to DHE-RSA-AES256-SHA if none is specified. # updated test cases that require a non-default cipher to spawn a mysql command line tool binary since mysqltest has no support for specifying ciphers. # updated the replication slave connection code to always enforce SSL if any of the SSL config options is present. # test cases added and updated. # added a mysql_get_option() API to return mysql_options() values. Used the new API inside the sha256 plugin. # Fixed compilation warnings because of unused variables. # Fixed test failures (mysql_ssl and bug13115401) # Fixed whitespace issues. # Fully implemented the mysql_get_option() function. # Added a test case for mysql_get_option() # fixed some trailing whitespace issues # fixed some uint/int warnings in mysql_client_test.c # removed shared memory option from non-windows get_options tests # moved MYSQL_OPT_LOCAL_INFILE to the uint options 	a9303d90ff5390c39dc5997ac5178b80fa9e0118
----------------------------
Bug#17617945 BUFFER OVERFLOW IN GET_MERGE_MANY_BUFFS_COST WITH SMALL SORT_BUFFER_SIZE Introduce Bounds_checked_array to catch that get_cost_calc_buff_size() returns wrong value for the size of imerge_cost_buff. 	86f2760aec0411800d4bd1b0ca20dc38e1527a60
----------------------------
"Bug#17280176 TRANSACTIONS SKIPPED ON SLAVE AFTER ""STOP/START SLAVE"" USING GTID REPLICATION Analysis: Slave updates 'GTID_RETRIEVED' set upon receiving GTID_LOG_EVENT for a particular transaction which is first event in the event group. Say, I/O thread is stopped *after* adding GTID number to 'gtid_trieved' set and *before* it actually retrieves all the events from that GTID event group. Next time when this I/O thread is reconnected, it sends union of GTID_RETRIEVED + GTID_EXECUTED set to master. So Master thinks that slave is having all the events from this GTID set(which includes partially retrieved GTID) and it will not resend them again. Hence slave is missing some events for ever. Fix: It is not easy to find the end of a group of events. So mysql server is unsure whether I/O thread retrieved the last gtid transaction events completely or not (before it is going down because of a crash/normal shutdown/normal stop slave io_thread). It is possible that I/O thread would have retrieved and written only partial transaction events. So Server will request Master to send the last gtid event once again. We do this by removing the last I/O thread retrieved gtid event from ""Retrieved_gtid_set"". Possible cases: 1) I/O thread would have retrieved full transaction already in the first time itself, but retrieving them again will not cause problem because GTID number is same, Hence SQL thread will not commit it again. 2) I/O thread would have retrieved full transaction already and SQL thread would have already executed it. In that case, We are not going remove last retrieved gtid from ""Retrieved_gtid_set"" otherwise we will see gaps in ""Retrieved set"". "	7f44046580344e399e3108ec5ac69239c3127ba2
----------------------------
Bug #16944177: IGNORE-DB-DIR GIVES AN ERROR WHEN FED VIA MY.CNF Duplicate directory names specified via multiple --ignore-db-dir options are causing the server to exit. Fixed by making these duplicates be ignored (and a warning be printed in the server log). The server will still fail to start on other errors like e.g. out of memory etc while processing the ignore db directories option. Test case added. Explicit type conversion added. Fixed the algorithm to generate the CSV out of the dirs list 	859165f71225f031e830934fbf779af8a63234fe
----------------------------
Bug#17669652 UNUSED DEFINE SNPRINTF_RETURN_TRUNC - Remove the now unused code - the define used to be set by configure.in 	5bb91447b26c45a6b5aba5a8c85c5039b4932e85
----------------------------
Merge: 65f5d5f 42ac9a4 BUG#16245498 SERVER CRASH WITH INNODB_BUFFER_POOL_SIZE<8M OR SMALL INNODB_SYNC_ARRAY_SIZE == Analysis == There are two different bugs(defects) here: 1. sync_array_reserve_cell will ut_error 2. sync_array_init will trigger ut_a(n_threads > srv_sync_array_size) == Solution == For 1, sync_array_reserve_cell should return true if a free cell is found, otherwise false, then the callers will choose another sync_array to reserve a free cell For 2, the assertion is too strict. Since the sync_wait_array doesn't require that each array has more than one slot, the assertion can be replaced by ut_a(n_threads > 0), how to use sync_array efficiently depends on users Also, this patch backports the fix for BUG#16884077 - ASSERT FAILURE IN SERVER WHEN LARGE NUMBER OF CLIENT EXECUTES QUERY(rb#2956). After this backport there shall not be any relationship between innodb_buffer_pool_size and number of threads. max_connections is introduced to get the max number of threads. rb#2464, approved by Jimmy. 	e29372b3f5db5dfe9ec06cf919cc6df6d680645e
----------------------------
BUG#16245498 SERVER CRASH WITH INNODB_BUFFER_POOL_SIZE<8M OR SMALL INNODB_SYNC_ARRAY_SIZE == Analysis == There are two different bugs(defects) here: 1. sync_array_reserve_cell will ut_error 2. sync_array_init will trigger ut_a(n_threads > srv_sync_array_size) == Solution == For 1, sync_array_reserve_cell should return true if a free cell is found, otherwise false, then the callers will choose another sync_array to reserve a free cell For 2, the assertion is too strict. Since the sync_wait_array doesn't require that each array has more than one slot, the assertion can be replaced by ut_a(n_threads > 0), how to use sync_array efficiently depends on users Also, this patch backports the fix for BUG#16884077 - ASSERT FAILURE IN SERVER WHEN LARGE NUMBER OF CLIENT EXECUTES QUERY(rb#2956). After this backport there shall not be any relationship between innodb_buffer_pool_size and number of threads. max_connections is introduced to get the max number of threads. rb#2464, approved by Jimmy. 	42ac9a4b694a2bd080529ee73553b93fb789c02b
----------------------------
Bug#17653288 MYSQL_RESET_CONNECTION DOES NOT RESET LAST_INSERT_ID Problem: mysql_reset_connection as part of this resetting session state it should reset last_insert_id value which it does not. Fix: Fix is to reset all the variables associated with last_insert_id in THD class. 	faaee8994bfab5c20e75418db12684ee71e95f95
----------------------------
Bug 16344230 - DROP --INNODB_FAST_SHUTDOWN=2 FOR FIRST MTR (BOOTSTRAP) STARTUP 	9e299aa4f3738dc14e68e6690340277e45cc2fee
----------------------------
WL#7169 Semisync: make master wait for more than one slave to ack back Postfix: - Set rpl_semi_sync_master_timeout longer to guarantee it doesn't timeout on slow machines. - Adjusted coverage test order, so it can cover more code. 	eba85e293c33984072c434ee410c10f4a7105565
----------------------------
BUG#17533190- SLAVE_OPEN_TEMP_TABLES SHOWING 0 WITH >0 OPEN TEMP TABLES AT SLAVE Problem: The test rpl_mts_submode_switch.test uses debug statements to force the slave applier to apply events in parallel. However in case of temporary-tables this does not work since the tables should be deleted by any one thread at a time. This is because once a worker thread takes ownership of any temporary tables created by a connection, those tables become inaccesible to other worker threads. Therefore when the slave worker thread tries to execute DROP IF EXISTS, some tables while are owned by some other worker thread is left behind causing the next test to report a warning and hence fail. Solution: Removed the debug set from the master before dropping the temporary tables there-by allowing the tables to be dropped 'naturally' on the slave either sequentially or in parallel depending on how they were dropped on the master. 	99849902a45a5e6dce541cf0a08944a4eca8561d
----------------------------
"Bug#17500866 -	SELECT COUNT(DISTINCT ..) RETURNS WRONG RESULT WHEN TEMP TABLE SIZE IS LOW Problem: When running a simple COUNT(DISTINCT) query on a table that contains a large number of distinct values, the query can return a wrong result. In most cases the query will return 0 or an empty result. This is most likely to happen when the maximum size of internal temporary tables are set to a low value by setting either tmp_table_size or max_heap_table_size to a low value. Analysis: Suppose the table contains records where the field for doing COUNT(DISTINCT) on has the following values: -->1 1 9 5 4 1 0 8 11 7 12 3 6 Assume that tmp_table_size is set to 16 in this example. First we find the first 4 unique value and put it is a file in a sorted order (why 4? because size of field is 4 and tmp_table_size is 16) that is 1 4 5 9-->f1 then second 0 1 8 11-->f2 third will have 3 6 7 12-->f3 NOTE:f1,f2,f3 are pointing to same file after fetching whole record we Doing the COUNT(DISTINCT) is done by Unique::walk() which in this case will call merge_walk() to do the main job. In merge_walk() the first elements from each file: f1--> 1 4 f2--> 0 1 f3--> 3 6 here we compare the first value, which ever is least remove it(and all other which have same value from the queue and increment the count distinct counter. like in this we will remove 0 from f2.then we have like f1--> 1 4 f2--> 1 f3--> 3 6 then we will remove 1 from f1, f2  and fetch remaining value for f2 it will be like this f1--> 4 f2--> 8 11 f3--> 3 6 Like this we will get count distinct value. When counting the distinct values in merge_walk() a merge buffer is used. This buffer must be able to store one record from each of the file pointer (f1, f2, f3 above). The merge_buffer is allocated in Unique::walk() and  with a size that is equal to MIN(tmp_table_size, max_heap_table_size). When tmp_table_size or max_heap_table_size is very small, there might be a large number of file pointers to read from. In the case where this bug occurs, the number of files is so large that there is not enough space to store one record from each file pointer. This situation is detected in merge_walk() and handled by just returning an error status. The COUNT(DISTINCT) operation is not done and this causes 0 to be returned as the result. Solution: Try to allocate the merge buffer with a size where it have space to store atleast one record from each file pointers. Note: Till now we are not taking care of the cases, where situation is same but we can't able to allocate that much memory. In those cases again we will give result as zero. "	03ce2dc552dd5c84fbc8e29e3d3e62f4f061366d
----------------------------
"WL#7169 Semisync: make master wait for more than one slave to ack back DESCRIPTION =========== This feature makes semisync master waits until receiving acknowledgements from more than one slaves. It guarantees the events are already replicated to more than one slaves when the transaction commit sucessfully. How many slaves it should wait are controlled by the new semisync master system variable ""rpl_semi_sync_master_wait_slaves"". Its values can be between 1 and 32. The default value is 1 and it can be changed dynamically. DESIGN ====== Received acknowledgements are mantained in an array that its size is equal to rpl_semi_sync_master_wait_slaves - 1. Any semisync slave takes only one slot and only the latest ack of the slave is recorded. Each slot includes three items, they are server_id, binlog_name and binlog_position. If an ack should be inserted in the array and it is full, then the events before minimum ack in the array are replicated to enough slaves. So it will find the minimum ack in the array and report it to the module(which will update replied ack and wake up transactions) and remove the minimum ack from the array. Suppose rpl_semi_sync_master_wait_slaves = 4. coming acks          slot 1          slot 2           slot 3 ===========          ==========      ==========       ========== 1:log1:120           1:log1:120 2:log1:120           1:log1:120      2:log1:120 1:log1:150           1:log1:150      2:log1:120 3:log1:120           1:log1:150      2:log1:120       3:log1:120 4:log1:150           It is full. The minimum ack is log1:120. It is reported and removed from the array. and the coming ack is added into the array if it is greater than minimum ack. Now the array looks like: coming acks          slot 1          slot 2           slot 3 ===========          ==========      ==========       ========== 1:log1:150      4:log1:150 "	eeab90dcf6cad7c99b8391b709833f30347880b6
----------------------------
Bug #17324516 SLAVE ASSERTS AFTER 5.6 UPGRADE Problem: In place upgrade of slave from mysql-5.5 to mysql-5.6.12 fails with assertion (lines >= LINES_IN_RELAY_LOG_INFO_WITH_ID && internal_id == 1). Analysis: mysql-5.5's relay-log.info format is different from mysql-5.6's format. mysql-5.5 version does not have some information like the number of lines in the file(1st line), sql_delay (6th line), number of parallel workers which is used when MTS is enabled (7th line), internal_id which is also used when MTS is enabled (8th line). While a mysql-5.6 slave server is coming up, it parses relay-log.info file (if already available) and regenerates a new content if the format is old (i.e., mysql-5.5's format). In the process of regeneration, a local variable temp_internal_id with a default value 0 is declared. If the file content is new format, then the value was read into temp_internal_id and Rpl_info::internal_id is assigned with this local temp_internal_id. If the file content is old format, then the default value '0' was assigned to Rpl_info::internal_id which is wrong value. Fix: Initialize temp_internal_id with Rpl_info::internal_id which is having the default value '1'. 	9a7d4a8068d2083c0f004a9f4a39d86efcabe894
----------------------------
Bug#16877045 5.6-CLUSTER-7.3 WIN32 SQL_YACC.CC BUILD PROBLEM - Somewhat circular dependency caused by the configured files sql_builtin.cc  being included as part of the files to generate in sql/ - Move sql_builtin.cc out of GEN_SOURCES variable. - Create new variable CONF_SOURCES to be used for configured files. - Fix minor out of source build problem where the generated  libmysql.ver wasn't found 	a3fc998932e66b266b55e9feecbcb7f26523c222
----------------------------
BUG#17460821: ASSERTION ERROR WHEN STOPPING SLAVE AFTER SEMI-SYNC ON MASTER IS DISABLED The assertion happens when: (i) the master and slave are configured to use the semisync plugin; (ii) the DBA disables semisync on the master; (iii) and he also unsets the option to wait for slaves ACK even if the semisync slave count reaches 0 during the waiting period. This combination of factors makes the server run into an assertion as soon as the last semisync slave disconnects and its dump thread exits. The root of the problem is the fact that when the dump thread disconnects and calls the observer hook transmit_stop, which ends up calling ReplSemiSyncMaster::remove_slave, there is no check whether the master has already disabled semisync or not. If it has, the then a second call to the switch_off member function must be avoided. The quick fix is to avoid calling switch_off if the DBA has disabled the semisync plugin interactively on the master. Also, the switch_off member function should only be called if the plugin has not been switched off already. This is basically the pattern throughout the rest of the semisync plugin and no other calls seem vulnerable to similar crashes/assertions. (This a backport of the patch to 5.5, which is also vulnerable.) 	59471a662096a1152712445acd8fff316e3ec75e
----------------------------
"WL#7050 - InnoDB: Refactor redo log write code for better performance - This is rewrite of log_write_up_to() to improve its performance in case where innodb_flush_log_at_trx_commit = 2. In log_write_up_to(): * Remove wait mode. We always wait with one exception. And that is when doing log sync from master thread. It makes that synchronous as well because that happens only once per second. * Because we only have one log group therefore we don't need two flush_events. * Remove unnecessary fields like written_to_some_lsn, written_to_all_lsn. * If only write is requested we don't have to acquire the log_sys::mutex after we release it. We currently do that only to do event handling but event handling is really only needed in case where flush is requested i.e.: a thread should be waiting on the event iff it is interested in flushing. Writes are serialized under log_sys::mutex. This patch was originally written by Inaam Rana. rb#2389 Approved by Sunny and Yasufumi =========== Adjustment for performance was done therough inherited rb#3373 - optimize log_write_up_to() more * remove the second log_sys->mutex obtain also for ""innodb_flush_log_at_trx_commit = 1"" path * remove unnecessary ut_memcpy. (because log_group_write_buf() is protected by log_sys->mutex) * remove dirty-read from flush_to_disk=true case. (to avoid regression at some cases) (to keep current arbitration for write/fsync contention between log and data file) * fix wrong handling of O_DSYNC - revive log_buffer_sync_in_background(). (because it needs to be used) "	1daac9fcae1daeba48a285071b6079e88d03ea1c
----------------------------
Non-functional cleanup issues collected from recent work; 1) Recent compiler warnings in ha_innodb.cc and i_s.cc that occur on VS2010-64. 2) Converted some fprintf(stderr,...) mesages to ib_logf() in fil0fil.cc 3) Fixed innodb_bug16066351 so that it will only run on lower_case_table_names=0 machines instead of trying to skip windows and certain versions of MacOS.  It did not list MacOS 10.8 and was failing there. 4) A message in srv/srv0space.cc Tablespace::check_file_spec() was not displaying the correct info.  Fixed in the code and in innodb-log-file.test. 5) A couple other minor cleanups. Approved in rb:3616 by Marko 	121491cdde53f76002769124d66d13745a4f30a3
----------------------------
Correct the merge from mysql-5.5 to mysql-5.6 of Bug#17446090 TESTCASE INNODB_BUG16752251.TEST FAILS RANDOMLY ON PB2 dict_stats_update_transient_for_index(): Skip the statistics on secondary indexes if innodb_change_buffering_debug (ibuf_debug) is set. This should get rid of change buffering test failures when using PERSISTENT_STATS=0 on MySQL 5.6 and later. Approved on IM by Kevin Lewis 	339825b2c6c21c3b4ace751aa3795a3d3f9f3945
----------------------------
Merge: 558ba58 bb286e0 Bug#17234370 LAST_INSERT_ID IS REPLICATED INCORRECTLY IF REPLICATION FILTERS ARE USED. Merging fix from mysql-5.6 	7d3b6947e6cccfca31a19308e9cece26321645d2
----------------------------
Merge: 1ff125b 109231a Bug#17234370 LAST_INSERT_ID IS REPLICATED INCORRECTLY IF REPLICATION FILTERS ARE USED. Merging fix from mysql-5.5 	bb286e0bab3227e1d9c6368d848fd450b4890424
----------------------------
Merge: 69b58fd 6b3f704 Bug#17234370 LAST_INSERT_ID IS REPLICATED INCORRECTLY IF REPLICATION FILTERS ARE USED. Merging fix from mysql-5.1 	109231a24e6755aee8d1a93620740bb3ad2ba91d
----------------------------
Bug#17234370 LAST_INSERT_ID IS REPLICATED INCORRECTLY IF REPLICATION FILTERS ARE USED. Problem: When Filtered-slave applies Int_var_log_event and when it tries to write the event to its own binlog, LAST_INSERT_ID value is written wrongly. Analysis: THD::stmt_depends_on_first_successful_insert_id_in_prev_stmt is a variable which is set when LAST_INSERT_ID() is used by a statement. If it is set, first_successful_insert_id_in_ prev_stmt_for_binlog will be stored in the statement-based binlog. This variable is CUMULATIVE along the execution of a stored function or trigger: if one substatement sets it to 1 it will stay 1 until the function/trigger ends, thus making sure that first_successful_insert_id_in_ prev_stmt_for_binlog does not change anymore and is propagated to the caller for binlogging. This is achieved using the following code if(!stmt_depends_on_first_successful_insert_id_in_prev_stmt) { /* It's the first time we read it */ first_successful_insert_id_in_prev_stmt_for_binlog= first_successful_insert_id_in_prev_stmt; stmt_depends_on_first_successful_insert_id_in_prev_stmt= 1; } Slave server, after receiving Int_var_log_event event from master, it is setting stmt_depends_on_first_successful_insert_id_in_prev_stmt to true(*which is wrong*) and not setting first_successful_insert_id_in_prev_stmt_for_binlog. Because of this problem, when the actual DML statement with LAST_INSERT_ID() is parsed by slave SQL thread, first_successful_insert_id_in_prev_stmt_for_binlog is not set. Hence the value zero (default value) is written to slave's binlog. Why only *Filtered slave* is effected when the code is in common place: ------------------------------------------------------- In Query_log_event::do_apply_event, THD::stmt_depends_on_first_successful_insert_id_in_prev_stmt is reset to zero at the end of the function. In case of normal slave (No Filters), this variable will be reset. In Filtered slave, Slave SQL thread defers all IRU events's execution until IRU's Query_log event is received. Once it receives Query_log_event it executes all pending IRU events and then it executes Query_log_event. Hence the variable is not getting reset to 0, causing this bug. Fix: As described above, the root cause was setting THD::stmt_depends_on_first_successful_insert_id_in_prev_stmt when Int_var_log_event was executed by a SQL thread. Hence removing the problematic line from the code. 	6b3f704b38a58d0cdd05fe3a9c1f5a0b881c9a1d
----------------------------
Bug#17542370 SEGMENTATION FAULT WHILE EXECUTING SELECT ON SESSION_CONNECT_ATTRS Before this fix, executing a select on table performance_schema.session_connect_attrs could crash the server, when executed under load. The root cause is that the code that scans records: - does not honor the PFS_thread::m_sesion_lock lock, - does parse the live session attribute data, while it can possibly be modified Race conditions could occur: - when writing session attributes, shortly after a thread connect - when erasing session attributes, shortly before a thread disconnect The fix is to: - use an optimist lock on PFS_thread::m_sesion_lock - make a copy of the session connect attributes, - only when the optimist lock was successful, (meaning the data was not concurently modified), parse the safe copy of the content of it to extract attributes. 	1894539325bc187eed6a6c1015a151bdfee96913
----------------------------
Bug #17503460 MYSQL READ ONLY DOESN'T WORK FOR DROP TRIGGER Problem: Drop Trigger succeeds even after setting read_only variable to ON. Fix: Fix is to report the standard error (ER_OPTION_PREVENTS_STATEMENT) when global read_only variable is set to ON. 	19b53ddaa9fa21b91b43b535a7919a55589395ef
----------------------------
"This is a fix for Bug#16426805 (ON FAILURE OF MGMT NODE, STATUS DOESNT GET UPDATED FOR MORE THAN 5 MIN). The problem was that the variable holding the interval (in milliseconds) between MGMD to MGMD heart beat messages was never assigned a suitable value. Instead it was set to 0 minus a small constant, such that it wrapped around to a value close to 2^32. To fix this, a new config variable has been defined, ""HeartbeatIntervalMgmdMgmd"", with a default value of 1500ms. An mgmd process will then detect the death of another mgmd after about 6000ms. In addition this commit adds some extra comments and asserts, and removes a useless destructor. "	885f86f593f369baf758d92a285434926e7d2159
----------------------------
WL#6797 Method for clearing session state As of today connection pools partitioned by user use COM_CHANGE_USER during recycle of a connection, by pool manager which does a re-authentication which is not needed. This WL will introduce a new RPC COM_RESET_CONNECTION which will only do the cleanup of the session context without re-authentication. 	4466ed48dd51fe31a1b767182faab77d0889fe28
----------------------------
BUG#17483582 - EXCESSIVE MEMORY USAGE WHEN QUERYING INFORMATION_SCHEMA.INNODB_FT_INDEX Analysis & Solution: We first fetch all fts index records into memory and then store them into myisam temp table, so it will consumes huge memory when the fts index is big enough. In this patch, we limit the memory usage by INNODB_FT_RESULT_CACHE_LIMIT. When we reach the limit, do more fetches until we have all records rb://3398 approved by Jimmy.Yang 	36deaf9869f6ebe261b8815b4f2eb48b09e317a1
----------------------------
Bug#17590161 READ/WRITE MUTEXES ON BINLOG DELEGATE CLASSES ARE NOT COUNTED ON PERF SCHEMA Prior to this fix, the read write lock Delegate::lock was not instrumented for the performance schema. This lock is used in particular for the following classes: - Trans_delegate - Binlog_storage_delegate - Binlog_transmit_delegate - Binlog_relay_IO_delegate With this fix, the read write lock is instrumented. For clarity, a different name is used for each sub class, to have distinct statistics for distinct uses. The instruments added are visible in table performance_schema.setup_instruments as: - wait/synch/rwlock/sql/Trans_delegate::lock - wait/synch/rwlock/sql/Binlog_storage_delegate::lock - wait/synch/rwlock/sql/Binlog_transmit_delegate::lock - wait/synch/rwlock/sql/Binlog_relay_IO_delegate::lock 	0e57e17f897c88d095c130575b3759cb50b54e14
----------------------------
Fix for bug#16961971, NDB : REALTIMESCHEDULER REGRESSION ON NDBMTD, introducing more options to ThreadConfig configuration variable for realtime, spintime and cpusets 	36e090aaa7e08130675a3bd3b50152edebeabed3
----------------------------
Fix for bug#16961971, NDB : REALTIMESCHEDULER REGRESSION ON NDBMTD, introducing more options to ThreadConfig configuration variable for realtime, spintime and cpusets 	2194dff2aa56b0fcfc253ad73a05be210afbaba9
----------------------------
Fix for bug#16961971, NDB : REALTIMESCHEDULER REGRESSION ON NDBMTD, introducing more options to ThreadConfig configuration variable for realtime, spintime and cpusets 	9864b6eb36f49e30bba6d3ee4fd320c970ee8cde
----------------------------
Fix for bug#16961971, NDB : REALTIMESCHEDULER REGRESSION ON NDBMTD, introducing more options to ThreadConfig configuration variable for realtime, spintime and cpusets 	4102de31d212ff5a8fb7c9e8819c064b49a12688
----------------------------
Bug#17032712 SET @@GLOBAL.GTID_PURGED='UUID:1-1000000000000000000' ASSERTS Problem: ======= The get_string_length() function is failing to assert the correct string length of numbers with 19 digits. Analysis: ======== The get_string_length() function returns the length a string must have in order to store a given number. It is used to calculate the string length of a GTID set. Because this function is static at rpl_gtid_set.cc, it is not trivial to make unit tests to verify its functionality. So, there is an assert executed only in debug enabled versions that checks if the value to be returned is equal to the length of printing the number in a string with snprintf(). Because of the precision of the rpl_gno data type (int64), an auxiliary variable may overflow when the number to be evaluated has 19 digits. The currently implemented code doesn't take into account this overflow possibility, making that every 19 digit number be evaluated as having 20 digits in length. This divergence cause the assert to fail. Fix: === Changed the function code replacing the length calculation algorithm with one that is simple, easy to read and overflow free. 	895317c36676f0c2179b6072c1b54640c2dbe4ea
----------------------------
Merge: 661a6f0 5678cc1 Bug#17032712 SET @@GLOBAL.GTID_PURGED='UUID:1-1000000000000000000' ASSERTS Problem: ======= The get_string_length() function is failing to assert the correct string length of numbers with 19 digits. Analysis: ======== The get_string_length() function returns the length a string must have in order to store a given number. It is used to calculate the string length of a GTID set. Because this function is static at rpl_gtid_set.cc, it is not trivial to make unit tests to verify its functionality. So, there is an assert executed only in debug enabled versions that checks if the value to be returned is equal to the length of printing the number in a string with snprintf(). Because of the precision of the rpl_gno data type (int64), an auxiliary variable may overflow when the number to be evaluated has 19 digits. The currently implemented code doesn't take into account this overflow possibility, making that every 19 digit number be evaluated as having 20 digits in length. This divergence cause the assert to fail. Fix: === Changed the function code replacing the length calculation algorithm with one that is simple, easy to read and overflow free. 	8e04b2d518bf73b8c8c4b09f03e5c32582a8a718
----------------------------
Bug#17032712 SET @@GLOBAL.GTID_PURGED='UUID:1-1000000000000000000' ASSERTS Problem: ======= The get_string_length() function is failing to assert the correct string length of numbers with 19 digits. Analysis: ======== The get_string_length() function returns the length a string must have in order to store a given number. It is used to calculate the string length of a GTID set. Because this function is static at rpl_gtid_set.cc, it is not trivial to make unit tests to verify its functionality. So, there is an assert executed only in debug enabled versions that checks if the value to be returned is equal to the length of printing the number in a string with snprintf(). Because of the precision of the rpl_gno data type (int64), an auxiliary variable may overflow when the number to be evaluated has 19 digits. The currently implemented code doesn't take into account this overflow possibility, making that every 19 digit number be evaluated as having 20 digits in length. This divergence cause the assert to fail. Fix: === Changed the function code replacing the length calculation algorithm with one that is simple, easy to read and overflow free. 	5678cc16418a1b4d22b527f34f44e639a2d8d95f
----------------------------
Bug#16894092: PERFORMANCE REGRESSION IN 5.6.6+ FOR INSERT INTO .... SELECT ... FROM Problem: The performance regression is related to writing the temporary table into MyISAM. If we configure tmp_table_size and max_heap_table_size sufficiently high (in this case setting them to 96M) in order to ensure that the temporary table can be stored in the Memory engine, the performance regression is no longer present. Regression source was found to be WL#6071. Analysis: While creating temporary table, a random scan is initialized. This initialization internally frees buffers in case of myisam. As a result writes/reads happen to disk rather than cache. And hence the performance hit when we try to create tmp table in myisam. Solution: Initialize the scan without freeing buffers which can be done by calling ha_rnd_init(1). 	4d05a3d936dd184d8784ff40804bee45ebd2c9fe
----------------------------
BUG#17576516 HOST_CACHE_SIZE VALUE IS IGNORED Before this fix, starting the server with host_cache_size = N in the my.cnf file had no effect. The internal host cache size was always 128. The root cause is in hostname_cache_init(), which is using 'HOST_CACHE_SIZE' (a #define to 128) instead of 'host_cache_size' (the C global variable that corresponds to the SQL system value named host_cache_size). Overall, the initialization of the host cache is not satisfactory, and needs to be cleaned up. In particular, the fact that there are distinct: - data path (mysqld.cc setting the host_cache_size global variable, to be used by hostname.cc) - control path (mysqld.cc calling hostname_cache_init with no parameters) can only be a source of confusion. This fix: - moves the global variable host_cache_size to mysqld, where it belongs, because this is a server global variable - changes the variable type from ulong to uint, given that the size really is an unsigned int, per hash_filo::m_size - changes hostname_cache_init() to take explicitely a size, for consistency with hostname_cache_resize(), and for a cleaner interface. 	e9d1bde7f390b4a0302ea994b4d725c691695199
----------------------------
Bug#16960133 MYSQLBINLOG VERBOSE OUTPUT, INVALID MEMORY ACCESS IN MY_B_WRITE_QUOTED Analysis: IN RBR mode and binlog_row_image is set to MINIMAL, only the changed columns are logged in binlog. And the meta data (eg: null bytes) will also be written only for these effected columns. `mysqlbinlog` tool in verbose mode (-v) skips these null bytes before reading the actual row. This tool assumes that for each column in the table there is one null bit which is not always true(eg: binlog_row_image=minimal) and calculates the number of total null bytes written in the binlog wrongly (ie., skips wrong number of bytes) and finally ends up in interpreting the row in wrong way. This problem could lead to invalid memory reads. The formula used to calculate the metadata bytes was ((number of columns in the table + 7) /8). For example, if we have 9 columns in a table and if there is a two columns insert/update event, master would have written two bits (i.e., one byte) in row metadata. If we calculate based on number of columns in table, it results 2 bytes instead of 1 byte. Fix: The formula should be based on the number of columns written in the event instead of the total number of columns in the table. Changed new formula is ((number of columns written in the event) + 7)/8) 	a8a30d89598f88137a5b43e57fc067f18d0c7c81
----------------------------
"Bug#17298829 	INNODB_WL6326_BIG FAILS WITH INNODB_PAGE_SIZE 4K AND 8K + SPORADIC FAILURES 1. Make the expected results independent of actual InnoDB page size. 2. Reordering of sub tests etc. in order to avoid the sporadic failures. 3. Minor cleanup in the test and especially comments. 4. Remove the test from disabled.def and add it to default.experimental because the test might stay risky. "	ec710c4968677bd0152b1a7989f6f9a4fcf7281e
----------------------------
Bug #16630410 NDB:LCP FRAGMENT SCAN WATCHDOG SHOULD BE CONFIGURABLE The LCP fragment scan watchdog periodically checks for lack of progress in a fragment scan performed as part of a local checkpoint. The watchdog was hard-coded to shut down the node if there was no progress for 60 seconds. Added a configuration parameter LcpScanProgressTimeout to set the maximum time for which the local checkpoint can be stalled before the LCP fragment scan watchdog shuts down the node. A parameter value of 0 disables the LCP fragment scan watchdog. Added a unit test to set the parameter value to 0 and verify that the LCP fragment scan watchdog is disabled. 	7dc090c064cc73deeea23e780915034e200fc9b6
----------------------------
Bug#17560986 DO NOT GRAB LOCK_PREPARED_STMT_COUNT TO SUBTRACT ZERO FROM PREPARED_STMT_COUNT During logout processing we decrement the global number of prepared statements. If the connection has not used prepared statements, or has already deallocated them, then there's no point in grabbing the global mutex. The result is: less contention on LOCK_prepared_stmt_count during logout processing. 	9669ad02b0a1992e7338a9d75a14c17b99e7b520
----------------------------
BUG#11748566 - MYSQL SHOWS WRONG DEFAULT VALUE FOR PK IF NOT NULL NOT SPECIFIED DESCRIPTION: Two different, but equivalent ways of declaring a column as primary key does not end-up with the same result. When the column is declared primary key inline as: CREATE TABLE t (a INT PRIMARY KEY) it has no default value. In this case the flag NO_DEFAULT_VALUE_FLAG for the column is set while parsing. On the other hand, in the second case when column is declared primary key as index: CREATE TABLE t (a INT, PRIMARY KEY(a)) the flag is not set. This results in a default value for the primary key column. FIX: When a column is declared as primary key as index, the flag NO_DEFAULT_VALUE_FLAG is set for that column if user has not provided an explicit default value for the column. For the TIMESTAMP/DATETIME fields, if explicit_defaults_for_timestamp variable is not set, default value assigned due to first timestamp column promotion is retained. Default constant value assigned due to implicit promotion of second timestamp column is removed. 	dbc76697e13695f5efe79cb5d05f4819859a0f44
----------------------------
Fix for Bug17363350 - Replaced --log_warnings with --log_error_verbosity as it has been deprecated 	2d15977c1a33027d5f31d2935879076ef58de4e5
----------------------------
Bug #17253499 INNODB STATS INTERFERES WITH INNODB FORCE RECOVERY AND DROP/CREATE TABLES Problem: During force recovery (SRV_FORCE_NO_TRX_UNDO), create and drop table is not working. Solution: The semantics of the force recovery level SRV_FORCE_NO_TRX_UNDO has been misinterpreted.  The force recovery level SRV_FORCE_NO_TRX_UNDO means that rollback of recovered transactions must not be done.  This should not prevent other transactions being assigned a rollback segment.  So while assigning rollback segments, do not check the level of innodb_force_recovery. Also, when the innodb_force_recovery is greater than SRV_FORCE_NO_TRX_UNDO we now make InnoDB to become read only. rb#3473 approved by Marko 	84b0b2a0cd3e4e24f561500754503468984f08cb
----------------------------
"Temp fix for bug#16961971, NDB : REALTIMESCHEDULER REGRESSION ON NDBMTD This fix disables RealTimeScheduler if the MT scheduler (ndbmtd) is used. A warning will be printed: ""Configuration contains RealTimeScheduler setting, not currently supported with ndbmtd (bug# 16961971). Disabling."" "	f4954d8706c867028452ed4ce901b9a4c0fb39d7
----------------------------
Bug#17539520 PERFORMANCE_SCHEMA THREAD CREATION PERFORMS TOO MUCH INITIALIZATION This fix is a performance improvement. A lot of code present in create_thread() initialized the per thread internal buffers that support: - table events_waits_current - table events_stages_current - table events_statements_current Executing this code to fully initialize every member for every row is in fact un necessary, and the code has been removed. Only the initialization of the default NESTING_EVENT_ID and NESTING_EVENT_TYPE for the thread waits and stages is required, and the overall initialization of these columns has been cleaned up. As a related fix, PFS_events_waits::m_thread was redundant with PFS_events::m_thread_internal_id, and has been removed. Logic in table_events_waits_common::make_row() that was in fact specific to only two sub classes has been moved to - table_events_waits_current::make_row() - table_events_waits_history::make_row() 	aed7c0cbb10106e1dbaec86c06a1e6b1de077339
----------------------------
Fix for bug#15907515 RECEIVER THREAD COULD BLOCK/BUSY WAIT WHILE HOLDING RECEIVER MUTEX This fix removes the waiting for more job buffers to become available inside performReceive() (or actually: mt_checkDoJob() called from it). This was bad as the receive mutex was held during this wait. Furthermore, mt_checkDoJob() was also sleep-loop waiting for job buffers to be freed. Which could end up as a busy wait if the receive thread was running under RealTime priority !! ::performReceive() will now instead return with a 'full' status to the receive thread without further waiting/retry. The receive mutex will then be unlocked and the receiver thread will yield() on the 'thr_job_queue_head::m_waiter' condition. Later, 'm_waiter' will be signaled, and the receive thread awakened, when more job buffers are available. (After being consumed by the worker thread.) Furthermore this fix also removes a bug where a negative return from the initial check_job_buffer() call in the receive thread, prevented the call of ::performReceive(). Thus, ::performReceive() did not call TCP_Transporter::doReceive() which would ofload received data from OS TCP-buffers into local 'ReceiveBufferMemory'. This could probably cause premature communication blockage, or at least the configured ReceiveBufferMemory to not fully being used to ofload the OS TCP buffer as intended. NOTE: 'check job_buffer outcome' is not relevant for ::performReceive() until *after* it has done a ::doReceive() on all TCP transporters having avail data. 	918470555c1ef537a6f9d36cba156dc5921969ac
----------------------------
Fix for Bug#15907122 INCORRECT HANDLING OF JOB-BUFFERS ALMOST FULL - 'SLEEPLOOP 10' The internal mt-job scheduler (mt.cpp) has the function update_sched_config() which is supposed to calculate how many signals we are allowed to execute in the next scheduling round. Allowed number of signals are restricted by available job-buffers (aka 'signal buffers') for the block-threads we may communicate with. If the available job-buffers for *any* such thread are below a critical threshold, update_sched_config() will wait for more job buffers to become available. The wait is implemented with the yield() function which takes a 'thr_wait*' argument (Think of this as a condition). A 'wakeup(thr_wait*)' (from another thread) will later restart the suspended thread. However, the 'thr_wait*' argument used in these yield() / wakeup() was the one used for signal that *incomming* signals has become available. This is the opposite of what we want to wait for. The effect of this was that these yields waited the maximum timeout (1ms) before execution was resumed. This fix introduce an additional 'thr_wait*' which is signaled when job buffers are released and thus becomes available. This fix is a collection of the following sub patches: - Add dump of job buffer utilization before we crash due to 'job buffer full' - Change the signature of the yield() function such that it can take a more general '*check_callback()' function as arguments. Change the existing functions currently used as 'callbacks' to the new (relaxed) signature. -  Refactor: Splitt out compute_free_buffers_in_queue() from compute_max_signals_to_execute(). New function contains common code intended for reuse in later patches. - (Fix) update_sched_config() will 'yield' the CPU and wait for more job buffers to become available when it is about to run out of job buffers. The yield() call will wait on a 'thr_wait' object, which may be sent a 'wakeup()' when the waiting condition has been resolved (by another thread) However, update_sched_config() yield'ed on the incorrect 'thr_wait' object intended to be used to wait for more *incomming signal* - What we actually have to wait for are signals to be *consumed* by the destination thread. Luckily there is also defined a 'max wait' of 1ms which currently will wakeup the thread. Thus, we never waited forever, but added latency could be expected. This patch introduce a new 'thr_wait' object which is signaled by the consumer, and update_sched_config() will now wait on this object. Furthermore the patch also avoid a situation where a thread could end up waiting for itself. 	2bf0e17fe9f5b9c7bebb3b98427ad5cd65f76db9
----------------------------
"BUG#11763963 - BINARY LOG ACTIVATION SETS SERVER_ID IMPLICITLY, BUT REPLICATION FAILS Problem: When one enables binary logging without setting a server id, letting it default to 0, the server changes it to 1, but replication does not work. According to the documentation, a server id > 0, should be a legal configuration to allow slave to connect and replication to work. Analysis: Apparently, this happens since the dawn of time as a design decision, meaning that binlog => server_id. In mysqld.cc::main() [...] if (opt_bin_log && server_id == 0) { server_id= 1; #ifdef EXTRA_DEBUG sql_print_warning(""You have enabled the binary log, but you haven't set "" ""server-id to a non-zero value: we force server id to 1; "" ""updates will be logged to the binary log, but "" ""connections from slaves will not be accepted.""); #endif } [...] What happened is that, when a slave tried to connect, it would get an error stating that the master was misconfigured, even with server-id = 1. After some testing we concluded that not even the documentation was accurate enough. The test conducted were: 1) Start master with no options. Make sure that slave cannot connect (control experience) 2) Start master with only binlog active. Make sure that slave cannot connect (the bug situation) 3) Start master with binlog active and server-id == 0 in the command line. Make sure that slave cannot connect. (as documented) 4) Start master with binlog active and server-id == 1 in the command line. Change server_id to 0 using SQL before connecting slave. Make sure that slave cannot connect.(as documented) Situations 1) and 2) are OK and according with expected and analyzed behavior. With 3) and 4) things are not as documented. In Situation 3) the server starts and implicitly sets server id to 1. When one starts a slave after configuring the master, there is no error in ""SHOW SLAVE STATUS"". It connects and works. Bin and Relay log have a server id of 1. In Situation 4) in which one explicitly change the server_id in runtime, the behavior is the same as in Situation 3). Contents of the relay log and bin log have a server id == 0 Fix: For trunk only the decision was: - Server_id must be explicitly set if binlog is active. If not, the server will not start. - if you set server_id=0, no slaves can connect, but your statements will be binlogged with the provided server_id. - if no server_id is set, it will have the default configured value and have the same behaviour as the above, if the default is 0. This patch will bring the code closer to which is documented. The dynamic change of server-id was not addressed here. For the previous version, one thinks that the documentation should be augmented according to the information detailed in the bug page. "	5621b3f291845bb6d9a5e48cb8eec756f80e85de
----------------------------
BUG#17460821: ASSERTION ERROR WHEN STOPPING SLAVE AFTER SEMI-SYNC ON MASTER IS DISABLED The crash happens when: (i) the master and slave are configured to use the semisync plugin; (ii) the DBA disables semisync on the master; (iii) and he also unsets the option to wait for slaves ACK even if the semisync slave count reaches 0 during the waiting period. This combination of factors makes the server run into an assertion and crash as soon as the last semisync slave disconnects and its dump thread exits. The root of the problem is the fact that when the dump thread disconnects and calls the observer hook transmit_stop, which ends up calling ReplSemiSyncMaster::remove_slave, there is no check whether the master has already disabled semisync or not. If it has, the then a second call to the switch_off member function must be avoided. The quick fix is to avoid calling switch_off if the DBA has disabled the semisync plugin interactively on the master. Also, the switch_off member function should only be called if the plugin has not been switched off already. This is basically the pattern throughout the rest of the semisync plugin and no other calls seem vulnerable to similar crashes/assertions. 	415bc3be0b13cf51791a3e2951e622edcd42c0b3
----------------------------
BUG#14765080 - DEBUG_SYNC CAN LOSE SIGNAL Post push fix, ADDRESSSANITIZER found bug with current_thd in unit test. 	6a18ca75914120b22ab048c4b4e39e2b142a3111
----------------------------
Bug#17503130 TABLE PERFORMANCE_SCHEMA.TABLE_HANDLES BECOMES EMPTY AFTER A BIG WORKLOAD Before this fix, the implementation of table performance_schema.table_handle would appear empty after the server executed some code, causing spurious failures in test cases like mdl_func. The failure was spurious, because the same test did work after a server restart. The root cause is that the logic to check for locks in table_table_handles::make_row() is broken, mismatched locks are used. It works only by accident after a server restart, because the PFS_table::m_lock and the PFS_table_share::m_lock happen to be initialized to the same initial value. The fix is to use the proper lock for end_optimistic_lock(). 	83fcf67946e5e183db34c556d44790d4c737390d
----------------------------
Added default.weekly.basic. This defines reduced suite for tier3/3 platforms Following changes to default.weekly: * Improved comments * Fixed typos * Restricted binlog-checksum=CRC32 runs to rpl and binlog suites * Removed run with ps-protocol for rpl and binlog suites. This is already covered by the ps-protocol run of default suites 	d5ecb8daa00323b4bc68ea49924903020f660c6f
----------------------------
BUG#16580366- MTR TESTS FAILING SPORADICALLY ON PB2 (5.5, 5.6 AND 5.7) DURING INNODB RECOVERY Problem: ======= The connection 'master' is dropped by mysqltest after rpl_end.inc. At this point, dropping temporary tables at the connection 'master' are not synced at slave. So, the temporary tables replicated from master remain on slave leading to an inconsistent close of the test. The following test thus complains about the presence of temporary table(s) left over from the previous test. Fix: === - Put explicit drop commands in replication tests so that the temporary tables are dropped at slave as well. - Added the check for Slave_open_temp_tables in mtr_check.sql to warn about the remaining temporary table, if any, at the close of a test. 	83c64d7e66eee5dd902aa43b48e2afd741648b0d
----------------------------
Bug#17468295   ADD MISSING OUT-OF-BOUND TESTS FOR VARIABLES IN SYS_VAR SUITE Fix: ---- This bug is a repreat of Bug#13875534. But there were missing tests in Bug#13875534. Reviewed the entire sys_vars suite and added missing testcases in following tests. mysql-test/suite/sys_vars/t/auto_increment_increment_basic.test mysql-test/suite/sys_vars/t/auto_increment_offset_basic.t     Bug#17468295   ADD MISSING OUT-OF-BOUND TESTS FOR VARIABLES IN SYS_VAR SUITE Fix: ---- This bug is a repreat of Bug#13875534. But there were missing tests in Bug#13875534. Reviewed the entire sys_vars suite and added missing testcases in following tests. mysql-test/suite/sys_vars/t/auto_increment_increment_basic.test mysql-test/suite/sys_vars/t/auto_increment_offset_basic.test mysql-test/suite/sys_vars/t/binlog_max_flush_queue_time_basic.test mysql-test/suite/sys_vars/t/connect_timeout_basic.test mysql-test/suite/sys_vars/t/host_cache_size_basic.test mysql-test/suite/sys_vars/t/innodb_adaptive_flushing_lwm_basic.test mysql-test/suite/sys_vars/t/innodb_adaptive_max_sleep_delay_basic.test mysql-test/suite/sys_vars/t/innodb_api_bk_commit_interval_basic.test mysql-test/suite/sys_vars/t/innodb_max_dirty_pages_pct_basic.test mysql-test/suite/sys_vars/t/interactive_timeout_basic.test mysql-test/suite/sys_vars/t/key_cache_block_size_basic.test mysql-test/suite/sys_vars/t/lock_wait_timeout_basic.test mysql-test/suite/sys_vars/t/read_rnd_buffer_size_basic.test mysql-test/suite/sys_vars/t/table_open_cache_basic.testest mysql-test/suite/sys_vars/t/binlog_max_flush_queue_time_basic.test mysql-test/suite/sys_vars/t/connect_timeout_basic.test mysql-test/suite/sys_vars/t/host_cache_size_basic.test mysql-test/suite/sys_vars/t/innodb_adaptive_flushing_lwm_basic.test mysql-test/suite/sys_vars/t/innodb_adaptive_max_sleep_delay_basic.test mysql-test/suite/sys_vars/t/innodb_api_bk_commit_interval_basic.test mysql-test/suite/sys_vars/t/innodb_max_dirty_pages_pct_basic.test mysql-test/suite/sys_vars/t/interactive_timeout_basic.test mysql-test/suite/sys_vars/t/key_cache_block_size_basic.test mysql-test/suite/sys_vars/t/lock_wait_timeout_basic.test mysql-test/suite/sys_vars/t/read_rnd_buffer_size_basic.test mysql-test/suite/sys_vars/t/table_open_cache_basic.test 	d6b9c831ed6627afdd6567605230b5676c522d73
----------------------------
Bug#17358875 MEMCACHED: THE BINLOG SEQUENCE IS NOT CORRECT Approved by Jimmy on rb://3213. This bug is because we commit innodb transaction before write binlog. This will cause other thread write its binlog before current thread. The fix patch is moving write binlog before commit transaction. It'll guarantee binlog is written according to transaction commit order. This patch also contains a follow up patch for Bug#16498810 WRONG FILENAME IN ERROR MESSAGE FOR INNODB MEMCACHED CONFIG. 	feaac132ecd485a82f345165fe2742f2b8570cd9
----------------------------
Bug#17504345 - PERFORMANCE OVERHEAD, THREAD AGGREGATE ON DISCONNECT Before this fix, 1) On thread connect, the performance schema needs to evaluate if the thread is instrumented or not. The logic used did look up the content of performance_schema.setup_actors for the connecting account, every time. 2) On thread disconnect, the performance schema needs to aggregate statistics for parent users / account / hosts or globally, based on statistics collected by the disconnecting thread. The logic did perform this aggregation all the time, even when nothing was collected during the thread life time, for example when the performance schema is disabled. With this fix, 1) A new attribute PFS_account::m_enabled is created, that saves the result of the setup_actors look up. Whenever the content of the setup_actors table is changed, the code re evaluates PFS_acount::m_enabled for every account, to reflect new rules in setup_actors. When a thread connects, the corresponding PFS_account::m_enabled flag is used to decide if the thread is to be instrumented, if found. This avoids looking up setup_actors on every connection, the look up only happen the first time a given account connects. This flag is internal, there are no visible end user changes. 2) A new attribute PFS_thread::m_aggregate_on_disconnect is created, that indicates if aggregation during disconnect is needed. When the performance schema is disabled, this flag is always false. When the performance schema is enabled, and in particular: - when the 'global_instrumentation' consumer is enabled - when the 'thread_instrumentation' consumer is enabled - when the 'instrumented' column in table thread is enabled this flag PFS_thread::m_aggregate_on_disconnect is re evaluated, for every running thread if necessary. The m_aggregate_on_disconnect flag is only set when a thread can collect per thread statistics. During disconnect, aggregation is done only when the flag is set. The net effect of this change is that aggregation on disconnect only happens when necessary, saving CPU when no per thread stats are ever collected. This flag is internal, there are no visible end user changes. 	4eda1f9983f50173f314f63b9c466b3b0869befb
----------------------------
"Bug#17493868 IMPROVE PERFORMANCE_SCHEMA MEMORY INSTRUMENTATION Before this fix, 1) The memory instrumentation code could spent time performing operations in struct PFS_memory_stat 2) Memory allocated internally by the performance schema was not reported by the performance schema memory instrumentation. With this fix, 1) A new member, PFS_memory_stat::m_used, is added. This flags makes the code path much shorter. For cases when no memort instrumentation is enabled (the default), there are no stats to maintain. Even when the memory instrumentation is used, it is very unlikely that a given session has statistics for every kind of memory instrument, so most statistics will be unused. This is a performance improvement. 2) A new instrument is added, named ""memory/performance_schema/internal_buffers"". The performance schema now reports its own memory usage as well. "	7969f6aed02532e72172d1284398d011a4edd92e
----------------------------
"Bug#17327454:SEMI-SYNC REPLICATION MASTER CRASH WHEN SET RPL_SEMI_SYNC_MASTER_ENABLED OFF. Problem: ======= If master is waiting for a reply from slave, at this time set global rpl_semi_sync_master_enabled=OFF, the master server will crash. Analysis: ======== When master is waiting for a reply from slave, at this time if semi sync is switched off on master, during switch off if active transactions are present the transactions will be cleared and ""active_tranxs_"" variable will be set to NULL. When the waiting master connection finds that semi sync is switched of it tries to access ""active_tranxs_"" without checking if the transaction list exists or not. Accessing NULL transaction list causes the crash. Fix: === A check has been added to see a valid list exists before accessing the ""active_tranxs_"". "	2e54f37c33168577a26c0d23b0008edc941fcf12
----------------------------
Bug#11752792  NDB_ERROR_REPORTER DOES NOT INCLUDE CLUSTER LOG WHEN LOGDESTINATION IS US Backporting latest fixes for ndb_error_reporter and its mtr test to 6.3. Bug#11764570 Parse log filename from LogDestination, defaulting to ndb_<nodeid>* Bug#16765651 Add * to scp command to include all log files Bug#16602002 Add --connection-timeout, --skip-nodegroup and --dry-scp options In 6.3, the nodegroups cannot be queried using ndb_config since the 'Nodegroup' config parameter is not present. Therefore an 'ndb_mgm -e show' command is used to get the nodegroups for the --skip-nodegroup option. Bug#11756666 Add --help 	01b47a6635af4133316c7ec40ab7ca0374145b85
----------------------------
Bug#14771682 PERFORMANCE SCHEMA LEAKS MEMORY ON SHUTDOWN Currently, memory allocated for the performance schema is never freed, which causes valgrind warnings. To resolve completely the issue, two changes are needed: 1) Resolve bug#56666 Race condition between the server main thread and the kill server thread, which is the scope of WL#6407. 2) Fix the function cleanup_performance_schema() itself to free all memory used by the performance schema. This fix implements the second part only. Code is commented out using #ifdef HAVE_WL6407, while waiting for part 1). The function cleanup_performance_schema() has been tested (with #define HAVE_WL6407), which exposed some leaks, which have been all fixed. Executing unit tests under valgrind also exposed additional issues, all fixed in the unit tests. 	8aa50188ae93eeffd1d39b554b8b49369aa57349
----------------------------
ndb - test: NDBT_find_binary_from_path failed to check last path this made ndb.test_mgmd to fail if runned from installed mysql-test where ndb_mgmd is installed in $basedir/bin/. 	73f545c8d93c72a1d7df6b8b18837647edc3543e
----------------------------
Bug#17478068 COMPILING THE PERFORMANCE SCHEMA WITH ONLY SOME INSTRUMENTATIONS Before this fix, building the server could be done: - with the performance schema, including ALL available instrumentation - without the performance schema. The problem is that given the growing list of available instrumentations, this is less and less practical. In particular, to isolate a functional or performance issue, it can be desirable to build only with a particular instrumentation. This fix introduce the following cmake options: - DISABLE_PSI_MUTEX - DISABLE_PSI_RWLOCK - DISABLE_PSI_COND - DISABLE_PSI_FILE - DISABLE_PSI_TABLE - DISABLE_PSI_SOCKET - DISABLE_PSI_STAGE - DISABLE_PSI_STATEMENT - DISABLE_PSI_SP - DISABLE_PSI_IDLE - DISABLE_PSI_STATEMENT_DIGEST - DISABLE_PSI_METADATA - DISABLE_PSI_MEMORY which can be used to not build with a specific instrumentation When a specific instrumentation is not built: - Instrumentation points added in the server code, which uses macros like PSI_MUTEX_CALL, do not make calls to the performance schema, saving CPU. - The performance schema does not allocate memory for the instrumentation, - The thread aggregation code does not maintain statistics for the instrumentation, as all statistics are 0, to save CPU. Note that code like PFS_mutex_class is still compiled, but effectively dead. The goal is to reduce the memory and CPU footprint, not to eliminate completely symbols from the binary. Note that the table schema is unchanged. Tables that depend on a specific instrumentation, such as performance_schema.mutex_instances, will be empty when building with DISABLE_PSI_MUTEX=ON, but the table still exists. These options are intended to be used primarily by maintainers, and as such comes with the following limitation: The test suite has _not_ been fixed to have each test check for additional pre conditions, such as: - instrumentation X must be available - instrumentation Y must be available to make the tests suite pass no matter what the combination of compiling option is used. Adding these tests would make the test suite hard to maintain, for no additional value. The only test expected to pass is perfschema.start_server_nothing, which verifies that the server is still functional even with missing instrumentation. 	b8cdf0a009100609913098b6d15b8c72efd7ed05
----------------------------
Bug#16602002 PROVIDE OPTION TO SKIP NODEGROUP=65536 NODES FROM NDB_ERROR_REPORTER Fixed the scp command in ndb_error_reporter to handle the case where DataDir is not defined. 	50dadcf844d04028f6ffd04e9e54e37c61c6381c
----------------------------
"Bug #16396598 ""MDL HASH CAN STILL BE CONCURRENCY BOTTLENECK"". All 8 tables which were used in a 8-table Sysbench run (named 'test.sbtest1' .. 'test.sbtest8') fell into the same MDL hash partition (with metadata_locks_hash_instances set to default value - 8). This made the lock protecting this partition a bottleneck in some of the Sysbench tests. The MDL hash partition for the table is selected by taking modulo number-of-partitions from the hashed value of the key, which includes database and table name (e.g. '\002test\000sbtest1\000'). The same hash value is later also used with the hash container representing the individual partition. It turned out that the my_hash_sort_bin hash function, which was used for this purpose, is fairly likely to produce hash values for keys looking like ""key1"" .. ""keyN"" which don't differ in the lower bits. This means that objects with such keys are fairly likely to fall into the same MDL hash partition. To solve this problem this patch changes the hash function used for both MDL hash partition selection and in the hash container representing the individual partition to MurmurHash3. MurmurHash3 is a modern non-cryptographic hash function with much better statistical properties than my_hash_sort_bin. Particularly, due to good avalanche effect, keys looking like ""key1"" .. ""key8"" are unlikely to have hashes with the same lower bits, so it is unlikely for tables which are named in a similar fashion to fall into the same MDL hash partition (e.g. in the specific case mentioned in the original bug report only 3 keys out of 8 fall in the same partition). Also MurmurHash3 is generally faster than my_hash_sort_bin. For example, on my machine, the 32-bit version of MurmurHash3 used in this patch is around 3 times faster than my_hash_sort_bin for short, 16-byte keys and up to 5 times faster for really long keys. To be able to use MurmurHash3 with a HASH container the implementation of the container was extended to support usage of custom hash function instead of one prescribed by the character set. "	a3b6815134d6d9f2fd1c8ed3e52546ec31d25760
----------------------------
Merge: 65dc61c 093d863 WL#6661 log_error_verbosity --bootstrap and --help still change the default verbosity from 3 to 1 but may now be overridden on the command line with an explicit --log-error-verbosity=... Remember that this is a positional option. 	a0c04c0c7581cc590fa3feb0db947f13752efdeb
----------------------------
WL#7198 Add SSL support for mysqlbinlog Bug#11751199 SUPPORT FOR SSL OPTIONS NOT INCLUDED IN MYSQLBINLOG Problem: ======= Unlike other client programs (mysqldump, mysqladmin, ...) mysqlbinlog does not support SSL options. Users cannot use secure channels to query binlog of a remote server. Analysis: ======== All MySQL client tools supporting SSL use the same set of SSL options to configure SSL support into a MySQL client connection with a given MySQL server. The code for supporting these SSL options in command line parameters, for creating SSL options variables (using its defaults) and for handling the SSL options during command line options evaluation already exists and is distributed in three include files. Fix: === Included in mysqlbinlog references to sslopt-longopts.h, sslopt-vars.h and sslopt-case.h. Also, added the SSL options to the MySQL connection, so the client could effectively use SSL on its connection. 	9c76de357e55504abc3ccbe11f529b5eccb5b7a3
----------------------------
"WL#6661 --log_error_verbosity default level is 3, errors + warnings + notes, except when --help or --bootstrap is passed (in which case we'll use ""errors only"" in the interest of despamming). With this patch, we can override that terseness (--help --verbose --log_error_verbosity=3). NB --bootstrap and --help are early options. --log_error_verbosity, same as mostly everything else, is not, and gets parsed left-to-right along with the other options.  (In plain English, a command-line assignment to log_error_verbosity goes before (""to the left"" here in the West) the particles its intended to affect. "	093d863a9ed9fc43b609353ed4c59c433300b4b3
----------------------------
Bug#11756666 RFE: NDB_ERROR_REPORTER NEEDS --HELP Added --help to ndb_error_reporter and modified error-handling to print the usage message before exiting when the config file is not found. 	117cd991def306affcb245468dccf01c122b3bd5
----------------------------
"Bug #17277744 ERROR 1777 IN CHANGE TO MASTER_AUTO_POSITION = 0 WHEN AUTO_POSITION =1 Problem: If Master-Slave are using GTID based replication and the dump protocol was configured to use GTIDs and if that slave is restarted with gtid_mode=OFF, initialization on slave which is required for replication is failing with error ER_AUTO_POSITION_REQUIRES_GTID_MODE_ON(1777). And any further commands like ""start slave"" or ""change master"" are also throwing the same ER_AUTO_POSITION_REQUIRES_GTID_MODE_ON(1777) error. Analysis: When the slave server is restarted, it goes into initialization phase and reads master info file. Slave server was throwing error if it find Auto_position is 1 and gtid_mode is off and stops rest of the initialization required for replication. Fix: Slave server should not throw error if auto_position is 1 and gtid_mode is off. Instead, Server forces(resets) the auto_position value to 0. "	f33127fa8707cd76dfcd82bbb5b1a9b89eeb9306
----------------------------
"Bug#16291602 FAKE RELAY_LOG_INFO OBJECTS INITIALIZE UNNECESSARY RESOURCES Problem: ======= Binlog queries made in the MySQL client will use a ""lighter"" version of Relay_log_info for some of its properties. This ""lighter"" version, tagged as fake object, doesn't use some Relay_log_info resources. Analysis: ======== The fake relay log is used to raise errors when binlog queries are executed by MySQL clients. It uses only one worker without parallelizing the query execution. As the code of Relay_log_info prepare some resources to be used (in the constructor) and to be released (in the destructor) assuming a complex full featured relay log operation, this whole preparation are unnecessary to the fake relay log. Fix: === Moved resources initialization/destruction to the non fake relay code segment already created. "	e35bcb76f2b95e393cc2d132733a05e95ccc056b
----------------------------
Bug#17420109: SETTING SLAVE_PARALLEL_TYPE=DEFAULT CRASH IN CHECK_UPDATE_MTS_TYPE Problem: setting the value of slave-parallel-type variable on a standalone server may cause the server to exit. On a server, not configured as slave active_mi is null and accessing it may cause failures. Fix: fixed the issue by taking proper locks and checking if active_mi is not null 	9c5f4edd31086be36bca76e896de01be2db493aa
----------------------------
Merge: 116b3c3 eede16a Bug #16776528 RACE CONDITION CAN CAUSE MYSQLD TO REMOVE SOCKET FILE ERRANTLY Null merge 	4e92401ab040ac2dc09b58e072798110170dd2b1
----------------------------
Merge: da6f790 ef2c30d Bug #16776528 RACE CONDITION CAN CAUSE MYSQLD TO REMOVE SOCKET FILE ERRANTLY Merging from 5.5 to 5.6 	eede16aa76f048241742c66b62577fae158e6fe8
----------------------------
Merge: be0b442 1a105f6 Bug #16776528 RACE CONDITION CAN CAUSE MYSQLD TO REMOVE SOCKET FILE ERRANTLY Merging from 5.1 to 5.5 	ef2c30de6294a6c7acfd1c805c1b0da7127da404
----------------------------
Bug #16776528 RACE CONDITION CAN CAUSE MYSQLD TO REMOVE SOCKET FILE ERRANTLY Reverting the patch. Because this change is not to me made for GA versions. 	1a105f608fecf5480a0b84451f6a3d83c62d2310
----------------------------
Bug #16776528 RACE CONDITION CAN CAUSE MYSQLD TO REMOVE SOCKET FILE ERRANTLY Reverting the patch. Because this change is not to me made for GA versions. 	e77e0f9d38721c2fb2c7c6b2551084678b4a22c8
----------------------------
Bug #16776528 RACE CONDITION CAN CAUSE MYSQLD TO REMOVE SOCKET FILE ERRANTLY Reverting the patch. Because this change is not to me made for GA versions. 	c52ca48ec6b6d3bc41b7ea1db0016c1cde7674e9
----------------------------
Remove abbreviated spelling of arguments to programs and in my.cnf file(s) - traditionally it's been allowed to pass arguments to programs using short form as long as there are no other argument which starts with the same letters. - this featuresd is being removed in the future and thus, the syntax used in our test suite is adapted. Fixes: * --core -> --core-file * --promote-attribute -> --promote-attributes * SendBuffer -> SendBufferMemory * mysql -> mysqld * --p -> -p (uses the short form option instead of long form --parsable) 	c6a549008f577da680e52fe9ce387954b95813f7
----------------------------
Merge: e2e157d e1428e7 Bug #17168602 MYSQL_PLUGIN REMOVES NON-DIRECTORY TYPE FILES SPECIFIED WITH THE BASEDIR OPTION Null Merge 	6eae7d71b66b46bb19dd570ffc3f96b4571cb519
----------------------------
Merge: b5d6145 a6783f4 Bug #17168602 MYSQL_PLUGIN REMOVES NON-DIRECTORY TYPE FILES SPECIFIED WITH THE BASEDIR OPTION Reverting the patch. Because asked for second review. Merging from 5.5 to 5.6 	e1428e72f5671fce75dd80c60a952291c8da6ab5
----------------------------
Bug #17168602 MYSQL_PLUGIN REMOVES NON-DIRECTORY TYPE FILES SPECIFIED WITH THE BASEDIR OPTION Reverting the patch. Because asked for second review. 	a6783f4c74b7f135d5305206913d09e96cab034a
----------------------------
"Merge: 4865129 d19babc BUG#16032946 - PLEASE GIVE A MESSAGE FOR ""THREAD_CONCURRENCY DOESN'T DO WHAT YOU EXPECT"" Merge from 5.6 to trunk. "	0768cdf5959aa9f7c20ddd2fd66b3785cebb8e90
----------------------------
"Merge: a1ca040 46dc4af BUG#16032946 - PLEASE GIVE A MESSAGE FOR ""THREAD_CONCURRENCY DOESN'T DO WHAT YOU EXPECT"" Null merge from 5.5 to 5.6 "	d19babca71d649e643f6905e2a31d47ffc10172e
----------------------------
"BUG#16032946 - PLEASE GIVE A MESSAGE FOR ""THREAD_CONCURRENCY DOESN'T DO WHAT YOU EXPECT"" Fix info: -------- Backport of the deprecation bug fix (WL#5265) for global variable 'THREAD_CONCURRENCY' from mysql-5.6 to mysql-5.5 Note: With this backport, certain additional deprecation warnings would be reported under error conditions while setting the global/session variables. "	46dc4afcdd94652369bd48669eae9698193d6fe5
----------------------------
Merge: fc4bb11 049dab5 Bug #17168602 MYSQL_PLUGIN REMOVES NON-DIRECTORY TYPE FILES SPECIFIED WITH THE BASEDIR OPTION Reverting the patch. Because asked for second review. Merging from 5.6 to trunk 	d9e43b22ac66455b0293b2063910eab74af8c87e
----------------------------
Merge: a1ca040 08db593 Bug #17168602 MYSQL_PLUGIN REMOVES NON-DIRECTORY TYPE FILES SPECIFIED WITH THE BASEDIR OPTION Reverting the patch. Because asked for second review. Merging from 5.5 to 5.6 	049dab5dfc9a5b7f0631515a0cfc7e05bb7b763f
----------------------------
Bug #17168602 MYSQL_PLUGIN REMOVES NON-DIRECTORY TYPE FILES SPECIFIED WITH THE BASEDIR OPTION Reverting the patch. Because asked for second review. 	08db5938a628e0147869d51bdc96ee252ef18396
----------------------------
"Merge: 09ee764 ff4e038 BUG#16032946 - PLEASE GIVE A MESSAGE FOR ""THREAD_CONCURRENCY DOESN'T DO WHAT YOU EXPECT"" Merge changes from 5.6 to trunk. "	1b225defb4b2446e6a4c0919c5cc6b64bff9f5e3
----------------------------
"Merge: a1ca040 6e30fae BUG#16032946 - PLEASE GIVE A MESSAGE FOR ""THREAD_CONCURRENCY DOESN'T DO WHAT YOU EXPECT"" Null merge from 5.5 to 5.6 "	ff4e038248f30625a9192a8c500525a586671c0f
----------------------------
"BUG#16032946 - PLEASE GIVE A MESSAGE FOR ""THREAD_CONCURRENCY DOESN'T DO WHAT YOU EXPECT"" Fix info: -------- Backport of the deprecation bug fix (WL#5265) for global variable 'THREAD_CONCURRENCY' from mysql-5.6 to mysql-5.5 Note: With this backport, certain additional deprecation warnings would be reported under error conditions while setting the global/session variables. "	6e30fae1200b3601bc803ab739b352289d98d848
----------------------------
Bug#17406891 - CRASH IN MDL INSTRUMENTATION, WHEN THREAD IS NOT INSTRUMENTED In pfs_rebind_table_v1(), the performance schema instrumentation for table handles could crash, when assigning a table handle to a non instrumented thread. With this fix, for table performance_schema.table_handles, column OWNER_EVENT_ID is set to 0 when the thread that owns a table handle is not instrumented. 	4a80b71dcd583210ff00ab578354ed75aa51621b
----------------------------
ndb - Fix differing .result file due to deprecation warning for option prefix - i.e when you have the option --core-file it was traditinally possible to give that option as --core as long as there was no other option startig with --core. This possibility has now been scheduled for removal and thus it's better to use the full option. - replace --core=0 with --core-file=0 Copied from fix for 7.3 revision-id: magnus.blaudd@oracle.com-20130828115048-x5uqoxm5nb2xal2q 	b5b6cdba2a17571ab01e3e5263ca73f724724ab7
----------------------------
Merge: 3f801e0 a3824bd Bug #17168602 MYSQL_PLUGIN REMOVES NON-DIRECTORY TYPE FILES SPECIFIED WITH THE BASEDIR OPTION Merging from mysql-5.6 to mysql-trunk 	378708b5ded90eda06f4c07e1e8e74463d0f8bce
----------------------------
Merge: 0b856bb e2f9086 Bug #17168602 MYSQL_PLUGIN REMOVES NON-DIRECTORY TYPE FILES SPECIFIED WITH THE BASEDIR OPTION Merging from mysql-5.5 to mysql-5.6 	a3824bdce21b22b2bf81761db2f867198e701416
----------------------------
Bug #17168602 MYSQL_PLUGIN REMOVES NON-DIRECTORY TYPE FILES SPECIFIED WITH THE BASEDIR OPTION Description: The mysql_plugin client attempts to remove any filename specified to the --basedir option. The problem is that if the filename does not end with a slash, it will attempt to unlink it, which succeeds for files, but not for directories. Analysis: When we are starting mysql_plugin with basedir option and if we are giving path of a file as basedir, it deletes that file. It was because it uses a function my_delete which unlinks the file path given. Fix:  As a fix we replace that line using another function my_free, which will only free the  pointer which is having that file path. 	e2f9086e8dfc1acd79b91cfd6255a6d2c7b7529a
----------------------------
Adjust instrument name for relay_log 	a37fb982d831c5196836c46caa67ab40b2d31cee
----------------------------
Remove unwanted innodb_file_format_max check and force_myisam_default.inc call. 	aca40770fc3f95587ec880fdb407d381b4caa2fd
----------------------------
Fix compiler error occurred with WITHOUT_PERFSCHEMA_STORAGE_ENGINE=1 in fts0plugin.cc and also fix some code format issues. Apporved by Jimmy.Yang in IM. 	0c8c9c6f2846e26a6b4785a1ff09bd9406859ec6
----------------------------
Bug#17339221 'MYSQL' IS INCLUDED IN READABLE CONF FILE GROUPS IN MYSQL_SECURE_INSTALLATION Problem: 'mysql' is a part of the array which has the list of groups which can be read while accessing a config file for mysql_secure_installation. Hence all the options which can be listed under mysql should be accepted by mysql_secure_installation, which is not the case. So the program exits when there are unrecognised options in config file. Solution: Removed 'mysql' from the list and added 'mysql_secure_installation'. User will be able to give the options through this new tag. 'client' tag is retained. Changes are made to support --password option. The supported tags now on will be 'client' and 'mysql_secure_installation'. 	4f0bb4a8591e96e1387732f1dc599f4b61302ae1
----------------------------
Fix result difference in cleanup for innodb_file_format_max variable. 	224f42f872613df634a9b3cbd1f7b5b4a88d1cb4
----------------------------
Corrected the PID_FILE_PATT manipulation 	ddc0f5aca93ff4d65d83c6e6a1e55e1b7318322f
----------------------------
"Bug#17271055 ""STATEMENT/COM"" EVENT MEANING IS UNCLEAR Before this fix, a statement received from a client was instrumented as follows: When a new packet is detected at the socket level, a new statement is started, with a temporary name ""statement/com"" Then the packet number is read, so the server knows what type of command the request is. The statement name is then refined to for example ""statement/com/Query"". The query text is read and given to the parser. After parsing, the exact type of SQL statement is known. The statement name is then refined to for example ""statement/sql/insert"", which is now a final event name. The problem with this approach, is that instrument names like: - ""statement/com"" - ""statement/com/Query"" are used for special purposes, but this is not obvious. To collect statistics only for INSERT statements for example, enabling the ""statement/sql/insert"" instrument is not sufficient, the ""statement/com"" and ""statement/com/Query"" instruments must be enabled as well. Also, for instruments such as ""statement/com"", no statistics are even aggregated for this type of statement, because no real statement is ever classified with ""statement/com"" as a final name. The same issue exists with statements read from the relay log on a slave. With this fix, 1) Every instrument name in performance_schema.setup_instrument that corresponds to abstract statements have been renamed, for clarity. ""statement/com/"" is renamed to ""statement/abstract/new_packet"" ""statement/com/Query"" is renamed to ""statement/abstract/Query"" ""statement/rpl/relay_log"" is renamed to ""statement/abstract/relay_log"" 2) Statistics for abstract statements are no longer displayed in the following tables: - events_statements_summary_by_thread_by_event_name - events_statements_summary_by_account_by_event_name - events_statements_summary_by_user_by_event_name - events_statements_summary_by_host_by_event_name - events_statements_summary_global_by_event_name "	007b3ccfba9197b39116ef6378fd18914eaf5bf1
----------------------------
Fix differing .result file due to deprecation warning for option prefix - i.e when you have the option --core-file it was traditinally possible to give that option as --core as long as there was no other option startig with --core. This possibility has now been scheduled for removal and thus it's better to use the full option. - replace --core=0 with --core-file=0 	1279e928d3312670b0c137b2a05f509edddf2440
----------------------------
"BUG#16807964 - NEED A NEW ERROR CODE: HA_OUT_OF_MEMORY FOR ENGINES DESCRIPTION: There are no existing handler and MySQL error codes to report out of data memory errors for storage engines. Currently, Ndb storage engine maps 'out of data memory' error to HA_ERR_RECORD_FILE_FULL, which is conveyed to user as ER_RECORD_FILE_FULL : ""The table 'tablename' is full"". FIX: Added a new handler error HA_ERR_SE_OUT_OF_MEMORY. It should be used in future by storage engines to return errors when storage engine runs out data memory. Added a new MySQL error ER_ENGINE_OUT_OF_MEMORY : ""Out of memory in storage engine 'storage_engine_name'."". Handler error HA_ERR_SE_OUT_OF_MEMORY is mapped to error ER_ENGINE_OUT_OF_MEMORY in handler::print_error() function. "	493d794d53959547435bf7fd71729aa60376c2bb
----------------------------
"Merge: 4c935a0 0901e81 Merged fix for bug #17356954 ""CANNOT USE SAVEPOINTS AFTER ER_LOCK_DEADLOCK OR ER_LOCK_WAIT_TIMEOUT"" into mysql-5.6 tree. "	5080016fd0ae86b449fb565eefcf5236356867b0
----------------------------
"Fix for bug #17356954 ""CANNOT USE SAVEPOINTS AFTER ER_LOCK_DEADLOCK OR ER_LOCK_WAIT_TIMEOUT"". The problem was that after changes caused by fix bug 14188793 ""DEADLOCK CAUSED BY ALTER TABLE DOEN'T CLEAR STATUS OF ROLLBACKED TRANSACTION""/ bug 17054007 ""TRANSACTION IS NOT FULLY ROLLED BACK IN CASE OF INNODB DEADLOCK implicit rollback of transaction which occurred on ER_LOCK_DEADLOCK (and ER_LOCK_WAIT_TIMEOUT if innodb_rollback_on_timeout option was set) didn't start new transaction in @@autocommit=1 mode. Such behavior although consistent with behavior of explicit ROLLBACK has broken expectations of users and backward compatibility assumptions. This patch fixes problem by reverting to starting new transaction in 5.5/5.6. The plan is to keep new behavior in trunk so the code change from this patch is to be null-merged there. "	0901e817f3227aa27db732d1d218a59b75019fed
----------------------------
"Merge: 1ce17b3 4c935a0 Bug#17309863 AUTO RECONNECT DOES NOT WORK WITH 5.6 LIBMYSQLCLIENT Problem: A client program fails to reconnect to a mysql-5.6 server after a connection is killed by a KILL CONNECTION_ID() command. Any query executed after that returns ""query failed, Lost connection to MySQL server during query"". This is a regression introduced by a patch for Bug#11762221 (54790: USE OF NON-BLOCKING MODE FOR SOCKETS LIMITS PERFORMANCE) Solution: The patch is restoring the behavior of the previous versions. In net_serv.cc::net_clear(), setting net->error=2 flag if connection was terminated, allows the client to reconnect. We check if the peer is still connected (EOF not reached). Otherwise we set the error flag so that the connection might be re-established before we try to send a query to the server. "	0b5b725a145494f99445793709a61adbe839ac90
----------------------------
"Bug#17309863 AUTO RECONNECT DOES NOT WORK WITH 5.6 LIBMYSQLCLIENT Problem: A client program fails to reconnect to a mysql-5.6 server after a connection is killed by a KILL CONNECTION_ID() command. Any query executed after that returns ""query failed, Lost connection to MySQL server during query"". This is a regression introduced by a patch for Bug#11762221 (54790: USE OF NON-BLOCKING MODE FOR SOCKETS LIMITS PERFORMANCE) Solution: The patch is restoring the behavior of the previous versions. In net_serv.cc::net_clear(), setting net->error=2 flag if connection was terminated, allows the client to reconnect. We check if the peer is still connected (EOF not reached). Otherwise we set the error flag so that the connection might be re-established before we try to send a query to the server. "	4c935a0a2354470569d694d6f8eeb4cb70080d0d
----------------------------
Bug#17315083 - SUPPORT INTEGER KEY/VALUE FOR MEMCACHED TABLE Bug#17203937 THE MEMCACHED PLUGIN CAN BE INITIALIZED WITH AN INTEGER PK. Approved by Jimmy on rb://3082. This patch is for fixing 2 bugs, bug#17203937 and bug#17315083. In the bug17203937, the reason that the memcached plugin still can be initialized is, there's a correct config row in containers. This config row is inserted by the innodb_memcache_config.sql script. We should allow the plugin can be installed, even if there're some of rows in containers are not correct. For the not correct rows in containers, we need print some information about what's wrong with it. For bug17315083, we add support for integer columns. Not only the key column can be int, the value column can be int also. The code of this part is based on Jimmy's patch on rb://3083. 	0ea540903894c019028e0c50a0a7dabb87f5c194
----------------------------
Merge: 21c5101 c2ce78e BUG#16533802: START SLAVE FAILS WITH TABLE REPOSITORY AND AUTOCOMMIT = 0 Merge from mysql-5.6 into mysql-trunk. 	b8007505c971b6217adfa71b213590e8dbe04992
----------------------------
BUG#16533802: START SLAVE FAILS WITH TABLE REPOSITORY AND AUTOCOMMIT = 0 Fix for BUG 16533802 included changes on clean_info() method from info tables management, after BUG 17286858 (CHANGE_MASTER() INVOKES HA_INNOBASE::TRUNCATE() IN A DML TRANSACTION) fix those changes are not needed anymore, so this patch removes the unneeded changes. 	c2ce78eae5c27f27b1bb801f48f35640f8da1ab4
----------------------------
Merge: 21781d0 1790fc4 Bug#16807641 MEMORY LEAK OF JOIN_BUFFER_SIZE IN JOIN_CACHE::ALLOC_BUFFER Null merge 5.6 => trunk. 	1c86582df3c38170ab0124ed0cbd88aef323d26e
----------------------------
Bug#16807641 MEMORY LEAK OF JOIN_BUFFER_SIZE IN JOIN_CACHE::ALLOC_BUFFER This is a regression caused by the fix for bug #15875919. Problem: When removing subquery clauses that are not needed, some statements may cause memory leaks. When remove_redundant_subquery_clauses() removes subqueries, the corresponding st_select_lex_unit and st_select_lex objects are unlinked from the query. When processing is over, free_underlaid_joins() loops through the st_select_lex_unit and st_select_lex objects of the tree and calls cleanup(). The removed objects are not cleaned up, which means that the corresponding JOIN objects aren't cleaned up either. Fix: Split st_select_lex_unit::cleanup() and st_select_lex::cleanup() into two functions each: cleanup_level() for cleaning up only that level, and cleanup() for recursive cleanup. Call these when removing query blocks in st_select_lex_unit::exclude_tree() and exclude_level(). 	1790fc49426477f77818cec4ac40b4e52dfc4e7a
----------------------------
Bug#16995954 : PLUGIN_AUTH TESTS FAIL ON SYSTEMS WITH NO HOSTNAME OTHER THAN LOCALHOST This is a test bug and the explanation for the behaviour can be found on the bug page.Modifying the select to select user where user!=root for the line where failure is encountered on machines with no hostname other than the localhost. 	0f895a15db0a701592fe3b6d1e3da1f7905860dc
----------------------------
Bug#16995954 : PLUGIN_AUTH TESTS FAIL ON SYSTEMS WITH NO HOSTNAME OTHER THAN LOCALHOST This is a test bug and the explanation for the behaviour can be found on the bug page.Modifying the select to select user where user!=root for the line where failure is encountered on machines with no hostname other than the localhost. 	6a076c831513e30de322d469f733d01f1a45fdfa
----------------------------
BUG#16884077 - ASSERT FAILURE IN SERVER WHEN LARGE NUMBER OF CLIENT EXECUTES QUERY Problem: The size of the wait slot array for MySQL threads which can wait inside InnoDB, i.e, srv_max_n_threads variable is hardcoded, and depended on innodb_buffer_pool size.So when large no. of client connects and execute the query lead to server crash as  running out of sync array slots. Solution: 1) srv_max_n_threads is independent on innodb_buffer_pool_size. 2) Configure the size of wait slot array, i.e, srv_max_n_threads with the summation of maximum connections & innodb background threads. Approved by Jimmy. (rb#2956) 	f26286f85901c341a0af95c0bae95760e84638a1
----------------------------
Bug#12560151 61132: infinite loop in buf_page_get_gen() when handling compressed pages After loading a compressed-only page in buf_page_get_gen() we allocate a new block for decompression. The problem is that the compressed page is neither buffer-fixed nor I/O-fixed by the time we call buf_LRU_get_free_block(), so it may end up being evicted and returned back as a new block. buf_page_get_gen(): Temporarily buffer-fix the compressed-only block while allocating memory for an uncompressed page frame. This should prevent this form of the infinite loop, which is more likely with a small innodb_buffer_pool_size. rb#2511 approved by Jimmy Yang, Sunny Bains 	560a560e18949bd6fdce4785ced546e38c84b6c7
----------------------------
Bug#16862316 QUERY RETURNS DIFFERENT RESULTS DEPENDING ON WHETHER INDEX_MERGE SETTING Problem: When set optimizer_switch='index-merge=on', the optimizer was requesting ha_partition::clone() to clone the partition. During cloning we were not initiliazing the m_pkey_is_clustered variable which is required by the ordered index scan to return correct results. Fix: when cloning the partition handler set the m_pkey_is_clustered from the original partition handler. rb#3077 approved by Mattias Jonsson Patch by Aditya A. 	7c2511b20cf332b8e6d8be2bba057ed2906f8e95
----------------------------
Tests for new variables got lost in collapse. log_timestamps, log_error_verbosity WL6661 	aa4170e341260d3cf868359a006efb298572a488
----------------------------
"WL#6661: Error logging: Allow control of verbosity In mysqld, all local messages (""things found on console / in error log"") now go through a central function rather than through a lot of fprint()s. This means we can properly timestamp those lines with ISO 8601 compliant timestamps (likewise for slow and general log files); it also means that we can gag those messages with the new system variable / startup option --log_error_verbosity, which depraces --log_warnings / -W. As timestamps go, the DBA can choose between system time or zulu time with the new option --log_timestamps. Client programs now print their warnings prefixed by their name (no path, no "".exe"") and the severity level in brackets, so ""Warning: foo"" from bin/mysql.exe becomes ""mysql: [Warning] foo"" This is useful especially in mysql_upgrade (which in turn calls other binaries) so we can see whether a warning was thrown by mysql_upgrade or one of its children (and in the latter case, which). On the tech side, we now have a generic hook for local messages. This prints to stderr by default (and in the case of client apps likely always will), but can be overridden to log elsewhere, mangle the string, etc. (as is done by the server once the facilities are initiliazed; then this goes to error_log_print, for better timestamps, filtering by verbosity level, and for printing to NT syslog on Win). We deprecate my_printf_warning() which does something similar, with a less clear name. New test cases added, comments clarified, old test cases updated. "	fd1ff117b00c44fc72ae561fbd0e47ce3ad9a9a1
----------------------------
Bug#16418661 - CHANGING NAME IN FOR INNODB_DATA_FILE_PATH SHOULD NOT SUCCEED WITH LOG FILES Bug#16691130 - ASSERT WHEN INNODB_LOG_GROUP_HOME_DIR DOES NOT EXIST. When InnoDB creates system tablespace, it should not continue when there are inconsistent system tablespaces (ibdata*) or undo tablespaces (undo*) or with redo log files(ib_logfile*) Also fixed Bug#16691130, when the log group directory doesn't exist, it now aborts with error message instead of assert. Approved by Marko, Kevin. rb#2293, rb#2963 	72215d3c79b094033abf5fc388f70e590b121e8d
----------------------------
Bug#16661195: REMOVE UNNEEDED CMAKE CHECKS Additional patch #4. Remove HAVE_GMTIME_R, HAVE_LOCALTIME_R, HAVE_PTHREAD_KEY_DELETE, HAVE_PTHREAD_ATTR_SETSTACKSIZE, HAVE_PTHREAD_ATTR_GETSTACKSIZE. All are part of POSIX and available on all non-Windows supported platforms. For Windows we have replacement implementations. Also remove HAVE_THR_SETCONCURRENCY and the already deprecated thread_concurrency server system variable. Finally, remove unused non-Windows replacement implementation for localtime_r as well as various thread_safe_add/_sub macros. 	aacfc9bcbbdaeec65c94f0fb4022bdfdf0a96b2b
----------------------------
WL6314: Prepared transactions parallel slave applier follow-up patch Disabled rpl_mts_logical_clock_recovery for crash safe slave/master since we need relay_log_recovery=ON for complete crash safety, but it is not supported by START SLAVE UNTIL SQL_AFTER_MTS_GAPS. MTS supports its own recovery algorithm and this test is not required to run with crash slave master/slave 	fe500dc72d5731fd86298f9b8c5328ba8064ef1e
----------------------------
Bug #17001980 RQG_PERFORMANCE_SCHEMA STOPPED WITH A CRASH IN HA_INNOBASE::CLONE. Problem: In the function ha_innobase::clone(), it was asserted that a thread cannot clone a table handler that is used by another thread. It was also asserted that the original table handler and the cloned table handler must belong to the same transaction. Both are wrong. Solution: It is OK for a thread to clone a table handler that is used by another thread. The original table handler and the cloned table handler can belong to different transactions.  So both asserts are removed. rb#3066 approved by Marko 	46e366441792d3eb1ab80a1222e45c2d889827cc
----------------------------
Bug #17001980 RQG_PERFORMANCE_SCHEMA STOPPED WITH A CRASH IN HA_INNOBASE::CLONE. Problem: In the function ha_innobase::clone(), it was asserted that a thread cannot clone a table handler that is used by another thread. It was also asserted that the original table handler and the cloned table handler must belong to the same transaction. Both are wrong. Solution: It is OK for a thread to clone a table handler that is used by another thread. The original table handler and the cloned table handler can belong to different transactions.  So both asserts are removed. rb#3066 approved by Marko 	96093865a38736259e4169b74a554c49d8612fcb
----------------------------
WL#6314: Additional runs for new MTS submode. daily runs  : --slave-parallel-type=database|logical_clock weekly runs : --slave-parallel-type=database|logical_clock --big-test 	682e6e7023d51db9ad1b3bc0a7dd63924c8e3f5b
----------------------------
Bug#12593774 NDB_MGMD TAKES TO LONG TO CONNECT TO THE DATA NODES - In setups where the ndbd was configured to use dynamic listening ports for accepting connections from api nodes, the dynamic port number was reported serially from ndbd to ndb_mgmd. This caused one roundtrip per configured api node and thus the time required for ndbd to connect to ndb_mgmd grew linearly with the number of configured api nodes. The ndbd will now report all dynamic ports at once using a new command in ndb_mgmd(if ndb_mgmd supports the new command). 	6a13a83e2e742f4e46ab83aca9829a06d859dc7d
----------------------------
"Merge: 589bece 624f679 Bug #16776528 RACE CONDITION CAN CAUSE MYSQLD TO REMOVE SOCKET FILE ERRANTLY Problem Description: A mysqld_safe instance is started. An InnoDB crash recovery begins which takes few seconds to complete. During this crash recovery process happening, another mysqld_safe instance is started with the same server startup parameters. Since the mysqld's pid file is absent during the crash recovery process the second instance assumes there is no other process and tries to acquire a lock on the ibdata files in the datadir.  But this step fails and the 2nd instance keeps retrying 100 times each with a delay of 1 second. Now after the 100 attempts, the server goes down, but while going down it hits the mysqld_safe script's cleanup section and without any check it blindly deletes the socket and pid files. Since no lock is placed on the socket file, it gets deleted. Solution: We create a mysqld_safe.pid file in the datadir, which protects the presence server instance resources by storing the mysqld_safe's process id in it. We place a check if the mysqld_safe.pid file is existing in the datadir. If yes then we check if the pid it contains is an active pid or not. If yes again, then the scripts logs an error saying ""A mysqld_safe instance is already running"". Otherwise it will log the present mysqld_safe's pid into the mysqld_safe.pid file. "	98067ad3e28048a90017ebe868681bf8217663fc
----------------------------
"Merge: de03831 90b9a7e Bug #16776528 RACE CONDITION CAN CAUSE MYSQLD TO REMOVE SOCKET FILE ERRANTLY Problem Description: A mysqld_safe instance is started. An InnoDB crash recovery begins which takes few seconds to complete. During this crash recovery process happening, another mysqld_safe instance is started with the same server startup parameters. Since the mysqld's pid file is absent during the crash recovery process the second instance assumes there is no other process and tries to acquire a lock on the ibdata files in the datadir.  But this step fails and the 2nd instance keeps retrying 100 times each with a delay of 1 second. Now after the 100 attempts, the server goes down, but while going down it hits the mysqld_safe script's cleanup section and without any check it blindly deletes the socket and pid files. Since no lock is placed on the socket file, it gets deleted. Solution: We create a mysqld_safe.pid file in the datadir, which protects the presence server instance resources by storing the mysqld_safe's process id in it. We place a check if the mysqld_safe.pid file is existing in the datadir. If yes then we check if the pid it contains is an active pid or not. If yes again, then the scripts logs an error saying ""A mysqld_safe instance is already running"". Otherwise it will log the present mysqld_safe's pid into the mysqld_safe.pid file. "	624f679f9cf0409877383bd354fd65edaae7ae63
----------------------------
"Merge: 3b1375f 1383d0a Bug #16776528 RACE CONDITION CAN CAUSE MYSQLD TO REMOVE SOCKET FILE ERRANTLY Problem Description: A mysqld_safe instance is started. An InnoDB crash recovery begins which takes few seconds to complete. During this crash recovery process happening, another mysqld_safe instance is started with the same server startup parameters. Since the mysqld's pid file is absent during the crash recovery process the second instance assumes there is no other process and tries to acquire a lock on the ibdata files in the datadir.  But this step fails and the 2nd instance keeps retrying 100 times each with a delay of 1 second. Now after the 100 attempts, the server goes down, but while going down it hits the mysqld_safe script's cleanup section and without any check it blindly deletes the socket and pid files. Since no lock is placed on the socket file, it gets deleted. Solution: We create a mysqld_safe.pid file in the datadir, which protects the presence server instance resources by storing the mysqld_safe's process id in it. We place a check if the mysqld_safe.pid file is existing in the datadir. If yes then we check if the pid it contains is an active pid or not. If yes again, then the scripts logs an error saying ""A mysqld_safe instance is already running"". Otherwise it will log the present mysqld_safe's pid into the mysqld_safe.pid file. "	90b9a7ed005dace38e1d07f8cb810b673f2b5d8c
----------------------------
"Bug #16776528 RACE CONDITION CAN CAUSE MYSQLD TO REMOVE SOCKET FILE ERRANTLY Problem Description: A mysqld_safe instance is started. An InnoDB crash recovery begins which takes few seconds to complete. During this crash recovery process happening, another mysqld_safe instance is started with the same server startup parameters. Since the mysqld's pid file is absent during the crash recovery process the second instance assumes there is no other process and tries to acquire a lock on the ibdata files in the datadir.  But this step fails and the 2nd instance keeps retrying 100 times each with a delay of 1 second. Now after the 100 attempts, the server goes down, but while going down it hits the mysqld_safe script's cleanup section and without any check it blindly deletes the socket and pid files. Since no lock is placed on the socket file, it gets deleted. Solution: We create a mysqld_safe.pid file in the datadir, which protects the presence server instance resources by storing the mysqld_safe's process id in it. We place a check if the mysqld_safe.pid file is existing in the datadir. If yes then we check if the pid it contains is an active pid or not. If yes again, then the scripts logs an error saying ""A mysqld_safe instance is already running"". Otherwise it will log the present mysqld_safe's pid into the mysqld_safe.pid file. "	1383d0a9e642b88d52ed261917a9450dfc7a65b0
----------------------------
Post push fix for WL#6606 When mysqld is started with --skip-networking option, it should listen on unix socket to accept connections. In the current code, no initialization of unix sockets happens if opt_disable_networking flag is enabled. This patch fixes this problem. 	9f31c34f16a7e5335bc2e38929b43b76303f3bbb
----------------------------
"adjustment for WL#6326 : InnoDB: fix index->lock contention solaris11-sparc-64bit could not resolve DEBUG_SYNC_C() at storage/innobase/sync/sync0rw.cc. added ""#include <my_sys.h>"" to the file "	c3bc62af409bf142229373806892ee87d83fab01
----------------------------
Bug#17165034 - EXTENDING SYSTEM OR TEMPORARY TABLESPACE DOES NOT WORK Extending/Adding system or temporary tablespaces is broken on trunk. Example for extending system tablespaces: 1. Database is created with innodb_data_file_path=ibdata1:10M 2. change the innodb_data_file_path to ibdata:10M;ibdata2:10M;ibdata3:10M:autoextend 3. start the server 4. New data files ibdata2,ibdata3 should be created. This works fine on 5.6 but broken on trunk. Also InnoDB refuses to start if there multi-file tablespaces(>2) Issues fixed in the patch: -------------------------- 1. Extending tablespaces 2. creation of multi-file tablespaces(>2) 3. Removed an assert to allow graceful exit by printing error message when an ibdata file is missing Approved by Kevin. rb#2915 	a6959b104288b61185420cba9b75c8a51ccc41de
----------------------------
"WL#6606 - Offload THD and network initialization to worker thread. Initialization of THD and vio/net initialization happens in the acceptor thread that accepts the connection. THD and network initialization involves acquiring locks, memory allocation of various structures and system calls which are compute-bound as well as tasks that may block. The acceptor thread is an event loop that waits for new connection events from clients. To maximize the number of connections that can be handled per unit of time, the acceptor thread should spend as much of its time listening for new connections. This means thd and vio/net initialization should be offloaded from the accept event loop and delegated to worker threads that handle the client connections. This worklog provides a generic framework which offloads THD initialization and net/vio initialization to worker threads for all types of communication channels (shared memory, named pipes and sockets) that clients connect with server. In addition, this worklog refactored the existing interfaces of the struct scheduler_functions into an object oriented API, refactored and moved code related to connection handling and its management into a separate directory and files that contain implementations of specific related functionality. This resulted in removal of unnecessary #defines, modularity, better code clarity and readability in addition to performance improvements made in the worklog. As result of changes in this worklog, the follow bugs have been fixed: Bug#12951536 - THD INITIALIZATION TOO EXPENSIVE FOR ACCEPT() THREAD. Bug#12951595 - TOO MUCH NETWORK INITIALIZATION DONE IN ACCEPT() THREAD. Bug#12951605 - ACCEPT() SOCKET GETS TOO MUCH OF FCNTL()S. User Visible Changes: The system variables ""bind_address"", ""thread_handling"", """"thread_cache_size"" and status variables ""threads_cached"", ""Slow_launch_threads"" are no longer visible in embedded server mode (where they have no effect). "	b3b6e23f2fa4df51e1d9225a22afaf825403e4ce
----------------------------
Merge: c22929a a6d6767 WL#3656:PERFORMANCE SCHEMA table for SHOW SLAVE STATUS Implemented following Performance Schema tables for replication monitoring: 1) replication_connection_configuration 2) replication_connection_status 3) replication_execute_configuration 4) replication_execute_status 5) replication_execute_status_by_coordinator 6) replication_execute_status_by_worker 	081265129babd2a833c6cf7f9110038fbaee7324
----------------------------
"Bug#16587369: HANDLER FOR SQLEXCEPTION NOT CATCHING ERROR 1452 (FK CONSTRAINT) FOR UPDATE Overview -------- This is a bug regarding the handling of fatal errors. A fatal error is an error that should not be caught by a condition handler in a stored procedure. The issues described in the bug report are that: 1. The same error is handled differently for different statements. 2. Seemingly trivial errors are treated as fatal. It should be noted that in the context of this bug report (and bug fix), only handler errors are relevant to consider. There are two important issues regarding handler errors in the source code: 1. Deciding whether a handler error is to be considered fatal. 2. Ensuring that the handler error is indeed treated as fatal. For the first issue, ""is_fatal_error()"" is provided by the handler api, and returns true for handler errors that are fatal. The second issue can be handled in various ways; the most common is to call ""print_error()"" with a flag indicating that the handler error is to be considered fatal. Inspecting how the source code handles these two issues, in light of the problems reported, reveals three shortcomings in the implementation: 1. Handler errors are in fact fatal by default, as defined by the ""is_fatal_error()"" function. 2. When an error is returned from the handler api, the caller does not always check if the error is fatal. 3. The presence of a fatal error is not always flagged when calling ""print_error()"". Suggested fix ------------- The scope and ambition for the fix is to treat handler errors consistently for DML statements (update, insert, delete) by making sure ""is_fatal_error()"" is called before calling ""print_error()"", and to provide the ""ME_FATALERROR"" flag as appopriate. This alone does not fix the bug that is reported, since handler errors are fatal by default, hence, we also need to extend the function ""is_fatal_error()"" to recognize more handler errors as being non-fatal. An attempt was made to consider handler errors non-fatal by default, but this made a large number of tests fail in not very obvious ways, so this solution was not pursued further. Instead, a switch for catching non-fatal errors was added to ""is_fatal_error()"", currently catching: - HA_ERR_NO_REFERENCED_ROW: The error originally addressed by the bug report considered here. - HA_ERR_ROW_IS_REFERENCED: Another FK constraint violation error, an obvious extension of the bug we are addressing. - HA_ERR_LOCK_WAIT_TIMEOUT: See below. Changing the implementation of ""is_fatal_error()"" has a potential impact on the non-DML source code, which also calls this function; however, no damage has been observed in the testing that has been done. On the other hand, tests failed for other reasons: 1. Some tests expected a fatal outcome in situations where the error is now non-fatal (e.g. for foreign key constraint violations). The fix for this was to modify the test. 2. Some tests expected a non-fatal outcome where the error is now fatal due to the changed implementation of DML statements where we ensure that errors are treated the way they ought to. The fix for this was to extend ""is_fatal_error()"" to consider the error in question as non fatal (the error here was lock wait timeout). Re-considering which handler errors should be considered fatal is still a relevant task, but is considered beyond the scope of this bug fix. Additionally, such a task might be the responsibility of the storage engine teams. "	c8e6040cea617f3454279ceb35de22cf70fffe7d
----------------------------
"BUG#15909788-TEMPORARY FILES CREATED BY BINARY LOG CACHE ARE NOT PURGED AFTER TRANSACTION COM Problem: When you modify a large amout of data inside a transaction, for example a big LOAD DATA INFILE, and the size overcomes the binary log cache it will create temporary files in the tmp partition. Those files don't disappear until you close the connection, thus potentially filling up all available disk space in MySQL configured temp directory. Analysis: The binlog uses an internal cache implementation (IOCACHE) to store operations which have not yet been commited, as such, not yet written in the Binlog file. As stated in the bug, that cache is created per connected client, since all commit operations are intercepted by the binlog if it is active. When binlog_cache_size overflows, a file is created in the configured temporary directory by IOCACHE and it can grow up until max_binlog_cache_size (4GB). It has a ""greedy"" optimized approach, meaning that the create temp file is reused after a commit, having its only file seek cursor back to 0 (mf_iocache.c::reinit_io_cache(...)), but will take the size of the largest transaction ever made by that client. When a client leaves, and as stated in the bug, IOCACHE is closed and the temporary file is deleted. Fix: The implementation was refactored in order to be intelligent and regain resources by reducing the file size to 0 without deleting it in the reset() method of the binlog_cache_data class, which is called after COMMIT or ROLLBACK operations. "	bac04819cd2c56a30d3f245bd9d88e85d7753391
----------------------------
ndb - remove my_decimal-t from configure 	98b4c580caf89a01afc67b1a33bca4eb5f95ab74
----------------------------
Merge: 6b6a885 6407568 Merge NdbWaitGroup v2 working => 7.2 Add doxygen config file for storage/ndb/test 	6b107dfd048bfa915b43d6f60067031dcb2e37db
----------------------------
Fixed spurious warnings about performance_schema tables, when not using the performance_schema. 	e2fdb46960501dc4fc04122bd5b7089a5e4f6585
----------------------------
"BUG#16290902 DROP TEMP TABLE IF EXISTS CAN CAUSE POINT IN TIME RECOVERY FAILURE ON SLAVES Problem: DROP TEMP TABLE IF EXISTS commands can cause point in time recovery (re-applying binlog) failures. Analyses: In RBR, 'DROP TEMPORARY TABLE' commands are always binlogged by adding 'IF EXISTS' clauses. Also, the slave SQL thread will not check replicate.* filter rules for ""DROP TEMPORARY TABLE IF EXISTS"" queries. If log-slave-updates is enabled on slave, these queries will be binlogged in the format of ""USE `db`; DROP TEMPORARY TABLE IF EXISTS `t1`;"" irrespective of filtering rules and irrespective of the `db` existence. When users try to recover slave from it's own binlog, use `db` command might fail if `db` is not present on slave. Fix: At the time of writing the 'DROP TEMPORARY TABLE IF EXISTS' query into the binlog, 'use `db`' will not be present and the table name in the query will be a fully qualified table name. Eg: 'USE `db`; DROP TEMPORARY TABLE IF EXISTS `t1`;' will be logged as 'DROP TEMPORARY TABLE IF EXISTS `db`.`t1`;'. "	f3a777d6d59308a4dfb5012d7f3667e98e5948f6
----------------------------
Merge: a86edf1 b2cfaed BUG#16533802: START SLAVE FAILS WITH TABLE REPOSITORY AND AUTOCOMMIT = 0 Merge from mysql-5.6 into mysql-trunk. 	1abd4478fef8c0977e56e05c10df36df55f1b8c3
----------------------------
BUG#16533802: START SLAVE FAILS WITH TABLE REPOSITORY AND AUTOCOMMIT = 0 When a slave server was started with AUTOCOMMIT=0 and master or relay info persisted on tables, the START SLAVE command failed due to lock timeouts accessing the info tables. The problem also happened when the connection from which START SLAVE was executed had autocommit mode equal to 0. The problem happened because the Rpl_info_table::do_check_info() methods, used on slave internal structures initialization, didn't finish the transaction started to access info tables. Since tables were still locked by the access from do_check_info(), the following initialization procedures failed to acquire the update access lock to those tables, which in turn caused the START SLAVE command to fail. To fix this incorrect behaviour, we set autocommit= 1 on replication threads to release info table locks, allowing the subsequent access to tables. When info tables are used and autocommit= 0 we also force a new transaction to start and commit on global_init_info() to avoid table access deadlocks when START SLAVE is executed after RESET SLAVE. We also need to force a commit on Rpl_info_table::do_clean_info() to avoid errors on RESET SLAVE (on Rpl_info_factory::reset_workers(Relay_log_info *)) when MTS is enabled. 	b2cfaed1e68c87eb32fe5eb178dbee7a988bc1c6
----------------------------
"WL#5766 : PERFORMANCE SCHEMA, stored programs instrumentation Bug#17193809 : EVENTS INSTRUMENTATION IS NOT DONE AS EXPECTED. Bug#17182042 : EXPECTED RESULT NOT SEEN WITH SHOW STATUS OF ""PERFORMANCE_SCHEMA_PROGRAM_LOST"" Fixed the tests cases. "	1a63043bc3d9a32186047bfed242a2decb59c1e1
----------------------------
wl#6244 locase.diff lower case FK names if lower_case_table_names fixes bug#14826778 bug#15841628 bug#16988205 	cbc58fd3b12a092a05caf89bb0a5c49ed61c58b5
----------------------------
BUG#16662771: MULTIPLE RPL TESTS FAILING ON WINDOWS DUE TO CRASH AT PROTOCOL::STORE() The problem manifests itself when a user thread is issuing a SHOW SLAVE STATUS while at the same time the slave IO thread is being terminated because of some error (in the case analyzed, the error was because the IO thread had received a packet bigger than slave_max_allowed_packet). Looking at handle_slave_io, specifically at the part that handles errors, one can find that the THD structure is deleted before mi->info_thd is set to NULL. That is not an issue in itself, but the fact that the deletion happens while it is not guarded by mi->info_thd_lock makes it a problem. As a consequence, a race for the THD memory area, between the user thread and the IO thread that is shutting down and cleaning its data structures, can happen. To be precise, if the user thread accesses THD memory through mi->info_thd and before that the IO thread frees the memory but has not yet set the info_thd to NULL, then the server can crash. To fix this problem the deletion of the data structure while the IO thread is shutting down is moved to a later stage of this process, i.e., after setting mi->info_thd to NULL. 	6d21db0b1c85048ca6c291488e0bd61b2cab6bdb
----------------------------
Bug#17156507 SUCCESSFUL CONNECTION ATTEMPT DOESN'T RESET THE SUM_CONNECT_ERRORS COUNTER Before this fix, a successful connection failed to reset the per IP address counter used to count successive connection failures, that can possibly cause a host to be blocked, when reaching max_connect_errors. This counter is reset by function reset_host_connect_errors(). This function is called only when connect_errors is non zero, as a performance optimization, to avoid locking the host cache for nothing. The problem was that the connect_error counter was not returned by ip_to_hostname(), so that reset_host_connect_errors() was never called for successful connections. A related minor bug was fixed also: the comparison with max_connect_error was off by one, the comparison should use greater or equal instead of strictly greater. 	1f02c5ad496105d91c8bbbf18351042d36d786e3
----------------------------
Merge: bb3836b a13db2c BUG#12535301- SYS_VARS.RPL_INIT_SLAVE_FUNC MISMATCHES IN DAILY-5.5 upmerge mysql-5.6->mysql-trunk 	75cbf6874758e00dbf526114dbc35a7c1e80b779
----------------------------
Merge: 0ac9ddd 030b9fc BUG#12535301- SYS_VARS.RPL_INIT_SLAVE_FUNC MISMATCHES IN DAILY-5.5 upmerge 5.5->5.6 	a13db2c3250cb224c749bbaf689f9fc5954e6a2e
----------------------------
Merge: 10b1b21 774556e BUG#12535301- SYS_VARS.RPL_INIT_SLAVE_FUNC MISMATCHES IN DAILY-5.5 Problem: sys_vars.rpl_init_slave_func test was failing sporadically on 5.5+. Fix: Added assert condition after wait for checks. Recorded test and enabled it. 	030b9fc6ac8285494889a438cfd6db13b4f50d75
----------------------------
BUG#16295518 - SYS_VARS.RPL_INIT_SLAVE_FUNC IS FAILING ON MYSQL-5.1 BUG#12535301- SYS_VARS.RPL_INIT_SLAVE_FUNC MISMATCHES IN DAILY-5.5 Problem: sys_vars.rpl_init_slave_func test was not recorded after the last edit. It was disabled on 5.1 after seeing failures due to the above reason. No old failures as this suite never ran with pb2 on 5.1 Fix: Added assert condition after wait for checks. Recorded test and enabled it. 	774556ef3c312a908539a87254090ebdc8aa9d49
----------------------------
WL#6314: Intra-schema multithreaded slaves BUG#17194823: VARIABLE SLAVE_PARALLEL_TYPE CAN BE CHANGED FOR RUNNING SLAVE Fix: Moved the check for is slave running to ON_CHECK and behind the active_mi->rli->run_lock. 	d58cd6272e7b7542d469ea1e65e6d8ecfee74e10
----------------------------
"BUG#17160671: SLAVE_PARALLEL_WORKERS INCOMPATIBLE WITH RELAY_LOG_INFO_FILE When setting relay-log-info-file and slave-parallel-workers > 0, then the slave will use the value set through relay-log-info-file to create each worker thread relay-log.info file. However, currently the slave is concatenating the string ""worker-"" with the contents of relay-log-info-file, regardless whether it is a full path or not. This patch fixes the problem by extracting the directory part of the value set for relay-log-info-file and uses it as a prefix for the string ""worker-"". Then the part of the value that is not a directory is used as a prefix for naming the worker relay-log.info file: dirpart(relay-log-info-file)+""worker-""+namepart(relay-log-info-file) If dirpart(relay-log-info-file) is empty, then the worker info files will be created in the the datadir. "	dfd78fd4e156a0d74e7e58b195b1ac5364e4a579
----------------------------
"BUG#16662990 - I_INNODB.INNODB_BUG16097753 FAILING SPORADICALLY ON WINDOWS Analysis: The root cause is ""end_utime_of_query"" and ""utime_after_lock"" could be equal in microsecond when long_query_time is zero. Solution: Sleep 1 millisecond when waking up from lock wait using DBUG_EXECUTE_IF. rb://2926 approved by Jimmy Yang. "	f8d169cef64f35a425f70284c6a07395e0bc8786
----------------------------
Bug#17084615 CRASH, MANY TRUNCATE PFS TABLE VERSUS MANY CONNECT,DISCONNECT Before this fix, executing TRUNCATE TABLE performance_schema.accounts; could crash the server under load. The root cause is a race condition between: - the TRUNCATE statement - a thread disconnecting. The reason for the race is as follows: TRUNCATE on a performance schema table resets the statistics, and aggregates statistics for lower aggregation levels. For example, a truncate on accounts aggregates all threads stats. At the same time, a thread disconnecting also aggregate the thread statistics to the next parent, before destroying the thread instrumentation. Concurrent execution of both code path can causes crashes, because pointers to the parent of an object can be reset to null, while used concurrently. For example in the crash found, PFS_thread::m_account, the pointer to the parent account, is set to null when disconnecting a thread, which causes the code in truncate to crash while attempting to aggregate the thread stats to the parent account. For example, in function aggregate_thread_waits(), using the thread->m_account pointer is: - safe when the code has ownership of the object, as when a thread disconnects - unsafe when aggregating statistics of another thread, as when executing a TRUNCATE. The solution is to never access thread->m_account directly, but require the caller to sanitize the pointer when necessary. With this fix, aggregate_thread_waits() now takes the parent account as input parameter, explicitely. When executing a thread disconnect, the code owns the object, and the call is simply: aggregate_thread_waits(pfs, pfs->m_account, ...); When executing a TRUNCATE, the code does not own the object, and the call is: PFS_account *safe_account= sanitize_account(pfs->m_account); aggregate_thread_waits(pfs, safe_account, ...); Because the pointer is sanitized, is it guaranteed to: - either be NULL, or be valid. - not change spuriously during the code execution The fix changes every aggregation where a parent can change spuriously, the code change follows the same mechanics. 	5c2e3bad204fd72a3bab4245015305dba3a23baf
----------------------------
Bug#17164720 ASSERT IN READ_TOKEN , STORAGE/PERFSCHEMA/PFS_DIGEST.H Before this fix, SELECT * from performance_schema.events_statements_current could cause an assertion failure when computing the DIGEST / DIGEST TEXT columns. The root cause is a race condition, that happen under load. The thread computing the digest reads data from a buffer, which is also conccurently updated when the target session is executing a statement. The fix sanitizes data when reading from the digest storage buffer, and when data that does not fit the expected format is found, a NULL digest and digest text is displayed. 	e0022ac7b173d6cc8e17865b17d396a65e7be6c8
----------------------------
BUG#15844882: MYSQLDUMP FROM 5.5 FAILS WITH AN ERROR WHEN TRYING TO DUMP DATA FROM MYSQL-5.6 Analysis -------- Dumping mysql-5.6 data using mysql-5.1/mysql-5.5 'myqldump' utility fails with a syntax error. Server system variable 'sql_quote_show_create' which quotes the identifiers is set in the mysqldump utility. The mysldump utility of mysql-5.1/mysql-5.5 uses deprecated syntax 'SET OPTION' to set the 'sql_quote_show_create' option. The support for the syntax is removed in mysql-5.6. Hence syntax error is reported while taking the dump. Fix: --- Changed the 'mysqldump' code to use the syntax 'SET SQL_QUOTE_SHOW_CREATE' to set the 'sql_quote_show_create' option. That syntax is supported on mysql-5.1, mysql-5.5 and mysql-5.6. NOTE: I have not added an mtr test case since it is difficult to simulate the condition. Also the syntax may not be further simplified in the future. 	b56e327e75f4d574eec5af9007d116a28b830d59
----------------------------
WL#6314: Increased the test coverage by adding temporary tables in rpl_mts_submode_switch disabled sys_vars.slave_parallel_type_basic on embedded servers. 	58cfa71587cd06a3a5a74c1148bbae10639d943a
----------------------------
Fixed i_rpl.rpl_stop_slave_timeout test failure caused after a merge with mysql-trunk. 	6f9787cbddb2aaf9e31f0fc06b9e55e43dfefd97
----------------------------
Bug#17164720 ASSERT IN READ_TOKEN , STORAGE/PERFSCHEMA/PFS_DIGEST.H Before this fix, SELECT * from performance_schema.events_statements_current could cause an assertion failure when computing the DIGEST / DIGEST TEXT columns. The root cause is a race condition, that happen under load. The thread computing the digest reads data from a buffer, which is also conccurently updated when the target session is executing a statement. The fix sanitizes data when reading from the digest storage buffer, and when data that does not fit the expected format is found, a NULL digest and digest text is displayed. 	5008e64da3a3c3f356369e75330b96e704a5e3ef
----------------------------
Restricted tests that require slave_parallel_type=database 	77975e8d5d84ad3945c3079402be8b6b36867e97
----------------------------
Merge: 0e3be15 e30f24b BUG#15880018 - MISLEADING MESSAGES AT STARTUP TIME DESCRIPTION: When the MySQL server starts, it checks for the file containing list of all the MySQL error messages. This file by default is 'errmsg.sys'. The location of the error-message file can be specified by the server option '--lc-messages-dir'. If MySQL server can not find the file at the location specified by the user, an error message is displayed and server does not start. The Error message is general and does not point user in the right direction. FIX : Changed the error message so that user can check '--lc-messages-dir' configuration directive too if MySQL server can not find the 'errmsg.sys' file. 	52094f8ae567e3a7ce41977986a84bebbdba3309
----------------------------
Bug#11748074 USE PTHREAD_ATTR_GETGUARDSIZE FOR BETTER ROBUSTNESS OF STACK THREAD SIZES Bug#35019 Use pthread_attr_getguardsize for better robustness of stack thread sizes Account for the extra stack guard by doing: pthread_attr_setstacksize(&thr_attr, my_thread_stack_size + guardize); Tested on: ppc64 GNU/Linux  guardize 65536 ia64 GNU/Linux   guardize 16384 x86_64 GNU/Linux guardize 4096 sun4u sparc      guardize 8192 	cf1226a48dea689048f571b6b626405e968409c8
----------------------------
WL#6314: -restricted rpl_*_mts_recovery tests for slave_parallel_type= logical clock -Added new test for MTS crash recovery for the new submode. 	30cd7c8f12284eb00ed03adbe09f016f01cf1a2c
----------------------------
BUG#17154390 - CRASHING WHEN EXECUTING SELECT ON NEW PFS TABLES WITHOUT REPLICATION Problem: ======== There is a test in perfschema suite which tests the same. But the issue was not caught because mtr starts the server with server-id=1. Now the code says: if(server-id!=0) init_slave(); Since server-id=1, init_slave is called and active_mi is declared and thus dereferencing an attribute of active_mi is fine. When server is started manually, server-id=0. Hence, init_slave() is not called, so active_mi is not declared. So, de-referencing an attribute of active_mi lead to a server crash. Fix: === Fixed the issue by checking for NULL before dereferencing. 	a71b613a37adae60c622349f00e1a2feeca87abd
----------------------------
Mcc FreeSSHD: Install services for all processes on windows, and use the service to keep the processes running after the ssh connection is closed. Send separate requests to start each process. Add log-error to save output from mysqlds. 	e5c3205718ff32b687b7347f7d92c99b55351caa
----------------------------
Disabled test rpl_auto_increment_bug33029.test since it is not compatible with slave_parallel_type=LOGICAL_CLOCK. This test uses an old relay log which causes the slave to stop as this depicts an old master. 	01e5779181ed9336a8ef834b9a055f0bd95349a1
----------------------------
Mcc FreeSSHD: Start mysqlds with --defaults-file pointing to a cnf containing all other options. This is a prerequisite to be able to start mysqlds as services on Windows later. Also switch to unix-style paths where possible to reduce the need for double backslashes. 	f487298367ca351027b227d7a3306f0323da23b9
----------------------------
Bug#17041705 DO NOT BUILD PERFORMANCE SCHEMA FOR EMBEDDED Before this fix, the performance schema storage engine was build for the embedded library. There is no performance instrumentation when building for embedded, this is dead code. The fix is to introduce a new option to the MYSQL_ADD_PLUGIN cmake macro, named NOT_FOR_EMBEDDED. When this flag is set, - the plugin is not built for the embedded server, - the plugin is conditionally included (#ifndef EMBEDDED_LIBRARY) in the sql/sql_builtin.cc generated file. - the plugin is not in the list of libraries used to build libmysqld Now, because some instrumentation can be expanded at compile time, in particular with PSI_XXX_CALL macros when building code, the option RECOMPILE_FOR_EMBEDDED is also added to plugins that can contain references to the server itself (define MYSQL_SERVER). This affects the blackhole and the federated engine. Last, when executing tests with MTR, when using the --embedded server option, FRM files for performance schema tables could still be present on disk, which affects queries on the information_schema, causing spurious ER_UNKNOWN_STORAGE_ENGINE warnings. The root cause was that the installation process, when using mysqld --bootstrap to install a new database, was always creating performance schema tables (and FRM files), because the performance schema plugin was always loaded. mysqld --bootstrap has been relaxed a bit, to allow for not always loading the performance schema storage engine. The MTR script, when installing a database for an embedded test, now installs a database without performance_schema tables. 	6bd5dbaff56e355ff153aee4cbc859e156fbc05b
----------------------------
"bug#16931177 BGC and slave binlog rotate causes slave sql_thread to stop bug#16594095 NOT VERBOSE ENOUGH ERROR REPORTING BY MTS WORKER A slave applier thread stops with an error when it is about to rotate binlog but finds it's already done by a thread before it in the committing group. Notice that it's the slave applier that reacts to such situation even though the regular use session also senses it in MBL::commit(). But unlike the slave applier the ""master"" user session does not propagate any error to the top level (which is actually an issue being addressed by Bug16579083). It appears that the reason of this trouble is actual overreaction. About to rotate session should not raise any error when it's merely beaten to by some other. And that is fixed. ****** bug#16594095 NOT VERBOSE ENOUGH ERROR REPORTING BY MTS WORKER In case a Worker fails to apply an event the Slave applier (SQL thread + Workers) stops. An error that the Worker faced is displayed in Show-Slave-Status. However unlike the sequential execution there's no event coordinates that makes the failed event identification rather difficult. Fixed with adding a new prefix part to Last_SQL_Error message that carries the physical (master binlog) coordinates and GTID_NEXT when one is set. In case of simultaneous multiple Worker failures the error log must be consulted as well. ****** merge from 5.6 repo. "	fea8e5c0bf0f757da7d7a9c9635e625feacbe3f8
----------------------------
WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS Implemented following PS tables for replication monitoring: 1) replication_connection_configuration 2) replication_connection_status 3) replication_execute_configuration 4) replication_execute_status 5) replication_execute_status_by_coordinator 6) replication_execute_status_by_worker In this patch: fixed rpl_perfschema_* tests failing on pb2 WL branch 	d33e13cec4830f08ddab4a21c1b1fe30eb629866
----------------------------
"WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS Implemented following PS tables for replication monitoring: 1) replication_connection_configuration 2) replication_connection_status 3) replication_execute_configuration 4) replication_execute_status 5) replication_execute_status_by_coordinator 6) replication_execute_status_by_worker In this patch: Addressed comments from Marc - fixed windows build failure on pb2. - added #include ""my_global.h"" in all added .cc - worked on  more tests in perfschema suite - applied patch for Bug#17041705 "	242a9ff760753bf4f87f6aa76bf9991eeb92b2e9
----------------------------
WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS Implemented following PS tables for replication monitoring: 1) replication_connection_configuration 2) replication_connection_status 3) replication_execute_configuration 4) replication_execute_status 5) replication_execute_status_by_coordinator 6) replication_execute_status_by_worker In this patch: Fixed rpl_perfschema_execute_status_by_coordinator.test faling on PB2 WL branch 	0c9832632ffab4aebec20246c3b303768f5c64c3
----------------------------
WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS Implemented following PS tables for replication monitoring: 1) replication_connection_configuration 2) replication_connection_status 3) replication_execute_configuration 4) replication_execute_status 5) replication_execute_status_by_coordinator 6) replication_execute_status_by_worker In this patch: 1) Added helper functions in class Relay_log_info a) To get worker count b) Pointer to Slave worker object at index n in workers array 2) Added #ifndef EMBEDDED_LIBRARY macros 	70d40ad5f66ac58567627371b10b21a600d72159
----------------------------
Bug#16957721: VALIDATE_PASSWORD_LENGTH ALLOWED TO HAVE BELOW VALIDATE_PASSWORD PARAMETER VALUE Description: Value of validate_password_length variable is set in following manner: max(validate_password_length, (validate_password_number_count + validate_password_special_char_count + (2*validate_password_mixed_case_count))) While this is done each time value of any of the above mentioned variable is changed, same check should be performed at the time of plugin installation which was missing and hence it was possible to set validate_password_length to a value which does not satisfy above mentioned criteria. This patch fixes the issue by introducing a check at plugin installation time as well. 	68895d518429f496cde10b3e5f69c50da0960337
----------------------------
Bug#15831300 SLAVE_TYPE_CONVERSIONS=ALL_NON_LOSSY NOT WORKING AS EXPECTED Merging fix from mysql-5.6 	f32487cfbccdec9444b15469f01e1b36ce964b2b
----------------------------
wl6504: * deleted the old testcase & result file * added a testcase: innodb_buffer_pool_dump_pct_basic.test * removed empty spaces in the result file and testcase 	c0068e7c6e742c234ad9be5f95f0b94b973ec936
----------------------------
WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS Implemented following PS tables for replication monitoring: 1) replication_connection_configuration 2) replication_connection_status 3) replication_execute_configuration 4) replication_execute_status 5) replication_execute_status_by_coordinator 6) replication_execute_status_by_worker In this patch: fix to handle failure of test perfschema.information_schema on pb2 WL branch. The issue was: In case MTS(mi->rli->workers) was not set, the get_row_count() function returned a uninitialized value. 	4f1ade30b9b0919b1a71105ed0b4f107900ea2d5
----------------------------
Merge: 90ba80b f8e7640 BUG#16742886-GTID_NEXT_LIST SESSION VARIABLE IS NOT VISIBLE merge from mysql-5.6 -> mysql-trunk 	1ab0718fa625a7ba79e4b24342e5415337505ca4
----------------------------
Problem: An error message shows a variable that is not available to change. Analysis: Several error messages have an explicit reference to @@SESSION.GTID_NEXT_LIST. The issue is that SESSION.GTID_NEXT_LIST is not available to be changed and nor it should be, since it is a future feature to be integrated in NDB, thus not being available in the server mainline. The error messages are misleading to a user. Fix: Change the error messages in order to state the only possible source of error. Also corrected the binlog tests that were expecting that specific message. 	f8e7640688a394da021bef5001a04ed8fe182126
----------------------------
"Bug#11759578 ERROR MESSAGE REFERENCES INTERNAL VARIABLE NAME INNOBASE_BUFFER_POOL_SIZE Problem: For 32 bit machine, when the value of innodb_buffer_pool_size provided is too big ,then the error refers to the internal variable(innobase_buffer_pool_size), instead of the server startup variable(innodb_buffer_pool_size). Fixed: change error message from ""innobase_buffer_pool_size can't be over 4GB"" to ""innodb_buffer_pool_size can't be over 4GB"" Approved by: Marko(rb#1341) "	b1b596a94a72056e970230ce71a04c7323ab5728
----------------------------
WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS Implemented following PS tables for replication monitoring: 1) replication_connection_configuration 2) replication_connection_status 3) replication_execute_configuration 4) replication_execute_status 5) replication_execute_status_by_coordinator 6) replication_execute_status_by_worker 	8716787a40d6f6024c09f19080c34195404ecdd5
----------------------------
"Bug#16750433 - THE STATEMENT DIGEST DOES NOT SHOW THE SLAVE SQL THREAD STATEMENTS 1) New instrumentation to capture replicated statements The new instrument ""statement/rpl/relay_log"" controls instrumentation for statements executed from the relay log. 2) New test rpl_statements.test verifies new instrumentation 3) Renamed instrument ""statement/com/(stmt_info_new_packet)"" to ""statement/com/new_packet"". 4) Updated tests affected by the new instrumentation "	a27c86e2434b9cf878f1e44116c9b9afc11e2cda
----------------------------
Bug#16792349: YET MORE UNUSED #IFDEFS Additional patch #3: Remove HAVE_NAMED_PIPE and _CUSTOMCONFIG_ Also remove HAVE_SMEM by converting it into _WIN32 && !EMBEDDED_LIBRARY (rather than having serveral #define and #undef). 	47363320c99e3c3fb5f066499f631e3eaf791eb9
----------------------------
"Bug#16750433 - THE STATEMENT DIGEST DOES NOT SHOW THE SLAVE SQL THREAD STATEMENTS 1) New instrumentation to capture replicated statements The new instrument ""statement/rpl/relay_log"" controls instrumentation for statements executed from the relay log. 2) New test rpl_statements.test verifies new instrumentation 3) Renamed instrument ""statement/com/(stmt_info_new_packet)"" to ""statement/com/new_packet"". 4) Updated tests affected by the new instrumentation ****** Bug#16750433 - THE STATEMENT DIGEST DOES NOT SHOW THE SLAVE SQL THREAD STATEMENTS 1) New instrumentation to capture replicated statements. The new instrument ""statement/rpl/relay_log"" controls instrumentation for statements executed from the relay log. 2) New test rpl_statements.test verifies new instrumentation. 3) Renamed instrument ""statement/com/(stmt_info_new_packet)"" to ""statement/com/new_packet"". 4) Updated tests affected by the new instrumentation. "	24516fb88be3ea0d634b87b7a82cf5c58714194a
----------------------------
Fix Bug#16466664 MEMCACHED.MEMC280_MISC KILLS THE SERVER ON SOME PLATFORMS File descriptor leak in memcached cause this bug. When InnoDB Memcached plugin is initializing, it'll call libevent function event_init to initialize the event subsystem. In this function, it'll create file and sockets for handling event. These sockets and files should be freed by call event_base_free. We found 3 leak places: 1: Worker thread sockets that created in event_init are not freed. 2: Main thread sockets that created in event_init are not freed. 3: Sockets for dispatcher are not freed. rb#2755 Approved by Jimmy. 	a4a6fd3e09c3e4e0cd101aac04363223a373dd35
----------------------------
Memcache: configurable settings in 7.3 scheduler 	59f99f88ade4fb666ae7009cef1fd7c6a154ad19
----------------------------
bug#16802288 - FAILING ASSERTION: PREBUILT->SQL_STAT_START || TRX->STATE == TRX_STATE_ACTIVE Add error handling for DB_DEADLOCK and DB_LOCK_TABLE_FULL to handler::records() for COUNT(*).  Also rollback transaction when handler::records receive DB_DEADLOCK, DB_LOCK_TABLE_FULL or DB_LOCK_WAIT_TIMEOUT. Approved by Sunny at rb#2714 	205b3d64887bd6b1cc91f1d95263183add24ecc6
----------------------------
Bug#16999777 MYSQLD.EXE CRASHES WHEN SPECIFYING --LOCAL-SERVICE ON THE COMMAND LINE Do not dereference a null pointer. 	cfa2b56057c9230fd5a4265509456b5b8d8d4e2f
----------------------------
Bug#17010950 ROBUSTNESS OF PERFSCHEMA TEST SUITE No server code affected, this fix affects only test scripts. Before this fix, some tests scripts could fail when executed with --repeat=2 This fix improves the test robustness, to prevent spurious failures. Tests sizing_* Problem: spurious failures in the output of SHOW ENGINE PERFORMANCE_SCHEMA STATUS, with the sizes on internal LF_HASH tables. Solution: The size of internal tables is not predictable, enforce a clean server restart to have a known intitial state. Test dml_setup_instruments Problem: Some instruments were changed to TIMED=NO, affecting later tests. Solution: Restore the content of setup_instruments to the initial state. 	481a3f0eb4554adbfdf2a88098f00b6c32688b4c
----------------------------
Fix unit tests for data node CPU configuration 	d71150ec21699a32cf7a4b9214d6b34eb7c5b05d
----------------------------
Merge: 64edde6 b52fbc5 Bug#15831300 SLAVE_TYPE_CONVERSIONS=ALL_NON_LOSSY NOT WORKING AS EXPECTED Null merge from mysql-5.6 	d52a5ff76ca086c0c76b6206ce40092c4a2a95d2
----------------------------
Bug#15831300 SLAVE_TYPE_CONVERSIONS=ALL_NON_LOSSY NOT WORKING AS EXPECTED Problem: In RBR format, slave_type_conversions='ALL_NON_LOSSY' was not working properly in some cases like 'int unsigned' column at master was altered directly on slave into 'bigint signed/bigint unsigned'. Analysis: In RBR format, when there is a datatype mismatch and it is smaller datatype->larger datatype, slave checks whether `slave_type_conversions` set contains 'ALL_NON_LOSSY' or not. If it contains 'ALL_NON_LOSSY', it allows the conversion. In the process of converting the data from smaller datatype value to larger datatype value, slave prepares a conversion temporary table for all the mismatched columns. The column signedness information is not transferred from master to slave. Hence for this temporary table columns, slave treated signedness of the column as 'signed' for all the columns. Due to this treatment, any data for unsigned column at master was creating issues at slave (correct data was not getting inserted). Fix: Introduced two values in slave_type_conversions set 'ALL_SIGNED' and 'ALL_UNSIGNED'. This value tells the slave how to treat the values which are coming from master If 'ALL_SIGNED' is set, then treat all integer type column data as signed values (default behaviour). If 'ALL_UNSIGNED' is set, then treat all integer type column data as unsigned values. If both 'ALL_SIGNED','ALL_UNSIGNED' are specified, then 'ALL_SIGNED' will take higher priority than 'ALL_UNSIGNED'. Eg: SET slave_type_conversions='ALL_NON_LOSSY,ALL_UNSIGNED'. 	b52fbc5f1adc38aa6d0992593c25b4f3dc7a8efe
----------------------------
Bug#16878043 SEMI-SYNC REPLICATION IS VERY SLOW WITH MANY CLIENTS if rpl_semi_sync_master_timeout is set to a huge value, semi-synchronous replication becomes very slow, especially when many sessions are working parallel. semisync code uses a loop method to calculate woken time, before it starts to wait. Bigger rpl_semi_sync_master_timeout value causes more interations. In the patch, an effective method is used instead of the original method to calculate woken time. And the code is moved out the wait loop, so it is executed only once before starting the wait loop. 	b31f5e3110cdc487b952d81590d5b7d897e0ee13
----------------------------
Bug #16990423 SOME TESTS FOR TABLE CACHE VARIABLES FAIL IF OPEN FILES LIMIT IS TOO LOW Make affected tests skip if open_files_limit < 5000 Modified backport from trunk 	67855c91e96f138e13dae164dc27b96aa0371bc5
----------------------------
- bug#16752546: Hitting assert (trx)->in_ro_trx_list == ((trx)->read_only || !(trx)->rsegs.m_redo.rseg) Purge thread is trying to associate a lock with an existing trx that is owned by parallel running INSERT .... SELECT stmt. Debug assert validate state of trx before placing the lock even though purge thread don't plan to use member variables that it is trying to validate. Fixed by making the debug validation conditional. -------------- trx_set_rw_mode() promotes ro trx to rw trx. For this it acquires trx_sys->mutex as it needs to move trx from ro list to rw list. API as of now doesn't acquire trx->mutex but in future if there is other thread that is trying to access the trx that is being promoted then these 2 threads should be synced using trx->mutex. Approved by: Sunny (rb#2617) 	6ad68648a31d1d7358ede06efdd51c7b1bbd1b9b
----------------------------
Bug#16792349: YET MORE UNUSED #IFDEFS Additional patch #2, remove the following #ifdefs: __bsdi__ __EMX__ __IBMC__ __IBMCPP__ __LCC__ __OpenBSD__ __STDC_EXT__ _CUSTOMSTARTUPCONFIG_ CANT_OPEN_FILES_TWICE CHECK_KEYS COMPILE_STOPWORDS_IN DEAD_CODE DONT_USE_RW_LOCKS FAST FORCE_PRIMARY_KEY N_MAXKEY NEW_HASH_FUNCTION NOT_ANYMORE NOT_REALLY_USED_YET NOT_YET_READY_FOR_8_BYTE_POINTERS UNSAFE_LOCKING USE_RELOC USING_SECOND_APPROACH XXX_SUPERCEDED_BY_WL2952 	66871c7ee9f681213b3fff3a6c133bbbc1750f46
----------------------------
Removing and recreatinmg the following tests in mysql-trunk to match the corresponding file IDS from mysql-5.6 mysql-test/r/host_cache_size_functionality.result mysql-test/r/table_definition_cache_functionality.result mysql-test/t/host_cache_size_functionality.test mysql-test/t/sort_buffer_size_functionality.test mysql-test/t/table_definition_cache_functionality.test mysql-test/r/sort_buffer_size_functionality.result mysql-test/t/query_cache_size_functionality.test mysql-test/t/query_cache_type_functionality.test mysql-test/r/query_cache_size_functionality.result mysql-test/r/query_cache_type_functionality.result mysql-test/t/table_open_cache_functionality.test mysql-test/r/table_open_cache_functionality.result 	dd4ae9579e9e6db735132bb2ba8069ddb6b6d1aa
----------------------------
Removing and recreatinmg the following tests in mysql-trunk to match the corresponding file IDS from mysql-5.6 mysql-test/r/host_cache_size_functionality.result mysql-test/r/table_definition_cache_functionality.result mysql-test/t/host_cache_size_functionality.test mysql-test/t/sort_buffer_size_functionality.test mysql-test/t/table_definition_cache_functionality.test mysql-test/r/sort_buffer_size_functionality.result mysql-test/t/query_cache_size_functionality.test mysql-test/t/query_cache_type_functionality.test mysql-test/r/query_cache_size_functionality.result mysql-test/r/query_cache_type_functionality.result mysql-test/t/table_open_cache_functionality.test mysql-test/r/table_open_cache_functionality.result 	0a04703c690c899f9de388a99bcc430145aa54ce
----------------------------
WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS Implemented following PS tables for replication monitoring: 1) replication_connection_configuration 2) replication_connection_status 3) replication_execute_configuration 4) replication_execute_status 5) replication_execute_status_by_coordinator 6) replication_execute_status_by_worker Change in this patch: -------------------- Fixed failures seen in pb2 WL branch(mysql-trunk-wl3656) 	054584eff0e35c51d0c7f88afadd24bee41eaad7
----------------------------
WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS Implemented following PS tables for replication monitoring: 1) replication_connection_configuration 2) replication_connection_status 3) replication_execute_configuration 4) replication_execute_status 5) replication_execute_status_by_coordinator 6) replication_execute_status_by_worker Change in this patch: -------------------- Addressed code-review comments from Marc Alff. (rb#2599) 	b3cc96feb1b33e43c8a721f4cf81d71e033d711e
----------------------------
Bug#16657588: VARIABLE OPEN_FILES_LIMIT DOES NOT SHOW MAXIMUM NUMBER OF OPEN FILES The read-only system variable open_files_limit did not show maximum number of open files the mysqld process could have, but instead the number that was requested after adjusting the start-up option open_files_limit. Fixed by adding internal variable for propagating the requested number of files, since that was used for adjusting other start-up options. And set the read-only system variable open_files_limit to the real maximum value. 	c3e622df73c44aa5b3c7070e68c581a57e97c11e
----------------------------
"Bug#16078943: ZERO DATE CAN BE INSERTED IN STRICT NO-ZERO MODE THROUGH A DEFAULT VALUE. Analysis: ------------- The problem was that the default values for a table were checked for consistency only at CREATE TABLE time. The consistency checks very much depend on the sql_mode value. The default values were not checked at the INSERT/UPDATE time. Thus, if sql_mode became strict in the middle between CREATE TABLE and INSERT/UPDATE, inconsistent data can be put into the table. So here, when sql_mode='NO_ZERO_DATE,NO_ZERO_IN_DATE, STRICT_ALL_TABLE'(strict mode) then creating table with default ""value 0"" or default ""value having 0 in date"" for field types DATE/DATETIME/TIMESTAMP"" is not allowed. But when sql_mode is ""NO_ZERO_IN_DATE,NO_ZERO_DATE"" or """" (non-strict mode), tables can be created. If table with default ""value 0"" or default ""value having 0 in date"" for field DATE/DATETIME/TIMESTAMP is created in non-strict mode and tuple for the table is inserted with default for DATE/DATETIME/TIMESTAMP fields in strict mode then no error or warning is generated. While inserting/updating tuple(s), we are not validating the default values. While creating the table the default value set might be correct but same values might not be correct while inserting/updating the tuple (one of the reason is sql_mode). Fix: ------------- Added a logic to verify the default values while inserting or updating a tuple. Currently the TIMESTAMP data type differs in nonstandard ways from other data types. But this behavior can be turned off using ""explicit_defaults_for_timestamp"" system variable at server startup. With this patch, old behavior of TIMESTAMP data type is not changed. But with ""explicit_defaults_for_timestamp"", logic is added to verify the default value while inserting or updating a tuple. With this, behavior of insert or update with default values for DATE/DATETIME/TIMESTAMP is as below, +---------------+------------+----------------+-------------+ |               |            |                |             | |TYPE/sql_mode  | """"         |NO_ZERO_DATE/   |strict_mode  | |        value  |            |NO_ZERO_IN_DATE |             | |---------------+------------+----------------+-------------| |DATE           | Success    | Warning        | Error       | |---------------|------------|----------------|-------------| |DATETIME       | Success    | Warning        | Error       | |---------------|------------|----------------|-------------| |TIMESTAMP      |            |                |             | |+ explicit_-   |            |                |             | |  defaults_-   |            |                |             | |  for_-        | Success    | Success        | Success     | |  timestamp    |            |                |             | |  = false      |            |                |             | |(for           |            |                |             | | backward      |            |                |             | | compatibility)|            |                |             | |---------------|------------|----------------|-------------| |TIMESTAMP      |            |                |             | |+ explicit_-   |            |                |             | |  defaults_-   | Success    | Warning        | Error       | |  for_-        |            |                |             | |  timestamp    |            |                |             | |  = true       |            |                |             | |               |            |                |             | +-----------------------------------------------------------+ Summary of discussion on impact on Replication: ----------------------------------------------- *. Found following impact on replication if this issue is fixed, Older master (bug is there) --> Newer slave (bug is fixed) Let's assume sql_mode is propagated properly between the master and slaves. I.e. at any point in time the master and slaves have the same sql_mode value. The following sequence is permitted on the master: - sql_mode = '' - CREATE TABLE t1 (f1 int, f2 DATE DEFAULT 0, f3 DATETIME DEFAULT 0, f4 TIMESTAMP DEFAULT 0); - set sql_mode='NO_ZERO_DATE,NO_ZERO_IN_DATE, STRICT_ALL_TABLES'; - INSERT INTO t1(f1) VALUES (10); The result of this sequence on the master is a new record: { 0, 0, 0, 0 } (that is the bug, because of effective NO_ZERO_DATE & NO_ZERO_IN_DATE). On the slave, the INSERT statement will fail (because the bug is fixed on the slave), thus the replication will stop. *. Approaches identified after discussing with Replication team, Runtime team and support are, 1. Introduce a switch to relax the sql_mode during an upgrade on the slave. But: - This switch is effectively overriding the SQL_MODE from the master, thence all sorts of different things can go wrong. - This switch is only necessary for upgrades, which have a solid workarounds: using RBR or relaxing the SQL_MODE on the master. - Introducing another switch requires double testing and is error prone, since users may use it for other cases than upgrades and then we will get all sort of weird bug reports... - This approach does not scale in terms of development and maintenance. The use case does not seem to be worth it this kind of approach. 2. Introduce another switch as in suggestion #1, that makes the slave behave as the master just for the sole purpose of a set of SQL_MODE combinations. Same problems as suggestion #1. 3. Document that during upgrades, the master needs to relax the sql_mode or switch to RBR, but note the following restrictions: - user needs to wait for the old binary logs to be consumed before actually be able to upgrade the slaves (so that there is no slave still replicating ""old"" binlogs after it is upgraded) - user needs to cope with side effects of relaxing the sql_mode or use RBR during the upgrade period. After considering the risk involved in the approach 1 and 2, its decided to go with approach 3. Attached discussion mails in the bug report. "	b2aa181dc20cd307faa51fc6bc36506cd0f8ea31
----------------------------
BUG#16906827-CAN'T SET QUERY_CACHE_TYPE TO 0 WHEN IT IS ALREADY 0 BACKGROUND: The crux of the problem reported in the bug report is User does not want to see the error message when the server is started with query cache disabled and User is disabling the query cache by setting query_cache_type to 0 during runtime (in client session). ANALYSIS: The check in check_query_cache_type() function was throwing error for all three values 0, 1 or 2 when query cache is disabled. According to the bug or user requirement, User wants to bypass this error check when we are setting query_cache_type to 0 (or OFF) during runtime when it is already disabled 0 (or OFF) during startup. FIX: As a fix for this bug, the check in check_query_cache_type() function is modified to take into account to *NOT* throw the error when we are setting it 0 (or OFF) when query cache is already disabled. 	5914688245347168b2094f6b07876ae53739e757
----------------------------
Bug#16945618 PERFORMANCE SCHEMA, DEGRADATION UNDER STRESS WHEN INTERNAL BUFFERS ARE FULL The performance schema uses internal buffers of a fixed size. The size comes from configuration options. When the sizing is adequate for the workload, things work properly. When the sizing is too tight for the workload, the performance schema spends a lot of time in an internal spin loop to attempt to allocate a memory buffer, and fails. Before this bug, this spin loop would happen for each call to instrument an object, which can be a very frequent operation. With this fix, when a failure to allocate memory is noticed, a flag is set that indicates the corresponding buffer is full. Subsequent call to allocate memory from the same buffer will fail immediately, avoiding the need for a spin loop that fill fail anyway. When an object is released, the corresponding buffer is not flagged as full any more, indicating that memory allocation can be attempted again. With this fix, when running the performance schema with undersized buffers, the functional result is unchanged: some events are lost and reported as such. What is changed is that the performance degradation in this mode, which could be catastrophic in some cases, is now avoided. 	ec252ec5961dfb3c699d420e4a6a26d14572251e
----------------------------
WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS Implemented following PS tables for replication monitoring: 1) replication_connection_configuration 2) replication_connection_status 3) replication_execute_configuration 4) replication_execute_status 5) replication_execute_status_by_coordinator 6) replication_execute_status_by_worker Change in this patch: -------------------- Changed data type of timestamp fields from string to timestamp. Updated tests accordingly. 	240128b2f06fd5649f9362fef329a0062d95754e
----------------------------
BUG#16904035-SHOW STATUS - EXCESSIVE LOCKING ON LOCK_ACTIVE_MI AND ACTIVE_MI->RLI->DATA_LOCK Problem: Excessive locking on lock_active_mi and rli->data_lock while executing any `show status like 'X'` command. Analysis: SHOW_FUNCs for Slave_running, Slave_retried_transactions, Slave_heartbeat_period, Slave_received_heartbeats, Slave_last_heartbeat are acquiring lock_active_mi and rli->data_lock to show their variable value. It is ok to show stale data while showing the status variables i.e., even if they miss one update, it will not cause any great trouble. Fix: Remove the locks from the above mentioned SHOW_FUNC functions. 	5fc40d3cb00b5b9ef40eada9ea0b942cac78f5f6
----------------------------
Bug #14227431: CHARACTER SET MISMATCH WHEN ALTERING FOREIGN KEYS CAN LEAD TO MISSING TABLES Overview -------- If the FOREIGN_KEY_CHECKS system variable is set to 0, it is possible to break a foreign key constraint by changing the type or character set of the foreign key column, or by dropping the foreign key index (without carrying out corresponding changes on another table in the relationship). If we subsequently set FOREIGN_KEY_CHECKS to 1 and execute ALTER TABLE involving the COPY algorithm on such a table, the following happens: 1) If ALTER TABLE does not contain a RENAME clause, the attempt to install the new version of the table instead of the old one will fail due to the fact that the inconsistency will be detected. An attempt to revert the partially executed alter table operation by restoring the old table definition will fail as well due to FOREIGN_KEY_CHECKS == 1. As a result, the table being altered will be lost. 2) If ALTER TABLE contains the RENAME clause, the inconsistency will not be detected (most probably due to other bugs). But if an attempt to install the new version of the table fails (for example, due to a failure when updating triggers associated with the table), reverting the partially executed alter table by restoring the old table definition will fail too. So the table being altered might be lost as well. Suggested fix ------------- The suggested fix is to temporarily unset the option bit representing FOREIGN_KEY_CHECKS when the old table definition is restored while reverting the partially executed operation. 	65d8d8ded2ac9fd0adfd2777479104e4e1c6f98b
----------------------------
Bail if building in PB2 and MCC_PYTHON_TO_BUNDLE is not set. Install mcc_config.py as FILE (not PROGRAM) 	9d892661cb223206a1e2030e9e12f7b292b7e422
----------------------------
Bug#69172 Wasted work in method Config::illegal_change() 	70fe6dfd686fa12854c05b436237d9c70674dde7
----------------------------
WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS Implemented following PS tables for replication monitoring: 1) replication_connection_configuration 2) replication_connection_status 3) replication_execute_configuration 4) replication_execute_status 5) replication_execute_status_by_coordinator 6) replication_execute_status_by_worker 	e79e82a92c2f62559453de679371e835675226b9
----------------------------
BUG#16918216: RPL.RPL_ALTER_REPOSITORY TEST FAILING FOR 5.6 rpl_alter_repository was failing sporadically because a previous test, rpl_stm_mixed_mts_rec_crash_safe_small, didn't clean all configurations changes during its execution, these changes were causing result content mismatch on rpl_alter_repository. To ensure that all configurations are reverted, now we restart servers after rpl_*_mts_*_crash_safe_* tests. 	e5688b16c8a9061a8377c40802339aeef2d7c9ac
----------------------------
Fix compillation errors when using WITH_PERFSCHEMA_STORAGE_ENGINE=0 Fix MTR regression of 4 innodb_fts tests involving a bad change to fts_bsearch(). 	1f0e05bb061312270e6af0d61f77ce793576c9b5
----------------------------
Bug #16917425  -DBUILD_CONFIG=MYSQL_RELEASE -DWITH_DEBUG=ON FAILS 4 AND SKIPS 27 MTR TESTS Revert fix since it caused mtr tests to not run in pushbuild. 	9061e736b14dadaeae1c2e9c9a241895906437a3
----------------------------
One more patch to clean up a few compiler errors that occurred after the push for RB2422.  Those compiler error occurred with WITHOUT_PERFSCHEMA_STORAGE_ENGINE=1.  This switch apparrently is not used in all the platforms in PB2 mysql-trunk-itch. A quick fix was previously pushed in revision-id: vasil.dimov@oracle.com-20130529101751-anf3z3pu8gwjw2pd This is an alternate change to part of that patch.  Instead of including <sql_class.h> in ha_prototypes.h, this patch separates 'enum durability_properties' into its own header and includes that. This relaxes the stated intention of keeping other headers out of ha_prototypes.h to just including very simple headers. It also moves the prototype of ICP_RESULT back into ha_prototypes.h because my_icp.h is also a very simple header. Approved by Sunny in rb:2555 	a1eaa717bccf62ade21457d878626a237fa065e8
----------------------------
Bug #16917425  -DBUILD_CONFIG=MYSQL_RELEASE -DWITH_DEBUG=ON FAILS 4 AND SKIPS 27 MTR TESTS 	a5c18dddefef982281743796c721f514261ca9c6
----------------------------
BUG#15880018 - MISLEADING MESSAGES AT STARTUP TIME DESCRIPTION: When the MySQL server starts, it checks for the file containing list of all the MySQL error messages. This file by default is 'errmsg.sys'. The location of the error-message file can be specified by the server option '--lc-messages-dir'. If MySQL server can not find the file at the location specified by the user, an error message is displayed and server does not start. The Error message is general and does not point user in the right direction. FIX : Changed the error message so that user can check '--lc-messages-dir' configuration directive too if MySQL server can not find the 'errmsg.sys' file. 	e30f24be13378e08a17db4490aa1007d3ad314af
----------------------------
Bug#16898807 workaround: Temporarily change NDB memcached default scheduler from S (which uses multi-wait) to Stockholm (which does not). Since Stockholm does not support onine reconfiguration, 9 out of 18 ndb_memcache mtr tests must be temporarily disabled. 	74528be9becf82bdce6f6cc50dac1580f3a6a266
----------------------------
- bug#16631778: CRASH WHEN TRYING TO DROP TABLE WITH INNODB_FORCE_RECOVERY >=3 SET With innodb_force_recovery mode set to >= 3 server should block only DML, DDL is allowed. In order to ensure DDL ops are allowed we need to remove dependency of rseg assignment from srv_force_recovery mode. Respective API will ensure blocking of DML even if rseg is assigned for such trx. Approved by: Sunny (rb#2471) 	056466a8effede983261eb7f13280f7644f63879
----------------------------
"Bug#16669321 - PERFSCHEMA.PFS_UPGRADE_EVENT UNSTABLE AFTER SWITCHING STORAGE ENGINE TO INNODB In PFS tests that use mysql_upgrade, disable the general log and the slow query log to avoid spurious occurrences of ""ERROR 1194: Table 'general_log' marked as crashed"". "	19660ec840118b4ba466aca736a9c1e9d9b8306f
----------------------------
"WL#5928: Most statements should clear the diagnostic area Previously, the errors/warnings list was only cleared when a statement accessed tables. This was non-standard. We now clear the DA for every procedure statement (mostly anything that is executed and is not a diagnostics statement like GET DIAGNOSTICS or SHOW WARNINGS). This changes both code and behaviour for - direct invocation - stored procedures/functions - prepared statements - query cache GET DIAGNOSTICS and the old SHOW WARNINGS, SHOW ERRORS, SHOW COUNT(*) WARNINGS, SHOW COUNT(*) ERRORS are diagnostics statements. They do not clear the diagnostics area even when issued repeatedly. @@error_count and @@warning_count are ""diagnostics variables"" and will appear in non-diagnostics statements like SELECT. For backward compatibility, they will contain the correct values describing the previous statement when queried immediately after execution of the previous statement: DROP TABLE does_not_exist; SELECT @@error_count;      # renders 1 (result of DROP) SELECT @@error_count;      # renders 0 (result of SELECT) This is discouraged; use GET DIAGNOSTICS instead. Likewise, SHOW WARNINGS could be used as the first statement of a HANDLER (or preceeded only by other diagnostics statements), but this is discouraged -- use GET [STACKED] DIAGNOSTICS instead. Errors during parsing correctly set the DA; any errors thrown there replace the previous command's diagnostics, even if it was a diagnostics statement the user failed at issuing. The SQL standard requires the diagnostics statement (GET DIAGNOSTICS) not to be preparable; likewise, SHOW WARNINGS, SHOW ERRORS, and statements containing @@error_count or @@warning_count must not be used in prepared statements. Code: DA resetting was sprinkled all over the code, sometimes in the form of a ""maybe"" (opt_reset_condition_info()). All occurences of the latter were removed. Care was taken to reduce the number of occurences of the former, usually to one central point for each subsystem (parsing, SP, PS, QC, signaling, logging). Self-printing of SP instructions was slightly extended and refactored. Tests: wl5928.test tests and documents the new expected behaviour. Various other tests were adapted to provided similarly expressive results as they used to under the previous circumstances. "	dc5a9bb4ac5125b0317233d417c2e2d7026af732
----------------------------
Bug#14036425: BUILD FAILS WHEN HAVE_CRYPT=0 Fix compilation warning (upgraded to error on debug builds): /sql/item_strfunc.cc error: unused variable res Moved declaration of res inside HAVE_CRYPT #ifdef 	05fcb95e8cef1f15e0b5e852d61b6df1a9f69314
----------------------------
"Merge: 9b8a0d6 c7fc800 BUG#16460123- NOTE ABOUT ""MASTER.INFO REPOSITORY"" ON CHANGE MASTER TO IS MISLEADING BUG#16461303- WARNING ISSUED ABOUT MASTER.INFO WHEN USING MASTER-INFO-REPOSITORY=TABLE uperge 5.6 to trunk "	c5644b8eac4906e4612cc3699a0bb156ef12c5c4
----------------------------
"BUG#16460123- NOTE ABOUT ""MASTER.INFO REPOSITORY"" ON CHANGE MASTER TO IS MISLEADING BUG#16461303- WARNING ISSUED ABOUT MASTER.INFO WHEN USING MASTER-INFO-REPOSITORY=TABLE Problem: When executing CHANGE MASTER TO on MySQL 5.6 with either MASTER_USER or MASTER_PASSWORD options, MySQL issues a warning: Level: Note Code: 1760 Message: Storing MySQL user name or password information in the master.info repository is not secure and is therefore not recommended. Please see the MySQL Manual for more about this issue and possible alternatives. This appears to suggest that ""master.info"" is insecure, which may lead the reader to believe that they should use master-info-repository=table instead of master-info-repository=file. However, this warning is issued when using both types of master info repository. Also, the suggestion to see the MySQL Manual is not pointing to any specific section in the Manual for user's convenience. Fix: This Note is changed to specify that master info repository is insecure to store USERNAME or PASSWORD and thence points to the START SLAVE section of MYSQL Manual for reference. "	c7fc800c2d7a872b40ad607bcd1c84f2ae390b8e
----------------------------
"ndb - add ""feature"" to create inconsistent FK...needed for foreign_key_checks=0 "	8d236b09f11aec4e1656cadb64f56188e883db03
----------------------------
Remove index.html which only redirected to welcome.html and make welcome.html the default start page for mcc. Introduce a new file ndb_setup.py which is always used to start mcc. ndb_setup.py imports a generated mcc_config.py which describes the installation. The now obsolete ndb_setup and ndb_setup.py.in have been removed. 	7d3bf5e622706f176998c0c16bfd17560d168103
----------------------------
- Bug #16664150: INNODB.INNODB-WL6445-2 FAILS - MYSQLD FAILED DURING TEST RUN Trying to start innodb instance in read only mode when previous instance was not shutdown properly will result in error. Previous instance is shutdown using shutdown_server <timeout> command. Time taken by server to shutdown on most machines if <= 10 secs and so default used when test is written. weekly-trunk test frmk exercises lot of tcs with more than feasible parallelism and on machines that seems to be dead-slow. In other words 10 secs is not enough so increasing it to 60 so that TCs passes on all machine configuration. Approved by: Sunny (over IM) 	9e45044ef74161a90de77f1109b0e2b6dfbfd0d7
----------------------------
BUG#14765080 - DEBUG_SYNC CAN LOSE SIGNAL Post push fix of failing unit test when compile -DMERGE_UNITTESTS=1 	559d2cd7792d27b56775987f914d019c4423fa29
----------------------------
BUG#14765080 - DEBUG_SYNC CAN LOSE SIGNAL PROBLEM: i_innodb.innodb_bug14712710 fails sporadically on PB2 branches with warning debug sync point timed out and error code of ER_DEBUG_SYNC_TIMEOUT. The problem could be that the wait thread which is  waiting at a sync point for a signal from the signalling thread could not process the signal because another signalling could have overwritten the debug_sync_global.ds_signal. This causes the waiting thread to wait till timeout expires leading to ER_DEBUG_SYNC_TIMEOUT error. This happens because the wait thread when woken up from a signal could contend with another signal for grabbing the debug_sync_global.ds_mutex. If the signal thread succeeds in the mutex, then new signal will be overwritten in debug_sync_global. ds_signal before the wait thread could process it. Also there exists the possibly of wait thread arriving late at a wait point before some signal threads could have overwritten the signal that the wait thread possibly wants to wait for. NOTE: The mysql documentation also needs to be modified. FIX: In debug_sync_global maintain list of signals that have been signalled in a std::set and remove the signal from the list when the corressponding wait thread has processed that signal. Introduce a wait_for attribute no_clear_event that allows signal not to be cleared from the global thus allowing a single signal event to wake up multiple threads that wait for this signal. This is useful for the test cases rpl.rpl_semisync_deadlock and i_rpl.rpl_lost_events_on_rotate. 	817d7a47e6e5a74b7a1c4be77ebbf64f1771c6e2
----------------------------
Merge: dc82d2b 8e528ab Bug#11760197 - INCORRECT RESULTS WITH COUNT DISTINCT AND BIG_TABLES --patch for test failure with -ps-protocol 	127d3ce47cbeb0114c6e9150ee2ed20ebffa8932
----------------------------
Bug#11760197 - INCORRECT RESULTS WITH COUNT DISTINCT AND BIG_TABLES --patch for test failure with -ps-protocol 	8e528ab449210e704e418ed603545283ffa88a0c
----------------------------
Building on multiple platforms from the same source tree is currently broken. The reason is that some of the configuration dependent files that cmake generates are written into the source tree rather than the build tree. These files are then overwritten whenever you run cmake for a new platform. This commit fixes this problem. 	ce52757f460247f1edcbcd31f0d67bc058ca19a2
----------------------------
Bug#16792349: YET MORE UNUSED #IFDEFS Additional patch, remove the following unused #ifdefs: DONT_ALLOW_UNSIGNED_PLUS IN_THE_FUTURE LIKE_CMP_TOUPPER TO_BE_REMOVED SECURE_SOCKETS THREAD_SPECIFIC_SIGPIPE IGNORE_SIGHUP_SIGQUIT THREAD_SAFE_CLIENT SHOULD_BE_CHECKED DONT_ALLOW_FULL_LOAD_DATA_PATHS TO_BE_IMPLEMENTED ALLOW_LINESEPARATOR_IN_STRINGS NOT_NEEDED ERROR_ON_NO_SIZEOF_PLUGIN_SYMBOL FIX_LATER RESTRICTED_GROUP QQ_ALL_HANDLERS_SUPPORT_VARCHAR TESTTIME WE_WANT_TO_SUPPORT_VERY_OLD_FRM_FILES TO_BE_DELETED_ON_PRODUCTION WE_WANT_TO_HANDLE_UNORMALIZED_DATES 	ad5ea4cdd779f8c4f1c75e9accf63b4814b03216
----------------------------
Merge: 0f40f33 ef8507d Bug#11760197 - INCORRECT RESULTS WITH COUNT DISTINCT AND BIG_TABLES --follow up patch, to add the comment removed by mistake and remove unnecessary comment. 	0cfbf4c7c845250f4ef3008a55c2804676ff9740
----------------------------
Bug#11760197 - INCORRECT RESULTS WITH COUNT DISTINCT AND BIG_TABLES --follow up patch, to add the comment removed by mistake and remove unnecessary comment. 	ef8507d4e14812f0c3839ce87d71210f13deae9f
----------------------------
Merge: fb79357 126f2d6 Bug#11760197 - INCORRECT RESULTS WITH COUNT DISTINCT AND BIG_TABLES --follow-up patch, to remove unnecessary comment. 	0f40f33b6f7d6a12366d743c3afd80597f4c721a
----------------------------
Bug#11760197 - INCORRECT RESULTS WITH COUNT DISTINCT AND BIG_TABLES --follow up patch, to remove unnecessary comment. 	126f2d647a2a03870c6fc3e31b43593d70d0d4c7
----------------------------
"Bug#16765278 DELETE SQL_LOAD_MB* FILE (TEMP FILE) CREATED BY BINLOG_KILLED_SIMULATE.TEST 'mysqbinlog' tool creates a temporary file while preparing LOAD DATA QUERY. These files needs to be deleted at the end of the test script otherwise these files are left out in the daily-run machines, causing ""no space on device issues"" Fix: Delete them at the end of these test scripts 1) execute mysqlbinlog with --local-load option to create these files in a specified tmpdir 2) delete the tmpdir at the end of the test script "	a3e9daf85d517847713ac98c7dcdfe7941c85035
----------------------------
ndb - need to use m_local_config_mutex when accessing m_local_config. In < 7.3 this worked by accident due to TTFM...but now that mutex isn't global any longer... 	51e8ee7cb5a40930ca2e6bdcb777bf84df3216d5
----------------------------
"Bug#16387720: BLOCKED WITH FLUSH TABLES WITH READ LOCK + SHOW SLAVE STATUS Problem: ======= If a client thread on a slave does FLUSH TABLES WITH READ LOCK; then master does some updates, SHOW SLAVE STATUS in the same client will be blocked. If the blocked slave server is killed and restarted when GTID's are enabled, one GTID gets missed leaving the slave in an out of sync state. Using 'relay-log-recovery=1' should do a crash safe slave recovery but it is not happening. Analysis: ======== RPL info tables ""slave_master_info"" and ""slave_relay_log_info"" are used to store slave's thread's positions.  When a FTWRL is issued on slave this command blocks all operations on tables. Hence when some update operations are done on master the slave thread will be able to open the tables but while closing, an internal commit operation will be blocked. These blocked info tables make the ""SHOW SLAVE STATUS"" to hang. When ""relay-log-recovery=1"" during crash recovery all the partial written events will be discarded the master info table is initialised with the information read from relay log info table. The ""Retrieved GTID"" set should be cleared so that partial read events are discarded and they are fetched once again. Since this is not happening ""The Retried GTID"" is considered to be executed and the actual transaction is skipped. Fix: === Info tables should be made independent of global read lock. At the time of opening the RPL info tables the following ""MYSQL_OPEN_IGNORE_GLOBAL_READ_LOCK"" flag is set to make the info tables not to block when the FTWRL is in progress. Hence a similar flag is introduced in ""ha_commit_trans"" code which will allow commit to complete even if a global read lock is active. This flag can be used to allow changes to internal tables (e.g. slave status tables). To fix the missing GTID issue using ""relay-log-recovery"" option, during recovery process retrieved GTID set is cleared. "	bf20e5c93fdab9737cdefcb0395eed622e3cb728
----------------------------
Merge: a3bfe93 cff9610 Bug#11760197 - INCORRECT RESULTS WITH COUNT DISTINCT AND BIG_TABLES Merge fix for Bug#11760197 from mysql-5.6 to mysql-trunk 	fd157fdcbc0a6758a16e5b54b56d084568633d33
----------------------------
Bug#11760197 - INCORRECT RESULTS WITH COUNT DISTINCT AND BIG_TABLES Problem:- When big_tables is enabled, COUNT DISTINCT on simple join with constant equality condition on non-duplicate key gives wrong result. Analysis:- In case of count distinct with sql_big_tables enable, we save our data in myisam file instead of heap unique tree. When we have a constant equality condition on non-duplicate key, we dont detect duplicate field values when inserting the records into the temporary table. Solution:- While creating temporary table, allow creations of fields for constant items. When we have distinct query, this will make sure the duplicate value filtered out when inserting rows in the temporary table. This fix may give a small overhead for queries that will create temporary table since columns for constant expressions may now be added to the temporary table. However, we do not think this overhead will be significant. If it is later found that it is necessary to reintroduce this optimization, it should be done by removing the field from the list of fields that are given to create_tmp_table(). 	cff961061231c803907b1d42109b4d5eff30f369
----------------------------
BUG#16247110 - ASSERT FAIL IN PROTOCOL::END_STATEMENT AFTER DELETE ANALYSIS : When an UPDATE or DELETE statement is being executed and another connection happens to hold locks being accessed by this thread, then multi_range_read_next() called by the range optimizer could fail with HA_ERR_LOCK_DEADLOCK or HA_ERR_LOCK_WAIT_TIMEOUT. However, this was not detected by mysql_update() and no error was reported to the Diagnostics Area. Hence an assertion would be triggered in Protocol::end_statement() when trying to send OK or ERROR to the client. On release builds the bug caused OK to be sent to the client for a statement that had in fact failed. FIX : If call to select->quick->reset() in mysql_update() or mysql_delete() fails then an error is reported using file->print_error() to set DA to a proper state. This bug is fixed in mysql-trunk by bug#16366994. This patch backports the patch in mysql-5.6. Test case added. 	a2b0d1679285b230c24364c9cefa6bf351319502
----------------------------
Bug#14236170 MYSQLDUMP 5.5.25 CLIENT FAILS TO DUMP MYSQL DB FROM REMOTE 5.0.96 SERVER Problem: mysqldump tool assumes the existence of general_log and slow_log tables in the server. If mysqldump tool executes on a old server where there are no log tables like these, mysqldump tool fails. Analysis: general_log and slow_log tables are added in the ignore-table list as part of bug-26121 fix causes bug-45740 (MYSQLDUMP DOESN'T DUMP GENERAL_LOG AND SLOW_QUERY CAUSES RESTORE PROBLEM). As part of the bug-45740 fix, mysqldump tool adds create table queries for these two tables. But the fix assumes that on all the servers, general_log and slow_log will be there. If the new mysqldump tool is executed against a old server where there are no general_log and slow_log, the mysqldump tool fails with an error that 'there is no general_log table'. Fix: When mysqldump tool is trying to retrieve general_log and slow_log table structures, first the tool should check their existence of these tables in the server instead of trying to dump it blindly. 	0b0f32bed5c4b29c2abb78c504195038a3bdc15d
----------------------------
BUG#16354789 RPL_SLAVE_SYSVAR_DEADLOCK CRASHING OCCASIONALLY ON OS X 10.7 PROBLEM DESCRIPTION AND FIX: i_rpl.rpl_slave_sysvar_deadlock test case crashes most of time on OS X 10.7 on PB2. The crash is due to race condition involving vio_shutdown and select based implementation of vio_io_wait. If vio_shutdown sets the file descriptor of the vio.fd to INVALID_SOCKET which is negative one in one thread after which the select-based implementation of vio_io_wait use this fd value with FD_* macros in another thread of control, it segfaults. The reason for segfault is because FD_* macros use this fd value as an index into a static buffer or array. The fix checks the copied fd from mysql_socket_getfd is not INVALID_SOCKET so that FD_SET doesn't incorrect index which avoids the segfault. 	31086b7bcde0ea6604a891a150cff95e26212820
----------------------------
ndb - bug#16817928 In dropTableGlobal(DropTableCascadeConstraints == 0) make sure to perform all checks before starting to perform actual drops. Otherwise the it might have dropped some indexes and/or FK and then return an error. That behaviour confused the black-art-ninja-code in ha_ndb_ddl_fk.cc that makes ndb become bug compatible wrt foreign_key_checks. The result of that confusion was that a FK was getting dropped twice, and the second time one got 4238 (Trigger Not Found) After this patch, if dropTableGlobal return 21080, no drops of anything will have been performed. 	2018b0d454e36f4fe854bc0a8e36413f4bd18313
----------------------------
Bug#16748528: CMAKE: ASSUME C STANDARD LIBRARY HEADER FILES EXIST Remove 11 CMake checks for C standard library header files. Since all supported platforms have the C standard library, these checks are pointless. This patch also removes duplicate lines from config.h.cmake as well as a number of lines without a corresponding configure.cmake check. The patch also removes some ifdefs which are always set to 1 in configure.cmake and/or config.h.cmake. 	a45335f3fc6e54e4b4a2ae537a2d44c5c2edb172
----------------------------
Bug #16411457  MASTER THREAD CANNOT EXIT FLUSH_LOOP WHEN INNODB_FAST_SHUTDOWN IS 2 Problem: When innodb_fast_shutdown is set to 2 and the master thread enters flush loop, under some circumstances it will not be able to exit it. This may lead to a shutdown hanging. This is happening because of the following: 1. In the flush_loop block of code, if the srv_fast_shutdown is equal to 2 (very fast shutdown), then we do not flush dirty pages in buffer pool to disk. 2. In the same flush_loop block of code, if the number of dirty pages is more than user specified limit, we go to step 1. This results in infinite loop. Solution: When we are in the process of doing a very fast shutdown, don't do step 2 above. rb#2328 approved by Inaam. 	8eca03210835e21e72c3d1a85734f32fa654f0a8
----------------------------
WL#6314 Updated missing comment in an added function. Updated the default value of slave_parallel_type Fixed an unwanted change to the test case. 	f900d24fe412b7bb72f168d12111bc14538d90f1
----------------------------
"bug#16553132: The original test connot more run in PB as too stong dependent on the configuration of the OS (ulimit -n). The test has now been put into the suite ""max_parts"" and is running under Hudson control regularly. "	93f6dfda9eb4476d27b6d1bf2e28da657535455f
----------------------------
Bug #16244691 SERVER GONE AWAY ERROR OCCURS DEPENDING ON THE NUMBER OF TABLE/KEY RELATIONS Problem: When there are many tables, linked together through the foreign key constraints, then loading one table will recursively open other tables.  This can sometimes lead to thread stack overflow.  In such situations the server will exit. I see the stack overflow problem when the thread_stack is 196608 (the default value for 32-bit systems).  I don't see the problem when the thread_stack is set to 262144 (the default value for 64-bit systems). Solution: The recursive approach to load tables related via foreign key is replaced with an iterative approach. Previously the cascade operations were also done in recursive manner. Now it is changed to be done in an iterative manner using an explicit stack. rb#2089 approved by Marko 	2e7320ddfbfadcdffd7546be7ccb07a05d6d0412
----------------------------
Merge: 83cd1b6 ca31ee5 WL#6906 - Improve locality of reference by allocating trx_t in blocks Allocate memory in configurable sized blocks that are a multiple of sizeof(trx_t). Put the trx_t instances on a priority queue that is ordered on their memory addresses so that when we allocate trx_t instances from the pool they are close together. When a transaction is freed the instance is released back into the pool. rb#2129 Approved by Inaam Rana and Jimmy Yang. 	8f2c33bc52616e37ce9bb44858a31beb1301213a
----------------------------
Merge: 1d86e76 6646ea1 BUG#16223835: UNEXPECTED EMPTY RESULTS OUT OF SHOW COMMANDS AFTER DUP GTID_NEXT TRANSACTION Merge from mysql-5.6 into mysql-trunk. 	d352e898edf40ada0d439bc71b12e55a7cdc1131
----------------------------
BUG#16223835: UNEXPECTED EMPTY RESULTS OUT OF SHOW COMMANDS AFTER DUP GTID_NEXT TRANSACTION When a transaction was skipped due to its GTID was already logged, until GTID_NEXT was set to a different GTID, all the following executed transactions were incorrectly skipped. To avoid this incorrect behaviour, all executed transactions and skipped transactions on AUTOCOMMIT=0 mode or which implicit commit are marked as undefined (GTID_NEXT.type = UNDEFINED_GROUP) when them commit or rollback. So when a second transaction is executed for the same SET @@SESSION.GTID_NEXT command a error is thrown. 	6646ea1bc25d9dd42f570f7620efe1c624057ef1
----------------------------
Merge: 1b8e7da c8b926a Bug#13955232 - PERFORMANCE_SCHEMA_INSTRUMENT='%=OFF' DOES NOT WORK ON WINDOWS Multiple issues: 1) On Windows, double quotes in argv are removed but single quotes remain. Modified mysqld_get_one_option() to strip leading and trailing single quotes from the argument name and value. 2) mysql-test-run.pl encloses server arguments from .opt files in double quotes, which can mask syntax errors on the command line. Updated setup_instruments_defaults.test to test command line arguments. 3) Instrument names with invalid syntax were allowed. Hardened logic to handle null argument strings, check for balanced quotes and reject arguments with extraneous quotes and slashes. 4) SQL syntax error in setup_instruments_defaults.test resulted in incomplete verification. 	1d86e76522612dfef98e162eafe2e2a353a2b5f3
----------------------------
Bug#13955232 - PERFORMANCE_SCHEMA_INSTRUMENT='%=OFF' DOES NOT WORK ON WINDOWS Fixed multiple issues: 1) On Windows, double quotes in argv are removed but single quotes remain. Modified mysqld_get_one_option() to strip leading and trailing single quotes from the argument name and value. 2) mysql-test-run.pl encloses server arguments from .opt files in double quotes, which can mask syntax errors on the command line. Updated setup_instruments_defaults.test to test command line arguments. 3) Instrument names with invalid syntax were allowed. Hardened logic to handle null argument strings, check for balanced quotes and reject arguments with extraneous quotes and slashes. 4) SQL syntax error in setup_instruments_defaults.test resulted in incomplete verification. 	c8b926a88b6d51e623eb43c86775bf824dca0595
----------------------------
Bug#16792349: YET MORE UNUSED #IFDEFS Remove the following unused #ifdefs: CANT_DELETE_OPEN_FILES CHECK_EMBEDDED_DIFFERENCES MY_ATOMIC_HAS_8_16 NEED_SYS_SYSLOG_H NO_CLIENT_LONG_LONG NO_STRTOLL_PROTO OLD_HEAP_VERSION OLD_VERSION SHARED_LIBRARY SSL_VARS_NOT_STATIC USE_MY_STAT_STRUCT USE_OLD_FUNCTIONS USE_SYSTEM_WRAPPERS WANT_OLD_HEAP_VERSION Also remove the remaining support for Borland C. 	1b8e7da39876c95a2e92fb320d446fadad8ebb7a
----------------------------
Bug#14555359 - EXTRASENDBUFFERMEMORY NOT CONFIGURABLE FOR MYSQLD/API/MGMD 	e4607fa07b44bfd255a766b549b7f6972be31acf
----------------------------
WL#7010: Remove unused --basedir and --datadir options from mysql_upgrade Removed the unused options. Added a test case. 	6f41ba1236157d54d519951aef694114cbd63d7c
----------------------------
BUG#11759306 - !INCLUDEDIR DOES NOT READ ALL .CNF FILES DESCRIPTION: Any configuration files to be included using !includedir directive is checked for valid extensions. While checking extensions, MySQL considered everything after the first dot (extension character) after the directory name as the extension for that file. FIX: Changed the function to check the extensions as everything after the last dot ('.') after the directory name. This will make possible to use dot is the configuration file name. 	2964dec8578fadde4f083033103be720ad961d72
----------------------------
BUG#11763934- DELETE AN OLD FILE WHEN CREATE_FILE_LOG_EVENT::DO_APPLY_EVENT FAILS Problem: When Create_file_log_event::do_apply_event or Execute_log_event::do_apply_event fails, the temporary files, created in tmpdir, are not getting deleted. Analysis: Such files are not reused and we can delete them incase of failure happens. Fix:Execute mysql_file_delete() on those temporary files(.info and .data files). 	3185576235001478b96fc344345acc40d9b840b2
----------------------------
WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS Implemented following PS tables for replication monitoring: 1) replication_connection_config_by_channel 2) replication_connection_status_by_channel 3) replication_execute_config_by_channel 4) replication_execute_status_by_channel 5) replication_execute_status_by_coordinator 6) replication_execute_status_by_executor Updated tests in perfschema suite accordingly. TODO: - Some fields in the above tables have hardcoded values. - Extend tables to contain multiple rows. - Write mtr scrpits to test the printed values. 	ed0cb1af634781fa134ac9db0aefd767475c583c
----------------------------
Merge: c1e29ea 07a72c5 BUG#16223835: UNEXPECTED EMPTY RESULTS OUT OF SHOW COMMANDS AFTER DUP GTID_NEXT TRANSACTION Merge from mysql-5.6 into mysql-trunk. 	3d23879dc5206ec8bf042e36aefe52cfbf952a2f
----------------------------
BUG#16223835: UNEXPECTED EMPTY RESULTS OUT OF SHOW COMMANDS AFTER DUP GTID_NEXT TRANSACTION Reverting the patch due to regressions. 	07a72c5a13737e76229d4bfd741a0071ab19ccb5
----------------------------
"WL#6355 Semisync: externalize transactions only after ACK received Postfix rpl_semi_sync_after_sync got timeout sporadically. That happened because 'end' signal was cleared too soon to receive by the waiting thread(server_1). So the waiting thread hung until timeout. 'SET DEBUG_SYNC=""RESET""' for master connection should be executed after the waiting thread(server_1) gets ""end"" signal. Because the SET statement clears not only current thread's debug action but the global signal as well. "	f1ca97b6976a1003383de482d1b87a76438435f5
----------------------------
"Bug #14095855 FOREIGN_KEY_CHECKS SHOULD APPLY TO NDB TABLES - fk dummy tables - write warnings and errors to log file prefixed with ""NDB FK"" - supress generated warnings - improve error messages "	ee674611c8d84466b7b16d6e8784c4c5c410c141
----------------------------
Bug #14095855 FOREIGN_KEY_CHECKS SHOULD APPLY TO NDB TABLES - fk dummy tables - add test for resolve without matching index - fix printed message 	27e5c4f021bd515abac87b7f901da7d2081bf269
----------------------------
Bug #14095855 FOREIGN_KEY_CHECKS SHOULD APPLY TO NDB TABLES - fk dummy tables - add test for resolve without matching columns - fix printed message - mark functions as const 	c78ea5f4bb573612d45f453b5ddda990cdc80cb1
----------------------------
Bug #14095855 FOREIGN_KEY_CHECKS SHOULD APPLY TO NDB TABLES - part 1 of dummy tables for foreign_key_checks=0 	37a05a71d5a72ac29a9333e5e7bbb639ac2d4152
----------------------------
Merge: a10920c ce8fb3a WL#6045 - Improve Innochecksum This WL is to enhance the functionality of innochecksum utility. Implemention done for all features as mention for WL. R01 - It shall be possible to specify the checksum algorithm to innochecksum utility. R02 - innochecksum shall provide option to rewrite the current checksum using the specified algorithm. R03 - innochecksum shall provide option to rewrite checksum even if the current checksum is invalid. R04 - innochecksum shall allow to configure the maximum checksum mismatch allowed before terminating the program. R05 - innochecksum shall operate on multiple tablespace files. R06 - innochecksum shall operate on multiple files in the same tablespace. R07 - innochecksum shall operate on files greater than 2GB. R08 - Innochecksum shall chart out page type summaries for each page in the filespace, and would dump the info on standard output(stdout) or standard error(stderr) as it goes. R09 - Debug option for innochecksum tool shall change & must work similar as mysqld debug option works. Approved by Kevin and Satya. rb#1997 	65211e7298890e3e9d9ccbb2f851b1b50247a335
----------------------------
Merge: 586449a 52ae858 BUG#16223835: UNEXPECTED EMPTY RESULTS OUT OF SHOW COMMANDS AFTER DUP GTID_NEXT TRANSACTION Merge from mysql-5.6 into mysql-trunk. 	d6ffc0795b59d1f4f0239e652fa486db4f8fe18d
----------------------------
BUG#16223835: UNEXPECTED EMPTY RESULTS OUT OF SHOW COMMANDS AFTER DUP GTID_NEXT TRANSACTION When a transaction was skipped due to its GTID was already logged, until GTID_NEXT was set to a different GTID, all the following executed transactions were incorrectly skipped. To avoid this incorrect behaviour, all executed transactions and skipped transactions on AUTOCOMMIT=0 mode or which implicit commit are marked as undefined (GTID_NEXT.type = UNDEFINED_GROUP) when them commit or rollback. So when a second transaction is executed for the same SET @@SESSION.GTID_NEXT command a error is thrown. 	52ae8580f3cb9dd309a07927b01c22fd32880275
----------------------------
Bug#14095855 FOREIGN_KEY_CHECKS SHOULD APPLY TO NDB TABLES: Removed code line added by misstake 	38eb0ccae1a1b443161262a68d25a96ff1bc34c4
----------------------------
Bug #14095855 FOREIGN_KEY_CHECKS SHOULD APPLY TO NDB TABLES This is a patch for supporting toggling on/off of foreign key checking in ndb. Innodb supports set foreign_key_checks = 0; to immediately disable all foreign key checking, even if set inside an ongoing transaction. All operations prior to the setting will have foreign key constraints checked and all operations after will not. For Innodb these checks are done immediately, but for Ndb the setting set ndb_deferred_constraints = 1; will defer the foreign key checks until commit time. The setting of foreign_key_checks = 0; inside a transaction will only affect operations executed after the change, operations done before will cause foreign keys to be checked. The setting of foreign_key_checks = 0 will of course also disable any defined cascade of deletes or updates. The implementation disables Ndb's internal triggers for foreign key checking inside TUP so it will also have a performance improvement during restoring backups with foreign key checks disabled. 	b72b0513aeb8ee7188c9feb3f806286c65fc8a72
----------------------------
BUG#16715809: REPLICATION WAS BROKEN WHILE EXECUTING FLUSH TABLES Fix for BUG 16062608, which disallowed commands that were not flagged as write commands but implicit commit when GTID_NEXT type is different of AUTOMATIC, introduced some regressions, more precisely made some commands to break replication. In order to fix this incorrect behaviour, that fix was reverted. 	44edeb68914bdebab6218a3241f3e2d480da4182
----------------------------
Bug#16720368 INNODB IGNORES *.IBD FILE BREAKAGE AT STARTUP After a clean shutdown, InnoDB will not check the *.ibd file headers, for maximum performance. This is unchanged before and after this patch. What this fix addresses is the case when crash recovery is needed. Previously, InnoDB could load a corrupted tablespace file. buf_page_is_corrupted(): Add the parameter check_lsn. fil_check_first_page(): New function, to perform a consistency check on the first page of a file. This can be overridden by setting innodb_force_recovery. fil_read_first_page(), fil_open_single_table_tablespace(), fil_load_single_table_tablespace(): Invoke fil_check_first_page(). open_or_create_data_files(): Check the status of fil_open_single_table_tablespace(). rb#2352 approved by Jimmy Yang 	a946cffd413c51ff637a43b4089a1cde9f818b3f
----------------------------
BUG#16532543: MYSQLBINLOG + MULTIPLE GTID BINLOGS + MYSQL => UNABLE TO APPLY LOGS: ERROR 1837 When using mysqlbinlog and mysql client to roll forward two (or more) binary logs with GTIDs enabled, the server will report an error when switching from the first to the second binary log. This happens because the variable GTID_NEXT is not properly reset when the first log file ends. Therefore, when executing the format description event of the second log file, GTID_NEXT will still be set to the last transaction identifier from the first log. Ultimately, this results in the following error: 1837. The fix is to make mysqlbinlog to output SET @@SESSION.GTID_NEXT=AUTOMATIC when processing a non-fake rotate event. Furthermore, even though transactions do not span multiple binary log files, they can span multiple relay-log files. Therefore, the resetting of GTID_NEXT should only occur if mysqlbinlog is not handling a rotate event in the middle of a transaction (as it may be the case when parsing relay-logs). In this patch, I also fixed: 1. a few replace_regex in some .inc files 2. some result files that had strange results after the defective regex kicked in 	b0d6cb2c2a6bc3812b91ff932e92cb9d1122916c
----------------------------
"Bug#16475866 - START SLAVE AFTER IMPORT OF TABLE-BASED REPOSITORIES GIVES EMPTY ERROR MESSAGE Problem - Trying to START SLAVE after loading slave_master_info and slave_relay_log_info into a clean MySQL instance results in an empty error message: mysql 5.6.10-log (root) [test]> start slave; ERROR 1593 (HY000): Fatal error: %s Analysis - The slave code just prints the ER(slave_errno) in the start_slave function call and since the error is due to non initialization of the master info and relay log info structures, ie. error number 1593, the corresponding error message is printed which is "" Fatal error: %s "". Fix - Fixed the problem by introducing a two new error codes for handeling the failure during the initialization of the master info and relay log info structure from the repository. "	793aed877bae43ba44b6e8d21d39f55a7346567c
----------------------------
"Bug #16666456 	A REGRESSION IN 5.6 CRASH RECOVERY ATOMICITY A crash commit error causes the last transaction to loss in an InnoDB table after RESET MASTER. The root cause is that the prepare phase causes fsync while the commit phase does not cause fsync inside InnoDB. That means the last transaction is not fsynced inside InnoDB. But RESET MASTER erases binlog events of the last transaction. In the following crash commit error, InnoDB has the last prepared row on recovery and calls server on how to deal with the prepared row and server does not find relevant binlog events from binary log file and rolls it back finally. To fix the problem, RESET MASTER should cause to flush logs for storage engines, so that the last transaction is fsynced inside storage engines. The same solution to internal EXPIRE_LOGS_DAYS. There is not the problem with PURGE BINARY LOGS TO, as the binlog events of last transaction in current binlog file is not purged. "	0ecbe97ef83e20febe10f1348c8e18dbbb1b55bb
----------------------------
Bug #16680313: CLIENT DOESN'T READ PLUGIN-DIR FROM MY.CNF SET BY MYSQL_READ_DEFAULT_FILE Parsing of the plugin-dir config file option was not working due to a typo. Fixed the typo. No test case can be added due to lack of support for defaults-exitra-file testing in mysql-test-run.pl. Thanks to Sinisa for contributing the fix. 	2179357c1b0c3ffe3db4eb70eba1aa3d535a4e58
----------------------------
Bug #16244691 SERVER GONE AWAY ERROR OCCURS DEPENDING ON THE NUMBER OF TABLE/KEY RELATIONS Problem: When there are many tables, linked together through the foreign key constraints, then loading one table will recursively open other tables.  This can sometimes lead to thread stack overflow.  In such situations the server will exit. I see the stack overflow problem when the thread_stack is 196608 (the default value for 32-bit systems).  I don't see the problem when the thread_stack is set to 262144 (the default value for 64-bit systems). Solution: The recursive approach to load tables related via foreign key is replaced with an iterative approach. Previously the cascade operations were also done in recursive manner. Now it is changed to be done in an iterative manner using an explicit stack. rb#2089 approved by Marko 	0338c667dc9162bac96c5337feb55d73c4adfc1c
----------------------------
Fixing datadir and installdir in HostInfo 	3dad24e5e2083831149da08c57bb9c1289732e4b
----------------------------
"WL#6045 Improve Innochecksum Included ""string.h"" in buf0buf.cc file as causing compilation failure when cmake fLag -DWITH_PERFSCHEMA_STORAGE_ENGINE:BOOL=OFF "	796594a01f53557e5d38bd176fa28a49c002c34d
----------------------------
configure.js fixes 	d57966e6b71da81277b85eba89a90c9effb9c6ab
----------------------------
configure.js fix 	7df69a7825afb69ad9ab14c131e2a6febc8dd30d
----------------------------
configure script improvements 	a3f4046cbe26d16bd051ac671af5b158b7764d12
----------------------------
Bug#16267120 - PAGE REORGANIZE ASSUMES INNODB_LOG_COMPRESSED_PAGES=OFF Push the missing innodb_log_checkpoint_now_basic.test in sys_vars suite 	50e2ff00fd743007c45313cee2f7659d08841e4e
----------------------------
"Bug#16629996: Remove more unused #ifdefs Additional patch. This patch removes the following #ifdefs which were never set: - DONT_HAVE_TO_BE_INITALIZED - HAVE_AIOWAIT - HAVE_CLOSE_SERVER_SOCK - HAVE_CRYPTED_FRM - HAVE_DARWIN_THREADS - HAVE_EMBEDDED_PRIVILEGE_CONTROL - HAVE_FILE_VERSIONS - HAVE_GETTIMEOFDAY_H - HAVE_LINUXTHREADS - HAVE_SETUPTERM - HAVE_SYS_VADVICE_H - HAVE_TIME - HAVE_VIDATTR This patch also removes #ifdefs HAVE_FTIME and HAVE_SYS_TIMEB_H. According to the man page about ftime ""This function is obsolete. Don't use it"". Including the header file gave compilation warnings on FreeBSD. The one remaining use of ftime() has been replaced with gettimeofday(). "	b73029ef821f9c15e03a23c96a8973645ee89d05
----------------------------
Bug#16267120 - PAGE REORGANIZE ASSUMES INNODB_LOG_COMPRESSED_PAGES=OFF btr_page_reorganize() reorganizes a B-tree page to get more available space for inserting a record. For compressed pages, this is being logged as a logical operation. This is wrong, because the zlib version or the compression parameters could change between the time the MLOG_COMP_PAGE_REORGANIZE redo log record is written and it is applied during a crash recovery. MySQL 5.6 introduces the parameter innodb_compression_level and innodb_log_compressed_pages. The problem is that page reorganize is always being logged as MLOG_ZIP_PAGE_REORGANIZE (with the compression level as a parameter), which is correct with innodb_log_compressed_pages=OFF. If innodb_log_compressed_pages=ON, page reorganize should log the compressed page image. Fix: --- If innodb_log_compressed_pages=ON, log the compressed page and do not write a MLOG_COMP_PAGE_REORGANIZE redolog record. Approved by Marko. rb#1974 	2fd41bb720e642903e59014686d7d68294ee78d9
----------------------------
Merge: 1203344 fe683b6 Bug#16208542 DROP INDEX ON A FOREIGN KEY COLUMN LEADS TO MISSING TABLE == Analysis == The bug is caused by the reason that dict_load_foreigns() will return error when it couldn't find a equivalent fk index, and dict_load_table() who get the error will return NULL to indicate there is something wrong with the table. This happens no matter which value(1/0) is set to FOREIGN_KEY_CHECKS. == Solution == Allow user to open the table with missing fk indexes when FOREIGN_KEY_CHECKS=0. When the table is opened, user has to recreate the missing indexes to fulfill the fk constraints. After that the table can be open in a normal way. A new enum type in dict_err_ignore_t called DICT_ERR_IGNORE_FK_NOKEY is defined, with which dict_load_foreigns() will always load all the fk constraints and fk indexes ignoring those missing. User can decide which indexes should be created according to the table definition with all the fk constraints. An error message can be found when open a table with missing fk indexes. I think using ib_logf in dict_load_table() to print the error message is an easy way. rb#2308 is approved by Marko 	d909adcf3452f326bce8ffcd1678d5e5d1aeeda8
----------------------------
Bug#16208542 DROP INDEX ON A FOREIGN KEY COLUMN LEADS TO MISSING TABLE == Analysis == The bug is caused by the reason that dict_load_foreigns() will return error when it couldn't find a equivalent fk index, and dict_load_table() who get the error will return NULL to indicate there is something wrong with the table. This happens no matter which value(1/0) is set to FOREIGN_KEY_CHECKS. == Solution == Allow user to open the table with missing fk indexes when FOREIGN_KEY_CHECKS=0. When the table is opened, user has to recreate the missing indexes to fulfill the fk constraints. After that the table can be open in a normal way. A new enum type in dict_err_ignore_t called DICT_ERR_IGNORE_FK_NOKEY is defined, with which dict_load_foreigns() will always load all the fk constraints and fk indexes ignoring those missing. User can decide which indexes should be created according to the table definition with all the fk constraints. An error message can be found when open a table with missing fk indexes. I think using ib_logf in dict_load_table() to print the error message is an easy way. rb#2308 is approved by Marko 	fe683b68170036dfb4a2c2d7843109cdc1575ae5
----------------------------
Merge: 55e1f11 4cf6067 merge 5.6 => trunk, add readline config changes to storage/ndb as well 	dbff42f3d50b5fb08cd903803c8dfb73b9608818
----------------------------
Bug #14483484 INSERT ... ON DUPLICATE KEY UPDATE + INNODB_AUTOINC_LOCK_MODE=1 IS BROKEN Problem: When a multi-row INSERT ... ON DUPLICATE KEY UPDATE statement begins execution it reserves the required number of auto increment values. When one of the insert fails because of duplicate key error, then it will become an update operation.  The auto increment value of this update operation will determine the auto increment values used for subsequent inserts.  This can result in duplicate auto increment values. Solution: When an insert operation of a multi-row INSERT ... ON DUPLICATE KEY UPDATE statement fails, check if the update clause explicitly updates the auto increment value. If an explicit value is given for an auto increment field, then check if it will conflict with the values that we have reserved.  If it might conflict then return an error. Also, the update clause will not bump the auto increment value for the rows inserted in the multi-row INSERT ... ON DUPLICATE KEY. rb#2219 approved by Guilhem and Dmitry Shulga. 	ed49453ec5aaf9c87bae72735f55949db257a75a
----------------------------
Bug #14483484 INSERT ... ON DUPLICATE KEY UPDATE + INNODB_AUTOINC_LOCK_MODE=1 IS BROKEN Problem: When a multi-row INSERT ... ON DUPLICATE KEY UPDATE statement begins execution it reserves the required number of auto increment values. When one of the insert fails because of duplicate key error, then it will become an update operation.  The auto increment value of this update operation will determine the auto increment values used for subsequent inserts.  This can result in duplicate auto increment values. Solution: When an insert operation of a multi-row INSERT ... ON DUPLICATE KEY UPDATE statement fails, check if the update clause explicitly updates the auto increment value. If an explicit value is given for an auto increment field, then check if it will conflict with the values that we have reserved.  If it might conflict then return an error. Also, the update clause will not bump the auto increment value for the rows inserted in the multi-row INSERT ... ON DUPLICATE KEY. rb#2219 approved by Guilhem and Dmitry Shulga. 	e40133c020186c2d1403d24c8bc404cce2a99d45
----------------------------
Bug#16661195: REMOVE UNNEEDED CMAKE CHECKS This patch removes 48 CMake checks for which the results were never used. This reduces the time needed to run CMake and simplifies our CMake configuration files. 	2ad1e5a4225ea3173af1cc142959a064b083d9a1
----------------------------
Due to partition_open_files_limit : Bug#16553132 2013-03-26 TEST FAILURE IN MAIN.PARTITION_OPEN_FILES_LIMIT 	40c83363402d6749d8ad0c7ffe9504b9c6fb2c87
----------------------------
Bug#16633515 PERFORMANCE OVERHEAD IN PERFORMANCE_SCHEMA.THREADS.PROCESSLIST_STATE Prior to this fix, the server code executed the following calls to the performance schema for each change in processlist state: - pfs_set_thread_state_v1() - pfs_start_stage_v1() pfs_set_thread_state_v1 sets the THREADS.PROCESSLIST_STATE column with a string. To protect the string pointer, a PFS_lock is used, which causes two atomic operations per call. pfs_start_stage_v1 sets the current thread stage key. The problem is that using atomics causes overhead, and that setting both a state string and a stage key is redundant, since the thread state string is in fact coming from the stage. This fix simplify the instrumentation: - the call to pfs_set_thread_state_v1() is removed - the implementation of column THREADS.PROCESSLIST_STATE now extract the state string from the stage provided by pfs_start_stage_v1. 	ae882a88a10d14f51aa565d8044635d6dab7b39d
----------------------------
The below tests does not exist in MTR hence removing them from the disabled list: i_rpl.rpl_max_allowed_packet_stress funcs_1.charset_collation_1 	7f04b483417036717733462b4114078f1a26b5db
----------------------------
Bug#16629996: Remove more unused #ifdefs This patch removes the following #ifdefs which were never set: - DO_NOT_REMOVE_THREAD_WRAPPERS - DONT_USE_SIGSUSPEND - HAVE_BROKEN_GETPASS - HAVE_BROKEN_ISINF - HAVE_BROKEN_NETINET_INCLUDES - HAVE_BROKEN_PTHREAD_COND_TIMEDWAIT - HAVE_BROKEN_RWLOCK - HAVE_CTHREADS_WRAPPER - HAVE_DARWIN5_THREADS - HAVE_DEC_3_2_THREADS - HAVE_NONPOSIX_PTHREAD_GETSPECIFIC - HAVE_NONPOSIX_PTHREAD_MUTEX_INIT - HAVE_NONPOSIX_SIGWAIT - HAVE_POSIX1003_4a_MUTEX - HAVE_THREADS_WITHOUT_SOCKETS - NO_CPLUSPLUS_ALLOCA - NOT_PACKED_DATABASES - USE_MUTEX_INSTEAD_OF_RW_LOCKS - alpha_linuxport - _some_old_compiler_that_does_not_understand_the_construct_below 	d8926f154cf27cb5b1a1a0032b31c75a850ab5c1
----------------------------
"Merge: a6951df 54bf7d3 Bug	: #16005310 FIx bug - INNODB_ROW_LOCK_TIME_MAX SEEMS TO HAVE AN OVERFLOW Solution: Set diff_time to 0 if finish_time < start_time "	ebe20ab26f3a7c85143096028ed2a8a2f59b5c87
----------------------------
"Bug	:#16005310 FIx bug - INNODB_ROW_LOCK_TIME_MAX SEEMS TO HAVE AN OVERFLOW Solution:Set diff_time to 0 if finish_time < start_time "	54bf7d3c39f37b381bf66425df4b7ed58938a93f
----------------------------
Bug #16083276 GRANT IS SUCCESSFUL FOR ROOT USER TO MAKE IT AS PAM WITH IDENTIFIED WITH CLAUSE Problem: GRANT statement allows 'IDENTIFIED WITH' clause but with a restriction that plugin mentioned in the query should match with the original value of the user. For instance, if a user uses mysql_native_password plugin, GRANT query should have the same plugin in it. This is verified by checking the value of plugin field in mysql.user table. Whenever plugin field is left empty for any particular user, GRANT statement gets confused. The same is observed for root as the root account doesn't have any value in plugin field. Along with the raised issue, few inconsistencies between the execution of SET PASSWORD and GRANT using IDENTIFIED BY are found while switching between mysql_native_password and mysql_old_password plugins. Solution: GRANT statement using the clause IDENTIFIED WITH is no more allowed for existing users since the basic purpose of this clause is to create a user and should rightly throw an error if user is already present. Changes are made in the code in such a way that both SET PASSWORD and GRANT using IDENTIFIED BY can be used to switch between mysql_native_password and mysql_old_password plugins. The hashing is determined by the old_passwords variable. 	bd50c58203024de6ff8503c4fbfb5fb04f7387e3
----------------------------
"Bug#16346443: EMPTY PASSWORDS ARE ALLOWED WITH VALIDATE-PASSWORD-POLICY SET. PROBLEM: Able to create/grant with a blank password even if validate_password plugin is active. SOLUTION: Password strength is checked by calling validate_password plugin (if installed) in case when ""identified by"" clause is not present in CREATE/GRANT query. Password strength is also checked for empty password in ""indentified by password"" clause. "	069f7c18ce9941306a9e796f5d08819ea7fd1199
----------------------------
crund - cleanup, simplified configuring dependencies, removed unused code, improved benchmarking scripts, updated copyright headers 	1386929b107c8432ac8de598aadee04ed90e2616
----------------------------
"New setup scheme Now run ""node configure.js"" to get started "	60c8d3274a763c50be870d0718ea69ba885c8d19
----------------------------
Added the logic to skip the test if ulimit on the system is less than 5000, to the below tests: main.table_definition_cache_functionality sys_var.table_open_cache_basic sys_var.table_definition_cache_basic 	1c6b12fd41aadf969c3f1295c27a6cd31cc3e51f
----------------------------
Fixed the table_open_cache_functionality.test failure on debian builds 	60818041204fde18e4e130a607dac4672ad8d4e6
----------------------------
- WL#6915: 1. expanded tc coverage to cover sceanrio with different value of innodb_undo_logs. 2. fixed issue of assigning non-redo logging. 	7e0add4db100814d87267e9596752298d20ff8bb
----------------------------
Added logic to skip table_open_cache_functionality.test on machines having ulimit <=5000 	59c44c6d3beac62f2d7dbc5ed319f2bc82823f5a
----------------------------
Bug #16401597 - MTR V1 RETURNS INCORRECT PATH TO VARIABLE @@BASEDIR 	77c2756db55752bec5de9eb2b42f745f9b320600
----------------------------
Add the ability to skip certain tests via config file 	67361794dbb90970eeb91c9c5629b04155ebd33d
----------------------------
Cherrypick fixes for binlog_format=MIXED to 7.3 	92548b68182fe73a2755fc28ce340974080e4df2
----------------------------
Cherrypick revert of patch for problem with non unique server_uuid 	511c33d9cbc6690e29c9d46dcd1c786f7ad5f566
----------------------------
Revert BUG#16459136 MYSQLD ON SAME HOST MAY GET SAME SERVER_UUID - although pid() is unique at any given server_start_time, it seems that too small part of the pid value is used when generating the uuid thus making it still not unique enough 	5ba9cf5a1a72265e01214cfeee92e2a3e60c9b18
----------------------------
bug#16271657    3-WAY DEADLOCK ON SEMISYNC REPLICATION AND BINLOG ROTATE Bug#16491597    DEADLOCK WITH GROUP COMMIT The 3-way deadlock is caused by the following scenario: 1) a client doing commit: holds LOCK_commit mutex waits position update from semisync slave in HOOK(after_commit) (waiting for thread 3) 2) a client rotating binlog: holds LOCK_log mutex waits LOCK_commit mutex (waiting for thread 1) 3) binlog_dump thread (mysql_binlog_send): waits LOCK_log (waiting for thread 2) can not send anything to slave No update can be done until rpl_semi_sync_master_timeout passes. To fix the problem, replacing LOCK_commit with a new mutex in mysql_cond_wait(&m_prep_xids_cond, &LOCK_commit) when rotating binlog, and decrementing the prepared XID counter after stotage engine commit, and before invoke after_commit hook. Which also improve the concurrency of group commit. We also resolved a race condition problem from bitfield, which will cause the problem described in Bug#16491597. And refactored related code for adapting flush error and session attach error. Incorrected PS keys assignment was fixed as well. 	a2290a30f6064091e3402ae21678ff911e71c9f9
----------------------------
"Bug #14397360 TEST FAILURES WHILE RUNNING WITH ""--LOWER_CASE_TABLE_NAMES=1"" Problem: ------ The below tests fail when run with --lower_case_table_names=1 option 1)rpl.rpl_lcase_tblnames_rewrite_db 2)rpl.rpl_row_lcase_tblnames 3)main.lowercase_fs_off 4)main.mysql_locale_posix Analysis: -------- In the two rpl tests listed there are test cases to check whether creating tables with upper case names on master results in lower case table names on slave.So the databases/tables on the master should be in upper-case. But when these tests are run with --lower_case_table_names=1 the names are stored lower case and causes result content mismatch failure. The two main suite tests listed use have_case_sensitive_file_system.inc file as these tests are specific for case sensitive file systems. --lower_case_table_names=1 option is not case sensitive. So for these four tests --lower_case_table_names=1 option is not valid. Fix: --- Added ""-- source include/have_lowercase0.inc"" in the two main suite test files. With this include file these tests are skipped when run with --lower_case_table_names=1 and --lower_case_table_names=2 mysqld options. These two are case insensitive options. Created an include file (not_lowercase1.inc) and added this to the two rpl tests mentioned. This will skip the tests if the tests are run with option --lower_case_table_names=1. These tests run when the value of this option is anything other than 1. "	22b1acfae5bd3ecda96772025392b48e266e58fe
----------------------------
Check the value of ulimit instead of open_files_limit. They may differ. 	417d15bb76149a209d89b0a794230040b95764f7
----------------------------
"Bug #12546953   ""SHOW VARIABLES LIKE 'DATADIR';"" RETURN EMPTY. Post push fix "	d0b9711eb32c975a97ddc8470dffa49b19501034
----------------------------
Added have_query_cache_disabled.inc to enable skipping of tests when query cache is enabled. ps_w_max_indexes_64.test should now skip with QC until Bug#16451494 is fixed. 	36924fd15a240096b21aac0ade30316cdd0c44f2
----------------------------
Bug #16244691 SERVER GONE AWAY ERROR OCCURS DEPENDING ON THE NUMBER OF TABLE/KEY RELATIONS Problem: When there are many tables, linked together through the foreign key constraints, then loading one table will recursively open other tables.  This can sometimes lead to thread stack overflow.  In such situations the server will exit. I see the stack overflow problem when the thread_stack is 196608 (the default value for 32-bit systems).  I don't see the problem when the thread_stack is set to 262144 (the default value for 64-bit systems). Solution: Currently, in InnoDB, there is a macro DICT_FK_MAX_RECURSIVE_LOAD which defines the maximum number of tables that will be loaded recursively because of foreign key relations.  This is currently set to 250.  We can reduce this number to 33 (anything more than 33 does not solve the problem for the default value).  We can keep it small enough so that thread stack overflow does not happen for the default values.  Reducing the DICT_FK_MAX_RECURSIVE_LOAD will not affect the functionality of InnoDB.  The tables will eventually be loaded. rb#2058 approved by Marko 	f51229ab9fcaaea234716cc09222299a58e1957a
----------------------------
Merge: 91811c9 3043e17 BUG#16541422: LOG-SLAVE-UPDATES + REPLICATE-WILD-IGNORE-TABLE FAILS FOR USER VARIABLES Merge from mysql-5.6 into mysql-trunk. 	f6d2ef76549b5588c224dd06b019397373993612
----------------------------
Merge: 972ef12 995fc64 BUG#16541422: LOG-SLAVE-UPDATES + REPLICATE-WILD-IGNORE-TABLE FAILS FOR USER VARIABLES Merge from mysql-5.5 into mysql-5.6 	3043e173648afa255b7831dfce557f41d17a492c
----------------------------
Merge: 1928d6f b0cf2b6 BUG#16541422: LOG-SLAVE-UPDATES + REPLICATE-WILD-IGNORE-TABLE FAILS FOR USER VARIABLES Merge from mysql-5.1 into mysql-5.5. 	995fc6432a0bef95a2c9fc46ed1737f483dfc4a4
----------------------------
BUG#16541422: LOG-SLAVE-UPDATES + REPLICATE-WILD-IGNORE-TABLE FAILS FOR USER VARIABLES Fixed possible uninitialized variable. 	b0cf2b6a58ff68248dc8a4acd7e7e9321b89eff3
----------------------------
"Bug#11829838: ALTER TABLE NOT BINLOGGED WITH --BINLOG-IGNORE-DB AND FULLY QUALIFIED TABLE Problem: ======= An ALTER TABLE statement is not written to binlog if server started with ""--binlog-ignore-db some database"" and 'fully qualified' table names are used in the ALTER TABLE statement altering table different from current database context. Analysis: ======== The above mentioned problem not only affects ""ALTER TABLE"" statements but also to all kind of statements. Once the current default database becomes ""NULL"" none of the statements will be binlogged. The current behaviour is such that if the user has specified restrictions on which database needs to be replicated and the default db is not specified, then do not replicate. This means that ""NULL"" is considered to be equivalent to everything (default db = null implied ignore don't log the statement). Fix: === ""NULL"" should not be considered as equivalent to everything. Since the filtering criteria is not equal to ""NULL"" the statement should be logged into binlog. "	0f4195fa0cea3493ee4debf8a841913759d436f6
----------------------------
Bug #16244691 SERVER GONE AWAY ERROR OCCURS DEPENDING ON THE NUMBER OF TABLE/KEY RELATIONS Problem: When there are many tables, linked together through the foreign key constraints, then loading one table will recursively open other tables.  This can sometimes lead to thread stack overflow.  In such situations the server will exit. I see the stack overflow problem when the thread_stack is 196608 (the default value for 32-bit systems).  I don't see the problem when the thread_stack is set to 262144 (the default value for 64-bit systems). Solution: Currently, in InnoDB, there is a macro DICT_FK_MAX_RECURSIVE_LOAD which defines the maximum number of tables that will be loaded recursively because of foreign key relations.  This is currently set to 250.  We can reduce this number to 33 (anything more than 33 does not solve the problem for the default value).  We can keep it small enough so that thread stack overflow does not happen for the default values.  Reducing the DICT_FK_MAX_RECURSIVE_LOAD will not affect the functionality of InnoDB.  The tables will eventually be loaded. rb#2058 approved by Marko 	01c06bc50ba98f5695b6f5503d053f2927212879
----------------------------
Bug#16541422 LOG-SLAVE-UPDATES + REPLICATE-WILD-IGNORE-TABLE FAILS FOR USER VARIABLES At logging a first Query referring a user var, the slave missed to log the user var. It appears that at execution of a Uservar event the slaver applier thought of the variable as already logged. The reason of misjudgement is in coincidence of query id:s: of one that the thread holds at Uservar execution and another one that the thread sees at the Query applying. While the two are naturally different in the regular execution branch (as two computational events are separated as individual events), in the deferred applying case the User var execution effectively belongs to its Query processing. Fixed with storing the Uservar parsing time (where desicion to defer is taken) query id to temporarily substitute with it the actual query id at the Uservar execution time (along with its query). Such manipulation mimics behaviour of the regular applying branch. 	6c47bd279fa515604eca36377c59e26cfa838e09
----------------------------
Bug #16417224 BINLOG_FORMAT DEFAULTS TO STATEMENT FOR CLUSTER Revert default change as too many testcases get upset. Modify Ndb handler to change global binlog_format to MIXED from STATEMENT at handler initialisation. When this happens, a message is produced to the server log. 	739d73a89fe83b78e09751f9ec8faaf25c80b59b
----------------------------
Due to failure in partition_open_files_limit (Bug #16553132). 	11f5e4d479bb9f529d634232b9b010c89b223b17
----------------------------
Don't run new binlog test in embedded configurations. 	f3d97fb496290a661e50fa904a90745b2075ba0c
----------------------------
Bug #16417224 BINLOG_FORMAT DEFAULTS TO STATEMENT FOR CLUSTER. Adding testcase to check the default binlog format. In mysql-5.6-cluster-7.2, we also fix the default binlog format. 	bcb78a3664197e84255ec188fcbe231f99912551
----------------------------
Bug#16203623 NDB : IMPROVE HANDLING OF LAGGING ROW CHANGE EVENT SUBSCRIBERS: Setting size of GCP pool to the value of MaxBufferedEpochs and introduced new config parameter MaxBufferedEpochBytes. Added new DUMP 8013 to display lagging subscribers 	1a87543019189186daaf87995118f8ced91b4987
----------------------------
Fix Bug #16498810 - WRONG FILENAME IN ERROR MESSAGE FOR INNODB MEMCACHED CONFIG rb://2216 approved by Kevin 	decd7489ce27beb08b44d93856907f5614a38221
----------------------------
Merge: 2a2cb2e d38dd4e BUG#16438800 - SLAVE_MAX_ALLOWED_PACKET NOT HONORED ON SLAVE IO CONNECT Merge from mysql-5.6 -> mysql-trunk 	6262ce6bfbe01ae5883f2e6ed3b822df9597be37
----------------------------
Merge: c977035 1a3bbaf BUG#16438800 - SLAVE_MAX_ALLOWED_PACKET NOT HONORED ON SLAVE IO CONNECT Merge from mysql-5.5 -> mysql-5.6 	d38dd4ee599f1279d598f304eb4a5194a0c132ee
----------------------------
BUG#16438800 - SLAVE_MAX_ALLOWED_PACKET NOT HONORED ON SLAVE IO CONNECT Problem - When the slave was disconnected from the master, under certain conditions, upon reconnect, it will report that it received a packet larger the slave_max_allowed_packet which causes the replication to stop. Analysis -The reason of this failure is that on reconnect the slave sets the max_allowed_packet from the master's mi->mysql object which keeps the max_allowed_packet as 1MB. This causes the slave to report such error on recieving packet bigger than 1MB. START SLAVE on the slave fixes the problem since it restarts slave threads which initializes the max_allowed_packet to slave_max_allowed_packet. Fix - The problem is fixed by some code refactoring and introduction of a new function which updates the max_allowed_packet for the THD object of the slave thread and the mysql->options max_allowed_packet. 	1a3bbafdb9a8e9da1d592883871eb4108e7eefea
----------------------------
Bug#16430532 WRONG SIZING HINTS USED IN THE PERFORMANCE SCHEMA Before this fix, the server did perform the following actions during startup. 1) Retrieve the value of - max_connections - table_definition_cache - table_open_cache - open_files_limit from the user configuration provided in my.cnf, and use this settings as a base to compute performance_schema auto sized variables. 2) Then, later in the startup process: - max_connections could be trimmed down - table_definition_cache default value could be changed - open_files_limit could be either computed (replacing the 0 value) or adjusted. Because of the order used, the performance schema automated sizing was based on incorrect data. With this fix, the server startup code has been changed to perform part 2) first, and only when all the proper sizing parameters are finally computed and adjusted, then perform the performance schema initialization in part 1) Also, the code performing 2) has been cleaned up to be maintainable. Clarity in this complicated process (due to related dependencies between configuration settings) is critical here. 	3f7a80ac3d3a14cc15331a6a164b5aa1ba3c5380
----------------------------
Improve configuration file handling for jscrund jscrund add error handling for configuration file fix bug in configuration file options handling allow configuration file for all adapters, not just mysql and ndb jscrund_config.dist fix comment line to allow setting options jscrund_sql handle properties passed in options translate options.properties to felix properties 	94585183c2e2270848094164c00b9cdea5624460
----------------------------
Bug#16317443: Re-execute procedure, crash in Item_field::fix_outer_field Bug#16317363: Re-execute procedure, crash in mark_select_range_as_dependent This problem here is that we reach ::fix_outer_field when we should not, which happens because cached_table->select_lex of an Item_field no longer matches the select_lex of the name resolution context. It is also important to notice that this happens for a merged view, regular table fields are not affected. The mismatch is caused by 2 problems: 1. is a lacking update of TABLE_LIST::select_lex in convert_subquery_to_semijoin(). This code: for (TABLE_LIST *emb= tl->embedding; emb && emb->select_lex == old_sl; emb= emb->embedding) emb->select_lex= parent_join->select_lex; updates the select_lex of all leaf tables and embedding join nests, however it is necessary that all join nests have a correct select_lex pointer for this to work, so the fix is to add an assignment to ::select_lex in st_select_lex::nest_last_join(). 2. is a lacking update of TABLE_LIST::select_lex when a view is merged into a query. It is solved quite elegantly by replacing the pointer in repoint_contexts_of_join_nests(). We have also taken the opportunity to replace the static function alloc_join_nest() with a more general function TABLE_LIST::new_join_nest(), which assigns values to all important join nest fields. sql/sql_optimizer.cc In convert_subquery_to_semijoin(), remember to set select_lex pointer when creating new join nests. Function alloc_join_nest() is replaced with TABLE_LIST::new_join_nest(). sql/sql_parse.cc In st_select_lex::nest_last_join(), set select_lex pointer. sql/sql_view.cc In repoint_contexts_of_join_nests(), update select_lex pointer of embedded join nests to point to the select_lex of the outer query. sql/table.cc Added function TABLE_LIST::new_join_nest(). sql/table.h Added function TABLE_LIST::new_join_nest(). 	a3af1be6f9fc95aa6c9d08d5f058ca33c663697e
----------------------------
"BUG#16459136 MYSQLD ON SAME HOST MAY GET SAME SERVER_UUID - Use the process idenfier during  ""uuid generator initialization"" instead of thd->status_variables.bytes_sent which may still be zero. This avoids that another mysqld started at the same time on the same host get the same ""server_uuid"". - Remove workaround from mtr.pl "	b0253cd9a0c09b93d8071b7f82572b4a71e24e6f
----------------------------
Bug#16387243 FEATURE CREEP FOR NDBCLUSTER IN OPT_RANGE.CC - Remove the two usages of WITH_NDBCLUSTER_STORAGE_ENGINE in opt_range.cc 	9215eaecbeb4e16152e3f7efcbbceed198ab80ae
----------------------------
"BUG#16460978 - MYSQL CRASHES TRYING TO START SLAVE Problem - ======== P1. At the time the slave threads are started (during server startup) there is no THD context. Thence, current_thd cannot be used. However it is being used transitively through ER(ER_SLAVE_FATAL_ERROR), therefore, the access to invalid memory. P2. Both errors reported exhibit the same error message, specifically ""master info"". Fix - ==== S1. Insted of using ER(X) if no THD context is available we use ER_DEFAULT(x) which prevents server crash. S2. Also the error message has been made more verbose ie. different for the master-info and relay-log-info creation problem. "	b32d4e842f96f315f85f6792fe3385089b0b20ca
----------------------------
Bug#16303363:MYSQLDUMP --SET-GTID-PURGED=AUTO DOES NOT DETECT IF MYSQLD HAS GTIDS 1) 5.6.5 introduced GTIDs. mysqldump 5.6 was made compatible  to use GTIDs 2) However, in versions < 5.6, where GTIDs are not even defined, mysqldump 5.6 fails as it cannot execute 'SELECT @@GTID_MODE' 3) Using --set-gtid-purged=AUTO, should detect whether the server has GTIDs enabled or not.  However, this option works only for 5.6 versions. The present patch replaces the query 'SELECT @@GTID_MODE' with 'SHOW VARIABLES LIKE 'GTID_MODE'. The later query returns an empty row for pre 5.6 servers. 	4a8f80d385982422679d7168a3355d861915d583
----------------------------
Merge: 9470996 9421172 WL#6355 Semisync: externalize transactions only after ACK received Abstraction =========== Before this worklog, semisync waits for slave's ACKs just after engine committing. It means other sessions could see the data before it is replicated to slave, even through current session is till waiting that the 'COMMIT' statement ends successfully. So there is a chance that data losts integrity if the server crashes just before data is replicated to slave and any other session already read the data and is done some operations. This worklog provides users an alternative semisync wait point which can guaratee that other sessions could not see the data before it replicated to slave. Implementation ============== The worklog added a semisync master option called rpl_semi_sync_master_wait_point. It also a global system variable which can be changed dynamically. It is an enumaration and has two possible values: - AFTER_COMMIT It means the original behaviur. Semisync waits just after engine committing. - AFTER_SYNC It means semisync waits just after binlog file is synced to disk. It is before engine committing and can guaratee other sessions could not see the data before it is replicated to slave. It is the new thing implemented in this patch. The default value of rpl_semi_sync_master_wait_point is AFTER_SYNC. Replication interface is changed, so the major version of replication interface is increased. It means the plugin can not be used on the old servers, vice versa. 	e2a150cc6ab285d352d424fc63afcf6212bf86ac
----------------------------
"Bug #16352044 	SYS_VARS.SECURE_FILE_PRIV IS UNSTABLE ON PB2 Problem : secure_file_priv test fails on pb2 with error ""file already exists"" Analysis : In the test, a file ""bug50373.txt"" is created under $MYSQL_TEST_DIR/. All workers started by MTR will translate this into the same storage place. If this is the case when tests are run in parallel then failures similar to the one mentioned above can be observed. Fix : Any worker started by MTR should have its own unique storage area which is not shared with other workers. Hence, changed the directory to $MYSQLTEST_VARDIR/tmp/ "	df4e8d02f8ec52ad1cd0d5e3512a86f6964fa43f
----------------------------
Bug #16316828 WL 5092 'REDUCED BINLOG SIZE FOR RBR' CAUSES NDB CONFLICT RESOLUTION FAILURES For initial releases of mysql-5.6-cluster-7.3, we do not support the binlog_row_image option - it should have no effect for cluster tables. We implement this by setting the HTON_NO_BINLOG_ROW_OPT flag which should stop the replication layer from acting on the binlog row image option. However, our tests show that this option continues to take effect. This patch adds a further check in the binlog.cc::binlog_prepare_row_images function to ensure that no trimming of the write_set occurs when writing rows to the Binlog, if the handler involved does not have the flag set. Testing can be done by running with a handler with this flag set, varying the binlog row image flag, and checking that the recorded events are unaffected.  This testing will be pushed separately to cluster trees. 	6142c90125820632c94eeecc704e2430594521b8
----------------------------
BUG#16484323: REPLICATION W/GTIDS FAILS WITH ERROR 1778 WHEN RUNNING ANALYZE OR REPAIR TABLE After BUG#16062608 fix, when a command that causes a implicit commit but does not change data is executed when @@SESSION.GTID_NEXT is different from AUTOMATIC, a error is thrown saying that this command is not allowed. Commands ANALYZE and REPAIR TABLE, which cause a implicit commit, were not correctly identified as update queries, so when them were replicated slave raised the error. To fix this incorrect behaviour, ANALYZE and REPAIR TABLE commands are now identified as update queries. 	d00523c88474e9855d6d4a618cfe6c8f627a2d6e
----------------------------
better use of jscrund config file 	60b38bac153bf8aa98b9f2468294d22725f0674b
----------------------------
"Bug#16492529 FIX BROKEN BUILD WITH SOLARIS/GCC 32BIT MODE On solaris/32bit it is important to do this: // First include (the generated) my_config.h, to get correct platform defines. #include ""my_config.h"" before including any system headers. The problem was that the FILE_OFFSET_BITS got redefined. "	be3266b9b562827cde8436c7f725c219509afd74
----------------------------
perftest: jscrund reads connection properties from jscrund.config 	fff2546f770120bc5c7c553c394ad44db72e1362
----------------------------
BUG#16484323: REPLICATION W/GTIDS FAILS WITH ERROR 1778 WHEN RUNNING ANALYZE OR REPAIR TABLE After BUG#16062608 fix, when a command that causes a implicit commit but does not change data is executed when @@SESSION.GTID_NEXT is different from AUTOMATIC, a error is thrown saying that this command is not allowed. Commands ANALYZE and REPAIR TABLE, which cause a implicit commit, were not correctly identified as update queries, so when them were replicated slave raised the error. To fix this incorrect behaviour, ANALYZE and REPAIR TABLE commands are now identified as update queries. 	ca9fcac9c91921b4f9a3947af1a3afb7c88398a1
----------------------------
BUG#16366994 - DBUG_ASSERT HIT WHILE EXECUTING UPDATE OR DELETE STATEMENT ANALYSIS : When an UPDATE or DELETE statement is being executed and another connection happens to hold locks being accessed by this thread, then multi_range_read_next() called by the range optimizer could fail with HA_ERR_LOCK_DEADLOCK or HA_ERR_LOCK_WAIT_TIMEOUT. However, this was not detected by mysql_update() and no error was reported to the Diagnostics Area. Hence an assertion would be triggered in Protocol::end_statement() when trying to send OK or ERROR to the client. On release builds the bug caused OK to be sent to the client for a statement that had in fact failed. FIX : If call to select->quick->reset() in mysql_update() or mysql_delete() fails then an error is reported using file->print_error() to set DA to a proper state. 	6c53cb7049cb0c6b24bf8b13ddca28aa32517fc6
----------------------------
BUG#16366881 - LOCK TIMEOUT DURING FILESORT CAUSES ASSERT ANALYSIS : When a query is being executed and another connection happens to hold locks being accessed by this thread, then multi_range_read_next() called by the range optimizer could fail with HA_ERR_LOCK_DEADLOCK or HA_ERR_LOCK_WAIT_TIMEOUT. However, this was not detected by find_all_keys() and no error was reported to the Diagnostics Area. Hence an assertion would be triggered in filesort(). On release builds the consequence of this bug was that the ER_FILSORT_ABORT error was sent to the client rather than the real error reported by the storage engine. FIX : If call to select->quick->reset() in find_all_keys() fails then an error is reported using file->print_error() to set DA to a proper state. 	a425a0aebdf442e284db8ad1a1d9cc7354cb223c
----------------------------
Bug#14749800 - ERROR 1571 (HY000): ERROR DURING STARTING/ STOPPING OF THE SCHEDULER. ERROR CODE. Bug#14781590 - SET GLOBAL EVENT_SCHEDULER = 1 SHOULD BE SET TO 0 ON ERROR Fixing pb2 failure. 	32775c93ef5aa4bc4b3bc3994ceff38d87e61ef1
----------------------------
Bug#14749800 - ERROR 1571 (HY000): ERROR DURING STARTING/ STOPPING OF THE SCHEDULER. ERROR CODE. Bug#14781590 - SET GLOBAL EVENT_SCHEDULER = 1 SHOULD BE SET TO 0 ON ERROR Post-push fix: Fix broken windows build. 	d7771d74457f0ebe9e49c70cfaf9ee28178df372
----------------------------
Fix for Bug#14554519 SHOULD NOT SET SOCKET OPTIONS 'SO_RCVBUF' AND 'SO_SNDBUF' WHEN NOT CONFIGURED This fix will only conditionally set the socket options SO_RCVBUF, and SO_SNDBUF if they was specified in config.ini. If these config parameters was not specified, the OS is free to choose the size on its own. The default value of resp. 70080/71540 for the Rcv/snd buffer is also removed, and this change has to be reflected in the MySQL Cluster documentation. 	f1e847a1445101923b2cd62c41ef331629f05712
----------------------------
Bug#14749800 - ERROR 1571 (HY000): ERROR DURING STARTING/ STOPPING OF THE SCHEDULER. ERROR CODE. Bug#14781590 - SET GLOBAL EVENT_SCHEDULER = 1 SHOULD BE SET TO 0 ON ERROR Analysis: ----------- In cases when we failed to create thread for event scheduler, event execution or simply for handling new connection nothing was logged into error log. Also system variable EVENT_SCHEDULER was not reset to OFF when we failed to create event scheduler thread. This caused wrong impression that event scheduler was running in cases when it is not. Fix: ----------- Added writing message with errno to error log in the above cases. Also adjusted other messages which were written to log when we failed to create thread in other cases to contain an errno. Also reset system variable EVENT_SCHEDULER to OFF on failure to event scheduler create thread. But logging error for thread creation failure for new connection may spam error log.Used log throttling mechanism to avoid spamming error log in such a situation. To do this kept generic log-throttling functionality in Log_throttle class, moved functionality specific for slow-log to Slow_log_throttle class. Added new Error_log_throttle class to be used for throttling of writing to error log. 	a2b350144c72ca2fb2ce836738f1443e979acae1
----------------------------
"BUG#15930031 - SETTING SLOW_QUERY_LOG_FILE TO A VALUE WITHOUT A ""="" SIGN ENABLES GENERAL LOG DESCRIPTION: While checking server startup options from configuration file, MySQL checks if the option is a struct option, by finding dot ('.') and checking if dot lies before or after '='. If dot is before '=' then the startup option will be just after dot. If dot lies after '=' then it is a part of argument for startup option. If '=' is not in the startup option and dot is there, then check_struct_option() should return pointer to the begin of startup option. But in practice even if the argument of startup option has a '.', check_struct_option() treats it as key_name. For example if ""slow_query_log_file slow1.general_log"" is in configuration file, general log will be turned on. FIX: Condition added to make sure that dot is considered as a part of startup option only if it is before '=' sign and there is no space before dot. "	68459c20ad6ed8651f743565493ac7b5337a7605
----------------------------
Add less rows in non temp table when innodb_change_buffering is set to none 	c272ba401e67c8ea8a713f700856d6c63e1f1a52
----------------------------
"ndb_dist_priv_default always conecting to first server - fix problem in ndb_dist_priv_default.test which always connected to first master although a differen port was used, this is a ""classic"" and caused by using localhost in the connect command cuasing mysqltest(and MySQL C API) to use the default socket, thus effetively ignoring the port option. "	2a9243b555c3bbf2d3e83ac5a9ba104a0ec3c6fe
----------------------------
BUG#16069598 - SERVER CRASH BY NULL POINTER DEREFERENCING IN MEM_HEAP_CREATE_BLOCK() PROBLEM ------- If we give start mysqld with the option --innodb_log_buffer_size=50GB ,then  mem_area_alloc() function fails to allocate memory and returns NULL.In debug version we assert at this point,but there is no check in release version and we get a segmentation fault. FIX --- Added a log message saying that we are unable to allocate memory. After this message we assert. [Approved by Kevin http://rb.no.oracle.com/rb/r/2065 ] 	3e3b0ee0a819dc6d08ba8dceaf9a9544c63b8457
----------------------------
WL#6355 Semisync: externalize transactions only after ACK received Abstraction =========== Before this worklog, semisync waits for slave's ACKs just after engine committing. It means other sessions could see the data before it is replicated to slave, even through current session is till waiting that the 'COMMIT' statement ends successfully. So there is a chance that data losts integrity if the server crashes just before data is replicated to slave and any other session already read the data and is done some operations. This worklog provides users an alternative semisync wait point which can guaratee that other sessions could not see the data before it replicated to slave. Implementation ============== The worklog added a semisync master option called rpl_semi_sync_master_wait_point. It also a global system variable which can be changed dynamically. It is an enumaration and has two possible values: - AFTER_COMMIT It means the original behaviur. Semisync waits just after engine committing. - AFTER_SYNC It means semisync waits just after binlog file is synced to disk. It is before engine committing and can guaratee other sessions could not see the data before it is replicated to slave. It is the new thing implemented in this patch. The default value of rpl_semi_sync_master_wait_point is AFTER_SYNC. 	9421172865a396ddae4a88703271dcdd6cad5e1a
----------------------------
"Merge: 1361a3d 08be376 WL#6047 - Do not allocate trx id for read-only transactions Read view creation is expensive. Two optimisations have been made over the past year that mitigate the problem: 1. Special handling of auto-commit-non-locking-ro transactions 2. START TRANSACTION READ ONLY; explicitly For users to take advantage of these improvements, they have to use autocommit or explicitly make the changes to their code to tag the transactions as read-only. This fix handles the case where users don't have to make any changes to their code and by default puts all transactions on the read-only list unless the transaction is tagged as read-write or is determined to be an ac-nl-ro transaction. The former is put on the read-write transaction list and a rollback segment is assigned to it. However, for all other transactions, they are put on the read-only list but a rollback segment is not assigned to such transactions. They are also not flagged as read-only, because their intentions are unknown. If a transaction that is tagged as read-only but writes to a temporary table it will be assigned a ROLLBACK SEGMENT when it first attempts to write to the temporary table. A transaction is allocated a new ID iff: 1. Read only transaction writing to a TEMP table 2. When a transaction acquires an X or IX lock on a table 3. Explicitly tagged as a read-write transaction Otherwise all transactions by default are treated as read-only and an ID is not assigned to them, note: they are not tagged as read-only. Only transactions that are explicitly started with ""START TRANSACTION READ ONLY"" are set as read-only. Some user visible changes: For I_S and SHOW ENGINE INNODB STATUS; we print the trx_t instance (pointer) value if the transaction has not been assigned an ID. rb#1059 Approved by Inaam Rana and Jimmy Yang. "	951e8b3ad71c35dddbaa60008626d7000918aab2
----------------------------
Fix Bug #16409494 - INNODB_FT_CONFIG TABLE DOES NOT APPEAR TO UPDATE rb://2102 approved by Sunny Bains 	90f2cfba60327589ed8c411b424521a47d51e1d7
----------------------------
"Enabled embedded run for the following tests as ""Bug #16029012 MTR SHOULD USE INNODB AS THE DEFAULT STORAGE ENGINE FOR EMBEDDED SERVERS"" is fixed. 1) partition_exch_qa_2 2) character_set_database_func 3) collation_database_func 4) collation_server_func 5) log_slow_admin_statements_func 6) max_seeks_for_key_func 7) sql_quote_show_create_func "	1a450ac4b858427f98c0d2623b37c640bee03f53
----------------------------
"Merge: 9fee370 00a9c56 BUG#16062608: REPLICATION COMMANDS IMPLICIT COMMIT AND SET GTID_NEXT=""UUID:X"" Merge from mysql-5.6 into mysql-trunk. "	b3fc432f5778c80e63a1ef028ec53692a128287d
----------------------------
"BUG#16062608: REPLICATION COMMANDS IMPLICIT COMMIT AND SET GTID_NEXT=""UUID:X"" When @@SESSION.GTID_NEXT is set to ""UUID:X"" and a statement that implicit commits but does not log changes is executed, like START SLAVE, that GTID is logged as a empty transaction, when on the same scenario with gtid-mode=OFF nothing is logged. This situation is not desirable since it may cause inconsistency problems: 1) DBA is performing a restore or recovery; 2) She/he is applying some empty transactions on slave to avoid problematic transactions from master; 3) Made a mistake and set a not need to skip GTID and didn't revert it. 4) Start slave. 5) That logged GTID, which will cause that the transaction from master will be skipped, will eventually cause inconsistency problems. To avoid that kind of mistakes, when a command that causes a implicit commit but does not change data is executed when @@SESSION.GTID_NEXT is different from AUTOMATIC, a error is thrown saying that this command is not allowed. "	00a9c56d9725122a35e6a5c76b7a456ec77f753e
----------------------------
mcc - use socket option only if not windows, rewrite start cluster functionality 	fb2416615f758f8101f019f97f6f3946509a072b
----------------------------
Merge: 41bbe85 171cac5 Bug #16197860 MYSQL_INTALL_DB DOES NOT WORK IN SOLARIS 10 SPARSE ROOT ZONES Bug #68117 mysql_intall_db does not work in solaris 10 sparse root zones Do not abort if unable to write config file, but remember and write an appropriate warning instead of usual text at end. 	735edc90390d715027b5bb75abf4b5a9c01b8199
----------------------------
Bug #16197860 MYSQL_INTALL_DB DOES NOT WORK IN SOLARIS 10 SPARSE ROOT ZONES Bug #68117 mysql_intall_db does not work in solaris 10 sparse root zones Do not abort if unable to write config file, but remember and write an appropriate warning instead of usual text at end. 	171cac54865ee8b6fe49c30b7011571264d63f9e
----------------------------
Bug#16414044 INCONSISTENT INNODB PERFORMANCE_SCHEMA KEY DECLARATIONS Rename recv_writer_thread and hash_table_locks from old names that contained spaces instead of underscores. Approved by Jimmy Yang 	83919621cf9c11e328dffa3c9135a9bfd609e24a
----------------------------
Bug#16414644 ASSERTION FAILED: SIZE == PFS_ALLOCATED_MEMORY Before this fix, the command SHOW ENGINE PERFORMANCE_SCHEMA STATUS could report wrong amount of memory allocated, when the amount of memory used exceeds 4GB. The problem is that size computations are not done using size_t, so that overflows do occur, truncating the results. This fix compute memory sizes properly with size_t. Tested manually. No test script provided, as the script would need to allocate too much memory for the test. 	23a904ade7f52d40de1f1aa9a032d2c5a2422579
----------------------------
"Bug #16394472 TIMESTAMP LOGIC REMAINS PARTLY NON-STANDARD WITH EXPLICIT_DEFAULTS_FOR_TIMESTAMP http://dev.mysql.com/doc/refman/5.6/en/timestamp-initialization.html says ""In addition, you can initialize or update any TIMESTAMP column to the current date and time by assigning it a NULL value, unless it has been defined with the NULL attribute to permit NULL values. "". This behaviour is documented and we need to keep it for backward compatibility. However, if the option explicit_defaults_for_timestamp is on (option which was introduced in 5.6), we here introduce a better, standard-compliant behavior: in that case, if inserting NULL in a TIMESTAMP NOT NULL column, we return an error, like we already do for other types. "	abeae9626a7d603e9105ece5b721b8c46a0cf4f1
----------------------------
Bug#16341673: ASSERTION FAILED: THD->TRANSACTION.XID_STATE.XID.IS_NULL(), FILE TRANSACTION.CC, The triggered assert checks that the XA transaction state is properly reset before trying to start an XA transaction. The problem was that it could be triggered if a statement had failed in autocommit mode right before XA START was issued. The bug was that rollback of statement transactions in auto commit mode did not call transaction.cleanup(). This function, among other things, resets XID state. And reset XID state is checked for during XA START. This patch fixes the problem by reverting to 5.5 behavior and calling transaction.cleanup() for rollback in autocommit mode. This was a regression introduced in 5.6 by WL#5223. 	1cae793dff64592842cebbb724e62d6293a91c85
----------------------------
Bug #13010061/Bug # 14506305:   SERVER SHOULD WARN WHEN NEEDED AUTHENTICATION  PLUGIN IS NOT LOADED This fix fixes the above two bugs by introducing a new check at server startup and FLUSH PRIVILEGES that iterates  over the list of the user accounts, checks if one of the   conditions described in the above two bugs is met and  logs an appropriate warning in the server log.  In particular warnings will be generated for users with sha256 and server started without ssl/rsa config. The check will slow down FLUSH PRIVILEGES and server  startup, so a new boolean command line option --validate-user-plugins=[ON|OFF], default ON is added to allow turning it off for installations that don't need this additional safety net. Test cases for various combinations of options added. Existing test results updated as needed. 	28decda679880f17b3c6ff2244d70884c8f36f11
----------------------------
Bug#16409223: Remove HAVE_RTREE_KEYS, BIG_TABLES and OPTIMIZER_SWITCH_ALL #ifdefs This patch removes the HAVE_RTREE_KEYS, BIG_TABLES and OPTIMIZER_SWITCH_ALL #ifdefs. They were always set and we don't support turning them off. 	77b99649b0848f0f860f589880738109a142a25d
----------------------------
BUG#16391701: REMOVE HAVE_EVENT_SCHEDULER, DISABLE_GRANT_OPTIONS, DONT_ALLOW_SHOW_COMMANDS, SOLAR Follow-up patch. Remove some outdated comments referencing DISABLE_GRANT_OPTIONS from MTR v1/v2. 	726dc05adbdd1552d2564de4742a2169bdb5d324
----------------------------
Bug#16372927: STACK OVERFLOW WITH LONG DATABASE NAME IN GRANT STATEMENT Description: A missing length check causes problem while copying source to destination when lower_case_table_names is set to a value other than 0. This patch fixes the issue by ensuring that requried bound check is performed. 	367e98173f500a34c3b0870ea947fb3184afc2de
----------------------------
"Bug#16325175: Function ifnull ignored when used with some others selects The problem statement has an aggregated, non-grouped outer query with an aggregated, non-grouped subquery in the SELECT list. The outer query has no rows, so in end_send_group() it calls no_rows_in_result() for all items in the SELECT list. For a scalar subquery, this causes ""no_rows"" to be set true, which later prevents the subquery from being evaluated when sending the result row for the outer query. This behavior was introduced with the fix for 13742712, where the inner subquery was dependent upon the outer, and evaluating the inner subquery caused references to unassigned columns in the outer query, when the outer query has no rows. However, in this bug case, the inner query is not dependent upon the outer query, and thus should be evaluated when sending data. The bug fix is to check whether the inner query is dependent upon the outer in Item_singlerow_subselect::no_rows_in_result(), and setting ""no_rows"" for this case only. Notice however that the case of dependent inner query is invalid according to standard SQL: setting sql_mode only_full_group_by rejects a query with dependent inner query with error 1140. Another problem with setting ""no_rows"" for such queries is that a COUNT function may return NULL, even though the function is specified to always return a non-negative integer. However, as this is an invalid query according toe the SQL standard, we will not worry about that problem for now. sql/item_subselect.cc In Item_singlerow_subselect::no_rows_in_result(), set no_rows true only when subquery is dependent on the outer query. "	37c5e9b22a7e9f4bb4832db55ed9a1ced93af12a
----------------------------
Fix for Bug#16328373 ASSERTION FAILED: ROWIDS_BUF < ROWIDS_BUF_END The assert in DsMrr_impl::dsmrr_fill_buffer() fires due to the buffer space to use for sort buffer is too small to store a single primary key. The primary key is in this case large since it contains the prefix of a BLOB. The buffer space to use for sort buffer is provided by the BKA implementation. The query is run with a very small join buffer of only 128 bytes. When BKA is used, the first part of the join buffer is used for storing the fields from the first table while the last part is used as sort buffer for the DS-MRR implementation. In JOIN_CACHE::set_constants() there is already code for handling the situation when the specified join buffer is too small. The code adjusts the size of the join buffer if the size specified by join_buffer_size is so small that it can not store a single record. This code does not take into account that there needs to be room in the join buffer for the DS-MRR sort buffer when BKA or BKA-unique is used. The fix for this problem is to extend JOIN_CACHE::set_constants() so that when it computes the minimum size the join buffer can have, it will include space for a minimal DS-MRR sort buffer. 	9de49c571a7dec2b50d1bfa3b44d72f6e3106b72
----------------------------
BUG#16391522: REMOVE QUERY CACHE #IFDEFS This patch removes #ifdef HAVE_QUERY_CACHE and #ifdef USE_QUERY_CACHE. They were always set and we don't support turning them off. The patch also removes some QC macros that are no longer needed. 	ecc6e98affe48c36e61b2ca8d51769e2f85061d5
----------------------------
BUG#16391701: REMOVE HAVE_EVENT_SCHEDULER, DISABLE_GRANT_OPTIONS, DONT_ALLOW_SHOW_COMMANDS, SOLAR This patch removes the following #ifdefs: - HAVE_EVENT_SCHEDULER (set except for embedded server) - DISABLE_GRANT_OPTIONS (never set) - DONT_ALLOW_SHOW_COMMANDS (never set) - SOLAR (never set) 	bde138cd03cd2dc642f1f75551219f146da63d58
----------------------------
"BUG#11745049 - LOG_ERROR VARIABLE IS BLANK WHEN NOT EXPLICITLY STATED IN MY.CNF Post push fix: The test script was expecting empty string when it reads @@GLOBAL.log_error. With the fix, we now return string 'stderr', and hence it failed. Now .inc file is fixed accordingly. Additionally just updated ""STDERR"" to lower case (as general representation of Standard Error stream). "	e31a49fc4e92e165174fa2d240ac4959967d950c
----------------------------
"Merge: b2ccd1a e7d8c08 BUG#11745049 - LOG_ERROR VARIABLE IS BLANK WHEN NOT EXPLICITLY STATED IN MY.CNF DESCRIPTION: log_error global variable shows empty string ("""") if not specified at server startup or in configuration file. This is reported for *nix platform. On windows, it shows ./HOSTNAME.err as its output. ANALYSIS : Error output on *nix platforms is by default STDERR. On Windows it is by default in file, and the default file is ./HOSTNAME.err. If both --log-error and --console is used on windows, the value of log_error is shown but the output is directed to stderr. FIX : Changed the value of log_error variable to ""STDERR"" whenever output is directed to the STDERR. "	75d94953bf1eccdefa9c4ef186efac9d996d5c76
----------------------------
Bug #16044655 CRASH: SETTING DEFAULT VALUE FOR SOME VARIABLES Problem: When a system variable is being set to the DEFAULT value, the server segfaults if there is no 'default' defined for that system variable. For example, for the following statements server segfaults. set session rand_seed1=DEFAULT; set session rand_seed2=DEFAULT; Analysis: The class sys_var represents one system variable.  The class set_var represents one system variable that is to be updated.   The class set_var contains two pieces of information, the system variable to object (set_var::var) member and the value to be updated (set_var::value). When the given value is 'default', the set_var::value will be NULL. To update a system variable the member set_var::update() will be called, which in turn will call sys_var::update() or sys_var::set_default() depending on whether a value has been provided or not. If the sys_var::set_default() is called, then the default value is obtained either from the session scope or the global scope.  This default value is stored in a local temporary set_var object and then passed on to the sys_var::update() call.  A local temporary set_var object is needed because sys_var::set_default() does not take set_var as an argument. In the given scenario, the set_var::update() called sys_var::set_default(). And this sys_var::set_default() obtains the default value and then calls sys_var::update().  To pass this value to sys_var::update() a local set_var object is being created.   While creating this local set_var object, its member set_var::var was incorrectly left as 0. Solution: Instead of creating a local set_var object, the sys_var::set_default() can take the set_var object as an argument just like sys_var::update(). rb://1996 approved by Nirbhay and Ramil. 	9f3bd7c864c6309fe0cfd1ff99ab72f9ae92dabe
----------------------------
Merge: 4d65089 ae54194 Merge from mysql-5.5 to mysql-5.6. There are slight changes in the patch to handle gtid_purged system variable. 	cbc200315042932e44376372261c0196df11c748
----------------------------
MySQLConnection add some debugging to TransactionHandler add the transaction type to Operation make udebug less verbose by demoting some udebug.log calls to log_detail UserContext check to see if there is a callback defined before calling it if no callback is defined, ignore the callback, but still check that the caller returned the proper number of parameters MissingCallbackTest test that operations that do not have callbacks will be executed in sequence the missing callbacks are ignored test in both autocommit and begin/commit: test that persist with no callback will succeed test that persist followed by remove will succeed NOTE there is still an issue with multiple operations where the DBTable metadata has not been retrieved from the database 	a8de29e3272e9ecd1a1f58acdb77ccbec0de32e3
----------------------------
"Bug#16300620: VALGRIND FAILURE MYSQL-5.6/TRUNK IN AUTH_SEC.KEY_VALUE_AUTH This valgrind failure could occur if CREATE USER was logged in the general query log and the 'old_passwords' system variable was set to 2. During query rewrite to prevent the password from being logged in plain text, my_make_scrambled_password() was called. The output of this function was stored in a char buffer. Afterwards the contents of this char buffer was appended to the query string. The problem was that we appended the number of characters equal to the length of the plaintext password. So if the scrabled password was shorter, we ended up appending uninitialized bytes. This later caused a valgrind warning during logging. This patch fixes the problem by writing ""<secret>"" to the query log instead of the scrambled password for old_passwords = 2. No test case added since this is covered by existing tests. "	f8733cb7b4d737ded3a392c39eb19c11b9feb51d
----------------------------
"Bug#16021884 REPLACE .. SELECT CRASH USING NULL POINTER IN APPLYING_BINLOG - Crash occured in ha_ndbcluster::applying_binlog(),  m_thd_ndb was NULL since the extra(HA_EXTRA_WRITE_CAN_REPLACE) call comes before table has been locked. It's thus not possible to use m_thd_ndb in any function being called from ha_ndbcluster::extra() - Utilize that the new pseudo_slave_mode variable  deletes the rli_fake* when mysqlbinlog is done executing binlog. Thus the thd->rli_fake can realiably be used to determine wheter ""applying_binlog"" should return true. - Move applying_binlog to ndb_thd.h since it's now a THD* only function. - Enable disabled testcase - Improve the usage of applying_binlog() in ndbcluster_commit by reading it's result into a variable named ""ignore_error"" since that is what the function is used for. - Remove unused ndb_mi_get_in_relay_log_statement() "	7ad52d2ef5b5869ec4d84589c541dd59753877b2
----------------------------
"Bug #16248315: mysql_secure_installation cannot verify newly set password with expired flag the mysql command line binary would only turn on the MYSQL_OPT_CAN_HANDLE_EXPIRED_PASSWORD option when the client is interactive. This makes any scripting that tries to deal with password expiration impossible. Added a new mysql command line/config file option to override setting this: --connect-expired-password When this option is supplied it will cause mysql to always connect to the server, but be in ""sandbox"" mode if connecting with an expired password. Updated the mysql_secure_installation script to use the new option. test cases added. "	be7d0cb24f385f3a3430daf364c739487ffcaa4c
----------------------------
Bug #16044655 CRASH: SETTING DEFAULT VALUE FOR SOME VARIABLES Problem: When a system variable is being set to the DEFAULT value, the server segfaults if there is no 'default' defined for that system variable. For example, for the following statements server segfaults. set session rand_seed1=DEFAULT; set session rand_seed2=DEFAULT; Analysis: The class sys_var represents one system variable.  The class set_var represents one system variable that is to be updated.   The class set_var contains two pieces of information, the system variable to object (set_var::var) member and the value to be updated (set_var::value). When the given value is 'default', the set_var::value will be NULL. To update a system variable the member set_var::update() will be called, which in turn will call sys_var::update() or sys_var::set_default() depending on whether a value has been provided or not. If the sys_var::set_default() is called, then the default value is obtained either from the session scope or the global scope.  This default value is stored in a local temporary set_var object and then passed on to the sys_var::update() call.  A local temporary set_var object is needed because sys_var::set_default() does not take set_var as an argument. In the given scenario, the set_var::update() called sys_var::set_default(). And this sys_var::set_default() obtains the default value and then calls sys_var::update().  To pass this value to sys_var::update() a local set_var object is being created.   While creating this local set_var object, its member set_var::var was incorrectly left as 0. Solution: Instead of creating a local set_var object, the sys_var::set_default() can take the set_var object as an argument just like sys_var::update(). rb://1996 approved by Nirbhay and Ramil. 	ae541942b1d2239456a9336245bb8c30d91af04e
----------------------------
- WL#6469: - reverting back changes for temp-tablespace location fix. - here is (hopefully the final) change list: - temp-tablespace default name is ibtmp1 - temp-tablespace would reside in data-dir - user using relative path while specifying innodb_temp_data_file_path can move temp-tablespace from data-dir to other directory. - temp-tablespace will be removed on normal shutdown and on start-up. this also means on crash is user re-starts the server with same configuration temp-tablespace left over by crash will be removed. - user can continue to use multiple-instance on same machine as temp-table now reside in data-dir by default which has to be different for each instance. 	4ea44c7081282d99106a16dba0909c0c12973997
----------------------------
Merge: 870ebd0 5ea38d3 BUG#16035659 - CRASH WHEN SQL_MODE=NO_ENGINE_SUBSTITUTION, STRICT_TRANS_TABLES IS SET BACKGROUND: An assertion failure in Diagnostics_area::set_ok_status() was observed in MySQL Server when an InnoDB table is created having violated the maximum key length limit when running in STRICT SQL MODE. Instead of throwing an error, the server crashes in Debug Build. On release builds set_ok_status() will just refuse to overwrite the error status with OK, and the client will be sent the error message. So we will not get a crash and in fact get correct behavior in this case. ANALYSIS: In THD::raise_condition() function, warning is converted to error when STRICT SQL MODE is enabled. The return value false from this function indicates OK, but it has just set the error status. There was no code to return true, if an error occured. FIX: As a fix for this bug, the code to return true has been added, if an error is set when STRICT SQL_MODE is ON. 	08e8286563e8e044daa1b68029d19d27af5cbb3a
----------------------------
BUG#16035659 - CRASH WHEN SQL_MODE=NO_ENGINE_SUBSTITUTION, STRICT_TRANS_TABLES IS SET BACKGROUND: An assertion failure in Diagnostics_area::set_ok_status() was observed in MySQL Server when an InnoDB table is created having violated the maximum key length limit when running in STRICT SQL MODE. Instead of throwing an error, the server crashes in Debug Build. On release builds set_ok_status() will just refuse to overwrite the error status with OK, and the client will be sent the error message. So we will not get a crash and in fact get correct behavior in this case. ANALYSIS: In THD::raise_condition() function, warning is converted to error when STRICT SQL MODE is enabled. The return value false from this function indicates OK, but it has just set the error status. There was no code to return true, if an error occured. FIX: As a fix for this bug, the code to return true has been added, if an error is set when STRICT SQL_MODE is ON. 	5ea38d33e9f192aa4245744d18bb58036c95469d
----------------------------
"Bug#11746817:MYSQL_INSTALL_DB CREATES WILDCARD GRANTS WHEN HOST HAS '_' IN THE HOSTNAME Problem: ======= '_' and '%' are treated as a wildcards by the ACL code and this is documented in the manual. The problem with mysql_install_db is that it does not take this into account when creating the initial GRANT tables: --- cut --- REPLACE INTO tmp_user SELECT @current_hostname,'root','','Y', 'Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y', 'Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','','','','', 0,0,0,0 FROM dual WHERE LOWER( @current_hostname) != 'localhost'; --- cut --- If @current_hostname contains any wildcard characters, then a wildcard entry will be defined for the 'root' user, which is a flaw. Analysis: ======== As per the bug description when we have a hostname with a wildcard character in it, it allows clients from several other hosts with similar name pattern to connect to the server as root. For example, if the hostname is like 'host_.com' then the same name is logged in mysql.user table. This allows 'root' users from other hosts like 'host1.com', 'host2.com' ... to connect to the server as root user. While creating the intial GRANT tables we do not have a check for wildcard characters in hostname. Fix: === As part of fix escape character ""\"" is added before wildcard character to make it a plain character, so that the one and only host with the exact name will be able to connect to the server. "	da6930a41f22eb767f9a1d975a3b2c564fe5271b
----------------------------
"BUG#16191895- Show relaylog events in non-existing relay-log file=wrong error msg text Description: Doing a show relaylog events at slave with a non-existing relay-log file, reports an error with the text: ""failed: 1220: Error when executing command SHOW BINLOG EVENTS: Could not find target log "" Fix: Changed the error text to- ""Error when executing command SHOW RELAYLOG EVENTS: Could not find target log "	e9e9e12f34d6f704e51c741214e75383a3fc915c
----------------------------
BUG#16216404 - MYSQL 5.6: VERSION MISMATCH A BIT ALARMING WHEN MASTER IS NOT 5.6 Problem - After upgrading a slave to a higher version we get this warning getting logged: 13:18:40 28611 [Warning] Slave I/O: Unknown system variable 'SERVER_UUID' on master, maybe it is a *VERY OLD MASTER*. Error_code: 1193 This is rather alarming to the users. Fix - the problem is fixed by changing the warning being logged to be a more descriptive one by printing the master's and slave's sever version: [Warning] Slave I/O: Unknown system variable 'SERVER_UUID' on master. A probable cause is that the variable is not supported on the master (version: 5.5.31-debug-log), even though it is on the slave (version: 5.6.11-debug-log), Error_code: 1193 	7ed569591b923c7fc5d1a30fd116ba261db8f0d1
----------------------------
"Merge: 6214d73 dfb9437 Bug #12546953: ""SHOW VARIABLES LIKE 'DATADIR';"" RETURN EMPTY. Null Merge from mysql-5.6 "	372d7259aea6f1c3a3c5d69fc8826e757f72f904
----------------------------
"Merge: c9ab56a ddd3744 Bug #12546953: ""SHOW VARIABLES LIKE 'DATADIR';"" RETURN EMPTY. Merge from mysql-5.5 "	dfb943760b919a8dabcf0ec5b341ba5bdc1013b1
----------------------------
"Bug #12546953   ""SHOW VARIABLES LIKE 'DATADIR';"" RETURN EMPTY. Problem: =========================================================== If mysqld daemon is started without a --datadir option option, and we issue the SHOW VARIABLES LIKE 'DATADIR';SQL command at the client it returns an empty path. This is because mysql_real_data_home_ptr is being reset to NULL by Sys_var_charptr constructor call when the datadir is not given either through configuration file (no-defaults) or through mysqld parameters. Solution: =========================================================== mysql_real_data_home is an array which stores the path of the datadir and mysql_real_data_home_ptr is the pointer to it. The pointer is being set to NULL at the Sys_datadir, which is of type Sys_var_charptr, constructor call. This is because at Sys_datadir call the def_val parameter was being passed with DEFAULT(0) which is now replaced with DEFAULT(mysql_real_data_home). The patch has been tested manually as it is not possible to start mtr without a default config file. "	ddd37445514f91a255fe5ff074f222a14ba723f9
----------------------------
"Merge: f9ef12b cd9182e Bug #12546953: ""SHOW VARIABLES LIKE 'DATADIR';"" RETURN EMPTY. Null Merge from mysql-5.6 "	6214d734803aabe37c01bab760650cbb346d71a2
----------------------------
"Merge: 8850c8e a629b6a Bug #12546953: ""SHOW VARIABLES LIKE 'DATADIR';"" RETURN EMPTY. Merge from mysql-5.5 "	cd9182e631ddc32c3675b4282654f597f77cf6ea
----------------------------
"Bug #12546953   ""SHOW VARIABLES LIKE 'DATADIR';"" RETURN EMPTY. Problem: =========================================================== If mysqld daemon is started without a --datadir option option, and we issue the SHOW VARIABLES LIKE 'DATADIR';SQL command at the client it returns an empty path. This is because mysql_real_data_home_ptr is being reset to NULL by Sys_var_charptr constructor call when the datadir is not given either through configuration file (no-defaults) or through mysqld parameters. Solution: =========================================================== mysql_real_data_home is an array which stores the path of the datadir and mysql_real_data_home_ptr is the pointer to it. The pointer is being set to NULL at the Sys_datadir, which is of type Sys_var_charptr, constructor call. This is because at Sys_datadir call the def_val parameter was being passed with DEFAULT(0) which is now replaced with DEFAULT(mysql_real_data_home). The patch has been tested manually as it is not possible to start mtr without a default config file. "	a629b6afcfbad7e23e59898d30d9f14f5dd09da5
----------------------------
BUG#15965353- RPL.RPL_ROW_UNTIL FAILS ON PB2, PLATFORM= MACOSX10.6 X86_64 MAX Problem: The test was failing on pb2's mac machine because it was not cleaned up properly. The test checks if the command 'start slave until' throws a proper error when issued with a wrong number/type of parameters. After this,the replication stream was stopped using the include file 'rpl_end.inc'. The errors thrown earlier left the slave in an inconsistent state to be closed by the include file which was caught by the mac machine. Fix: Started slave by invoking start_slave.inc to have a working slave before calling rpl_reset.inc Problem: The test file was not in a good shape. It tested start slave until relay log file/pos combination wrongly. A couple of commands were executed at master and replicated at slave. Next, the coordinates in terms of relay log file and pos were noted down followed by reset slave and start slave until saved relay log file/pos. Reset slave deletes  all relay log files and makes the slave forget its replication position. So, using the saved coordiantes after reset slave is wrong. Fix: Split the test in two parts: a) Test for start slave until master log file/pos and checking for correct errors in the failure scenarios. b) Test for start slave until relay log file/pos. Problem: The variables auto_increment_increment and auto_increment_offset were set in the the include file rpl_init.inc. This was only configured for some connections that are rarely used by test cases, so likely that it will cause confusion. If replication tests want to setup these variables they should do so explicitly. Fix: a) Removed code to set the variables auto_increment_increment and auto_increment_offset in the include file. b) Updated tests files using the same. 	a449c0a908c2ff7d7b564adbedf62af35a063ffd
----------------------------
Merge: 32c856b 83075f3 WL#6663: Make the MTR binlog suite GTID_MODE agnostic Merge from mysql-5.6 into mysql-trunk. 	645839baa057d68a55904377ac6b6b27bae37cc3
----------------------------
WL#6663: Make the MTR binlog suite GTID_MODE agnostic Enabled incorrectly skipped binlog_gtid_mysqlbinlog_row_myisam test. 	83075f3e5f42be526237532ccbff971dddefa52c
----------------------------
Bug#16342793 MYSQL 5.6 FAILS TO BUILD WITH LIBWRAP SUPPORT ENABLED Before this fix, building a server with HAVE_LIBWRAP failed. The problem is that a variable renaming was missed, causing code to not compile in sql/mysqld.cc However, such failure should have been detected, and in fact was hidden by another problem. In the cmake files, the end user can specify WITH_LIBWRAP. The Makefile then attempts to build a small test program to verify libwrap is available, but silently fail and still produce code that does build, with HAVE_LIBWRAP undefined, producing a binary that does not use libwrap. For the cmake test to pass, both: - the tcpd.h header file - the libwrap library need to be installed. The header and the library are deployed in different packages on some OS distributions, so that having the libwrap runtime alone is not sufficient. As a result, builds where: - the end user ask for WITH_LIBWRAP - the libwrap library *is* installed - the tcpd.h header is missing would build, but not with #define HAVE_LIBWRAP, producing a binary without failures and without libwrap. This fix resolves two issues: - the build break in sql/mysqld.cc has been resolved - the configure.cmake now fails with a hard failure, returning an error, if the end user asked WITH_LIBWRAP but the makefile can not find a working libwrap. The most reliable way to verify how a binary is build is to check: ldd mysqld | grep libwrap to make sure the library is called. Verified manually that the build is now proper. 	cbd46d8ad0a2adad8355e301d52149bf33e3402e
----------------------------
Improve stop cluster functionality for configuration gui 	0d0f3e6b225b0745d925609889c844cde853a916
----------------------------
Bug#16314780 - INNODB.INNODB-WL6445: FAILING ASSERTION: !SRV_READ_ONLY_MODE WITH QC ON Fix a corner case that was missed in bug#14729365. Approved by Inaam over IM. 	c5b5de13cd7047cb6879d9a4bb46fdaa1297941a
----------------------------
Remove config.gypi -- from now on it will be created dynamically after the user runs setup/build 	20d15c8fb9c85b9e53e961c694dd1094ee7ad9e2
----------------------------
Add help text for configuration gui 	7bbe0e46f55d598b7945af50da89210503c4c7ff
----------------------------
Merge: 0de50fc 669caa4 WL#6663: Make the MTR binlog suite GTID_MODE agnostic Merge from mysql-5.6 into mysql-trunk. 	c0ade4d5e12e908b30fbcbd64cfdbb996ad8eefa
----------------------------
WL#6663: Make the MTR binlog suite GTID_MODE agnostic Added missing RESET MASTER to binlog_start_comment test to avoid that a replayed dump of the test current binary log with gtid-mode=on is skipped, since those GTIDs were already logged. 	669caa4cec2c253320c06cde30c16a8871e2cb27
----------------------------
Bug#16200717 WRONG OUTPUT FROM MYSQL_CONFIG --LIBS Post-push fix: we have the 'dtrace' executable on darwin, but no cmake code for actually using it. This resulted in the generation of illegal 'ar r' commands. 	808c28f43a1d18495ce249dd6053828b7b278807
----------------------------
Move main binding.gyp from Adapter/impl up to top level. In adapter_config.js, search for both Release and Debug builds. 	498fbc1f1a4c6904d959ff9e74cc9af8d5193b82
----------------------------
Bug #16295905: ALTER USER PASSWORD EXPIRE WILL CAUSE CRASH WHEN START WITH SKIP-GRANT_TABLES Added a check for skip-grant-tables to ALTER USER. 	a4f9c13ccf5cb0775869c77e87090d7069710b31
----------------------------
"Fix Bug#16249500 INNODB SILENTLY SWITCHES TO 1 BUFFER POOL INSTANCE IF SIZE IS < 1GB Note: the following ratiocination assumes the user will not start mysqld with --innodb-buffer-pool-instances=0. If he does, then we will not emit a warning to him that the value is adjusted to 1 or 8, depending on the buffer pool size. This is a limitation in the MySQL config subsystem - we cannot tell whether the user explicitly set the config knob to its default value or did not specify it at all in my.cnf or command line. Exploit the value of 0 as a default value for innodb_buffer_pool_instances. This way we can tell if the user tried to set it to something != 1 when the buffer pool size is less than 1 GiB. We use the following logic to set innodb_buffer_pool_size: If the size of the BP >= 1 GiB and --innodb-buffer-pool-instances= was not specified on the command line, and this is not win32, then set to 8, if it is win32, then set to buffer pool size / 128 MiB. If the size of the BP < 1 GiB and --innodb-buffer-pool-instances= was not specified on the command line, then set to 1. If the size of the BP < 1 GiB and --innodb-buffer-pool-instances=N was specified on the command line and N != 1, then set to 1 and emit a warning. Reviewed by:	Kevin, Inaam (rb:1984) "	8808190c5755dbe54d696119f541d9b52f536e9f
----------------------------
Bug#16200717 WRONG OUTPUT FROM MYSQL_CONFIG --LIBS Output from 'mysql_config --libs' included: -lpthread -lprobes_mysql -lm -lrt -lssl -lcrypto -ldl For some build configurations, we merge ssl libraries into the client libs. For these builds, -lssl and -lcrypto should not be mentioned. The 'probes_mysql' should also go away (there is no such library) 	6f357e5caf1271d108be24a9af40dce094777cfb
----------------------------
Bug#15977433: --SECURE-AUTH OPTIONS ALLOWS CLIENT TO SEND PASSWORD IN OLD FORMAT (PRE-4.1) Description: Fixed test failures in auth_sec suite. 	a9be2ae64c5252e3486a98a9f8cb78b66d4be31d
----------------------------
Merge: 4348878 7833d1b WL#6663: Make the MTR binlog suite GTID_MODE agnostic Null merge from mysql-5.6 into mysql-trunk. 	b40724b8d4d33e0c067048e6f16c4e603105bdaa
----------------------------
Merge: ddb1464 be72e6f WL#6663: Make the MTR binlog suite GTID_MODE agnostic Merge from mysql-5.6 into mysql-trunk. 	434887885c1ebbac2981d6fc9b2e61a2c2226a77
----------------------------
Merge: 67504bd 37f67b9 WL#6663: Make the MTR binlog suite GTID_MODE agnostic Due to several problems, the binlog suite is not fully gtid-mode=on compliant. These problems range from the fact that MTR is result file oriented to the fact that some tests not even have binlog turned on ever. This patch fixes the binlog suite so that in the future we might be able to run (most of) it with gtid-mode=on. The tests left out should be those that don't make sense with gtid-mode=on. 	7833d1b27a05fd282830bd77616b48dd17e23cea
----------------------------
Merge: 0f14a69 37f67b9 WL#6663: Make the MTR binlog suite GTID_MODE agnostic Merge from mysql-5.6 into mysql-trunk. 	be72e6fa6f8e23eb8bb9be22391315e40cc3f59c
----------------------------
WL#6663: Make the MTR binlog suite GTID_MODE agnostic Due to several problems, the binlog suite is not fully gtid-mode=on compliant. These problems range from the fact that MTR is result file oriented to the fact that some tests not even have binlog turned on ever. This patch fixes the binlog suite so that in the future we might be able to run (most of) it with gtid-mode=on. The tests left out should be those that don't make sense with gtid-mode=on. 	37f67b92fe0e170f597bc3d190bf1e6df5dd8c23
----------------------------
Merge: 78e9175 30b02d7 Bug#15977433: --SECURE-AUTH OPTIONS ALLOWS CLIENT TO SEND PASSWORD IN OLD FORMAT (PRE-4.1) Description: Merge from mysql-5.6 to mysql-trunk. 	0f14a6977b9e3c5d5708dc41967808512a7c5f9c
----------------------------
Bug#15977433: --SECURE-AUTH OPTIONS ALLOWS CLIENT TO SEND PASSWORD IN OLD FORMAT (PRE-4.1) Description: If --secure-auth client option is used, client should raise an error if connection is using mysql_old_password stype password hash. However, at present client does not throw any error and if server is not running in secure_auth mode, connection is successfully established. Solution: Introduce a check in client code that makes sure that whenever --secure-auth option is specified on client side, an error is raised if connection is trying to use mysql_old_password hash. 	30b02d79c1493420adcc4ae7651e4cce6c992fe3
----------------------------
Merge: a25e408 a9be2ae Bug#15977433: --SECURE-AUTH OPTIONS ALLOWS CLIENT TO SEND PASSWORD IN OLD FORMAT (PRE-4.1) Description: Merge from mysql-5.6 to mysql-trunk - fixed test failures in auth_sec suite 	4558e2f276746c1abff231e71e5a0689b5c4008a
----------------------------
"Merge: 78bc17c de7c604 BUG#16062608: REPLICATION COMMANDS IMPLICIT COMMIT AND SET GTID_NEXT=""UUID:X Merge from mysql-5.6 into mysql-trunk. "	1da4fbb0602f0ece70ad77ef16af96552054f205
----------------------------
"BUG#16062608: REPLICATION COMMANDS IMPLICIT COMMIT AND SET GTID_NEXT=""UUID:X"" Revert fix since it introduced problems with SET commands, more precisely with SET PASSWORD. "	de7c6046a90cb968cbf348aad945f8fc061c8414
----------------------------
"A patch for Bug#16035522: THE RANGE OF A TRANSPORT-LAYER PORT"" IS [0, 65535] (UNSIGNED SHORT). The problem was that the 'port' and 'report-port' server options had wrong upper limit (UINT_MAX), while the actual limit is 65535. The patch fixes the upper limit. "	408e7b2cac25cf0734c8c436b4560cbad02fcc5b
----------------------------
Bug #11766693: LOG-SLOW-ADMIN-STATEMENTS AND LOG-SLOW-SLAVE-STATEMENTS NOT DISPLAYED Added both log_slow_admin_statements and log_slow_slave_statements as server system variables, that can now be dynamically set at run time and are now available via SHOW GLOBAL VARIABLES. These behave otherwise in the same way as the --log-slow-admin-statements and --log-slow-slave-statements server command options. There is no need to restart the slave SQL thread for the value of log_slow_slave_statements to be picked up, as the global variable is re-read with each successful event applied by the SQL thread. 	400f131f7844c2f8d397fb2508b81dedcba4aa08
----------------------------
BUG#14677824 CLOSE_ACTIVE_MI FREED MEMORY THAT CONTAINS ACTIVE CRITICAL SECTIONS When being destroyed, Relay_log_info objects had some critical sections not being properly deleted before freeing the memory. The problem was in the stage_manager, owned by the associated relay_log object that was never properly cleaned. The stage_manager's method deinit is now called on the mysql_bin_log cleanup method, assuring a proper destruction of Relay_log_info objects. 	8cfaaea08fafae559ed1b3f8f46bf910636eded2
----------------------------
This patch fixes the bug#13875572 - NEXT_INSERT_ID >= AUTO_INC_INTERVAL_FOR_CUR_ROW.MINIMUM This bug could led to a crash for the server built in debug mode. There was a bug in the control of overflow for the value of variable next_insert_id. Due to lack of overflow checking it was possible for next_insert_id variable in handler::update_auto_increment() method to get value greater than maximum value of column. In such a situation next attempt to generate auto-increment by calling ha_innobase::get_auto_increment() method led to allocation of auto-increment interval which covered some values already used (since InnoDB interpreted this as attempt to insert negative value). Future attempts to use values from this interval might led to duplicate key errors. In such a case we might have allocated new auto-increment interval, but due to IGNORE duplicate key handling mode handler::restore_auto_increment() was called which restored next_insert_id to value lower than lower border of freshly allocated interval. As result on next call to update_auto_increment() we got assertion failure mentioned above. As a side effect of this patch the server will adjust next_insert_id only in the case when the value specified in the INSERT is positive. It means that as of now we don't treat negative auto-increment values as large positive values. This is incompatible change and should be documented. 	ef052567b75183dc9614dac3c3478cb61c893017
----------------------------
Bug#14798043 DROP DATABASE PERFORMANCE_SCHEMA DROPS IT ON ALL SQL NODES: Moved testcase to ndb_multi since it cannot be run for embedded 	b2d803febcdcdc43d30f9194652bc27fd67f6819
----------------------------
Bug#14798043 DROP DATABASE PERFORMANCE_SCHEMA DROPS IT ON ALL SQL NODES: Added testcase 	3b9372de1030aee74fc049ca5ab6c8343c13e62b
----------------------------
Bug#14798043 DROP DATABASE PERFORMANCE_SCHEMA DROPS IT ON ALL SQL NODES: Allow the binlog thread to read all databases (by providing read access) to be able to determine if any tables are local and thus leave them (this ensures system databases cannot be dropped in a distributed manner). 	08ea5333865dc1ebdf6eec3449549ef0aef6ee97
----------------------------
bug#14163155 COM_CHANGE_USER DOESN'T WORK WITH CHARACTER-SET-SERVER=UCS2 IN 5.1 SERVER Problem was caused by the COM_CHANGE_USER parsing code. That code ignored character set number passed in COM_CHANGE_USER packet. Instead character_set_client values was used. User name was not converted at all. Fixed by using passed character set number to convert both db and user names. If COM_CHANGE_USER does not contain character set number then character_set_client is used to convert both names. 	f7285a71d0310bbb867d969d58b01b992e9f88f6
----------------------------
Bug#14477196 MAIN.CONNECT TEST FAILS AS MAX_USED_CONNECTIONS IS NOT CORRECT Bug#16275324 I_MAIN.CONNECT FAILS AS THREADS_CACHED IS NOT CORRECT Problem: main.connect and i_main.connect tests fail sporadically in PB2 due to result content mismatch Analysis: The result content mismatch is in the show statements as shown below: SHOW STATUS LIKE 'max_used_connections'; SHOW STATUS LIKE 'Threads_cached'; Which indicates that the disconnects present above SHOW statement in each test are not finished before the execution of SHOW starts. Fix: Added --source include/wait_until_disconnected.inc in these two tests after every disconnect 	69ddb568a2f76f064b947d362e7f8b3b0c41b428
----------------------------
Cherrypick patches for gtid_next_list 	5847fe0c21fc266079b0d160e8c9083ecf7adb9c
----------------------------
Bug#16295152 NEW SYSTEM VARIABLE GTID_NEXT_LIST APPEARS WITH HAVE_NDB_BINLOG - remove test for gtid_next_list variable which only existed in MySQL Cluster 	2e27fdff7bebcaf2ca7a339f6323bae893bdc849
----------------------------
Bug#16295152 NEW SYSTEM VARIABLE GTID_NEXT_LIST APPEARS WITH HAVE_NDB_BINLOG - replace usages of HAVE_NDB_BINLOG in GTID code with HAVE_GTID_NEXT_LIST wo avoid that gtid_next_list and related code pops up in MySQL Cluster 	1a8eb011dcfae544a98b67c54140f5dfcfac92f1
----------------------------
ndbcluster - remove usage of WITH_NDBCLUSTER_STORAGE_ENGINE in ha_ndbcluster code, thus reserving the few usages of that to be used in MySQL Server 	4f48d5f21705fa542aa8b449055e525238e0cb52
----------------------------
Bug#16287411 MYSQLD CRASH WHEN INNODB_API_ENABLE_MDL IS OFF commit_try_rebuild(): Instead of letting the assertion fail, return ERROR 1205 (HY000): Lock wait timeout exceeded; try restarting transaction to the ALTER TABLE statement if another thread is accessing the table (bypassing the MySQL meta-data locking). Approved and tested by Jimmy Yang 	bbb17843d6a09b509f839ae2cb44d1cee28bcaef
----------------------------
Bug#14477196 MAIN.CONNECT TEST FAILS AS MAX_USED_CONNECTIONS IS NOT CORRECT Bug#16275324 I_MAIN.CONNECT FAILS AS THREADS_CACHED IS NOT CORRECT Problem: main.connect and i_main.connect tests fail sporadically in PB2 due to result content mismatch Analysis: The result content mismatch is in the SHOW statements shown as below: SHOW STATUS LIKE 'max_used_connections'; SHOW STATUS LIKE 'Threads_cached'; This indicates that disconnects present above SHOW statement in each test are not finished before the execution of SHOW starts. Fix: Added --source include/wait_until_disconnected.inc in these two tests after every disconnect. 	7fb78402269c7f43b41aeebcd578446de157cf0b
----------------------------
Bug#14606334 INNODB UNABLE TO MERGE IBUF INTO PAGE Bug#14774779 CRASH RECOVERY FAILED, UNABLE TO COMPRESS A PAGE Whenever we successfully reorganize or compress a compressed secondary index page, ensure that the IBUF_BITMAP_FREE bits will be updated accordingly. Also, slightly change the definition of IBUF_BITMAP_FREE in compressed pages. Instead of considering the free space on the uncompressed page *after* reorganize, use the *before* value, so that a buffered insert can be merged without reorganizing or even recompressing the page. btr_page_reorganize_low(), btr_page_reorganize(), btr_cur_update_alloc_zip_func(), btr_cur_insert_if_possible(), page_cur_tuple_insert(), page_cur_rec_insert(), page_cur_insert_rec_zip(), page_copy_rec_list_end_to_created_page(), page_copy_rec_list_end_no_locks(), page_copy_rec_list_end(), page_copy_rec_list_start(), page_move_rec_list_end(), page_move_rec_list_start(): Note that the caller should keep IBUF_BITMAP_FREE up to date. btr_page_split_and_insert(): On failure, reset the IBUF_BITMAP_FREE bits on both pages. btr_cur_optimistic_delete_func(): Do not update the IBUF_BITMAP_FREE on compressed pages any more, because according to the updated definition, it will not increase by purging records without reorganizing the page. btr_cur_optimistic_insert(), btr_cur_update_in_place(), btr_cur_optimistic_update(), btr_cur_pessimistic_update(): After a failed attempt to modify a compressed page, reset the IBUF_BITMAP_FREE bits, because we may already have reorganized the page. btr_cur_update_in_place(), btr_cur_optimistic_update(): Implement the flag BTR_KEEP_IBUF_BITMAP for suppressing the IBUF_BITMAP_FREE updates, so that btr_cur_pessimistic_update() can invoke btr_cur_compress_if_useful() without violating the latching order (further pages cannot be latched after latching a change buffer bitmap page). ibuf_index_page_calc_free_zip(): Consider the maximum insert size on the uncompressed page without reorganizing the page, so that ibuf_insert_to_index_page_low() will succeed without reorganizing or recompressing the page. Fix a recovery problem in innodb_log_compressed_pages=OFF and reintroduce the parameter innodb_log_compressed_pages=OFF (ON by default). Also, whenever a page becomes empty, create the page from the scratch. This should hopefully generate less redo log, and it will reduce the cases where we are compressing garbage. This is also necessary in order to avoid an infinite page split with the rest of this patch. page_compression_level: Renamed to page_zip_level. page_log_compressed_pages: Renamed to page_zip_log_pages. innodb_compression_level_update(): Remove. Declare page_zip_level directly with a compatible data type. page_is_empty(): A new predicate, similar to page_is_leaf(), for checking PAGE_N_RECS == 0 without adjusting the endianness. page_has_garbage(): New predicate for checking if PAGE_GARBAGE is nonzero. page_create_empty(): New function, to replace a B-tree page with an empty page. page_create_zip(): Add a parameter for PAGE_MAX_TRX_ID, so that we can recreate a page without zeroing out the field. This field only needs to be nonzero on nonempty secondary index leaf pages. page_cur_insert_rec_zip_reorg(): Remove (merge to the only caller). page_cur_insert_rec_zip(): Take 'cursor' as a parameter. When not in crash recovery (applying redo log), modify the behaviour if there is not enough room in the page modification log (that is, page_zip_available() fails). If the page is logically empty, invoke page_create_zip() to physically empty the page. Otherwise, if the page contains no garbage and no modification log, give up. Otherwise, if innodb_log_compressed_pages=OFF, first do btr_page_reorganize_low() and only then attempt an insert followed by compressing the whole page. If innodb_log_compressed_pages=ON, insert into the uncompressed page only, and then invoke page_zip_reorganize(). In this way, whenever we have to recompress, we will always end up with a reorganized page with 1 or 0 record in the page modification log. page_cur_delete_rec(), page_delete_rec_list_end(), page_delete_rec_list_start(): If the page would become logically empty, invoke page_create_empty() to physically empty it. btr_page_reorganize_low(): Replace the 'block' parameter with 'page_cur', and position the cursor on the same record, so that the caller will avoid the repositioning. Do not write a redo log record unless the operation succeeds. btr_cur_insert_if_possible(): Pass the cursor to btr_page_reorganize(), avoiding the costly page_cur_search() call. btr_cur_optimistic_insert(): After a failed page_cur_tuple_insert(), do not attempt page reorganize on a compressed page. The page_cur_tuple_insert() will already have attempted it, in vain. On uncompressed pages, pass the cursor to btr_page_reorganize() to avoid the page_cur_search() call. btr_cur_update_alloc_zip_func(): Renmed from btr_cur_update_alloc_zip(). Make offsets a debug-only parameter. Replace 'block' with 'cursor'. If there is not enough place, reorganize the page (to get rid of garbage in the PAGE_FREE list) rather than just recompress it. Give up if there is neither garbage in the PAGE_FREE list nor any modification log. btr_cur_update_in_place(): Make 'offsets' non-const, because btr_cur_update_alloc_zip() can now change the rec_offs_validate() information when it is reorganizing the page. NOTE: If we were free to change the redo log format, we could do the following when there is not enough place in the modification log to log an insert or update: * Reorganize the uncompressed page only. * Make the modification on the uncompressed page only. (These would need new redo log entry types.) * Compress the entire page. Redo logged as MLOG_ZIP_PAGE_COMPRESS_NO_DATA. If the compress operation fails, none of the redo log must be written, and we will have to restore the uncompressed page from the compressed page and refuse the operation. rb#1761 approved by Inaam Rana 	78a9e433f22aab74acb9bb7c7e7bf65f57e4f4de
----------------------------
ndb - adding configuration parameter DefaultHashmapSize a configuration parameter DefaultHashmapSize is introduced in api/mysqld and ndbd section of config.ini 	a92a9584b1eccd5232fcb53f0434c1f337da5000
----------------------------
ndb - test TestNdbApiConfig remove function cleanup on failure since on failure the test environment are reset anyway 	312deff575bfffd605e42371bdfcdd7b756e6414
----------------------------
ndb - Create large hashmaps in 7.0 and 7.1 This patch adds a build time flag to make 7.0 and 7.1 to create large hashmaps (3840 buckets) as 7.2 do. That make it possible to have more even distribution of data than possible with only 240 buckets in hashmaps in some configuration. Benefits, 1) bigger hashmaps implies more evenly distributed data if the number of partitions does not divide 240 evenly. 2) make it possible to downgrade from 7.2.7 and above even if tables or indexes are created or altered so they use large hashmaps. Drawbacks, 1) it is a new build time flag, so it needs a custom rebuild to be enabled. 2) will not be possible to upgrade or downgrade to release builds of 7.0 and 7.1 if the new flag is used How to use When building use one of the following to enable large hashmaps: a) ./configure --with-ndb-ccflags=-DNDB_LARGE_DEFAULT_HASHMAPS b) storage/ndb/compile-cluster --with-ndb-ccflags=-DNDB_LARGE_DEFAULT_HASHMAPS c) make NDB_EXTRA_FLAGS=-DNDB_LARGE_DEFAULT_HASHMAPS to verify that the build creates large hashmaps (3840 entries instead of 240), start an initial cluster and do ndb_show_tables, then a hashmap named DEFAULT-HASHMAP-3840-NN should show up, where NN is the number of nodegroups. 	f12d7ad337596dc4a110e18aeeda6fa9d16f6d65
----------------------------
WL#6045 Improve Innochecksum Done Implementation:: R01 - It shall be possible to specify the checksum algorithm to innochecksum utility. R02 - innochecksum shall provide option to rewrite the current checksum using the specified algorithm. R03 - innochecksum shall provide option to rewrite checksum even if the current checksum is invalid. R04 - innochecksum shall allow to configure the maximum checksum mismatch allowed before terminating the program. R05 - innochecksum shall operate on multiple tablespace files. R06 - innochecksum shall operate on multiple files in the same tablespace. R07 - innochecksum shall operate on files greater than 2GB. R08 - innochecksum shall work online on a running database. R09 - Innochecksum shall chart out page type summaries for each page in the filespace, and would dump the info on standard output(stdout) or standard error(stderr) as it goes. R10 - Debug option for innochecksum tool shall change & must work similar as mysqld debug option works. 	67a739b5837968a00e6fd54fa23b5b5cbe83c261
----------------------------
Add host_info/config.h.in as config.h.cmake which is not in .bzrignore 	3c12da1c1dccee0d9edcc0d230f4bfdb2709375e
----------------------------
BUG#16196591 - CLIENTS CANNOT CONNECT TO MYSQL PROBLEM: When large number of connections are continuously made with wait_timeout of 600 seconds for  some hours, some connections remain after wait_timeout expired and also new connections get struck under the configuration and the scenario reported in bug#16196591. FIX: The cause of this bug is the issue identified  and fixed in the BUG#16088658 in 5.6.Also LOCK_thread_count contention issue fixed in BUG#15921866 in 5.6 need to be in 5.5 as well. Since the issue is not reproducible, it has been verified at customer configuration the issue could not be reproduced after a 48-hour test with a non-debug build which includes the above two fixes backported. 	97cbe84f4462bc58d1249cdc45115c3f12e2e55c
----------------------------
Bug#15993712-REPLICATION FAILURE ON LOADING DATA INTO A VIEW WITH BINLOG_FORMAT=STATEMENT Replication breaks when a 'LOAD DATA' statement is used against a view object. There are two problems Problem 1): if field list is not explicitly mentioned, then server expands all fields of the base table, even those that aren't used in the view. Fix: 'All fields' logic should look into view fields only and should not be from the base table. Problem 2): if field list is mentioned, then those fields are expanded as qualified identifiers with base table's name. Eg: column 'i' in 'v1' expanded as `test.t1.i` Fix: Do not expand the columns as qualified identifiers 	ad172f0f1bc28f054fb35296060f65781f67172d
----------------------------
"Bug#16088188  'STOP SLAVE' MAY CAUSE DEADLOCK Being stopped the slave IO thread can deadlock with one that queries SHOW STATUS LIKE 'heartbeat_period'. Reason of the deadlock resembles bug 14236151 case. The common part is the contative LOCK_active_mi. A difference is LOCK_status in place of LOCK_global_system_variables. Ordering of LOCK_active_mi and LOCK_status aquisition must be as they are listed in this clause. Fixed with applying a similar to bug 14236151 pattern to temporarily release the critical participant of deadlock inside a status function. It's LOCK_status this time. The following set of status is found out to be vulnerable: {""Slave_retried_transactions"",(char*) &show_slave_retried_trans, SHOW_FUNC}, {""Slave_heartbeat_period"",   (char*) &show_heartbeat_period, SHOW_FUNC}, {""Slave_received_heartbeats"",(char*) &show_slave_received_heartbeats, SHOW_FUNC}, {""Slave_last_heartbeat"",     (char*) &show_slave_last_heartbeat, SHOW_FUNC}, {""Slave_running"",            (char*) &show_slave_running,     SHOW_FUNC}, Their functions are fixed. "	532e874fd96bffd6c0bee0e4e21e4a31f509fea8
----------------------------
"Bug#16210894 SERVER_ID IN INFORMATIONAL MESSAGE WRAPS DUE TO WRONG PRINTF SPECIFIER Problem: ======= With a slave having large server-id of (e.g. 4294967291), the message printed on master when slave starts binlog dump and log_warnings>1: [Note] Start binlog_dump to slave_server(-5), pos(test-bin.000002, 107) Analysis: ======== As per the documentation server_id can be from 0 .. 4294967295. The server_id is declared as ""uint32"" type. But during printing this value the format specifier is given as ""%d"" which is incorrect. ""%d"" is only good enough for signed int output. Fix: === As part of fix ""%d"" has been replaced with ""%u"". "	72af8c87775025a7779be6f0162dfa5c01dd9415
----------------------------
- BUG#1608883:  KILLING A QUERY INSIDE INNODB CAUSES IT TO EVENTUALLY CRASH WITH AN ASSERTION Correcting the build failure that was caused because of changes checked-in to below mentioned revision. (Changes: DEBUG_SYNC_C should be disabled for innodb_plugin under Windows enviornment. Note: only for innodb_plugin.) revno: 3915 revision-id: krunal.bauskar@oracle.com-20130114051951-ang92lkirop37431 parent: nisha.gopalakrishnan@oracle.com-20130112054337-gk5pmzf30d2imuw7 committer: Krunal Bauskar krunal.bauskar@oracle.com branch nick: mysql-5.1 timestamp: Mon 2013-01-14 10:49:51 +0530 	4afa505525f94e368e5e226312ce117c43f4df1b
----------------------------
In adapter_config.js, detect the type of build and set build_dir accordingly. 	0b36e1f87c4b4768a72b4818e65556e53e2f8f0b
----------------------------
Bug#16169638 INNODB DEADLOCK DETECTION RETURNS FALSE NEGATIVES IN SOME CASES There is a bug in the positioning of the iterator on the first lock and the next lock. Move !srv_read_only_mode assertion to the caller, There cannot be any lock waits when InnoDB is running in read only mode. Approved by Jimmy Yang rb#1876. 	0c8390b3d67e307d1ff08ec42960556bf928568d
----------------------------
Bug#16183892 - INNODB PURGE BUFFERING IS NOT CRASH-SAFE With innodb_change_buffering enabled, Innodb buffers all modifications to secondary index leaf pages when the leaf pages are not in buffer pool. Crash InnoDB while an IBUF_OP_DELETE is being applied. Restart and note that the same record can be applied again which may lead to crash. Mark the change buffer record processed, so that it will not be merged again in case the server crashes between the following mtr_commit() and the subsequent mtr_commit() of deleting the change buffer record. Testcase: No testcase because it is difficult to get the timing right with the two asyncronous task purge and change buffering Approved by Marko. rb#1893 	239cdbfdfe6163994ba76c8d82d637cf818fd202
----------------------------
Bug#16227539 INCORRECT CHECK FOR INNODB_READ_ONLY IN ALTER TABLE At the start of ha_innobase::prepare_inplace_alter_table() and ha_innobase::inplace_alter_table() there is a check for srv_read_only_mode. If InnoDB is in read-only mode, these methods would return a successful status and do nothing. But, the srv_read_only_mode=true should have been blocked already in ha_innobase::check_if_supported_inplace_alter(). Replace the bogus conditions with debug assertions similar to that in ha_innobase::commit_inplace_alter_table(). 	784947cdd72e8795007c763faaca6a7c1fbda06e
----------------------------
Bug#16215165 - BAD DATA RETURNED IN PERFORMANCE_SCHEMA.THREADS, COLUMN PROCESSLIST_INFO Before this fix, SELECT PROCESSLIST_INFO from performance_schema.threads; could return bad data for the column. 1) The data returned could be NULL even when the thread is currently executing a statement, instead of returning the query text. 2) The data returned could also contain invalid data. The root cause for 1) is that entering a new stage during the query execution causes spurious changes in PFS_thread::m_processlist_lock, which is used to protect both PROCESSLIST_STATE and PROCESSLIST_INFO. The root cause for 2) is that the thread instrumentation does not make a copy of the query text but uses the original query test pointer directly. This pointer can become invalid when the query ends and memory is freed. This fix implements different dedicated locks with PFS_thread::m_processlist_state_lock and PFS_thread::m_processlist_info_lock, so that a change in one attribute avoids causing spurious NULL when reading the other attribute. This fix now capture a copy of the processlist info, in PFS_thread::m_processlist_info, which is then safe to read even after the query ends. 	2dfd6c0bf299b32f337eda5c6257ef7614e56ccc
----------------------------
"BUG#11745049 - LOG_ERROR VARIABLE IS BLANK WHEN NOT EXPLICITLY STATED IN MY.CNF DESCRIPTION: log_error global variable shows empty string ("""") if not specified at server startup or in configuration file. This is reported for *nix platform. On windows, it shows ./HOSTNAME.err as its output. ANALYSIS : Error output on *nix platforms is by default STDERR. On Windows it is by default in file, and the default file is ./HOSTNAME.err. If both --log-error and --console is used on windows, the value of log_error is shown but the output is directed to stderr. FIX : Changed the value of log_error variable to ""STDERR"" whenever output is directed to the STDERR. "	e7d8c08fd4965362280c518241f598b10d7668ab
----------------------------
WL#6613: Refactor logging code - split logging and binlogging code - Move replication code out of log.h and log.cc. - Remove MYSQL_LOG and move implementation to MYSQL_QUERY_LOG and MYSQL_BINARY_LOG. - Move Log_throttle, log_slow_applicable(), log_slow_statement() and log_slow_do() to log.h/log.cc. - Cleanup interaction between sys_vars and log, move code from sys_vars to log. - Make usage of LOCK_global_system_variables & LOCK_logger more consistent. - Remove external access to LOCK_logger. - Early exit if logs are closed (e.g. don't lock mutexes). - Cleanup construction/destruction. - Use common code for reopen/flush. - Simplify LOGGER implementation - use enum_log_table_type more. - Remove some global functions, use LOGGER functions directly. - Make everything but LOGGER private. - Write to error log without using log_event_handler since we only support error logging to file anyway. - Splitt error logging and slow/general log (LOGGER). - Simplify error logging functions. - Remove sql_print_message_handlers[]. - Remove dead code. - Update log.h/log.cc according to current code standard. - Use true/false rather than TRUE/FALSE. - Use bool rather than my_bool. - Use size_t. - Indentation/spacing cleanup. - Move function documentation to header file and make into doxygen. - Improve code documentation, add missing doxygen. - Add documentation of query logging sysvars. - Add simple unit test for Log_throttle - Renames: opt_log => opt_general_log opt_logname => opt_general_logname opt_log_raw => opt_general_log_raw mysql_log => mysql_general_log key_file_query_log => key_file_general_log LOGGER => Query_logger MYSQL_QUERY_LOG => File_query_log event_coordinates => rpl_event_coordinates 	5fc632175fecf4b23d7bae6e3b7e4b234ef428db
----------------------------
Merge: 0129c3b bfbdbc7 Bug #11752803  SERVER CRASHES IF MAX_CONNECTIONS DECREASED BELOW CERTAIN LEVEL Merging from 5.6 to trunk 	02e1f6744c43863ca0cd7c67f6c3e1edf270beef
----------------------------
Merge: d8419b1 468831f Bug #11752803  SERVER CRASHES IF MAX_CONNECTIONS DECREASED BELOW CERTAIN LEVEL Merging from 5.5 to 5.6 	bfbdbc792634abb1d8f9e313dcedd5b818b14c76
----------------------------
Merge: e0c3978 e998798 Bug #11752803  SERVER CRASHES IF MAX_CONNECTIONS DECREASED BELOW CERTAIN LEVEL Merging from 5.1 to 5.5 	468831f393ac3b97a21ed758d820b4dc5fa327eb
----------------------------
"Bug #11752803  SERVER CRASHES IF MAX_CONNECTIONS DECREASED BELOW CERTAIN LEVEL Problem description: mysqld crashes when we update the max_connections variable to lesser value than the number of currently open connections. Analysis: The ""alarm_queue.max_elements"" size will be decided at the server start time and it will get modified if we change max_connections value. In the current scenario the value of ""alarm_queue.max_elements"" is decremented when the max_connections is set to 2. When updating the ""alarm_queue.max_elements"" value we are not updating ""max_used_alarms"" value. Hence, instead of getting the warning ""thr_alarm queue is full"" it is ending up in asserting the server at the time of inserting new elements in the queue. Fix: the fix is to dynamically increase the size of the alarm_queue. In order to do that, queue_insert_safe() should be used instead if queue_insert(). "	e99879824a3ddb1f97ce05de3fe003adcc5b48ee
----------------------------
"Merge: 0e1ce80 e75e94c BUG#16062608: REPLICATION COMMANDS IMPLICIT COMMIT AND SET GTID_NEXT=""UUID:X Merge from mysql-5.6 into mysql-trunk. "	1eabf3fad61657c183a187a7ff9e52a3a2351d44
----------------------------
"BUG#16062608: REPLICATION COMMANDS IMPLICIT COMMIT AND SET GTID_NEXT=""UUID:X"" When @@SESSION.GTID_NEXT is set to ""UUID:X"" and a statement that implicit commits but does not log changes is executed, like START SLAVE, that GTID is logged as a empty transaction. This is not desirable since it may cause inconsistency problems: 1) DBA is performing a restore or recovery; 2) She/he is applying some empty transactions on slave to avoid problematic transactions from master; 3) Made a mistake and set a not need to skip GTID and didn't revert it. 4) Start slave. 5) That logged GTID, which will cause that the transaction from master will be skipped, will eventually cause inconsistency problems. To avoid that kind of mistakes, when a command that causes a implicit commit but does not change data is executed when @@SESSION.GTID_NEXT is different from AUTOMATIC, a error is thrown saying that this instruction is not allowed. "	e75e94c9355dfec36805c2069b322b198e5b9d50
----------------------------
Bug#16196158 - RACE CONDITION IN TABLE PERFORMANCE_SCHEMA.THREADS Manual backport from mysql-5.6 (5.6.11) to mysql-5.6.10-release (5.6.10) 	e05e674320fca0baf795f116c12ed3f5a244fadc
----------------------------
Bug#16196158 - RACE CONDITION IN TABLE PERFORMANCE_SCHEMA.THREADS Code cleanup: remove over optimistic assert, empty strings are ok. 	e54013560f0e3918fd3b341f86abee4586071309
----------------------------
Bug#16196158 RACE CONDITION IN TABLE PERFORMANCE_SCHEMA.THREADS Before this fix, the following query: SELECT * from performance_schema.threads could crash, while attempting to read the column PROCESSLIST_INFO The reason for the failure is a race condition, that can happen when reading the state of the thread that is changing. The root cause is that the PFS_lock used to protect dirty reads was used incorrectly. The PROCESSLIST_STATE and PROCESSLIST_INFO columns are protected by PFS_thread::m_processlist_lock, but the code used PFS_thread::m_lock instead. 	f02bdee0d8f7284264eba93963f577fba0b94b62
----------------------------
BUG#16183950: ASSERT FAILURES ON BINLOG SUITE DO NOT SOURCE INCLUDE/SHOW_RPL_DEBUG_INFO.INC If a assert fails on rpl suite, the following valuable information is printed (and logged to test case log): SELECT NOW(), @@SERVER_ID, @@SERVER_UUID SHOW SLAVE STATUS SHOW MASTER STATUS SHOW PROCESSLIST SHOW BINLOG EVENTS IN <binlog_name> which helps to understand the failure, or at least provides the failure scenario. If a assert fails on binlog suite that does not happen, only the assert values are displayed, which on many cases are not sufficient to understand what happened. This was due to include/assert.inc only source include/show_rpl_debug_info.inc, when present to failures, when $rpl_inited was defined, that is, when replication was initialized. From now, rpl_assert.inc will source include/show_rpl_debug_info.inc when failures happens if $show_rpl_debug_info flag is set. This new flag is set on include/have_log_bin.inc. include/have_log_bin.inc was already sourced on include/rpl_init.inc, so previous debug behaviour on rpl suite is preserved. 	7cbecf9befc31e3dc78a67f54fc0ded25f02469a
----------------------------
"Bug#16061982:REPLICATION BETWEEN A LINUX MASTER AND WINDOWS SLAVE, WITH MIXED CASE BREAKS Problem: ======= Replication between a Linux master and Windows slave, with mixed case database/table names, fails after a replicated table is opened locally on the slave. ""FLUSH TABLES"" command needs to be issued on the salve to see the latest updates that are applied on slave. The master and the slave should have the following case settings. Linux master: lower_case_table_names=0 Windows slave: lower_case_table_names=2 Analysis: ======== When ""lower_case_table_names"" is set to 1 or 2 in a general scenario without replication the database names and the table names are converted to lower case. The following two function check for ""lower_case_table_names>0"" and convert the db and table name to lower case. ""check_and_convert_db_name"" and ""st_select_lex::add_table_to_list"" But when replication is enabled dabase names and table names are reassigned once again as per the events that are received from the binlog without checking for ""lower_case_table_names=2"". For example if the database name is ""TestME"" when the table is opened locally on windows a new table cache entry is created ""testme.testnumberone"" and when opened through replication another table cache entry ""TestME.testnumberone"" is created. Because of this problem users will not be able see the latest updates. ""Flush Tables"" flushes both the cache entries hence they are able to see the updates. Fix: === Existing code checks only for ""if (lower_case_table_names == 1)"". This has been replaced with ""if (lower_case_table_names)"". "	f5d4acdceef6780b0871b060bb2219f3af08a48f
----------------------------
Merge: d603fbf 9cae601 - WL#6560: InnoDB: separate tablespace for innodb-temp-tables. - enable separate tablespace for temp-tables. - as part of overal temp-table optimization we are limiting logging and so during crash-recovery for complete cleanup we need this separate tablespace. - semantics or behavioral changes enabled: - temp-tablespace is configurable using cnf using innodb_temp_data_file_path. all semantics are same as innodb_data_file_path except no use of raw device. - temp-tablespace get dynamically generate space-id. - temp-tablespace is always re-created on server start. - non-compressed temp-tables resides in temp-tablespace. compressed temp-tables continue to operate as is. Test-Case: innodb_wl6560, innodb_wl6560_debug, innodb_wl6560_1. Testing: pb2 on mysql-trunk-stage found passing. Approved by: Sunny/Jimmy (rb#1472). 	8e4e576ed4124c95404be112d0f8b4c4fd73cb9c
----------------------------
"Merge: f3ac163 f653f38 Bug#16014394:  DEFAULT-AUTHENTICATION-PLUGIN NOT SETTING ""OLD_PASSWORDS"" IN SYNC WITH PLUGIN Description: Merge from mysql-5.6 to mysql-trunk. "	6cef10e24a8a7eceb275f2aef3275cca29b25e66
----------------------------
"Bug#16014394:  DEFAULT-AUTHENTICATION-PLUGIN NOT SETTING ""OLD_PASSWORDS"" IN SYNC WITH PLUGIN Description: Server option --default-authentication-plugin should accept either ""mysql_native_password"" or ""sha256_password"" as valid values. However, at present server accepts any value and sets default_authentication_plugin to point to it. Value of old_passwords is updated only if plugin name matches with ""sha256_password"". Solution: Fix is to make sure that server accepts one of the two valid values or raise an error. "	f653f38d4910a668836f4b2125f559343849c0cf
----------------------------
Bug#14678248: SLAVE_OPEN_TEMP_TABLES_LOCK INITIALIZED MULTIPLE TIMES The slave_open_temp_tables_lock can currently be initialized multiple times because this action is made on the Relay_log_info constructor. In fact, this constructor is not only used by the SQL thread itself but also by clients to execute Binlog statements where dummy relay log info objects are needed. Not belonging to the class, the double initialization of this lock can be problematic. Guaranteeing that the lock is only initialized on the relay log info object that belongs to the SQL thread solves this issue. 	f54f7bf21ec051c5118f0852e1d537716466c7fb
----------------------------
Bug#14626800 ASSERTION FAILURE IN DEBUG_SYNC() MySQL has debug sync facility that is enabled by default on PB2 machines. This facility is used by storage engines to allow synchronization points(which are usually used by test code). When a connection is closed, the following things are done during connection cleanup in the order given below: a) Cleanup is done for the debug sync facility. b) Temporary tables are closed. While the temporary tables are being closed by storage engine, storage engine tries to use the debug sync facility. However since debug sync facility is already cleaned up, an assert is hit in debug sync. The fix is to do the cleanup related to debug sync after the temporary tables are closed. We are not removing the assert causing the failure because doing so can mask the bug when debug sync points are not behaving as intended. 	852a868ae0c9a8d17757e701b8d16b347167e834
----------------------------
Merge: e120547 4510244 BUG#16084200: REPLICATION FAILS WITH ERROR 1837 (ER_GTID_NEXT_TYPE_UNDEFINED_GROUP) Merge from mysql-5.6 into mysql-trunk. 	b1dd0e0cd2971572b9b7d84108f8f5fadd75c80e
----------------------------
BUG#16084200: REPLICATION FAILS WITH ERROR 1837 (ER_GTID_NEXT_TYPE_UNDEFINED_GROUP) gtid_rollback(THD*), which purges thd->owned_gtid and so erases current @@SESSION.GTID_NEXT on slave, was being incorrectly executed for all rollback calls, what on multi-statement transactions caused transactions to lost its GTID, what in turn caused slave to stop with ER_GTID_NEXT_TYPE_UNDEFINED_GROUP error. Fixed gtid_rollback behaviour by only executing it when complete transaction is being rollback or autocommit=1. 	451024492c456174c1460d27bad00084bc0dafab
----------------------------
Bug#16165468 CONFUSING SHOW ENGINE PERFORMANCE_SCHEMA STATUS OUTPUT reverted the previous change: revno: 4618 committer: Marc Alff <marc.alff@oracle.com> branch nick: mysql-5.6-bug16165468 timestamp: Mon 2013-01-14 20:05:35 +0100 	bb656af6036851b1db748820ec31aa9ecf6ba2a5
----------------------------
"Bug#16165468 CONFUSING SHOW ENGINE PERFORMANCE_SCHEMA STATUS OUTPUT Before this fix, the output of SHOW ENGINE PERFORMANCE_SCHEMA STATUS would use different naming conventions, such as XXX.size / XXX.row_size, and XXX.count / XXX.row_count. "".size"" and "".row_size"" are in fact different names for the same concept, there is no reason to use both names. Likewise for "".count"" and "".row_count"". This fix rename items to consistently use the ""XXX.size"" and ""XXX.count"" naming convention, for clarity. "	3caa1c8ad746b44c24754dc21645a344a8533f3b
----------------------------
Bug#11762107 HAVE_MLOCK NEVER SET BY CONFIGURE, AND IF SET BREAKS COMPILATION Before this fix, mysys source code contained memory locking apis: - my_malloc_lock - my_free_lock The implementation for these api was in fact never built, as the code had a build break for 64 bit platforms since it was last changed, around 2007-05-10. The fix is to simply remove this dead code. See the bug report for further comments. Other components may use mlock() and mlockall() directly, so the cmake checks for HAVE_MLOCK and HAVE_MLOCKALL are preserved. 	3b10b741796e473f242efffce3b4828495a2a468
----------------------------
BUG#16074161: CRASH IN SLAVE_ROWS_SEARCH_ALGORITHMS_CHECK WHEN SETTING WRONG ALGORITHM Problem: Setting wrong algorithms for the variable SLAVE_ROWS_SEARCH_ALGORITHMS leads to crash, in certain specific cases. This is due to the fact that the check for values of the algorithm was not being done as expected. Fix: We fix this problem by using already existing function check_not_null() to see if the algorithm values specified is not null. We also add some additional checks to prevent incorrect values from being set. 	59edc7970fe08167a959b982f238d8e2fbafc5e9
----------------------------
BUG#11756280 - STATEMENTS USING FULLTEXT PARSER PLUGINS SHOULD BE MARKED UNSAFE Problem: Statements that cannot safely be logged in statement format are marked unsafe. Any use of plugins that could affect rows in a table should be marked unsafe because it cannot be determined that the statement will have the same effect on the slave. However, use of fulltext parser plugins is currently not marked as unsafe. This can cause the slave to go out of sync if the plugged-in fulltext parser does not behave consistently on master and slave. Fix: Statements using full-text parser plugin are marked unsafe (i.e. - the statement is logged in row format if binlog_format=mixed and causes a warning to be generated if binlog_format=statement). 	f598eb9a1cb1adf7f759a0006c90f76749113867
----------------------------
"BUG#16084426: MYSQLDUMP WITH GTID FAILS TO RESTORE WITH PUZZLING ERROR In order to restore or provisioning a new server, DBAs can set @@GLOBAL.GTID_PURGED to a given GTIDs set specifying the transactions that were imported. This operation requires that @@GLOBAL.GTID_EXECUTED, and consequently @@GLOBAL.GTID_PURGED since the latter is a subset of the former, is empty to be executed, in order to avoid DBAs mistakes that override server executed GTIDs. When the requirement was not fulfilled, the following error message was thrown: ""GTID_PURGED can only be set when GTID_EXECUTED is empty."", what could be misleading since GTID_EXECUTED has global and session scopes. In order to avoid scope misleading, error messages that mention GTIDs variables include the variable scope. "	e4116674ee0c5b449e4020dad77c09c6ec552cd1
----------------------------
Merge: 5b58fe4 46c3077 Bug #15985752  --CHARACTER-SET-SERVER OPTION CAN SET UNSUPPORTED CLIENT/CONNECTION CHARSET Problem was caused by init_common_variables() function which uses --character-set-server value to assign default_charset_info global variable and 5 charset variables in global_system_variables structure. Fixed by checking if charset value is acceptable for client-related variables. is_supported_parser_charset() function used for the check. Additional check implemented in thd_init_client_charset() - if client charset is not supported then error is generated. parse_client_handshake_packet() fixed to use global_system_variables.character_set_client instead of default_charset_info when client does not provide its character set 	5e5b43b4b979c3eb81029a2aa9d0d7d600227127
----------------------------
Bug #15985752  --CHARACTER-SET-SERVER OPTION CAN SET UNSUPPORTED CLIENT/CONNECTION CHARSET Problem was caused by init_common_variables() function which uses --character-set-server value to assign default_charset_info global variable and 5 charset variables in global_system_variables structure. Fixed by checking if charset value is acceptable for client-related variables. is_supported_parser_charset() function used for the check. Additional check implemented in thd_init_client_charset() - if client charset is not supported then error is generated. parse_client_handshake_packet() fixed to use global_system_variables.character_set_client instead of default_charset_info when client does not provide its character set 	46c3077620a4201e723de59b3b73a9d897169252
----------------------------
Bug#14629979 - INNODB_SYNC_ARRAY_SIZE SHOULD NOT BE CONFIGURABLE AT RUNTIME The variable should be read-only. The data structures are allocated on startup and destroyed on shutdown. They cannot be changed dynamically. Approved by Calvin on IM. 	0cf10711de072902c628b7edca3a1a81cee98d36
----------------------------
Bug#16038656 - INNODB_FT_USER_STOPWORD_TABLE BECOMES CORRUPT, CAUSES SERVER CRASH Bug#16051857 : REPLICATION FAIL TO START AFTER PROVISIONING SERVER FROM BACK DATADIR WITH GTIDS Bug#16066243 PB2 FAILURES I_MAIN.BUG15912213 AND I_MAIN.CTYPE_UTF8 FOR MACOSX10.6 FOR 5.1 Merged from 5.6 to 5.6.10-release 	f7b3a5eeb1c9d1a9dc69121f58f6f45dc6051d88
----------------------------
BUG#16066150 - SIGNAL_WITH_VIO_SHUTDOWN IS ALWAYS SET IN CMAKE DESCRIPTION: SIGNAL_WITH_VIO_SHUTDOWN is not used as it is hard-coded to 1 in CMake configuration, hence its existence is of no merit. FIX : All references to SIGNAL_WITH_VIO_SHUTDOWN has been removed. 	5ae2bb44b354291650783ef4d4276393a3e419b3
----------------------------
Bug#16038656 - INNODB_FT_USER_STOPWORD_TABLE BECOMES CORRUPT, CAUSES SERVER CRASH rb://1789 Approved by Sunny. The session level dynamic variable stores an char*, but memory that this char* point to has been freed. A flag PLUGIN_VAR_MEMALLOC is provided for this situation. For string variable of plugin, sql_plugin manager the memory allocation and free by itself, so we don't need to manage memory in function innodb_session_stopword_table. So the solution is set the PLUGIN_VAR_MEMALLOC flag for ft_user_stopword_table, and remove function innodb_session_stopword_table. 	9c64483d2c99d458edb8c02b1d70bb9713b81fb5
----------------------------
Bug#16051857 : REPLICATION FAIL TO START AFTER PROVISIONING SERVER FROM BACK DATADIR WITH GTIDS Problem ========= 1) Dump thread always sends a Fake rotate event to the slave to make it update to the new binary log file. This is irrespective of the explicit ROTATE event on binary log. 2) In cases, where an explicit ROTATE event is not written at the binary log end and if the last event is skipped, dump thread sends a HeartBeat event just before sending a FORMAT DESCRIPTION EVENT of the next  binary log (Due to fix for Bug#14775893). If there is an explicit ROTATE event, the dump thread reads and sends it to the slave making it an unskipped event. 3) If a slave IO received *only* a fake rotate event, it's position is updated to the latest binary log file. Next, Slave IO expects a Format description event to update the binary log version. Instead it gets a Heartbeat event of the previous binary log file. 4) The following check in the rpl_slave.cc:queue_event() succeeds: if (mi->get_mi_description_event()->binlog_version < 4 && event_type != FORMAT_DESCRIPTION_EVENT /* a way to escape */) This is because, whenever a rotate event happens as in step 3), a default format  description event with a binary log version 3 is created in rpl_slave.cc:process_io_rotate(). A next Format description event should update it to 4. 5) Since the check in 4) succeeds because of a Hearbeat event, the slave IO thinks that binary log is of old version and goes into queue_old_event().  However, this code path doesnot recognise Heartbeat event  in rpl_slave.cc:queue_binlog_ver3_event() and IO stops  further reading  of events. Solution ======== 1) Send last skippped group heartbeat event only if the event type is not a Format description event. This ensures that Format descrption event is the first event of the binary log file to be sent to the slave and the last skipped heartbeat always corresponds to the latest binary log file. 2) This patch also prevents a possible but harmless and redundant Heartbeat event corresponding to the EOF of the binary log file. 	b955b844804a153b08c23019bec8628333d766ac
----------------------------
Merge: 1122abd 15b29e5 Correct year range in 'mysql_config_editor' test result file 	2ff59699732a57ab85c8ac315ce767acee7d17b0
----------------------------
Correct year range in 'mysql_config_editor' test result file 	15b29e569724f0279974c9223a5e6be9dcfa5dcd
----------------------------
Bug#16060864 SEGMENTATION FAULT IN PERFORMANCE_SCHEMA WITH HISTORY SIZE 0 Before this fix, configuring the server with: - performance_schema_events_waits_history_size=0 - performance_schema_events_waits_history_long_size=0 could cause a crash in the performance schema. These settings to 0 are intended to be valid and supported, and are in fact working properly in mysql 5.6 and up already. This fix backports the code fix and test cases from mysql 5.6 to the mysql 5.5 release. 	ea8135d8df7b8da2701956640fa4251c7533dbbb
----------------------------
Merge: 33e2f10 2922419 BUG#14792410 - INCONSISTENCY ABOUT MESSAGEFILE PATH NAME STYLE IN MTR ON ALL PLATFORMS DESCRIPTION: Errors are printed in the Server logs when a directory containg errmsg.sys is specified directly through the --lc-messages-dir or --language parameter. FIX : Improved the messaging and changed sql_print_error() to sql_print_warning(). 	c13923d59b3d47b9a236de1c7a9f7923c28b3f0b
----------------------------
BUG#14792410 - INCONSISTENCY ABOUT MESSAGEFILE PATH NAME STYLE IN MTR ON ALL PLATFORMS DESCRIPTION: Errors are printed in the Server logs when a directory containg errmsg.sys is specified directly through the --lc-messages-dir or --language parameter. FIX : Improved the messaging and changed sql_print_error() to sql_print_warning(). 	2922419233b6c4e0dd195d83602970e63b5fea06
----------------------------
- WL#6560: - updated code to move default location of temp-tablespace from data-dir to tmp-dir. - given that tmp-dir can take multiple value, system-temp-tablespace will always reside in 1st tmp-dir only. this is non-configurable. 	1de790cff31957e53285115541227ab0949b3692
----------------------------
- WL#6560: - normal shutdown: remove temp-tablespace. - abort during init: remove temp-tablespace. (this generally can happen due to some wrong/invalid startup options). - crash: DBA need to remove the file manually (unless server is re-started with same configuration that will remove the file during server-startup). 	16dd0399b5830762a1bbe8aae4bcfb3bce7b4b8d
----------------------------
Bug 15851247 MYSQL_CONFIG_EDITOR Problem: mysql_config_editor does not support providing socket and port as a part of login arguments. It creates problems if multiple instances of server are running on different ports and sockets. Solution: port and socket are also added as command line options just the way other options are implemented. 	1ca02fa721d292cbb421ef72a3b7aba66ddfe7a2
----------------------------
Fix mysql_config_editor test after new copyright year 	cb82c1ee41b93fd80dc36a893b7b4a3a0f76a886
----------------------------
Bug #15927620 - AFTER DROPING A TABLE , THE PFS TABLE STILL, WILL HAVE THE ENTRY OF THE *.IBD When PFS is enabled, create table operation adds entries to PFS table performance_schema.file_instances. After the drop table operation, the entries in PFS table are left over. This is because PFS_FILE_DELETE operation is not instrumented for file deletion functions. Fixed by instrumenting os_file_delete() and os_file_delete_if_exists() with PFS_FILE_DELETE. Approved by Jimmy. rb#1731 	0180ff85e625e219a76be68e9bb09d043e96d87f
----------------------------
"Fix Bug#13463493 INNODB PLUGIN WERE CHANGED, BUT STILL USE THE SAME VERSION NUMBER 1.0.17 Now that InnoDB/InnoDB Plugin is no longer separately developed and distributed from the MySQL server it does not need its own version number. Thus use the MySQL version instead. ""Removing"" the version altogether is not feasible because the config variable 'innodb_version' cannot be removed in GA branches. Reviewed by:	Marko (rb#1751) "	031e6c47bf12d8d9204d49aee28a5249894edb8e
----------------------------
Add MCP for problem with HA_HAS_OWN_BINLOGGING flag semantics which has changed after patch which fixed performance_schema + gtid 	319e9a768a30e09458baebe90963e6777d345700
----------------------------
Bug #14748587 INNODB.INNODB_BUG11766634 FAILING ON DAILY-5.6 The test case innodb_bug11766634.test has been written with the assumption that innodb_file_per_table is OFF, which was the default value for versions <= 5.6.5.  But the default value of innodb_file_per_table is ON for MySQL versions >= 5.6.6.  So this configuration variable is explicitly set to OFF in the test case. 	9584f32941f447d642d9f676c2fcabe2c09656ba
----------------------------
Bug#15997345: REMOVE WITH_CSV_STORAGE_ENGINE AND WITH_MYISAMMRG_STORAGE_ENGINE IFDEFS This patch removes #ifdef WITH_MYISAMMRG_STORAGE_ENGINE and #ifdef WITH_CSV_STORAGE_ENGINE Building with -DWITH_MYISAMMRG_STORAGE_ENGINE=0 -DWITH_CSV_STORAGE_ENGINE=0 had no effect since these plugins are declared as mandatory. The #ifdefs are therefore pointless. 	5693c18732c2b9c7e3444b1f66b23d89fe194379
----------------------------
Bug#14258884 RPL.RPL_HEARTBEAT_BASIC FAILS SPORADICALLY ON PB2 Bug#13627066 RPL.RPL_DEADLOCK_INNODB FAILS ON PB2 SPRADICALLY Sporadic and long time standing mismatch at the test run include/start_slave.inc SET @@global.event_scheduler=1; -Number of received heartbeat events: 0 +Number of received heartbeat events: 1 was caused by a incorrect assumption the no hearbeat event should be sent in the context of that test's snippet. In fact, there is no guarantee that empty binlog status won't last over the hearbeat period. Even though period of scheduled by the server scheduler UPDATE queries is 1/5 th of the heartbeat period, the actual time in between of two successive bin-logging actions can last as long as the HB period. That's what PB run proves in practice. Fixed with removing ineffecient piece of the test. Bug#13627066 RPL.RPL_DEADLOCK_INNODB FAILS ON PB2 SPRADICALLY A possible reason of SQL thread to fail to increment slave_transaction_retries status is a failure to start the slave threads that went unnoticible thanks to unblocking style of the slave start. combined with also small of innodb_lock_wait_timeout. That could allow a race of the SQL thread retrying after timeout and the mtr user thread counting through polling in a interval. Attempted to fix with correcting the start slave. A separate failure in this test that radomly happens on PB near source include/wait_for_slave_sql_error.inc; is addressed with adding a debug print-outs via rpl_debug=1. Extra info will be necessary to actually tackle this issue (to be repoted once the extra info will be available in PB saved test logs). 	3a159d9f975174826bab6cc1cc6fac6a1b1b079a
----------------------------
Bug #14748587 INNODB.INNODB_BUG11766634 FAILING ON DAILY-5.6 The test case innodb_bug11766634.test has been written with the assumption that innodb_file_per_table is OFF, which was the default value for versions <= 5.6.5.  But the default value of innodb_file_per_table is ON for MySQL versions >= 5.6.6.  So this configuration variable is explicitly set to OFF in the test case. 	42cb65b52ff4c6a131c480a0d7d66b7c42bc6185
----------------------------
"Bug#15996571: WARNING RECOMMENDS TO USE A DEPRECATED OR NON-EXISTING OPTION The problem was that if the startup options --log-slow-admin-statements, --log-queries-not-using-indexes or --log-slow-slave-statements were used without specifying --slow-query-log, a warning message referring to the removed ""--log_slow_queries"" would be given instead of using the current name ""--slow-query-log"". This patch fixes the problem by updating the warning message. The patch also fixes similar problems with warning messages given if --general-log-file or --slow-query-log-file are used with --log-output=table (and not =file). "	aa30c48c0a72b941c38cbae54106bfedbe8dcfdd
----------------------------
Bug#14774779 CRASH RECOVERY FAILED, UNABLE TO COMPRESS A PAGE rb://1721 approved by: Marko Makela The bug was introduced by WL6344 in the innodb_log_compressed_pages part. If we don't log compressed pages then we need to do compression during recovery which requires that the uncompressed pages must be deterministically same during recovery but they can differ in garbage bytes potentially causing compression during recovery to fail. This bug will manifest itself only when recovery is done in multiple batches of redo apply. This workaround is to take away innodb_log_compressed_pages option. Note it is not a full revert of WL6344 	2b155007f2ff07ff7fa2e57cc423f6be29780fce
----------------------------
Merge: f29fe6e 85638d6 BUG#15907706 : RPL.RPL_INSERT_ID TEST FAILS ON SOLARIS PLATFORM IN PB2 Upmerge from 5.6 -> mysql-trunk 	fe1fa9fa87b471dcec2d59d62d84cadd9c777652
----------------------------
BUG#15907706 : RPL.RPL_INSERT_ID TEST FAILS ON SOLARIS PLATFORM IN PB2 Problem : rpl.rpl_insert_id fails on PB2 everyday and only on solaris platform. The problem was that the thread_stack value available for the test seems to be less when the test executes on the solaris machines. On other platforms the default value 196608 for 32 bit machines and 262144 bytes for 64 big machines seems to be enough. But on linux the error reports that the the thread_stack value required is beyond the specified limit on the respective platforms. Fix - The problem is fixed by passing the PB_HOST_SPECIFIC_MYSQLD_ARGS host specific arguments to the slave. 	85638d6207ae0484b68266d6a9e04bfed3a98d5d
----------------------------
Merging from 5.5 to 5.6 for bug#11761752 In addition to changes from 5.5, the fix for 5.6 contains additional checks for InnoDB option innodb_buffer_pool_filename. This option does not exists in 5.5 or 5.1. 	29a378b21ca24d6f471ae1d9be6211bc53244a1c
----------------------------
bug#11761752: DO NOT ALLOW USE OF ALTERNATE DATA STREAMS ON NTFS FILESYSTEM. File names with colon are being disallowed because of the Alternate Data Stream (ADS) feature of NTFS that could be misused. ADS allows data to be written to alternate streams of a normal file. The data in alternate streams cannot be seen by normal tools on Windows (explorer, cmd.exe). As a result someone can use this feature to hide large amount of data in alternate streams and admins will have no easy way of figuring out the files that are using that disk space. The fix also disallows ADS in the scenarios where file name is passed as some dynamic variable. An important thing about the fix is that it DOES NOT disallow ADS file names if they are not dynamic (i.e. if the file is created by using some option that needs local access to the MySQL server, for example error log file). The reasoning is that if some MySQL option related to files requires access to the local machine (it is not dynamic), then user can very well create data in ADS by some other means. This fixes only those scenarios which can allow users to create data in ADS over the wire. File names with colon are being disallowed only on Windows. UNIX (Linux in particular) supports NTFS, but it will not be a common scenario for someone to configure a NTFS file system to store MySQL data on Linux. Changes in file bug11761752-master.opt are needed due to bug number 15937938. 	233330773398bd75d65c06c8e3dc533e32ba165c
----------------------------
Bug#15980626 POSSIBLE REPLICATION PERFORMANCE DEGRADATION THROUGH RLI->FLUSH_INFO(TRUE) Problem:sync_relay_log_info was being ignored when transactional tables were updated. No matter what number was set, relay log info file was synced upon committing. This was causing the performance degradation. Fix: Sync(or update relay log info table) after each transaction should happen only when both data and relay log info are stored in transactional tables. Only this scenario will guarantee crash safety. 	696b66dc3918a6e794bd383af3628a741c88fe0e
----------------------------
Bug#15961327: ALTER TABLE...MODIFY...NOT NULL REFUSES TO SILENTLY CONVERT NULL In-Place in InnoDB do not convert from NULL to NOT NULL due to loss of information, it will always give an error for such rows. But ALGORITHM = COPY will do such conversion with only a warning (which in case of strict sql_mode it will turn the warning to an error). So to be consistent, we will only allow INPLACE for NULL -> NOT NULL under strict sql_mode, since that will give an error for both INPLACE and COPY. If not strict mode ha_innodbase::check_if_supported_inplace_alter will return failure, and depending on ALGORITHM it will fall back to COPY or fail. Also notice that ADD PRIMARY KEY () will implicitly add NOT NULL if not already there! Updated tests that uses INPLACE by setting strict sql_mode. Also updated some Swedish error messages. rb 1679 approved by marko. 	c31c3ff74d070978754f6a2be4c95bf55f0e6d05
----------------------------
Merge: d18db5f a8eaf05 Bug#14494893 : INNODB_FILE_PER_TABLE DOES NOT PERMIT ON/OFF AT STARTUP Details : Merge : 5.6->trunk 	61d6c6cc1ff4c500d617e10fb92606d31a4addcf
----------------------------
Bug#14494893 : INNODB_FILE_PER_TABLE DOES NOT PERMIT ON/OFF AT STARTUP Details : - During server initialization, when boolean values 1/true OR 0/false are given, then they were accpected but if on/off were given then they were being considered wrong. Reason : - During server initialization, while checking for the valid values for boolean parameters, only 1/true AND 0/false were being checked. Solution : - Added code to check for On/Off and if found, make them valid values. Test case innodb_file_per_table_basic.test is already there to check this parameter. So no new test case required. I just added --innodb_file_per_table in master.opt files with value On (Default) so that at startup this fix could be verified. 	a8eaf0503f12d7c84122590297913c3589a8b138
----------------------------
BUG#15971607: BINLOG IS DISABLED WHEN SERVER IS STARTED WITH --SKIP-INNODB When server was started with both --log-bin and --skip-innodb, binlog was incorrectly disabled, what caused that no events were logged at all. This happened because binlog was used only when two handlertons were registered. This didn't take in account that we can only have one handlerton, the case where InnoDB is disabled and binlog enabled. Fixed logging initialization to also consider the case where InnoDB is disabled and binlog enabled. 	fb2aeab35cc69b7d85f0f47c23fe1c4143c000d9
----------------------------
Bug#15953730 NDB : SLAVE_ALLOW_BATCHING BROKEN IN 7.2 The fix for this bug was merged up from mysql-5.5-cluster-7.2 to mysql-5.6-cluster-7.3. However, in 7.2, this was an MCP patch on Server code. In 7.3, there is no MCP patch, the fix is upstream in the server code. So rather than fix as an MCP patch in 7.3, we'd prefer to fix this in the upstream (5.6) server code, and merge down. For this reason, the merged fix in 7.3 is backed-out (here), but the testcase (ndb_rpl_batch) is left in. This testcase will remain red until a fix can be merged-down from a 5.6 tree. 	7b3d18ecf89b5bba371bd85d27f05950af13f7b3
----------------------------
Spec file for ULN RPMs: Handle new files of 5.6, including the changed config file template (WL#6055). This finishes the fixes for Bug#15972480. 	2cea3e8dead25b05cf815b6ac89c31bc5cd58903
----------------------------
Bug#15953730 NDB : SLAVE_ALLOW_BATCHING BROKEN IN 7.2: Fixed incorrect merge, test case generates extra warning (regenerated) 	1176fd1095b28cdf2df19ad630b68caccf6a622d
----------------------------
"Bug #15953730 	NDB : SLAVE_ALLOW_BATCHING BROKEN IN 7.2 Fix in cluster 7.2.  Server code setting thd local variable from global option was only hit once per transaction, rather than once per event. Therefore it was set on the first row in the transaction, and not thereafter. This is a merge error from 7.1->7.2 / 5.1->5.5. New testcase added in previous commit tests this scenario. "	02d536723dd7d3b8ce142114ac664abe4ac40740
----------------------------
"Bug #15953730 	NDB : SLAVE_ALLOW_BATCHING BROKEN IN 7.2 This commit adds a new testcase, ndb_rpl_batch which aims to show that slave_allow_batching=ON has a positive effect. This is committed to 7.0 and merged up, giving some protection against future regressions there. In 7.2 it will be joined by the fix. "	e2ff538925f15a3c6bd56540e649ca6bf9ec2837
----------------------------
WL#6587 : Protocol support for password expiration Initial implementation. * added a new capabilities flag CLIENT_CAN_HANDLE_EXPIRED_PASSWORDS * Added a new server option (and a read only global variable) disconnect-on-expired-password. Defailt is on. When off it will cause old clients to get a connection against an expired password account and get an error for every query that they try to execute that's not SET PASSWORD. * server will check for expired passwords at login and will refuse the login if the client didn't set CLIENT_CAN_HANDLE_EXPIRED_PASSWORDS in the client hello packet and if the disconnect_on_expired_password server side option is set. A detailed error (ER_MUST_CHANGE_PASSWORD) will be sent in this case. * server always sets CLIENT_CAN_HANDLE_EXPIRED_PASSWORDS in the server hello packet. libmysql never checks for it. * new mysql_options() option MYSQL_OPT_CAN_HANDLE_EXPIRED_PASSWORDS to set the CLIENT_CAN_HANDLE_EXPIRED_PASSWORDS flag. * mysql binary sets MYSQL_OPT_CAN_HANDLE_EXPIRED_PASSWORDS if run in interactive mode * mysqladmin sets MYSQL_OPT_CAN_HANDLE_EXPIRED_PASSWORDS if the first command is 'password' or 'old_password' * mysqltest sets MYSQL_OPT_CAN_HANDLE_EXPIRED_PASSWORDS * test cases added (both mtr tests and some C test code) * existing test case results updated to reflect the new server command line option. * fixed the linux compilation problems and test failures 	83e9e94baf36df935feb5435924eee8b30e01af2
----------------------------
BUG#15947962: DROP BOTH TEMPORARY TABLE AND REGULAR TABLES ON A SINGLE STATEMENT MISSES GTID When temporary and regular tables or temporary tables with different storage engines are dropped on a single statement, the original statement is split in two. These two statements are logged in two events to binary logs, when gtid_mode is ON each DDL event must have its own GTID. Since drop temporary table does not implicitly commit, in these cases we must force a commit. 	c443d53278e9124016b481b99853ce3e4a1dd119
----------------------------
Merge: 8a207d5 d01c58a Bug#14850601: VALIDATE_PASSWORD_LENGTH SHOULD NOT ACCEPT BELOW 4 AS ANY WAY NOT ABLE TO SET IT Description: validate_password_length system variable is affected by three other system variables 1. validate_password_number_count 2. validate_password_mixed_case_count 3. validate_password_special_char_count This patch introduces update function for above mentioned system variables to make sure that requried updates to validate_password_length happens. 	0f6ce7a718caa58c2cfb39edd4118363f0de4247
----------------------------
Bug#14850601: VALIDATE_PASSWORD_LENGTH SHOULD NOT ACCEPT BELOW 4 AS ANY WAY NOT ABLE TO SET IT Description: validate_password_length system variable is affected by three other system variables 1. validate_password_number_count 2. validate_password_mixed_case_count 3. validate_password_special_char_count This patch introduces update function for above mentioned system variables to make sure that requried updates to validate_password_length happens. 	d01c58abb2af5d69c8be44baace22003e78487a3
----------------------------
"Merge: 10d2f4e 077d899 BUG#12359942 - REPLICATION TEST FROM ENGINE SUITE RPL_ROW_UNTIL TIMES OUT === Problem === The test is dependent on binlog positions and checks to see if the command 'START SLAVE' functions correctly with the 'UNTIL' clause added to it. The 'UNTIL' clause is added to specify that the slave should start and run until the SQL thread reaches a given point in the master binary log or in the slave relay log. The test uses hard coded values for MASTER_LOG_POS and RELAY_LOG_POS, instead of extracting it using query_get_value() function. There is a test 'rpl.rpl_row_until' which does the similar thing but uses query_get_value() function to set the values of MASTER_LOG_POS/ RELAY_LOG_POS. To be precise, rpl.rpl_row_until is a modified version of engines/func.rpl_row_until.test. The use of hard coded values may lead the slave to stop at a position which may differ from the expected position in the binlog file, an example being the failure of engines/funcs.rpl_row_until in mysql-5.1 given as: ""query 'select * from t2' failed. Table 'test.t2' doesn't exist"". In this case, the slave actually ran a couple of extra commands as a result of which the slave first deleted the table and then ran a select query on table, leading to the above mentioned failure. === Fix === 1) Fixed the code for failure seen in rpl.rpl_row_until. This test was also failing although the symptoms of failure were different. 2) Copied the contents from rpl.rpl_row_until into into engines/funcs.rpl.rpl_row_until. 3) Updated engines/funcs.rpl_row_until.result accordingly. "	18b229783a84d6743802e181127b1fbc2705c049
----------------------------
Merge: 7874ca3 8103075 BUG#13812374 - RPL.RPL_REPORT_PORT FAILS OCCASIONALLY ON PB2 upmerge from 5.6 -> trunk 	4c2ae40d310323c29994c6d48781e892a7783215
----------------------------
Merge: 6965086 6682b67 BUG#13812374 - RPL.RPL_REPORT_PORT FAILS OCCASIONALLY ON PB2 Upmerge from 5.5 -> 5.6 	81030754de17596445eb42993233ad347479bdc3
----------------------------
"BUG#13812374 - RPL.RPL_REPORT_PORT FAILS OCCASIONALLY ON PB2 Problem: The problem with the test is that the slave returns from start_slave.inc call too early before the list is actually actualised. This caused the slave stale data to be reported. Fix: Added a wait in the test till the slave's IO status is changed to ""Waiting for master to send event"" which which ensures the list is correctly updated. "	6682b67a8545154a3cc268c1f3b495aa94e52b4e
----------------------------
Fix for Bug#15908684: Job threads may 'sleep' without pending messages being sent This fix correct the calculation of the 'pending' argument to update_sched_config() such that both previously failed 'pending_send', and currently available unsent 'send_sum' together forms the number of 'pending' signals. 	86bffc43952d90574c1ee43ae6930d53a9afbfb3
----------------------------
Fix for Bug#15908684: Job threads may 'sleep' without pending messages being sent This fix correct the calculation of the 'pending' argument to update_sched_config() such that both previously failed 'pending_send', and currently available unsent 'send_sum' together forms the number of 'pending' signals. 	ac8247ce6293dc79adf83df7e2c1d2a2d881fe3d
----------------------------
BUG#14059662 - DDL ON EVENT SCHEDULER MEMORY LEAK WITH SKIP-GRANT-TABLES ENABLED BACKGROUND: When MySQL server is started with --skip-grant-tables option Event Scheduler is disabled,i.e the event scheduler is rendered nonoperational. At low level, Event_queue and Event_scheduler object are not instantiated. When an event DDL like Create Event or Alter Event is performed during this time, it is added in mysql.event table and appropriate operations either create or update are done respectively. Then memory is allocated for the event queue element to be created, But it is not put in the event queue since event queue object has not been instantiated in the beginning itself. While doing server shutdown, when it cleans up scheduler's resources The memory for the Event Queue Element which is created is not deallocated, destructor for it is not called and it hogs the memory without deleting the element. Valgrind reported memory leak because of this issue. FIX: As a fix for this bug, A Check has been added in Create and Update event code. If the Event Scheduler is in DISABLED state, Memory for the event queue element is not allocated. We are allowed to create the event even when the scheduler is DISABLED. Later When the server is restarted again without skip-grant-tables, it picks up the event from mysql.event table and starts executing the event normally. 	384ff4c9927429a92e0e64995471649006e47047
----------------------------
"Bug#11753843:BINARY AND RELAY LOG FILE NAMES DEPEND ON PID FILE NAME Problem: ======= When Binary and relay log names are not specified by user, the default binary log .NNNNNN and .index files are created in the data directory using the PID file as basename. The same is true for the relay log file, slow log file and query log file. According to the documentation, the default names should be based on the hostname. Analysis: ======== ""rpl_make_log_name"" is the function which constructs the basenames for binary and relay log files.   This function takes three arguments, first the ""basename"" supplied by user through option, second the ""pid-file"" name and third the extension to the file name. The second argument ""pid-file"" is used as basename in the absence of user specified basename value. Fix: === In ""rpl_make_log_name"" function call second parameter i.e ""pid-file"" is being replaced with ""default_logfile_name"". ""default_logfile_name"" holds the hostname. While testing the above fix another problem was observed. When user specifies the option like ""slow_query_log_file="" or ""general_log_file="" in the conf file without specifying the file name it causes an invalid memory free. The code snippet is given below. if (!VAR || !*VAR) { my_free(VAR); /* it could be an allocated empty string """" */ VAR= ALT; } Memory for all options are allocated by using ""malloc"" within a memroot. When user specifies ""empty"" string for ""slowlog"" and ""querylog"" files the above code tries to free the memory for the empty string and reassign the pointer. Freeing a part of memory within a memroot is incorrect this causes the invalid memory free error. Since it is an empty string and memroots are automatically cleared upon exit the above ""my_free"" call is not required. Hence removed. "	640c501f8906a490c43b46b022cafc8529ccae98
----------------------------
BUG#15892194 NO WAY TO DETERMINE REQUIRED PASSWORD HASHING TYPE FOR EXPIRED PASSWORD RESET Issue: On the expiry of sha256 password, the client cannot reset it unless it changes the default password hashing style. Currently the default password hashing kind doesn't match the one it should be to reset the password. Solution: Currently the value of old_passwords in client is same as the default value of server. Hence if a case arises that client is connected through a non default password hashing technique, value of old_passwords in client mismatches with what it should ideally be. This patch works in such a way that, if login details are authenticated to be valid, the variable old_passwords is set to the desired value, which is as below according different conditions. mysql_native_password - 0 mysql_old_password - 1 sha256_password - 2 	0dd1a9e7552564de63ea3622a6d8f74a6a80bc33
----------------------------
Merge: 7926086 2bb58b5 BUG#15833516 - SQL_SLAVE_SKIP_COUNTER DOES NOT SKIP ERRORS WITH GTID_MODE ON merge from mysql-5.6 into mysql-trunk 	abc10e03fbc2ef14026d0da5f2d43af05d46a371
----------------------------
"BUG#15833516 - SQL_SLAVE_SKIP_COUNTER DOES NOT SKIP ERRORS WITH GTID_MODE ON === Problem === 'SET GLOBAL sql_slave_skip_counter = N' skips the next N events from the master. This is useful for recovering from replication stops caused by a statement. But this works only with a server not running in GTID mode. When a server is configured to run in GTID mode, empty transactions have to be executed to do the same. 'sql_slave_skip_counter' should not be used with GTIDs. It will not work the way a user would expect it to. In particular, after a failover or reconnect, the skipped transaction will be re-executed again, which is consistent and unavoidable with GTID logic, but clearly not what the user wanted. The correct way to skip transactions when GTIDs are enabled is to execute an empty transaction, i.e.: 1. Get the GTID of the failing transaction; 2. Execute SET GTID_NEXT = '<gtid of failing transaction>'; (Note that the server skips transactions if GTID_NEXT is set to a GTID that already exists in GTID_DONE.) 3. Execute COMMIT; This will make the transaction be skipped permanently. === Fix === The bug is fixed by generating an error message when a user tries to set sql_slave_skip_counter when gtid_mode = ON. 1) Created a macro ""ER_SQL_SLAVE_SKIP_COUNTER_NOT_SETTABLE_IN_GTID_MODE"". 2) Added a check under check_slave_skip_counter() to check if GTID mode is set. If yes, an error is generated at the client. "	2bb58b5522597d09ea4ab654923e95724f0b189b
----------------------------
Merge: 86f5d09 e4891c6 BUG#15833516 - SQL_SLAVE_SKIP_COUNTER DOES NOT SKIP ERRORS WITH GTID_MODE ON merge from mysql-5.6 into mysql-trunk 	7926086c47ec854982e295d89b09c745d701a657
----------------------------
"BUG#15833516 - SQL_SLAVE_SKIP_COUNTER DOES NOT SKIP ERRORS WITH GTID_MODE ON === Problem === 'SET GLOBAL sql_slave_skip_counter = N' skips the next N events from the master. This is useful for recovering from replication stops caused by a statement. But this works only with a server not running in GTID mode. When a server is configured to run in GTID mode, empty transactions have to be executed to do the same. 'sql_slave_skip_counter' should not be used with GTIDs. It will not work the way a user would expect it to. In particular, after a failover or reconnect, the skipped transaction will be re-executed again, which is consistent and unavoidable with GTID logic, but clearly not what the user wanted. The correct way to skip transactions when GTIDs are enabled is to execute an empty transaction, i.e.: 1. Get the GTID of the failing transaction; 2. Execute SET GTID_NEXT = '<gtid of failing transaction>'; (Note that the server skips transactions if GTID_NEXT is set to a GTID that already exists in GTID_DONE.) 3. Execute COMMIT; This will make the transaction be skipped permanently. === Fix === The bug is fixed by generating an error message when a user tries to set sql_slave_skip_counter when gtid_mode = ON. 1) Created a macro ""ER_SQL_SLAVE_SKIP_COUNTER_NOT_SETTABLE_IN_GTID_MODE"". 2) Added a check under check_slave_skip_counter() to check if GTID mode is set. If yes, an error is generated at the client. "	e4891c64ade29051b51024acce66354896e614f1
----------------------------
BUG#14737388: STOP EVENT ON MTS MAY CAUSE DUPLICATE RELAY LOG PURGE When Multi-Threaded Slave (MTS) is ON and slave is restarted just before applying the last transaction read from relay log and relay log contains a Stop event, on server start following sequence of actions happens: 1) Purge until relay log slave-relay-bin.000021 (included) when slave status was: group_master: master-bin.000001; pos: 1912 group_relay: ./slave-relay-bin.000021; pos: 515 (EOF) event:       ./slave-relay-bin.000021; pos: 515 2) Purge again until relay log slave-relay-bin.000021 (not included) when status was: group_master: master-bin.000001; pos: 2120 group_relay: ./slave-relay-bin.000021; pos: 492 (Stop event) event:       ./slave-relay-bin.000022; pos: 173 The events on slave-relay-bin.000021 are: # at 492 #121109 15:29:02 server id 2  end_log_pos 515 CRC32 0x77a8b05e  Stop DELIMITER ; # End of log file ROLLBACK /* added by mysqlbinlog */; /*!50003 SET COMPLETION_TYPE=@OLD_COMPLETION_TYPE*/; This walk backwards on slave-relay-bin.000021 positions is caused by how Stop event updates positions on Stop_log_event::do_update_pos(). Stop-event was processed by Coordinator concurrently, what caused relay positions mismatch. To fix this behaviour, the group position is always unchanged in MTS mode when Stop event is applied and instead it is updated on group closing events or end of file. 	f010ae313f7b2f50d988e1ed89827ca0c9022fbc
----------------------------
Bug 15930138 - SIMULATE_DISK_FULL_AT_FLUSH_PENDING HANGS SERVER WITH IT STARTED WITH GTID ON Description: ------------ i_binlog.binlog_close_conn_assert hangs soon after simulate_disk_full_at_flush_pending extension code was executed. At its inspection  in binlog_cache_data::write_event() it was found that though the simulation never meant to be reentrant it actually is. So a thread could cross it more times with unpredictable results. How to repeat: -------------- mtr --mysqld=--binlog-format=row --mysqld=--enforce-gtid-consistency --mysqld=--gtid-mode=on --mysqld=--log-slave-updates i_binlog.binlog_close_conn_assert to see hanging. Fixed with correcting simulation to cease being active once its task is done. A second phase of simulaton has to activated and deactivated. 	16f3f0d185601e4a1c761e73a98726dd2e788a23
----------------------------
Merge: 94b56ab 6202380 ndb - ConfigValues warnings, refactor, and bug 	f5d2a12fe64086008b5d93884cedd784621bef9f
----------------------------
ndb - refactor ConfigValues added asserts to verify that data area start and end is aligned with both Uint32 and char* added range tests removed unused member m_data added method to do inplace construction corrected a bug putting the first string-pointer above intended data-area, it had no effect before since we allocated more than intended. 	6202380dd750d5cf0f7d563129c0712801252fb8
----------------------------
"BUG#12359942 - REPLICATION TEST FROM ENGINE SUITE RPL_ROW_UNTIL TIMES OUT === Problem === The test is dependent on binlog positions and checks to see if the command 'START SLAVE' functions correctly with the 'UNTIL' clause added to it. The 'UNTIL' clause is added to specify that the slave should start and run until the SQL thread reaches a given point in the master binary log or in the slave relay log. The test uses hard coded values for MASTER_LOG_POS and RELAY_LOG_POS, instead of extracting it using query_get_value() function. There is a test 'rpl.rpl_row_until' which does the similar thing but uses query_get_value() function to set the values of MASTER_LOG_POS/ RELAY_LOG_POS. To be precise, rpl.rpl_row_until is a modified version of engines/func.rpl_row_until.test. The use of hard coded values may lead the slave to stop at a position which may differ from the expected position in the binlog file, an example being the failure of engines/funcs.rpl_row_until in mysql-5.1 given as: ""query 'select * from t2' failed. Table 'test.t2' doesn't exist"". In this case, the slave actually ran a couple of extra commands as a result of which the slave first deleted the table and then ran a select query on table, leading to the above mentioned failure. === Fix === 1) Fixed the code for failure seen in rpl.rpl_row_until. This test was also failing although the symptoms of failure were different. 2) Copied the contents from rpl.rpl_row_until into into engines/funcs.rpl.rpl_row_until. 3) Updated engines/funcs.rpl_row_until.result accordingly. "	077d8994f20f83cfdcc70fe9f7222e1c015f3e2e
----------------------------
"Bug #15935206 	NDB : IMPROVE VISIBILITY OF TRANSPORTER OVERLOAD OCCURRENCES NdbInfo.transporters extended with 5 new columns : connect_count  (Number of times connection established on this transporter) overloaded     (Whether this transporter is currently overloaded.  0 or 1) overload_count (How many times this transporter has entered overloaded state since connecting) slowdown       (Whether this transporter is currently in scan slowdown state.  0 or 1) slowdown_count (How many times this transporter has entered scan slowdown state since connecting) Note that the counters are reset on *CONNECT*, so will retain their values after the remote node disconnects. Note also that the existing bytes_send and bytes_received counters are *CHANGED* to be reset on *CONNECT* as well, so will retain their values after the remote node disconnects.  This is a change to the previous behaviour, where they were reset on DISCONNECT. Additionally 6 new per-LQH-instance counters are added to NDBINFO.COUNTERS : LQHKEY_OVERLOAD Number of primary key requests rejected at LQH block instance due to transporter overload LQHKEY_OVERLOAD_TC Count of instances of LQHKEY_OVERLOAD where the TC node transporter was overloaded LQHKEY_OVERLOAD_READER Count of instances of LQHKEY_OVERLOAD where the Api reader (only reads) node was overloaded. LQHKEY_OVERLOAD_NODE_PEER Count of instances of LQHKEY_OVERLOAD where the next backup data node (only writes) was overloaded LQHKEY_OVERLOAD_SUBSCRIBER Count of instances of LQHKEY_OVERLOAD where a event subscriber (only writes) was overloaded. LQHSCAN_SLOWDOWNS Count of instances where a fragment scan batchsize was reduced due to scanning Api transporter overload. These new values and counters make transporter overload and SendBuffer sizing problems more visible and debuggable. "	94b56abffe87dbe02c72dc74686d0b8c105671a5
----------------------------
"Bug#14728469: Crash with big_tables=1 and table joins The basic problem here is that we sometimes attempt to set the keyread flag on a temporary table that has not been instantiated yet. This is acceptable for a Memory temporary table, but not for a MyISAM temporary table. The solution for this problem is to save the keyread flag in the TABLE object and forward it to the storage engine when the table is instantiated. To prevent misuse, the ""created"" flag is made private, and the set_created() function is introduced. During debugging, it was also found that tab->keys was not always set for a derived table, meaning that we sometimes missed that we had decided to use a generated key. The problematic code was the test for tab->keys.is_clear_all() in JOIN::set_access_methods(). This test has been replaced with debug asserts (a selected key must be a candidate key). Opportunity was also taken to approve readability of code in JOIN::set_access_methods(). Fixing this problem meant some test case changes - earlier table scans were converted to key lookups. Removal of unused keys for derived tables used to update tab->ref.key, but failed to add the selected key to tab->keys. It seems more consistent to update the keyuse objects and tab->keys, and then let create_ref_for_key() make the ""correct"" key choice immediately. mysql-test/r/derived.result Changed explain result due to use of generated key. mysql-test/r/distinct.result Changed explain result due to use of generated key. mysql-test/suite/opt_trace/r/filesort_pq.result Changed explain result due to use of generated key. mysql-test/t/derived.test Added analyze table for test stability. sql/records.cc Use of flag ""created"" replaced with function ""is_created()"". sql/sql_base.cc Uses functions ""is_created()"" and ""set_created()"". sql/sql_derived.cc Uses functions ""is_created()"" and ""set_created()"". sql/sql_executor.cc Use of flag ""created"" replaced with function ""is_created()"". sql/sql_optimizer.cc JOIN::drop_unused_derived_keys() has been modified so that when deleting unused derived keys, it adjusts the affected keyuse objects instead of tab->ref.key. It also sets correct keys into tab->keys. In JOIN::optimize(), JOIN::drop_unused_derived_keys() is now called before JOIN::set_access_methods(). This can be done because we now fix the keyuse objects that JOIN::set_access_methods() rely upon. Use of flag ""created"" replaced with function ""is_created()"". sql/sql_select.cc Use of flag ""created"" replaced with function ""is_created()"". In JOIN::set_access_methods(), no longer tests the redundant function tab->keys.is_clear_all() (testing tab->position->key is sufficient). Also removed some redundant initializations (checked with asserts) and expanded the if test for table scan and semi-join loose scan into two separate code sections. Expanded some TAB characters in make_join_readinfo(). sql/sql_tmp_table.cc Setting of flag ""created"" replaced with functions ""set_created() and set_deleted(). sql/table.h Made flag ""created"" private. Added functions is_created(), set_created() and set_deleted(). In TABLE::set_keyread(), added check for is_created() before sending keyread flag to storage engine. "	01d6abad48de802670f5b1b4a9a40033bff3cd34
----------------------------
BUG#11766010: MASTER_POS_WAIT MAY RETURN PREMATURELY AFTER CHANGE MASTER TO RELAY_LOG_POS Problem: MASTER_POS_WAIT may return prematurely after a CHANGE MASTER TO RELAY_LOG_POS|RELAY_LOG_NAME has been issued. Background: CHANGE MASTER TO RELAY_LOG_POS|RELAY_LOG_NAME does not update the master log position, which causes the master_pos_wait to read an invalid log position, and return when in-fact the master log position has not been reached. Fix: We mark the group_master_log_position to be invalid and wait till the SQL thread reads the first event and hence updating master log position to a valid value after which it is marked valid. Functions such as MASTER_POS_WAIT will defer the comparsion till a valid value of log position has been encountered(i.e. after the first event has been applied). 	405b909e8e471b4b35cf82005b400302e2c888ed
----------------------------
WL#6226 - Protocol tracing - client side This patch defines a new type of client-side plugins, MYSQL_CLIENT_TRACE_PLUGIN, and an infrastructure for sending to such a plugin, if one is loaded into libmysql, various trace events related to client-server communication. Trace plugins are defined in include/mysql/plugin_trace.h. This file also contains a list of available trace events and a list of protocol stages which are reported to a plugin so that it can correctly interpret these events. Trace events are generated using trace hooks inside libmysql code - these are macros MYSQL_TRACE() and MYSQL_TRACE_STAGE() defined in libmysql/mysql_trace.h. The hooks are added in appropriate places in libmysql/libmysql.c and sql-common/client.c. Code used by the tracing infrastructure is in libmysql/mysql_trace.c. Plugin loading code in sql-common/client_plugin.c is modified to correctly recognize trace plugins and arrange for sending trace events to them. File libmysql/test_trace_plugin.cc contains implementation of a test trace plugin which can be used to test the infrastructure. This plugin is built into libmysql (and pre-loaded) if WITH_TEST_TRACE_PLUGIN build option was selected during build configuration. This option is disabled by default. 	da5de3ee10e0bd93b405612460b33637462e1e6a
----------------------------
"BUG 15869441 - FEATURE REQUEST: MAKE GTID UUID VALUES ALL UPPERCASE Problem ======= For a server with GTID_MODE = ON, UUID values of the server and master were reported in lower case in some instances and upper case in others, making it more difficult to recognize the same UUID. The UUID was reported in lower case in: 1. The auto.cnf file. 2. The error log. 3. Master_UUID in SHOW SLAVE STATUS output. 4. The server_uuid global variable. The UUID was reported in upper case in: 1. Retrieved_Gtid_Set in SHOW SLAVE STATUS. 2. Executed_Gtid_Set in SHOW SLAVE STATUS. Fix === 1) Fixed code to print ""Retrieved_Gtid_Set"" and ""Executed_Gtid_Set"" in lower case too. 2) Modified test/result files accordingly. "	f6290f2be9b6de178f629036e89b8967a92b1cc0
----------------------------
"Bug#14342521 	GLOBAL VARIABLE TC_LOG_CUR_PAGES_USED IS NOT GUARDED BY MUTEX Description: Global status variables such as tc_log_cur_pages_used and tc_log_max_pages_used are not guarded. Analysis: When SAFE_STATISTICS is defined, except above mentioned status variables, others are guarded either by LOCK_status or functionality specific mutexes such as LOCK_thread_count. Fix: Acquire LOCK_status write lock while modifying above mentioned global variables when SAFE_STATISTICS is defined. "	6c672afd18ef16b3ceb6de1603757c5fedb82d8d
----------------------------
"Bug #15908907 	NDB : ALL REPORT BACKUP HITS ERROR WITH MULTITHREADED DATA NODES Multithreaded data nodes have multiple Backup 'block' instances. This confused the MGMD implementation of ALL REPORT BACKUP, which expected one report per node. This patch adds some aggregation in the BackupProxy block so that only one report is returned. A configuration covering this scenario is added to ndb_mgm test. "	b8087f18a2ed29a6d00d742ca74130c1c5e2a86b
----------------------------
Bug#15927744 - DEFAULT P_S CONFIGURATION WASTES CPU ON A BUSY SERVER Prior to this fix, performance schema configuration variables that can be automatically sized by the server were given incorrect values in some cases. Performance overhead can increase significantly with some pathological cases created by incorrect sizing, causing this bug to have a real impact. For example, for 50,000 tables in the table open cache, the performance schema estimated that a value of 20,000 table handles was adequate. This is wrong, a proper value should be 100,000 in this case. The problem is that the heuristic used values that got altered by a 'sanitizing' step, supposed to prevent bad usages. The fix is to simply remove this sanitizing step, because: - it does not resolve any problem by itself, only creates more, - it introduces hard coded values which are not based on real deployments in production With this fix, heuristics computed by the performance schema for automated sizing are expected to be more adequate, for high end configurations. 	2ec7190b644f53532c13c10f39fad088d23ec374
----------------------------
"BUG 15869441 - FEATURE REQUEST: MAKE GTID UUID VALUES ALL UPPERCASE Problem ======= For a server with GTID_MODE = ON, UUID values of the server and master were reported in lower case in some instances and upper case in others, making it more difficult to recognize the same UUID. The UUID was reported in lower case in: 1. The auto.cnf file. 2. The error log. 3. Master_UUID in SHOW SLAVE STATUS output. 4. The server_uuid global variable. The UUID was reported in upper case in: 1. Retrieved_Gtid_Set in SHOW SLAVE STATUS. 2. Executed_Gtid_Set in SHOW SLAVE STATUS. Fix === 1) Fixed code to print ""Retrieved_Gtid_Set"" and ""Executed_Gtid_Set"" in lower case too. 2) Modified test/result files accordingly. "	e2b551bb2edd315bfd7b1c0fa2fba13c897bf085
----------------------------
- WL#6560: mysqld --bootstrap --innodb_page_size=4K was failing. ISSUE-1: read_lsn can be avoided if we are creating new db ISSUE-2: tablespace attribute viz. page-size + space-id should be verified only for first file and not all files of tablespace. 	17f74557f5c756389e249b8363bcacdd35e19a2b
----------------------------
"BUG#15907504: AUTOMATIC DROP TEMPORARY TABLE ON CLIENT DISCONNECT DOESN'T ALWAYS GENERATE GTID When temporary tables are not dropped before client disconnect, server drop them automatically what, when binlog is ON also log those drops to binlog. When GTIDs where enabled, in some situations those logged drops didn't generate GTIDs for every drop statement. More precisely GTID_NEXT type needs to be ""AUTOMATIC"" before we log ""DROP TEMPORARY TABLE"" in order to a new GTID be generated. Fixed this incorrect behaviour by enforcing that each logged drop has its own GTID, there is that before log to binary log GTID_NEXT type is always ""AUTOMATIC"". "	f177d1a570ebd4f4c8a523d84ac25054192009b4
----------------------------
Bug#15883071 - WINDOWS: ASSERT DUE TO INCORRECTLY AUTOSIZED INNODB_BUFFER_POOL_INSTANCES The changes for WL#6216 (Changes to Server defaults in 5.6) introduced a Windows-only calculation for the number of buffer pool instances when the buffer pool size became greater than 1.3Gb. This is needed on Windows 32-bit systems because it was found that they have trouble allocating blocks of memory to mysqld.exe in chunks greater than 1.3 Gb. This calculation set the number of instances by dividing the total buffer pool size by 128Mb, which was determined to be an acceptable buffer pool instance size. Even though this calculation is only needed for 32-bit systems it used the macro _WIN32 which is also defined for 64-bit Windows.  This extra adjustment to the number of buffer pool instances is not needed on 64-bit Windows systems.  So this patch uses #if defined(__WIN__) && !defined(_WIN64) to enclose the extra 32-bit Windows calculation. In addition, it uses ut_min(MAX_BUFFER_POOLS, ...) in case that number is ever changed to something less than what is allowed on a 32-bit system (4G buffer pool/128M per pool=32 instances, currently, MAX_BUFFER_POOLS==64) Approved by Sunny Bains at http://rb.no.oracle.com/rb/r/1579/ 	c75238d706d4ff20426b1545a0b866175228ec9e
----------------------------
- WL#6560: added TC to sys_vars for newly added variable innodb_temp_data_file_path 	821c01354931d5009f6409cebae4fad5df299473
----------------------------
BUG#15847447 - THD->TRANSACTION.STMT.IS_EMPTY() || (THD->STATE_FLAGS & OPEN_TABLES_STATE::BACKU DESCRIPTION: When a view is based on a Heap (In memory) backed table and this Table is altered to drop some field which was in use by the view, then a SELECT on this view results in an ASSETION failure when the server is started with Bin-Log enabled. ANALYSIS : The triggered assert in open_normal_and_derived_tables() checks that the current statement transaction is empty if something fails during opening of tables and handling of derived tables. This makes sure that there is nothing that the statement has done that needs to be rolled back at this point. The reason that the assert is triggered in this case is that a statement transaction is started by THD::binlog_query() during open_tables() -> open_table_entry_fini() if we are opening a HEAP table for the first time, subsequently mysql_handle_derived() fails while processing the view since a column has disappeared. FIX : During implicit_emptied processing in the call to THD::binlog_query() direct is set to TRUE, as a result the event is immediately written to the log bypassing a transaction, hence the assert is not triggered. 	d084685abd2896498e966140f5a76aa9583c432e
----------------------------
BUG#15847447 - THD->TRANSACTION.STMT.IS_EMPTY() || (THD->STATE_FLAGS & OPEN_TABLES_STATE::BACKU DESCRIPTION: When a view is based on a Heap (In memory) backed table and this Table is altered to drop some field which was in use by the view, then a SELECT on this view results in an ASSETION failure when the server is started with Bin-Log enabled. ANALYSIS : The triggered assert in open_normal_and_derived_tables() checks that the current statement transaction is empty if something fails during opening of tables and handling of derived tables. This makes sure that there is nothing that the statement has done that needs to be rolled back at this point. The reason that the assert is triggered in this case is that a statement transaction is started by THD::binlog_query() during open_tables() -> open_table_entry_fini() if we are opening a HEAP table for the first time, subsequently mysql_handle_derived() fails while processing the view since a column has disappeared. FIX : During implicit_emptied processing in the call to THD::binlog_query() direct is set to TRUE, as a result the event is immediately written to the log bypassing a transaction, hence the assert is not triggered. 	a13a73950c04fca0c660bc020070bdf57eb327a7
----------------------------
Fix for bug#15908684: Job threads may 'sleep' without pending messages being sent This fix correct the calculation of the 'pending' argument to update_sched_config() such that both previously failed 'pending_send', and currently available unsent 'send_sum' together forms the number of 'pending' signals. 	d43f0d25e0ba3763ca1d52afb86407c09d36e598
----------------------------
Fix for Bug#15907122 INCORRECT HANDLING OF JOB-BUFFERS ALMOST FULL - 'SLEEPLOOP 10' This fix introduce a 'thr_wait*' (Sort of a condition/mutex) which is used to wait for job buffers to become available when we are in an 'job buffers almost full' situation. This 'thr_wait' will be signaled when a job buffer has been consumed & freed. This fix is a collection of the following 5 sub patches: ****** Fix mixed up comment & naming wrt. whether 'm_recv_transporters' and 'm_has_data_transporters' is a bitmask of NodeId or Tranporters. (It *is* NodeId bitmasks) ****** Add dump of job buffer utilization before we crash due to 'job buffer full', and to 'sleeploop 10' reports where we have to wait due to almost full job buffers. ****** Change the signature of the yield() function such that it can take a more general '*check_callback()' function as arguments. Change the existing functions currently used as 'callbacks' to the new (relaxed) signature. ****** Refactor: Splitt out compute_free_buffers_in_queue() from compute_max_signals_to_execute(). New function contains common code intended for reuse in later patches. ****** update_sched_config() will 'yield' the CPU and wait for more job buffers to become available when it is about to run out of job buffers. The yield() call will wait on a 'thr_wait' object, which may be sent a 'wakeup()' when the waiting condition has been resolved (by another thread) However, update_schec_config() used the 'thr_wait' object intended to be used to wait for more *incomming signal* - What we actually have to wait for are signals to be *consumed* by the destination thread. Luckily there is also defined a 'max wait' of 1ms which currently will wakeup the thread . This patch introduce a own 'thr_wait' object which which is signaled by the consumer, and we now wait on this object. Furthermore the patch also avoid a situation where a thread could end up waiting for itself. 	bcfcb092524b40c8eb248cbd9c77a804ffabea6f
----------------------------
Bug#14588121: PLEASE RENAME VALIDATE_PASSWORD_POLICY_NUMBER Problem: variable_password_policy_number variable introduced as part of the password verification plugin seems to be a bit ambiguous. From the name it seems it expect a number whereas its comman use will be as a string. Solution: changing the name from validate_password_policy_number to validate_password_policy as suggested. 	ce152498b8ce920053f9d043c912f1b1827fd0f3
----------------------------
- WL#6560: Further enhanced test-coverage by adding --innodb_read_only scenario 	9ec9528677aa24b468f45bde9749cd5a490191f3
----------------------------
Bug#15882860 - WINDOWS: DEBUG BUILD CAN'T HANDLE LARGE INNODB_LOG_FILE_SIZE The change for WL6494 (InnoDB: Handle redo log file size mismatch), exposed an existing problem on Windows 64-bit platforms where any _stat() call will fail on any file larger than 4Gb.  This became evident when setting -innodb-log-file-size=4G or larger.  The patch mentioned above started using os_file_rename_func() for redo log files.  That function makes calls to os_file_status() in debug using ut_ad() to make sure that the source name exists and the destination name does not. An assert, ut_ad(exists), failed because the call to _stat failed, since the file was too big to store the size in a 4 byte integer. The fix is to exchange _stat with _stat64 in two places where _stat() is called by Windows-only code.  The function _stat64() works on both 32-bit and 64-bit versions of Windows and the compatibility list goes all the way back to Windows 95. Approved at http://rb.no.oracle.com/rb/r/1583/ by Marko 	eabded176fa580af6dc3f52819b09793eca00f1c
----------------------------
clusterj - look for java before starting to care about what's in classpath - theoretically we could use java to check if classpath is correct by doing configure style tests written in java. Would avoid need to duplicate classpath parsing(which won't have the same rules as in java anyway) 	42496c08c03a93eaabd2d149ecb56d3b34e5be09
----------------------------
compile-cluster - hardcode a few more configure args necessary for 5.1 based 	bd59664a6517c5d4a12d67463b8e340ae998f70a
----------------------------
Bug #15864703: password exposed via performance_schema.session_connect_attrs table Removed the _command_line variable from libmysql. Test case added. 	3e36626a37380c409308027916cb8d586097cbdd
----------------------------
Adapt MySQl Cluster to 5.6 - fix existing tests and utility scripts since mysql.host has been removed - fix existing .results since a lot more Errors and Warnings are printed when an error is provoked. - remove code to handle a few old LOGCOM_ command since those are never  used. Of course keep the SOT_ commands intact to avoid upgrade problems. - Add hack preventing db to be NULL when calling ndbcluster_log_schema_op() - Add long comment describing why the above hack is needed and that it works anyway. - Add new testcases which checks that binlog, data and functionality on remote mysqld end up looking the same way as when system tables are local(i.e in default engine). Same testcase and .result file is run two times with different configs and the result should be same. - remove NDB_WITHOUT_DIST_PRIV define 	3cbbaa50617a63302ac2f06d623fa66d2b8998b0
----------------------------
Merge: aec35ad fd13e43 bug#13994567 PLUGIN-DIR OPTION NOT HONOURED WHEN PRE-LOADING PLUGINS WITH LIBMYSQL_PLUGINS Not loading pre-loading plugins was caused by the fact that during pre-loading process there is no access to plugin-dir value. So the only path available for searching pre-loading plugins was default value (PLUGINDIR macro). Fixed by introducing LIBMYSQL_PLUGIN_DIR environment variable which can contain user-defined path to plugins. mysql_load_plugin_v function modified to use LIBMSQL_PLUGIN_DIR value if it exists and if plugin-dir option value is not available. Thus if LIBMYSQL_PLUGIN_DIR does not exists then behaviour does not change. If LIBMYSQL_PLUGIN_DIR exists then it unconditionally affects pre-loading plugins and it affects other (loaded on connect) plugins only if --plugin-dir option is not specified. After the patch --plugin-dir option still has no effect on pre-loading plugins. But user can specify plugin search path with LIBMSQL_PLUGIN_DIR environment variable. 	bbe601e96036cd868dc639d0b588414ccd15ae94
----------------------------
bug#13994567 PLUGIN-DIR OPTION NOT HONOURED WHEN PRE-LOADING PLUGINS WITH LIBMYSQL_PLUGINS Not loading pre-loading plugins was caused by the fact that during pre-loading process there is no access to plugin-dir value. So the only path available for searching pre-loading plugins was default value (PLUGINDIR macro). Fixed by introducing LIBMYSQL_PLUGIN_DIR environment variable which can contain user-defined path to plugins. mysql_load_plugin_v function modified to use LIBMSQL_PLUGIN_DIR value if it exists and if plugin-dir option value is not available. Thus if LIBMYSQL_PLUGIN_DIR does not exists then behaviour does not change. If LIBMYSQL_PLUGIN_DIR exists then it unconditionally affects pre-loading plugins and it affects other (loaded on connect) plugins only if --plugin-dir option is not specified. After the patch --plugin-dir option still has no effect on pre-loading plugins. But user can specify plugin search path with LIBMSQL_PLUGIN_DIR environment variable. 	fd13e435357904c6de6c6b0cbcaf38fe7023b342
----------------------------
BUG#14512467 - SLOW QUERY LOG: SERVER RESTART NOT NEEDED IN 5.1 AND LATER WITH PERMISSION ISSUE Description: If MySQL server is started with --slow_query_log option but the user does not have write permission on the slow query logging file, MySQL server starts with an error message. Error message says that MySQL server has turned logging off. It also says that after fixing the issue, logging can be started again by restarting the server. The same problem exists with general query log. Analysis: Though, error message says that MySQL server has turned logging off when sufficient file permission is missing, global variable slow_query_log is not set to 'OFF'. After fixing the file permission issue, it is not needed to restart the server. Commands can be issued from the client only to restart the query logging. Fix: Changed the error message to show user both the options: either restart query logging or restart the mySQL server.Set the global variable slow_query_log to OFF when this error occurs. 	309e69f3a6d4d70faae55745a4c5788cf0496e52
----------------------------
BUG#14711347 - TURNING SLOW QUERY LOG ON WITHOUT FILE PERMISSIONS CRASHES SERVER Description: If SET GLOBAL slow_query_log='ON' command is given from MySQL client to enable slow query logging, but the user does not have write permission on the slow query logging file, MySQL server crashes due to an assert failure. The same problem exists for general_log option also. Analysis: When activate_log_handler() opens the file for logging, it is not checking whether the file is successfully opened or not for query logging. Fix: Added the condition on the open_slow_log() and open_query_log() to check for errors in file opening. The return flag value is changed based on finding of errors in opening value. Test case added. 	5abf395d3b0c1416ac8930a2f199344545eab71d
----------------------------
"Merge: 48569a8 342baf4 Bug#15831748 - ""DROP DATABASE PERFORMANCE_SCHEMA;"" DROPS THE DATABASE PERFORMANCE_SCHEMA Backed out fix due to failing upgrade tests "	a4789c25255d615b2ba6f20f2627ebca6f18eb7f
----------------------------
"Bug#15831748 - ""DROP DATABASE PERFORMANCE_SCHEMA;"" DROPS THE DATABASE PERFORMANCE_SCHEMA Backed out fix due to failing upgrade tests "	342baf44bf907aebedd8b47095a4a7f6cb57b1cc
----------------------------
"Bug#15831748 - ""DROP DATABASE PERFORMANCE_SCHEMA;"" DROPS THE DATABASE PERFORMANCE_SCHEMA Deny DROP TABLE and DROP DATABASE for the Performance Schema. "	7b4c312999dec1c6ba0a3c760f1da32e9892d5a8
----------------------------
"Bug#15831748 - ""DROP DATABASE PERFORMANCE_SCHEMA;"" DROPS THE DATABASE PERFORMANCE_SCHEMA Deny DROP TABLE and DROP DATABASE for the Performance Schema. "	c6a8ce8ead5577528993fc0435d4f42596c28ff1
----------------------------
Bug #14826854 MYSQL 5.6 CRASHES WITH DATA FILES DERIVED FROM MYSQL 5.1 Issue: MySQL 5.6 crashes with SIGSEGV when a direct live upgrade to mysql-5.6 is performed on mysql-5.1. Though currently it is not a supported transaction, the server should either give out a proper failure message, or support the live upgrade. The bug can be reproduced by running mysql-5.6 server, with 5.1 data given as datadir arguement. Analysis: The column names of mysql.user table are maintained as an enum within the source code of mysql-5.6 and the table is modified/filled accordingly when a server is started on a particular database. Version 5.5 doesn't implement this enum, but fills the tables by running an iterator. The column 'Create_tablespace_priv' is added in the version 5.5 and while implementing it as an enum in 5.6, it is not appended to the existing list, but was added in between. Hence the one to one mapping is broken in case of mysql-5.1 to 5.6 upgrade. Upgrade from 5.1 to 5.5 has no issues as there is no enum implementation at all, but an iterator runs to create/modify the columns. Hence adding a column did not make any difference. Solution: The MYSQL_USER_FIELD_MAX_USER_CONNECTIONS'th position of table->field which is used in my_bool acl_load function, does not exist and is causing the segmentation fault. Since MYSQL_USER_FIELD_MAX_USER_CONNECTIONS does not correspond to any existing field when mapped to column names of 5.1 user table, accessing this position is prevented using an if condition, which enables live upgrade of 5.1 without disturbing any of the existing features. 	34765fa7b7e5934c3c069ffa665ec9f7b9f7e36c
----------------------------
Bug#15859402 INNODB_BUFFER_POOL_READ_AHEAD_EVICTED IS INACCURATE rb://1546 approved by: Sunny Bains and Marko Makela Our dealing of buf_page_t::access_time flag is inaccurate. * If LRU eviction has not started we don't set the access_time * If LRU eviction is started we set it only if the block is not 'too old'. * Not a correctness issue but we hold buf_pool::mutex when setting the flag This patch fixes this by: * Setting flag unconditionally whenever the first page access happens * Use buf_page_t mutex to protect write to the flag 	d6b702b6e60ba72c8c3a2af60c94a004fd5e7698
----------------------------
Merge: 842dd52 ae3cd53 Bug#11753779: MAX_CONNECT_ERRORS WORKS ONLY WHEN 1ST INC_HOST_ERRORS() IS CALLED. Description: null merge from 5.6 to trunk 	68c2875dcff3e1835309d1c83dfd474c5f6800cd
----------------------------
Merge: 5bb18bd 9e89414 Bug#11753779: MAX_CONNECT_ERRORS WORKS ONLY WHEN 1ST INC_HOST_ERRORS() IS CALLED. Description: Null merge from 5.5 to 5.6 	ae3cd5395346abd44b9651afbc74d057fe961420
----------------------------
Merge: cda63d8 2ce2329 Bug#11753779: MAX_CONNECT_ERRORS WORKS ONLY WHEN 1ST INC_HOST_ERRORS() IS CALLED. Description: Null merge from 5.1 to 5.5 	9e8941421e6681ead8c8886c0f5bc0b74329944e
----------------------------
- first level changes to disable logging for dml-insert - redo-logging: disable always. - undo-logging: disable if autocommit = enabled. 	9dc488cf93f95f35117da2b38ee0f7eb871a64f8
----------------------------
ndb - Restore config after TestNdbApiConfig 	016bd5799da6713bfb200381665590002722f526
----------------------------
BUG#12669186: AUTOINC VALUE PERSISTENCY BREAKS CERTAIN REPLICATION SCENARIOS When master and slave have different schemas, in particular different AUTO_INCREMENT columns, INSERT_ID events logged for a given table on master may be applied to a different table on slave on SBR, e.g.: master has one table (t1) with one auto-inc column and another table (t2) without auto-inc column, on slave t1 does not have auto-inc column (despite having the same columns) and t2 has a auto-inc column. The INSERT_ID that is intended for t1, since t1 on slave doesn't have auto-inc column is used on t2, causing consistency problems. To fix this incorrect behaviour, auto-inc interval allocation via INSERT_ID is made effectively terminated at the end of top-level statements on slave and binlog replay. 	5bfe146bfae6fbba8d431490f3dfa48a2d37aa25
----------------------------
"Bug #14827923 	RPL TEST RPL_PARALLEL_CHANGE_MASTER FAILS WITH WARNING ON FIRST EXECUTION IN PB2 The slave server emitted unexpected warnings because of MTR's. At execution of two tests ./mtr --mysqld=--binlog-format=row --big-test  rpl_row_mts_crash_safe \ rpl_parallel_change_master the 2nd test unexpectedly makes the slave server to initially start with --relay-log-info-repository=TABLE. The option is apparently borrowed from the first test's env. Nothing would not be noticed, similarly to --relay-log-info-repository FILE default case where no issues exist, but MTR play another little trick at the slave server restarts required by rpl_parallel_change_master. This time the borrowed --relay-log-info-repository=TABLE is missed out, to mean repository migration which was not expected at all. Finally, one time the same warning is not displayed ... yes thanks to Bug_15858271. Given the tests sequence rpl_parallel_change_master running slave should 've warned already in its bootstap, at least when mtr runs in MTS, because TABLE repository of the former test with non-zero workers would have to migrate to FILE as demanded by the default value of --relay-log-info-repository. Fixed with 1. reporting MTR's bug 2. deploying suppression to stay until Bug_15858271 is fixed 3. enforcing rpl_mts_crash_safe cleanup to record zero workers into TABLE repository so the slaver server at any following test could migrate the info repository in background without any warning. "	706f3bbe3b2ebd75643b3b8681e220b02e2d224f
----------------------------
Merge: 7989eb6 c2890fd ndb - bugfix: Use configured value for parameter DefaultOperationRedoProblemAction Bug #15855588   SETTING [API] DEFAULTOPERATIONREDOPROBLEMACTION HAVE NO EFFECT The parameters configured value was ignored, the effective value was always abort. 	c6e33aa455acfdd4231967d11a8e92c700580046
----------------------------
ndb - bugfix: Use configured value for parameter DefaultOperationRedoProblemAction Bug #15855588   SETTING [API] DEFAULTOPERATIONREDOPROBLEMACTION HAVE NO EFFECT The parameters configured value was ignored, the effective value was always abort. 	c2890fd28349603197ba3959b68be66ebbcf6d14
----------------------------
ndb - new test TestNdbApiConfig check that NdbApi actually read and use values set in mgm run with: testNdbMgm -n TestNdbApiConfig 	edeb942e5b3614b0c4ee3086d34e4381f422b660
----------------------------
ndb - test ndb_backup_rate need DefaultOperationRedoProblemAction=abort But due to bug the effective value was always abort even if other value was configured. 	ecee760a76db22ccb976ee5b948380bab2dcba58
----------------------------
BUG#14236151-DEADLOCK BETWEEN START SLAVE AND SETTING A SYSTEM VARIABLE Description: Starting the SQL thread might deadlock with setting the sql_slave_skip_counter or slave_net_timeout variables. The deadlock is due to a lock order violation when the variables are set. For example, setting slave_net_timeout first acquires LOCK_global_system_variables in sys_var::update and later acquires LOCK_active_mi in fix_slave_net_timeout. This violates the order established when starting a SQL thread, where LOCK_active_mi is acquired before start_slave, and ends up creating a thread (handle_slave_sql) that allocates a THD handle whose constructor acquires LOCK_global_system_variables in THD::init. Solution: Before acquiring LOCK_active_mi in fix_slave_net_timeout, it releases lock on LOCK_global_system_variables and at the end of the function it acquires the lock on LOCK_global_system_variables. This solution requires secondary guard to be enabled for this system_variable. 	0af62eb216cf1a7b6c842d8f01d1cb234ca3346a
----------------------------
BUG#12395512: NULL BYTE IN GROUP_CONCAT()'S SEPARATOR CLAUSE BREAKS MYSQLDUMP Analysis: --------- When the view definition contains special character in the SEPARATOR clause of the GROUP_CONCAT aggregate function, the 'mysqldump' utility creates invalid view definition. Hence the reload of such a dump file results in syntax error and the view is not re-created. While creating the view definition, character escaping is not performed on the string specified in the SEPARATOR clause. This results in the creation of the invalid view definition. Fix: --- Performed character escaping on the string specified in the SEPARATOR clause of the GROUP_CONCAT aggregate function while creating the view definition. Other issues fixed by this patch: -------------------------------- a) The string literal for SEPARATOR clause contains incorrect value when the charset defined by 'character_set_client' and 'character_set_connection' are different. b) The string literal for SEPARATOR clause contains incorrect value in I_S.VIEWS table when the 'character_set_client' is different from system charset(UTF8). 	6a5c54e698bf4e06653fb7573605915e8a3384ac
----------------------------
Bug#14823837: RPL TEST RPL_SWITCH_STM_ROW_MIXED AND RPL_INSERT_ID FAIL WITH STACK OVERRUN. Test issue. Adding .opt files with {?PB_HOST_SPECIFIC_MYSQLD_ARGS} variable to pass host-specific arguments to the test (in particular, pass increased thread-stack-memory for the server running on SPARC64). 	25f3c9cc7f3bc1b2eec0a7d056d317190b00ca2b
----------------------------
Bug#14741537 - MYSQL 5.6, GTID AND PERFORMANCE_SCHEMA Implementing additional review comments: - changed the wording for ER_BINLOG_STMT_MODE_AND_NO_REPL_TABLES - relaxed an error to a warning, when non replicated tables are only read, not written to. 	67fe5133ce61213330063ea8dc6d9c1a2b8a3f73
----------------------------
"ndb - Add missing ""extern opt_server_id_mask"" declaration in mysql_priv.h (aka mysqld.h in the  future) "	a4afc040c06f604ee777aee89fac736b3d82bd2f
----------------------------
ndb - remove NDB_WITHOUT_SERVER_ID_BITS since all versions of MySQL Server which ndbcluster compiles against now supports --server-id-bits 	859151229480ff3b7f618a8d6ec74d2cf2d72f09
----------------------------
ndb - remove NDB_WITHOUT_SERVER_ID_BITS since all versions of MySQL Server which ndbcluster compiles against now supports --server-id-bits 	1eb0cf72457f1d6087fe1d36605e37c5482f70c8
----------------------------
ndb - Configure MSVC to print full path to file in warning messages 	cc4ba2782b44be5f5d3848b6cd3b1aba6a663e16
----------------------------
ndb - add warning parsing functionality to compile-cluster - backport  --vanilla, -just-print and --just-configure - add --autotest 	c89200d3de7771890d9d6d24f0d9efd507153d79
----------------------------
Fix broken MTR tests due to error code renumbering: - main.insert - rpl.rpl_stm_loaddata_concurrent - i_rpl.rpl_enforce_gtid_consistency 	0624865b3d18037b993194c8d5c09d5ed80ebfcc
----------------------------
Bug#11748945 MAKE KILL RELIABLE (MAIN.KILL FAILS RANDOMLY) Analysis: For OSX, POLLHUP event is not implemented for poll(). As a result, shutdown() / close() system call does not break poll(). As client end of the socket is closed, connection is broken from the client side whereas server side service socket is kept open as poll() waits for 28800 secs (default interactive_timeout and read_timeout value). Sleep calls in kill.test are changed to debug sync under rev-2875.109.79. It fixed all the sporiadic issues related to kill connection. This issue is regression of WL#4896 found only in OSX. There are no failures found on pb2 for platforms except OSX. Fix: Use select() instead of poll() only for OSX as select() breaks when close() system call is invoked on the service socket. 	82dbfdacd5a122ffe944564b9da0b0c6d87b02c5
----------------------------
BUG#14828028 - TRANSACTION SKIPPED USING GTIDS CAUSES NEXT RECONNECTION BY IO THREAD TO FAIL When using the GTID-aware master-slave protocol, the master skips transactions that the slave already has.  This caused the slave IO thread to remember the wrong position.  When using GTIDs, the position is not normally used for anything, so this should not be a big problem.  However, as a special case, the position was used in addition to the GTID when the slave reconnects to the same master. In this bug, we fixed the problem by making the GTID-aware master-slave protocol not use positions at all. In addition, we make the master dump thread completely skip binary logs that were generated when GTID_MODE!=ON (or by an old server), if using the GTID protocol. This is necessary because otherwise such binary logs will be sent again. This does not skip anything that should have been replicated, because it is a requirement in the upgrade procedure that the user waits until all GTID-free binary logs have been replicated before using the GTID protocol. 	9709120db22901ad9b884a50f813430579e1ae24
----------------------------
BUG#14458232 - CRASH IN THD_IS_TRANSACTION_ACTIVE DURING THREAD POOLING STRESS TEST PROBLEM: Connection stress tests which consists of concurrent kill connections interleaved with mysql ping queries cause the mysqld server which uses thread pool scheduler to crash. FIX: Killing a connection involves shutdown and close of client socket and this can cause EPOLLHUP(or EPOLLERR) events to be to be queued and handled after disarming and cleanup of of the connection object (THD) is being done.We disarm the the connection by modifying the epoll mask to zero which ensure no events come and release the ownership of waiting thread that collect events and then do the cleanup of THD. object.As per the linux kernel epoll source code ( http://lxr.linux.no/linux+*/fs/eventpoll.c#L1771), EPOLLHUP (or EPOLLERR) can't be masked even if we set EPOLL mask to zero. So we disarm the connection and thus prevent execution of any query processing handler/queueing to client ctx. queue by removing the client fd from the epoll set via EPOLL_CTL_DEL. Also there is a race condition which involve the following threads: 1) Thread X executing KILL CONNECTION Y and is in THD::awake and using mysys_var (holding LOCK_thd_data). 2) Thread Y in tp_process_event executing and is being killed. 3) Thread Z receives KILL flag internally and possible call the tp_thd_cleanup function which set thread session variable and changing mysys_var. The fix for the above race is to set thread session variable under LOCK_thd_data. We also do not call THD::awake if we found the thread in the thread list that is to be killed but it's KILL_CONNECTION flag set thus avoiding any possible concurrent cleanup. This patch is approved by Mikael Ronstrom via email review. 	1ff5d48f3d076a30d37de4cff6a1659d2bf6d749
----------------------------
BUG#13520710: INCORRECT VIEW CREATION WITH WHERE CLAUSE Analysis: -------- The 'WHERE' clause contains incorrect values for string literals in the query section of the view definition when the charset defined by 'character_set_client' and 'character_set_connection' are different. While parsing the query, the string literals are converted from the charset defined by 'character_set_client' to the charset defined by 'character_set_connection'. During the formation of the query section of the view definition, the 'string literals' were printed in the same charset as that of the 'charset_set_connection' without converting it to 'character_set_client'. This resulted in incorrect string values. [The query section of the view definition is stored in the same charset as defined by character_set_client]. Fix: --- a) A new query type 'QT_TO_ARGUMENT_CHARSET' is added to determine whether to convert the string literal to 'character_set_client'. b) A new method 'Item_string::convert_and_print' handles the conversion of the string from 'character_set_connection' to 'character_set_client' and then prints the string literals which forms the query section of the view definition. Thus ensuring correct string literal values in the 'WHERE' clause. Other issue fixed with this patch: ---------------------------------- SHOW CREATE PROCEDURE proc_name contains incorrect values for string literals in the SET statement. This occurs when 'character_set_client' and 'character_set_connection' are different when the procedure is defined. 	e2caa99e897a7dc303324830b267efa49d4a8aae
----------------------------
"Fixed merge problems between mysql-5.6 and mysql-trunk. The error ER_READ_ONLY_MODE was not numbered the same way in 5.6 and trunk (5.7), causing discrepancies in error numbering. This is a bug, as it impacts compatibility between 5.6 and later versions. This fix moved ER_READ_ONLY_MODE from the ""new in 5.7"" to the ""new in 5.6"" section, because this error is also present in 5.6. As a mechanical result, the following errors have been renumbered: #define ER_READ_ONLY_MODE 1836 #define ER_GTID_NEXT_TYPE_UNDEFINED_GROUP 1837 #define ER_VARIABLE_NOT_SETTABLE_IN_SP 1838 #define ER_CANT_SET_GTID_PURGED_WHEN_GTID_MODE_IS_OFF 1839 #define ER_CANT_SET_GTID_PURGED_WHEN_GTID_EXECUTED_IS_NOT_EMPTY 1840 #define ER_CANT_SET_GTID_PURGED_WHEN_OWNED_GTIDS_IS_NOT_EMPTY 1841 #define ER_GTID_PURGED_WAS_CHANGED 1842 #define ER_GTID_EXECUTED_WAS_CHANGED 1843 #define ER_BINLOG_STMT_MODE_AND_NO_REPL_TABLES 1844 #define ER_FILE_CORRUPT 1845 #define ER_ERROR_ON_MASTER 1846 #define ER_INCONSISTENT_ERROR 1847 #define ER_STORAGE_ENGINE_NOT_LOADED 1848 #define ER_GET_STACKED_DA_WITHOUT_ACTIVE_HANDLER 1849 #define ER_WARN_LEGACY_SYNTAX_CONVERTED 1850 #define ER_ERROR_LAST 1850 Test scripts have been adjusted accordingly. "	bfe49f6760a01effc56d676fc14c7a222d36841d
----------------------------
Bug#14741537 - MYSQL 5.6, GTID AND PERFORMANCE_SCHEMA Before this fix, statements using performance_schema tables: - were marked as unsafe for replication, - did cause warnings during execution, - were written to the binlog, either in STATEMENT or ROW format. When using replication with the new GTID feature, unsafe warnings are elevated to errors, which prevents to use both the performance_schema and GTID together. The root cause of the problem is not related to raising warnings/errors in some special cases, but deeper: statements involving the performance schema should not even be written to the binary log in the first place, because the content of the performance schema tables is 'local' to a server instance, and may differ greatly between nodes in a replication topology. In particular, the DBA should be able to configure (INSERT, UPDATE, DELETE) or flush (TRUNCATE) performance schema tables on one node, without affecting other nodes. This fix introduces the concept of a 'non-replicated' or 'local' table, and adjusts the replication logic to ignore tables that are not replicated when deciding if or how to log a statement to the binlog. Note that while this issue was detected using the performance_schema, other tables are also affected by the same problem. This fix define as 'local' the following tables, which are then never replicated: - performance_schema.* - mysql.general_log - mysql.slow_log - mysql.slave_relay_log_info - mysql.slave_master_info - mysql.slave_worker_info Existing behavior for information_schema.* is unchanged by this fix, to limit the scope of changes. Coding wise, this fix implements the following changes: 1) Performance schema tables are not using any replication flags, since performance schema tables are not replicated. 2) In open_table_from_share(), tables with no replication capabilities (performance_schema.*), tables with TABLE_CATEGORY_LOG (logs) and tables with TABLE_CATEGORY_RPL_INFO (replication) are marked as non replicated, with TABLE::no_replicate 3) A new THD member, THD::m_binlog_filter_state, indicate if the current statement is written to the binlog (normal cases for most statements), or is to be discarded (because the statements affects non replicated tables). 4) In THD::decide_logging_format(), the replication logic is changed to take into account non replicated tables. Statements that affect only non replicated tables are executed normally (no warning or errors), but not written to the binlog. Statements that affect (i.e., write to) a replicated table while also using (i.e., reading from or writing to) a non replicated table are executed normally in MIXED and ROW binlog format, and cause a new error in STATEMENT binlog format. THD::decide_logging_format() uses THD::m_binlog_filter_state to indicate if a statement is to be ignored, when writing to the binlog. 5) In THD::binlog_query(), statements marked as ignored are not written to the binary log. 6) For row based replication, the existing test for 'table->no_replicate', has been moved from binlog_log_row() to check_table_binlog_row_based(). 	d685045a46917d6eea015a0c2375329891259029
----------------------------
Bug #14641110 ON SOLARIS , SLAVE_PARALLEL_WORKERS DEGRADES REPLICATION PERFORMANCE It was observed that on some platforms like Solaris x86 MTS applies events slow. The reason appears to be in that when Coordinator thread is sluggish for some reason it could enter a napping routine while the Worker actually has very little to do. Meanwhile low-running Worker can empty its assignment queue to get starving. So more to the waste of time with sleeping, at awakening Coordinator had to signal the Worker about the first assignement in the queue. In contrast, the idea of the napping routine was to minimize signalling. Fixed with restricting conditions to enter napping block. Effectivly scheduling to about to become hungry Worker won't be delayed. As a side effect, integer overflow in diff_timespec() of include/my_pthread.h is eliminated as well. 	709992f0450d6a0734787efb347305fbd28134fe
----------------------------
Bug#14832472: Make mysqldump work with GTIDs Problem ======== When a backup is taken using mysqldump on a server with gtid enabled, the dump file does not contain any gtid information.  This eventually results in replicating the transactions since history when the backup is used to bring up a slave. Solution ========== Fixed by adding SET @@GLOBAL.SET_GTID_PURGED=<value of gtid_executed on the server> in the dump file. For this, --set-gtid-purged has three possible values. i) If --set-gtid-purged=OFF, output doesn't contain gtid info. ii)If --set-gtid-purged=ON, and server has GTID_MODE!=ON, an error is generated. iii)If --set-gtid-purged=AUTO, and server has GTID_MODE!=ON, this option does nothing. However, if GTIDs are enabled, the output contains GTID_PURGED info. 	2e37d209dcfa4836f48f5af4bae43e520e221ed4
----------------------------
Merge: d8fc525 43e73d3 BUG#14666177 - TIME DIFF BETWEEN LAST 2 RECONNECTS IS COMING > @@GLOBAL.NET_READ_TIMEOUT * 2 merge from 5.6 into trunk 	36f3d4763cc7929993433febeb92f9702a432606
----------------------------
BUG#14666177 - TIME DIFF BETWEEN LAST 2 RECONNECTS IS COMING > @@GLOBAL.NET_READ_TIMEOUT * 2 === Problem === The test checks if the slave tries to reconnect before the value of slave_net_timeout. The check was done using the two variables: 1) ts_last: timestamp of last reconnect-attempt by slave, 2) ts_prev: timestamp of the second last reconnect-attempt by slave. The slave threads were killed using --source include/stop_slave.inc If the above statement is delayed due to CPU scheduling, the slave would get enough time to try two reconnects. If not, the slave threads would be killed after a single reconection attempt by the slave.In this case, ts_last=ts_prev. There was an assert condition given by: assert(@ts_last-@ts_prev >= slave_net_timeout where slave_net_timeout=10. In the above case, ts_last-ts_prev=0 which is less than slave_net_timeout. So, the assert condition fired and the test failed. === Fix === 1) Deleted the line --source include/stop_slave.inc which killed the slave threads earlier. 2) The assert condition is replaced by a wait condition which makes sure that the slave makes two reconnection attempts. 	43e73d3a0df6aa8c1218ed0c32597a0a7d678cfd
----------------------------
"WL#6561 ""Deprecate and remove support for .sym files (custom symlink implementation)"". Starting from Vista/Server 2008 a native symlinking mechanism is supported by Windows (through MKLINK command). Since starting from 5.6 we don't plan to support Windows XP/Server 2003 this makes MySQL Server implementation of symbolic links for Windows (based on custom .sym files) redundant. Therefore it is a good idea first to deprecate and then completely remove code implementing custom symbolic links. Note that having this custom implementation around is a bad idea not only from code complexity view point, but it also creates performance problems in some scenarios and is cause behind some bugs. This patch is the second step in this WL which completely removes this custom implementation. To do this it: * Removes USE_SYMDIR macro and all code withing #ifdef USE_SYMDIR. * Replaces usage of my_disable_symlinks with my_enable_symlinks to facilitate the next step. * Removes my_use_symdir global variable. In places where it is used to check if DATA/INDEX DIRECTORY clause should be supported we use my_enable_symlinks instead. Uses my_enable_symlinks to store value of --symbolic-links start-up option. After this change --symbolic-links option doesn't have any effect on Windows. But it still controls behavior for DATA/INDEX DIRECTORY clauses for MyISAM and Archive tables on Unix platforms. "	9e5dad6246121d44c4b823e53c41e18744f6c3fb
----------------------------
"Fix Bug #14747671  PKG UPGRADE RERUNS MYSQL_INSTALL_DB DURING UPGRADE Change the ""postinstall"" scriptlet for Solaris so that it first tests whether the directory ""$mydatadir/mysql"" (the one holding the system tables, especially ""mysql.user"") already exists: If yes, we assume this is an upgrade, and only if it didn't exist before the script is running this is a new installation for which ""mysql_install_db"" must be run. "	5b76cbbb6bdd976ec38befcf44a1f9e5d64f8358
----------------------------
Bug#14831335: Crash with SQL_BUFFER_RESULT and PROCEDURE ANALYSE The problem here is that PROCEDURE ANALYSE binds to the items of the temporary table dictated by SQL_BUFFER_RESULT. This temporary table is released in do_select() in the call to join->join_free(), just before calling join->result->send_eof(), which applies the analysis function. The problem is fixed by delaying removal of temporary table metadata from JOIN_TAB::cleanup() to JOIN::destroy(). 	d517b4cce0a595ad59602f35ca8f78b780e75c25
----------------------------
Worklog #6073: Remove INSERT DELAYED: re-record and removal - Some result files needed to be re-recorded after the last merge - Removed max_insert_delayed_threads from another equation but +10 is kept. 	fb86aef1ac860c7172d8722c6cb42128e3e4f7eb
----------------------------
Worklog #6073: Remove INSERT DELAYED: re-record and removal - Some result files needed to be re-recorded after the last merge - Removed max_insert_delayed_threads from another equation. 	a4e26043c50aa4e78ae3aff40545526d1d4c0843
----------------------------
"ndb - don't reset query_cache_size or query_cache_type to default since that is not the same as ""the value which the server was started with"" "	77215ae517606c8839fad3f4c048879c66e5a9c6
----------------------------
Merge in fix for ndb_cache test which requires a MySQL Server with dynamically configurable query cache 	ebdd491af1e693cd5733d5ad2100a828f2a578ac
----------------------------
"Adapt MySQL Cluster to ""WL#6372 : Post-Iris changes to Server defaults"" - The query_cache has been changed to only allow dynamic configuration if the server is started with query caching turned on. - Add .cnf files for all tests which need to have a MySQL Server where the query cache size and type can be dynamically modified. The .cnf file tells the server(s) to start with query caching on, but set size to 0. "	e91ab19d4bd8cae93ad03c0a581640b2041da685
----------------------------
ZBug#14807074 ALTER USER PASSWORD EXPIRE VS SHA256_PASSWORD Accounts with expired passwords will prevent most statements from being executed until a new password is set. A side effect is that a user who needs to change the PASSWORD() algorithm will be blocked from changing the old_passwords variable and consequently won't be able to reset his password. Some connectors also issue SET statements to initialize a new connection and they will also fail if these statements are blocked. This patch fixes both issues by allowing for all kinds of SET statements even a password is expired. 	f77da90b6e87f954dab86ffd25f7456be71dc94b
----------------------------
BUG#14797808: GTIDS AND BACKUP DON'T WORK TOGETHER Background ---------- The GTID feature was introduced in 5.6. It currently does not work with our backup tools MEB, mysqldump, and mysqlhotcopy: these tools are not capable to restore the GTID state. Suppose we perform the following steps: 1. B := backup from server_1 2. restore B on server_2 3. replicate from server_1 to server_2 Problem ------- The desired behavior is that replication starts from the point where the backup was taken. However, currently it starts from the beginning of history. Solution -------- On server core, GTID_PURGED must be settable. It is only possible to *add* GTIDs to GTID_PURGED and only when server is a new server (GTID_EXECUTED == ''). 	49795362c52e6e606d76f586a4322afe3dcee711
----------------------------
Merge: ec25cd2 9807247 BUG#11754894: MYISAMCHK ERROR HAS INCORRECT REFERENCE TO 'MYISAM_SORT_BUFFER_SIZE' Null Merge from 5.6 to trunk 	16b722b2cc93acf8dd2eaaa726657842d4143108
----------------------------
Merge: 4cec95f 43e9d64 BUG#11754894: MYISAMCHK ERROR HAS INCORRECT REFERENCE TO 'MYISAM_SORT_BUFFER_SIZE' Null Merge from 5.5 to 5.6 	98072475561bb250c1ba8531d11362c145c08aa7
----------------------------
Merge: f5a1354 675971a BUG#11754894: MYISAMCHK ERROR HAS INCORRECT REFERENCE TO MYISAM_SORT_BUFFER_SIZE Null Merge from 5.1 to 5.5 	43e9d641a696c02074b40e452f341663a713b4cb
----------------------------
Merge: 08aa4bc c94a6e0 BUG#11754894: MYISAMCHK ERROR HAS INCORRECT REFERENCE TO 'MYISAM_SORT_BUFFER_SIZE' Merging from 5.6 to trunk 	bc9a31fd84c20ef138826e2ef9122e212c01c9b1
----------------------------
Merge: a7a6da7 f5a1354 BUG#11754894: MYISAMCHK ERROR HAS INCORRECT REFERENCE TO 'MYISAM_SORT_BUFFER_SIZE' Merging from 5.5 to 5.6 	c94a6e0037f7d06630f3b7776d8e77a7d1639014
----------------------------
Merge: efd171f a034f52 BUG#11754894: MYISAMCHK ERROR HAS INCORRECT REFERENCE TO 'MYISAM_SORT_BUFFER_SIZE' Merging from 5.1 to 5.5 	f5a135405fc3c63ab5174a7a022c83dc6c00b3f6
----------------------------
BUG#11754894: MYISAMCHK ERROR HAS INCORRECT REFERENCE TO 'MYISAM_SORT_BUFFER_SIZE' Problem: 'myisam_sort_buffer_size' is a parameter used by mysqld program only whereas 'sort_buffer_size' is used by mysqld and myisamchk programs. But the error message printed when myisamchk program is run with insufficient buffer size is myisam_sort_buffer_size is too small which may mislead to the server parameter myisam_sort_buffer_size. SOLUTION: A parameter 'myisam_sort_buffer_size' is added as an alias for 'sort_buffer_size' and the 'sort_buffer_size' parameter is marked as deprecated. So myisamchk also has both the parameters with the same role. 	675971a846f7da63ff847d30680d89aa555588a6
----------------------------
BUG#11754894: MYISAMCHK ERROR HAS INCORRECT REFERENCE TO 'MYISAM_SORT_BUFFER_SIZE' Problem: 'myisam_sort_buffer_size' is a parameter used by mysqld program only whereas 'sort_buffer_size' is used by mysqld and myisamchk programs. But the error message printed when myisamchk program is run with insufficient buffer size is myisam_sort_buffer_size is too small which may mislead to the server parameter myisam_sort_buffer_size. SOLUTION: A parameter 'myisam_sort_buffer_size' is added as an alias for 'sort_buffer_size' and the 'sort_buffer_size' parameter is marked as deprecated. So myisamchk also has both the parameters with the same role. 	a034f52e6268c9bc4943d6e0888ebce0ba4564dd
----------------------------
Bug#14547920 I_MAIN.BUG13115401 CAUSING VALGRIND REPORT FAILURE ON PB2 Issue: The test i_main.bug13115401 which was added to fix the bug #13115401 has introduced a sporadic valgrind failure report on pushbuild specific to yaSSL build. It being a sporadic issue, it can be reproduced once or twice when the command below is run for around 50 times. perl mysql-test-run.pl --timer --debug-server --force --comment=n_mix-debug --vardir=var-n_mix --mysqld=--binlog-format=mixed --experimental=collections/default.experimental --skip-ndb --skip-test-list=collections/disabled-per-push.list --unit-tests --valgrind --valgrind-option=--gen-suppressions=all --valgrind-option=--show-reachable=yes Solution: The problem arises on a multi-threaded scenario when a thread tries to create a session object from GetSessions() method as another thread is already doing a creation. As the memory allocated in first thread is overridden by memory allocated by the second thread, the memory allocated by the first thread will be a leak in this case. This is because the yassl session instance is not thread safe. To make this instance creation process compatible with multi-threading, a new instance is created by with the help of yassl_pthread_once, which will essentially check if the function used for creating an instance is already called previously or not. 	e7aa07a9fd3bd76f99174aa20148f670d9755230
----------------------------
Bug#14547920 I_MAIN.BUG13115401 CAUSING VALGRIND REPORT FAILURE ON PB2 Issue: The test i_main.bug13115401 which was added to fix the bug #13115401 has introduced a sporadic valgrind failure report on pushbuild specific to yaSSL build. It being a sporadic issue, it can be reproduced once or twice when the command below is run for around 50 times. perl mysql-test-run.pl --timer --debug-server --force --comment=n_mix-debug --vardir=var-n_mix --mysqld=--binlog-format=mixed --experimental=collections/default.experimental --skip-ndb --skip-test-list=collections/disabled-per-push.list --unit-tests --valgrind --valgrind-option=--gen-suppressions=all --valgrind-option=--show-reachable=yes Solution: The problem arises on a multi-threaded scenario when a thread tries to create a session object from GetSessions() method as another thread is already doing a creation. As the memory allocated in first thread is overridden by memory allocated by the second thread, the memory allocated by the first thread will be a leak in this case. This is because the yassl session instance is not thread safe. To make this instance creation process compatible with multi-threading, a new instance is created by with the help of yassl_pthread_once, which will essentially check if the function used for creating an instance is already called previously or not. 	41497f4eec68f7caadcf2010b1a9240f6c584899
----------------------------
BUG#14722659: MAKE GTIDS WORK WITH NON-TRANSACTIONAL TABLES When gtid_mode=ON and --enforce_gtid_consistency options were used all statements that modify non-transactional tables were forbidden. This caused numerous problems when we want to insert or change data on system tables, since them are non-transactional and changed through DML. --enforce_gtid_consistency now allows simple statements updates that do not mix non-transaction and transactional engines. 	080e161b44a7a8b537338dd311ba43d997dfd662
----------------------------
Bug#14826660 WRITE_RESULT_TO_FILE.INC USES WRONG MYSQLD - Extact port and socket from current connection instead of trying to deduce which group suffix to use by magic formula. This makes the include file work also in other configurations. 	10860fb5c2a17cb9bb684762fe64007db95fa931
----------------------------
Bug#14505672 MYSQL_CONFIG_EDITOR REMOVE --ALL FAILS Bug#14545999 MYSQL_CONFIG_EDITOR SET -ALL BAD BEHAVIOR Bug#14545989 MCE DOES NOT WARN ON WRITE FAILURE This patch modifies the way options are handled by MCE. The options now are divided and handled in 2 different categories. The 1st set of options are program options while the 2nd set being specific to MCE commands. In order to bring in support for commands in the option handling routine, handle_options(), some extra logic has been added to stop option processing when a non- options string matches with a command specified through the new command_list parameter. Also, added the support for --user, --password, --host options for remove command, which could not be added before due to the option handling design constraints. Added test cases to test the added functionalities. 	c3254ce7ea135e3133c1edb3162454696b1ff20c
----------------------------
"Bug#11753308: MYSQL_KILL() AND COM_PROCESS_KILL ONLY HANDLE 32-BIT IDS The connection ID / ""thread-ID"" is currently 32 bit on the wire, but may be 64 bit in the API, depending on the definition of ulong on a given platform. If we silently drop half the bits on the floor, mysql_thread_id() in Connector-C may give incorrect results, and mysql_kill() might ask for the wrong (and usually long expired) thread to be terminated, even if a 64-bitly correct ID were obtained with ""SELECT connection_ID()"". We now guard against some 32/64 issues. We do this in both the client and the server to address mixed scenarios of old server / new client and vice versa. Using SQL instead of the C API (SELECT CONNECTION_ID() / KILL CONNECTION ...) should produce better results. mysqladmin already does this. Docs implications: - Discourage use mysql_thread_id() / mysql_kill(). current status is that they produce incorrect results / try to kill the wrong thread once more than 2^32 threads are created (IOW, this only affects extremely busy servers or those with an extreme uptime. The server also needs to use 64-bit thread_IDs for this to apply. This is platform specific, not a mysqld configurable.) Patched status is that the calls will work normally as long as thread_IDs are in safe range (< 2^32), but will throw an error a) if mysql_kill() in Connector-C is called with a value >= 2^32, or b) if mysql_kill() is used at all, even with ostentably correct values, once thread_ID in the server has exceeded what can be expressed within 32 bits. - encourage use of the SQL equivalents, SELECT connection_ID() / KILL CONNECTION ... - mysqladmin already does this, and is therefore safe. - mysql_kill() will throw CR_INVALID_CONN_HANDLE if it is given a larger value than can be expressed in the 32-bit wire protocol. - mysqld will throw ER_DATA_OUT_OF_RANGE on mysql_kill() once thread_ID in mysqld exceeds 32-bits. Backport from 5.7. "	e512ffb42d3ad397502e88dc0e4ce3648006b83b
----------------------------
Merge: f7ef836 8cc21e4 Bug#14785826: Fixing depricated server variable use in inc file. Disabling two failing rpl tests(RPL_SWITCH_STM_ROW_MIXED AND RPL_INSERT_ID) due to this. 	7144c935495242c2d79397e02ac8b111c40b9d72
----------------------------
Bug#14785826: Fixing depricated server variable use in inc file. Disabling two failing rpl tests(RPL_SWITCH_STM_ROW_MIXED AND RPL_INSERT_ID) due to this. 	8cc21e414a159038a7fa592ad9e7457a328b0d3f
----------------------------
"- initial checkin to enable separate tablespace for storing non-compressed temp-tables. - Temp-Tablespace is a new tablespace for storing non-compressed temp-tables - Compressed temp-tables continue to operate in same fashion as before. - Temp-Tablesapce is configurable is using options same as innodb_data_file_path. These options are picked from newly added variable name: innodb_temp_data_file_path. Option syntax and meaning remain same as innodb_data_file_path. - Temp-Tablespace can't reside on raw devices. - Failure in creating temp-tablespace is treated as fatal error. - Temp-Tablespace uses dynamically generated space-id. This also aids in achieving backward compatibility that is when this mysql version is used with existing db. - Temp-Tablespace is re-created on every server re-start. - Same as system/shared tablespace, temp-tablespace entry is not done to SYS_DATAFILES. - Name/Path of temp-tablespace shouldn't be same as system-tablespace. This is error: -innodb_data_file_path=""ibdata1:20M;ibdata2:30M:autoextend"" --innodb_temp_data_file_path=""ibdata1:20M;ibdatatmp2:30M:autoextend"" - temp-tablespace is left as is when server is started in read-only mode. "	230b11cfbb0bd160bdeb3e3f206f80ae247a0057
----------------------------
Disable ndb_binlog_format.test due to BUG#14801541 	a8b8a97694856533c22c5eccffa3b87fe2c4fc28
----------------------------
"BUG#14775984 - RENAME GTID IDENTIFIERS The following GTID identifiers have been renamed based on the discussion with the documentation team. Before the fix                         After the fix ================                       =============== GTID_DONE 				 GTID_EXECUTED GTID_LOST 				 GTID_PURGED disable-gtid-unsafe-statements 	         enforce-gtid-consistency SQL_THREAD_WAIT_AFTER_GTIDS 		 WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS The results file of the affected tests has also been updated. "	aeb1ade7cd6655cb39335dfd9978b21eb16428d2
----------------------------
rpl_ndb - Add section specifying that second mysqld should be part of slave cluster, at least conceptually this is important for mtr.pl when creating the physical configuration 	878bbe50dd1c1489bedad011c8443d1f79b59b6e
----------------------------
Bug#14792821: CRASH IN WARNING_INFO::RESERVE_SPACE() WHEN RESIGNAL WITH MAX_ERROR_COUNT=0 This crash occured if RESIGNAL with condition value was used when max_error_count was 0. It happened because we try to make room in the error list for the new condition RESIGNAL will raise. However, we did not check if the error list actually had enough conditions to remove. So we ended up trying to remove an element from a list that was already empty. This patch fixes the problem by checking if the error list actually has any elements before trying to remove. 	5ddb90d5675581d0dfff247296c3f53393b95ecd
----------------------------
Bug#14764890 - MYSQL 5.6 HOST CACHE DOES NOT SEEM TO RECORD INFO UNIQUELY BY IP, HOST Before this fix, SELECT * from performance_schema.host_cache would return multiple rows with the same IP address. When iterating on the host_cache container, of type hash_filo, the iteration did not detect properly the list end, and caused to loop in the filo list again, causing the same entries to be displayed multiple times. The root cause for this is the way the hash_filo list is implemented. The 'first_link->prev_used' and 'last_link->next_used' are in fact garbage, never initialized properly and never maintained. During analysis, other severe flaws in the code were found. This fix: - initialize properly first_link and last_link when a container is initialized. - clean these members -- while the mutex lock is held --, in ::clear(), to avoid race conditions - sets 'first_link->prev_used' and 'last_link->next_used' to NULL, to cleary mark the beginning and end of the double linked list, when re ordering the list. Also, given that is it not intuitive that the caller has to hold a lock even to read and iterate on the list, several mysql_mutex_assert_owner() calls have been added where appropriate. To improve the usability of the performance_schema.host_cache table, in particular to decide how to size the host cache itself, the size of a row is now displayed by SHOW ENGINE PERFORMANCE_SCHEMA STATUS. 	3d4f81006052854e14b8cb6e0487ca64756fe0fb
----------------------------
cleaned mysql-test/r/thread_cache_size_functionality.result 	957aaf0231819e7f1b47e2a73bed73e9cf0808ab
----------------------------
"BUG#14683107 - TRUNCATED VALUE FOR THREAD_CACHE_SIZE DIFFERS WHILE SERVER STARTUP DESCRIPTION: When mysqld is started with a negative thread_cache_size parameter, the thread_cache_size Global variable is reset to 16384 (MAX SIZE). Whereas when thread_cache_size is manually set using SET GLOBAL command with a negative value, the value of ""thread_cache_size"" is reset to 0, which is an inconsistent behaviour. ANALYSIS : In case of manually setting ""thread_cache_size"" using SET GLOBAL command, sys_var::do_check() takes care of sanitizing a negative input to 0 on unsigned variables, hence ""thread_cache_size"" is reset to 0. However during startup ""thread_cache_size"" is initialized by getopt_ull() passing the input string prefixed by '-' sign. This is then passed to eval_num_suffix() which uses strtoll() to convert string to numeric value. This disregards the return type and return 0xFFFFFFFFFFFFFFFF for -1 and hence this is assigned to the Global variable and it is truncated to 16384. FIX : getopt_ull() now checks to see if the input argument contains a '-' sign and if so 0 is returned. "	5f95cd51bcdc22c875941f0b265973eee577cf5d
----------------------------
Bug#14236124: WRONG CONNECTION ID (THREAD ID) IN THE GENERAL AND SLOW QUER Optional add-on to previous patch which corrected logging to file) wherein we change width of thread-ID field in slow and general log tables from INT to BIGINT (4 to 8 bytes), for correct logging of very large thread-IDs. Thread-IDs can get very large; patch adjusts general-logging and slow query logging to reflect that and log those IDs correctly. Backport to 5.6. 	3014f1deb97454fa3d54b2bb3b6d0622d535b45d
----------------------------
bug#14207773 - MYSQLD --CONSOLE DON'T SHOW ANYTHINGS In the 5.1 version of MySQL if both --console and --log-error options were given, messages from mysqld.exe were shown on the console. However after 5.3, if both options were specified, output did not go to console. This happened due to some code re factoring in revision 2876.75.1. opt_error_log variable controls whether the data sent to stderr should be redirected to the log file or not. After the refactoring this variable is being set to 1 even if the the --console option is specified. As a result output to console is redirected to log file and nothing is seen on console. Proposed fix sets opt_error_log flag only if the console option is not specified or mysqld.exe is running as a service. The changes also contains fix for some test cases that failed. The test cases failed because they depend on the creation of log file (--log-error option). The log file was not getting created because MTR by default passes --console option to MTR. I have added the --no-console option for failing test cases so that the error log file gets created. This is a windows only bug. 	73b3fbafd9ef1c34c67b0b69cb468e7a57e5d99e
----------------------------
BUG#13891058 - MYSQL SERVER SHUTDOWN WITH NAMED PIPES DESCRIPTION: When mysqld is started in Named Pipe mode with a pipe name which is already in used by another instance, neither of the instances are able to shutdown properly when a shutdown command is received from a TCP socket in any of the processes . mysqld.exe is not therefore not terminated. ANALYSIS : When a MySQL client sends a shutdown command using a TCP socket to a server which also happens to be using named Pipes shared by another instance. kill_server() and close_connections() are called on the correct instance identified by the TCP socket. However the worker thread servicing the named pipe connection is terminated on the instance first launched in chronological order, which might not be the same instance. This results in handle_connections_methods() waiting indefinitely on COND_handler_count and the main thread never exits. FIX : Code has been added to make sure the Named Pipe specified is not already in use. If it is so an error is shown and the process is aborted. 	4c814d1bbebbd0d95942d649fad2445ba4655c2a
----------------------------
Bug#14728422 CRASH WHEN TRUNCATING PERFORMANCE_SCHEMA TABLES AND P_S IS DISABLED If the Performance Schema is not initialized, then disable SELECT, INSERT, UPDATE, DELETE and TRUNCATE for all Performance Schema tables. Return an error for INSERT. Otherwise, no error is returned because target row(s) will not be found. 	b1c1eb433eafb82273d770b1a57c52b1849e7a54
----------------------------
Bug#14730537    NDB_MGMD --CONFIG-CACHE=FALSE OFTEN HANGS IN SHUTDOWN - Problem in mysys on certain MySQL versions where the thread id is used as the thread identifier. Since the thread id may be reused by another thread(when the current thread exits) one may end up waiting for the wrong thread. - Workaround by using a HANDLE which is opened by thread itself in 'ndb_thread_wrapper' and subsequently used to wait for the thread in 'NdbThread_WaitFor'. 	68d57da36e9b09894993feb6171de49e2c5edd9e
----------------------------
Merge: c2bada7 7e363ff Bug#11745891 - LAST_INSERT(ID) DOES NOT SUPPORT BIGINT UNSIGNED Problem:- using last_insert_id() on an auto_incremented bigint unsigned does not work for values which are greater than max-bigint-signed. Analysis:- last_insert_id() returns the first auto_incremented value for a column and an auto_incremented value can have only positive values. In our code, when we are initializing a last_insert_id object, we are taking it as a signed BIGINT, So when the auto_incremented value reaches greater than max signed bigint, last_insert_id gives negative result. Solution: When we are fetching the value from last_insert_id, We are setting the unsigned_flag, so that it take only unsigned BIGINT value. 	651d9f6e233650b0c261293f7a87baac1ba7b0c1
----------------------------
Merge: 55da7ca 00f2b12 Bug#11745891 - LAST_INSERT(ID) DOES NOT SUPPORT BIGINT UNSIGNED Problem:- using last_insert_id() on an auto_incremented bigint unsigned does not work for values which are greater than max-bigint-signed. Analysis:- last_insert_id() returns the first auto_incremented value for a column and an auto_incremented value can have only positive values. In our code, when we are initializing a last_insert_id object, we are taking it as a signed BIGINT, So when the auto_incremented value reaches greater than max signed bigint, last_insert_id gives negative result. Solution: When we are fetching the value from last_insert_id, We are setting the unsigned_flag, so that it take only unsigned BIGINT value. 	7e363ffa8c8b074d35d7470567a0ebe2d5a26d1f
----------------------------
Merge: e1db07c c55dd6b Bug#11745891 - LAST_INSERT(ID) DOES NOT SUPPORT BIGINT UNSIGNED Problem:- using last_insert_id() on an auto_incremented bigint unsigned does not work for values which are greater than max-bigint-signed. Analysis:- last_insert_id() returns the first auto_incremented value for a column and an auto_incremented value can have only positive values. In our code, when we are initializing a last_insert_id object, we are taking it as a signed BIGINT, So when the auto_incremented value reaches greater than max signed bigint, last_insert_id gives negative result. Solution: When we are fetching the value from last_insert_id, We are setting the unsigned_flag, so that it take only unsigned BIGINT value. 	00f2b1264f80ef5d72f7816757a2f523a735cb8d
----------------------------
Bug#11745891 - LAST_INSERT(ID) DOES NOT SUPPORT BIGINT UNSIGNED Problem:- using last_insert_id() on an auto_incremented bigint unsigned does not work for values which are greater than max-bigint-signed. Analysis:- last_insert_id() returns the first auto_incremented value for a column and an auto_incremented value can have only positive values. In our code, when we are initializing a last_insert_id object, we are taking it as a signed BIGINT, So when the auto_incremented value reaches greater than max signed bigint, last_insert_id gives negative result. Solution: When we are fetching the value from last_insert_id, We are setting the unsigned_flag, so that it take only unsigned BIGINT value. 	c55dd6bd4acc61181cd0737388516bbc70c8e000
----------------------------
Bug#14728422 CRASH WHEN TRUNCATING PERFORMANCE_SCHEMA TABLES AND P_S IS DISABLED If the Performance Schema is not initialized, then disable SELECT, INSERT, UPDATE, DELETE and TRUNCATE for all Performance Schema tables. Return an error for INSERT. Otherwise, no error is returned because target row(s) will not be found. 	b04b99eef0fc024277a9990b7e14ed5e4b8af0f2
----------------------------
Worklog #6073: Remove INSERT DELAYED: removed delayed_insert_limit_func.result 	185426d659c48a211f883c4720c2f1368cb9f7cd
----------------------------
Bug#14689561 - SERVER CRASH ON CONNECTING CLIENT USING BIND ADDRESS, WHEN HOST CACHE = '0' Analysis: host_cache_size global variable specifies size of underlying hash_filo class. hash_filo::add() dereferences last_link (which is NULL in case of cache size= 0), irrespective of cache size. Fix: Do not add entry by doing early return from hash_filo::add when hash_filo::size is zero. 	e82367b53a1bcc6346138cd99d3006000eaeb63c
----------------------------
Bug#14689561 - SERVER CRASH ON CONNECTING CLIENT USING BIND ADDRESS, WHEN HOST CACHE = '0' Analysis: host_cache_size global variable specifies size of underlying hash_filo class. hash_filo::add() dereferences last_link (which is NULL in case of cache size= 0), irrespective of cache size. Fix: Do not add entry by doing early return from hash_filo::add when hash_filo::size is zero. 	fae2790316d717bf3426324732b97cd0cbf9b734
----------------------------
Bug#14728422 CRASH WHEN TRUNCATING PERFORMANCE_SCHEMA TABLES AND P_S IS DISABLED If the Performance Schema is not initialized, then disable SELECT, INSERT, UPDATE, DELETE and TRUNCATE for all Performance Schema tables. Return an error for INSERT. Otherwise, no error is returned because target row(s) will not be found. 	b1cdd3f91d5c7fe3166a568ba5625e1792ba2628
----------------------------
Bug#14728422 CRASH WHEN TRUNCATING PERFORMANCE_SCHEMA TABLES AND P_S IS DISABLED If the Performance Schema is not initialized, then disable SELECT, INSERT, UPDATE, DELETE and TRUNCATE for all Performance Schema tables. Return an error for INSERT and TRUNCATE. Otherwise, no error is returned because no target row(s) will not be found. 	4bc73d5eb5508a71f8ab9d0e6d2140cd565a4387
----------------------------
Bug#14741880: Sporadic query cache related crash in pthread_rwlock_init() Bug 67156: Sporadic query cache related crash in pthread_rwlock_init() Reinitializing the query cache might lead to a crash inside pthread_rwlock_init() on Mac OS X. Mac OS X's pthread_rwlock_init() implements a check to detect attempts to reinitialize a previously initialized but not yet destroyed read/write lock. This check works by looking for a signature within the rwlock object and, if the signature matches, some pointer variables within the object are dereferenced. When MySQL's query cache is resized (e.g. SET query_cache_size = ...), or simply deinitialized, the memory used to allocate blocks is freed without explicitly deinitializing the allocated blocks. In particular, 'queries blocks' contain rwlock objects that are not properly destroyed. If the query cache is resized, and the same memory region is used, and a new query block is allocated in the same position, attempting to initialize the block's read/write lock might crash if the read-write lock object signature was preserved but yet somehow some of its fields were corrupted. The solution is to properly destroy the used read-write lock objects. 	402a4c9d88b7a68622e014611c1fcb998a198df1
----------------------------
Bug#11763795 ORPHAN FILES LEFT AFTER RENAME OR DROP ON A PARTITIONED TABLE Problem: The problem is that RENAME TABLE and DROP TABLE command succeeds on tables with partition even when mysqld is started with --skip-partition option. Analysis: do_rename() and mysql_rm_table_no_locks() invoke function ha_resolve_by_legacy_type() to get the handlerton* based on FRM's legacy_db_type. These functions continue to process even when the handlerton returned is NULL. The consequence is that, RENAME and DROP commands succeeds removing only FRM files and leaving *.par files related to partitions. There are side-effects on these files not being removed. Ex: CREATE TABLE fail if mysqld is started without --skip-partition, and if the table name is same as RENAME'ed or DROP'ed table name. Fix: Check for handlerton returned by ha_resolve_by_legacy_type() call during execution of RENAME, DROP TABLE and TRUNCATE table command's and throw error if handlerton is NULL, because such plugin is not installed. 	3ce2cc46b220f0d8c9153d2db7ee8a7e57b21c96
----------------------------
Bug #4671934 - NDB_CONFIG: DEFAULT VALUES MISSING FOR PARAMETERS 	57f6b33d13513c32dad61692969ee71d515df520
----------------------------
Worklog #6073: Remove INSERT DELAYED: Third patch, performance_schema tables. This is where we remove all knowledge of insert delayed from performance_schema. We remove five columns from performance_schema.table_lock_waits_summary_by_table: COUNT_WRITE_DELAYED BIGINT, SUM_TIMER_WRITE_DELAYED BIGINT, MIN_TIMER_WRITE_DELAYED BIGINT, AVG_TIMER_WRITE_DELAYED BIGINT and MAX_TIMER_WRITE_DELAYED BIGINT. Removing them means we have to edit several places: - scripts/mysql_system_tables.sql, containing the DDL - storage/perfschema/table_helper.h contained the backing store for the columns in a PFS_stat_row struct, which was removed. - table_tlws_by_table.cc has an array of columns which has to stay in sync with the DDL. Fortunately there are consistency checks. One such consistency check had a dangling documentation which was deleted (table.cc). There was also a function for populating the columns which had to be changed since it used column indexes rather than logical names. We remove one possible value for the 'operation' column in the tables events_waits_current, events_waits_history and events_waits_history_long. The removed value itself is found in enum_operation_type as OPERATION_TYPE_TL_WRITE_DELAYED. It is mapped onto a char* in operation_names_map[], removal of which requires careful orchestration as the values are mapped via indexes only. We remove the lock type PFS_TL_WRITE_DELAYED from enum PFS_TL_LOCK_TYPE. The server's lock TL_WRITE_DELAYED was mapped onto it in lock_flags_to_lock_type(uint), we remove this mapping. 	78650dc51674f4efcdd08fb6a36032f150d527cc
----------------------------
Bug#14689561 - SERVER CRASH ON CONNECTING CLIENT USING BIND ADDRESS, WHEN HOST CACHE = '0' Analysis: host_cache_size global variable specifies size of underlying hash_filo class. hash_filo::add() dereferences last_link (which is NULL in case of cache size= 0), irrespective of cache size. Fix: Do not add entry by doing early return from hash_file::add when hash_filo::size is zero. 	07b6ce0718763dc3344b93877f9e8c689d44ad5b
----------------------------
"Worklog #6073: Remove INSERT DELAYED: Second patch, mutexes and instruments. Here we remove the insert delayed mutexes: LOCK_delayed_insert, LOCK_delayed_status and LOCK_delayed_create. This in fact causes most of the delayed insert code to be removed: delayed_get_table(), write_delayed(), end_delayed_insert(), handle_delayed_insert(), unlink_blobs(), open_and_lock_for_insert_delayed(), Delayed_insert, find_handler(), kill_delayed_threads() and Delayed_prelocking_strategy are all gone. We also remove the dedicated performance_schema instruments: - Four PSI_mutex_key instances: key_delayed_insert_mutex, key_LOCK_delayed_create, key_LOCK_delayed_insert and key_LOCK_delayed_status. Corresponding PSI_mutex_info instances are also deleted. - One PSI_thread_key: key_thread_delayed_insert and its corresponding PSI_thread_info. - The user could also see information about insert delayed in the performance_schema.setup_instruments table, named Delayed_insert::cond and Delayed_insert::cond_client. They were backed by two PSI_cond_key's named key_delayed_cond and key_delayed_insert_cond_client. - The instrumented stage ""Creating delayed handler"" is removed. References in MTR to these aspects of performance_schema were also removed, even though they don't all explicitly fail. "	7eee7647ce61e5540f3cb3425b0be7d1b7bfe260
----------------------------
WL #6055 New default config file in MySQL 5.6 Forgot to add new and remove old files 	8f261bce1552412e8f834626c1c8404aab2cbdfc
----------------------------
WL #6055 New default config file in MySQL 5.6 Bug #14725217 PLEASE ADD SQL_MODE=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES TO Bug #14729792 NO WARNING WHEN MY.CNF EXISTS IN /ETC/MYSQL Bug #14735440 WRONG WARNING MESSAGES SHOWN WHEN MYSQL_INSTALL_DB IS RUN Bug #14735448 NEW MY.CNF NOT CREATED WHEN --DEFAULTS-FILE IS USED WITH MYSQL_INSTALL_DB Extending mysql_install_db to install new default Handle cases where it exists already, or system file like /etc/my.cnf does 	690b65fc4ea84b067942f5888ef60fa94f6487fa
----------------------------
Bug#14664453 THREAD_ID SHOULD BE BIGINT(21) UNSIGNED IN PERFORMANCE_SCHEMA On some servers that: - do have a heavy load in production - do have very short sessions - do have a very long uptime the connection_id() counter can grow at a very high rate, and eventually overflow the 32bits limit. For the performance schema, a similar THREAD_ID counter also exist, for table performance_schema.threads, that is also implemented as a 32bits value. This fix changes the following columns: - performance_schema.threads.thread_id - performance_schema.threads.processlist_id to use BIGINT UNSIGNED (64 bits unsigned values) All related columns in performance schema tables are changed accordingly. The motivation for changing both thread_id and processlist_id at the same time is to avoid un necessary schema changes later. This fix changes the performance schema internal counter for threads.thread_id to use a 64 bits value. This fix does NOT change the internal counter for connection_id(), which is done separately (see related bugs) For clarity in the code, PFS_thread::m_thread_id has been renamed to PFS_thread::m_processlist_id, to avoid confusion with m_thread_internal_id. 	c842ebbdef4a8d0ccc7e8f0bb47174aba0961e60
----------------------------
WL#6403: Add Idempotent mode in mysqlbinlog -fixed test cases -removed asserts -added printing of the rows. - remove mention of global value of the rbr_exec_mode variable. 	6996388ef67ce7de892c77ae2dd1977b272b714f
----------------------------
Bug #14211140: CRASH WHEN GRANTING OR REVOKING PROXY PRIVILEGES Description: (user,host) pair from security context is used privilege checking at the time of granting or revoking proxy privileges. This creates problem when server is started with --skip-name-resolve option because host will not contain any value. Checks should be dependent on consistent values regardless the way server is started. Further, privilege check should use (priv_user,priv_host) pair rather than values obtained from inbound connection because this pair represents the correct account context obtained from mysql.user table. 	41d06374b5ba34d117052be6400887e6ff8a77a7
----------------------------
Bug#14732690 FAILING ASSERTION UPDATE->N_FIELDS > 0 IN ROW0LOG.CC row_log_apply_op_low(): Remove the bogus assertion. Sorry, no test case, because I failed to create a DEBUG_SYNC test case for this. 	399dae6cbef926e14c9c71f13a18965f0b5b6e45
----------------------------
WL#6403: Add idempotent option to mysqlbinlog - Made rbr_exec)_mode *SESSION ONLY* - fixed test cases -added assert in rpl.rpl_mysqlbinlog_idempotent -removed testing for setting global var rbr_exec_mode and added checks for error - Removed ability to change/update GLOBAL value of rbr_exec_mode 	3f824b1b121b8e22b1b76f1a7bf319a8ca80a68c
----------------------------
"Bug #14731457  	MYSQL_INSTALL_DB FAILES WHEN DATADIR IS NESTED DIRECTORIES (WHICH DON'T EXIST) The Perl variant of ""mysql_install_db"" does not create the path leading to the datadir if it does not exist, the shell variant did so (silently) by ""mkdir -p"". The bug report contains the explanation why this implicit creation is considered wrong, users should create such a non-standard path. (Installation following the manual will never encounter this.) If the script is called with a datadir option whose parent directory does not exist, it will now give an error message. "	4bc1bfee4b069d72106046d5ffc4f790c5fd0809
----------------------------
Bug#14704503 BUILDS ON MAC OS X HAVE INCORRECT VERSION_COMPILE_MACHINE This is the same bug on intel/solaris and mac as Bug #13859866: VERSION_COMPILE_MACHINE SHOWS X86 FOR 64-BIT BINARIES ON 64-BIT WINDOWS MACHINE version_compile_machine will now show x86_64 for 64 bit binaries for intel/solaris and darwin. 	57a391e4754bce612d55b2203c41392af06057c5
----------------------------
WL#6372 : Post-Iris changes to Server defaults Details: - Implemented default changes for: - table_open_cache - table_definition_cache - open_files_limit - thread_cache_size - host_cache_size - query_cache_size - query_cache_type 	85407e526a83bf3a3fdf93da4b26651e873a4b75
----------------------------
"Fix the Perl variant of ""mysql_install_db"": 1) ""resolveip"" must explicitly be called via its location in ""$extra_bindir/"" to be found, 2) system tables for ""current_hostname"" must not be suppressed unless it is a bootstrap run, 3) options controlling the default file must keep their name, 4) and InnoDB cannot be skipped in 5.6. "	4413932a93f5a1c22f8ecb83ec35f1cbbe718688
----------------------------
WL#6403: Adding Idempotent mode in mysql binlog Made changes in setting the rbr_exec_mode system variable. 	975a38bcebd38490486b1635b07b4a66b67dcecb
----------------------------
"Bug#14274066 INNODB-MULTIPLE-TABLESPACES ""MOVE_FILE"" FAILED WITH ERROR 1 ON LINUX After several adjustments to this test case, we found that --move_file is still failing on systems that have tmpdir on a separate mount point.  The failure happens when this test tries to move a tablespace file from tmpdir to datadir, or between mount points.  This seems to be a limitation of mysql-test-run.  To get around this we tried replacing --move_file with --copy_file and --remove_file, which seemed to work. Patch suggested, tested and approved by Nuno Carvalho. "	661897fcbe7b80a48e46e07996d57acddbcdf900
----------------------------
"Bug#14665052: OPTIMIZER TRACE DIFFERS WITH QUERY_CACHE ENABLED AND QUERY_CACHE_SIZE=1M With optimizer_tracing enabled, INFORMATION_SCHEMA.OPTIMIZER_TRACE can be queried to find tracing information about the last statements. The problem was that if a query was executed by retrieving results from the query cache, no tracing information would not be added. This meant that querying INFORMATION_SCHEMA.OPTIMIZER_TRACE could give confusing results as it would omit information about queries where the result was retrieved form the query cache. This patch fixes the problem by adding an optimizer tracing information entry (""query_result_read_from_cache"") in case of a query cache hit. "	6ec156aa8b0a75f98661467316c801765b00efa5
----------------------------
"Session: implement createBatch UserContext implement deferred execution to support batching implement executeBatch called from Batch if deferred execution is on, create the operation but do not execute it the created operation is available via the ""operation"" property of UserContext harness: improve errorIfNotEqual to include the expected and actual results MySQLConnection: implement multiple transaction execute (see ParallelOperationTest) maintain a list of pending operations when one set of operations is complete, execute the next set fix lint errors Batch: implement batching BatchTest: test insert autocommit, insert no autocommit, getSession ParallelOperationTest: test parallel operations (multiple session.find without waiting for the callback) "	2090f8d09b1763de9efb99bd574637e3568cc945
----------------------------
"BUG#14576423 - NO WARNING WHEN THE SERVER IS STARTED WITH INVALID VALUE FOR QUERY_CACHE_SIZE DESCRIPTION: When mysqld is started with an invalid query-cache-size parameter (less than 40K according to documentation), query caching is non-functional, however the global variable ""query_cache_size"" still contains the invalid value and no warnings are displayed. Whereas when query_cache is manually set using SET GLOBAL command with an invalid value, a warning is thrown and the value of ""query_cache_size"" is reset to 0. ANALYSIS : In case of manually setting ""query_cache_size"" using SET GLOBAL command, fix_query_cache_size() is fired which is the ON_UPDATE callback for Sys_query_cache_size, this callback checks if resizing the query cache was successful and throws a warning and resets ""query_cache_size"" to 0 if an failure occurred. However during startup Query Cache is initialized in init_server_components() which does not check if Query Cache initialization failed, hence no warning is thrown and the ""query_cache_size"" global variable is not reset and happens to contain the same invalid value as passed from the command line. FIX : A new function init_server_query_cache() has been introduced which initializes Query Cache and it also shows a warning and resets ""query_cache_size"" to 0 if initialization fails. "	601ceebed1b547556766f6755005e9cd2e5fd079
----------------------------
Bug #14685458 NDB : REPORT BYTES SENT/RECEIVED ACROSS TRANSPORTERS This patch extends the ndbinfo.transporters table with a number of new columns : remote_address bytes_sent bytes_received For each transporter (point to point link between nodes), these columns indicate the address of the 'remote' end of the link, the number of bytes sent to that node, and the number of bytes received from that node. The byte counts are reset on disconnect. 	48e5b3362a6c5c337d5928d30523e6d838562344
----------------------------
BUG#14640065: SQL_THREAD_WAIT_AFTER_GTIDS DOES NOT HANDLE ERRORS CORRECTLY SQL_THREAD_WAIT_AFTER_GTIDS was waiting indefinitely if gtid_mode=OFF when it was invoked without timeout. When timeout was used, it was returning a different return value of other error cases. SQL_THREAD_WAIT_AFTER_GTIDS implementation was fixed to always return NULL when gtid_mode=OFF. 	51cab39583072f8ae19c0b21dce08ce99648766b
----------------------------
Use small values for innodb_log_file_size in test. 	6f7e99c76cdcdae30d6b32f3cec7ebe98d9704d1
----------------------------
WL#6224 Adapt MySQL Cluster to 5.6 - Record .result file for tests affected by new sql_mode as changed by WL#6216 Changes to Server defaults in 5.6 	99096be14eb20bf3058beea64318c2b522587ea5
----------------------------
Bug#14658683: INTRODUCE DEPRECATION WARNINGS FOR SYSTEM VARIABLES RELATED TO PROFILING Description: wl#6443 added deprecation warnings for features SHOW PROFILE and SHOW PROFILES. However, similar warnings are required for related system variables like have_profiling, profiling and profile_history_size. This change introduces deprecation warnings for above mentioned options. 	9d3d484b67f3f50ddcfd9d1ca6cd9cbd8bf92bb7
----------------------------
Fix(marko's change) Bug#14681799 CRASH RECOVERY WARNINGS ON MAC OS X  and test failure (of grep on error log and  Added size check forinnodb_log_files_in_group in test) 	40020dbb445c5b44f46dc30717e1f235c951c349
----------------------------
Merge: 711f817 c49e1f9 Bug#11753779: MAX_CONNECT_ERRORS WORKS ONLY WHEN 1ST INC_HOST_ERRORS() IS CALLED. Description: Null merge from mysql-5.6 to mysql-trunk. 	75bd06fffcfd50b406f901f290c296c30a369004
----------------------------
Merge: a63e6fd 03d2ba0 Bug#11753779: MAX_CONNECT_ERRORS WORKS ONLY WHEN 1ST INC_HOST_ERRORS() IS CALLED. Description: Null merge from mysql-5.5 to mysql-5.6 	c49e1f97ef4a459f74ccb5c82444b3a925fb948d
----------------------------
On AutoCommit execute, NdbTransactionHandler must tell NdbSession that the transaction has been committed. 	6a5744a17c493108f87694c4c7defda9754b285f
----------------------------
Bug#13742882 - PERFSCHEMA.EVENT_AGGREGATE_NO_U_NO_H AND EVENT_AGGREGATE_NO_A FAIL SPORADICALLY This fix improves test robustness in the perfschema test suite. Before this fix, event_aggregate*.test would fail, with spurious missing statistics for INSERT statements. Failures would occur only for the last statement of the payload only. The problem is that the script sends a statement to the server, and then immediately query performance_schema tables for statement statistics. The reply to the statement to measure might be sent to the client, but the statement execution is not completed yet in the server. The fix is to add wait conditions in the test script, to ensure that the connection that contains the payload is done with any processing, and blocked in an IDLE wait, waiting for the next statement to execute, to make sure the previous statement is completed. 	b0b52655c80897aa5e1420ad996ceaf3583063fc
----------------------------
"Bug#14116386 PERFSCHEMA.TABLE_LOCK_AGGREGATE_GLOBAL_4U_3T FAILS ON MYSQL-TRUNK SPORADICALLY This fix is a server code change, that fixes an issue of spuriously disappearing threads in the performance schema. This issue is affecting randomly many tests scripts, and in particular scripts that rely heavily on per thread statistics. Background information: Tests scripts are executed with mysql-test-run, a client. The test client consider that the server is ""done"" executing a statement when the current statement execution is done replying all the bytes in the client socket connection. In terms of code, this happens after the last socket write event, which is technically still part of the current statement execution. However, the server is not ""done"" yet, and is not idle. The server code is still executing code, such as: - more wait events, such as mutex locks - more stages events, such as ""cleaning up"", - finish the current statement instrumentation, - start an idle wait event. Only when the server is blocked in an IDLE event can the server be considered is a stable state. Anything that happen between the last socket write and the idle wait can potentially cause interferences with the queries executed by the client script (in a different connection). This scenario is very common for the test scripts involved, where a root monitoring connection spy on a regular client connection. Of particular interrest, during that window of execution in the server, are calls that maintain the performance_schema.threads table, for the PROCESSLIST_STATE and PROCESSLIST_INFO columns. These columns are still updated while the test client makes queries to the performance schema. The problem is with the implementation of: - set_thread_state_v1() - set_thread_info_v1() which for a short period of time flag the entire thread as dirty. This code cause the thread to litteraly disappear and reappear later in: - the threads table - every aggregate table that iterates on threads causing the test failures seen. This issue has in fact a significant impact, as these instrumentation points are called multiple times during a statement execution: at each instrumented stage. The fix is to: - not touch the PFS_thread::m_lock - define a dedicated lock to maintain integrity of the processlist state and info attributes, PFS_thread::m_processlist_lock. With this fix, a PFS_thread is not spuriously hidden each time the thread state changes, making every aggregate based on threads more stable and accurate. "	ca7cefdd0f07a4f106e4e6900e4ad442027a6dbd
----------------------------
Write a proper help string for innodb_force_recovery_crash. 	4408a3cce6ed737c99223494d0478a103591dd8d
----------------------------
"Description: ------------ sys_vars.all_vars fails on Windows 32 and 64 bit on daily trunk commercial branch with multiple combinations. Failure snippet- sys_vars.all_vars                        w1 [ fail ] Test ended at 2012-08-22 09:20:13 CURRENT_TEST: sys_vars.all_vars 'diff' is not recognized as an internal or external command, operable program or batch file. --- G:/pb2/test/sb_1-6672625-1345599364.71/mysql-advanced-5.7.0-m10-winx64/mysql-t est/suite/sys_vars/r/all_vars.result	2012-08-22 01:05:07.000000000 +0300 +++ G:\pb2\test\sb_1-6672625-1345599364.71\mysql-advanced-5.7.0-m10-winx64\mysql-t est\suite\sys_vars\r\all_vars.reject	2012-08-22 10:20:13.251978100 +0300 @@ -12,5 +12,7 @@ select variable_name as `There should be *no* variables listed below:` from t2 left join t1 on variable_name=test_name where test_name is null ORDER BY variable_name; There should be *no* variables listed below: +LOG_THROTTLE_QUERIES_NOT_USING_INDEXES +LOG_THROTTLE_QUERIES_NOT_USING_INDEXES drop table t1; drop table t2; mysqltest: Result length mismatch How to repeat: -------------- Seen on daily trunk commercial. mysql-test-run.pl  --timer --force --parallel=8 --comment=n_mix_4k_size --vardir=var-n_mix --mysqld=--binlog-format=mixed --experimental=collections/default.experimental --skip-ndb --skip-test-list=collections/disabled-per-push.list --mysqld=--innodb-page-size=4k --skip-test=innodb_ignore_builtin Suggested fix: -------------- The purpose of all_vars.test is to make sure that there are tests for all system variables. In daily trunk commercial it is failing because it could find test for a system variable called log_throttle_queries_not_using_indexes. In windows platform the test-name is truncated to log_throttle_queries_not_using_indexes_basic.tes Hence all_vars.test couldn't find a .test file for the above variable. Inorder to get rid of the truncation, suggested fix is to change the name of the test to a smaller name which is log_throttle_qni_basic.test Also changing the file-name must happen in conjunction with another alias-rewrite: update t2 set variable_name= replace(variable_name, ""_THROTTLE_QUERIES_NOT_USING_INDEXES"", ""_THROTTLE_QNI""); "	d233b6b5d2ec6b970c7d24a0d3ee8768833183a9
----------------------------
WL#6494 clean-up suggested in code review innobase_log_files_in_group: Remove. Bind srv_n_log_files directly to the parameter innodb_log_files_in_group. SRV_N_LOG_FILES_MAX: The maximum value of innobase_log_files_in_group. 	67f55c9d7194323a936b841555b1eea01485106c
----------------------------
WL#6494 cleanup: Remove a bogus recommendation in the help message of innodb_log_files_in_group. 	1d94a72c7fe2c61f62cab2cf50f8f91ebdcbef29
----------------------------
Fix for Bug #14545229 - ASSERT TABLE->N_FOREIGN_KEY_CHECKS_RUNNING == 0, ALTER TO CHANGE ROW FORMAT rb://1326 approved by Marko 	94a3ecf6fd064a81bf207ffe4d0b31b55430b42b
----------------------------
WL#6494 crash injection for server startup (innodb_force_recovery_crash) RECOVERY_CRASH(x): A macro for crashing the server if innodb_force_recovery_crash is set to a particular value. create_log_files(), create_log_files_rename(), innobase_start_or_create_for_mysql(): Add RECOVERY_CRASH() injection. 	e013752dce718f52c18df26eba288163de5f6299
----------------------------
Session: load now returns only an error plus the user's extra arguments close delegates to UserContext Transactionjs: begin notifies dbSession if it has a begin method throw or return an error for commit and rollback delegate commit and rollback to UserContext SPI-documentation: add begin, commit, and rollback to DBSession UserContext: keep track of whether session is autocommit and call executeCommit or executeNoCommit implement closeSession, commit, and rollback MySQLConnection: track autocommit state in dbSession make execute know whether it is in autocommit mode or not begin will call connector.query('begin') commit will call connector.query('commit') rollback will call connector.query('rollback') MySQLConnectionPool: debugging statements might be useful in future harness: debugging TransactionTest: improved error testing to test error return added commit and rollback tests t10 and t11 lib.js: added a proper constructor for t_basic domain object 	b46a3c765b816337a28351eb450a7da56cdb59ab
----------------------------
Test Framework changes: Rename Driver.js to driver.js Move harness.js and its README into test/lib/ Implement support for customized test environment properties -- these are configured in the file test_connection.js, which, if not present, will be created from the template in lib/test_connection_js.dist. 	c14a3dfb5af72a9dde3e92baf6860199e2ced6a2
----------------------------
Fix so that ctrl-c in configure.js really skips node-waf 	301982b674513a96ab278c2bef88db1d5d2acc6f
----------------------------
"BUG# 12793893 - binlog_innodb timed out in pushbuild. === Description === The test contained a transaction that ran a loop 2000 times. In every iteration, a row was being being inserted into a table. 2000 iterations to build up the long transaction sometimes proved to be too costly on slow platforms.The purpose behind 2000 iterations was to make sure that the transaction used the temporary binary log cache and also exceeded the value of ""binlog_cache_size"". === Fix === I toned down the loop at the same time I made sure it did not break the purpose. 1) Made the loop run 600 times. 2) Decreased the value of ""binlog_cache_size"" to 4096, the minimum allowed value defined in the manual. "	16b4e02de41cd69c9c9436440c3437654012f85e
----------------------------
WL#6494: Make innodb_log_file_size=48M the new default. mysql-test-run: Explicitly specify the old default innodb_log_file_size=5M. This can be overridden by --mysqld=--innodb-log-file-size=48M. 	264d3866d0043d79985aadbd89a553ca34bc5f41
----------------------------
WL#6494: Replace redo logs when needed. fil_close_log_files(): Close all redo log files. Forked from fil_close_all_files(). innobase_start_or_create_for_mysql(): Replace the redo log files if their current size or amount differs from the configuration. 	b527a2e5e4544b2ca7da949ce165ef0032d85180
----------------------------
Merge: a221a5a 29fdd94 Merge from mysql-trunk-wl6445. Allow InnoDB to work on read-only media e.g., DVD, CDROM . Introduce a new configuration parameter: --innodb-read-only When this configuration parameter is set: 1. Open ALL the tables in read-only mode 2. If the system was not shutdown cleanly then refuse to start. 3. Disable all background threads except the IO read threads. In a 100% pure RO workload deadlocks should not happen. 4. Disable writes to temp files, InnoDB uses temp files to log information like deadlocks, monitor output, SHOW ENGINE INNODB STATUS etc. 5. If there are entries in the UNDO log  we should  still be able to start normal operation. Purge will not remove the delete marked entries from the tables and will not trim the UNDO logs because the purge thread(s) will be disabled. 6. Refuse to start if there are entries in the change buffer. The user must do a slow shutdown or disable change buffering when creating the database that is going to be shipped on RO media. --innodb-change_buffering=OFF 7. Users should ensure that they set the REDO log file to the smallest size possible (1M) before moving to read-only media. The REDO log is only used to check whether the database was shutdown cleanly or not. 8. Some optimisations that are not done yet. 1. Disable read view creation and deletion. 2. Transaction start and commit, running in AUTO-COMMIT mode should achieve a similar effect for now. 9. Should be possible to run multiple RO instances against the same set of (shared) RO files. 10. This new parameter is independent of --read-only which is a server layer parameter Limitations: SHOW ENGINE INNODB STATUS; wont work, it will return an empty set. 	7b63164e5f8be2b331f3d07b6d03e241648f1e89
----------------------------
WL#6494 preparation: Refactor the redo log open/create. srv_log_file_size_requested: A copy of srv_log_file_size. srv_log_file_size: The actual size of the redo log files, in pages. open_or_create_log_file(): Refactor into create_log_file() and open_log_file(). innobase_start_or_create_for_mysql(): If ib_logfile0 cannot be found, create log files. Otherwise, open the log files and ensure that every file is of the same size, which is a multiple of the page size. innobase_start_or_create_for_mysql(): After processing the redo log files, if the number or size of redo log files disagrees with the configured number or size, crash the server. (This is a placeholder for the code that will replace the logs.) 	b7badc40f89b3fbf8f75b38487e7ca4d6482487f
----------------------------
"Bug#12776842 - RBR:DUPLICATE WARNINGS ABOUT NOT EXECUTED EVENTS FLOOD SLAVE ERROR LOG PROBLEM: ======== If a slave is allowed to skip certain types of replication errors, it writes corresponding warnings into the error log, e.g. with slave-skip-error=1062: Could not execute Write_rows event on table test.t; Duplicate entry '1' for key 'PRIMARY', Error_code: 1062 If a group contains several Write_rows events, warnings generated through past events carried over tot he following event. Before the fix warnings looks like: ================================== Two entries in error file for two Write_rows events in the group: 1)Could not execute Write_rows event on table test.t; Duplicate entry '1' for key 'PRIMARY', Error_code: 1062; Error_code: 1062; handler error HA_ERR_FOUND_DUPP_KEY; 2)Could not execute Write_rows event on table test.t; Duplicate entry '1' for key 'PRIMARY', Error_code: 1062; Duplicate entry '26' for key 'PRIMARY', Error_code: 1062; handler error HA_ERR_FOUND_DUPP_KEY; The warning ""Duplicate entry '1'..."" is carried over from the first event to the next event. Analysis: ========= 1) In row format, these skipped errors are getting converted to warnings and they are added to diagnoestic area.These warnings are not getting cleared after they got printed in the error log file. 2) While analysis we have also noticed that statement format is silently ignoring these skipped error without printing them in the error log file. Fix: ==== 1) In row format, to clear the warnings, adding clear_warning_info() in slave_rows_error_report function. 2) To Make RBR and SBR behave the same way, SBR now prints these warnings in the error log file. And also in RBR and SBR, these warnings will get printed in error log file only if LOG_WARNINGS is set to > 1. Require documentation change: ============================= Yes. In server options --slave-skip-error section, we should add the line that these skipped errors will be logged as warnings if LOG_WARNINGS variable is set to > 1. "	988f5c72646295390e75fcc33d5e06a1a8813ce6
----------------------------
BUG#11763447: 'YOU CANNOT 'ALTER' A LOG TABLE IF LOGGING IS ENABLED' EVEN IF I LOG TO FILE. Analysis: ---------- MYSQL_UPGRADE of the master breaks the replication when the query logging is enabled with FILE/NONE 'log-output' option on the slave. mysql_upgrade modifies the 'general_log' and 'slow_log' tables after the logging is disabled as below: SET @old_log_state = @@global.general_log; SET GLOBAL general_log = 'OFF'; ALTER TABLE general_log MODIFY event_time TIMESTAMP NOT NULL, ( .... ); SET GLOBAL general_log = @old_log_state; and SET @old_log_state = @@global.slow_query_log; SET GLOBAL slow_query_log = 'OFF'; ALTER TABLE slow_log MODIFY start_time TIMESTAMP NOT NULL, ( .... ); SET GLOBAL slow_query_log = @old_log_state; In the binary log, only the ALTER statements are logged but not the SET statements which turns ON/OFF the logging. So when the slave replays the binary log,the ALTER of LOG tables throws an error since the logging is enabled. Also the 'log-output' option is not checked to determine whether to allow/disallow the ALTER operation. Fix: ---- The 'log-output' option is included in the check while determining whether the query logging happens using the log tables. 	44364ed9e933552d514ba01d7d4b16e0be32c439
----------------------------
Do not try innodb_change_buffering_debug=2. 	bff1135ce06a0702674d5c6ec96e6af3ec2e4efe
----------------------------
UserContext.js: patch executeCommit pending implementation of autocommit behavior 	a0c5e41ca61fda3e722f21511f8563d694c1904d
----------------------------
Bug#14621700 SERVER CRASH IN EXECUTING OPTIMIZER_DEBUG_SYNC.TEST The triggered assert checks that only complete results are cached in the query cache. It could be triggered if the query ended with an error and the query cache was turned on and had a non-zero size. This problem was introduced by the merge of the patch for Bug#40264 from 5.0 to 5.1. This patch fixes the problem by checking if the query has ended with an error and not caching the results in this case. 	d153a1e05d624df418d7ea4adf2967828398c2c3
----------------------------
BUG#14116526: RPL.RPL_GTID_SQL_UNTIL_BEFORE_AFTER FAILS WITH RESULT LENGTH MISMATCH ON TRUNK. There is a opportunity window between the moment on which current GTID (thd->owned_gtid) is appended to logged_gtids and the commit to engines is performed, what on slow/profiling platforms can make SELECT SQL_THREAD_WAIT_AFTER_GTIDS(GTID) return before data reaches the database. To close this opportunity window, when current GTID is appended to logged_gtids it is not removed from owned_gtids, it is only removed after commit. SQL_THREAD_WAIT_AFTER_GTIDS(GTID) returns when GTID is logged (flushed to binary log) and not on owned_gtids (committed). @ sql/binlog.cc Only after commit stage remove current GTID from owned_gtids set. @ sql/rpl_gtid.h Added Owned_gtids::is_intersection(const Gtid_set *other) method signature and Gtid_iterator on Owned_gtids class. Renamed Gtid_state::update(THD *thd, bool commit) to Gtid_state::update_on_flush(THD *thd). Added Gtid_state::update_on_commit(THD *thd) and Gtid_state::update_on_rollback(THD *thd) method signature. @ sql/rpl_gtid_execution.cc Between binlog flush and commit stages logged_gtids and owned_gtids may intersect, so invariant's assert must be removed. @ sql/rpl_gtid_owned.cc Added Owned_gtids::is_intersection(const Gtid_set *other) method. @ sql/rpl_gtid_state.cc Gtid_state::update_on_flush(THD *thd) adds current GTID to logged gtids and notifies waiting threads. Gtid_state::update_on_commit(THD *thd) removes current GTID from owned_gtids and cleans thd->owned_gtid. Gtid_state::update_on_rollback(THD *thd) removes current GTID from owned_gtids, notifies waiting threads and cleans thd->owned_gtid. @ sql/rpl_rli.cc On Relay_log_info::wait_for_gtid_set() also checks that wait set does not intersect with owned_gtids set. 	8c537690f015be39fc1ad2ac5f97e063842c4eb2
----------------------------
Merge: 50406af 15602ed Bug#11753779: MAX_CONNECT_ERRORS WORKS ONLY WHEN 1ST INC_HOST_ERRORS() IS CALLED. Description: Null merge from mysql-5.6 to mysql-trunk 	b852f2c0b205814d151126a4718c912ab8dee49e
----------------------------
Merge: b8cebd7 42eac7d Bug#11753779: MAX_CONNECT_ERRORS WORKS ONLY WHEN 1ST INC_HOST_ERRORS() IS CALLED. Description: Null merge from mysql-5.5 to mysql-5.6. 	15602ed3f3867f5dad9a22fdd4b60e618517f4b0
----------------------------
Merge: 3b48d80 9f07278 Bug#11753779: MAX_CONNECT_ERRORS WORKS ONLY WHEN 1ST INC_HOST_ERRORS() IS CALLED. Description : Merge from MySQL-5.1 to MySQL-5.5 	42eac7dfc1d95ec14fa80263ee6157759d495088
----------------------------
Bug#11753779: MAX_CONNECT_ERRORS WORKS ONLY WHEN 1ST INC_HOST_ERRORS() IS CALLED. Issue       : Sequence of calling inc_host_errors() and reset_host_errors() required some changes in order to maintain correct connection error count. Solution    : Call to reset_host_errors() is shifted to a location after which no calls to inc_host_errors() are made. 	9f0727804c34d792c6fb7ee40941a5ab2b57821f
----------------------------
Bug#14633008 MISLEADING ERROR WHEN TRYING TO UPDATE NON-EXISTING P_S TABLES Before this change, INSERT / UPDATE / DELETE / LOCK TABLES performed on unknown performance_schema tables would fail with errors such as ER_TABLEACCESS_DENIED_ERROR. For users with the proper grants, the error message for similar cases with non performance_schema tables is simply ER_NO_SUCH_TABLE. While this behavior is correct (the performance_schema has some extra security privileges checks that are built in), it is also confusing. This fix relaxes the built in privilege checks for the performance schema, so that DML on tables that do not exist simply fails with ER_NO_SUCH_TABLE. This is mostly cosmetic, to improve ease of use. 	fc5f743ba266728cdb87268b884f917a3212cb02
----------------------------
Additional fix for bug#14577463 CONCURRENT DDL & DML LOAD MAY CRASH MYSQLD The previous fix for this bug was not sufficient, so the bug was reopened. This fix takes care of another problem related to ref-counting and freeing of the NDB_SHARE object: If a NDB_SHARE becomes 'trailing' (It has state==NSS_DROPPED, but there are still other active operations which are using the 'to be dropped NDB_SHARE') then the NDB_SHARE will both be in the 'ndbcluster_dropped_tables' and 'ndbcluster_open_tables'. ndbcluster_real_free_share() must therefore always my_hash_delete() a 'NSS_DROPPED share' from both 'dropped' and 'open' tables before it can destruct the NDB_SHARE object. This fix is relevant for Cluster 7.2 --> only as there are no 'dropped table' hash in 7.0. 	592716f3573021622edae283708f709a74c7d3fb
----------------------------
Bug#14620839 - THREAD CACHE LEAKS DEBUG INFO ACCROSS SESSIONS Before this fix, tests such as performance_schema.hostcache* would pass without the thread cache, and fail with the thread cache. These tests rely on the SET GLOBAL DEBUG facility. The thread cache, when reusing an existing thread to run a new session, polluted the new session debug settings with the old session settings, causing the failures. The fix is to reset the debugs settings to a clean initial state, in the thread cache code, when parking a thread in the cache. 	a5f21e573a13f211b9bcc46aba5e6d1999953158
----------------------------
Bug#14117641 SECONDARY INDEX ALREADY CHANGED AFTER ONLINE CREATE INDEX This is a second try. In the DEBUG_SYNC instrumentation, work around Bug#14626800 ASSERTION FAILURE IN DEBUG_SYNC(). This bug should only affect very small tables. The bug scenario is as follows. 1. A DML thread has modified the clustered index but not yet all secondary indexes. 2. CREATE INDEX picks up the changes directly from the clustered index, and completes building the secondary index. 3. The DML thread resumes and finds out that the index that was created already contains the change. Above, DML thread means a thread that is executing an INSERT, UPDATE or DELETE statement. A similar bug is not possible in ROLLBACK or purge, because all of row_undo_ins(), row_undo_mod(), row_purge_del_mark() will modify all secondary indexes before modifying the clustered index. This means that the changes would be covered by row_log_online_op() and the idempotent row_log_apply(). row_ins_sec_index_entry_by_modify(): If the existing record is not delete-marked, assert that it is a full match of the entry that is to be inserted (due to INSERT or UPDATE), and assert that the index was being created online. Then, return DB_SUCCESS, as the record was already inserted. row_upd_sec_index_entry(): If the old index record that is to be delete-marked is not found, do not complain if the index was being created online. This code is being executed for both UPDATE and DELETE. rb:1294 approved by Inaam Rana 	7665fb0038facbfe28f7f6db75f4fb9343735dbb
----------------------------
WL#6445 - OS_AIO_SYNC is a valid mode when reading in data. Map it to the os_aio_read_array when srv_read_only_mode is set. 	a247aee5abc578a99d09e193b2592b74c9b4113c
----------------------------
"Bug #14472648 	CONFIGURED DISKCHECKPOINTSPEED EXCEEDED WHEN BACKUPMAXWRITESIZE SET TO HIGH VALU The DiskCheckpointSpeed mechanism is implemented using 100 millisecond periods, which each have 1/10th of the configured quota available. A period is allowed to overflow its quota, with the excess being taken from the next period's quota. However, this overflow was limited to the next period, after that, any further overflow was ignored. In cases where large overflows were possible, relative to the 1/10 DiskCheckPointSpeed quota, this could result in excessive disk writing, and CPU overhead as a result. Setting a larger-than standard MaxBackupWriteSize is the primary means of causing larger-than 2* quota overflows and triggering this bug. This bug is fixed by using as many subsequent periods as necessary to 'pay off' the quota overflow. This will result in the data node staying within its quota. This fix may result in slower LCP in some systems, and reduced CPU usage during LCP. A testcase, and an internal DiskCheckPointSpeed verification mechanism are added to avoid future regressions. "	9d9be9ff38e5256652e1046b436fbc735376aa03
----------------------------
BUG#12889121 MYSQLBINLOG CREATES INVALID SQL WHEN USING --VERBOSE OPTION PROBLEM: ========= When using the mysqlbinlog program with --verbose option invalid SQL can be produced when comments appear inside BINLOG '...' statements. One way this can happen is when a function updates data and this function call is used to do a INSERT ... SELECT statement. For example: If a statement consists of two events and the binlog_format is row based, then the output generated by mysqlbinlog tool looks like: ########################################################## #some header information related to this statement BINLOG ' RAW BINARY DATA for the event1 ### verbose section for the event1 RAW BINARY DATA for the events2 ### verbose section for the event2 '/*!*/; ### verbose section for the complete statement ######################################################### If you take this output and try to execute on mysql client, it fails with syntax error because you have invalid characters in between the quotes(' '). ANALYSIS: ========= The above mentioned problem occurs only if the binlog format is set to row or mixed type(In mixed type, if the statement is unsafe, we write events in row format). While printing the log event for the statement(Row format) the current existing code is nicely written to take care of dividing the header part of the log and body part of it. Code has two caches to write the log: IO_CACHE head_cache; IO_CACHE body_cache; All the header information will be written to head_cache and all the body information will go to body_cache. The problem comes when --verbose is used. The verbose statements are also getting appended to body_cache. If a statement is having multiple events, these verbose statements are coming in between causing the issue. Fix: ==== Introduce one more cache for the verbose section(footer_cache). Write all the verbose statements in this new cache and at the end of the completion after copying head and body cache to the file, we can append. Disadvantage: We are adding one more fwrite call After the fix the output looks like: ====================================== ######################################################### #some header information related to this statement BINLOG ' RAW BINARY DATA for the event1 RAW BINARY DATA for the event2 '/*!*/; ### verbose section for the event1 ### verbose section for the event2 ### verbose section for the complete statement ######################################################### 	f2ae91df0fbb121878216f59323b46a0600d7cb2
----------------------------
Fix for Bug#14525521 RECEIVER-THREAD MAY BUSY-WAIT FOR DATA TO BE RECEIVED This patch fixes two related problems wrt. how 'NodeBitmask m_has_data_transporters' is maintained: 1) If the remaining part of the already received data inside the transporter was insufficient to reconstruct the last signal, we should not count this node as 'm_has_data_transporters'. This will force us to wait for more data to be recv'ed before we can continue processing data from this transporter, and thus break the busy-loop. 2) As described in the bug report, 'm_has_data_transporters' mix together nodes having data to be recv'ed from the socket into the local transporter buffers, and those nodes having 'leftover' data in the tranporter buffers which has to be unpacked. 'NodeBitmask m_recv_transporters' has been introduced to keep track of those nodes which pollReceive() detected to have data to be recv'ed. After being recv'ed, 'm_has_data_transporters' will still represent those nodes with data to be unpacked. This patch also cleans up and simplify the handling of 'blocked' transporters as a side effect of the above changes: As the 'has_recv' and 'has_data' state of the transporters now are represented on seperate bitmask, we no longer need to save blocked transporters with 'has_data' into 'm_blocked_with_data. Instead we allow any blocked transporters which already 'has_data' (Received data buffered in tranporters) to drain these buffers. However, the blocked transporters are excluded from receiving any more data on these transportere. When unblocked, the next pollReceive() will detect the available data and allow them to be recv'ed. 	489656d7ddbc31f507dad9e111590ea7a8c4bb95
----------------------------
Fix for bug#14524939 NDBMTD CRASH AT STARTUP IF CONFIGURED WITH MULTIPLE RECEIVER THREADS Fix ensures that idx[i] is initialized even if we break the init-loop 'if (!recvdata.m_transporters.get(node_id))' Tescase is running the ndb_basic.test with a config specifying multiple receiver threads. 	cdd371f571b6057df28c375d7bfd5c33861d02dc
----------------------------
WL#6445 - Fix some #define comments. If srv_read_only_mode is set then force all segment requests to map to the read array, in windows mode. 	346f5342b3198437adaa3480040367bbb5339ec9
----------------------------
Bug#14596888 MAX_SORT_LENGTH SHOULD BE IGNORED FOR INT/FLOAT/DECIMAL/TIME DATA TYPES Ignore variables.max_sort_length settings for int/float/decimal/time columns. 	b3e0128687709af010dbb5be6815ec996314ce5b
----------------------------
ndb - remove unused functions in LocalConfig 	cd4a2ed1ebd2ce5e4b6e0aa60316465f4aed3835
----------------------------
Move require udebug from test_config to adapter_config Annotations: save mynode.constructor and mynode.mapping Add a bit of debugging to DBTableHandler.js Change test framework to use constructor instead of prototype for mapping Explicitly map all fields of t_basic to columns Change UserConfig.js to require constructor instead of prototype Add --detail flag to Driver for detail logging 	5c7f63b1c5f67af1926ec4735ec5a52e01a8f087
----------------------------
"Backport this change from MySQL 5.5 to 5.1: Bug #14181049: MYSQL_INSTALL_DB.PL CREATES EMPTY SYSTEM TABLES FOR MYSQL The script is different from what's used on unixes. It was not playing the table insertion script (mysql_system_tables_data.sql), although it was checking for the presence of this script. Fixed by re-enabling the lookup for this file and replaying it at bootstrap time. Note that on the Unixes ""SELECT @@hostname"" does return a fully qualified name, whereas on Windows it returns only a hostname. So by default we're filtering records in the mysql.user table until we ensure this is fixed. The change was coded in 5.5 by Georgi Kodinov <Georgi.Kodinov@Oracle.com> "	c0a1b2c8915556be516b4bfea30e01fa792c7943
----------------------------
WL#6403: Add idempotent mode to mysqlbinlog -- SET SESSION RBR_EXEC_MODE=IDEMPOTENT will be printed only once in the output of the mysqlbinlog --idempotent --added test rbr_exec_mode_basic.test --fixed few broken test cases. 	75b8ee973bd4cd96240aa5dd7cbe081ca3d4917f
----------------------------
Bug#14550945 - MTS RECOVERY CRASHES AFTER THE SERVER RESTART WHEN REPOSITORY TYPE WAS CHANGED Bug#14578740 - MTS WITH --RELAY_LOG_INFO_REPOSITORY='FILE' REDUCES WORKERS TO SCREW-UP Bug#14550905 - RECOVERY TABLES FOR MTS DON'T REFLECT CHANGES TO NUMBER OF WORKERS (Post-itch-and-review changes) The Bug#14550945 reason is that the replication part of the server bootstrap erroneously changed Relay-log info repository type and do not the same to the MTS Worker info. That made two tightly related piece of info be logically split which led to a crash when in the following START SLAVE was issued. Fixed with conducting not letting to migration whenever Worker repositories type is found to be different than the requested through the new --relay_log_info_repository value. whether to migrate to another repository type. Migration is denied and a warning is issued that the value of --relay_log_info_repository option is altered by the server. As an extra grace, this patch improves error reporting out of init_slave() failing branches. Also a former policy of tolerating error checking of the source or the destination repositories is changed to conservative. If either of the two found unusable at checking run in init_slave(), the runtime repositories won't be initialized at all to prevent running replication slave role on that server. Bug#14578740 fixes aim at refining and simplifying logics of the file type repository locating and manipulating. Fixed with providing necessary context to compose a correct file name which existence is reliably checked etc. Bug#14550905 refines post-gaps filling Worker repositories cleanup when extra Workers info from the last slave session finally becomes redundant. It is deleted as the extra table records so as extra worker files, unambiguously now thanks to Bug#14578740 fixes. 	fddcbed4cd74e180340e96e2ad98c0a3fc3b58d2
----------------------------
WL#6403:  Add idempotent mode to mysqlbinlog -Added idempotent mode to mysqlbinlog --Extended the idempotent mode of operation available for slaves threads to the normal user threads. --Added new session variable RBR_EXEC_MODE --Added --idempotent(-i) option to mysqlbinlog to notify the server to use idempotent mode. 	ff42c1315dda78d3536668858508c57867a5f8a9
----------------------------
Bug#14593123 CONFIGURE.PL WITH CMAKE2.8 BREAKS THE BUILD Ignore --with-client-ldflags it's not supported by the cmake scripts anyways. Ignore --with-mysqld-ldflags it's only used with --with-mysqld-ldflags=-static and that doesn't work. 	e17c7b2b0b84f114fa3b5650612f0e7ad77099bd
----------------------------
This commit will (again hopefully) fix the errors that prevent the ndb_big suite from running in this branch. Obsolete engine-condition-pushdown configuration variable was replaced by set optimizer_switch = 'engine_condition_pushdown=on' 	3d5e6bfb1ae3c54baf9edcbd038b399e5076a5b2
----------------------------
This commit will (hopefully) fix the errors that prevent the ndb_big test suite from running in this branch: * Obsolete engine-condition-pushdown configuration variable was removed. * Obsolete ---system MTR command replaced with --exec. 	6214eb330dd8e823b977ab0f474ca8098768d7c2
----------------------------
Merge: 5c6e591 ce2e176 Merge from mysql-5.6 to mysql-trunk for Bug#14529744 - NONDETERMINISM IN INNODB DEBUG_SYNC TESTS. 	aef0ba00a0d26a04aa7b5af1fecbff3ead074d40
----------------------------
Bug#14529744 - NONDETERMINISM IN INNODB DEBUG_SYNC TESTS rb://1263 Approved b Marko Some InnoDB test cases that use DEBUG_SYNC are skipped during test execution, apparently because some DEBUG_SYNC tests are not properly cleaning up after themselves. First, we found all nondeterminism test cases by review all tests that use DEBUG_SYNC and test each of them like this: ./mtr --mem --repeat=100 --parallel=4 test_name{,,,}. Most of the problem case missed SET DEBUG_SYNC = 'RESET' to clean up DEBUG SYNC points, this causes problem. For fixing it, we added all missed SET DEBUG_SYNC = 'RESET'. Also, we modified these cases according to http://dev.mysql.com/doc/internals/en/test-synchronization.html and https://mediawiki.us.oracle.com/mysql/index.php/How_to_Create_Good_Tests. 	ce2e1765b7bbd5399ebb3cd823dce535d346e079
----------------------------
wl#6443 : Deprecate features in mysql-5.6-rc - SrvGen Description : Backporting from mysql-trunk to mysql-5.6. Introduced deprecation warnings for time_format, date_format, datetime_format and max_tmp_tables. Introduced deprecation warnings for --plugin-xyz options. Removed host table creation and introduced deprecation warning in mysql_upgrade for a non-empty host table. 	44bdcd3df7144dd40a18eb0ba9cab9206fbecab6
----------------------------
Bug#14569746 Improved the robustness of table performance_schema.session_connect_connect_attrs. Improved test coverage See the bug report for more details. 	cc9752555218723df8763b7b80d424ae6a8a8f69
----------------------------
"BUG#11758505: MISSING RELAY LOG FROM INDEX FILE MESSAGE ON STARTUP NOT EXPLICIT ENOUGH Problem: The error message thrown when a relay-log file is missing from the relay_log index file, is not explicit enough to inform the user that the relay-log file is not found in the index file. Old error mesaage: ""Could not find target log during relay log initialization"" Solution: We changed the error message to make sure the correct information is conveyed to the user. New error message: ""Could not find target log file mentioned in relay log info in the index file '<index_file_name>' during relay log initialization."" "	9ed9b10e38ff954309fa364b473d70c2b779f330
----------------------------
Bug#14563084 Improved the robustness of table performance_schema.session_connect_attrs. See the bug report for more details. 	b2a164dcb268536d4e1d50138b00d95cdab0c51d
----------------------------
wl#6443 : Deprecate features in mysql-5.6-rc - SrvGen Description : Introduced deprecation warnings for time_format, date_format, datetime_format and max_tmp_tables. Inotroduced deprecation warnings for --plugin-xyz options. Removed host table creation and introduced deprecation warning in mysql_upgrade for a non-empty host table. 	6e77a3563e6824900bbbf1b8302668285dab9671
----------------------------
WL#6445 - Rename --innodb-read-only-mode to --innodb-read-only, add sys_vars test for the new config variable. 	b81d188191e5ec2d1cdfcce05e61069a84418d8a
----------------------------
WL#6445 - Fix whitespace. Change checks for srv_read_only_mode to debug assertions in fts0opt.cc. 	cbb9deee3085d592b95a23120d1a7991f32e38aa
----------------------------
WL#6445 - Test Linux AIO read-only availability on ib_logfile0 when srv_read_only_mode is set. 	7a51d782a3aa2c8fd8c1601edcd32471b4ee49c4
----------------------------
Bug#14494275 HEAP CORRUPTION IN DECIMAL2BIN WITH LOW MAX_SORT_LENGTH The problem was that if the user sets a very small max_sort_length this value was honored by the function sortlength() but later ignored by make_sortkey(). This can result in buffer overrun. Solution one: always stay within the bounds of max_sort_length as specified by the user. This is what we have always done, even if the documentation says it is only done for strings/blobs. Sorting results may be a bit strange, since we use only the first few bytes of int/float/decimal/time. 	2e244455fb84f88ff49089e5c6db53cb18283677
----------------------------
WL#6445 - Don't dump the buffer pool if srv_read_only_mode is set. Code cleanup. 	08cfc96c088a70d58b008805a06414f6e594714b
----------------------------
WL#6445 - Map ibuf and log page read requests to the READ IO threads if InnoDB is configured to run in read-only mode. 	de3846ba6d9efa0bc89ad75d7a34cc84fb854713
----------------------------
BUG#14509140 - COM_BINLOG_DUMP_GTID MISSES INPUT VALIDATION Previous fix did not address all problems. This fix: - protects against name_size being bigger than the 'name' buffer (could happen if only the packet contained that many bytes) - protects the argument of CHECK_PACKET_SIZE from overflow by keeping a count of the number of bytes todo. - simplifies the code by combining the check, the read, and the pointer increment into a single macro call - prevents test case from being run in embedded mode (can't connect with a client in embedded mode) 	7721cc68ba0c9525639148834c2d3fda82a22649
----------------------------
Fix Bug#14525151 DATAFILES TOUCHED BY 5.6 ARE NOT READABLE BY 5.5 Revert parts of sergey.vojtovich@oracle.com-20120529064458-va87z5ccpanrv3xi in order to restore the default value of innodb_checksum_algorithm to 'innodb'. 	e8d30794fba978a00ff3c0eadfb2da085602633c
----------------------------
Bug#14348858: EXTRA ROWS IN RESULT WHEN SQL_BUFFER_RESULT IS USED WITH SUBQUERY AND MYISAM The join_init_read_record have to be used as a function for reading the first record when a table needs to be sorted. The code that sets this function was outside of the add_sorting_to_table function. This led to missing initialization in the case when the first non-const table needs to be sorted. In its turn this resulted in missing sorting step and filesort condition not being applied. Now add_sorting_to_table function also sets first record reading function appropriately. 	1232569b1563f5843debfbf9bfa55f405a672a59
----------------------------
Bug #14506073: mysql_secure_installation breaks with old_passwords=2 Fixed the mysql_secure_installation shell and perl scripts to do separate updates of the different password types based on the value of the mysql.user.plugin column, so they can set the old_passwords value properly while calculating the password needed. 	2a30436a647ce89f0a1a9194b7f923b1de829f1c
----------------------------
BUG#14509140 - COM_BINLOG_DUMP_GTID MISSES INPUT VALIDATION Problem: COM_BINLOG_DUMP and COM_BINLOG_DUMP_GTID read from 'packet' without first checking the size of 'packet'. Fix: Check that the data to be read fits in the packet. 	0c7bbf6427d322df7a4dd941eec4977c3781c593
----------------------------
Bug #13548161: MYSQLD_SAFE IMPROVEMENTS FOR 5.5 ALLWAYS SETS PLUGIN_DIR TO DEFAULT IGNOR The test in mysqld_safe for the presence of the --plugin-dir and assigning a default value to it were performed before the actual argument parsing. This is wrong, as PLUGIN_DIR mysqld_safe code also uses MY_BASEDIR_VERSION to look for version specific plugin directory if present. Fixed by moving the PLUGIN_DIR logic after the parse_arguments() call. 	92d2f60e1265c6c0c71d0eef90dde919e4981ba7
----------------------------
part of WL#6347 InnoDB: Index level compression stats Run innodb_cmp_per_index_enabled_basic.test only on 16k page sizes since we create a table with an option KEY_BLOCK_SIZE=8k which only works with 16k or 8k page sizes. There is no way to run the test on 8k or 16k pages, but not on 4k, thus we run it only on 16k pages. 	774ccd0d39ab01c3c9cbeb31a61efe471db25088
----------------------------
WL#6445 - Change fprintf() to ib_logf(). If srv_read_ony_mode is set then all IO is handled by the background read IO threads and disable the creation of the IBUF, LOG and WRITER threads. Disable persistent statistics calculation if srv_read_only_mode in ha_innodb.cc. Move printing of the CRC32 setting to srv0start.cc. Change scope to GLOBAL for ut_crc32_sse2_enabled in ut0crc32.cc. 	78e5341c7cb4f3f6826cfa56ef3e1a13bfd72c67
----------------------------
WL#6445 - Add check for srv_read_only_mode. 	7746f1b14ff843601363ca79f008753e904b1a87
----------------------------
WL#6445 - Remove bogus paramaters to callback function.  Don't initiate rollback of recovered transactions on start if srv_read_only_mode is set. 	ea7c0695f84ba65a37c6f0224b5c143d296f6509
----------------------------
Bug#13897025 - SLAVE_PARALLEL_WORKERS DEGRADES REPLICATION PERFORMANCE The reason of degradation appeared to be two-fold. The load of the test report contained FK-related databases with rather aggressive load to them forcing MTS frequently switching to sequential execution which is somewhat expensive. The other reason turns out to be a mistake in the source code in resetting a multiplier to the Coordinator nap. The multiplier is computed as a number of excessive events counting from a certain overrun level of the Worker queue. It was not reset to zero that made the multiplier grow over time which manifested in the observed slave execution slowdown. Fixed with correcting the nap factor computing. An assert is deployed to prove the correct resetting in the case of one Worker. In order to hunt over possible performance reports more statistics is made to printed into error log with --log-warnings=2. 	188ecb84e75d1a9dbb85320ff3fd3180f6e4e8e5
----------------------------
"Bug #14181049: MYSQL_INSTALL_DB.PL CREATES EMPTY SYSTEM TABLES FOR MYSQL The script is different from what's used on unixes. It was not playing the table insertion script (mysql_system_tables_data.sql), although it was checking for the presence of this script. Fixed by re-enabling the lookup for this file and replaying it at bootstrap time. Note that on the Unixes ""SELECT @@hostname"" does return a fully qualified name, whereas on Windows it returns only a hostname. So by default we're filtering records in the mysql.user table until we ensure this is fixed. "	9c227f4f920b41fb820f5e309551f0faaad7f284
----------------------------
Cleanup for Bug#14219624 - ALTER TABLE...ADD COL AUTO_INCREMENT DOES NOT OBEY AUTO_INCREMENT_OFFSET There was a slight error in the original fix, which lead to an assertion failure while testing rb:1230. Sunny proposed this fix. 	0dd564e7bcd1d6a7a980dfcd89255c834c3765fe
----------------------------
Bug#14363985: MYSQLD CRASHED WHEN DISABL AND ENABLE AUDI PLUGIN WHEN DDL OPERATION HAPPENING PROBLEM: While unloading the plugin, state is not checked before it is to be reaped. This can lead to simultaneous free of plugin memory by more than one thread. Multiple deallocation leads to server crash. In the present bug two threads deallocate the alog_log plugin. SOLUTION: A check is added to ensure that only one thread is unloading the plugin. NOTE: No mtr test is added as it requires multiple threads to access critical section. debug_sync cannot be used in the current senario because we dont have access to thread pointer in some of the plugin functions. IMHO no test case in the current time frame. 	b4e6a2c6d6bef33a53e272557ae4b6687b8656c8
----------------------------
Bug#14498355: DEPRECATION WARNINGS SHOULD NOT CONTAIN MYSQL VERSION NUMBERS If a system variable was declared as deprecated without mention of an alternative, the message would look funny, e.g. for @@delayed_insert_limit: Warning 1287 '@@delayed_insert_limit' is deprecated and will be removed in MySQL . The message was meant to display the version number, but it's not possible to give one when declaring a system variable. The fix does two things: 1) The definition of the message ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT is changed so that it does not display a version number. I.e. in English the message now reads: Warning 1287 The syntax '@@delayed_insert_limit' is deprecated and will be removed in a future version. 2) The message ER_WARN_DEPRECATED_SYNTAX_WITH_VER is discontinued in favor of ER_WARN_DEPRECATED_SYNTAX for system variables. This change was already done in versions 5.6 and above as part of wl#5265. This part is simply back-ported from the worklog. 	905e458433b826bee4c73ba49227e44050e7ec36
----------------------------
Patch for Bug#14483430 (RECONSIDER MYSQL 5.6.6 BIND-ADDRESS BEHAVIOUR WHEN CONFIGURED AS DEFAULT *). The bug was introduced by WL#6301 (Change default value for the 'bind-address' option). The user visible problem was that the server didn't start with the default value of bind-address, which is '*'. The star means that the server should choose '::' or '0.0.0.0' depending on whether IPv6 is available on the box or not. The IPv6 detection was implemented by calling getaddrinfo() for the IPv6-address. It turned out, it is not enough -- getaddrinfo() might successfully return, but later OS failed to create an IPv6-socket. This problem is platform dependent (reproduced on CentOS 5.2). The fix is to make the check more strict -- try to create a dummy IPv6-socket after getaddrinfo() succeeds. No test case for the bug since it is platform specific. 	da66e3850d0b186a3c86e06daa4bc3208ad5cc62
----------------------------
Bug#14364558 ASSERT `TABLE_LIST->PRELOCKING_PLACEHOLDER==FALSE' FAILED IN CHECK_LOCK_AND_ST Problem: -------- lock_tables() is supposed to invoke check_lock_and_start_stmt() for TABLE_LIST which are directly used by top level statement. TABLE_LIST->prelocking_placeholder is set only for TABLE_LIST which are used indirectly by stored programs invoked by top level statement. Hence check_lock_and_start_stmt() should have TABLE_LIST->prelocking_placeholder==false always, but it is observed that this assert fails. The failure is found during RQG test rqg_signal_resignal. Analysis: --------- open_tables() invokes open_and_process_routines() where it finds all the TABLE_LIST that belong to the routine and adds it to thd->lex->query_tables. During this process if the open_and_process_routines() fail for some reason, we are supposed to chop-off all the TABLE_LIST found during calls to open_and_process_routines(). But, in practice this is not happening. thd->lex->query_tables_own_last is supposed to point to a node in thd->lex->query_tables, which would be a first TABLE_LIST used indirectly by stored programs invoked by top level statement. This is found to be not-set correctly when we plan to chop-off TABLE_LIST's, when open_and_process_routines() failed. close_tables_for_reopen() does chop-off all the TABLE_LIST added after thd->lex->query_table_own_last. This is invoked upon error in open_and_process_routines(). This call would not work as expected as thd->lex->query_tables_own_last is not set, or is not set to correctly. Further, when open_tables() restarts the process of finding TABLE_LIST belonging to stored programs, and as the thd->lex->query_tables_own_last points to in-correct node, there is possibility of new iteration setting the thd->lex->query_tables_own_last past some old nodes that belong to stored programs, added earlier and not removed. Later when open_tables() completes, lock_tables() ends up invoking check_lock_and_start_stmt() for TABLE_LIST which belong to stored programs, which is not expected behavior and hence we hit the assert TABLE_LIST->prelocking_placeholder==false. Due to above behavior, if a user application tries to execute a SQL statement which invokes some stored function and if the lock grant on stored function fails due to a deadlock, then mysqld crashes. Fix: ---- open_tables() remembers save_query_tables_last which points to thd-lex->query_tables_last before calls to open_and_process_routines(). If there is no known thd->lex->query_tables_own_last set, we are now setting thd->lex->query_tables_own_last to save_query_tables_last. This will make sure that the call to close_tables_for_reopen() will chop-off the list correctly, in other words we now remove all the nodes added to thd->lex->query_tables, by previous calls to open_and_process_routines(). Further, it is found that the problem exists starting from 5.5, due to a code refactoring effort related to open_tables(). Hence, the fix will be pushed in 5.5, 5.6 and trunk. 	bb8d551f3ab6ab6903e91e8b1fffbc9e8b3d97b1
----------------------------
WL#6344 Make compression level and logging of compressed pages configurable Backport from trunk:inaam.rana@oracle.com-20120726094441-lrqs0hi6dy629713 The following test cases which were part of the original push to trunk but were not directly related to the WL are not backported in this push and will be pushed separately. mysql-test/suite/innodb/t/innodb_crash_recov_log_compressed_after_commit_0.test mysql-test/suite/innodb/t/innodb_crash_recov_log_compressed_after_commit_1.test mysql-test/suite/innodb/t/innodb_crash_recov_log_compressed_before_commit_0.test mysql-test/suite/innodb/t/innodb_crash_recov_log_compressed_before_commit_1.test 	72d656acdf082d5ead1cc1be84f2fd68ab6a65a9
----------------------------
WL#6445 - Disable the writer/ibuf/sync threads if srv_read_only_mode is set. 	68ebb5fd14c6945d9bf0f372864175e6bd03dd13
----------------------------
BUG#14259744 - RPL.RPL_PACKET TEST FAILS ON PB2 AFTER WL#5924 CHANGES Problem : The basic reason for the failure was the change in the connection attributes introduced as a part of WL#5924. The lenght of packet with information that was sent over when a client's connected to the server was changed as a part of this worklog. But the packet information that is sent across from the client to the server is of greater length in case of windows compared to the information sent in case of linux which was caused due to the WL5924 implementation. This is because apart from the all the common information was added on the client connect string (WL5924) we also have few extra parameters specifically for windows platform : Only on windows: _command_line : the process command line _thread : the calling thread id from GetCurrentThreadId() In this test the value of max_allowed_packet is reduced when the server starts using the option passed in the .opt file. So when mysqltest tries to connect to the server, on windows the client information that is sent exceeds the max_allowed_packet of the server which causes the failure. Fix : The problem is fixed by appropriately modifying the max_allowed_packet of two servers and modifying the test accordingly. 	d1c1cc9c1f74360452c77e754fdadb136537b68b
----------------------------
Bug#14509077 INNODB.INNODB_BUG13867871 TEST FAILURE The test was not deterministic. Ensure with wait_condition.inc that all DEBUG_SYNC points are actually being reached. Additionally, the nondeterminism of the test revealed one bug: ha_innobase::commit_inplace_alter_table(): X-lock the table before committing the changes. In this way, the table definition cannot be changed while there exist transactions that hold locks on the table, for example, due to FOREIGN KEY checks that are not covered by MySQL meta-data locks. rb:1235 approved by Jimmy Yang 	49dcd9cc3dc8bff956d382dc24074b12c470293a
----------------------------
Bug#11754304 INNODB CALLS FSYNC FOR WRITES WITH INNODB_FLUSH_METHOD=O_DIRECT rb://1226 approved by: Sunny Bains Add a new possible value O_DIRECT_NO_FSYNC to innodb_flush_method. This value will implies that the user wants to use O_DIRECT with no fsync() which is different from existing O_DIRECT which means use O_DIRECT but also call fsync() to cover unknown/unexpected behaviour of FS. 	970a6c3fa83b38f6ca4e279fa4649dda78a25505
----------------------------
Bug #13389196:BUILD FAILS IF P_S IS DISABLED WITH: -DWITH_PERFSCHEMA_STORAGE_ENGINE:BOOL=OFF Problem: Build failure while building MySQL-5.6 when performance schema is disabled.(i.e. compiling using the option -DWITH_PERFSCHEMA_STORAGE_ENGINE=OFF). Background: A few misplaced comma(',') in the the conditionally included code has caused this problem. Fix: Changed the comma positions so that the conditionally included code compiles properly. 	3fb4c192a4a0bd2af75d5718aff1945b648992a2
----------------------------
WL#6044 - Refactor InnoDB mutex code for. Prepare to make into a standalone class. 	d1586f2074369ec29104f46242e397f7ab798662
----------------------------
WL#6445 - HA_ERR_TABLE_READ_ONLY should have been HA_ERR_TABLE_READONLY. 	92ee04485e25dd71131b6c4265d4d69eaf175435
----------------------------
WL#6455 - Repace HA_ERR_READ_ONLY_TRANSACTION with HA_ERR_TABLE_READ_ONLY. 	5b2dc8c4ea65f3ae7e77d9403e7939d46a2e3220
----------------------------
WL#6445 - Return HA_ERR_TABLE_READONLY instead of HA_ERR_READ_ONLY_TRANSACTION. 	fdd9b68ff7723e632bf35fcede603b48993cfd0c
----------------------------
Fix broken build for -DWITHOUT_PERFSCHEMA_STORAGE_ENGINE=1 	990d90846873b3e36b8581538b85c030e1b88e6f
----------------------------
Bug #14503692: -SSL-CRL AND --SSL-CRLPATH HAVE A WRONG OPTION ID Fixed the ids of the command line options to use the correct option ids. 	a2b16770da6a888753d04483413c27cf8288e333
----------------------------
Bug#14471011 THREADS_RUNNING VARIABLE STATUS ALWAYS DISPLAYS ZERO WITH ACTIVE THREADS RUNNING Analysis: Local variable num_thread_running in inc_thread_running() and dec_thread_running() defined in mysqld.h hides global status variable with same name Fix: Change local variable name num_thread_running to num_threads 	9ce7ec627b012fbfc3ddca3684d97b7649f2b995
----------------------------
"Fix for Bug#14489398 CLUSTER BACKUP FAILS WHEN USING NDBMTD AND CONFIGURED MULTIPLE LQHS Fix regression introduced by push: 3923 Ole John Aske	2012-05-23 This is the improved 'save_mem.patch' from Mikael R. patch set That push tried to save memory used for interthread communication buffers by not allocated buffers between those threads which was assumed to not communicate. LDM <-> LDM communication was one of the places where such buffers where removed. However, the BACKUP-block is part of the LDM thread, and during backup the first BACKUP instance in LDM thread#1 will act as client/coordinator. Thus it *will* communicate with other LDM threads! This fix introduce special handling of LDM thread#1, and 'opens up' communication between that thread and other LDM threads. Instead of writing a completely new testcase to cover this fix, I have introduced 'ndb_restore_misc.cnf' which overrides 'MaxNoOfExecutionThreads=4' - Such that at least one of the existing backup-restore tests are run with multiple LDM threads. If the BACKUP is later made full multithreaded, the changes to mt.cpp in this patch should be reverted. "	59058bd4806bfb114e85ca6373500d8dcabdd326
----------------------------
"Bug#13596613:SHOW SLAVE STATUS GIVES WRONG OUTPUT WITH MASTER-MASTER AND USING SET USE Problem: ======= In a master-master set-up, a master can show a wrong 'SHOW SLAVE STATUS' output. Requirements: - master-master - log_slave_updates This is caused when using SET user-variables and then using it to perform writes. From then on the master that performed the insert will have a SHOW SLAVE STATUS that is wrong and it will never get updated until a write happens on the other master. On""Master A"" the ""exec_master_log_pos"" is not getting updated. Analysis: ======== Slave receives a ""User_var"" event from the master and after applying the event, when ""log_slave_updates"" option is enabled the slave tries to write this applied event into its own binary log. At the time of writing this event the slave should use the ""originating server-id"". But in the above case the sever always logs the  ""user var events"" by using its global server-id. Due to this in a ""master-master"" replication when the event comes back to the originating server the ""User_var_event"" doesn't get skipped. ""User_var_events"" are context based events and they always follow with a query event which marks their end of group. Due to the above mentioned problem with ""User_var_event"" logging the ""User_var_event"" never gets skipped where as its corresponding ""query_event"" gets skipped. Hence the ""User_var"" event always waits for the next ""query event"" and the ""Exec_master_log_position"" does not get updated properly. Fix: === `MYSQL_BIN_LOG::write' function is used to write events into binary log. Within this function a new object for ""User_var_log_event"" is created and this new object is used to write the ""User_var"" event in the binlog. ""User var"" event is inherited from ""Log_event"". This ""Log_event"" has different overloaded constructors. When a ""THD"" object is present ""Log_event(thd,...)"" constructor should be used to initialise the objects and in the absence of a valid ""THD"" object ""Log_event()"" minimal constructor should be used. In the above mentioned problem always default minimal constructor was used which is incorrect. This minimal constructor is replaced with ""Log_event(thd,...)"". "	c6d8569d4116f7d9e78e4e48af26337f2b38208f
----------------------------
Bug#14175020 INCONSISTENT NAME FOR INNODB_MAX_IO_CAPACITY OPTION rb://1185 approved by: Marko Makela Rename innodb_max_io_capacity to innodb_io_capacity_max so that it is alphabetically closer to innodb_io_capacity. Makes for better documentation. 	1cc335ef16d39ec9b4f94e5341dec30e0c96e599
----------------------------
BUG#11748012 - 34804: AFTER RE-START OF THE SCHEDULER DISABLED EVENTS ARE NOT DROPPED FROM DISK BACKGROUND: STEP 1: If the event_scheduler is ON, and we create an event, event scheduler checks for events present in the event queue and starts executing. If the event has not been executed/invoked, it is still enabled. STEP 2: Then we switch OFF the event scheduler. STEP 3: When the event scheduler is switched ON after some time when time period of event expires, it will mark the event as DISABLED in Event queue and drops it from there, But it does not drop the event from mysql.event table. This problem is mentioned as part of this bug report. ANALYSIS: An event is marked DISABLED in the event queue when its time period gets expired. Then it gets dropped from the event queue, but there was no logic to drop the disabled event from mysql.event table. As part of the fix, logic to drop the event from mysql.event table has been added. FIX: This bug is fixed by Dropping all the events with status DISABLED from mysql.event table. 	e0353717f1add0bdf67ec6cdfc5fc5d106228526
----------------------------
Bug #14407888 - I_INNODB.INNODB-BUG-14146134 FAILURE WITH INNODB: WARNING: A LONG SEMAPHORE WAIT Fix the test so that we do the SELECT phase of the test before the ALTER thread acquires both the index lock and the data dictionary latches. Add two new DEBUG_SYNC() points to achieve the desired effect. rb://1218 Approved by Marko Makela 	cdff0a04e75ff0da01f6f9288abe13ff7a297620
----------------------------
Merge: d646af0 a6ae434 Bug #13115401: -SSL-KEY VALUE IS NOT VALIDATED AND IT ALLOWS INSECURE CONNECTIONS IF SPE Merged from mysql-5.6 to mysql-trunk 	7a5dcd119fe71fd16de88ea12fee121090e18848
----------------------------
Merge: de47ad6 cd5a420 Bug #13115401: -SSL-KEY VALUE IS NOT VALIDATED AND IT ALLOWS INSECURE CONNECTIONS IF SPE Merged from mysql-5.5 to mysql-5.6 	a6ae434da16d634570093b144733e40573482623
----------------------------
Merge: ec766b5 40319e9 Bug #13115401: -SSL-KEY VALUE IS NOT VALIDATED AND IT ALLOWS INSECURE CONNECTIONS IF SPE Merged from mysql-5.1 to mysql-5.5 	cd5a42085fc9596de66933c77cb2107b20331502
----------------------------
Bug #13115401: -SSL-KEY VALUE IS NOT VALIDATED AND IT ALLOWS INSECURE CONNECTIONS IF SPE Problem description: -ssl-key value is not validated, you can assign any bogus text to --ssl-key and it is not verified that it exists, and more importantly, it allows the client to connect to mysqld. Fix: Added proper validations checks for --ssl-key. Note: 1) Documentation changes require for 5.1, 5.5, 5.6 and trunk in the sections listed below and the details are : http://dev.mysql.com/doc/refman/5.6/en/ssl-options.html#option_general_ssl and REQUIRE SSL section of http://dev.mysql.com/doc/refman/5.6/en/grant.html 2) Client having with option '--ssl', should able to get ssl connection. This will be implemented as part of separate fix in 5.6 and trunk. 	40319e9b44d778d570bd146d4a43e1d1842bb357
----------------------------
Bug#14219624 - ALTER TABLE...ADD COL AUTO_INCREMENT DOES NOT OBEY AUTO_INCREMENT_OFFSET Follow up fix. The changes exposed an existing bug in mach_write_int_type() on big-endian hardware. 	7d1e88cec9eccbb7d6a4832327fab2fc8606644d
----------------------------
BUG#14340819 MTR NOT MASKING THE WARNING NUMBER AFTER CHANGE MASTER IN RPL_SLAVE_NET_TIMEOUT Problem: MTR does not mask the warning number being thrown after change master in rpl_slave_net_timeout.test. Ideally all such warning numbers should be masked with #. But for mysql-test/suite/large_tests/r/rpl_slave_net_timeout.test, 1st warning number is masked properly, but it fails to mask the 2nd warning number, causes a result mismatch for this test. Fix: Masked the warning number for rpl_slave_net_timeout.test 	2f90081f0ce4a9f698faaa540fef85ef46d5e310
----------------------------
Bug#14219624 - ALTER TABLE...ADD COL AUTO_INCREMENT DOES NOT OBEY AUTO_INCREMENT_OFFSET Followup fix. 	c3d651e1c11e09e7475e48c8e82523abd97a0b6c
----------------------------
Bug#14219624 - ALTER TABLE...ADD COL AUTO_INCREMENT DOES NOT OBEY AUTO_INCREMENT_OFFSET Follow up fix. 	83f421b5ad7c70cf1e16783ce48745dc73269a8b
----------------------------
Bug#14234997 - PERFSCHEMA.SOCKET_SUMMARY_BY_INSTANCE_FUNC_WIN FAILS WITH RESULT MISMATCH ON PB Fixed an incorrect variable name in the test script that prevents the wait timeout from being set. 	1385dcb1057e4708c96ff1b4f3908759b727461f
----------------------------
Bug#14219624 - ALTER TABLE...ADD COL AUTO_INCREMENT DOES NOT OBEY AUTO_INCREMENT_OFFSET The bug synopsis is wrong. The online code didn't really implement the AUTOINC handling properly. Not handling the increment offset was only one of the issues. 1. Did not use the AUTO_INCREMENT_OFFSET 2. Next value calculation was wrong 3. Did not store the correct next value to the table counter once the build was completed 4. innodb-alter-autoinc.test was broken 5. Did not handle FLOAT and DOUBLE AUTOINC columns 6. Did not check for overflow for different column types 7. Did no handle unsigned integer types. In addition there is some minor code tidy up. Also, prevent copying of ha_innobase_inplace_ctx class. rb://1209 Approved by Jimmy Yang. 	7d18e5c35949de127f95f24f4f7b6fba4d5db19a
----------------------------
"Backported the following bundles from mysql-trunk: . revno: 4167.1.6 revision-id: alfranio.correia@oracle.com-20120804165626-s6lvgo59aa469o1h . revno: 4167.1.3 revision-id: alfranio.correia@oracle.com-20120803190050-lhyxo6wmgkipq6dv . revno: 4138.1.1 revision-id: alfranio.correia@oracle.com-20120731141810-b2405od5xnk017rl Backported BUG 13804728 from trunk to 5.6. ------------------------------------------ This patch is based on the patch for BUG 12334346 which was not pushed. The type of the worker's repository is dictated by the coordinator, i.e. the relay log info's repository. So when the latter is changed the former is supposed to be automatically changed too. However, due to a bug this was not happening making replication fail. It turns out though that the worker's repository cannot be changed if there are gaps because this requires to read information from one repository and write it to another and this may cause problems for the bitmap allocated to keep track of gaps. In a nutshell, the bitmap's size is defined by an user option and there is no guarantee that the recorded size will match the new size and this may lead to crashes. To fix this bug, we could always allocate the bitmap's maximum size and prevent any problem. However, we prefer to print a warning message and not to change the repository's type if there may be workers with gaps. Backported BUG 12334346 from trunk to 5.6. ------------------------------------------ The replication tables had the Master_Id column as the primary key. Despite the suggestive name, it was not supposed to store a server_id which is  used to uniquely identify a server, including the master. The column was just an internal identifier. Unfortunately, a bug made the slave's server_id be stored instead of a const number such as ""zero"" thus causing confusion and leading to this bug report. To fix the problem, we have done what follows: . Made master_host and master_port slave_master_info's primary key. . Renamed slave_relay_log_info's Master_Id to Id. We also had taken the chance to improve the code as follows: . Removed duplicated code from Rpl_info_factory. . Refactored Rpl_info_handler's interface to avoid passing the primary key as parameter in all the functions. . Refactored the code to allow one to redefine the primary keys without changing the code. "	53bfd3ed47c61d25a4bde7c23351a856f672dcd0
----------------------------
Added innodb_autoextend_increment=8 to the default variables for DB Install subroutine 	12f7b6e97025eac5def8a9ade043b6286d9c4e7e
----------------------------
"Bug#13058122 - DML, LOCK/UNLOCK TABLES AND SELECT LEAD TO FOREVER MDL LOCK Analysis: ---------- While granting MDL lock for the lock requests in wait queue, first the lock is granted to the high priority lock types and then to the low priority lock types. MDL Priority Matrix, +-------------+----+---+---+---+----+-----+ | Locks       |    |   |   |   |    |     | | has Priority|    |   |   |   |    |     | | over --->   |  S | SR| SW| SU| SNW| SNRW| +-------------+----+---+---+---+----+-----+ | X           |  + | + | + | + | +  | +   | +-------------|----|---|---|---|----|-----| | SNRW        |  - | + | + | - | -  | -   | +-------------|----|---|---|---|----|-----| | SNW         |  - | - | + | - | -  | -   | +-------------+----+---+---+---+----+-----+ Here '+' means, Lock priority is higher. '-' means, Has same priority In the scenario where, *. Lock wait queue has requests of type S/SR/SW/SU. *. And locks of high priority X/SNRW/SNW are requested continuously. In this case, while granting lock, always first high priority lock requests(X/SNRW/SNW) are considered. Low priority locks(S/SR/SW/SU) will not get chance and they will wait forever. In the scenario for which this bug is reported, application executed many LOCK TABLES ... WRITE statements concurrently. These statements request SNRW lock. Also there were some connections trying to execute DML statements requesting SR lock. Since SNRW lock request has higher priority (and as they were too many waiting SNRW requests) lock is always granted to it. So, lock request SR will wait forever, resulting in DML starvation. How is this handled in 5.1? --------------------------- Even in 5.1 we have low priority lock starvation issue. But, in 5.1 thread locking, system variable ""max_write_lock_count"" can be configured to grant some pending read lock requests. After ""max_write_lock_count"" of write lock grants all the low priority locks are granted. Why this issue is seen in 5.5/trunk? --------------------------------- In 5.5/trunk MDL locking, ""max_write_lock_count"" system variable exists but not used in MDL, only thread lock uses it. So no effect of ""max_write_lock_count"" in MDL locking. This means that starvation of metadata locks is possible even if max_write_lock_count is used. Looks like, customer was using ""max_write_lock_count"" in 5.1 and when upgraded to 5.5, starvation is seen because of not having effect of ""max_write_lock_count"" in MDL. Fix: ---------- As a fix, support for max_write_lock_count is added to MDL. To maintain write lock counter per MDL_lock object, new member ""m_hog_lock_count"" is added in MDL_lock. And following logic is added to increment the counter in function reschedule_waiters, (reschedule_waiters function is called while thread is releasing the lock) - After granting lock request from the wait queue. -  Check if there are any S/SR/SU/SW exists in the wait queue - If yes then increment the ""m_hog_lock_count"" And following logic is added in the same function to handle pending S/SU/SR/SW locks - Before granting locks - Check if max_write_lock_count <= m_hog_lock_count - If Yes, then try to grant S/SR/SW/SU locks. (Since all of these has same priority, all locks are granted together. But some lock grant may fail because of grant incompatibility) - Reset m_hog_lock_count if there no low priority lock requests in wait queue. - return Note: -------------------------- In the lock priority matrix explained above, though X has priority over the SNW and SNRW. X locks is taken mostly for RENAME, TRUNCATE, CREATE ... operations. So lock type X may not be requested in loop continuously in real world applications, as compared to other lock request types. So, lock request of type SNW and SNRW are not starved. So, we can grant all S/SR/SU/SW in one shot, without considering SNW & SNRW lock request starvation. ALTER table operations take SU lock first and then upgrade to SNW if required. All S, SR, SW, SU have same lock priority. So while granting SU, request of types SR, SW, S are also granted in one shot. So, lock request of type SU->SNW in loop will not make other low priority lock request to starve. But, when there is request for lock of type SNRW, lock requests of lower priority types are not granted. And if SNRW is requested in loop continuously then all S, SR, SW, SU are starved. This patch addresses the latter scenario. When we have S/SR/SW/SU in wait queue and if there are - Continuous SNRW lock requests - OR one or more X and Continuous SNRW lock requests. - OR one SNW and Continuous SNRW lock requests. - OR one SNW, one or more X and continuous SNRW lock requests. in wait queue then, S/SR/SW/SU lock request are starved. "	da244123e6588d82a096dfae9189d8aa063bf9c0
----------------------------
part of WL#6347 InnoDB: Index level compression stats Extend the test innodb_cmp_per_index_enabled_basic by trying to set some non-allowed values to the boolean config knob. 	765bd25681e80b5a25e9dce4fce169f29f3639ec
----------------------------
Bug#14392699: WHEN DEFAULTS-FILE USED, CLIENT CONNECTIONS HANG AFTER 'INSTALL PLUGIN' The server uses whatever is the current working directory at startup time to read the configuration files etc. Then it chdir's to the data directory for a number of valid reasons. So, when it's time to re-read the arguments at plugin load time the relative paths won't work as expected any more. This is correctly detected by the plugin loading code and an error is generated. Unfortunately when this error is propagated up the stack one lock is not unlocked. This causes normal server operation to be impossible. Fixed by correctly releasing the lock in case of an error. Also, made a minor change in the default option handling to make sure that defaults file's path doesn't get re-evaluated. Automated testing not really possible, since pb2 and mtr have non-constant test directories relative layouts. Also, its currently not feasible to start a mysqld instance with a defaults file (with a non-absolute file name) and then use it to execute queries that make server to re-read the specified config file. 	7fb617b009dbd07b485a48401e97d601fa180790
----------------------------
Bug#14409088 - MAKE --EXPLICIT_DEFAULTS_FOR_TIMESTAMP SETTING VISIBLE TO USERS WL6292 introduced --explicit_defaults_for_timestamp server option. This option causes (when set) CREATE TABLE to create all TIMESTAMP columns as NULL with DEFAULT NULL attribute, Without this option, TIMESTAMP columns are NOT NULL and have implicit DEFAULT clauses. The old behavior is deprecated. The problem is that --explicit_defaults_for_timestamp option is not currently visible for users. This make it hard for users to make runtime decision that depends on knowing how the server is going to handle TIMESTAMP columns. This fix makes it visible to users. 	1c54bea048f390fd54a76825149dd72a6db5cac0
----------------------------
BUG#11749055 - INSERT SELECT ON DUPLICATE KEY UPDATE, LOAD DATA REPLACE WRONG LOCK BACKGROUND: INSERT SELECT ON DUPLICATE KEY UPDATE and LOAD DATA CONCURRENT REPLACE uses TL_WRITE_CONCURRENT_INSERT lock though it either update/inserts or deletes/inserts a row respectively. ANALYSIS: When a SELECT SUM(column_name) UNION SELECT SUM(column_name) query is issued and while it is running if following two commands are run 1. INSERT SELECT ON DUPLICATE KEY UPDATE 2. LOAD DATA CONCURRENT REPLACE Second SELECT SUM(column_name) gets different values from the first SELECT query as the tuples in the table have either been updated/inserted OR deleted/inserted in the table repectively, when the above SELECT..UNION query is running Same issue exists with simple INSERT.. ON DUPLICATE KEY UPDATE when it is used in stored function or trigger. This behaviour is not desired i.e Both SELECT's in this union query should have the same view of the table when it starts. The root cause for this bug INSERT or INSERT SELECT with ON DUPLICATE KEY UPDATE clause and LOAD DATA CONCURRENT REPLACE should not be doing updates/deletes respectively with TL_WRITE_CONCURRENT_INSERT lock. FIX: This bug is fixed by changing the default lock type of INSERT or INSERT..SELECT statement to TL_WRITE_DEFAULT lock in the parser itself when they are issued with ON DUPLICATE KEY UPDATE clause. Same is taken care for LOAD DATA CONCURRENT REPLACE statement as well. NOTE: When CONCURRENT is specified with REPLACE in LOAD DATA statement CONCURRENT is overridden by REPLACE. 	b3b8022dd5d8d27926f731aea6319a03a63af20c
----------------------------
"Short-term fix bug #11754911 ""ALTER TABLE CAUSES INCONSISTENT VALUES FOR FOREIGN KEYS"". ALTER TABLE that changes a column definition may lead to changes in values stored in this column. If such a column participates in a foreign key (which is not added by this ALTER TABLE) changes in the column might break referential integrity. Same could have happened when ALTER IGNORE TABLE removed some rows from the table that served as a parent in a foreign key. This has happened because there was no check that for a new column value there is a matching parent key value (or if parent table was changed that such a change doesn't leave child key values as orphans). This patch tries to address the problem for the case when ALTER TABLE is executed using COPY-algorithm. The corresponding problem for the INPLACE algorithm should be handled inside of storage engine calls implementing it. Incompatible changes: 1) We no longer allow dropping or renaming of columns in a foreign key when ALTER is executed using COPY algorithm (Rename is disallowed since we miss an API to communicate information about new names of columns to the InnoDB engine). 2) We do not allow changes to parent and child columns which theoretically might result in value change. ""Insignificant"" changes that can't result in value change are still allowed. 3) An error is emitted when ALTER IGNORE TABLE tries to delete a row from a table which is a parent in a foreign key. Checks 2-3) are not carried out when @@foreign_key_checks are off (=0). Long-term we can allow ""significant"" changes to child columns. To implement this we need a storage engine method that will temporarily copy info about affected foreign keys from the old version of table to the new version, so foreign key checks can be performed during copy. "	77302129d55fc2755adf7a9cec73935ce76e90ff
----------------------------
Bug#14315223 - INNODB ASSERT IN TRX0RSEG.CC FOR MYSQL_INSTALL_DB The assert in this bug happens because ibdata1 was initialized like this; innodb_data_file_path=ibdata1:10M:autoextend:max:10M InnoDB asserts when there is not enough space in the system tablespace to allocate all pages needed at bootstrap. A maximum size of 10 Mb works in 5.1 because the initial requires size of ibdata1 was less than 10M. But in 5.5, a change was made to allocate all 128 rollback segments at bootstrap.  Since then, the initial size has been 10M + the default autoextend size of 8M.  If we were to make the default initial size of ibdata1 to be just 11M instead of 10M, it would not autoextend during bootstrap and the initial size of each ibdata1 file would be 11M. This patch simply changes it to 12M to make room for a few small tables before it does the first autoextend.  This will help MTR run faster. In 5.6, worklog 6216 changes the autoextend size from 8M to 64M. This changes the initial size of ibdata1 from 18M in 5.5 and earlier releases of 5.6 to 74M in the current mysql-5.6 and mysql-trunk. So this change is especially needed in 5.6. This patch does not fix the possibility of the assert in this bug. But it makes it less likely that someone would use a senseless startup setting like that by declaring a more appropriate initial size for the system tablespace. RB:1173 approved by Sunny and also reviewed by Jimmy. 	38c3f2340a2acfd6edb8a952d4a16c7c7fac8520
----------------------------
"Merge: 25a404e 17ef817 Bug#11753308: MYSQL_KILL() AND COM_PROCESS_KILL ONLY HANDLE 32-BIT IDS The connection ID / ""thread-ID"" is currently 32 bit on the wire, but may be 64 bit in the API, depending on the definition of ulong on a given platform. If we silently drop half the bits on the floor, mysql_thread_id() in Connector-C may give incorrect results, and mysql_kill() might ask for the wrong (and usually long expired) thread to be terminated, even if a 64-bitly correct ID were obtained with ""SELECT connection_ID()"". We now guard against some 32/64 issues. We do this in both the client and the server to address mixed scenarios of old server / new client and vice versa. Using SQL instead of the C API (SELECT CONNECTION_ID() / KILL CONNECTION ...) should produce better results. mysqladmin already does this. Docs implications: - Discourage use mysql_thread_id() / mysql_kill(). current status is that they produce incorrect results / try to kill the wrong thread once more than 2^32 threads are created (IOW, this only affects extremely busy servers or those with an extreme uptime. The server also needs to use 64-bit thread_IDs for this to apply. This is platform specific, not a mysqld configurable.) Patched status is that the calls will work normally as long as thread_IDs are in safe range (< 2^32), but will throw an error a) if mysql_kill() in Connector-C is called with a value >= 2^32, or b) if mysql_kill() is used at all, even with ostentably correct values, once thread_ID in the server has exceeded what can be expressed within 32 bits. - encourage use of the SQL equivalents, SELECT connection_ID() / KILL CONNECTION ... - mysqladmin already does this, and is therefore safe. - mysql_kill() will throw CR_INVALID_CONN_HANDLE if it is given a larger value than can be expressed in the 32-bit wire protocol. - mysqld will throw ER_DATA_OUT_OF_RANGE on mysql_kill() once thread_ID in mysqld exceeds 32-bits. "	b422dacab886ed01e2f8a9f7e31eae0a214cb4ee
----------------------------
"BUG#12334346 - INCORRECT VALUES IN REPLICATION TABLES The replication tables had the Master_Id column as the primary key. Despite the suggestive name, it was not supposed to store a server_id which is  used to uniquely identify a server, including the master. The column was just an internal identifier. Unfortunately, a bug made the slave's server_id be stored instead of a const number such as ""zero"" thus causing confusion and leading to this bug report. To fix the problem, we have done what follows: . Made master_host and master_port slave_master_info's primary key. . Renamed slave_relay_log_info's Master_Id to Id. We also had taken the chance to improve the code as follows: . Removed duplicated code from Rpl_info_factory. . Refactored Rpl_info_handler's interface to avoid passing the primary key as parameter in all the functions. . Refactored the code to allow one to redefine the primary keys without changing the code. "	587230b59773c14af7e0d31bc57f130233bce1e5
----------------------------
BUG#14237992 - RPL_SEMI_SYNC FAILURES ON TRUNK AS PART OF WL#5223 The rpl_semi_sync_master_timeout duration is increased to 30 sec to increase the duration when the semi-sync replication waits for the acks from the slave before it shifts to asynchronous replication. The timeout duration is increased from 10sec to 30 sec. 	add8100b0066328bd024b9732fc2dcec0e8311f6
----------------------------
part of WL#6347 InnoDB: Index level compression stats Add mtr test for innodb_cmp_per_index_enabled. 	0a2c253cf2d7ed07f3cbfd05e55540ccf041970f
----------------------------
"part of WL#6347 InnoDB: Index level compression stats Reset per index zip stats when innodb_cmp_per_index_enabled is set, but only if it was not set beforehand. Also save the value of ""save"" into ""srv_cmp_per_index_enabled"", otherwise the SET GLOBAL innodb_cmp_per_index_enabled=...; commands have no effect. Suggested by:	Inaam (http://bur03.no.oracle.com/rb/r/1116/) "	818d082d33c357aab62c83e3788b853efab51f13
----------------------------
WL#6344 Make compression level and logging of compressed pages configurable rb://1111 approved by: Sunny Bains (based on facebook contribution) New Parameters: =============== innodb_compression_level: default 6 range 0 - 9. dynamic. specifies the compression level used by zlib. innodb_log_compressed pages: default true (same as current behaviour): specifies whether or not we need to store compressed index page images in the redo after we make such a change that causes recompression. This patch introduces two new redo log rec types: +#define MLOG_ZIP_PAGE_COMPRESS_NO_DATA         ((byte)52)/*!< compress an index page +                                               without logging it's image */ +#define MLOG_ZIP_PAGE_REORGANIZE ((byte)53)    /*!< reorganize a compressed +                                               page */ 	dfef501534e0d71f04f1570c75c98e0829fe9832
----------------------------
Bug#13699303 - THREAD POOL PLUGIN IGNORES TIMEOUT. PROBLEM: mysql provides a feature where in a session which is idle for a period specified by the wait_timeout variable (whose value is in seconds), the session is closed This feature is not present when we use thread pool. FIX: This patch implements the interface functions which is required to implement the wait_timeout functionality in the thread pool plugin. 	436c0b04cb6c2163c558adef033518b01de8251c
----------------------------
Merge: b467dd4 2f2e0d9 BUG#14364558 - ASSERT `TABLE_LIST->PRELOCKING_PLACEHOLDER == FALSE' FAILED IN CHECK_LOCK_AND_START_STMT Problem: rqg_signal_resignal test hits the assert DBUG_ASSERT(table_list->prelocking_placeholder == false), in check_lock_and_start_stmt(); Analysis: The above assert was added as part of fix for Bug#13036505, to capture the fact that prelocking_placeholder should always be false in check_lock_and_start_stmt() in theory. But in practice, this assertion is hit. Even without the fix Bug#13036505 this problem exists. So, this problem is not an effect to Bug#13036505, and hence can be treated as a new issue. For now we shall remove this assert which will keep the old behavior. And we keep this bug open, so as to dig into the issue more and provide proper fix. Current observation is that, the problem is not reproducible with --threads=[<=3] and could be due to concurrent operations. perl runall.pl --threads=10 --queries=1M --duration=300 --grammar=conf/runtime/signal_resignal.yy --mysqld=--max-sp-recursion-depth=10 --reporters=Deadlock,ErrorLog,Backtrace,Shutdown --basedir=$BASEDIR --vardir=vardir  --mysqld=--log-output=file --mysqld=--loose-lock-wait-timeout=1 --mysqld=--loose-innodb-lock-wait-timeout=1 --testname=rqg_signal_resignal 	4d9fb4f0b1817cd6c7e83c7d6dec388f80389299
----------------------------
BUG#14364558 - ASSERT `TABLE_LIST->PRELOCKING_PLACEHOLDER == FALSE' FAILED IN CHECK_LOCK_AND_START_STMT Problem: rqg_signal_resignal test hits the assert DBUG_ASSERT(table_list->prelocking_placeholder == false), in check_lock_and_start_stmt(); Analysis: The above assert was added as part of fix for Bug#13036505, to capture the fact that prelocking_placeholder should always be false in check_lock_and_start_stmt() in theory. But in practice, this assertion is hit. Even without the fix Bug#13036505 this problem exists. So, this problem is not an effect to Bug#13036505, and hence can be treated as a new issue. For now we shall remove this assert which will keep the old behavior. And we keep this bug open, so as to dig into the issue more and provide proper fix. Current observation is that, the problem is not reproducible with --threads=[<=3] and could be due to concurrent operations. perl runall.pl --threads=10 --queries=1M --duration=300 --grammar=conf/runtime/signal_resignal.yy --mysqld=--max-sp-recursion-depth=10 --reporters=Deadlock,ErrorLog,Backtrace,Shutdown --basedir=$BASEDIR --vardir=vardir  --mysqld=--log-output=file --mysqld=--loose-lock-wait-timeout=1 --mysqld=--loose-innodb-lock-wait-timeout=1 --testname=rqg_signal_resignal 	2f2e0d9cc11ecd08552c4c9102b45744e140becc
----------------------------
Bug#13699303 - THREAD POOL PLUGIN IGNORES TIMEOUT. PROBLEM: mysql provides a feature where in a session which is idle for a period specified by the wait_timeout variable (whose value is in seconds), the session is closed This feature is not present when we use thread pool. FIX: This patch implements the interface functions which is required to implement the wait_timeout functionality in the thread pool plugin. 	89a52fffe434e96b181f1b00bca0d52b740cdf40
----------------------------
BUG#14298750: SLAVE_MASTER_INFO NOT UPDATED WHEN SLAVE ATTACHED TO MASTER Problem: When setting up replication on a master and slave where the slave is using master-info-repository=TABLE, the table is not updated when replication is started. This is because the table mysql.slave_master_info is not synchronized automatically when @@GLOBAL.sync_master_info=0 and this causes applications reading this table to fail or behave incorrectly. Solution: We fix this problem by synchronizing mysql.slave_master_info during CHANGE MASTER command. 	2a75648ac5b0ceeabea437604decf732cc664127
----------------------------
"Bug#13961678:MULTI-STATEMENT TRANSACTION REQUIRED MORE THAN 'MAX_BINLOG_CACHE_SIZE' ERROR Problem: ======= MySQL returns following error in win64. ""ERROR 1197 (HY000): Multi-statement transaction required more than 'max_binlog_cache_size' bytes of storage; increase this mysqld variable and try again"" when user tries to load >4G file even if max_binlog_cache_size set to maximum value. On Linux everything works fine. Analysis: ======== The `max_binlog_cache_size' variable is of type `ulonglong'.  This value is set to `ULONGLONG_MAX' at the time of server start up. The above value is stored in an intermediate variable named `saved_max_binlog_cache_size' which is of type `ulong'. In visual c++ complier the `ulong' type is of 4bytes in size and hence the value is getting truncated to '4GB' and the cache is not able to grow beyond 4GB size. The same limitation is observed with ""max_binlog_stmt_cache_size"" as well. Similar fix has been applied. Fix: === As part of fix the type ""ulong"" is replaced with ""my_off_t"" which is of type ""ulonglong"". "	f9e6613bd4f118eab00881900b1f2c6ef0554e7f
----------------------------
"Some test restructuring: Create test_config.js Move ""Suite"" implementation from Driver.js into harness Move harness into test/lib/ and create test_utils.js there Move fail_openSession from Driver.js into test_utils Systematize test files and names under spi/ Move annotations test (not an spi test) from spi to t_basic "	ea5652fd26d632df306e61eb852f3216a00866ce
----------------------------
Bug#14341099 - ASSERTION FAILURE: IN FILE DICT0DICT.IC LINE 1284 INNODB: FAILING ASSERTION: 0 The dict_index_t::online_status can change from: COMPLETED -> ABORTED -> COMPLETED for a CLUSTER index if the  online index build fails for some reason.  When the state is set to ABORTED, any DML that updates the cluster index will fail when checking the index online status due to a race in the code. The fix is to avoid setting the interim ABORTED state for cluster indexes if the build fails. Remove some unnecessary #includes. Only ha_prototypes.h is required to use DEBUG_SYNC() instrumentation. rb://1176 Approved by Jimmy Yang 	210401bc731c3616ac73b6a4fbd7103b184fc2fa
----------------------------
Bug#13036505 62540: TABLE LOCKS WITHIN STORED FUNCTIONS ARE BACK IN 5.5 WITH MIXED AND ROW BI. Problem:- ------- SELECT/SET/DO statements that used stored functions but didn't change any data acquired too strong locks on tables used (i.e. read) in these functions if binary logging was on and used statement or mixed mode. For MyISAM tables this resulted in that concurrent insert to such tables were blocked while such a statement was running. For InnoDB tables such statements were using locking reads (and as result blocked any concurrent changes and SELECT ... FOR UPDATE statements) instead of using snapshot isolation. Analysis: -------- Due to a statement-based replication limitation, statements such as INSERT INTO .. SELECT FROM .. and CREATE TABLE .. SELECT FROM need to grab a TL_READ_NO_INSERT lock on the source table in order to prevent the replication of a concurrent statement that modifies the source table. If such a statement gets applied on the slave before the INSERT .. SELECT statement finishes, data on the master could differ from data on the slave and end-up with a discrepancy between the binary log and table state. This also applies to SELECT/SET/DO statements which use stored functions. Calls to such functions are going to be logged as a whole and thus should be serialized against concurrent changes to tables used by those functions. The current implementation does not check if functions only read data and won't be written into binary log as result. Currently we use TL_READ_NO_INSERT lock for all tables used by stored functions called from SELECTs if binary logging is on and uses statement or mixed mode. Note that even though InnoDB engine does its own locking it still relies on thr_lock.c locks set by SQL-layer to infer type of row-locks to acquire when reading data. Since TL_READ_NO_INSERT is translated to locking reads in InnoDB the above means that SELECT/SET/DO that uses stored functions will do locking reads on tables used by routines. We can use weaker type of lock TL_READ, which will allow concurrent inserts, if a statement only reads data (since such a statement won't get into binary log anyway). For InnoDB this lock will be translated to non-locking, snapshot reads (unless in serializable mode). Fix:- --- If we know that all stored routines which are going to be called by statement do not change tables we can choose weaker TL_READ lock for tables used by it. If some substatement which is added to sp_head modifies data, then we set this flag. This flag is used in read_lock_type_for_table() to choose weaker TL_READ lock for tables. Currently open_tables() processes a loop, where it initially processes known tables and routines, and further in each iteration it processes new tables and routines eventually found. Currently the lock upgrade happens within the loop where complete table/routine list for statement is not known, within which we cannot decide if lock upgrade is needed or to be ignored. This fix handles lock upgrade upon loop completion. When the complete list of tables get prepared, we check if there were any SF which write data, if not, we ignore upgrading lock. Test case:- -------- main.lock_sync and main.innodb_mysql_lock2 test most of above mentioned scenario's. These tests have been updated according to new behavior. A new test case has been added to test SF which modifies temporary table. 	ebc2a263cbf814199a02dd565a18601b1c5cede0
----------------------------
Bug#13036505 62540: TABLE LOCKS WITHIN STORED FUNCTIONS ARE BACK IN 5.5 WITH MIXED AND ROW BI. Problem:- ------- SELECT/SET/DO statements that used stored functions but didn't change any data acquired too strong locks on tables used (i.e. read) in these functions if binary logging was on and used statement or mixed mode. For MyISAM tables this resulted in that concurrent insert to such tables were blocked while such a statement was running. For InnoDB tables such statements were using locking reads (and as result blocked any concurrent changes and SELECT ... FOR UPDATE statements) instead of using snapshot isolation. Analysis: -------- Due to a statement-based replication limitation, statements such as INSERT INTO .. SELECT FROM .. and CREATE TABLE .. SELECT FROM need to grab a TL_READ_NO_INSERT lock on the source table in order to prevent the replication of a concurrent statement that modifies the source table. If such a statement gets applied on the slave before the INSERT .. SELECT statement finishes, data on the master could differ from data on the slave and end-up with a discrepancy between the binary log and table state. This also applies to SELECT/SET/DO statements which use stored functions. Calls to such functions are going to be logged as a whole and thus should be serialized against concurrent changes to tables used by those functions. The current implementation does not check if functions only read data and won't be written into binary log as result. Currently we use TL_READ_NO_INSERT lock for all tables used by stored functions called from SELECTs if binary logging is on and uses statement or mixed mode. Note that even though InnoDB engine does its own locking it still relies on thr_lock.c locks set by SQL-layer to infer type of row-locks to acquire when reading data. Since TL_READ_NO_INSERT is translated to locking reads in InnoDB the above means that SELECT/SET/DO that uses stored functions will do locking reads on tables used by routines. We can use weaker type of lock TL_READ, which will allow concurrent inserts, if a statement only reads data (since such a statement won't get into binary log anyway). For InnoDB this lock will be translated to non-locking, snapshot reads (unless in serializable mode). Fix:- --- If we know that all stored routines which are going to be called by statement do not change tables we can choose weaker TL_READ lock for tables used by it. If some substatement which is added to sp_head modifies data, then we set this flag. This flag is used in read_lock_type_for_table() to choose weaker TL_READ lock for tables. Currently open_tables() processes a loop, where it initially processes known tables and routines, and further in each iteration it processes new tables and routines eventually found. Currently the lock upgrade happens within the loop where complete table/routine list for statement is not known, within which we cannot decide if lock upgrade is needed or to be ignored. This fix handles lock upgrade upon loop completion. When the complete list of tables get prepared, we check if there were any SF which write data, if not, we ignore upgrading lock. Test case:- -------- main.lock_sync and main.innodb_mysql_lock2 test most of above mentioned scenario's. These tests have been updated according to new behavior. A new test case has been added to test SF which modifies temporary table. 	1c53e99fc829a2978fc8f4114b17d46cde1e867c
----------------------------
BUG#14343457: SELECT @@SESSION.GTID_DONE ASSERT FAILURE WHEN EXECUTED ON ONGOING TRANSACTION SELECT @@SESSION.GTID_DONE executed within an on-going transaction was causing assertion failures because the on-going transaction did not have a 'valid' GTID assigned to it. The GTID is only assigned upon commit when the transaction is written to the binlog. Notice, however, that the assert failure does not happen if a SET @@SESSION.GTID_NEXT is executed as this operation assigns a 'valid' GTID to the next transaction. Fixed Group_cache::get_gtids(Gtid_set) method to consider the case on which group has not yet GTID assigned. 	a0752b4cda33539c0c4621be56e74927f67840f1
----------------------------
Bug#14209598 - MYSQL_SOCKET_SOCKET() CREATES A NEW OBJECT EVEN WHEN SOCKET() FAILS This change fixes issues affecting the socket instrumentation in general. 1) When a call to socket() fails, there is no socket created, but the performance schema instrumentation api mysql_socket_socket() did create instrumentation for the (non existent) socket anyway. This is a bug, that can: - cause statistical errors in various socket summaries, as there is an extra socket counted - cause leaks of instrumented sockets, because the extra socket created is not destroyed, - cause the socket_instance table to become full in the long term, causing the socket instrumentation to totally fail after a while. The fix is to only create instrumentation for a socket if creating the socket worked. 2) When creating instrumentation for a socket, the code calls: - init_socket(), to create instrumentation. - set_socket_info(), to set some attributes. Making both calls each time a socket is created is un necessary overhead. A more efficient way is to pass all the needed parameters to init_socket(), so that a single call creates an instrumented socket, with optional attributes if needed. This is a performance improvement, affecting the same area as 1) 3) When bind() fails for a socket, the instrumentation api mysql_socket_bind() did set attributes on the socket used in the bind, regardless of whether the bind operation actually worked or not. This can lead to a confusing instrumented state, where the performance schema reports that a socket is bound to a specific address, even when such operation failed. This is a minor bug, fixed in mysql_socket_bind(). 	1de8a070ba3981a7c5da3e4125c6e4f6fa99618d
----------------------------
Reverting broken configure/make stuff 	3fb225252a98ab4494c425a01663c1fa7476f768
----------------------------
Bug #14035452 - MODULARIZE MYSQL_CLIENT_TEST Added new minimal client using same framework Added internal test using it Small changes to top level make/configure/cmake to have it built 	1a6ce811fdbb93c974ecd75e6951dca30bbc6262
----------------------------
"Attempt to fix Bug#14278519 CRASH OBSERVED IN INNODB.INNODB_STATS_AUTO_RECALC_LOTS ON VALGRIND RUN IN PB2 Do not declare the bpage arg to buf_flush_try_yield() to be nonnull since it can be NULL actually and the suspicion is that the compiler has optimized away the check whether bpage is NULL inside that function. From the GCC doc on nonnull attribute: ""The compiler may also choose to make optimizations based on the knowledge that certain function arguments will not be null."" The current code (before this commit) is compiled to: (gdb) disas buf_flush_try_yield Dump of assembler code for function buf_flush_try_yield: 0x00000000009a9950 <buf_flush_try_yield+0>:	push   %rbp 0x00000000009a9951 <buf_flush_try_yield+1>:	mov    %rsp,%rbp 0x00000000009a9954 <buf_flush_try_yield+4>:	mov    %r12,0xfffffffffffffff0(%rbp) 0x00000000009a9958 <buf_flush_try_yield+8>:	mov    %r13,0xfffffffffffffff8(%rbp) 0x00000000009a995c <buf_flush_try_yield+12>:	mov    %rsi,%r12 0x00000000009a995f <buf_flush_try_yield+15>:	mov    %rbx,0xffffffffffffffe8(%rbp) 0x00000000009a9963 <buf_flush_try_yield+19>:	sub    $0x20,%rsp 0x00000000009a9967 <buf_flush_try_yield+23>:	cmp    $0x3ff,%rdx 0x00000000009a996e <buf_flush_try_yield+30>:	mov    %rdi,%r13 0x00000000009a9971 <buf_flush_try_yield+33>:	ja     0x9a9983 <buf_flush_try_yield+51> 0x00000000009a9973 <buf_flush_try_yield+35>:	xor    %eax,%eax 0x00000000009a9975 <buf_flush_try_yield+37>:	mov    0xffffffffffffffe8(%rbp),%rbx 0x00000000009a9979 <buf_flush_try_yield+41>:	mov    0xfffffffffffffff0(%rbp),%r12 0x00000000009a997d <buf_flush_try_yield+45>:	mov    0xfffffffffffffff8(%rbp),%r13 0x00000000009a9981 <buf_flush_try_yield+49>:	leaveq 0x00000000009a9982 <buf_flush_try_yield+50>:	retq 0x00000000009a9983 <buf_flush_try_yield+51>:	mov    %rsi,%rdi 0x00000000009a9986 <buf_flush_try_yield+54>:	callq  0x9a6950 <buf_page_get_io_fix> 0x00000000009a998b <buf_flush_try_yield+59>:	test   %eax,%eax 0x00000000009a998d <buf_flush_try_yield+61>:	jne    0x9a9973 <buf_flush_try_yield+35> 0x00000000009a998f <buf_flush_try_yield+63>:	lea    0x1f8(%r13),%rbx 0x00000000009a9996 <buf_flush_try_yield+70>:	mov    %rbx,%rdi 0x00000000009a9999 <buf_flush_try_yield+73>:	callq  0x9a7670 <pfs_mutex_exit_func> 0x00000000009a999e <buf_flush_try_yield+78>:	mov    %r12,%rsi 0x00000000009a99a1 <buf_flush_try_yield+81>:	mov    %r13,%rdi 0x00000000009a99a4 <buf_flush_try_yield+84>:	callq  0x9a98b0 <buf_flush_yield> 0x00000000009a99a9 <buf_flush_try_yield+89>:	lea    2028424(%rip),%rsi        # 0xb98d38 <field_ref_zero+9144> 0x00000000009a99b0 <buf_flush_try_yield+96>:	mov    $0x1a6,%edx 0x00000000009a99b5 <buf_flush_try_yield+101>:	mov    %rbx,%rdi 0x00000000009a99b8 <buf_flush_try_yield+104>:	callq  0x9a6cf0 <pfs_mutex_enter_func> 0x00000000009a99bd <buf_flush_try_yield+109>:	mov    $0x1,%eax 0x00000000009a99c2 <buf_flush_try_yield+114>:	jmp    0x9a9975 <buf_flush_try_yield+37> End of assembler dump. "	b479d90398a47059bc50224a55f8a6b05584705c
----------------------------
"Bug#13058122 - DML, LOCK/UNLOCK TABLES AND SELECT LEAD TO FOREVER MDL LOCK Analysis: ---------- While granting MDL lock for the lock requests in wait queue, first the lock is granted to the high priority lock types and then to the low priority lock types. MDL Priority Matrix, +-------------+----+---+---+---+----+-----+ | Locks       |    |   |   |   |    |     | | has Priority|    |   |   |   |    |     | | over --->   |  S | SR| SW| SU| SNW| SNRW| +-------------+----+---+---+---+----+-----+ | X           |  + | + | + | + | +  | +   | +-------------|----|---|---|---|----|-----| | SNRW        |  - | + | + | - | -  | -   | +-------------|----|---|---|---|----|-----| | SNW         |  - | - | + | - | -  | -   | +-------------+----+---+---+---+----+-----+ Here '+' means, Lock priority is higher. '-' means, Has same priority In the scenario where, *. Lock wait queue has requests of type S/SR/SW/SU. *. And locks of high priority X/SNRW/SNW are requested continuously. In this case, while granting lock, always first high priority lock requests(X/SNRW/SNW) are considered. Low priority locks(S/SR/SW/SU) will not get chance and they will wait forever. In the scenario for which this bug is reported, application executed many LOCK TABLES ... WRITE statements concurrently. These statements request SNRW lock. Also there were some connections trying to execute DML statements requesting SR lock. Since SNRW lock request has higher priority (and as they were too many waiting SNRW requests) lock is always granted to it. So, lock request SR will wait forever, resulting in DML starvation. How is this handled in 5.1? --------------------------- Even in 5.1 we have low priority lock starvation issue. But, in 5.1 thread locking, system variable ""max_write_lock_count"" can be configured to grant some pending read lock requests. After ""max_write_lock_count"" of write lock grants all the low priority locks are granted. Why this issue is seen in 5.5/trunk? --------------------------------- In 5.5/trunk MDL locking, ""max_write_lock_count"" system variable exists but not used in MDL, only thread lock uses it. So no effect of ""max_write_lock_count"" in MDL locking. This means that starvation of metadata locks is possible even if max_write_lock_count is used. Looks like, customer was using ""max_write_lock_count"" in 5.1 and when upgraded to 5.5, starvation is seen because of not having effect of ""max_write_lock_count"" in MDL. Fix: ---------- As a fix, support for max_write_lock_count is added to MDL. To maintain write lock counter per MDL_lock object, new member ""m_hog_lock_count"" is added in MDL_lock. And following logic is added to increment the counter in function reschedule_waiters, (reschedule_waiters function is called while thread is releasing the lock) - After granting lock request from the wait queue. -  Check if there are any S/SR/SU/SW exists in the wait queue - If yes then increment the ""m_hog_lock_count"" And following logic is added in the same function to handle pending S/SU/SR/SW locks - Before granting locks - Check if max_write_lock_count <= m_hog_lock_count - If Yes, then try to grant S/SR/SW/SU locks. (Since all of these has same priority, all locks are granted together. But some lock grant may fail because of grant incompatibility) - Reset m_hog_lock_count if there no low priority lock requests in wait queue. - return Note: -------------------------- In the lock priority matrix explained above, though X has priority over the SNW and SNRW. X locks is taken mostly for RENAME, TRUNCATE, CREATE ... operations. So lock type X may not be requested in loop continuously in real world applications, as compared to other lock request types. So, lock request of type SNW and SNRW are not starved. So, we can grant all S/SR/SU/SW in one shot, without considering SNW & SNRW lock request starvation. ALTER table operations take SU lock first and then upgrade to SNW if required. All S, SR, SW, SU have same lock priority. So while granting SU, request of types SR, SW, S are also granted in one shot. So, lock request of type SU->SNW in loop will not make other low priority lock request to starve. But, when there is request for lock of type SNRW, lock requests of lower priority types are not granted. And if SNRW is requested in loop continuously then all S, SR, SW, SU are starved. This patch addresses the latter scenario. When we have S/SR/SW/SU in wait queue and if there are - Continuous SNRW lock requests - OR one or more X and Continuous SNRW lock requests. - OR one SNW and Continuous SNRW lock requests. - OR one SNW, one or more X and continuous SNRW lock requests. in wait queue then, S/SR/SW/SU lock request are starved. "	590daa47da2a05b061a8da2dbffcfa377e452f95
----------------------------
WL#6345 Dynamic padding to reduce compression failure rate rb://1106 approved by: Sunny Bains Based on facebook contribution. Allows to 'pad' uncompressed data pages i.e.: leave empty space in the uncompressed data page in an attempt to reduce failures when the uncompressed page is compressed. The heuristic is build on a per-index basis though the parameters are global. Here is how it works: * A single 'round' of activity is 128 compression ops (hard coded) on a given index. * For each complete round if the compression failure rate is above the user defined threshold then a 'pad' (hardcoded to 128 bytes) is added to the uncompressed page. * If certain number of 'rounds' (hard coded to 5) go through without touching the threshold then 'pad' is removed from the uncompressed page i.e.: allowing more space in the page to be used for data. Config Parameters: ================== innodb_compression_failure_threshold_pct: default 5, range 0 - 100, dynamic, implies the percentage of compress ops to fail before we start using to padding. Value 0 has a special meaning of disabling the padding. innodb_compression_pad_pct_max: default 50, range 0 - 75, dynamic, the maximum percentage of uncompressed data page that can be reserved as pad i.e.: UNIV_PAGE_SIZE - the above percent will always be available for data. 	f62376297b04877d4046feff3767495b3ec6158e
----------------------------
Bug#14298586 - NANOSECOND TIMER NOT WORKING ON WINDOWS Before this fix, the table performance_schema.setup_timers used always the nanosecond timer for stages and statements, be default. The problem with that is that this timer may not be available for the platform used, and in this case, stages and statements timing is not functioning properly out of the box. For example, the NANOSECOND timer is not available on windows platforms. With this fix, the idle, stage and statement timers are set to: - use the preferred timers when available, - use alternate timers when the preferred timers are not supported. This is a major change for ease of use, as it avoids the need to explicitly update table setup_timers. 	ccc003057df504f5c3590a99ef935ba29b102c25
----------------------------
"Add the man page for the ""mysql_config_editor"" to the RPM spec file. "	53637eb11f789961e2d61335516fcb3f5be713c4
----------------------------
Bug#13002460 CRASH WHEN SHUTTING DOWN SERVER AND TOGGLING EVENT_SCHEDULER AT RUNTIME Analysis: static objects declared in Events (events.cc) is not guarded by mutex. This leads to race condition during shutdown. Client connection thread which toggles EVENT_SCHEDULER calls scheduler->start() or scheduler->stop() depending on the flag set. During shutdown, close_connections() calls Events::deinit() from kill_server_thread, which destroys scheduler object before waiting for all client connection threads to end. This leads to scheduler->start() or scheduler->stop() being called on destroyed scheduler object Fix: Moved Events::deinit() call after stopping all the client connection threads. Additional Notes: No test case added because send_shutdown command of mtr does not call Events::deinit(). Moreover scenario described in the bug description cannot be synchronized using mtr as they are two different process(mysqlslap and mysqladmin) 	ee726db5cb7b1b6027ba4885154ae9ac82dc6946
----------------------------
"Fix Bug#14296397 INNODB.INNODB-WL5522-DEBUG TEST FAILS WITH TIMEOUT ON PB2 SPORADICALLY. Synchronize the background stats gathering thread with ALTER TABLE ... DISCARD TABLESPACE. The problematic scenario is this: STATS THREAD: (via btr_get_size()) x-latches the root page DISCARD THREAD: acquire the tablespace latch STATS THREAD: (via btr_get_size()) try to acquire the tablespace latch (hangs, waiting on discard thread) DISCARD THREAD: wait on all pages from the tablespace to be unfixed in buf_LRU_remove_all_pages(); this wait never ends because the stats thread will never release the root page since it has hung trying to acquire the tablespace latch. The solution is to hook a ""wait for bg stats thread to stop using this table"" in discard tablespace codepath. We know bg stats will not pick up again the table after we have waited for it to stop using it because it only picks up tables under data dictionary latch and the discard is holding that latch for the duration where it acquires the tablespace latch and waits on all pages to be unfixed. Adding mtr testcase for this is not possible because DEBUG_SYNC() does not work for background threads. Approved by:	Sunny (via IM) "	594706eb5fda0251bba878fb905c2c23e5e86371
----------------------------
Bug 14333093 - MYSQL 5.6 - WINDOWS INSTALLER DOES PROPERLY INSTALL DEFAULT DATABASE FILES - Ensure that the User Configuration data directory WiX resource is produced before duplicate features are removed by CMake 	45eb7ccde93a1e3edf4e541f19c3038ec75db5de
----------------------------
BUG#14232958: MTS AND REPLICATE_REWRITE_DB OPTION MIGHT BREAK INTEGRITY OF DATA Rewrite databases rules were not considered on database assignment to multi-threaded slave workers could break data integrity due to non deterministic execution order. Improved multi-threaded slave workers assignment to also consider rewrite databases rules. @ internal/mysql-test/suite/i_rpl/r/rpl_mts_replicate_rewrite_db.result Test to check that execution order is preserved on regular tables when MTS and replicate-rewrite-db option are used together. @ internal/mysql-test/suite/i_rpl/t/rpl_mts_replicate_rewrite_db-slave.opt Test to check that execution order is preserved on regular tables when MTS and replicate-rewrite-db option are used together. @ internal/mysql-test/suite/i_rpl/t/rpl_mts_replicate_rewrite_db.test Test to check that execution order is preserved on regular tables when MTS and replicate-rewrite-db option are used together. @ internal/mysql-test/suite/i_rpl/r/rpl_mts_replicate_rewrite_db_tmp_table.result Test to check that execution order is preserved on temporary tables when MTS and replicate-rewrite-db option are used together. @ internal/mysql-test/suite/i_rpl/t/rpl_mts_replicate_rewrite_db_tmp_table-slave.opt Test to check that execution order is preserved on temporary tables when MTS and replicate-rewrite-db option are used together. @ internal/mysql-test/suite/i_rpl/t/rpl_mts_replicate_rewrite_db_tmp_table.test Test to check that execution order is preserved on temporary tables when MTS and replicate-rewrite-db option are used together. @ sql/log_event.h Fixed database assignment to multi-threaded slave workers when rewrite database rules are used. @ sql/log_event.cc Fixed database assignment to multi-threaded slave workers when rewrite database rules and temporary tables are used. @ sql/rpl_filter.h Added method Rpl_filter::is_rewrite_empty(). @ sql/rpl_filter.cc Added method Rpl_filter::is_rewrite_empty(). 	fb78626a0b490b1ab5afe3c4268207fb572b5e37
----------------------------
"Merge: f4047bf 2647f38 Upmerge from 5.6 (new man page ""mysql_config_editor"" in the spec file). "	3dd7feb4adb2a30660cc12603470b3b6a4e11e25
----------------------------
"Add the man page for the ""mysql_config_editor"" to the RPM spec file. "	2647f38416049c0074883e159c22242f38447332
----------------------------
Add a debug assertion in buf_page_get_io_fix() to help nail down Bug#14278519 CRASH OBSERVED IN INNODB.INNODB_STATS_AUTO_RECALC_LOTS ON VALGRIND RUN IN PB2 It would crash later (trying to dereference bpage) so this assertion is a non functional change. Also check if bpage is non NULL separately because buf_page_get_io_fix() really should not have been called here (buf_flush_try_yield(), buf0lru.cc): 408         if (bpage != 0 409             && processed >= BUF_LRU_DROP_SEARCH_SIZE 410             && buf_page_get_io_fix(bpage) == BUF_IO_NONE) { if bpage is NULL. If this changeset fixes Bug#14278519 (the test stops failing on PB2), then line 410 must have been executed before line 408! 	b04b3d028c80a75c303c77381e38194b30ac76e2
----------------------------
Bug#14113704 : A STAT ON A NON EXISTING FILE CREATING A FILE RECORD IN PFS Details: - While doing a stat of a file, even if file doesn't exist, its entries are being created in performance_schema tables. Fix: - While collecting information about a file for which stat is done, if file doesn't exist, destroy its collected information. 	a655de753df1119b96551bb85d0c1939765364c1
----------------------------
"BUG#13939940: SESSION-LEVEL LOW_PRIORITY_UPDATES DOES NOT WORK FOR INSERT BACKGROUND: As Per documentation low_priority_updates variable/option lowers priority of table modifying operations INSERT, UPDATE and DELETE as compared to SELECT queries. However, it was not working for INSERT statements (while it works fine for UPDATE and DELETE). ANALYSIS: At the parsing stage for tables to be modified by UPDATE or DELETE statements TL_WRITE_DEFAULT lock type is set. Before tables are locked, this type of lock is converted either to TL_WRITE or TL_WRITE_LOW_PRIORITY, depending on session's low_priority_updates value. For INSERT statement TL_WRITE_CONCURRENT_INSERT type of lock is set at the parsing stage and no similar conversion to TL_WRITE_LOW_PRIORITY happens depending on low_priority_updates value. FIX: This bug is fixed by introducing a new type of lock similar to TL_WRITE_DEFAULT -- TL_WRITE_CONCURRENT_DEFAULT, which is used in INSERT if no explicit lock type was specified, and is converted to TL_WRITE_CONCURRENT_INSERT or TL_WRITE_LOW_PRIORITY depending on low_priority_updates value, similarly to how it is done for TL_WRITE_DEFAULT. NOTE: Introducing a new lock type is required to override the effect of low_priority_updates when CONCURRENT is explicitly specified in the statement. For e.g LOAD DATA CONCURRENT, here overrides the effect of low_priority_updates. This is done to adhere to the principle that locks which are explicitly specified in the statement override locks which are implicitly prescribed by low_priority_updates. Quoting MySQL manual: ""If you specify HIGH_PRIORITY, it overrides the effect of the --low-priority-updates option if the server was started with that option."" "	0edcb309872adfe6053ccf8165df2c6933fb973a
----------------------------
Bug #14213784 FAILING ASSERTION: DICT_TF2_FLAG_IS_SET(INDEX->TABLE, DICT_TF2_TEMPORARY) Internal DDL transactions run (separately) within a read-only session should not inherit the session read only flag. Add trx_t::ddl (bool). Currently only set for row_drop_table_for_mysql() and trx_start_for_ddl(). It is reset at trx_commit(). If the flag is set then we clear the trx_t::read_only flag. rb://1164 Approved by Jimmy Yang. 	acc59c185a51a20ac55f4bedb0a10133e1bf813c
----------------------------
Bug#14062488 ASSERTION FAILURE IN THREAD 8096 IN FILE TRX0ROLL.CC LINE 275 HANDLER READ commands are sent to the storage engine with Sql_cmd_handler_read::execute() along with other commands that do an implicit commit first. Whereas the implicit commit checks that the XA state is not incompatible with reading data from a table, HANDLER READ commands do not do that.  This patch adds a check for XA state to Sql_cmd_handler_read::execute() similar to the one in sql_base.cc(4848) open_tables(). Approved by Jon Olav 	f8d76e83364746d89cc5692fb632fdeef17566ed
----------------------------
"BUG#11759333: SBR LOGGING WARNING MESSAGES FOR PRIMARY KEY UPDATES WITH A LIMIT OF 1 Problem: The unsafety warning for statements such as update...limit1 where pk=1 are thrown when binlog-format = STATEMENT,despite of the fact that such statements are actually safe. this leads to filling up of the disk space with false warnings. Solution: This is not a complete fix for the problem, but prevents the disks from getting filled up. This should therefore be regarded as a workaround. In the future this should be overriden by server general suppress/filtering framework. It should also be noted that another worklog is supposed to defeat this case's artificial unsafety. We use a warning suppression mechanism to detect warning flood, enable the suppression, and disable this when the average warnings/second has reduced to acceptable limits. Activation: The supression for LIMIT unsafe statements are activated when the last 50 warnings were logged in less than 50 seconds. Supression: Once activated this supression will prevent the individual warnings to be logged in the error log, but print the warning for every 50 warnings with the note: ""The last warning was repeated N times in last S seconds"" Noteworthy is the fact that this supression works only on the error logs and the warnings seen by the clients will remain as it is (i.e. one warning/ unsafe statement) Deactivation: The supression will be deactivated once the average # of warnings/sec have gone down to the acceptable limits. "	abf4b3fa6aab3dac2d532361b237ccbf6a1e633d
----------------------------
Fix for Bug #13111584 PERFORMANCE REGRESSION DUE TO SUBQUERY MATERIALIZATION: when there is choice between IN(subquery)->EXISTS and subquery materialization, 5.6.5 always chose the latter; this patch introduces a cost-based choice, controlled by a new switch: optimizer_switch='subquery_materialization_cost_based=on/off'; ON (the default): do cost-based choice; OFF: do subquery materialization (as in 5.6.5). See commit comment of item_subselect.cc for details. 	cedf0269d5b698278067397392bd57633c1a66d5
----------------------------
Bug#14218867 FAILING ASSERTION: !(TRX)->READ_ONLY IN SHOW ENGINE ALL STATUS XA transactions can be read-only and in prepared state. Approved by Jimmy Yang over IM. 	99cf381f823cec66c6fafae0084294903f18175c
----------------------------
"BUG#11759333: SBR LOGGING WARNING MESSAGES FOR PRIMARY KEY UPDATES WITH A LIMIT OF 1 Problem: The unsafety warning for statements such as update...limit1 where pk=1 are thrown when binlog-format = STATEMENT,despite of the fact that such statements are actually safe. this leads to filling up of the disk space with false warnings. Solution: This is not a complete fix for the problem, but prevents the disks from getting filled up. This should therefore be regarded as a workaround. In the future this should be overriden by server general suppress/filtering framework. It should also be noted that another worklog is supposed to defeat this case's artificial unsafety. We use a warning suppression mechanism to detect warning flood, enable the suppression, and disable this when the average warnings/second has reduced to acceptable limits. Activation: The supression for LIMIT unsafe statements are activated when the last 50 warnings were logged in less than 50 seconds. Supression: Once activated this supression will prevent the individual warnings to be logged in the error log, but print the warning for every 50 warnings with the note: ""The last warning was repeated N times in last S seconds"" Noteworthy is the fact that this supression works only on the error logs and the warnings seen by the clients will remain as it is (i.e. one warning/ unsafe statement) Deactivation: The supression will be deactivated once the average # of warnings/sec have gone down to the acceptable limits. "	d5163c901282e3ede01c3c28b4f1fe4246620c93
----------------------------
Bug #13789417: CHANGE SECURE_AUTH DEFAULT FROM FALSE TO TRUE IN MYSQL CLIENTS 1. The default for the MYSQL_SECURE_AUTH mysql_options() option is now TRUE. 2. The default for --secure-auth in mysql, the command line client, is now ON/TRUE. 	ef3723981ccfde6f0db416df56f3e7460f5d15aa
----------------------------
BUG#13969578: TEMPORARY TABLE IN A DATABASE ON A READ-ONLY INSTANCE CAN BE OVERWRITTEN Analysis: -------- Creation or modification of a persistent table by a non-super user is NOT ALLOWED in read_only mode. Only TEMPORARY tables are allowed to be created or modified in read_only mode. But the creation of a persistent table was being allowed when a temporary table of the same name existed. The routine which denies updating a non-temporary table in a read_only mode does not handle the case of creation of a regular table when a temporary table of the same exists. Fix: --- Handled the condition where an attempt is made to create a persistent table having the same name as that of the temporary table. Hence the creation of a persistent table by a non-super user when a temporary table of the same exists is denied under read_only mode. 	615163edd16b2c98734b16d68b8cf76ec87701e8
----------------------------
BUG#14272672: ALLOW NON-TRANSACTIONAL DML ON TEMPORARY TABLES WHEN ROW BINLOG FORMAT IS USED It should be possible to execute non-transactional DML on temporary tables when row binlog format is used since on that case updates are not logged. These updates were disallowed because all non-transactional DML generate error ER_GTID_UNSAFE_NON_TRANSACTIONAL_TABLE. Allow updates on non-transactional temporary tables with gtid-mode=ON and --disable-gtid-unsafe-statements when row binlog format is used and all non-transactional tables are temporary. 	173393875506bdd549f37d40e104bcc48ecccc89
----------------------------
"Bug #12998841: libmysql divulges plaintext password upon request in 5.5 1. Clear text password client plugin disabled by default. 2. Added an environment variable LIBMYSQL_ENABLE_CLEARTEXT_PLUGIN, that when set to something starting with '1', 'Y' or 'y' will enable the clear text plugin for all connections. 3. Added a new mysql_options() option : MYSQL_ENABLE_CLEARTEXT_PLUGIN that takes an my_bool argument. When the value of the argument is non-zero the clear text plugin is enabled for this connection only. 4. Added an enable-cleartext-plugin config file option that takes a numeric argument. If the numeric value of the numeric argument is non-zero the clear text plugin is enabled for the connection 5. Added a boolean command line option ""--enable_cleartext_plugin"" to mysql, mysqlslap and mysqladmin. When specified it will call mysql_options with the effect of #3 6. Added a new CLEARTEXT option to the connect command in mysqltest. When specified it will enable the cleartext plugin for usage. 7. Added test cases and updated existing ones that need the clear text plugin. "	31a9208bd09afd16ce540be2cd66c7059b7bdeb8
----------------------------
Bug#14195056 MAKE SURE UPGRADES SET STATS_PERSISTENT=0 IN ALL INNODB SYSTEM TABLES Analysis: STATS_PERSISTENT flag was not disabled in system tables such as 'slave_master_info', 'slave_worker_info', 'slave_relay_log_info'. mysql_upgrade CLI uses mysql_fix_privilege_tables_sql.c to make changes to mysql internal tables of previous mysql version. This is auto-generated from mysql_fix_privilege_tables.sql file. In order to make it work during upgrade procedure alter table statements needs to be added to mysql_fix_privilege_tables.sql file. Fix: mysql_system_tables.sql: Added STATS_PERSISTENT=0 to table creation flag while creating these internal tables. mysql_system_tables_fix.sql:Added ALTER TABLE statements such that during mysql_upgrade these flags are set on these internal tables. Additional Notes: Test script verifies only new database installation. Upgrade procedure is not tested as alter table is not allowed on information_schema tables. However, it can be manually verified by initializing db after changing flags(SET STATS_PERSISTENT=1) in <install-dir>/share/mysql_system_tables.sql(mimic old version) for above mentioned tables. Tables innodb_table_stats, innodb_index_stats did not have STATS_PERSISTENT=0 flag until patch 3690.1.40.(2012-04-24). Adding ALTER TABLE statements for these tables in mysql_system_tables_fix.sql to specify STATS_PERSISTENT=0 flag for mysql_upgrade 	e195a409318224a2917f0c38118a4d5e0ee3bfd3
----------------------------
Merge: 57e3569 015cef1 merged bug 13007062. null-merged anitha's test config file change 	57d88403707881bdf890b9c0736b8dba631c1b9c
----------------------------
Bug#14195056 MAKE SURE UPGRADES SET STATS_PERSISTENT=0 IN ALL INNODB SYSTEM TABLES Analysis: STATS_PERSISTENT flag was not disabled in system tables such as 'slave_master_info', 'slave_worker_info', 'slave_relay_log_info'. mysql_upgrade CLI uses mysql_fix_privilege_tables_sql.c to make changes to mysql internal tables of previous mysql version. This is auto-generated from mysql_fix_privilege_tables.sql file. In order to make it work during upgrade procedure alter table statements needs to be added to mysql_fix_privilege_tables.sql file. Fix: mysql_system_tables.sql: Added STATS_PERSISTENT=0 to table creation flag while creating these internal tables. mysql_system_tables_fix.sql:Added ALTER TABLE statements such that during mysql_upgrade these flags are set on these internal tables. Additional Notes: Test script verifies only new database installation. Upgrade procedure is not tested as alter table is not allowed on information_schema tables. However, it can be manually verified by initializing db after changing flags(SET STATS_PERSISTENT=1) in <install-dir>/share/mysql_system_tables.sql(mimic old version) for above mentioned tables. Tables innodb_table_stats, innodb_index_stats did not have STATS_PERSISTENT=0 flag until patch 3690.1.40.(2012-04-24). Adding ALTER TABLE statements for these tables in mysql_system_tables_fix.sql to specify STATS_PERSISTENT=0 flag for mysql_upgrade 	57e3569de4a1a9b31a8a1c6c21117c0e7d4db616
----------------------------
"ndb - fix ndb_blob_big to show only the variable where text is exactly ""max_allowwd_packet""(no prefix or suffix allowed) - this is a forward compatibility fix against 5.6 which add more variables with ""max_allowed_packet"" in the name "	6ee93c8ebbff13bbc6a19b7840d926dfbea72018
----------------------------
Fix Bug 14228928 - TURN INNODB_FT_ENABLE_DIAG_PRINT TO OFF BY DEFAULT rb://1122, approved by Sunny Bains 	743955c39acc4eb0cf57d8a18b1f26dc0069ae84
----------------------------
"Bug #11760365: SLAVE_SQL_ERRNO IS SOMETIMES SET TO MY_ERRNO Follow up patch to fix failing ""i_rpl.rpl_slave_init_errchk"" test script to work with ""rpl_crash_safe_relay-debug"" mode. Problem: ======= ""i_rpl.rpl_slave_init_errchk"" test script is failing on daily trunk under ""rpl_crash_safe_relay-debug"" combination as shown below perl mysql-test-run.pl --force --timer --debug-server --parallel=auto --experimental=collections/default.experimental --comment=rpl_crash_safe_relay-debug --vardir=var-rpl_crash_safe_relay-debug --suite=rpl --mysqld=--relay-log-info-repository=TABLE --skip-test-list=collections/disabled-daily.list Fix: ==== The above script tries to simulate error during slave init operation. And the debug simulataion was added only in ""sql/rpl_info_file.cc"" as shown below. bool Rpl_info_file::do_update_is_transactional() { DBUG_EXECUTE_IF(""simulate_update_is_transactional_error"", { return TRUE; }); return FALSE; } But when the test is invoked with above mentioned command line arguments the script was entering the following code  ""sql/rpl_info_table.cc"" and the debug simulation was missing over there and hence the test script was not able to catch the reported error. Added the missing debug error simulation statements. bool Rpl_info_table::do_update_is_transactional() "	39b33cd4f98204e6370b60c3a00dfd4e662de4d2
----------------------------
"Bug#13418619 - CONNECTION IS REFUSED WHILE EXECUTING ""FLUSH PRIVILEGES"" PROBLEM: Client gets connection error ""host is not allowed to connect to this mysql server"". This happens in a scenario as described in the bug where ""FLUSH PRIVILEGES"" is executing (such as from relay log) and the connection could happen. FIX: Root cause of the issue is a race involving the code paths of FLUSH PRIVILEGES execution instance and login connection threads. In the code path of FLUSH PRIVILEGES, we acquire acl_cache lock in acl_reload and then in acl_load, we set allow_all_hosts to zero. Then Host field of mysql.user is checked to see if the hostname is null or wildcard '%' and set allow_all_hosts to 1.Rebuild of elements in acl_check_hosts and acl_wild_hosts is skipped if allow_all_hosts is set and acl_reload drops the acl_cache lock. During above gap of reset of allow_all_hosts and acl_check_host may be executed which check allow_all_hosts and eventual code paths in it to return true thus causing the connection error. The fix is obtain the obtain acl_cache lock and then check allow_all_hosts in acl_check_host which will avoid this race leading to connection error. "	c10686e8ad860bb2deb5842acc4d7a5a7c041a64
----------------------------
Bug#14236124: WRONG CONNECTION ID (THREAD ID) IN THE GENERAL AND SLOW QUERY LOGS Thread-IDs can get very large; patch adjusts general-logging and slow query logging to reflect that and log those IDs correctly. 	aeb811f6f8e26977d24729af098841b0f8a50f54
----------------------------
"BUG#11765698: MYISAM SELECTS LOCKS INSERTS INSIDE PROCEDURE ONLY BUG#11757947: QUERY CACHE INVALIDATED IN INSERT...SELECT IF NO ROWS INSERTED BACKGROUND: When INSERTS to a large MyISAM table are coming from a stored procedure and a SELECT query is also running concurrently INSERTS gets locked by the select which should not have happened. When a normal INSERT is coming it does not get locked by the SELECT statement which is correct. ANALYSIS: This bug can be fixed by reverting two (rather complete) changes made by Sanja's fix for bug 14767 ""INSERT in SF + concurrent SELECTs may result in wrong data in query cache"" (revid: ""sp1r-bell@book.local-20060315171552-49188""). Change#1 in sql_yacc.yy: ------------------------ The fix for bug 14767 upgraded the lock type from TL_WRITE_CONCURRENT_INSERT to TL_WRITE_DEFAULT for inserts which were used in stored routines if we had a query cache enabled. In other words, it disabled concurrent inserts from stored routines in this case. This was necessary to prevent a race condition, when a concurrent SELECT sneaked in between the point where query cache was invalidated by insert in stored routine and the moment when statement that has called this routine unlocked tables, making insert results visible to other connections. In such a situation SELECT didn't see insert results, but still was stored in query cache and stayed there even after unlock, making SELECTs which followed to return stale results. The above change for bug 14767 is no longer required, as it was obsoleted by Davi's patch for bug 41098 ""Query Cache returns wrong result with concurrent insert"" (revid: ""davi.arnaut@sun.com-20090219210935-9vilvcisyyieffxl""). The latter disables caching of SELECTs for tables which have some concurrent inserts going on, thus making race described above impossible. So there is no need for disabling concurrent inserts from stored routines anymore. Change#2 in sql_parse.cc: ------------------------ The fix for bug 14767 also tried to address a race, similar to the one described above, which occurred for INSERT ... SELECT, in case when concurrent SELECT sneaked in between query_cache_invalidate3(), which happens in select_insert::send_eof(), and unlocking of tables  which back then has happened in dispatch_command(). This was done by calling for INSERT ... SELECTs which used concurrent inserts additional query_cache_invalidate() that was immediately followed by mysql_unlock_tables() (i.e. by making window for race condition smaller). Since fix for bug 41098 addresses this scenario as well (and in more correct way) this part of patch also became redundant. NOTE: ------------------------------------------------------------------- Additionally, if we remove this change#2 this bug BUG#11757947: QUERY CACHE INVALIDATED IN INSERT...SELECT IF NO ROWS INSERTED is also handled automatically. BACKGROUND OF BUG#11757947: When the query cache is enabled and an INSERT...SELECT query is executed that does not actually insert any rows, the query cache entries for the table mentioned in the INSERT still get invalidated. This is unnecessary and makes the query cache less effective. ANALYSIS: Change#2 made by the fix for bug 14767 is cause for this bug. Since this change#2 can be safely reverted as mentioned above, this bug is handled automatically. FIX OF BUG#11757947: Change#2 has been removed since this is no longer required as the patch for bug 41098 obsoletes the race mentioned above as well. ------------------------------------------------------------------ FIX FOR BUG#11765698: From above discussion, we can safely revert complete patch of bug 14767. However, one of the change from this patch is just refactoring a piece of code in sql_insert.cc file, which we can retain. The effect of this fix is to make inserts always concurrent with selects. "	e6f1fe6c07fcbccb09323a308cc0d03df5f23b69
----------------------------
Bug#14136937 SERVER DOESN'T WARN ABOUT STARTING WITH --SKIP-SECURE-AUTH No warning message gets generated at server start if it is started with secure_auth disabled. Fixed by adding appropriate logic to emit a warning message when server is started with --skip-secure-auth. Note : There is no test case for this bug, tested manually. 	4a51ca462672f3c7ce1c296b573a6f735ee809a2
----------------------------
Bug #14213568 ASSERTION FAILURE IN RENAME TABLE AFTER DISCARD TABLESPACE The design and intent of WL5522 and Online Index Rebuild is that a tablespace can be renamed and the dictionary restructured while it is discarded. The assertion found in this bug happened during Online Index Rebuild of a clustered index.  In order to support this, the attempt to update SYS_DATAFILES is skipped during the rename file portion of row_merge_rename_tables() which is part of ha_innobase:: commit_inplace_alter_table(). The RENAME TABLE command already worked while the tablespace is discarded.  Everything in the dictionary is renamed, but fil_rename_tablespace() is not called in dict_table_rename_in_cache() when the tablespace is discarded. Since a table can be renamed while discarded, it became obvious that whenever a remote tablespace is discarded, the associated link file should also be deleted. Previously, in the WL5980 patch, the link file was left behind when a tablespace was discarded. But since the discarded tablespace can be renamed it really makes no sense to leave a link file pointing to a tablespace file that does not exist. There was another assert during TRUNCATE so I had to add a protection in row_truncate_table_for_mysql() so that it does not attempt to truncate a tablespace that is discarded or missing. When adding a test script for this into innodb-wl5980-discard, I tried many different statements against local and remmote tablespaces that are both discarded and just plain missing. Tablespace configurations ========================= Local, Discarded Remote, Discarded Local, Missing Remote, Missing SQL Statements tried ==================== SELECT SHOW CREATE TABLE INSERT RENAME TABLE TRUNCATE TABLE ALTER TABLE ADD PRIMARY KEY, ALGORITHM=COPY ALTER TABLE ADD PRIMARY KEY, ALGORITHM=INPLACE ALTER TABLE KEY ROW_FORMAT=REDUNDANT, ALGORITHM=COPY ALTER TABLE KEY ROW_FORMAT=REDUNDANT, ALGORITHM=INPLACE ALTER TABLE KEY ROW_FORMAT=REDUNDANT, ALGORITHM=COPY ALTER TABLE KEY ROW_FORMAT=REDUNDANT, ALGORITHM=INPLACE The result file show that none of the statements above work on a tablespace that is missing.  But the follwong SQL work on a discarded tablespace; SHOW CREATE TABLE RENAME TABLE ALTER TABLE ADD PRIMARY KEY, ALGORITHM=INPLACE ALTER TABLE KEY ROW_FORMAT=REDUNDANT, ALGORITHM=INPLACE ALTER TABLE KEY ROW_FORMAT=REDUNDANT, ALGORITHM=INPLACE In fact, the inplace alter statements will create a new empty tablespace which is no longer marked as discarded. Approved by Sunny in rb:1120 	e7b4066e9a768a6c3b46e165faea901ab6263e4c
----------------------------
Fix Bug#14238097 OPTIMIZE TABLE DOES NOT UPDATE PERSISTENT STATISTICS OPTIMIZE TABLE leads to a code path where ha_innobase::analyze() is called but thd_sql_command() is not SQLCOM_ANALYZE. ha_innobase::analyze() calls ha_innobase::info() and the latter distinguishes if this is the ANALYZE command by using thd_sql_command(), but in the OPTIMIZE case it gets fooled. To solve this - resurrect ha_innobase::info_low() with the extra param which tells it if this is ANALYZE or not and use that param instead of checking whether thd_sql_command() is SQLCOM_ANALYZE. Thus: * Rename ha_innobase::info() to ha_innobase::info_low() and add an extra parameter to it (is_analyze) * Introduce a new method ha_innobase::info() which only calls ha_innobase::info_low(is_analyze=false) * From ha_innobase::analyze() call ha_innobase::info_low(is_analyze=true) 	9f85fe83e5e0867a1d31727308a8ac99b4257bf4
----------------------------
Updated internal/mysql-test/suite/i_rpl/t/disabled.def, with the eventum request# for rpl_max_allowed_packet_stress.test and also removed the entry for this test from disabled.def from rpl suite under non-internal directory. 	9639e60a658f85c868142e51973dd276fcdbd77f
----------------------------
Merge: cda292c 4d663f8 BUG#14137204 - VALGRIND ERRORS WHEN VALIDATING GTID_NEXT VALUES Upmerge from mysql-5.6->mysql-trunk 	b1bb940a28b84d80f733c294065d4b786b8c3022
----------------------------
BUG#14137204 - VALGRIND ERRORS WHEN VALIDATING GTID_NEXT VALUES Problem : The problem with this bug is the different way the string pointer is returned. So before the fix, the to make a new string the ptr() function was invoked which as per the definition directly returns a pinter without initializing the pointer which was causing the failure of the uninitialized value. c_ptr_safe on the otherhand is a refined way of string pointer initialization wherein the pointer is returned after it is initialized to 0. Solution : The problem was fixed by using the c_ptr_safe() function instead of the ptr() function. 	4d663f80b0f3ad9d9dce9b1ca18c2d54c28e2e7e
----------------------------
BUG#14116625 - GTID CODE: MAKE SKIP_WHITESPACE() MACRO USE MY_ISSPACE Problem : Gtid functions print out this (though its just a print,does not cause any server crash) Version: '5.6.6-m9-debug'  socket: ''  port: 3306  MySQL Community Server (GPL) <file_location>\isctype.c(56) : Assertion failed: (unsigned)(c + 1) <= 256 on executing : do gtid_subset((0xf3),('98@12@31 1130^45')); Problem is that on windows 0xf3 is getting extended to 0xfffffff3 on using the windows isspace() function giving the parse_error. Fix : The problem is fixed by using the my_isspace() instead of isspace() to solve the problem. 	87817ba899e1fc3cb8fb07d86c75602ad6ddddee
----------------------------
BUG#14221043: MYSQL_UPGRADE FAILS WHEN SERVER IS RUNNING WITH GTID-MODE=ON mysql_upgrade fails when server is running with gtid_mode=ON and --disable-gtid-unsafe-statements because system tables are stored using MyISAM. Changed default logging behaviour of mysql_upgrade, disabling it by default. Logging can still be enable using the option --write-binlog. Actions taken by mysql_upgrade depend on the server version, them should not be replicated to slaves. 	61d587dc02f07968814b6a68cda34625776a5d70
----------------------------
Fix test case so that we compare the file size and not dump the absolute size of the ibdata1 file. The absolute size can change due to different page size configuration. 	b856767f488b26fc3d29618eb1232a1a13472856
----------------------------
"Following changes included- Sunny's fix for to fix the timeout and assertion failure, added ""eits-tests-innodb-engine-debug"" to default.push, added rpl_max_allowed_packet_stress to disabled.def under i_rpl "	b798603d78c6933eadaa825ebe62f96b8f087003
----------------------------
"ndb test - remove unused ""own nodeid"" argument from NdbConfig (and thus NdbBackup) constructor. - remove unneccessary confusing construct when trying to figure out which nodeid to pass "	a8d6da9491eea2d56047652529a4f8cb5d7e58f7
----------------------------
Fixed more tests affected by sql-mode and binlog-row-event-max-size default change (WL#6216). 	0cd2ad151594b16be1e428ba9d2216ec94cc8033
----------------------------
Disabling rpl_max_allowed_packet_stress test on all platforms. 	db296c24997256b69b4668f480ca791d747edc51
----------------------------
WL#6292 - Make TIMESTAMP columns nullable by default. This worklog implements new behavior for TIMESTAMP columns, defined by CREATE TABLE, ALTER TABLE and CREATE SELECT commands. This is in effort to make TIMESTAMP columns behavior to be more closer to SQL standard. The change in behavior is as described below, Current behavior: ================= 1) Unlike all the other types, TIMESTAMP columns which are not explicitly specified as NULLable automatically get NOT NULL as attribute. 2) If the first TIMESTAMP column in table is not specified as NULLable and doesn't have explicit DEFAULT or ON UPDATE value specified it automatically gets DEFAULT NOW() ON UPDATE NOW() as attributes. 3) All other TIMESTAMP columns which are not NULLable and don't have explicit default specified get '0' as default value and treated as having explicit default value after that (i.e. if you don't provide explicit value for such a column when inserting into table no warning or error is emitted). New behavior: ============= 1) TIMESTAMP columns which are not explicitly specified as NOT NULL become NULLable. 2) No TIMESTAMP columns get DEFAULT NOW() or ON UPDATE NOW() attributes automatically, without them being explicitly specified. 3) Non-NULLable TIMESTAMP columns without explicit default value treated as having no default value. I.e. warning or error is emitted (depends on sql_mode) if we insert a row without providing and explicit value for such a column. In case when warning is emitted and not an error such a column will still get '0' if no explicit value was specified for it. A new command line option '--explicit_defaults_for_timestamp' is introduced for MySQL server to enable new behavior. The old behavior is kept as default, so that the existing applications assuming old semantics work without any changes. Replication slave applier thread is extended with new interface, such that the slave applies the logs with old behavior, if the logs are generated by master with older version than slave. MySQL system table definitions at scripts/* were updated, such that they work fine with old and new behavior with any change. MTR tests which use TIMESTAMP columns are also updated, such that the test works both in old and new behavior. This should help easy transition to new behavior going forward. This worklog addresses Bug#11762529 and Bug#13344629. 	daa4dddcdb11dea7324cb81efbfcaa0272c1199f
----------------------------
Patch for WL#6301 (Change default value for the 'bind-address' option). The patch consists of two parts: - the patch introduces a new special value for the bind-address option: * (a star). This value means, the server should listen to all network addresses, both IPv6 (if available) and IPv4. - the patch changes the bind-address default value to star (*). 	bd7374a4277dabda1e2118592f9d4dd778e3d9a9
----------------------------
Increase MaxNoOfConcurrentOperations in 'suite/ndb_big/my.cnf' in order to reduce failure rates for 'ndb_big.rqg_spj' which repeateadly encounters: 'Got temporary error 233 'Out of operation records in transaction coordinator (increase MaxNoOfConcurrentOperations)' ... Jonas has previously suggested to increase this in config file. 	e68b59d0b17e7b941a1305ffc138b0fb2d64cd2b
----------------------------
BUG#14136654: ASSERTION FAILED ON BINLOG.WRITE_ONE_EMPTY_GROUP_TO_CACHE() When a GTID was across multiple relay logs: RELAY LOG (X) GTID (EOF) RELAY LOG (X + 1) BEGIN INSERT COMMIT it was wrongly interpreted as a empty group. This happened when crash slave was used, on which configuration when PURGE logs is executed (on log rotate) a commit is done to ensure consistency of relay info, that when presented with only a GTID on group cache logged a empty group. Fixed MYSQL_BIN_LOG::commit() method to correctly handle the case where a GTID may start on relay log and end on different relay log file. 	cbe7cbf8fe2ad58595252c378b10c231ba25423c
----------------------------
Merge: 5d2958a 7dce976 Bug#11753779: MAX_CONNECT_ERRORS WORKS ONLY WHEN 1ST INC_HOST_ERRORS() IS CALLED. Description: Null merge from MySQL 5.5 to MySQL Trunk 	ec0ace5dd76d3d61c78619408b7bf09775113b92
----------------------------
Merge: 36b2d45 78dce2d5 Bug#11753779: MAX_CONNECT_ERRORS WORKS ONLY WHEN 1ST INC_HOST_ERRORS() IS CALLED. Description: Merge from MySQL 5.1 to MySQL 5.5 Reverting patch 3869 for bug#11753779 	7dce976744d947e537d570eac6f89cc6efa6b7e1
----------------------------
Bug#11753779: MAX_CONNECT_ERRORS WORKS ONLY WHEN 1ST INC_HOST_ERRORS() IS CALLED. Description: Reverting patch 3755 for bug#11753779 	78dce2d5c2e891151829724131953d14857f1167
----------------------------
part of WL#6347 InnoDB: Index level compression stats Introduce a config variable to enable/disable INFORMATION_SCHEMA.innodb_cmp_per_index (and INFORMATION_SCHEMA.innodb_cmp_per_index_reset). Collecting stats for those tables may have negative impact on performance so we switch them OFF by default. 	3fce7c2733711d80b96ab2a70b4ca564d716f1fa
----------------------------
Disabling rpl_max_allowed_packet_stress test on Solaris and Darwin,because it require around 6GB of free space and causing other tests to fail. 	a7e84b9a08707eb63d54348c4b9ec9a1bde227ae
----------------------------
Bug#13915200 SET GLOBAL DEBUG CAUSES CRASHES IN DBUG.C, RACE CONDITIONS (version 2, implemented review comments) Before this fix, numerous test scripts such as performance_schema.hostcache_*.test would fail with random crashes in the dbug code. These tests are very recent, and use SET GLOBAL DEBUG. SET GLOBAL DEBUG is implemented by calling Sys_var_dbug::global_update(), which calls DBUG_SET_INITIAL() in the dbug code. DBUG_SET_INITIAL modifies the global variable init_settings, and does this without any protection for race conditions. Other threads executing dbug code will read data from this global variable, while it is being changed concurrently, and crash. For example, DBUG_PRINT() very often crash while using memory from cs->stack->keywords, while the init_settings.keywords list is being manipulated to either free the list, add items or remove items. The fix for this bug is to actually protect init_settings against race conditions. Given that almost all the dbug code uses various members from cs->stack->xxxx, and that stack may well be the init_settings global stack bottom, all the dbug code is sensitive to race conditions. Given that SET GLOBAL DEBUG is a very rarely used statement, the solution implemented is as follows: - use a read lock when executing most dbug apis, and acquire the read lock at the top level. - the read lock is shared, so that many threads can still execute DBUG_XXX apis concurrently. - use a write lock when modifying the content of init_settings, which in practice is done only on DBUG_SET_INITIAL() and DBUG_END(). When a thread in the server executes SET GLOBAL DEBUG, this thread will block and wait for every other thread to exit the various DBUG_XXX apis called, if any, before proceeding (safely) to change the global debugging settings. 	dc896acfe9c354d8c64ac4c48e118cca7efd28f3
----------------------------
Remove Instance Config Wizard and it's associated UI elements from the Windows MSI package. 	8bf01e012f40a7c669265041cb823b06dfa2a18b
----------------------------
WL#6255: Avoid possible memory corruption. Ignore auto_increment_offset when adding an AUTO_INCREMENT column. innobase_build_col_map(): Do not write to altered_table->s->field[]. This means that we will use the default value of the column as the initial value for the AUTO_INCREMENT counter. 	cb791f39e13bbd5656e7c20142a6685b0eb4a0fa
----------------------------
BUG#12400221 - 60926: BINARY LOG EVENTS LARGER THAN MAX_ALLOWED_PACKET Description: fixing some failing tests on PB2. 	200753cbd6d7edc7501b197c1ee63cd553bc89a4
----------------------------
Merge: d6bf824 4a6211d Bug#11753779: MAX_CONNECT_ERRORS WORKS ONLY WHEN 1ST INC_HOST_ERRORS() IS CALLED. Description: Null merge from MySQL-5.5 to MySQL-Trunk 	e1b9102544dfdcadb52d26e52d7784df0a770f33
----------------------------
BUG#13854078. Fix the race condition for concurrent tests: Concurrent tests require two or more connections and at least one connection sends the statements in async mode (via send/reap command). We need to make sure that SET GTID_NEXT is completed for all connections before getting values of GTID variables and if COMMIT/ROLLBACK executed for any connection. 	6c341a2b1fc93055e5b00e16b0cf9ad83dcf634e
----------------------------
Merge: 5f658ee 27fede5 Manual merge from mysql-trunk. Note: failing i_rpl.rpl_row_max_allowed_packet test. 	c2484a4f645d50eaf72d8b6a87481bd683269cb7
----------------------------
Merge: 6c04186 3ec0a7e Bug#11753779: MAX_CONNECT_ERRORS WORKS ONLY WHEN 1ST INC_HOST_ERRORS() IS CALLED. Description: Merge from MySQL-5.1 to MySQL-5.5 	4a6211dd3c3203404b0dd485ab9e0bdbceca2b52
----------------------------
Merge: f87a4a5 6c04186 BUG#12400221 - 60926: BINARY LOG EVENTS LARGER THAN MAX_ALLOWED_PACKET Null merge from mysql-5.5->mysql-trunk 	6ea0b51115c26a39af411cb4b75685bf20e64e7d
----------------------------
Merge: 6aab1ce 1211b5d BUG#12400221 - 60926: BINARY LOG EVENTS LARGER THAN MAX_ALLOWED_PACKET Null merge from mysql-5.1->mysql-5.5 	6c04186299ddfdfb5ca1d237965fca3f07c7d888
----------------------------
Bug#11753779: MAX_CONNECT_ERRORS WORKS ONLY WHEN 1ST INC_HOST_ERRORS() IS CALLED. Issue       : Sequence of calling inc_host_errors() and reset_host_errors() required some changes in order to maintain correct connection error count. Solution    : Call to reset_host_errors() is shifted to a location after which no calls to inc_host_errors() are made. 	3ec0a7eb045d027cdf860228fa9b4d88f1f52b4e
----------------------------
WL#6255 rb:1105 Problem 20,21 fix. Check the maximum column prefix length when changing ROW_FORMAT or KEY_BLOCK_SIZE. innobase_check_column_length(): Replace table with max_col_len. ha_innobase::prepare_inplace_alter_table(): Compute max_col_len by invoking innobase_table_flags() when needed. Enforce the max_col_len also in existing indexes of the table. innobase_table_flags(): Remove the parameter name. Do not complain about badly formed FTS_DOC_ID_INDEX, unless the table is also to have FULLTEXT indexes. When complaining, use the dedicated error code ER_INNODB_FT_WRONG_DOCID_INDEX instead of the generic and misleading ER_WRONG_NAME_FOR_INDEX. prepare_inplace_alter_table_dict(): Add the parameters flags, flags2, so that innobase_table_flags() does not need to be invoked again. Its outcome can change if innodb_file_format is changed between calls. 	0f522c257c0d23517bc46198ccf7fdabeae28774
----------------------------
Merge: 8061765 46ca66b BUG#12400221 - 60926: BINARY LOG EVENTS LARGER THAN MAX_ALLOWED_PACKET Null merge from mysql-5.5 -> mysql-trunk 	0366c62369192156b81ed3b12eaeb2420c0b26d0
----------------------------
"Still work on getting the ""SPECIFIC-ULN/"" files into the build. ""INSTALL"" was wrong, happens too late, but ""CONFIGURE_FILES(... COPYONLY)"" should hopefully do it. Traditional RPMs need to be checked, the above might fix their issues. "	e28785eb2fd780fd16ce2d7803dfc7c8152bf06b
----------------------------
Merge: cf251d5 29c3f36 BUG#12400221 - 60926: BINARY LOG EVENTS LARGER THAN MAX_ALLOWED_PACKET Upmerge from mysql-5.5 -> mysql-trunk. 	cdc162ff7436c38c3be900407253cff46b30d6c9
----------------------------
Merge: 4f10632 6c03d09 BUG#12400221 - 60926: BINARY LOG EVENTS LARGER THAN MAX_ALLOWED_PACKET Upmerge from mysql-5.1 -> mysql-5.5 	46ca66b9f85e6c74532b52da688b3bce970c08d2
----------------------------
Merge: 0a8ae68 9aa79dc BUG#12400221 - 60926: BINARY LOG EVENTS LARGER THAN MAX_ALLOWED_PACKET Problem ======== Replication breaks in the cases if the event length exceeds the size of master Dump thread's max_allowed_packet. The reason why this failure is occuring is because the event length is more than the total size of the max_allowed_packet, on addition of the max_event_header length exceeds the max_allowed_packet of the DUMP thread. This causes the Dump thread to break replication and throw an error. That can happen e.g with row-based replication in Update_rows event. Fix ==== The problem is fixed in 2 steps: 1.) The Dump thread limit to read event is increased to the upper limit i.e. Dump thread reads whatever gets logged in the binary log. 2.) On the slave side we increase the the max_allowed_packet for the slave's threads (IO/SQL) by increasing it to 1GB. This is done using the new server option (slave_max_allowed_packet) included, is used to regulate the max_allowed_packet of the slave thread (IO/SQL) by the DBA, and facilitates the sending of large packets from the master to the slave. This causes the large packets to be received by the slave and apply it successfully. 	1211b5d50bb00935d07fb9eda2dd6821d8f1cac5
----------------------------
"Bug#14111678 PERFSCHEMA.SOCKET_SUMMARY_BY_EVENT_NAME_FUNC FAILS ON PB2 SPORADICALLY (a) In Mysql 5.5, the performance schema keeps global statistics in a generic way, keeping only the wait time spent on an instrument, in a global array, global_instr_class_waits_array, which supports the table EVENTS_WAITS_GLOBAL_BY_EVENT_NAME. (b) In Mysql 5.6, some (but not all) instruments have been improved to keep more details statistics, so that stats are kept in per instrument specific structures, such as PFS_file_stat, PFS_socket_stat. Regardless of where statistics are counted, the implementation of table EVENTS_WAITS_GLOBAL_BY_EVENT_NAME must consistent, so that: - (c) the memory buffers used to aggregate statistics, whether generic or per instrument type, used in ::make_row() - (d) the memory buffers reset, when executed TRUNCATE TABLE EVENTS_WAITS_GLOBAL_BY_EVENT_NAME, used in ::delete_all_rows() must be the same. As found during the analysis of this bug report, this is not the case for socket io: - table_ews_global_by_event_name::make_socket_row() uses PFS_instance_wait_visitor, which reads from both the global_instr_class_waits_array array and PFS_socket_class.m_socket_stat - table_ews_global_by_event_name::delete_all_rows() only resets global_instr_class_waits_array. This leads to incoherent statistics reported in table EVENTS_WAITS_GLOBAL_BY_EVENT_NAME. The immediate bug is caused by the discrepancy between (c) and (d), but in general there is much confusion in the code created by the current mix of the two designs (a) and (b). Given that the performance schema is likely to maintain detailed statistics for each kind of instruments, which are by definition specific to each instrument type, the design (a) which is good enough only to keep ""wait"" statistics, is abandonned, to the benefit of (b). As a result, this patch completely removes the performance schema buffer global_instr_class_waits_array. Statistics for each sub type of instrument are kept in per instrument structures, such as: - PFS_mutex_stat - PFS_rwlock_stat - PFS_cond_stat For native instruments such as table io and table lock, global statistics are already kept in global variables (unchanged). For the ""idle"" native instrument, global statistics are now kept in global_idle_stat. With this change: - the overall design and code gains more clarity - the overall structure is easier to extend for enhancements - the memory footprint is decreased, due to unused / duplicate structures found in the existing code (PFS_instr::m_wait_stat) that got removed. - the performance schema overhead is reduced, since less CPU is needed in destroy() functions for instruments, which now only update statistics in 1 place instead of 2. The global aggregation is based on the aggregation by instance and class. For statistics by thread / account / user / host, the design (a) is maintained, as the aggregation by thread is orthogonal to the aggregation by instances. "	f82dcccc67f9b8448df05a19db130656c0cea1fe
----------------------------
BUG#12980522 - MULTI-UPDATE REFERENCING VIEW IS BLOCKED BY --READ-ONLY WITHOUT GOOD REASON BACKGROUND: Multi-update which references view in its main JOIN but doesn't update it, can be blocked by --read-only/@@read_only=1 mode even though it updates only temporary tables. This should not be happening (and is not happening if the view is replaced by normal table). ANALYSIS: In mysql_multi_update_prepare() function, updating variable is correctly set to 0 for all non-temporary tables that are not getting updated. But for view this is not happening. This value is not correctly set for views. FIX: This bug is fixed by correctly setting the updating variable to 0 if the table is a view as it is correctly set for the tables comprising the view. 	d95a606de6877c491561e2cdb14ddd248d943a03
----------------------------
Bug#13804744 INCONSAISTENT REQUIREMENT OF ENGINE= CLAUSE WHEN DEFAULT STORAGE_ENGINE IS USED: Added test case 	7d32c7052ae911df2773f8661503f9c246345db1
----------------------------
Improved the test performance_schema.sizing_growth robustness, again. Fixed files_per_share to 3 	bfff4a10c14f2620f32ce198e31d799f8adbfd98
----------------------------
Bug#14101563 - ASSERTION WHEN TABLE CANNOT BE CREATED DUE TO WARNINGS. PROBLEM: When table is created under innodb with innodb_file_per_table=0 and row_format=dynamic, an assertion is triggered under the debug build.In the case of release builds, error is returned instead of of a warning. FIX: The root cause for cause of assertion is because the status of the diagnostic area is set to DA_ERROR. This happens because when sql_mode is set to STRICT_TRANS_TABLES, we set the flag thd->abort_on_warning. In ha_innobase::create, the create options are validated only when innodb_strict_mode is on and error is propagated. When an warning is logged for row_file_format being off when row_format is dynamic, the thd->abort_on_warning and sql mode being STRICT_TRANS_TABLES causes DA_ERROR to be set in the diagnostic area and the innodb table creation continues assuming row_format=compact and success is returned.When my_ok is called, it asserts under debug builds since DA_ERROR is set in diagnostic area. The fix for the bug is to not to set thd->abort_on_warning irrespective of whether sql_mode is set to STRICT_TRANS_TABLES or not for innodb create. For validation of create option under innodb, innodb_strict_mode needs to be set. 	96b0961abebfc6a30202fe0e7f349c626f8e614b
----------------------------
Improved the test robustness of performance_schema.sizing_growth, adjusted mutex_per_share heuristic 	aa00fec7b3b8424eda5f976893e1eea27656a753
----------------------------
"WL#6161 Integrating with InnoDB codebase in MySQL 5.5 Changes in the InnoDB codebase required to compile and integrate the MEB codebase with MySQL 5.5. @ storage/innobase/btr/btr0btr.c Excluded buffer pool usage from MEB build. buf_pool_from_bpage calls are in buf0buf.ic, and the buffer pool functions from that file are disabled in MEB. @ storage/innobase/buf/buf0buf.c Disabling more buffer pool functions unused in MEB. @ storage/innobase/dict/dict0dict.c Disabling dict_ind_free that is unused in MEB. @ storage/innobase/dict/dict0mem.c The include #include ""ha_prototypes.h"" Was causing conflicts with definitions in my_global.h Linking C executable mysqlbackup libinnodb.a(dict0mem.c.o): In function `dict_mem_foreign_table_name_lookup_set': dict0mem.c:(.text+0x91c): undefined reference to `innobase_get_lower_case_table_names' libinnodb.a(dict0mem.c.o): In function `dict_mem_referenced_table_name_lookup_set': dict0mem.c:(.text+0x9fc): undefined reference to `innobase_get_lower_case_table_names' libinnodb.a(dict0mem.c.o): In function `dict_mem_foreign_table_name_lookup_set': dict0mem.c:(.text+0x96e): undefined reference to `innobase_casedn_str' libinnodb.a(dict0mem.c.o): In function `dict_mem_referenced_table_name_lookup_set': dict0mem.c:(.text+0xa4e): undefined reference to `innobase_casedn_str' collect2: ld returned 1 exit status make[2]: *** [mysqlbackup] Error 1 innobase_get_lower_case_table_names innobase_casedn_str are functions that are part of ha_innodb.cc that is not part of the build dict_mem_foreign_table_name_lookup_set function is not there in the current codebase, meaning we do not use it in MEB. @ storage/innobase/fil/fil0fil.c The srv_fast_shutdown variable is declared in srv0srv.c that is not compiled in the mysqlbackup codebase. This throws an undeclared error. From the Manual --------------- innodb_fast_shutdown -------------------- The InnoDB shutdown mode. The default value is 1 as of MySQL 3.23.50, which causes a Ã¢â‚¬Å“fastÃ¢â‚¬ï¿½ shutdown (the normal type of shutdown). If the value is 0, InnoDB does a full purge and an insert buffer merge before a shutdown. These operations can take minutes, or even hours in extreme cases. If the value is 1, InnoDB skips these operations at shutdown. This ideally does not matter from mysqlbackup @ storage/innobase/ha/ha0ha.c In file included from /home/narayanan/mysql-server/mysql-5.5-meb-rel3.8-innodb-integration-1/storage/innobase/ha/ha0ha.c:34:0: /home/narayanan/mysql-server/mysql-5.5-meb-rel3.8-innodb-integration-1/storage/innobase/include/btr0sea.h:286:17: error: expected Ã¢â‚¬Ëœ=Ã¢â‚¬â„¢, Ã¢â‚¬Ëœ,Ã¢â‚¬â„¢, Ã¢â‚¬Ëœ;Ã¢â‚¬â„¢, Ã¢â‚¬ËœasmÃ¢â‚¬â„¢ or Ã¢â‚¬Ëœ__attribute__Ã¢â‚¬â„¢ before Ã¢â‚¬Ëœ*Ã¢â‚¬â„¢ token make[2]: *** [CMakeFiles/innodb.dir/home/narayanan/mysql-server/mysql-5.5-meb-rel3.8-innodb-integration-1/storage/innobase/ha/ha0ha.c.o] Error 1 make[1]: *** [CMakeFiles/innodb.dir/all] Error 2 make: *** [all] Error 2 # include ""sync0rw.h"" is excluded from hotbackup compilation in dict0dict.h This causes extern rw_lock_t*	btr_search_latch_temp; to throw a failure because the definition of rw_lock_t is not found. @ storage/innobase/include/buf0buf.h Excluding buffer pool functions that are unused from the MEB codebase. @ storage/innobase/include/buf0buf.ic replicated the exclusion of #include ""buf0flu.h"" #include ""buf0lru.h"" #include ""buf0rea.h"" by looking at the current codebase in <meb-trunk>/src/innodb @ storage/innobase/include/dict0dict.h dict_table_x_lock_indexes, dict_table_x_unlock_indexes, dict_table_is_corrupted, dict_index_is_corrupted, buf_block_buf_fix_inc_func are unused in MEB and was leading to compilation errors and hence excluded. @ storage/innobase/include/dict0dict.ic dict_table_x_lock_indexes, dict_table_x_unlock_indexes, dict_table_is_corrupted, dict_index_is_corrupted, buf_block_buf_fix_inc_func are unused in MEB and was leading to compilation errors and hence excluded. @ storage/innobase/include/log0log.h /home/narayanan/mysql-server/mysql-5.5-meb-rel3.8-innodb-integration-1/storage/innobase/include/log0log.h: At top level: /home/narayanan/mysql-server/mysql-5.5-meb-rel3.8-innodb-integration-1/storage/innobase/include/log0log.h:767:2: error: expected specifier-qualifier-list before Ã¢â  ‚¬Ëœmutex_tÃ¢â‚¬â„¢ mutex_t definitions were excluded as seen from ambient code hence excluding definition for log_flush_order_mutex also. @ storage/innobase/include/os0file.h Bug in InnoDB code, create_mode should have been create. @ storage/innobase/include/srv0srv.h In file included from /home/narayanan/mysql-server/mysql-5.5-meb-rel3.8-innodb-integration-1/storage/innobase/buf/buf0buf.c:50:0: /home/narayanan/mysql-server/mysql-5.5-meb-rel3.8-innodb-integration-1/storage/innobase/include/srv0srv.h: At top level: /home/narayanan/mysql-server/mysql-5.5-meb-rel3.8-innodb-integration-1/storage/innobase/include/srv0srv.h:120:16: error: expected Ã¢â‚¬Ëœ=Ã¢â‚¬â„¢, Ã¢â‚¬Ëœ,Ã¢â‚¬â„¢, Ã¢â‚¬Ëœ;Ã¢â‚¬â„¢, Ã¢â‚¬ËœasmÃ¢â‚¬â„¢ or Ã¢â‚¬Ëœ__attribute__Ã¢â‚¬â„¢ before Ã¢â‚¬Ëœsrv_use_native_aioÃ¢â‚¬â„¢ srv_use_native_aio - we do not use native aio of the OS anyway from MEB. MEB does not compile InnoDB with this option. Hence disabling it. @ storage/innobase/include/trx0sys.h [ 56%] Building C object CMakeFiles/innodb.dir/home/narayanan/mysql-server/mysql-5.5-meb-rel3.8-innodb-integration-1/storage/innobase/trx/trx0sys.c.o /home/narayanan/mysql-server/mysql-5.5-meb-rel3.8-innodb-integration-1/storage/innobase/trx/trx0sys.c: In function Ã¢â‚¬Ëœtrx_sys_read_file_format_idÃ¢â‚¬â„¢: /home/narayanan/mysql-server/mysql-5.5-meb-rel3.8-innodb-integration-1/storage/innobase/trx/trx0sys.c:1499:20: error: Ã¢â‚¬ËœTRX_SYS_FILE_FORMAT_TAG_MAGIC_NÃ¢â‚¬â„¢   undeclared (first use in this function) /home/narayanan/mysql-server/mysql-5.5-meb-rel3.8-innodb-integration-1/storage/innobase/trx/trx0sys.c:1499:20: note: each undeclared identifier is reported only once for  each function it appears in /home/narayanan/mysql-server/mysql-5.5-meb-rel3.8-innodb-integration-1/storage/innobase/trx/trx0sys.c: At top level: /home/narayanan/mysql-server/mysql-5.5-meb-rel3.8-innodb-integration-1/storage/innobase/include/buf0buf.h:607:1: warning: Ã¢â‚¬Ëœbuf_block_buf_fix_inc_funcÃ¢â‚¬â„¢ declared Ã¢â‚¬ËœstaticÃ¢â‚¬â„¢ but never defined make[2]: *** [CMakeFiles/innodb.dir/home/narayanan/mysql-server/mysql-5.5-meb-rel3.8-innodb-integration-1/storage/innobase/trx/trx0sys.c.o] Error 1 unused calls excluded to enable compilation @ storage/innobase/mem/mem0dbg.c excluding #include ""ha_prototypes.h"" that lead to definitions in ha_innodb.cc @ storage/innobase/os/os0file.c InnoDB not compiled with aio support from MEB anyway. Hence excluding this from the compilation. @ storage/innobase/page/page0zip.c page0zip.c:(.text+0x4e9e): undefined reference to `buf_pool_from_block' collect2: ld returned 1 exit status buf_pool_from_block defined in buf0buf.ic, most of the file is excluded for compilation of MEB @ storage/innobase/ut/ut0dbg.c excluding #include ""ha_prototypes.h"" since it leads to definitions in ha_innodb.cc innobase_basename(file) is defined in ha_innodb.cc. Hence excluding that also. @ storage/innobase/ut/ut0ut.c cal_tm unused from MEB, was leading to earnings, hence disabling for MEB. "	f29bfa7eee2edc9e54b1468937ee508e5131dd8b
----------------------------
Change classification of SPJ 'out of memory/resources' error from 'permanent' to 'temporary' resource errors. Also change error text for SOJ-error 20006 to contain 'LongMessageBuffer' as this is the config variable which has to be adjusted to avoid this error. 	d2a49fdfc27b62c9cf9b6ed778d2a304b70510f4
----------------------------
Improved the test robustness for performance_schema.sizing_growth 	595167001fe24e15ed48bf1a44a8d60bc093e6ea
----------------------------
"Ignore (bzr) the new component ""client/mysql_config_editor"", helpful for those who build within the source tree. "	8b6560af1df2118f59df10c7ccce71c9b4584b72
----------------------------
Bug#14152665 - VALGRIND: DEFINITELY LOST AT MALLOC FROM FILESORT_BUFFER::ALLOC_SORT_BUFFER Fixed a memory leak that was introduced by WL#6071. The leak was visible on the main.server_uuid and main.key tests with the --valgrind flag. 	2fc69f43ae7a9aa8196bd789ce4a195a7f627643
----------------------------
Merge: 1bf83fa 6c03d09 BUG#12400221 - 60926: BINARY LOG EVENTS LARGER THAN MAX_ALLOWED_PACKET Upmerge from mysql-5.1 -> mysql-5.5 	29c3f369737d342bab49c2efd3dfc7363d72eae7
----------------------------
WL#6255 ALTER_ADD_COLUMN (ALTER TABLE ... ADD COLUMN) innobase_build_col_map_add(): Convert a default value of an ADD COLUMN to the InnoDB format. ha_innobase_inplace_ctx(): Add add_cols. innobase_build_col_map(), row_merge_build_indexes(), row_log_table_apply(), row_build(), row_log_table_apply_convert_mrec(), row_log_table_apply_insert(), row_log_table_apply_update(), row_log_table_apply_op(), row_log_table_apply_ops(), row_merge_read_clustered_index(): Add the parameter add_cols. prepare_inplace_alter_table_dict(): When rebuilding a table, make it a *.ibd file if the original table was in an *.ibd file, or if innodb_file_per_table=1. 	61edd4daf370728236e4f1a45ae5a887298fe64b
----------------------------
Merge: ee8da495 7683f40 WL#6135 PERFORMANCE_SCHEMA ENABLED BY DEFAULT Merge mysql-trunk-wl6135 --> mysql-trunk 	b26473d632502a0b627b06382d6e2f7fe33aeb34
----------------------------
Merge: 918ae86 2ba7bad BUG#13779291: RACE CONDITION AROUND ROTATE RELAY LOGS & FLUSH LOGS Problem: Replication locks are poorly implemented. In particular: - locks are undocumented - there are some missing assertions in some functions that require a lock to be taken - some function names are overloaded unnecessarily so that it is hard to grep for places where a particular function is invoked - some variable names could be more descriptive - we have protocols controlling which locks to hold before invoking particular functions (but the protocols are often not spelt out explicitly or ensured by assertions). change_master breaks the protocol for init_relay_log_pos by not taking rli.data_lock. this was not detected previously because of missing assertions. one consequence is that there is a race where show slave status can read relay log position/file name while change master is modifying them. Fix: This solution is divided into 8 parts, each one on its one commit with a detailed commit message. 	b022b522ab486eec8f98538129841556cdfa4464
----------------------------
WL#6301: Change default value for the 'bind-address' option. The patch temporarily reverts the default value to 0.0.0.0. 	55e020cb03ddcb505266d9665196e8f36f8ee2f6
----------------------------
WL#6216 - Changes to Server defaults in 5.6 General changes: back_log, flush_time, join_buffer_size, max_allowed_packet, max_connect_errors, sql_mode. 	94943075ebc01c452adb15ac0b9aa0345f3daa14
----------------------------
WL#6135 PERFORMANCE_SCHEMA ENABLED BY DEFAULT Improved the test suite. Fixed the test sizing_high to be more robust, and less platform dependent. 	ccd21ef92e72d561fa03e89cbeed04f0ddd22dd4
----------------------------
WL#6135 PERFORMANCE_SCHEMA ENABLED BY DEFAULT Removed --table-cache, improved tests. 	1da97c291720a5c94669f793528701de0339d763
----------------------------
Bug 14116252 - CANNOT BUILD ARCHIVE ENGINE WHEN WITH_PERFSCHEMA_STORAGE_ENGINE=0 Fixed a build break with compiling without the performance schema, instrumentation should be protected by HAVE_PSI_INTERFACE 	4e9083853de55d1577bd94d18775d0a916fecf99
----------------------------
Patch for WL#6301 (Change default value for the 'bind-address' option). The patch changes the bind-address default value (from '0.0.0.0' to '::') and does the following cosmetic changes: - it adds a startup warning if the server failed to reset the IPV6_V6ONLY flag on the server socket; - it uses vio_getnameinfo() instead of vio_get_normalized_ip_string() to print out IP addresses on startup. That's needed in order to output IPv4-mapped IPv6 addresses properly (vio_get_normalized_ip_string() converts an IPv4-mapped IPv6 address to regular IPv4 address). 	7f203d10f1744cd47d3d25e01a708d6eccbea75f
----------------------------
Bug #14134640: INCORRECT DEFINITION OF TABLE PERFORMANCE_SCHEMA.SESSION_CONNECT_ATTRS Changed the expected column name to the one created by the init scripts (PROCESSLIST_ID). 	6c59b75032b039d9aa2b66ea4ee990eb01712dc2
----------------------------
Merge: e06beb8 270f466 BUG#13779291: RACE CONDITION AROUND ROTATE RELAY LOGS & FLUSH LOGS Problem: Replication locks are poorly implemented. In particular: - locks are undocumented - there are some missing assertions in some functions that require a lock to be taken - some function names are overloaded unnecessarily so that it is hard to grep for places where a particular function is invoked - some variable names could be more descriptive - we have protocols controlling which locks to hold before invoking particular functions (but the protocols are often not spelt out explicitly or ensured by assertions). change_master breaks the protocol for init_relay_log_pos by not taking rli.data_lock. this was not detected previously because of missing assertions. one consequence is that there is a race where show slave status can read relay log position/file name while change master is modifying them. Fix: This solution is divided into 8 parts, each one on its one commit with a detailed commit message. 	2ba7bad304c6b733188920758918332aa2fe84e9
----------------------------
WL#6082 Improve the Disk-Sweep Multi-Range Read cost model Patch 6: The DS-MRR model assumes everything on disk DS-MRR can improve performance when most of the data for the query needs to be read from a hard disk. When all data is in memory the extra sorting will just add overhead. The relative overhead will be largest for small queries reading few records due to the need for setting up an extra handler to the storage engine, configure and allocate the sort buffer, and sort the records. With the current cost model we do not know whether data is in memory or on disk. So to avoid that DS-MRR is used when it is likely that the data is in memory the following heuristic is implemented: The cost based DS-MRR will not be used when: -the size of the table is smaller than the memory buffer of the storage engine (or smaller than 100 MB if we do not have information about the storage engine buffer). -the scan will retrieve less than 50 records. 	77059678d803dd8ba71a2823d5282d76a84d2887
----------------------------
Bug #13485416: CRASH WITH SMALL MAX_SORT_LENGTH AND GROUP BY AND LIMIT Sort keys for e.g. filesort are created by Field::sort_string(uchar*,uint), where the uint argument is ignored. But the three callers of the function obviously assume the opposite: when max_sort_length is less than the pack size of the value to be sorted by, there will always be a buffer overrun. The fix is to: - Rename Field::sort_string() to Field::make_sort_key(), because the latter describes what the function does. - Make sure we always respect the length argument for all implementations of the interface Field_*::make_sort_key(). - Test all implementations of make_sort_key with unit tests. Some implementations need to be rewritten (i.e. code in platform dependent #ifdef's) in order to be completely tested. 	854d4b0eb3c83ef804e4515f6ee2d2bc1cf74b24
----------------------------
Merge: 35d4c18 9aa79dc BUG#12400221 - 60926: BINARY LOG EVENTS LARGER THAN MAX_ALLOWED_PACKET Problem ======== Replication breaks in the cases if the event length exceeds the size of master Dump thread's max_allowed_packet. The reason why this failure is occuring is because the event length is more than the total size of the max_allowed_packet, on addition of the max_event_header length exceeds the max_allowed_packet of the DUMP thread. This causes the Dump thread to break replication and throw an error. That can happen e.g with row-based replication in Update_rows event. Fix ==== The problem is fixed in 2 steps: 1.) The Dump thread limit to read event is increased to the upper limit i.e. Dump thread reads whatever gets logged in the binary log. 2.) On the slave side we increase the the max_allowed_packet for the slave's threads (IO/SQL) by increasing it to 1GB. This is done using the new server option (slave_max_allowed_packet) included, is used to regulate the max_allowed_packet of the slave thread (IO/SQL) by the DBA, and facilitates the sending of large packets from the master to the slave. This causes the large packets to be received by the slave and apply it successfully. 	6c03d09e2e96bed671675f1882e6ab1ff821d50c
----------------------------
WL#5666: Tuning adaptive flushing rb://1000 approved by: Sunny Bains Changes in adaptive flushing based on work by Dimtri. New Parameters: =============== innodb_adaptive_flushing_lwm: low water mark in %age of log capacity at which adaptive flushing kicks in. Default 10: Range 0 - 70 (note it is %age of log_capacity instead of max_async_age for user friendliness) innodb_max_dirty_pages_pct_lwm: low water mark of dirty pages in %age where preflushing to control dirty page ratio kicks in. Default 0 (which has the special meaning of this value having no effect). Range 0 - 99 innodb_max_io_capacity: The limit upto which we are allowed to stretch io_capacity in case of emergency. Default: 400 (which is 2X of default innodb_io_capacity). Range 100 - ~0 innodb_flushing_avg_loops: Number of iterations for which we keep the previously calculated snapshot of the flushing state. This variable is roughly a measure of how smooth you want the transition in the flushing activity to be. The higher the value the smoother will be the transition in flushing in face of rapidly changing workload. A lower value implies that the flushing algorithm is more responsive but it also means that flushing acitivity can become spiky when confronted with a quickly changing workload. Default value is 30 and permissible range is 1 – 1000. All parameters are dynamic. Existing Parameters: ==================== innodb_adaptive_flushing: same as before. Only now it will use the new formula. innodb_io_capacity: same as before. But now tied to innodb_max_io_capacity. If user sets innodb_max_io_capacity < innodb_io_capacity a warning will be issued and innodb_max_io_capacity will be set equal to innodb_io_capacity. If user sets innodb_io_capacity > innodb_max_io_capacity a warning will be issued and innodb_io_capacity will be set equal to innodb_max_io_capacity. innodb_max_dirty_pages_pct: same as before. But now tied to innodb_max_dirty_pages_pct_lwm. If user sets innodb_max_dirty_pct < innodb_max_dirty_pages_pct_lwm a warning will be issued and innodb_max_dirty_pages_pct_lwm will be lowered to new innodb_max_dirty_pages_pct. If user sets innodb_max_dirty_pct_lwm > innodb_max_dirty_pages_pct a warning will be issued and innodb_max_dirty_pages_pct_lwm will be set equal to innodb_max_dirty_pages_pct. 	7c8e9b5fdbb95f2948adb8ae78b634c2db0e140e
----------------------------
"part of WL#6189 Turn InnoDB persistent statistics ON by default Split the two statements out of ""check_stats"" in innodb_stats_auto_recalc_on_nonexistent.test It emits this error on linux/gcov only: innodb.innodb_stats_auto_recalc_on_nonexistent w5 [ fail ] Test ended at 2012-05-29 18:40:37 CURRENT_TEST: innodb.innodb_stats_auto_recalc_on_nonexistent mysqltest: At line 16: query '$check_stats' failed: 1064: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'SELECT COUNT(*) FROM mysql.innodb_index_stats WHERE table_name = 't'' at line 1 The result from queries just before the failure was: Test with default setting CREATE TABLE t (a INT, PRIMARY KEY (a)) ENGINE=INNODB; - saving '/ramdisk/mtr-752/var-ps/5/log/innodb.innodb_stats_auto_recalc_on_nonexistent/' to '/ramdisk/mtr-752/var-ps/log/innodb.innodb_stats_auto_recalc_on_nonexistent/' "	ef1479a9933ff1d0df25e6cf37071fd6d2ff5a7a
----------------------------
part of WL#6189 Turn InnoDB persistent statistics ON by default Enable innodb_stats_auto_recalc_on_nonexistent on non-16k pages too because it does not print any numbers which depend on the page size. 	ef4e1dffef34a97fd40a0fd260ac07c887a0b313
----------------------------
Bug#14003080:65104: MAX_USER_CONNECTIONS WITH PROCESSLIST EMPTY Analysis: ------------- If server is started with limit of MAX_CONNECTIONS and MAX_USER_CONNECTIONS then only MAX_USER_CONNECTIONS of any particular users can be connected to server and total MAX_CONNECTIONS of client can be connected to server. Server maintains a counter for total CONNECTIONS and total CONNECTIONS from particular user. Here, MAX_CONNECTIONS of connections are created to server. Out of this MAX_CONNECTIONS, connections from particular user (say USER1) are also created. The connections from USER1 is lesser than MAX_USER_CONNECTIONS. After that there was one more connection request from USER1. Since USER1 can still create connections as he havent reached MAX_USER_CONNECTIONS, server increments counter of CONNECTIONS per user. As server already has MAX_CONNECTIONS of connections, next check to total CONNECTION count fails. In this case control is returned WITHOUT decrementing the CONNECTIONS per user. So the counter per user CONNECTIONS goes on incrementing for each attempt until current connections are closed. And because of this counter per CONNECTIONS reached MAX_USER_CONNECTIONS. So, next connections form USER1 user always returns with MAX_USER_CONNECTION limit error, even when total connection to sever are less than MAX_CONNECTIONS. Fix: ------------- This issue is occurred because of not handling counters properly in the server. Changed the code to handle per user connection counters properly. 	ca9a3a8915455ad2069572235f743a3dff1f6d5e
----------------------------
Bug#14003080:65104: MAX_USER_CONNECTIONS WITH PROCESSLIST EMPTY Analysis: ------------- If server is started with limit of MAX_CONNECTIONS and MAX_USER_CONNECTIONS then only MAX_USER_CONNECTIONS of any particular users can be connected to server and total MAX_CONNECTIONS of client can be connected to server. Server maintains a counter for total CONNECTIONS and total CONNECTIONS from particular user. Here, MAX_CONNECTIONS of connections are created to server. Out of this MAX_CONNECTIONS, connections from particular user (say USER1) are also created. The connections from USER1 is lesser than MAX_USER_CONNECTIONS. After that there was one more connection request from USER1. Since USER1 can still create connections as he havent reached MAX_USER_CONNECTIONS, server increments counter of CONNECTIONS per user. As server already has MAX_CONNECTIONS of connections, next check to total CONNECTION count fails. In this case control is returned WITHOUT decrementing the CONNECTIONS per user. So the counter per user CONNECTIONS goes on incrementing for each attempt until current connections are closed. And because of this counter per CONNECTIONS reached MAX_USER_CONNECTIONS. So, next connections form USER1 user always returns with MAX_USER_CONNECTION limit error, even when total connection to sever are less than MAX_CONNECTIONS. Fix: ------------- This issue is occurred because of not handling counters properly in the server. Changed the code to handle per user connection counters properly. 	17117e1774e7a523f55c6a13a32f4c41a63b6ee6
----------------------------
"Use a dedicated trx in dict_stats_drop_index() instead of prebuilt->trx because prebuilt->trx is not committed and the following scenario causes a lock wait timeout: SET GLOBAL innodb_stats_persistent=1; CREATE TABLE t1 (i INT PRIMARY KEY) ENGINE=InnoDB; CREATE TABLE t2 (i INT, FOREIGN KEY (i) REFERENCES t1 (i)) ENGINE=InnoDB; CREATE INDEX ind2 ON t2(i); The CREATE INDEX command drops the implicitly added index ""i"" on t2 and tries to add a new index before committing the trx. So we end up with DELETE FROM mysql.innodb_index_stats dangling uncommitted and later INSERT/UPDATE in another trx by dict_stats_save() which causes lock wait timeout. With this change all code that deals with mysql.innodb_table_stats or mysql.innodb_index_stats creates a dedicated trx locally and commits it. "	ed3cd1a774fac0133b5908362cbaf6dccd98c50d
----------------------------
part of WL#6189 Turn InnoDB persistent statistics ON by default Extend innodb_stats_auto_recalc.test with a DELETE statement. 	6e0d695df0f8a294bdbac6ae45f64f6a122c245a
----------------------------
BUG#14021292 - 65152: MYSQL CAN'T START IF RELAY LOGS ARE REMOVED AND SKIP_SLAVE_START = 0 Updated rpl.rpl_binlog_index to new slave start behaviour, when relay log file name is changed directly on mysql.slave_relay_log_info table after a missing relay log file error a server restart is required. 	325c5ff8547b6e7a0a56e258171757ba21619b2a
----------------------------
"Merge: 021a12f cf4e6c1 Bug#13833962:DISABLE [NOTE] START BINLOG_DUMP TO SLAVE_SERVER(0) MESSAGES IN THE ERROR LOG Problem: Using mysqlbinlog with the --read-from-remote-server option as shown below prints a message in error log for each call. This happens for 5.5 and above versions mysqlbinlog -uroot -p --read-from-remote-server --host=localhost test Message in error log file is given below: 120312 10:27:57 [Note] Start binlog_dump to slave_server(0), pos(test, 4) The problem is that it can fill up the error log if the command is called very often. Analysis: The below mentioned print function is called from ""mysql_binlog_send"" function which causes the ""Start binlog_dump..."" string to be printed in error log file. sql_print_information(""Start binlog_dump to master_thread_id(%lu) slave_server(%d)..."" Fix: A condition has been added in such a way that the 'sql_print_information' will be invoked only when the ""log_warnings"" variable is set to >1 otherwise don't call the 'sql_print_information' function. "	5e679f3298f084ced9d4453728ce62ea93b28b3c
----------------------------
"Bug#13833962:DISABLE [NOTE] START BINLOG_DUMP TO SLAVE_SERVER(0) MESSAGES IN THE ERROR LOG Problem: Using mysqlbinlog with the --read-from-remote-server option as shown below prints a message in error log for each call. This happens for 5.5 and above versions mysqlbinlog -uroot -p --read-from-remote-server --host=localhost test Message in error log file is given below: 120312 10:27:57 [Note] Start binlog_dump to slave_server(0), pos(test, 4) The problem is that it can fill up the error log if the command is called very often. Analysis: The below mentioned print function is called from ""mysql_binlog_send"" function which causes the ""Start binlog_dump..."" string to be printed in error log file. sql_print_information(""Start binlog_dump to master_thread_id(%lu) slave_server(%d)..."" Fix: A condition has been added in such a way that the 'sql_print_information' will be invoked only when the ""log_warnings"" variable is set to >1 otherwise don't call the 'sql_print_information' function. "	e264eb87ccf29bfd87fcfe606c828d2b407f08c7
----------------------------
"Bug#13833962:DISABLE [NOTE] START BINLOG_DUMP TO SLAVE_SERVER(0) MESSAGES IN THE ERROR LOG Problem: Using mysqlbinlog with the --read-from-remote-server option as shown below prints a message in error log for each call. This happens for 5.5 and above versions mysqlbinlog -uroot -p --read-from-remote-server --host=localhost test Message in error log file is given below: 120312 10:27:57 [Note] Start binlog_dump to slave_server(0), pos(test, 4) The problem is that it can fill up the error log if the command is called very often. Analysis: The below mentioned print function is called from ""mysql_binlog_send"" function which causes the ""Start binlog_dump..."" string to be printed in error log file. sql_print_information(""Start binlog_dump to master_thread_id(%lu) slave_server(%d)..."" Fix: A condition has been added in such a way that the 'sql_print_information' will be invoked only when the ""log_warnings"" variable is set to >1 otherwise don't call the 'sql_print_information' function. "	cf4e6c19cf1f4759b76ad6a3b81658605030eddb
----------------------------
Bug #14117145     SPURIOUS TEST FAILURES, TEST PERFORMANCE_SCHEMA.CONNECTION Details: - There were continuous disconnect statements one after another, without synchronization. That was causing race conditions. Fix: - Wait for each disconnect to finish explicitly and then do further disconnect. 	b443af68d77c8c9ff66bcbf197000c382d7cd94e
----------------------------
Bug#14108709 - WITH READ ONLY TRANSACTION AND XA ROLLBACK: FAILING ASSERTION: !(TRX)->READ_ONLY XA transactions can be read only, they can't be auto-commit. rb://1090 Approved by Jimmy Yang. 	ea9329770aed52f1bea33f23756112db22641a76
----------------------------
Bug#14107173 CONNECT WITH TIMEOUT DOES NOT SET SOCKET BACK TO BLOCKING - Set socket back to blocking mode after connect finish 	3c937c5588ec12264b74912320bb32a0d4f05145
----------------------------
Improved the test performance_schema.func_file_io, so that investigating test failures is easier. Detect cases when @before_count / @after_count is NULL. 	7d3ae34e75beb07bb82d712a0ace6f602468d89a
----------------------------
Bug #14006448: SSL_CRL AND SSL_CRL_CLRPATH ARE NOT RUN FOR YASSL AND DOES NOT WORK FOR OPENSSL Regenerated the test cryptography files. Renamed mysql-client-valid-[cert|key].pem to mysql-client-[cert|key].pem Renamed mysql-client-[cert|key].pem to mysql-client-invalid-[cert|key].pem Added an instruction on how to regenerate the cryptography files if needed. 	efa8bd196fba4c34db7524a2a201fdd8b07cff73
----------------------------
"WL#5772 ""Add partitioned Table Definition Cache to avoid using LOCK_open and its derivatives in DML queries"". Re-introduced table cache - a separate cache holding TABLE objects ready for use by statements protected by its own mutex. In the most common case a connection opening/closing a table only needs to go to this cache for getting/releasing TABLE object and do not need to go to the table definition cache. By having several instances of such cache (each protected by its own lock) and partitioning user connections between these instances (based on connection id) we can greatly improve scalability in some scenarios. Added new start-up parameter --table_open_cache_instances for setting number of table cache instances in the system. Existing --table_open_cache parameter now limits total number of TABLE object in all table cache instances combined. Added Table_open_cache_hits, Table_open_cache_misses, Table_open_cache_overflows - per-connection and global status variables for tracking and tuning performance of new cache. (The latter allows to track how often we have to expel tables from the cache since the table cache instance contains more than table_open_cache/table_open_cache_instances objects.) "	04c357ca6d40abc5589e5489f3152cf66b417e35
----------------------------
BUG#13784804 : REMOVE THE LEGACY SHA1 AND MD5 CODE FROM THE SERVER Details: - Removing MySQL implementation of MD5 and SHA1. - Removed -DWITH_SSL=no compile option for SSL. NOTE: As per include/my_global.h, HAVE_OPENSSL is undefined in embedded library: #ifdef EMBEDDED_LIBRARY /* Things we don't need in the embedded version of MySQL */ /* TODO HF add #undef HAVE_VIO if we don't want client in embedded library */ #undef HAVE_OPENSSL #undef HAVE_SMEM                /* No shared memory */ #endif /* EMBEDDED_LIBRARY */ If embedded library is built with -DWITH_SSL=system option, earlier (before this bug) it was suppose to go into MySQL implementation of SSL but now this has been removed, so it wouldn't have SSL support. 	e16906716be3ac941c0d64067724d940d0989729
----------------------------
"Bug #12752572 61579: REPLICATION FAILURE WHILE INNODB_AUTOINC_LOCK_MODE=1 AND USING TRIGGER When an insert stmt like ""insert into t values (1),(2),(3)"" is executed, the autoincrement values assigned to these three rows are expected to be contiguous.  In the given lock mode (innodb_autoinc_lock_mode=1), the auto inc lock will be released before the end of the statement.  So to make the autoincrement contiguous for a given statement, we need to reserve the auto inc values at the beginning of the statement. Modified the fix based on review comment by Svoj. "	3fcd55f687cba3a0082c34b4508545031c232082
----------------------------
BUG#12400221 - 60926: BINARY LOG EVENTS LARGER THAN MAX_ALLOWED_PACKET Problem ======== SQL statements close to the size of max_allowed_packet produce binary log events larger than max_allowed_packet. The reason why this failure is occuring is because the event length is more than the total size of the max_allowed_packet + max_event_header length. Now since the event length exceeds this size master Dump thread is unable to send the packet on to the slave. That can happen e.g with row-based replication in Update_rows event. Fix ==== The problem was fixed by increasing the max_allowed_packet for the slave's threads (IO/SQL) by increasing it to 1GB. This is done using the new server option included which is used to regulate the max_allowed_packet of the slave thread (IO/SQL). This causes the large packets to be received by the slave and apply it successfully. 	9aa79dc5966b6bba74c772d110265161a018cbf2
----------------------------
Fix for Bug#13798956 : fix for flush_neighbors behavior to flush only contiguous pages innodb_flush_neighbors option is extended for supporting also the previous method 	721ce2201f8d06d536223fe99a48ae2801306e31
----------------------------
WL#5223: Used std::pair as return type in function sync_binlog_file as requested in the review process. 	7f7bbb2de71ba1625ed4de07cf271bad941db080
----------------------------
part of WL#6189 Turn InnoDB persistent statistics ON by default Followup to the previous commit: * committer: Vasil Dimov <vasil.dimov@oracle.com> * branch nick: mysql-trunk-wl6189 * timestamp: Fri 2012-05-18 13:57:53 +0300 * message: *   part of WL#6189 Turn InnoDB persistent statistics ON by default * *   Move the creation of innodb_table_stats and innodb_index_stats before *   creating any other InnoDB tables in mysql_system_tables.sql because *   now those two tables are required by default. When InnoDB stats tables are created before various other system tables, which are also an InnoDB tables (e.g. mysql.slave_relay_log_info), then some rows get inserted into the stats tables by default and this causes a result mismatch in innodb_bug60049. 	ef5538350aa4657e414d6dd80750621ca3f75158
----------------------------
BUG#13992602: BINLOGGING STATEMENTS WITH GTID CRASHES IN BOOTSTRAP MODE Bootstrap mode should only be used to initialize a new datadir with mysql_install_db, this initialization steps should not generate GTIDs because this steps are only meant for this server. When server is started on bootstrap mode, GTIDs and replication are automatically disabled. 	cfc41cd167bc36c9bca390ab5084ddf6c11e93b8
----------------------------
"Bug#13423851: CRASH IN ITEM_FIELD::ITEM_FIELD, WITH QUERY USING A VIEW Queries with an ORDER BY clause are frequently executed using a temporary table, where some of the expressions from the select list are stored. The function create_tmp_table() chooses all select list expressions that are not constant during evaluation of the query (and some additional ones.) For column references that are resolved to a view which will be ""merged"", the Item_direct_view_ref object is asked, which checks that the expression does not reference any tables. The bug made it fail to include RAND_TABLE_BIT into the set of tables if the expression is a non-deterministic function. When execution begins, the data in the temporary table are needed. We now try to yet again infer the column's const-ness. But this time round the reference has been flattened (since the view was merged) and we are talking to the Item_func directly. And it knows that it's always non-constant, so obviously it thinks that create_tmp_table() must have set something up. But since it didn't, all we find is a NULL pointer. This fix implements a means to make sure RAND_TABLE_BIT is always set in used_tables() by creating a new interface get_initial_pseudo_tables(), the result of which must always be picked up whenever we cache the set of used tables. Hence all assignments of Item_func::used_tables_cache= 0 have been replaced by Item_func::used_tables_cache= get_initial_pseudo_tables(). This enables us to remove some other, more error-prone ways of setting RAND_TABLE_BIT. We make some changes to an optimizer_trace test: A non-deterministic stored procedure is used in a WHERE equality condition inside a subquery. The subquery is rewritten into a semijoin. Because the optimizer now correctly recognizes the stored procedure as non-deterministic, it does not consider using an index access on the outer table. This causes DuplicateWeedout to be used rather than the previously used FirstMatch. Because the strategy involves access to a temporary table, we need to make more room in the optimizer trace depth. "	aaacb85f5ed3c435b2d1918c1a8ff9d185694e3e
----------------------------
WL#5223: . Merged sync_binlog_file() and flush_and_sync() to avoid duplicated code. . Removed unused functions after the prepare_commit_mutex: mysql_bin_log_file_name() and mysql_bin_log_file_pos(). . Removed unused function remove_pending_rows_event(). 	fdafcb78300b95a0dc323b5fe4c8e5f12f23db2b
----------------------------
"BUG#13812961 - ASSERT: 'REMOVE_TYPE == TDC_RT_REMOVE_UNUSED..' TDC_REMOVE_TABLE / LOCK_IO_CACHE Analysis: ------------- When creating a view, exclusive metadata lock should be taken on the view name. If CREATE VIEW has SELECT with ""LOCK IN SHARE MODE"" set then shared lock should be taken on all the table names used in SELECT. The TABLE_LIST object of view is part of the LEX->current_select while creating the view. So while requesting the shared lock for all tables of ""LEX->current_select"", shared lock MDL request is made on view also. Lock type of the VIEW was therefore by mistake reset for EXCLUSIVE to SHARED. Since, the lock on view should be exclusive lock, in ""tdc_remove_table"" function, assert to check lock type fails. Even create view with ""SELECT...... FOR UPDATE"" also cause this issue. Users should not be allowed to create view when database is in ""read_only"" mode. But because of this bug, users are allowed to CREATE VIEW. Fix: ------------- While creating the table as below, CREATE TABLE t1 AS SELECT * FROM t1 LOCK IN SHARED MODE OR CREATE TABLE t1 AS SELECT * FROM t1 FOR UPDATE After parsing table ""t1"", exclusive lock is taken on t1. Then while parsing SELECT query, if ""LOCK IN SHARED MODE"" or ""FOR UPDATE"" is found then all the non-select tables are removed from the ""LEX->current_select->table_list"". Lock Type ""Shared Lock"" in case ""LOCK IN SHARED MODE"" and ""WRITE LOCK"" is set in case ""FOR UPDATE"" on only tables of SELECT query. After completion of SELECT query parsing, all non-select tables are pushed to the front of ""LEX->current_select->table_list"". Similarly to fix this issue, parsing code is changed to remove non-select view tables from the ""LEX->current_select->table_list"". Required MDL Lock type is set on the select tables only. Once select query parsing is over then view table is pushed to the front of ""LEX->current_select->table_list"". Setting proper lock type for CREATE VIEW table(/view) names also fixes the issue of, creating a view while database is in ""read_only"" mode. "	fbc0aaa131ade41896de80e2047cbd3add045b30
----------------------------
Bug #13943231: ALTER TABLE AFTER DISCARD MAY CRASH THE SERVER The following scenario crashes our mysql server: 1.  set global innodb_file_per_table=1; 2.  create table t1(c1 int) engine=innodb; 3.  alter table t1 discard tablespace; 4.  alter table t1 add unique index(c1); Step 4 crashes the server.  This patch introduces a check on discarded tablespace to avoid the crash. rb://1041 approved by Marko Makela 	8ce4d1007c797b721f5d2ae6f4ec04b930cf93e3
----------------------------
"Bug #13955256: KEYCACHE CRASHES, CORRUPTIONS/HANGS WITH, FULLTEXT INDEX AND CONCURRENT DML. Problem Statement: ------------------ 1) Create a table with FT index. 2) Enable concurrent inserts. 3) In multiple threads do below operations repeatedly a) truncate table b) insert into table .... c) select ... match .. against .. non-boolean/boolean mode After some time we could observe two different assert core dumps Analysis: -------- 1)assert core dump at key_read_cache(): Two select threads operating in-parallel on same key root block. 1st select thread block->status is set to BLOCK_ERROR because the my_pread() in read_block() is returning '0'. Truncate table made the index file size as 1024 and pread was asked to get the block of count bytes(1024 bytes) from offset of 1024 which it cannot read since its ""end of file"" and retuning '0' setting ""my_errno= HA_ERR_FILE_TOO_SHORT"" and the key_file_length, key_root[0] is same i.e. 1024. Since block status has BLOCK_ERROR the 1st select thread enter into the free_block() and will be under wait on conditional mutex by making status as BLOCK_REASSIGNED and goes for wait_on_readers(). Other select thread will also work on the same block and sees the status as BLOCK_ERROR and enters into free_block(), checks for BLOCK_REASSIGNED and asserting the server. 2)assert core dump at key_write_cache(): One select thread and One insert thread. Select thread gets the unlocks the 'keycache->cache_lock', which allows other threads to continue and gets the pread() return value as'0'(please see the explanation above) and tries to get the lock on 'keycache->cache_lock' and waits there for the lock. Insert thread requests for the block, block will be assigned from the hash list and makes the page_status as 'PAGE_WAIT_TO_BE_READ' and goes for the read_block(), waits in the queue since there are some other threads performing reads on the same block. Select thread which was waiting for the 'keycache->cache_lock' mutex in the read_block() will continue after getting the my_pread() value as '0' and sets the block status as BLOCK_ERROR and goes to the free_block() and go to the wait_for_readers(). Now the insert thread will awake and continues. and checks block->status as not BLOCK_READ and it asserts. Fix: --- In the full text code, multiple readers of index file is not guarded. Hence added below below code in _ft2_search() and walk_and_match(). to lock the key_root I have used below code in _ft2_search() if (info->s->concurrent_insert) mysql_rwlock_rdlock(&share->key_root_lock[0]); and to unlock if (info->s->concurrent_insert) mysql_rwlock_unlock(&share->key_root_lock[0]); "	4ff100e69d7b9c56d51be9985b3da3077bc09a27
----------------------------
Bug #13943231: ALTER TABLE AFTER DISCARD MAY CRASH THE SERVER The following scenario crashes our mysql server: 1.  set global innodb_file_per_table=1; 2.  create table t1(c1 int) engine=innodb; 3.  alter table t1 discard tablespace; 4.  alter table t1 add unique index(c1); Step 4 crashes the server.  This patch introduces a check on discarded tablespace to avoid the crash. rb://1041 approved by Marko Makela 	9a753ef5ab39de0c6f4d8ebd02a1ac7d0c66fd7e
----------------------------
"Bug #13955256: KEYCACHE CRASHES, CORRUPTIONS/HANGS WITH, FULLTEXT INDEX AND CONCURRENT DML. Problem Statement: ------------------ 1) Create a table with FT index. 2) Enable concurrent inserts. 3) In multiple threads do below operations repeatedly a) truncate table b) insert into table .... c) select ... match .. against .. non-boolean/boolean mode After some time we could observe two different assert core dumps Analysis: -------- 1)assert core dump at key_read_cache(): Two select threads operating in-parallel on same key root block. 1st select thread block->status is set to BLOCK_ERROR because the my_pread() in read_block() is returning '0'. Truncate table made the index file size as 1024 and pread was asked to get the block of count bytes(1024 bytes) from offset of 1024 which it cannot read since its ""end of file"" and retuning '0' setting ""my_errno= HA_ERR_FILE_TOO_SHORT"" and the key_file_length, key_root[0] is same i.e. 1024. Since block status has BLOCK_ERROR the 1st select thread enter into the free_block() and will be under wait on conditional mutex by making status as BLOCK_REASSIGNED and goes for wait_on_readers(). Other select thread will also work on the same block and sees the status as BLOCK_ERROR and enters into free_block(), checks for BLOCK_REASSIGNED and asserting the server. 2)assert core dump at key_write_cache(): One select thread and One insert thread. Select thread gets the unlocks the 'keycache->cache_lock', which allows other threads to continue and gets the pread() return value as'0'(please see the explanation above) and tries to get the lock on 'keycache->cache_lock' and waits there for the lock. Insert thread requests for the block, block will be assigned from the hash list and makes the page_status as 'PAGE_WAIT_TO_BE_READ' and goes for the read_block(), waits in the queue since there are some other threads performing reads on the same block. Select thread which was waiting for the 'keycache->cache_lock' mutex in the read_block() will continue after getting the my_pread() value as '0' and sets the block status as BLOCK_ERROR and goes to the free_block() and go to the wait_for_readers(). Now the insert thread will awake and continues. and checks block->status as not BLOCK_READ and it asserts. Fix: --- In the full text code, multiple readers of index file is not guarded. Hence added below below code in _ft2_search() and walk_and_match(). to lock the key_root I have used below code in _ft2_search() if (info->s->concurrent_insert) mysql_rwlock_rdlock(&share->key_root_lock[0]); and to unlock if (info->s->concurrent_insert) mysql_rwlock_unlock(&share->key_root_lock[0]); "	db2ad645ef27250b933b1a7d6802b196cedca135
----------------------------
"Bug #12752572 61579: REPLICATION FAILURE WHILE INNODB_AUTOINC_LOCK_MODE=1 AND USING TRIGGER When an insert stmt like ""insert into t values (1),(2),(3)"" is executed, the autoincrement values assigned to these three rows are expected to be contiguous.  In the given lock mode (innodb_autoinc_lock_mode=1), the auto inc lock will be released before the end of the statement.  So to make the autoincrement contiguous for a given statement, we need to reserve the auto inc values at the beginning of the statement. rb://1074 approved by Alexander Nozdrin "	f23215ee9cb78d3e1baacfc3bfd5941bdede1f9d
----------------------------
Bug#12346211 - PERF IMPACT OF PERFORMANCE-SCHEMA WITH DISABLED INSTRUMENTS/CONSUMERS This changeset implement various performance improvements implemented to date. Major change: The instrumentation of table io and table lock has been re factored, to avoid performing excessive CPU computation when a table is reused in the table open cache. The statistics (1) by calling thread and (2) by object are collected in a more disjoint way, avoiding the need to aggregate stats per table share in (2) every time the thread using the table changes in (1). See the updated doxygen documentation for table_locker. Minor changes: Performance schema memory structures and critical global variables are not aligned on 128 bytes boundaries, to avoid false sharing between CPU cache lines, and to avoid using more cache lines than necessary. Every LF_HASH table is sized to the maximum when the hash is created, to avoid having to resize dynamically the LF_HASH when new elements are inserted. The size and load count of every LF_HASH table is now displayed in the output of SHOW ENGINE PERFORMANCE_SCHEMA STATUS, to help diagnostics. The macro PSI_CALL has been replaced by PSI_XXX_CALL for each type of instrumentation. This change is a preliminary cleanup, to make implementing further optimizations possible. Event name indexes for hard coded events (table io, table lock, idle) are now compile time constants, instead of being dynamically allocated. Using constants makes the code simpler and helps the compiler to perform better optimizations. 	046f05a833463831de2200b6d638def2081752c9
----------------------------
"BUG#13463397 - 63562: UNKNOWN DATABASE INFORMATION_SCHEMA Regression Test added to demonstrate that main complaint mentioned in the bug report CREATE PROCEDURE information_schema.is() giving ""Unknown database 'information_schema' is not reproducible in 5.6. It currently gives ER_DBACCESS_DENIED_ERROR. Closing this bug as it is not reproducible in 5.6 and attaching a small note to address the other complaints mentioned in the bug report. NOTE: This is a small testcase written to demonstrate the inconsistencies of error messages for I_S and P_S databases. This is the current behaviour of I_S and P_S in 5.6. --error ER_DBACCESS_DENIED_ERROR CREATE PROCEDURE information_schema.is() BEGIN END; --error ER_DBACCESS_DENIED_ERROR CREATE PROCEDURE performance_schema.ps() BEGIN END; --error ER_DBACCESS_DENIED_ERROR CREATE TABLE information_schema.is(a INT); --error ER_TABLEACCESS_DENIED_ERROR CREATE TABLE performance_schema.ps(a INT); --error ER_DBACCESS_DENIED_ERROR ALTER TABLE information_schema.collations ADD COLUMN c INT; --error ER_DBACCESS_DENIED_ERROR ALTER TABLE performance_schema.setup_consumers ADD COLUMN c INT; Ideally Both of I_S and P_S databases should give same errors for the same operation but this is currently NOT the case. These inconsistencies will be handled later when the runtime team starts working on New Data Dictionary Project as it is pretty hard to fix these inconsistencies at this point of time in the code. "	fca5153bd968e2302943c6a8e1696b0ba53fd064
----------------------------
WL#5223: Binary Log Group Commit Added missing sys_vars.binlog_order_commits_basic and sys_vars.innodb_flush_log_at_timeout_basic tests. 	9263b01ccabbeed33d43ebed79df1b852910a256
----------------------------
Bug#14006907 FOREIGN KEY problems after DROP INDEX dict_index_t: Add the to_be_dropped flag to incidate when an index is about to be dropped. dict_foreign_find_index(): Assert that the caller is holding the dict_sys->mutex. Skip indexes that are flagged as to-be-dropped. dict_foreign_replace_index(): Assert that the index is to-be-dropped. ha_innobase::prepare_inplace_alter_table(): Lock the data dictionary while checking if any foreign key constraints depend on the indexes that are to be dropped. Flag them as such in the data dictionary cache. ha_innobase::inplace_alter_table(): Add a debug sync point for the DEBUG_SYNC test. rollback_inplace_alter_table(): Clear the index->to_be_dropped flag in the data dictionary cache. rb:1049 approved by Jimmy Yang 	81f708c53e4347abba342417504ea0399b8b3fd6
----------------------------
BUG#13812374 : RPL.RPL_REPORT_PORT FAILS OCCASIONALLY ON PB2 Removing the test from the experimental list. 	47e51bedcf33438dbef17d3e7a31fb937cabfe63
----------------------------
Fixed result file for mysqld--help-win.test and configured rpl_stm_mts_crash_safe as a big test. 	b0f7cf97068410bb54968c0c6d268bc56924c73c
----------------------------
Merge: 3b90476 78839df BUG#13779291: RACE CONDITION AROUND ROTATE RELAY LOGS & FLUSH LOGS Problem: Replication locks are poorly implemented. In particular: - locks are undocumented - there are some missing assertions in some functions that require a lock to be taken - some function names are overloaded unnecessarily so that it is hard to grep for places where a particular function is invoked - some variable names could be more descriptive - we have protocols controlling which locks to hold before invoking particular functions (but the protocols are often not spelt out explicitly or ensured by assertions). change_master breaks the protocol for init_relay_log_pos by not taking rli.data_lock. this was not detected previously because of missing assertions. one consequence is that there is a race where show slave status can read relay log position/file name while change master is modifying them. Fix: This solution is divided into 8 parts, each one on its one commit with a detailed commit message. 	9bc4730a05359da4f2384d632e255e2ce1ed84ab
----------------------------
"Fixed build on windows. The my_atomic_rwlock is ignored in some platforms but not in windows where the build fails becuase the ""LOCK_opt_binlog_max_flush_queue_time"" variable does not exist. ""opt_binlog_max_flush_queue_time_lock"" is the correct name. "	a14d507438b9f6361ceb31c760bff5f14fc27f69
----------------------------
part of WL#6189 Turn InnoDB persistent statistics ON by default Use 524288 (1 << 19) for HA_OPTION_NO_STATS_AUTO_RECALC because 1 << 17 and 1 << 18 are used by HA_OPTION_NO_CHECKSUM and HA_OPTION_NO_DELAY_KEY_WRITE which are defined separately in sql/handler.h 	5672e2a3d61c1b10bade04542c2e54380ffcb7bd
----------------------------
Merge: 0654fe8 9f5d48c Bug #11754178 45740: MYSQLDUMP DOESN'T DUMP GENERAL_LOG AND SLOW_QUERY CAUSES RESTORE PROBLEM Merging the fix from mysql-5.5 to mysql-trunk 	4c7d1c865894cfe0f4d1126403e0d53315664435
----------------------------
Merge: f619c8c 41cdad9 Bug #11754178 45740: MYSQLDUMP DOESN'T DUMP GENERAL_LOG AND SLOW_QUERY CAUSES RESTORE PROBLEM Merging the fix from mysql-5.1 to mysql-5.5 	066dc9a281ee8932827f7e6180dd0fa1bfe5d922
----------------------------
"Bug #11754178 45740: MYSQLDUMP DOESN'T DUMP GENERAL_LOG AND SLOW_QUERY CAUSES RESTORE PROBLEM Problem Statement: ------------------ mysqldump is not having the dump stmts for general_log and slow_log tables. That is because of the fix for Bug#26121. Hence, after dropping the mysql database, and applying the dump by enabling the logging, ""'general_log' table not found"" errors are logged into the server log file. Analysis: --------- As part of the fix for Bug#26121, we skipped the dumping of tables for general_log and slow_log, because the data dump of those tables are taking LOCKS, which is not allowed for log tables. Fix: ---- We came up with an approach that instead of taking both meta data and data dump information for those tables, take only the meta data dump which doesn't need LOCKS. As part of fixing the issue we came up with below algorithm. Design before fix: 1) mysql database is having tables like db, event,... general_log, ... slow_log... 2) Skip general_log and slow_log while preparing the tables list 3) Take the TL_READ lock on tables which are present in the table list and do 'show create table'. 4) Release the lock. Design with the fix: 1) mysql database is having tables like db, event,... general_log, ... slow_log... 2) Skip general_log and slow_log while preparing the tables list 3) Explicitly call the 'show create table' for general_log and slow_log 3) Take the TL_READ lock on tables which are present in the table list and do 'show create table'. 4) Release the lock. While taking the meta data dump for general_log and slow_log the ""CREATE TABLE"" is replaced with ""CREATE TABLE IF NOT EXISTS"". This is because we skipped ""DROP TABLE"" for those tables, ""DROP TABLE"" fails for these tables if logging is enabled. Customer is applying the dump by enabling logging so, if the dump has ""DROP TABLE"" it will fail. Hence, removed the ""DROP TABLE"" stmts for those tables. After the fix we could observe ""Table 'mysql.general_log' doesn't exist"" errors initially that is because in the customer scenario they are dropping the mysql database by enabling the logging, Hence, those errors are expected. Once we apply the dump which is taken before the ""drop database mysql"", the errors will not be there. "	14aa2c020e8ce930f42f5ee9e50843c58c2df6ef
----------------------------
Merge: ab60905 41cdad9 Bug #11754178 45740: MYSQLDUMP DOESN'T DUMP GENERAL_LOG AND SLOW_QUERY CAUSES RESTORE PROBLEM Merging the fix from mysql-5.1 to mysql-5.5 	9f5d48c9e603737718c55ad344f9a8951afbd753
----------------------------
Merge: 7f8990b a3c6aa8 BUG#13779291: RACE CONDITION AROUND ROTATE RELAY LOGS & FLUSH LOGS This is part 7 of the patch. More need_mutex comments replaced by the correct mutex name. Also added rpl_stress_flush_rotate_relay_log test. 	9ca47a2c7b00dd8f98d5bce8ac0c19d0462d1377
----------------------------
ndb - Change server part of SocketAuthenticator no to save the username or password. Fortunately neither username or password are checked to this is not a serious problem yet. - Remove useless casts - Improve comments - Remove use of magic constants and replace them with sizeof() 	c97e8cad196ba5cf5e8aaef0c0c2e2cc9cfa8a91
----------------------------
"part of WL#6189 Turn InnoDB persistent statistics ON by default Use DEBUG_SYNC_C_IF_THD() instead of DEBUG_SYNC_C() in row_ins_check_foreign_constraints(). That function is now also called from the background stats gathering thread and DEBUG_SYNC_C() would crash there because it calls ""_current_thd()"" and expects it to be != NULL. "	3e8418745eca76ba13d71aa6875a69896dc2e65f
----------------------------
"Bug #11754178 45740: MYSQLDUMP DOESN'T DUMP GENERAL_LOG AND SLOW_QUERY CAUSES RESTORE PROBLEM Problem Statement: ------------------ mysqldump is not having the dump stmts for general_log and slow_log tables. That is because of the fix for Bug#26121. Hence, after dropping the mysql database, and applying the dump by enabling the logging, ""'general_log' table not found"" errors are logged into the server log file. Analysis: --------- As part of the fix for Bug#26121, we skipped the dumping of tables for general_log and slow_log, because the data dump of those tables are taking LOCKS, which is not allowed for log tables. Fix: ---- We came up with an approach that instead of taking both meta data and data dump information for those tables, take only the meta data dump which doesn't need LOCKS. As part of fixing the issue we came up with below algorithm. Design before fix: 1) mysql database is having tables like db, event,... general_log, ... slow_log... 2) Skip general_log and slow_log while preparing the tables list 3) Take the TL_READ lock on tables which are present in the table list and do 'show create table'. 4) Release the lock. Design with the fix: 1) mysql database is having tables like db, event,... general_log, ... slow_log... 2) Skip general_log and slow_log while preparing the tables list 3) Explicitly call the 'show create table' for general_log and slow_log 3) Take the TL_READ lock on tables which are present in the table list and do 'show create table'. 4) Release the lock. While taking the meta data dump for general_log and slow_log the ""CREATE TABLE"" is replaced with ""CREATE TABLE IF NOT EXISTS"". This is because we skipped ""DROP TABLE"" for those tables, ""DROP TABLE"" fails for these tables if logging is enabled. Customer is applying the dump by enabling logging so, if the dump has ""DROP TABLE"" it will fail. Hence, removed the ""DROP TABLE"" stmts for those tables. After the fix we could observe ""Table 'mysql.general_log' doesn't exist"" errors initially that is because in the customer scenario they are dropping the mysql database by enabling the logging, Hence, those errors are expected. Once we apply the dump which is taken before the ""drop database mysql"", the errors will not be there. "	41cdad986852bfa6af3aa0d0d246be0e3b3dd16b
----------------------------
part of WL#6189 Turn InnoDB persistent statistics ON by default Add a mtr test to confirm that the global innodb_stats_persistent_sample_pages or the per-table option STATS_SAMPLE_PAGES is used when expected. 	1bb5893f268fe28e55c11254506ca6e43e185e0a
----------------------------
Bug#14034087 - FIX FALSE CACHELINE SHARING IN 5.6 1. Reduce false sharing 2. Reduce the overhead of cache coherency 3. Remove redundant code 4. Remove bogus stats printfs that were only enabled when UNIV_DEBUG was set Add a class ib_counter_t that splits the counter into N slots. Currently hard coded to 64 slots. It pads the slots on 64 bytes, again currently hard coded. We may in the future make these configurable once there is a platform independent and reliable way to get the necessary information. There is an implementation that uses the Linux function cpu_getsched() instead of the OS thread id. It is currently not used. Group all the stats variables in srv_stats_t. rb://1028 Approved by Inaam Rana. 	44cdd60f4b16f13b752833c2ac78212be003d500
----------------------------
BUG#11933491: RPL_CHANGE_MASTER_DBUG FAILS ON X86_64 GCOV, TRUNK AFTER FIX FOR BUG 11766112 This test uses 'dummy' as master hostname to mimic a connection failure, assuming that 'dummy' is a undefined hostname, although 'dummy' is defined in some *.oracle.com domains what will cause a timeout and not connection retry, the expect error. Replaced 'dummy' by '300.1.1.1'. 	5a831710145d19665b91fbf27851af4ca4cb0690
----------------------------
WL#5917 Appending data to Rows_log_event Overview -------- This feature implements new 'version 2' Binlog row events for the existing WRITE_ROW, UPDATE_ROW, DELETE_ROW events.  Version 2 Binlog row events become the default. These new 'version 2' Binlog row events can transport extra information *with* each row event. A Master can optionally generate 'version 1' Binlog row events by setting the --log-bin-use-v1-row-events=1 MySQLD option/variable.  This is necessary during an upgrade where the Master is upgraded before the Slave. Motivation ---------- This feature is primarily motivated by WL5353 Reflecting GCI, which uses the extra row event data to transport per-row event transaction identities. Details ------- - 3 new event types added - Existing row events renamed with _v1 suffix - log-bin-use-v1-row-events option added - Existing row event classes reused - Extra row info is one use case of new 'v2' extensible row event format.  Should be no need for 'v3'. - Binlog injector Api enhanced to allow info to be passed in - THD Api enhanced to expose info to storage engine running as Slave SQL thread - mysqlbinlog tool enhanced to show extra info in --verbose mode. - New testcases : rpl_extra_row_data, log_bin_use_v1_row_events_basic - Enhanced testcase : binlog_old_versions - Various corrected / adjusted testcases 	49922abfa832aeb301c296d831f61773d704187d
----------------------------
part of WL#6189 Turn InnoDB persistent statistics ON by default Add basic mtr test for the new global config knob innodb_stats_auto_recalc 	19ca9b1b5d145481992e15807714f885dd7426d5
----------------------------
Fix bug where the ndb_engine would log to stderr even if some other logger was configured in memcached. 	c8bb4a731f8edaba040b87f1adbdf50fdf7259fc
----------------------------
WL#5223: Binary Log Group Commit Patch to improve the number of transactions being written at each sync by reading repeatedly from the queue for the flush stage until it is empty or a timeout is reached. The patch adds the variable binlog-max-flush-queue-time to configure the timeout. 	712aa732b404796ecfbafcd0341f2f7c33501d1a
----------------------------
Bug #13432631 ASSERTION `NEXT_INSERT_ID == 0' FAILED | ASSERT IN HANDLER::HA_EXTERNAL_LOCK When testing INSERT DELAYED with RQG this assertion happens. Investigation spotted at least one suspicious place where members of Delayed_insert are updated without holding the Delayed_insert::mutex. This fix makes the crash far less frequent according to QA, so they suggested pushing it. 	3b64c42a11ef37adb4fc17d07d41028c1300d504
----------------------------
Bug#13979228 - MEMORY CORRUPTION IN READ_TEXTS() (SQL/DERROR.CC) PROBLEM: -------- The following command could cause mysqld to crash. mysql> set LC_TIME_NAMES='ru_RU'; The problem is seen only when there are more new error messages are added to sql/share/errmsg-utf8.txt, before compilation. ANALYSIS:- ---------- errmsg-utf8.txt contains all the error messages. For faster access errmsg.sys files are created for each language. The errmsg.sys file has following file format. -------------------------------------------------------------- Current errmsg.sys File Format: -------------------------------------------------------------- SECTION1: Header=32 bytes, length = (uint16) of byte 6 & 7 count  = (uint16) of byte 8 & 9 SECTION2: Array of offset pointer to messages= count*2 bytes Every 2 bytes [after header, until header_size+count*2] contains offset of error message in the errmsg.sys file. These offsets point to section3. SECTION3: All error messages, each one is null terminated. -------------------------------------------------------------- PROBLEM1) With the current file format, the length of SECTION3 is stored in errmsg.sys file header byte 6 and 7. These 2 bytes can hold maximum size of section till 2^16 = 64k. If the SECTION3 increases in size more than 64K, then these two bytes in header are not enough to hold the size. PROBLEM2) As the number of error message increase, the SECTION3 grows. Consequently, error messages could be places at offset greater than 2^16=64K. SECTION2 contains offsets that point to start of each error messages in SECTION3. If the error message is stored past 64K size in SECTION3, then the 2 bytes element in offset array of SECTION2 will not be sufficient to store the offset. Above two problems might cause server to read invalid 'length'/'offset'. Due to which the code would write bytes more than allocated. FIX: ---- Both of above mentioned problems, demand increase in number of bytes to hold the length (also count) of SECTION3 and offsets in SECTION2. Following changes in existing file format would solve the problem. Note that the header currently has many unused bytes, so using more bytes for length and count is not a problem. -------------------------------------------------------------- New errmsg.sys File Format: -------------------------------------------------------------- SECTION1: Header=32 bytes, length = (uint32) of byte 6 to 10 count  = (uint32) of byte 10 to 14 SECTION2: Array of offset pointer to messages= count*4 bytes Every 4 bytes [after header, until header_size+count*4] contains offset of error message in the errmsg.sys file. These offsets point to SECTION3. SECTION3: All error messages, each one is null terminated. -------------------------------------------------------------- With the new changes to file format, the length, count in header and offset array in SECTION2 are now 4bytes instead of 2bytes. Hence, the errmsg.sys can can now grow upto 4GB (currently its 64K), which seem to be too-much-of-memory for error messages. Each errmsg.sys has version associated with it. Version is stored at 3rd byte from begining of errmsg.sys. The current version of file is '2' and the new version will be '3'. If new mysql binary tries to use old errmsg.sys, we report an error. TESTING: -------- This bug depends on number of messages in sql/share/errmsg-utf8.txt. As the size of errmsg.sys keeps changing over time, its hard to write test case based on it. 	ad70f4126d9fb4f2ad80a97fe079a3e8b908b874
----------------------------
"Third attempt to do a follow-up for Bug#12762885 - 61713: MYSQL WILL NOT BIND TO ""LOCALHOST"" IF LOCALHOST IS BOTH IPV4/IPV6 ENABLED. Previous commit comments were wrong. The default value has always been NULL. The original patch for Bug#12762885 just makes it visible in the logs. This patch uses ""0.0.0.0"" string if bind-address is not set. "	bcc3d5ce252cbc90b2c190f12484ca453c69538a
----------------------------
"Proper follow-up for Bug#12762885 - 61713: MYSQL WILL NOT BIND TO ""LOCALHOST"" IF LOCALHOST IS BOTH IPV4/IPV6 ENABLED. The original patch removed default value of the bind-address option. So, the default value became NULL. By coincedence NULL resolves to 0.0.0.0 and ::, and since the server chooses first IPv4-address, 0.0.0.0 is choosen. So, there was no change in the behaviour. This patch restores default value of the bind-address option to ""0.0.0.0"". "	3885dc55ddf494e6917f30aa7bd638d0fd63811f
----------------------------
"Follow-up for Bug#12762885 - 61713: MYSQL WILL NOT BIND TO ""LOCALHOST"" IF LOCALHOST IS BOTH IPV4/IPV6 ENABLED. The original patch removed default value of the bind-address option. So, the default value became NULL. By coincedence NULL resolves to 0.0.0.0 and ::, and since the server chooses first IPv4-address, 0.0.0.0 is choosen. So, there was no change in the behaviour. This patch restores default value of the bind-address option to ""0.0.0.0"". "	cb4490919ba28b5b88044de78f27617a930db386
----------------------------
BUG#13812374 - RPL.RPL_REPORT_PORT FAILS OCCASIONALLY ON PB2 Problem - The failure on PB2 is possbily due to the port number being still in use even after the server restarts which is not reflected in the server restart. Fix - The problem is fixed by starting the servers forcefully using the option file and also the parameters for the server restart is passed correctly. 	4b917744a2561a1e172d2becbe2f324dacb7ecc2
----------------------------
WL5602 - fixed test failures due to differences in yassl vs openssl configuration. 	96e3860907060a1ca3348e5128c236288850c1d5
----------------------------
WL#5960 Start memcached from mysql-test-run.pl - Additional review fixes - remove hardcoded portnumber for memcached(s), portnumber is now generated by ConfigFactory.pm - Make it possible to configure  ndb_connectstring and max_connections in my.cnf - Add environement variable NDB_MEMCACHE_1_PORT holding the value of the port used by memcached.1, change all tests to use that env var. - Add more comments and print the name of the memcached being started - Pass the value of opt_verbose to SafeProcess->new so that args to memcached are printed if running mtr.pl with --verbose --verbose - Use different name of log files for each memcached 	827b70f0ec18fb31b155fccfd0086e70732f803e
----------------------------
part of WL#6189 Turn InnoDB persistent statistics ON by default Add a new global boolean config setting innodb_stats_auto_recalc with a default value ON. The setting has no effect (yet). 	924b385e8350f08d4212e71330d41e7066af8d8c
----------------------------
"Implement WL#6175 Introduce persistent statistics ON/OFF switch A new table_option is added, similarly to e.g. DELAY_KEY_WRITE. Modified files are: include/my_base.h sql/handler.h sql/lex.h sql/sql_show.cc sql/sql_table.cc sql/sql_yacc.yy The addition of the new option is purely mechanical - copy every occurence of DELAY_KEY_WRITE and rename it to the new STATS_PERSISTENT option. The .frm file format is not changed. In the code before this WL the logic was: every time stats would be updated in pre-PS MySQL (e.g. MySQL 5.5) do this: try to fetch stats for that table from persistent stats tables (e.g. check if PS is ON for that table), if fetch succeeds, then this is it. If fetch fails (due to e.g. no rows for that table in the stats storage, PS is OFF) then calculate the stats using the old transient statistics method. Below by ""PS enabled table"" or ""table has PS set to ON"" we mean that either it been explicitly flagged as STATS_PERSISTENT=1 by CREATE/ALTER TABLE or that its STATS_PERSISTENT= flag is not set ('default') and the global innodb_stats_persistent is ON. With this WL we change the logic to: every time stats would be updated in pre-PS MySQL do this: check if the table has PS flag set to ON, if yes, then do nothing (except if the stats are not initialized (e.g. first open table), in which case fetch them from disk), else calculate the stats using the old transient method. So we introduce a new per-table flag and store it in the .frm file. Upon open table we copy that flag into dict_table_t::stat_persistent to ease checking the value from InnoDB internal code. We introduce a new state for a table and its indexes' stats: 'unknown' which means that stats have not been calculated after opening the table and should not be accessed when in this state. It is also unknown whether the table's persistent stats flag is ON or OFF. This idea comes from Marko and is based on the fact that stats are only needed by MySQL and are requested after a call to ::open(). So whenever we open a table internally in InnoDB (table not being opened by MySQL) we leave the stats in 'unknown' state. When ::open() is called, then we peek the value of the PS flag from table->s->db_create_options, save it in the newly introduced table->stat_persistent and do the corresponding action to initialize the stats - either fetch them from disk if PS=ON or recalc them if PS=OFF. This is done by the newly introduced function dict_stats_init(). The new 'unknown' state is designated by table->stat_initialized being FALSE. When the PS flag is changed by the user with ALTER TABLE, we need to set the new value in table->stat_persistent - this is done by the new function dict_stats_set_persistent() which is also used to set the value of the flag initially from inside dict_stats_init() (called from ::open() and ::create()). A new function is introduced: dict_stats_is_persistent_enabled(table) which checks whether PS is switched ON/OFF for the given table. This function is very fast because it just checks if the bits are set in table->stat_persistent (compared to the slow SELECTing from the stats tables that was done before). In row_update_statistics_if_needed() if this is PS-enabled table, then do nothing. This function may be called very often. Also do nothing if the stats are in 'unknown' state - this may happen when the table has been opened internally from within InnoDB (e.g. SYS_TABLES or a foreign key table, not opened by MySQL) and heavy DML is being done on it. ha_innobase::info() -> ::info_low() indirection is no loner needed and is removed. With this WL we have just one method - ::info() which checks if the executed command is ANALYZE and does its logic internally. Given that stats initialization is now done in ::open() and ::create() after a call to dict_table_open_on_name() and not in that latter function, this means that this function becomes the same as dict_table_open_on_name_low() and dict_table_open_on_name_no_stats() is no longer needed. Thus, remove dict_table_open_on_name() and dict_table_open_on_name_no_stats() and rename dict_table_open_on_name_low() to dict_table_open_on_name(). The option innodb_analyze_is_persistent is no longer needed and is removed. Approved by:	Jimmy (rb:912) "	664057ceebc08b961ead65be6ffc5d826c1a7f50
----------------------------
BUG#11754117 incorrect logging of INSERT into auto-increment BUG#11761686 insert_id event is not filtered. Two issues are covered. INSERT into autoincrement field which is not the first part in the composed primary key is unsafe by autoincrement logging design. The case is specific to MyISAM engine because Innodb does not allow such table definition. However no warnings and row-format logging in the MIXED mode was done, and that is fixed. Int-, Rand-, User-var log-events were not filtered along with their parent query that made possible them to screw up execution context of the following query. Fixed with deferring their execution until the parent query. ****** Bug#11754117 Post review fixes. 	f3509d1d67281af248988e117027c67667dae65c
----------------------------
BUG#13893310 fixing two post-push issues: 1. Valgrind report ==26329==    by 0xA3AE2E: my_malloc (my_malloc.c:38) ==26329==    by 0xA1A881: init_io_cache (mf_iocache.c:232) ==26329==    by 0xA0D883: Rpl_info_file::do_init_info(unsigned long const*, unsigned int) (rpl_info_file.cc:95) ==26329==    by 0x9FC69D: Rpl_info_handler::init_info(unsigned long const*, unsigned int) (rpl_info_handler.h:45) ==26329==    by 0x9FBE37: Master_info::init_info() (rpl_mi.cc:303) ==26329==    by 0x9F6278: init_info(Master_info*, bool, int) (rpl_slave.cc:459) ==26329==    by 0x9F96F9: init_slave() (rpl_slave.cc:316) 2. A race condition in rpl_parallel_change_master indicated with mysqltest: At line 86: query 'CHANGE MASTER TO RELAY_LOG_FILE='$relay_file', RELAY_LOG_POS=$relay_pos' succeeded - should have failed with errno 1801. 	7edfe1df8dc9e0c7be3dca9010c76ad9efc04a34
----------------------------
BUG#13971348 - FAILURE WHILE CONFIGURING REPLICATION CAUSES THE SERVER TO SHUTDOWN If something went wrong while setting up replication's objects (i.e. slave objects), the server was brought off-line. For some specific errors, one could provide --skip-slave-start to try to avoid shutting down the server. This was a drastic measure as the replication is just one of the services provided by the server. With this patch, we just print out some error messages on the problem and let the server continue its execution. 	0ccee7b9c18d3c0c15c60335c45371cb8b3674e4
----------------------------
Resolve conflicting changes in trunk and mysql-5.6.5-m8-release BUG#13504281 vs BUG#13820370 The problem is that rpl_gtid_mode assumed that the server should abort if replication fails during startup. However, rpl_parallel_change_master assumed the opposite. 	a4184188b2ff3f773276f507ccb3a0b61632e4cb
----------------------------
"WL#6236: Allow SHOW MASTER LOGS and SHOW BINARY LOGS with REPLICATION CLIENT Currently SHOW MASTER LOGS and SHOW BINARY LOGS require the SUPER privilege. Monitoring tools (such as MEM) often want to check this output - for instance MEM generates the SUM of the sizes of the logs reported here, and puts that in the Replication overview within the MEM Dashboard. However, because of the SUPER requirement, these tools often have an account that holds open the connection whilst monitoring, and can lock out administrators when the server gets overloaded and reaches max_connections - there is already another SUPER privileged account connected, the ""monitor"". As SHOW MASTER STATUS, and all other replication related statements, return with either REPLICATION CLIENT or SUPER privileges, this worklog is to make SHOW MASTER LOGS and SHOW BINARY LOGS be consistent with this as well, and allow both of these commands with either SUPER or REPLICATION CLIENT. This allows monitoring tools to not require a SUPER privilege any more, so is safer in overloaded situations, as well as being more secure, as lighter privileges can be given to users of such tools or scripts. "	a9a7e6ea248d411921a12f1c1f5f9e23a464602c
----------------------------
Merge: 4719133 99ed4a8 Merge mysql-trunk to mysql-trunk-wl5522. Several tests crash before and after this merge. To mention some: --suite innodb: innodb-wl5522-debug (glibc detected double free) --suite main: date_formats ctype_errors ctype_ucs ctype_utf8mb4_heap ctype_utf8mb4_myisam variables mysql ctype_utf8mb4 create-big 	76e494d3dd5760d99f9b36adf41c354212b5ec91
----------------------------
Bug#13955083 ALLOW IN-PLACE DDL OPERATIONS ON MISSING OR DISCARDED TABLESPACES Allow in-place ALTER TABLE operations even if the tablespace is missing or it has been discarded. Add a test for ensuring that DISCARD TABLESPACE is being blocked by an in-place ALTER operation. (The DISCARD TABLESPACE will time out the meta-data lock upgrade at the end of the ALTER, but that is a separate matter.) ha_innobase::check_if_supported_inplace_alter(): Check for innodb_force_recovery and innodb_data_file_path=newraw already here and not in the prepare step. ha_innobase::prepare_inplace_alter_table(), inplace_alter_table(): Move the update_thd() and trx_search_latch_release_if_reserved() calls already to the check_if phase. prepare_inplace_alter_table_dict(): If the tablespace is missing, skip the row_log_allocate(). ha_innobase::inplace_alter_table(): Skip the row_merge_build_indexes() if the tablespace is missing. rb:1032 approved by Jimmy Yang 	ef74a4ae0ba6574cb6760b3d9485cbcf2c8b08f0
----------------------------
Bug #13859866: VERSION_COMPILE_MACHINE SHOWS X86 FOR 64-BIT BINARIES ON 64-BIT WINDOWS MACHINE Added a workaround for a cmake deficiency that caused the problem. Now the mysql cmake files will set the compile_machine to x86_64 when compiling a 64 bit windows binary. 	f8ad200fd33b9411709abfddff3ee2e6ae75176b
----------------------------
ndb - make ndb_config --configinfo --xml print the allowed values to set for config variables of enum type 	a965d46b076e5d36b4da21ed68526aeab9a62cdc
----------------------------
"Bug#12662190 - COM_COMMIT IS NOT INCREMENTED FROM THE BINARY LOGS ON SLAVE, COM_BEGIN IS Follow up patch to make the fix work with both STS and MTS Earlier patch had two different increment statements which were added to increment COM_COMMIT global variable. One for STS mode and for MTS mode. The current patch removes those individual increment statements and the code to increment the global variable had been moved to ""bool Xid_log_event::do_commit(THD *thd)"" function. As this is a common commit function for both STS and MTS mode. "	4e100bb9279ac4c1b907934aa81c87fd9837602f
----------------------------
WL#5522 - The space id can 0 for temp tables if innodb_file_per_table=0. Remove bogus assertion and comment. 	5007a6390547e138926d13367f209021cd666c4b
----------------------------
BUG#12662190:COM_COMMIT IS NOT INCREMENTED FROM THE BINARY LOGS ON SLAVE, COM_BEGIN IS PROBLEM: -------- When binary log statements are replayed on the slave, BEGIN is represented in com_counters but COMMIT is not. Similarly in 'ROW' based replication 'INSERT','UPDATE',and 'DELETE' com_counters are not getting incremented when the binary log statements are replayed at slave. ANALYSIS: --------- In 'ROW' based replication for COMMIT,INSERT,UPDATE and DELETE operations following special events are invoked. Xid_log_event,Write_rows_log_event,Update_rows_log_event,Update_rows_log_event. The above mentioned events doesn't go through the parser where the 'COM_COUNTERS' are incremented. FIX: ----- Increment statements are added at appropriate events. Respective functions are listed below. 'Xid_log_event::do_apply_event' 'Write_rows_log_event::do_before_row_operations' 'Update_rows_log_event::do_before_row_operations' 'Delete_rows_log_event::do_before_row_operations' 	79579f56816972f954cce5120756c8c251071b33
----------------------------
Bug#13893363 - MTS IS MISSING THE ABILITY TO STOP A SLAVE AFTER PROCESSING GAPS BUG#13893310 checkpoint_group size wrong at recovery after cold restart This is combined patch for 3 issues. Bug#13893363. The new UNTIL condition is an important feature to have because of --relay-log-recovery=1 and Change-Master can *not* run in presence of gaps. The user would have to execute START SLAVE SQL_THREAD UNTIL SQL_AFTER_MTS_GAPS if he needed to switch from the parallel to the sequential execution mode after slave SQL thread or Worker threads errored out in the parallel mode. Thus UNTIL SQL_AFTER_MTS_GAPS gives the user a facility to find out the exact after gaps position automatically instead of having to figure it out of relay logs and infos himself. Also, a separate issue of incorrect demotion of DEADLOCK/WAIT_FOR_LOCK errors into warning is fixed because at Worker execution slave does not retry.  And a todo to relocate SQL_AFTER_MTS_GAPS and other post-exec/schedule until options checking at the end of read-execute loop (instead of to have them right after read phase which can lead to unnecessary hanging when a condition is actually met). Bug#13893310. The issue with checkpoint_group at MTS recovery is that after the server restart MTS recovery gaps collecting algorithm initialized the recovery bitmap with the default 512 size rather than with a correct one with size of not less than of Worker group_executed of the last slave session. That is corrected. The max possible size is used in the gaps collecting.  opt_mts_checkpoint_group 's update step is made as 8 (bits).  Some refactoring in rpl_info*, rpl_rli_pdb is done, MTS recovery gaps collecting is deployed on a common to START-SLAVE and --skip-start-slave=0 execution path. Few found small bugs fixed along the way, incl. demotion of Worker DEADLOCK/WAIT_FOR_LOCK errors into warning. An associated to the bug valgrind issue is fixed, see the stack below, vai deploying handler->end_info() in the error branch of RLI::init_info(). http://pb2.no.oracle.com/?template=mysql_show_test_failure&test_failure_id=4266844 rpl.rpl_parallel_change_master           w5 [ fail ]  Found warnings/errors in server log file! Test ended at 2012-04-02 05:18:16 line ==15911== 8,192 bytes in 1 blocks are definitely lost in loss record 130 of 179 ==15911==    at 0x4C216FB: malloc (vg_replace_malloc.c:236) ==15911==    by 0xA29FE2: my_malloc (my_malloc.c:38) ==15911==    by 0xA09EFD: init_io_cache (mf_iocache.c:232) ==15911==    by 0x9FD1E3: Rpl_info_file::do_init_info(unsigned long const*, unsigned int) (rpl_info_file.cc:95) ==15911==    by 0x9EC97B: Rpl_info_handler::init_info(unsigned long const*, unsigned int) (rpl_info_handler.h:45) ==15911==    by 0x9F153E: Relay_log_info::init_info() (rpl_rli.cc:1676) ==15911==    by 0x9E688B: init_info(Master_info*, bool, int) (rpl_slave.cc:468) ==15911==    by 0x9E9AB1: init_slave() (rpl_slave.cc:316) ==15911==    by 0x5CFE18: mysqld_main(int, char**) (mysqld.cc:5083) 	d6397485755e76a3f732ee0bf31fcf568e007547
----------------------------
Merge: d7a2119 796fad1 Bug#11815557 60269: MYSQL SHOULD REJECT ATTEMPTS TO CREATE SYSTEM TABLES IN INCORRECT ENGINE PROBLEM: CREATE/ALTER TABLE currently can move system tables like mysql.db, user, host etc, to engines other than MyISAM. This is not completely supported as of now, by mysqld. When some of system tables like plugin, servers, event, func, *_priv, time_zone* are moved to innodb, mysqld restart crashes. Currently system tables can be moved to BLACKHOLE also!!!. ANALYSIS: The problem is that there is no check before creating or moving a system table to some particular engine. System tables are suppose to be residing in MyISAM. We can think of restricting system tables to exist only in MyISAM. But, there could be future needs of these system tables to be part of other engines by design. For eg, NDB cluster expects some tables to be on innodb or ndb engine. This calls for a solution, by which system tables can be supported by any desired engine, with minimal effort. FIX: The solution provides a handlerton interface using which, mysqld server can query particular storage engine handlerton for system tables that it supports. This way each storage engine layer can define their own system database and system tables. The check_engine() function uses the new handlerton function ha_check_if_supported_system_table() to check if db.tablename provided in the DDL is supported by the SE. Note: This fix has modified a test in help.test, which was moving mysql.help_* to innodb. The primary intention of the test was not to move them between engines. 	ecd6e3bdf59cec48d3f392662bdbc603473bc383
----------------------------
Bug#11815557 60269: MYSQL SHOULD REJECT ATTEMPTS TO CREATE SYSTEM TABLES IN INCORRECT ENGINE PROBLEM: CREATE/ALTER TABLE currently can move system tables like mysql.db, user, host etc, to engines other than MyISAM. This is not completely supported as of now, by mysqld. When some of system tables like plugin, servers, event, func, *_priv, time_zone* are moved to innodb, mysqld restart crashes. Currently system tables can be moved to BLACKHOLE also!!!. ANALYSIS: The problem is that there is no check before creating or moving a system table to some particular engine. System tables are suppose to be residing in MyISAM. We can think of restricting system tables to exist only in MyISAM. But, there could be future needs of these system tables to be part of other engines by design. For eg, NDB cluster expects some tables to be on innodb or ndb engine. This calls for a solution, by which system tables can be supported by any desired engine, with minimal effort. FIX: The solution provides a handlerton interface using which, mysqld server can query particular storage engine handlerton for system tables that it supports. This way each storage engine layer can define their own system database and system tables. The check_engine() function uses the new handlerton function ha_check_if_supported_system_table() to check if db.tablename provided in the DDL is supported by the SE. Note: This fix has modified a test in help.test, which was moving mysql.help_* to innodb. The primary intention of the test was not to move them between engines. 	796fad1424dabed0d60cdbf353c8ce88c4066bb8
----------------------------
BUG#13917335 - ASSERTION `REPORT_PORT != 0' FAILED IN NETWORK_INIT () Problem - The cause of the failure is mainly due to the assert added in the code as a result of the fix of the BUG-13333431. When we start the server with the --skip-networking option enabled we have the mysqld_port explicitly to 0. Since the value of report_port is set to mysqld_port, the assertion that (report_port!= 0) fails. Fix - the fix of the problem is to assert the not zero value of report_port only in the case the --skip-networking option is not used to start the mysqld server. 	d3782bffbdd2c5cdda3d6760acfaebfe9549aeef
----------------------------
BUG#13812374 - RPL.RPL_REPORT_PORT FAILS OCCASIONALLY ON PB2 Problem - this failure occured in the test added for the fix of the bug-13333431. The basic problem of the failure was the value of the report_port which persisted even after the end of the test (ie. rpl_end.inc). So this causes the assertion in the test to fail if it is executed again. Fix - restarted the server with the default value being passed to the report_port after testing the two expected case so that in the next run of the test we will not encounter the previous value of report_port. 	8465e5cf8827bb3ad937d2a238c3f8dbf98a31f0
----------------------------
BUG#13812374 - RPL.RPL_REPORT_PORT FAILS OCCASIONALLY ON PB2 Problem - this failure occured in the test added for the fix of the bug-13333431. The basic problem of the failure was the value of the report_port which persisted even after the end of the test (ie. rpl_end.inc). So this causes the assertion in the test to fail if it is executed again. Fix - restarted the server with the default value being passed to the report_port after testing the two expected case so that in the next run of the test we will not encounter the previous value of report_port. 	f1dd0b0e03968859792af17dacc5f945f642c9d8
----------------------------
Disable the test innodb_buffer_pool_filename_basic on Windows. It is a bug in mtr that the test is executed without mysqld being restarted even though --force-restart is specified in mysql-test/suite/sys_vars/t/innodb_buffer_pool_filename_basic-master.opt Without the restart we get a rare, sporadic, nondeterministic failures, see the .test file for more details on why the restart is needed. 	ab747398cde7b732fcdff73423094a84785d455e
----------------------------
WL#5597: Fix  content mismatch  for sys_vars.slave_rows_search_algorithms_basic filure. 	9583a673e6ffadfe5620f38d05c820b97be95359
----------------------------
"Merge: 83673cb aab9623 Bug#12762885: 61713: MYSQL WILL NOT BIND TO ""LOCALHOST"" IF LOCALHOST IS BOTH IPV4/IPV6 ENABLED Merge from 5.5 to 5.6(trunk) Analysis: ---------------------- The problem was that if a hostname resolves to more than one IP-address, the server (5.5) does not start due to an error. In 5.1 the server used to take some IP-address and start. It's a regression and should be fixed. 5.5 supports IPv6, while 5.1 does not. However, that should not prevent the server from start -- if a hostname has both IPv4 and IPv6 addresses, the server should choose some IPv4-address and start. It's been decided to prefer IPv4-address to be backward compatible with 5.1. Another problem was that the 5.6 server did not report proper error message when the specified hostname could not be resolved. So, the code has been changed to report proper error message. Switch case ""OPT_BIND_ADDRESS"" was dead code, so removed it. Testing ================================ TRUNK ============================= invalid hostname (localhos): => Following error message reported. 120308 16:14:20 [Note] Server hostname (bind-address): 'localhos'; port: 4000 120308 16:14:22 [ERROR] Can't create IP socket: No such file or directory 120308 16:14:22 [ERROR] Can't start server: cannot resolve hostname! invalid ip_address: => Following error message reported. 120308 16:17:50 [Note] Server hostname (bind-address): '123.123.123.123'; port: 4000 120308 16:17:50 [Note]   - '123.123.123.123' resolves to '123.123.123.123'; 120308 16:17:50 [Note] Server socket created on IP: '123.123.123.123'. 120308 16:17:50 [ERROR] Can't start server: Bind on TCP/IP port: Cannot assign requested address Only ipv4 host configured: => Following message logged 120308 16:22:42 [Note] Server hostname (bind-address): 'localhost'; port: 4000 120308 16:22:42 [Note]   - 'localhost' resolves to '127.0.0.1'; 120308 16:22:42 [Note] Server socket created on IP: '127.0.0.1'. Only ipv6 host configured: => Following message logged 120308 16:23:57 [Note] Server hostname (bind-address): 'localhost'; port: 4000 120308 16:23:57 [Note]   - 'localhost' resolves to '::1'; 120308 16:23:57 [Note] Server socket created on IP: '::1'. ipv4 and ipv6 host configured: => Following message logged 120308 16:19:00 [Note] Server hostname (bind-address): 'localhost'; port: 4000 120308 16:19:00 [Note]   - 'localhost' resolves to '::1'; 120308 16:19:00 [Note]   - 'localhost' resolves to '127.0.0.1'; 120308 16:19:00 [Note] Server socket created on IP: '127.0.0.1'. => Non localhost address 120308 16:15:19 [Note] Server hostname (bind-address): 'mysql_addr'; port: 4000 120308 16:15:19 [Note]   - 'mysql_addr' resolves to '10.178.58.216'; 120308 16:15:19 [Note]   - 'mysql_addr' resolves to 'fe80::120b:a9ff:fe69:59ec'; 120308 16:15:19 [Note] Server socket created on IP: '10.178.58.216'. More than one entry for ipv4 and ipv6 address: => Following message logged 120308 16:26:30 [Note]   - 'localhost' resolves to '::1'; 120308 16:26:30 [Note]   - 'localhost' resolves to '::1'; 120308 16:26:30 [Note]   - 'localhost' resolves to '127.0.0.1'; 120308 16:26:30 [Note]   - 'localhost' resolves to '127.0.0.1'; 120308 16:26:30 [Note] Server socket created on IP: '127.0.0.1'. "	0829f67a56d9918981cbf4d35cb939ede34212d4
----------------------------
"Bug#12762885: 61713: MYSQL WILL NOT BIND TO ""LOCALHOST"" IF LOCALHOST IS BOTH IPV4/IPV6 ENABLED Analysis: ---------------------- The problem was that if a hostname resolves to more than one IP-address, the server (5.5) does not start due to an error. In 5.1 the server used to take some IP-address and start. It's a regression and should be fixed. 5.5 supports IPv6, while 5.1 does not. However, that should not prevent the server from start -- if a hostname has both IPv4 and IPv6 addresses, the server should choose some IPv4-address and start. It's been decided to prefer IPv4-address to be backward compatible with 5.1. Another problem was that the 5.6 server did not report proper error message when the specified hostname could not be resolved. So, the code has been changed to report proper error message. Testing ================================ 5.5 ============================= invalid hostname (localhos): => Following error message reported. 120308 15:52:09 [ERROR] Can't start server: cannot resolve hostname! 120308 15:52:09 [ERROR] Aborting invalid ip_address: => Following error message reported. 120308 15:56:06 [Note] Server hostname (bind-address): '123.123.123.123'; port: 3306 120308 15:56:06 [Note]   - '123.123.123.123' resolves to '123.123.123.123'; 120308 15:56:06 [Note] Server socket created on IP: '123.123.123.123'. 120308 15:56:06 [ERROR] Can't start server: Bind on TCP/IP port: Cannot assign requested address Only ipv4 host configured: => Following message logged 120308 16:02:50 [Note] Server hostname (bind-address): 'localhost'; port: 3306 120308 16:02:50 [Note]   - 'localhost' resolves to '127.0.0.1'; 120308 16:02:50 [Note] Server socket created on IP: '127.0.0.1' Only ipv6 host configured: => Following message logged 120308 16:04:03 [Note] Server hostname (bind-address): 'localhost'; port: 3306 120308 16:04:03 [Note]   - 'localhost' resolves to '::1'; 120308 16:04:03 [Note] Server socket created on IP: '::1'. ipv4 and ipv6 host configured: => Following message logged 120308 16:05:02 [Note] Server hostname (bind-address): 'localhost'; port: 3306 120308 16:05:02 [Note]   - 'localhost' resolves to '::1'; 120308 16:05:02 [Note]   - 'localhost' resolves to '127.0.0.1'; 120308 16:05:02 [Note] Server socket created on IP: '127.0.0.1'. => Non localhost address 120308 16:08:20 [Note] Server hostname (bind-address): 'mysql_addr'; port: 3306 120308 16:08:20 [Note]   - 'mysql_addr' resolves to '10.178.58.216'; 120308 16:08:20 [Note]   - 'mysql_addr' resolves to 'fe80::120b:a9ff:fe69:59ec'; 120308 16:08:20 [Note] Server socket created on IP: '10.178.58.216'. More than one entry for ipv4 and ipv6 address: => Following message logged 120308 16:06:19 [Note] Server hostname (bind-address): 'localhost'; port: 3306 120308 16:06:19 [Note]   - 'localhost' resolves to '::1'; 120308 16:06:19 [Note]   - 'localhost' resolves to '::1'; 120308 16:06:19 [Note]   - 'localhost' resolves to '127.0.0.1'; 120308 16:06:19 [Note]   - 'localhost' resolves to '127.0.0.1'; 120308 16:06:19 [Note] Server socket created on IP: '127.0.0.1'. "	aab9623a8dce2c19c1cb1af90ff5967e2977a240
----------------------------
BUG#13779291: RACE CONDITION AROUND ROTATE RELAY LOGS & FLUSH LOGS This is part 7 of the patch. Updated rpl_stress_flush_rotate_relay_log.test to only change debug flag when slave is stopped. Updated rpl_stress_flush_rotate_relay_log.result in order to ignore warnings id. Added missing lock/unlock to rpl_slave.wait_for_relay_log_space(). Only rotate log when slave is configured in sql_reload.reload_acl_and_cache() like past behaviour. 	a3c6aa86b86c4bedfe1efa4f854cc01359ece030
----------------------------
WL#5545 ALTER_COLUMN_NAME bug fix: innobase_rename_column(): Keep the column names in table->referenced_list as copies of the table->col_names, because the column names could otherwise be orphaned (point to freed memory) when the parent table is dropped. The parent table can be dropped when foreign_key_checks=0. 	d1859a17aca1f39285d521530872a075ff33f732
----------------------------
WL#5924: Fix suite failures #3 Updated the variables.test to not have max_allowed_packet set to a non-default value during connects as on some boxes running the server using a long command line this may cause the login packet to exceed the threshhold set by max_allowed_packet and cause login failures. 	5ba6bc91f93e288e534a5a649af163a35dc89fbf
----------------------------
Merge: fe64cb3 a4c0273 BUG#13779291: RACE CONDITION AROUND ROTATE RELAY LOGS & FLUSH LOGS This is part 6 of the patch. It only cleans up redundant junk from the source files. The parameter log_type_arg in MYSQL_BIN_LOG::open_binlog(char*,...) is always equal to LOG_BIN. So it can be removed. 	b2f2275dfa6f2a207771fb1c4ae9f3060930bc07
----------------------------
Merge: c3722e7 1034ab7 BUG#13779291: RACE CONDITION AROUND ROTATE RELAY LOGS & FLUSH LOGS This is part 4 of the patch. It fixes the actual bug. Problem: Master_info::mi_description_event was accessed by concurrent threads without a lock. This caused random crashes. Fix: Protect Master_info::mi_description_event by Master_info::data_lock. (Why this lock and not any other? 1. Master_info::data_lock is, in general, the correct lock to use for data that belongs to Master_info. 2. the lock is already held in all time-critical places where mi_description_event is used, so this should not degrade performance.) The fix has two parts: 1. Add assertion in Master_info::[set|get]_mi_description_event to ensure the lock is held. 2. Acquire the lock in all places that need it. @ mysql-test/suite/rpl/r/rpl_stress_flush_rotate_relay_log.result new result file @ mysql-test/suite/rpl/t/rpl_stress_flush_rotate_relay_log.test new test case @ sql/binlog.cc - Refactor MYSQL_BIN_LOG::append_[event|buffer] so that they hold mi->data_lock before accessing mi->mi_description_event. - Also make them take Master_info as parameter instead of reading active_mi. @ sql/binlog.h - MYSQL_BIN_LOG::append_[buffer|event] need a new parameters in order to acquire mi->data_lock correctly. - Added MYSQL_BIN_LOG::after_append_to_relay_log @ sql/rpl_mi.h Assert that the correct mutex is held before accessing mi_description_event @ sql/rpl_slave.cc Acquire mi->data_lock before using mi->mi_description_event: - In get_master_version_and_clock. This fixes a race between the startup code for the IO thread and FLUSH RELAY LOGS. - In write_ignored_events_to_relay_log. This fixes a race between the shutdown code for the IO thread and FLUSH RELAY LOGS. - In the startup code for the IO thread. This fixes a race between the startup code and FLUSH RELAY LOGS. - In the shutdown code for the IO thread. This fixes a race between the shutdown code and FLUSH RELAY LOGS. - Before invoking queue_old_event. This fixes races between the IO thread that reads old events and FLUSH RELAY LOGS. - In the beginning of queue_event, when it reads a START_EVENT_V3 and accesses mi->mi_description_event. This fixes a race between the IO thread an FLUSH RELAY LOGS. Also: - remove obsolete LINT_INIT code. @ sql/sql_reload.cc Acquire the correct lock before rotating the relay log. 	b9c90381f5c182f4a2a94a74a68e03bdb407de98
----------------------------
Merge: ca1a68f 494c013 BUG#13779291: RACE CONDITION AROUND ROTATE RELAY LOGS & FLUSH LOGS This is part 2 of the patch. It only makes one small refactoring to make the code more maintainable. Problem: Objects that are used by any binary or relay log are supposed to be stored in MYSQL_BIN_LOG. Objects that are used by only the SQL thread are supposed to be stored in Relay_log_info. The Format_description_log_event that is used by the SQL thread to read events was incorrectly a member of MYSQL_BIN_LOG. Fix: Move the format_description_log_event to Relay_log_info. Also, make it a private member and encapsulate any use of it in setter/getter functions. @ sql/binlog.cc - move MYSQL_BIN_LOG::description_event_to_queue to Relay_log_info::rli_description_event - add assertions to ensure that members of MYSQL_BIN_LOG are not used by the wrong thread @ sql/binlog.h - move MYSQL_BIN_LOG::description_event_to_queue to Relay_log_info::rli_description_event @ sql/log_event.cc - move MYSQL_BIN_LOG::description_event_to_queue to Relay_log_info::rli_description_event @ sql/rpl_rli.cc - move MYSQL_BIN_LOG::description_event_to_queue to Relay_log_info::rli_description_event and encapsulate it using setter/getter member functions @ sql/rpl_rli.h - move MYSQL_BIN_LOG::description_event_to_queue to Relay_log_info::rli_description_event and encapsulate it using setter/getter member functions @ sql/rpl_slave.cc - move MYSQL_BIN_LOG::description_event_to_queue to Relay_log_info::rli_description_event - fix some indentation @ sql/sql_binlog.cc - move MYSQL_BIN_LOG::description_event_to_queue to Relay_log_info::rli_description_event - remove check for NULL return value from new 	ac7d41f19c15964dc5ca3872d1acaba379f4529f
----------------------------
Merge: 3102d31 3d4edd5 BUG#13779291: RACE CONDITION AROUND ROTATE RELAY LOGS & FLUSH LOGS This is part 1 of the patch. It only makes small refactorings to make the code more maintainable. Problem: Replication locks are poorly implemented. In particular: - locks are undocumented - there are some missing assertions in some functions that require a lock to be taken - some function names are overloaded unnecessarily so that it is hard to grep for places where a particular function is invoked - some variable names could be more descriptive - we have protocols controlling which locks to hold before invoking particular functions (but the protocols are often not spelt out explicitly or ensured by assertions). change_master breaks the protocol for init_relay_log_pos by not taking rli.data_lock. this was not detected previously because of missing assertions. one consequence is that there is a race where show slave status can read relay log position/file name while change master is modifying them. Fix: - improve the comment at the top of rpl_slave.h to incorporate an analysis of the locking order - add assertions to functions that require a lock to be held by the caller - there are a lot of functions called init_info, making it hard to track which particular function is called at a given place. rename: - the global init_info -> global_init_info - Master_info::init_info -> Master_info::mi_init_info - Relay_log_info::init_info -> Relay_log_info::rli_init_info - make change_master follow the protocol for init_relay_log_pos. this also fixes the race. @ sql/binlog.cc - a few functions take a parameter called 'need_lock' or 'need_mutex' but it is hard to keep track of *which* mutex each of them refers to. renamed the parameters to reflect the relevant mutex they control - add assertion to ensure that open_binlog does not acquire lock_index after global_sid_lock.wrlock. - no need to assert that LOCK_index is held just after it was acquired. - purge_first_log should only be invoked from the sql thread, when the log is a relay log. added two assertions - MYSQL_BIN_LOG::rotate requires the caller to hold LOCK_log. so add an assertion. - MYSQL_BIN_LOG::write_incident requires the caller to hold LOCK_log if need_lock_log is false. so add an assertion. @ sql/rpl_mi.cc rename @ sql/rpl_mi.h rename @ sql/rpl_rli.cc - Relay_log_info::init_relay_log_pos requires data_lock to be held by the caller if need_data_lock is false. add an assertion. - Relay_log_info::init_info requires data_lock to be held by the caller. add an assertion. @ sql/rpl_slave.cc renames @ sql/rpl_slave.h - added comment analyzing the order of lock acquisition for the replication locks - rename init_info 	ca1a68f7f0eab05ff85b3e3f53d8aece99ff319f
----------------------------
WL#5924 Suite fix commit #1 - Fixed a valgrind bug with mysql_reconnect(). Added a test case. - Fixed connect_attrs and mysql_client_test to use proper case when quoting the performance_schema database. 	d1411d8fef827602f8449849b255ccb205579a91
----------------------------
Bug#13866532 RECORD NOT FOUND OR NOT DELETE-MARKED AFTER CREATING INDEX ONLINE In online index creation, when scanning the clustered index, we must copy delete-marked records whose transactions are still active. Otherwise, problems could occur when an error occurs during the attempt to UPDATE a PRIMARY KEY. innodb-index-online-delete.test: Trigger a duplicate key error in an update of a primary key while a secondary index is being created online. row_update_for_mysql(): Add DEBUG_SYNC row_update_for_mysql_error. ha_innobase::inplace_alter_table(): Add DEBUG_SYNC innodb_after_inplace_alter_table. row_merge_read_clustered_index(): When creating an index online, copy delete-marked records that are implicitly locked by an active transaction. As part of this fix, we must preserve the delete-mark flags during the merge sort. mtuple_t: New struct, comprising del_mark and fields. The tuples used to be stored as an array of dfield_t* in row_merge_buf_t. row_merge_tuple_print(), row_merge_buf_encode(), row_merge_tuple_cmp(), row_merge_tuple_sort(): Operate on mtuple_t instead of dfield_t[]. mrec_t: When creating an index online, store the delete-mark flag as the last bit in the null-flag bitmap in the record. This requires that we replace index->n_nullable with a parameter in the low-level functions. rec_get_converted_size_comp_prefix(), rec_init_offsets_comp_ordinary(), rec_convert_dtuple_to_rec_comp(), rec_get_converted_size_comp_prefix(), row_merge_read_rec(), row_merge_blocks(), row_merge_blocks_copy(), row_merge(): Add the parameter n_null, which must be at least index->n_nullable. row_merge_insert_index_tuples(): Add the parameter del_marks. rb:995 approved by Jimmy Yang 	5b2629c04912441566241469f05eb8f6e23ce886
----------------------------
WL#6224 Adapt MySQL Cluster to 5.6 - don't configure the rpl_ndb and ndb_rpl suites to skip innodb - don't set myisam as default storage engine 	409be84b19d1f471e3ff63afd1b39d765b3d72df
----------------------------
Bug #13817703 - auto_increment_offset != 1 + innodb_autoinc_lock_mode=1 => bulk inserts fail Fix the calculation of the next autoinc value when offset > 1. Some of the results have changed due to the changes in the allocation calculation. The new calculation will result in slightly bigger gaps for bulk inserts. rb://866 Approved by Jimmy Yang. Backported from mysql-trunk (5.6) 	90436a096c4ec21376752713a89d2b8997b15757
----------------------------
Bug#12766319 - 61865: RENAME USER DOES NOT WORK CORRECTLY - REQUIRES FLUSH PRIVILEGES PROBLEM: RENAME USER does not work as expected when from_user contains just IP and to_user contains IP/MASK. Attempt to connect to MySQL using renamed user fails. Attempts to connect succeed only after command FLUSH PRIVILEGES. ANALYSIS: MySQL maintains access control list for users in global DYNAMIC ARRAY 'acl_users'. This list is updated by acl_reload(), which loads 'acl_users' from mysql.user table. For faster search we maintain HASH acl_check_hosts, which contains user details with hostnames without any wild cards. All the users whose host name contains wild cards are stored in DYNAMIC_ARRAY acl_wild_hosts. ADD/DROP/RENAME user basically updates 'acl_users' along with mysql.user. At the end of these operations init_check_hosts() is called to update acl_check_hosts and  acl_wild_cards based on 'acl_users'. Bug#12766319 - 61865: RENAME USER DOES NOT WORK CORRECTLY - REQUIRES FLUSH PRIVILEGES PROBLEM: RENAME USER does not work as expected when from_user contains just IP and to_user contains IP/MASK. Attempt to connect to MySQL using renamed user fails. Attempts to connect succeed only after command FLUSH PRIVILEGES. ANALYSIS: MySQL maintains access control list for users in global DYNAMIC ARRAY 'acl_users'. This list is updated by acl_reload(), which loads 'acl_users' from mysql.user table. For faster search we maintain HASH acl_check_hosts, which contains user details with hostnames without any wild cards. All the users whose host name contains wild cards are stored in DYNAMIC_ARRAY acl_wild_hosts. ADD/DROP/RENAME user basically updates 'acl_users' along with mysql.user. At the end of these operations init_check_hosts() is called to update acl_check_hosts and  acl_wild_cards based on 'acl_users'. During RENAME, when it updates 'acl_users' in handle_grant_struct(), hostname is copied into 'acl_users' list updating only ACL_USER->hostname but it does not update ACL_USER->host->ip, ACL_USER->host->ip_mask. This is route cause for this bug. FLUSH PRIVILEGES command invokes acl_reload(). This function updates all members of ACL_USER->host (including ip and ip_mask). Hence attempts to connect to MySQL succeeds there after. FIX: Make changes to handle_grant_struct() to properly update ACL_USER->host->ip, ACL_USER->host->ip_mask. This is done using existing update_hostname(). Note: In addition to the fix described above, the code related to acl_host_and_ip is modified. The new code helps avoid doing similar mistakes, of updating hostname, without updating ip_mask. These changes also improves the related code. 	0abdeed1d6dd697cc337b9767b1d6a1500f4028d
----------------------------
Bug#12995174 - MTS: UNEXPECTED RECOVERY ATTEMPT ENDS WITH ER_MASTER_INFO OR ASSERTION FAILURE Bug#13840948 - CHANGE MASTER MODIFIES RELAY_LOG_PURGE OPTION VALUE. The patch coveres a bunch of issues. 0. The reported problem itself turned out to be unnecessary recalculation of rli->group_master_log_* coordinates. In case of relay-log purging for Change-Master is not done the coordinates may be safely reused. Otherwise, as it had been before this patch, the new values may not correspond to the actual execution state because the executed were set optimistically to the lastest that IO thread had been read. Fixed with avoiding recalculation to reuse existing rli->group_master_log_* coordinates for the mentioned no-purging branches of Change-Master. 1. In presence of MTS recovery gaps CHANGE MASTER now errors out with a new error code. 2. Similar intolerance to MTS gaps is implemented for --relay-log-recovery handling as the option is logically equivalent to RESET SLAVE plus CHANGE MASTER. 3. Bug#13840948: In some of its branches change_master() overrides an existing startup time option value. Fixed with reverting temporarily modified --relay-log-purge's value. 4. @@global.relay_log_recovery was not read-only though it should have been. Fixed to be converted into read-only. 5. fixing signature of few mts functions to pass a mutex is locked indication. 	926cb329723b89440fbd0b7f9cb951b603b4e848
----------------------------
WL5602 - Update test cases which depend on legacy old_passwords behavior. 	cd0a9617785066630507f15ba24ce5874725c76e
----------------------------
"Bug#11763507 - 56224: FUNCTION NAME IS CASE-SENSITIVE Analysis: ------------------------------- According to the Manual (http://dev.mysql.com/doc/refman/5.1/en/identifier-case-sensitivity.html): ""Column, index, stored routine, and event names are not case sensitive on any platform, nor are column aliases."" In other words, 'lower_case_table_names' does not affect the behaviour of those identifiers. On the other hand, trigger names are case sensitive on some platforms, and case insensitive on others. 'lower_case_table_names' does not affect the behaviour of trigger names either. The bug was that SHOW statements did case sensitive comparison for stored procedure / stored function / event names. Fix: Modified the code so that comparison in case insensitive for routines and events for ""SHOW"" operation. As part of this commit, only fixing the test failures due to the actual code fix. "	19c375c94c26b76d486c7755ada2dc748111f805
----------------------------
"Bug#11763507 - 56224: FUNCTION NAME IS CASE-SENSITIVE Analysis: ------------------------------- According to the Manual (http://dev.mysql.com/doc/refman/5.1/en/identifier-case-sensitivity.html): ""Column, index, stored routine, and event names are not case sensitive on any platform, nor are column aliases."" In other words, 'lower_case_table_names' does not affect the behaviour of those identifiers. On the other hand, trigger names are case sensitive on some platforms, and case insensitive on others. 'lower_case_table_names' does not affect the behaviour of trigger names either. The bug was that SHOW statements did case sensitive comparison for stored procedure / stored function / event names. Fix: Modified the code so that comparison in case insensitive for routines and events for ""SHOW"" operation. "	7ed197c95f07212dac0f81213b9972a050563d75
----------------------------
Merge: e3f51ea 0fe9238 Bug#13799555: ROWS_QUERY_LOG_EVENTS DOES NOT ESCAPE MULTI-LINE QUERIES PROPERLY When binlog_rows_query_log_events = 1 and a statement is written to the binary log in row format, the server generates a log event containing the original query text. If mysqlbinlog is given the option --verbose --verbose the original statement is printed. To prevent the statement from being executed, it is prefixed by '#'. However, this is not enough for multi-line statements: only the first line of the query will be commented out. If a malicious user knows that the binary log will be processed using mysqlbinlog --verbose --verbose, then the user can execute arbitrary statements on the server. Prefix every line of a multi-line query with '#' to prevent the statement from being executed when binary log will be processed using 'mysqlbinlog --verbose --verbose'. 	94577f271d0642a52ef9884ee569e115507bc48f
----------------------------
Bug#13799555: ROWS_QUERY_LOG_EVENTS DOES NOT ESCAPE MULTI-LINE QUERIES PROPERLY When binlog_rows_query_log_events = 1 and a statement is written to the binary log in row format, the server generates a log event containing the original query text. If mysqlbinlog is given the option --verbose --verbose the original statement is printed. To prevent the statement from being executed, it is prefixed by '#'. However, this is not enough for multi-line statements: only the first line of the query will be commented out. If a malicious user knows that the binary log will be processed using mysqlbinlog --verbose --verbose, then the user can execute arbitrary statements on the server. Prefix every line of a multi-line query with '#' to prevent the statement from being executed when binary log will be processed using 'mysqlbinlog --verbose --verbose'. 	7590f9cd4a57988d0afbae04d4f65e94b710ae5c
----------------------------
Bug#13799555: ROWS_QUERY_LOG_EVENTS DOES NOT ESCAPE MULTI-LINE QUERIES PROPERLY When binlog_rows_query_log_events = 1 and a statement is written to the binary log in row format, the server generates a log event containing the original query text. If mysqlbinlog is given the option --verbose --verbose the original statement is printed. To prevent the statement from being executed, it is prefixed by '#'. However, this is not enough for multi-line statements: only the first line of the query will be commented out. If a malicious user knows that the binary log will be processed using mysqlbinlog --verbose --verbose, then the user can execute arbitrary statements on the server. Prefix every line of a multi-line query with '#' to prevent the statement from being executed when binary log will be processed using 'mysqlbinlog --verbose --verbose'. 	0fe923845df46beb9aa267d725e09d56269f6cfe
----------------------------
Revert changes to configure.cmake from some release branch 	cbca73691c6b60d025781188c18e9a2332e8a84c
----------------------------
Bug#13880759 BUILD IS BROKEN WHEN -DWITH_SSL=SYSTEM When compiled as part of libmysql, the #defines for HAVE_YASSL and HAVE_OPENSSL were broken. Fixed by not including my_global.h in md5.cc (it does not need it, so it should not be included) 	1d60c865b31b255e68eafb14ee12ba54d2d8f582
----------------------------
BUG#13702397 - 64211: 'CREATE TABLE ... LIKE ...' FAILS TO KEEP CASE BACKGROUND: Regular Create Table Statements properly keep the case on a case insensitive file system like Windows or Mac OS X when lower_case_table_names= 2 whereas while creating tables LIKE another (create table <tablename> LIKE <tablename>), the table name case is ignored on a case insensitive file system when lower_case_table_names= 2. This problem is mentioned as part of this bug report. This behaviour was annoying and not consistent with the documentation. FIX: This bug is fixed by populating the alias in local_create_info structure in mysql_create_like_table function when create table <tablename> LIKE <tablename> query is issued equal to alias information that is stored in create_info structure.This assignment was missing due to which this bug was happening. Also a testcase has been written in lowercase_table2.test and the corresponding result file has also been updated. 	166f5123ff0ce5ddbb396f0a711a8d25892973f6
----------------------------
Bug#13875241 INNODB-INDEX-ONLINE-PURGE.TEST TIMES OUT RANDOMLY innodb-index-online.test: Re-enable the core dump on DEBUG_SYNC timeout, so that we can analyze the failure better. 	1921bb0f3626e8c85d6710882899cf18b74be4e8
----------------------------
Bug#13875241 INNODB-INDEX-ONLINE-PURGE.TEST TIMES OUT RANDOMLY innodb-index-online-purge.test: Remove nondeterminism. Only one DEBUG_SYNC signal can be active at a time, otherwise the previous SIGNAL may be overwritten before it is consumed by a WAIT_FOR. innodb-index-online.test: Enable a trace file, so that we get more information what is going wrong. 	49557d0479db338bc595abfd23e51531008696d7
----------------------------
Making rpl.rpl_report_port test experimental. 	7b301cee87e2a0943fe27eae8239ae09cfedcc13
----------------------------
bug#13364905 / bug#62635 - Add support for --hostname=host:port format to ndb_size.pl 	8fc7b79cea0d9bdecc5f56ed83bc67e661b1caec
----------------------------
"Opt_trace_context::get_tail() was meant for the crash reporter (print the last 4kB of the trace); now the crash reporter doesn't use it, so I remove it; EXPLAIN JSON is made to use an iterator like select * from I_S.optimizer_trace does. Noticed that new(nothrow) is available since recently (since WL5825 ""Using C++ Standard Library with MySQL code""), and that WL introduced new(nothrow) into opt trace code, so some old todo can now be, and is, implemented here. Simplified opt_trace_context.h for when OPTIMIZER_TRACE is not defined. "	1ef5973376652de4a63d60f93a433753324affae
----------------------------
bug#13714648 MYSQL CLUSTER ALTER TABLE REORGANIZE PARTITION UNDEFINED BEHAVIOR Background ALTER ONLINE TABLE REORGANIZE PARTITION (ATRP) is used to create new table partitions (fragments), usually after new empty nodes have been added to a cluster. ATRP determines the number of fragments to create automatically, and if it determines that no new fragments are required, then no new fragments will be created. Tables are sometimes created with the MAX_ROWS option set.  This can be used to indicate to Ndb that extra fragments should be created to store the large number of rows. If MAX_ROWS was specified when a table was created, then ATRP will use it to decide the number of partitions required, which will be the same, so no new fragments will be created.  The table will not be rebalanced, and the new nodes remain empty. One option considered was to scale the configured MAX_ROWs with the relative increase in the number of nodes, but this results in different numbers of partitions depending on when a table is created. Solution The solution implemented here is to support ALTER ONLINE TABLE MAX_ROWS=<bigger_value> (ATMR).  Where the bigger MAX_ROWS value implies that more fragments are required, these will be allocated on the new data nodes, restoring table balance. For tables with MAX_ROWS explicitly defined, ATRP does not work. ndb_add_partition and ndb_addnode are modified to test the new mechanism. 	9916594a018ad046ebe06c0c26e163b9773b3d2c
----------------------------
"BUG#13857301 NDB_MGMD NOT STARTING WHEN USING --SKIP-CONFIG-CACHE OPTION - Problem occured when ndb_mgmd was started with --initial and --skip-config-cache. The function used to delete any old saved configs returned false when running without configdir. Changed the function to return true for the above case. - Also spotted a problem with --skip-config-cache and fetching the config from another mgmd, it would eventually have tried to save the config in the non existing configdir. - Added testcases for ""--initial --skip-config-cache"" and ""--skip-config-cache + fetch"" "	73c1a1c417ad189d0a0b865963b73c532dc6dcf4
----------------------------
"Bug#13595996 CREATE A CONSISTENT DEVELOPMENT CMAKE OPTION SET AND MAKE IT A DEFAULT The goal of this fix is that developers and pushbuild should do (roughly) the same when compiling the source code. - same set of compiler switches - same set of features built - same set of tests enabled/executed To this end, mysql_release.cmake has been split in three: compiler_options.cmake standardized compiler flags -O has been removed from Debug build (developers don't want anything optimized away when debugging) feature_set.cmake standardized feature set built is ""community"" mysql_release.cmake things needed by pushbuild, in particular DEBUG_EXTNAME Most of the scripts in BUILD have been removed. Exceptions are compile-dist         still used by PB compile-pentium-gcov still used by PB Some compile-pentium-xxx have been re-written, and are left as examples of how to configure cmake for gprof/valgrind debug/optimized. "	23fee0f53a9907ece079bf0cffc6d4f52489da59
----------------------------
Use debug_sync_abort_on_timeout to get a core dump on deadlock. 	a8cdd2135e9c0ed868e5d6a0b249db731ed73951
----------------------------
Use DBUG_EXECUTE_IF on DEBUG_SYNC timeout, instead of DBUG_ASSERT. 	d10a0740120e4bd3345942fab4b1d4a00468d6cc
----------------------------
Make DEBUG_SYNC timeout trigger an assertion failure, so that we get a core dump for a hang. 	9a55b970b2071a67774e0ce7a562e623ca01955e
----------------------------
Fix a debug crash from WL#5526. row_ins_index_entry_big_rec_func(): Use DEBUG_SYNC_C_IF_THD() instead of DEBUG_SYNC(), because this function can be invoked from an internal thread when building a full-text-search index. 	fea95a552b7c219dd538b74d1bd479b6fd3a76b6
----------------------------
"BUG#13868465 - ER_AUTO_POSITION_REQUIRES_GTID_MODE_ON PRINTS OUT A WRONG MESSAGE ""CHANGE MASTER TO"" accepts the option MASTER_AUTO_POSITION in order to enable auto_position when gtid is on. Howerver, if one tries to issue ""CHANGE MASTER TO MASTER_AUTO_POSITION"" when gtid is off, the following error message is printed out: CHANGE MASTER TO AUTO_POSITION = 1 can only be executed when GTID_MODE = ON. There is a typo in the error message as AUTO_POSITION does not exit. "	91c92216c908a15f6a41cbd962b22d532633357c
----------------------------
"Bug#12400313 - RELAY_LOG_SPACE_LIMIT IS NOT WORKING IN MANY CASES Post-push fixes to correct rli->sql_force_rotate_relay pattern of the main patch in MTS case. Similarly to STS case rotation of the over-sized relay-log is allowed only if there is no transaction ""transiting"" to the next log. "	1dd20a8bf358bfcb2d8e6c28f5a8818044d13374
----------------------------
set correct name on versioned configured mysql.spec file 	07245d1dc766f7679e26710c86b16de39b0d4f12
----------------------------
Bug#54854 Can't find good position for replication break between DDL statements This is part 2 of 2 patches to mysql-trunk (see revno #3745 for part 1): Simplify configuration of DDL-idempotency per mysqld option. To replay (partly applied) sequences of DDL statements, slave shall ignore DDL errors about missing/existing schema objects. The mysqld skip-errors option is extended to accept an alias slave-skip-errors=ddl_exist_errors,... as a shortcut for 10 individual ddl error codes slave-skip-errors=1007,1008,1050,1051,1054,1060,1061,1068,1091,1146,... A brief cli test verifies the correct resolution of the error alias. 	87f155077ce07e9d33d30a9c7f3eec27b5ddd786
----------------------------
Post-push fix for BUG#13538891. rpl_alter_repository restarts mysql with different options and mtr uses the latest configuration to start servers on new tests. This behavior has made rpl_checksum_cache to run after rpl_alter_repository with replication system tables although its use has not been requested. Apart from running a replication test with unexpected configuration, the scenario should not have led to any problem. However, a bug in rpl_alter_repository was corrupting the replication system tables and leading to the failure of the rpl_checksum_cache. Specifically, rpl_alter_repository was dropping columns from some replication tables to inject faults and adding them back to fix the failures. Unfortunately, the procedure was changing the order of the columns making replication to fail. The problem was not noticeable before BUG#13538891 due to MyIsam's permissive behavior which does automatic conversions. To fix the problems, we have changed rpl_alter_repository as follows: . At the end of the test, the server is restarted with an empty configuration. . Only the last column of the table is dropped. 	911f24e7428bf4f6b9605fd8fb067fca66077167
----------------------------
BUG#13538891 - REP. TABLES SLAVE_MASTER_INFO AND SLAVE_WORKER_INFO MUST BE INNODB BY DEFAULT To provide a crash-safe slave, we had to change the engine used by the tables slave_master_info, slave_relay_log_info and slave_worker_info from MyISAM to Innodb. However, this additional step was causing confusion as simply storing replication meta-information into tables was supposed to be safe. We had decided to use MyISAM to create the aforementioned tables to keep compatibility with system tables which also use MyISAM. To avoid any sort of confusion, we use now Innodb to create the tables: slave_master_info, slave_relay_log_info and slave_worker_info. 	082d59670f2616f68af37666fac0f23dbeb43099
----------------------------
"BUG#13504281 - FOLLOW UP 'LIVE UPGRADE FAILS BETWEEN 5.5 -> 5.6.4 (BUG#13427444) Replication objects are always created so repositories are checked in the initialization routine even when --server-id is equal to ""0"" (i.e. default value), although a valid --server-id (i.e. not equal to the default value) is a requirement to use either a master or slave. This may cause confusion in live upgrades when an user tries to migrate from 5.5 to 5.6 because the operation stops with an error and asking users to provide --skip-slave-start in order to avoid the problem. To avoid this scenario, we only create the replication objects when a valid --server-id is provided. "	a497e03fbc4b2e4cd0e4498d70a2d6a4a54aabbd
----------------------------
Add memc251_w_batch_6.test to test daemon_memcached_w_batch_size to be set to the maximum value (1048576). 	9819155a1001152d931e36a51b06da0462a70db4
----------------------------
Port merge cleanup for WL#5259 performance schema host cache. Renamed columns / system variables for consistency with existing names. - COUNT_MAX_USER_CONNECTION_ERRORS --> COUNT_MAX_USER_CONNECTIONS_ERRORS - COUNT_MAX_USER_CONNECTION_PER_HOUR_ERRORS --> COUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORS - Connection_errors_max_connection --> Connection_errors_max_connections 	75a3806a51e3d4cde598504f68b1e567561bf4f4
----------------------------
Port merge cleanup for WL#5259 performance schema host cache. Renamed columns / system variables for consistency with existing names. - COUNT_MAX_USER_CONNECTION_ERRORS --> COUNT_MAX_USER_CONNECTIONS_ERRORS - COUNT_MAX_USER_CONNECTION_PER_HOUR_ERRORS --> COUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORS - Connection_errors_max_connection --> Connection_errors_max_connections 	950e234db729a1fdcc0732b2ae0abe5649828224
----------------------------
Bug#13428909 CONFLICT DETECTION OPERATION EXECUTION ERROR HANDLING INCOMPLETE - Error handling in some conflict detection/resolution scenarios was incomplete - This patch improves error handling and reporting - Also, reporting of misconfiguration is improved. - Infrastructure for manual testing is added, automated testing not setup yet. 	bb0b0156c61f42bfb03d17518307ff57d14cfdbd
----------------------------
BUG#12400313 RELAY_LOG_SPACE_LIMIT IS NOT WORKING IN MANY CASES BUG#64503: mysql frequently ignores --relay-log-space-limit When the SQL thread goes to sleep, waiting for more events, it sets the flag ignore_log_space_limit to true. This gives the IO thread a chance to queue some more events and ultimately the SQL thread will be able to purge the log once it is rotated. By then the SQL thread resets the ignore_log_space_limit to false. However, between the time the SQL thread has set the ignore flag and the time it resets it, the IO thread will be queuing events in the relay log, possibly going way over the limit. This patch makes the IO and SQL thread to synchronize when they reach the space limit and only ask for one event at a time. Thus the SQL thread sets ignore_log_space_limit flag and the IO thread resets it to false everytime it processes one more event. In addition, everytime the SQL thread processes the next event, and the limit has been reached, it checks if the IO thread should rotate. If it should, it instructs the IO thread to rotate, giving the SQL thread a chance to purge the logs (freeing space). Finally, this patch removes the resetting of the ignore_log_space_limit flag from purge_first_log, because this is now reset by the IO thread every time it processes the next event when the limit has been reached. If the SQL thread is in a transaction, it cannot purge so, there is no point in asking the IO thread to rotate. The only thing it can do is to ask for more events until the transaction is over (then it can ask the IO to rotate and purge the log right away). Otherwise, there would be a deadlock (SQL would not be able to purge and IO thread would not be able to queue events so that the SQL would finish the transaction). 	5360c4e5bcb29d90c36c775a5f874fefaa4a671b
----------------------------
"BUG#13820370 - RPL_GTID_MODE FAILS IN PB The test case rpl_gtid_mode.test is doing the following steps to check whether the server fails while starting up as supposed to be or not: . starting slave with gtid-mode=ON; . issuing ""CHANGE MASTER TO AUTO_POSITION=1""; . shutting down slave; . trying to restart slave with gtid-mode=OFF. However, when the slave fails in the startup routine, it tries to print out an error message with ER(X) which uses ""current_thread"". This variable is not defined though as there is no thread causing a segmentation fault. To fix the problem, we replace ER(X) by my_error(). "	a9b580319c326e84798f7706d4dd2f8dba7be3e4
----------------------------
Bug#54854 Can't find good position for replication break between DDL statements Part 1 of patches to mysql-trunk. Overall fix has two parts : 1) Improve Ndb replication channel cutover with precise next-position-after-epoch-trans in the mysql.ndb_binlog_index table. 2) Simplify configuration of DDL-idempotency with a new MySQL Server option Part 1) of the fix includes patches affecting the generic MySQL Server (this commit) and patches affecting the Ndb storage engine. Part 2) of the fix includes patches affecting the generic MySQL Server. This commit adds a THD member which records the next Binlog position (filename and offset) after the last Binlog event recorded by the thread. This information is exposed via an extension to the Binlog injector Api. Further patches to be pushed to the MySQL Cluster branches make use of this functionality to fix bug#54854. In mysql-trunk builds, this functionality has no externally visible effect, and therefore no specific testcase. Testcases are added in branches merging this branch and MySQL Cluster. 	6b7ea50c7d964b0f477c6086e6a6b9668cd2a26e
----------------------------
Bug #13817703 - auto_increment_offset != 1 + innodb_autoinc_lock_mode=1 => bulk inserts fail Follow up to fix: If offset > max_value then we return max_value. 	38d034d9e7c3e311b008cad6846eb8361414d54d
----------------------------
Merge: 231543e aaead0e BUG#13812374 - RPL.RPL_REPORT_PORT FAILS OCCASIONALLY ON PB2 Upmerge from mysql-5.5 -> mysql-trunk. 	39fe2b7172c6448240c4ca654fe30079f419d393
----------------------------
BUG#13812374 - RPL.RPL_REPORT_PORT FAILS OCCASIONALLY ON PB2 Fix - Changed the implementation of the condition check from the result file to using an assert. 	aaead0efb4adcb54509605f40a41c61539e74c7b
----------------------------
Bug #13817703 - auto_increment_offset != 1 + innodb_autoinc_lock_mode=1 => bulk inserts fail Fix the calculation of the next autoinc value when offset > 1. Some of the results have changed due to the changes in the allocation calculation. The new calculation will result in slightly bigger gaps for bulk inserts. rb://866 Approved by Jimmy Yang. 	7a99aace1e855119caee2f1a558895a42eb6d806
----------------------------
The my_default_lc_messages variable was not exported by mysqld causing link error(undefined symbol) when compiling ha_archive as dynamic plugin on Windows. Change the my_default_lc_messags variable to be exported by mysqld using the MYSQL_PLUGIN_IMPORT macro. Approved via email by Svoj. 	0acde707e0ff90f9cf09a115f78260f25e8e5069
----------------------------
Bug#13731134  AUTO-INC COUNTER IS NOT UPDATED WITH EXPLICIT @@INSERT_ID SET: Setting auto_increment in Ndb directly 	309c8519a185608a6cb1c5f0c30088f7384adf60
----------------------------
Fix memory leaks in Config_v1. 	8cce35ce8b0ceab3b04cf745d7e18ea6bbd6ce16
----------------------------
Use NdbRecord-formatted data buffer to store values for domain model Both the original Object[ ] implementation and the NdbRecord implementation are available, statically configured via a -D option or system environment Improve error reporting for tests NdbRecord domain model is implemented for insert, delete, update, and write Optimized use of NdbRecord domain model for find, query, load is not yet implemented 	6a2937d54a80c86395c1f4e41e33ba68ca99c7a8
----------------------------
BUG#13681205: REPLICATION FAILS DURING SLAVE WORKERS INITIALIZATION, CRASHES SLAVE The maximum set for the option slave_checkpoint_group was off by 7. Since this field, when stored in a table, is stored as a blob, then its value must be 1 < slave_checkpoint_group < 2^16*8. However it was wrongly set to 2^16*8-1 (524287) instead of 2^16*8-8 (524280). Furthermore, when the slave failed to initialize the info repository, it would crash sometimes because the worker jobs queue might point to some random memory. We fix this by correcting the MTS_MAX_BITS_IN_GROUP and by freeing the jobs queue only if it is flagged as initialized. 	f920205a38c6bb90b2cc1248b73fb34a98e80a57
----------------------------
BUG#13553750 - 61096: REPLICATION FROM MASTER WITH NEW CHECKSUM ALGORITHM Problem - In the event that the master is extended with a new checksum algorithm not known to the slave, the slave will deduce that there is no checksum support in the master. However, the master will send events with the new checksum while the slave treats it as no checksum, with potential for treating the checksum as part of the event body. Fix - Added a new variable BINLOG_CHECKSUM_ALG_UNKNOWN to denote the checksum algorithm used by master, which is unknown to the slave. Changed the code that checks the result of the SET @master_binlog_checksum = @@global.binlog_checksum on the slave. Set mi->checksum_alg_before_fd to BINLOG_CHECKSUM_ALG_OFF if an error is reported while executing the query. Incase there is no error and the checksum algorithm is unknown function find_type returns 0 and the value of mi->checksum_alg_before_fd == -1. In such a case we stop the slave with an error message. 	07b8052a4d8d3ca988647dda6cf8daca200c1756
----------------------------
"Bug #13428853	DONT CHECK/CREATE CONFIG-DIR WHEN SKIP-CONFIG-CACHE IS USED - Skip check and create of config dir if no config cache is being used - Add test case "	516de36390459dc1c262687e40d16b20f39acafd
----------------------------
"WL#5522 - Change the .cfg file format to: ib_uint32_t	version; string_t	hostname; string_t	table_name; ib_uint32	Number of columns dict_col_t	For each column + string_t (column name) ib_uint32_t	Number of indexes row_import_t	For each index Where string_t is { ib_uint32_t, byte array[] }; "	69e466e1a501d303c1a7ebc55e22e729da9fe632
----------------------------
BUG#13779291: RACE CONDITION AROUND ROTATE RELAY LOGS & FLUSH LOGS This is part 6 of the patch. It only cleans up redundant junk from the source files. The parameter log_type_arg in MYSQL_BIN_LOG::open_binlog(char*,...) is always equal to LOG_BIN. So it can be removed. 	a4c0273ab9ad7fb723ebd0eabfb9281e6bebccd6
----------------------------
BUG#13779291: RACE CONDITION AROUND ROTATE RELAY LOGS & FLUSH LOGS This is part 2 of the patch. It only makes one small refactoring to make the code more maintainable. Problem: Objects that are used by any binary or relay log are supposed to be stored in MYSQL_BIN_LOG. Objects that are used by only the SQL thread are supposed to be stored in Relay_log_info. The Format_description_log_event that is used by the SQL thread to read events was incorrectly a member of MYSQL_BIN_LOG. Fix: Move the format_description_log_event to Relay_log_info. Also, make it a private member and encapsulate any use of it in setter/getter functions. 	494c013259b07f2cfce4d35037a3e3ff37bc95a1
----------------------------
BUG#13779291: RACE CONDITION AROUND ROTATE RELAY LOGS & FLUSH LOGS This is part 1 of the patch. It only makes small refactorings to make the code more maintainable. Problem: Replication locks are poorly implemented. In particular: - locks are undocumented - there are some missing assertions in some functions that require a lock to be taken - some function names are overloaded unnecessarily so that it is hard to grep for places where a particular function is invoked - some variable names could be more descriptive - we have protocols controlling which locks to hold before invoking particular functions (but the protocols are often not spelt out explicitly or ensured by assertions). change_master breaks the protocol for init_relay_log_pos by not taking rli.data_lock. this was not detected previously because of missing assertions. one consequence is that there is a race where show slave status can read relay log position/file name while change master is modifying them. Fix: - improve the comment at the top of rpl_slave.h to incorporate an analysis of the locking order - add assertions to functions that require a lock to be held by the caller - there are a lot of functions called init_info, making it hard to track which particular function is called at a given place. rename: - the global init_info -> global_init_info - Master_info::init_info -> Master_info::mi_init_info - Relay_log_info::init_info -> Relay_log_info::rli_init_info - make change_master follow the protocol for init_relay_log_pos. this also fixes the race. 	3d4edd56a5e37bb30c331e17991bdce58ac30c04
----------------------------
"Consolidate locking API for ""innodb_api_disable_rowlock"" configure parameter. "	a2e9795260a398a2c997cd32669fd666b8150a50
----------------------------
"WL#5968: Implement START TRANSACTION READ (WRITE|ONLY); This worklog implements support for explicitly or implicitly starting read-only transactions. During a read-only transaction all DDL statements as well as inserts, updates and deletions of data in non-temporary tables will return an error message: ""Cannot execute statement in a READ ONLY transaction."" The reason for implementing support for read-only transactions is that it allows engine optimizations that will result in performance improvements for read-only workloads. Read-only transactions can be explicitly started using the new START TRANSACTION READ ONLY syntax. Similarly, read-write transactions can be explicitly started using START TRANSACTION READ WRITE. Read-only transactions can be implicitly started by first changing the default access mode to read-only using: *) SET [GLOBAL|SESSION] TRANSACTION READ ONLY (READ WRITE is also supported) *) Global/session dynamic server variable ""tx_read_only"". This has the same effect as SET GLOBAL/SESSION TRANSACTION. *) Server startup option --transaction-read-only and then starting a transaction without explicit access mode. Note that read-write is the default access mode (matching existing behavior before this worklog). Note that SET TRANSACTION READ ONLY (or READ WRITE) sets the access mode for the next (and only next) transaction, while SET SESSION sets the session server variable which will affect all following transactions. The worklog also updates the client/server protocol by adding a new SERVER_STATUS_IN_TRANS_READONLY server status flag. This allows clients to examine the access mode of any current transaction. Incompatible change: SET TRANSACTION is now a separate statement from SET. This means that it is now longer possible to execute e.g. SET @a= 1, TRANSACTION ISOLATION LEVEL SERIALIZABLE. "	c63e26d66d94d41b8dda2787646b9defbe012bf1
----------------------------
"BUG#12640437 - USING SQL_BUFFER_RESULT RESULTS IN A DIFFERENT QUERY OUTPUT For all but simple grouped queries, temporary tables are used to resolve grouping. In these cases, the list of grouping fields is stored in the temporary table and grouping is resolved there (e.g. by adding a unique constraint on the involved fields). Because of this, grouping is already done when the rows are read from the temporary table. In the case where a group clause may be optimized away, grouping does not have to be resolved using a temporary table. However, if a temporary table is explicitly requested (e.g. because the SQL_BUFFER_RESULT hint is used, or the statement is INSERT...SELECT), a temporary table is used anyway. In this case, the temporary table is created with an empty group list (because the group clause was optimized away) and it will therefore not create groups. Since the temporary table does not take care of grouping, JOIN::group shall not be set to false in make_simple_join(). This was fixed in bug 12578908. However, there is an exception where make_simple_join() should set JOIN::group to false even if the query uses a temporary table that was explicitly requested but is not strictly needed. That exception is if the loose index scan access method (explain says ""Using index for group-by"") is used to read into the temporary table. With loose index scan, grouping is resolved by the access method. This is exactly what happens in this bug. "	20b68e5360fe453e8e6aabf425b8794f15bee4fa
----------------------------
WL#6158 followup * Rename variable Opt_partial_plans to Last_query_partial_plans. * Reset the variable for each query so that it works similar to Last_query_cost * It does not make sense to have a global version of this variable. 	e09e912ed4b100b3b2ba2f4b080132abf586df19
----------------------------
The innodb plugin module cannot use DEBUG_SYNC_C facility on Windows. Taking care of it. 	98642459db8481a90f54bddd9fc24aa4a06df805
----------------------------
WL#5824: Added a test for daemon_memcached_option. 	06de50e8f7f59667f718691c4b8461ddccc96a64
----------------------------
"WL#5855: Print EXPLAIN in JSON format * New syntax has been added to output EXPLAIN in a structured form: EXPLAIN FORMAT=JSON * Traditional EXPLAIN output format has been modified: 1. The ""Extra"" column: * metadata change: was not-nullable, from now it is nullable; * default value: was: empty string, from now: NULL 2. The ""ref"" column: * default value: was: mix of empty string in one cases and NULL in others, from now: NULL 3. The ""partitions"" column: * default value: was: empty string, from now: NULL * New system variable has been added: end_markers_in_json * The old optimizer_trace variable has been modified to not accept the ""end_marker"" parameter (moved to ""end_markers_in_json""). * New error message has been added: ER_UNKNOWN_EXPLAIN_FORMAT * mysqltest and MTR utilities have updated to accept a new command line parameter: --json-explain-protocol "	6a5d275cb28f4ff6d896933e321d393028ff2109
----------------------------
"Merge: 26ed79e 9af695f Bug#12601974 - STORED PROCEDURE SQL_MODE=NO_BACKSLASH_ESCAPES IGNORED AND BREAKS REPLICATION Analysis: ======================== sql_mode ""NO_BACKSLASH_ESCAPES"": When user want to use backslash as character input, instead of escape character in a string literal then sql_mode can be set to ""NO_BACKSLASH_ESCAPES"". With this mode enabled, backslash becomes an ordinary character like any other. SQL_MODE set applies to the current client session. And while creating the stored procedure, MySQL stores the current sql_mode and always executes the stored procedure in sql_mode stored with the Procedure, regardless of the server SQL mode in effect when the routine is invoked. In the scenario (for which bug is reported), the routine is created with sql_mode=NO_BACKSLASH_ESCAPES. And routine is executed with the invoker sql_mode is """" (NOT SET) by executing statement ""call testp('Axel\'s')"". Since invoker sql_mode is """" (NOT_SET), the '\' in 'Axel\'s'(argument to function) is considered as escape character and column ""a"" (of table ""t1"") values are updated with ""Axel's"". The binary log generated for above update operation is as below, set sql_mode=XXXXXX (for no_backslash_escapes) update test.t1 set a= NAME_CONST('var',_latin1'Axel\'s' COLLATE 'latin1_swedish_ci'); While logging stored procedure statements, the local variables (params) used in statements are replaced with the NAME_CONST(var_name, var_value) (Internal function) (http://dev.mysql.com/doc/refman/5.6/en/miscellaneous-functions.html#function_name-const) On slave, these logs are applied. NAME_CONST is parsed to get the variable and its value. Since, stored procedure is created with sql_mode=""NO_BACKSLASH_ESCAPES"", the sql_mode is also logged in. So that at slave this sql_mode is set before executing the statements of routine.  So at slave, sql_mode is set to ""NO_BACKSLASH_ESCAPES"" and then while parsing NAME_CONST of string variable, '\' is considered as NON ESCAPE character and parsing reported error for ""'"" (as we have only one ""'"" no backslash). At slave, parsing was proper with sql_mode ""NO_BACKSLASH_ESCAPES"". But above error reported while writing bin log, ""'"" (of Axel's) is escaped with ""\"" character. Actually, all special characters (n, r, ', "", \, 0...) are escaped while writing NAME_CONST for string variable(param, local variable) in bin log irrespective of ""NO_BACKSLASH_ESCAPES"" sql_mode. So, basically, the problem is that logging string parameter does not take into account sql_mode value. Fix: ======================== So when sql_mode is set to ""NO_BACKSLASH_ESCAPES"", escaping  characters as (n, r, ', "", \, 0...) should be avoided. To do so, added a check to not to escape such characters while writing NAME_CONST for string variables in bin log. And when sql_mode is set to NO_BACKSLASH_ESCAPES, quote character ""'"" is represented as ''. http://dev.mysql.com/doc/refman/5.6/en/string-literals.html (There are several ways to include quote characters within a string: ) "	892760d9eecb96eea2de0230b46c839aed3840e4
----------------------------
"Bug#12601974 - STORED PROCEDURE SQL_MODE=NO_BACKSLASH_ESCAPES IGNORED AND BREAKS REPLICATION Analysis: ======================== sql_mode ""NO_BACKSLASH_ESCAPES"": When user want to use backslash as character input, instead of escape character in a string literal then sql_mode can be set to ""NO_BACKSLASH_ESCAPES"". With this mode enabled, backslash becomes an ordinary character like any other. SQL_MODE set applies to the current client session. And while creating the stored procedure, MySQL stores the current sql_mode and always executes the stored procedure in sql_mode stored with the Procedure, regardless of the server SQL mode in effect when the routine is invoked. In the scenario (for which bug is reported), the routine is created with sql_mode=NO_BACKSLASH_ESCAPES. And routine is executed with the invoker sql_mode is """" (NOT SET) by executing statement ""call testp('Axel\'s')"". Since invoker sql_mode is """" (NOT_SET), the '\' in 'Axel\'s'(argument to function) is considered as escape character and column ""a"" (of table ""t1"") values are updated with ""Axel's"". The binary log generated for above update operation is as below, set sql_mode=XXXXXX (for no_backslash_escapes) update test.t1 set a= NAME_CONST('var',_latin1'Axel\'s' COLLATE 'latin1_swedish_ci'); While logging stored procedure statements, the local variables (params) used in statements are replaced with the NAME_CONST(var_name, var_value) (Internal function) (http://dev.mysql.com/doc/refman/5.6/en/miscellaneous-functions.html#function_name-const) On slave, these logs are applied. NAME_CONST is parsed to get the variable and its value. Since, stored procedure is created with sql_mode=""NO_BACKSLASH_ESCAPES"", the sql_mode is also logged in. So that at slave this sql_mode is set before executing the statements of routine.  So at slave, sql_mode is set to ""NO_BACKSLASH_ESCAPES"" and then while parsing NAME_CONST of string variable, '\' is considered as NON ESCAPE character and parsing reported error for ""'"" (as we have only one ""'"" no backslash). At slave, parsing was proper with sql_mode ""NO_BACKSLASH_ESCAPES"". But above error reported while writing bin log, ""'"" (of Axel's) is escaped with ""\"" character. Actually, all special characters (n, r, ', "", \, 0...) are escaped while writing NAME_CONST for string variable(param, local variable) in bin log Airrespective of ""NO_BACKSLASH_ESCAPES"" sql_mode. So, basically, the problem is that logging string parameter does not take into account sql_mode value. Fix: ======================== So when sql_mode is set to ""NO_BACKSLASH_ESCAPES"", escaping  characters as (n, r, ', "", \, 0...) should be avoided. To do so, added a check to not to escape such characters while writing NAME_CONST for string variables in bin log. And when sql_mode is set to NO_BACKSLASH_ESCAPES, quote character ""'"" is represented as ''. http://dev.mysql.com/doc/refman/5.6/en/string-literals.html (There are several ways to include quote characters within a string: ) "	9af695fb4587a6e53241d05635caaaa113ac95d8
----------------------------
WL#5259 PERFORMANCE_SCHEMA HOST_CACHE Fixed FreeBSD build break 	d7514926af7c4379f6c1426a3ab6a58aaca5bf86
----------------------------
Increase the default mysql-test-run --debug-sync-timeout from 5 to 10 minutes, so that innodb.innodb-index-online will not fail on slow hosts, such as Solaris SPARC. 	777408153aba409e673d68a3cbe3d3dee5458a52
----------------------------
BUG#13627921 - MISSING FLAGS IN SQL_COMMAND_FLAGS MAY LEAD TO REPLICATION PROBLEMS Flags in sql_command_flags[command] are not correctly set for the following commands: . SQLCOM_SET_OPTION is missing CF_CAN_GENERATE_ROW_EVENTS; . SQLCOM_BINLOG_BASE64_EVENT is missing CF_CAN_GENERATE_ROW_EVENTS; . SQLCOM_REVOKE_ALL is missing CF_CHANGES_DATA; . SQLCOM_CREATE_FUNCTION is missing CF_AUTO_COMMIT_TRANS; This may lead to a wrong sequence of events in the binary log. To fix the problem, we correctly set the flags in sql_command_flags[command]. 	09aba56df07c6d2dcd86c2cb6e0219b626d03315
----------------------------
"Bug#12601974 - STORED PROCEDURE SQL_MODE=NO_BACKSLASH_ESCAPES IGNORED AND BREAKS REPLICATION Moving test cases not applicable to embedded server to ""not_embedded_server.test"" from ""sql_mode.test"" "	e1ac447b394908c43fca1a90a21b5f352a47ee3f
----------------------------
"Merge: 381cd04 1a6b866 WL#5259 PERFORMANCE_SCHEMA HOST_CACHE Merge of performance_schema.host_cache (mysql-trunk-wl5259) to mysql-trunk. This feature is also related to: MySQL Bug#22821  Adding ""SHOW HOST_CACHE"" patch from Jeremy Cole Bug#11746048 - 22821: ADDING ""SHOW HOST_CACHE"" PATCH FROM JEREMY COLE MySQL Bug#24906  No command to monitor blocked hosts Bug#11746269 - 24906: NO COMMAND TO MONITOR BLOCKED HOSTS MySQL Bug#45817  Please add SHOW command for inc_host_errors(max_connect_errors) Bug#11754244 - 45817: PLEASE ADD SHOW COMMAND FOR INC_HOST_ERRORS(MAX_CONNECT_ERRORS) MySQL Bug#59404  More info from host cache Bug#11766316 - 59404: MORE INFO FROM HOST CACHE "	646f74dddc642ab1afa8219dfcab309555f9226c
----------------------------
Fix null pointer dereferencing in fulltext index creation debug code. DEBUG_SYNC_C_IF_THD(): Like DEBUG_SYNC_C(), but do nothing if the supplied THD (current_thd) is NULL. InnoDB full-text indexes are being inserted by a background thread. This fixes a failure of innodb_fts.innodb_fts_large_records in debug builds. 	7b8b8dcedf931c3ddb8bcb4691ae7421d2cde215
----------------------------
Merge: 25e6ee1 be866ad BUG#13333431 - INCORRECT DEFAULT PORT IN 'SHOW SLAVE HOSTS' OUTPUT Problem - The default port number shown in SHOW SLAVE HOSTS is always 3306 though the slave is actually listening on a different port number. This is a problem as the user can not be sure whether this port value can be trusted and so client trying to read replication topology can get confused. Fix - 3306 ceases to be the default value of report-port. Moreover report-port does not have a static default any longer. Instead we initialize report-port to 0 as the new default value and change it based on two checks : 1) If report_port is not set, the slave reports the port number its listening on. (i.e. if report-port is not set we get the actual value of the slave's port number). 2) If report-port is set, we show the value report-port is set to, as the slave's port number. 	6dcba774ed8119243a0991997bb54e48bb7ce441
----------------------------
Merge: 91bd28c 83c8b19 BUG#13333431 - INCORRECT DEFAULT PORT IN 'SHOW SLAVE HOSTS' OUTPUT Problem - The default port number shown in SHOW SLAVE HOSTS is always 3306 though the slave is actually listening on a different port number. This is a problem as the user can not be sure whether this port value can be trusted and so client trying to read replication topology can get confused. Fix - 3306 ceases to be the default value of report-port. Moreover report-port does not have a static default any longer. Instead we initialize report-port to 0 as the new default value and change it based on two checks : 1) If report_port is not set, the slave reports the port number its listening on. (i.e. if report-port is not set we get the actual value of the slave's port number). 2) If report-port is set, we show the value report-port is set to, as the slave's port number. 	be866add0622db4258a0659c1e01ea7ae2fb5445
----------------------------
WL#3584 Fix for rpl_gtid_mode.test wich fails in innodb_page_size=4K and in innodb_page_size=8K collections. The test stops and starts the server manually, but it does not set the innodb_page_size correctly. Thus when restarting the server without specifying the page size that was used before stopping the server, makes the test case fail when the page size was different from the default value. We fix this by including in the options passed to the mysqld, at restart time, the original value of innodb_page_size. 	cbda446e30b72b4972a6df8fd314056d59c85d79
----------------------------
WL#5767 PERFORMANCE_SCHEMA statement digests Fixed timestamp bug pfs_engine_table 	b44299498ee3191df92cab436888cb6ee512be1a
----------------------------
BUG#13738296 - INSUFFICIENT SIZE OF MAX_ALLOWED_PACKET ON MASTER CAUSING SLAVE TO FAILED ON WIN Transactions' changes are gathered in caches which upon commit are written to the binary log. This cache however does not support seek operations and an attempt to issue a seek operation against it may corrupt the binary log. This happens when the content of the cache does not fit in-memory and a swap are is used. In this case, when a seek is issued the content of the swap are is not read back to memory so that any attempt to write the in-memory part back to the swap are will write garbage into it. In the WL#3584, we used a seek to reposition the cursor on the file and rewrite the GTID thus leading to a corrupted binary log. To fix the problem, we flush the in-memory part of the cache to the swap area, call reinit_io_cache to reposition the cursor and read the correct content back to memory, update the gtid and flush the memory back to disk. This solution though has a performance drawback as a flush to the swap area is required even when there is enough memory to accommodate all transaction's changes. 	00cd821d5d42630087a7b928f1f011d18c962fb5
----------------------------
"Fix for bug#13567414 -- memcached segfaults if ""ndbmemcache"" config database does not exist. "	75ee1e9ae853e940c66e979092bac30e9e84e44a
----------------------------
Fix for WL#5558: Resolve ORDER BY execution method at the optimization stage Recommit, including review comments, and some new tests after trunk-backporting was merged into trunk. The decision whether to sort result dataset or use ordered index scan to get sorted result was partly made in JOIN::optimize, and partly in JOIN::execute(). Furthermore the logic for EXPLAIN'ing the sort was different/incorrect compared to the logic used for determine filesort or not during execution. This sometimes caused EXPLAIN to be incorrect. This refactoring WL moves the decision on how to handle ORDER BY to the optimization stage. It is a pure refactoring in the sense that it does not change the current filesort cost model. However, several test results has changed as the EXPLAIN of those used to be incorrect. During the refactoring task several other bugs has also been reported and fixed as standalone bugs, these are: - bug 13514959: query plan fails to 'using index' where it should - bug 13528826: test_if_cheaper_ordering(): calculates incorrect 'select_limit' - bug 13529048: test_if_skip_sort_order() don't have to filesort a single row. - bug 13531865: test_if_skip_sort_order() incorrectly skip filesort if 'type' is ref_or_null As of today these fixes has already been reviewed and pushed into mysql-trrunk. As an extension of the refactoring in this commit, one should considder to move test_if_skip_sort_order() w/ family from sql_select.cc into sql_optimize.cc as this is new the only place it is used. (make it 'static' also) There is likely also some code in JOIN::execute() related to maintaining 'pre_idx_push_cond' which now is obsolete and should be considdered for removal. (later) 	54b7cd603c37a89974ac6cc27be3c7a9c834a874
----------------------------
Add WITH_INNODB_MEMCACHED compilation configure option 	86c2e189c6b5c5d4476e3a157669b0507117ba20
----------------------------
wl#3584 GTID relaxing conditions for HB info validation. Master can skip transactions that slave already got and this fact is never reported so the vanilla GTID-less logics fail because implicitly MI.pos should include the size of the skipped transactions. Until HB does not carry the skipped size validation only condiders monotonicity, i.e HB.pos >= MI.pos when gtid_mode is ON. 	07d1cfec1b5b9a4e45e11e6d469a605b9d9117c3
----------------------------
WL#5259 PERFORMANCE_SCHEMA host cache Change table_host_cache::materialize() to handle circularly linked host cache. 	8c6742a80a514171d7b75ea8c9ca8235ea1e8bf8
----------------------------
WL#5259 PERFORMANCE_SCHEMA host cache Change table_host_cache::materialize() to handle circularly linked host cache 	000cb2567f679ebb37d6c683c5a41b7c40d352b7
----------------------------
Followup to the merge from mysql-5.5 (vasil.dimov@oracle.com-20120220113532-7v6j14nj1p3o57u3) The help text for --ignore-builtin-innodb is different in mysql-trunk. 	fa5b18e7c41edc3ddd37eadc09123cafbad4a317
----------------------------
Adjust .result files of mysqld--help-notwin and mysqld--help-win mtr tests. This is a followup to vasil.dimov@oracle.com-20120217130947-03319op732dsf4m2 which added a deprecation notice to ignore-builtin-innodb 	923bf1462deeafe51cc076b1eeee11e58af38f2e
----------------------------
"Add support for MDL locking support. User can enable MDL locking by turning on ""innodb_api_enable_mdl"". "	fe353c69fb82949afb7c125862511adfc84eabfd
----------------------------
Post-push fix for BUG#13728026. After pushing the patch for BUG#13728026, some tests started failing on valgrind because the repository was not being registered in the Relay_log_info object. So when the thread and the Relay_log_info were destroyed the memory allocated for the repository was not freed causing a memory leak. The Relay_log_info object is responsible for destroying the repository. In this patch, we correctly register the repository in Relay_log_info object. 	e5c8b77e0e3db6c1645635c0795578955a3b743e
----------------------------
BUG#13729084 - COMBINATION OF RESET MASTER AND ROW FORMAT LEADS TO EVENT APPLY RATHER THAN SKIP The function gtid_pre_statement_checks() checks if a transaction was already processed and thus has to be skipped or otherwise has to be processed. In row mode, this routine was returning that already processed DML changes should be processed. This happened because the sql_command was not being reset and when a row event was procossed the function gtid_pre_statement_checks() got sql_command set to SQLCOM_BEGIN. To fix the problem, we reset sql_command to SQLCOM_END, as soon as a Query event is processed. 	426c18f90a50b4bf88d48e8d6e774bb721616b8a
----------------------------
Merge: 8927639 a45b4c6 Merge mysql-5.5 -> mysql-trunk In addition to emitting a warning when ignore-builtin-innodb is used, in 5.6 we ignore that option and start with InnoDB even when it is specified. 	63f0e7d92fe5271c8ada6a2faf4dab719ff5e0c6
----------------------------
"Print a deprecation warning when ignore-builtin-innodb is used This is part of Bug#13586262 INNODB - HIBISCUS: ISSUE DEPRECATION WARNINGS FOR VARIABLES Reviewed by:	Mark Alff "	a45b4c61558b915bcf3ef4f368cd73b0069b5c37
----------------------------
Bug#13721257 RACE CONDITION IN UPDATES OR INSERTS OF WIDE RECORDS This bug was originally filed and fixed as Bug#12612184. The original fix was buggy, and it was patched by Bug#12704861. Also that patch was buggy (potentially breaking crash recovery), and both fixes were reverted. This fix was not ported to the built-in InnoDB of MySQL 5.1, because the function signatures of many core functions are different from InnoDB Plugin and later versions. The block allocation routines and their callers would have to changed so that they handle block descriptors instead of page frames. When a record is updated so that its size grows, non-updated columns can be selected for external (off-page) storage. The bug is that the initially inserted updated record contains an all-zero BLOB pointer to the field that was not updated. Only after the BLOB pages have been allocated and written, the valid pointer can be written to the record. Between the release of the page latch in mtr_commit(mtr) after btr_cur_pessimistic_update() and the re-latching of the page in btr_pcur_restore_position(), other threads can see the invalid BLOB pointer consisting of 20 zero bytes. Moreover, if the system crashes at this point, the situation could persist after crash recovery, and the contents of the non-updated column would be permanently lost. The problem is amplified by the ROW_FORMAT=DYNAMIC and ROW_FORMAT=COMPRESSED that were introduced in innodb_file_format=barracuda in InnoDB Plugin, but the bug does exist in all InnoDB versions. The fix is as follows. After a pessimistic B-tree operation that needs to write out off-page columns, allocate the pages for these columns in the mini-transaction that performed the B-tree operation (btr_mtr), but write the pages in a separate mini-transaction (blob_mtr). Do mtr_commit(blob_mtr) before mtr_commit(btr_mtr). A quirk: Do not reuse pages that were previously freed in btr_mtr. Only write the off-page columns to 'fresh' pages. In this way, crash recovery will see redo log entries for blob_mtr before any redo log entry for btr_mtr. It will apply the BLOB page writes to pages that were marked free at that point. If crash recovery fails to see all of the btr_mtr redo log, there will be some unreachable BLOB data in free pages, but the B-tree will be in a consistent state. btr_page_alloc_low(): Renamed from btr_page_alloc(). Add the parameter init_mtr. Return an allocated block, or NULL. If init_mtr!=mtr but the page was already X-latched in mtr, do not initialize the page. btr_page_alloc(): Wrapper for btr_page_alloc_for_ibuf() and btr_page_alloc_low(). btr_page_free(): Add a debug assertion that the page was a B-tree page. btr_lift_page_up(): Return the father block. btr_compress(), btr_cur_compress_if_useful(): Add the parameter ibool adjust, for adjusting the cursor position. btr_cur_pessimistic_update(): Preserve the cursor position when big_rec will be written and the new flag BTR_KEEP_POS_FLAG is defined. Remove a duplicate rec_get_offsets() call. Keep the X-latch on index->lock when big_rec is needed. btr_store_big_rec_extern_fields(): Replace update_inplace with an operation code, and local_mtr with btr_mtr. When not doing a fresh insert and btr_mtr has freed pages, put aside any pages that were previously X-latched in btr_mtr, and free the pages after writing out all data. The data must be written to 'fresh' pages, because btr_mtr will be committed and written to the redo log after the BLOB writes have been written to the redo log. btr_blob_op_is_update(): Check if an operation passed to btr_store_big_rec_extern_fields() is an update or insert-by-update. fseg_alloc_free_page_low(), fsp_alloc_free_page(), fseg_alloc_free_extent(), fseg_alloc_free_page_general(): Add the parameter init_mtr. Return an allocated block, or NULL. If init_mtr!=mtr but the page was already X-latched in mtr, do not initialize the page. xdes_get_descriptor_with_space_hdr(): Assert that the file space header is being X-latched. fsp_alloc_from_free_frag(): Refactored from fsp_alloc_free_page(). fsp_page_create(): New function, for allocating, X-latching and potentially initializing a page. If init_mtr!=mtr but the page was already X-latched in mtr, do not initialize the page. fsp_free_page(): Add ut_ad(0) to the error outcomes. fsp_free_page(), fseg_free_page_low(): Increment mtr->n_freed_pages. fsp_alloc_seg_inode_page(), fseg_create_general(): Assert that the page was not previously X-latched in the mini-transaction. A file segment or inode page should never be allocated in the middle of an mini-transaction that frees pages, such as btr_cur_pessimistic_delete(). fseg_alloc_free_page_low(): If the hinted page was allocated, skip the check if the tablespace should be extended. Return NULL instead of FIL_NULL on failure. Remove the flag frag_page_allocated. Instead, return directly, because the page would already have been initialized. fseg_find_free_frag_page_slot() would return ULINT_UNDEFINED on error, not FIL_NULL. Correct a bogus assertion. fseg_alloc_free_page(): Redefine as a wrapper macro around fseg_alloc_free_page_general(). buf_block_buf_fix_inc(): Move the definition from the buf0buf.ic to buf0buf.h, so that it can be called from other modules. mtr_t: Add n_freed_pages (number of pages that have been freed). page_rec_get_nth_const(), page_rec_get_nth(): The inverse function of page_rec_get_n_recs_before(), get the nth record of the record list. This is faster than iterating the linked list. Refactored from page_get_middle_rec(). trx_undo_rec_copy(): Add a debug assertion for the length. trx_undo_add_page(): Return a block descriptor or NULL instead of a page number or FIL_NULL. trx_undo_report_row_operation(): Add debug assertions. trx_sys_create_doublewrite_buf(): Assert that each page was not previously X-latched. page_cur_insert_rec_zip_reorg(): Make use of page_rec_get_nth(). row_ins_clust_index_entry_by_modify(): Pass BTR_KEEP_POS_FLAG, so that the repositioning of the cursor can be avoided. row_ins_index_entry_low(): Add DEBUG_SYNC points before and after writing off-page columns. If inserting by updating a delete-marked record, do not reposition the cursor or commit the mini-transaction before writing the off-page columns. row_build(): Tighten a debug assertion about null BLOB pointers. row_upd_clust_rec(): Add DEBUG_SYNC points before and after writing off-page columns. Do not reposition the cursor or commit the mini-transaction before writing the off-page columns. rb:939 approved by Jimmy Yang 	ae309bd33675543bbe9b0d5e0f19040a74a7157e
----------------------------
BUG#11766817: CRASH ON MYSQLD STARTUP WHEN USING LOG-BIN (STRMAKE ISSUE?) BUG#12929941: SEGFAULT IN STRMAKE/CONVERT_DIRNAME WHEN USING --RELAY-LOG=SLAVE-RELAY-BIN Problem Description: The global variable 'char *mysql_real_data_home_ptr' is declared and initialized to the address of the global buffer char mysql_real_data_home[] in mysqld.cc. Then, the constructor for Sys_datadir overwrites mysql_real_data_home_ptr with NULL. In the case when value datadir is not given in both command-line as well as in cnf file and the default path (<basedir>/data) needs to be used, the mysql_real_data_home_ptr is not made to point to mysql_real_data_home and still has NULL value. After WL#5465, we use mysql_real_data_home_ptr when it still holds NULL as no cli or cnf file arguments were given. In particular, rpl_make_log_name passes mysql_real_data_home_ptr to fn_format. This caused a coredump because fn_format did not expect NULL. The following combinations caused the core dump 1.unspecified but existing empty default data dir and --log-bin 2.unspecified but existing empty default data dir and --relay-log=<some name for relay log> Solution: We solve this problem by making mysql_real_data_home_ptr to point to the mysql_real_data_home if it is null before passing it to fn_format function because by this time we know that mysql_real_data_home is correctly initialized and holds the final value of datadir path. We have also added asserts in fn_format() to check if the dir is null. 	72bf0c8db4dada0e74a3aa2fadfed7713db2caec
----------------------------
Bug#13727933 - PURGE BINARY LOGS TO MIGHT BE INEFFECTIVE AND NOT VERBOSE ABOUT THAT This is a workaround patch as PURGE can't be used so RESET MASTER is attempted as a tool to remove binlog files and thereby to desynchronize master and slave wrt GTID data. I had to change the test in three more parts: two are the local slave side INSERT and DROP as parts of the workaround, and yet another --source include/have_binlog_format_mixed_or_statement.inc due to a new being reported Bug 13729084. 	6e928f6c7a0d301e56a9e5ffb47992b0672e0b0f
----------------------------
"BUG#13728026 - BINLOG MAY CAUSES CRASHES WHEN THE SLAVE'S REPOSITORY IS A TABLE. The command BINLOG requires a Relay_log_info object to execute events. Such object was being created with INFO_REPOSITORY_FILE causing issues when the main Relay_log_info object used INFO_REPOSITORY_TABLE. Among a variety of issues, this led to the existence of two different types of repositories thus making new threads to fail when they tried to create a new Relay_log_info. The following message was usually printed out: ""Error creating relay log info: Multiple replication metadata repository instances found with data in them. Unable to decide which is the correct one to choose."" To fix the problem we create this particular Relay_log_info object with a INFO_REPOSITORY_DUMMY as in fact a repository is not necessary. We also improved the code for the case rli is NULL. In the future, we need to improve the code around the BINLOG command as only a small part of the object is required to execute it. "	90b698dfe00fb7da9188617c09a06fef127c72c3
----------------------------
Fix link error on Windows. error LNK2001: unresolved external symbol _debug_sync_C_callback_ptr 	c21988631be247f9f015c582e80a192bc7b92209
----------------------------
WL#5767 : Performance_schema, Statements Digest. Details: - Added code to distinguish between IDENT and IDENT_QUOTED tokens. - Modified test case and result files accordingly. 	b645d56f0c914d7cd2f0c2bbe25f4eae56fa3cd0
----------------------------
WL#3584 cleanup document the currently possible values of gtid_mode 	0c253b75b6ae04d5181578e297b392d444532824
----------------------------
Add instrumentation for Bug#13721257 RACE CONDITION IN UPDATES OR INSERTS OF WIDE RECORDS row_ins_index_entry_low(), row_upd_clust_rec(): Make a redo log checkpoint if a DEBUG flag is set. Add DEBUG_SYNC around btr_store_big_rec_extern_fields(). rb:946 approved by Jimmy Yang 	47313207676c2697aa4c791594aa6045bdfc427b
----------------------------
Merge: 49a9ec4 663f525 Merge from mysql-trunk to mysql-trunk-wl5534-stage Text conflict in mysql-test/r/lock.result Text conflict in mysql-test/suite/innodb/r/innodb_monitor.result Text conflict in mysql-test/suite/sys_vars/r/innodb_monitor_disable_basic.result Text conflict in mysql-test/suite/sys_vars/r/innodb_monitor_enable_basic.result Text conflict in mysql-test/suite/sys_vars/r/innodb_monitor_reset_all_basic.result Text conflict in mysql-test/suite/sys_vars/r/innodb_monitor_reset_basic.result 	f3255a84712669293514d2b220aa9095070589fc
----------------------------
"Bug#12407434	60776: INNODB MAX PURGE LAG SETTING IS WRONGLY DESIGNED Add new configuration variable: --innodb-max-purge-lag-delay := 0...100000000 in micro-seconds 1. The check for oldest view would cause the DML delay from not being set, if there was a purge lag. Removing the check will now force all transactions to be delayed if there is a purge lag. 2. The maxmum possible delay value of ~0UL makes it open ended, the delay can keep increasing to a point where it brings everything to a halt. Introduce a configuration variable that can cap the max delay. The maximum value for now is 10seconds default is 0 which should cause a context switch. Approved by Jimmy Yang over IM. "	09b13edc3a7123ad4e2d7c9025c47a21e58986f5
----------------------------
Bug#13615873 - REMOVE CODE THAT DOES A PURGE VIA THE MASTER THREAD InnoDB now has background threads to do purge. They were introduced because the master thread was doing too many things already and purge was being delayed due to insert buffer merge, flushing etc. It is also cumbersome to control purge behaviour if purge is done via the master thread. We need to stop and resume purge for WL#5522. The default setting of innodb_purge_threads will change from 0 to 1. rb://905 Approved by Inaam Rana. 	42f36919584e82c621dbec1e69fd05ab023c54c6
----------------------------
Bug#13633383 63183: SMALL SORT_BUFFER_SIZE CRASH IN MERGE_BUFFERS This patch is a backport of some of the cleanups/refactorings that were done as part of WL#1393 Optimizing filesort with small limit. 	8e5d9991d19d26b6be9a7d9ef13516e14a69e8c4
----------------------------
Bug#13614037 - CRASH IN LOCK_TABLE_CREATE DURING KILL_CONNECTION DDL transactions must be tagged with trx_t::will_lock. This was missing for: 1. DROP TABLE 2. DROP DATABASE 3. RENAME TABLE Otherwise our check for non-locking-autocommit-read-only transactions will mistakenly tag them as true. rb://930 Approved by Jimmy Yang. 	a10db24612d9410306216255acc35e001bcea9be
----------------------------
WL#5767 PERFORMANCE_SCHEMA, statement digests Update ABI check files 	d67c229e6609a76ad4fffb93bbd0a5aa09b4595d
----------------------------
WL#5767 PERFORMANCE_SCHEMA, statement digests Test case cleanup - Moved digest_* include files to local include directory - start_server_no_digest: Replaced source inclusion of statement_digest.test to avoid double inclusion of header files - Standardized test file names - Standardized upper/lower case use in SQL syntax 	17d2791e352c2f364570eb2b3ead4f7e20a8d469
----------------------------
WL#5767 PERFORMANCE_SCHEMA, statement digest - Fixed build break for builds with no perfschema - Fixed warning in pfs_noop.c 	b4bd4f1c8f6dc21fe47d0c6061b81548adfc2367
----------------------------
WL#5767 PERFORMANCE_SCHEMA STATEMENT DIGEST - Fixed PB2 crash 	d439c9c4e8f8cb6733aa22d5d74c55fd4d7ff5b1
----------------------------
WL#5767 PERFORMANCE_SCHEMA STATEMENT DIGEST - Added MYSQL_ADD_TOKEN() to PSI interface, replaced macro in sql_lex.cc - Added data flow comments to doxygen LLD in pfs.cc - Minor style changes in pfs_digest.cc 	3ac3f46dc9daf69834e1021c249f8a83ae5d6e3f
----------------------------
Merge: 3abd3df 4764041 WL#5767 PERFORMANCE_SCHEMA STATEMENTS DIGEST Merge with mysql-trunk 	33c97a8445e1e9193e5f926fd35d17ed6ecf2cdd
----------------------------
"Fix Bug#13513676 INNODB_BUFFER_POOL_DUMP_STATUS IS NOT POPULATED WITHIN EXPECTED TIME There is a tiny interval of time during startup when the status variable 'innodb_buffer_pool_dump_status' can be '' before it becomes 'not started'. This patch makes the bug 100% reproducable: --- cut --- --- storage/innobase/buf/buf0dump.cc +++ storage/innobase/buf/buf0dump.cc @@ -577,12 +577,13 @@ DECLARE_THREAD(buf_dump_thread)( /*============================*/ void*	arg __attribute__((unused)))	/*!< in: a dummy parameter required by os_thread_create */ { srv_buf_dump_thread_active = TRUE; +	sleep(5); buf_dump_status(STATUS_INFO, ""not started""); buf_load_status(STATUS_INFO, ""not started""); --- cut --- It is not easy to assign a default value to this variable which to be available before buf_dump_thread() starts, thus: The solution is to use include/wait_for_status_var.inc to wait for the variable to become 'not started'. "	73997f4ac95cc9147381abbf3442adedac9eaab3
----------------------------
"Patch for bug#11764747 (formerly known as 57612): SET GLOBAL READ_ONLY=1 cannot progress when a table is locked with LOCK TABLES. The reason for the bug was that mysql server makes a flush of all open tables during handling of statement 'SET GLOBAL READ_ONLY=1'. Therefore if some of these tables were locked by ""LOCK TABLE ... READ"" from a different connection, then execution of statement 'SET GLOBAL READ_ONLY=1' would be waiting for the lock for such table even if the table was locked in a compatible read mode. Flushing of all open tables before setting of read_only system variable is inherited from 5.1 implementation since this was the only possible approach to ensure that there isn't any pending write operations on open tables. Start from version 5.5 and above such behaviour is guaranteed by the fact that we acquire global_read_lock before setting read_only flag. Since acquiring of global_read_lock is successful only when there isn't any active write operation then we can remove flushing of open tables from processing of SET GLOBAL READ_ONLY=1. This modification changes the server behavior so that read locks held by other connections (LOCK TABLE ... READ) no longer will block attempts to enable read_only. "	9a9dc2f342df2f29ae6a3c297ea3b061fc40f3fd
----------------------------
"Fix for Bug #13688248 	CRASH IN DIAGNOSTICS_AREA::SET_OK_STATUS WHEN USING DEBUG_SYNC. And, to test the above, I had to fix Bug #13688015 	THE OPTION --LOOSE-DEBUG-SYNC-TIMEOUT IS PLACED WRONG "	bbc19d45fdfb126f480a553c7ae0b8e28da26936
----------------------------
Previous_gtids_log_event was wrongly setting group_relay_log_pos making the relay log coordinates going back in time. 	74ec89fd56843d535ef05b03d5e91598444227a0
----------------------------
WL#3584 test cases Purpose: Make output from include/show_binlog_events.inc independent of whether gtid_mode=on or off. Implementation: This cannot be done using the usual replace_{result|regex|column} because they don't allow removing entire rows. Instead, we use perl to parse the output. 	0fb0182fda5f33f83da85c149a50c3d6594b83e4
----------------------------
Bug 13689818 - ASSERTION OWNED_GTIDS.GET_OWNER(GTID) != THD->THREAD_ID SQL applier thread did not handle properly successive GTID_NEXT events which led to asserts in running rpl_ignore_table, rpl_alter_repository with ./mtr --mysqld=--gtid-mode=ON --mysqld=--log-bin --mysqld=--log-slave-updates  \ --mysqld=--disable-gtid-unsafe-statements  \ --mysqld=--debug=+d,allow_gtid_unsafe_non_transactional_updates 	efc3e1e9cab7955db4750a6cb4866a018887dec0
----------------------------
WL#3584 bugfixes - DDL that fails throws an assertion if GTID_NEXT=SID:GNO - add file binlog_gtid_errors-master.opt (forgot to add in previous commit) 	3695a0bafe5c9c7317d61a1ee75a6a33cc2908fb
----------------------------
"Fix Bug#11754376 45976: INNODB LOST FILES FOR TEMPORARY TABLES ON GRACEFUL SHUTDOWN During startup mysql picks up .frm files from the tmpdir directory and tries to drop those tables in the storage engine. The problem is that when tmpdir ends in / then ha_innobase::delete_table() is passed a string like ""/var/tmp//#sql123"", then it wrongly normalizes it to ""/#sql123"" and calls row_drop_table_for_mysql() which of course fails to delete the table entry from the InnoDB dictionary cache. ha_innobase::delete_table() returns an error but nevertheless mysql wipes away the .frm file and the entry in the InnoDB dictionary cache remains orphaned with no easy way to remove it. The ""no easy"" way to remove it is to create a similar temporary table again, copy its .frm file to tmpdir under ""#sql123.frm"" and restart mysqld with tmpdir=/var/tmp (no trailing slash) - this way mysql will pick the .frm file after restart and will try to issue drop table for ""/var/tmp/#sql123"" (notice do double slash), ha_innobase::delete_table() will normalize it to ""tmp/#sql123"" and row_drop_table_for_mysql() will successfully remove the table entry from the dictionary cache. The solution is to fix normalize_table_name_low() to normalize things like ""/var/tmp//table"" correctly to ""tmp/table"". This patch also adds a test function which invokes normalize_table_name_low() with various inputs to make sure it works correctly and a mtr test that calls this test function. Reviewed by:	Marko (http://bur03.no.oracle.com/rb/r/929/) "	17afdb9051aef9e819fd72a6e4f3daa89d96d384
----------------------------
Added the ability to use mysqlbinlog to connect to a master through COM_BINLOG_DUMP_GTID. 	9aac75cc6fa86ae23c9ae9393c6d755e52174627
----------------------------
Merge: 2ff79c7 2da7111 Merge from mysql-trunk to mysql-trunk-wl5534-stage Text conflict in mysql-test/suite/innodb/r/innodb_monitor.result Text conflict in mysql-test/suite/sys_vars/r/innodb_monitor_disable_basic.result Text conflict in mysql-test/suite/sys_vars/r/innodb_monitor_enable_basic.result Text conflict in mysql-test/suite/sys_vars/r/innodb_monitor_reset_all_basic.result Text conflict in mysql-test/suite/sys_vars/r/innodb_monitor_reset_basic.result Text conflict in sql/sql_table.cc Text conflict in storage/innobase/row/row0merge.cc 	f6daa1f33c5a0614ddddb892d653120bfb284a7d
----------------------------
Increase --debug-sync-timeout if --valgrind. 	57999a9bd37ac60e346626bce6dbede6bed5dc12
----------------------------
BUG#11754145 - 45702: IMPOSSIBE TO SPECIFY MYISAM_SORT_BUFFER > 4GB ON 64 BIT MACHINES PROBLEM: When sorting index during repair of myisam tables, due to improper casting of buffer size variables value of myisam_ sort_buffer_size is not set greater than 4GB. SOLUTION: Proper casting of buffer size variable. myisam_buffer_size changed to unsigned long long to handle size > 4GB on linux as well as windows. 	c2fb2fb0744c40ef5e325713356346ffe238575b
----------------------------
WL#5767 Performance Schema, Statements Digest Details: - Implemented FIRST_SEEN/LAST_SEEN, Column. Getting Wrong dates, need to see. - Changed Digest COLUMN size from varchar(64) to varchar(32). - tried to fix statements_digest_long_query by specifying big value of thread_stack. 	d406f167a27d38c23851c758b7a10d9f4ef00b09
----------------------------
WL#3584 bugfixes - Add assertions - Make disable_gtid_unsafe_statements ineffective when sql_log_bin=0 - Test one more error condition related to GTID_NEXT. 	38842a3b3e47d21b23763dc1f42e320e8f0e9ae2
----------------------------
"InnoDB: WL#5526 online ADD INDEX, WL#5548 online DROP INDEX === First part: Replace the old ALTER TABLE API (WL#5534). Replace add_index(), prepare_drop_index() and final_drop_index() with the generic DDL methods implemented in WL#5534. This allows us to support things like ADD INDEX i(i), DROP INDEX i without problems. The new methods are roughly used as follows: ha_innobase::check_if_supported_inplace_alter_table(): Check if the operation is at all supported, and what kind of lock is needed. Creating a PRIMARY KEY or a FULLTEXT INDEX requires the table to be X-locked. All other supported operations can be done 'online', allowing concurrent modification of the table. ha_innobase::prepare_inplace_alter_table(): For index creation, start a dictionary transaction and create the data dictionary objects. For all operations, check if it is allowed. ha_innobase::inplace_alter_table(): Create any indexes, if index creation was requested.  Otherwise, do nothing. This method will be invoked for both online and offline index creation. If the operation is online, allocate a modification log for the secondary index(es) that will be created. If the operation is offline for any reason, do not allocate modification logs. This method will also notice and report any duplicate key errors. ha_innobase::commit_inplace_alter_table(): Commit or roll back the operation. Rollback may be initiated after a failed operation, or after a successfull operation when MySQL fails to upgrade the meta-data lock for rewriting the .frm file. If commit=true, drop the indexes that were requested to be dropped (WL#5548). Before dropping, rename the indexes to start with ""\377"" so that crash recovery will flag it as an incomplete index and drop it. If a successful index creation needs to be rolled back, we cannot immediately drop the index(es), because the table will typically be in use by other threads (this is what timed out the MDL upgrade in the first place). Instead, we mark the index as 'aborted' or 'zombie' and will attempt to drop it when we get the chance (reference count has dropped to zero, or the index is being evicted from the data dictionary cache). innobase_alter_table_flags(), check_column_being_renamed(), column_is_being_renamed(), foreign_key_column_is_being_renamed(): Remove. Remove the column rename changes from ha_innobase::check_if_incompatible_data(). All these checks will be performed as part of check_if_supported_inplace_alter_table(). add_index(), final_add_index(), prepare_drop_index(), final_drop_index(): Remove. These are replaced by the prepare_inplace_alter_table(), inplace_alter_table(), and commit_inplace_alter_table(). innodb_online_alter_log_max_size (srv_online_max_size): New parameter for limiting the amount of modification log that is allowed to accumulate during online index creation. Add DB_ONLINE_LOG_TOO_BIG to enum db_err for exceeding this. === Second part: online index creation (WL#5534). The algorithm: (1) row_log_allocate() creates a temporary file for each index being created * a logical variant of the InnoDB change (insert) buffer * row_log_online_op(index, tuple, trx_id, enum row_op op) * enum row_op: INSERT, DELETE_MARK, DELETE_UNMARK, PURGE * invoked by DML, rollback, and purge, just like the InnoDB change buffer * update invokes (INSERT,new_value), (DELETE_MARK,old_value) (2) row_merge_read_clustered_index() scans the clustered index of the table * For every index being created, write an index entry to a merge sort file (3) row_merge_sort() the buffers (one for every index being created) (4) Insert the sorted entries to the new index B-tree(s) (5) row_log_apply() the change logs to the index B-tree(s) * this will 'publish' the index inside InnoDB (6) MySQL upgrades the meta-data lock (7) commit_inplace_alter_table(commit=true) will rename the created index to non-temporary name, and drop any indexes that were requested to be dropped Steps (2), (3), (4) are unaffected by this change. There is an anomaly. Between steps (5) and (7), a DML operation can fail due to a uniqueness violation in a created UNIQUE INDEX. The index exists in InnoDB at that point, but not in MySQL. Thus, we cannot report the index name to MySQL. It is somewhat wrong to report a duplicate key for DML before the DDL has fully finished. Other types of uniqueness violation observed during index creation would be reported to the DDL thread. Another anomaly is that when step (6) fails to upgrade the meta-data lock, MySQL will invoke commit_inplace_alter_table(commit=false) to drop any created indexes. These cannot be dropped immediately, because failure to upgrade the meta-data lock means that other threads must be operating on the table, and potentially accessing the index trees. Therefore, we must merely flag the indexes ONLINE_INDEX_ABORTED or ONLINE_INDEX_ABORTED_DROPPED. For such indexes, DML threads will invoke row_log_online_op() as if the index was still being created online. That function would do nothing, returning 'it was buffered' to the DML thread. If online index creation completed successfully, the function would return 'it was not buffered', and the DML thread would insert to the B-tree as usual. Online index creation can also be aborted when the log file written by row_log_online_op() exceeds the new parameter innodb_online_alter_log_max_size (a new error DB_ONLINE_LOG_TOO_BIG). In this case, DML threads will continue business as usual, and the DDL operation will fail. === Third part: new counters for INFORMATION_SCHEMA.INNODB_METRICS ddl_background_drop_indexes Number of indexes waiting to be dropped after failed index creation ddl_online_create_index Number of indexes being created online ddl_pending_alter_table Number of ALTER TABLE, CREATE INDEX, DROP INDEX in progress === Detailed change description dict_index_get_online_status(), dict_index_set_online_status(): New functions, for determining the status of index creation (enum online_index_status): ONLINE_INDEX_COMPLETE: the index is complete and ready for access ONLINE_INDEX_CREATION: the index is being created online (allowing concurrent modifications, not allowing index lookups) ONLINE_INDEX_ABORTED: online index creation was aborted and the index should be dropped as soon as index->table->n_ref_count reaches 0 ONLINE_INDEX_ABORTED_DROPPED: the online index creation was aborted, the index was dropped from the data dictionary and the tablespace, and it should be dropped from the data dictionary cache as soon as index->table->n_ref_count reaches 0 dict_index_is_online_ddl(): Determine if the index is or was being created online (TRUE) or it is useable for lookups (FALSE). dict_index_online_log(): Wrapper for row_log_online_op(), to resolve circular include file dependencies. dict_index_online_trylog(): Try logging an operation during online index creation. If the index is complete, return FALSE so that the operation will be performed directly on the index. dict_index_struct: Remove to_be_dropped, and add online_status. Add a union around search_info and a new member, online_log. The adaptive hash index will not be used during online index creation. dict_table_struct: Add the field drop_aborted, for noting that the table may contain 'aborted' or 'zombie' indexes that have to be dropped as soon as possible. btr_root_raise_and_insert(), btr_page_split_and_insert(), btr_attach_half_pages(), btr_insert_on_non_leaf_level(): Add undo logging and locking flags. Add the flag BTR_CREATE_FLAG, which allows operations to bypass row_log_online_op() when an index is being created online. btr_validate_index(): Skip indexes that are being created online. btr_cur_latch_leaves(): Add the latch_mode BTR_MODIFY_TREE_APPLY_LOG, to be invoked from row_log_apply(). It can skip most of the latching, because the log will be applied by a single thread. enum btr_latch_mode: Add BTR_MODIFY_TREE_APPLY_LOG and BTR_MODIFY_LEAF_APPLY_LOG, exclusively reserved for row_log_apply(), which is single-threaded for any given index that is being created online. btr_cur_search_to_nth_level(): Add the latch_mode BTR_MODIFY_TREE_APPLY_LOG and BTR_MODIFY_LEAF_APPLY_LOG. Do not update the adaptive hash index for indexes that are being built online. btr_cur_open_at_index_side(), btr_cur_open_at_rnd_pos(): Disallow the latch_mode BTR_MODIFY_TREE_APPLY_LOG and BTR_MODIFY_LEAF_APPLY_LOG. These functions are not to be called during online index creation. btr_cur_ins_lock_and_undo(), btr_cur_optimistic_insert(), btr_cur_pessimistic_insert(), btr_cur_upd_lock_and_undo(), btr_cur_update_in_place(), btr_cur_optimistic_update(), btr_cur_pessimistic_update(), btr_cur_optimistic_delete(), btr_cur_pessimistic_delete() : Assert that the index is not being built online, or the BTR_CREATE_FLAG is being passed (from row_log_apply()). btr_cur_update_in_place(), btr_cur_optimistic_update(), btr_cur_pessimistic_update(): Add a separate parameter for trx_id, so that row_log_apply() can pass thr=NULL. row_upd_write_sys_vals_to_log(), btr_cur_update_in_place_log(), btr_cur_del_mark_set_clust_rec_log(), btr_cur_trx_report(): Replace trx with trx_id. btr_search_drop_page_hash_index(), btr_search_build_page_hash_index(), btr_search_get_info(): Assert that the index is not being created online. dict_build_index_def_step(): Record only the first table_id created in the transaction. Crash recovery would drop that table if the data dictionary transaction is found to be incomplete. dict_table_try_drop_aborted(), dict_table_try_drop_aborted_and_mutex_exit(): Try to drop any 'aborted' or 'zombie' indexes. dict_table_close(), dict_table_open_on_id(), dict_table_open_on_name_low(), dict_table_open_on_name(), dict_table_open_on_name_no_stats(): Add the parameter try_drop, for trying to drop incomplete indexes when dict_locked=FALSE. dict_table_remove_from_cache_low(): Try to drop 'aborted' or 'zombie' indexes. dict_index_add_to_cache(): Assert that the index is not being created online. The flag would be set later. dict_index_remove_from_cache_low(): Clean up after aborted online index creation. dict_table_get_foreign_constraint(): Consider both referencing and referenced indexes. dict_foreign_find_index(): Add const qualifiers. Remove the reference to index->to_be_dropped. This will be checked elsewhere. dict_foreign_find_equiv_index(): Replaced by dict_foreign_find_index(). dict_table_replace_index_in_foreign_list(): Renamed to dict_foreign_replace_index(). This will not work properly until WL#6049 (meta-data locking for foreign key checks) has been implemented. dict_table_check_for_dup_indexes(): Replace the parameter ibool tmp_ok with enum check_name: CHECK_ALL_COMPLETE, CHECK_ABORTED_OK, CHECK_PARTIAL_OK. dict_lru_validate(), dict_lru_find_table(): Make static. dict_load_columns(): Check errors from dict_load_column_low() a little earlier. dict_stats_update_transient_for_index(): Refactored from dict_stats_update_transient(). We need to be able to update the statistics for a particular index, once the index has been created. dict_stats_update_persistent(): Skip indexes that are corrupted or being created online. dict_stats_fetch_from_ps_for_index(): dict_stats_update_for_index(): New functions, for updating index statistics after index creation. dict_stats_delete_index_stats(): Take the table and index name as the parameter, instead of taking a dict_index_t. We will drop the statistics after the object has been freed. innobase_index_reserve_name: A global constant for the predefined name GEN_CLUST_INDEX. convert_error_code_to_mysql(): Make static in ha_innodb.cc. The ALTER TABLE code in handler0alter.cc will invoke a new function my_error_innodb() instead, so that my_error() will be invoked exactly once for each error. ha_innobase::info_low(): Ignore indexes that are being created online. ha_innobase::check(): Ignore indexes that are being created or dropped. my_error_innodb(): Error reporting for most conditions in DDL operations (except old_alter_table=1 or CREATE TABLE or DROP TABLE). The errors DB_DUPLICATE_KEY, DB_TABLESPACE_ALREADY_EXISTS, and DB_ONLINE_LOG_TOO_BIG must be handled by the caller. innobase_check_index_keys(): Replace key_info[], num_of_keys with Alter_inplace_info. innobase_create_index_field_def(): Add const qualifiers. innobase_create_index_def(): Add const qualifiers. Rename key_primary to key_clustered, because we do create a new clustered index also when creating the FTS_DOC_ID column. innobase_copy_index_field_def(): Remove. When creating the clustered index (and rebuilding the table), all index definitions will be copied from the MySQL data dictionary, not from the InnoDB data dictionary. innobase_fts_check_doc_id_col(), innobase_fts_check_doc_id_index_in_def(): Add const qualifiers. innobase_fts_check_doc_id_index(): Add ha_alter_info, for checking indexes that are to be added. innobase_create_key_def(): Rename to innobase_create_key_defs(). Move some handling of full-text index creation to the caller. innobase_check_column_length(): Change the return type from int to bool. innobase_find_equiv_index(): Similar to_foreign_find_index(), but searches the to-be-added indexes instead of existing ones. innobase_create_fts_doc_id_idx(): Add the parameter new_clustered. innobase_add_index_cleanup(): Remove. online_retry_drop_indexes_low(), online_retry_drop_indexes(): Drop 'aborted' or 'zombie' indexes.  Invoked by prepare_inplace_alter_table() while sufficient locks are being held. prepare_inplace_alter_table_dict(): Prepare the data dictionary for inplace ALTER TABLE (or CREATE INDEX or DROP INDEX). i_s_fts_index_table_fill_one_index(), i_s_fts_config_fill(): Assert that the index is not being created online. Fulltext indexes are never being created online. row_upd_build_sec_rec_difference_binary(): Take the rec offsets as a parameter, to avoid having to recompute it. Remove the parameter trx. ins_node_create_entry_list(): Make static. struct trx_struct: Correct the comment of trx->table_id.  It was wrong already when index creation was implemented in the InnoDB Plugin. lock_clust_rec_cons_read_sees(), lock_rec_create(), lock_rec_enqueue_waiting(), lock_rec_add_to_queue(), lock_rec_lock_fast(), lock_rec_lock_slow(), lock_rec_lock(), lock_rec_queue_validate(), lock_rec_convert_impl_to_expl(), lock_sec_rec_read_check_and_lock(), lock_clust_rec_read_check_and_lock(), lock_get_table(), lock_rec_get_index(), lock_rec_get_index_name(), lock_table_locks_lookup(): Assert that the index is not being created online. These assertions should not be reached for DML threads, because they should be buffering the changes with row_log_online_op(). The row_log_apply() thread will be passing BTR_NO_LOCKING_FLAG, skipping the locking. lock_rec_insert_check_and_lock(), lock_sec_rec_modify_check_and_lock(): Assert that the index is not being created online, or BTR_CREATE_FLAG is being passed. lock_rec_insert_check_and_lock(): Remove a bogus assertion about LOCK_S during index creation. Index creation is passing the BTR_NO_LOCKING_FLAG, skipping locking altogether. opt_calc_index_goodness(): Ignore indexes that are being created online. row_ins_must_modify_rec(): Update a comment about the uniqueness of node pointers. row_purge_parse_undo_rec(), row_undo_mod_upd_exist_sec(), row_upd(): Proceed if there are any indexes being created online. row_ins_index_entry(), row_purge_remove_sec_if_poss(), row_undo_ins_remove_sec_rec(), row_undo_mod_del_mark_or_remove_sec(), row_undo_mod_del_mark_or_remove_sec(), row_undo_mod_del_unmark_sec_and_undo_update(): Invoke dict_index_online_trylog(). row_upd_sec_online(): Auxiliary function for logging the update or delete of a record whose index is being created online. Invoked by row_upd_sec_step(). row_create_table_for_mysql(), row_drop_table_for_mysql(): Assert that at most one table is being created or dropped per transaction, or the table is an auxiliary table for full-text search index. rec_offs_any_null_extern(): Make available in non-debug builds. This will be called when scanning all rows during index creation, in row_merge_read_clustered_index(). row_log_allocate(), row_log_free(), row_log_online_op(), row_log_get_max_trx(), row_log_apply(): The modification log for buffering changes during online index creation. enum row_op: Index record modification operations buffered by row_log_online_op(): ROW_OP_INSERT, ROW_OP_DELETE_MARK, ROW_OP_DELETE_UNMARK, ROW_OP_PURGE, ROW_OP_DELETE_PURGE. merge_index_def_struct: Add key_number for the MySQL key number that is being created, or ULINT_UNDEFINED if none. row_merge_dup_report(), row_merge_file_create_low(), row_merge_file_destroy_low(): Make public, so that these can be called from row0log.cc. row_merge_drop_index(): Replace with row_merge_drop_indexes_dict() and row_merge_drop_indexes(). row_merge_rename_index_to_add(), row_merge_rename_index_to_drop(): New functions, used in commit_inplace_alter_table() to guarantee somewhat satisfactory crash recovery. row_merge_build_indexes(): Add the flag 'online'. Add key_numbers[]. If online index creation fails, flag all created indexes as 'aborted' or 'zombie'. row_merge_buf_encode(): Refactored from row_merge_buf_write(). row_merge_insert_index_tuples(): Replace trx with trx_id. Remove the parameter 'table'. Remove the dummy query graph and invoke the b-tree functions directly. row_merge_drop_temp_indexes(): Use direct SQL to drop all temporary indexes. row_merge_read_clustered_index(): Do not commit the mini-transaction when switching pages except when there is a lock wait on the clustered index tree lock. MONITOR_MUTEX_INC(), MONITOR_MUTEX_DEC(): New macros, to be used when the mutex protecting the counter is to be acquired and released. MONITOR_ATOMIC_INC(), MONITOR_ATOMIC_DEC(): Define these for non-atomic builds as well. Use a new mutex (monitor_mutex) for protection in that case. row_ins_index_entry_big_rec(): A new function, for inserting the externally stored fields (off-page columns) of a clustered index entry. rb:854 approved by Jimmy Yang "	6dd8e27ba69934e6aefbf8eb00f8cc24b43f3386
----------------------------
WL#3584 bugfixes - Made statements that are already in the binlog be skipped correctly. - Allow whitespace in GTID_NEXT 	36eec9ba6b0816ab2b3d4fbebf97f1623bca1183
----------------------------
WL#5767 PERFORMANCE_SCHEMA STATEMENT DIGEST Changed include path for yacc files 	2d1eaa0d05538a963ca8eefd89d57b353ef6567e
----------------------------
Merge: 9927dcf 475e16f merge opt-backporting => opt-team, enabling OPTIMIZER_SWITCH_ALL 	9f534408512a567f44602af54754665f5f9cc594
----------------------------
WL#3584 bugfix Make re-execution of GTIDs work correctly when there are concurrent connections. In particular, if GTID_NEXT is set to a GTID that is already logged, the current statement should be skipped. 	5b05672944bba36deece441e3f8b4ea2c9cbbf40
----------------------------
ndb - make sure that mt_thr_config works also with 7.2 	220d95ff0294d2683049a4bb5fe3a32cadd8a9ca
----------------------------
Bug #13586336: SRVGEN - HIBISCUS: ISSUE DEPRECATION WARNING FOR LEGACY AUTHENTICATION METHOD Added warnings as follows : 1) Make the server option secure_auth ON per default and issue a warning stating that legacy passwords are deprecated if it is ever overridden. 2) Issue a deprecation warning if a new user account ever is created or otherwise configured to use the mysql_old_password plugin. 3) When upgrading an old system, issue deprecation warnings if an old password hash digest is found in the password field. Added tests for the new warnings and updated existing tests to either set secure_auth back to FALSE or adjust the result where this is not possible. 	8a1cfee7aa88e3da317c126479e09e6c98595eb8
----------------------------
"Bug#11764651-57510:Comparing uninitialized values in CTYPE-BIN.c The first part of the problem reported in the bug, is  fixed in the patch for Bug#11766212.This fix is for the second part of the problem reported. PROBLEM: The following query results in an invalid read when run with valgrind select left(geomfromtext(""point(0 0)""),1) not in ( @@global.query_cache_type,1 not between -1 and ""a"", elt(1,'',1,1,1), geomfromtext(""point(1 -1)"") in (""bbbbbbbbb""),1); 5.5.8-debug valgrind output: Invalid read of size 1 at: my_strnncollsp_utf8 (ctype-utf8.c:2590) by: sortcmp (sql_string.cc:668) by: cmp_item_sort_string::cmp (item_cmpfunc.h:1019) by: Item_func_in::val_int (item_cmpfunc.cc:4130) by: Item::send (item.cc:5864) by: Protocol::send_result_set_row (protocol.cc:848) by: select_send::send_data (sql_class.cc:1789) by: JOIN::exec (sql_select.cc:1857) by: mysql_select (sql_select.cc:2568) by: handle_select (sql_select.cc:296) by: execute_sqlcom_select (sql_parse.cc:4464) by: mysql_execute_command (sql_parse.cc:2066) by: mysql_parse (sql_parse.cc:5500) by: dispatch_command (sql_parse.cc:1030) by: do_command (sql_parse.cc:770) by: do_handle_one_connection (sql_connect.cc:745) by: handle_one_connection (sql_connect.cc:684) by: start_thread (pthread_create.c:301) Problem Analysis: The above mentioned invalid read can be reproduced using a simplified query like this one: select left(geomfromtext(""point(0 0)""),1) in (@@global.query_cache_type,1,""""); Problem is present in cmp_item_sort_string::store_value, because it does not make its own copy of the value evaluated. Instead tries to refer to a temporary value that could be changed or deleted by other functions. Hence while reusing the evaluated value in case of Item_func_in::val_int, we get a valgrind error saying Invalid read. With respect to the above query, this is what happens: a) To be compared with @@global.query_cache_type, function left() is evaluated in ""string"" context. This evaluation modifies Item_func_left::tmp_value, and returns a pointer to this tmp_value. The ""comparator object"" (cmp_item) stores the returned pointer in cmp_item::value_res and then the comparison is done. b) To be compared with 1, left() is evaluated in ""real number"" context, which modifies Item_func_left::tmp_value again. Comparison is done with the real value. c) To be compared with """", left() is NOT evaluated again because cmp_item already has a pointer to the value of left() in string context (from (a)). However, this value was a pointer to Item_func_left::tmp_value, and (b) has modified this String. So we would be  looking at out-of-date data. Hence while reusing the evaluated value in case of Item_func_in::val_int, we get a valgrind error saying Invalid read. Solution: The fix it to make a copy of the value retured from val_str() in cmp_item_sort_string::store_value(). "	977a27c6ae30d8c6600088e1cddd54da3d4e0aec
----------------------------
This patch fixes bug#13608371 (formerly known as bug 62311): segfault in mysqld during early SIGHUP handling. If during server start up some signals like SIGHUP are caught before full server initialization has been done then server may crash. The reason for this bug is that there was a race condition between signal handler thread and main thread that was doing server initialization. For example, if SIGHUP signal was delivered to server and caught by signal handler thread before server had completed initialization of Event_scheduler then server crashed when try to access to uninitialized event_scheduler instance during signal handling. To avoid such race condition we suspend signal processing before full initialization of all server components has been completed successfully. It's achieved by waiting for on COND_server_started conditional variable until a flag mysqld_server_started is true. Moreover superfluous call of pthread_sigmask() to set thread signal mask was removed since all signal have been already blocked during execution of my_init_signal(). Also call of mysql_cond_broadcast(&COND_thread_count) at signal_hand() was moved under protection of mutex LOCK_thread_count to provide deterministic schedule behaviour. 	c6b299db9c3f04207972075c7ac5f172a471c085
----------------------------
Fixed problem in rpl_row_crash_safe. By mistake the option --relay-log-recovery was removed thus causing problems when running --mysqld=--master-info-repository=TABLE as sync-master-info is not enabled. Basically, this leads to events being retrieved twice from the master. 	5e9ba547ea5f4e10e4c3209769c8ffbb08c25066
----------------------------
"BUG#11764786: 57657: TEMPORARY MERGE TABLE WITH TEMPORARY UNDERLYING IS BROKEN BY ALTER Analysis: -------------------------------------------- When merge table is created, then MyISAM MERGE creates a file .MRG. Engine adds names of the tables (children tables) and insert method in this file. So, if we consider the tables listed in ""HOW TO REPEAT"" section then content of .MRG file of ""tm_temp_temp""table  will be as below >cat #<tmp_file_name>.MRG ----------------------- ./test/t1_temp #INSERT_METHOD=FIRST ----------------------- So for both, temporary and non-temporary children table ""table name"" is added in .MRG file in ""./<db_name>/<table_name>"" format. So that the table can be opened using <db_name>.<table_name> [from comments written in function ""ha_myisammrg::create""]. When sql query to alter merge table ""tm_temp_temp"" is called then ""mysql_alter_table"" function calls ""open_and_lock_tables"" which in turn call the table open function of MyISAM MERGE storage. MyISAM MERGE storage handler, holds all the open table information in open_tables of type MYRG_TABLE.So, in open function of MyISAM Merge handler, table ""tm_temp_temp"" is opened and held with the open_tables. Since, this merge table contains child_table (t1_temp). All the child table are opened and TABLE_LIST of child table will be ""children_l"" member of MyISAM Merge handler. children_l is doubly linked list of all child tables. children_l -> TABLE_LIST::next_global -> TABLE_LIST::next_global #             #               ^          #               ^ #             #               |          #               | #             #               +--------- TABLE_LIST::prev_global #             #                                          | #       |<--- TABLE_LIST::prev_global                    | #                                                        | children_last_l -----------------------------------------+ And information of all child tables are also held in the open_tables of MyISAM merge handler. The name of the table file for each table opened is held in the ""filename"" of open_tables->table (type is struct st_myisam_info). * Why merge table is getting corrupted in ""alter table""? Alter table calls function ""update_create_info"" function. In ""update_create_info"" function of MyISAM Merge Handler, merge list (TABLE_LIST of child tables) is populated in create_info object of type HA_CREATE_INFO. And this list is then used to create new .MRG file to reflect the alter operations. In function, ""update_create_info"" of MyISAM MERGE, the DB name and the TABLE name are extracted from the filename stored in the member ""open_tables->table->filename"" as below, split_file_name(open_table->table->filename, &db_name, &file_name); This db name and file name are stored in the create_info object. And while creating the .MRG file, table name of the child table is written into it in the ""./<db_name>/<table_name> format. When merge table has non-temporary child tables then ""filename"" contains proper db name and file name. But when merge table has temporary tables then ""filename"" has a temporary filename created in ""/tmp"" directory (for eg: /tmp/#sql7a3b_2_1). So when ""split_file_name"" function is called with this value, ""tmp"" is stored in the db name ""#sql7a3b_2_1"" is stored in the file name. So here while creating new .MRG file, ""./tmp/#sql7a3b_2_1"" written as a child entry. >cat #<tmp_file_name>.MRG ----------------------- ""./tmp/#sql7a3b_2_1"" #INSERT_METHOD=LAST ----------------------- After this, any operation on merge table gives error as its fails to find ""tmp"" DB and table name ""#sql7a3b_2_1"". And because of the same reason ""check table"" also reported the ""table corruption"" error. *. Why we wont see this issue while creating merge table? While creating merge table, ""create_info"" object of type HA_CREATE_INFO is formed by parser with valid ""merge_list"" (with proper DB name and table name for temporary and non-temporary tables). So, create table function of MyISAM MERGE creates .MRG file. So, .MRG contains proper entry for table after creating a table. >cat #<tmp_file_name>.MRG ----------------------- ./test/t1_temp #INSERT_METHOD=FIRST ----------------------- Since, create_info populated with merge_list by parser itself, function ""update_create_info"" is not called. Possible Fix: -------------------------------------------- Instead of getting db name and table name from ""open_tables->table->filename"" in update_create_info function, the db name and table name can be obtained from the TABLE_LIST of each child table stored in the ""children_l"" of MyISAM MERGE handler. For both the temporary and non-temporary child table the TABLE_LIST is propogated with proper DB name and table name in members ""db"" and ""table_name"". So as a, logic of the ""update_create_info"" MyISAM MERGE handler is changed so that it gets db name and table from TABLE_LIST stored in ""children_l"". "	0d2769b184817134d7284c805f57323928489b24
----------------------------
Bug#13440472 MANY VALGRIND FAILURES ON DAILY-TRUNK Deallocate the array of PFS instrument configuration values during server shutdown to avoid Valgrind errors. 	d1e05b0993971fce997a8dbc6dc85af38eff1424
----------------------------
Fix for bug#13330645 'MRR_SORTED' IS NOT USED EVEN IF HANDLER NATIVELY SUPPORTS 'HA_MRR_SORTED' There was an assumption that only the default MRR implementation is able to produce 'HA_MRR_SORTED' results. This has lead to the bad codestyle of either setting  'param.force_default_mrr= true' or specifying the HA_MRR_USE_DEFAULT_IMPL flag whenever we wanted a sorted MRR resultset. This fix leaves the decision of using either the native or the default MRR implementation to the handler itself based on its capabilities. Furthermore, mostly due to skip_sort_order not being decided until JOIN::exec(), the handler will also set the (new) HA_MRR_SUPPORT_SORTED flag to signal if its is 'Using MRR' if its multi_range_read_init() is called with the HA_MRR_SORTED flag - This has the sole purpose of getting the EXPLAIN correct. This part of the fix might become obsolete if/when the planned reshuffle of skip_sort_order (Into JOIN::optimize) has been completed. There was also a problem with DsMrr_impl::dsmrr_init() not checking the OPTIMIZER_SWITCH_MRR when deciding to init() either the DS-MRR or default MRR implementation. (There are cases where ::dsmrr_init() is called wo/ ::dsmrr_info[_const]() being called first). 	8c8d06b6492ffcbd700d45dc6cd8f4a5b2f209ae
----------------------------
Bug#13610358 innodb_sort_buf_size should be called innodb_sort_buffer_size for consistency 	f3f07f7dca38b2479f5f555eff793c9ecfafb193
----------------------------
Bug#13536661: Moved the test case to optimizer_debug_sync (currently decativated). 	159e7e2b3d1c4f99fb76e6e0f91cf6441e6f0fe5
----------------------------
Merge: 075d4f3 950afc5 wl#3584 GTID: empty group and binlog-hton cleanup Reviewed by Sven patch is merged. rpl_gtid_empty_group is reenforced with cases required by review. The patch passes OFF-mode testing except rpl.rpl_gtid_empty_group rpl.rpl_check_gtid rpl.rpl_gtid_lost rpl.rpl_gtid_mode rpl.rpl_deadlock_innodb rpl.rpl_group_mysqlbinlog rpl.rpl_begin_commit_rollback some of which failed due to an assert% Gtid_state::acquire_ownership(Gtid, THD*): Assertion `thd->owned_gtid.sidno == 0'  in rpl_gtid_mode 	e86279799b1d51112b30952270cb4cc95c681b4f
----------------------------
Bug#13440472 MANY VALGRIND FAILURES ON DAILY-TRUNK Deallocate the array of PFS instrument configuration values during server shutdown to avoid Valgrind errors. 	8058656b51e4161b1133a26d848303a29e18f7bb
----------------------------
"BUG#12403008 RPL_HEARTBEAT_BASIC FAILS SPORADICALLY ON PUSHBUILD rpl_heartbeat_basic test fails sporadically on pushbuild because did not received all heartbeats from slave in circular replication. MASTER_HEARTBEAT_PERIOD had the default value (slave_net_timeout/2) so wait on ""Heartbeat event received on master"", that only waits for 1 minute, sometimes timeout before heartbeat arrives. Fixed setting a smaller period value. "	279917ef38cf5f421c9e06f9d03dba563bc199d3
----------------------------
WL#6147 Support ndb_replication table and database wildcards The optional mysql.ndb_replication table is used to specify binlogging and replication slave behaviour on a per-table basis. The primary key of the table is the {db, table_name, server_id} triple. This allows every table to have different binlog flags (updated only, log updates as writes) and different conflict handling at every server if desired. Server Id 0 acts as a generic 'all server_ids' wildcard. However, for large schemata, managing an individual row for each table becomes a burden. This feature introduces wildcards on the db and table_name columns of the ndb_replication primary key. The normal SQL LIKE wildcards (% - match zero or more characters, _ - match one character) are supported at any position in the db or table_name columns.  A warning is given if the best match for a particular table is ambiguous. This allows simpler management of large schemata using conflict detection etc. ndb_rpl_rep_error has been enhanced to give coverage of the enhanced wildcard support. (Hopefully) final recommit with ndb_table_guard.h file-id from 7.2 	a2fe99ec9411ca3f0d20cf7e6900e3f72df36372
----------------------------
WL#3584 bugfixes - If the dump thread found a GTID event when GTID_MODE=OFF, it would report the error such that the slave tries to reconnect. This caused an infinite loop. Fixed the dump thread to report error correctly. - The server would generate a Previous_gtids_log_event on startup, even when GTID_MODE=OFF. - Added better debug info to read_log_event and mysql_binlog_send; there is now always a text in the debug trace indicating what the error was (or which line it occurred on so that it can be looked up) - fixed some wrong indentation This fixes test cases rpl_server_uuid, rpl_binlog_index, rpl_crash_safe_master, rpl_server_uuid, binlog_stm_do_db' 	d39479586d6b7ee02ee02d1bd1e938efe17e9635
----------------------------
Fixed bug#11753187 (formerly known as bug 44585): SP_CACHE BEHAVES AS MEMORY LEAK. Background: - There are caches for stored functions and stored procedures (SP-cache); - There is no similar cache for events; - Triggers are cached together with TABLE objects; - Those SP-caches are per-session (i.e. specific to each session); - A stored routine is represented by a sp_head-instance internally; - SP-cache basically contains sp_head-objects of stored routines, which have been executed in a session; - sp_head-object is added into the SP-cache before the corresponding stored routine is executed; - SP-cache is flushed in the end of the session. The problem was that SP-cache might grow without any limit. Although this was not a pure memory leak (the SP-cache is flushed when session is closed), this is still a problem, because the user might take much memory by executing many stored routines. The patch fixes this problem in the least-intrusive way. A soft limit (similar to the size of table definition cache) is introduced. To represent such limit the new runtime configuration parameter 'stored_program_cache' is introduced. The value of this parameter is stored in the new global variable stored_program_cache_size that used to control the size of SP-cache to overflow. The parameter 'stored_program_cache' limits number of cached routines for each thread. It has the following min/default/max values given from support: min = 256, default = 256, max = 512 * 1024. Also it should be noted that this parameter limits the size of each cache (for stored procedures and for stored functions) separately. The SP-cache size is checked after top-level statement is parsed. If SP-cache size exceeds the limit specified by parameter 'stored_program_cache' then SP-cache is flushed and memory allocated for cache objects is freed. Such approach allows to flush cache safely when there are dependencies among stored routines. 	d460f1689da6081ea06ee25e0c7553c74dd50c30
----------------------------
Bug #13604034 SET GLOBAL INNODB_UNDO_LOGS=0 SUCCEEDS BUT LEADS TO AN ASSERT MAX_UNDO_LOGS > 0 The min value was not checked, while setting the value of innodb_undo_logs config value.  This was fixed.  Also, the max value and the default value is not fixed in the case of innodb_undo_logs.  So after starting innodb, the max and default value of the innodb_undo_logs config will be reset to the proper value based on the srv_available_undo_logs variable. This system variable framework does not support doing the validation for default value (because the boundaries min and max is not fixed).  Because of this limitation of the framework, we needed to adjust the max and default value of the config object. 	e5ec83d55bfdd07183a53fd19c9e9321699dc20b
----------------------------
wl#3584 GTID This patch carries out some rearrangement of handling of GTID ownwership acquisition. The part one removes explict binlog hton registration to satisfy to few asserts incl one in innodb. Logging and cleanup for GTID in case of binlog hton won't be registered automatically is guaranteed by deploying an explicit invocation of a new function composed for that purpose. The part two aims at Empty Group as well as performs the final simplification of the acquisition logics. GTID ownwership acquisition is performed at SET GTID_NEXT* handling. Currently there are two branches, one for the query and the other for the replication event. Disclaimer: this patch does not cover any strict grouping protocol specifying possible and impossible sequence of SET GTID_NEXT* and the following queries. Testing of that protocol will be (unless there exists already) committed separately. 	950afc55720930f06686d37136bb4a5669b9a7f1
----------------------------
ndb - assert that extra_sockets is not used by ndbmtd (i.e when using several receiveHandles) 	0b038d3a3545cd609b846a01258c66a31654109f
----------------------------
Addendum to the fix for bug #11754014 - Fixed the checks to properly check for plugin_dir containing a trailing slash or backslash. - Fixed a under-configuration in udf_skip_grants that was preventing the test from running even when there was a udf plugin. 	93d123d789fa4ba3315bdc762b33883d2bfca9f6
----------------------------
WL#3584 temporary fix Disabled the check that forbids using MyISAM+GTID. This is temporarily needed to run tests with gtid_mode=on, until we fix mtr so that it can use InnoDB. 	9ca2749b0377d0da7d4c448a777748ea0fdb6122
----------------------------
WL#3584 test fix fix gtid_mode which was temporarily broken by a previous patch 	9dc18ee385b3dfcc3f2772c7cccb35f8dbbba040
----------------------------
Bug#11765450 58421: INNODB TEMPORARY TABLE CRASH WHEN TMPDIR ON LINUX TMPFS rb://898 approved by: Marko Makela On some kernel versions native aio operations are not supported on tmpfs. Check this during start up and fall back to simulated aio. 	0da310b69db3a39ba2e6d63ff62ef3c027cd63ff
----------------------------
"BUG#13593869 - 64035: SEVERAL ERRORS IN COM_BINLOG_DUMP/MYSQL_BINLOG_SEND CRASH THE SERVER The server crashes when receiving a COM_BINLOG_DUMP command with a position of 0 or larger than the file size. The execution proceeds to an error block having the last read replication coordinates pointer be NULL and its dereferencing crashed the server. Fixed with making ""public"" previously used only for heartbeat coordinates. "	155253161673aef7ac1412dd504f82a389b8d410
----------------------------
WL#3584 bugfixes and refactorings - fix logic of is_stmt_gtid_compatible / disable_gtid_unsafe_statements - minor fixes - tests for gtid_mode 	ced8e82feee36a6d18c1e20e61087e4327d57266
----------------------------
Bug #11754014: 45549: udf plugin_dir path separator inconsistency and cryptic error 1126 message The problem was that dlopen() related code was using just a subset of the path normalization routines used in other places. Fixed the expansion of the pre-dlopen() behavior for plugins and UDFs to use a platform-dependent consistent encoding of the paths. Fixed the error dlopen() error handling to take the correct error message and strip off the trailing newline character(s). Fixed tests to do a platform independent replace of directories and to account for the traling slash. 	0e48b69cba704bf18e1fccb7b44eb6b991401790
----------------------------
Merge: 4b5dc8d 7d5eff1 WL#3584: implement GTID_MODE - implement GTID_MODE: turn off GTID in lots of places and throw errors for lots of conditions - break out code in sql_parse.cc into a function of its own, com_binlog_dump_gtid 	1c7229d2ae294aef9f31123a513bf851bac2ff2d
----------------------------
"Fix for Bug#11923239 ""ERROR WITH CORRELATED SUBQUERY IN VIEW WITH ONLY_FULL_GROUP_BY SQL MODE"". The root problem is that ONLY_FULL_GROUP_BY mode raises an error on SELECT (subq) GROUP BY (same subq); It does not recognize that both subqueries are the same. Fixing this root cause is too difficult: it would require implementing Item_subselect::eq(); and it's not worth the effort because: a) GROUP BY (subquery) is non-SQL-standard so is likely of very little interest to users of ONLY_FULL_GROUP_BY b) as the user uses ONLY_FULL_GROUP_BY, he wants to have the same subquery in GROUP BY and SELECT list, so can give the subquery an alias in the SELECT list and use this alias in GROUP BY, thus avoiding the problem. Back to the bug report: a view is created as SELECT (subq) AS field2 GROUP BY field2; Such SELECT, when run standalone, is accepted by ONLY_FULL_GROUP_BY. But when used in a view, the SELECT is written to the view's frm file (= what will be the view's definition) as: SELECT (subq) AS field2 GROUP BY (subq); and thus, when the view is later used, it bumps into the ""root cause"" above, and so SELECT * FROM the_view; causes an error in ONLY_FULL_GROUP_MODE. To avoid bumping in the root cause, we now print to the frm file: SELECT (subq) AS field2 GROUP BY field2; More generally: SELECT expression AS alias GROUP BY alias; is now printed as SELECT expression AS alias GROUP BY alias; instead of SELECT expression AS alias GROUP BY expression; This is done by following this logic, when printing the ORDER BY or GROUP BY list: if, in this list, the item was referenced using an alias, then print the alias, not the item's expression. This is, after all, closer to the original query, which is a good thing per se. Note that we do not change the case of SELECT expression AS alias GROUP BY same_expression; which is still printed as SELECT expression AS alias GROUP BY same_expression; Indeed, printing alias in GROUP BY could yield ambiguity (see last test in group_by.test). "	d1bfb01f3b7be2de18ad177cc2e7e8cc46f85ef7
----------------------------
BUG#11746146 - 23894: MYSQLBINLOG OUTPUTS SET INSERT_ID=N STATEMENTS UNNECESARILY WITH --DATABA This is a post-push fix that addresses review comments. In particular, improves coding style and ensures that all memory is freed. 	a3f0e67e9ab314014d5e328f41171f5ee58c70df
----------------------------
Bug#11748572: ALLOCATING A LARGE QUERY CACHE IS NOT DETERMINISTIC Moving query_cache_size_basic_32.test and query_cache_size_basic_64.test from experimental to disabled as a solution has still not been found. 	43721f354a19acb1f3d65fb542c17c8a7363ff4e
----------------------------
bug#13559728 -- memcached crashes if only one [API] slot available in config. 	ec74eb70803c7701201e8020b75b44f2b31c6364
----------------------------
begin implement gtid_mode 	7d5eff1f68357a648a2194973623458f1d3bb645
----------------------------
WL#3594 bugfix mysqlbinlog can generate the following sequence of statements: SET GTID_NEXT = ...; USE db; STATEMENT; Then, ownership will be acquired for the use statement instead of the actual statement. Solution: never acquire ownership of use statements, i.e., make LEX::is_binloggable return false for use statements. 	b65e168f8db47b8422165ee9a71617deabca9a8a
----------------------------
WL#3584 Fixes for some test cases: - rpl_auto_increment - rpl_stm_reset_slave - rpl_server_id2 - rpl_alter_repository 	03f8f05bfe08ef21ac23d8f462db1e728f8711ad
----------------------------
WL#3584 bugfixes - Generate error if an implicitly committing statement is executed in the middle of a transaction and either gtid_next!=automatic or gtid_next_list!=null - Previously, handlers were never registered early in the execution of a statement. So there are assertions in various places that check that a handler is not registered. In WL#3584, we need to register the binlog_handler very early when re-executing a statement. To prevent the assertions from being triggered, we relax the assertions. 	8129b570c6c7f96d21c93f09acf147dfcb6e7f1c
----------------------------
Bug #13255225: THE VALUE OF INNODB_UNDO_LOGS IN MY.CNF IS IGNORED Introduced a new read only status variable srv_available_undo_logs. During startup, this variable will be set to the total available number of rollback segments.  Users can access this variable to find out the available number of rollback segments.  The innodb_undo_logs will contain the number of active rollback segments. Review Board link: http://bur03.no.oracle.com/rb/r/862/ 	fc58dc578a4255b8008b27bdced2de2f45797189
----------------------------
"BUG#11764724 - 57586: UNKNOWN TABLE WHEN TRYING TO DROP A TABLE AND NO AVAILABLE UNDO SLOTS LEFT Description: If you attempt to drop an existing InnoDB table, but you do not have any available undo slots open, then you will receive an ""unknown table"" error. mysql> DROP TABLE test.innodb_table_monitor; ERROR 1051 (42S02): Unknown table 'innodb_table_monitor' How To Repeat: <first> make sure max_connections > 1024 </first> use test; create table t (id int) engine=innodb; create table innodb_table_monitor (id int) engine=innodb; Run following script: <? $db_arr=array(); for ($i = 1; $i <= 1024; $i++) { $db=$db_arr[$i]=mysql_connect(""localhost:3307"",""root"",""pass"",1); mysql_select_db(""test"",$db); mysql_query(""BEGIN"",$db) or die(mysql_error()); mysql_query(""INSERT INTO t VALUES ($i)"",$db) or die(mysql_error()); } $db=$db_arr[$i]=mysql_connect(""localhost:3307"",""root"",""pass"",1); mysql_select_db(""test"",$db); mysql_query(""DROP TABLE test.innodb_table_monitor"",$db) or die(mysql_error()); sleep(60); ?> After the above script, it will throw the following error: Unknown table 'innodb_table_monitor' Analysis: Here, max number of concurrent transactions/connections are started and then the next transaction to drop a table is initiated. Since, system has already max number of transactions running, next transaction to ""drop table"" was not started and innodb returned error ""DB_TOO_MANY_CONCURRENT_TRXS"". But this error was not handled properly in sql layer because of which ""drop table"" operation was throwing wrong error message. Fix: As a fix, I have added check in sql (in function ""mysql_rm_table_part2"") to handle error code ""HA_ERR_TOO_MANY_CONCURRENT_TRXS"" and throw proper error message. Ouput of drop command after fix (with max number of concurrent transaction running) mysql> drop table test; ERROR 177 (HY000): Too many active concurrent transactions To reproduce this issue, max_connections should be set to value greater than 1024 and 1024 connections/transactions need to be started. Since, this process consumes lot of time and resource, I havent added test case in mysql_test. But I will update but list with request of QA assistance to verify fix. "	d8a1cef1ca5f45ca0b190a89ca318b8f6a808960
----------------------------
Add more error handling for memcached mapped table configuration. And a few minor cleanup from last merge with mysql-trunk. 	f29cc40abf71293f03589ccbd84ce414fb3d73d4
----------------------------
ndb - disable also query_cache_size_basic_64 fails all the time on sol10-cmt 	880423883f89fc512ea20fa812b72f1d23f48afc
----------------------------
"Bug#11866367	FPE WHEN SETTING INNODB_SPIN_WAIT_DELAY rb://865 approved by: Jimmy Integer overflow causes division by zero. "	2cdcb18bf4f7a68fcb05e50a66e0689a513b49e2
----------------------------
WL#3584 - revert formatting changes made in mysqlbinlog - make GTID_NEXT case-insensitive 	c6f413cc3b5bdcbb4d77d0ee312a4d346590b079
----------------------------
"WL#5825 Using C++ Standard Library with MySQL code Post-push cleanup: the min/max macros are gone, so don't comment about them. It is still a good idea to include ""my_config.h"" before anything else. "	a6d8a5ec9571508c1e3320a90cf67bfae337b55a
----------------------------
WL#5767 : Performance Schema, Statement Digest Details - Added server startup option --performance_schema_consumer_statements_digest to enable/disable statements_digest consumer. Default value is set to FALSE. 	4c3d826086a8528211314c2bd6b4dc7a258798b1
----------------------------
BUG#12964649 fixing slave_checkpoint_group_basic. 	e52111c782b61baa8136af9ce0ef2842563631e4
----------------------------
WL#3584 bugfixes - bugfix: reset slave should not reset Gtid_state - bugfix: always register binlog handler when acquiring ownership of GTIDs, so that ownership can be released - bugfix: write empty GTID to binary log when releasing ownership of GTIDs, if GTID is not already in binary log - bugfix: don't acquire ownership for empty statements - feature: added @@global.gtid_owned and @@session.gtid_owned - cleanup: don't pass gtid_state, global_sid_lock, or global_sid_map as arguments in functions in Group_cache, and zgroup_execution.cc - cleanup: pass Gtid instead of (rpl_sidno, rpl_gno) to some functions - cleanup: moved Group_cache::update_gtid_state to Gtid_state::update - extra assertions - clean up some comments - disable use of gtid_next_list until we need it - clean up some tests 	82320f93675824a165b2bbf2cb2cdb667a9cfa1e
----------------------------
WL#4443 fixing query cache tests Reverted back to storing queries in the query cache after the tables was locked. This makes transactional storage engines work with the query cache since they can use the lock as signal to start a new transaktion. This also means that queries that fails (like on access control) before the tables are locked is not registered and is not included in Qcache_not_cached status variable. 	cbb398f62e978a3ce4ec9227467d824c24c172d3
----------------------------
WL#3584 rpl_sp test case (and a few others were failing in PB2) because mysqlbinlog did not output the pseudo_thread_id (in some cases when running it with --short-form). Turns out that the thread_id_printed field was not being initialized. Looks like this was removed erroneously in a cleanup: sven.sandberg@oracle.com-20111123221008-b8rfwsw134rjazly . 	387cb38941a1d759252f92dba17da91786f4c0a2
----------------------------
WL#3584 Fixing result files for the following test cases: binlog_database binlog_delete_and_flush_index binlog_drop_if_exists binlog_implicit_commit binlog_rewrite binlog_server_id binlog_stm_ctype_ucs binlog_stm_drop_tbl binlog_stm_drop_tmp_tbl binlog_stm_insert_select [ Odly bzr diff shows more changes than those that actually were made in the result file. I've checked by using regular diff on the vanilla result and against the recorded one. The changes are confined to those expected. This happened in the binlog_implicit_commit result file. ]. 	8c1638c0a136eb7906f8bc8626db72cdf2a7769d
----------------------------
bug#12964649 MTS memory is not freed Not-released memory after stop-slave was caused by skipping MTS cleanup in case the Workers initialization fails. It could fail for instance because of imcompatibility of max of opt_mts_checkpoint_group and sizeof(mysql.slave_worker_info.Checkpoint_group_bitmap) when the former allowed a value over the size (fixed by Bug@12979420). Fixed with refining MTS stop procedure, in particular making sure that cleanup of Coordinator related objects is done even though Workers might not have been threaded. Also @@slave_checkpoint_group system var is made cacheble into rli->checkpoint_group at slave start same way as slave_parallel_workers. That is a new slave session will use the last available value of @@slave_checkpoint_group on the eve of START-SLAVE, and changes to the variable won't have any effect to the running slave session. 	cf8032de689f33c501a47ff9b6c0cb87b354a46f
----------------------------
WL#3584 Fixing more result files: perfschema.start_server_off perfschema.start_server_no_account perfschema.start_server_no_stages_history_long perfschema.start_server_no_stages_history perfschema.start_server_no_statements_history_long perfschema.start_server_no_statements_history perfschema.start_server_no_waits_history_long perfschema.start_server_no_waits_history perfschema.start_server_no_host perfschema.start_server_no_cond_class perfschema.start_server_no_cond_inst perfschema.start_server_no_file_class perfschema.start_server_no_file_inst perfschema.start_server_no_mutex_class perfschema.start_server_no_mutex_inst perfschema.start_server_no_rwlock_class perfschema.start_server_no_rwlock_inst perfschema.start_server_no_socket_class perfschema.start_server_no_socket_inst perfschema.start_server_no_stage_class perfschema.start_server_no_table_hdl perfschema.start_server_no_table_inst perfschema.start_server_no_thread_class perfschema.start_server_no_thread_inst perfschema.start_server_no_setup_actors perfschema.start_server_no_setup_objects perfschema.start_server_no_user perfschema.start_server_on perfschema.ortho_iter perfschema.privilege_table_io perfschema.table_aggregate_global_2u_2t perfschema.table_aggregate_global_2u_3t perfschema.table_aggregate_global_4u_2t perfschema.table_aggregate_global_4u_3t perfschema.table_aggregate_hist_2u_2t perfschema.table_aggregate_hist_2u_3t perfschema.table_aggregate_hist_4u_2t perfschema.table_aggregate_hist_4u_3t perfschema.table_aggregate_off perfschema.table_aggregate_thread_2u_2t perfschema.table_aggregate_thread_2u_3t perfschema.table_aggregate_thread_4u_2t perfschema.table_aggregate_thread_4u_3t perfschema.table_io_aggregate_global_2u_2t perfschema.table_io_aggregate_global_2u_3t perfschema.table_io_aggregate_global_4u_2t perfschema.table_io_aggregate_global_4u_3t perfschema.table_io_aggregate_hist_2u_2t perfschema.table_io_aggregate_hist_2u_3t perfschema.table_io_aggregate_hist_4u_2t perfschema.table_io_aggregate_hist_4u_3t perfschema.table_io_aggregate_thread_2u_2t perfschema.table_io_aggregate_thread_2u_3t perfschema.table_io_aggregate_thread_4u_2t perfschema.table_io_aggregate_thread_4u_3t perfschema.table_lock_aggregate_global_2u_2t perfschema.table_lock_aggregate_global_2u_3t perfschema.table_lock_aggregate_global_4u_2t perfschema.table_lock_aggregate_global_4u_3t perfschema.table_lock_aggregate_hist_2u_2t perfschema.table_lock_aggregate_hist_2u_3t perfschema.table_lock_aggregate_hist_4u_2t perfschema.table_lock_aggregate_hist_4u_3t perfschema.table_lock_aggregate_thread_2u_2t perfschema.table_lock_aggregate_thread_2u_3t perfschema.table_lock_aggregate_thread_4u_2t perfschema.table_lock_aggregate_thread_4u_3t perfschema.binlog_row perfschema.binlog_stmt perfschema.start_server_innodb perfschema.relaylog main.user_var-binlog main.ctype_cp932_binlog_stm 	ae71084b122c457d3a4dd8a5a558fa2a476f87b7
----------------------------
Use C linkage for the variable timed_mutexes. 	6c17d403440262f0ec646272421eb4101ec90cf4
----------------------------
Bug#13344643:Format function in view looses locale information Problem description: When a view is created using function FORMAT and if FORMAT function uses locale option,definition of view saved into server doesn't contain that locale information, Ex: create  table test2 (bb decimal (10,2)); insert into test2 values (10.32),(10009.2),(12345678.21); create view test3 as select format(bb,1,'sk_SK') as cc from test2; select * from test3; +--------------+ | cc           | +--------------+ | 10.3         | | 10,009.2     | | 12,345,678.2 | +--------------+ 3 rows in set (0.02 sec) show create view test3 View: test3 Create View: CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `test3` AS select format(`test2`.`bb`,1) AS `cc` from `test2` character_set_client: latin1 collation_connection: latin1_swedish_ci 1 row in set (0.02 sec) Problem Analysis: The function Item_func_format::print() which prints the query string to create the view does not print the third argument (i.e the locale information). Hence view is created without locale information. Problem Solution: If argument count is more than 2 we now print the third argument onto the query string. Files changed: sql/item_strfunc.cc Function call changes: Item_func_format::print() mysql-test/t/select.test Added test case to test the bug mysql-test/r/select.result Result of the test case appended here 	73e69d0f8c7e9f727a69cc7235e241d8db66d177
----------------------------
ndb - disable query_cache_size_basic_32, fails always on win64 	8af09bbb80a08616e709a9ab6c1084f983c43503
----------------------------
Bug#13437900 - VALGRIND REPORTS A LEAK FOR REPL_IGNORE_SERVER_IDS There was memory leak when running some tests on PB2. The reason of the failure is an early return from change_master() that was supposed to deallocate a dyn-array. Actually the same bug58915 was fixed in trunk with relocating the dyn-array destruction into THD::cleanup_after_query() which can't be bypassed. The current patch backports magne.mahre@oracle.com-20110203101306-q8auashb3d7icxho and adds two optimizations: were done: the static buffer for the dyn-array to base on, and the array initialization is called precisely when it's necessary rather than per each CHANGE-MASTER as before. 	b100506323e75d42bc9a678b84dbde776eeb27b4
----------------------------
Addendum to the fix for bug #11754011: fixed a testcase result to include the new --slow-start-timeout option's help output 	e2268b8e1ef9f62258ee85225265d4afa9ad340f
----------------------------
BUG#11746146 - 23894: MYSQLBINLOG OUTPUTS SET INSERT_ID=N STATEMENTS UNNECESARILY WITH --DATABA [This is a post push for the bug#11746146, which was failing on PB2] Problem - there were two problems with the earlier patch 1. when the buffered events from the dynamic array got popped out the log position was changed to the current log position (ie. the log position of the parent query event). This caused the failure of the test binlog_hexump.test. 2. The second problem test main.mysqlbinlog2 and main.mysqlbinlog the result file was not updated for the changed mysqlbinlog behaviour. Fix - for the fix of the above mentioned problems : We define a new structure which stores the event and the log position of the event. When the query event is processed :- >  elements are popped out of the dynamic array, >  the event and log position is read from the structure variable >  the event is processed. As for the second problem the result file were updated. 	7c18aa2ad7d260825ba6bff032d5f0efdc664d86
----------------------------
Bug#11754011: 45546: START WINDOWS SERVICE, THEN EXECUTE WHAT IS NEEDED. Added a global read-only option slow-start-timeout to control the Windows service control manager's service start timeout, that was currently hard-coded to be 15 seconds. The default of the new option is 15 seconds. The timeout can also be set to 0 (to mean no timeout applicable). 	0906ae77415ceb4388a5bc73c7fe91d72ca6a646
----------------------------
ndb - add bool argument to mt_thr_config::do_bindings() instead of having it magically deduce value itself 	cf5ff0ab3625a4f81dd93dddf0fddb8f47e83fae
----------------------------
BUG#13427444: LIVE UPGRADE FAILS BETWEEN 5.5.18 -> 5.6.4 When doing a live upgrade from a 5.5 into a 5.6, the server would refuse to startup because the new replication metadata tables were not created.  In addition, the error message was mostly unhelpful. In fact if the user is convinced that the server should start, he can turn on the option slave-skip-start which also bypasses the replication metadata checks on startup. Then the user is able to fix the problem. In this patch we extend the error and warning messages to make it clear that the problem may be related to the live upgrade and also to suggest using skip-slave-start, to bypass the startup problem. The user can then resort to mysql_upgrade to fix not only this but other problems in system tables that are due to the live upgrade. 	5c7d9346057e06d2914adf54735d9491d61a90e8
----------------------------
Bug#13494672 Remove special tables innodb_sql and innodb_mem_validate The special table name innodb_sql was added in branches/fts r624 as a debug feature. It should never have been tested for unless the debug flag is present at compilation time. It may have been used for debugging in the early stages of full-text-search development. Remove the table. The special table name innodb_mem_validate does not trigger any useful action unless UNIV_MEM_DEBUG is defined at compilation time and innodb_use_sys_malloc=0 is being used at runtime. Enclose the tests for it inside UNIV_MEM_DEBUG. rb:851 approved by Jimmy Yang 	6756b010d6a66103d4fdc54d6344a0241eb4a0c6
----------------------------
Bug #13117023: Innodb increments handler_read_key when it should not The counter handler_read_key (SSV::ha_read_key_count) is incremented incorrectly. The mysql server maintains a per thread system_status_var (SSV) object.  This object contains among other things the counter SSV::ha_read_key_count. The purpose of this counter is to measure the number of requests to read a row based on a key (or the number of index lookups). This counter was wrongly incremented in the ha_innobase::innobase_get_index(). The fix removes this increment statement (for both innodb and innodb_plugin). The various callers of the innobase_get_index() was checked to determine if anybody must increment this counter (if they first call innobase_get_index() and then perform an index lookup).  It was found that no caller of innobase_get_index() needs to worry about the SSV::ha_read_key_count counter. 	22b38304836ff60d9929e0988676a33397c45b45
----------------------------
"Fix for BUG#12912171 - ASSERTION FAILED: QUICK->HEAD->READ_SET == SAVE_READ_SET and BUG#13256446 - ASSERTION QUICK->HEAD->READ_SET == SAVE_READ_SET' FAILED IN OPT_RANGE.CC:1606 When fixing Bug 12698916, the assertions DBUG_ASSERT(quick->head->read_set == save_read_set); DBUG_ASSERT(quick->head->write_set == save_write_set); were added to QUICK_ROR_INTERSECT_SELECT::init_ror_merged_scan(). Indeed, a QUICK_ROR_INTERSECT_SELECT is the intersection of several QUICK_RANGE_SELECT; each QUICK_RANGE_SELECT has its own ""private bitmap of columns"" (QUICK_RANGE_SELECT::column_bitmap) which it copies to table->read_set when it operates (the idea is that each QUICK_RANGE_SELECT may be on a different index, so needs to do reads of a different set of columns, so needs to set table->read_set to that set before it does a read). QUICK_ROR_INTERSECT_SELECT::init_ror_merged_scan() calls QUICK_RANGE_SELECT::init_ror_merged_scan() on each QUICK_RANGE_SELECT: the assertions want to verify that each QUICK_RANGE_SELECT keeps its ""read_set change"" local to itself, does not ""leak"" it outside. The present bug is about those new assertions firing in various UPDATE statements which all use this block of code of mysql_update(): if (used_key_is_modified || order) { modify table->read_set/table->write_set; //(A) use a ""quick"" (range optimizer object): call reset() (thus init_ror_merged_scan()), or get_next(), or the destructor } QUICK_RANGE_SELECT is designed like this: - constructor: save table->read_set (a pointer) into member save_read_set - init_ror_merged_scan(): point table->read_set to member column_bitmaps, open a dedicated ""handler"" object, restore table->read_set upon exit (restore *to member save_read_set*) - get_next(): point table->read_set to member column_bitmaps, read index entry, restore table->read_set upon exit (restore *to member save_read_set*) - destructor: restore table->read_set *to member save_read_set*. The same happens for table->write_set. The problem is that ""restore to member save_read_set"" may be incorrect: what if table->read_set was modified, by some non-range-optimizer code, between construction and destruction of the QUICK_RANGE_SELECT? Then ""restore to member save_read_set"" would cancel the modification. And it happens in the if() block above: - before the if(), a check_quick() call creates a ""quick"" object (constructor call) - in the if(), line ""A"" changes table->read_set from &table->def_read_set to either &table->tmp_set or &table->s->all_set. - in the if(), some calls on ""quick"" happens: reset() (thus init_ror_merged_scan()), info.read_record(&info) (thus get_next()), set_quick() (thus destructor) and explicit 'delete' (thus destructor). So the assertions fire, because they find that table->read_set is not the same before and after init_ror_merged_scan() (before: it is &table->tmp_set or &table->s->all_set as set by (A); after: it is the ""quick""'s save_read_set member i.e. &table->def_read_set, the pointer value of before (A)). So we have 3 suspicious functions; I added assertions in each of them to detect when they ""restored to an out-of-date bitmap"", and ran the entire testsuite, and all spotted problems were confined to the above if() block in mysql_update(). To fix the 3 crashing queries added in range.inc, it is sufficient to modify init_ror_merged_scan(): restore table->read_set to what it was *when the function was entered*, not to the save_read_set member. This is done in the patch. However, I find that leaving the ""restore behaviour"" in the two other functions (get_next() and destructor) is not a good idea. There is no logical reason why a get_next() (more or less just an index read) should permanently modify the table->read_set pointer. As to the destructor, I don't see a logical reason either; moreover, doing a restore in the destructor looks like ""RAII"", but given that ""quick"" objects are on the heap their destruction isn't an automatic thing, it happens at the code line where the developer wrote 'delete', which may be moved to earlier or later as code evolves... This is not safe. So I decided to do additional changes. First, I modified get_next(): restore table->read_set to what it was *when the function was entered*, not to the save_read_set member. So far, no problem happened. Then, I modified the destructor: removed the ""restore"" code out of it (and thus remove the save_read_set/save_write_set member). This last modification had consequences. Let's look again at the unchanged code. In the if() block of mysql_update(), the destructor is called in two places: 'select->set_quick()' and an explicit 'delete select' call. This restores table->read_set to what it was before (A). There is also other code which explicitely restores: if (table->key_read) table->restore_column_maps_after_mark_index(); That gives 3 possible paths which restore read_set. Sometimes, set_quick() is called, sometimes the destructor is called, sometimes table->key_read is true: in short, sometimes table->read_set is restored to what it was before (A). Other times, 'select' is NULL and table->key_read is false: table->read_set is *not* restored so we leave the ""if(used_key_is_modified||order)"" block with table->read_set equal to how (A) set it. The three crashing queries are examples where table->read_set is restored. This one below is an example where table->read_set is not restored (remains == &table->s->all_set): create table t1 (a int not null, b int not null, key (a)); insert into t1 values (1,1),(1,2),(1,3),(3,1),(3,2),(3,3),(3,1),(3,2),(3,3),(2,1),(2,2),(2,3); explain update t1 set b=1 order by a; +----+-------------+-------+------+---------------+------+---------+------+------+----------------+ | id | select_type | table | type | possible_keys | key  | key_len | ref  | rows | Extra          | +----+-------------+-------+------+---------------+------+---------+------+------+----------------+ |  1 | SIMPLE      | t1    | ALL  | a             | NULL | NULL    | NULL |   12 | Using filesort | +----+-------------+-------+------+---------------+------+---------+------+------+----------------+ In this case, in the if() block, select==NULL and we do a table scan (ha_rnd_next() calls); ""table scan"" implies table->key_read is false (I think this variable is true when we do an index scan). Sometimes table->read_set is restored, other times table->read_set is not restored... sounds suspicious. I asked myself: what is the correct behaviour: restore or not restore? The intention of code in mysql_update() is, to my interpretation: if(used_key_is_modified||order) { // can't update rows on the fly, must gather all row ids first modify table->read_set ; (A) scan table (sometimes using range scan, sometimes using table scan) and gather row ids; point the ""update-rows loop"" to this set of row ids } // Now the ""update-rows loop"": while (!(error=info.read_record(&info)) && !thd->killed) update rows (on the fly or using row ids above) I am convinced that modifications done by (A) serve only to satisfy the scanning, and thus should not ""leak"" outside of their if(used_key_is_modified||order) block. In the unchanged code, sometimes they leaked, other times they didn't leak. By removing the ""restore"" code of the destructor, I increased the proportion of ""leaks"". So I have eliminated all leaks by changing this code at the end of the if() block: if (table->key_read) table->restore_column_maps_after_mark_index(); I made it be unconditionally executed (=> always restore). By modifying the destructor, I potentially affect all code using the range optimizer, even outside of UPDATE. But, as written earlier, the fact that the destructor, in the entire testsuite, seemed to do real restoring only when in the if(used_key_is_modified||order) block, suggests that we can limit our study to this block. After doing all modifications above, innodb_explain_non_select_* tests failed: indeed, they had a case where modifications done by (A) leaked; my code changes blocked this leak. Let's study one of the failures, assuming no code changes. This query: EXPLAIN EXTENDED UPDATE t2 SET d = 10 WHERE b = 10 ORDER BY a, c LIMIT 5; id	select_type	table	type	possible_keys	key	key_len	ref	rows	filtered	Extra 1	SIMPLE	t2	ALL	a	NULL	NULL	NULL	26	100.00	Using where; Using filesort has table->read_set set to &table->s->all_set in the if() block, this is leaked outside of the if() block, so we start the ""update-rows loop"" with all_set: this reads all columns of the row; the loop has this: if (!records_are_comparable(table) || compare_records(table)) ha_update_row() Because all columns are read, records_are_comparable() is true, so a record which has b=10 and already has d=10 will be recognized as ""no update needed"" (compare_records()==false): so handler_update (count of handler::update_row() calls) is 0. On the other hand, if ORDER BY is removed, then the if() block is not entered, table->read_set is not all_set, it's only ""b"", so ""d"" is not read, so records_are_comparable() is false, so we update the row: handler_update is 1. With my change, UPDATE ORDER BY does not leak all_set out, so UPDATE ORDER BY now behaves more like UPDATE does. I don't find that it's a bad change: it will save column reads at the cost of more updates; can be good or bad depending on circumstances. Moreover, the leak concerned write_set too: if write_set is left to all_set, we will update more columns than necessary. Finally, I don't think that the current behaviour of leaking all_set is intentional (as some other, different UPDATE ORDER BY had some read_set restoring...). I have added to update.test some tests to verify that UPDATE and UPDATE ORDER BY now behave the same regarding handler_update (queries copied from innodb_explain_non_select*.test). Blocking the leak has one good consequence on row-based-replication; indeed, the leak of write_set=all_set makes RBR believe that all columns are changed by the UPDATE, and so RBR writes all ""after-update"" values of all columns into the binary log; when @@binlog-row-image is equal to ""minimal"", this is not correct: http://dev.mysql.com/doc/refman/5.6/en/replication-options-binary-log.html#sysvar_binlog_row_image I have added a test to rpl_row_img_sanity; with my fix, the first column is not in the ""after image"", which is a good thing. Without my fix, it is in the ""after image"" ('mysqlbinlog -v' then shows it as +### UPDATE test.t +### WHERE +###   @1=30 +###   @2=40 +### SET +###   @1=30    <<<<< this is the first column, in the ""after image"" +###   @2=100 ); this is bad as it's an unneeded value. A final note: if I don't do any changes to the code, but remove the read_set/write_set modifications of line (A), no test fails... Looking at revision history, this line was introduced in 2001 as ""innodb fixes"". I still prefer to keep it for now. NDB has shown to be sensitive to read_set/write_set, it is the engine which uses those bitmaps the most. MyISAM just ignores them (always read/writes all columns); InnoDB ignores them if the table is to be updated (then reads/writes all columns). "	313ab5b02d4cdcd68d853a17a78a4b028b07e182
----------------------------
"Bug #13116225 	LIVE DOWNGRADE CRASHES WITH INNODB_PAGE_SIZE=4K This bug ensures that a live downgrade from an InnoDB 5.6 with WL5756 and a database created with innodb-page-size=8k or 4k will make a version 5.5 installation politely refuse to start. Instead of crashing or giving some indication about a corrupted database, it will indicate the page size difference. This patch takes only that part of the Wl5756 patch that is needed to protect against opening a tablespace that is stamped with a different page size. It also contains the change in dict_index_find_on_id_low() just in case a database with another page size is created by recompiling a pre-WL5756 InnoDB. "	ab7a8ceb317986ffab64f3230691efd1b1aed0bb
----------------------------
WL#3584 added global variables gtid_mode and binlog_disable_transaction_unsafe_statements these have no meaning at the moment 	487c513328d1e1a33618c35a71bc06219fe51011
----------------------------
Bug#11759044 - 51325: DROPPING AN EMPTY INNODB TABLE TAKES A LONG TIME WITH LARGE BUFFER POOL (Note: this a backport of revno:3472 from mysql-trunk) rb://845 approved by: Marko When dropping a table (with an .ibd file i.e.: with innodb_file_per_table set) we scan entire LRU to invalidate pages from that table. This can be painful in case of large buffer pools as we hold the buf_pool->mutex for the scan. Note that gravity of the problem does not depend on the size of the table. Even with an empty table but a large and filled up buffer pool we'll end up scanning a very long LRU list. The fix is to scan flush_list and just remove the blocks belonging to the table from the flush_list, marking them as non-dirty. The blocks are left in the LRU list for eventual eviction due to aging. The flush_list is typically much smaller than the LRU list but for cases where it is very long we have the solution of releasing the buf_pool->mutex after scanning 1K pages. buf_page_[set|unset]_sticky(): Use new IO-state BUF_IO_PIN to ensure that a block stays in the flush_list and LRU list when we release buf_pool->mutex. Previously we have been abusing BUF_IO_READ to achieve this. 	d9a3a6ed1977ae34bf7b5ac7572ad346c2eea993
----------------------------
Merge: 79b5b65 ae0eb6d BUG#11746146 - 23894: MYSQLBINLOG OUTPUTS SET INSERT_ID=N STATEMENTS UNNECESARILY WITH --DATABA Description: mysqlbinlog --database=<database_name>    <binlog_file_name> will output all the SET INSERT_ID= n assignments in the binary log even if the database bar isn't mentioned in the binary log. Similar is the case with two other types of events namely RAND_EVENTS and USER_VAR_EVENT events. Fix: The problem was fixed by using this algorithm - * each time we get an INTVAR, USER_VAR or a RANDOM event we push the event in a dynamic array. * when we get its parent query event, we check whether we need to process the query event >   if we need to skip the event we skip the query event and reset the dynamic array and proceed. >   if we need to process the event we pop the events that were pushed in the dynamic array, and process them followed by processing the parent query event, and finally reset the dynamic_array. 	b0188e3ad4cf3a23364999ba2eb122146fea88b5
----------------------------
bug#12561297: Issue: - when mysql_embedded executable is invoked from mtr, instead of taking server options generated by mtr (in my.cnf file), it was taking default options (which are not set like datadir etc.), so was failing/crashing. Details: - modified test case to make mysql_embedded executable to use my.cnf generated by mtr during test execution. ****** # 	df177322b1738c9060e5f6a14f06e90e305e8b16
----------------------------
"Partial fix for Bug#11764622 57480: MEMORY LEAK WHEN HAVING 256+ TABLES In ha_innobase::open() we used to allocate two buffers: upd_buff and key_val_buff. Both with the size of the entire row of the table. Also in ha_innobase::records_in_range() we allocated yet another buffer with the same size as key_val_buff. With a table like 'c VARCHAR(64000), KEY (c(3072))' we used to allocate about 128KB at table open time for those two buffers (and another 64KB just for the duration of ha_innobase::records_in_range()). upd_buff is only used in ha_innobase::update_row(), so we delay its allocation until ha_innobase::update_row() is called. After all, that method may never be called in the lifetime of the ha_innobase object. Renamed to upd_buf on purpose - to trigger a compilation error if there appears to be some other place where it is used and also for consistency with other InnoDB code that uses 'buf' instead of 'buff'. key_val_buff is only used in ha_innobase::index_read() and in ha_innobase::records_in_range() to be passed as a working space to row_sel_convert_mysql_key_to_innobase() (but the generated search tuple may end up having a pointer inside that buf, so the lifetime of the buf should be as long as the lifetime of the search tuple). That buffer does not need to be the size of the whole row, only the part covered by indexes. So we allocate the buffer directly in the ha_innobase object space. This also makes the code cleaner. This change removes the following malloc() during open table: #0 malloc (size=128128) #1 my_malloc #2 my_multi_malloc #3 ha_innobase::open #4 handler::ha_open #5 ha_partition::open #6 handler::ha_open #7 open_table_from_share #8 open_table #9 open_and_process_table #10 open_tables #11 open_and_lock_tables #12 open_and_lock_tables #13 execute_sqlcom_select #14 mysql_execute_command #15 mysql_parse where the allocation size is roughly twice the row size. In exchange if UPDATE is ever done on that table, then during the first UPDATE an allocation of about the row size will be done (64k in this example). Also the ha_innobase object will become about 6KB bigger due to allocating two buffers of size REC_VERSION_56_MAX_INDEX_COL_LEN+2 (3072+2) along with it. Reviewed by:	Inaam (rb:817) "	6c1e51b0123f1f7ca26cde72b1dd8765082bf130
----------------------------
"Partial fix for Bug#11764622 57480: MEMORY LEAK WHEN HAVING 256+ TABLES In dict_load_foreigns() use onstack storage for the dtuple that is only used inside that function. And do not use a separate storage for storing a '\0'-terminated foreign key id, instead pass the len of the string to dict_load_foreign() and change it to work with non-terminated string. Introduce a new function dtuple_create_from_mem() that initializes a dtuple from an already allocated memory chunk. This change removes two malloc() calls per one open table (for a table that does not have foreign keys!). It removes the following codepath (executed twice per open table): #0 malloc (size=376) #1 mem_area_alloc #2 mem_heap_create_block #3 mem_heap_create_func #4 dict_load_foreigns #5 dict_load_table #6 dict_table_open_on_name_low #7 dict_table_open_on_name #8 ha_innobase::open #9 handler::ha_open #10 ha_partition::open #11 handler::ha_open #12 open_table_from_share #13 open_table #14 open_and_process_table #15 open_tables and it causes the stack memory footprint of dict_load_foreigns() to grow with 56 bytes (DTUPLE_EST_ALLOC(1)==72 minus two pointers, 8 bytes each). Reviewed by:	Inaam (rb:817) "	e79aa5f12c5dc90ea62411ae9a870df6db5b07de
----------------------------
"Partial fix for Bug#11764622 57480: MEMORY LEAK WHEN HAVING 256+ TABLES Make row_prebuilt_t::pcur and row_prebuilt_t::clust_pcur btr_pcur_t instead of btr_pcur_t* in the definition of row_prebuilt_t. It makes no sense to have pointers to objects that are always (unconditionally) allocated separately from the main object. It is better to allocate them along with the main object (row_prebuilt_t). This is possible because we do not do any of the followings in the code: 1. Assign ::pcur or ::clust_pcur to some object allocated elsewhere 2. Free and reallocate ::pcur or ::clust_pcur This change removes two malloc() calls per one open table. It removes the following codepath (executed twice per open table): #0 malloc (size=352) #1 mem_area_alloc #2 mem_heap_create_block #3 mem_heap_create_func #4 mem_alloc_func #5 btr_pcur_create_for_mysql #6 row_create_prebuilt #7 ha_innobase::open #8 handler::ha_open #9 ha_partition::open #10 handler::ha_open #11 open_table_from_share #12 open_table #13 open_and_process_table #14 open_tables #15 open_and_lock_tables and it changes this codepath to allocate 3552 instead of 3104 bytes: #0 malloc #1 mem_area_alloc #2 mem_heap_create_block #3 mem_heap_create_func #4 row_create_prebuilt #5 ha_innobase::open #6 handler::ha_open #7 ha_partition::open #8 handler::ha_open #9 open_table_from_share #10 open_table #11 open_and_process_table #12 open_tables #13 open_and_lock_tables #14 open_and_lock_tables #15 execute_sqlcom_select Reviewed by:	Inaam (rb:817) "	4b5c14fb9cc77eb37164b5dfba6c889391c284d7
----------------------------
"Partial fix for Bug#11764622 57480: MEMORY LEAK WHEN HAVING 256+ TABLES In row_create_prebuilt() try to estimate how many bytes will be allocated from the mem_heap_t object and create it with the appropriate size so that no further allocations are done by the code. The only exception we make is that we do not allocate mysql_row_len bytes if it is bigger than 256. This memory chunk is needed only in INSERTs and since we are not sure what is the prebuilt going to be used for and since mysql_row_len could be huge (as huge as e.g. 60KB) - we do not allocate a space for it in advance. This change removes at least this codepath: #0 malloc (size=1384) #1 mem_area_alloc #2 mem_heap_create_block #3 mem_heap_add_block #4 mem_heap_alloc #5 dtuple_create #6 row_create_prebuilt #7 ha_innobase::open #8 handler::ha_open #9 ha_partition::open #10 handler::ha_open #11 open_table_from_share #12 open_table #13 open_and_process_table #14 open_tables #15 open_and_lock_tables causing at least 1 less malloc() during open table. In exchange this codepath: #0 malloc #1 mem_area_alloc #2 mem_heap_create_block #3 mem_heap_create_func #4 row_create_prebuilt #5 ha_innobase::open #6 handler::ha_open #7 ha_partition::open #8 handler::ha_open #9 open_table_from_share #10 open_table #11 open_and_process_table #12 open_tables #13 open_and_lock_tables #14 open_and_lock_tables #15 execute_sqlcom_select now allocates 3104 bytes instead of 632 (on 64 bit machine). Reviewed by:	Inaam (rb:817) "	df8da6c76ce1423a46a8a04ae0ed90b6f9a833df
----------------------------
BUG#11745230 Making the test case work when relay-log.info data is stored in a table. The test case assumed that the relay-log.info data to be fixed was stored in a file. However, it can be stored in a table as well. For completeness, we fix this the test case to make it work in such cases as well. 	fdd04a481c9b8fbb84576c39e7cd19ddbd720b8a
----------------------------
WL5602 - Added missing #ifdef HAVE_OPENSSL 	906c9cd962f42c7e8abbf9d33de841dbb2bd7306
----------------------------
BUG#11745230 Post-push fix for the test in mysql-trunk. The entry for the relay-log filename in relay-log.info file is on the line and not on the first one as in mysql-5.5. This made the test case fail because the relay-log.info was not correctly rewritten. In addition, I've added the warnings due to the inclusion of master-slave.inc into the result file (after WL 4143, mysql-trunk throws these warnings when the password is stored in the master.info). 	f15a749a8d753c3346ad96e8e6cdc892e6c74db5
----------------------------
Bug#13414773 -INNODB_FAST_SHUTDOWN=2, ASSERT STATE == BUF_BLOCK_ZIP_PAGE We can have dirty pages during a fast shutdown. Relax the assertion. 	943085828b53201d2560bd72b5c4c92f19542ee2
----------------------------
Bug#13414773 -INNODB_FAST_SHUTDOWN=2, ASSERT STATE == BUF_BLOCK_ZIP_PAGE We can have dirty pages during a fast shutdown. Relax the assertion. 	62ba947b2456396018197c37e8e9d9dba7e232d9
----------------------------
Fix for Bug#13430436 PERFORMANCE DEGRADATION IN SYSBENCH ON INNODB DUE TO ICP When running sysbench on InnoDB there is a performance degradation due to index condition pushdown (ICP). Several of the queries in sysbench have a WHERE condition that the optimizer uses for executing these queries as range scans. The upper and lower limit of the range scan will ensure that the WHERE condition is fulfilled. Still, the WHERE condition is part of the queries' condition and if ICP is enabled the condition will be pushed down to InnoDB as an index condition. Due to the range scan's upper and lower limits ensure that the WHERE condition is fulfilled, the pushed index condition will not filter out any records. As a result the use of ICP for these queries results in a performance overhead for sysbench. This overhead comes from using resources for determining the part of the condition that can be pushed down to InnoDB and overhead in InnoDB for executing the pushed index condition. With the default configuration for sysbench the range scans will use the primary key. This is a clustered index in InnoDB. Using ICP on a clustered index provides the lowest performance benefit since the entire record is part of the clustered index and in InnoDB it has the highest relative overhead for executing the pushed index condition. The fix for removing the overhead ICP introduces when running sysbench is to disable use of ICP when the index used by the query is a clustered index. When WL#6061 is implemented this change should be re-evaluated. 	a00d8515bdbf516b4f253026b101ea49df9cda55
----------------------------
ndb - bug#13436216 - add new config, MinFreePct to ensure that we don't get database so full that we can't restart 	55893bf192d5037c36a20de8a4ed743425165011
----------------------------
Bug#13437900 - VALGRIND REPORTS A LEAK FOR REPL_IGNORE_SERVER_IDS There was memory leak when running some tests on PB2. The reason of the failure is an early return from change_master() that was supposed to deallocate a dyn-array. Fixed with relocating the dyn-array's destructor at ~LEX() that is the end of the session, per Gleb's patch idea. Two optimizations were done: the static buffer for the dyn-array to base on, and the array initialization is called precisely when it's necessary rather than per each CHANGE-MASTER as before. 	9937d5f0a91bb8fdceb7d2110e22c03878242a29
----------------------------
Bug#11756764 48726: MYSQLD KEEPS CRASHING WITH SIGSEGV WITH MYISAM_USE_MMAP ENABLED MySQL server can crash due to segmentation fault when started with myisam_use_mmap. The reason behind this being, while making a request to unmap (munmap) the previously mapped memory (mmap), the size passed was 7 bytes larger than the size requested at the time of mapping. This can eventually unmap the adjacent memory mapped block, belonging to some other memory-map pool. Hence the subsequent call to mmap can map a region which was still a valid memory mapped area. Fixed by removing the extra 7-byte margin which was erroneously added to the size, used for unmappping. 	c9761d0872366e79e7a17c726a1d4fcb14e8f663
----------------------------
"Fix for BUG#13430443 ""ASSERTION `NEW_TYPE[0] != 'U'' FAILED. WHEN OPTIMIZER_TRACE IS ENABLED"": new access type in test_if_skip_sort_order() may be ""ref"", and opt trace didn't expect that. "	3e9d63bd970b1a0b93c2a3166d3b57339f68cdd8
----------------------------
Test cleanup. Added valgrind suppressions for optimized builds, for init_pfs_instrument_array() Improved the robustness of the performance_schema.nesting test 	1d5d73a130ffa413f63a066e74785de3841a94a3
----------------------------
"BUG#11762697 (MySQL55323): ADD AN OPTION TO LIMIT THE WRITE RATE TO SLOW QUERY LOG DBA may now set a maximum number of ""Query does not use index"" warnings per minute that may appear in the slow query log. Limit may be set at start (--log-throttle-queries-not-using-indexes=...) and can be read/modified at runtime using a global variable (SET GLOBAL log_throttle_queries_not_using_indexes=...). A value of 0 disables the limit. The first such warning opens a 60s timeframe; warnings up to the given limit are printed. Any warnings beyond the given limit are suppressed. A summary stating the number of suppressed warnings and the total time spent in all queries we didn't print a warning for will be logged at the end of the window. (This summary line gives query-time and lock-time, just like a regular line in the slow query log would; however, the values are cumulative for all suppressed lines in that timeframe.) The next 60s timeframe does not start immediately after a summary is printed; instead, it starts when the next qualifying query (""not using indexes"") is slow-logged. "	7a3cf1885a749e0037ac8bcd0e8ee995da4d7909
----------------------------
Bug#12979420 - MTS: REPLICATION BREAKS IF RELAY REPOSITORY = TABLE AND CHECKPOINT_GROUP>=524288 Bug#12969454 - SET REASONABLE LIMITS ON SLAVE_* PARAMETERS RELATED TO MTS Bug#13062867 - VALGRIND FAILURE IN RPL.RPL_CIRCULAR_FOR_4_HOSTS The first bug is the main sub-case of Bug#12969454. The max value for @@global.slave_checkpoint_group is reduced to become the max bytes in BLOB field (see mysql.slave_worker_info table) times 8. The three more MTS configuration parameters maximum does not need any more refinements. Anyway sys_vars suite tests are edited. The issue with Bug#13062867 appears to deal with timing of reaching a state by Coordinator where an extra warning is printed out. The worker errors out correctly as specified by the test's logics. 	1c35cdd1d5cb2271711e272db642be9d1a8b37bc
----------------------------
BUG#11745230: 12133: MASTER.INDEX FILE KEEPS MYSQLD FROM STARTING IF BIN LOG HAS BEEN MOVED When moving the binary/relay log files from one location to another and restarting the server with a different log-bin or relay-log paths, would cause the startup process to abort. The root cause was that the server would not be able to find the log files because it would consider old paths for entries in the index file instead of the new location.  What's even worse, the relative paths would not be considered relative to the path provided in log-bin and relay-log, but to mysql_data_dir. We fix the cases where the server contains relative paths. When the server is reading from the index file, it checks whether the entry contains relative paths. If it does, we replace it with the absolute path set in log-bin/relay-log option. Absolute paths remain unchanged and the index must be manually edited to consider the new log-bin and/or relay-log path (this should be documented). This is a fix for a GA version, that does not break behavior (that much). For development versions, we should go with Zhenxing's approach that removes paths altogether from index files. 	67791697e4303355260fa97f5e4493b20e55c49b
----------------------------
BUG#13427949: CHANGE MASTER TO USER='' (EMPTY USER) CAUSES ERRORS ON VALGRING When passing an empty user to the connect function will cause valgrind warnings. Seems that the client code is not prepared to handle empty users. On 5.6 this can even be triggered by START SLAVE PASSWORD='...'; i.e., without setting USER='...' on the START SLAVE command (see WL#4143 for details on the new additional START SLAVE commands). To fix this, we disallow empty users when configuring the slave connection parameters (this decision might be revisited if the client code accepts empty users in the future). 	ce52bc978780830b89bef3a258d39a812ee7b355
----------------------------
ndb - bug#13400021 Dead lock with ndbcluster_binlog_index_purge_file The problem is that the disabling of binlog didn't work properly binlog-code acquired a mutex to check if statement needed to be binlogged (which it didn't). But..since the ndbcluster_binlog_index_purge_file is called with mutex held, this meant that it could deadlock The fix: if binlog-format is set to ROW, the code will discover that it doesn't need binlogging eariler, wo/ taking the problematic mutex. This is very weird...and indeed, in 5.5 this has been adressed so that the thread-local OPTION_BIN_LOG variable is checked prior to taking any mutexes. (hence this fix will null-merge to 7.2) 	c788bc432fde160f463b8ada6de5d5f1be06251e
----------------------------
"Fix for Bug#13249966 MRR: RANDOM ERROR DUE TO UNINITIALIZED RES WITH SMALL READ_RND_BUFFER_SIZE This bug is triggered by setting the system variable read_rnd_buffer_size so low that the created sort buffer used by DS-MRR is too small to fit a single key. When the range scan using DS-MRR starts, it is unable to store any keys in the sort buffer and an uninitialized return value is returned. This return value would have been given its initial value when the first record was read from the index. This causes either a random error value or wrong results from the range scan (zero records). The patch fixes two bugs in the DS-MRR implementation. Bug 1 (the original problem): The cause for this failure is found in DsMrr_impl::choose_mrr_impl(). One of its arguments is the buffer size which is initially specified by read_rnd_buffer_size. Before this is used as argument in the call to get_disk_sweep_mrr_cost() the following is subtracted from the buffer size: table->key_info[keyno].key_length + h->ref_length; The buffer size is stored as an unsigned integer and if it is smaller than the above expression, the result of the subtraction becomes a very large number. When get_disk_sweep_mrr_cost() is called with this huge buffer size, it concludes that there are plenty of room for storing keys in this buffer when it should have concluded that the buffer was too small for storing a single key. This causes the choose_mrr_impl() to return that DS-MRR should be used when it should have returned that the default MRR implementation should have been used due to too small buffer size. The subtraction (the above expression) from the buffer size in DsMrr_impl::choose_mrr_impl() was originally done because an early version of the DsMrr implementation used the sort buffer to store the current position of the scan each time it had filled the sort buffer. This was needed in order to be able to restart the scan next time it should fill the sort buffer. The subtraction was done to count for the space needed for storing the current position. This implementation has since been changed to use a second handler object for scanning the index. With this is place, there was no need for storing the current position in the sort buffer. The code for storing and reading the current scan position to/from the sort buffer has been removed but the reservation of space for it in DsMrr_impl::choose_mrr_impl() has been left in the code. The fix for avoiding that the buffer size is assigned a wrong value is to remove this subtraction. Bug 2: This fix solved the original bug but caused several query plans to wrongly change from using MRR or BKA to not using these. This was caused by a bug in DsMrr_impl::dsmrr_info(). This function first computes the cost for using the default MRR strategy by calling handler::multi_range_read_info(). This takes as one of its arguments a pointer to the buffer size. Since the default MRR implementation does not need a sort buffer, it sets the buffer size to zero. To avoid that this overwrites the original buffer size, a local variable def_bufsz is used in DsMrr_impl::dsmrr_info(). After the call to handler::multi_range_read_info() this will thus always be zero. The bug is that this local variable is used as argument when calling choose_mrr_impl() instead of the original buffer size stored in *bufsz. This causes choose_mrr_impl() to be called with a buffer size of 0 bytes, and as a result it will return that the default MRR implementation should be used (since the zery byte buffer size is too small). The reason this bug has not surfaced earlier is that it has been ""hidden"" by the first bug. When calling choose_mrr_impl() with a buffer size of 0 the subtraction in choose_mrr_impl() would (wrongly) change this to a very large buffer size that was large enough to use for DS-MRR (or in another way: this second bug sets the supplied buffer size to 0 in DsMrr_impl::dsmrr_info() and then the first bug compensated by changing the 0 byte buffer size to a very large buffer size in choose_mrr_impl()). The fix for this is to replace the bufsz and flags arguments in the call to choose_mrr_impl() to use the original values instead of the values in the local variables def_flags and def_bufsz. After this fix the implementation of DsMrr_impl::dsmrr_info() is similar to the corresponding implementation in DsMrr_impl::dsmrr_info_const(). "	fb41887c07529d8946cd03d41fd8568815e61f57
----------------------------
Fix innodb_lru_scan_depth_basic test as we change the value for mtr runs to 100 from 1024 	902156f3ad7509e6ef1aecec132151e90b826904
----------------------------
Fix autocommit handling for test cases 	dd524ac97b591a86f4fcada59e253b60e2af524e
----------------------------
Improve autocommit handling Remove post-execute handling from Session; just delegate to transaction; this allows proper autocommit behavior for batching Add update by primary key and unique key operations to Session Move ValueHandlerBatching to clusterj-core spi to allow batching for queries Add update to QueryDomainType to support jdbc update; this is patterned on delete by query but allows updating modified fields based on a query Add methods to get the names of properties (fields) from top level queries; this allows getting the names for updating by primary key or unique key 	266da1b63fb80afdb582089de8a5ea317c0fcc85
----------------------------
Make InnoDB LRU eviction less aggressive when the buffer pool is small by setting the value of innodb_lru_scan_depth lower. Aggressive eviction results in test failures which rely on certain pages to be in the buffer pool e.g.: innodb_information_schema 	e0964f20ebd90770fb8ca72eeacc256d806df733
----------------------------
Disable innodb_corrupt_bit.test on windows, issues with innodb_change_buffering_debug prevents creating the Dup Key scenario on windows 	8dab993a28cb523a3da0db82773519fec14959e4
----------------------------
ndb - adapt ndb_dd_basic to new behaviour in trunk where a CREATE or ALTER involving LOGFILE GROUP or TABLESPACE now fails instead of only pushing some warnings - switch to use default_storage_engine since storage_engine is going away - remove junk comments and drop table 	49fd7aeeec687a06dbcb1c631386ef810448e1a8
----------------------------
WL#5461 PERFORMANCE_SCHEMA MY.CNF Defaults Setup Ensure that instrument and consumer settings cannot be seen or changed, and that the corresponding tests verify the same. Remove 'enabled/disabled' as option values. 	b3f8aa7568adac417a07e56306581926be401817
----------------------------
WL#5461 PERFORMANCE_SCHEMA MY.CNF Defaults Setup Disallow SELECT @@ of performance_schema_instrument and performance_schema_consumer option settings. 	4b277e51dba24d020091e6df4977c1a138c7be94
----------------------------
"Bug#11748731:SOME 'BIG' TESTS FAILING ON 6.0 A patch for alter_table-big.test has been committed earlier. This is a patch for create-big.test: The test used to time-out after 900 seconds. It relied on debug sleeps that are no longer present in the code. Since the sleeps are long gone, fixing the problem didn't involve just updating the result file or using macro ""show_binlog_events2.inc"" instead of ""show binlog events"" statement. The test needed to be rewritten using debug sync points, and result then needed to be updated. So, the sleeps have been replaced by debug_sync points and the test execution time has been reduced significantly. "	2dd10f632b3ec1fa9c4e46785a7cb9a26b2c13b8
----------------------------
"Bug#11748731:SOME 'BIG' TESTS FAILING ON 6.0 A patch for alter_table-big.test has been committed earlier. This is a patch for create-big.test: The test used to time-out after 900 seconds. It relied on debug sleeps that are no longer present in the code. Since the sleeps are long gone, fixing the problem didn't involve just updating the result file or using macro ""show_binlog_events2.inc"" instead of ""show binlog events"" statement. The test needed to be rewritten using debug sync points, and result then needed to be updated. So, the sleeps have been replaced by debug_sync points and the test execution time has been reduced significantly. "	a8b3b61de50286b1f8c22b0cf5309b3d780ce810
----------------------------
Bug#11748572:ALLOCATING A LARGE QUERY CACHE IS NOT DETERMINISTIC Setting query_cache_size to larger values might fail depending on the memory pressure being put on the system. This can be seen on pushbuild as the test case query_cache_size_basic tries to allocate a +3GB query cache, which succeeds in some machines and fails in others. So this part of the code where the test case tries to allocate +3GB query cache has been disabled for now to get the test running on pb2. 	922b3adcf89ef276304cc2e30596d0a783c4d169
----------------------------
Bug#13410464: FOR START SLAVE .. PASSWORD=<PASSWORD>, THE PASSWORD IS LOGGED IN PLAIN TEXT The server was not rewriting the statement START SLAVE when it was issued along with the PASSWORD instruction. Thence, the password is written in clear text to the general log. To fix this, we register the SQLCOM_SLAVE_START as a command that should be rewritten (if the command contained indeed the PASSWORD token). 	3706e909a70195a1107488238138c85c45231b26
----------------------------
"WL#6046 - Special handling of read-only transactions Split the trx_sys_t::trx_list into two: 1. trx_sys_t::ro_trx_list 2. trx_sys_t::rw_trx_list The debug flag that checks for list membership has been split into two too. The new rules around list membership and the new transaction state transitions can be found in trx0trx.h. The read view that is required for MVCC to work uses the trx_sys_t::rw_trx_list. Read-only transactions don't need to be considered in the this read view because they don't make any changes. An additional optimisation is to detect whether the SQL query is an aut-commit non-locking select. Such transactions don't go on either of the trx lists. This reduces the contention on the trx_sys_t::mutex further. Auto-commit non-locking selects set the trx_t::start_time once every 32 times, this is to further reduce system calls from trx_start_low(). These ac-nl-selects currently will not be displayed via ""SHOW ENGINE INNODB STATUS"" but only via the Information Schema. Add two new columns to the Information_schema.innodb_trx table. 1. trx_is_read_only 2. trx_autocommit_non_locking This WL depends on WL#5968 START TRANSACTION [READ (WRITE | ONLY)];, currently the function to query the read-only status of a transaction will always return FALSE. The function is there as stub only: thd_trx_is_read_only(); rb://800 Approved by Marko. "	511754f6851b85b55582e0fe67172b9c91ebec67
----------------------------
WL#5461 PERFORMANCE_SCHEMA MY.CNF Default Setup Resolve build warning 	c6a575455c5d05a16ce8f55824a5d7e0020f17f7
----------------------------
WL#5461 PERFORMANCE_SCHEMA MY.CNF Default Setup For the performance_schema_instrument configuration option: - Simplify code for trimming trailing spaces - Improve gcov coverage by adding trailing space to option value 	693ee947c4cd18f747d27e21433ef13c2e5e5eee
----------------------------
WL#5881 - Revert impl. of slave_allow_batching to default behaviour, allowing it to be changed although slave sql thread is running - Prefix variable with opt_ - Update test cases - Move opt_slave_allow_batching together with the other slave_ variables 	8470890d6d404db1a8cb428d6f158efa1c951049
----------------------------
WL#5881 - adapt test case to new(original) behaviour of slave_allow_batching 	1ab4078f60f48d415006037887d7ba1b727bffb9
----------------------------
"WL#5881 - revert to original functionality of ""slave_allow_batching"" thus allowing it to be changed also while slave sql thread is running - prefix the option variable with opt_ - move the code together with the other slave variables(thus inside HAVE_REPLICATION) "	57e59d8c1de850bcc70bf364f3e8941a8b2b28cd
----------------------------
WL#5461 PERFORMANCE_SCHEMA MY.CNF Default Setup Update mysqld--help-notwin testcase 	e688c9573c19428018cba52e6e095d2a21538ef3
----------------------------
WL#5461 PERFORMANCE_SCHEMA MY.CNF Default Setup Changes per code review: - Make new test cases platform- and compile option-generic - Issue warnings for invalid configuration options - Improve configuration option descriptions - Misc code tweaks 	53634c2929c9dcc3741e01f65b616be3eff4b80a
----------------------------
WL#5461 PERFORMANCE_SCHEMA MY.CNF Defaults Setup setup_instruments_defaults.test - Remove SELECT on setup_instruments - inconsistent across platforms 	c0058413bcabd65cead6bd21dfa6f15660e43baa
----------------------------
Fix bug #13400194 INNODB FTS SUPPORT: INNODB_FTS_LARGE_RECORDS DO NOT COMPLETE RUN ON WINDOWS. Also misc test cleanup: 1) add sys_vars test for newly added FTS configure varaibles 2) removed fulltext_plugin.test 	b9de03406589eedb2c8f9947a88ea9be895476d8
----------------------------
WL#5461 PERFORMANCE_SCHEMA MY.CNF Default Setup - Update for new regression test 	7f12686fc7ad7ce83d2d94400a2118dc104795b9
----------------------------
WL#5461 PERFORMANCE_SCHEMA MY.CNF Default Setup - Suppress valgrind warnings caused by known race condition during shutdown 	6267728132ace0835f6712e2086b1035e95575ba
----------------------------
WL#5461 PERFORMANCE_SCHEMA MY.CNF Default Setup - Updated Windows test 	ba6b19e5029458e30c0c877d4b6695e606212048
----------------------------
WL#5461 PERFORMANCE_SCHEMA MY.CNF Default Setup Added test cases to verify the new cnf options: - setup_instruments_defaults - setup_consumers_defaults 	3df032499126ee90d0449bd7c9e0df0c50c89ac1
----------------------------
WL#5461 PERFORMANCE_SCHEMA MY.CNF Default Setup Changes per code review: - Support event name wildcards for performance_schema_instrument config option - Move my_getopt.c reformatting to separate commit - Handle default configuration for global events: idle, table io, table locks - Enable all instruments in default_mysqld.cnf 	4a85c9c1ad85806ca800153ff6bc5f1e2578f6c2
----------------------------
WL#5881 - cherrypick fix not to run test for slave_allow_batching with embedded 	72a44297e02e19b393be3ea61f87da007ad166d2
----------------------------
WL#5581 - skip test for slave_allow_batching in embedded mode 	0a18315acce6e9ba95a743e77fa7135abf3c9390
----------------------------
"Fix for bug#12695572 - ""IMPROVE MDL PERFORMANCE IN PRE-VISTA BY CACHING OR REDUCING CREATEEVENT CALLS"". 5.5 versions of MySQL server performed worse than 5.1 versions under single-connection workload in autocommit mode on Windows XP. Part of this slowdown can be attributed to overhead associated with constant creation/destruction of MDL_lock objects in the MDL subsystem. The problem is that creation/destruction of these objects causes creation and destruction of associated synchronization primitives, which are expensive on Windows XP. This patch tries to alleviate this problem by introducing a cache of unused MDL_object_lock objects. Instead of destroying such objects we put them into the cache and then reuse with a new key when creation of a new object is requested. To limit the size of this cache, a new --metadata-locks-cache-size start-up parameter was introduced. "	02e1d6e6060dc6a60b502047fab666e17f191145
----------------------------
WL#5881 - adapt the patch for slave_allow_batching from 5.5 to trunk 	48c34bc13a303b968946303c88397317140f2ca2
----------------------------
WL#5881 - cherrypick latest patch for slave_allow_batching from 5.5-cluster - remove MCP tags 	bdcfded9b09a78caf1473109188f3985b6a7d643
----------------------------
WL#5881 - improve the slave_allow_batching patch after review comments - add test case 	a57bdeae66aafec32a65ce736921dec00587c434
----------------------------
WL#5881 - move extern declarations for opt_server_id_bits and ot_server_id_mask to mysqld.h 	1e7b123426623f24798e9220e9e2ccc22be4f0ad
----------------------------
Bug#13389196 BUILD FAILS IF P_S IS DISABLED WITH: -DWITH_PERFSCHEMA_STORAGE_ENGINE:BOOL=OFF Before this fix, the code failed to build without the performance schema. The problem was that in sql/sql_class.h, the structures: - PSI_statement_locker_state - PSI_idle_locker_state are undefined in this case. The fix is to use the proper #ifdef symbol when compiling with a given performance schema instrumentation: - HAVE_PSI_STATEMENT_INTERFACE for the statement instrumentation - HAVE_PSI_IDLE_INTERFACE for the idle instrumentation 	fe7cda84857d9179da8d425b55dff07125a5ebcc
----------------------------
ndb - lqh++ - this patch takes parts of mikaels patch to allow more then 4 lqh threads. Namely adds infrastructure to make redo-log-parts configurable 	c4c7e20cfc45dc59bc089fdf96df9856fa69b088
----------------------------
WL#5881 - remove MCP_NDB_BUILD_INTEGRATION patch from cmake/configure.pl - remove small changes in BUILD/ 	332002d9d2e1a1001b17f7b54041bc18f0610dcc
----------------------------
BUG#12929028: mysql_plugin : the --mysqld option is required, but not used This patch corrects a defect whereby the --mysqld, --my-print-defaults, and --plugin-ini were required. These options are not required and the code has been fixed accordingly. 	c54d88c3364f552235f5393e96a93e83cbf6d64c
----------------------------
BUG#11760927: 53375: RBR + NO PK => HIGH LOAD ON SLAVE (TABLE SCAN/CPU) => SLAVE FAILURE When a statement containing a large amount of ROWs to be applied on the slave, and the slave's table does not contain a PK, it can take a considerable amount of time to find and change all the rows that are to be changed. The proper slave enhancement will be implemented in WL 5597. However, in this bug we are making it clear to the user what the problem is, by printing a message to the error log if the execution time, for a given statement in RBR, takes more than LONG_FIND_ROW_THRESHOLD (set to 60 seconds). This shall help the DBA to diagnose what's happening when facing a slave server that is quiet for no apparent reason... The note is only printed to the error log if log_warnings is set to be greater than 1. 	595a007d4e570f935ffc396aeb62480c2f414741
----------------------------
BUG#11748731 - 37248: SOME 'BIG' TESTS FAILING ON 6.0 : A change has been made in the sql/sql_table.cc file to include debug_sync. 	7ca801fedf06421c1e7fe1fdf2a9d4f1955f121b
----------------------------
BUG#11761014 - 53466: END_CONNECTION() SHOULD REFERENCE GLOBAL_SYSTEM_VARIABLES.LOG_WARNINGS Post-push fix: Update result file for 32 bit version og log_warnings test. 	0e4a9d105d337a663acf71707dc0d9751b31c08e
----------------------------
Bug#12578908: SELECT SQL_BUFFER_RESULT OUTPUTS TOO MANY ROWS WHEN GROUP IS CONSTANT For all but simple grouped queries, temporary tables are used to resolve grouping. In these cases, the list of grouping fields is stored in the temporary table and grouping is resolved there (e.g. by adding a unique constraint on the involved fields). Because of this, grouping is not done when inserting rows into the temporary table. In the case where a group clause may be optimized away, grouping does not have to be resolved using a temporary table. However, if a temporary table is explicitly requested (e.g. because the SQL_BUFFER_RESULT hint is used, or the statement is INSERT...SELECT), a temporary table is used anyway. In this case, the temporary table is created with an empty group list (because the group clause was optimized away) and it will therefore not create groups. At the same time, make_simple_join() assumes that since a temporary table is used, grouping will be taken care of and sets JOIN::group to false. The fix is in make_simple_join(), and is to not set JOIN::group to false in the unlikely event that a temporary table is used for a query where the group clause was optimized away. With this change, end_{send|write}_group() is used when reading from the temporary table. This is the same function as is used when a temporary table is not explicitly requested. 	30567b20256e40a019359d7dd1c0255368cb9516
----------------------------
ndb - add optimizer_search_depth=10 to see if this helps daily RQG not to timeout 	ac2121835f2128cf46e2625231df9ca28e7f7129
----------------------------
Bug#11748731 - 37248: SOME 'BIG' TESTS FAILING ON 6.0: alter_treable-big.test was failing due to the use of RAND() function which is no more replication safe. This has been modified using static values. Also, 'sleep' has been replaced using 'debug_sync' and the execution time of the test has been reduced significantly. This test is now taken out of the disabled.def file and is being enabled. 	fb2323c082b50bccbb7ef8a45a9826dc0dfc65d6
----------------------------
"BUG#11761014 - 53466: END_CONNECTION() SHOULD REFERENCE GLOBAL_SYSTEM_VARIABLES.LOG_WARNINGS BACKGROUND: end_connection prints out messages like this, depending on *session* log_warnings value: Aborted connection 2 to db: 'unconnected' user: 'root' host: '' (Got timeout reading communication packets). This is wrong because it allows a minimally privileged user to write copious amounts of errors to the .err file, unless he is restricted by the number of MAX_CONNECTIONS_PER_HOUR in his user account. FIX: ""Aborted connection..."" messages are now printed based on the *global* log_warnings value. Since this was the only real remaining use of the session value of log_warnings, the log_warnings system variable has now been made to a global only variable. This is a change of behavior and must be reflected in the documentation. "	243bbc947d6d125bdd4a19e0358fe4014d25ee32
----------------------------
Fix for bug#13355055: CLUSTER INTERNALS FAILS TO TERMINATE BATCH AT MAX 'BATCHBYTESIZE' We have observed SCANREQs with a surprisingly small 'BatchSize' argument as part of debugging and tuning SPJ. Where we expected 'BatchSize=64' (Default) we have observed values around ~10. This directly translated into suboptimal performance. When debugging this, we found the root cause in NdbRecord::calculate_batch_size(), which returns the batchsize (#rows) and  arguments for the SCANREQ signal. It contained the following questionable logic: 1) Calculate the worst case record length based on that *all columns* are selected from a table, and all varchar() columns being filled to their *max limit*. 2) If that record length is such that 'batchsize * recLength' > , reduce batchsize such that batchbytesize would never be exceeded. This effectively put ::calculate_batch_size() in control of the batchbytesize logic. The negative impact if that logic was that 'batchsize' could be severely restricted in cases where we could have delivered a lot more rows in that batch. However, there are logic in LQH+TUP which are intended to keep the delivered batches withing the batchsize limits. This is a much better place to control this as LQH & TUP knows the exact size of the TRANSID_AI payload being delivered, taking actual varchar length and only the selected columns into acount. Debugging that logic, it turned out that it contained bugs in how the produced batchsize was counted: Actually a mixup between whether the 'length' was in specified in number of bytes or Uint32. - So the above questionable ::calculate_batch_size() logic seems to have been invented only to circumvent this bug...... Fixing that bug allowed us to now leave the entire batch control to the LQH block. - ::calculate_batch_size could then be significantly simplified. - The specified BatchSize & BatchByteSize arguments could be used as specified directly as args in SCANREQ signals. - Will likely give better performance (larger effective batches) when scanning a table with 'max record length > BatchByteSize / BatchSize' (~500 bytes with default config) Fix number of bytes/Uint32 mixup in how m_curr_batch_size_bytes is counted ****** Fix number of bytes/Uint32 mixup in how the SPJ adaptive parallelism count m_totalBytes ****** Simplify ::calculate_batch_size() as LQH now correctly will stay within the specified batch_size rows/bytes limits ****** Remove NdbRecord::m_max_transid_ai_bytes which is now obsolete ****** Remove unused args from NdbRecord::calculate_batch_size() ****** Fix SPJs adaptive paralellism logic to also handle batchsize termination due to BatchByteSize being exhausted 	49a6bec8ee517f57defdf0946650873c1fac16a7
----------------------------
"The test case rewrite_general_log is executed in both embedded and non-embedded mode thus causing result mismatches after the WL#4143. To fix this, we disable warning messages when ""CHANGE MASTER TO"" is executed. "	15091de31fa0274fe87c4ee5d87d56a7bb2ca9ea
----------------------------
WL#5461 PERFORMANCE_SCHEMA MY.CNF Default Setup - Replaced strnicmp() with strncmp() - Comment change 	1e5bccac2ca8d6c6efeef97ed46163a62cc2a352
----------------------------
Merge: ac617bf 69df51a WL#5461 PERFORMANCE_SCHEMA MY.CNF Default Setup - Merged with mysql-trunk - Updated implementation 	a2d5c1047b2797e423d0e0e201489284032b5fbe
----------------------------
"Fix for Bug#13357462 - ""OPTIMIZER TRACE BROKE THE INFORMATION SCHEMA, CAUSES MYSQLADMIN CRASH""; same cause/fix as bug 35997: define a dummy OPTIMIZER_TRACE table when the OPTIMIZER_TRACE preprocessor symbol is not defined. Otherwise enum_schema_tables and schema_tables[] are not in sync. "	6373781d775b570f89368480aba7cd5494689bc2
----------------------------
WL#5825 Using C++ Standard Library with MySQL code Post-push fix: scripts/mysql_config* must distinguish between cflags and cxxflags. 	5ae60850cbafc9996e16700d953ca1429feaac5d
----------------------------
Bug#11748783 37359: FILESORT CAN BE MORE EFFICIENT Post-push fix: sort_buffer_size depends on platform (32 vs 64 bit) 	0d5a40d9a9912a9abe05d6bc365c12ff3d329f08
----------------------------
Fixed several issues affecting the embedded build. 1) in psi.h, do not compile with the performance schema instrumentation, for the embedded build. 2) in mysql_socket.h, cleanup compiler warnings when building without the socket instrumentation 3) in mysqld.cc, remove un needed code for embedded builds 4) in sql_class.h, remove un needed instrumentation state, when compiling for embedded 	fc85e817f6aca7b73fce60e9fdc46f6fa0e1baf7
----------------------------
Fix for memory leaks in Record and in Config_v1 configuration reader. 	948eb2e1115e3881c6182f17afee1001e32ae3e7
----------------------------
WL#5461 PERFORMANCE_SCHEMA MY.CNF Default Setup Second phase of prototype with support for the following configuration option: pfs_instrument = '<instrument name> = <ON|TRUE|1|ENABLED|OFF|FALSE|0|DISABLED|COUNTED>' where ON = TRUE = 1 = ENABLED and OFF = FALSE = 0 = DISABLED and where ON  = timed, counted OFF = not timed, not counted COUNTED = not timed, counted This option is read-only. The effect of the option can only be seen in the SETUP_INSTRUMENTS table. It is not visible via SHOW GLOBAL VARIABLES. 	ac617bfb44672566315344cba47c177ba9c25664
----------------------------
Bug#13334470 - SLAVE_START_WORKERS() USES BOGUS VALUE INSTEAD OF --SLAVE_PARALLEL_WORKERS OPT The value of number of workers appeared to be not set when MTS starts automatically at server bootstrap. Fixed with caching of the global opt_mts_slave_parallel_workers into rli->opt_slave_parallel_workers similarly to the manual start slave branch. 	3cea7430ad8038a94f93b67e600fdd02e39cfea8
----------------------------
WL#5461 PERFORMANCE_SCHEMA MY.CNF Default Setup Line endings, comment change 	03a8bc2f50c8af46efa8a4d726fd3cc4f2d639a4
----------------------------
WL#5461 PERFORMANCE_SCHEMA MY.CNF Default Setup Preliminary implementation for SETUP_CONSUMERS defaults. 	9f853a50123e2ee429d11b6e37b8edeb4694b01f
----------------------------
"Bug#12981100 PERFORMANCE_SCHEMA NET IO IDLE AND RECV EVENTS NEST WITHIN THE WRONG STATEMENT Post push cleanup, to fix a remaining assert. Instrument incomplete statements as ""statement/com/error"", when a full network packet can not be read. "	8a2296829f8263944f83cb222fdadc3ae5564a46
----------------------------
Bug#12407753: Time to compare a row is missing in cost calculation of semi-join Stage 3: Fix the bug(s) What has been done: - Adjusted costs for handling temporary tables based on benchmarks. - Added cost of evaluating a row for all semi-join strategies. - Semi-join FirstMatch: Intermediate cost calculation assumed join buffering was always possible, final cost calculation assumed that join buffering could never be used. The truth: Join buffering can be used if semi-join nest contains only one table. - Semi-join LooseScan: Intermediate cost calculation assumed join buffering was possible for outer tables (correct), final cost calculation assumed that join buffering could never be used. Join buffering for outer tables has been enabled. - Semi-join MaterializeLookup: Join buffering was calculated into the cost for materialization, but later turned off. Join buffering for this strategy has been enabled. - Semi-join MaterializeScan: Join buffering was calculated into the cost for materialization, but later turned off. Join buffering for this strategy has been enabled. Made sure that join buffering for semi-join materialization is not linked with an immediately following join buffer. - Semi-join DuplicateWeedout: Prefix cost was erroneously picked from positions[first_tab] instead of positions[first_tab-1]. See also bug#11757320. - Prefix cost was sometimes picked erroneously, when the previous table combination was also a semi-join. mysql-test/r/derived.result Recorded new result file. mysql-test/r/group_by.result Semi-join strategy changed from FirstMatch to Materialize. Occurs because materialization strategy has fewer compares than FM. mysql-test/r/innodb_explain_non_select_all.result Handler calls are reduced with new plan. mysql-test/r/join_cache_bka.result mysql-test/r/join_cache_bka_nixbnl.result mysql-test/r/join_cache_bkaunique.result mysql-test/r/join_cache_bnl.result mysql-test/r/join_cache_nojb.result Strategy change from DupsWeedout to MaterializeScan seems OK. mysql-test/r/myisam_explain_non_select_all.result Two tables swapped in FirstMatch strategy. Number of handler calls reduced. Change seems reasonable. mysql-test/r/subquery_all.result mysql-test/r/subquery_all_bka.result Handler calls (Handler_read_rnd_next) have increased, but there is also a decrease for Handler_read_key and Handler_read_next. mysql-test/r/subquery_mat_all.result Strategy changes from FirstMatch to Materialize seem OK. Strategy change from Materialize to FirstMatch seems OK. mysql-test/r/subquery_sj_all.result mysql-test/r/subquery_sj_all_bka.result mysql-test/r/subquery_sj_all_bkaunique.result Strategy changes from Materialize to FirstMatch seem OK. Caused by adding cost of materialization table creation. Strategy changes from DupsWeedout to Materialize(Scan) seems OK. Caused because materialization table is less costly than weedout table. Strategy changes from DupsWeedout to FirstMatch seem OK. Caused because added cost for DupsWeedout. Strategy change from FirstMatch to Materialize is correct. Strategy changes from LooseScan/BNL to Materialize seem OK. mysql-test/r/subquery_sj_all_bka_nixbnl.result Strategy changes from Materialize to FirstMatch seem OK. Strategy changes from DupsWeedout to MaterializeScan seem OK. Strategy changes from DupsWeedout to FirstMatch seem OK. Strategy changes from FirstMatch to Materialize seem OK. mysql-test/r/subquery_sj_dupsweed.result mysql-test/r/subquery_sj_dupsweed_bkaunique.result Table plan order change for DupsWeed seems OK, BNL for last table decreases number of rows read. mysql-test/r/subquery_sj_dupsweed_bka.result mysql-test/r/subquery_sj_dupsweed_bka_nixbnl.result Changes are OK. mysql-test/r/subquery_sj_firstmatch.result mysql-test/r/subquery_sj_firstmatch_bka.result mysql-test/r/subquery_sj_firstmatch_bka_nixbnl.result mysql-test/r/subquery_sj_firstmatch_bkaunique.result Table order changes seems OK, number of rows scanned is reduced. Strategy changes from DupsWeedout to FirstMatch seem OK. mysql-test/r/subquery_sj_innodb_all.result mysql-test/r/subquery_sj_innodb_all_bkaunique.result Strategy changes from DupsWeedout to MaterializeScan seem OK. mysql-test/r/subquery_sj_loosescan.result mysql-test/r/subquery_sj_loosescan_bka.result mysql-test/r/subquery_sj_loosescan_bka_nixbnl.result mysql-test/r/subquery_sj_loosescan_bkaunique.result Strategy changes from LooseScan to DupsWeedout seem OK. mysql-test/r/subquery_sj_mat.result mysql-test/r/subquery_sj_mat_bka.result mysql-test/r/subquery_sj_mat_bka_nixbnl.result mysql-test/r/subquery_sj_mat_bkaunique.result Strategy changes from DupsWeedout to Materialize seem OK. mysql-test/suite/opt_trace/r/bugs_no_prot_all.result mysql-test/suite/opt_trace/r/bugs_ps_prot_all.result mysql-test/suite/opt_trace/r/general_no_prot_all.result mysql-test/suite/opt_trace/r/general_ps_prot_all.result Some changes, mostly because of changed costs. mysql-test/t/derived.test Plan changed, needed to force use of DuplicateWeedout sql/sql_const.h Adjusted cost factors for creation of temporary tables based on actual benchmarks. Adjusted costs for temporary table row operations based on benchmark. Actually, lookup and write operations are equally costly. sql/sql_select.cc optimize_semijoin_nests(): Added cost for creation of temporary table. Adjusted size of materialized table because of duplicate elimination. get_best_combination(): Set JOIN_TAB reference in best_positions to NULL when creating final JOIN_TAB array. Forgotten refactoring. setup_join_buffering(): Sets up join buffering based on corrected decisions for all semi-join strategies. Prevent linking with previous join cache when previous operation is Materialization. semijoin_fm_ls_access_paths() will now calculate new access paths and cost for FirstMatch and LooseScan semi-join strategies, based on corrected join buffering choices. ROW_EVALUATE_COST is added to the cost calculation. semijoin_mat_scan_access_paths(): ROW_EVALUATE_COST is added to the cost calculation. semijoin_dupsweedout_access_paths(): ROW_EVALUATE_COST is added to the cost calculation. Prefix cost is adjusted, see bug#11757320. advance_sj_state(): Best semi-join cost is written back to prefix_cost and prefix_record_count. These are actually the same values as the output arguments current_cost and current_rowcount, only with a different representation. They must be adjusted because they are needed when looking for prefix cost inside the semijoin_*_access_paths() functions. 	1aabaf0278442fb918d039644ea0c3d20d934dde
----------------------------
"Bug#12981100 PERFORMANCE_SCHEMA NET IO IDLE AND RECV EVENTS NEST WITHIN THE WRONG STATEMENT This bug is caused by the lack of integration between: - the IDLE instrumentation - the SOCKET instrumentation - the STATEMENT instrumentation - the STAGE instrumentation in the server. While each instrumentation taken individually works, the overall result is events that do not properly relate to each others. The fix consist of several parts. 1) Define a network call back interface for the NET structure, so that the network layer can notify events when a packet header is seen. This part is critical to isolate all the SQL layer performance schema related instrumentation from the NET code. 2) Use this call back interface internally in mysqld, to call the IDLE / SOCKET / STATEMENT / STAGE instrumentation in a coherent way, respecting the logical order or events. 3) IDLE instrumentation: - IDLE events are generated with a NULL NESTING_EVENT_ID parent - HAVE_PSI_IDLE_INTERFACE was missing and has been added, to facilitate building without the IDLE instrumentation. 4) STATEMENT instrumentation: Statements are now created (MYSQL_START_STATEMENT) much sooner, when a new packet header is seen. As a result, a new statement instrument ""statement/com/"", has been defined to represent a statement just started. Also, in release builds only, a spurious ""statement/sql/"" statement existed, due to a bug related to SHOW PROCEDURE CODE and SHOW FUNCTION CODE, for which no statement name was defined in release builds. This has been fixed. 4) SOCKET instrumentation: no changes in the code itself. SOCKET events are now properly recorded as childrens of a statement, due to the reordering of MYSQL_START_STATEMENT. 5) STAGES instrumentation no changes in the code itself. The first stage (""stage/sql/init"") is now started right after a statement starts. 6) Existing test cases tests events_aggregates* were missing instrumentation for ""statement/com/Query"", so that SQL statements that were intended to be recorded were not. This has been fixed in the tests. Tests outputs have been adjusted, as there is a new statement class. A new test, nesting.test, shows precise events dependencies between all events. "	96f9b312ae59de910c424a8d5f305b00b621d5bb
----------------------------
ndb test - fix suppression in  ndb_share.test and remove the global suppression - the suppression is only active on the mysqld where it's inserted into the suppression table, thus it need to be done only for mysqld3 and mysqld4 which are run without --log-bin in this setup 	5d70ed881f88a588cb2bea02d4a116d6fcbaa5ba
----------------------------
update mysql-test/suite/ndb/r/ndb_config.result to match configuration 	2aa1c0690dd58d432eb946a044c6c0028421021b
----------------------------
Default value for sort_buffer_size changed from 2M to 256K 	549db432645d68f5a193d8d9a751f939d6be06ff
----------------------------
Bug#11763573 - 56299: MUTEX DEADLOCK WITH COM_BINLOG_DUMP, BINLOG PURGE, AND PROCESSLIST/KILL The bug case is similar to one fixed earlier bug_49536. Deadlock involving LOCK_log appears to be possible because the purge running thread is holding LOCK_log whereas there is no sense of doing that and which fact was exploited by the earlier bug fixes. Fixed with small reengineering of rotate_and_purge(), adding two new methods and setting up a policy to execute those instead of the former rotate_and_purge(RP_LOCK_LOG_IS_ALREADY_LOCKED). The policy for using rotate(), purge() is that if the caller acquires LOCK_log itself, it should call rotate(), release the mutex and run purge(). Side effect of this patch is refining error message of bug@11747416 to print the whole path. 	a7127418a78fea97d93d8adb9d3c3c124b8e3720
----------------------------
Bug#13113222 RQG_SIGNAL_RESIGNAL FAILED WITH ASSERTION. The triggered assert checks that a matching condition is found inside the diagnostics area when a handler is activated. It was triggered in this case if the diagnostics area was full when the condition was reported (e.g. the area already contains max_error_count conditions). This meant that the diagnostics area did not contain a matching condition when the handler code tried to look for it. This was a regression introduced by WL#5986. This patch fixes the problem by temporarily making a condition in such cases so it can be handled properly. Test case added to sp-error.test. 	f296cd1942923cc31cebdef6541a1a99d2356b0e
----------------------------
ndb - further cmake (install) fixes - have_clusterj_inc - adopt to 5.5 install layout (?) - add shared lib version - install clusterj jars - move NDB_GET_CONFIG_VALUE into own file (used from several locations) 	b9be15c31ca63e0bfc501178818f7acac5f3f519
----------------------------
"Merge: 07351d0 4552645 Merge of fix for bug #13116518 ""OPEN_TABLES() SHOULD NOT ALLOCATE AND FREE NEW_FRM_MEM WITHOUT NEEDING TO"". "	51166b57954bfc9535022715767ae92d4072319b
----------------------------
"Fix for bug #13116518 - ""OPEN_TABLES() SHOULD NOT ALLOCATE AND FREE NEW_FRM_MEM WITHOUT NEEDING TO"". During the process of opening tables for a statement, we allocated memory which was used only during view loading even in cases when the statement didn't use any views. Such an unnecessary allocation (and corresponding freeing) might have caused significant performance overhead in some workloads. For example, it caused up to 15% slowdown in a simple stored routine calculating Fibonacci's numbers. This memory was pre-allocated as part of ""new_frm_mem"" MEM_ROOT initialization at the beginning of open_tables(). This patch addresses this issue by turning off memory pre-allocation during initialization for this MEM_ROOT. Now, memory on this root will be allocated only at the point when the first .FRM for a view is opened. The patch doesn't contain a test case since it is hard to test the performance improvements or the absence of memory allocation in our test framework. "	45526450044c2f5e82138f9ca778d1fcf8ea734b
----------------------------
BUG#11757032 - 49030: OPTIMIZE TABLE BREAKS MYISAM TABLE WHEN USING MYISAM_USE_MMAP ON WINDOWS When OPTIMIZE/REPAIR TABLE is switching to new data file, old data file is removed while memory mapping is still active. With 5.1 implementation of nt_share_delete() it is not permitted to remove mmaped file. This fix disables memory mapping for mi_repair() operations. 	3e0491c75802d0d0fcef6b7dc6fc242e456ece87
----------------------------
Misc merge cleanup for the socket instrumentation. 	99f4f11f42c18e4baa9ded045aa62bf02daf23b0
----------------------------
"Bug#13102538 : COMPILE ERROR ON SOLARIS WHEN COMPILING WITH LIBEDIT Libedit won't build on platforms that do not provide ""sys/cdefs.h"". Removed the inclusion of cdefs.h from all files other that sys.h, which includes this file only when the header is found while configuring. "	96abfdfd22f5cadd73de376e7fa5aa75ce5176da
----------------------------
ndb - readd the MCP hacks for cmake/configure.pl 	45bad56992c9a498378d2fc4a2e962d76be5feaa
----------------------------
ndb - remove MCP hacks from cmake/configure.pl - revert changes to BUILD/compile-ndb-autotest and BUILD/compile-pentium-debug-max-no-ndb 	8f4e5ffd15aa1c862a64a3f5a71c9256bcd7688d
----------------------------
ndb - fail the script if srcdir is already configured 	473e42d6164c2696f1fd8b621343850f10d0dca9
----------------------------
"ndb - rewrite compile-cluster to not depend on cmake/configure.pl - add --just-print and --just-configure - fix problem with ""make"" in out of source build - Remove old CMakeCache.txt before configuring "	018c78d01c298b4b3d166e757230911435694b4f
----------------------------
BUG#12402875 - BUG#60902: MYSQLDUMP DOES NOT DUMP THE REPLICATION *_INFO TABLES When WL#2775 was developed we decided to follow the pattern used by log tables where direct updates are forbidden. The idea was to later on provide users with the necessary commands to execute maintenance tasks against the replication tables such as changing the engine in use or dumping data. However, after pushing the WL#2775, we have realized that this would unnecessarily duplicate code, i.e. functionality. So, in this patch, we revert the code that follows the behavior adopted by log tables and allow any sort of statement to be executed against the replication tables. This change causes a side effect that it is worth noticing. It has made the relay-log-info file or not-transactional tables being updated optimistically prior to committing an user transaction that is being executed. This may lead to data loss if a crash happens as the user transaction can be rolled back but it won't be re-applied automatically upon restart. This patch also makes sure that the server fails gracefully if some unexpected changes are executed against the tables. For example, if some columns are dropped. 	86f0118fefcaf5924597c8ca85f70b15003d247b
----------------------------
WL#5908 PERFORMANCE_SCHEMA File IO Summary Extensions Updated mysql-test result files per schema changes 	9265e450e9bd2c0649528f4da61b5711981edbc8
----------------------------
WL#5908 PERFORMANCE_SCHEMA File IO Summary Extensions Changes per code review 	7ec6d8d6693945f8df2ee93053d6e8440d1bce06
----------------------------
Merge: b36a465 b2be57f WL#5908 PERFORMANCE_SCHEMA File IO Summary Extensions - Downmerge from mysql-trunk 	4671c9e08573a37a9f3b4a44199e93bbe4af2a4f
----------------------------
Bug#11750518 41090: ORDER BY TRUNCATES GROUP_CONCAT RESULT When temporary tables is used for result sorting result field for gconcat function is created using group_concat_max_len size. It leads to result truncation when character_set_results is multi-byte character set due to insufficient tmp table field size. The fix is to increase temporary table field size for gconcat. Method make_string_field() is overloaded for Item_func_group_concat class and uses max_characters * collation.collation->mbmaxlen size for result field. max_characters is maximum number of characters what can fit into max_length size. 	b195e6f9433d7d293faadd834af6edee79133278
----------------------------
Add --build and --no-build switch to allow for only configuring 	cd48dd850841d81cfe94d13b4ed1ae2ada168d58
----------------------------
BUG#11746146 - 23894: MYSQLBINLOG OUTPUTS SET INSERT_ID=N STATEMENTS UNNECESARILY WITH --DATABA Description: mysqlbinlog --database= <database_name>  <binlog_file_name> will output all the SET INSERT_ID= n assignments in the binary log even if the database bar isn't mentioned in the binary log. Similar is the case with two other types of events namely RAND_EVENTS and USER_VAR_EVENT events. Fix: The problem was fixed by using this algorithm - * each time we get an INTVAR, USER_VAR or a RANDOM event we push the event in a dynamic array. * when we get its parent query event, we check whether we need to process the query event > if we need to skip the event we skip the query event and reset the dynamic array and proceed. > if we need to process the event we pop the events that were pushed in the dynamic array, and process them followed by processing the parent query event, and finally reset the dynamic_array. 	ae0eb6d2faf6ca1c2d6029313465f6b5e09519ca
----------------------------
"BUG#11765553 - 58534: MYSQL_INSTALL_DB PRINTS INCOMPLETE OPTION NAME BACKGROUND: ""--skip-grant"" is an incomplete option name. It should be ""--skip-grant-tables"" in mysql_install_db.sh.Besides,full option name should be displayed, not some arbitrary shorthand. FIX: One change has been made in file mysql_install_db.sh at line 408 where ""shell> $mysqld --skip-grant &"" is replaced by ""shell> $mysqld --skip-grant-tables &"" to complete the option name. "	db82f53cb459d88feeae4e38fec7f3a89a4da110
----------------------------
ndb - use default_storage_engine instead of storage_engine 	2926e1099f9da66ac602884e0859c6dcd0655732
----------------------------
"Merge: 6f0574d 4e21719 Backmerge the changes of the 5.6.3 build into main ""trunk"". This brings the following changesets: Marc Alff 2011-09-26 BUG#12993572 - P_S STANDBY MODE CAUSES PERFORMANCE DROP Guilhem Bichot 2011-09-23 Fix for Bug#13009176 ""USE DATABASE BREAKS OPTIMIZER TRACE IF THERE IS A VIEW IN THE SCHEMA"" Luis Soares 2011-09-22 BUG#12987771: REPLICATED STATEMENTS ARE DUPLICATED Olav Sandstaa 2011-09-20 Fix for Bug#12976163 ""CRASH IN INDEX CONDITION PUSHDOWN CODE AGAINST Evgeny Potemkin 2011-09-19 Bug#12977203: SERVER CRASH ON A DERIVED TABLE WITH QUERY CACHE ENABLED Sunny Bains 2011-09-17 Bug 12982772 - SERVER DOES NOT START WITH INNODB_UNDO_TABLESPACES (SYSTEM ERROR 32 FILE IN USE) Evgeny Potemkin 2011-09-15 Bug#12910006: MRR initialization on a derived table caused crash. Georgi Kodinov 2011-09-13 Bug #12925024: MYSQLD_SAFE IGNORES THE VALUE OF PLUGIN_DIR FROM MY.CNF Gleb Shchepa 2011-09-09 Bug #12949629: CLIENT LOSES CONNECTION AFTER EXECUTING Andrei Elkin 2011-09-09 Bug#12947451 - MTS: ERROR LOG GETS FLOODED WITH SYNCHRONIZATION-RELATED MESSAGES (NOTES) Oystein Grovlen 2011-09-07 WL#5285 Guilhem Bichot 2011-08-31 1) fix for BUG#12905521 - ASSERT IN OPT_TRACE_STMT::SYNTAX_ERROR ON SELECT DISTINCT/MIN/JOIN/SUBQ QUERY Jonathan Perkin 2011-08-30 Bump milestone. Joerg Bruehe 2011-08-30 [merge] Merge a RPM packaging bugfix into the 5.6.3 release clone. hery.ramilison@or... 2011-08-29 Applying patch from vasil.dimov@oracle.com for OS X build failure Conflicts: Text conflict in VERSION Text conflict in mysql-test/include/icp_tests.inc Text conflict in mysql-test/r/derived.result Text conflict in mysql-test/r/innodb_icp.result Text conflict in mysql-test/r/innodb_icp_none.result Contents conflict in mysql-test/r/join_cache_bka_nobnl.result Contents conflict in mysql-test/r/join_nested_bka_nobnl.result Contents conflict in mysql-test/r/join_outer_bka_nobnl.result Text conflict in mysql-test/r/myisam_icp.result Text conflict in mysql-test/r/myisam_icp_none.result Contents conflict in mysql-test/r/select_all_bka_nobnl.result Contents conflict in mysql-test/r/select_icp_mrr_bka_nobnl.result Contents conflict in mysql-test/r/select_none_bka_nobnl.result Contents conflict in mysql-test/r/subquery_all_bka_nobnl.result Contents conflict in mysql-test/r/subquery_nomat_nosj_bka_nobnl.result Contents conflict in mysql-test/r/subquery_none_bka_nobnl.result Contents conflict in mysql-test/r/subquery_sj_all_bka_nobnl.result Contents conflict in mysql-test/r/subquery_sj_dupsweed_bka_nobnl.result Contents conflict in mysql-test/r/subquery_sj_firstmatch_bka_nobnl.result Contents conflict in mysql-test/r/subquery_sj_innodb_all_bka_nobnl.result Contents conflict in mysql-test/r/subquery_sj_innodb_none_bka_nobnl.result Contents conflict in mysql-test/r/subquery_sj_loosescan_bka_nobnl.result Contents conflict in mysql-test/r/subquery_sj_mat_bka_nobnl.result Contents conflict in mysql-test/r/subquery_sj_none_bka_nobnl.result Text conflict in mysql-test/suite/opt_trace/r/general_no_prot_all.result Text conflict in mysql-test/suite/opt_trace/r/general_no_prot_none.result Text conflict in mysql-test/suite/opt_trace/r/general_ps_prot_all.result Text conflict in mysql-test/suite/opt_trace/r/general_ps_prot_none.result Text conflict in mysql-test/t/derived.test Contents conflict in mysql-test/t/join_cache_bka_nobnl.test Contents conflict in mysql-test/t/join_nested_bka_nobnl.test Contents conflict in mysql-test/t/join_outer_bka_nobnl.test Contents conflict in mysql-test/t/select_all_bka_nobnl.test Contents conflict in mysql-test/t/select_icp_mrr_bka_nobnl.test Contents conflict in mysql-test/t/select_none_bka_nobnl.test Contents conflict in mysql-test/t/subquery_all_bka_nobnl.test Contents conflict in mysql-test/t/subquery_nomat_nosj_bka_nobnl.test Contents conflict in mysql-test/t/subquery_none_bka_nobnl.test Contents conflict in mysql-test/t/subquery_sj_all_bka_nobnl.test Contents conflict in mysql-test/t/subquery_sj_dupsweed_bka_nobnl.test Contents conflict in mysql-test/t/subquery_sj_firstmatch_bka_nobnl.test Contents conflict in mysql-test/t/subquery_sj_innodb_all_bka_nobnl.test Contents conflict in mysql-test/t/subquery_sj_innodb_none_bka_nobnl.test Contents conflict in mysql-test/t/subquery_sj_loosescan_bka_nobnl.test Contents conflict in mysql-test/t/subquery_sj_mat_bka_nobnl.test Contents conflict in mysql-test/t/subquery_sj_none_bka_nobnl.test Text conflict in sql/rpl_rli_pdb.cc 47 conflicts encountered. "	de224bbdc1ea11593a8473eccc34bf855f039880
----------------------------
Merge: b495935 9c68ca6 Bug #12844282 62075: MTR TESTS SHOULD NOT HAVE TO SAVE & RESET INNODB_FILE_FORMAT_CHECK This is a redo for 5.5 Added 'innodb_file_format_max' as variable to ignore change to. Tests that had to restore this amended Two tests assumed it to be Antelope, make sure these run on a freshly started server 	3d2eff9715210d991b5924042be36a52dfc1fe3d
----------------------------
ndb - remove the setting of NDB_WITHOUT_SERVER_ID_BITS based on MySQL version (unifying with trunk-cluster) - it will be set in storage/ndb/CMakelists.txt if server does not have the feature 	2921fd649ebcf9db71bdb2dba1dc8f38863ac9b3
----------------------------
Bug#12664445: Added test cases for the variables: -INNODB_ANALYZE_IS_PERSISTENT -INNODB_MONITOR_DISABLE -INNODB_MONITOR_ENABLE -INNODB_MONITOR_RESET -INNODB_MONITOR_RESET_ALL -INNODB_PRINT_ALL_DEADLOCKS -INNODB_STATS_PERSISTENT_SAMPLE_PAGES -INNODB_STATS_TRANSIENT_SAMPLE_PAGES -INNODB_SYNC_ARRAY_SIZE Now the sys_vars.all_vars result file does not have any variables listed in it. 	efe43b515a721ed5c189c690bda35f2e3fa559a6
----------------------------
"Fix bug#11886309: RPM UPGRADE OF MYSQL ADVANCED GPL TO MYSQL SERVER ADVANCED DOES NOT WORK Change the RPM spec file so that each RPM ""obsoletes"" the corresponding RPMs of all (other) configurations, so a ""server"" RPM of any configuration can replace the ""server"" RPM of any other configuration on a ""rpm -U"". "	961f0fd0fc0b29f8519661ba75f78a989886710c
----------------------------
ndb - switch from using storage_engine to default_storage_engine since storage_engine variable is due to be removed 	f490cf6140a3f7a1cd71b07c63ecacc8075f27ba
----------------------------
Bug#11759044 - 51325: DROPPING AN EMPTY INNODB TABLE TAKES A LONG TIME WITH LARGE BUFFER POOL rb://767 approved by: Marko When dropping a table (with an .ibd file i.e.: with innodb_file_per_table set) we scan entire LRU to invalidate pages from that table. This can be painful in case of large buffer pools as we hold the buf_pool->mutex for the scan. Note that gravity of the problem does not depend on the size of the table. Even with an empty table but a large and filled up buffer pool we'll end up scanning a very long LRU list. The fix is to scan flush_list and just remove the blocks belonging to the table from the flush_list, marking them as non-dirty. The blocks are left in the LRU list for eventual eviction due to aging. The flush_list is typically much smaller than the LRU list but for cases where it is very long we have the solution of releasing the buf_pool->mutex after scanning 1K pages. buf_page_[set|unset]_sticky(): Use new IO-state BUF_IO_PIN to ensure that a block stays in the flush_list and LRU list when we release buf_pool->mutex. Previously we have been abusing BUF_IO_READ to achieve this. 	2563f7103a246bb530dfd39d20015d69ba9fdf7f
----------------------------
ndb - more fixes for empty hostname 	8b2f083ffdfa257a85ac9a3793cfe6ef153b056d
----------------------------
"ndb - exclude generated header files ndb_version.h, ndb_types.h and ndb_config.h from ""make dist"" "	55f5fdc1b6c370877bfb982bc955cb8345b733f9
----------------------------
"BUG#11747866:REPLICATE-REWRITE-DB DOESN'T WORK WITH SINGLE CHARACTER DATABASE NAMES Problem: replicate-rewrite-db option doesnot work with single character database names. The last character was being trimmed from the ""from"" database name. Background: Since the loop handling the option, has to handle invalid arguments for the option,while stripping the whitespaces, it was stripping one character from the ""from"" database name. In case where there was only one character, this threw an error as ""empty from database name"". Fix. Revamped the loop handling this option. Made sure that the whitespaces are suitably trimmed and the correct ""to"" and ""from"" databases names are passed to the function handling the replicate_rewrite_db functionality. "	0fc3303193992709fd9e3ee0937698bba44a9c43
----------------------------
Online reconfiguration. This revision compiles and passes the test suite on my laptop. 	d1118dba84807632f2752742a42debf49e71c2d4
----------------------------
ndb/memcache Configuration -- small fixes 	0c459f5a781a4752192b35c8066e38204729c8c2
----------------------------
Changes to online reconfiguration in S Scheduler. Online reconfig is actually thread-safe now, protected by a read/write lock. Online reconfig in the scheduler now *only* udpates the Configuration pointer, the generation number, and the list of QueryPlans. So it is not currently possible to add a cluster or to grow the pool of Ndb objects using online reconfig. This change also adapts both schedulers to use ConnQueryPlanSet. 	baedba759c54ea57941d6e9b189787bbd8463dad
----------------------------
memcache: Rather than keeping an Ndb object (and eventually leaking it), Configuration and Config_v1 allocate an Ndb on the stack when they need one. 	914ea4da26c7ac0706a91af52144d2d0720118a3
----------------------------
"Add ""innodb_direct_access_enable_binlog"" configure option and its related APIs to allow applications using InnoDB API to decide whether binlog option is turned on or not. "	d498a9f33bba2b9fa15e81412ca84092ccc6100b
----------------------------
Refactor how the ndb_memcache test suite uses & checks for online reconfiguration. 	9fc60d00295449aec63a402ede07716f8e73fe90
----------------------------
"Data alignment issue: Configuration needs to obtain key buffers and row buffers using malloc(), which will be ""suitably aligned for any purpose,"" rather than C++ new char[] which might not be. "	17f6cce373e7e40d078ce5fb9e11bebddbf9a729
----------------------------
BUG#11758062 - 50206: ER_TOO_BIG_SELECT REFERS TO OUTMODED SYSTEM VARIABLE NAME SQL_MAX_JOIN_SI BACKGROUND: ER_TOO_BIG_SELECT refers to SQL_MAX_JOIN_SIZE, which is the old name for MAX_JOIN_SIZE. FIX: Support for old name SQL_MAX_JOIN_SIZE is removed in MySQL 5.6 and is renamed as MAX_JOIN_SIZE.So the errmsg.txt and mysql.cc files have been updated and the corresponding result files have also been updated. 	92d96d143751121e37fa69efd06ea4a877f3040d
----------------------------
Bug #12844282 62075: MTR TESTS SHOULD NOT HAVE TO SAVE & RESET INNODB_FILE_FORMAT_CHECK Added 'innodb_file_format_check' as variable to ignore change to. Tests that had to restore this amended Two tests assumed it to be Antelope, make sure these run on a freshly started server For 5.5, apparently innodb_file_format_max is the one to ignore 	d2e2260d4b516ccc4e5d280f4238668bb5fc016b
----------------------------
ndb - remove locking of m_local_config_mutex in MgmtSrvr::start as this introduces a lockdep assertion 	96b5ef3a9c91af590a769de9735f58d26c92df1b
----------------------------
"BUG#12978113: MTS: TYPOS IN LOGGING TO THE SLAVE ERROR LOG BUG#12947248: MTS: WARNING ""TEMPORARY FAILED TRANSACTION RETRY IS NOT SUPPORTED"" IS MISPLACED There were a couple of typos and unclear messages. We fix this by: - rewriting the warning message output when the start slave command is issued; - fixed the existing typo In addition we also: - rewrote one information note that goes into the error log - limit the MTS info messages that end to the error log by only allowing them when log_warnings > 1. "	049bc2e691a0bd2dee6a9085ba2bb8eb1625ced5
----------------------------
Fixed test sys_vars.all_vars: innodb_large_prefix no longer missing 	ae41b0073ba1e3eb04e6a7e56a52f47bcd27c2fe
----------------------------
ndb - add config part (still only explicit, using ThreadConfig) of MT-TC - remove ThreadConfig-printout from ndbd (single threaded) 	dc7d28107e53c63693d73e626f9676a636bd4232
----------------------------
ndb - fix incorrect code in spj, blocking multi instance spj config 	fb03b35e0e6198cccfda36c2b8f01687bd1fd40c
----------------------------
BUG#12987771: REPLICATED STATEMENTS ARE DUPLICATED IN THE SLAVE GENERAL LOG This is a regression that was introduced by WL 5706. In that worklog some changes were made in order to avoid that the server would log to general, slow and binary log passwords in clear text. As part of that work, a couple of general_log_write calls were deployed in mysql_parse. Now, the slave thread, when applying a query_log_event, calls mysql_parse as part of the apply execution. This makes the slave thread to write the statement twice to the log (an extra time at mysql_parse). We fix this by checking if it is the slave thread that is calling mysql_parse. If it is, the decision of what to log to the error log is taken inside Query_log_event::do_apply_event (as it was before), thus general_log_write is not called at this point. A side change is that slave thread was ignoring the opt_log_raw value. When set, for user sessions, the server logs the raw statement, disregarding if it is rewritten or not. We make the slave thread behave the same. [ NOTE: merged / cherrypicked approved cset that had been committed against mysql-trunk ] 	d90f9f165da31475479944c1063116b0bd27933f
----------------------------
"ndb dist priv - make sure binlog format is switched back to stmt before binlogging create/drop user. Wo/ this it crashed with ""./mtr --mem --mysqld=--binlog-format=mixed rpl_ndb.rpl_ndb_dist_priv"" "	a335e26d1189f7b46db1bdfcefcd6c4701c9d70f
----------------------------
"BUG#11763237 - 55925: 5.6 ERROR MESSAGES HAVE FUTURE-TENSE REFERENCES TO 5.6 BACKGROUND: In mysql-trunk/sql/share/errmsg-utf8.txt ER_UPDATE_LOG_DEPRECATED_IGNORED 42000 eng ""The update log is deprecated and replaced by the binary log; SET SQL_LOG_UPDATE has been ignored.This option will be removed in MySQL 5.6."" Note the future-tense references to MySQL 5.6. But mysql-trunk is 5.6, so this is incorrect. FIX: SQL_LOG_UPDATE variable is deprecated, and is mapped to sql_log_bin. It is removed in MySQL 5.5.Hence the error message has been updated by removing the line referencing to MySQL 5.6. "	f65ed00702275e4f2abd14b2ea373c9d60ffba35
----------------------------
WL5353 : Implement v2 of Binlog row events WL5353 introduced a new optional Binlog row event format containing 'extra row information'.  This is used to transfer row transaction ids.  The addition of extra row information was not backwards compatible, so it was possible for user error to result in a Slave crash for example. To ensure that inadvertant use of the new row event format does not cause any problems, this patch modifies the row event ids, so that old Slaves which do not understand the new format will not attempt to process the events. To ensure that online upgrades are possible, a new MySQLD option is added. --log-bin-use-v1-row-events=1 will cause MySQLD to use the original 'v1' Binlog row events, which older slaves will understand. --log-bin-use-v1-row-events=0 will cause MySQLD to use the new 'v2' Binlog row events, which are capable of carrying row transaction ids. The --ndb-log-transaction-id option can only be set to on when v2 row events are being generated, e.g. when --log-bin-use-v1-row-events=0. By default, mysql-5.1-telco-7.0 and mysql-5.1-telco-7.1 generate v1 row events (--log-bin-use-v1-row-events=1).  mysql-5.5-cluster (7.2) generates v2 events (--log-bin-use-v1-row-events=0).  This implies that row based replication from a mysql-5.5-cluster Master to an old mysql-5.1-telco-7.[0|1] Slave will not work, unless the mysql-5.5-cluster Master has --log-bin-use-v1-row-events=1 set explicitly. Note that this option is only required for replicating to _old_ servers, without support for v2 Binlog events. 	54ad3ba4605030bbd12953c12405d098f0b12bc5
----------------------------
Memcached exits with clear message if config tables are not found. Install memcache-api directory with README file and sandbox script. 	4cb28674fe162766adb4b008cfec2175b1d674b7
----------------------------
Bug#13002546 OBSOLETE CONFIG.INI FILES FOR MYSQL CLUSTER IN SUPPORT-FILES/ - remove the four .ini files from bzr and CMakeLists.txt 	110372922fef914007045caea1b896529b1f99b1
----------------------------
ndb - choose RelWithDebinfo as default build configuration on Windows 	01c172b414aaacad47cf3e0da71fee059c75b9e6
----------------------------
Bug 11766870 - 60097: NDB_CONFIG TO DUMP CONFIG VERSION FOR DATA NODES-Testfix 	41d9f6ea39d1b82c10b07727155ce202e2b9b353
----------------------------
"ndbapi -Fix problem where Ndb_cluster_connection::connect always returned -1 when it failed to allocate nodeid. Now returns 1 if the error is not fatal. - Fix a problem where Ndb_cluster_connectin::connect had hardcoded values for ""no_retries""  and ""retry_delay_in_seconds"". Now those two values how long the function will retry both connect and alloc nodeid - Fix bug in ConfigRetriever::allocNodeId, where the return code of ndb_mgm_connect was interpreted wrong, causing the function to return or retry even if the connect suceeded. Refactor function slightly. -  Add testcase for Ndb_cluster_connection::connect() returning 1 when it can't connect to ndb_mgmd and also when it get a non fatal error returned while allocating nodeid. "	93c2882cbdaf5701dfc8873280cd20dc577c0666
----------------------------
"Add configure system variable ""daemon_memcached_enable_binlog"" to control the InnoDB memcached's binlog activity. "	04127690b51d3c9ca83123bb40a224de1deae53d
----------------------------
Merge: 5976065 fe1335d Merge: CMake fixes: don't redefine GCC_ATOMIC detection; help linker find ndb libraries. Also remove ndbmemcache_config.h from bzr (it is generated by cmake) 	03d9f9f8e2e18968244ae9945be47ffcb0e5845e
----------------------------
CMake fixes: don't redefine GCC_ATOMIC detection; help linker find ndb libraries. Also remove ndbmemcache_config.h from bzr (it is generated by cmake) 	fe1335ddf7f97dacfb36e99295298b5426be223a
----------------------------
Bug 12982772 - SERVER DOES NOT START WITH INNODB_UNDO_TABLESPACES (SYSTEM ERROR 32 FILE IN USE) The bug is that we don't close the file after filling it wil zeros. This is a bug on all OSes but showed up under Windows. Do not print warnings when the on_error_silent flag is set under Windows. Approved by Inaam over IM. 	5f20040308f2b3d41e30b3fba44f36d5bfe8d86a
----------------------------
Merge: d52cfbe 76f3c25 Fix for auth_rpl test. The test is fixed to provide correct password for the account using test authentication plugin. Also, the --master-retry-count option which is now obsolete is replaced by a corresponding clause of CHANGE MASTER TO command. 	1f51766163428dbbaec77f9899aa2d50ef1f5468
----------------------------
"First batch of changes to implement memcached binlog operations. The binlog operation is now controlled by ""innodb_eng->enable_binlog"", but will link to a InnoDB memcached configure variable in the next checkin. "	340070e804b350147353dfa1abfdce1bd60d7b3e
----------------------------
BUG#12981684 - MTS KEEPS COMPLAINING ABOUT MISSING RELAY-LOG.INFO WITH REPOSITORY = TABLE Removed code that was introduced to track down BUG 11766392. We have figured out that the problem was an issue in the environment. 	fd3e4d87bcf35d1d4b73b41ef8201d7d6db9d75f
----------------------------
ndb - testMgm fix 1: allow get_config_from(X) where X == id of ndb_mgmd that you connect to 	f2d3179d0e0373baf0f03c7e8b1408eb0f88cd54
----------------------------
Prevent InnoDB system stats tables to be created in MyISAM format if mysqld is running with --skip-innodb and --default-storage-engine=myisam This tweak comes as a response to Bug#12958616 HIDDEN CHANGE IN SERVER CONFIGURATION/INSTALLATION PROCESS (PERSISTENT STATS) 	b0d62efbbb5ef1e302b0a76f334405fa4660b0a7
----------------------------
Bug #12925024: MYSQLD_SAFE IGNORES THE VALUE OF PLUGIN_DIR FROM MY.CNF Fixed the order of variable initialization in mysqld_safe by moving the inteligence around guessing the plugin-dir after reading the config files so any specification in any of the config files would be taken into account. 	0bdcc0d2051e32936ec8c4d2d412480a588a9b74
----------------------------
Configurable timer in the NDB API send thread (from 1 ms to 10 ms) 	0dbd6fc246b7642bc636c03b74e0566d24d68282
----------------------------
BUG#12929345 : Execution aborts without any messages (Windows only) This patch corrects an unsafe string concatenation for a Windows-specific code segment. The symptoms were, under certain conditions like specifying the location of my-print-defaults and the basedir, and run on a release build, the client would exit without printing any messages. 	5acc7cacae5be0153487092dc47869a07f70da14
----------------------------
Updated MTR test ndb_gis to use the new syntax: 'set @@optimizer_switch = 'engine_condition_pushdown=on'. Accepted new .result file which has changed due to trunk optimizer changes. 	9599d172d8a55cdd04e88157cd942538c17b85cd
----------------------------
"WL#5285 Change optimizer_switch flag ""batch_key_access"" to ""batched_key_access"". Similar change for EXPLAIN output. "	f92077323b31a825379025a72e0736452e5fe5a3
----------------------------
Rename WITH_COMPILER_HINTS to INNODB_COMPILER_HINTS. Remove COMPILER_HINTS_ENABLED Both errors were introduced when adding the build configuration option: --innodb-compiler-hints := on|off Spotted by Marko and approved by Marko over IM. 	dea08170dcbf639af7d4855576335b67ab758975
----------------------------
BUG#11766826: TEST RPL.RPL_SLAVE_LOAD_REMOVE_TMPFILE AGAIN FAILS WITH --MEM The test case rpl_slave_load_remove_tmpfile checks if the slave fails gracefully when the temporary file used for processing LOAD DATA is removed when it is about to be used. Now... Fix for BUG 11765751 changed the server behavior due to security reasons. The logic that must be enforced is: 1. normalize the string 2. check against pattern 3. check file. However, in the case of broken symlinks the server/slave will not be able to normalize the path, thus will end up mathching normalized against non-normalized paths. Eventually, it will end up with an error stating that LOAD FILE operation is not allowed because it does not match the slave-load-tmpdir pattern. We fix the test case by adding the error code 1290 to the list of expected errors. 	a55b75e2720ae0daaad19ff02b020acfe2191d4a
----------------------------
Bug#11765888 58898: MYSQL_INSTALL_DB: NOT ALL OPTIONS DOCUMENTED (EG: --DEFAULTS-FILE ) Updating help message in scripts/mysql_install_db.pl.in file. 	c6b1828886f09bae99db9f8b00b792cf6b754136
----------------------------
Bug#11765888 58898: MYSQL_INSTALL_DB: NOT ALL OPTIONS DOCUMENTED (EG: --DEFAULTS-FILE ) Added help message for the missing options (--no-defaults, --defaults-file and --defaults-extra-file). 	ecdc6cc21a3b199c64ecf906d66117c0060d38c0
----------------------------
ndb - allow configure/cmake to use environment variable CLASSPATH if --with-classpath has not been provided 	4b4d5eb04ee5ed72d2317f4675326df8a0d254b8
----------------------------
Bug 12866669 - COMPILER HINTS CAUSE PERFORMANCE TO DROP Make the compiler hints optional during a build. Introduce config variable: --innodb-compiler-hints := on|off The default value is still ON. Changing it to OFF we will do separately. With this change at least we have a mechanism to test whether they are useful or not. So far they have been shown to cause minor regression instead of improving performance. It is possible that they were useful in the past. rb://742 Approved by Jimmy Yang. 	d7a1a4d66bd64fafa5d67ed80b205cb95c5bca67
----------------------------
ndb - fix unit test of mt_thr_config 	cdbb09378eb1d48b004d07dc2d6d1cb36d1a7da6
----------------------------
ndb - Add ThreadConfig variable 	4d1944151f6b45ce04b13494aab2c615c7242361
----------------------------
"BUG#11878394 - MYSQLD_SAFE TEST FOR ALREADY RUNNING PROCESS FAILS, CAUSING CLOBBERED SOCKET A check for running mysqld instances was failing in mysqld_safe because of an incorrect shell command generated by cmake. The problem is that cmake retains the '\' of escaped double-quote, so the generated mysqld_safe script's command contained \"" in the shell command, and hence the failure. Fixed the command in scripts\CMakeLists.txt. "	e7b37d7258249a66f0a417bf46741b3946aee323
----------------------------
BUG#11766870 60097: NDB_CONFIG TO DUMP CONFIG VERSION FOR DATA NODES - additional fixes 	8abd5305fea8f800e0b770022cd4e3708d73a2b6
----------------------------
This commit concerns pushed queries (i.e. using NdbQueryOperation etc.) with child scan operations. This commit does the following: 1) Earlier, the api would try to set batch size (in bytes and rows) high enough to run child scans with full parallelism, even if this meant exceeding configuration limits (as set by BatchByteSize, BatchSize, and MaxScanBatchSize). The downside of this was that you could potentially get very large batches. (With 64 fragments and 10k records you could get 64x64x10k=40M.) Since sequential child scans (+ adaptive parallelism) have now been implemented we no longer need to run child scans with full parallelism. Therefore, we no longer need to exceed the limits from the configuration. This commit  therefore use the batch size (in bytes and rows) that NdbReceiver::calculate_batch_size() suggests. Child scans may then run with reduced parallelism if the allowed number of rows is lower that the number of fragments. (But the user may increase BatchByteSize and MaxScanBatchSize to counter this.) 2) This commit changes how QueryNodeParameters::batchSize is used. Instead of 16 bits for number of rows and 16 for number of bytes, there is now 11 bits for number of rows and 21 for number of bytes. The maximal values for the BatchByteSize and BatchSize configuration variables are 1 megabyte and 992 rows, so 16 bits was not enough for representing all legal values (large values were silently truncated). 	8f117e5924995d08eebcb2b86ec166cf275eb12a
----------------------------
ndb - fix windows problems in mt_thr_config 	10b1df649e1cd31735eefcee6a69a509bff1289d
----------------------------
ndb - change to use THRConfig for thread-config (not yet cpu-bindings) 	92be1072aacf1204181cb25892a89de4bc579690
----------------------------
ndb - setupConfiguration prior to get_multithreaded_config (prep for THRConfig usage) 	d1289f63b30332b69cf41407d1665948927a7141
----------------------------
ndb - add new config parameter for unified thread-config 	7a9b4dd21f2d35b994005053aae6cc9a38688fb1
----------------------------
"Change innodb_ft_min_token_size and innodb_ft_max_token_size from ""byte"" based to ""character"" based. Also change ""uft8"" field in fts_string_t to ""f_str"", as we now deal with various character strings other than ""utf8"". "	0d742e9af59447569459cfacd36713ac063e5524
----------------------------
BUG#12911710 - VALGRIND FAILURE IN ROW-DEBUG:PERFSCHEMA.SOCKET_SUMMARY_BY_INSTANCE_FUNC Converting the number zero to binary and back yielded the number zero, but with no digits, i.e. zero precision. This made the multiply algorithm go haywire in various ways. 	4bcf50653029ce54d27390ba69f5f4428cbb573c
----------------------------
"Bug#12704861 Corruption after a crash during BLOB update The fix of Bug#12612184 broke crash recovery. When a record that contains off-page columns (BLOBs) is updated, we must first write redo log about the BLOB page writes, and only after that write the redo log about the B-tree changes. The buggy fix would log the B-tree changes first, meaning that after recovery, we could end up having a record that contains a null BLOB pointer. Because we will be redo logging the writes off the off-page columns before the B-tree changes, we must make sure that the pages chosen for the off-page columns are free both before and after the B-tree changes. In this way, the worst thing that can happen in crash recovery is that the BLOBs are written to free pages, but the B-tree changes are not applied. The BLOB pages would correctly remain free in this case. To achieve this, we must allocate the BLOB pages in the mini-transaction of the B-tree operation. A further quirk is that BLOB pages are allocated from the same file segment as leaf pages. Because of this, we must temporarily ""hide"" any leaf pages that were freed during the B-tree operation by ""fake allocating"" them prior to writing the BLOBs, and freeing them again before the mtr_commit() of the B-tree operation, in btr_mark_freed_leaves(). btr_cur_mtr_commit_and_start(): Remove this faulty function that was introduced in the Bug#12612184 fix. The problem that this function was trying to address was that when we did mtr_commit() the BLOB writes before the mtr_commit() of the update, the new BLOB pages could have overwritten clustered index B-tree leaf pages that were freed during the update. If recovery applied the redo log of the BLOB writes but did not see the log of the record update, the index tree would be corrupted. The correct solution is to make the freed clustered index pages unavailable to the BLOB allocation. This function is also a likely culprit of InnoDB hangs that were observed when testing the Bug#12612184 fix. btr_mark_freed_leaves(): Mark all freed clustered index leaf pages of a mini-transaction allocated (nonfree=TRUE) before storing the BLOBs, or freed (nonfree=FALSE) before committing the mini-transaction. btr_freed_leaves_validate(): A debug function for checking that all clustered index leaf pages that have been marked free in the mini-transaction are consistent (have not been zeroed out). btr_page_alloc_low(): Refactored from btr_page_alloc(). Return the number of the allocated page, or FIL_NULL if out of space. Add the parameter ""mtr_t* init_mtr"" for specifying the mini-transaction where the page should be initialized, or if this is a ""fake allocation"" (init_mtr=NULL) by btr_mark_freed_leaves(nonfree=TRUE). btr_page_alloc(): Add the parameter init_mtr, allowing the page to be initialized and X-latched in a different mini-transaction than the one that is used for the allocation. Invoke btr_page_alloc_low(). If a clustered index leaf page was previously freed in mtr, remove it from the memo of previously freed pages. btr_page_free(): Assert that the page is a B-tree page and it has been X-latched by the mini-transaction. If the freed page was a leaf page of a clustered index, link it by a MTR_MEMO_FREE_CLUST_LEAF marker to the mini-transaction. btr_store_big_rec_extern_fields_func(): Add the parameter alloc_mtr, which is NULL (old behaviour in inserts) and the same as local_mtr in updates. If alloc_mtr!=NULL, the BLOB pages will be allocated from it instead of the mini-transaction that is used for writing the BLOBs. fsp_alloc_from_free_frag(): Refactored from fsp_alloc_free_page(). Allocate the specified page from a partially free extent. fseg_alloc_free_page_low(), fseg_alloc_free_page_general(): Add the parameter ""mtr_t* init_mtr"" for specifying the mini-transaction where the page should be initialized, or NULL if this is a ""fake allocation"" that prevents the reuse of a previously freed B-tree page for BLOB storage. If init_mtr==NULL, try harder to reallocate the specified page and assert that it succeeded. fsp_alloc_free_page(): Add the parameter ""mtr_t* init_mtr"" for specifying the mini-transaction where the page should be initialized. Do not allow init_mtr == NULL, because this function is never to be used for ""fake allocations"". mtr_t: Add the operation MTR_MEMO_FREE_CLUST_LEAF and the flag mtr->freed_clust_leaf for quickly determining if any MTR_MEMO_FREE_CLUST_LEAF operations have been posted. row_ins_index_entry_low(): When columns are being made off-page in insert-by-update, invoke btr_mark_freed_leaves(nonfree=TRUE) and pass the mini-transaction as the alloc_mtr to btr_store_big_rec_extern_fields(). Finally, invoke btr_mark_freed_leaves(nonfree=FALSE) to avoid leaking pages. row_build(): Correct a comment, and add a debug assertion that a record that contains NULL BLOB pointers must be a fresh insert. row_upd_clust_rec(): When columns are being moved off-page, invoke btr_mark_freed_leaves(nonfree=TRUE) and pass the mini-transaction as the alloc_mtr to btr_store_big_rec_extern_fields(). Finally, invoke btr_mark_freed_leaves(nonfree=FALSE) to avoid leaking pages. buf_reset_check_index_page_at_flush(): Remove. The function fsp_init_file_page_low() already sets bpage->check_index_page_at_flush=FALSE. There is a known issue in tablespace extension. If the request to allocate a BLOB page leads to the tablespace being extended, crash recovery could see BLOB writes to pages that are off the tablespace file bounds. This should trigger an assertion failure in fil_io() at crash recovery. The safe thing would be to write redo log about the tablespace extension to the mini-transaction of the BLOB write, not to the mini-transaction of the record update. However, there is no redo log record for file extension in the current redo log format. rb:693 approved by Sunny Bains "	41bb3537ba507799ab0143acd75ccab72192931e
----------------------------
Rearrange code so that it compiles with MEB. 1. Move the checksum config variable definition to buf0checksum.c 2. Move the checksum config variable declaration to buf0types.h 3. Move the UNDO tablespace parameters outside the #ifndef UNIV_HOTBACKUP 4. srv_file_per_table is hard coded as 1 for MEB, removed from dodgy UNIV_HOTBACK #ifdef in srv0srv.h 5. Move the UNDO tablespace config parameters out of the !UNIV_HOTBACKUP #ifdef block. Approved by Marko rb://753 	ec4e44011c5200f37e80660f67803acf37f5ed90
----------------------------
Bug# 12906961 MTR CHECK FAILS AFTER PARTITION_INNODB TEST DUE TO INNODB_THREAD_SLEEP_DELAY When InnoDB thread concurrency throttling is enabled, by default it will use the adaptive sleep delay feature. To make the result deterministic, save and restore the default sleep delay in the test. Approved by Jimmy over IM. 	9677f3d149b2a7106361db607778bb6d24c01531
----------------------------
Bug#12921422 - SOCKET_SUMMARY_BY_INSTANCE_FUNC_WIN FAILS IN PB This fix already passed PB on tree mysql-trunk-wl4896. 	ef9c4c9de96ef4e48d4c232ecee6f38ec3a0b8cc
----------------------------
Remove the vestige of timed_mutexes for the UNIV_DEBUG case. 	3a455b55329b90fd0cc02595ab8ed1bb309de155
----------------------------
ndb - move thread configuration out into own class. currently it's in ndbd.cpp and mt.cpp new class implements old behaviour as well as method suggested on dev-ndb (which everyone seems to be happy with...that has spoken) new class is intended to be used by both ndbmtd and ndb_mgmd so that thread-configuration can be verified by ndb_mgmd when reading config.ini (currently it's just ignored in ndbmtd if it's incorrect) This patch just introduces class, including tap-test but does not use it in neither ndbmtd nor ndb_mgmd... that is next patch(es) 	d1fbc7e1d7c3b86f197de876a51d65843d42df41
----------------------------
ndb - remove some obfsuscation in Configuration.cpp wrt lock-to-cpu handling 	d8a20f1bd988efee190cf07b96cae8b61693dacc
----------------------------
Bug#10064164 post-push fix: build break unless #defined HAVE_OPENSSL 	553587678e6bcd9ea3618ee6c8f27bff98fb6f41
----------------------------
Addendum fix for bug #11747191: 31224: SUPPORT FOR SSL CERTIFICATE REVOCATION LISTS Test case and result changes: - Added basic ssl_crl and ssl_crlpath tests to the sys_vars testsuite to keep the check happy. - Added the two columns to the embedded I_S test result 	93343d8592f0fe72e5f02c953c31973ab5d99421
----------------------------
socket_summary_by_instance failed sporadic in PB 1. Avoid that some calculation hits the upper limit of the value range. This might fix the issues seen in PB. 2. In case of unexpected results, this already means that the test failed, print the complete content of important tables. This might accelarate the bug analysis. 	9fd6cca312d837a2682cba7c69b670fdbc797b77
----------------------------
Fix deprecation messages for innodb_additional_mem_pool_size and innodb_use_sys_malloc - mention innodb_use_sys_malloc in the message for innodb_additional_mem_pool_size, not the other way around. 	bef60160e67c74919ed1b9ba067e36b2756ef443
----------------------------
Implement WL#5652 InnoDB: Use HW CRC32 + Introduce a new option innodb_checksum_algorithm that may have the following values: * crc32 Write CRC32 to both checksum fields (calculated using CPU instructions if supported). When reading allow any of the valid checksums to match (flexible allowing old files to be read, but increases the possibility for announcing a corrupted page to be valid). Still if one of the two fields contains CRC32, the other one must contain CRC32 too. * strict_crc32 Write CRC32 to both checksum fields When reading allow only CRC32 to match (will announce old files as corrupted, but minimizes the possibility to announce a corrupted page as valid). * innodb Write InnoDB calculated (custom algorithm) checksum to both checksum fields (different algo is used for each field). When reading allow any of the valid checksums to match. * strict_innodb Write InnoDB calculated (custom algorithm) checksum to both checksum fields (different algo is used for each field). When reading allow only InnoDB algorithm to match. * none Write a constant magic number to both fields When reading do not do any checks on the checksum fields (same as setting innodb_checksums=OFF) * strict_none Write a constant magic number to both fields When reading allow only the constant magic number to match. + Deprecate innodb_checksums (use innodb_checksum_algorithm=NONE instead) + Remove copy-pasted InnoDB source from extra/innochecksum.c and link the innochecksum executable with libinnobase.a + For the above to work extract the functions innochecksum needs in a dedicated files + Add the Facebook contributed CRC32 implementation into ut0crc32.c 	17e497bdb793bc6b8360aa1c626dcd8bb5cfad1b
----------------------------
Merge: 90828a7 6ac6c39 WL#4896 PERFORMANCE_SCHEMA NET IO Merge mysql-trunk-wl4896 --> mysql-trunk 	78f4351e85bd5c483a904d75d75394ed7ac95ad6
----------------------------
"Fix bug#37165 ""((Generic rpm)) fail to install on Fedora 9 x86_64"" On Fedora, certain accesses to ""/var/lib/mysql/HOSTNAME.err"" were blocked by SELinux policy, this made the server start fail with the message Manager of pid-file quit without updating file Calling ""/sbin/restorecon -R /var/lib/mysql"" fixes this. "	b2648c9036058ae323ca032f3b09a91270405b6e
----------------------------
Fixes for tests in WL#4896 PERFORMANCE_SCHEMA Instrumenting Net IO It is possible that socket_summary_by_instance_win fails. I backported improvements from the unix version of the test to this one but are unable to run this test. 	48ed783fc78e6b88b3be1f59490f8fbebc47189e
----------------------------
"WL#5596 MTS Here is the total cset combining all revisions done since Sep 2010. Comments from the original commits are pasted in reverse chronological order. ------------------------------------------------------------ revno: 3364 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-08-18 17:09:22 +0300 message: wl#5569 MTS Refining rpl_rotate_logs that could not produce deterministic output. The list of binlogs contained one binlog more than expected. @ mysql-test/suite/rpl/r/rpl_rotate_logs.result results updated. @ mysql-test/suite/rpl/t/rpl_rotate_logs.test Refining a method of verification of the binlog rotation due to its max size: we check if the first log has been rotated by comparing its name before and after feeding load to the master. Notice, that as the former so the new current proof methods are not perfect as that part of the test really needs to demostrate every binlog file is less than @@max_binlog_size. ------------------------------------------------------------ revno: 3363 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-08-18 14:56:01 +0300 message: updating result files that were left incorrect by the last merge. ------------------------------------------------------------ revno: 3362 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-08-18 14:44:59 +0300 message: wl#5569 MTS Failure in recovery when binlog-checksum is active. The reason of the failure was in that parsing of relay log by MTS recovery gaps computing did not make sure to use the relay-log own FormatDescriptor events that contain checksumming info for all events in the log. Fixed with taking care to find out the checksum algorithm for every relay log as the first step of MTS recovery gaps computing. @ mysql-test/suite/rpl/t/rpl_mixed_mts_rec_crash_safe_checksum-master.opt forcing master to checksum. @ mysql-test/suite/rpl/t/rpl_mixed_mts_rec_crash_safe_checksum-slave.opt forcing slave to *not* checksum. @ mysql-test/suite/rpl/t/rpl_mixed_mts_rec_crash_safe_checksum.test same as rpl_mixed_mts_rec_crash_safe but to run in master with checksum and slave without own checksum. The test verifies that checksum does not affect recovery. Lack of own checksumming on slave allows to test more scenarios. @ sql/rpl_slave.cc Search for the checksum algorithm FD is added. Notice that the first three events to read is enough to find out the master side checksum alg. ------------------------------------------------------------ revno: 3361 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-08-17 11:21:23 +0300 message: merge from trunk forced to resolve few semantical conflicts caused by changes in THD::enter_cond() of the trunk. ------------------------------------------------------------ revno: 3360 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-07-27 08:56:14 +0100 message: Fixed failure in test rpl_mts_check_concurrency when running in the mts collection. ------------------------------------------------------------ revno: 3359 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-26 19:46:41 +0100 message: Added a test case that checks if MTS allows to concurrently access the replication tables, and as such, concurrently commit transactions that update different databases. ------------------------------------------------------------ revno: 3358 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-22 20:08:43 +0100 message: Configured rpl_parallel_switch_sequential to run in row and mixed mode to avoid cluttering the error log with messages on unsafe execution. ------------------------------------------------------------ revno: 3357 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-22 19:02:14 +0100 message: This patch contains the following fixes: . Removed suppressed warning introduced in the wrong test case (i.e. rpl_corruption) and put it in the correct one (i.e. rpl_row_corruption). . Introduced variable to avoid clutering the error log with several warning messages on unsafe execution. ------------------------------------------------------------ revno: 3356 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-22 11:01:12 +0100 message: This patch has the following changes: . Specific directories were created for the MTS runs in the default.push. . Warning message was suppressed in the rpl_corruption.test. . Annoying debug outputs were removed from the error log. However, this is a temporary solution as it forbids to enable traces. ------------------------------------------------------------ revno: 3355 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-07-20 11:56:40 +0100 message: merge mysql-trunk --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3354 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-19 22:26:30 +0300 message: wl#5569 MTS valgrind reported a stack on rpl_savepoint. The problem appears to be in that at computing slave_sql_running_state in show_mater_info() the sql thread proc_info pointer could refer to a value in a stack that has already gone. Fixed with making proc_info to point to a string literal. ------------------------------------------------------------ revno: 3353 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-19 17:46:43 +0100 message: Suppressed warning messages that could potentially cause problems while running mts crash safe test cases. ------------------------------------------------------------ revno: 3352 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-07-18 21:46:45 +0300 message: wl#5569 MTS Cosmetic changes are done to address readability and clearness of source code of the MTS patch. @ sql/binlog.cc Comments improved. @ sql/log_event.cc Warning text is improved. @ sql/log_event.h More comments are added. @ sql/rpl_rli.h More comments are added. @ sql/rpl_slave.cc Error constant was changed. @ sql/share/errmsg-utf8.txt Error constant is changed. ------------------------------------------------------------ revno: 3351 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-07-18 14:52:44 +0300 message: wl#5569 MTS Inadvertently introduced hunk two rev:s back is reverted to please rpl_*_mts_crash_safe. ------------------------------------------------------------ revno: 3350 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-07-17 00:51:45 +0300 message: wl#5569 MTS fixing build issue for embedded. Public visibility for Rows_log_event::do_apply_event() is restored. ------------------------------------------------------------ revno: 3349 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-07-16 20:08:31 +0300 message: wl#5569 MTS The patch contains improvements after code review. Changes are mostly consmetic. @ mysql-test/suite/rpl/r/rpl_parallel_start_stop.result results updated. @ sql/binlog.cc correcting comments. @ sql/field.cc renaming. @ sql/log_event.cc renaming and separating out a block of code in Log_event::get_slave_worker() into a new method of Slave_job_group class; some cleanup. @ sql/log_event.h Extending and improving comments; renaming to follow is_, get_, set_ pattern; restoring the private access to do_apply_event() in Rows_log_event. @ sql/mysqld.cc removing extra declaration. @ sql/rpl_info_factory.cc Minor comments is added. @ sql/rpl_rli.cc renaming to make _cnt suffix to all entities that have counter meaning in mts; improving comments. @ sql/rpl_rli.h Renaming, and improving comments for the new members to Relay_log_info. @ sql/rpl_rli_pdb.cc remaning. @ sql/rpl_rli_pdb.h Improving comments readability through adding legengs defining MTS specific abbreviations. @ sql/rpl_slave.cc Renaming; minor cleanup in sql_slave_killed(); adding comments on Seconds_behind_master update policy with MTS. @ sql/share/errmsg-utf8.txt Improving text of few errors. ------------------------------------------------------------ revno: 3348 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-07-16 02:11:11 +0300 message: bug#12755663 MTS: RPL_CIRCULAR_FOR_4_HOSTS FAILS: CANT EXECUTE THE CURRENT EVENT GROUP MTS stopped with an error in the middle of the test. The reason is that a group of events from the slave itself was processed partly to modify the group position. In the following restart the wrong group bondary made slave either to error out or assert. Fixed with locating a possible race condition allowin Coordinator to ignore actual failed status of a Worker. So in the case of the test, the slave server group can't be started. Notice, this is a trial patch since I can't catch the failure on available to me hosts at all. @ sql/rpl_rli_pdb.cc Changing the running status of the Worker before it releases assigned entries. That ensure that the waiting in wait_for_workers_to_finish() Coordinator exits the function with a negative result and therefore stops without attempting to apply an event due to which it attempted synchronization. Couple of diagnostics into error log are added. They may be removed in short while but currently might be helpful to provide details if the failure won't disappear after this push. ------------------------------------------------------------ revno: 3347 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-07-14 12:40:06 +0300 message: WL#5569 MTS further extensive rpl_circular_for_4_hosts exersices with --repeat 10 --parallel=8 revealed a race condition in that Coordinator might miss to catch not-running status for a Worker. That made Coordinator to skip only a part of a group of the slave server own events so the slave stops at not the bondary of a group. Fixed with moving marking of the errored-out Worker as failed prior to its APH entries release. TODO: notice there can be a possibility to stop at not the boundary due to graceful STOP SLAVE if one is run at time of skipping self-originated events. However this issue belongs to STS and might be similar with BUG@12604951 and BUG@12728160. @ mysql-test/suite/rpl/r/rpl_circular_for_4_hosts.result results are updated. @ mysql-test/suite/rpl/t/rpl_circular_for_4_hosts.test tests is updated with a new text of a suppression. @ sql/log_event.cc Adding clarifying text to an error message when parallel execution fails. @ sql/rpl_rli_pdb.cc Moving marking of the errored-out Worker as failed prior to its APH entries release. That ensures Coordinator always finds the non-running status in a case it has to know that (wait_for_workers_to_finish()). @ sql/share/errmsg-utf8.txt Adding a format specifier for a clarifying text. ------------------------------------------------------------ revno: 3346 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-07-14 08:03:55 +0100 message: Post-push fixes for WL#5569 Injecting faults while updating a myisam table requires to flush the changes before committing suicide. So we have introduced the follwing code: DBUG_EXECUTE_IF(""crash_after_commit_and_update_pos"", -                       DBUG_SUICIDE();); +           sql_print_information(""Crashing crash_after_commit_and_update_pos.""); +           flush_info(TRUE); +           DBUG_SUICIDE(); Besides we improved some comments. ------------------------------------------------------------ revno: 3345 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-07-13 16:23:57 +0100 message: WL#5569 @ mysql-test/extra/rpl_tests/rpl_mts_crash_safe.inc Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository. @ mysql-test/include/not_slave_worker_info_table.inc Removed this feature as option --slave-worker-info-repository was removed too. @ mysql-test/suite/rpl/t/rpl_mixed_mts_crash_safe-slave.opt Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository. @ mysql-test/suite/rpl/t/rpl_mixed_mts_rec_crash_safe-slave.opt Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository. @ mysql-test/suite/rpl/t/rpl_row_crash_safe-slave.opt Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository. @ mysql-test/suite/rpl/t/rpl_row_mts_crash_safe-slave.opt Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository. @ mysql-test/suite/rpl/t/rpl_row_mts_rec_crash_safe-slave.opt Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository. @ mysql-test/suite/rpl/t/rpl_stm_mixed_crash_safe-slave.opt Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository. @ mysql-test/suite/rpl/t/rpl_stm_mts_crash_safe-slave.opt Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository. @ mysql-test/suite/rpl/t/rpl_stm_mts_rec_crash_safe-slave.opt Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository. @ mysql-test/suite/sys_vars/t/slave_worker_info_repository_basic.test Removed this test case as option --slave-worker-info-repository was removed too. @ sql/binlog.cc Improved code as requested by reviewers. @ sql/lock.cc Removed mistake that got into sql/lock.cc after merging with trunk. @ sql/log_event.cc Introduced parameter force in commit_positions function to determine if flush must be executed regardless of sync options. @ sql/rpl_info.h Updated doxygen comments and removed a change to avoid conflicts when merging with trunk. @ sql/rpl_info_factory.h Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository. @ sql/rpl_rli.cc Introduced parameter force in commit_positions function to determine if flush must be executed regardless of sync options. @ sql/rpl_rli_pdb.cc Improved the code and introduced parameter force in commit_positions function to determine if flush must be executed regardless of sync options. @ sql/rpl_rli_pdb.h Introduced parameter force in commit_positions function to determine if flush must be executed regardless of sync options. @ sql/rpl_slave.cc Removed duplicated code. @ sql/sql_parse.cc Reintroduced flag removed by mistake when merging with trunk. See also sql/lock.cc. @ sql/sys_vars.cc Removed option --slave-worker-info-repository as workers repositories are defined according to --relay-log-info-repository. ------------------------------------------------------------ revno: 3344 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-07-13 00:10:43 +0300 message: wl#5569 MTS merge trunk -> wl5569-tree ------------------------------------------------------------ revno: 3343 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-12 23:36:17 +0300 message: wl#5569 MTS adding suppression due to expected warning to rpl_circurlar_for_4_hosts; decreasing a loop limit in rpl_parallel_switch_sequential in case of statement format. ------------------------------------------------------------ revno: 3342 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-12 14:46:23 +0300 message: WL#5569 MTS Fixing code and test due to rpl.rpl_circular_for_4_hosts  mismatch failure, like http://pb2.norway.sun.com/?action=archive_download&archive_id=3608382. The reason of the mismatch was that when having two group of events to execute, the first for a Worker and the 2nd for Coordinator, Coordinator waited for the 1st group completion but did not verify success of synchronization. So in a case of the failed applying of the 1st group processing of the 2nd could find an inconsistent state to end up with a segfault (even though only the mismatch has been seen so far). @ mysql-test/suite/rpl/r/rpl_circular_for_4_hosts.result results are updated. @ mysql-test/suite/rpl/t/rpl_circular_for_4_hosts.test Test is updated to include a part specific to MTS. While all former conditions hold, the new section makes sure B server has two group of events to send which was not previously guaraneed nor necessary. Further, when the first of the two fails with Duplicate entry at applying of the 2nd Coordinator senses the first failure and gives out the 2nd. The first error remains to be seen in show-slave-status. @ sql/log_event.cc Checking wait_for_workers_to_finish() return code in case Coordinator executes a sequential-mode event. Comments are deployed in few other places where that is unnecessary to do. @ sql/rpl_rli_pdb.cc Worker marks itself as failed to apply which fact is reported to Coordinator also through wait_for_workers_to_finish(). Coodinator shall check the error code in a branch of a sequential event applying. @ sql/rpl_rli_pdb.h Adding a new state that Worker sets itself to indiate its failure to apply. @ sql/rpl_slave.cc Refining an assert as consequence of the new state and its actual setting by Worker. ------------------------------------------------------------ revno: 3341 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-07-10 22:40:01 +0100 message: Avoiding busy waiting when running mts recovery tests. ------------------------------------------------------------ revno: 3340 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-07-09 23:11:58 +0100 message: Removed --slave-checkpoint-period from MTS test cases. ------------------------------------------------------------ revno: 3339 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-07-09 23:08:07 +0100 message: Improved test cases for the WL#5569. ------------------------------------------------------------ revno: 3338 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-08 22:40:52 +0300 message: wl#5569 MTS The patch refines logics of applying phase of MTS-recovery to always applying events that are for Coordinator; fixes few tests to make them passable on PB; makes GAQ size to be of checkpoint_group value. @ mysql-test/suite/rpl/t/rpl_parallel_switch_sequential.test attempting to decrease execution time that currently might be too much for some PB hosts. @ mysql-test/suite/rpl/t/rpl_row_crash_safe-slave.opt Making the test to run in parallel mode with Workers having the table as their info storage. @ mysql-test/suite/sys_vars/r/slave_checkpoint_period_basic.result results updated. @ mysql-test/suite/sys_vars/t/slave_checkpoint_period_basic.test masking out the actual value of slave_checkpoint_period. @ sql/log_event.cc Never skip events that are for Coordinator as indicated by mts_execution_mode(). @ sql/rpl_rli.h Improving comments. @ sql/rpl_slave.cc Simplifying while condition of the GAQ-progress loop and deploying an assert ensuring checkpoint_group parameter and GAQ state are combined correctly. ------------------------------------------------------------ revno: 3337 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-08 07:54:34 +0100 message: Reduced the timeout period to run the checkpoint routine by setting slave-checkpoint-period to 30. ------------------------------------------------------------ revno: 3336 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-08 07:44:35 +0100 message: merge mysql-trunk --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3335 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-07-06 12:46:05 +0300 message: wl#5569 MTS refining wait for db-hash entry release at event distribution. The graceful STOP is not accepted at this point so Coordinator continues to stay in a loop. ------------------------------------------------------------ revno: 3334 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-05 20:43:04 +0300 message: bug#12719875 possible MTS recovery issue. MTS stopped with an error after failing to apply an event. It turned out that the event was sceduled incorrectly due to earlier stop by Single-Threaded Slave not at the group boundary but rather in the middle of it. Fixed with forcing CREATE..SELECT be logged as two groups. The CREATE-TABLE group is surrounded with its own BEGIN/COMMIT braces. @ mysql-test/suite/rpl/r/rpl_parallel_switch_sequential.result new results file is added. @ mysql-test/suite/rpl/t/rpl_parallel_switch_sequential-slave.opt transaction retry is not supported yet by MTS. @ mysql-test/suite/rpl/t/rpl_parallel_switch_sequential.test Regression test for bug#12719875 is added. Notice, created tables engine is Innodb also because with MyISAM stop-slave can be actually in the middle a group of myisam table events so the following restart fails with a dup key error. CREATE-SELECT is not tested according to another bug as commented. @ sql/log_event.cc changing error report style to be actually effective: rli->report() does not make rli->info_thd to return from is_error() true. my_error() message eventually gets to the show-slave-status sql-error at the end of slave sql thread. @ sql/rpl_slave.cc fixing a possible hanging that can happen due to errored-out worker at time of gaq is full and the worker was the first to update it; refining  asserts; shifting stop_workers() routine to a point where slave sql has not reset its errors which pleases a refined assert in slave_stop_workers(rli). ------------------------------------------------------------ revno: 3333 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-07-04 18:14:09 +0300 message: wl#5569 MTS Adding a rule to run PB with all suites in MTS with binlog-format ROW. @ .bzr-mysql/default.conf restoring commits@. @ mysql-test/collections/default.push adding a rule to run all suites in MTS with binlog-format ROW. ------------------------------------------------------------ revno: 3332 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-07-03 23:29:34 +0300 message: wl5569 MTS cleanup in one file. @ sql/rpl_rli.cc removing traces of a mutex that was served in prototyping support for temporary tables. ------------------------------------------------------------ revno: 3331 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-07-03 23:16:02 +0300 message: wl5569 MTS bzr commit mail address changed; a minor cleanup to make mts_is_worker() with const argument; releasing a test to run in MTS. ------------------------------------------------------------ revno: 3330 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-07-02 08:58:56 +0100 message: Fixed use of the performance schema in the replication code and concurrency issue in the IO Thread. In particular, the IO Thread was calling flush_master_info without grabbing locks. ------------------------------------------------------------ revno: 3329 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-01 16:41:35 +0300 message: wl5569 MTS merging from the main repo. ------------------------------------------------------------ revno: 3328 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-01 15:48:25 +0300 message: wl#5569 MTS the final cleanup patch. There are few glitches that were considered as tolerable at least for time of the total wl's code is being reviewed. That includes: - no support to old load-data events - no support for FK to add to the list, there are few places in the patch that suggests to deploy error branches each time flush_info() is called. @ sql/log_event.h cleanup. @ sql/rpl_reporting.cc introducing a new public method in order to be callable from Slave_worker executed code. @ sql/rpl_reporting.h the earlier do_report is renamed and a new do_report() is made a way to allow child classes to redefine its own way. The child class is suppose to call child->report() and to have child::do_report() 's designed behaviour. @ sql/rpl_rli_pdb.cc addressing an OOM issue at delete of curr_group_exec_parts. @ sql/rpl_rli_pdb.h deploying do_`method' pattern. @ sql/rpl_slave.cc cleanup. ------------------------------------------------------------ revno: 3327 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-01 13:16:52 +0300 message: wl#5569 MTS The patch cleans up some host of code. @ sql/log_event.cc cleanup, comments improved, logics of decision in Log_event::apply_event on mts execution mode is simplified. Moving flush_info() of Rotate_log_event::do_update_pos() into inc_group_relay_log_pos(). @ sql/log_event.h cleanup and merging logics of former mts_async_exec_by_coordinator() with mts_sequential_exec() which is turned to be called from a new mts_execution_mode(). Reducing visibility of mts members of Log_event hierarchy to match the needs. @ sql/rpl_rli.cc cleanup, renames and moving flush_info() inside inc_group_relay_log_pos(). @ sql/rpl_rli.h Cleanup and comments improved. @ sql/rpl_rli_pdb.cc Cleanup; renames; comments; a new Slave_worker::init_worker() is defined to be called at starting the Worker pool per each worker. Its initialization instructions are migrated from from slave_start_single_worker(). @ sql/rpl_rli_pdb.h Cleanup and comments improved. @ sql/rpl_slave.cc cleanup; replacing collection of initializations for a Worker in slave_start_single_worker() into a new Worker::init_worker(). @ sql/sql_class.h cleanup. ------------------------------------------------------------ revno: 3326 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-28 11:30:18 +0300 message: wl#5569 MTS replacing views with regular tables for consistency verification in rpl_parallel_innodb. Also a minor cleanup in rpl_parallel is done. ------------------------------------------------------------ revno: 3325 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-27 20:31:45 +0300 message: wl#5569 MTS Cleanup and addressing sporadic rpl_temp_table_mix_row failure in post-execution mtr.check_testcase(). The check of the test failure was caused by faulty optimization in avoiding to migrate temporary tables from Coordinator to Workers in case of rows-event assignement. while it's correct with the homogenous rows-event only load, the mixture can fail. Fixed with removing the optimization so map_db_to_worker() always relocates which is somewhat suboptimal and should be improved in future. @ mysql-test/suite/rpl/t/rpl_temp_table_mix_row.test Adding slave synchronization. @ sql/log_event.cc cleanup to move circular_buffer releated definitions into rpl_rli_pdb that is specialized on objects dealing with Worker, its assignement etc. improving comments; also instead of former separate flag indicating a T-event requires post-scheduling synchronization with the Worker is turned into a bit of existing Log_event::flags which also avoids ungliness of #if/#endif:s. @ sql/log_event.h instead of former separate flag indicating a T-event requires post-scheduling synchronization with the Worker is turned into a bit of existing Log_event::flags; @ sql/rpl_rli.cc cleanup: renaming. @ sql/rpl_rli.h cleanup: renaming, more comments. The former mts_wqs_overrun is converted into two: the statistics parameter mts_wq_overrun_cnt and the internal control parameter mts_wq_excess. @ sql/rpl_rli_pdb.cc Included rpl_slave.h that holds two necessary declarations; Cleanup: accepting circular_buffer related definitions migrated from log_event, improved comments, renaming, removing dead code @ sql/rpl_rli_pdb.h Cleanup: renaming and more comments are added. @ sql/rpl_slave.cc Augmenting print-out of statistics at the end of MTS session; cleanup: renaming. @ sql/rpl_slave.h Introducing two constants to define range of worker_id domain and a magic value of undefined worker. @ sql/sys_vars.cc replacing a literal int value with a symbilic constant. ------------------------------------------------------------ revno: 3324 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-27 13:12:52 +0100 message: Ensured that updates to the worker_info_repository are transactional and fixed the slave_checkpoint_group_basic test case. ------------------------------------------------------------ revno: 3323 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-26 13:02:59 +0100 message: Fixed test case. ------------------------------------------------------------ revno: 3322 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-06-25 15:14:24 +0100 message: Introduced test case for recovery with MTS and fixed bugs in recovery. ------------------------------------------------------------ revno: 3321 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-24 15:38:19 +0300 message: wl#5569 MTS This patch makes a bit of cleanup, addresses one memory-allocation todo and completes fixing valgrind report (rpl_parallel_start_stop) due to strings allocation in Slave_job_group items. ------------------------------------------------------------ revno: 3320 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-24 12:38:34 +0300 message: wl#5569 MTS this patch completes the previous one to fixes a result file and make the innodb specific test verification to base on tables not views. ------------------------------------------------------------ revno: 3319 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-24 00:11:22 +0300 message: wl#5569 MTS this is an exploratory patch to sort out if verification method what was based on views has its own not related to mts flaw. The patch calls verification macro on the tables that required some adjustment. ------------------------------------------------------------ revno: 3318 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-06-23 07:56:15 +0300 message: wl#5569 MTS fixing results of mysqld--help-win. ------------------------------------------------------------ revno: 3317 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-22 19:20:40 +0100 message: merge mysql-next-mr-wl5569 (local) --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3316 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-22 19:17:43 +0100 message: In some platforms, such as Windows, thread's wait time is stored in 100ns units. However, when computing the difference between two values, the result value was not multiplied by 100. Besides, there was a casting problem when the aforementioned result value was assigned to an ulong. ------------------------------------------------------------ revno: 3315 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-22 18:54:23 +0100 message: Fixed how mts copes with recovery. ------------------------------------------------------------ revno: 3314 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-21 19:10:54 +0300 message: wl#5569 MTS Fixing valgrind warnings. @ sql/log_event.cc w->running_status is verfied to find out the actually sought running status of a Worker. THD can be unavainlable that's what a valgrind report was about. @ sql/rpl_rli_pdb.cc commenting out an assert that valgrind does not like. @ sql/rpl_rli_pdb.h new method is added to be invoked at MTS shutdown. @ sql/rpl_slave.cc Invoking gaq cleanup at the end of MTS session. ------------------------------------------------------------ revno: 3313 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-21 18:15:43 +0300 message: wl#5569 MTS rpl_parallel_start_stop.test could fail sporadicaly with timeout. @ mysql-test/include/wait_for_slave_param.inc Correcting comments and handling of passed by caller $slave_timeout to make sure the unit of 1 second really holds. Introduced symbolic default_timeout, sleep_freq(uency) to procude time to sleep in between of two polls. @ mysql-test/suite/rpl/t/rpl_parallel_start_stop.test Since the default time to wait is less than one for innodb's wait for lock, the time to wait for error is set explicitly. ------------------------------------------------------------ revno: 3312 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-20 23:21:56 +0100 message: merge mysql-next-mr-wl5569 (local) --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3311 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-20 23:19:06 +0100 message: Fixed error when computing the Lower-Water-Mark. If two or more jobs were removed from the Group of assigned jobs and one of the jobs had a non-empty group relay log but the last one had an empty group relay log. The Lower-Water-Mark was not correctly updated, because the algorithm assumed that the group relay log was null. ------------------------------------------------------------ revno: 3310 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-20 11:52:44 +0100 message: Fixed valgrind errors. Slave_job_group was silently being cast to LOG_POS_COORD while calling sort_dynamic(&above_lwm_jobs, (qsort_cmp) mts_event_coord_cmp) and by consequence mts_event_coord_cmp(LOG_POS_COORD *, LOG_POS_COORD *). This had two problems: . The first two entries in the Slave_job_group were not a pointer to a char * and my_offset. . Even if the first two entries were char * and my_offset, such casting could lead to alignment problems. To fix the problem, we avoid this casting. ------------------------------------------------------------ revno: 3309 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-19 19:14:50 +0300 message: wl#5569 MTS fixing slave_transaction_retries_basic_64.result ------------------------------------------------------------ revno: 3308 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-19 16:11:25 +0300 message: wl#5569 MTS fixing tests. @ mysql-test/extra/rpl_tests/rpl_extra_col_master.test MTS-supperssion is necessary because the test is supposed to stop slave due to an error. @ mysql-test/extra/rpl_tests/rpl_relayrotate.test Load decreasing to prove a warning was caused by slow environment so waiting to accept the killed status by SQL thread was ended by 1 min timeout. @ mysql-test/suite/rpl/r/rpl_relayrotate.result results updated. @ mysql-test/suite/rpl/t/rpl_stm_000001.test A macro is expanded in order to isolate which branch of two activities a suffered timeout failure belongs in. @ mysql-test/suite/sys_vars/r/slave_transaction_retries_basic_64.result Fixing results of 64 version of the test that was editted in the prev push. ------------------------------------------------------------ revno: 3307 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-19 12:33:36 +0300 message: wl#5569 MTS Fixing rpl.rpl_mixed_binlog_max_cache_size that revealed incorrect asynchronous handling of a Rotate event which does not split the current group and therefore has to be executed after all previously scheduled events. Fixing sensetivity of two other tests to mtr's invocation environment that includes inital values of slave_parallel_workers and slave_transaction_retries. @ mysql-test/suite/sys_vars/inc/slave_transaction_retries_basic.inc made test insensetive to the value of slave_transaction_retries in mtr env. @ mysql-test/suite/sys_vars/r/slave_parallel_workers_basic.result made test insensetive to the value of slave_parallel_workers in mtr env. @ mysql-test/suite/sys_vars/r/slave_transaction_retries_basic_32.result made test insensetive to the value of slave_transaction_retries in mtr env. @ mysql-test/suite/sys_vars/t/slave_parallel_workers_basic.test made test insensetive to the value of slave_parallel_workers in mtr env. @ sql/log_event.cc get_slave_worker() passes need_temps argument as FALSE is case of rows-events. Correcting the actual value of `mts_in_group' of mts_async_exec_by_coordinator(). ------------------------------------------------------------ revno: 3306 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-19 09:04:19 +0100 message: Fixed some windows failures. ------------------------------------------------------------ revno: 3305 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-06-18 19:58:21 +0100 message: Fixed some recovery issues. ------------------------------------------------------------ revno: 3304 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-17 21:01:58 +0300 message: wl#5569 MTS fixing tests and a segfault at the end of handle_slave_sql() happened after worker initialization failed (e.g rpl_row_log on win). @ mysql-test/extra/rpl_tests/rpl_loaddata.test MTS-suppression is added. @ mysql-test/suite/rpl/r/rpl_loaddata.result MTS-suppression is added. @ mysql-test/suite/rpl/r/rpl_stm_loaddata_concurrent.result MTS-suppression is added. @ mysql-test/suite/sys_vars/t/disabled.def constant nuisanse is disabled in the feature tree. Todo: do not merge it when pushing to the main tree. @ sql/rpl_slave.cc Moved workers initialization after one of the coordinator so that failure in the former routine is handled with a proper state of coordinator. . This fix eliminates segfault at the end of handle_slave_sql() for few tests but does not address the reason of worker initialization failure, like in rpl_row_log on win: 110616  7:37:57 [Note] Info file G:\pb2\test\sb_1-3486364-1308189142.46\mysql-5.6.3-m5-win-x86_64-test\mysql-test\var-rpl-ps_row\4\mysqld.2\data\relay-log.info.0 cannot be accessed (errno 13). Most likely this is a new slave or you are  changing the repository type. 110616  7:37:57 [ERROR] G:/pb2/test/sb_1-3486364-1308189142.46/mysql-5.6.3-m5-win-x86_64-test/sql/Debug/mysqld.exe: File 'G:\pb2\test\sb_1-3486364-1308189142.46\mysql-5.6.3-m5-win-x86_64-test\mysql-test\var-rpl-ps_row\4\mysqld.2\data\relay-log.info.0' not found (Errcode: 13) 110616  7:37:57 [ERROR] Failed to create a new info file (file 'G:\pb2\test\sb_1-3486364-1308189142.46\mysql-5.6.3-m5-win-x86_64-test\mysql-test\var-rpl-ps_row\4\mysqld.2\data\relay-log.info.0', errno 13) 110616  7:37:57 [ERROR] Error reading slave worker configuration 110616  7:37:57 [ERROR] Failed during slave worker thread create 110616  7:37:57 [ERROR] Slave SQL: Failed during slave workers initialization, Error_code: 1593 ------------------------------------------------------------ revno: 3303 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-17 18:34:16 +0300 message: wl#5569 MTS fixing tests. @ mysql-test/extra/rpl_tests/rpl_parallel_benchmark_load.test making aux file names unique to please mtr, pb. @ mysql-test/extra/rpl_tests/rpl_parallel_load_innodb.test making aux file names unique to please mtr, pb. @ mysql-test/suite/rpl/r/rpl_filter_tables_not_exist.result MTS-suppression is added. @ mysql-test/suite/rpl/r/rpl_mixed_binlog_max_cache_size.result MTS-suppression is added. @ mysql-test/suite/rpl/r/rpl_parallel_benchmark.result making aux file names unique to please mtr, pb. @ mysql-test/suite/rpl/r/rpl_parallel_innodb.result making aux file names unique to please mtr, pb. @ mysql-test/suite/rpl/r/rpl_stm_binlog_max_cache_size.result MTS-suppression is added. @ mysql-test/suite/rpl/r/rpl_typeconv.result MTS-suppression is added. @ mysql-test/suite/rpl/t/rpl_filter_tables_not_exist.test MTS-suppression is added. @ mysql-test/suite/rpl/t/rpl_parallel_benchmark-slave.opt cleanup. @ mysql-test/suite/rpl/t/rpl_typeconv.test MTS-suppression is added. @ mysql-test/suite/sys_vars/r/slave_parallel_workers_basic.result results updated. @ sql/sql_class.h Cleanup to remove early debug-related options. @ sql/sys_vars.cc Fixating slave_parallel_workers' max as 1024. Cleanup to remove early debug-related options. ------------------------------------------------------------ revno: 3302 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-17 14:00:41 +0300 message: wl#5569 MTS fixing rpl_row_basic_3innodb similarly to the previous patch. @ mysql-test/suite/rpl/r/rpl_row_basic_3innodb.result a suppression is added. ------------------------------------------------------------ revno: 3301 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-17 13:51:59 +0300 message: wl#5569 MTS fixing few tests. 1. Policy is implemented for reacting with a warning in a case of failing worker leaves the total slave state with gaps thereby inconsistent. 2. Two tests that were used to time out due to reset master/slave was disabled in there. @ mysql-test/extra/rpl_tests/rpl_binlog_max_cache_size.test a suppression is added. @ mysql-test/extra/rpl_tests/rpl_row_basic.test a suppression is added. @ mysql-test/suite/rpl/r/rpl_known_bugs_detection.result a suppression is added. @ mysql-test/suite/rpl/r/rpl_row_basic_2myisam.result a suppression is added. @ mysql-test/suite/rpl/r/rpl_row_binlog_max_cache_size.result a suppression is added. @ mysql-test/suite/rpl/r/rpl_row_event_max_size.result a suppression is added. @ mysql-test/suite/rpl/r/rpl_row_idempotency.result a suppression is added. @ mysql-test/suite/rpl/t/rpl_known_bugs_detection.test a suppression is added. @ mysql-test/suite/rpl/t/rpl_parallel_benchmark-slave.opt removing unnecessary options causing test to fail. @ mysql-test/suite/rpl/t/rpl_parallel_benchmark.test removing an erronous assignment. The former disabling of reset was intended for benchmarking w/o binlog on the slave to please master-slave.inc. @ mysql-test/suite/rpl/t/rpl_parallel_innodb-slave.opt removing unnecessary options causing test to fail. @ mysql-test/suite/rpl/t/rpl_parallel_innodb.test removing an erronous assignment. The former disabling of reset was intended for benchmarking w/o binlog on the slave to please master-slave.inc. @ mysql-test/suite/rpl/t/rpl_row_event_max_size.test a suppression is added. @ mysql-test/suite/rpl/t/rpl_row_idempotency.test a suppression is added. @ sql/rpl_slave.cc Downgrading error to warning in a case of Coordinator fails due to a Worker error. Improving messages. Merging two if:s to have just one report(). @ sql/share/errmsg-utf8.txt Improved the text of an error; Added a new error code. ------------------------------------------------------------ revno: 3300 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-17 02:24:59 +0100 message: Removed unnecessary test cases and augment others in order to test recovery. ------------------------------------------------------------ revno: 3299 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-06-16 19:46:22 +0300 message: wl#5569 MTS fixing slave_parallel_workers_basic and rpl_stop_middle_group which cant run in MTS ------------------------------------------------------------ revno: 3298 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-06-16 11:29:53 +0300 message: wl#5569 MTS adding new tests to sys_vars.\ ------------------------------------------------------------ revno: 3297 committer: Luis Soares <luis.soares@oracle.com> branch nick: mysql-trunk-wl5569 timestamp: Thu 2011-06-16 01:41:32 +0100 message: WL#5569 Adding a global suppression for the warning that may appear when stopping the slave sql thread in the middle of a group. This should affect MTS mode only. ------------------------------------------------------------ revno: 3296 committer: Luis Soares <luis.soares@oracle.com> branch nick: mysql-trunk-wl5569 timestamp: Thu 2011-06-16 01:40:41 +0100 message: WL#5569 Renames worker-info-repository to slave-worker-info-repository in some tests option files. ------------------------------------------------------------ revno: 3295 committer: Luis Soares <luis.soares@oracle.com> branch nick: mysql-trunk-wl5569 timestamp: Thu 2011-06-16 01:32:37 +0100 message: WL#5569 More test fixes. Removing remaining prefixes 'mts' from mts variables, which have been renamed recently. ------------------------------------------------------------ revno: 3294 committer: Luis Soares <luis.soares@oracle.com> branch nick: mysql-trunk-wl5569 timestamp: Thu 2011-06-16 00:27:20 +0100 message: WL#5569 Fixing rpl_parallel result file. ------------------------------------------------------------ revno: 3293 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-15 20:41:33 +0300 message: wl#5569 MTS correcting --slave-parallel-workers in few more files ------------------------------------------------------------ revno: 3292 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-15 20:31:46 +0300 message: wl#5569 MTS correcting --slave-parallel-workers in collections/default.push ------------------------------------------------------------ revno: 3291 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-15 20:12:11 +0300 message: wl#5569 MTS Cleanup, including 1. decreasing number and renaming system variables. Important for debugging command line options are replaced with reasonble constant values and only necessary are retained. 2. Small encapsulation in ha_blackhole.cc is done. @ mysql-test/extra/rpl_tests/rpl_parallel_benchmark_load.test cleanup. @ mysql-test/extra/rpl_tests/rpl_parallel_load.test cleanup. @ mysql-test/extra/rpl_tests/rpl_parallel_load_innodb.test cleanup. @ mysql-test/r/mysqld--help-notwin.result cleanup. @ mysql-test/suite/rpl/r/rpl_parallel_benchmark.result cleanup. @ mysql-test/suite/rpl/r/rpl_parallel_conf_limits.result cleanup. @ mysql-test/suite/rpl/r/rpl_parallel_conflicts.result cleanup. @ mysql-test/suite/rpl/r/rpl_parallel_ddl.result cleanup. @ mysql-test/suite/rpl/r/rpl_parallel_multi_db.result cleanup. @ mysql-test/suite/rpl/r/rpl_parallel_seconds_behind_master.result cleanup. @ mysql-test/suite/rpl/r/rpl_parallel_start_stop.result cleanup. @ mysql-test/suite/rpl/r/rpl_parallel_temp_query.result cleanup. @ mysql-test/suite/rpl/t/rpl_parallel.test cleanup. @ mysql-test/suite/rpl/t/rpl_parallel_benchmark.test cleanup. @ mysql-test/suite/rpl/t/rpl_parallel_conf_limits.test cleanup. @ mysql-test/suite/rpl/t/rpl_parallel_conflicts.test cleanup. @ mysql-test/suite/rpl/t/rpl_parallel_ddl.test cleanup. @ mysql-test/suite/rpl/t/rpl_parallel_innodb.test cleanup. @ mysql-test/suite/rpl/t/rpl_parallel_multi_db.test cleanup. @ mysql-test/suite/rpl/t/rpl_parallel_seconds_behind_master.test cleanup. @ mysql-test/suite/rpl/t/rpl_parallel_start_stop.test cleanup. @ mysql-test/suite/rpl/t/rpl_parallel_temp_query.test cleanup. @ mysql-test/suite/sys_vars/r/all_vars.result cleanup. @ mysql-test/suite/sys_vars/r/slave_checkpoint_group_basic.result cleanup. @ mysql-test/suite/sys_vars/r/slave_checkpoint_period_basic.result cleanup. @ mysql-test/suite/sys_vars/r/slave_worker_info_repository_basic.result cleanup. @ mysql-test/suite/sys_vars/t/slave_checkpoint_group_basic.test cleanup. @ mysql-test/suite/sys_vars/t/slave_checkpoint_period_basic.test cleanup. @ sql/log_event.cc removing experimental (for benchmarking) mts_slave_local_timestamp option. @ sql/mysqld.cc few debugging time options are replaced with constants. Interface-variables are non needed anymore. @ sql/mysqld.h few debugging time options are replaced with constants. Interface-variables are non needed anymore. @ sql/rpl_rli_pdb.cc few debugging time options are replaced with constants. @ sql/rpl_slave.cc few debugging time options are replaced with constants. @ sql/sys_vars.cc few debugging time options are replaced with constants; renaming the rest that deal with MTS to be prefixed with `slave_'. ------------------------------------------------------------ revno: 3290 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-15 15:59:23 +0100 message: Fixed replication valgring failures caused by the MTS. ------------------------------------------------------------ revno: 3289 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-14 21:23:13 +0300 message: wl#5569 MTS wl#5754 Query event parallel execution Fixing failing tests and a failure in gathering accessed databases that was caused by a recent merge from trunk. @ mysql-test/suite/rpl/r/rpl_parallel_multi_db.result results updated. @ mysql-test/suite/rpl/r/rpl_parallel_seconds_behind_master.result results updated. @ mysql-test/suite/rpl/r/rpl_parallel_start_stop.result results updated. @ mysql-test/suite/rpl/t/rpl_parallel_multi_db.test moving mtr.add_supp to eliminate possibility of warning in the slave's error; adding graceful termination lines the test. @ mysql-test/suite/rpl/t/rpl_parallel_seconds_behind_master.test moving mtr.add_supp to eliminate possibility of warning in the slave's error. @ mysql-test/suite/rpl/t/rpl_parallel_start_stop.test Suppression are added for errors that are expected by test logics; adding graceful termination lines the test. @ sql/log_event.cc fixing the last argument to report() which should be c-string; fixing gathering of db:s on the master side. Because of a query can be preceeded in binlog by engineered BEGIN (the current pattern of logging from the trunk) resetting in Query::write() can't be any longer. However another reset point exists at the end of the top-level query and that suffices. @ sql/rpl_rli.h is_mts_in_group() to mimic STS' is_in_group() is added though semantics are different. @ sql/rpl_slave.cc further cleanup in sql_slave_killed() as requested by reviewers. ------------------------------------------------------------ revno: 3288 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-14 13:35:20 +0300 message: merge from trunk ------------------------------------------------------------ revno: 3287 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-14 12:27:38 +0300 message: wl#5569 MTS Fixing failing tests due to a. a flaw in `isolated parallel' mode implementation. Isolation applies to a group of event rather than to an instance. And event that contains over-max accessed db:s or event from Old master trigger marking the current being scheduled group. Such group will be executed having all prior scheduled done and nomore will be scheduled until the group is done. b. Notification to Coordinator about errored-out Worker is corrected. @ sql/log_event.cc isolation applies to a group of event rather than to an instance. Logics of isolation while the group is still executed by a Worker is refined through use of `bool curr_group_isolated' that lasts the group sceduling time and is set and reset in Log_event::get_slave_worker_id(). Assert is added to monitor tmp tables correct migration. . get_slave_worker() is called with `need_temp_tables' set to TRUE. @ sql/log_event.h Renaming to indicate that isolation applies to a group of event. Adding more candidate event to mts_do_isolate_group() assert. @ sql/rpl_rli.h Isolation mode related declaration. @ sql/rpl_rli_pdb.cc Refining notification logics. Coordinator needs both its THD::KILLED and signalling to slave_worker_hash_cond. @ sql/rpl_slave.cc Isolation mode related init-ion. ------------------------------------------------------------ revno: 3286 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-12 22:33:32 +0300 message: wl#5569 MTS making default.push to run rpl suite with non-default --mts-slave-parallel-workers > 0 in all three format/mode (row,stmt, mixed). The default is run for all suites in mixed mode and rpl suites with row+ps, stmt formats. ------------------------------------------------------------ revno: 3285 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-12 22:05:05 +0300 message: wl#5569 MTS manual merge with few fixes for segfault of the last merge from the trunk etc, compilation issue on embedded. ------------------------------------------------------------ revno: 3284 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-06-09 18:35:59 +0100 message: Post-fixes for merge. Fixed compilation in Windows and removed an used options. ------------------------------------------------------------ revno: 3283 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-06-09 16:27:47 +0100 message: merge mysql-trunk --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3282 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-06 13:51:19 +0300 message: wl#5569 MTS STOP SLAVE now stops consistently w/o gaps, KILL shall be used for an urgent stop, an error case behaves like the killed. For instance, a Worker errors out, it sends KILL to Coordinator through THD::awake(), and Coordinator kill the rest through setting a special Worker-running status to killed (which breaks the read-exec loop of a Worker). @ sql/log_event.cc Changing style of computing mts-in-group bool arg into mts_async_exec_by_coordinator(). @ sql/rpl_rli.cc Changing style of computing mts-in-group arg of an if in stmt_done(). @ sql/rpl_rli.h Adding more states to Coordinator's MTS-group view. @ sql/rpl_rli_pdb.cc Relocating notification of a Worker's failure by the Worker into the error-branch of a functioning releasing common resources (entries of APH hash). The failed Worker trying awakening possibly waiting for the signal Coordinator. The latter's behaviour in it's turn is refined to not enter the waiting phase when it has been already killed. @ sql/rpl_slave.cc sql_slave_killed() is made of two flavors of the error branches. STOPped MTS coordinator does not give out too early and wait till its MTS-group state allows that. Notification with kill to Coordinator  from the errored-out or killed worker is moved into a functioning releasing common resources (entries of APH hash). This case designates a hard stop. In case of the soft (SLAVE-STOPped) MTS, Coordinator is made to wait for Workers' assignements full completion before to mark their running status for stopping. ------------------------------------------------------------ revno: 3281 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-05 20:01:51 +0300 message: wl#5569 MTS More cleanup, fixes due to found issues when running tests, some improvements incl in stopping Workers to make routine to distinguish between killed and gracefully stopped cases so in the end STOP SLAVE will guarantee consistent state (some todo remains still). @ mysql-test/extra/rpl_tests/rpl_parallel_benchmark_load.test decreasing execution time. @ mysql-test/suite/rpl/t/rpl_begin_commit_rollback.test Marking the test as limited to Single-Thread-Slave. @ mysql-test/suite/rpl/t/rpl_deadlock_innodb.test Marking the test as limited to Single-Thread-Slave. @ mysql-test/suite/rpl/t/rpl_slave_skip.test Marking the test as limited to Single-Thread-Slave. @ sql/log_event.cc addressing few reviewing comments; asserting do_update_pos() can't run by Workers; cleaning up and separating Slave_worker *Log_event::get_slave_worker_id() and its caller's interest to rli-> last_assigned_worker; Deploying MTS group status marking in Log_event::apply_event(); Making Worker's exec loop break to obey to a new Worker's running status too; Deploying mts_checkpoint_routine() in Rotate_log_event::do_update_pos() (sim action for FD event's handler); Fixing relay-log update notification in Log_event::get_slave_worker_id(); @ sql/log_event.h renaming and re-typing of func:s as suggested by reviewer; leaving  a todo item for the final cleanup; correcting logics of mts_async_exec_by_coordinator(); @ sql/rpl_rli.cc Initialization of a new MTS group status proverty: mts_group_status(MTS_NOT_IN_GROUP); asserting Relay_log_info::stmt_done() can't be run by Workers; deploying mts_checkpoint_routine() alike Rotate_log_event::do_update_pos() this time in Relay_log_info::stmt_done() to cover FD-event case and consulting mts_group_status in order to decide which branch to follow; @ sql/rpl_rli.h Augmenting Relay_log_info with mts_group_status to contain MTS group status; @ sql/rpl_rli_pdb.cc Slave_worker::commit_positions() is fixed to carry update relay-log info further to the following checkpoint routine action; Slave_worker *get_slave_worker() was cleaned, interfaces improved, few asserts corrected; Slave_worker::slave_worker_ends_group() cleaned a bit, and now frees extra memory of CGEP dynarray. wait_for_workers_to_finish() is made to set the Coordinator's state as not in MTS group after synchronization with all workers; @ sql/rpl_rli_pdb.h Slave_jobs_queue is augmented with  running_status member. @ sql/rpl_slave.cc apply_event_and_update_pos(): corrects asserts, synch with *all* Workers at the end of dynamically marked as End of group event (mts_is_event_isolated() -> TRUE); exec_relay_log_event(): correts NULL event read out case; slave_stop_workers(): simplifying logics of stopping Workers, to mark them with w->running_status= Slave_worker::KILLED instead of killing workers' thd. . slave_stop_workers() finilizes reset of Coordinator's state with rli->mts_group_status= Relay_log_info::MTS_NOT_IN_GROUP to make sure a next restart will proceed with the reset value. ------------------------------------------------------------ revno: 3280 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-05-30 13:05:07 +0300 message: WL#5569 MTS WL#5754 Query event parallel applying ----------------------------------------------------------------- Aggregating 7 commits that are not pushed yet to the wl5569 repo. Find comments for each cset below. ------------------------------------------------------------------ The current patch addresses concurrent updating slave_open_temp_tables status counter. The former declaration of the underlying server variable is changed from ulong to int32. While that might affect (shrink) the actual range, there has been no specified range and now after the number of bits is the same on all platforms the range cat be set to be [0, max(int32)] ****** wl#5569 MTS Wl#5754 Query event parallel appying wl#5599 MTS recovery The patch includes some cleanup, including one for temp tables support, realization of few todo:s. ****** wl#5569 MTS wl#5754 Query event parallel applying More cleanup is done; Fixing temp tables manipulation. Asserting an impossible to support use case of group of events not wrapped with BEGIN/COMMIT. Todo: recognize old master binlog to refuse to run in parallel. ****** wl#5569 MTS Implementation of giving out the applier role to Worker for all cases but ones dealing with the Coordinators state. That includes Query event with over-max-db:s and Load-data related events. The current patch also makes old master binlog be handled by MTS though sometimes e.g for Query event to switch to the sequential mode. Fixing a race condition making C to wait endlessly if a Worker has exitted due to its applying error. ****** wl#5569 MTS correcting an assert that was used to fire as warned in the previous commit. Parallel feature tests pass now. ****** wl#5569 MTS This patch contains cleanup and simplification of logics of handling some events sequentially by Coordinator and adds memory-allocation failure branch to workers starting routine. ****** wl#5569 MTS An intermediate patch to address few issues raised by reviewers. To sum up, it's about cleanup and logics simplification of event distribution to Worker and consequent actions. Some efforts were paid to support Old Master Begin-less group of events. @ mysql-test/extra/rpl_tests/rpl_parallel_load_innodb.test Elaborated version of rpl_parallel_load generator still narrowed down to test performance with Innodb. @ mysql-test/suite/rpl/r/rpl_parallel_ddl.result results updated. @ mysql-test/suite/rpl/r/rpl_parallel_multi_db.result results updated. @ mysql-test/suite/rpl/r/rpl_parallel_temp_query.result results got updated. ****** results updated. @ mysql-test/suite/rpl/t/disabled.def Disabling few tests that triggers the assert installed in log_event.cc of this commit. . ****** Restoring tree tests as this patch makes them runable. @ mysql-test/suite/rpl/t/rpl_deadlock_innodb.test test can't run in MTS because of trans retry. @ mysql-test/suite/rpl/t/rpl_dual_pos_advance.test test can't run in MTS because of Until option of START SLAVE is not yet supported by  MTS. @ mysql-test/suite/rpl/t/rpl_parallel_ddl-slave.opt rpl_parallel tests need --slave-transaction-retries=0 @ mysql-test/suite/rpl/t/rpl_parallel_innodb-master.opt new test opt file is added. @ mysql-test/suite/rpl/t/rpl_parallel_innodb-slave.opt new test opt file is added. ****** rpl_parallel tests need --slave-transaction-retries=0 @ mysql-test/suite/rpl/t/rpl_parallel_innodb.test Elaborated version of rpl_parallel narrowed down to test performance with Innodb. @ mysql-test/suite/rpl/t/rpl_parallel_multi_db-slave.opt rpl_parallel tests need --slave-transaction-retries=0 @ mysql-test/suite/rpl/t/rpl_parallel_temp_query-slave.opt rpl_parallel tests need --slave-transaction-retries=0 @ mysql-test/suite/rpl/t/rpl_parallel_temp_query.test Adding logics to watch Slave_open_temp_tables in face of its concurrent updating. @ sql/event_parse_data.cc Pleasing some tests. @ sql/field.cc Restoring asserts that were before changes to sql_base.cc. . ****** Old master binlog events can't be run in parallel for few reasons. Therefore that paticular branch of code is irrelevant for MTS. @ sql/handler.cc Restoring assert that were before changes to sql_base.cc. @ sql/log_event.cc cleanup, incl restoration of the trunk version of some pieces of code. passing future_event_relay_log_pos to Worker to stike out a todo in rpl_rli.cc. . ****** Asserting a not-implemented support of group of events not braced with BEGIN/COMMIT(Xid). Such groups are possible in stored routine logging and when an old server binlog file is adopted by MTS-aware slave. . ****** Making a group of event w/o B/C braces be handled by Worker. Such group can happen from an old master or the current master bilogging some SP queries. Also over-max db:s events are made to be handled by Worker. Coordinator only handles asyncrounously events dealing with Relay-log state and synchrounously events dealing with checkpoint changes (master-group coordinates). Also few types of events from OM are left to Coordinator to execute. . . ****** Cleanup and simplification of logics of handling some events sequentially by Coordinator. An event is marked as parallel or sequential through C's rli that affects commit to info table by C as well as the event's destruction. . ****** Cleanup and logics simplification in Log_event::get_slave_worker_id(), Log_event::apply_event(). The essense is: a. to return back to apply_event_and_update_pos() event associated either with the single-threaded sql-thread rli, or one of Coord or Worker. b. while the beginning of a group and corresponding actions are left to Log_event::get_slave_worker_id(), other actions including passing the event to a Worker and the final closure of the current group is moved into apply_event_and_update_pos(). . Correcting Query_log_event::at-,de-tach_temp_tables() to expect the magic ""-empty string name db partition through which the applier thread receives temp tables. @ sql/log_event.h Leaving in mts_sequential_exec() only events that either can deal with Coordinator state, or are from old master. Making  Query_log_event::mts_get_dbs  to return a list with a magic """"-empty string partition name in case of over-max db:s query. The empty magic is converted into a record to APH to indicate the whole hash records lock. ****** More members are added to Log_event a. to associate the event with applier. b. to provide marking a B-less group of events (old master, select sf()). @ sql/mysqld.cc Turning slave_open_temp_tables from ulong to int32 and adding atomic locks declaration for the counter updating. @ sql/mysqld.h Extern-lizing slave_open_temp_tables_lock; @ sql/rpl_rli.cc Initializing/destorying slave_open_temp_tables lock at the same time with Workers. ****** passing future_event_relay_log_pos is done via an assignment to Worker's member in slave_worker_exec_job(). @ sql/rpl_rli.h restoring the original version of get_table_data() though no real changes. . ****** simplified (curr_group_is_parallel + curr_group_split) into curr_*event*_is_parallel. ****** Removing rli members that aren't necessary any longer. @ sql/rpl_rli_pdb.cc cleanup. ****** Removing redundant my_hash_update; cleanup; Fixing temp tables related issue of leaving wait_for_worker without all entries of APH given out their temp tables. ****** Changes due to redifining an object responsible to hold assigned partitions in few methods incl  Slave_worker::slave_worker_ends_group(). Some cleanup in get_slave_worker(). ****** cleanup, a new assert, and init of an debug-related member. @ sql/rpl_rli_pdb.h Redifining an object responsible to hold assigned partitions. Now it's a Dyn-array holding *pointers* to records on Assigned Partition Hash. That simplifies few routines for Worker. E.g search for the records (entries of APH) by Worker at time of committing. . ****** Adding GAQ memory-allocation failure notification. ****** Memorizing last deleted event for debugging purpose. @ sql/rpl_slave.cc Adding info message to the error log; improving comments. ****** Restoring original sequential mode version of assert in sql_slave_killed. Worker is not supposed to run this function. Testing of skipping logics is left to the rpl suite be run in the parallel mode. Cleanup. Marking recovery related todo items explicitly. Setting up guards to guarantee sequential mode in requested points of the code. . ****** Streamlining Workers state identification with a boolean running_status; worker start and stop are controlled by means of the disignator. . ****** simplified (curr_group_is_parallel + curr_group_split) into curr_event_is_parallel; GAQ memory-allocation failure branch is added to workers starting routine. ****** Cleanup and, moving append_item_to_jobs() invocation into  apply_event_and_update_pos() as well as other actions mentioned in log_event.cc comments; changing signature of apply_event_and_update_pos() to return NULL in place of referrenced pointer in case the event is handed over to a Worker; checking of the pointer value is done in places dealing with update-pos and event's destruction. @ sql/sql_base.cc Replacing slave opened temp tables counter incr/decr with a function perfoming atomic locking in case Worker runs it. ****** removing unnecessary return value in incr_slave_open_temp_tables def. ****** Func is renamed. Removing all traces of previous idea to return value out of modify_slave_open_temp_tables. @ sql/sql_parse.cc cleanup. ------------------------------------------------------------ revno: 3279 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-05-24 17:29:35 +0300 message: WL#5569 MTS WL#5754 Query parallel appying Changing implementation of temporary tables support in MTS. Cleanup, fixing few todo:s and few potential issues found. @ mysql-test/suite/rpl/t/rpl_parallel.test commetting failure in /include/rpl_end.inc (todo: explore and fix). @ mysql-test/suite/rpl/t/rpl_parallel_fallback.test The only Rows_query_log_event case of testing is no longer valid because the event is parallizable now. The test is removed. @ mysql-test/suite/rpl/t/rpl_parallel_multi_db.test Adding comments about possible issue of somewhat loose behaviour of sync_slave_with_master in parallel mode. TODO: investigate and fix. @ sql/binlog.cc Renaming only. @ sql/events.cc Renaming only. @ sql/log_event.cc Fixing found issues, cleanup and temp tables support. . The assigned partition as represented by an entry is passed through the assigned Worker. via Log_event::get_slave_worker(). The method attaches the entry to the Query event which do_exec_event() calls new attach and detach methods that grabs temp tables list on each involved db and returns possibly updated lists back to APH at the end of Query event applying. @ sql/log_event.h Mostly renaming. @ sql/rpl_rli.cc relocating mts_get_coordinator_thd() definition. @ sql/rpl_rli.h re-defining mts_is_worker() through SYSTEM_THREAD_SLAVE_WORKER. @ sql/rpl_rli_pdb.cc Changes mostly due to temp table support. Coordinator disaccosiates temporary tables of a being schedule db-partition from its thd and attaches the list to APH's entry. In the following the Worker finds the list and adopts it to return possibly updated version back to the entry at the end of the query. The list resides most of time in either APH's passive (usage == 0) entry, or in Worker's thd->temporary_tables. It can be relocated back to the Coordinator's repository via wait_for_workers_to_finish() that is called in case an event requires the sequential execution. . Few auxiliary functions are defined dealing with migration and merging temp tables. @ sql/rpl_rli_pdb.h Adding TABLE* pointer to list of temp tables in entry of Assigned Partition Hash. The entry pointer carries temp tables from C to W and backward. Changes in few function signitures motivated by temp table support. Adding auxiliary funcs to help with temp tables manipulations. @ sql/rpl_slave.cc renaming, cleanup and improving Worker identification. @ sql/rpl_slave.h cleanup. @ sql/rpl_utility.h cleanup. @ sql/sql_base.cc removing a hack to access temp tables in MTS. @ sql/sql_class.cc Renaming only. @ sql/sql_class.h Renaming only. @ sql/sql_rename.cc Renaming only. @ sql/sql_table.cc Renaming only. @ sql/sql_view.cc Renaming only. ------------------------------------------------------------ revno: 3278 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-05-19 12:36:28 +0300 message: wl#5569 MTS Support for ROWS_QUERY_LOG_EVENT is added. It required refactoring of its handling in the canonical sequential mode. The event life suggests its behavior similar to objects associated with Table_map, in particural, its destoying to occur at the end-of-statement time. Tested against existing ROWS_QUERY_LOG_EVENT feature tests incl rpl_row_ignorable_event in both sequential and parallel mode. @ sql/log_event.cc cleanup of MTS code; relocating handle_rows_query_log_event() logics into a. do_apply_event() and b. rli->cleanup_context(). @ sql/log_event.h cleanup of MTS code; @ sql/rpl_rli.cc Deploying ROWS_QUERY_LOG_EVENT destruction in context_cleanup(). @ sql/rpl_rli.h cleanup of MTS code; @ sql/rpl_slave.cc cleanup of MTS code; @ sql/sql_binlog.cc Simplifying ROWS_QUERY_LOG_EVENT handling in the case of BINLOG pseudo-query. ------------------------------------------------------------ revno: 3277 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-05-16 22:43:58 +0300 message: wl#5569 MTS Simplifying Coordinator-Worker interfaces. In essence after this patch Worker execute events in its private context (class Slave_worker :public Relay_log_info). The only exception is Query referring to temporary table. The temp:s are maintained in the Coordinator's ""central"" rli; removing some dead code; performing a lot of cleanup. There are few todo items incl: 1. To implement several todo:s scattered across MTS' code and tests (e.g to restore protected for few members of RLI of rpl_rli.h); 2. to cover Rows_query_log_event that currently can cause hanging (e.g rpl_parallel_fallback) 3. To sort out names of classes based on Rpl_info, possibly remove  Rpl_info_worker @ mysql-test/suite/rpl/t/rpl_parallel_start_stop.test The test as most of rpl_parallel* bunch can't yet stand `include/rpl_end.inc'. @ sql/log_event.cc Defining the default Log_event::do_apply_event_worker() that simply executes canonical do_apply_event() however supplying Slave_worker intance reference that is critical in order to execute different rli->methods(), e.g `report'. Xid_log_event::do_apply_event_worker() runs the Worker version of Xid commit; simplifying Rows event parallel applying to remove or elaborate some host of the early prototype code incl. rli->get_tables_to_lock() and related logics; @ sql/log_event.h Adding virtual int do_apply_event_worker() to Log_event and specializing it for Xid class; @ sql/rpl_reporting.cc Spliting report() into two methods in order to make possible to call the functional part of the two  with va_list as an arg be called from Slave_worker class. @ sql/rpl_reporting.h New  va_list version of report method is declared. @ sql/rpl_rli.cc removing early prototype time support to Rows-event parallel execution. The new scheme of applying is almost equivalent to the standard sequential algorith thanks to Slave_worker :public Relay_log_info inheritence implementation. @ sql/rpl_rli.h Removing unnecessary interfaces; TODO: restore `protected' for few members. @ sql/rpl_rli_pdb.cc Some cleanup and defining Slave_worker::report() to eventially call the Coordinator's rli->report() and exploit a fact that the latter was designed for concurrent use. @ sql/rpl_rli_pdb.h Changing base class for Slave_worker to make it behaving as Relay_log_info when needed; Removing some dead code; Adding report() methods to run it in do_apply_event(). @ sql/rpl_slave.cc Removed UNTIL todo as it's actually not supported with a warning; Removed a todo for cleanup of error-out statement format transaction because  w->cleanup_context() impelements it indeed; Cleanup or transition from w->w_rli (of Relay_log_info) to w (of Slave_worker); Adding forgotten unlock_mutex; Simplifying definitions of few func:s (mts_is_worker() etc); ------------------------------------------------------------ revno: 3276 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-05-06 21:33:32 +0300 message: wl#5569 MTS improving benchmarking test. ------------------------------------------------------------ revno: 3275 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-04-06 15:51:58 +0300 message: wl#5569 MTS Statistics for Workers and Coordinator incl waiting times, sleeping is reported now into the error log as slave stopping time. @ sql/log_event.cc statistics addded. @ sql/rpl_rli.h statistics added. @ sql/rpl_slave.cc print-out mts statistics into the error log at stopping the slave. ------------------------------------------------------------ revno: 3274 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-04-05 19:26:37 +0300 message: wl#5569 MTS restoring previous 4 default workers that rpl_parallel works with. ------------------------------------------------------------ revno: 3273 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-04-03 13:07:30 +0300 message: wl#5569 MTS Benchmarking related patch uniforms rpl_parallel to be run with arbitrary number of workers, db:s, tables, etc. TODO: to restore the final constinency check which is given out temporary while i could not find a way to leave it surrounded with  a --dis/en-able* stanza. @ mysql-test/extra/rpl_tests/rpl_parallel_load.test making the load generator to be indifferent to all parameters incl the number of db:s. Have to comment out the final consistency check sinc could not find a way to hide the verified table(s) line out of the results. @ mysql-test/suite/rpl/r/rpl_parallel.result results got updated. @ mysql-test/suite/rpl/r/rpl_sequential.result results got updated. @ mysql-test/suite/rpl/t/rpl_parallel-slave.opt the test caller has to supply -mysqld=--mts-slave-parallel-workers=[:num:]. With :num: == 0 the test is equivalent to rpl_sequential. @ mysql-test/suite/rpl/t/rpl_parallel.test removed traces of the number of workers that can vary in [0 - ..] range. The test caller has to supply -mysqld=--mts-slave-parallel-workers=[:num:]. With :num: == 0 the test is equivalent to rpl_sequential. ------------------------------------------------------------ revno: 3272 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-04-02 14:32:02 +0300 message: wl#5569 MTS a test file for benchmarking is added. Benchmarking results can be gained by extracting the master side generating and the slave side applying times like in the following loop: workers=6; for n in `seq 1 3`; do echo; echo loop: $n; echo; my_mtr.sh --mysqld=--mts-slave-parallel-workers=$workers  \ rpl_parallel_benchmark --mysqld=--binlog-format=statement \ && cat /dev/shm/var/mysqld.2/data/test/delta.out >> p${workers}_stmt.out 2>&1; done @ mysql-test/extra/rpl_tests/rpl_parallel_benchmark_load.test the load generator for a test file for benchmarking is added. @ mysql-test/suite/rpl/r/rpl_parallel_benchmark.result a new results file is added. @ mysql-test/suite/rpl/t/rpl_parallel_benchmark-slave.opt slave does to log into binary log. The number of workers is supposed to set via --mysqld at mtr invocation. @ mysql-test/suite/rpl/t/rpl_parallel_benchmark.test a test file for benchmarking is added. ------------------------------------------------------------ revno: 3271 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-03-30 17:11:24 +0300 message: wl#5754 Query event parallel execution Small cleanup for comments as requested by reviewer. @ sql/log_event.cc only comments cleanup. @ sql/rpl_slave.cc only comments cleanup. ------------------------------------------------------------ revno: 3270 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-02-27 19:35:25 +0200 message: WL#5754 Query event parallel execution Bundling together implementation the whole DML+DDL Query parallel support. That includes: The earlierst four rev:s to cut off the DML stage of the parallel query project from the following devoted to DDL. The four skeleton parallel applying of Queries containing a temporary table, and implement a core of the design that is the DML queries. Queries can contain arbitrary features including temp tables. The DDL part also refined few items related to the general low-level design. In particular,  of the mark of the over-max db:s in the updated-db:s status var is turned to be another new constant value. The very last patch to the bundle addresses the last review mail notes. @ mysql-test/r/mysqld--help-notwin.result results get updated. ****** results gets updated. @ mysql-test/suite/rpl/r/rpl_packet.result results updated. @ mysql-test/suite/rpl/r/rpl_parallel_ddl.result the new test results are added. . ****** results get updated. @ mysql-test/suite/rpl/r/rpl_parallel_multi_db.result new result file is added. ****** results get updated. @ mysql-test/suite/rpl/r/rpl_parallel_start_stop.result results get updated. @ mysql-test/suite/rpl/r/rpl_parallel_temp_query.result a new results file ****** new result file is added. @ mysql-test/suite/rpl/t/rpl_packet.test making a hashing fixes in order the test to pass. todo: refine logics of max_allowed_packed for master & slave. @ mysql-test/suite/rpl/t/rpl_parallel_ddl.test DDL specifics for parallelization tests are added. ****** added over-the-max updated db:s case through RENAME tables. ****** added remained DDL set members to test. @ mysql-test/suite/rpl/t/rpl_parallel_fallback.test Marked a todo. @ mysql-test/suite/rpl/t/rpl_parallel_multi_db.test multi-db DML query test is added. todo: add triggers, sf(), SP. ****** adding stored routines testing. ****** increased the number of db:s. Notice that forces to change the default of --thread-stack size; added over-the-max updated db:s case through multi-updates. @ mysql-test/suite/rpl/t/rpl_parallel_start_stop.test removed explicit log pos from the results. @ mysql-test/suite/rpl/t/rpl_parallel_temp_query.test query with temporary tables testing. @ mysql-test/suite/sys_vars/r/all_vars.result results get updated. @ sql/binlog.cc gathering to be updated db in the DML case. Over-MAX_DBS_IN_QUERY_MTS-sized list won't be shipped to the slave. ****** correcting memory allocation to be in thd's memroot. ****** separating out multiple db gathering into a THD method to be invoked as for DML so for few cases of DDL. ****** Changed location of comparisions against MAX_DBS_IN_QUERY_MTS to be inside the adding to db list method; refined logics of gathering db in decide_(): *all* db:s whenever there is at least one table to update are picked up. ****** Comments are added, other changes are due to MAX_DBS_IN_QUERY_MTS + 1 ceased to be the over-max mark. @ sql/events.cc gathering updated dbs for create/drop events. @ sql/field.cc relaxing an assert (todo: add to it more specific claim field->table is temp). ****** adding comments to asserts. ****** improved comments. @ sql/handler.cc relaxing an assert (todo: add to it more specific claim table is temp). ****** adding comments to asserts. @ sql/log_event.cc master and slave (Coord's and Worker's) handling of updated db:s. The Coordinator's distribution changed to involve a loop per db, similaraly for the Worker at applying. ****** adding comments and correcting clearence of binlog_updated_db_names to not let BEGIN, COMMIT in particular to get the updated list. ****** removed an extraneous assert. ****** cleaned some parts of the code; improved comments; refined an assert; turned Coordinator to use a specific new mem-root; other changes are due to MAX_DBS_IN_QUERY_MTS + 1 ceased to be the over-max mark. @ sql/log_event.h Hardcoding the max updated db:s. Static allocation for updated db:s in Query log event is motivated by the fact of the event is shared by both C and W and the standard malloc/free can't be a reasonble choice either. Added a new status and changed dependent info. Added a new method to return the *list* of updated db:s which in all but Query case is just a wrapper over get_db(). . ****** adding commits, and interfaces to helper functions. ****** updated some comments. ****** added OVER_MAX_DBS_IN_QUERY_MTS to serve as the over-max db:s mark instead of the former MAX_DBS_IN_QUERY_MTS + 1; mts_get_dbs() receives a mem-root arg supplied by Worker or Coord. @ sql/mysqld.cc removed opt_mts_master_updated_dbs_max. @ sql/mysqld.h removed opt_mts_master_updated_dbs_max. @ sql/rpl_rli.cc a new temp table mutex init, destroy and a set of helper functions providing access to C,W's thd:s in arbitrary place of the server code are added. ****** fixing an error. ****** relocalating helper functions to rpl_slave.cc. @ sql/rpl_rli.h a new temp table mutex is added to RLI class. ****** improving comments. ****** A memroot for the Coordiator is placed into rli. @ sql/rpl_slave.cc SLAVE_THD_WORKER appeared to be redundant. Worker's thd->system_thread is set to the same as the Coordinator thread constant. ****** Added a work-around/cleanup needed by the standard temp table closing algorithm. ****** comments explaining close_temp_tables() not to run by Workers. Accepting relocated functions. ****** init alloc and the final destuction of the Coord rli->mts_coor_mem_root mem-root. @ sql/rpl_slave.h declarations of auxiliary func:s defined in rpl_slave.cc are moved from log_event.h. @ sql/share/errmsg-utf8.txt Added a new error/warning on master specific to Query parallel replication. @ sql/sp.cc covering db gathering for create/drop SP. @ sql/sql_base.cc replacing refs to thd->temporary with an appropriate one corresponding to the Coord's thd->t_t:s. Also surrounding critical sections of codes dealing with opening, finding, closing or changing temproray_tables' list with a specific mutex lock/unlock. ****** Correcting and simplifying logics for the temp table parallel support. In particular close_temporary_tables() does not need to know about thd of the caller. . ****** simplified the temp table support related addons. The double ref to thd->temporary_table is needed only in one place. @ sql/sql_class.cc master side gathering updated db:s new memeber initializations. ****** Correcting logics of merging the updated db:s of a child to the parent's top-level. ****** removed dead-comments. @ sql/sql_class.h master side gathering updated db:s list and accessor members. ****** adding a necessary cleanup method. ****** adding two base methods of db gathering: one for a queries that can update only one db, and the other for multiple db:s. . ****** added more comments, removed dead-codes. @ sql/sql_db.cc create/drop database case of db gathering. @ sql/sql_rename.cc rename table(s) case of db gathering. @ sql/sql_table.cc create, drop, alter cases of db gathering. ****** Changed location of comparisions against MAX_DBS_IN_QUERY_MTS to be inside the adding to db list method. @ sql/sql_trigger.cc create/drop trigger case of db gathering. @ sql/sql_view.cc support for CREATE/DROP views is added. @ sql/sys_vars.cc Added a system variable (todo/fixme: may turn out to be unnecessary though). . ****** removed ealier added variable. ------------------------------------------------------------ revno: 3269 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-01-12 01:01:02 +0200 message: merging from mysql-trunk ------------------------------------------------------------ revno: 3268 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-01-12 00:54:12 +0200 message: wl#5569 MTS fixing the worker threads start/stop. @ sql/rpl_rli.h adding RLI::opt_slave_parallel_workers to cache the server's namesake global var. @ sql/rpl_slave.cc moving rli->recovery_parallel_workers resetting down to the exit point from starting routine. ------------------------------------------------------------ revno: 3267 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-27 18:54:41 +0000 message: merge mysql-trunk --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3266 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-24 01:57:03 +0200 message: wl#5569 MTS the timed-wait loop of SQL thread required a break-through parameter in case the signal missed in action and just timeout would be reported ------------------------------------------------------------ revno: 3265 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 19:03:42 +0200 message: merging from the repo wl5569 ------------------------------------------------------------ revno: 3264 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 17:49:19 +0200 message: wl#5569 MTS fixing corner cases that mtr-testing with mts workers against stardard suites reveal. @ sql/log_event.cc removing COMMIT Query event from a set of ones containing the partition info. @ sql/log_event.h ROLLBACK TO can be inside of a replicated trans. ------------------------------------------------------------ revno: 3263 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 16:00:28 +0200 message: wl#5569 MTS: refining another assert that can force C to delete events that are skipped with the slave skip counter ------------------------------------------------------------ revno: 3262 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 15:34:02 +0200 message: wl#5569 MTS Correcting an assert that is hit by few tests. @ sql/rpl_rli_pdb.cc Indeed, Coordinator can be awakened with abort_slave flag UP and not being killed. ------------------------------------------------------------ revno: 3261 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 13:27:15 +0200 message: wl#5569 MTS merging from the repo. ------------------------------------------------------------ revno: 3260 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 13:25:31 +0200 message: wl#5569 MTS fixing failing tests. @ sql/rpl_slave.cc fixing an issue where a Rotate event could appear in between of events of a group. That case should not force any rli->flush_info() but rather normal relay log coordinates incr. ------------------------------------------------------------ revno: 3259 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-22 20:34:26 +0200 message: wl#5569 MTS merging from the repo. ------------------------------------------------------------ revno: 3258 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-22 20:31:13 +0200 message: wl#5569 MTS fixing tests failure when mtr runs --mts_slave_parallel_workers != 0. rpl000010 is a representative. Fixed with identifying, marking, running carefully ev->update_pos() and destroying an event that can split a group of events to force part to be in different relay logs. @ sql/log_event.cc Identifying and marking an event that can split a group of events to force part to be in different relay logs. @ sql/log_event.h FD and Rotate both can be the group splitter but only if they are ""artificial"". @ sql/rpl_rli.h a marker flag to be set when the group splitter such as FD is spotted. @ sql/rpl_slave.cc identifying, marking, running carefully ev->update_pos() and destroying an event that can split a group of events. ------------------------------------------------------------ revno: 3257 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-22 13:57:18 +0200 message: wl#5569 MTS and wl#5599 MTS recovery The general recovery implementation is finished by this patch. Tested against  ./mtr rpl_parallel_conf_limits. Warning, ./mtr rpl_parallel_conf_limits rpl_parallel_conf_limits ... can fail at the 2nd etc test because of no removal of Worker tables happens at RESET SLAVE. @ sql/log_event.cc adding a special to mts-recovery branch to the event scheduling routine located in Log_event::apply_event(). todo: think about rli->flush_info() at the end of gap-filling. @ sql/rpl_rli.cc to be recovered group counter and a running index on the recovery bitmap are init-ed, also renaming. In recovery phase Coordinator can execute rows-events now. @ sql/rpl_rli.h to be recovered group counter and a running index on the recovery bitmap is added. @ sql/rpl_slave.cc engaging to be recovered group counter in mts_recovery_groups() in the end of which the recovery bitmap is ready and rli->mts_recovery_group_cnt counted how many bits of interest in there. . No actual recovery case is followed by rli->recovery_parallel_workers= rli->slave_parallel_workers at Workers startup time. ------------------------------------------------------------ revno: 3256 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-21 22:12:30 +0200 message: wl#5569 MTS slave_worker_info def is updated in the system db. ------------------------------------------------------------ revno: 3255 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-21 21:34:58 +0200 message: merging with repo ------------------------------------------------------------ revno: 3254 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-21 21:31:29 +0200 message: wl#5569 MTS Recovery routine part I: gathering the group recovery bitmap. @ sql/log_event.h Introducing a typedef for getting frequently used struct. @ sql/rpl_rli_pdb.cc checkpoint_seqno is added to the Worker table to index of the last committed group in the bitmap; Init, read, write, propagation of its value are addressed. @ sql/rpl_rli_pdb.h Worker class gets checkpoint_seqno members. @ sql/rpl_slave.cc mts_recovery_groups() is refined to follow a simpler design scheme. Checkpoint info that Worker must have at recovery consists of seqno, bitmap and the master binlog coordinates. ------------------------------------------------------------ revno: 3253 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-20 22:18:33 +0000 message: WL#5599 Fixed routine to compute the bitmap of executed events. ------------------------------------------------------------ revno: 3252 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-20 21:37:48 +0200 message: wl#5569 MTS adding checkpoint relay_log_name,pos as necessary part to locate a relay-log for recovery. Tested with rpl_parallel. @ mysql-test/extra/rpl_tests/rpl_parallel_load.test restoring $iter to 1k as it was used to be. @ sql/log_event.cc adding checkpoint relay_log_name,pos @ sql/rpl_rli_pdb.cc adding checkpoint relay_log_name,pos @ sql/rpl_rli_pdb.h adding checkpoint relay_log_name,pos ------------------------------------------------------------ revno: 3251 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-20 17:58:58 +0200 message: wl#5569 MTS manual merging from the repo and correcting GAQ processing with introducing a volatile byte to indicate whether an item is busy or released. ------------------------------------------------------------ revno: 3250 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-12-18 21:00:23 +0200 message: wl#5569 MTS fixing --mts-exp-slave-run-query-in-parallel=1 case when Query-log-event can be run in parallel incl DML and DDL. The feature is `exp'erimental still can be tried while there are no temp tables involved neither a db different than the session's default is modified by the query. Tested: Changes sustain mtr rpl_parallel --mysqld=--mts-exp-slave-run-query-in-parallel=1 --mysqld=--binlog-format=statement @ sql/log_event.cc making a single-query group such as DDL to be distributed to Workers. ------------------------------------------------------------ revno: 3249 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-17 14:46:15 +0200 message: wl#5569 MTS fixing PB2 failures, incl valgrind issues, long exec time and asserting in a test. @ mysql-test/extra/rpl_tests/rpl_parallel_load.test Making slow win machines happy on PB2 to lessen load. @ mysql-test/suite/rpl/t/rpl_parallel_start_stop.test adding an assert and print out if one will fire. @ sql/rpl_rli_pdb.cc the \0 term char was not allocated. @ sql/rpl_slave.cc missed initialization is added. ------------------------------------------------------------ revno: 3248 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-17 00:00:47 +0200 message: merge from  wl#5569 repo to local branch rpl_sequential opt files are added to avoid mtr give up to process a bulk of unsafe warnings. ------------------------------------------------------------ revno: 3247 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-16 23:41:45 +0200 message: wl#5569 MTS Adding transparent support/fallback to the sequential execution cases of 1. Query-log-event 2. Rows_query_log_event info event Both cases can be fully parallelized in future project. Fixing an issue in move_queue_head() that was surficed as an assert in Slave_worker::slave_worker_group_ends(). Fixing destoying an event by Worker. @ mysql-test/extra/rpl_tests/rpl_parallel_load.test Edited to compare all involved tables, add explicitly multi-statement transaction, and letting verification even in a case of statement format events. @ mysql-test/suite/rpl/r/rpl_parallel_fallback.result new results file is added. @ mysql-test/suite/rpl/t/rpl_parallel.test is changed to run with all formats because it starts verifying the transparent fallback to sequential for Query-log-event and related. @ mysql-test/suite/rpl/t/rpl_parallel_fallback.test A new test file is added to contain  cases of transparent fallback to the sequential execution. Rows_query_log_event case is placed there. Notice, the Query-log-event fallback is largely tested by rpl_parallel. @ sql/log_event.cc Refining event distribution logics in order to support fallback to the sequential execution. The following definions are framed out . curr_group_is_parallel - indicates a Worker is engaged for all operation incl dectruction for all events of the group. The value lasts till a next group is decided to be ""pure"" sequential so that C will execute it, update rli synchronously and destroy the events. curr_group_seen_begin  - indicates if the current group is started with a B-event (BEGIN query). The value lasts till T-event is distributed. . Deploying a w/a for  Rows_query_log_event that involves a nap to protect from a case of multiple Rows_query_log in one group. Notice, a specific (w/a as well) rule of destroying the event. @ sql/log_event.h Rows_query_log_event fallback to sequential support is added. @ sql/rpl_rli.cc Rows_query_log_event fallback to sequential support is added. @ sql/rpl_rli.h curr_group_isolated is defined to be a parallel group that is executed in isolation from any other ahead and behind workers. Coordinator is supposed to provide such environment, the new member is a facility to control it. @ sql/rpl_rli_pdb.cc Fixing usage of circular_buffer_queue::gt() to deploy an assert suggested by the heading comments. Refining logics of finding a gap in GAQ. Adding 2nd arg to wait_for_workers...() to cover the 2nd use case of waiting Workers by C. The two are: wait for all, and wait for all but not one being currently scheduled. @ sql/rpl_slave.cc Refining logics of C's commit to the main rli due to a pure sequential event (e.g FD, Rotate), similarly refining logics of freeing. Deploying a w/a for Rows_query_log_event. ------------------------------------------------------------ revno: 3246 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-14 16:46:20 +0200 message: merge from wl5569 repo ------------------------------------------------------------ revno: 3245 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-14 10:57:16 +0200 message: wl#5569 MTS a light cleanup to arrange the option/system var names properly - mts_-prefixing, and _exp prefixing for experimental features needed for benchmarking (mts_exp_slave_local_timestamp) or suppored limitly (mts_exp_slave_run_query_in_parallel for Query-log-event). Fixing GAQ size. It might be too tight e.g in case of the max WQ length of 1; tested with running rpl_parallel supplying --mts-slave-worker-queue-len-max=1. @ sql/rpl_slave.cc Fixing GAQ size. It might be too tight e.g in case of the max WQ length of 1. ------------------------------------------------------------ revno: 3244 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-13 18:53:32 +0200 message: wl#5569 MTS fixing a valgrind stack cauased by extra pfs-keys/cond_var. Those are removed with Alfranio`s consent ------------------------------------------------------------ revno: 3243 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-13 17:57:01 +0200 message: wl#5569 MTS fixing a set of valgrind warning cauased by a c&p ------------------------------------------------------------ revno: 3242 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-13 16:52:50 +0200 message: wl#5569 MTS updating results for few tests. ------------------------------------------------------------ revno: 3241 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-12-11 21:00:47 +0200 message: wl#5569 MTS 1. Fixing recovery related issue of DBUG_ASSERT(rli->get_event_relay_log_pos() >= BIN_LOG_HEADER_SIZE); at slave start with shifting mts_recovery_routine() at front of the assert. 2. Making SKIP-ed event to commit to the central RLI. That is correct since Workers are not executing anything at this time. 3. Fixing the default for mts_checkpoint_period which should not be zero normally. Zero makes sense solely for debugging (so we may stress that through VALID_RANGE(1,...). 4. Introduced a general mts-unsupported error/warning to apply to cases of non-zero parallel workers and a feature that parallelization can't work with. @ mysql-test/suite/rpl/r/rpl_parallel_start_stop.result results are updated. @ mysql-test/suite/rpl/t/rpl_parallel_start_stop.test Extending the test to cover UNTIL, SKIP, a temporary to the regular error escalation. ------------------------------------------------------------ revno: 3240 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-10 18:25:27 +0200 message: merge from wl5569 repo to a local branch ------------------------------------------------------------ revno: 3239 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-10 17:50:03 +0200 message: wl#5569 MTS Improving GAQ in a) limit size to be capable to hold items while all WQ:s are full b) move_queue_head() contained a flaw to make no progress falsely c) never let to enque in GAQ while it's full @ sql/log_event.cc Fixing impossible gaq_idx == -1. GAQ may not be full at this point. The total counter of executed groups starts from 1, that is nothing is done yet when 0. @ sql/rpl_rli_pdb.cc move_queue_head() contained a flaw to break the progress loop falsely. Fixed with comparing the current index with the Worker::last_group_done_index instead of this->last_done. The latter changed to become of pure statictics character and to contain the total seqno which is guaranteed to grow monotonically by its ulonglong size. @ sql/rpl_rli_pdb.h changes due to last_done turned into statistics holder. @ sql/rpl_slave.cc Improving GAQ in limit size to be capable to hold items while all WQ:s are full. Wait to release item at checkpoint() when GAQ is full. @ sql/sys_vars.cc opt_mts_coordinator_basic_nap is set to non-zero 5 msecs default value. ------------------------------------------------------------ revno: 3238 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-09 19:46:27 +0200 message: merge from wl5569 repo to a local branch ------------------------------------------------------------ revno: 3237 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-09 19:45:02 +0200 message: wl#5569 MTS Integration with wl#5599 recovery for MTS and fixing two asserts. One is due to missed cleanup of errored-out rows-events; the other is a work-around on w->curr_group_exec_parts->dynamic_ids is initialized to have one partition on the Worker startup, but it should not. @ sql/log_event.cc Propagating CP related info from C to W. @ sql/rpl_rli.cc Added a part of CP info from C to W propagation. @ sql/rpl_rli.h New members to RLI due to CP info from C to W propagation. @ sql/rpl_rli_pdb.cc Worker stores the new CP to mention it in flush_info() along with (todo) a bitmap of the executed groups within the checkpoint interval. @ sql/rpl_rli_pdb.h New members to a transport and the Worker class due to CP info. @ sql/rpl_slave.cc missed cleanup of errored-out rows-events; work-around on w->curr_group_exec_parts->dynamic_ids is initialized to have one partition on the Worker startup, but it should not. ------------------------------------------------------------ revno: 3236 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-08 13:59:07 +0000 message: WL#5599 Fixed warning messages. ------------------------------------------------------------ revno: 3235 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-08 12:59:07 +0000 message: WL#5599 Fixed test cases. ------------------------------------------------------------ revno: 3234 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-08 01:30:32 +0000 message: WL#5599 Fixed failures in test cases. ------------------------------------------------------------ revno: 3233 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-08 00:33:48 +0000 message: merge mysql-trunk --> mysql-next-mr-wl5569 Conflicts: . mysql-test/r/log_tables_upgrade.result . mysql-test/r/mysql_upgrade.result . mysql-test/r/mysql_upgrade_ssl.result . mysql-test/r/mysqlcheck.result . mysql-test/suite/perfschema/r/pfs_upgrade_lc0.result . mysql-test/suite/rpl/t/disabled.def . mysql-test/suite/sys_vars/r/all_vars.result . mysql-test/t/system_mysql_db_fix40123.test . mysql-test/t/system_mysql_db_fix50030.test . mysql-test/t/system_mysql_db_fix50117.test . sql/log_event.cc . sql/log_event.h . sql/rpl_mi.h . sql/rpl_slave.cc . sql/share/errmsg-utf8.txt ------------------------------------------------------------ revno: 3232 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-07 20:01:39 +0200 message: manual merge with a piece of recovery support on repo. rpl_parallel hits an assert that Alfranio is fixing ------------------------------------------------------------ revno: 3231 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-07 19:35:16 +0200 message: wl#5569 MTS Testing related fixes incl master_pos_wait() support and thereafter replacing sleeps with the functioning sync_slave_with_master; Fixing the limitted Q-log-event parallelization. After the fixing mixture of rows- and Q- transactions can run concurrently. Q-transaction will be treated sequentially by default. @ mysql-test/suite/rpl/r/rpl_parallel.result results updated. @ mysql-test/suite/rpl/r/rpl_sequential.result results updated. @ mysql-test/suite/rpl/t/disabled.def a nuisance test gets disabled. @ mysql-test/suite/rpl/t/rpl_parallel_conf_limits.test sleeps go away. @ mysql-test/suite/rpl/t/rpl_parallel_conflicts.test sleeps go away. @ mysql-test/suite/rpl/t/rpl_parallel_start_stop.test sleeps go away. @ sql/log_event.cc Fullfiling long perding time todo:s wrt update_pos and delete ev, update_pos() is redundant being superseded by a special commit of the Worker; Addressing {B, Q, T} not-parallel case. The issue was due to unability to support Q-log-event as quickly as Rows- parallelization. @ sql/rpl_rli_pdb.cc circular_buffer_queue::de_tail() a very specific method is motivated by the limitted support for Q-log-ev parallelization. It may happen to be unnessary once Q has become parallel. @ sql/rpl_slave.cc Implementing CP in successful read branch. ------------------------------------------------------------ revno: 3230 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2010-12-05 22:04:17 +0200 message: wl#5569 WL#5599 MTS & recovery Refining and correcting two wl:s integration. The main achievement is events execution status is consistently recorded into the Worker and the central RL recovery tables. That was tested manually in rather agressive env where IO was used to reconnect randomly and load from Master contained Rotate events. TODO: to fix: rpl.rpl_parallel_conf_limits may not pass to address: Multi-stmt Query-log-event transaction case (see todo in sources). to destruct by Workers their executed events (was deferred until ev->update_pos started working). (Alfranio) to deploy mts_checkpoint_routine() call inside the successful event read branch of next_event(). Otherwise no calling happens when Coord is constanly busy with read/distribute. ------------------------------------------------------------ revno: 3229 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-12-04 19:14:50 +0200 message: merging from the repo wl5569 ------------------------------------------------------------ revno: 3228 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-12-04 15:45:02 +0000 message: Added mutex to the checkpoint_routine. ------------------------------------------------------------ revno: 3227 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-03 16:56:11 +0000 message: Implemented periodic checkpoint if parallel slave is enabled. ------------------------------------------------------------ revno: 3226 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-03 10:15:45 +0000 message: Fixed commit_positions() and removed unnecessary checkpoint thread. ------------------------------------------------------------ revno: 3225 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-02 20:13:12 +0200 message: manual merge to wl#5569 tree ------------------------------------------------------------ revno: 3224 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-02 19:46:46 +0200 message: wl#5569 MTS User interface related: set @@global.slave_parallel_workers= `non-zero` following with `START SLAVE` starts slave with so many Worker threads. That is non-zero value is defacto the slave parallel execution mode. Earlier introduced enum enum_slave_exec_mode  SLAVE_EXEC_MODE_PARALLEL is withdrawn. Fixes rli->mts_pending_jobs_size statistics which might cause assert-crash otherwise. a silly c&p mistake of relay-log name change notification. Made a little clean-up including relocation of init-ion of workers related stuff into start_slave_workers(). Many changes in tests due to SLAVE_EXEC_MODE_PARALLEL and not only. @ sql/log_event.cc few asserts are motivated by a silly c&p mistake of relay-log name change notification. Fixing rli->mts_pending_jobs_size statistics which might cause assert-crash otherwise. @ sql/rpl_rli.cc relocating Worker related stuff from init at RLI constructor to the start slave workers; Intruduced a public Relay_log_info::reset_notified_relay_log_change() to call when C discovers the relay log name change (next_event). @ sql/rpl_rli.h the server @@global.slave_parallel_workers has affect only when the slave is stopped. At start the var's value is copied to rli::slave_parallel_workers and this value is in used in the slave session time. Refining is_parallel_exec() to base on the rli's value; @ sql/rpl_rli_pdb.cc Fixing a c&p bug for relay-log name; @ sql/rpl_slave.cc removing ealier intruduced extra rli->slave_worker_is_error; relocating Worker related stuff from init at RLI constructor to the start slave workers; @ sql/sql_class.h removing explicit slave exec paral mode. @ sql/sys_vars.cc changing default 4 to 0 for slave_parallel_workers. Non-zero value means so many Worker threads is launched. Conversely zero is the sequential slave execution mode. Fixing the name of the server var: mts_partition_hash_soft_max. ------------------------------------------------------------ revno: 3223 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-01 19:08:21 +0200 message: wl#5569 MTS The limit conditions such as WQ len, total WQ:s size related changes. Also a new test file is added. @ mysql-test/suite/rpl/r/rpl_parallel_conf_limits.result new results file. @ mysql-test/suite/rpl/r/rpl_parallel_conflicts.result results updated. @ mysql-test/suite/rpl/t/rpl_parallel_conf_limits.test Testing two RAM usage by Workers limit parameters. @ mysql-test/suite/rpl/t/rpl_parallel_conflicts.test Converting an assert into wait for that condition. Todo: improve the test to let it run with slave_run_query_in_parallel. @ sql/log_event.cc limit condition (wq len, total wql sizes) related changes. fixing a compilation warn. @ sql/mysqld.cc renaming. @ sql/mysqld.h renaming. @ sql/rpl_rli.cc renaming. @ sql/rpl_rli.h s / slave_max_pending_jobs / opt_mts_slave_worker_queue_len_max / the new name is supposed to indicate the purpose of the entity more clearly. @ sql/rpl_slave.cc renaming. @ sql/sys_vars.cc renaming. ------------------------------------------------------------ revno: 3222 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-11-30 16:39:40 +0200 message: merging from from wl#5569 repo containing wl#5599 integration ------------------------------------------------------------ revno: 3221 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-11-30 16:02:15 +0200 message: wl#5569 MTS Fixing group_relay_log_name change propagation from C to W; Garbage collection in the Partition-to-Worker hash is added with a parameter of how many records in the hash are tolerated w/o checking of the usage counter. Adding C-W synchronization due to: - overall WQ:s data max - hitting the limit of a WQ length Adding Flow Control infrastructure with - level of the hungry Worker forcing Coordinator to distribute eagerly symmetrically a Worker whose load is more than 100 % - hungry level is considered as fed-up. - nap time for C in case all WQ:s lengths are above the level. - a weight param to the base nap as a function of the number of fed-up W:s. TODO: UNTIL to force sequential exec; To fix ROWS_QUERY_LOG_EVENT corner case; to fix commented out // if (!ev) delete ev; after wl#5599 is merged (ev->update_pos() is done). @ sql/log_event.cc changes due to FC and WQ:s data size and WQ-lenght synch-ions; @ sql/mysqld.cc placeholders for few mts user interfaces variables are added. @ sql/mysqld.h mts user interfaces variables are interfaced. @ sql/rpl_rli.cc Correcting a cast that otherwise would not let relay log change be seen by Worker. @ sql/rpl_rli.h A set of user options is reflected by new members of the central RLI. A user var propagates its value into RLI at slave sys startup and can't affect the running slave anymore until the slave is stopped. @ sql/rpl_rli_pdb.cc Garbage collection in the Partition-to-Worker hash. @ sql/rpl_rli_pdb.h Exetending Slave_jobs_queue::waited_overfill. and Slave_worker::wq_overrun_set. . Overfill is seen as the queue's property whereas wq_overrun_set is about C-W flow-control. @ sql/rpl_slave.cc Initialization of the mts user option in the central RLI is added. Fixing a cast; Todo about ROWS_QUERY_LOG_EVENT; Comments on UNTIL forcing the sequential exec; @ sql/sys_vars.cc A set of mts related user options is added. ------------------------------------------------------------ revno: 3220 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-11-27 17:36:50 +0200 message: wl#5569 Providing relay-log name for wl#5599. Protocol of action on the C and W sides is described in rpl_rli_pdb.h. Erroring out in case of parallel exec and ROWS_QUERY_LOG_EVENT. (todo: the native sequential mode for the event needs some revision, in particular `delete ev' shall happen *always* in rli->cleanup_context not in two places as of current). @ sql/log_event.cc Erroring out in case of parallel exec and ROWS_QUERY_LOG_EVENT; Deploying C role of handling relay-log name change; @ sql/rpl_rli_pdb.cc Providing relay-log name for wl#5599. Freeing allocated memory for relay-log name at the end of the group execution by Worker. @ sql/rpl_rli_pdb.h Protocol of action on the C and W sides is here. Removing current_binlog; Adding a pointer group_relay_log_name member to st_slave_job_group. ------------------------------------------------------------ revno: 3219 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-11-26 23:08:30 +0200 message: wl#5569 MTS Partitioning conflict detection and handling is implemented. A new option to run Query in parallel though incompatibly with Rows- case in that the default db not the actual db:s are used as the partition key. User interface gained the global var and the cmd line opt: slave_run_query_in_parallel (Welcome to the set! :-) @ mysql-test/suite/rpl/r/rpl_parallel_conflicts.result new tests result file is added. @ mysql-test/suite/rpl/t/rpl_parallel_conflicts.test Partitioning conflicts detection, handling basic initial test is added. @ sql/log_event.cc Refining parallel vs sequential decider to cover optional support for Query parallelization. @ sql/log_event.h Refining only_serial_exec() with providing hints through two new args. @ sql/mysqld.cc new Query limited parallelization support related. @ sql/mysqld.h new Query limited parallelization support related. @ sql/rpl_rli.h changed are due to new Query limited parallelization support. @ sql/rpl_rli_pdb.cc Conflict detection, waiting, partition release is implemented. ------------------------------------------------------------ revno: 3218 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-andrei timestamp: Fri 2010-11-26 16:15:37 +0000 message: There was a mismatching between the number of fields read and write and by consequence the read was failing for the Slave_worker. ------------------------------------------------------------ revno: 3217 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-11-25 11:03:54 +0200 message: wl#5569 merging with wl#5599 piece of code ------------------------------------------------------------ revno: 3216 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-11-25 10:47:39 +0200 message: wl#5569 Converting the prototype time db2w hash to be concurrent; Necessary inruduction of the least occupied Worker notion. It's currently computed as Worker having the least number of distributed partitions. Adding parallel support for Query_log_event; caution: 1. the session/default not the actual db as the key 2. may not have been tested against all use cases (e.g int vars) Fixing slave stop issues. @ sql/log_event.cc dding parallel support for Query_log_event that forces changes in both Coord and Worker scopes; a query can have both B and g parallel properties. @ sql/rpl_rli.h Changes necessary for the concurrent hash. Although east occupied defined as one having the least number of partitions atm, that may be too coarse so a method basing on distributed jobs can be deployed in a while. @ sql/rpl_rli_pdb.cc Least occupied defined as one having the least number of partitions atm (may be too coarse so a method basing on distributed jobs can be deployed in a while). @ sql/rpl_rli_pdb.h Changes necessary for the concurrent hash and the parallelizable query-log-event. @ sql/rpl_slave.cc rli->least_occupied_workers is prepared to be used in the least occupied calc as a finer option. Improving Workers stop. ------------------------------------------------------------ revno: 3215 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-11-22 20:57:13 +0200 message: wl#5569 extinding futher interfaces to wl#5599 with propagating future_event_relay_log_pos to the Worker exec context. @ sql/log_event.cc extract the stored future_event_relay_log_pos to copy to worker rli. @ sql/rpl_slave.cc Store future_event_relay_log_pos into event member. ------------------------------------------------------------ revno: 3214 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-11-20 19:23:42 +0200 message: wl#5569 MTS Worker pool start, stop, kills, error out implementation. @ mysql-test/extra/rpl_tests/rpl_parallel_load.test increasing the load param to get more reliable benchmarking data out of the test. @ mysql-test/suite/rpl/r/rpl_parallel_start_stop.result a new tests results. @ mysql-test/suite/rpl/t/rpl_parallel_start_stop.test worker pool start, stop, kills, errors testing. @ sql/log_event.cc removing a false and unnessary extention-arg to exit_cond(); Refining start-stop alg to base on the Worker private info, not the common info. In particular handshakes organized through magic value of length of the Worker private queue to is set by an initiator. @ sql/rpl_slave.cc Starting a worker thread with passing its Slave_worker * pointer. Simplifying and refining start-stop. @ sql/sql_class.h removing a false and unnessary extention-arg to exit_cond(); @ sql/sys_vars.cc Reckoning a magic value outside of the valid range for pending_jobs. ------------------------------------------------------------ revno: 3213 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-11-19 16:51:58 +0200 message: wl#5569 recovery interfaces for wl#5599 implementation. The essence of this patch is to provide GAQ object implimentation and valid life cycle. The checkpoint handler prior to call store methods of wl#5599 is supposed to invoke rli->gaq->move_queue_head(&rli->workers). See a simulation of that near ev->update_pos() of the mail sql thread loop. The checkpoint info is composed as instance of Slave_job_group to reside as rli->gap->lwm. Todo: uncomment +  // delete ev;  // after ev->update_pos() event is garbage once the real checkpoint has been done. Todo: the real implemention needs to take care of filing Slave_job_group::update_current_binlog as initially so at time of executing Rotate/FD methods. +  // experimental checkpoint per each scheduling attempt +  // logics of next_event() + +    rli->gaq->move_queue_head(&rli->workers); @ sql/log_event.cc Log_event::get_slave_worker_id() got shaped more to the final version with elements necessary to rli->gaq lify cycle. @ sql/log_event.h Log_event::mts_group_cnt is added as a part of GAQ index propagation path from C to W. @ sql/rpl_rli.h Further extension to RLI necessary to the distribution hash function (APH). @ sql/rpl_rli_pdb.cc Implementing circular_buffer_queue::*queue and few other methods incl ulong Slave_committed_queue::move_queue_head() the main concern for checkpoint. @ sql/rpl_rli_pdb.h Extending classes with few new member definitions necessary for GAQ interface / checkpoint / recovery. @ sql/rpl_slave.cc Simulation of the lwm-checkpoint and changes due to rpl_rli_pdb classes extensions. ------------------------------------------------------------ revno: 3212 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-11-18 16:50:54 +0200 message: wl#5569 wl#5599 Recovery related. Prototyping the worker RLI instantiation, to be elaborated on. ------------------------------------------------------------ revno: 3211 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-11-18 16:00:52 +0200 message: wl#5569 MTS Extending the wl#5563 prototype gradually. This commit addresses: 1. recovery interface (a new Worker rli plus rli->gaq and pseudo-code for checkpoint to update GAQ and the central RLI recovery table. Wrt rli, C and W execute do_apply_event(c_rli) where c_rli is the central instance. C executes update_pos(c_rli), but W update_pos(w_rli). others: - decreased processing time for rpl_parallel, serial. @ sql/log_event.cc Enhance Log_event::get_slave_worker_id() to classify events by set of parallelization properties; Presence of a property in an event forces some actions both on C and W side. en_queue etc are prepared to turn into circular_buffer_queue methods. Pseudo-coded numerious todo:s wrt to low-level-design implementation. Deployed changes due to Worker private rli. Annotated on Deferred Array for B,p,r property events. . delete ev is moved from C to W which is fault-prone but it could not be kept any longer as a part of de_queue() that transits into cir_buf_queue class. @ sql/log_event.h removed `soiled' that was used to make delete ev run safely. Added Log_event methods identifying the parallelization properties, incl - contains_partition_info() to identify events containing info to be processed by the partition hash func - starts,ends_group() - also updated the list of only_serial(). @ sql/rpl_rli.cc Only Coordinator can destroy Workers dynarray; Relay_log_info::get_current_worker() turned out to become more complicated, see comments; Reminder to migrate rli->future... into  ev-> future_event_relay_log_pos which would make Worker to find the value out the event's context; Prototyped //  w->flush_info() in stmt_done; @ sql/rpl_rli.h The worker RLI has `this_worker' pointing to the actual worker instance. @ sql/rpl_rli_pdb.cc Annotated with fine details APH etc implementation. @ sql/rpl_rli_pdb.h Trasformed earlier queue struct into a family of classes. Recovery interface: last_group_done_index of Slave_worker to be filled in with an index of GAQ queue by W. To poll the value by C at checkpoint. Added CGEP to W context (sim to CGAP of C). @ sql/rpl_slave.cc Simplified the Worker poll. Deployed worker rli initialization. Recovery: rli->gaq is instantiated by C at worker poll activization. Recovery: pseudo-code for checkpoint in next_event(). @ sql/sys_vars.cc editted help lines for slave_max_pending_jobs. ------------------------------------------------------------ revno: 3210 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2010-11-14 11:55:32 +0000 message: Post-push fix for WL#5599. ------------------------------------------------------------ revno: 3209 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-11-12 17:58:12 +0000 message: Post-push fix for WL#5599. ------------------------------------------------------------ revno: 3208 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-11-11 11:53:01 +0000 message: WL#5599 The patch changed the handler's functions, i.e. init_info, check_info, flush_info, remove_info and end_info and the related private member functions, in both file and table handlers, to accept an index that identifies the information that will be read or written. This is necessary now because the handlers will be used by the workers to read and write information from file(s) and table and there may be several workers running at the same time and thus an index is used to identify the worker that is accessing information. This change is also necessary for the multi-master replication as information from each master must be uniquely identified. @ sql/binlog.cc Changed the calls to init_info, check_info, flush_info, remove_info and end_info and the related private member functions. @ sql/log_event.cc Changed the calls to init_info, check_info, flush_info, remove_info and end_info and the related private member functions. @ sql/rpl_constants.h Introduced an array and a variable that states the array's size and are used as parameters to init_info, check_info, flush_info, remove_info and end_info. . This is ok for now as we assume a single master and uses slave's id to identify entries in a system table, if there is any. However, this code needs to be changed when we start handling multi-master replication. @ sql/rpl_info.cc Introduced an array and a variable that states the array's size and are used as parameters to init_info, check_info, flush_info, remove_info and end_info. . This is ok for now as we assume a single master and uses slave's id to identify entries in a system table, if there is any. However, this code needs to be changed when we start handling multi-master replication. @ sql/rpl_info.h Changed the calls to init_info, check_info, flush_info, remove_info and end_info and the related private member functions. @ sql/rpl_info_factory.cc Changed the calls to init_info, check_info, flush_info, remove_info and end_info and the related private member functions. . Removed static references to field indexes used as primary key. @ sql/rpl_info_factory.h Removed static references to field indexes used as primary key. @ sql/rpl_info_file.cc Changed the calls to init_info, check_info, flush_info, remove_info and end_info and the related private member functions. @ sql/rpl_info_file.h Changed the calls to init_info, check_info, flush_info, remove_info and end_info and the related private member functions. @ sql/rpl_info_handler.h Changed the calls to init_info, check_info, flush_info, remove_info and end_info and the related private member functions. @ sql/rpl_info_table.cc Changed the calls to init_info, check_info, flush_info, remove_info and end_info and the related private member functions. . Changed the calls to find_info_for_server_id. @ sql/rpl_info_table.h Changed the calls to init_info, check_info, flush_info, remove_info and end_info and the related private member functions. @ sql/rpl_info_table_access.cc Changed the funciton find_info_server_id in order to put the cursor at a row identified by uidx which is an array of fields that composes a primary key. . The name of the function was also changed to reflect the new behavior. @ sql/rpl_info_table_access.h Changed the funciton find_info_server_id in order to put the cursor at a row identified by uidx which is an array of fields that composes a primary key. . The name of the function was also changed to reflect the new behavior. @ sql/rpl_mi.cc Changed the calls to init_info, check_info, flush_info, remove_info and end_info and the related private member functions. . Moved the call to handler->flush_info from write_info to flush_info in order to avoid passing uidx and idx as parameters. @ sql/rpl_mi.h Changed the calls to init_info, check_info, flush_info, remove_info and end_info and the related private member functions. @ sql/rpl_rli.cc Changed the calls to init_info, check_info, flush_info, remove_info and end_info and the related private member functions. @ sql/rpl_rli.h Changed the calls to init_info, check_info, flush_info, remove_info and end_info and the related private member functions. @ sql/rpl_rli_pdb.cc Changed the calls to init_info, check_info, flush_info, remove_info and end_info and the related private member functions. . Moved the call to handler->flush_info from write_info to flush_info in order to avoid passing uidx and idx as parameters. @ sql/rpl_rli_pdb.h Changed the calls to init_info, check_info, flush_info, remove_info and end_info and the related private member functions. @ sql/rpl_slave.cc Changed the calls to init_info, check_info, flush_info, remove_info and end_info and the related private member functions. ------------------------------------------------------------ revno: 3207 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-11-10 10:57:13 +0000 message: Refactory to start work on WL#5599. ------------------------------------------------------------ revno: 3206 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-11-09 13:34:18 +0000 message: Removed mysql-test/collections/mysql-next-mr.crash-safe.* in the WL#5569. ------------------------------------------------------------ revno: 3205 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-11-09 13:04:14 +0000 message: merge mysql-next-mr.crash-safe --> mysql-next-mr-wl5569 Conflicts: . sql/CMakeLists.txt . sql/Makefile.am . sql/sql_class.h . sql/rpl_slave.cc ------------------------------------------------------------ revno: 3204 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-11-09 11:39:37 +0000 message: merge mysql-next-mr-wl5563-labs --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3203 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-17 23:33:37 +0300 message: wl#5563 simplifying memory handling for the Coor-Workers transport to avoid sporadic crashes ------------------------------------------------------------ revno: 3202 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-17 21:19:56 +0300 message: wl#5563 leaving out a fine garbage collection. That task is unnessary to solve at prototyping time. Update-pos routine to be implemented is going to eliminated that piece of code ------------------------------------------------------------ revno: 3201 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-17 20:38:35 +0300 message: wl#5563 Extending the tests base to split the former rpl_parallel into two to run in serial exec mode as well. @ sql/log_event.cc Condition-out few debug purpose print:s. ------------------------------------------------------------ revno: 3200 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-17 11:49:00 +0300 message: wl#5563 improved test; fixed a delete issue that was used to crash; added @@global.slave_local_timestamp to fill in timestamp col slave clock value. Performance growth can be seen through the test. todo: merge with Alfranio work on hashing and dyn alloc of PFS obj:s. ------------------------------------------------------------ revno: 3199 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Wed 2010-09-15 14:51:49 +0300 message: wl#5563 tests for the wl. Number of workers and iterations can be tuned. todo: convert as param:s to pass to the test through mtr ------------------------------------------------------------ revno: 3198 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Mon 2010-09-13 18:22:41 +0300 message: wl#5563 adding an ingeneous no-stress-attempting-yet test that also fired an assert. Refined the Worker instance ref computing because cleanup_context() is executed by the sql-thread the coordinator as well ------------------------------------------------------------ revno: 3197 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Mon 2010-09-13 13:15:38 +0300 message: wl#5563 Rows-event parallelization basically is implemented although tested shallowly. Write access to rli central stuct by workers may not be eliminated fully at this phase. E.g that relates to errors. todo: to prove rli gets out of Worker scope todo: to provide a stress test @ sql/log_event.cc changing from the direct to api-based access to RBR-applying context. @ sql/rpl_rli.cc implementation of RBR-applying context api. @ sql/rpl_rli.h copying RBR applying part of context info from rli to the Worker class; RLI gets accessor methods to RBR applying context to choose a right object from either the central (RLI) or the Worker repository. ------------------------------------------------------------ revno: 3196 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Sat 2010-09-11 17:00:08 +0300 message: wl#5563 adding Rows-event limitted to one Worker support. Deferred deletion did not check emptyness of the list ------------------------------------------------------------ revno: 3195 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-10 20:36:07 +0300 message: wl#5563 correcting comments to indicate less limitations ------------------------------------------------------------ revno: 3194 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-10 20:32:39 +0300 message: WL#5563 Prototype for Slave parallelized by db name More progress to the WL in that the STMT binlog-format works while the conceptual limits are held. That is no query/transaction is allowed to deal with more than one db. Addressed a complication in that update pos method that is run by Coordinator belongs to Log_event hierarchy and therefore the event deletion now by Worker must be careful. Todo: 1. (High prior) fix Row-format complications 2. (Hight prior) Elaborate on the hash function to be a function on db text name 3. (Optional)  Consider moving update_pos to the RLI class to get rid of the delete logics complication. How-to-use: The instuction can be found in comments of the previous commit, see there for more details. In brief though, the db names have to follow a pattern: `test[0-9]'. E.g test0, test1, test2, test3 for the default four Worker threads. Slave side has to set @@global.slave_exec_mode=PARALLEL; before START SLAVE. @ sql/log_event.cc Hashing function is refined to circumvent lack of db info in associated with a query event internal events; Executed event can't be just delete-d by Worker since SQL-thread needs it to update positions. Hence a piece of code added to defer delete till time SQL has marked the event as `soiled'. @ sql/log_event.h A new member to allow deletion of an executed event. @ sql/rpl_rli.h A new member to Worker class for deferred delete of the exec-d event. A new member to RLI class to memorize the last time assigned worker. @ sql/rpl_slave.cc Setting marks on event by SQL coord thread. ------------------------------------------------------------ revno: 3193 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Thu 2010-09-09 21:43:16 +0300 message: WL#5563 Prototype for Slave parallelized by db name This is an intermediate commit that indicates some progress. Namely, the worker pool operates correctly and with signs of scalable performance. How to test: connection master; set @@global.binlog_format=statement; connection slave; set @@global.slave_exec_mode=PARALLEL; set @@global.binlog_format=mixed; show processlist; => IO, SQL threads + 4 workers by default change master to ... connection master; create database test0; create database test1; create database test2; create database test3; # create databases with magic names ""test[0-9]+"", where the number will index # a worker. create database test0; create database test1; create database test2; create database test3; # create tables. they are only of MyISAM type for now use test0; create table tm_1(a int, b int) engine=myisam; use ... # DML on tables: use test[0-3]; insert into tm_1 values (1,0); ... ... connection slave; # monitor CPU (visually this time: top etc) # check correctness e.g select count(*) from test[0-3].tm_1; connection master; select count(*) from test[0-3].tm_1; @ sql/log_event.cc mts coordinator (C) and worker (W) code is added. C - fills in a job assignment and queues it to a selected via get_slave_worker_id (todo: to elaborate on) W private queue; W - spins in wait-extract-exec loop of slave_worker_exec_job(); Redefining Log_event::apply_event() to continue serving as the usual serial applier and making it to distribute events between Workers. @ sql/log_event.h Log_event accepted get_slave_worker_id() to assign a worker basing on hashing function implemented in the method, only_serial_exec() to filter out not-parallelizable events; do_apply_event() made of public scope; @ sql/mysqld.cc PSI interfaces required to add keys for all mutex:s, cond:s that MTS introduces to sources. Only for the prototype implementation declaration contain explicit max index in arrays (16) - to be elaborated on in following patches. `slave_parallel_workers' as placeholder of the value for a new glob sysvar is added. @ sql/mysqld.h externalization to access `slave_parallel_workers' and the PSI keys in other parts of the code. @ sql/rpl_rli.cc Instantiations, initial allocations and destruction for RLI members added by MTS; @ sql/rpl_rli.h Definitions for the Worker, its communication with Coordinator and gathering statistics; is_parallel_exec() is a compromize because of unreported yet bug (see comments). @ sql/rpl_slave.cc Added the worker pool initialization, termination. Added the thread handler for Worker. @ sql/rpl_utility.h macros that can be used in near future are added. @ sql/sql_class.h More values to the slave_exec_mode set (which mistakenly is defined as sys_var_enum); refining exit_cond() to allow the mutex not be released. The default behaviour when one arg supplied is not changed. @ sql/sys_vars.cc A new global sysvar for number of workers. Is supposed to be updatedable in run time. todo: (bug report) notice static enum Slave_exec_mode - it should be Sys_var_*set*. ****** wl#5569 MTS fixing explicit error code in rpl_parallel_start_stop that changed due to merge with trunk. ****** WL#5596 MTS Here is the total cset combining all revisions done since Sep 2010. Comments from the original commits are pasted in reverse chronological order. ------------------------------------------------------------ revno: 3364 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-08-18 17:09:22 +0300 message: wl#5569 MTS Refining rpl_rotate_logs that could not produce deterministic output. The list of binlogs contained one binlog more than expected. ------------------------------------------------------------ revno: 3363 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-08-18 14:56:01 +0300 message: updating result files that were left incorrect by the last merge. ------------------------------------------------------------ revno: 3362 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-08-18 14:44:59 +0300 message: wl#5569 MTS Failure in recovery when binlog-checksum is active. The reason of the failure was in that parsing of relay log by MTS recovery gaps computing did not make sure to use the relay-log own FormatDescriptor events that contain checksumming info for all events in the log. Fixed with taking care to find out the checksum algorithm for every relay log as the first step of MTS recovery gaps computing. ------------------------------------------------------------ revno: 3361 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-08-17 11:21:23 +0300 message: merge from trunk forced to resolve few semantical conflicts caused by changes in THD::enter_cond() of the trunk. ------------------------------------------------------------ revno: 3360 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-07-27 08:56:14 +0100 message: Fixed failure in test rpl_mts_check_concurrency when running in the mts collection. ------------------------------------------------------------ revno: 3359 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-26 19:46:41 +0100 message: Added a test case that checks if MTS allows to concurrently access the replication tables, and as such, concurrently commit transactions that update different databases. ------------------------------------------------------------ revno: 3358 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-22 20:08:43 +0100 message: Configured rpl_parallel_switch_sequential to run in row and mixed mode to avoid cluttering the error log with messages on unsafe execution. ------------------------------------------------------------ revno: 3357 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-22 19:02:14 +0100 message: This patch contains the following fixes: . Removed suppressed warning introduced in the wrong test case (i.e. rpl_corruption) and put it in the correct one (i.e. rpl_row_corruption). . Introduced variable to avoid clutering the error log with several warning messages on unsafe execution. ------------------------------------------------------------ revno: 3356 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-22 11:01:12 +0100 message: This patch has the following changes: . Specific directories were created for the MTS runs in the default.push. . Warning message was suppressed in the rpl_corruption.test. . Annoying debug outputs were removed from the error log. However, this is a temporary solution as it forbids to enable traces. ------------------------------------------------------------ revno: 3355 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-07-20 11:56:40 +0100 message: merge mysql-trunk --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3354 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-19 22:26:30 +0300 message: wl#5569 MTS valgrind reported a stack on rpl_savepoint. The problem appears to be in that at computing slave_sql_running_state in show_mater_info() the sql thread proc_info pointer could refer to a value in a stack that has already gone. Fixed with making proc_info to point to a string literal. ------------------------------------------------------------ revno: 3353 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-19 17:46:43 +0100 message: Suppressed warning messages that could potentially cause problems while running mts crash safe test cases. ------------------------------------------------------------ revno: 3352 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-07-18 21:46:45 +0300 message: wl#5569 MTS Cosmetic changes are done to address readability and clearness of source code of the MTS patch. ------------------------------------------------------------ revno: 3351 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-07-18 14:52:44 +0300 message: wl#5569 MTS Inadvertently introduced hunk two rev:s back is reverted to please rpl_*_mts_crash_safe. ------------------------------------------------------------ revno: 3350 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-07-17 00:51:45 +0300 message: wl#5569 MTS fixing build issue for embedded. Public visibility for Rows_log_event::do_apply_event() is restored. ------------------------------------------------------------ revno: 3349 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-07-16 20:08:31 +0300 message: wl#5569 MTS The patch contains improvements after code review. Changes are mostly consmetic. ------------------------------------------------------------ revno: 3348 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-07-16 02:11:11 +0300 message: bug#12755663 MTS: RPL_CIRCULAR_FOR_4_HOSTS FAILS: CANT EXECUTE THE CURRENT EVENT GROUP MTS stopped with an error in the middle of the test. The reason is that a group of events from the slave itself was processed partly to modify the group position. In the following restart the wrong group bondary made slave either to error out or assert. Fixed with locating a possible race condition allowin Coordinator to ignore actual failed status of a Worker. So in the case of the test, the slave server group can't be started. Notice, this is a trial patch since I can't catch the failure on available to me hosts at all. ------------------------------------------------------------ revno: 3347 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-07-14 12:40:06 +0300 message: WL#5569 MTS further extensive rpl_circular_for_4_hosts exersices with --repeat 10 --parallel=8 revealed a race condition in that Coordinator might miss to catch not-running status for a Worker. That made Coordinator to skip only a part of a group of the slave server own events so the slave stops at not the bondary of a group. Fixed with moving marking of the errored-out Worker as failed prior to its APH entries release. TODO: notice there can be a possibility to stop at not the boundary due to graceful STOP SLAVE if one is run at time of skipping self-originated events. However this issue belongs to STS and might be similar with BUG@12604951 and BUG@12728160. ------------------------------------------------------------ revno: 3346 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-07-14 08:03:55 +0100 message: Post-push fixes for WL#5569 Injecting faults while updating a myisam table requires to flush the changes before committing suicide. So we have introduced the follwing code: DBUG_EXECUTE_IF(""crash_after_commit_and_update_pos"", -                       DBUG_SUICIDE();); +           sql_print_information(""Crashing crash_after_commit_and_update_pos.""); +           flush_info(TRUE); +           DBUG_SUICIDE(); Besides we improved some comments. ------------------------------------------------------------ revno: 3345 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-07-13 16:23:57 +0100 message: WL#5569 ------------------------------------------------------------ revno: 3344 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-07-13 00:10:43 +0300 message: wl#5569 MTS merge trunk -> wl5569-tree ------------------------------------------------------------ revno: 3343 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-12 23:36:17 +0300 message: wl#5569 MTS adding suppression due to expected warning to rpl_circurlar_for_4_hosts; decreasing a loop limit in rpl_parallel_switch_sequential in case of statement format. ------------------------------------------------------------ revno: 3342 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-12 14:46:23 +0300 message: WL#5569 MTS Fixing code and test due to rpl.rpl_circular_for_4_hosts  mismatch failure, like http://pb2.norway.sun.com/?action=archive_download&archive_id=3608382. The reason of the mismatch was that when having two group of events to execute, the first for a Worker and the 2nd for Coordinator, Coordinator waited for the 1st group completion but did not verify success of synchronization. So in a case of the failed applying of the 1st group processing of the 2nd could find an inconsistent state to end up with a segfault (even though only the mismatch has been seen so far). ------------------------------------------------------------ revno: 3341 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-07-10 22:40:01 +0100 message: Avoiding busy waiting when running mts recovery tests. ------------------------------------------------------------ revno: 3340 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-07-09 23:11:58 +0100 message: Removed --slave-checkpoint-period from MTS test cases. ------------------------------------------------------------ revno: 3339 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-07-09 23:08:07 +0100 message: Improved test cases for the WL#5569. ------------------------------------------------------------ revno: 3338 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-08 22:40:52 +0300 message: wl#5569 MTS The patch refines logics of applying phase of MTS-recovery to always applying events that are for Coordinator; fixes few tests to make them passable on PB; makes GAQ size to be of checkpoint_group value. ------------------------------------------------------------ revno: 3337 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-08 07:54:34 +0100 message: Reduced the timeout period to run the checkpoint routine by setting slave-checkpoint-period to 30. ------------------------------------------------------------ revno: 3336 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-08 07:44:35 +0100 message: merge mysql-trunk --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3335 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-07-06 12:46:05 +0300 message: wl#5569 MTS refining wait for db-hash entry release at event distribution. The graceful STOP is not accepted at this point so Coordinator continues to stay in a loop. ------------------------------------------------------------ revno: 3334 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-05 20:43:04 +0300 message: bug#12719875 possible MTS recovery issue. MTS stopped with an error after failing to apply an event. It turned out that the event was sceduled incorrectly due to earlier stop by Single-Threaded Slave not at the group boundary but rather in the middle of it. Fixed with forcing CREATE..SELECT be logged as two groups. The CREATE-TABLE group is surrounded with its own BEGIN/COMMIT braces. ------------------------------------------------------------ revno: 3333 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-07-04 18:14:09 +0300 message: wl#5569 MTS Adding a rule to run PB with all suites in MTS with binlog-format ROW. ------------------------------------------------------------ revno: 3332 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-07-03 23:29:34 +0300 message: wl5569 MTS cleanup in one file. ------------------------------------------------------------ revno: 3331 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-07-03 23:16:02 +0300 message: wl5569 MTS bzr commit mail address changed; a minor cleanup to make mts_is_worker() with const argument; releasing a test to run in MTS. ------------------------------------------------------------ revno: 3330 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-07-02 08:58:56 +0100 message: Fixed use of the performance schema in the replication code and concurrency issue in the IO Thread. In particular, the IO Thread was calling flush_master_info without grabbing locks. ------------------------------------------------------------ revno: 3329 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-01 16:41:35 +0300 message: wl5569 MTS merging from the main repo. ------------------------------------------------------------ revno: 3328 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-01 15:48:25 +0300 message: wl#5569 MTS the final cleanup patch. There are few glitches that were considered as tolerable at least for time of the total wl's code is being reviewed. That includes: - no support to old load-data events - no support for FK to add to the list, there are few places in the patch that suggests to deploy error branches each time flush_info() is called. ------------------------------------------------------------ revno: 3327 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-01 13:16:52 +0300 message: wl#5569 MTS The patch cleans up some host of code. ------------------------------------------------------------ revno: 3326 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-28 11:30:18 +0300 message: wl#5569 MTS replacing views with regular tables for consistency verification in rpl_parallel_innodb. Also a minor cleanup in rpl_parallel is done. ------------------------------------------------------------ revno: 3325 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-27 20:31:45 +0300 message: wl#5569 MTS Cleanup and addressing sporadic rpl_temp_table_mix_row failure in post-execution mtr.check_testcase(). The check of the test failure was caused by faulty optimization in avoiding to migrate temporary tables from Coordinator to Workers in case of rows-event assignement. while it's correct with the homogenous rows-event only load, the mixture can fail. Fixed with removing the optimization so map_db_to_worker() always relocates which is somewhat suboptimal and should be improved in future. ------------------------------------------------------------ revno: 3324 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-27 13:12:52 +0100 message: Ensured that updates to the worker_info_repository are transactional and fixed the slave_checkpoint_group_basic test case. ------------------------------------------------------------ revno: 3323 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-26 13:02:59 +0100 message: Fixed test case. ------------------------------------------------------------ revno: 3322 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-06-25 15:14:24 +0100 message: Introduced test case for recovery with MTS and fixed bugs in recovery. ------------------------------------------------------------ revno: 3321 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-24 15:38:19 +0300 message: wl#5569 MTS This patch makes a bit of cleanup, addresses one memory-allocation todo and completes fixing valgrind report (rpl_parallel_start_stop) due to strings allocation in Slave_job_group items. ------------------------------------------------------------ revno: 3320 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-24 12:38:34 +0300 message: wl#5569 MTS this patch completes the previous one to fixes a result file and make the innodb specific test verification to base on tables not views. ------------------------------------------------------------ revno: 3319 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-24 00:11:22 +0300 message: wl#5569 MTS this is an exploratory patch to sort out if verification method what was based on views has its own not related to mts flaw. The patch calls verification macro on the tables that required some adjustment. ------------------------------------------------------------ revno: 3318 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-06-23 07:56:15 +0300 message: wl#5569 MTS fixing results of mysqld--help-win. ------------------------------------------------------------ revno: 3317 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-22 19:20:40 +0100 message: merge mysql-next-mr-wl5569 (local) --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3316 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-22 19:17:43 +0100 message: In some platforms, such as Windows, thread's wait time is stored in 100ns units. However, when computing the difference between two values, the result value was not multiplied by 100. Besides, there was a casting problem when the aforementioned result value was assigned to an ulong. ------------------------------------------------------------ revno: 3315 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-22 18:54:23 +0100 message: Fixed how mts copes with recovery. ------------------------------------------------------------ revno: 3314 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-21 19:10:54 +0300 message: wl#5569 MTS Fixing valgrind warnings. ------------------------------------------------------------ revno: 3313 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-21 18:15:43 +0300 message: wl#5569 MTS rpl_parallel_start_stop.test could fail sporadicaly with timeout. ------------------------------------------------------------ revno: 3312 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-20 23:21:56 +0100 message: merge mysql-next-mr-wl5569 (local) --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3311 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-20 23:19:06 +0100 message: Fixed error when computing the Lower-Water-Mark. If two or more jobs were removed from the Group of assigned jobs and one of the jobs had a non-empty group relay log but the last one had an empty group relay log. The Lower-Water-Mark was not correctly updated, because the algorithm assumed that the group relay log was null. ------------------------------------------------------------ revno: 3310 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-20 11:52:44 +0100 message: Fixed valgrind errors. Slave_job_group was silently being cast to LOG_POS_COORD while calling sort_dynamic(&above_lwm_jobs, (qsort_cmp) mts_event_coord_cmp) and by consequence mts_event_coord_cmp(LOG_POS_COORD *, LOG_POS_COORD *). This had two problems: . The first two entries in the Slave_job_group were not a pointer to a char * and my_offset. . Even if the first two entries were char * and my_offset, such casting could lead to alignment problems. To fix the problem, we avoid this casting. ------------------------------------------------------------ revno: 3309 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-19 19:14:50 +0300 message: wl#5569 MTS fixing slave_transaction_retries_basic_64.result ------------------------------------------------------------ revno: 3308 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-19 16:11:25 +0300 message: wl#5569 MTS fixing tests. ------------------------------------------------------------ revno: 3307 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-19 12:33:36 +0300 message: wl#5569 MTS Fixing rpl.rpl_mixed_binlog_max_cache_size that revealed incorrect asynchronous handling of a Rotate event which does not split the current group and therefore has to be executed after all previously scheduled events. Fixing sensetivity of two other tests to mtr's invocation environment that includes inital values of slave_parallel_workers and slave_transaction_retries. ------------------------------------------------------------ revno: 3306 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-19 09:04:19 +0100 message: Fixed some windows failures. ------------------------------------------------------------ revno: 3305 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-06-18 19:58:21 +0100 message: Fixed some recovery issues. ------------------------------------------------------------ revno: 3304 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-17 21:01:58 +0300 message: wl#5569 MTS fixing tests and a segfault at the end of handle_slave_sql() happened after worker initialization failed (e.g rpl_row_log on win). ------------------------------------------------------------ revno: 3303 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-17 18:34:16 +0300 message: wl#5569 MTS fixing tests. ------------------------------------------------------------ revno: 3302 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-17 14:00:41 +0300 message: wl#5569 MTS fixing rpl_row_basic_3innodb similarly to the previous patch. ------------------------------------------------------------ revno: 3301 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-17 13:51:59 +0300 message: wl#5569 MTS fixing few tests. 1. Policy is implemented for reacting with a warning in a case of failing worker leaves the total slave state with gaps thereby inconsistent. 2. Two tests that were used to time out due to reset master/slave was disabled in there. ------------------------------------------------------------ revno: 3300 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-17 02:24:59 +0100 message: Removed unnecessary test cases and augment others in order to test recovery. ------------------------------------------------------------ revno: 3299 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-06-16 19:46:22 +0300 message: wl#5569 MTS fixing slave_parallel_workers_basic and rpl_stop_middle_group which cant run in MTS ------------------------------------------------------------ revno: 3298 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-06-16 11:29:53 +0300 message: wl#5569 MTS adding new tests to sys_vars.\ ------------------------------------------------------------ revno: 3297 committer: Luis Soares <luis.soares@oracle.com> branch nick: mysql-trunk-wl5569 timestamp: Thu 2011-06-16 01:41:32 +0100 message: WL#5569 Adding a global suppression for the warning that may appear when stopping the slave sql thread in the middle of a group. This should affect MTS mode only. ------------------------------------------------------------ revno: 3296 committer: Luis Soares <luis.soares@oracle.com> branch nick: mysql-trunk-wl5569 timestamp: Thu 2011-06-16 01:40:41 +0100 message: WL#5569 Renames worker-info-repository to slave-worker-info-repository in some tests option files. ------------------------------------------------------------ revno: 3295 committer: Luis Soares <luis.soares@oracle.com> branch nick: mysql-trunk-wl5569 timestamp: Thu 2011-06-16 01:32:37 +0100 message: WL#5569 More test fixes. Removing remaining prefixes 'mts' from mts variables, which have been renamed recently. ------------------------------------------------------------ revno: 3294 committer: Luis Soares <luis.soares@oracle.com> branch nick: mysql-trunk-wl5569 timestamp: Thu 2011-06-16 00:27:20 +0100 message: WL#5569 Fixing rpl_parallel result file. ------------------------------------------------------------ revno: 3293 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-15 20:41:33 +0300 message: wl#5569 MTS correcting --slave-parallel-workers in few more files ------------------------------------------------------------ revno: 3292 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-15 20:31:46 +0300 message: wl#5569 MTS correcting --slave-parallel-workers in collections/default.push ------------------------------------------------------------ revno: 3291 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-15 20:12:11 +0300 message: wl#5569 MTS Cleanup, including 1. decreasing number and renaming system variables. Important for debugging command line options are replaced with reasonble constant values and only necessary are retained. 2. Small encapsulation in ha_blackhole.cc is done. ------------------------------------------------------------ revno: 3290 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-15 15:59:23 +0100 message: Fixed replication valgring failures caused by the MTS. ------------------------------------------------------------ revno: 3289 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-14 21:23:13 +0300 message: wl#5569 MTS wl#5754 Query event parallel execution Fixing failing tests and a failure in gathering accessed databases that was caused by a recent merge from trunk. ------------------------------------------------------------ revno: 3288 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-14 13:35:20 +0300 message: merge from trunk ------------------------------------------------------------ revno: 3287 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-14 12:27:38 +0300 message: wl#5569 MTS Fixing failing tests due to a. a flaw in `isolated parallel' mode implementation. Isolation applies to a group of event rather than to an instance. And event that contains over-max accessed db:s or event from Old master trigger marking the current being scheduled group. Such group will be executed having all prior scheduled done and nomore will be scheduled until the group is done. b. Notification to Coordinator about errored-out Worker is corrected. ------------------------------------------------------------ revno: 3286 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-12 22:33:32 +0300 message: wl#5569 MTS making default.push to run rpl suite with non-default --mts-slave-parallel-workers > 0 in all three format/mode (row,stmt, mixed). The default is run for all suites in mixed mode and rpl suites with row+ps, stmt formats. ------------------------------------------------------------ revno: 3285 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-12 22:05:05 +0300 message: wl#5569 MTS manual merge with few fixes for segfault of the last merge from the trunk etc, compilation issue on embedded. ------------------------------------------------------------ revno: 3284 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-06-09 18:35:59 +0100 message: Post-fixes for merge. Fixed compilation in Windows and removed an used options. ------------------------------------------------------------ revno: 3283 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-06-09 16:27:47 +0100 message: merge mysql-trunk --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3282 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-06 13:51:19 +0300 message: wl#5569 MTS STOP SLAVE now stops consistently w/o gaps, KILL shall be used for an urgent stop, an error case behaves like the killed. For instance, a Worker errors out, it sends KILL to Coordinator through THD::awake(), and Coordinator kill the rest through setting a special Worker-running status to killed (which breaks the read-exec loop of a Worker). ------------------------------------------------------------ revno: 3281 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-05 20:01:51 +0300 message: wl#5569 MTS More cleanup, fixes due to found issues when running tests, some improvements incl in stopping Workers to make routine to distinguish between killed and gracefully stopped cases so in the end STOP SLAVE will guarantee consistent state (some todo remains still). ------------------------------------------------------------ revno: 3280 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-05-30 13:05:07 +0300 message: WL#5569 MTS WL#5754 Query event parallel applying ----------------------------------------------------------------- Aggregating 7 commits that are not pushed yet to the wl5569 repo. Find comments for each cset below. ------------------------------------------------------------------ The current patch addresses concurrent updating slave_open_temp_tables status counter. The former declaration of the underlying server variable is changed from ulong to int32. While that might affect (shrink) the actual range, there has been no specified range and now after the number of bits is the same on all platforms the range cat be set to be [0, max(int32)] ****** wl#5569 MTS Wl#5754 Query event parallel appying wl#5599 MTS recovery The patch includes some cleanup, including one for temp tables support, realization of few todo:s. ****** wl#5569 MTS wl#5754 Query event parallel applying More cleanup is done; Fixing temp tables manipulation. Asserting an impossible to support use case of group of events not wrapped with BEGIN/COMMIT. Todo: recognize old master binlog to refuse to run in parallel. ****** wl#5569 MTS Implementation of giving out the applier role to Worker for all cases but ones dealing with the Coordinators state. That includes Query event with over-max-db:s and Load-data related events. The current patch also makes old master binlog be handled by MTS though sometimes e.g for Query event to switch to the sequential mode. Fixing a race condition making C to wait endlessly if a Worker has exitted due to its applying error. ****** wl#5569 MTS correcting an assert that was used to fire as warned in the previous commit. Parallel feature tests pass now. ****** wl#5569 MTS This patch contains cleanup and simplification of logics of handling some events sequentially by Coordinator and adds memory-allocation failure branch to workers starting routine. ****** wl#5569 MTS An intermediate patch to address few issues raised by reviewers. To sum up, it's about cleanup and logics simplification of event distribution to Worker and consequent actions. Some efforts were paid to support Old Master Begin-less group of events. ------------------------------------------------------------ revno: 3279 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-05-24 17:29:35 +0300 message: WL#5569 MTS WL#5754 Query parallel appying Changing implementation of temporary tables support in MTS. Cleanup, fixing few todo:s and few potential issues found. ------------------------------------------------------------ revno: 3278 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-05-19 12:36:28 +0300 message: wl#5569 MTS Support for ROWS_QUERY_LOG_EVENT is added. It required refactoring of its handling in the canonical sequential mode. The event life suggests its behavior similar to objects associated with Table_map, in particural, its destoying to occur at the end-of-statement time. Tested against existing ROWS_QUERY_LOG_EVENT feature tests incl rpl_row_ignorable_event in both sequential and parallel mode. ------------------------------------------------------------ revno: 3277 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-05-16 22:43:58 +0300 message: wl#5569 MTS Simplifying Coordinator-Worker interfaces. In essence after this patch Worker execute events in its private context (class Slave_worker :public Relay_log_info). The only exception is Query referring to temporary table. The temp:s are maintained in the Coordinator's ""central"" rli; removing some dead code; performing a lot of cleanup. There are few todo items incl: 1. To implement several todo:s scattered across MTS' code and tests (e.g to restore protected for few members of RLI of rpl_rli.h); 2. to cover Rows_query_log_event that currently can cause hanging (e.g rpl_parallel_fallback) 3. To sort out names of classes based on Rpl_info, possibly remove  Rpl_info_worker ------------------------------------------------------------ revno: 3276 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-05-06 21:33:32 +0300 message: wl#5569 MTS improving benchmarking test. ------------------------------------------------------------ revno: 3275 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-04-06 15:51:58 +0300 message: wl#5569 MTS Statistics for Workers and Coordinator incl waiting times, sleeping is reported now into the error log as slave stopping time. ------------------------------------------------------------ revno: 3274 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-04-05 19:26:37 +0300 message: wl#5569 MTS restoring previous 4 default workers that rpl_parallel works with. ------------------------------------------------------------ revno: 3273 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-04-03 13:07:30 +0300 message: wl#5569 MTS Benchmarking related patch uniforms rpl_parallel to be run with arbitrary number of workers, db:s, tables, etc. TODO: to restore the final constinency check which is given out temporary while i could not find a way to leave it surrounded with  a --dis/en-able* stanza. ------------------------------------------------------------ revno: 3272 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-04-02 14:32:02 +0300 message: wl#5569 MTS a test file for benchmarking is added. Benchmarking results can be gained by extracting the master side generating and the slave side applying times like in the following loop: workers=6; for n in `seq 1 3`; do echo; echo loop: $n; echo; my_mtr.sh --mysqld=--mts-slave-parallel-workers=$workers  \ rpl_parallel_benchmark --mysqld=--binlog-format=statement \ && cat /dev/shm/var/mysqld.2/data/test/delta.out >> p${workers}_stmt.out 2>&1; done ------------------------------------------------------------ revno: 3271 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-03-30 17:11:24 +0300 message: wl#5754 Query event parallel execution Small cleanup for comments as requested by reviewer. ------------------------------------------------------------ revno: 3270 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-02-27 19:35:25 +0200 message: WL#5754 Query event parallel execution Bundling together implementation the whole DML+DDL Query parallel support. That includes: The earlierst four rev:s to cut off the DML stage of the parallel query project from the following devoted to DDL. The four skeleton parallel applying of Queries containing a temporary table, and implement a core of the design that is the DML queries. Queries can contain arbitrary features including temp tables. The DDL part also refined few items related to the general low-level design. In particular,  of the mark of the over-max db:s in the updated-db:s status var is turned to be another new constant value. The very last patch to the bundle addresses the last review mail notes. ------------------------------------------------------------ revno: 3269 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-01-12 01:01:02 +0200 message: merging from mysql-trunk ------------------------------------------------------------ revno: 3268 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-01-12 00:54:12 +0200 message: wl#5569 MTS fixing the worker threads start/stop. ------------------------------------------------------------ revno: 3267 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-27 18:54:41 +0000 message: merge mysql-trunk --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3266 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-24 01:57:03 +0200 message: wl#5569 MTS the timed-wait loop of SQL thread required a break-through parameter in case the signal missed in action and just timeout would be reported ------------------------------------------------------------ revno: 3265 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 19:03:42 +0200 message: merging from the repo wl5569 ------------------------------------------------------------ revno: 3264 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 17:49:19 +0200 message: wl#5569 MTS fixing corner cases that mtr-testing with mts workers against stardard suites reveal. ------------------------------------------------------------ revno: 3263 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 16:00:28 +0200 message: wl#5569 MTS: refining another assert that can force C to delete events that are skipped with the slave skip counter ------------------------------------------------------------ revno: 3262 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 15:34:02 +0200 message: wl#5569 MTS Correcting an assert that is hit by few tests. ------------------------------------------------------------ revno: 3261 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 13:27:15 +0200 message: wl#5569 MTS merging from the repo. ------------------------------------------------------------ revno: 3260 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 13:25:31 +0200 message: wl#5569 MTS fixing failing tests. ------------------------------------------------------------ revno: 3259 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-22 20:34:26 +0200 message: wl#5569 MTS merging from the repo. ------------------------------------------------------------ revno: 3258 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-22 20:31:13 +0200 message: wl#5569 MTS fixing tests failure when mtr runs --mts_slave_parallel_workers != 0. rpl000010 is a representative. Fixed with identifying, marking, running carefully ev->update_pos() and destroying an event that can split a group of events to force part to be in different relay logs. ------------------------------------------------------------ revno: 3257 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-22 13:57:18 +0200 message: wl#5569 MTS and wl#5599 MTS recovery The general recovery implementation is finished by this patch. Tested against  ./mtr rpl_parallel_conf_limits. Warning, ./mtr rpl_parallel_conf_limits rpl_parallel_conf_limits ... can fail at the 2nd etc test because of no removal of Worker tables happens at RESET SLAVE. ------------------------------------------------------------ revno: 3256 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-21 22:12:30 +0200 message: wl#5569 MTS slave_worker_info def is updated in the system db. ------------------------------------------------------------ revno: 3255 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-21 21:34:58 +0200 message: merging with repo ------------------------------------------------------------ revno: 3254 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-21 21:31:29 +0200 message: wl#5569 MTS Recovery routine part I: gathering the group recovery bitmap. ------------------------------------------------------------ revno: 3253 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-20 22:18:33 +0000 message: WL#5599 Fixed routine to compute the bitmap of executed events. ------------------------------------------------------------ revno: 3252 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-20 21:37:48 +0200 message: wl#5569 MTS adding checkpoint relay_log_name,pos as necessary part to locate a relay-log for recovery. Tested with rpl_parallel. ------------------------------------------------------------ revno: 3251 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-20 17:58:58 +0200 message: wl#5569 MTS manual merging from the repo and correcting GAQ processing with introducing a volatile byte to indicate whether an item is busy or released. ------------------------------------------------------------ revno: 3250 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-12-18 21:00:23 +0200 message: wl#5569 MTS fixing --mts-exp-slave-run-query-in-parallel=1 case when Query-log-event can be run in parallel incl DML and DDL. The feature is `exp'erimental still can be tried while there are no temp tables involved neither a db different than the session's default is modified by the query. Tested: Changes sustain mtr rpl_parallel --mysqld=--mts-exp-slave-run-query-in-parallel=1 --mysqld=--binlog-format=statement ------------------------------------------------------------ revno: 3249 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-17 14:46:15 +0200 message: wl#5569 MTS fixing PB2 failures, incl valgrind issues, long exec time and asserting in a test. ------------------------------------------------------------ revno: 3248 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-17 00:00:47 +0200 message: merge from  wl#5569 repo to local branch rpl_sequential opt files are added to avoid mtr give up to process a bulk of unsafe warnings. ------------------------------------------------------------ revno: 3247 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-16 23:41:45 +0200 message: wl#5569 MTS Adding transparent support/fallback to the sequential execution cases of 1. Query-log-event 2. Rows_query_log_event info event Both cases can be fully parallelized in future project. Fixing an issue in move_queue_head() that was surficed as an assert in Slave_worker::slave_worker_group_ends(). Fixing destoying an event by Worker. ------------------------------------------------------------ revno: 3246 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-14 16:46:20 +0200 message: merge from wl5569 repo ------------------------------------------------------------ revno: 3245 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-14 10:57:16 +0200 message: wl#5569 MTS a light cleanup to arrange the option/system var names properly - mts_-prefixing, and _exp prefixing for experimental features needed for benchmarking (mts_exp_slave_local_timestamp) or suppored limitly (mts_exp_slave_run_query_in_parallel for Query-log-event). Fixing GAQ size. It might be too tight e.g in case of the max WQ length of 1; tested with running rpl_parallel supplying --mts-slave-worker-queue-len-max=1. ------------------------------------------------------------ revno: 3244 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-13 18:53:32 +0200 message: wl#5569 MTS fixing a valgrind stack cauased by extra pfs-keys/cond_var. Those are removed with Alfranio`s consent ------------------------------------------------------------ revno: 3243 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-13 17:57:01 +0200 message: wl#5569 MTS fixing a set of valgrind warning cauased by a c&p ------------------------------------------------------------ revno: 3242 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-13 16:52:50 +0200 message: wl#5569 MTS updating results for few tests. ------------------------------------------------------------ revno: 3241 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-12-11 21:00:47 +0200 message: wl#5569 MTS 1. Fixing recovery related issue of DBUG_ASSERT(rli->get_event_relay_log_pos() >= BIN_LOG_HEADER_SIZE); at slave start with shifting mts_recovery_routine() at front of the assert. 2. Making SKIP-ed event to commit to the central RLI. That is correct since Workers are not executing anything at this time. 3. Fixing the default for mts_checkpoint_period which should not be zero normally. Zero makes sense solely for debugging (so we may stress that through VALID_RANGE(1,...). 4. Introduced a general mts-unsupported error/warning to apply to cases of non-zero parallel workers and a feature that parallelization can't work with. ------------------------------------------------------------ revno: 3240 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-10 18:25:27 +0200 message: merge from wl5569 repo to a local branch ------------------------------------------------------------ revno: 3239 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-10 17:50:03 +0200 message: wl#5569 MTS Improving GAQ in a) limit size to be capable to hold items while all WQ:s are full b) move_queue_head() contained a flaw to make no progress falsely c) never let to enque in GAQ while it's full ------------------------------------------------------------ revno: 3238 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-09 19:46:27 +0200 message: merge from wl5569 repo to a local branch ------------------------------------------------------------ revno: 3237 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-09 19:45:02 +0200 message: wl#5569 MTS Integration with wl#5599 recovery for MTS and fixing two asserts. One is due to missed cleanup of errored-out rows-events; the other is a work-around on w->curr_group_exec_parts->dynamic_ids is initialized to have one partition on the Worker startup, but it should not. ------------------------------------------------------------ revno: 3236 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-08 13:59:07 +0000 message: WL#5599 Fixed warning messages. ------------------------------------------------------------ revno: 3235 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-08 12:59:07 +0000 message: WL#5599 Fixed test cases. ------------------------------------------------------------ revno: 3234 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-08 01:30:32 +0000 message: WL#5599 Fixed failures in test cases. ------------------------------------------------------------ revno: 3233 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-08 00:33:48 +0000 message: merge mysql-trunk --> mysql-next-mr-wl5569 Conflicts: . mysql-test/r/log_tables_upgrade.result . mysql-test/r/mysql_upgrade.result . mysql-test/r/mysql_upgrade_ssl.result . mysql-test/r/mysqlcheck.result . mysql-test/suite/perfschema/r/pfs_upgrade_lc0.result . mysql-test/suite/rpl/t/disabled.def . mysql-test/suite/sys_vars/r/all_vars.result . mysql-test/t/system_mysql_db_fix40123.test . mysql-test/t/system_mysql_db_fix50030.test . mysql-test/t/system_mysql_db_fix50117.test . sql/log_event.cc . sql/log_event.h . sql/rpl_mi.h . sql/rpl_slave.cc . sql/share/errmsg-utf8.txt ------------------------------------------------------------ revno: 3232 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-07 20:01:39 +0200 message: manual merge with a piece of recovery support on repo. rpl_parallel hits an assert that Alfranio is fixing ------------------------------------------------------------ revno: 3231 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-07 19:35:16 +0200 message: wl#5569 MTS Testing related fixes incl master_pos_wait() support and thereafter replacing sleeps with the functioning sync_slave_with_master; Fixing the limitted Q-log-event parallelization. After the fixing mixture of rows- and Q- transactions can run concurrently. Q-transaction will be treated sequentially by default. ------------------------------------------------------------ revno: 3230 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2010-12-05 22:04:17 +0200 message: wl#5569 WL#5599 MTS & recovery Refining and correcting two wl:s integration. The main achievement is events execution status is consistently recorded into the Worker and the central RL recovery tables. That was tested manually in rather agressive env where IO was used to reconnect randomly and load from Master contained Rotate events. TODO: to fix: rpl.rpl_parallel_conf_limits may not pass to address: Multi-stmt Query-log-event transaction case (see todo in sources). to destruct by Workers their executed events (was deferred until ev->update_pos started working). (Alfranio) to deploy mts_checkpoint_routine() call inside the successful event read branch of next_event(). Otherwise no calling happens when Coord is constanly busy with read/distribute. ------------------------------------------------------------ revno: 3229 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-12-04 19:14:50 +0200 message: merging from the repo wl5569 ------------------------------------------------------------ revno: 3228 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-12-04 15:45:02 +0000 message: Added mutex to the checkpoint_routine. ------------------------------------------------------------ revno: 3227 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-03 16:56:11 +0000 message: Implemented periodic checkpoint if parallel slave is enabled. ------------------------------------------------------------ revno: 3226 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-03 10:15:45 +0000 message: Fixed commit_positions() and removed unnecessary checkpoint thread. ------------------------------------------------------------ revno: 3225 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-02 20:13:12 +0200 message: manual merge to wl#5569 tree ------------------------------------------------------------ revno: 3224 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-02 19:46:46 +0200 message: wl#5569 MTS User interface related: set @@global.slave_parallel_workers= `non-zero` following with `START SLAVE` starts slave with so many Worker threads. That is non-zero value is defacto the slave parallel execution mode. Earlier introduced enum enum_slave_exec_mode  SLAVE_EXEC_MODE_PARALLEL is withdrawn. Fixes rli->mts_pending_jobs_size statistics which might cause assert-crash otherwise. a silly c&p mistake of relay-log name change notification. Made a little clean-up including relocation of init-ion of workers related stuff into start_slave_workers(). Many changes in tests due to SLAVE_EXEC_MODE_PARALLEL and not only. ------------------------------------------------------------ revno: 3223 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-01 19:08:21 +0200 message: wl#5569 MTS The limit conditions such as WQ len, total WQ:s size related changes. Also a new test file is added. ------------------------------------------------------------ revno: 3222 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-11-30 16:39:40 +0200 message: merging from from wl#5569 repo containing wl#5599 integration ------------------------------------------------------------ revno: 3221 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-11-30 16:02:15 +0200 message: wl#5569 MTS Fixing group_relay_log_name change propagation from C to W; Garbage collection in the Partition-to-Worker hash is added with a parameter of how many records in the hash are tolerated w/o checking of the usage counter. Adding C-W synchronization due to: - overall WQ:s data max - hitting the limit of a WQ length Adding Flow Control infrastructure with - level of the hungry Worker forcing Coordinator to distribute eagerly symmetrically a Worker whose load is more than 100 % - hungry level is considered as fed-up. - nap time for C in case all WQ:s lengths are above the level. - a weight param to the base nap as a function of the number of fed-up W:s. TODO: UNTIL to force sequential exec; To fix ROWS_QUERY_LOG_EVENT corner case; to fix commented out // if (!ev) delete ev; after wl#5599 is merged (ev->update_pos() is done). ------------------------------------------------------------ revno: 3220 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-11-27 17:36:50 +0200 message: wl#5569 Providing relay-log name for wl#5599. Protocol of action on the C and W sides is described in rpl_rli_pdb.h. Erroring out in case of parallel exec and ROWS_QUERY_LOG_EVENT. (todo: the native sequential mode for the event needs some revision, in particular `delete ev' shall happen *always* in rli->cleanup_context not in two places as of current). ------------------------------------------------------------ revno: 3219 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-11-26 23:08:30 +0200 message: wl#5569 MTS Partitioning conflict detection and handling is implemented. A new option to run Query in parallel though incompatibly with Rows- case in that the default db not the actual db:s are used as the partition key. User interface gained the global var and the cmd line opt: slave_run_query_in_parallel (Welcome to the set! :-) ------------------------------------------------------------ revno: 3218 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-andrei timestamp: Fri 2010-11-26 16:15:37 +0000 message: There was a mismatching between the number of fields read and write and by consequence the read was failing for the Slave_worker. ------------------------------------------------------------ revno: 3217 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-11-25 11:03:54 +0200 message: wl#5569 merging with wl#5599 piece of code ------------------------------------------------------------ revno: 3216 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-11-25 10:47:39 +0200 message: wl#5569 Converting the prototype time db2w hash to be concurrent; Necessary inruduction of the least occupied Worker notion. It's currently computed as Worker having the least number of distributed partitions. Adding parallel support for Query_log_event; caution: 1. the session/default not the actual db as the key 2. may not have been tested against all use cases (e.g int vars) Fixing slave stop issues. ------------------------------------------------------------ revno: 3215 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-11-22 20:57:13 +0200 message: wl#5569 extinding futher interfaces to wl#5599 with propagating future_event_relay_log_pos to the Worker exec context. ------------------------------------------------------------ revno: 3214 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-11-20 19:23:42 +0200 message: wl#5569 MTS Worker pool start, stop, kills, error out implementation. ------------------------------------------------------------ revno: 3213 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-11-19 16:51:58 +0200 message: wl#5569 recovery interfaces for wl#5599 implementation. The essence of this patch is to provide GAQ object implimentation and valid life cycle. The checkpoint handler prior to call store methods of wl#5599 is supposed to invoke rli->gaq->move_queue_head(&rli->workers). See a simulation of that near ev->update_pos() of the mail sql thread loop. The checkpoint info is composed as instance of Slave_job_group to reside as rli->gap->lwm. Todo: uncomment +  // delete ev;  // after ev->update_pos() event is garbage once the real checkpoint has been done. Todo: the real implemention needs to take care of filing Slave_job_group::update_current_binlog as initially so at time of executing Rotate/FD methods. +  // experimental checkpoint per each scheduling attempt +  // logics of next_event() + +    rli->gaq->move_queue_head(&rli->workers); ------------------------------------------------------------ revno: 3212 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-11-18 16:50:54 +0200 message: wl#5569 wl#5599 Recovery related. Prototyping the worker RLI instantiation, to be elaborated on. ------------------------------------------------------------ revno: 3211 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-11-18 16:00:52 +0200 message: wl#5569 MTS Extending the wl#5563 prototype gradually. This commit addresses: 1. recovery interface (a new Worker rli plus rli->gaq and pseudo-code for checkpoint to update GAQ and the central RLI recovery table. Wrt rli, C and W execute do_apply_event(c_rli) where c_rli is the central instance. C executes update_pos(c_rli), but W update_pos(w_rli). others: - decreased processing time for rpl_parallel, serial. ------------------------------------------------------------ revno: 3210 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2010-11-14 11:55:32 +0000 message: Post-push fix for WL#5599. ------------------------------------------------------------ revno: 3209 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-11-12 17:58:12 +0000 message: Post-push fix for WL#5599. ------------------------------------------------------------ revno: 3208 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-11-11 11:53:01 +0000 message: WL#5599 The patch changed the handler's functions, i.e. init_info, check_info, flush_info, remove_info and end_info and the related private member functions, in both file and table handlers, to accept an index that identifies the information that will be read or written. This is necessary now because the handlers will be used by the workers to read and write information from file(s) and table and there may be several workers running at the same time and thus an index is used to identify the worker that is accessing information. This change is also necessary for the multi-master replication as information from each master must be uniquely identified. ------------------------------------------------------------ revno: 3207 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-11-10 10:57:13 +0000 message: Refactory to start work on WL#5599. ------------------------------------------------------------ revno: 3206 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-11-09 13:34:18 +0000 message: Removed mysql-test/collections/mysql-next-mr.crash-safe.* in the WL#5569. ------------------------------------------------------------ revno: 3205 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-11-09 13:04:14 +0000 message: merge mysql-next-mr.crash-safe --> mysql-next-mr-wl5569 Conflicts: . sql/CMakeLists.txt . sql/Makefile.am . sql/sql_class.h . sql/rpl_slave.cc ------------------------------------------------------------ revno: 3204 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-11-09 11:39:37 +0000 message: merge mysql-next-mr-wl5563-labs --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3203 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-17 23:33:37 +0300 message: wl#5563 simplifying memory handling for the Coor-Workers transport to avoid sporadic crashes ------------------------------------------------------------ revno: 3202 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-17 21:19:56 +0300 message: wl#5563 leaving out a fine garbage collection. That task is unnessary to solve at prototyping time. Update-pos routine to be implemented is going to eliminated that piece of code ------------------------------------------------------------ revno: 3201 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-17 20:38:35 +0300 message: wl#5563 Extending the tests base to split the former rpl_parallel into two to run in serial exec mode as well. ------------------------------------------------------------ revno: 3200 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-17 11:49:00 +0300 message: wl#5563 improved test; fixed a delete issue that was used to crash; added @@global.slave_local_timestamp to fill in timestamp col slave clock value. Performance growth can be seen through the test. todo: merge with Alfranio work on hashing and dyn alloc of PFS obj:s. ------------------------------------------------------------ revno: 3199 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Wed 2010-09-15 14:51:49 +0300 message: wl#5563 tests for the wl. Number of workers and iterations can be tuned. todo: convert as param:s to pass to the test through mtr ------------------------------------------------------------ revno: 3198 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Mon 2010-09-13 18:22:41 +0300 message: wl#5563 adding an ingeneous no-stress-attempting-yet test that also fired an assert. Refined the Worker instance ref computing because cleanup_context() is executed by the sql-thread the coordinator as well ------------------------------------------------------------ revno: 3197 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Mon 2010-09-13 13:15:38 +0300 message: wl#5563 Rows-event parallelization basically is implemented although tested shallowly. Write access to rli central stuct by workers may not be eliminated fully at this phase. E.g that relates to errors. todo: to prove rli gets out of Worker scope todo: to provide a stress test ------------------------------------------------------------ revno: 3196 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Sat 2010-09-11 17:00:08 +0300 message: wl#5563 adding Rows-event limitted to one Worker support. Deferred deletion did not check emptyness of the list ------------------------------------------------------------ revno: 3195 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-10 20:36:07 +0300 message: wl#5563 correcting comments to indicate less limitations ------------------------------------------------------------ revno: 3194 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-10 20:32:39 +0300 message: WL#5563 Prototype for Slave parallelized by db name More progress to the WL in that the STMT binlog-format works while the conceptual limits are held. That is no query/transaction is allowed to deal with more than one db. Addressed a complication in that update pos method that is run by Coordinator belongs to Log_event hierarchy and therefore the event deletion now by Worker must be careful. Todo: 1. (High prior) fix Row-format complications 2. (Hight prior) Elaborate on the hash function to be a function on db text name 3. (Optional)  Consider moving update_pos to the RLI class to get rid of the delete logics complication. How-to-use: The instuction can be found in comments of the previous commit, see there for more details. In brief though, the db names have to follow a pattern: `test[0-9]'. E.g test0, test1, test2, test3 for the default four Worker threads. Slave side has to set @@global.slave_exec_mode=PARALLEL; before START SLAVE. ------------------------------------------------------------ revno: 3193 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Thu 2010-09-09 21:43:16 +0300 message: WL#5563 Prototype for Slave parallelized by db name This is an intermediate commit that indicates some progress. Namely, the worker pool operates correctly and with signs of scalable performance. How to test: connection master; set @@global.binlog_format=statement; connection slave; set @@global.slave_exec_mode=PARALLEL; set @@global.binlog_format=mixed; show processlist; => IO, SQL threads + 4 workers by default change master to ... connection master; create database test0; create database test1; create database test2; create database test3; # create databases with magic names ""test[0-9]+"", where the number will index # a worker. create database test0; create database test1; create database test2; create database test3; # create tables. they are only of MyISAM type for now use test0; create table tm_1(a int, b int) engine=myisam; use ... # DML on tables: use test[0-3]; insert into tm_1 values (1,0); ... ... connection slave; # monitor CPU (visually this time: top etc) # check correctness e.g select count(*) from test[0-3].tm_1; connection master; select count(*) from test[0-3].tm_1; ****** ------------------------------------------------------------ revno: 3364 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-08-18 17:09:22 +0300 message: wl#5569 MTS Refining rpl_rotate_logs that could not produce deterministic output. The list of binlogs contained one binlog more than expected. ------------------------------------------------------------ revno: 3363 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-08-18 14:56:01 +0300 message: updating result files that were left incorrect by the last merge. ------------------------------------------------------------ revno: 3362 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-08-18 14:44:59 +0300 message: wl#5569 MTS Failure in recovery when binlog-checksum is active. The reason of the failure was in that parsing of relay log by MTS recovery gaps computing did not make sure to use the relay-log own FormatDescriptor events that contain checksumming info for all events in the log. Fixed with taking care to find out the checksum algorithm for every relay log as the first step of MTS recovery gaps computing. ------------------------------------------------------------ revno: 3361 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-08-17 11:21:23 +0300 message: merge from trunk forced to resolve few semantical conflicts caused by changes in THD::enter_cond() of the trunk. ------------------------------------------------------------ revno: 3360 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-07-27 08:56:14 +0100 message: Fixed failure in test rpl_mts_check_concurrency when running in the mts collection. ------------------------------------------------------------ revno: 3359 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-26 19:46:41 +0100 message: Added a test case that checks if MTS allows to concurrently access the replication tables, and as such, concurrently commit transactions that update different databases. ------------------------------------------------------------ revno: 3358 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-22 20:08:43 +0100 message: Configured rpl_parallel_switch_sequential to run in row and mixed mode to avoid cluttering the error log with messages on unsafe execution. ------------------------------------------------------------ revno: 3357 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-22 19:02:14 +0100 message: This patch contains the following fixes: . Removed suppressed warning introduced in the wrong test case (i.e. rpl_corruption) and put it in the correct one (i.e. rpl_row_corruption). . Introduced variable to avoid clutering the error log with several warning messages on unsafe execution. ------------------------------------------------------------ revno: 3356 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-22 11:01:12 +0100 message: This patch has the following changes: . Specific directories were created for the MTS runs in the default.push. . Warning message was suppressed in the rpl_corruption.test. . Annoying debug outputs were removed from the error log. However, this is a temporary solution as it forbids to enable traces. ------------------------------------------------------------ revno: 3355 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-07-20 11:56:40 +0100 message: merge mysql-trunk --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3354 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-19 22:26:30 +0300 message: wl#5569 MTS valgrind reported a stack on rpl_savepoint. The problem appears to be in that at computing slave_sql_running_state in show_mater_info() the sql thread proc_info pointer could refer to a value in a stack that has already gone. Fixed with making proc_info to point to a string literal. ------------------------------------------------------------ revno: 3353 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-19 17:46:43 +0100 message: Suppressed warning messages that could potentially cause problems while running mts crash safe test cases. ------------------------------------------------------------ revno: 3352 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-07-18 21:46:45 +0300 message: wl#5569 MTS Cosmetic changes are done to address readability and clearness of source code of the MTS patch. ------------------------------------------------------------ revno: 3351 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-07-18 14:52:44 +0300 message: wl#5569 MTS Inadvertently introduced hunk two rev:s back is reverted to please rpl_*_mts_crash_safe. ------------------------------------------------------------ revno: 3350 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-07-17 00:51:45 +0300 message: wl#5569 MTS fixing build issue for embedded. Public visibility for Rows_log_event::do_apply_event() is restored. ------------------------------------------------------------ revno: 3349 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-07-16 20:08:31 +0300 message: wl#5569 MTS The patch contains improvements after code review. Changes are mostly consmetic. ------------------------------------------------------------ revno: 3348 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-07-16 02:11:11 +0300 message: bug#12755663 MTS: RPL_CIRCULAR_FOR_4_HOSTS FAILS: CANT EXECUTE THE CURRENT EVENT GROUP MTS stopped with an error in the middle of the test. The reason is that a group of events from the slave itself was processed partly to modify the group position. In the following restart the wrong group bondary made slave either to error out or assert. Fixed with locating a possible race condition allowin Coordinator to ignore actual failed status of a Worker. So in the case of the test, the slave server group can't be started. Notice, this is a trial patch since I can't catch the failure on available to me hosts at all. ------------------------------------------------------------ revno: 3347 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-07-14 12:40:06 +0300 message: WL#5569 MTS further extensive rpl_circular_for_4_hosts exersices with --repeat 10 --parallel=8 revealed a race condition in that Coordinator might miss to catch not-running status for a Worker. That made Coordinator to skip only a part of a group of the slave server own events so the slave stops at not the bondary of a group. Fixed with moving marking of the errored-out Worker as failed prior to its APH entries release. TODO: notice there can be a possibility to stop at not the boundary due to graceful STOP SLAVE if one is run at time of skipping self-originated events. However this issue belongs to STS and might be similar with BUG@12604951 and BUG@12728160. ------------------------------------------------------------ revno: 3346 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-07-14 08:03:55 +0100 message: Post-push fixes for WL#5569 Injecting faults while updating a myisam table requires to flush the changes before committing suicide. So we have introduced the follwing code: DBUG_EXECUTE_IF(""crash_after_commit_and_update_pos"", -                       DBUG_SUICIDE();); +           sql_print_information(""Crashing crash_after_commit_and_update_pos.""); +           flush_info(TRUE); +           DBUG_SUICIDE(); Besides we improved some comments. ------------------------------------------------------------ revno: 3345 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-07-13 16:23:57 +0100 message: WL#5569 ------------------------------------------------------------ revno: 3344 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-07-13 00:10:43 +0300 message: wl#5569 MTS merge trunk -> wl5569-tree ------------------------------------------------------------ revno: 3343 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-12 23:36:17 +0300 message: wl#5569 MTS adding suppression due to expected warning to rpl_circurlar_for_4_hosts; decreasing a loop limit in rpl_parallel_switch_sequential in case of statement format. ------------------------------------------------------------ revno: 3342 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-12 14:46:23 +0300 message: WL#5569 MTS Fixing code and test due to rpl.rpl_circular_for_4_hosts  mismatch failure, like http://pb2.norway.sun.com/?action=archive_download&archive_id=3608382. The reason of the mismatch was that when having two group of events to execute, the first for a Worker and the 2nd for Coordinator, Coordinator waited for the 1st group completion but did not verify success of synchronization. So in a case of the failed applying of the 1st group processing of the 2nd could find an inconsistent state to end up with a segfault (even though only the mismatch has been seen so far). ------------------------------------------------------------ revno: 3341 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-07-10 22:40:01 +0100 message: Avoiding busy waiting when running mts recovery tests. ------------------------------------------------------------ revno: 3340 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-07-09 23:11:58 +0100 message: Removed --slave-checkpoint-period from MTS test cases. ------------------------------------------------------------ revno: 3339 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-07-09 23:08:07 +0100 message: Improved test cases for the WL#5569. ------------------------------------------------------------ revno: 3338 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-08 22:40:52 +0300 message: wl#5569 MTS The patch refines logics of applying phase of MTS-recovery to always applying events that are for Coordinator; fixes few tests to make them passable on PB; makes GAQ size to be of checkpoint_group value. ------------------------------------------------------------ revno: 3337 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-08 07:54:34 +0100 message: Reduced the timeout period to run the checkpoint routine by setting slave-checkpoint-period to 30. ------------------------------------------------------------ revno: 3336 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-08 07:44:35 +0100 message: merge mysql-trunk --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3335 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-07-06 12:46:05 +0300 message: wl#5569 MTS refining wait for db-hash entry release at event distribution. The graceful STOP is not accepted at this point so Coordinator continues to stay in a loop. ------------------------------------------------------------ revno: 3334 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-05 20:43:04 +0300 message: bug#12719875 possible MTS recovery issue. MTS stopped with an error after failing to apply an event. It turned out that the event was sceduled incorrectly due to earlier stop by Single-Threaded Slave not at the group boundary but rather in the middle of it. Fixed with forcing CREATE..SELECT be logged as two groups. The CREATE-TABLE group is surrounded with its own BEGIN/COMMIT braces. ------------------------------------------------------------ revno: 3333 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-07-04 18:14:09 +0300 message: wl#5569 MTS Adding a rule to run PB with all suites in MTS with binlog-format ROW. ------------------------------------------------------------ revno: 3332 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-07-03 23:29:34 +0300 message: wl5569 MTS cleanup in one file. ------------------------------------------------------------ revno: 3331 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-07-03 23:16:02 +0300 message: wl5569 MTS bzr commit mail address changed; a minor cleanup to make mts_is_worker() with const argument; releasing a test to run in MTS. ------------------------------------------------------------ revno: 3330 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-07-02 08:58:56 +0100 message: Fixed use of the performance schema in the replication code and concurrency issue in the IO Thread. In particular, the IO Thread was calling flush_master_info without grabbing locks. ------------------------------------------------------------ revno: 3329 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-01 16:41:35 +0300 message: wl5569 MTS merging from the main repo. ------------------------------------------------------------ revno: 3328 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-01 15:48:25 +0300 message: wl#5569 MTS the final cleanup patch. There are few glitches that were considered as tolerable at least for time of the total wl's code is being reviewed. That includes: - no support to old load-data events - no support for FK to add to the list, there are few places in the patch that suggests to deploy error branches each time flush_info() is called. ------------------------------------------------------------ revno: 3327 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-01 13:16:52 +0300 message: wl#5569 MTS The patch cleans up some host of code. ------------------------------------------------------------ revno: 3326 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-28 11:30:18 +0300 message: wl#5569 MTS replacing views with regular tables for consistency verification in rpl_parallel_innodb. Also a minor cleanup in rpl_parallel is done. ------------------------------------------------------------ revno: 3325 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-27 20:31:45 +0300 message: wl#5569 MTS Cleanup and addressing sporadic rpl_temp_table_mix_row failure in post-execution mtr.check_testcase(). The check of the test failure was caused by faulty optimization in avoiding to migrate temporary tables from Coordinator to Workers in case of rows-event assignement. while it's correct with the homogenous rows-event only load, the mixture can fail. Fixed with removing the optimization so map_db_to_worker() always relocates which is somewhat suboptimal and should be improved in future. ------------------------------------------------------------ revno: 3324 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-27 13:12:52 +0100 message: Ensured that updates to the worker_info_repository are transactional and fixed the slave_checkpoint_group_basic test case. ------------------------------------------------------------ revno: 3323 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-26 13:02:59 +0100 message: Fixed test case. ------------------------------------------------------------ revno: 3322 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-06-25 15:14:24 +0100 message: Introduced test case for recovery with MTS and fixed bugs in recovery. ------------------------------------------------------------ revno: 3321 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-24 15:38:19 +0300 message: wl#5569 MTS This patch makes a bit of cleanup, addresses one memory-allocation todo and completes fixing valgrind report (rpl_parallel_start_stop) due to strings allocation in Slave_job_group items. ------------------------------------------------------------ revno: 3320 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-24 12:38:34 +0300 message: wl#5569 MTS this patch completes the previous one to fixes a result file and make the innodb specific test verification to base on tables not views. ------------------------------------------------------------ revno: 3319 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-24 00:11:22 +0300 message: wl#5569 MTS this is an exploratory patch to sort out if verification method what was based on views has its own not related to mts flaw. The patch calls verification macro on the tables that required some adjustment. ------------------------------------------------------------ revno: 3318 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-06-23 07:56:15 +0300 message: wl#5569 MTS fixing results of mysqld--help-win. ------------------------------------------------------------ revno: 3317 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-22 19:20:40 +0100 message: merge mysql-next-mr-wl5569 (local) --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3316 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-22 19:17:43 +0100 message: In some platforms, such as Windows, thread's wait time is stored in 100ns units. However, when computing the difference between two values, the result value was not multiplied by 100. Besides, there was a casting problem when the aforementioned result value was assigned to an ulong. ------------------------------------------------------------ revno: 3315 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-22 18:54:23 +0100 message: Fixed how mts copes with recovery. ------------------------------------------------------------ revno: 3314 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-21 19:10:54 +0300 message: wl#5569 MTS Fixing valgrind warnings. ------------------------------------------------------------ revno: 3313 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-21 18:15:43 +0300 message: wl#5569 MTS rpl_parallel_start_stop.test could fail sporadicaly with timeout. ------------------------------------------------------------ revno: 3312 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-20 23:21:56 +0100 message: merge mysql-next-mr-wl5569 (local) --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3311 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-20 23:19:06 +0100 message: Fixed error when computing the Lower-Water-Mark. If two or more jobs were removed from the Group of assigned jobs and one of the jobs had a non-empty group relay log but the last one had an empty group relay log. The Lower-Water-Mark was not correctly updated, because the algorithm assumed that the group relay log was null. ------------------------------------------------------------ revno: 3310 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-20 11:52:44 +0100 message: Fixed valgrind errors. Slave_job_group was silently being cast to LOG_POS_COORD while calling sort_dynamic(&above_lwm_jobs, (qsort_cmp) mts_event_coord_cmp) and by consequence mts_event_coord_cmp(LOG_POS_COORD *, LOG_POS_COORD *). This had two problems: . The first two entries in the Slave_job_group were not a pointer to a char * and my_offset. . Even if the first two entries were char * and my_offset, such casting could lead to alignment problems. To fix the problem, we avoid this casting. ------------------------------------------------------------ revno: 3309 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-19 19:14:50 +0300 message: wl#5569 MTS fixing slave_transaction_retries_basic_64.result ------------------------------------------------------------ revno: 3308 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-19 16:11:25 +0300 message: wl#5569 MTS fixing tests. ------------------------------------------------------------ revno: 3307 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-19 12:33:36 +0300 message: wl#5569 MTS Fixing rpl.rpl_mixed_binlog_max_cache_size that revealed incorrect asynchronous handling of a Rotate event which does not split the current group and therefore has to be executed after all previously scheduled events. Fixing sensetivity of two other tests to mtr's invocation environment that includes inital values of slave_parallel_workers and slave_transaction_retries. ------------------------------------------------------------ revno: 3306 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-19 09:04:19 +0100 message: Fixed some windows failures. ------------------------------------------------------------ revno: 3305 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-06-18 19:58:21 +0100 message: Fixed some recovery issues. ------------------------------------------------------------ revno: 3304 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-17 21:01:58 +0300 message: wl#5569 MTS fixing tests and a segfault at the end of handle_slave_sql() happened after worker initialization failed (e.g rpl_row_log on win). ------------------------------------------------------------ revno: 3303 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-17 18:34:16 +0300 message: wl#5569 MTS fixing tests. ------------------------------------------------------------ revno: 3302 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-17 14:00:41 +0300 message: wl#5569 MTS fixing rpl_row_basic_3innodb similarly to the previous patch. ------------------------------------------------------------ revno: 3301 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-17 13:51:59 +0300 message: wl#5569 MTS fixing few tests. 1. Policy is implemented for reacting with a warning in a case of failing worker leaves the total slave state with gaps thereby inconsistent. 2. Two tests that were used to time out due to reset master/slave was disabled in there. ------------------------------------------------------------ revno: 3300 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-17 02:24:59 +0100 message: Removed unnecessary test cases and augment others in order to test recovery. ------------------------------------------------------------ revno: 3299 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-06-16 19:46:22 +0300 message: wl#5569 MTS fixing slave_parallel_workers_basic and rpl_stop_middle_group which cant run in MTS ------------------------------------------------------------ revno: 3298 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-06-16 11:29:53 +0300 message: wl#5569 MTS adding new tests to sys_vars.\ ------------------------------------------------------------ revno: 3297 committer: Luis Soares <luis.soares@oracle.com> branch nick: mysql-trunk-wl5569 timestamp: Thu 2011-06-16 01:41:32 +0100 message: WL#5569 Adding a global suppression for the warning that may appear when stopping the slave sql thread in the middle of a group. This should affect MTS mode only. ------------------------------------------------------------ revno: 3296 committer: Luis Soares <luis.soares@oracle.com> branch nick: mysql-trunk-wl5569 timestamp: Thu 2011-06-16 01:40:41 +0100 message: WL#5569 Renames worker-info-repository to slave-worker-info-repository in some tests option files. ------------------------------------------------------------ revno: 3295 committer: Luis Soares <luis.soares@oracle.com> branch nick: mysql-trunk-wl5569 timestamp: Thu 2011-06-16 01:32:37 +0100 message: WL#5569 More test fixes. Removing remaining prefixes 'mts' from mts variables, which have been renamed recently. ------------------------------------------------------------ revno: 3294 committer: Luis Soares <luis.soares@oracle.com> branch nick: mysql-trunk-wl5569 timestamp: Thu 2011-06-16 00:27:20 +0100 message: WL#5569 Fixing rpl_parallel result file. ------------------------------------------------------------ revno: 3293 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-15 20:41:33 +0300 message: wl#5569 MTS correcting --slave-parallel-workers in few more files ------------------------------------------------------------ revno: 3292 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-15 20:31:46 +0300 message: wl#5569 MTS correcting --slave-parallel-workers in collections/default.push ------------------------------------------------------------ revno: 3291 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-15 20:12:11 +0300 message: wl#5569 MTS Cleanup, including 1. decreasing number and renaming system variables. Important for debugging command line options are replaced with reasonble constant values and only necessary are retained. 2. Small encapsulation in ha_blackhole.cc is done. ------------------------------------------------------------ revno: 3290 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-15 15:59:23 +0100 message: Fixed replication valgring failures caused by the MTS. ------------------------------------------------------------ revno: 3289 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-14 21:23:13 +0300 message: wl#5569 MTS wl#5754 Query event parallel execution Fixing failing tests and a failure in gathering accessed databases that was caused by a recent merge from trunk. ------------------------------------------------------------ revno: 3288 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-14 13:35:20 +0300 message: merge from trunk ------------------------------------------------------------ revno: 3287 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-14 12:27:38 +0300 message: wl#5569 MTS Fixing failing tests due to a. a flaw in `isolated parallel' mode implementation. Isolation applies to a group of event rather than to an instance. And event that contains over-max accessed db:s or event from Old master trigger marking the current being scheduled group. Such group will be executed having all prior scheduled done and nomore will be scheduled until the group is done. b. Notification to Coordinator about errored-out Worker is corrected. ------------------------------------------------------------ revno: 3286 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-12 22:33:32 +0300 message: wl#5569 MTS making default.push to run rpl suite with non-default --mts-slave-parallel-workers > 0 in all three format/mode (row,stmt, mixed). The default is run for all suites in mixed mode and rpl suites with row+ps, stmt formats. ------------------------------------------------------------ revno: 3285 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-12 22:05:05 +0300 message: wl#5569 MTS manual merge with few fixes for segfault of the last merge from the trunk etc, compilation issue on embedded. ------------------------------------------------------------ revno: 3284 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-06-09 18:35:59 +0100 message: Post-fixes for merge. Fixed compilation in Windows and removed an used options. ------------------------------------------------------------ revno: 3283 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-06-09 16:27:47 +0100 message: merge mysql-trunk --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3282 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-06 13:51:19 +0300 message: wl#5569 MTS STOP SLAVE now stops consistently w/o gaps, KILL shall be used for an urgent stop, an error case behaves like the killed. For instance, a Worker errors out, it sends KILL to Coordinator through THD::awake(), and Coordinator kill the rest through setting a special Worker-running status to killed (which breaks the read-exec loop of a Worker). ------------------------------------------------------------ revno: 3281 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-05 20:01:51 +0300 message: wl#5569 MTS More cleanup, fixes due to found issues when running tests, some improvements incl in stopping Workers to make routine to distinguish between killed and gracefully stopped cases so in the end STOP SLAVE will guarantee consistent state (some todo remains still). ------------------------------------------------------------ revno: 3280 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-05-30 13:05:07 +0300 message: WL#5569 MTS WL#5754 Query event parallel applying ----------------------------------------------------------------- Aggregating 7 commits that are not pushed yet to the wl5569 repo. Find comments for each cset below. ------------------------------------------------------------------ The current patch addresses concurrent updating slave_open_temp_tables status counter. The former declaration of the underlying server variable is changed from ulong to int32. While that might affect (shrink) the actual range, there has been no specified range and now after the number of bits is the same on all platforms the range cat be set to be [0, max(int32)] ****** wl#5569 MTS Wl#5754 Query event parallel appying wl#5599 MTS recovery The patch includes some cleanup, including one for temp tables support, realization of few todo:s. ****** wl#5569 MTS wl#5754 Query event parallel applying More cleanup is done; Fixing temp tables manipulation. Asserting an impossible to support use case of group of events not wrapped with BEGIN/COMMIT. Todo: recognize old master binlog to refuse to run in parallel. ****** wl#5569 MTS Implementation of giving out the applier role to Worker for all cases but ones dealing with the Coordinators state. That includes Query event with over-max-db:s and Load-data related events. The current patch also makes old master binlog be handled by MTS though sometimes e.g for Query event to switch to the sequential mode. Fixing a race condition making C to wait endlessly if a Worker has exitted due to its applying error. ****** wl#5569 MTS correcting an assert that was used to fire as warned in the previous commit. Parallel feature tests pass now. ****** wl#5569 MTS This patch contains cleanup and simplification of logics of handling some events sequentially by Coordinator and adds memory-allocation failure branch to workers starting routine. ****** wl#5569 MTS An intermediate patch to address few issues raised by reviewers. To sum up, it's about cleanup and logics simplification of event distribution to Worker and consequent actions. Some efforts were paid to support Old Master Begin-less group of events. ------------------------------------------------------------ revno: 3279 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-05-24 17:29:35 +0300 message: WL#5569 MTS WL#5754 Query parallel appying Changing implementation of temporary tables support in MTS. Cleanup, fixing few todo:s and few potential issues found. ------------------------------------------------------------ revno: 3278 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-05-19 12:36:28 +0300 message: wl#5569 MTS Support for ROWS_QUERY_LOG_EVENT is added. It required refactoring of its handling in the canonical sequential mode. The event life suggests its behavior similar to objects associated with Table_map, in particural, its destoying to occur at the end-of-statement time. Tested against existing ROWS_QUERY_LOG_EVENT feature tests incl rpl_row_ignorable_event in both sequential and parallel mode. ------------------------------------------------------------ revno: 3277 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-05-16 22:43:58 +0300 message: wl#5569 MTS Simplifying Coordinator-Worker interfaces. In essence after this patch Worker execute events in its private context (class Slave_worker :public Relay_log_info). The only exception is Query referring to temporary table. The temp:s are maintained in the Coordinator's ""central"" rli; removing some dead code; performing a lot of cleanup. There are few todo items incl: 1. To implement several todo:s scattered across MTS' code and tests (e.g to restore protected for few members of RLI of rpl_rli.h); 2. to cover Rows_query_log_event that currently can cause hanging (e.g rpl_parallel_fallback) 3. To sort out names of classes based on Rpl_info, possibly remove  Rpl_info_worker ------------------------------------------------------------ revno: 3276 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-05-06 21:33:32 +0300 message: wl#5569 MTS improving benchmarking test. ------------------------------------------------------------ revno: 3275 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-04-06 15:51:58 +0300 message: wl#5569 MTS Statistics for Workers and Coordinator incl waiting times, sleeping is reported now into the error log as slave stopping time. ------------------------------------------------------------ revno: 3274 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-04-05 19:26:37 +0300 message: wl#5569 MTS restoring previous 4 default workers that rpl_parallel works with. ------------------------------------------------------------ revno: 3273 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-04-03 13:07:30 +0300 message: wl#5569 MTS Benchmarking related patch uniforms rpl_parallel to be run with arbitrary number of workers, db:s, tables, etc. TODO: to restore the final constinency check which is given out temporary while i could not find a way to leave it surrounded with  a --dis/en-able* stanza. ------------------------------------------------------------ revno: 3272 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-04-02 14:32:02 +0300 message: wl#5569 MTS a test file for benchmarking is added. Benchmarking results can be gained by extracting the master side generating and the slave side applying times like in the following loop: workers=6; for n in `seq 1 3`; do echo; echo loop: $n; echo; my_mtr.sh --mysqld=--mts-slave-parallel-workers=$workers  \ rpl_parallel_benchmark --mysqld=--binlog-format=statement \ && cat /dev/shm/var/mysqld.2/data/test/delta.out >> p${workers}_stmt.out 2>&1; done ------------------------------------------------------------ revno: 3271 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-03-30 17:11:24 +0300 message: wl#5754 Query event parallel execution Small cleanup for comments as requested by reviewer. ------------------------------------------------------------ revno: 3270 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-02-27 19:35:25 +0200 message: WL#5754 Query event parallel execution Bundling together implementation the whole DML+DDL Query parallel support. That includes: The earlierst four rev:s to cut off the DML stage of the parallel query project from the following devoted to DDL. The four skeleton parallel applying of Queries containing a temporary table, and implement a core of the design that is the DML queries. Queries can contain arbitrary features including temp tables. The DDL part also refined few items related to the general low-level design. In particular,  of the mark of the over-max db:s in the updated-db:s status var is turned to be another new constant value. The very last patch to the bundle addresses the last review mail notes. ------------------------------------------------------------ revno: 3269 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-01-12 01:01:02 +0200 message: merging from mysql-trunk ------------------------------------------------------------ revno: 3268 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-01-12 00:54:12 +0200 message: wl#5569 MTS fixing the worker threads start/stop. ------------------------------------------------------------ revno: 3267 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-27 18:54:41 +0000 message: merge mysql-trunk --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3266 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-24 01:57:03 +0200 message: wl#5569 MTS the timed-wait loop of SQL thread required a break-through parameter in case the signal missed in action and just timeout would be reported ------------------------------------------------------------ revno: 3265 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 19:03:42 +0200 message: merging from the repo wl5569 ------------------------------------------------------------ revno: 3264 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 17:49:19 +0200 message: wl#5569 MTS fixing corner cases that mtr-testing with mts workers against stardard suites reveal. ------------------------------------------------------------ revno: 3263 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 16:00:28 +0200 message: wl#5569 MTS: refining another assert that can force C to delete events that are skipped with the slave skip counter ------------------------------------------------------------ revno: 3262 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 15:34:02 +0200 message: wl#5569 MTS Correcting an assert that is hit by few tests. ------------------------------------------------------------ revno: 3261 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 13:27:15 +0200 message: wl#5569 MTS merging from the repo. ------------------------------------------------------------ revno: 3260 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 13:25:31 +0200 message: wl#5569 MTS fixing failing tests. ------------------------------------------------------------ revno: 3259 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-22 20:34:26 +0200 message: wl#5569 MTS merging from the repo. ------------------------------------------------------------ revno: 3258 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-22 20:31:13 +0200 message: wl#5569 MTS fixing tests failure when mtr runs --mts_slave_parallel_workers != 0. rpl000010 is a representative. Fixed with identifying, marking, running carefully ev->update_pos() and destroying an event that can split a group of events to force part to be in different relay logs. ------------------------------------------------------------ revno: 3257 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-22 13:57:18 +0200 message: wl#5569 MTS and wl#5599 MTS recovery The general recovery implementation is finished by this patch. Tested against  ./mtr rpl_parallel_conf_limits. Warning, ./mtr rpl_parallel_conf_limits rpl_parallel_conf_limits ... can fail at the 2nd etc test because of no removal of Worker tables happens at RESET SLAVE. ------------------------------------------------------------ revno: 3256 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-21 22:12:30 +0200 message: wl#5569 MTS slave_worker_info def is updated in the system db. ------------------------------------------------------------ revno: 3255 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-21 21:34:58 +0200 message: merging with repo ------------------------------------------------------------ revno: 3254 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-21 21:31:29 +0200 message: wl#5569 MTS Recovery routine part I: gathering the group recovery bitmap. ------------------------------------------------------------ revno: 3253 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-20 22:18:33 +0000 message: WL#5599 Fixed routine to compute the bitmap of executed events. ------------------------------------------------------------ revno: 3252 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-20 21:37:48 +0200 message: wl#5569 MTS adding checkpoint relay_log_name,pos as necessary part to locate a relay-log for recovery. Tested with rpl_parallel. ------------------------------------------------------------ revno: 3251 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-20 17:58:58 +0200 message: wl#5569 MTS manual merging from the repo and correcting GAQ processing with introducing a volatile byte to indicate whether an item is busy or released. ------------------------------------------------------------ revno: 3250 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-12-18 21:00:23 +0200 message: wl#5569 MTS fixing --mts-exp-slave-run-query-in-parallel=1 case when Query-log-event can be run in parallel incl DML and DDL. The feature is `exp'erimental still can be tried while there are no temp tables involved neither a db different than the session's default is modified by the query. Tested: Changes sustain mtr rpl_parallel --mysqld=--mts-exp-slave-run-query-in-parallel=1 --mysqld=--binlog-format=statement ------------------------------------------------------------ revno: 3249 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-17 14:46:15 +0200 message: wl#5569 MTS fixing PB2 failures, incl valgrind issues, long exec time and asserting in a test. ------------------------------------------------------------ revno: 3248 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-17 00:00:47 +0200 message: merge from  wl#5569 repo to local branch rpl_sequential opt files are added to avoid mtr give up to process a bulk of unsafe warnings. ------------------------------------------------------------ revno: 3247 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-16 23:41:45 +0200 message: wl#5569 MTS Adding transparent support/fallback to the sequential execution cases of 1. Query-log-event 2. Rows_query_log_event info event Both cases can be fully parallelized in future project. Fixing an issue in move_queue_head() that was surficed as an assert in Slave_worker::slave_worker_group_ends(). Fixing destoying an event by Worker. ------------------------------------------------------------ revno: 3246 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-14 16:46:20 +0200 message: merge from wl5569 repo ------------------------------------------------------------ revno: 3245 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-14 10:57:16 +0200 message: wl#5569 MTS a light cleanup to arrange the option/system var names properly - mts_-prefixing, and _exp prefixing for experimental features needed for benchmarking (mts_exp_slave_local_timestamp) or suppored limitly (mts_exp_slave_run_query_in_parallel for Query-log-event). Fixing GAQ size. It might be too tight e.g in case of the max WQ length of 1; tested with running rpl_parallel supplying --mts-slave-worker-queue-len-max=1. ------------------------------------------------------------ revno: 3244 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-13 18:53:32 +0200 message: wl#5569 MTS fixing a valgrind stack cauased by extra pfs-keys/cond_var. Those are removed with Alfranio`s consent ------------------------------------------------------------ revno: 3243 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-13 17:57:01 +0200 message: wl#5569 MTS fixing a set of valgrind warning cauased by a c&p ------------------------------------------------------------ revno: 3242 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-13 16:52:50 +0200 message: wl#5569 MTS updating results for few tests. ------------------------------------------------------------ revno: 3241 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-12-11 21:00:47 +0200 message: wl#5569 MTS 1. Fixing recovery related issue of DBUG_ASSERT(rli->get_event_relay_log_pos() >= BIN_LOG_HEADER_SIZE); at slave start with shifting mts_recovery_routine() at front of the assert. 2. Making SKIP-ed event to commit to the central RLI. That is correct since Workers are not executing anything at this time. 3. Fixing the default for mts_checkpoint_period which should not be zero normally. Zero makes sense solely for debugging (so we may stress that through VALID_RANGE(1,...). 4. Introduced a general mts-unsupported error/warning to apply to cases of non-zero parallel workers and a feature that parallelization can't work with. ------------------------------------------------------------ revno: 3240 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-10 18:25:27 +0200 message: merge from wl5569 repo to a local branch ------------------------------------------------------------ revno: 3239 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-10 17:50:03 +0200 message: wl#5569 MTS Improving GAQ in a) limit size to be capable to hold items while all WQ:s are full b) move_queue_head() contained a flaw to make no progress falsely c) never let to enque in GAQ while it's full ------------------------------------------------------------ revno: 3238 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-09 19:46:27 +0200 message: merge from wl5569 repo to a local branch ------------------------------------------------------------ revno: 3237 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-09 19:45:02 +0200 message: wl#5569 MTS Integration with wl#5599 recovery for MTS and fixing two asserts. One is due to missed cleanup of errored-out rows-events; the other is a work-around on w->curr_group_exec_parts->dynamic_ids is initialized to have one partition on the Worker startup, but it should not. ------------------------------------------------------------ revno: 3236 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-08 13:59:07 +0000 message: WL#5599 Fixed warning messages. ------------------------------------------------------------ revno: 3235 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-08 12:59:07 +0000 message: WL#5599 Fixed test cases. ------------------------------------------------------------ revno: 3234 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-08 01:30:32 +0000 message: WL#5599 Fixed failures in test cases. ------------------------------------------------------------ revno: 3233 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-08 00:33:48 +0000 message: merge mysql-trunk --> mysql-next-mr-wl5569 Conflicts: . mysql-test/r/log_tables_upgrade.result . mysql-test/r/mysql_upgrade.result . mysql-test/r/mysql_upgrade_ssl.result . mysql-test/r/mysqlcheck.result . mysql-test/suite/perfschema/r/pfs_upgrade_lc0.result . mysql-test/suite/rpl/t/disabled.def . mysql-test/suite/sys_vars/r/all_vars.result . mysql-test/t/system_mysql_db_fix40123.test . mysql-test/t/system_mysql_db_fix50030.test . mysql-test/t/system_mysql_db_fix50117.test . sql/log_event.cc . sql/log_event.h . sql/rpl_mi.h . sql/rpl_slave.cc . sql/share/errmsg-utf8.txt ------------------------------------------------------------ revno: 3232 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-07 20:01:39 +0200 message: manual merge with a piece of recovery support on repo. rpl_parallel hits an assert that Alfranio is fixing ------------------------------------------------------------ revno: 3231 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-07 19:35:16 +0200 message: wl#5569 MTS Testing related fixes incl master_pos_wait() support and thereafter replacing sleeps with the functioning sync_slave_with_master; Fixing the limitted Q-log-event parallelization. After the fixing mixture of rows- and Q- transactions can run concurrently. Q-transaction will be treated sequentially by default. ------------------------------------------------------------ revno: 3230 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2010-12-05 22:04:17 +0200 message: wl#5569 WL#5599 MTS & recovery Refining and correcting two wl:s integration. The main achievement is events execution status is consistently recorded into the Worker and the central RL recovery tables. That was tested manually in rather agressive env where IO was used to reconnect randomly and load from Master contained Rotate events. TODO: to fix: rpl.rpl_parallel_conf_limits may not pass to address: Multi-stmt Query-log-event transaction case (see todo in sources). to destruct by Workers their executed events (was deferred until ev->update_pos started working). (Alfranio) to deploy mts_checkpoint_routine() call inside the successful event read branch of next_event(). Otherwise no calling happens when Coord is constanly busy with read/distribute. ------------------------------------------------------------ revno: 3229 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-12-04 19:14:50 +0200 message: merging from the repo wl5569 ------------------------------------------------------------ revno: 3228 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-12-04 15:45:02 +0000 message: Added mutex to the checkpoint_routine. ------------------------------------------------------------ revno: 3227 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-03 16:56:11 +0000 message: Implemented periodic checkpoint if parallel slave is enabled. ------------------------------------------------------------ revno: 3226 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-03 10:15:45 +0000 message: Fixed commit_positions() and removed unnecessary checkpoint thread. ------------------------------------------------------------ revno: 3225 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-02 20:13:12 +0200 message: manual merge to wl#5569 tree ------------------------------------------------------------ revno: 3224 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-02 19:46:46 +0200 message: wl#5569 MTS User interface related: set @@global.slave_parallel_workers= `non-zero` following with `START SLAVE` starts slave with so many Worker threads. That is non-zero value is defacto the slave parallel execution mode. Earlier introduced enum enum_slave_exec_mode  SLAVE_EXEC_MODE_PARALLEL is withdrawn. Fixes rli->mts_pending_jobs_size statistics which might cause assert-crash otherwise. a silly c&p mistake of relay-log name change notification. Made a little clean-up including relocation of init-ion of workers related stuff into start_slave_workers(). Many changes in tests due to SLAVE_EXEC_MODE_PARALLEL and not only. ------------------------------------------------------------ revno: 3223 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-01 19:08:21 +0200 message: wl#5569 MTS The limit conditions such as WQ len, total WQ:s size related changes. Also a new test file is added. ------------------------------------------------------------ revno: 3222 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-11-30 16:39:40 +0200 message: merging from from wl#5569 repo containing wl#5599 integration ------------------------------------------------------------ revno: 3221 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-11-30 16:02:15 +0200 message: wl#5569 MTS Fixing group_relay_log_name change propagation from C to W; Garbage collection in the Partition-to-Worker hash is added with a parameter of how many records in the hash are tolerated w/o checking of the usage counter. Adding C-W synchronization due to: - overall WQ:s data max - hitting the limit of a WQ length Adding Flow Control infrastructure with - level of the hungry Worker forcing Coordinator to distribute eagerly symmetrically a Worker whose load is more than 100 % - hungry level is considered as fed-up. - nap time for C in case all WQ:s lengths are above the level. - a weight param to the base nap as a function of the number of fed-up W:s. TODO: UNTIL to force sequential exec; To fix ROWS_QUERY_LOG_EVENT corner case; to fix commented out // if (!ev) delete ev; after wl#5599 is merged (ev->update_pos() is done). ------------------------------------------------------------ revno: 3220 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-11-27 17:36:50 +0200 message: wl#5569 Providing relay-log name for wl#5599. Protocol of action on the C and W sides is described in rpl_rli_pdb.h. Erroring out in case of parallel exec and ROWS_QUERY_LOG_EVENT. (todo: the native sequential mode for the event needs some revision, in particular `delete ev' shall happen *always* in rli->cleanup_context not in two places as of current). ------------------------------------------------------------ revno: 3219 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-11-26 23:08:30 +0200 message: wl#5569 MTS Partitioning conflict detection and handling is implemented. A new option to run Query in parallel though incompatibly with Rows- case in that the default db not the actual db:s are used as the partition key. User interface gained the global var and the cmd line opt: slave_run_query_in_parallel (Welcome to the set! :-) ------------------------------------------------------------ revno: 3218 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-andrei timestamp: Fri 2010-11-26 16:15:37 +0000 message: There was a mismatching between the number of fields read and write and by consequence the read was failing for the Slave_worker. ------------------------------------------------------------ revno: 3217 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-11-25 11:03:54 +0200 message: wl#5569 merging with wl#5599 piece of code ------------------------------------------------------------ revno: 3216 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-11-25 10:47:39 +0200 message: wl#5569 Converting the prototype time db2w hash to be concurrent; Necessary inruduction of the least occupied Worker notion. It's currently computed as Worker having the least number of distributed partitions. Adding parallel support for Query_log_event; caution: 1. the session/default not the actual db as the key 2. may not have been tested against all use cases (e.g int vars) Fixing slave stop issues. ------------------------------------------------------------ revno: 3215 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-11-22 20:57:13 +0200 message: wl#5569 extinding futher interfaces to wl#5599 with propagating future_event_relay_log_pos to the Worker exec context. ------------------------------------------------------------ revno: 3214 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-11-20 19:23:42 +0200 message: wl#5569 MTS Worker pool start, stop, kills, error out implementation. ------------------------------------------------------------ revno: 3213 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-11-19 16:51:58 +0200 message: wl#5569 recovery interfaces for wl#5599 implementation. The essence of this patch is to provide GAQ object implimentation and valid life cycle. The checkpoint handler prior to call store methods of wl#5599 is supposed to invoke rli->gaq->move_queue_head(&rli->workers). See a simulation of that near ev->update_pos() of the mail sql thread loop. The checkpoint info is composed as instance of Slave_job_group to reside as rli->gap->lwm. Todo: uncomment +  // delete ev;  // after ev->update_pos() event is garbage once the real checkpoint has been done. Todo: the real implemention needs to take care of filing Slave_job_group::update_current_binlog as initially so at time of executing Rotate/FD methods. +  // experimental checkpoint per each scheduling attempt +  // logics of next_event() + +    rli->gaq->move_queue_head(&rli->workers); ------------------------------------------------------------ revno: 3212 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-11-18 16:50:54 +0200 message: wl#5569 wl#5599 Recovery related. Prototyping the worker RLI instantiation, to be elaborated on. ------------------------------------------------------------ revno: 3211 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-11-18 16:00:52 +0200 message: wl#5569 MTS Extending the wl#5563 prototype gradually. This commit addresses: 1. recovery interface (a new Worker rli plus rli->gaq and pseudo-code for checkpoint to update GAQ and the central RLI recovery table. Wrt rli, C and W execute do_apply_event(c_rli) where c_rli is the central instance. C executes update_pos(c_rli), but W update_pos(w_rli). others: - decreased processing time for rpl_parallel, serial. ------------------------------------------------------------ revno: 3210 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2010-11-14 11:55:32 +0000 message: Post-push fix for WL#5599. ------------------------------------------------------------ revno: 3209 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-11-12 17:58:12 +0000 message: Post-push fix for WL#5599. ------------------------------------------------------------ revno: 3208 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-11-11 11:53:01 +0000 message: WL#5599 The patch changed the handler's functions, i.e. init_info, check_info, flush_info, remove_info and end_info and the related private member functions, in both file and table handlers, to accept an index that identifies the information that will be read or written. This is necessary now because the handlers will be used by the workers to read and write information from file(s) and table and there may be several workers running at the same time and thus an index is used to identify the worker that is accessing information. This change is also necessary for the multi-master replication as information from each master must be uniquely identified. ------------------------------------------------------------ revno: 3207 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-11-10 10:57:13 +0000 message: Refactory to start work on WL#5599. ------------------------------------------------------------ revno: 3206 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-11-09 13:34:18 +0000 message: Removed mysql-test/collections/mysql-next-mr.crash-safe.* in the WL#5569. ------------------------------------------------------------ revno: 3205 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-11-09 13:04:14 +0000 message: merge mysql-next-mr.crash-safe --> mysql-next-mr-wl5569 Conflicts: . sql/CMakeLists.txt . sql/Makefile.am . sql/sql_class.h . sql/rpl_slave.cc ------------------------------------------------------------ revno: 3204 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-11-09 11:39:37 +0000 message: merge mysql-next-mr-wl5563-labs --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3203 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-17 23:33:37 +0300 message: wl#5563 simplifying memory handling for the Coor-Workers transport to avoid sporadic crashes ------------------------------------------------------------ revno: 3202 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-17 21:19:56 +0300 message: wl#5563 leaving out a fine garbage collection. That task is unnessary to solve at prototyping time. Update-pos routine to be implemented is going to eliminated that piece of code ------------------------------------------------------------ revno: 3201 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-17 20:38:35 +0300 message: wl#5563 Extending the tests base to split the former rpl_parallel into two to run in serial exec mode as well. ------------------------------------------------------------ revno: 3200 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-17 11:49:00 +0300 message: wl#5563 improved test; fixed a delete issue that was used to crash; added @@global.slave_local_timestamp to fill in timestamp col slave clock value. Performance growth can be seen through the test. todo: merge with Alfranio work on hashing and dyn alloc of PFS obj:s. ------------------------------------------------------------ revno: 3199 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Wed 2010-09-15 14:51:49 +0300 message: wl#5563 tests for the wl. Number of workers and iterations can be tuned. todo: convert as param:s to pass to the test through mtr ------------------------------------------------------------ revno: 3198 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Mon 2010-09-13 18:22:41 +0300 message: wl#5563 adding an ingeneous no-stress-attempting-yet test that also fired an assert. Refined the Worker instance ref computing because cleanup_context() is executed by the sql-thread the coordinator as well ------------------------------------------------------------ revno: 3197 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Mon 2010-09-13 13:15:38 +0300 message: wl#5563 Rows-event parallelization basically is implemented although tested shallowly. Write access to rli central stuct by workers may not be eliminated fully at this phase. E.g that relates to errors. todo: to prove rli gets out of Worker scope todo: to provide a stress test ------------------------------------------------------------ revno: 3196 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Sat 2010-09-11 17:00:08 +0300 message: wl#5563 adding Rows-event limitted to one Worker support. Deferred deletion did not check emptyness of the list ------------------------------------------------------------ revno: 3195 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-10 20:36:07 +0300 message: wl#5563 correcting comments to indicate less limitations ------------------------------------------------------------ revno: 3194 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-10 20:32:39 +0300 message: WL#5563 Prototype for Slave parallelized by db name More progress to the WL in that the STMT binlog-format works while the conceptual limits are held. That is no query/transaction is allowed to deal with more than one db. Addressed a complication in that update pos method that is run by Coordinator belongs to Log_event hierarchy and therefore the event deletion now by Worker must be careful. Todo: 1. (High prior) fix Row-format complications 2. (Hight prior) Elaborate on the hash function to be a function on db text name 3. (Optional)  Consider moving update_pos to the RLI class to get rid of the delete logics complication. How-to-use: The instuction can be found in comments of the previous commit, see there for more details. In brief though, the db names have to follow a pattern: `test[0-9]'. E.g test0, test1, test2, test3 for the default four Worker threads. Slave side has to set @@global.slave_exec_mode=PARALLEL; before START SLAVE. ------------------------------------------------------------ revno: 3193 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Thu 2010-09-09 21:43:16 +0300 message: WL#5563 Prototype for Slave parallelized by db name This is an intermediate commit that indicates some progress. Namely, the worker pool operates correctly and with signs of scalable performance. How to test: connection master; set @@global.binlog_format=statement; connection slave; set @@global.slave_exec_mode=PARALLEL; set @@global.binlog_format=mixed; show processlist; => IO, SQL threads + 4 workers by default change master to ... connection master; create database test0; create database test1; create database test2; create database test3; # create databases with magic names ""test[0-9]+"", where the number will index # a worker. create database test0; create database test1; create database test2; create database test3; # create tables. they are only of MyISAM type for now use test0; create table tm_1(a int, b int) engine=myisam; use ... # DML on tables: use test[0-3]; insert into tm_1 values (1,0); ... ... connection slave; # monitor CPU (visually this time: top etc) # check correctness e.g select count(*) from test[0-3].tm_1; connection master; select count(*) from test[0-3].tm_1; ****** ------------------------------------------------------------ revno: 3364 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-08-18 17:09:22 +0300 message: wl#5569 MTS Refining rpl_rotate_logs that could not produce deterministic output. The list of binlogs contained one binlog more than expected. ------------------------------------------------------------ revno: 3363 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-08-18 14:56:01 +0300 message: updating result files that were left incorrect by the last merge. ------------------------------------------------------------ revno: 3362 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-08-18 14:44:59 +0300 message: wl#5569 MTS Failure in recovery when binlog-checksum is active. The reason of the failure was in that parsing of relay log by MTS recovery gaps computing did not make sure to use the relay-log own FormatDescriptor events that contain checksumming info for all events in the log. Fixed with taking care to find out the checksum algorithm for every relay log as the first step of MTS recovery gaps computing. ------------------------------------------------------------ revno: 3361 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-08-17 11:21:23 +0300 message: merge from trunk forced to resolve few semantical conflicts caused by changes in THD::enter_cond() of the trunk. ------------------------------------------------------------ revno: 3360 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-07-27 08:56:14 +0100 message: Fixed failure in test rpl_mts_check_concurrency when running in the mts collection. ------------------------------------------------------------ revno: 3359 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-26 19:46:41 +0100 message: Added a test case that checks if MTS allows to concurrently access the replication tables, and as such, concurrently commit transactions that update different databases. ------------------------------------------------------------ revno: 3358 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-22 20:08:43 +0100 message: Configured rpl_parallel_switch_sequential to run in row and mixed mode to avoid cluttering the error log with messages on unsafe execution. ------------------------------------------------------------ revno: 3357 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-22 19:02:14 +0100 message: This patch contains the following fixes: . Removed suppressed warning introduced in the wrong test case (i.e. rpl_corruption) and put it in the correct one (i.e. rpl_row_corruption). . Introduced variable to avoid clutering the error log with several warning messages on unsafe execution. ------------------------------------------------------------ revno: 3356 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-22 11:01:12 +0100 message: This patch has the following changes: . Specific directories were created for the MTS runs in the default.push. . Warning message was suppressed in the rpl_corruption.test. . Annoying debug outputs were removed from the error log. However, this is a temporary solution as it forbids to enable traces. ------------------------------------------------------------ revno: 3355 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-07-20 11:56:40 +0100 message: merge mysql-trunk --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3354 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-19 22:26:30 +0300 message: wl#5569 MTS valgrind reported a stack on rpl_savepoint. The problem appears to be in that at computing slave_sql_running_state in show_mater_info() the sql thread proc_info pointer could refer to a value in a stack that has already gone. Fixed with making proc_info to point to a string literal. ------------------------------------------------------------ revno: 3353 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-19 17:46:43 +0100 message: Suppressed warning messages that could potentially cause problems while running mts crash safe test cases. ------------------------------------------------------------ revno: 3352 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-07-18 21:46:45 +0300 message: wl#5569 MTS Cosmetic changes are done to address readability and clearness of source code of the MTS patch. ------------------------------------------------------------ revno: 3351 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-07-18 14:52:44 +0300 message: wl#5569 MTS Inadvertently introduced hunk two rev:s back is reverted to please rpl_*_mts_crash_safe. ------------------------------------------------------------ revno: 3350 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-07-17 00:51:45 +0300 message: wl#5569 MTS fixing build issue for embedded. Public visibility for Rows_log_event::do_apply_event() is restored. ------------------------------------------------------------ revno: 3349 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-07-16 20:08:31 +0300 message: wl#5569 MTS The patch contains improvements after code review. Changes are mostly consmetic. ------------------------------------------------------------ revno: 3348 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-07-16 02:11:11 +0300 message: bug#12755663 MTS: RPL_CIRCULAR_FOR_4_HOSTS FAILS: CANT EXECUTE THE CURRENT EVENT GROUP MTS stopped with an error in the middle of the test. The reason is that a group of events from the slave itself was processed partly to modify the group position. In the following restart the wrong group bondary made slave either to error out or assert. Fixed with locating a possible race condition allowin Coordinator to ignore actual failed status of a Worker. So in the case of the test, the slave server group can't be started. Notice, this is a trial patch since I can't catch the failure on available to me hosts at all. ------------------------------------------------------------ revno: 3347 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-07-14 12:40:06 +0300 message: WL#5569 MTS further extensive rpl_circular_for_4_hosts exersices with --repeat 10 --parallel=8 revealed a race condition in that Coordinator might miss to catch not-running status for a Worker. That made Coordinator to skip only a part of a group of the slave server own events so the slave stops at not the bondary of a group. Fixed with moving marking of the errored-out Worker as failed prior to its APH entries release. TODO: notice there can be a possibility to stop at not the boundary due to graceful STOP SLAVE if one is run at time of skipping self-originated events. However this issue belongs to STS and might be similar with BUG@12604951 and BUG@12728160. ------------------------------------------------------------ revno: 3346 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-07-14 08:03:55 +0100 message: Post-push fixes for WL#5569 Injecting faults while updating a myisam table requires to flush the changes before committing suicide. So we have introduced the follwing code: DBUG_EXECUTE_IF(""crash_after_commit_and_update_pos"", -                       DBUG_SUICIDE();); +           sql_print_information(""Crashing crash_after_commit_and_update_pos.""); +           flush_info(TRUE); +           DBUG_SUICIDE(); Besides we improved some comments. ------------------------------------------------------------ revno: 3345 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-07-13 16:23:57 +0100 message: WL#5569 ------------------------------------------------------------ revno: 3344 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-07-13 00:10:43 +0300 message: wl#5569 MTS merge trunk -> wl5569-tree ------------------------------------------------------------ revno: 3343 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-12 23:36:17 +0300 message: wl#5569 MTS adding suppression due to expected warning to rpl_circurlar_for_4_hosts; decreasing a loop limit in rpl_parallel_switch_sequential in case of statement format. ------------------------------------------------------------ revno: 3342 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-12 14:46:23 +0300 message: WL#5569 MTS Fixing code and test due to rpl.rpl_circular_for_4_hosts  mismatch failure, like http://pb2.norway.sun.com/?action=archive_download&archive_id=3608382. The reason of the mismatch was that when having two group of events to execute, the first for a Worker and the 2nd for Coordinator, Coordinator waited for the 1st group completion but did not verify success of synchronization. So in a case of the failed applying of the 1st group processing of the 2nd could find an inconsistent state to end up with a segfault (even though only the mismatch has been seen so far). ------------------------------------------------------------ revno: 3341 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-07-10 22:40:01 +0100 message: Avoiding busy waiting when running mts recovery tests. ------------------------------------------------------------ revno: 3340 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-07-09 23:11:58 +0100 message: Removed --slave-checkpoint-period from MTS test cases. ------------------------------------------------------------ revno: 3339 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-07-09 23:08:07 +0100 message: Improved test cases for the WL#5569. ------------------------------------------------------------ revno: 3338 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-08 22:40:52 +0300 message: wl#5569 MTS The patch refines logics of applying phase of MTS-recovery to always applying events that are for Coordinator; fixes few tests to make them passable on PB; makes GAQ size to be of checkpoint_group value. ------------------------------------------------------------ revno: 3337 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-08 07:54:34 +0100 message: Reduced the timeout period to run the checkpoint routine by setting slave-checkpoint-period to 30. ------------------------------------------------------------ revno: 3336 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-08 07:44:35 +0100 message: merge mysql-trunk --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3335 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-07-06 12:46:05 +0300 message: wl#5569 MTS refining wait for db-hash entry release at event distribution. The graceful STOP is not accepted at this point so Coordinator continues to stay in a loop. ------------------------------------------------------------ revno: 3334 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-07-05 20:43:04 +0300 message: bug#12719875 possible MTS recovery issue. MTS stopped with an error after failing to apply an event. It turned out that the event was sceduled incorrectly due to earlier stop by Single-Threaded Slave not at the group boundary but rather in the middle of it. Fixed with forcing CREATE..SELECT be logged as two groups. The CREATE-TABLE group is surrounded with its own BEGIN/COMMIT braces. ------------------------------------------------------------ revno: 3333 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-07-04 18:14:09 +0300 message: wl#5569 MTS Adding a rule to run PB with all suites in MTS with binlog-format ROW. ------------------------------------------------------------ revno: 3332 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-07-03 23:29:34 +0300 message: wl5569 MTS cleanup in one file. ------------------------------------------------------------ revno: 3331 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-07-03 23:16:02 +0300 message: wl5569 MTS bzr commit mail address changed; a minor cleanup to make mts_is_worker() with const argument; releasing a test to run in MTS. ------------------------------------------------------------ revno: 3330 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-07-02 08:58:56 +0100 message: Fixed use of the performance schema in the replication code and concurrency issue in the IO Thread. In particular, the IO Thread was calling flush_master_info without grabbing locks. ------------------------------------------------------------ revno: 3329 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-01 16:41:35 +0300 message: wl5569 MTS merging from the main repo. ------------------------------------------------------------ revno: 3328 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-01 15:48:25 +0300 message: wl#5569 MTS the final cleanup patch. There are few glitches that were considered as tolerable at least for time of the total wl's code is being reviewed. That includes: - no support to old load-data events - no support for FK to add to the list, there are few places in the patch that suggests to deploy error branches each time flush_info() is called. ------------------------------------------------------------ revno: 3327 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-07-01 13:16:52 +0300 message: wl#5569 MTS The patch cleans up some host of code. ------------------------------------------------------------ revno: 3326 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-28 11:30:18 +0300 message: wl#5569 MTS replacing views with regular tables for consistency verification in rpl_parallel_innodb. Also a minor cleanup in rpl_parallel is done. ------------------------------------------------------------ revno: 3325 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-27 20:31:45 +0300 message: wl#5569 MTS Cleanup and addressing sporadic rpl_temp_table_mix_row failure in post-execution mtr.check_testcase(). The check of the test failure was caused by faulty optimization in avoiding to migrate temporary tables from Coordinator to Workers in case of rows-event assignement. while it's correct with the homogenous rows-event only load, the mixture can fail. Fixed with removing the optimization so map_db_to_worker() always relocates which is somewhat suboptimal and should be improved in future. ------------------------------------------------------------ revno: 3324 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-27 13:12:52 +0100 message: Ensured that updates to the worker_info_repository are transactional and fixed the slave_checkpoint_group_basic test case. ------------------------------------------------------------ revno: 3323 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-26 13:02:59 +0100 message: Fixed test case. ------------------------------------------------------------ revno: 3322 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-06-25 15:14:24 +0100 message: Introduced test case for recovery with MTS and fixed bugs in recovery. ------------------------------------------------------------ revno: 3321 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-24 15:38:19 +0300 message: wl#5569 MTS This patch makes a bit of cleanup, addresses one memory-allocation todo and completes fixing valgrind report (rpl_parallel_start_stop) due to strings allocation in Slave_job_group items. ------------------------------------------------------------ revno: 3320 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-24 12:38:34 +0300 message: wl#5569 MTS this patch completes the previous one to fixes a result file and make the innodb specific test verification to base on tables not views. ------------------------------------------------------------ revno: 3319 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-24 00:11:22 +0300 message: wl#5569 MTS this is an exploratory patch to sort out if verification method what was based on views has its own not related to mts flaw. The patch calls verification macro on the tables that required some adjustment. ------------------------------------------------------------ revno: 3318 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-06-23 07:56:15 +0300 message: wl#5569 MTS fixing results of mysqld--help-win. ------------------------------------------------------------ revno: 3317 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-22 19:20:40 +0100 message: merge mysql-next-mr-wl5569 (local) --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3316 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-22 19:17:43 +0100 message: In some platforms, such as Windows, thread's wait time is stored in 100ns units. However, when computing the difference between two values, the result value was not multiplied by 100. Besides, there was a casting problem when the aforementioned result value was assigned to an ulong. ------------------------------------------------------------ revno: 3315 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-22 18:54:23 +0100 message: Fixed how mts copes with recovery. ------------------------------------------------------------ revno: 3314 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-21 19:10:54 +0300 message: wl#5569 MTS Fixing valgrind warnings. ------------------------------------------------------------ revno: 3313 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-21 18:15:43 +0300 message: wl#5569 MTS rpl_parallel_start_stop.test could fail sporadicaly with timeout. ------------------------------------------------------------ revno: 3312 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-20 23:21:56 +0100 message: merge mysql-next-mr-wl5569 (local) --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3311 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-20 23:19:06 +0100 message: Fixed error when computing the Lower-Water-Mark. If two or more jobs were removed from the Group of assigned jobs and one of the jobs had a non-empty group relay log but the last one had an empty group relay log. The Lower-Water-Mark was not correctly updated, because the algorithm assumed that the group relay log was null. ------------------------------------------------------------ revno: 3310 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-20 11:52:44 +0100 message: Fixed valgrind errors. Slave_job_group was silently being cast to LOG_POS_COORD while calling sort_dynamic(&above_lwm_jobs, (qsort_cmp) mts_event_coord_cmp) and by consequence mts_event_coord_cmp(LOG_POS_COORD *, LOG_POS_COORD *). This had two problems: . The first two entries in the Slave_job_group were not a pointer to a char * and my_offset. . Even if the first two entries were char * and my_offset, such casting could lead to alignment problems. To fix the problem, we avoid this casting. ------------------------------------------------------------ revno: 3309 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-19 19:14:50 +0300 message: wl#5569 MTS fixing slave_transaction_retries_basic_64.result ------------------------------------------------------------ revno: 3308 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-19 16:11:25 +0300 message: wl#5569 MTS fixing tests. ------------------------------------------------------------ revno: 3307 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-19 12:33:36 +0300 message: wl#5569 MTS Fixing rpl.rpl_mixed_binlog_max_cache_size that revealed incorrect asynchronous handling of a Rotate event which does not split the current group and therefore has to be executed after all previously scheduled events. Fixing sensetivity of two other tests to mtr's invocation environment that includes inital values of slave_parallel_workers and slave_transaction_retries. ------------------------------------------------------------ revno: 3306 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-19 09:04:19 +0100 message: Fixed some windows failures. ------------------------------------------------------------ revno: 3305 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-06-18 19:58:21 +0100 message: Fixed some recovery issues. ------------------------------------------------------------ revno: 3304 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-17 21:01:58 +0300 message: wl#5569 MTS fixing tests and a segfault at the end of handle_slave_sql() happened after worker initialization failed (e.g rpl_row_log on win). ------------------------------------------------------------ revno: 3303 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-17 18:34:16 +0300 message: wl#5569 MTS fixing tests. ------------------------------------------------------------ revno: 3302 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-17 14:00:41 +0300 message: wl#5569 MTS fixing rpl_row_basic_3innodb similarly to the previous patch. ------------------------------------------------------------ revno: 3301 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-17 13:51:59 +0300 message: wl#5569 MTS fixing few tests. 1. Policy is implemented for reacting with a warning in a case of failing worker leaves the total slave state with gaps thereby inconsistent. 2. Two tests that were used to time out due to reset master/slave was disabled in there. ------------------------------------------------------------ revno: 3300 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-06-17 02:24:59 +0100 message: Removed unnecessary test cases and augment others in order to test recovery. ------------------------------------------------------------ revno: 3299 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-06-16 19:46:22 +0300 message: wl#5569 MTS fixing slave_parallel_workers_basic and rpl_stop_middle_group which cant run in MTS ------------------------------------------------------------ revno: 3298 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-06-16 11:29:53 +0300 message: wl#5569 MTS adding new tests to sys_vars.\ ------------------------------------------------------------ revno: 3297 committer: Luis Soares <luis.soares@oracle.com> branch nick: mysql-trunk-wl5569 timestamp: Thu 2011-06-16 01:41:32 +0100 message: WL#5569 Adding a global suppression for the warning that may appear when stopping the slave sql thread in the middle of a group. This should affect MTS mode only. ------------------------------------------------------------ revno: 3296 committer: Luis Soares <luis.soares@oracle.com> branch nick: mysql-trunk-wl5569 timestamp: Thu 2011-06-16 01:40:41 +0100 message: WL#5569 Renames worker-info-repository to slave-worker-info-repository in some tests option files. ------------------------------------------------------------ revno: 3295 committer: Luis Soares <luis.soares@oracle.com> branch nick: mysql-trunk-wl5569 timestamp: Thu 2011-06-16 01:32:37 +0100 message: WL#5569 More test fixes. Removing remaining prefixes 'mts' from mts variables, which have been renamed recently. ------------------------------------------------------------ revno: 3294 committer: Luis Soares <luis.soares@oracle.com> branch nick: mysql-trunk-wl5569 timestamp: Thu 2011-06-16 00:27:20 +0100 message: WL#5569 Fixing rpl_parallel result file. ------------------------------------------------------------ revno: 3293 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-15 20:41:33 +0300 message: wl#5569 MTS correcting --slave-parallel-workers in few more files ------------------------------------------------------------ revno: 3292 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-15 20:31:46 +0300 message: wl#5569 MTS correcting --slave-parallel-workers in collections/default.push ------------------------------------------------------------ revno: 3291 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-15 20:12:11 +0300 message: wl#5569 MTS Cleanup, including 1. decreasing number and renaming system variables. Important for debugging command line options are replaced with reasonble constant values and only necessary are retained. 2. Small encapsulation in ha_blackhole.cc is done. ------------------------------------------------------------ revno: 3290 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-06-15 15:59:23 +0100 message: Fixed replication valgring failures caused by the MTS. ------------------------------------------------------------ revno: 3289 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-14 21:23:13 +0300 message: wl#5569 MTS wl#5754 Query event parallel execution Fixing failing tests and a failure in gathering accessed databases that was caused by a recent merge from trunk. ------------------------------------------------------------ revno: 3288 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-14 13:35:20 +0300 message: merge from trunk ------------------------------------------------------------ revno: 3287 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-06-14 12:27:38 +0300 message: wl#5569 MTS Fixing failing tests due to a. a flaw in `isolated parallel' mode implementation. Isolation applies to a group of event rather than to an instance. And event that contains over-max accessed db:s or event from Old master trigger marking the current being scheduled group. Such group will be executed having all prior scheduled done and nomore will be scheduled until the group is done. b. Notification to Coordinator about errored-out Worker is corrected. ------------------------------------------------------------ revno: 3286 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-12 22:33:32 +0300 message: wl#5569 MTS making default.push to run rpl suite with non-default --mts-slave-parallel-workers > 0 in all three format/mode (row,stmt, mixed). The default is run for all suites in mixed mode and rpl suites with row+ps, stmt formats. ------------------------------------------------------------ revno: 3285 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-12 22:05:05 +0300 message: wl#5569 MTS manual merge with few fixes for segfault of the last merge from the trunk etc, compilation issue on embedded. ------------------------------------------------------------ revno: 3284 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-06-09 18:35:59 +0100 message: Post-fixes for merge. Fixed compilation in Windows and removed an used options. ------------------------------------------------------------ revno: 3283 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-06-09 16:27:47 +0100 message: merge mysql-trunk --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3282 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-06-06 13:51:19 +0300 message: wl#5569 MTS STOP SLAVE now stops consistently w/o gaps, KILL shall be used for an urgent stop, an error case behaves like the killed. For instance, a Worker errors out, it sends KILL to Coordinator through THD::awake(), and Coordinator kill the rest through setting a special Worker-running status to killed (which breaks the read-exec loop of a Worker). ------------------------------------------------------------ revno: 3281 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-06-05 20:01:51 +0300 message: wl#5569 MTS More cleanup, fixes due to found issues when running tests, some improvements incl in stopping Workers to make routine to distinguish between killed and gracefully stopped cases so in the end STOP SLAVE will guarantee consistent state (some todo remains still). ------------------------------------------------------------ revno: 3280 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-05-30 13:05:07 +0300 message: WL#5569 MTS WL#5754 Query event parallel applying ----------------------------------------------------------------- Aggregating 7 commits that are not pushed yet to the wl5569 repo. Find comments for each cset below. ------------------------------------------------------------------ The current patch addresses concurrent updating slave_open_temp_tables status counter. The former declaration of the underlying server variable is changed from ulong to int32. While that might affect (shrink) the actual range, there has been no specified range and now after the number of bits is the same on all platforms the range cat be set to be [0, max(int32)] ****** wl#5569 MTS Wl#5754 Query event parallel appying wl#5599 MTS recovery The patch includes some cleanup, including one for temp tables support, realization of few todo:s. ****** wl#5569 MTS wl#5754 Query event parallel applying More cleanup is done; Fixing temp tables manipulation. Asserting an impossible to support use case of group of events not wrapped with BEGIN/COMMIT. Todo: recognize old master binlog to refuse to run in parallel. ****** wl#5569 MTS Implementation of giving out the applier role to Worker for all cases but ones dealing with the Coordinators state. That includes Query event with over-max-db:s and Load-data related events. The current patch also makes old master binlog be handled by MTS though sometimes e.g for Query event to switch to the sequential mode. Fixing a race condition making C to wait endlessly if a Worker has exitted due to its applying error. ****** wl#5569 MTS correcting an assert that was used to fire as warned in the previous commit. Parallel feature tests pass now. ****** wl#5569 MTS This patch contains cleanup and simplification of logics of handling some events sequentially by Coordinator and adds memory-allocation failure branch to workers starting routine. ****** wl#5569 MTS An intermediate patch to address few issues raised by reviewers. To sum up, it's about cleanup and logics simplification of event distribution to Worker and consequent actions. Some efforts were paid to support Old Master Begin-less group of events. ------------------------------------------------------------ revno: 3279 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-05-24 17:29:35 +0300 message: WL#5569 MTS WL#5754 Query parallel appying Changing implementation of temporary tables support in MTS. Cleanup, fixing few todo:s and few potential issues found. ------------------------------------------------------------ revno: 3278 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2011-05-19 12:36:28 +0300 message: wl#5569 MTS Support for ROWS_QUERY_LOG_EVENT is added. It required refactoring of its handling in the canonical sequential mode. The event life suggests its behavior similar to objects associated with Table_map, in particural, its destoying to occur at the end-of-statement time. Tested against existing ROWS_QUERY_LOG_EVENT feature tests incl rpl_row_ignorable_event in both sequential and parallel mode. ------------------------------------------------------------ revno: 3277 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2011-05-16 22:43:58 +0300 message: wl#5569 MTS Simplifying Coordinator-Worker interfaces. In essence after this patch Worker execute events in its private context (class Slave_worker :public Relay_log_info). The only exception is Query referring to temporary table. The temp:s are maintained in the Coordinator's ""central"" rli; removing some dead code; performing a lot of cleanup. There are few todo items incl: 1. To implement several todo:s scattered across MTS' code and tests (e.g to restore protected for few members of RLI of rpl_rli.h); 2. to cover Rows_query_log_event that currently can cause hanging (e.g rpl_parallel_fallback) 3. To sort out names of classes based on Rpl_info, possibly remove  Rpl_info_worker ------------------------------------------------------------ revno: 3276 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2011-05-06 21:33:32 +0300 message: wl#5569 MTS improving benchmarking test. ------------------------------------------------------------ revno: 3275 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-04-06 15:51:58 +0300 message: wl#5569 MTS Statistics for Workers and Coordinator incl waiting times, sleeping is reported now into the error log as slave stopping time. ------------------------------------------------------------ revno: 3274 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2011-04-05 19:26:37 +0300 message: wl#5569 MTS restoring previous 4 default workers that rpl_parallel works with. ------------------------------------------------------------ revno: 3273 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-04-03 13:07:30 +0300 message: wl#5569 MTS Benchmarking related patch uniforms rpl_parallel to be run with arbitrary number of workers, db:s, tables, etc. TODO: to restore the final constinency check which is given out temporary while i could not find a way to leave it surrounded with  a --dis/en-able* stanza. ------------------------------------------------------------ revno: 3272 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2011-04-02 14:32:02 +0300 message: wl#5569 MTS a test file for benchmarking is added. Benchmarking results can be gained by extracting the master side generating and the slave side applying times like in the following loop: workers=6; for n in `seq 1 3`; do echo; echo loop: $n; echo; my_mtr.sh --mysqld=--mts-slave-parallel-workers=$workers  \ rpl_parallel_benchmark --mysqld=--binlog-format=statement \ && cat /dev/shm/var/mysqld.2/data/test/delta.out >> p${workers}_stmt.out 2>&1; done ------------------------------------------------------------ revno: 3271 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-03-30 17:11:24 +0300 message: wl#5754 Query event parallel execution Small cleanup for comments as requested by reviewer. ------------------------------------------------------------ revno: 3270 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2011-02-27 19:35:25 +0200 message: WL#5754 Query event parallel execution Bundling together implementation the whole DML+DDL Query parallel support. That includes: The earlierst four rev:s to cut off the DML stage of the parallel query project from the following devoted to DDL. The four skeleton parallel applying of Queries containing a temporary table, and implement a core of the design that is the DML queries. Queries can contain arbitrary features including temp tables. The DDL part also refined few items related to the general low-level design. In particular,  of the mark of the over-max db:s in the updated-db:s status var is turned to be another new constant value. The very last patch to the bundle addresses the last review mail notes. ------------------------------------------------------------ revno: 3269 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-01-12 01:01:02 +0200 message: merging from mysql-trunk ------------------------------------------------------------ revno: 3268 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2011-01-12 00:54:12 +0200 message: wl#5569 MTS fixing the worker threads start/stop. ------------------------------------------------------------ revno: 3267 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-27 18:54:41 +0000 message: merge mysql-trunk --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3266 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-24 01:57:03 +0200 message: wl#5569 MTS the timed-wait loop of SQL thread required a break-through parameter in case the signal missed in action and just timeout would be reported ------------------------------------------------------------ revno: 3265 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 19:03:42 +0200 message: merging from the repo wl5569 ------------------------------------------------------------ revno: 3264 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 17:49:19 +0200 message: wl#5569 MTS fixing corner cases that mtr-testing with mts workers against stardard suites reveal. ------------------------------------------------------------ revno: 3263 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 16:00:28 +0200 message: wl#5569 MTS: refining another assert that can force C to delete events that are skipped with the slave skip counter ------------------------------------------------------------ revno: 3262 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 15:34:02 +0200 message: wl#5569 MTS Correcting an assert that is hit by few tests. ------------------------------------------------------------ revno: 3261 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 13:27:15 +0200 message: wl#5569 MTS merging from the repo. ------------------------------------------------------------ revno: 3260 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-23 13:25:31 +0200 message: wl#5569 MTS fixing failing tests. ------------------------------------------------------------ revno: 3259 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-22 20:34:26 +0200 message: wl#5569 MTS merging from the repo. ------------------------------------------------------------ revno: 3258 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-22 20:31:13 +0200 message: wl#5569 MTS fixing tests failure when mtr runs --mts_slave_parallel_workers != 0. rpl000010 is a representative. Fixed with identifying, marking, running carefully ev->update_pos() and destroying an event that can split a group of events to force part to be in different relay logs. ------------------------------------------------------------ revno: 3257 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-22 13:57:18 +0200 message: wl#5569 MTS and wl#5599 MTS recovery The general recovery implementation is finished by this patch. Tested against  ./mtr rpl_parallel_conf_limits. Warning, ./mtr rpl_parallel_conf_limits rpl_parallel_conf_limits ... can fail at the 2nd etc test because of no removal of Worker tables happens at RESET SLAVE. ------------------------------------------------------------ revno: 3256 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-21 22:12:30 +0200 message: wl#5569 MTS slave_worker_info def is updated in the system db. ------------------------------------------------------------ revno: 3255 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-21 21:34:58 +0200 message: merging with repo ------------------------------------------------------------ revno: 3254 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-21 21:31:29 +0200 message: wl#5569 MTS Recovery routine part I: gathering the group recovery bitmap. ------------------------------------------------------------ revno: 3253 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-20 22:18:33 +0000 message: WL#5599 Fixed routine to compute the bitmap of executed events. ------------------------------------------------------------ revno: 3252 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-20 21:37:48 +0200 message: wl#5569 MTS adding checkpoint relay_log_name,pos as necessary part to locate a relay-log for recovery. Tested with rpl_parallel. ------------------------------------------------------------ revno: 3251 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-20 17:58:58 +0200 message: wl#5569 MTS manual merging from the repo and correcting GAQ processing with introducing a volatile byte to indicate whether an item is busy or released. ------------------------------------------------------------ revno: 3250 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-12-18 21:00:23 +0200 message: wl#5569 MTS fixing --mts-exp-slave-run-query-in-parallel=1 case when Query-log-event can be run in parallel incl DML and DDL. The feature is `exp'erimental still can be tried while there are no temp tables involved neither a db different than the session's default is modified by the query. Tested: Changes sustain mtr rpl_parallel --mysqld=--mts-exp-slave-run-query-in-parallel=1 --mysqld=--binlog-format=statement ------------------------------------------------------------ revno: 3249 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-17 14:46:15 +0200 message: wl#5569 MTS fixing PB2 failures, incl valgrind issues, long exec time and asserting in a test. ------------------------------------------------------------ revno: 3248 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-17 00:00:47 +0200 message: merge from  wl#5569 repo to local branch rpl_sequential opt files are added to avoid mtr give up to process a bulk of unsafe warnings. ------------------------------------------------------------ revno: 3247 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-16 23:41:45 +0200 message: wl#5569 MTS Adding transparent support/fallback to the sequential execution cases of 1. Query-log-event 2. Rows_query_log_event info event Both cases can be fully parallelized in future project. Fixing an issue in move_queue_head() that was surficed as an assert in Slave_worker::slave_worker_group_ends(). Fixing destoying an event by Worker. ------------------------------------------------------------ revno: 3246 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-14 16:46:20 +0200 message: merge from wl5569 repo ------------------------------------------------------------ revno: 3245 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-14 10:57:16 +0200 message: wl#5569 MTS a light cleanup to arrange the option/system var names properly - mts_-prefixing, and _exp prefixing for experimental features needed for benchmarking (mts_exp_slave_local_timestamp) or suppored limitly (mts_exp_slave_run_query_in_parallel for Query-log-event). Fixing GAQ size. It might be too tight e.g in case of the max WQ length of 1; tested with running rpl_parallel supplying --mts-slave-worker-queue-len-max=1. ------------------------------------------------------------ revno: 3244 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-13 18:53:32 +0200 message: wl#5569 MTS fixing a valgrind stack cauased by extra pfs-keys/cond_var. Those are removed with Alfranio`s consent ------------------------------------------------------------ revno: 3243 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-13 17:57:01 +0200 message: wl#5569 MTS fixing a set of valgrind warning cauased by a c&p ------------------------------------------------------------ revno: 3242 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-12-13 16:52:50 +0200 message: wl#5569 MTS updating results for few tests. ------------------------------------------------------------ revno: 3241 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-12-11 21:00:47 +0200 message: wl#5569 MTS 1. Fixing recovery related issue of DBUG_ASSERT(rli->get_event_relay_log_pos() >= BIN_LOG_HEADER_SIZE); at slave start with shifting mts_recovery_routine() at front of the assert. 2. Making SKIP-ed event to commit to the central RLI. That is correct since Workers are not executing anything at this time. 3. Fixing the default for mts_checkpoint_period which should not be zero normally. Zero makes sense solely for debugging (so we may stress that through VALID_RANGE(1,...). 4. Introduced a general mts-unsupported error/warning to apply to cases of non-zero parallel workers and a feature that parallelization can't work with. ------------------------------------------------------------ revno: 3240 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-10 18:25:27 +0200 message: merge from wl5569 repo to a local branch ------------------------------------------------------------ revno: 3239 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-10 17:50:03 +0200 message: wl#5569 MTS Improving GAQ in a) limit size to be capable to hold items while all WQ:s are full b) move_queue_head() contained a flaw to make no progress falsely c) never let to enque in GAQ while it's full ------------------------------------------------------------ revno: 3238 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-09 19:46:27 +0200 message: merge from wl5569 repo to a local branch ------------------------------------------------------------ revno: 3237 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-09 19:45:02 +0200 message: wl#5569 MTS Integration with wl#5599 recovery for MTS and fixing two asserts. One is due to missed cleanup of errored-out rows-events; the other is a work-around on w->curr_group_exec_parts->dynamic_ids is initialized to have one partition on the Worker startup, but it should not. ------------------------------------------------------------ revno: 3236 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-08 13:59:07 +0000 message: WL#5599 Fixed warning messages. ------------------------------------------------------------ revno: 3235 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-08 12:59:07 +0000 message: WL#5599 Fixed test cases. ------------------------------------------------------------ revno: 3234 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-08 01:30:32 +0000 message: WL#5599 Fixed failures in test cases. ------------------------------------------------------------ revno: 3233 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-08 00:33:48 +0000 message: merge mysql-trunk --> mysql-next-mr-wl5569 Conflicts: . mysql-test/r/log_tables_upgrade.result . mysql-test/r/mysql_upgrade.result . mysql-test/r/mysql_upgrade_ssl.result . mysql-test/r/mysqlcheck.result . mysql-test/suite/perfschema/r/pfs_upgrade_lc0.result . mysql-test/suite/rpl/t/disabled.def . mysql-test/suite/sys_vars/r/all_vars.result . mysql-test/t/system_mysql_db_fix40123.test . mysql-test/t/system_mysql_db_fix50030.test . mysql-test/t/system_mysql_db_fix50117.test . sql/log_event.cc . sql/log_event.h . sql/rpl_mi.h . sql/rpl_slave.cc . sql/share/errmsg-utf8.txt ------------------------------------------------------------ revno: 3232 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-07 20:01:39 +0200 message: manual merge with a piece of recovery support on repo. rpl_parallel hits an assert that Alfranio is fixing ------------------------------------------------------------ revno: 3231 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-12-07 19:35:16 +0200 message: wl#5569 MTS Testing related fixes incl master_pos_wait() support and thereafter replacing sleeps with the functioning sync_slave_with_master; Fixing the limitted Q-log-event parallelization. After the fixing mixture of rows- and Q- transactions can run concurrently. Q-transaction will be treated sequentially by default. ------------------------------------------------------------ revno: 3230 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2010-12-05 22:04:17 +0200 message: wl#5569 WL#5599 MTS & recovery Refining and correcting two wl:s integration. The main achievement is events execution status is consistently recorded into the Worker and the central RL recovery tables. That was tested manually in rather agressive env where IO was used to reconnect randomly and load from Master contained Rotate events. TODO: to fix: rpl.rpl_parallel_conf_limits may not pass to address: Multi-stmt Query-log-event transaction case (see todo in sources). to destruct by Workers their executed events (was deferred until ev->update_pos started working). (Alfranio) to deploy mts_checkpoint_routine() call inside the successful event read branch of next_event(). Otherwise no calling happens when Coord is constanly busy with read/distribute. ------------------------------------------------------------ revno: 3229 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-12-04 19:14:50 +0200 message: merging from the repo wl5569 ------------------------------------------------------------ revno: 3228 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-12-04 15:45:02 +0000 message: Added mutex to the checkpoint_routine. ------------------------------------------------------------ revno: 3227 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-03 16:56:11 +0000 message: Implemented periodic checkpoint if parallel slave is enabled. ------------------------------------------------------------ revno: 3226 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-12-03 10:15:45 +0000 message: Fixed commit_positions() and removed unnecessary checkpoint thread. ------------------------------------------------------------ revno: 3225 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-02 20:13:12 +0200 message: manual merge to wl#5569 tree ------------------------------------------------------------ revno: 3224 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-12-02 19:46:46 +0200 message: wl#5569 MTS User interface related: set @@global.slave_parallel_workers= `non-zero` following with `START SLAVE` starts slave with so many Worker threads. That is non-zero value is defacto the slave parallel execution mode. Earlier introduced enum enum_slave_exec_mode  SLAVE_EXEC_MODE_PARALLEL is withdrawn. Fixes rli->mts_pending_jobs_size statistics which might cause assert-crash otherwise. a silly c&p mistake of relay-log name change notification. Made a little clean-up including relocation of init-ion of workers related stuff into start_slave_workers(). Many changes in tests due to SLAVE_EXEC_MODE_PARALLEL and not only. ------------------------------------------------------------ revno: 3223 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-12-01 19:08:21 +0200 message: wl#5569 MTS The limit conditions such as WQ len, total WQ:s size related changes. Also a new test file is added. ------------------------------------------------------------ revno: 3222 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-11-30 16:39:40 +0200 message: merging from from wl#5569 repo containing wl#5599 integration ------------------------------------------------------------ revno: 3221 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-11-30 16:02:15 +0200 message: wl#5569 MTS Fixing group_relay_log_name change propagation from C to W; Garbage collection in the Partition-to-Worker hash is added with a parameter of how many records in the hash are tolerated w/o checking of the usage counter. Adding C-W synchronization due to: - overall WQ:s data max - hitting the limit of a WQ length Adding Flow Control infrastructure with - level of the hungry Worker forcing Coordinator to distribute eagerly symmetrically a Worker whose load is more than 100 % - hungry level is considered as fed-up. - nap time for C in case all WQ:s lengths are above the level. - a weight param to the base nap as a function of the number of fed-up W:s. TODO: UNTIL to force sequential exec; To fix ROWS_QUERY_LOG_EVENT corner case; to fix commented out // if (!ev) delete ev; after wl#5599 is merged (ev->update_pos() is done). ------------------------------------------------------------ revno: 3220 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-11-27 17:36:50 +0200 message: wl#5569 Providing relay-log name for wl#5599. Protocol of action on the C and W sides is described in rpl_rli_pdb.h. Erroring out in case of parallel exec and ROWS_QUERY_LOG_EVENT. (todo: the native sequential mode for the event needs some revision, in particular `delete ev' shall happen *always* in rli->cleanup_context not in two places as of current). ------------------------------------------------------------ revno: 3219 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-11-26 23:08:30 +0200 message: wl#5569 MTS Partitioning conflict detection and handling is implemented. A new option to run Query in parallel though incompatibly with Rows- case in that the default db not the actual db:s are used as the partition key. User interface gained the global var and the cmd line opt: slave_run_query_in_parallel (Welcome to the set! :-) ------------------------------------------------------------ revno: 3218 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-andrei timestamp: Fri 2010-11-26 16:15:37 +0000 message: There was a mismatching between the number of fields read and write and by consequence the read was failing for the Slave_worker. ------------------------------------------------------------ revno: 3217 [merge] committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-11-25 11:03:54 +0200 message: wl#5569 merging with wl#5599 piece of code ------------------------------------------------------------ revno: 3216 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-11-25 10:47:39 +0200 message: wl#5569 Converting the prototype time db2w hash to be concurrent; Necessary inruduction of the least occupied Worker notion. It's currently computed as Worker having the least number of distributed partitions. Adding parallel support for Query_log_event; caution: 1. the session/default not the actual db as the key 2. may not have been tested against all use cases (e.g int vars) Fixing slave stop issues. ------------------------------------------------------------ revno: 3215 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Mon 2010-11-22 20:57:13 +0200 message: wl#5569 extinding futher interfaces to wl#5599 with propagating future_event_relay_log_pos to the Worker exec context. ------------------------------------------------------------ revno: 3214 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sat 2010-11-20 19:23:42 +0200 message: wl#5569 MTS Worker pool start, stop, kills, error out implementation. ------------------------------------------------------------ revno: 3213 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-11-19 16:51:58 +0200 message: wl#5569 recovery interfaces for wl#5599 implementation. The essence of this patch is to provide GAQ object implimentation and valid life cycle. The checkpoint handler prior to call store methods of wl#5599 is supposed to invoke rli->gaq->move_queue_head(&rli->workers). See a simulation of that near ev->update_pos() of the mail sql thread loop. The checkpoint info is composed as instance of Slave_job_group to reside as rli->gap->lwm. Todo: uncomment +  // delete ev;  // after ev->update_pos() event is garbage once the real checkpoint has been done. Todo: the real implemention needs to take care of filing Slave_job_group::update_current_binlog as initially so at time of executing Rotate/FD methods. +  // experimental checkpoint per each scheduling attempt +  // logics of next_event() + +    rli->gaq->move_queue_head(&rli->workers); ------------------------------------------------------------ revno: 3212 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-11-18 16:50:54 +0200 message: wl#5569 wl#5599 Recovery related. Prototyping the worker RLI instantiation, to be elaborated on. ------------------------------------------------------------ revno: 3211 committer: Andrei Elkin <andrei.elkin@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-11-18 16:00:52 +0200 message: wl#5569 MTS Extending the wl#5563 prototype gradually. This commit addresses: 1. recovery interface (a new Worker rli plus rli->gaq and pseudo-code for checkpoint to update GAQ and the central RLI recovery table. Wrt rli, C and W execute do_apply_event(c_rli) where c_rli is the central instance. C executes update_pos(c_rli), but W update_pos(w_rli). others: - decreased processing time for rpl_parallel, serial. ------------------------------------------------------------ revno: 3210 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Sun 2010-11-14 11:55:32 +0000 message: Post-push fix for WL#5599. ------------------------------------------------------------ revno: 3209 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Fri 2010-11-12 17:58:12 +0000 message: Post-push fix for WL#5599. ------------------------------------------------------------ revno: 3208 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Thu 2010-11-11 11:53:01 +0000 message: WL#5599 The patch changed the handler's functions, i.e. init_info, check_info, flush_info, remove_info and end_info and the related private member functions, in both file and table handlers, to accept an index that identifies the information that will be read or written. This is necessary now because the handlers will be used by the workers to read and write information from file(s) and table and there may be several workers running at the same time and thus an index is used to identify the worker that is accessing information. This change is also necessary for the multi-master replication as information from each master must be uniquely identified. ------------------------------------------------------------ revno: 3207 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Wed 2010-11-10 10:57:13 +0000 message: Refactory to start work on WL#5599. ------------------------------------------------------------ revno: 3206 committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-11-09 13:34:18 +0000 message: Removed mysql-test/collections/mysql-next-mr.crash-safe.* in the WL#5569. ------------------------------------------------------------ revno: 3205 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-11-09 13:04:14 +0000 message: merge mysql-next-mr.crash-safe --> mysql-next-mr-wl5569 Conflicts: . sql/CMakeLists.txt . sql/Makefile.am . sql/sql_class.h . sql/rpl_slave.cc ------------------------------------------------------------ revno: 3204 [merge] committer: Alfranio Correia <alfranio.correia@oracle.com> branch nick: mysql-next-mr-wl5569 timestamp: Tue 2010-11-09 11:39:37 +0000 message: merge mysql-next-mr-wl5563-labs --> mysql-next-mr-wl5569 ------------------------------------------------------------ revno: 3203 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-17 23:33:37 +0300 message: wl#5563 simplifying memory handling for the Coor-Workers transport to avoid sporadic crashes ------------------------------------------------------------ revno: 3202 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-17 21:19:56 +0300 message: wl#5563 leaving out a fine garbage collection. That task is unnessary to solve at prototyping time. Update-pos routine to be implemented is going to eliminated that piece of code ------------------------------------------------------------ revno: 3201 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-17 20:38:35 +0300 message: wl#5563 Extending the tests base to split the former rpl_parallel into two to run in serial exec mode as well. ------------------------------------------------------------ revno: 3200 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-17 11:49:00 +0300 message: wl#5563 improved test; fixed a delete issue that was used to crash; added @@global.slave_local_timestamp to fill in timestamp col slave clock value. Performance growth can be seen through the test. todo: merge with Alfranio work on hashing and dyn alloc of PFS obj:s. ------------------------------------------------------------ revno: 3199 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Wed 2010-09-15 14:51:49 +0300 message: wl#5563 tests for the wl. Number of workers and iterations can be tuned. todo: convert as param:s to pass to the test through mtr ------------------------------------------------------------ revno: 3198 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Mon 2010-09-13 18:22:41 +0300 message: wl#5563 adding an ingeneous no-stress-attempting-yet test that also fired an assert. Refined the Worker instance ref computing because cleanup_context() is executed by the sql-thread the coordinator as well ------------------------------------------------------------ revno: 3197 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Mon 2010-09-13 13:15:38 +0300 message: wl#5563 Rows-event parallelization basically is implemented although tested shallowly. Write access to rli central stuct by workers may not be eliminated fully at this phase. E.g that relates to errors. todo: to prove rli gets out of Worker scope todo: to provide a stress test ------------------------------------------------------------ revno: 3196 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Sat 2010-09-11 17:00:08 +0300 message: wl#5563 adding Rows-event limitted to one Worker support. Deferred deletion did not check emptyness of the list ------------------------------------------------------------ revno: 3195 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-10 20:36:07 +0300 message: wl#5563 correcting comments to indicate less limitations ------------------------------------------------------------ revno: 3194 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Fri 2010-09-10 20:32:39 +0300 message: WL#5563 Prototype for Slave parallelized by db name More progress to the WL in that the STMT binlog-format works while the conceptual limits are held. That is no query/transaction is allowed to deal with more than one db. Addressed a complication in that update pos method that is run by Coordinator belongs to Log_event hierarchy and therefore the event deletion now by Worker must be careful. Todo: 1. (High prior) fix Row-format complications 2. (Hight prior) Elaborate on the hash function to be a function on db text name 3. (Optional)  Consider moving update_pos to the RLI class to get rid of the delete logics complication. How-to-use: The instuction can be found in comments of the previous commit, see there for more details. In brief though, the db names have to follow a pattern: `test[0-9]'. E.g test0, test1, test2, test3 for the default four Worker threads. Slave side has to set @@global.slave_exec_mode=PARALLEL; before START SLAVE. ------------------------------------------------------------ revno: 3193 committer: Andrei Elkin <aelkin@mysql.com> branch nick: wl5563-paraslave_part_db timestamp: Thu 2010-09-09 21:43:16 +0300 message: WL#5563 Prototype for Slave parallelized by db name This is an intermediate commit that indicates some progress. Namely, the worker pool operates correctly and with signs of scalable performance. How to test: connection master; set @@global.binlog_format=statement; connection slave; set @@global.slave_exec_mode=PARALLEL; set @@global.binlog_format=mixed; show processlist; => IO, SQL threads + 4 workers by default change master to ... connection master; create database test0; create database test1; create database test2; create database test3; # create databases with magic names ""test[0-9]+"", where the number will index # a worker. create database test0; create database test1; create database test2; create database test3; # create tables. they are only of MyISAM type for now use test0; create table tm_1(a int, b int) engine=myisam; use ... # DML on tables: use test[0-3]; insert into tm_1 values (1,0); ... ... connection slave; # monitor CPU (visually this time: top etc) # check correctness e.g select count(*) from test[0-3].tm_1; connection master; select count(*) from test[0-3].tm_1; ****** wl#5569 MTS merging a compined bundle cset to mysql-trunk. "	328b6c0b19fe08557cf410a2023e100a4599e3a4
----------------------------
"WL#4896 ""Performance Schema Net IO"" New test: socket_summary_by_instance_func_win -- specific to Windows platforms "	17c5782c29e83c86d59ad8072c4fec6c177248c1
----------------------------
"WL#4896 ""Performance Schema Net IO"" New test: socket_summary_by_event_name_func "	9cd1614af9375fb072634b73daaa0a44bb13f1d3
----------------------------
"WL#4896 ""Performance Schema Net IO"" New test: socket_summary_by_event_name_func.test "	b4e88e0fa4052eb61dd6a85f37df96cc6eb47b14
----------------------------
"WL#4896 ""Performance Schema Net IO"" Final version of socket_summary_by_instance_func.test "	cec871c1ad71ca9fef8c56f56aa853f25ab688cd
----------------------------
WL#5758: Improve Thread Scheduling Use atomics where available to enforce concurrency limit. The atomics version of the scheduling code doesn't use an explicit queue that guarantees eventual progress and a total order on the waiters. Instead it uses os_thread_sleep() to force the threads to wait. ie. the newi scheduling is not starvation free and imposes no order on the entering transactions. Introduce new config variable: innodb_adaptive_max_sleep_delay := 0..1000000 in micro-seconds If the value is greater than 0 (which implies that it is enabled)  then the innodb_thread_sleep_delay will be adjusted dynamically based on the system load. The aim is to make it converge on the optimal sleep delay when concurrency thread limit is active. The new configuration variable is an upper limit that will be imposed when determining the optimal value of innodb_thread_sleep_delay. As in the old version which is enabled on platforms that don't support atomic builtins this scheduling of threads will be activated based on the settings of innodb_thread_concurrency. The optimal value for innodb_thread_concurrency is difficult to standardise. Experimental observations suggest that on hardware that has greater than 8 cores the setting it to the number of cores seems to work best. But on hosts that have 8 cores (but with faster CPUs) the optimal value needs to be determined empirically. On the hosts tested the best Sysbench results were obtained with a setting innodb_thread_concurrency=96 for both RO/RW. Aproved by Inaam/Marko rb://651 	87d3cddebaada2645f6c11d7cafcd1925bf0b4d4
----------------------------
WL#4896 PERFORMANCE_SCHEMA NET IO Code cleanup for destroy_socket 	5eb498f0a2a9f104b4d92608352d2c1938519f66
----------------------------
Addendum to the suite for bug #11766001 : 59026: ALLOW MULTIPLE --PLUGIN-LOAD OPTIONS 1. Use the correct case for the mysql.plugin table reference in tests. 2. Add a note into the mysql-test.run.pl docs comments for PLUGVAR_LOAD_ADD. 	d0d9c835c806f82621a066a1a39d117b42c00bb9
----------------------------
"Bug #11766001: 59026: ALLOW MULTIPLE --PLUGIN-LOAD OPTIONS Implemented support for a new command line option : --plugin-load-add=<comma-separated-name-equals-value-list> This option takes the same type of arguments that --plugin-load does and complements --plugin-load (that continues to operate as before) by appending its argument to the list specified by --plugin-load. So --plugin-load can be considered a composite option consisting of resetting the plugin load list and then calling --plugin-load-add to process the argument. Note that the order in which you specify --plugin-load and --plugin-load-add is important : ""--plugin-load=x --plugin-load-add=y"" will be equivalent to ""--plugin-load=x,y"" whereas ""--plugin-load-add=y --plugin-load=x"" will be equivalent to ""plugin-load=x"". Incompatible change : the --help --verbose command will no longer print the --plugin-load variable's values (as it doesn't have one). Otherwise both --plugin-load and --plugin-load-add are mentioned in it. Added few test cases to test different combinations. Added an extension to mysql-test-run.pl to add variables for --plugin-load-add similarly to what it does for --plugin-load. Moved the includes on top of the files. "	13fef20fa4723ade4f906e6976e356e9471ae1fc
----------------------------
"WL#4896 ""Performance Schema Net IO"" Disable socket_instances check in mtr_check.sql until incomplete test case cleanup can be ruled out as a source of failures, particularly with RPL. "	80541f82d04c2eb6601ef06f5c2975656df49a9f
----------------------------
BUG#11763712 - 56458: KILLING A FLUSH TABLE FOR A MERGE/CHILD CRASHES SERVER Flushing of MERGE table or one of its child tables, which was locked by flushing thread using LOCK TABLES, might have caused crashes or assertion failures if the thread failed to reopen child or parent table. Particularly, this might have happened when another connection killed this FLUSH TABLE statement/connection. Also this problem might have occurred when we failed to reopen MERGE table or one of its children when executing DDL statement under LOCK TABLES. The problem was caused by the fact that reopen_tables() might have failed to reopen child table but still tried to reopen, reattach children for and re-lock its parent. Vice versa it might have failed to reopen parent but kept references from children to parent around. Since reopen_tables() closes table it has failed to reopen and therefore frees all associated memory such dangling references led to crashes when followed. This patch solves this problem by ensuring that we always close parent table and all its children if we fail to reopen this table or one of its children. Same happens if we fail to reattach children to parent. Affects 5.1 only. 	06fa1ef4f43a4b727cf3e3097e9236973d51cc62
----------------------------
"WL#4896 ""Performance Schema Net IO"" Yet a third condition resulting in orphaned socket instances: Even if all instrumentation is disabled, the socket still needs to be destroyed after closesocket() is called. get_thread_socket_locker() must be sensitive to this condition. "	de40a4e07eecccff0bd7d01b915ff81e109b2a0c
----------------------------
"WL#4896 ""Performance Schema Net IO"" Two bugs caused orphaned socket instances: 1. If there is no thread instrumentation, then get_thread_socket_locker() returns a null locker, preventing the PFS socket from being destroyed following closesocket(). 2. SSL authentication calls vio_reset() for the active connection, which reset the PSI pointer for the corresponding socket. This prevents a locker from being created on a subsequent call to closesocket(), and the PFS socket is never deleted. "	601d72ae507c186f1948fa0691756212edb39624
----------------------------
"WL#4896 ""Performance Schema Net IO"" - Fix debug assert logic in get_thread_socket_locker() "	79131562370231ad2ae89368bee4769da2abe2a7
----------------------------
"WL#4896 ""Performance Schema Net IO"" - Add check of socket_instances to mtr_check.sql for mysql-test-run --check_testcases - Add assert to get_thread_socket_locker() to ensure IDLE state applies only to RECV ops - socket_connect.inc - Wait for connections from other tests to wrap up before starting "	893da2d880776260aa082d5c9f765405589447dd
----------------------------
Bug #11746029: 22615: MYSQL SERVER INCORRECTLY CATOGORIZES THE LOST+FOUND DIRECTORY AS A DATABA Implemented an --ignore-db-dir option that takes a valid file name or an empty string. You can specify multiple options. When a non-empty string is specified it's added as a directory name to the list of directories to ignore when executing SHOW commands and filling in INFORMATION_SCHEMA tables. When an empty string is specified as an argument the list is reset to empty. Note that the above list of ignored directories doesn't affect other SQL commands like e.g. USE or SELECT etc. Added a read-only global @@ignore_db_dirs system variable that will contain the current list in effect. In addition to the list above the server will always ignore the directories starting with a dot (.). This is safe because since mysql-5.1 a name of a database directory can't start with a dot (.) thanks to the fact that we encode database and table names. Added a test case. Fixed the affected test cases. Fixed the memory handling when converting the directories array to a hash fails for some reason. 	8332455930310f16c14f7bee8f6d2908bc10d6ee
----------------------------
WL#5706/Bug#11746378/Bug#25851: Passwords are visible in logs Don't log queries as they come in; parse them first to see what they're about. If they contain passwords, obfuscate them. Then log (before query execution), so that general, binary, and slow query log will not contain clear-text passwords. --log-raw option disables this for general log (un-rewritten queries will be logged, before parsing rather than after). Can be extended to do any other rewriting. 	a513d2b55a464e8f0064f115b3dbadf06b3b2f03
----------------------------
Bug #11769332 PLUGIN TESTS FAIL ON WINDOWS WHEN USING DEBUG SERVER AND PLUGINS (DAILY-TRUNK) Modification to previous patch Build server as mysqld-debug in debug builds, but only if extra flag is used:  cmake .... -DDEBUG_EXTNAME=ON Turn this on for BUILD_CONFIG=mysql_release Also removed disabling of tests for daily 	ded76c8ae8d8a470b0b109bd0a5e5b09a051c594
----------------------------
WL#5285 -  Simplify user visible setting for optimizer_join_cache_level Addendum: Change ordering of optimizer_switch constants Update result files 	c6a24c5c563936fb29c578b5887f2201cc04895b
----------------------------
"Add two tests for ""innodb_large_prefix"" and ""innodb_force_load_corrupted"" in sys_vars test suite. "	8b72b93611554b8b8e4fbd763edb3545adeced98
----------------------------
"WL#4896 ""Performance Schema Net IO"" Added socket_connect.test to verify handling of TCP/IP clients in the socket instance tables "	14d15de02287d92b50b75de3f74159715d669a0f
----------------------------
"Fix bug #11830883, SUPPORT ""CORRUPTED"" BIT FOR INNODB TABLES AND INDEXES. Also addressed issues in bug #11745133, where we could mark a table corrupted instead of crashing the server when found a corrupted buffer/page if the table created with innodb_file_per_table on. "	177d8b0c125b841c0650d27d735e3b87509dc286
----------------------------
BUG#12761358: SLAVE_LAST_HEARTBEAT RETURNS EPOCH DATE EVEN WHEN SLAVE NOT ENABLED 	87dc7ccf8fa54aef100ebe854757c707463f1b21
----------------------------
"Bug #11759877 52223: TEST ""PLUGIN_DIR_BASIC"" DOES NOT SUPPORT RPM BUILD (TEST) DIRECTORY STRUC Undo previous fix, it is not reliable Drop setting $MYSQL_LIBDIR, mtr can't be sure anyway Test is set to override plugin-dir to some known existing dir "	41859de6211b56451c38ab52582975b9b0fe5887
----------------------------
"WL#4896 ""Performance Schema Net IO"" - Changes per code review - Disabled UNION tests in socket_summary_by_instance_func. These tests do not take into account variations in the size of result set metadata. "	763e918929247ed68d42695e100078922b38d8f1
----------------------------
"Merge: 80afd97 72daf26 Null-merge, conflict on ""configure.in"" which is gone from 5.5. No change. "	29222665222ecc4ab66bd6fd9f7103ab2f8ed01d
----------------------------
"WL#4896 ""Performance Schema Net IO"" Fixed bug where sockets with disabled thread instrumentation were not removed from socket_instances after being disconnected. Updates from ML for socket_summary_by_instance. "	12b668b0a658099f74e9162f1f8b1a1096ba43d3
----------------------------
"WL#4896 ""Performance Schema Net IO"" - Solaris build break: Removed DOS line endings from macro MYSQL_SOCKET_SET_STATE - Removed tabs chars from recently updated files, pfs.cc and net_serv.cc "	88d13ef443fe8226ace8d0e0ae883474f53e4eda
----------------------------
"WL#4896 ""Performance Schema Net IO"" Disabled socket_summary_by_instance_func.test until fully debugged "	e70660a56d34a8a5f397edd7e7ae0b33a4428a95
----------------------------
"WL#4896 ""Performance Schema Net IO"" - Fixed crashing bug: Test for m_idle in state object insteaed of socket object - Created MYSQL_SOCKET_SET_STATE macro - "	3d8dff752fb7d380f1fc55763506ba9bd2ccb3ac
----------------------------
WL#5378 PERFORMANCE_SCHEMA SUMMARY BY USER / HOST Added new tests. 	b938b4dfc862a42e599c07b901244531e3ee2d71
----------------------------
BUG#11766392: 59495: RPL.RPL_READ_OLD_RELAY_LOG_INFO FAILS INTERMITTENTLY IN PB2 Wrapped debug printout in '#ifndef NO_DBUG'. 	f96fc0ede7b236f3e435936cdab25974b1a9dc95
----------------------------
Merge: 337d793 f24f0b9 Committing Change On behalf Of Sneha Modi Bug#12664445 - SYS_VARS.ALL_VARS: WRONG RESULTS RECORDED IN RESULT FILE - TEST CASES MISSING! The bug had missing test cases for three system variables. Test cases have been added for these variables: 'INNODB_FILE_FORMAT_MAX' 'INNODB_ROLLBACK_SEGMENTS' 'INNODB_STATS_METHOD' The 'sys_vars.all_vars' result file now looks like this: select variable_name as `There should be *no* variables listed below:` from t2 left join t1 on variable_name=test_name where test_name is null; There should be *no* variables listed below: INNODB_LARGE_PREFIX INNODB_LARGE_PREFIX The variable 'INNODB_LARGE_PREFIX' is a newly added variable for MySQL 5.6.3 and the test will be added later by the developer. 	24b4f40bf67f423c9ec9da4d74597385a2d97787
----------------------------
WL#5378 PERFORMANCE_SCHEMA SUMMARY BY USER / HOST Improved test robustness for tests that are sensitive to connections. Fixed an issue found by QA: some threads would be removed from information_schema.processlist, but not from performance_schema.threads. The issue was that destroy_thread() could get stuck inside lf_hash_put_pins(), because of leaks with PINS used by the LF_HASH, and never actually free the instrumented thread. The root cause is that lf_hash_search() can return NULL and still keep pined pins. Fixed this by adding calls to lf_hash_search_unpin(). 	037d91ad1d0575edd9ffd6a41e012931d716d1d8
----------------------------
WL5580: Changes to LRU flushing (InnoDB) Approved by: Marko, Sunny rb://589 This work is performance related. The idea is to off load flushing activity that happens in the LRU list from user threads to the background thread i.e.: the page_cleaner. Also included in the scope is simpler and may be better heuristic for LRU flushing. Summary of Changes: New Config Options: =================== innodb_lru_scan_depth (default 1024): dynamic, min:100, max:~0 innodb_flush_neighbors (default TRUE): dynamic innodb_doublewrite_batch_size (default 120) static, min 1, max 127 (undocumented for internal testing only. enabled when UNIV_PERF_DEBUG is defined) New LRU flushing algorithm: =========================== * LRU flushing happens only in page_cleaner thread * LRU flushing includes cleaning the tail of LRU list AND putting blocks to the free list * When a user threads can't find a block in free list or a clean block in the tail of LRU then it triggers a new type of flush called BUF_FLUSH_SINGLE_PAGE in which it tries to flush a single page from LRU list instead of triggering a batch. Page eviction algorithm: ======================== * iteration 0: * get a block from free list, success:done * if there is an LRU flush batch in progress: * wait for batch to end: retry free list * if buf_pool->try_LRU_scan is set * scan LRU up to srv_LRU_scan_depth to find a clean block * the above will put the block on free list * success:retry the free list * flush one dirty page from tail of LRU to disk * the above will put the block on free list * success: retry the free list * iteration 1: * same as iteration 0 except: * scan whole LRU list * scan LRU list even if buf_pool->try_LRU_scan is not set * iteration > 1: * same as iteration 1 but sleep 100ms Note that potential convoy problem where all user threads try to find a clean page in the tail of the LRU list when there is none is resolved by introducing buf_pool->try_LRU_scan flag which is set to TRUE when an LRU batch is completed and is set to FALSE when an LRU scan fails to find a clean page. Doublewrite buffer changes: =========================== The doublewrite buffer is split into two parts. First part is used for batch flushing (e.g.: LRU flushing and flush_list flushing) while the second part is used for single page flushes. The logic for the batch flushing remains same. For the single page flushing we use a flag to indicate if a slot is in use and we force a write to the disk after writing to the doublewrite buffer right away. There is an undocumented hidden config parameter innodb_doublewrite_batch_size which is visible only with UNIV_PERF_DEBUG or UNIV_DEBUG. The value determines how much of doublewrite is to be used for batch flushing. The default is 120 and allowable values are 1 - 127. It is a static variable. LRU batch size: =============== The size of an LRU batch depends on how deep we scan the LRU list i.e.: innodb_LRU_scan_depth. But since user threads wait for an LRU batch to finish and since the size of doublewrite buffer is 128 it makes sense to divide one big LRU batch into multiple chunks. PAGE_CLEANER_LRU_BATCH_CHUNK_SIZE == 100 does that i.e.: after flushing 100 pages the page cleaner signals waiting user threads to proceed to grab a free page. 	b2b5ef13807e2a9db57e46be41fbbf809a7c4696
----------------------------
"WL#4896 ""Performance Schema Net IO"" Error formatting output changes for socket_summary_by_instance "	d5e63077ff7130a893c69de0338071c4f15f868a
----------------------------
"WL#4896 ""Performance Schema Net IO"" - Format error output in socket_summary_by_instance_func.test "	6c2a5b5a5db13d338cbac2dda18b058a4083372d
----------------------------
"WL#4896 ""Performance Schema Net IO"" socket_summary_by_instance_func.test: - Relax non-zero op count constraint for MISC socket operations. - Disable abort on errors for easier PB debugging "	5fc4bd9184d6c51293b1b1930bbae477456aedfc
----------------------------
"WL#4896 ""Performance Schema Net IO"" socket_summary_by_instance_func.test: - Truncate socket summary tables at start of test table_helper.h - Debug: Copy stats into local structs before aggregating "	c7adc94a4bfcebc6bef6549ff1a27512f4231f28
----------------------------
"WL#4896 ""Performance Schema Net IO"" Include number of bytes for socket operations in EVENTS_WAITS_HISTORY tables. "	536340ffd42380ba471bcd91e006b69acbc69566
----------------------------
WL#5710 : enable and disable plugins This patch corrects a problem found in PB. Some platforms have very different locations for the mysql installation. The client was not able to find either my_print_defaults or mysqld predictably. The patch adds two new command options --mysqld and --my-print-defaults which can be used to provide the location of mysqld and my_print_defaults by providing the paths. The patch also changes the concatenation of the soname extension to fix a problem found on some Ubuntu systems. The patch contains changes to the test to ensure it will run on all platforms. A trap is set in the test to skip testing if the location of mysqld, my_print_defaults, or the daemon_example.ini files cannot be determined. 	bfefb55272be992efa0f8d34ac6ca93349582358
----------------------------
"WL#4896 ""Performance Schema Net IO"" - PB debugging socket_summary_by_instance_func.test "	24cb09d4ed40c79a137f6bbd2b7c2075635b7877
----------------------------
"WL#4896 ""Performance Schema Net IO"" - Updated test results following merge with mysql-trunk - Removed debug code in pfs.cc and viosocket.c "	6be96b9a3cfac092b2d259ff869134c6f18ce7a9
----------------------------
"WL#4896 ""Performance Schema Net IO"" Several changes: - Tuned error tolerances in socket_summary_by_instance_func.test (RECVs are tricky vis-a-vis IDLE) - Updated table io/lock aggregate test results following merge with mysql-trunk - Restored vio->vio_fd() function to original name to limit collateral impact on non-server code - Decoupled handling of the socket IDLE state from STATE_FLAG_TIMED flag "	251394df899973509edf094571b2a6684cd95e22
----------------------------
Implement part of WL#5533 Deprecate features in Fuchsia Print a deprecation warning if innodb_use_sys_malloc is set to FALSE or if innodb_additional_mem_pool_size is used. 	0a0dd7037894f8cbec0f9ec4a341b401dbc0cb25
----------------------------
BUG#12827509 - BNL/BKA: SELECT LEFT/RIGHT JOIN QUERY GIVES DIFFERENT OUTPUT ON BNL=OFF+BKA=ON This is a test case for a duplicate of 12722133. This test case is added because it fails for a different combination of optimizer_switch settings for block_nested_loop and batch_key_access. 	d8b93ad29b8349372a53a5a1838a4fc99d607de4
----------------------------
Implement part of WL#5533 Deprecate features in Fuchsia Print a deprecation warning if innodb_stats_sample_pages is used. 	6613c68cda0bb2f8e52c586d8b622426f4154bba
----------------------------
"WL#4896 ""Performance Schema Net IO"" - Updated perfschema.schema.test to include socket tables "	1df076891c1294f6226390cda484898e7b738942
----------------------------
Adding FTS tests for innodb_ft_enable_stopword, innodb_ft_server_stopword_table,innodb_ft_user_stopword_table variables 	bd14d1bb850d87b37d6f72b8a8b00fd0a9d398ba
----------------------------
"WL#5767 : PERFORMANCE SCHEMA, statement digest Changes: -------- 1. Code changes to Adjust ""SHOW ENGINE PERFORMANCE_SCHEMA STATUS"". 2. Code changes to pass every token from Lexer to PS. "	0b0f62e6cb3aa757ce82b2cf2bb08b3814bc36f7
----------------------------
"WL#4896 ""Performance Schema Net IO"" update socket_summary_by_instance_func.test for Windows "	fe14e8da435b05da6d431e28c22c297d4e538631
----------------------------
"WL#4896 ""Performance Schema Net IO"" Update socket_summary_by_instance_func.test for Windows. "	939b10db8155789bccba0d62d42bd786cd1f4cc2
----------------------------
"WL#4896 ""Performance Schema Net IO"" Updates to socket_summary_instances_func.test: - Added formatted queries for useful for debugging in PB - Replace fixed comparisons of byte and operation counts with a computation of the coefficient of variation (stddev/mean), a dimesionless quantity that is valid across platforms. The 'acceptable' values for CV may have to be tweaked, but it will detect unusual variances and still allow minor variations. "	c588dc19e4440e57592171059c7238d182523190
----------------------------
Minor cleanups in FTS stopword handling. Make sure the user specified stopword table is registerred in the CONFIG table, and being re-used when server reboot. 	cce5a3c5ff8029bf8774b2102a504fd1d6af75fe
----------------------------
"Change InnoDB FTS related Information schema table name from ""innodb_fts_*"" to ""innodb_ft_*"", so that they are consistent in naming with that of system configure variables. "	d5d2702fc8b74f859006972a01aca552a09e81b0
----------------------------
"WL#4896 ""Performance Schema Net IO"" - Fixed stat error associated with IDLE wait times - Added socket_summary_by_instance_func.test "	bc6ce974ab0fd26c986693e4476077dc79e5bee0
----------------------------
Yet another attempt to fix Bug 12783900 - INNODB_BUFFER_POOL_FILENAME IS SOMETIMES NOT POPULATED BY THE EXPECTED TIME The value of INNODB_BUFFER_POOL_DUMP_STATUS could have been left to 'buffer pool dump completed' from previous runs of tests on the same mysqld instance. Add an .opt file to ask MTR for mysqld restart before the test is run (thanks, davi!) 	6b3482a982bf89a67b0215d7b5d46f575624f061
----------------------------
Do not allow innodb_buffer_pool_filename to be set to NULL. Without this validation, if one does SET GLOBAL innodb_buffer_pool_filename=NULL; then mysqld would crash somewhere inside mysql code, trying to do strlen() on a NULL pointer. 	9c7f337e3d009e6d87fe2ca277522bb623a27768
----------------------------
Implement part of WL#5533 Deprecate features in Fuchsia Print a deprecation warning if innodb_locks_unsafe_for_binlog is used. 	537d5f3d44db1ada58267d502105cb517c7a530f
----------------------------
"Add a missing ""END_OF_ST_FIELD_INFO"" to INFORMATION_SCHEMA FTS_CONFIG table column define. "	498728f3e4685ca4035d4b132e04b497d24ed6f3
----------------------------
"WL#4896 ""Performance Schema Net IO"" Improved socket_instances_func.test "	ac2ec797a550581976ac72c23fe7640a0fd6746f
----------------------------
Remove redundant test with the default filename. The problem is that the value of INNODB_BUFFER_POOL_DUMP_STATUS remains from the dump with the default filename. Using restart to reset it back works but restart itself does not work in embedded mode. From here there are 3 options: 1. Disable the test in embedded mode 2. Add sleep 1 between dumps and in the second wait add a condition that the status be different from the first status 3. Remove the dump with the default filename altogether This patch does 3. 	2948f14741e7194632c7f501c93848b1bfb5022e
----------------------------
"Address two minor issues: 1) change ""innodb_ft_enable_sort_o_direct"" to ""innodb_disable_sort_file_cache"" 2) Error out the Doc ID if user tries to re-use a Doc ID when they manage their own Doc ID by using the FTS_DOC_ID column "	3200f547f8b837655c02663b42b4bd7403ec4fd9
----------------------------
Add a server configure variable so that user can turn off OS file system cache by enabling O_DIRECT. This is to avoid additional memory consumed by OS file system cache during sort merge phase. 	f2bc3d0591b9f876d5812ae7831c5f8751e883b6
----------------------------
Fix Bug#12783900 INNODB_BUFFER_POOL_FILENAME IS SOMETIMES NOT POPULATED BY THE EXPECTED TIME The bug in the test was that the dump status from the previous dump would remain and would satisfy the condition that is expected to wait for the second dump to complete. Thus the flow continued without the second dump completing and the second --file_exists failed. 	a7ff3f34dbe157a030cd5cf9cbc6a9de9b8fba76
----------------------------
Bug #12774208: DEFAULT_TEMP_STORAGE_ENGINE SHOULD BE NAMED DEFAULT_TMP_STORAGE_ENGINE Remaned the option to be more consistent with other existing options. 	0b6f256428a8c2de46ee3570d68e71a3708fd5a2
----------------------------
Add innodb_rollback_segments to the all_vars.result file. This variable doesn't need a dedicated test of its own because it is an alias for innodb_undo_logs. 	a49cb51140e02e4312851483a0bfe0a9c2e63b95
----------------------------
WL#5535 renamed innodb_rollback_segments to innodb_undo_logs. Create an alias for backward compatibility. Approved by Jimmy over IM. 	f84be601f38d8bed7d8a9f48b517513e7a8d3254
----------------------------
Bug #12767683 : SERVER START FAILS IN THE PKGVER TEST ON WINDOWS Added an --default-temp-storage-engine=mysiam to complement the --default-storage-engine option already present. Removed a duplicate --default-storage-engine. 	92c10baa49828aafb35437bf63cf99cfa27559d2
----------------------------
"WL#4896 ""Performance Schema Net IO"" - Updated tests to reflect changes to performance_schema_max_stage_classes system var "	0134edd857454c71ec4c4a5d36033d412b6234b1
----------------------------
"WL#4896 ""Performance Schema Net IO"" - Fixed IPV6 bug - Debug socket_instances_func -- why don't TCP connections appear in socket_instances? "	b8b8aec7c7be0b1eaa0cf97cb5be9782b96968fb
----------------------------
"WL#4896 ""Performance Schema Net IO"" Debugging socket_instances_func.test "	f6c2a31643f765e6d71301e6be0ab246361ddbc5
----------------------------
Bug #11747191: 31224: SUPPORT FOR SSL CERTIFICATE REVOCATION LISTS Added support for --ssl-crl and --ssl-crlpath to all client and server binaries that work with OpenSSL.   You can specify none, one or both of the above. --ssl-crl takes a file path for a PEM encoded Certificate revocation lists. The relevant file is parsed and loaded into the X509 store of the SSL context. --ssl-crlpath takes a directory path. This directory must contain PEM encoded CRL (or other) files that are named by their hash value, .e.g. <hash_value>.r[0-9] See OpenSSL's X509_STORE_load_locations() for more details of the above. Note that if none of the --ssl-crl* options is specified no CRL checks will be performed, even if the -capath contains certificate revocation lists. Added Master_SSL_crl and Master_SSL_CRLPATH to CNANGE MASTER command. Added new columns Ssl_crl and Ssl_crlpath to mysql.slave_master_info system table. Reengineered mysql_ssl_set() in the C API into a number of mysql_options calls as follows (while keeping mysql_ssl_set()): mysql_ssl_set(mysql, key, cert, ca, capath, cipher) { mysql_options(mysql, MYSQL_OPT_SSL_KEY,    key) mysql_options(mysql, MYSQL_OPT_SSL_CERT,   cert) mysql_options(mysql, MYSQL_OPT_SSL_CA,     ca) mysql_options(mysql, MYSQL_OPT_SSL_CAPATH, capath) mysql_options(mysql, MYSQL_OPT_SSL_CIPHER, cipher) } Added two new mysql_options that correspond to the command line calls : MYSQL_OPT_SSL_CRL  and MYSQL_OPT_SSL_CRLPATH. Made sure these play nicely with the ABI by using the extension. Added tests and a set of cryptographic keys and crls to test the new options. Extended the mtr ssl check to find the new tests. Made sure that on yaSSL these options are a no-op for the server. 	c038bcb7cd0063657a7ddf35b1fb4e12eed9095a
----------------------------
"Fix for bug #11754210 - ""45777: CHECK TABLE DOESN'T SHOW ALL PROBLEMS FOR MERGE TABLE COMPLIANCE IN 5.1"". The problem was that CHECK/REPAIR TABLE for a MERGE table which had several children missing or in wrong engine reported only issue with the first such table in its result-set. While in 5.0 this statement returned the whole list of problematic tables. Ability to report problems for all children was lost during significant refactorings of MERGE code which were done as part of work on 5.1 and 5.5 releases. This patch restores status quo ante refactorings by changing code in such a way that: 1) Failure to open child table due to its absence during CHECK/ REPAIR TABLE for a MERGE table is not reported immediately when its absence is discovered in open_tables(). Instead handling/error reporting in such a situation is postponed until the moment when children are attached. 2) Code performing attaching of children no longer stops when it encounters first problem with one of the children during CHECK/REPAIR TABLE. Instead it continues iteration through the child list until all problems caused by child absence/ wrong engine are reported. Note that even after this change problem with mismatch of child/parent definition won't be reported if there is also another child missing, but this is how it was in 5.0 as well. "	9fe60b4d5b18abc9283991ccd3df6de16f4e163d
----------------------------
Fix a bug in FTS optimize when FTS_OPTIMIZE_MAX_WORDS is reached, it would jump to the next index partition even the current partition has not been exhausted. Also change FTS_OPTIMIZE_MAX_WORDS to a configurable parameter 	d0fbb2a97e73a4fd4d1b1fd11aeba268d32eafb0
----------------------------
"Bug#11763728 - 56475: MISSING THREAD STATES IN PERFORMANCE_SCHEMA.THREADS / SHOW PROFILE Before this fix, any thread waiting for a specific condition to happen, which corresponds to a call to THD::enter_cond(), would: - set THD::proc_info member directly - ignore instrumentation apis such as set_thd_proc_info and THD_STAGE_INFO. As a result, conditions involving THD::enter_cond() would be: - captured in SHOW PROCESSLIST - captured in table INFORMATION_SCHEMA.PROCESSLIST - missing in SHOW PROFILES - missing in table INFORMATION_SCHEMA.PROFILING - missing in table performance_schema.threads; - missing in table performance_schema.events_stages_current; - missing in table performance_schema.events_stages_history; - missing in table performance_schema.events_stages_history_long; This fix changes the THD::enter_cond() and THD::exit_cond() apis, to include informations about the calling code such as: - the caller function name - the caller file name - the caller line number and to include an instrumented stage name parameter, ""PSI_stage_info"". The structure PSI_stage_info is used instead of a plain ""const char *msg"", because PSI_stage_info contains more semantic, and can be used to instrument both: - the SHOW PROFILE code, which needs a plain string - the performance schema stages, which needs a pre registered stage key. With this change, the implementation of THD::enter_cond() can now maintain coherence between all available instrumentations: - the SHOW PROCESSLIST implementation (thd->proc_info) - the SHOW PROFILES implementation (thd->profiling) - the performance schema stages implementation (MYSQL_SET_STAGE) This is done in a new THD::enter_stage() method. Changing the THD::enter_cond() and THD:exit_cond() apis caused mechanical adjustments to many places in the server, and forced callers to explicitely declare stages to the instrumentation. The number of instrumented stages in the server has increased, so the max number of stages has been bumped from 100 to 150, causing adjustments to many performance schema test result files. "	f7be327594b28149265fdc72223a303f11013314
----------------------------
"WL#4896 ""Performance Schema Net IO"" - Touch up socket_instances_func test case for Windows "	a6a6f6f59fc364838afff5bc5ad85e02af7a69e4
----------------------------
"WL#4896 ""Performance Schema Net IO"" - Remove unnecessary debug asserts in set_socket() functions - Use 'sql' instead of 'com' category for socket keys and update socket_instances_func.test accordingly "	b03a16c31145f49673f933920ae3dcd4ae383c37
----------------------------
"WL#4896 ""Performance Schema Net IO"" Capture number of bytes read from socket recv() for sockets in IDLE state. "	640c79a9f70310aa6dc654f1d77ab8be6c6390cc
----------------------------
"WL#4896 ""Performance Schema Net IO"" - Handle socket accept() more effectively for listener sockets "	430a8688a4293b5e7969c84a61949720250b6770
----------------------------
"Bug#11890269 - PERFSCHEMA.TABLE_AGGREGATE_THREAD_2U_3T FAILS OCCASIONALLY ON PB2 This is a test script bug only, the server code is not affected. Before this fix, tests for table io and table lock aggregation would fail sporadically. Failures occurred in the output of this prepared select: prepare dump_thread from ""select event_name, count_star from performance_schema.events_waits_summary_by_thread_by_event_name where event_name in (\'wait/io/table/sql/handler\', \'wait/lock/table/sql/handler\') and thread_id in (select thread_id from performance_schema.threads where processlist_user in (\'user1\', \'user2\', \'user3\', \'user4\')) order by thread_id, event_name;""; This statement performs a sub query and a file sort on performance schema tables. Because the content of the performance schema tables is volatile, this kind of statement is not reliable. Also, the test output was difficult to interpret, since which thread_id / user name corresponds to which statistics was not printed. This fix replaced the unreliable ""dump_thread"" prepared statement by a stored procedure, which performs selects without sub queries, and prints more detailed output. All the tests result files have been adjusted accordingly. "	3e261566ca0d05490fd98e1c378511a328635c9e
----------------------------
"Making shorter test names: suite ""optimizer_trace"" renamed to ""opt_trace""; test ""optimizer_trace_xxx"" renamed to ""xxx"", though optimizer_trace.inc is renamed to general.inc. "	d68a2551868c2f1210050ff936189c6660e24421
----------------------------
"WL#4896 ""Performance Schema Net IO"" Fix for socket accept() "	a14331ee45b8c7091990cf02ed9475900f62e1db
----------------------------
"Optimizer trace. By me: WL#5257	 	Create a first API for the Optimizer trace By Jorgen Loland: WL#5594	 	Add optimizer traces to the range optimizer WL#5741	 	Ensure optimizer tracing for subqueries works without JSON syntax errors WL#5581	 	Add --opt-trace-protocol to MTR. Summary below. * This feature produces a trace for any SELECT/INSERT/UPDATE/DELETE/DO/SET/CALL, which contains information about decisions taken by the optimizer during the optimization phase (choice of table access method, various costs, transformations, etc). It should help understand the logic followed by the optimizer for a particular query. Trace is session-local, controlled by the @@optimizer_trace variable and other new variables, and readable by selecting from information_schema.optimizer_trace. See the doxygen comments in opt_trace.h for more info. * By default the tracing code is compiled in, but not enabled at runtime; set @@optimizer_trace to enable it. * Changes to test results: unless otherwise noted they are due to those changes: ** The query printed by EXPLAIN EXTENDED now shows the id of each SELECT, to help interpret the ""id"" column. ** EXPLAIN EXTENDED now prints triggered conditions as: trigcond_if(outer_field_is_not_null, <is_not_null_test>(`test`.`t2`.`s1`), true) instead of: trigcond(<is_not_null_test>(`test`.`t2`.`s1`). * @@optimizer_trace_offset is a signed variable, so I had to add support for this in MySQL (so far all integer system variables were unsigned, it was impossible to set a system variable to a negative value, it would be rounded to 0). "	aa863670015f410ddaf67c706db0ac1cc9d40665
----------------------------
Bug 12356373 - PERFORMANCE REGRESSION FROM 5.1 TO 5.5 : GROUP BY: The title of the bug is a little confusing. The actual fix is to reintroduce random readahead inside InnoDB with a dynamic, global switch innodb_random_read_ahead [default = off]. Approved by: Sunny Bains rb://696 	41258f8e6c46d06e817d55921c66309ae9701799
----------------------------
BUG#12707948 : mysql_plugin cannot run on Windows Patch fixes an issue with reading basedir on Windows. It fixes how the code interprets opt_basedir on Windows by adding the correct path separators and quotes for paths with spaces. BUG#12664302 : mysql_plugin cannot recognize the plugin config file Patch fixes an issue with reading a plugin config file. It adds more information to the error messages to ensure the user is using the options correctly. Also deals with paths with spacs on Windows. 	2efc47aad3959cb0aad014158ad3ca87e75ac22a
----------------------------
WL#5710 : Enable and disable plugins (mysql_plugin) This patch changes the plugin configuration file format to make it easier to add new plugins and remove complexity. It also adds more information when plugin configuration file reads fail. 	d037148151936cc4a647be96ac4f86ec591c2982
----------------------------
WL#5710 : mysql_plugin - enable or disable plugins This patch adds a new client utility that enables or disables plugin features. The utility disables or enables a plugin using values (name, soname, and symbols) provided via a configuration file by the same name. For example, to ENABLE the daemon_example plugin, the utility will read the daemon_example.ini configuration file and use the values contained to enable or disable the plugin. 	6119cc2bba0604de317d86fb9919dc2a86404843
----------------------------
Fix broken sys_vars.all_vars test. In WL#5535 innodb_rollback_segments was renamed innodb_undo_segments, but the result file for sys_vars.all_vars was not updated. This patch fixes the problem. 	aa97d0af6fb6cba874fb251f177e0cf1d5b09129
----------------------------
"WL#4896 ""Performance Schema Net IO"" - Restored check for null pointer in mysql_socket_socket() and mysql_socket_accept() "	61f249cdbeb7837edbdf137d657edd7048461d62
----------------------------
"WL#4896 ""Performance Schema Net IO"" Improved stat collection for socket accept() by attributing wait time and op count to listener socket instead of new socket. "	9c2be98b5213d70ad7f253d32fcb3b55b2bf392f
----------------------------
"WL#5535 - Separate tablespace(s) for the InnoDB undo log Allow users to move the additional UNDO logs to separate tablespaces. For this we introduce 3 new parameters and rename an existing parameter. 1. innodb_undo_directory (string) Path to rollback tablespace directory, default is ""."". Value can be any file path. If it is not absolue then create the rollback tablespaces relative to the server CWD. 2. innodb_undo_tablespaces (ulint) We allow 1-1 mapping and 1-N mapping between rollback segments and tablespaces. ie. we can create multiple segments in one or more tablespaces. 3. innodb_undo_logs (ulint) Default is TRX_SYS_NRSEGS, if value is greater than current rollback segments then create the additional rollback log segments. If innodb_undo_tablespaces > 0 then they will be created outside ibdata1 otherwise in ibdata1. Rename innodb_rollback_segments to innodb_undo_segments so that names are consistent. Refuse to startup if innodb_undo_tablespaces doesn't match what InnoDB can access. Change the os0file.c create mode parameter from #defines to an enum. Reduce the scope of srv_file_per_table to table creation code in dict0crea.c. Rather than access the (global) variable in os0file.c we note the setting and pass the OS_FILE_ON_ERROR_NO_EXIT flag down the call stack. Users cannot add new UNDO tablespaces after database creation. Creating the UNDO tablespaces is a one time affair. The segments however can be added to existing UNDO tablespaces or to the system tablespace if no UNDO tablespaces exist. NOTE: Databases created with the above options enabled cannot be opened by previous versions of InnoDB. The file format is not an issue, the problem is that there are several assumptions in the code that will not hold. To use this feature the config vaiable innodb_undo_tablespaces must be set to a value > 0 when a new database is created. Users cannot add new UNDO tablespaces after database creation. Creating the UNDO tablespaces is a one time affair. The segments however can be added to existing UNDO tablespaces or to the system tablespace if no UNDO tablespaces exist. HotBackup ramifications: The new variables need to be defined and set correctly in HB code. By default this feature is disabled. rb://561 Approved by Marko "	e96f23d20dcf5bcc0b6826e33898e683f4867e1a
----------------------------
BUG#12604951 - RBR BREAKS IF SQL THREAD IS RESTARTED WHILE EXECUTING AN EVENT This a regression caused by BUG#11763126 what introduced new flags and procedures to track down changes that are unsafe to be rolled back. In particular, after BUG#11763126 the trans_commit_stmt() propagates unsafe rollback flags from statement to transaction level. However, we cannot use this at the slave when row format is configured as several events can be processed before trans_commit_stmt() is called. This happens because trans_commit_stmt() is called only when the latest event generated by a statement is processed. Unfortunately, there are upper level functions that execute per event and check transaction's status. So if the unsafe rollback flags are not propagated at the end of every event, this can lead to errors. To fix the problem, we propagate unsafe rollback flags from statement to transaction level after processing every event if row format is in use. 	8fb740aa94959422f2380a1276014a458a77fba9
----------------------------
"WL#4896 ""Performance Schema Net IO"" Integrating peformance improvements in socket instrumentation. "	96152753594bc3ad30d22c0d313e4c006cfb0067
----------------------------
Bug#12736295 Buffer overflow for variable converted_err with non-latin1 server error message The problem was a one byte buffer overflow in the conversion of a error message between character sets. Ahead of explaining the problem further, some background information. Before an error message is sent to the user, the message is converted to the character set specified in the character_set_results variable. For various reasons, this conversion might cause the message to increase in length -- for example, if certain characters can't be represented in the result character set. If the final message length is greater than the maximum allowed length of a error message (MYSQL_ERRMSG_SIZE), the message is truncated. The message is also always null-terminated regardless of the character set. The problem arises from this null-termination. If a message length reached the maximum, the terminating null character would be placed one byte past the end of the message buffer. The solution is to reserve the end of the message buffer for the null character. 	2aef0eda7612aac24b07a699ce62db2271cd6fd8
----------------------------
"WL#4896 ""Performance Schema Net IO"" QA Sign-off: - Fix bugs in socket_instances_func and socket_instances_func_win "	6d0f0f330f884714f3cb9ac74e3b8e996d7371de
----------------------------
Minor type change for newly added configure variable to address compilation error on windows 	2b4546bf308e7979aaecf4b9fe81dd2158b6033f
----------------------------
"WL#4896 ""Performance Schema Net IO"" For QA sign-off: - Completed socket_instances_func.test, added multiple client support - Created Windows version: socket_instances_func_win.test "	3bb4851a0a36b0066832fcaa95034e9c4698a8e2
----------------------------
"Add a system varaible ""innodb_optimize_fulltext_only"", so that we will overload ""optimize table"" to optimize the fulltext index on a table. And we shall rely mostly on this command to optimize FTS rather than using the background thread. "	40f4817222e753df5a3eb8c36ab76d6718519e98
----------------------------
Bug#11758414/Bug#50614: Default storage_engine not honored when set from within a stored procedure When CREATE TABLE wasn't given ENGINE=... it would determine the default ENGINE at parse-time rather than at execution time, leading to incorrect behaviour (namely, later changes to the default engine being ignore) when calling CREATE TABLE from a stored procedure. We now defer working out the default engine till execution of CREATE TABLE. 	3c00efc42ebb866f4294ebbadf0119ec65996798
----------------------------
Remove unnecessary test config 	aca13f650a9093f18ecc16b1f269dc42296cb9e1
----------------------------
"Fix Bug #47337: innochecksum not built for --with-plugin-innodb_plugin --without-plugin-innobase In 5.1, we can have the traditional ""innobase"" code (built-in) or the new version ""innodb"" (plugin). The help tool ""innochecksum"" is useful for both, but its generation was coupled to ""innobase"" only. Fix this by treating both ""innobase"" and ""innodb"" equivalent in the configure phase, this affects both ""innochecksum"" and the InnoDB documentation. This patch was proposed by Mark Callaghan. "	98a7cb95e08d789b02a014d67996cd7d30dff90d
----------------------------
WL5353 Primary Cluster Conflict Detection : NDB$EPOCH() row based function Ndb handler is modified to set the NDB$AUTHOR pseudo column to 1 when writing, or updating a row from the slave. The NDB$AUTHOR pseudo column defaults to zero on every update, so with this change, it acts as an indicator of whether a row was last updated by the Slave (NDB$AUTHOR == 1), or not (NDB$AUTHOR == 0). To support > 2 clusters replicating, we should support > 1 bit NDB$AUTHOR, with some scheme for mapping from ServerId to Author bits. Reflected GCI/Max_rep_epoch The Ndb_slave_max_replicated_epoch status variable tracks the highest local-cluster epoch which was applied *before* the replicated remote-cluster updates currently being applied by the slave. This acts as a kind of 'confirmation' of application of each epoch on the remote cluster. Additionally, it indicates the closure of the window of risk of replicated updates arriving from the remote cluster which conflict with updates committed in a given epoch.  Once a particular epoch has been applied remotely, later updates received from the remote slave are by definition applied at the remote slave *after* that epoch was applied, and therefore are *not* in conflict. NDB$EPOCH() This information is used by NDB$EPOCH().  When applying a replicated remote update, the existing (if any) row's commit-epoch is checked to determine whether it is less than or equal to the current Ndb_slave_max_rep_epoch value.  If it is less that or equal to the current value, then the received update is not in conflict.  If it is greater than the current value, then it is in conflict. When replicated remote updates are committed, the row's commit epoch naturally changes to the current system epoch.  This could cause further updates from the remote cluster to appear to be in-conflict, when in reality they are not.  To avoid this case, rows written by the slave are marked (via their NDB$AUTHOR column).  The value of the NDB$AUTHOR column is also checked when looking for conflicts.  If the NDB$AUTHOR column indicates that the row was last written by the slave, then *by definition*, it is not in conflict with a locally sourced update. Therefore, the pushed program for conflict detection has the following pseudo code : if (NDB$AUTHOR == 0) // Last update was local { if (NDB$GCI64 > Ndb_slave_max_rep_epoch) { return row_in_conflict; } } return row_not_in_conflict; Epoch resolution A Cluster epoch is a 64 bit number comprised of 2 32-bit components, GCI_hi and GCI_lo.  GCI_hi starts at 1 after an initial cluster start, and increments periodically, according to the configured Global Checkpoint period, normally every 2s. GCI_lo also increments periodically, according to the configured epoch timeout period, normally every 100 millis. GCI_lo is reset when GCI_hi increments. For the default configuration, this would suggest that normally there could be up to 2000/100 = 20 GCI_lo values per GCI_hi value. Note that GCI_hi is incremented by a Global-checkpoint-save round completing, where Redo log files for a particular global checkpoint are successfully flushed to disk.  Where disk IO is in short supply, this can take some time, and the period between increments can be extended.  In this case, there can be more GCI_lo increments per GCI_hi increment than the division of the configured periods would suggest. The ROW_GCI64 pseudo column is implemented using the existing 32-bit ROW_GCI to retrieve the GCI_hi component, and using a variable bit-width column to store the n lsbs of GCI_lo.  As described above, storing the full 64 bits for each row would be wasteful.  The number of bits to use to store the GCI_lo component can be controlled by users as a conflict function parameter.  Where it is not supplied, it defaults to 6, giving 26 values = 64. If GCP Save is too slow, it could be that there are more than 2^n GCI_lo values per GCI_hi.  GCI_lo values above 2^n -1 cannot be recorded in the database.  This is problematic as if we just saturate at 2^n -1 then we cannot tell the difference between rows updated at 2^n -1 and 2^n + x.  When the highest replicated epoch reached 2^n - 1, we will assume that everything committed in the current GCI_hi value has been replicated, and may miss some conflicts. To avoid this scenario, we treat the max value of GCI_lo (2^n -1) as if it were 232 -1, e.g. 0xffffffff.  So for a 3-bit GCI_lo, the values can be : 0 1 2 3 4 5 6 0xffffffff Note that the value 7 is not available - it is used to convey 'saturation'. Where a row is updated with GCI_lo at 7 or above, when GCI_64 is read back, the bottom word will be 0xffffffff.  This indicates a 'later' epoch than the actual epoch, but has the safety property that we need.  When ndb_apply_status reflection causes the Max Replicated Epoch to reach GCI_lo of 7 (ndb_apply_status is not affected by this bit limitation), we will not consider these rows to be 'replicated'.  It is only when we see that the next GCI_hi value has been replicated, that these rows are considered to be replicated. In this way we avoid the risk of missing a conflict, but risk false conflicts. Another risk here is that if the system quiesces after this saturation, then we may not get the replication traffic necessary to determine that the next GCI_hi value has been replicated, and so the window of conflict stays open until some further replication traffic occurs. For these reasons, the number of bits used should not be pared too low, as it will result in more conflicts. Asymmetry/Non-determinism Existing conflict detection algorithms assume that conflicts are symmetric.  For example, with NDB$MAX() if Cluster 1 updates a row with timestamp 6 and Cluster 2 updates it with timestamp 7, then, when applying the replicated updates : At Cluster 1 Received timestamp (7) > Existing timestamp (6), APPLY At Cluster 2 Received timestamp (6) < Existing timestamp (7), DISCARD So  Cluster 2 wins. NDB$EPOCH does not have the same guaranteed symmetry.  Two Clusters replicating circularly may update the same row(s) 'semi-simultaneously', one may detect the updates as in-conflict, while the other may not.  One reason for this is imprecision in the conflict detection, due to the limited ordering in the Cluster Binlog, as described below.  The effect of this is that to get a deterministic result, we need to have only one cluster determining when conflicts have occurred, and taking action.  As only one Cluster is detecting conflicts, other clusters are accepting changes in the order they arrive, and may contain divergent data.  The conflict-detecting Cluster (The Primary Cluster) must therefore take steps to realign other Clusters in the case of conflicts. Realigning the Secondary Cluster Realignment is achieved by logging events in the Primary Cluster Binlog which will force the Secondary into alignment when applied by the Secondary's Slave.  The NdbApi refreshTuple() mechanism is used to generate these events in the Binlog.  refreshTuple() has the following semantics : - If row exists Lock exclusively Produce Insert NdbApi event with all column contents as after image - If row does not exist Lock exclusively (by pretending it does exist!) Produce Delete NdbApi event with primary key only This results in WRITE_ROW and DELETE_ROW events for conflicting rows appearing in the Binlog.  These events are Binlogged in the Primary epoch transaction where the results of applying the Secondary epoch transaction (if any) are Binlogged. As the realignment is a 'force' operation, it is important that the WRITE_ROW and DELETE_ROW events are applied at the Secondary as 'idempotent' operations. The WRITE_ROW should act as an Insert if the row does not exist, and as an update otherwise.  The Delete row should ignore the case where the row does not exist. This behaviour is the default for replication, except where a conflict algorithm is defined for a table, so it is important that the Secondary have no conflict algorithm defined for tables which can be realigned by this mechanism.  (This could be circumvented if necessary). Within the Primary Cluster Slave, the algorithm is as follows : BEGIN while (rows_remain_in_secondary_epoch_transaction) { do { define conflict op with interpreted program } while (space_left_in_batch) execute(no_commit) for_each_op_result { if conflict_detected define refresh_row operation } execute(no_commit) check_refresh_op_errors } COMMIT Conflict handling occurs at the end of each Slave batch - detected conflicts result in refresh row operations being executed, before continuing with the next batch of operations.  Commit occurs once all conflict handling has completed. Handling multiple conflicts It is important that once a conflict is detected between a Primary Cluster update and a Secondary Cluster update, any further Secondary Cluster updates to the same row are also regarded as in-conflict, whether they occur within the same Secondary Cluster epoch transaction as the initial conflict, or in some later transaction. Within the application of a Secondary Cluster epoch transaction in the Primary Cluster Slave, there can be multiple batches of execution, each with its own post-execute conflict handling stage. Where a Secondary epoch transaction has multiple conflicting updates to a row, they can be applied in the same or separate batches. e.g. BEGIN update row 1 set a='First'; update row 1 set b='Second'; #execute(NoCommit) + handle conflicts update row 2 set a='Third'; #execute(NoCommit) + handle conflicts COMMIT In this case, the first and second conflicting operations will detect the conflict based on the committed epoch of the row, and the author column.  They will each issue a refreshTuple operation at the end of the batch. The first refreshTuple operation will result in Binlog event generation, and the row's epoch being updated to the current epoch at commit time. The second refreshTuple operation will fail, as it is not allowed for a refreshTuple to be followed by any other operation on a row in a transaction. This 'operation after refresh' error is used to indicate a conflict - the row is already being refreshed, so no need to take any further steps. When the third operation is executed, it will also hit the 'operation after refresh' scenario, although it will be an update operation rather than a refresh operation. Using the 'no operation after refresh' mechanism in this way avoids the need for the slave to 'remember' which rows in the current transaction have suffered conflicts. Delete conflict issues Delete conflicts are problematic as by definition, a row delete removes the information necessary to detect further conflicts (epoch, author etc). Normally, a DELETE from the Secondary which finds the row missing would be considered a conflict, and result in a refresh.  However, this is not effective, as the fact that the row has been refreshed, and should therefore record conflicts for any further Secondary modifications until the refresh has replicated, cannot be recorded in the database. Additionally, if a refresh is issued for a deleted row, then there are different behaviours within the transaction depending on batching.  If we receive a DELETE followed by an INSERT from the Secondary, and the row does not exist on the Primary, then the DELETE indicates a conflict, but the behaviour varies depending on whether the INSERT is executed in the same batch as the DELETE.  If it's in the same batch then it will succeed. If it's in a later batch then it will hit the no-operation-after-refresh check.  If it's in a following transaction, then it will succeed, as the delete conflict was not recorded. To avoid this strange inconsistency, DELETE-DELETE conflicts do not result in a refreshTuple operation being issued, and we state that we cannot currently avoid divergence where DELETE-DELETE conflicts are possible. Between epoch transactions Where the same conflicting row is updated by the Secondary Slave in separate Secondary Slave epoch transactions, the normal epoch/author conflict detection mechanism is used to detect the conflict.  The commit of the refreshTuple operation from the first transaction updates the row's epoch to the current system epoch, so that any further updates from the Secondary, occurring before the refresh Tuple has been replicated, are detected as in-conflict. In this way, detecting a conflict, and refreshing the row, extends the window of potential conflicts, until the refresh operation has also been 'reflected' from the Secondary. Background Conflict Detection Imprecision The Ndb Binlog is recorded as a result of events received over the NdbApi event Api.  The event Api supports limited ordering within an epoch, only guaranteeing that events for multiple transactions affecting the same row will be received in order. Events for different rows can be received in different orders on different Api nodes. A consequence of this is that when a Slave MySQLD applies an epoch transaction, the generated events for its ndb_apply_status update, and other row updates may arrive at any order (within the epoch) of Binlogging MySQLDs. The ndb_apply_status event is used to flag that an epoch has been applied by including it in the Slave Cluster's Binlog (as part of an epoch) which is 'reflected' back to the 'Master'.  However, due to the vague Binlog ordering, we can only know that our epoch can be considered 'applied' once we have fully applied the Slave's 'reflected' epoch transaction, as some row update from our epoch may be the last event recorded in the Slave's epoch transaction. This problem is handled by the mechanism for updating Ndb_slave_max_rep_epoch in the Slave, where it is only updated to the highest seen value after committing a slave transaction (containing a slave epoch).  This ensures that when Ndb_slave_max_rep_epoch advances, all subsequently applied events occurred after the epoch in question was applied. The main downside of this imprecision is that it can cause false conflicts to be detected.  Where a local epoch was applied at the slave before a slave-local update to the same row, if both are binlogged in the same slave epoch then the slave-local update will be detected as in-conflict, even though it occurred after the applied update. Example : Primary              Primary Binlog          Secondary                  Secondary Binlog 'Epoch 44 start' Set T1 row 1 to A 'Epoch 44 end' BEGIN WR apply_status (Primary,44) WR T1 (1, A) COMMIT 'Epoch 222 start' Set T1 row 1 to B BEGIN # Slave Set apply_status row to 44 Write (1,A) into T1 COMMIT Set T1 row 1 to C 'Epoch 222 end' BEGIN WR apply_status (Secondary, 222) WR T1 (1,B) WR T1 (1,A) WR apply_status (Primary, 44) WR T1 (1,C) COMMIT In this example, looking at the order of events on the Secondary, we can say that in theory, the write of B to T1 row 1 occurred before the application of the replicated epoch 44, and the write of C to T1 row 1 occurred afterwards. However, the Binlog contents only guarantee order between updates to the same row, so the relative order of the T1 and apply_status updates is not guaranteed. In this case, the apply_status update is logged *after* the corresponding T1 update. Due to this uncertainty, we can only be *sure* that Primary epoch 44 has been fully applied, at the end of the Secondary epoch (222).  This 'rounding up' or imprecision, causes us to consider the second write by the Secondary to T1 row 1 as also being in conflict, as we cannot tell whether it occurred before or after the application of the primary epoch. Note that other orders are possible within the Secondary Binlog.  The limitations are : 1) The locally generated apply status write row event will be first. 2) Updates to the same row (Table, PK pair) will be in-order. Possible Binlog order combinations : ('In order') (As above) WR AS S 222  WR AS S 222  WR AS S 222  WR AS S 222 WR AS P 44   WR T1 1 B    WR T1 1 B    WR T1 1 B WR T1 1 B    WR AS P 44   WR T1 1 A    WR T1 1 A WR T1 1 A    WR T1 1 A    WR AS P 44   WR T1 1 C WR T1 1 C    WR T1 1 C    WR T1 1 C    WR AS P 44 As the number of writes, rows and epochs involved goes up, the possible combinations expand. When applying the above Binlog transaction in the Primary, the Primary Slave will note the WR AS P 44 row as a new 'Max replicated epoch' for the Primary as it applies it. However, as it cannot be sure of the Binlog ordering, it is only safe to use this as the Max replicated epoch once the received Binlog transaction has been committed. The NDB$EPOCH function does not support tables with Blob columns. Two reasons currently : 1) Not clear how well adding an interpreted program to a Blob update/delete operation works in practice (This affects the other conflict algorithms as well) 2) No implementation of refreshTuple() for Blobs yet Normal refreshTuple will refresh the main table row only, not the part table(s) rows. 	e93473e7824122fbc039f72189bf65227390d387
----------------------------
Addendum to bug #11757216: fix a test that expects SET DEFAULT_STORAGE_ENGINE to set default temp storage engine too. 	e6843bc4f619ac3dd40899e08d781644f9a584fa
----------------------------
Fix for bug#11766256, and particularly its relatives/duplicates bug#11751026 and bug#11765274. Fixes the problem that complex queries containing a lot of EQ_REF'ed joined tables takes 'forever' to produce a query plan. The fix depends on the fact that when a table is joined by an unique key there is a 1::1 relation between the rows being joined. Assuming we have multiple such 1::1 (star-)joined relations in a sequence, without other join types inbetween. Then all of these 'eq_ref-joins' will be calculated to return the excact same #rows and having identical 'cost' (or 'read_time'). This leads to that we can append such a contigous sequence of eq_ref-joins to a partial plan in any order without affecting the total cost of the query plan. Exploring the different permutations of these eq_refs in the 'greedy' optimizations will simply be a waste of precious CPU cycles. This chain of eq_refs can further be handled as a single entity wrt. the full 'greedy' exploration of the possible join plans. This will reduce the 'N' in the O(N!) complexity of the full greedy search. The method ::eq_ref_extension_by_limited_search() has been implemented doing as described above. Once an EQ_REF joined table is encountered, it is invoked to append any remaining EQ_REFs to the join plan. This chain of EQ_REFs will then act like a single entity in the further exploration of possible join plans. It should be noted that ::best_extension_by_limited_search() will still explore the other plans starting with non-EQ_REF operations as possibly better alternatives to the EQ_REF-extended query plan. Usage of ::eq_ref_extension_by_limited_search() is controlled by 'optimizer_prune_level=1'. This fix also introduce the method ::plan_is_complete() which contains common functionality between ::best_extension_by_limited_search() and ::eq_ref_extension_by_limited_search() greedy_optimizer.test has been extensively extended with new testcases containing lots of EQ_REF's. No existing test/query plans are expected to change as result of this fix. It should only produce the 'best' plan (a lot!) faster. - Like the testcase for bug#58225 which now completes the QEP in ~0.05s in my DEBUG compiled sandbox (With 'optimizer_search_depth= 62'). This previously took  63min+42.437s :-o This extention to the greedy optimizer has been implemented by Ole John Aske. 	a0372c4112c5fa3567ca4368b060693ba92d1722
----------------------------
"Bug#12346211 PERF IMPACT OF PERFORMANCE-SCHEMA WITH DISABLED INSTRUMENTS/CONSUMERS Performance improvement #2: Flags denormalization. In the performance schema implementation, in storage/perfschema/, implemented the following changes. 1) Define pre compiled instance flags. Before, in pfs.cc, to check if a mutex event is enabled, the code did: - Get the PFS_mutex_class from the PFS_mutex - check the PFS_mutex_class::m_enabled flag - check the flag_global_instrumentation consumer flag. This costs: - several memory access to follow pointers, - several tests With this fix, a pre compiled flag is maintained: - PFS_mutex::m_enabled that indicates if an event on a mutex instance is enabled or not. A single test is now sufficient in get_thread_mutex_locker(). Because PFS_mutex::m_enabled is a pre compiled value, it needs to be refreshed each time: - setup_instruments changes for the mutex class - setup_consumers changes for the global_instrumentation consumer. Table setup_instruments and setup_consumers now do update all derived flags when a setup value is changed. Similar changes have been implemented for other instrument type: - rwlock - cond - file using the same pattern. 2) Define pre compiled table_share flags. Similar to 1) for PFS_table_share::m_enabled and m_timed. PFS_table_share::m_enabled is computed from the rules in performance_schema.setup_objects. 3) Define pre compiled table handle flags. Similar to 1) for PFS_table::m_io_enabled and related. 4) Packed performance schema internal structures Reordered members, removed unused members. 5) Removed the setup objects cache. Using denormalized flags is a ""push"" design, where the thread that changes setup_* tables pushes all changes to internal structures. The setup object cache was a ""pull"" design, where a thread executing instrumented code had to pull data from different places at runtime, to maintain internal structures. The setup object cache has been removed. "	6d1137581795d4e5d4648e4161c48ae45cc6b93e
----------------------------
"add suppression for running with ""--mysqld=--binlog-format=mixed"" as pb-swei does "	ac181debe8cbfdded446879eab894a9843016aa4
----------------------------
WL#5285 -  Simplify user visible setting for optimizer_join_cache_level Part 6:  Replace use of optimizer_join_cache_level with optimizer_switch='batch_key_access' Code now tests for new optimizer_switch batch_key_access instead of optimizer_join_cache_level.  Added debug flag test_bka_unique to be able to still test this algorithm. Added new tests with suffix _bka_nobl.test to test with BNL off and BKA on. 	59613ce1188e9de54a0bf3d34b4956b399f7daeb
----------------------------
WL#5285 -  Simplify user visible setting for optimizer_join_cache_level Part 5:  Replace use of optimizer_join_cache_level with optimizer_switch='block_nested_loop' In all cases where optimizer_join_cache_level was checked for whether to use Block Nested Loop, we now check the new optimizer_switch block_nested_loop instead. JOIN_TAB objects are no longer used to store which join buffering algorithms are enabled.  This is now computed on-the-fly by checking optimizer_switch (and temporarily optimizer_join_cache_level). Note that temporarily, block_nested_loop will also need to be on for BKA to be selected. 	cb09ac568033a2e22920a397c1f3f620e99534a4
----------------------------
A few miscellaneous fixes: 1) Add 3 error messages for InnoDB specific FT error return 2) Convert some defines to innodb configurable variables 3) Remove unused function fts_get_next_token() 	5dc38680ff75cfedff7e79b1038cfa95c0c1eb72
----------------------------
60097: NDB_CONFIG TO DUMP CONFIG VERSION FOR DATA NODES 	5905df55f711aeb8034f414300ad4783d4e2f7e9
----------------------------
Bug #11757091 49093: 5.1 CONFIGURE SCRIPT SHOULD WARN ABOUT MYSQL CLUSTER NOT BEING MAINTAINED Added a conditional echo at end of configure.in 	be8f64ff294644759202ca24e8d44e8d1a257410
----------------------------
Bug#12637786 Wrong secondary index entries on CHAR and VARCHAR columns row_build_index_entry(): In innodb_file_format=Barracuda (ROW_FORMAT=DYNAMIC or ROW_FORMAT=COMPRESSED), a secondary index on a full column can refer to a field that is stored off-page in the clustered index record. Take that into account. rb:692 approved by Jimmy Yang 	7759826ea96c0ae627b63cf398238cde50a8b5bf
----------------------------
ndb - add opt-file for ndb_autodiscover3 and ndb_discover_db which requires log-bin and binlog-format=row 	152a1df8778ab9854dd090bc89ee01e2a25e776d
----------------------------
WL5353 Primary Cluster Conflict Detection Implement Ndb_slave_max_replicated_epoch status variable New status variable, initialised on Slave start from ndb_apply_status table contents and maintained as 'reflected' ndb_apply_status WRITE_ROW events are applied.  ndb_apply_status events logged by the Slave server, or any server in the IGNORE_SERVER_IDs list are used. The status variable is reset when RESET SLAVE is executed. Additionally : - Ndb handler code accessing the MasterInfo structure is factored out into new files (ndb_mi.h, ndb_mi.cc) - The master_epoch member of MasterInfo is no longer used/maintained. Two new testcases added to verify status variable initialisation and maintenance. This variable is used in a future patch series to detect distributed update serialisation violations (conflicts). 	5bc67b179e7a840d204b1c7c5f7037ef21311331
----------------------------
Bug#12603341 - PERFSCHEMA.RELAYLOG FAILS SPORADICALLY IN PB2 Before this fix, the test performance_schema.relaylog would fail with sporadic failures related to statistics on update_cond. The reason for these failures is that thread scheduling makes impossible to predict if instrumented conditions will be used on not. The fix is to relax the test case, to not collect statistics about: - wait/synch/cond/sql/MYSQL_BIN_LOG::update_cond - wait/synch/cond/sql/MYSQL_RELAY_LOG::update_cond 	89d65a0338f996b821f24923c7690313eeee54ee
----------------------------
ndb - rename ndb_configre.m4 to VERSION (since only version is kept there) 	7d27f2e5e6e8b0328de553cc9ca2bbb1ea929ebd
----------------------------
ndb 55 - extend cmake/configure.pl with ndb specific configure options 	329c19699c814ee49c2e451667112171834acb61
----------------------------
Bug#12699505 Memory leak in row_create_index_for_mysql() DB_COL_APPEARS_TWICE_IN_INDEX: Remove. This condition is already checked and reported by MySQL before passing the index definition to the storage engine. row_create_index_for_mysql(): Remove the redundant check for DB_COL_APPEARS_TWICE_IN_INDEX. When enforcing the column prefix index limit, invoke dict_mem_index_free(index) to plug the memory leak. In the loop, use index->n_def instead of dict_index_get_n_fields(index), because the latter would be 0 for indexes that have not been copied to the data dictionary cache. innodb-use-sys-malloc.test: Add test cases for attempting to trigger the error checks in row_create_index_for_mysql(). Before MySQL 5.5 and WL#5743, the leak is only reproducible if ha_innobase::max_supported_key_part_length() returned a higher limit than the one used in row_create_index_for_mysql(). In MySQL 5.5 and later, the leak is reproducible with innodb_large_prefix=true. rb:688 approved by Jimmy Yang 	37282cc6bdaec20ce2a8775336dc5b4a228d71fe
----------------------------
"WL#4896 ""Performance Schema Net IO"" - Added socket_instances_func.test to verify contents of SOCKET_INSTANCES "	44105020e9bd1263dabf3003c875e00a40318570
----------------------------
WL#5285 -  Simplify user visible setting for optimizer_join_cache_level Part 3: Add new optimizer_switch variables, block_nested_loop and batch_key_access. Added two new optimizer switches: block_nested_loop and batch_key_access. Temporarily map settings to optimizer_join_cache_level. Defaults are: block_nested_loop=on, batch_key_access=off Turned off block_nested_loop in some join_cache test files in order to still be able to test levels 0-3. Updated similar test files for levels 4 and 6 to use the new switches instead of optimizer_join_cache_level. Updated corresponding result files plus result files for tests that outputs list of all optimizer switches. 	57066b24f5c678bde18530b7871a81ce82d444fd
----------------------------
ndb - use @@optimizer_switch='engine_condition_pushdown=on' instead of engine_condition_pushdown=on 	9693c1546d881293a5b93a65b09ace7962e830e6
----------------------------
"BUG# 11757216: 49232: --STORAGE-ENGINE SHOULD BE DECOUPLED FROM DEFAULT TEMPTABLE TYPE Implemented a --default-temp-storage_engine variable to complement the --default-storage-engine. It's default value is the same as of --default-storage-engine. But it's totally independent from --default-storage-engine. The value of --default-temp-storage-engine affects only the tables created by CREATE TEMPORARY TABLE. All other internally created temp tables are not affected by it. The special storage engine name ""DEFAULT"", when applied to such temporary tables work as an alias of the default temp table storage engine. Extended mysql-test-run.pl to issue --default-temp-storage-engine=myisam as a complement to --default-storage-engine=myisam. Test case added. Affected test cases updated. "	d164af1a122c10cec8b488060b4608feba2e332d
----------------------------
"Bug#12694147 COMPILING WITH -DWITHOUT_PARTITION_STORAGE_ENGINE=1 AND WITHOUT -O FAILS! (formerly known as 61625) The problem was that the server would not compile if partitioning was disabled. This was caused by two calls to the partition_key_modified() function which is only defined if partitioning support is enabled. This regression was caused by the patch for Bug#11762751. This patch fixes the problem by wrapping the offending calls in #ifdef WITH_PARTITION_STORAGE_ENGINE / #endif. The patch also fixes a test case which used partitioning without having ""--source include/have_partition.inc"". This meant that the test case would fail on servers configured without partitioning. No test case added. "	3c76093d938a1452d04a363ec30ba86ec476a4fa
----------------------------
Bug#12661349 Assert in protocol::end_statement The triggered assert checks that either OK or an error is sent to the client after a command has been processed by the server. It was triggered in this case if the client used binary protocol and the connection was killed during prepare. On release builds, the consequence of the bug was that OK was sent to the client even if the prepare failed. When processing a SQL command, a check towards end of processing makes sure to report KILL_QUERY error to the client if the connection/command was killed. This check was however not done for binary protocol processing (COM_STMT_PREPARE in this case). This patch fixes the problem by making sure that the KILL_QUERY error is sent to the client in these cases as well. Test case added to ps.test. 	d62775708b8b4bbd707e40d7dee7e3a62b0e4b91
----------------------------
Improved on the internal Doc ID management. Got rid of the FTS_DOC_ID_STEP and we no longer need to update Doc ID to the CONFIG table every FTS_DOC_ID_STEP, which could be costly. Doc ID are now mostly an in memory counter, and be sync-ed only when FTS cache sync-ed to auxiliary tables. The Doc ID is initialized when we create FTS cache at the table load time, its initial value is determined by consulting ADDED table and CONFIG table. 	2b7141fa99c697e2ed01671f412bfdb063ef6f56
----------------------------
Modify 2 channel circular replication testcase to use IGNORE_SERVER_IDS The 2 channel circular replication testcase uses the same server id for both MySQLDs on each site to avoid double application of 'reflected' events. This is not necessary with the IGNORE_SERVER_IDs CHANGE MASTER option, so the testcase is modified to use distinct server ids + IGNORE_SERVER_IDS. 	9995012af6146584ecb973bdea7557f2dc6fced4
----------------------------
ndb - bug#12589613 - add new config MaxDMLOperationsPerTransaction to limits transactions 	032cab1b1c7b111f4b0d93da7c86c1e91c110261
----------------------------
"Bug#11766504 ""59631: BIGINT UNSIGNED BYTE RELATED COLUMNS IN PERFORMANCE_SCHEMA"" - Updated perfschema.schema with changed column types "	fe239c84c3fbc196d056ecc51643858a75085cf8
----------------------------
"Bug#11766504 ""BIGINT UNSIGNED BYTE RELATED COLUMNS IN PERFORMANCE_SCHEMA"" - Byte-related columns are signed - OBJECT_INSTANCE_BEGIN columns are unsigned - Added tests to confirm both "	04caf483c37b3329aad1436cc6e06a8b95ace557
----------------------------
ndb - fix compile error for configs which does not have rmb/wmb 	27bd8b4367881d52461d0f462cdba7b203e4c512
----------------------------
"Bug#12584161 - 43861: MAIN.QUERY_CACHE_28249 FAILS SPORADICALLY This test case was failing on 5.5 and trunk for two reasons. 1) It waited for the ""Waiting for table level lock"" process state while this state was renamed ""Waiting for table metadata lock"" with the introduction of MDL in 5.5. 2) SET GLOBAL query_cache_size= 100000; gave a warning since query_cache_size is supposed to be multiples of 1024. This patch fixes these two issues and re-enables the test case. "	cc4530f92d31cc163257efd2fc2d1e4ccb33c35b
----------------------------
"Added build target run.clusterjdbc which uses JdbcLoad with clusterjdbc configuration Added ""include"" property to specify which operations to run, overriding ""exclude"" Provided for java.util.logging configuration to be set up in any crund properties file "	0ddb1c9703329182273e92e4bcc36f5734faea92
----------------------------
ndb - switch fromusing storage_engine to default_storage_engine since storage_engine variable is due to be removed 	1c1c0000d0b9286b44609bb9d3b55a5f151f3120
----------------------------
"Fixed bug#11840395 (formerly known as bug#60347: THE STRING ""VERSIONDATA"" SEEMS TO BE 'LEAKING' INTO THE SCHEMA NAME SPACE) and bug#12428824 (Parser stack overflow and crash in sp_add_used_routine with obscure query). The first problem was that attempts to call a stored function by its fully qualified name ended up with unwarranted error ""ERROR 1305 (42000): FUNCTION someMixedCaseDb.my_function_name does not exist"" if this function belonged to a schema that had uppercase letters in its name AND --lower_case_table_names was equal to either 1 or 2. The second problem was that 5.5 version of MySQL server might have crashed when a user tried to call stored function with too long name or too long database name (i.e if a function and database name combined occupied more than 2*3*64 bytes in utf8). This issue didn't affect versions of server < 5.5. The first problem was caused by the fact that in cases when a stored function was called by its fully qualified name we didn't lowercase name of its schema before performing look up of the function in mysql.proc table even although lower_case_table_names mode was on. As result we were unable to find this function since during its creation we store lowercased version of schema name in the system table in this mode and field for schema name uses binary collation. Calls to stored functions were unaffected by this problem since for them schema name is converted to lowercase as necessary. The reason for the second bug was that MySQL Server didn't check length of function name and database name before proceeding with execution of stored function. As a consequence too long database name or function name caused buffer overruns in places where the code assumes that their length is within fixed limits, like mdl_key_init() in 5.5. Again this issue didn't affect calls to stored procedures as for them length of schema name and procedure name are properly checked. This patch fixes both these bugs by adding calls to check_db_name() and check_routine_name() to grammar rule which corresponds to a call to a stored function. These functions ensure that length of database name and function name for routine called is within standard limit. Moreover call to check_db_name() handles conversion of database name to lowercase if --lower_case_table_names mode is on. Note that even although the second issue seems to be only reproducible in 5.5 we still add code fixing it to 5.1 to be on the safe side (and make code a bit more robust against possible future changes). "	639605a91937681fa7256d0f5a2e216046d33d92
----------------------------
Bug#37153 NDB Cluster reports affected rows incorrectly - This is a rewrite of the previous fix which commits the simple autocommit transaction before the update or delete loops asks the handler for number of affected rows. Thus still saving one roundtrip while returning the correct number of affected rows. - Refactor the compound if statements in exec_bulk_update and end_bulk_delete which controls when to no-commit or not. Adding DBUG_PRINT so it's possible to see which path is choosen when optimizing away roundtrips 	2bbe7677cbe4017f29ef8d778c5d78c9d7ba2d56
----------------------------
Bug #12589928: MEMORY LEAK WHEN RUNNING SYS_VARS.SECURE_FILE_PRIV This is the 5.1 version of the fix. Need to free the memory allocated by the option parsing code for empty strings when resetting the pointer to NULL. No test case needed, as the existing ones already cover this path. 	8e14d52610d747977bcbe2875cbe7d93724d8143
----------------------------
Bug #11749418: 38965: TEST CASES GIS-RTREE, TYPE_FLOAT, TYPE_NEWDECIMAL FAIL IN EMBEDDED SERVER FreeBSD 64 bit needs the FP_X_DNML to fpsetmask() to prevent exceptions from propagating into mysql (as a threaded application). However fpsetmask() itself is deprecated in favor of fedisableexcept(). 1. Fixed the #ifdef to check for FP_X_DNML instead of i386. 2. Added a configure.in check for fedisableexcept() and, if present, this function is called insted of the fpsetmask(). No need for new tests, as the existing tests cover this already. Removed the affected tests from the experimental list. 	29d840ee47c0e6406cbde7b1d878643d0b25e1ce
----------------------------
Bug 11765863: SHUTDOWN HANG WAITING FOR PURGE THREAD TO BE SUSPENDED This is really several bug fixes rolled into one: 1. Fix a hang during shutdown 2. Fix multi-threaded purge performance issue when innodb-purge-threads > 1. 3. Remove purge_sys->n_executing 4. Purge unable to keep up with data generation when number of user threads >= 256. Now that worker threads can't simply exit via os_event_wait() and their termination is deterministic.  Get rid of the dodgy code that tried to handle the case of an unexpected exit. This gets rid of the purge_sys->n_executing field altogether. Simplifies the control flow and fixes a performance issue when innodb-purge-threads > 1 by removing some arbitrary sleeps to handle the above case. Treat the number of purge threads as a pool of threads, use only as many threads as required to keep the history list in check. Set innodb_purge_batch_size default to 300 from 20. Updated test results accordingly. rb://658 Approved by: Jimmy Yang. 	95df27e83061683d0a0d9ec9a979ffb73e997113
----------------------------
Bug#11762221 post-push fix: build broken unless HAVE_OPENSSL 	1f90a07140394fdc02906d3f2092e54c120c7765
----------------------------
Bug#11762221 - 54790: Use of non-blocking mode for sockets limits performance Bug#11758972 - 51244: wait_timeout fails on OpenSolaris The problem was that a optimization for the case when the server uses alarms for timeouts could cause a slowdown when socket timeouts are used instead. In case alarms are used for timeouts, a non-blocking read is attempted first in order to avoid the cost of setting up a alarm and if this non-blocking read fails, the socket mode is changed to blocking and a alarm is armed. If socket timeout is used, there is no point in attempting a non-blocking read first as the timeout will be automatically armed by the OS. Yet the server would attempt a non-blocking read first and later switch the socket to blocking mode. This could inadvertently impact performance as switching the blocking mode of a socket requires at least two calls into the kernel on Linux, apart from problems inherited by the scalability of fcntl(2). The solution is to remove alarm based timeouts from the protocol layer and push timeout handling down to the virtual I/O layer. This approach allows the handling of socket timeouts on a platform-specific basis. The blocking mode of the socket is no longer exported and VIO read and write operations either complete or fail with a error or timeout. On Linux, the MSG_DONTWAIT flag is used to enable non-blocking send and receive operations. If the operation would block, poll() is used to wait for readiness or until a timeout occurs. This strategy avoids the need to set the socket timeout and blocking mode twice per query. On Windows, as before, the timeout is set on a per-socket fashion. In all remaining operating systems, the socket is set to non-blocking mode and poll() is used to wait for readiness or until a timeout occurs. In order to cleanup the code after the removal of alarm based timeouts, the low level packet reading loop is unrolled into two specific sequences: reading the packet header and the payload. This makes error handling easier down the road. In conclusion, benchmarks have shown that these changes do not introduce any performance hits and actually slightly improves the server throughput for higher numbers of threads. - Incompatible changes: A timeout is now always applied to a individual receive or send I/O operation. In contrast, a alarm based timeout was applied to an entire send or receive packet operation. That is, before this patch the timeout was really a time limit for sending or reading one packet. Building and running MySQL on POSIX systems now requires support for poll() and O_NONBLOCK. These should be available in any modern POSIX system. In other words, except for Windows, legacy (non-POSIX) systems which only support O_NDELAY and select() are no longer supported. On Windows, the default value for MYSQL_OPT_CONNECT_TIMEOUT is no longer 20 seconds. The default value now is no timeout (infinite), the same as in all other platforms. Packets bigger than the maximum allowed packet size are no longer skipped. Before this patch, if a application sent a packet bigger than the maximum allowed packet size, or if the server failed to allocate a buffer sufficiently large to hold the packet, the server would keep reading the packet until its end. Now the session is simply disconnected if the server cannot handle such large packets. The client socket buffer is no longer cleared (drained) before sending commands to the server. Before this patch, any data left in the socket buffer would be drained (removed) before a command was sent to the server, in order to work around bugs where the server would violate the protocol and send more data. The only check left is a debug-only assertion to ensure that the socket buffer is empty. 	dc30732c549b7628b07ff8dbb8d35f0de74a24c9
----------------------------
"Implement worklog #5743 InnoDB: Lift the limit of index key prefixes. With this change, the index prefix column length lifted from 767 bytes to 3072 bytes if ""innodb_large_prefix"" is set to ""true"". rb://603 approved by Marko "	bd708b42400ff2ca8ba22accc696acd3539d9859
----------------------------
Resolve FTS Doc ID issues with truncate table command. The Doc ID needs to be reset to 0 after the auxiliary tables recreated. Also update the next Doc ID in config table directly after each create FTS index. Added innodb-fts-ddl.test. 	b1c341e687bbb3e148f7f4d88c34e426fa262b6c
----------------------------
Bug#11765562 58545 EXPORT_SET() CAN BE USED TO MAKE ENTIRE SERVER COMPLETELY UNRESPONSIVE The function EXPORT_SET(bits,on,off[,separator[,number_of_bits]]) will concatenate (up to) 64*2 -1 strings: on/off and separator. The total length should not be greater than thd->variables.max_allowed_packet. 	70d68fbbe4f0f449069d1d14d00d2db206e7db49
----------------------------
Bug #12586211 ENABLE GCOV BUILDS WITH CMAKE, INCLUDING PLUGINS Added --with-gcov option to configure.pl and use that from SETUP.sh 	eb8586236662b6715a0fd852286ab0d1c56ad90b
----------------------------
Merge: 317c354 1d1ab9d Autocommit : Updating local tree 	e975e325dac59d332d875477f8bf7fdd38957f09
----------------------------
Merge: 74d923f 5b25a69 Autocommit - Updating local tree 	e6aa9227b6ec4ea4700835706e57315af6d2acc5
----------------------------
ndb - link NdbGetInAddr-t with the socket library 	ad405f7455ac1771af586ce164c69358e3c7ad40
----------------------------
wl#4124 b01_sys.diff configs, pseudo-cols, sys tables, signals 	6c7f298ad2524b25b525f33f1017262b9b5b8799
----------------------------
Bug#12543706 - innodb-fast-shutdown=2: Assert node->modification_counter == node->flush_counter This bug (an assertion failure during a crash-like shutdown) was introduced by the fix of Bug#12323643 Clean up the InnoDB thread shutdown and assertions (WL#5136). fil_node_close_file(): Relax the failing assertion when innodb_fast_shutdown=2. 	2646dd96eb57d4e1c6e7b0d48742256b32e4b896
----------------------------
Simplified test cases. *_lc[0,1,2] tests are not needed any more, since performance schema tables are not affected by lower_case_table_names. 	6f0efb4e02fb11ba9f0dde94a206df9a2f4f1e34
----------------------------
"Fix for BUG#11755168 '46895: test ""outfile_loaddata"" fails (reproducible)'. In sql_class.cc, 'row_count', of type 'ha_rows', was used as last argument for ER_TRUNCATED_WRONG_VALUE_FOR_FIELD which is ""Incorrect %-.32s value: '%-.128s' for column '%.192s' at row %ld"". So 'ha_rows' was used as 'long'. On SPARC32 Solaris builds, 'long' is 4 bytes and 'ha_rows' is 'longlong' i.e. 8 bytes. So the printf-like code was reading only the first 4 bytes. Because the CPU is big-endian, 1LL is 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x01 so the first four bytes yield 0. So the warning message had ""row 0"" instead of ""row 1"" in test outfile_loaddata.test: -Warning	1366	Incorrect string value: '\xE1\xE2\xF7' for column 'b' at row 1 +Warning	1366	Incorrect string value: '\xE1\xE2\xF7' for column 'b' at row 0 All error-messaging functions which internally invoke some printf-life function are potential candidate for such mistakes. One apparently easy way to catch such mistakes is to use ATTRIBUTE_FORMAT (from my_attribute.h). But this works only when call site has both: a) the format as a string literal b) the types of arguments. So: func(ER(ER_BLAH), 10); will silently not be checked, because ER(ER_BLAH) is not known at compile time (it is known at run-time, and depends on the chosen language). And func(""%s"", a va_list argument); has the same problem, as the *real* type of arguments is not known at this site at compile time (it's known in some caller). Moreover, func(ER(ER_BLAH)); though possibly correct (if ER(ER_BLAH) has no '%' markers), will not compile (gcc says ""error: format not a string literal and no format arguments""). Consequences: 1) ATTRIBUTE_FORMAT is here added only to functions which in practice take ""string literal"" formats: ""my_error_reporter"" and ""print_admin_msg"". 2) it cannot be added to the other functions: my_error(), push_warning_printf(), Table_check_intact::report_error(), general_log_print(). To do a one-time check of functions listed in (2), the following ""static code analysis"" has been done: 1) replace my_error(ER_xxx, arguments for substitution in format) with the equivalent my_printf_error(ER_xxx,ER(ER_xxx), arguments for substitution in format), so that we have ER(ER_xxx) and the arguments *in the same call site* 2) add ATTRIBUTE_FORMAT to push_warning_printf(), Table_check_intact::report_error(), general_log_print() 3) replace ER(xxx) with the hard-coded English text found in errmsg.txt (like: ER(ER_UNKNOWN_ERROR) is replaced with ""Unknown error""), so that a call site has the format as string literal 4) this way, ATTRIBUTE_FORMAT can effectively do its job 5) compile, fix errors detected by ATTRIBUTE_FORMAT 6) revert steps 1-2-3. The present patch has no compiler error when submitted again to the static code analysis above. It cannot catch all problems though: see Field::set_warning(), in which a call to push_warning_printf() has a variable error (thus, not replacable by a string literal); I checked set_warning() calls by hand though. See also WL 5883 for one proposal to avoid such bugs from appearing again in the future. The issues fixed in the patch are: a) mismatch in types (like 'int' passed to '%ld') b) more arguments passed than specified in the format. This patch resolves mismatches by changing the type/number of arguments, not by changing error messages of sql/share/errmsg.txt. The latter would be wrong, per the following old rule: errmsg.txt must be as stable as possible; no insertions or deletions of messages, no changes of type or number of printf-like format specifiers, are allowed, as long as the change impacts a message already released in a GA version. If this rule is not followed: - Connectors, which use error message numbers, will be confused (by insertions/deletions of messages) - using errmsg.sys of MySQL 5.1.n with mysqld of MySQL 5.1.(n+1) could produce wrong messages or crash; such usage can easily happen if installing 5.1.(n+1) while /etc/my.cnf still has --language=/path/to/5.1.n/xxx; or if copying mysqld from 5.1.(n+1) into a 5.1.n installation. When fixing b), I have verified that the superfluous arguments were not used in the format in the first 5.1 GA (5.1.30 'bteam@astra04-20081114162938-z8mctjp6st27uobm'). Had they been used, then passing them today, even if the message doesn't use them anymore, would have been necessary, as explained above. "	25221cccd2dde986c91c1ad3bdca3ee2869ed2ac
----------------------------
Merge: 5d79bee 68e6a24 merging of experimentizing of SYS_VARS.RPL_INIT_SLAVE_FUNC due to  Bug#12535301 	56434ae9e17427fdcb04136e29e8520cc4f4a52f
----------------------------
Bug 12535301 - SYS_VARS.RPL_INIT_SLAVE_FUNC MISMATCHES IN DAILY-5.5 notifying PB2 the test fails through mysql-test/collections/default.experimental. 	68e6a24d1cb4c1c281f7f753b2e65ed1434c26b3
----------------------------
Bug 12535301 - SYS_VARS.RPL_INIT_SLAVE_FUNC MISMATCHES IN DAILY-5.5 reverting sys_vars.rpl_init_slave_func back to the regular suites. The test failure is specific to 5.5. 	90c5f35094d4099e89093c6a720eec0b01c13604
----------------------------
Bug#11766111 59150: PERFSCHEMA.SETUP_OBJECTS FAILS SPORADICALLY IN RELEASE BUILD Before this fix, some table that, according to performance_schema.setup_objects, should be instrumented, were in fact not instrumented by the performance schema. Changing ENABLED from 'YES' to 'NO' was working properly, but changing ENABLED from 'NO' to 'YES' failed to instrument tables in some cases. The root cause (found by analysis) is that get_table_share_v1() was returning NULL and giving up any instrumentation, making it impossible to instrument a table later. The fix is to always provide an instrumented PSI_table_share. This behavior is actually the original design intent, see comments in find_or_create_table_share(). This fix: 1) Moves the checks for the ENABLED and TIMED flags from get_table_share_v1() to open_table_v1() 2) Implements a cache in PFS_table_share to maintain: PFS_table_share::m_io_enabled as a flag derived from: table performance_schema.setup_objects, column ENABLED table setup_instrument, row wait/io/table/sql/handler, ENABLED column and likewise for similar flags. 3) Simplifies the implementation of table setup_instruments, and added code to maintain the PFS_table_share cached values. 4) Refresh the cache at every table open only, not at every table io or table lock operation, for performances. Part 1 fixes the bug found, while parts 2-4 are related performance optimizations. 	04fb4d6e0b7d676d5020e2f27a10d6df8cd14ebb
----------------------------
ndb - add a few lines at end of top level CMakeLists.txt to dump the contents of cmake's output and error(ie config.log) to stdout 	30862209b6ac4942fbf9fdf72d6d36d1688bf848
----------------------------
"ndb - check if the hostname from gethostname() and also ""localhost"" can be resolved before running the Nbd_getInAddr tests with them. "	5a0e34aea2b2fdd258f6bcd4ff81ec6430120be2
----------------------------
Fix autocommit delete by query 	d96ac7648a59f5713202dc6724b42ccf1ef6369a
----------------------------
Fix for Bug 12405804: The variable transaction_prealloc_size gots values up to 5GB in the default session root@localhost, which is also used in mtr for internal purposes. For that the variable will now set back to the default value. 	6658edd4045c44407ba9ed3df7fec34b8aeadbe2
----------------------------
bug#12535301 - SYS_VARS.RPL_INIT_SLAVE_FUNC MISMATCHES IN DAILY-5.5 setting sys_vars.rpl_init_slave_func to default.experimental. 	41376a81d5fd878f18f8a34bd0f88b9e8c8d07c4
----------------------------
"WL#4896 ""Performance Schema Net IO"" Fix PB2 crash: For client connections, set socket thread owner only after the socket has been relegated to a client thread. Otherwise, multiple new client sockets will share the listening thread as the thread owner, causing a race condition when writing to the events waits buffer. For the listening sockets, set the thread owner on the main thread and again when the socket is relegated to a listening thread. "	d8f026279efe866012ff153547cf36500c06033a
----------------------------
Addendum 3 for bug #BUG#11764517 : expand secure_file_priv to the real patch so that it can later be compared with patchs with expanded symlinks 	693fee5d561177e67223300015e5f16817c369e9
----------------------------
BUG#12407446: BUG#60988: TABLE MYSQL.SLAVE_MASTER_INFO HAS TYPO IN COLUMN NAME SSL_VERIFY_SERVERT_ Fixed typo. Additionally, added comments on each column for both tables, mysql.slave_relay_log_info and mysql.slave_master_info. 	ddfab0f9eb289dde2f4f34e732b0d413841a96ee
----------------------------
WL#5342 PERFORMANCE SCHEMA SETUP_OBJECTS, ENABLED column Added column ENABLED in table performance_schema.setup_objects. 	a46a1a1903030ee3e408685492f8f812f6e4ab54
----------------------------
Addendum to bug #11764517 : don't create links for --mem directory, move the --vardir instead. The new --secure-file-priv checks dereference any symlinks in the paths and compare the resolved paths. Thus the 5.0 test suite must do as the 5.1 and up and avoid using symlinks. 	10afe0993ed3f547b74fcc637b9553eeb3ab6992
----------------------------
ndb - add --no-defaults to 2 --exec's which would otherwise fail mysteriously if having non-default environment (found by having non standard environment by misstake) 	502b0f93e8dd76022c4eb156efd94e8e12e7f32f
----------------------------
Fix bug #11796673 address backward compatibility on index with large prefix (>=768). Table with such large prefix index will not be loaded into memory (for its metadata), unless innodb_force_recovery is on. rb://604 Approved by Marko 	ce2ed6197c42f4aedc1323e63603f5dabc8e0c67
----------------------------
"WL#5872 ""avoid using global heap memory to remember autoincrement values for statement-based binlog"". As long as WL3404 ""new binlog event Insert_id_list_event to store multiple auto_increment intervals"" is not implemented, Discrete_intervals_list needs to contain only the first interval, so it makes sense to store this interval as a member of Discrete_intervals_list, rather than allocating it on the global heap with new(). This is to save one new() per statement inserting into an auto-increment column, and is a sub-part of WL5774 ""Decrease number of malloc's for normal DML queries"". Even when WL3404 is implemented, it will still make sense to avoid new() for the first interval, as we expect one-interval lists to be common. Patch includes parts by Sven Sandberg. "	e48a77384049e5bc99fbdfcb11b79403f1c59363
----------------------------
"Bug #11759877 52223: TEST ""PLUGIN_DIR_BASIC"" DOES NOT SUPPORT RPM BUILD (TEST) DIRECTORY STRUC Make a qualified guess: if $basedir/lib does not exist but $basedir/lib64 does, then the latter is the proper value for $MYSQL_LIBDIR Tested on the RPMS of 5.5.12. "	04cc55406428f4e90bbbe72e7702dba4f4bb564a
----------------------------
Bug#11766631 (59780) - Move the client authentication_windows plugin into the server repository This patch adds client windows authentication plugin code to the client library libmysql (only on Windows platform). The plugin is compiled into the library and added to the list of built-in plugins. This way clients should be able to connect to a server which uses windows authentication plugin even as an SQL user which uses such authentication. Note: this makes the client library to depend on Secur32 Windows system library. When building clients, they must be linked against Secur32. Command mysql_config --libs correctly lists Secur32 as a required dependency. 	6d7aceeead15eeefe720a2cbb1fe8f955ceb40fd
----------------------------
Bug#11766631 (59780) - Move the client authentication_windows plugin into the server repository This patch adds client windows authentication plugin code to the client library libmysql (only on Windows platform). The plugin is compiled into the library and added to the list of built-in plugins. This way clients should be able to connect to a server which uses windows authentication plugin even as an SQL user which uses such authentication. Note: this makes the client library to depend on Secur32 Windows system library. When building clients, they must be linked against Secur32. Command mysql_config --libs correctly lists Secur32 as a required dependency. 	4cfc0e593123a14490d13b17e6c2d0a4ea2d0729
----------------------------
Bug #11764517: 57359: POSSIBLE TO CIRCUMVENT SECURE_FILE_PRIV USING '..' ON WINDOWS Backport of the fix to 5.0 (to be null-merged to 5.1). Moved the test into the main test suite. Made mysql-test-run.pl to not use symlinks for sdtdata as the symlinks are now properly recognized by secure_file_priv. Made sure the paths in load_file(), LOAD DATA and SELECT .. INTO OUTFILE that are checked against secure_file_priv in a correct way similarly to 5.1 by the extended is_secure_file_path() backport before the comparison. Added an extensive test with all the variants of upper/lower case, slash/backslash and case sensitivity. Added few comments to the code. 	4c5dfc00f7a2ea3cf9475455e2749a96bfc38344
----------------------------
Remove some debug code that was added in MySQL 3.23.44. Until MySQL 3.23.44, there was an incorrect optimization in the transaction commit. The update_undo log would be discarded at commit if it comprised only one page, it did not delete-mark anything, and there was only one read view in trx_sys->view_list. (It looks like that the read view could have belonged to a different transaction, if the committing transaction used consistent reads.) Ever since then, update_undo logs can only be discarded by the purge. trx_purge_sys_print(): Remove. trx_undo_prev_version_build(): On corruption, never print out anything and return DB_ERROR, but let an assertion fail instead. These printouts have apparently never been triggered in the 10 years of their existence. The only references to them were found in corrupted databases or when attempting to rescue a corrupted database. In such situations, the assertion failures can be avoided by setting innodb_force_recovery=5. rb:652 approved by Sunny Bains 	93c00968b2b00e7389b9083f44f1535c7881303b
----------------------------
Fixed build break for cmake -DWITH_PERFSCHEMA_STORAGE_ENGINE=0 . 	8533b653668f68824443bfde3e00b86da890aa31
----------------------------
"WL#4896 ""Performance Schema Net IO"" - Isolate socket instrumentation with #ifdef HAVE_PSI_SOCKET_INTERFACE - Add mysql_socket_register() "	5e875ff193b6bf6e6a3d53f0f11ead27458fe407
----------------------------
"WL#4896 ""Performance Schema Net IO"" - Removed OBJECT_NAME column from SOCKET_SUMMARY_BY_INSTANCE "	b2fff8b21ccd6d29e96869a2afcc19017b1c8630
----------------------------
rpl_ndb - rename rpl_ndb_extraCol to rpl_ndb_extra_col_slave - only run with binlog-format=row 	d17e5593a1cdc3e297d6fbf6f8b2d89f96e19084
----------------------------
rpl_ndb - only run rpl_ndb_insert_ignore with binlog-format=row since included test does not support another format with engine = NDB - remove assignement of $engine_type2 which is not used by included .test 	82ddcac10c76af3ac977cd91e18745f3a279db18
----------------------------
Bug#11889186  60503: CRASH IN MAKE_DATE_TIME WITH DATE_FORMAT / STR_TO_DATE COMBINATION calc_daynr() function returns negative result if malformed date with zero year and month is used. Attempt to calculate week day on negative value leads to crash. The fix is return NULL for 'W', 'a', 'w' specifiers if zero year and month is used. Additional fix for calc_daynr(): --added assertion that result can not be negative --return 0 if zero year and month is used 	735bab72c51e0ff4ccf5fb688826e87931ee8fe2
----------------------------
ndb - remove cluster specific hack in mtr.pl which alloweed running with --binlog-format specified although no binloging on a specific mysqld 	80743980521e135b506cf6516bd49e4b15da8c19
----------------------------
rpl_ndb - remove combinations file for rpl_ndb, if a test need to test different binlog-formats it can switch to that mode in the test 	1334b49b6443d206d0c261cc7eae7cca7a4ceafe
----------------------------
Bug#60309 -  Bug#12356829: MYSQL 5.5.9 FOR MAC OSX HAS BUG WITH FOREIGN KEY CONSTRAINTS The innoDB global variable srv_lower_case_table_names is set to the value of lower_case_table_names declared in mysqld.h server in ha_innodb.cc.  Since this variable can change at runtime, it is reset for each handler call to ::create, ::open, ::rename_table & ::delete_table. But it is possible for tables to be implicitly opened before an explicit handler call is made when an engine is first started or restarted.  I was able to reproduce that with the testcase in this patch on a version of InnoDB from 2 weeks ago.  It seemed like the change buffer entries for the secondary key was getting put into pages after the restart.  (But I am not sure, I did not write down the call stack while it was reproducing.)  In the current code, the implicit open, which is actually a call to dict_load_foreigns(), does not occur with this testcase. The change is to replace srv_lower_case_table_names by an interface function in innodb.cc that retrieves the server global variable when it is needed. 	6593ca560b9867d185743d2b522672c8f973c139
----------------------------
rpl_ndb - remove obsolete master-* config options which is no longer supported in 5.5 	9aaa841fb4f5dcde8ad3c06c8b72ebbd142e554a
----------------------------
rpl_ndb - convert rpl_ndb_break_3_chain to use the new rpl scripts - remove unused config options from .cnf file to simplify it further - update .result file to new rpl script output 	4a87cc7f9e0a310e5d8a4b67d419da7a7a850f24
----------------------------
rpl_ndb - Configure slave mysqld without innodb, and set myisam as default storage engine(since innodb will be default otherwise starting from 5.5) 	982af3229c6fcf66bd048d9a8f1ae425db560d6a
----------------------------
rpl_ndb - --default-character-set and --default-collation not supported anymore in 5.5, use the new names for same options i.e --character-set-server and --collation-server 	6dc0307fc8e325dc00b6bb496a8871861ec9aefd
----------------------------
Merge: 0f7a029 d3ef23e autocommit 5.5->trunk 	68e57356568a5a7401c2fbcc4d43997a20b65090
----------------------------
Merge: 66c4854 e7079a3 autocommit 5.1->5.5 	d3ef23e9d86a4bfb83f25d5f19a6cdddcba55620
----------------------------
rpl_ndb - rpl_ndb_typeconv* requires binlog_format row - refactor rpl_ndb_typeconv* to use an include file which shows only those conversions with unexpected results, thus eliminating the need to record a new result file when the source .test file from extra/rpl_tests changes. 	e3854c7b43b78b0862f98babf551f804a1ca2683
----------------------------
rpl_ndb - fix problem with testcase which didn't set which storage_engine to use for slave until _after_ slave thread had been started nor did it set it global. This caused the slave to run with the default setting for storage_engine and thus creating the tables on slave with engine=MyISAM in 5.1 and enging=InnoDB in 5.5. - updated .result file 	0bd9424483e22c8ae6da8f33d3f236695158ff9a
----------------------------
Remove libevent/config.h and libevent/event-config.h, and wrap those defines in our cmake generated config.h 	9246e0bf076fd7fac06203bf2209fefd754d8618
----------------------------
"WL#4896 ""Performance Schema Net IO"" - Fixed socket version bug - Windows: Replaced inet_ntop() with getnameinfo() - Use #define HAVE_IPV6 - Removed redundant includes of arpa/inet.h and winsock2.h - Streamlined aggregate() methods in pfs_stat.h - Deleted unused set() methods in table_helper.h "	833610777a29e9c79152c3134abc85a376586938
----------------------------
"WL#4896 ""Performance Schema Net IO"" - Updated unit test to handle socket with no thread owner "	7f25af77dcb7b3008062cfa2d46afdc88ca330da
----------------------------
Bug#12370950 TABLE_IO_WAITS_SUMMARY_BY_INDEX_USAGE AGGREGATES NON-INSERT DML WRONGLY Before this fix, table io for UPDATE and DELETE of a row was systematically counted, in table performance_schema.table_io_waits_summary_by_index_usage, as an operation using no index. With this fix, when an index was used to execute an UPDATE or DELETE statement, the table io for the UPDATE and DELETE are counted against the index used. 	29512674575cb9668b22bb07e123af5c009c0f96
----------------------------
Merge: ad741a1 f8a3dcc autocommit 5.5 -> trunk 	51450e670652fcb3689263c677f2ca23b4ac4460
----------------------------
Merge: 4520d79 410ee93 autocommit 5.1 -> 5.5 	f8a3dcc42e1631d358988ef72648a08466c642de
----------------------------
"Bug #58758 Ndb Internal : Defaults for enum type config values not supported - Make ConfigInfo::getDefaultString retrive the default value as string by double  storing the default value as string with the key ""DefaultString"" "	8c9e8b3ab157cbb06655f7a1dc0d76e60df9f9e7
----------------------------
Bug #58758 Ndb Internal : Defaults for enum type config values not supported - Convert the default value given as string to Uint32 before storing it internally. - Make Arbitration and DefaultOperationRedoProblemAction use a string as default value instead of int as before. - Fix DBUG crash when retrieving the internal value for ENUM as string instead of int 	50fc93e8f44afe843052e32db0e7ba582d3a34ec
----------------------------
"ndb - bug#59213 / bug#11766167 Add better support for nodes configured with Nodegroup=65536 (i.e added to config to later be added) Add new config variable StartNoNodegroupTimeout(default=15s) which determines to to wait for node wo/ nodegroup, before treating them as if they had been added to ""nowait-nodes"" E.g 1) initial start will wait this amout of time, before doing a start Note: in an initial start, the values from config.ini is used to determine that nodes have no nodegroup 2) system restart will wait this amout of time, before continueing with other timeouts (such as StartPartial/StartPartitioned-timeout) Note: in an system restart, the values read from disk is used to determine that nodes have nodegroup (since they can have been added to a nodegroup after initial start) "	bdb45825db6e5991b1bc2368c6ebd88d2d8e2e8e
----------------------------
"rpl_ndb - remove usage of include/have_ndb_extra.inc from rpl_ndb_relayrotate.test it's a quick test -  update .result file to new rpl scripts format - Use new style format for mysql server options, i.e remove the ""-O relay_log_size XXX"" from -slave.opt "	bfbd1bc542dbd258df0ff7ed2b8b0b4e9ccf81c8
----------------------------
ndb - fix include/not_ndb_default.inc to use @@storage_engine instead of @table_type which is no longer supported 	ef343e8b4ce9d32ed933540d3679279361be4825
----------------------------
Bug #12351213 MTR --VS-CONFIG DOES NOT WORK LIKE MTR_VS_CONFIG Fix for --vs-config applied Find.pm incorrectly tested an unitialized local variable instead of the global, corrected. Find.pm is also wrong in 5.5: uses a non-existent global variable. Fix when merging up. 	a23276c5c11dc1f7500c3e71de0e196c211b432e
----------------------------
Bug #12360501 MTR --GCOV DOES NOT WORK WITH CMAKE BUILDS Changed to use $bindir instead of $basedir Simplified search for files: find all *.gcno Also, .msg and .err files had been mixed up 	404504bbbd32bbc5bfbed646c334f94ead8d4b51
----------------------------
Merge: cb487dc 2705490 autocommit 5.5 -> trunk 	51f9d291f3a7709c8044142453a641324911aea0
----------------------------
Merge: 8ded325 c65d5b7 autocommit 5.1 -> 5.5 	2705490f685e2a0da617601e8c4ada68261633df
----------------------------
"WL#4896 ""Performance Schema Net IO"" Updates per code review: - Support singleton (global) socket instances - Optimize comparison of owning thread - Generic instance visitor, suitable for any class "	fb1f209167eacd396baf1f13380df0a2fa734277
----------------------------
Merge: d560caf 6b3c702 autocommit 5.5 -> trunk 	d340ab474d47b8de0238d459066c4ef2bd0b36ca
----------------------------
Merge: 9e3699c 58cb12c autocommit 5.1->5.5 	6b3c702f612b53b76026f00d3718121c01d0345d
----------------------------
Bug#12330248 - EXTEND NDBINFO.NODES TO SHOW THE CONFIG GENERATION NUMBER OF THE DATA NODES 	4c89fc2d8ad43cf14923cac96da74d33c57d49a6
----------------------------
Bug 12348462 - ALLOW MULTIPLE SYNC WAIT ARRAYS Once threads start to queue on any InnoDB mutex/rw_lock the single OS mutex in the single sync wait array instance becomes a big bottleneck. New config variable: --innodb-sync-array-size : default is 32 max is 1024. We loop over all the arrays only when we need to print out diagnostic information or when we need to handle lost wakeup. This is an interim solution until we get rid of the sync0arr.c code completely. rb://635 Approved by Marko 	1057917b5dcc115a0059bc12d7f977d557563722
----------------------------
Bug #11760042 - 52409: Assertion failure: long semaphore wait In ha_innobase::create(), we check some things while holding an exclusive lock on the data dictionary. Defer the locking and the creation of transactions until after the checks have passed. The THDVAR could hang due to a mutex wait (see Bug #11750569 - 41163: deadlock in mysqld: LOCK_global_system_variables and LOCK_open), and we want to avoid waiting while holding InnoDB mutexes. innobase_index_name_is_reserved(): Replace the parameter trx_t with THD, so that the test can be performed before starting an InnoDB transaction. We only needed trx->mysql_thd. ha_innobase::create(): Create transaction and lock the data dictionary only after passing the basic tests. create_table_def(): Move the IS_MAGIC_TABLE_AND_USER_DENIED_ACCESS check to ha_innobase::create(). Assign to srv_lower_case_table_names while holding dict_sys->mutex. ha_innobase::delete_table(), ha_innobase::rename_table(), innobase_rename_table(): Assign srv_lower_case_table_names as late as possible. Here, the variable is not necessarily protected by dict_sys->mutex. ha_innobase::add_index(): Invoke innobase_index_name_is_reserved() and innobase_check_index_keys() before allocating anything. rb:618 approved by Jimmy Yang 	d0b1a6466c431046d1915c2c065d3d5d4ad011e2
----------------------------
rename the config script innodb_memcached_config.sql 	dbd5c6dd1d92e83f0cb3cf815029544444cfe693
----------------------------
"Bug#11926811 / Bug#60625 Illegal mix of collations Problem: comparison of a DATETIME sp variable and NOW() led to Illegal mix of collations error when character_set_connection=utf8. Introduced by ""WL#2649 Number-to-string conversions"". Error happened in Arg_comparator::set_compare_func(), because the first argument was errouneously converted to utf8, while the second argument was not. Fix: separate agg_arg_charsets_for_comparison() into two functions: - agg_arg_charsets_for_comparison() - for pure comparison, when we don't need to return any string result and therefore don't need to convert arguments to @@character_set_connection: SELECT a = b; - agg_arg_charsets_for_string_results_with_comparison() - when we need to return a string result, but we also need to do comparison internally: SELECT REPLACE(a,b,c) If all arguments are numbers: SELECT REPLACE(123,2,3) -> 133 we convert arguments to @@character_set_connection. @ mysql-test/include/ctype_numconv.inc @ mysql-test/r/ctype_binary.result @ mysql-test/r/ctype_cp1251.result @ mysql-test/r/ctype_latin1.result @ mysql-test/r/ctype_ucs.result @ mysql-test/r/ctype_utf8.result Adding tests @ sql/item.cc @ sql/item.h @ sql/item_func.cc @ sql/item_func.h @ sql/item_strfunc.cc Introducing and using new function agg_item_charsets_for_string_result_with_comparison() and its Item_func wrapper agg_arg_charsets_for_string_result_with_comparison(). "	ece1996b5afeb53b9266719be481656d7c1c0409
----------------------------
ndb - add mising rpl_end.inc to backported rpl_server_id_ignore test 	ce7662a3641d35cc04111708b073a263e2172297
----------------------------
A patch for Bug#12325375: THE SERVER ON WINXP DOES NOT ALLOW CONNECTIONS IF NO DNS-SERVER AVAILABLE. The thing is that on Windows XP getnameinfo() returns WSANO_DATA when hostname-lookup is not available. The problem was that this error code was treated as serious error and the client connection got rejected. The fix is to treat all errors from getnameinfo() as not ciritical, but add IP-address to the host cache only for EAI_NONAME (or WSANO_DATA). 	6a293922899ed406d30b43d9018503f2bab2c5b7
----------------------------
Pass the user configure string also to default memcached engine. And a few minor cleanups for compilation warnings. 	235ae937defbda568da0e8846a3b22a15f71e0a6
----------------------------
Bug #11766513 - 59641: Prepared XA transaction in system after hard crash causes future shutdown hang InnoDB would hang on shutdown if any XA transactions exist in the system in the PREPARED state. This has been masked by the fact that MySQL would roll back any PREPARED transaction on shutdown, in the spirit of Bug #12161 Xa recovery and client disconnection. [mysql-test-run] do_shutdown_server: Interpret --shutdown_server 0 as a request to kill the server immediately without initiating a shutdown procedure. xid_cache_insert(): Initialize XID_STATE::rm_error in order to avoid a bogus error message on XA ROLLBACK of a recovered PREPARED transaction. innobase_commit_by_xid(), innobase_rollback_by_xid(): Free the InnoDB transaction object after rolling back a PREPARED transaction. trx_get_trx_by_xid(): Only consider transactions whose trx->is_prepared flag is set. The MySQL layer seems to prevent attempts to roll back connected transactions that are in the PREPARED state from another connection, but it is better to play it safe. The is_prepared flag was introduced in the InnoDB Plugin. trx_n_prepared: A new counter, counting the number of InnoDB transactions in the PREPARED state. logs_empty_and_mark_files_at_shutdown(): On shutdown, allow trx_n_prepared transactions to exist in the system. trx_undo_free_prepared(), trx_free_prepared(): New functions, to free the memory objects of PREPARED transactions on shutdown. This is not needed in the built-in InnoDB, because it would collect all allocated memory on shutdown. The InnoDB Plugin needs this because of innodb_use_sys_malloc. trx_sys_close(): Invoke trx_free_prepared() on all remaining transactions. 	1a0dde92066236436de80d3a20978bf3baffc9e9
----------------------------
"Support all memcached configure options through InnoDB configure variable ""daemon_memcached-option"". So user can specify their original command line configure options through a MySQL boot time option, for example ""mysqld ... --loose-daemon_memcached-option=""-p11222 -m 2048 -u root"", which tells the memcached to listen on port 11222, with 2048MB memory configured etc. "	489525037acc9162eaeb5448d2003c7ba5e106cf
----------------------------
ndb - warning in ndb_socket 	34c635f72e1cb5d83a21f167b437767cb4304163
----------------------------
ndb - setup ndb binlog thread to always use binlog_format=row - patch from vanilla 5.5 	c6ef498cb5930de96c606900aad45d78024434b2
----------------------------
BUG#12324076 - RQG_RPL_SEMISYNC TEST FAILURE, SLAVE CRASHES WITH SEGMENTATION FAULT The patch for BUG#11765887 BUG#58897 verifies if the configuration is not crash-safe and prints out a warning message to alert users on that. The routine that keeps track of warnings and errors on the slave was modified in BUG#11748510 - BUG#36524 and after that report_function may be null if global_system_variables.log_warnings is not set. However, report_function is used without checking its value thus causing a crash. Fixed the problem, by checking if report_function is null before using it. 	0d6f33e302bb312f0ff3e2ddc6cefc96dd2faa39
----------------------------
Bug 12323643 - CLEAN UP THE INNODB THREAD SHUTDOWN AND ASSERTIONS (WL#5136) On shutdown, do not exit threads in os_event_wait(). This method of exiting was only used by the I/O handler threads. Exit them on a higher level. os_event_wait_low(), os_event_wait_time_low(): Do not exit on shutdown. os_thread_exit(), ut_dbg_assertion_failed(), ut_print_timestamp(): Add attribute cold, so that GCC knows that these functions are rarely invoked and can be optimized for size. os_aio_linux_collect(): Return on shutdown. os_aio_linux_handle(), os_aio_simulated_handle(), os_aio_windows_handle(): Set *message1 = *message2 = NULL and return TRUE on shutdown. fil_aio_wait(): Return on shutdown. logs_empty_and_mark_files_at_shutdown(): Even in very fast shutdown (innodb_fast_shutdown=2), allow the background threads to exit, but skip the flushing and log checkpointing. innobase_shutdown_for_mysql(): Always wait for all the threads to exit. rb:633 approved by Sunny Bains 	5530926e720dd0068e0e408edb7375a512bc4cd7
----------------------------
"This is to support multi-column get/store functionality. The value will be separated by a ""separator"" supplied by user in the configure table. The ""separator"" will be extract out before storing data in database and append back when ""get"" command is issued. "	376848dd27200c7e2ccea4dd3c8d6fd8f0316ce8
----------------------------
"Allow the InnoDB Memcache to switch between the InnoDB database store and/or default memcached cache store. And users can configure command ""get"" (search), ""set"" (store), ""delete"" and ""flush"" with one of 3 three options: cache-only, innodb-only and caching (both cache and DB store). The name for above 3 options are made such to be compatible with NDB implementations. "	af880423254dbc53d960f942856fe956815dc132
----------------------------
BUG#11766392 - 59495: RPL.RPL_READ_OLD_RELAY_LOG_INFO FAILS INTERMITTENTLY IN PB2 rpl_read_old_relay_log_info has been failed intermittently, apparently, due to some environment problem in PB2. To track the problem, we have augmented the code to print out additional information if there is an issue while checking the availability of replication's repositories. 	4334ef25daab6d006243745de72fd7221df64589
----------------------------
General code cleanup. Rename functions, factor out the prefetch init to a separate function, fold the separate mallocs into one. This is part of making the pre-fetch configurable via the optimizer in the future. Approved by Marko rb://641 	99904fb0eb2b2c36e78ddfb503b3b17a1ad85bc6
----------------------------
mysql-5.6-labs-innodb-memcached: change bzr config file. 	1f8539c66663dd66358e7dd452088087b98acd87
----------------------------
"WL#4896 ""Performance Schema Net IO"" - Implemented deferred aggregation for sockets - Updated doxygen documentation - Fixed regression tests "	dcc957e11fdf754218be4343188b1d2cf7735a53
----------------------------
ndb - implement proposed config changes for 7.2.0 	079ed04800b8774a078641fc59b8e83ef9fe325f
----------------------------
Bug #11764778: server feature request - expose ssl certificate details in show global st There was no easy way to get the expiration dates of the server's certificate. Implemented two session status variables (Ssl_server_not_before and Ssl_server_not_after) with the same scope as e.g. Ssl_verify_depth to return the two dates in a format similar to OpenSSL's ASN1_TIME_print. Since yaSSL doesn't preserve the parsed server certificate beyond reading it, the diff extends yaSSL to preserve it and return it through SSL_get_certificate().  Also fixed the storage of the certificate expiration dates to have the ASN1_TIME subtype. Implemented an yaSSL specific extension function yaSSL_ASN1_TIME_to_string() to return the string representation of the date in an ASN1_TIME  in a format similar to OpenSSL's format. Created a wrapper in MySQL to call either ASN1_TIME_print() or yaSSL_ASN1_TIME_to_string() depending on the library type. Did some type cleanups of some of the internal yaSSL functions. Test case added. 	18ce7f96b21c2be1beb38e6835567e1780f2a6f5
----------------------------
ndb - Run ndb_binlog suite with binlog-format=ROW by default 	21bf07ac49ceb21f59b37d571ed0ec1b4b75130a
----------------------------
"ndb - fix .result file - each statement is binlogged within it's own BEGIN/COMMIT block in binlog_format=STATEMENT mode - New warning printed when ""unsafe statements"" are binlogged. For example when updating transactional and nontranscational tables. "	e214ae90574961b6647a7a8beb56b22297113c9b
----------------------------
ndb - bug#11769048 - Remove hard-coded limit on 32 tux/tup scan per fragment, and instead add config variable MaxParallelScansPerFragment 	464f73ca2ee3bf061fc0e36aa21e8b95ab558a1f
----------------------------
"Store the '\0'-terminated query in row->trx_query This problem was introduced in marko.makela@oracle.com-20100514130815-ym7j7cfu88ro6km4 and is probably the reason for the following valgrind warning: from http://bugs.mysql.com/52691 , http://bugs.mysql.com/file.php?id=16880 : Version: '5.6.3-m5-valgrind-max-debug'  socket: '/tmp/mysql.sock'  port: 3306  Source distribution ==14947== Thread 18: ==14947== Conditional jump or move depends on uninitialised value(s) ==14947==    at 0x4A06318: __GI_strlen (mc_replace_strmem.c:284) ==14947==    by 0x9F3D7A: fill_innodb_trx_from_cache(trx_i_s_cache_struct*, THD*, TABLE*) (i_s.cc:591) ==14947==    by 0x9F4D7D: trx_i_s_common_fill_table(THD*, TABLE_LIST*, Item*) (i_s.cc:1238) ==14947==    by 0x7689F3: get_schema_tables_result(JOIN*, enum_schema_table_state) (sql_show.cc:6745) ==14947==    by 0x715A75: JOIN::exec() (sql_select.cc:2861) ==14947==    by 0x7185BD: mysql_select(THD*, Item***, TABLE_LIST*, unsigned int, List<Item>&, Item*, unsigned int, st_order*, st_order*, Item*, st_order*, unsigned long long, select_result*, st_select_lex_unit*, st_select_lex*) (sql_select.cc:3609) ==14947==    by 0x70E823: handle_select(THD*, LEX*, select_result*, unsigned long) (sql_select.cc:319) ==14947==    by 0x6F2305: execute_sqlcom_select(THD*, TABLE_LIST*) (sql_parse.cc:4557) ==14947==    by 0x6EAED4: mysql_execute_command(THD*) (sql_parse.cc:2135) ==14947==    by 0x6F44C9: mysql_parse(THD*, char*, unsigned int, Parser_state*) (sql_parse.cc:5597) ==14947==    by 0x6E864B: dispatch_command(enum_server_command, THD*, char*, unsigned int) (sql_parse.cc:1093) ==14947==    by 0x6E785E: do_command(THD*) (sql_parse.cc:815) ==14947==    by 0x6C18DD: do_handle_one_connection(THD*) (sql_connect.cc:771) ==14947==    by 0x6C146E: handle_one_connection (sql_connect.cc:707) ==14947==    by 0x30E1807760: start_thread (pthread_create.c:301) ==14947==    by 0x35EA670F: ??? ==14947==  Uninitialised value was created by a heap allocation ==14947==    at 0x4A0515D: malloc (vg_replace_malloc.c:195) ==14947==    by 0xB4B948: mem_area_alloc (mem0pool.c:385) ==14947==    by 0xB4A27C: mem_heap_create_block (mem0mem.c:333) ==14947==    by 0xB4A530: mem_heap_add_block (mem0mem.c:446) ==14947==    by 0xB0D2A4: mem_heap_alloc (mem0mem.ic:186) ==14947==    by 0xB0D9C2: ha_storage_put_memlim (ha0storage.c:118) ==14947==    by 0xA479D8: fill_trx_row (trx0i_s.c:521) ==14947==    by 0xA490E9: fetch_data_into_cache (trx0i_s.c:1319) ==14947==    by 0xA491BA: trx_i_s_possibly_fetch_data_into_cache (trx0i_s.c:1352) ==14947==    by 0x9F4CE7: trx_i_s_common_fill_table(THD*, TABLE_LIST*, Item*) (i_s.cc:1221) ==14947==    by 0x7689F3: get_schema_tables_result(JOIN*, enum_schema_table_state) (sql_show.cc:6745) ==14947==    by 0x715A75: JOIN::exec() (sql_select.cc:2861) ==14947==    by 0x7185BD: mysql_select(THD*, Item***, TABLE_LIST*, unsigned int, List<Item>&, Item*, unsigned int, st_order*, st_order*, Item*, st_order*, unsigned long long, select_result*, st_select_lex_unit*, st_select_lex*) (sql_select.cc:3609) ==14947==    by 0x70E823: handle_select(THD*, LEX*, select_result*, unsigned long) (sql_select.cc:319) ==14947==    by 0x6F2305: execute_sqlcom_select(THD*, TABLE_LIST*) (sql_parse.cc:4557) ==14947==    by 0x6EAED4: mysql_execute_command(THD*) (sql_parse.cc:2135) ==14947==    by 0x6F44C9: mysql_parse(THD*, char*, unsigned int, Parser_state*) (sql_parse.cc:5597) ==14947==    by 0x6E864B: dispatch_command(enum_server_command, THD*, char*, unsigned int) (sql_parse.cc:1093) ==14947==    by 0x6E785E: do_command(THD*) (sql_parse.cc:815) ==14947==    by 0x6C18DD: do_handle_one_connection(THD*) (sql_connect.cc:771) ==14947==    by 0x6C146E: handle_one_connection (sql_connect.cc:707) ==14947==    by 0x30E1807760: start_thread (pthread_create.c:301) ==14947==    by 0x35EA670F: ??? (gdb) bt #0  0x0000000004a06318 in _vgrZU_libcZdsoZa___GI_strlen (str=0x3026bfa0 ""insert into `blobtest` set `data`='pkefxxpkalpabzgrczlxefkreqljeqbvzrcnhvhsjsfnvxzjsltfuincffigdkmhvvcmnseluzgbtedrfmxvnrdmzesbinjgwvharkpgjplrlnqudfidbqwgbykupycxzyikzqincnsjrxgncqzlgyqwjdbjulztgsffxpjgymsnntdibvklwqylmwhsmdskmllxuwafabdjnwlyofknwuixiyrgnplmerfdewgizkdhznitesfqepsqbbwkdepkmjoseyxjofmmjaqdipwopfrwidmhqbtovdslvayxcnpewzhppeetblccppniamezibuoinvlxkafpcmozawtplfpepxwlwhymsuraezcwvjqzwogsozodlsfzjiyrcaljjhqwdrcjawvelhefzzaexvcbyorlcyupqwgjuamiqpiputtndjwcsuyzdfhuxswuowhrzdvriwrxqmcqthvzzzvivbabbnhdbtcfdtgssvmirrcddnytnctcvqplwytxxzxelldhwahalzxvgynaiwjyezhxqhlsqudngekocfvlbqprxqhyhwbaomgqiwkpfguohuvlnhtrsszgacxhhzeppyqwfwabiqzgyzkperiidyunrykopysvlcxwhrcboetjltawdjergalsfvaxncmzoznryumrjmncvhvxqvqhhbznnifkguuiffmlrbmgwtzvnuwlaguixqadkupfhasbbxnwkrvsfhrqanfmvjtzfqodtutkjlxfcogtsjywrdgmzgszjtsmimaelsveayqrwviqwwefeziuaqsqpauxpnzhaxjtkdfvvodniwezskbxfxszyniyzkzxngcfwgjlyrlskmrzxqnptwlilsxybuguafxxkvryyjrnkhhcmxuusitaflaiuxjhyfnzkahlgmaszujqmfdhyppdnpweqanmvzgjfyzjolbmprhnuuxextcaxzicfvsuochprmlf""...) at mc_replace_strmem.c:284 #1  0x00000000009f3d7b in fill_innodb_trx_from_cache (cache=0x1462440, thd=0x2a495000, table=0x2a422500) at /home/sbester/build/bzr/mysql-trunk/storage/innobase/handler/i_s.cc:591 #2  0x00000000009f4d7e in trx_i_s_common_fill_table (thd=0x2a495000, tables=0x2a4c3ec0) at /home/sbester/build/bzr/mysql-trunk/storage/innobase/handler/i_s.cc:1238 #3  0x00000000007689f4 in get_schema_tables_result (join=0x30f90c40, executed_place=PROCESSED_BY_JOIN_EXEC) at /home/sbester/build/bzr/mysql-trunk/sql/sql_show.cc:6745 #4  0x0000000000715a76 in JOIN::exec (this=0x30f90c40) at /home/sbester/build/bzr/mysql-trunk/sql/sql_select.cc:2861 #5  0x00000000007185be in mysql_select (thd=0x2a495000, rref_pointer_array=0x2a497590, tables=0x2a4c3ec0, wild_num=1, fields=..., conds=0x0, og_num=0, order=0x0, group=0x0, having=0x0, proc_param=0x0, select_options=2684619520, result=0x30319720, unit=0x2a496d28, select_lex=0x2a497378) at /home/sbester/build/bzr/mysql-trunk/sql/sql_select.cc:3609 #6  0x000000000070e824 in handle_select (thd=0x2a495000, lex=0x2a496c78, result=0x30319720, setup_tables_done_option=0) at /home/sbester/build/bzr/mysql-trunk/sql/sql_select.cc:319 #7  0x00000000006f2306 in execute_sqlcom_select (thd=0x2a495000, all_tables=0x2a4c3ec0) at /home/sbester/build/bzr/mysql-trunk/sql/sql_parse.cc:4557 #8  0x00000000006eaed5 in mysql_execute_command (thd=0x2a495000) at /home/sbester/build/bzr/mysql-trunk/sql/sql_parse.cc:2135 #9  0x00000000006f44ca in mysql_parse (thd=0x2a495000, rawbuf=0x30d80060 ""select * from innodb_trx"", length=24, parser_state=0x35ea5540) at /home/sbester/build/bzr/mysql-trunk/sql/sql_parse.cc:5597 #10 0x00000000006e864c in dispatch_command (command=COM_QUERY, thd=0x2a495000, packet=0x30bb4e31 ""select * from innodb_trx"", packet_length=24) at /home/sbester/build/bzr/mysql-trunk/sql/sql_parse.cc:1093 #11 0x00000000006e785f in do_command (thd=0x2a495000) at /home/sbester/build/bzr/mysql-trunk/sql/sql_parse.cc:815 #12 0x00000000006c18de in do_handle_one_connection (thd_arg=0x2a495000) at /home/sbester/build/bzr/mysql-trunk/sql/sql_connect.cc:771 #13 0x00000000006c146f in handle_one_connection (arg=0x2a495000) at /home/sbester/build/bzr/mysql-trunk/sql/sql_connect.cc:707 #14 0x00000030e1807761 in start_thread (arg=0x35ea6710) at pthread_create.c:301 #15 0x00000030e14e14ed in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:115 (gdb) frame 1 #1  0x00000000009f3d7b in fill_innodb_trx_from_cache (cache=0x1462440, thd=0x2a495000, table=0x2a422500) at /home/sbester/build/bzr/mysql-trunk/storage/innobase/handler/i_s.cc:591 591                                     row->trx_query_cs); (gdb) list 586                     if (row->trx_query) { 587                             /* store will do appropriate character set 588                             conversion check */ 589                             fields[IDX_TRX_QUERY]->store( 590                                     row->trx_query, strlen(row->trx_query), 591                                     row->trx_query_cs); 592                             fields[IDX_TRX_QUERY]->set_notnull(); 593                     } else { 594                             fields[IDX_TRX_QUERY]->set_null(); 595                     } "	764871292ed6dcf86875ac20408c132bf2bba4cf
----------------------------
BUG#11766427, BUG#59539: Filter by server id in mysqlbinlog fails Problem: mysqlbinlog --server-id may filter out Format_description_log_events. If mysqlbinlog does not process the Format_description_log_event, then mysqlbinlog cannot read the rest of the binary log correctly. This can have the effect that mysqlbinlog crashes, generates an error, or generates output that causes mysqld to crash, generate an error, or corrupt data. Fix: Never filter out Format_description_log_events. Also, never filter out Rotate_log_events. 	257e39aa44a9d035575846ad4f3e3a0fbeff0667
----------------------------
Bug #11766769: 59959: SMALL VALUES OF --MAX-ALLOWED-PACKET ARE NOT BEING HONORED max_allowed_packet works in conjunction with net_buffer_length. max_allowed_packet is an upper bound of net_buffer_length. So it doesn't make sense to set the upper limit lower than the value. Added a warning (using ER_UNKNOWN_ERRROR and a specific message) when this is done (in the log at startup and when setting either max_allowed_packet or the net_buffer_length variables) Added a test case. Fixed several tests that broke the above rule. 	c7b83484b5d21db737438711af83030a1bcf727f
----------------------------
BUG#11898467 - SERVER CRASHES ON SELECT HEX(WEIGHT_STRING(STR AS [CHAR|BINARY](N))) IF N IS BIG Problem: Item_func_weight_string() could allocate unlimited amount of memory, which led to server crash. Fix: honor max_allowed_packet in Item_func_weight_string::val_str() @ mysql-test/r/func_weight_string.result @ mysql-test/t/func_weight_string.test Adding tests @ sql/item_strfunc.cc Don't return results longer than max_allowed_packet 	6303b7c32986cc01b03170a6194f2ccf38a058d1
----------------------------
BUG#11765887 BUG#58897 Rpl_info_table::do_is_transactional causes too much overhead After WL#2775, Slave's information,i.e. IO Thread and SQL Thread's information, can be stored into different types of repositories. The current implementation provides two repositories, i.e. FILE or TABLE, and any type of engine can be used. However, only transactional engines, such as Innodb, can provide a crash-safe behavior in the sense that a slave can continue operating after a crash without requiring any manual-intervention. If a transactional table is in use, a different execution path is called to provide a crash-safe behavior. Testing if a transactional engine is in use, unfortunately, requires to open and close the table, slave_relay_log_info, and this has a negative impact on performance. To fix this, we have cached the type of the repository in use, transactional or non-transactional, while starting the slave. This is done by introducing a member variable into the Rpl_info class. Changing the engine in use while the slave is running is not recommend and most likely will cause inconsistency issues. We do nothing in this patch to prevent such changes. In the future, however, we are going to check if the replication is stopped before allowing to change the engine in use or the table's structure in general, although the latter operations can apparently lead to fail-safe scenarios. We also have implemented the following changes: . Refactored Rpl_info_factory and removed unnecessary code. . Allowed to dynamically change the type of the repository, FILE or TABLE, without requiring to restart the serve. However, replication must be stopped. . Alerted when a configuration is not crash-safe. 	58c1b836bacae1b6dad59b4c67211a02ea3ce368
----------------------------
Update the default.daily collection in order to run rpl test cases with: . relay-log-info-repository=TABLE or . master-info-repository=TABLE Some test cases were updated because either they rely on a master.info or relay.info file or had to be changed to cope with such options. 	bf5f7227ca627e45a43761f00e31d2ca4fe87c19
----------------------------
"Bug#11894966 - second mysqld does not have table after non distributed table alter to ndb - move the ndb_create_table_from_engine call and related code out of ""if (ndb_binlog_running)"", ndb schema distribution should run also when mysqld is not configured to binlog "	da160b2f0f67ee7d7d12d7869a4b6c08f74a4a52
----------------------------
"WL#4896 ""Performance Schema Net IO"" - Fixed valgrind errors - Updated unit tests for sockets "	e513572c35f6252e425afd586892e16fb2732710
----------------------------
"WL#4896 ""Performance Schema Net IO"" - Added ""STATE"" column to SOCKET_INSTANCES "	d19bbfca66311b2020fa65e1dc94d6f6bafc348b
----------------------------
"WL#4896 ""Performance Schema Net IO"" Tables SOCKET_SUMMARY_BY_EVENT_NAME and SOCKET_SUMMARY_BY_INSTANCE: Column groups assigned to individual socket operations have been removed. Stats for all socket operations are consolidated into into socket read, write and misc column groups. "	08721850430a7d888e3ac11c7589e113cf53c0d8
----------------------------
"WL#4896 ""Performance Schema Net IO"" - Added mysql_socket_set_address() API - Call mysql_socket_set_address() from network_init() for server socket - Added mysql_socket_set_thread_owner() API - Call mysql_socket_set_thread_owner() from do_handle_one_connection() - Removed unused mysql_socket APIs "	325a6ff57fb59686e29a735c2a73e1fa71f9e38c
----------------------------
"WL#4896 ""Performance Schema Net IO"" - Fix valgrind warnings associated with SOCKET_INSTANCES.THREAD_ID "	ed6666c56b700c0464d18a14c6cd9c0631f20fb4
----------------------------
Bug # 11766011: mysql.user.authentication_string column causes configuration wizard to fail Made the fields mysql.user.plugin and mysql.user.authentication_string nullable to conform with some older clients doing inserts instead of using the commands. 	52edb4a5b95de617d0627e8476785e404f380eeb
----------------------------
Merge: 00acf65 84e2774 merge mysql-5.5 --> mysql-trunk Conflicts: rpl_stm_stop_middle_group.result rpl_slow_query_log.test 	e53f6414ac8a068fceed5ec6386bc4c2f473d786
----------------------------
BUG#11766184 -  59234 : cmdline clients crash --defaults-extra-file with no .cnf or .ini extension. Fix for this bug was pushed as part of Bug#11765482. 	bb0c50c7b146b0096bf098f495854636668cc7b8
----------------------------
BUG#11877618: rpl_slave_net_timeout fails in rpl_sync.inc (at sync_slave_with_master) Problem: the test had not been updated after BUG#49978 was pushed Fix: add 'set $rpl_only_running_threads= 1' to the end of the test and update the result file. Also, use include/assert.inc for an assertion (instead of relying on result file comparison). Also, move 'set @@global.slave_net_timeout' forwards, to get rid of a warning. 	c0613a9fd7ea2e40610ab1927aff2ec2feaa5b9a
----------------------------
Cherry-pick fix for optimizer_debug_sync.test from opt-team to opt-backporting 	93428f0ce15c8cc5ab2bea5e953dd0aba2848017
----------------------------
ndb - Add cmake configure check for pthread_setschedparam 	757bc8d346c5bdb30cf317850edd31982d3ce30a
----------------------------
"Fixed Bug#11764168 ""56976: SEVERE DENIAL OF SERVICE IN PREPARED STATEMENTS"". The problem was that server didn't check resulting size of prepared statement argument which was set using mysql_send_long_data() API. By calling mysql_send_long_data() several times it was possible to create overly big string and thus force server to allocate memory for it. There was no way to limit this allocation. The solution is to add check for size of result string against value of max_long_data_size start-up parameter. When intermediate string exceeds max_long_data_size value an appropriate error message is emitted. We can't use existing max_allowed_packet parameter for this purpose since its value is limited by 1GB and therefore using it as a limit for data set through mysql_send_long_data() API would have been an incompatible change. Newly introduced max_long_data_size parameter gets value from max_allowed_packet parameter unless its value is specified explicitly. This new parameter is marked as deprecated and will be eventually replaced by max_allowed_packet parameter. Value of max_long_data_size parameter can be set only at server startup. "	6c2f5e306ca3fa621cd25cedd49181d6e0d5cbc6
----------------------------
Bug #11765023: 57934: DOS POSSIBLE SINCE BINARY CASTING DOESN'T ADHERE TO MAX_ALLOWED_PACKET Added a check for max_packet_length in CONVERT(, BINARY|CHAR). Added a test case. 	405f7ca69a36a2b2d7b02bdb945f1e6879c5aaea
----------------------------
Bug#11765707 (Mysql bug #58698): EPOCH NOT IN NDB_APPLY_STATUS WHEN IGNORING BINARY LOGGING MYSQL DB ON MA Replication code modified into alignment with trunk so that injected table map events are not filtered by replication code. Table map events added by the 'normal' RBR code are already checked for DB filtering before being added. For Ndb user tables, DB filtering is checked before NdbApi event subscriptions are configured for a user table, so filtering at the Binlog Injector is not required. Removing the 'built in' filtering allows Ndb to ensure that injected ndb_apply_status events are not filtered out if the user has filtered out events on the mysql database. The existing ndb_binlog_ignore_db testcase is extended. A new rpl_ndb_ignore_db testcase is added. 	90b5825f3a471bdeaa105cbc0404c5d37e03bc49
----------------------------
Bug#11768580 LOST_EVENTS ERROR 1590 NOT IGNORED WHEN --SLAVE-SKIP-ERRORS USED Extra Ndb testcases, specific to GAP event on restart. 	701a75cba8002be6f67ee5f488d5438c47869721
----------------------------
Bug#11768580 LOST_EVENTS ERROR 1590 NOT IGNORED WHEN --SLAVE-SKIP-ERRORS USED (Mysql bug num 59889 LOST_EVENTS error 1590 not ignored when --slave-skip-errors used) Add slave-skip-errors check to INCIDENT log event. Note that this is a 'backport' of bug#11799671 	693cc73d4506c705004cb83d3e12df6994b266ff
----------------------------
"WL#4896 ""Performance Schema Net IO"" - Replaced get_thread_id() API with set_socket_owner() - Replaced PFS_socket.m_thread_id with m_thread_owner - SOCKET_INSTANCES.THREAD_ID displays owning thread id if availble, else NULL "	d3588fe3a32b72d4c4d27baafd88093f4a5bf225
----------------------------
"WL#4896 ""Performance Schema Net IO"" - Added get_thread_id API - Set corresponding thread_id during socket create "	b588923e5d01922451931669c26e9a87909a52da
----------------------------
"WL#4896 ""Performance Schema Net IO"" Resolved test failures caused when performance_schema_max_sockets was renamed to performance_schema_max_socket_instances: - Renamed sys_vars.pfs_max_socket to sys_vars.pfs_max_socket_instances - Re-record mysqld--help-win.result "	221efa9e687c3fc14a85f7c953eeb27a32e60c92
----------------------------
"WL#4896 ""Performance Schema Net IO"" - Fixed bug in register_socket_class() that caused perfschema.aggregate to fail "	c59bfcb85724c4f3a2655fdc97d74ca3b656d30f
----------------------------
"BUG #11760210: 52596: SSL_CIPHER_LIST NOT SET OR RETURNED FOR ""SHOW STATUS LIKE 'SSL_CIPHER_LIST'"" Issue: SSL_CIPHER set to a specific CIPHER name was not getting picked up by SHOW STATUS Command. Solution: If specific cipher name is specified, avoid overwriting of Cipher List with default Cipher names. "	74a438fc5b65c9a6c2e132c1c60473eb3e3b3384
----------------------------
"WL#4896 ""Performance Schema Net IO"" - Removed unused parameters from mysql_socket_accept() "	2bfeaa581ebba8adfc827d56baed318e624cad21
----------------------------
"WL#4896 ""Performance Schema Net IO"" Socket summary tables - Added PFS_byte_stat constructor to initialize fields - This should also correct valgrind errors socket accept() - Removed wait -- used in listen() only - Moved PSI initialization to after accept() call to capture new fd Windows build - Pulled build break fixes from mysql-trunk "	1e782325dc1789490013a587c638b984b8a06c58
----------------------------
"ndb - add ndb_schema_locks_count session variable which counts the number of times that a thread takes the ""ndb global schema lock"" - add test to show that all the commands that are configured to take the global schema lock updates the counter "	9802cbe01f6d48f7d1e69f957b84adb641744e49
----------------------------
Implement connection pooling for clusterj. Two properties are added to the configuration file: com.mysql.clusterj.connection.pool.size specifies the number of connections in the pool com.mysql.clusterj.connection.pool.nodeids specifies the node ids to use The constructor Ndb_cluster_connection(const char *, int) is mapped by ndbjtie 	a1f27b3147d0bc8b913bc4febf5af4625542a3c3
----------------------------
Bug#60196 / Bug#11831040 Setting lowercase_table_names to 2 on Windows causing Foreign Key problems This problem was exposed by the fix for Bug#55222.  There was a codepath in dict0load.c, dict_load_foreigns() that made sure the table name matched case sensitive in order to load a referenced table into the dictionary as needed.  If an engine is rebooted which accesses a table with foreign keys, and lower_case_table_names=2, then the table with foreign keys will get an error when it is changed (insert/updated/delete). Once the referenced tables are loaded into the dictionary cache by a select statement on those tables, the same change would succeed because the affected code path would not get followed. 	d072bb0d7f40822ae13affadd897bb47ea01d4cc
----------------------------
BUG#11766219 : 59280: $MYSQL_HOME IS NOT USED FOR THE CLIENT CONFIGURATION. At startup, MySQL server/client programs do not read configuration file pointed by MYSQL_HOME environment variable. This happened as, this environment variable was handled by a different variable (DEFAULT_HOME_ENV) in the code, which was ne'er initialized. Fixed by changing it to MYSQL_HOME. 	c614ff3a42cb1169c6a676205def6c9fb81197f2
----------------------------
ndb - fix ndb_configure.m4 broken because of help string with embedded comma(,) by adding surrounding ] - break long lines - add extra surrounding ] in a few other helptexts 	ae7b0f22b2b1962c85d0c532e664db3b7c8391f2
----------------------------
Update ndb_configure.m4 for clusterj-jdbc 	b2f18401ef58694d577190e540354347bc43d3b9
----------------------------
Fix failing test: optimizer_debug_sync.test must source have_materialization.inc because it sets optimizer_switch. 	f855b4b0116d443275014b2a1b3c61dc25d39776
----------------------------
Merge: 63d0baf 2eaea2a Automerge opt-backporting -> opt-team. No conflicts, but optimizer_debug_sync test fails. Fix follows in next changeset. 	98f8a3aef2b6a58529295ed8f72738c222cf0aa6
----------------------------
Bug#11766528 PERFORMANCE_SCHEMA TRACKS BOTH BINARY AND RELAY LOGS IN THE SAME EVENTS Before this fix, all the performance schema instrumentation for both the binary log and the relay log would use the following instruments: - wait/io/file/sql/binlog - wait/io/file/sql/binlog_index - wait/synch/mutex/sql/MYSQL_BIN_LOG::LOCK_index - wait/synch/cond/sql/MYSQL_BIN_LOG::update_cond This instrumentation is too general and can be more specific. With this fix, the binlog instrumentation is identical, and the relay log instrumentation is changed to: - wait/io/file/sql/relaylog - wait/io/file/sql/relaylog_index - wait/synch/mutex/sql/MYSQL_RELAY_LOG::LOCK_index - wait/synch/cond/sql/MYSQL_RELAY_LOG::update_cond With this change, the performance instrumentation for the binary log and the relay log, which share the same structure but have different uses, is more detailed. This is especially important for hosts in the middle of a replication chain, that are both masters (binlog) and slaves (relaylog). 	f0577e551edb010d96ababa1281769b38e203adb
----------------------------
"Bug#11763382: Assertion 'inited=INDEX in sql/handler.h Used to be bug#56080. The problem occurs because some TABLE objects are associated with the optimizer execution structures even after close_thread_tables() has been called. In turn, this means that final cleanup of some TABLE objects is done from within THD::cleanup_after_query(). At this point in time, the TABLE objects may already have been given to another session, meaning that we may end another session's index or table scan. The safest solution seems to be to always perform a thorough cleanup of all execution data structures, including releasing the TABLE objects, before close_thread_tables() is called. In other words, this will have to be done at the end of each execution. However, this is currently not possible in the implementation of subquery materialization. This part of the optimizer assigns some objects, including a TABLE object, for the lifetime of the statement object, and not for each execution. This gives an odd situation, where some parts of the data structures are set up for reuse and others are not. Combine this with the fact that the user may decide to use another strategy for a subsequent subquery execution, the ""permanent"" data structures may not even be used later. It is therefore reasonable to allocate materialization execution structures for the lifetime of one execution. It means that the functions init_permanent() and init_runtime() of class subselect_hash_sj_engine are combined into one setup() function. In addition, the function Item_subselect::cleanup() will be called when the cleanup() function for the underlying query expression is called, and this function will cleanup and destroy the materialization data structures, so that the subquery item object is ready for a new optimization process in the next round of execution. However, the EXPLAIN functionality relies on these data structures being present when explaining a query containing a materialized subquery. Thus, we have two conflicting requirements for query cleanup: - For maximum efficiency we should release resources as early as possible after execution. - We cannot release resources that are needed for EXPLAIN queries. A partial solution to this problem is to split resource cleanup in two: 1. Delete JOIN objects as soon as possible - this makes sense because TABLE objects are associated with them through JOIN_TAB. JOIN::destroy() is extended so that associations to joined tables are removed. But notice that JOIN objects may be needed for EXPLAIN queries, so sometimes deleting them must be delayed. Setting free_join= 0 inside mysql_select() when SELECT_DESCRIBE is part of select options is evidence of that. 2. Cleanup query expression objects (ie st_select_lex and st_select_lex_unit) later (in practice at end of query execution). One example: In mysql_explain_union() the call to unit->cleanup() was deleted, so now it is done by the general cleanup. The bug fix does only a limited amount of refactoring in this area. mysql-test/r/optimizer_debug_sync.result Results for new test case. mysql-test/t/optimizer_debug_sync.test Test case for bug. Requires the debug sync facility, and often fails without the bug fix. mysql-test/r/union.result Change in EXPLAIN EXTENDED output that shows an optimized predicate in the two query specifications within a UNION in a subquery. AFAIK, this is similar to how a non-subquery is reported, so the change is an improvement. sql/ha_partition.cc Comment change. sql/item_subselect.cc In Item_subselect::cleanup(), ""new"" engine is always deleted after an execution. Item_in_subselect::setup_engine() now builds the materialization engine for one execution only. Specific arena is no longer needed. In subselect_union_engine::cleanup(), call to unit->reinit_exec_mechanism is deleted because it is redundant. Implementation of cleanup() functions for subclasses of subselect_engine has been refactored. subselect_hash_sj_engine::setup() replaces init_permanent() and init_runtime(). For class subselect_hash_sj_engine, freeing of the temporary result table is moved from the destructor to ::cleanup(). Some changes necessary because of interface changes. sql/item_subselect.h Some cleanup of the subselect_engine classes: - All virtual functions now marked virtual in all derived classes. - Functions that returned bool result are now declared accordingly. - Slight cleanup of private/protected/public performed. - Improved constructors. sql/sql_lex.h Change in friend declaration. sql/sql_select.cc Function JOIN::reinit() is renamed to JOIN::reset(). JOIN::destroy() will now delete connection to associated tables. The st_select_lex_unit object is no longer cleaned up as early as before, but instead relying on the general cleanup of lex->unit in mysql_execute_command(). sql/sql_select.h A few small interface changes. sql/sql_union.cc Cleaned up some confusing error handling in st_select_lex_unit::exec() and st_select_lex::cleanup(). "	2eaea2af63d66708185f96c94495e9f67a04b62e
----------------------------
Bug#11765237 - 58179: CANNOT START MYSQLD WITH APP VERIFIER Bug#11763065 - 55730: KILL_SERVER() CALLS SETEVENT ON A NULL HANDLE, SMEM_EVENT_CONNECT_REQUEST Application Verifier is a Microsoft tool used for detecting certain classes of programming errors. In particular, MS Windows OS resource usage is monitored for wrong usage (handles, thread local storage, critical sections, ...) In MySQL 5.5.x, an error was introduced where an object on thread local storage was used before the TLS and the object was created. The fix has been to move the mysys initialization to an earlier stage in the boot process when built for Windows.  For non-win builds, the init already happens early. Some un-tangling of calls to my_init(), my_basic_init() and my_thread_global_init() was done.  There is no longer a need to do init in steps, so the full my_init() is called instead of my_init_basic(). In addition,  Bug#11763065 was fixed.  The event handle 'smem_event_connect_request' is only created if 'opt_enable_shared_memory' is set.  When killing the server, an event was flagged on the handle unconditionally.  Added a test, so it will only be flagged if created. 	48126a574cb31952032eb3c0ff07eaab101dc9e0
----------------------------
"WL#4896 ""Performance Schema Net IO"" - Updated perfschema regression suite with DDL and DML tests for socket_* tables. "	239257719947e69bad87a008effee536b56014ba
----------------------------
"WL#4896 ""Performance Schema Net IO"" - Added socket DDL, DML tests - Added socket_* tables to start_server tests "	19a6a4b4efc60704a93aec05a07d1ead60619d33
----------------------------
"WL#4896 ""Performance Schema Net IO"" - Enabled TRUNCATE for socket_summary_by_* - Updated aggregate.test for socket IO "	b303dd2347cb5bf58dbff4c50589f12cd067ccb8
----------------------------
vs-config option to ctest made not dependent on Windows 	416e92e3bbc1b8baa7c944eb868620c1aa5b7d15
----------------------------
11766640 follow-up: fix for VS_CONFIG on Windows 	7ede6ce344ad7d4accacd5a04dad3e1fbe019e5a
----------------------------
Revert the max value of innodb_purge_batch_size to 5000. 	759d346e6728c3bebbbed69651cced96447bf0c7
----------------------------
Merge: 4d1e3fb a8eeb8c bug#11766160 Test rpl.rpl_stm_000001 fail on Valgrind with binlog-checksum enabled merging from local bugfixing branch to refer to the bug id in the Oracle's scale. 	c8f193a8eccf6825d96946d7e5ebf11235e4d3d7
----------------------------
ndb - yet another fix for test_mgmd, previous fix revealed that a failed config change was simply ignored in some cases...current fix prevent the config change to even start if another node is about to start one 	28001d1eca77c2de96d735c6f27222dc35cbc325
----------------------------
Bug #59205 Test rpl.rpl_stm_000001 fail on Valgrind with binlog-checksum enabled Most probably it was a timeout cause by logics of the test producing rather big volume of data. Optimizing the test to produce less load still without harming the tests original logics. 	a8eeb8cf4f0bf99187ee9e278dee265df1fd18ad
----------------------------
Bug #11766227: InnoDB purge lag much worse for 5.5.8 versus 5.1 Bug #11766501: Multiple RBS break the get rseg with mininum trx_t::no code during purge Bug# 59291 changes: Main problem is that truncating the UNDO log at the completion of every trx_purge() call is expensive as the number of rollback segments is increased. We truncate after a configurable amount of pages. The innodb_purge_batch_size parameter is used to control when InnoDB does the actual truncate. The truncate is done once after 128 (or TRX_SYS_N_RSEGS iterations). In other words we truncate after purge 128 * innodb_purge_batch_size. The smaller the batch size the quicker we truncate. Introduce a new parameter that allows how many rollback segments to use for storing REDO information. This is really step 1 in allowing complete control to the user over rollback space management. New parameters: i) innodb_rollback_segments = number of rollback_segments to use (default is now 128) dynamic parameter, can be changed anytime. Currently there is little benefit in changing it from the default. Optimisations in the patch. i. Change the O(n) behaviour of trx_rseg_get_on_id() to O(log n) Backported from 5.6. Refactor some of the binary heap code. Create a new include/ut0bh.ic file. ii. Avoid truncating the rollback segments after every purge. Related changes that were moved to a separate patch: i. Purge should not do any flushing, only wait for space to be free so that it only does purging of records unless it is held up by a long running transaction that is preventing it from progressing. ii. Give the purge thread preference over transactions when acquiring the rseg->mutex during commit. This to avoid purge blocking unnecessarily when getting the next rollback segment to purge. Bug #11766501 changes: Add the rseg to the min binary heap under the cover of the kernel mutex and the binary heap mutex. This ensures the ordering of the min binary heap. The two changes have to be committed together because they share the same that fixes both issues. rb://567 Approved by: Inaam Rana. 	9d6d1902e091c868bb288e0ccf9f975ccb474db9
----------------------------
ndb - fix a race in testMgmd -n Bug56844, refuse CONFIG_CHECK if config-change is pending 	53391d281ac781a941024e5492522faa8f9311e1
----------------------------
ndb - add MCP patch for WL3733 slave_allow_batching - update sys_vars.slave_allow_batching testcase 	dca13a6181e82d085662887b504cbf22dd80a532
----------------------------
"WL#4896 ""Performance Schema Net IO"" - New table: SOCKET_SUMMARY_BY_EVENT_NAME - Removed CONNECT operation columns from socket summary tables - New class: PFS_instance_socket_io_stat_visitor - Simplified data structures for combined timer and byte count stats - Fixed bug in ::make_row() for socket summary tables "	8cbf29921f9cc6c8adff7194ef205633e483ae9d
----------------------------
BUG#11766720 - setting storage engine to null segfaults mysqld MONTHNAME(0) claims that it is about to return NOT NULL value, whereas it actually returns NULL. As a result storage_engine variable (which cannot be NULL) protection was bypassed and NULL value was accepted, causing server crash. Fixed MONTHNAME(0) to report valid NULL flag. 	4daaa0288002cce90c1a3655e3740b100a3f761b
----------------------------
WL#4813 PERFORMANCE_SCHEMA Instrumenting Stages WL#2515 PERFORMANCE_SCHEMA statements Added more test cases. 	4d5a7810f48a54bb3ee8b83be034e1560bd7c465
----------------------------
Disable this test when running 'mtr --mem' With --mem if fails with +UNEXPECTED ERROR NUMBER: 1290 In var/log/mysqld.2.err we have: [ERROR] LOAD DATA INFILE in the slave SQL Thread can only read from --slave-load-tmpdir. Please, report a bug. [ERROR] Slave SQL: Error 'The MySQL server is running with the --slave-load-tmpdir option so it cannot execute this statement' on query. Default database: 'test'. Query: 'LOAD DATA INFILE '../../tmp/SQL_LOAD-2-1-1.data' INTO  TABLE `t1` FIELDS TERMINATED BY '\t' ENCLOSED BY '' ESCAPED BY '\\' LINES TERMINATED BY '\n' (`a`, `b`)', Error_code: 1290 getcwd() in the server yields something like: /dev/shm/var_auto_iv5Q/mysqld.2/data 	26077d8dcb44af9e0512a684200c0350d47764fc
----------------------------
"WL#4896 ""Performance Schema Net IO"" - Renamed performance_schema_max_sockets to ..max_socket_instances - Fixed events_waits aggregation for timer waits - close_socket instrument now destroys PFS socket instance - Renamed PFS_single_stat.aggregate_timed() to aggregate_value() - Added status variable performance_schema_socket_classes_lost - Enabled socket_shutdown() and socket_close() instruments - Instrumented vio::fastsend() "	2c7540639459930e87f4ae5fe1a153fe9cacf142
----------------------------
WL#4813 PERFORMANCE_SCHEMA Instrumenting Stages WL#2515 PERFORMANCE_SCHEMA statements Tests cleanup. 	61177766de402e16008b1e483295d74fc48a08e3
----------------------------
"ndb - cherrypick from 5.5-telco-7.0 - Straigthen up the interface of ndb_binlog allowing to hide its internals -- Rename ndbcluster_setup_binlog_table_shares to ndb_binlog_setup and make it return true or false for sucess/fail -- Make ""ndb_binlog_tables_inited"" variable local to ha_ndbcluster_binlog -- Add function ndb_binlog_is_read_only() which return false as long as the binlog is not ready and we only allow to open tables in read only mode. -- Make ""ndb_binlog_is_ready"" variable local to ha_ndbcluster_binlog -- Remove the first call to ndb_binlog_setup, calling it once every second until it succeeds and regularly thereafter should be enough. "	ce73f1a2f1b0df676b85608175d2970431ab5b83
----------------------------
WL#4813 PERFORMANCE_SCHEMA Instrumenting Stages WL#2515 PERFORMANCE_SCHEMA statements Implementation (continued) 	023ce317320209a36650a5bfea84c43ef207253f
----------------------------
WL#4813 PERFORMANCE_SCHEMA Instrumenting Stages WL#2515 PERFORMANCE_SCHEMA statements Implementation (continued) 	3ffaf1ce4f1edf68e7503b67aa57fad81429118e
----------------------------
WL#5185 Remove SQL_MAX_JOIN_SIZE system variable THe SQL_MAX_JOIN_SIZE system variable was deprecated in MySQL 5.1, and is now removed.  Use MAX_JOIN_SIZE instead. 	5499f3d47330667229d10a2d0d44afa2e2c37731
----------------------------
"ndb - fix ndb_binlog_ignore_db testcase by removing the unneccessary ""drops"" in beginning of testcase and thus the binlog should be empty since it should all have been filtered away by the --binlog-ignore-db=mysqltest argument which mysqld was started with - add one more statement which shouldn't be binlogged either "	eb23b32f883256304b722ddcd80d44f5f2cc65af
----------------------------
WL#4813 PERFORMANCE_SCHEMA Instrumenting Stages WL#2515 PERFORMANCE_SCHEMA statements Implementation (partial) 	2816b6b41366a70ab8207eea63f951f6b0005f67
----------------------------
"WL#4896 ""Performance Schema Net IO"" - Corrected assignment of object_instance_begin field - Added VIEW_SOCKET to events_waits_summary_by_thread_by_event_name - Added VIEW_SOCKET to events_waits_summary_global_by_event_name - Fixed conditions to invoke set_socket_info() in mysql_socket.h "	30b29877f72dad2aeb2fb59d8999daccfd5eafbe
----------------------------
"WL#4896 ""Performance Schema Net IO"" - Adjusted socket_instances table definition - Fixed copy/paste bug in setup_instruments "	9fce60ec5bcc993f2872075a5cc464e3f4906119
----------------------------
"Fix for BUG#59894 ""set optimizer_switch to e or d causes invalid memory writes/valgrind warnings"": due to prefix support, the argument ""e"" was overwritten with its full value ""engine_condition_pushdown"", which caused a buffer overrun. This was wrong usage of find_type(); other wrong usages are fixed here too. Please start reading with the comment of typelib.c. "	77c0f33ee2b2ad46088364630275735f9d744ed2
----------------------------
Disabling tests in the daily run as told by Anitha: - rpl.rpl_semi_sync_event - rpl.rpl.rpl_semi_sync - sys_vars.rpl_semi_sync_master_enabled_basic - sys_vars.rpl_semi_sync_master_timeout_basic - sys_vars.rpl_semi_sync_master_trace_level_basic - sys_vars.rpl_semi_sync_master_wait_no_slave_basic - sys_vars.rpl_semi_sync_slave_enabled_basic - sys_vars.rpl_semi_sync_slave_trace_level_basic - sys_vars.all_vars These need to be re-enabled after fixing the windows issues with debug server and debug plugins. 	f8d8112edc031f6cf52bc9a4bba443842bd86e94
----------------------------
Bug #59214 :increase rate limit for insert buffer prefetch reads rb://593 approved by: Marko 1) Make ibuf size configurable. Current behavior is to have a maximum on-disk size equal to half the buffer pool size. This patch introduces a new parameter: innodb_change_buffer_max_size = default 25, min 0, max 50. Value means %age of buffer pool size. Dynamic. 2) Make ibuf merge more aggressive: * upto ibuf::size < ibuf::max_size / 2, merge at PCT_IO(5) same as current. And should be good for most of the workloads. * when ibuf::size > ibuf::max_size / 2, merge at PCT_IO(5) + PCT_IO(excess difference in % of max_size) 	4479af1a47e1d44d8dd632c66fbc44b146f84e36
----------------------------
"Bug#31384 DATE_ADD() and DATE_SUB() return binary data Problem: DATE_ADD() is a hybrid function and can return DATE, DATETIME or VARCHAR data type depending on arguments. In case of VARCHAR data type, DATE_ADD() reported ""binary"" character set, which was wrong. Fix: make DATE_ADD() return @character_set_connection in VARCHAR context. @ mysql-test/include/ctype_numconv.inc Adding tests @ mysql-test/r/ctype_binary.result Adding tests @ mysql-test/r/ctype_cp1251.result Adding tests @ mysql-test/r/ctype_latin1.result Adding tests @ mysql-test/r/ctype_ucs.result Adding tests @ mysql-test/r/ctype_utf8.result Adding tests @ sql/item_strfunc.cc - Moving code from Item_str_ascii_func::val_str() to Item_str_func::val_str_from_val_str_ascii(), as this code needs to be shared by Item_date_add_interval. - Adding str2 parameter to be used as a buffer, instead of using private ascii_buf member. @ sql/item_strfunc.h - Moving code from Item_str_ascii_func::val_str() to Item_str_func::val_str_from_val_str_ascii() - Removing ""String *val_str_convert_from_ascii(String *str, String *ascii_buf)"" prototype as it was neither used nor declared. @ sql/item_timefunc.h - Overwriting parent's charset_for_protocol() method, becase we need to behave differenlty in VARCHAR and DATE/DATETYPE context. - Adding ascii_buf for conversion. - Adding val_str_ascii() prototype. - Adding val_str() which uses newly added Item_str_func::val_str_from_val_str_ascii(), passing ascii_buf as a conversion buffer. "	cb6b340b0f51c48e0d7f294f85933d540387bb2b
----------------------------
Bug#56124: implement global variable to show current value of core-file implements feature, adds tests. 	e84d1634413c183eba1488269e357b3546f890e5
----------------------------
Backport into build-201102032246-5.1.52sp1 > ------------------------------------------------------------ > revno: 3518 > revision-id: sergey.glukhov@oracle.com-20101213114812-kaq7sh0s623128lv > parent: sergey.glukhov@oracle.com-20101213103926-okypkn10adeeyns8 > committer: Sergey Glukhov <sergey.glukhov@oracle.com> > branch nick: mysql-5.1-bugteam > timestamp: Mon 2010-12-13 14:48:12 +0300 > message: >   Bug#39828 : Autoinc wraps around when offset and increment > 1 >   Auto increment value wraps when performing a bulk insert with >   auto_increment_increment and auto_increment_offset greater than >   one. >   The fix: >   If overflow happened then return MAX_ULONGLONG value as an >   indication of overflow and check this before storing the >   value into the field in update_auto_increment(). 	d27ac61f9dacb0a64210924c4d6bb63549eb7f32
----------------------------
ndb - make the code that creates the ndb_* system table use the Ndb_local_connection class. - merge the two identical implementations for creating ndb_schema and ndb_apply_status into a parametrized fucntion 'create_sys_table' - write two wrapper functions for working with the ndbcluster_open_tables HASH - rename ndbcluster_create_ndb_apply_status_table to ndb_apply_table__create - rename ndbcluster_create_schema_table to ndb_schema_table__create 	d6078ddc93c3f8061016808007654840e6ac4910
----------------------------
"ndb - Straigthen up the interface of ndb_binlog allowing to hide its internals -- Rename ndbcluster_setup_binlog_table_shares to ndb_binlog_setup and make it return true or false for sucess/fail -- Make ""ndb_binlog_tables_inited"" variable local to ha_ndbcluster_binlog -- Add function ndb_binlog_is_read_only() which return false as long as the binlog is not ready and we only allow to open tables in read only mode. -- Make ""ndb_binlog_is_ready"" variable local to ha_ndbcluster_binlog -- Remove the first call to ndb_binlog_setup, calling it once every second until it succeeds and regularly thereafter should be enough. "	d18818bdb2f6ef2da33b1022dc22f60cd6c55af2
----------------------------
"WL#4896 ""Performance Schema Net IO"" - Fixed problem with socket_summary_by_instance definition. - Fixed runtime column type warnings. "	27a9eb3f23f91c0e400b1e31f9829572a35db457
----------------------------
"WL#4896 ""Performance Schema Net IO"" - Add socket_summary_by_instance to CMakeLists.txt "	808f335a90c688200f95cab30c5ae0b6e0129015
----------------------------
"WL#4896 ""Performance Schema Net IO"" - Addd socket_summary_by_instance to mysql_system_tables.sql "	b9f5495c26522e6eef83c6bb707a3b9bc5b662fb
----------------------------
Bug #59632, post-push fix for unit test. thd->thread_stack must point to the stack, not free-store. Also: add an extra 'mysys' to the link command for SERVER_TESTS. (it failed to link on debian) 	30391363196fc6b8c293994d5216fa0091ef0458
----------------------------
"WL#4896 ""Peformance Schema Net IO"" - Intermediate version - Added table socket_summary_by_instance - Updates per worklog review "	0e5c428c65c38c77e071ad17841036741b698dd7
----------------------------
Add NdbApi usage counters to NdbApi and MySQLD A set of counters are maintained by each Ndb object in the NdbApi : WaitExecCompleteCount Number of times blocked waiting for key / scan start operation execution to complete. execute([no]commit|rollback), pollNdb() for async transactions Includes implicit executes for Blobs + autoincrement not visible to users. WaitScanResultCount Number of times blocked waiting for Scan related response (batch(es), close acknowledgement etc) WaitMetaRequestCount Number of times blocked waiting for Meta data based signal (TC Seize, DDL etc) WaitNanosCount Total nanoseconds elapsed waiting for a signal of some sort. Achieved resolution is OS dependent. BytesSentCount Bytes sent to data nodes BytesRecvdCount Bytes received from data nodes TransStartCount Transactions started TransCommitCount Transactions committed TransAbortCount Transactions explicitly aborted TransCloseCount Transactions closed (Not all are Committed/Aborted) PkOpCount Primary key based ops (Read, Insert, Update, Write, Unlock, Delete) Includes Blob part table ops, implicit unlock ops, autoincrement ops etc UkOpCount Unique key based ops (Read, Update, Write, Delete) TableScanCount Table scans started RangeScanCount Range (Ordered index) scans started PrunedScanCount Count of scans pruned to 1 partition ScanBatchCount Number of row batches received.  1 batch = set of rows from 1 table fragment. ReadRowCount Number of rows read in total from pk, uk + scans. TransLocalReadRowCount Number of rows read from the same node the transaction was started on. Can indicate performance of 'distribution awareness'. DataEventsRecvdCount Number of row change events received over the NdbApi event Api NonDataEventsRecvdCount Number of non row change events received over the NdbApi event Api EventBytesRecvdCount Number of bytes of events received over the NdbApi event Api These per-Ndb counters can be used to understand and reason about the behaviour of NdbApi applications. Additionally, methods are added to ndb_cluster_connection to sum counters across all Ndb objects created by the connection.  These can be used to get a snapshot of the NdbApi related activity initiated over a particular connection. These counters are exposed to SQL users of MySQLD as status variables of 4 kinds, all with the Ndb_api prefix.  As normal, all status variables can also be read and queried from the information_schema.session_status (or information_schema.global_status) tables. The counters are based on the underlying Ndb objects, and are only reset when a new Ndb object is created.  They are not reset by FLUSH STATUS commands. Rather than relying on absolute values of counters, they should be used to observe a difference over time. Session status variables, all suffixed with _session. ----------------------------------------------------- These are the variable values for the user's current session. Useful for understanding/debugging performance. Ndb_api_bytes_received_session Ndb_api_bytes_sent_session Ndb_api_pk_op_count_session Ndb_api_pruned_scan_count_session Ndb_api_range_scan_count_session Ndb_api_read_row_count_session Ndb_api_scan_batch_count_session Ndb_api_table_scan_count_session Ndb_api_trans_abort_count_session Ndb_api_trans_close_count_session Ndb_api_trans_commit_count_session Ndb_api_trans_local_read_row_count_session Ndb_api_trans_start_count_session Ndb_api_uk_op_count_session Ndb_api_wait_exec_complete_count_session Ndb_api_wait_meta_request_count_session Ndb_api_wait_nanos_session Ndb_api_wait_scan_result_count_session Global status variables, no suffix ---------------------------------- These are for all MySQL connections in the MySQL server. Useful for getting a notion about throughput, bottlenecks, system performance etc. Note that slave, injector, utility thread etc are included here. Also all connections in a MySQL Server using multiple cluster connections are summed. Ndb_api_bytes_received Ndb_api_bytes_sent Ndb_api_event_bytes_count Ndb_api_event_data_count Ndb_api_event_nondata_count Ndb_api_pk_op_count Ndb_api_pruned_scan_count Ndb_api_range_scan_count Ndb_api_read_row_count Ndb_api_scan_batch_count Ndb_api_table_scan_count Ndb_api_trans_abort_count Ndb_api_trans_close_count Ndb_api_trans_commit_count Ndb_api_trans_local_read_row_count Ndb_api_trans_start_count Ndb_api_uk_op_count Ndb_api_wait_exec_complete_count Ndb_api_wait_meta_request_count Ndb_api_wait_nanos Ndb_api_wait_scan_result_count Slave variables, suffixed _slave -------------------------------- These are the counters for the NdbApi work performed by the Slave SQL thread.  If the MySQLD is not acting as a Slave then these will remain at 0. Useful for verifying / understanding Slave NdbAPI performance. Ndb_api_bytes_received_slave Ndb_api_bytes_sent_slave Ndb_api_pk_op_count_slave Ndb_api_pruned_scan_count_slave Ndb_api_range_scan_count_slave Ndb_api_read_row_count_slave Ndb_api_scan_batch_count_slave Ndb_api_table_scan_count_slave Ndb_api_trans_abort_count_slave Ndb_api_trans_close_count_slave Ndb_api_trans_commit_count_slave Ndb_api_trans_local_read_row_count_slave Ndb_api_trans_start_count_slave Ndb_api_uk_op_count_slave Ndb_api_wait_exec_complete_count_slave Ndb_api_wait_meta_request_count_slave Ndb_api_wait_nanos_slave Ndb_api_wait_scan_result_count_slave Binlog injector thread variables, suffixed _injector ---------------------------------------------------- These are the counters for the Binlog injector thread which listens to events from the Cluster and writes them into the Binlog. In current MySQLD releases, this is the only consumer of NdbApi events in the process, so these counters will be the same as the Global counters. This may change in future. Useful for quantifying the rate of data and schema change in the Cluster. Ndb_api_event_bytes_count_injector Ndb_api_event_data_count_injector Ndb_api_event_nondata_count_injector 	4c949a2659836b44094269f7077a0fe5ceb34828
----------------------------
Fixed such that debug_sync can be used by plugins on Windows 	ea8d63f4fe391850cbbb0e437cdffc734ebedb94
----------------------------
"Fix  Bug #56581  	RPM scripts use hardcoded datadir location When fixing the 27072 bug, the shell snippets running before/after a RPM upgrade got expanded to look at files in the data directory and at the PID file. In this expansion, the standard locations were used. There are users who configure their installations to use non-standard locations for the data directory, the PID file, and other objects. For these users, the fix of 27072 did not work. As a result, the fact that a server was running at upgrade start was not noticed, and the new server was not started after the upgrade. With this patch, the shell snippets now try to get these locations from ""my_print_defaults"" before falling back to the defaults. Now, the fact that the old server is running is again noticed (even with non-standard locations), and the new server is started. Also, the upgrade log is written to the correct data directory. "	796672c44b350a856621193a5b67e5e91aef38e3
----------------------------
Bug#58915 Valgrind warning in MYSQLparse() Under execution of a CHANGE MASTER command, a dynamic array (lex.bi.repl_ignore_server_ids) in the LEX replication information structure is allocated. Under normal operation, this array was deallocated at the end of execution (end of change_master() ). Certain error conditions (most notable if the client thread is killed) would abort the execution before change_master() is called, resulting in memory block being lost. The deallocation has been moved to THD::cleanup_after_query() to ensure that correct deallocation happens in all situations. 	b136f508124731132e13f756b82d14f000157082
----------------------------
Fixes for Bug #55755 and Bug #52315 part 2 Bug #55755 : Date STD variable signness breaks server on FreeBSD and OpenBSD * Added a check to configure on the size of time_t * Created a macro to check for a valid time_t that is safe to use with datetime functions and store in TIMESTAMP columns. * Used the macro consistently instead of the ad-hoc checks introduced by 52315 * Fixed compliation warnings on platforms where the size of time_t is smaller than the size of a long (e.g. OpenBSD 4.8 64 amd64). Bug #52315: utc_date() crashes when system time > year 2037 * Added a correct check for the timestamp range instead of just variable size check to SET TIMESTAMP. * Added overflow checking before converting to time_t. * Using a correct localized error message in this case instead of the generic error. * Added a test suite. * fixed the checks so that they check for unsigned time_t as well. Used the checks consistently across the source code. * fixed the original test case to expect the new error code. 	59f68983ffee45616a8ec255b5f13535236dd0ea
----------------------------
WL#5217: Add explicit partition selection Fix of test to also work with --embedded-server Problem was that embedded uses a different default_storage_engine. 	b8516abf2e4ca1937a94e8e02ed0a9dc565b5bff
----------------------------
BUG#59740 Performance schema test failures on freebsd Investigation of bug 59740 shows that selects on table performance_schema.events_waits_summary_by_thread_by_event_name sometime to not return the expected rows. While the root cause of this is not identified yet, the method table_ews_by_thread_by_event_name::rnd_next() is suspected to be the origin of the failure. The code of this method can benefit from simplifications already identified with other tables, see for example table_setup_instruments::rnd_next(). This fix implements several improvements for the table scan of table performance_schema.events_waits_summary_by_thread_by_event_name. In particular: - code duplication is reduced - code complexity is reduced - the number of calls to thread_array[i].m_lock.is_populated() is reduced by a factor 200+ (the number of instruments) This is implemented by changing the iteration on threads from the innermost index (index 3) to the outermost index (index 1). While is it unclear if calling atomic operations too frequently can cause end_optimistic_lock() to fail in ::make_row(), which could be a possible root cause for the bug found, reducing the number of calls to atomic operations will make the code more robust and scalable, so implementing this cleanup is required. This fix also improves the ortho_iter test, for coverage, since it also checks table events_waits_summary_by_thread_by_event_name. 	92c22f9bf0299bded973006657cac6ec1148832a
----------------------------
Bug #59309  Cleanup MDL - THD interface Define an abstract interface MDL_context_owner which is implemented by THD and the unit test classes. This allows us to separate MDL from the THD and the rest of the server code, and do standalone unit testing of the MDL module. 	b9766fe68bab4c5f77edf26bbcf6050446d6c2ef
----------------------------
Fix Bug #59225 Deadlock between DML and innodb_adaptive_hash_index=OFF rb://587 approved by Marko 	a746fd324e56ff8c0c185f5a8d82d9ccd84e4099
----------------------------
ndb - improve NDB version extraction code for cmake - the NDB_VERSION_XX variables should be INTERNAL, they can't be edited by user(in such chase, change ndb_configure.m4) 	3a1822a7d980983b6a74c5f275cd13be9f723202
----------------------------
Bug#57525: Semijoin transformed subquery with inner grouped subquery gives empty result. This is a followup to bug#31480, which attempted to fix resolved information in subqueries as part of semijoin transformation. The specific problem here is that the inner subquery (which is not transformed) contains an outer reference to the outer-most block in its HAVING clause. The HAVING clause is represented by Item_ref objects, and these are not re-resolved properly through fix_after_pullout(). The solution lies in realizing that Item_ref objects contain a complete set of resolution data structures (ie depended_from, name resolution context), and that it may point to an Item object with it's own set of resolution data structures. Hence, we implement fix_after_pullout() for Item_ref by first calling fix_after_pullout() on the referenced object and then for itself. The above fix revealed another problem: The offending query failed in prepared statement mode. The reason is that the depended_from field in Item_ref is reset in cleanup() and not restored at the next fix_fields() call. The problem is fixed by not resetting the depended_from flag. This is an acceptable solution, as long as transformations are run only on the first execution of a query. There is also another followup to bug#31480: A - t1 \ B - t2 \ C - t3 \ D - t4 where t1.x=t4.y The above figure describes an outer query expression (select_lex A) with 3 nested subqueries represented by select_lex B, C and D. The innermost subquery (D) contains a reference to a table t1 in the outermost block (A). The original resolver marked the subquery containing query expression B as using table t1, and the subqueries containing query expressions C and D with OUTER_REF_TABLE_BIT. The code in bug#31480 failed to preserve all outer references when calling fix_after_pullout(). mysql-test/r/optimizer_switch.result Updated with correct result and plan for query that exposed bug. mysql-test/t/optimizer_switch.test Warnings about wrong results removed. sql/item.cc A common implementation of fix_after_pullout() for all Item_ref classes has been made. The exception is Item_outer_ref which we still have no test case for. Item_ref::fix_after_pullout() now calls fix_after_pullout() on the referenced item, and then it calls Item_ident::fix_after_pullout() on itself. Item_field::fix_after_pullout() is also moved to class Item_ident, which is parent class for both Item_field and Item_ref. A new function Item_ref::resolved_used_tables() was needed. sql/item.h Some adjustments to function prototypes, see sql/item.cc. sql/item_subselect.h One changed friend declaration. 	0769f1a6b4d7508244a8117986d3d6a9210e7f34
----------------------------
ndb - fix problem with extracting the long cluster version string from config ure.in - apply MCP patch for bug57843 	5f744200701e220281b8a6bc66294db6b1591906
----------------------------
ndb - change ndb_load.test to be more specific which variable it want to list i.e only storage_engine instead of any variable that contains storage_engine 	d40fe079a91b70ffe3f89550564e41b29ac0c3ca
----------------------------
Merge: fd1b3ee 1d6a9e1 Merge mysql-trunk-wl5379 --> mysql-trunk WL#5371 PERFORMANCE_SCHEMA Instrumenting Table Locks WL#5379 PERFORMANCE SCHEMA TABLE / INDEX IO SUMMARY WL#5420 PERFORMANCE SCHEMA TABLE LOCK WAIT SUMMARY 	ba7fc50d6c5efcc7d6e782fd4ededc967664ae2e
----------------------------
Bug#48387: Log the start and stop of init_file execution Parenthesizes init-file results, if any, with the file's name in the log so it's more obvious where the statements were read from. 	97748e0f8085dc4d4ecd2000db700b3299d0322f
----------------------------
ndb - prevent alloc_node_id to success before get_config succeeds 	790ec0f6ee9a3d1b17f4c63310e752625c7b8106
----------------------------
Merge: e78a452 3712d6c Merge from mysql-5.5 for sys_vars.innodb_max_dirty_pages_pct_func fails sporadically 	9146793acf0138c74ce4db1bb5434116c7114edc
----------------------------
Merge: f6e9720 f25ab9f Merge from mysql-5.1 for sys_vars.innodb_max_dirty_pages_pct_func fails sporadically 	3712d6c12ff8054c7b2d7c11334e70891978e62b
----------------------------
"BUG#58858 : sys_vars.innodb_max_dirty_pages_pct_func fails sporadically Committing After latest merge. Modified check_pct procedure to check return value of wait condition instead of calling ""dirty_pct"". Adding Review comments: 1) Added comment for success variable value 2) Procedure check_pct changed For Adding BOOLEAN input and SELECT QUERY Change "	f25ab9fe22cd7823a65fd186aa0e6d4d2ea9be91
----------------------------
BUG#42879: CHANGE MASTER RELAY_LOG_FILE=path fails on windows Re-enabling the test case on windows since BUG#12190 has fixed the issue. 	f6e9720f3c7204b7a755109c5d3f08e3a919bec2
----------------------------
BUG#59499: mtr check fails for some replication tests due to ipv6 By the time mtr processes the test file completely, the slave's parameter MASTER_HOST exhibits a different value from the one that was set when mtr had started processing the file. This was caused by test cases that mess around with CHANGE MASTER TO MASTER_HOST=... command and never restore the variable to its original value (instead they restore it to a default value that varies depending on ipv6 is available or not). We fix this by saving (at the beginning) and restoring back (at the end) the value for MASTER_HOST slave configuration parameter. 	fc9a8806cbd07960e8ef85ba9d9ba517dcc5a3cd
----------------------------
BUG#57953 my_load_defaults return junk argument ----args-separator---- to caller After fix of bug#25192, load_defaults() will add an args separator to distinguish options loaded from configure files from that provided in the command line. One problem of this is that the args separator would be added no matter the application need it or not. Fixed the problem by adding an option: bool my_getopt_use_args_separator; to control whether the separator will be added or not. And also added functions: bool my_getopt_is_args_separator(const char* arg); to check if the argument is the separator or not. 	b695495ea7ad57b2f2b4e7f73c179b7c3d056402
----------------------------
Bug#46393 If for slow_query_log a string is entered it does not complain. For all the boolean system variables we now issue warnings if the value wasn't recognized. Before that we just silently set them to FALSE in this case. per-file comments: mysys/my_getopt.c Bug #46393 If for slow_query_log a string is entered it does not complain. warning issued if no documented value was specified. 	0e2211e927aab0b20eab14a504f20ad80d000243
----------------------------
"Fix Bug#30423 ""InnoDBs treatment of NULL in index stats causes bad ""rows examined"" estimates"". This change implements ""innodb_stats_method"" with options of ""nulls_equal"", ""nulls_unequal"" and ""null_ignored"". rb://553 approved by Marko "	669ce69483b801599f9dfd9890b4dbb2e60ff03e
----------------------------
Bug#56895 part 2 of 2: Backport of revid holyfoot@mysql.com-20100825135522-8wrjjmvh2u2t0qo6 from mysql-5.5. Without this patch mysqlhotcopy tests would fail due to not finding the mysqlhotcopy tool in release-like builds. With this patch the tests would either pass, or fail due to missing Perl modules (see 56817). Text conflict in mysql-test/mysql-test-run.pl: - resolved by using logic from 5.5 to find mysqlhotcopy, the intention of this backport. Changed bindir to basedir. 	4a62ee2c95e93b2a985aef44ca4fb78cd941b1de
----------------------------
ndb - add support for compiling ha_ndbcluster against a server without --server-id-bits 	6a40c371304a827cc72abf726dd1ea74efb128d4
----------------------------
ndb - adapt to Relay_log_info changes in 5.6 - Master_info's rli member returns Relay_log_info* - Relay_log_info members are protected and must be accessed using accessor functions - Write ifdefs locally, since the patch then is well isolated 	84437a65d5efe027d0ee3b9a0efdfba20ed5382e
----------------------------
"Fix for BUG#59432 ""--autocommit=on does not work (@@global.autocommit is 0)"" "	b2c4b4636a50eb48c962a47314bbd92501c0fd6f
----------------------------
BUG#59444: rpl_row_show_relaylog_events fails on daily-5.5 test runs The test started failing on the same day patch for BUG 49978 was pushed. BUG 49978 changed part of the replication testing infrastructure in mysql-test-run. This caused the test to fail sporadically with result differences on relay log file names. When the test fails the relay-log filenames are shifted by one, eg: -show relaylog events in 'slave-relay-bin.000002' from <binlog_start>; +show relaylog events in 'slave-relay-bin.000003' from <binlog_start>; The problem was caused by a bad cleanup when using the include files: - include/setup_fake_relay_log.inc - include/cleanup_fake_relay_log.inc Which would leave a spurious relay-log file around (not listed in slave-relay-bin.index), causing the server to shift the name of the relay logs by one, even if cleaning up with RESET SLAVE. We fix this by removing the relay-log file when it is not needed anymore, ie at setup time and after recreating the fake relay-log index. Additionally, to make the affected test more resilient, we deployed a call to rpl_reset.inc (which resets both master and slave, including log files) before actually running the test case. Finally, appart from the reported bug, we also fix: (a) an unrelated issue with the failing test itself - in some cases, the test was not setting the log file name to use when it should; (b) one typo. 	ac8e0ec1b18e4f16e4db06c2d1b246612df83857
----------------------------
BUG#59267 LOAD DATA LOCAL INFILE not executed on slave with SBR On windows, an #endif in a wrong place was causing an early return from mysql_load and thus the LOAD DATA LOCAL was not executed. This problem was fixed by moving the #endif to the right place. The following code was missing if ((stat_info.st_mode & S_IFIFO) == S_IFIFO) is_fifo = 1; which is required to properly configure and read from the IO_CACHE when a named pipe is used. So it was re-introduced before the #endif. 	c04979b84127ef8aa435368d1281bfb4322e0054
----------------------------
ndb - newly added asserts to NdbMutex detected that ConfigManager-thread exits while keeping a mutex...add unlock prior to exiting thread 	8634ad57974141db6aa1af0ba2f5df87942f4ccd
----------------------------
"Fixed Bug#58887	- server not throwing ""Packet too large"" error if max_allowed_packet >= 16M. This bug was introduced by patch for bug#42503. This patch restores behaviour that there was before patch for bug#42503 was applied. "	5bd50b80a75d4d5246e40d032e14397bcde036bb
----------------------------
"Bug #59017: Auth plugin socket_peercred fails to load in 5.5.8 Due to how the server checks for option names the name of the plugin ""socket_peercred"" collides with the existing server side option ""socket"". Renamed the plugin from ""socket_peercred"" to ""auth_socket"" to avoid the name clash. "	91a2afcbcba8af28d2f10f80830b543654151556
----------------------------
Remove configuration preprocessor symbols 'THREAD' and 'THREAD_SAFE_CLIENT'. As of MySQL 5.5, we no longer support non-threaded builds.   This patch removes all references to the obsolete THREAD and THREAD_SAFE_CLIENT preprocessor symbols.  These were used to distinguish between threaded and non-threaded builds. 	ebd24626ca38e7fa1e3da2acdcf88540be70fabe
----------------------------
ndb - add #cmakedefines for new configure checks to ndb_config.h.in 	a8568f2432845c4af8d8273e034b5fe7d858dc64
----------------------------
BUG#59123 rpl_stm_binlog_max_cache_size fails sporadically with found warnings rpl_stm_binlog_max_cache_size.test fails sporadically on PB2 daily-trunk-bugfixing with binlog-checksum enabled, the expected incident error message was not properly suppressed, and the incident message would have extra strange characters appended. The cause is that the incident error message restored from log event is not properly ended with '\0'. This does not cause problem normally because the error message is at the end of the event, and we add a '\0' at the end of an event. but when binlog-checksum is enabled, the checksum value will be after the message, and so extra strange characters could be shown and cause the suppression rule to fail. Fixed the problem by allocate memory for the string and added '\0' at the end of the message. 	81dd79a75fe83b147cd52ad3257916abfa299abe
----------------------------
WL#5597 Fixing broken tests cases: - sys_vars.all_vars - sys_vars.slave_rows_search_algorithms_basic - main.mysqld--help-win 	d1efde26d621b94fd7570f400898137175028a0c
----------------------------
"Bug#51631 general-log flag doesn't accept ""on"" as a value in the my.cnf, works as command Different parsing mechanisms are used for command line/my.cnf options  and the SQL commands.  The former only accepted numeric arguments, and regarded all numbers different from 0 as 'true'.  Any other argument was parsed as 'false' . This patch adds the words 'true' and 'on' as valid truth values for boolean option arguments. A test case is not provided, as the fix is simple and does not warrant a separate test file (no existing suitable test file was found) (backported from mysql-trunk) "	d690da668ee7b46d50afc28dd8076682523ecfa4
----------------------------
ndb - add configure checks for __builtin_ffs and ffs 	84b12acb2b86b4a71e8e9a06be0be536b3317712
----------------------------
WL#5371 PERFORMANCE_SCHEMA Instrumenting Table Locks WL#5379 PERFORMANCE SCHEMA TABLE / INDEX IO SUMMARY WL#5420 PERFORMANCE SCHEMA TABLE LOCK WAIT SUMMARY Code cleanup, implemented a visitor pattern to reduce code duplication. 	58d53f7a58b13a5b1a689736b9d9858aad92e188
----------------------------
Followup to vasil.dimov@oracle.com-20110107091222-q23qpb5skev0j9gc Do not use nested AC_CHECK_FUNC() because they result in: ./configure: line 52688: syntax error: unexpected end of file (which happens only on some platforms and does not happen on others, I have no idea what is the reason for this) 	c4aee1b45a7b435dc5ea55a47a79052eb6dd7bcf
----------------------------
"Fix for Bug#47745 innodb.innodb-timeout fails sporadically - Second scenario checked: Ensure via wait routines that the commit comes after the processing of the statement which should get finally the ER_LOCK_WAIT_TIMEOUT --> This should prevent the current bug. - First scenario checked: Ensure via wait routines that the statement is already waiting for getting the lock before the commit is given. --> No effect on the current bug, but ensure that the right scenario is reached. - Take care that disconnects are finished before the test ends. --> Reduce the potential to harm succeeding tests. - ""Mangle"" the printout of the current default innodb_lock_wait_timeout value --> No need to adjust the test in case the default gets changed in future. "	d09ed4e08ce6dfeba6caf239e4649cdcd2c69b9d
----------------------------
Remove configuration preprocessor symbols 'THREAD' and 'THREAD_SAFE_CLIENT'. As of MySQL 5.5, we no longer support non-threaded builds.   This patch removes all references to the obsolete THREAD and THREAD_SAFE_CLIENT preprocessor symbols.  These were used to distinguish between threaded and non-threaded builds. 	bad28ea48c0cd6786001916df04ae78d92d9e2d4
----------------------------
"PS-instrument the array of latches (rw locks) dict_table_stats_latches[]. This adds 64 new rows to performance_schema.rwlock_instances. This patch will make perfschema.binlog_mix perfschema.binlog_row tests fail, but they will be fixed by http://lists.mysql.com/commits/127862 Approved by:	Jimmy (rb://554) "	99e5d278a30491f6c9f4490ae972aad3a61dee8b
----------------------------
Added command line options to the runall.sh script, such that paths, hostname, port number etc. may be specified on the command line. 	b6f4b8038b754e0b1001bc12a5095678f5c8069b
----------------------------
BUG#59079 rpl_binlog_errors.test fails when enables binlog-checksum The test case dependent on the size of incident event to calculate the event offset, howerver, the size of Incident_log_event is different when binlog-checksum is enabled, and caused the test case to fail. Fixed the problem by use the event sequence number instead event log file position to locate the incident event. 	c11f3308c9d73c87c299c0a2569d91f18ef80e7c
----------------------------
"Merge: b78e148 bcd47f4 Bug #56662  	Assertion failed: next_insert_id == 0, file .\handler.cc Normally, auto_increment value is generated for the column by inserting either NULL or 0 into it. NO_AUTO_VALUE_ON_ZERO suppresses this behavior for 0 so that only NULL generates the auto_increment value. This behavior is also followed by a slave, specifically by the SQL Thread, when applying events in the statement format from a master. However, when applying events in the row format, the flag was ignored thus causing an assertion failure: ""Assertion failed: next_insert_id == 0, file .\handler.cc"" In fact, we never need to generate a auto_increment value for the column when applying events in row format on slave. So we don't allow it to happen by using 'MODE_NO_AUTO_VALUE_ON_ZERO'. Refactoring: Get rid of all the sql_mode checks to rows_log_event when applying it for avoiding problems caused by the inconsistency of the sql_mode on slave and master as the sql_mode is not set for Rows_log_event. "	bf3c483df5923638cde0a871a113921786923939
----------------------------
"Merge: 9d3b24d 16ca2de Bug #56662  	Assertion failed: next_insert_id == 0, file .\handler.cc Normally, auto_increment value is generated for the column by inserting either NULL or 0 into it. NO_AUTO_VALUE_ON_ZERO suppresses this behavior for 0 so that only NULL generates the auto_increment value. This behavior is also followed by a slave, specifically by the SQL Thread, when applying events in the statement format from a master. However, when applying events in the row format, the flag was ignored thus causing an assertion failure: ""Assertion failed: next_insert_id == 0, file .\handler.cc"" In fact, we never need to generate a auto_increment value for the column when applying events in row format on slave. So we don't allow it to happen by using 'MODE_NO_AUTO_VALUE_ON_ZERO'. Refactoring: Get rid of all the sql_mode checks to rows_log_event when applying it for avoiding problems caused by the inconsistency of the sql_mode on slave and master as the sql_mode is not set for Rows_log_event. "	bcd47f4148043bb8b33c5467066ed5300d3443eb
----------------------------
"Bug #56662  	Assertion failed: next_insert_id == 0, file .\handler.cc Normally, auto_increment value is generated for the column by inserting either NULL or 0 into it. NO_AUTO_VALUE_ON_ZERO suppresses this behavior for 0 so that only NULL generates the auto_increment value. This behavior is also followed by a slave, specifically by the SQL Thread, when applying events in the statement format from a master. However, when applying events in the row format, the flag was ignored thus causing an assertion failure: ""Assertion failed: next_insert_id == 0, file .\handler.cc"" In fact, we never need to generate a auto_increment value for the column when applying events in row format on slave. So we don't allow it to happen by using 'MODE_NO_AUTO_VALUE_ON_ZERO'. Refactoring: Get rid of all the sql_mode checks to rows_log_event when applying it for avoiding problems caused by the inconsistency of the sql_mode on slave and master as the sql_mode is not set for Rows_log_event. "	16ca2deb90723d87309ab4c27208389db6754cfa
----------------------------
Fixed pb failure. Problem: Warnings for truncated data were generated on hosts with long host names because @@hostname was inserted into a CHAR(40) column. Fix: Change CHAR(40) to TEXT. 	c676f125a216d29660fff88b0c3dee947d3904d9
----------------------------
BUG#49978: Replication tests don't clean up replication state at the end Major replication test framework cleanup. This does the following: - Ensure that all tests clean up the replication state when they finish, by making check-testcase check the output of SHOW SLAVE STATUS. This implies: - Slave must not be running after test finished. This is good because it removes the risk for sporadic errors in subsequent tests when a test forgets to sync correctly. - Slave SQL and IO errors must be cleared when test ends. This is good because we will notice if a test gets an unexpected error in the slave threads near the end. - We no longer have to clean up before a test starts. - Ensure that all tests that wait for an error in one of the slave threads waits for a specific error. It is no longer possible to source wait_for_slave_[sql|io]_to_stop.inc when there is an error in one of the slave threads. This is good because: - If a test expects an error but there is a bug that causes another error to happen, or if it stops the slave thread without an error, then we will notice. - When developing tests, wait_for_*_to_[start|stop].inc will fail immediately if there is an error in the relevant slave thread. Before this patch, we had to wait for the timeout. - Remove duplicated and repeated code for setting up unusual replication topologies. Now, there is a single file that is capable of setting up arbitrary topologies (include/rpl_init.inc, but include/master-slave.inc is still available for the most common topology). Tests can now end with include/rpl_end.inc, which will clean up correctly no matter what topology is used. The topology can be changed with include/rpl_change_topology.inc. - Improved debug information when tests fail. This includes: - debug info is printed on all servers configured by include/rpl_init.inc - User can set $rpl_debug=1, which makes auxiliary replication files print relevant debug info. - Improved documentation for all auxiliary replication files. Now they describe purpose, usage, parameters, and side effects. - Many small code cleanups: - Made have_innodb.inc output a sensible error message. - Moved contents of rpl000017-slave.sh into rpl000017.test - Added mysqltest variables that expose the current state of disable_warnings/enable_warnings and friends. - Too many to list here: see per-file comments for details. 	09c80e12c535b080eaf914ed25dbf79546494030
----------------------------
bug#51925: 5.5 installed header file layout is incorrect The 'mysql' include sub-directory was copied directly into include/ rather than retaining its own directory. Fix this, and update mysql_config which needs additional logic to detect the correct prefix for includes. 	a3deb16810cef3181350e77c87f33fc044ced0b1
----------------------------
bug#51264: MySQL.prefPane fails to run @prefix@ was erroneously set to '.' with the STANDALONE install layout, when it should instead be set to CMAKE_INSTALL_PREFIX, this was likely accidentally copied from scripts/CMakeLists.txt which has similar handling specifically for mysql_install_db.sh mysql.server init script can now find the install, assuming the defaults have been chosen. 	2b39e065d70078daa097a811c939003a071dcb70
----------------------------
"Bug #57918  	rpl_get_master_version_and_clock times out sporadically The reason is that sometimes the slave is unblocked before the master server is really shutdown. Symptom 1, found warnings/errors in server log file. In the situation, the 'get_master_version_and_clock' func will return normally instead of network error expected. Then the 'handle_slave_io' func will go to invoke 'get_master_uuid' func, which will return normally if the master server is still alive. Then the process will go on until invoke 'request_dump' func, which will print the ""Error on COM_BINLOG_DUMP: 2003  Can't connect to MySQL server on '127.0.0.1' (111), will retry in 1 secs"" error as symptom reported if the server is really shutdown in the moment, while the test is waiting for the network error. Symptom 2, timeout after 900 seconds In the situation, the 'get_master_version_and_clock', get_master_uuid, and 'request_dump' funcs will return normally if the master server is alive during the period, then the 'handle_slave_io' func will enter 'while (!io_slave_killed(thd,mi))' block and exit with error when fail to reconnect master, which is really shutdown at that time. Then the test will not have a chance to start master, because during the period it will stall there to wait for a network error until it exits with a timeout error. To fix these problems, we source wait_until_disconnected.inc after shutdown master server for guaranteeing the master server is really shutdown before the slave is unblocked. "	44b329d8b5809bfc916a838ead59dadebd61411c
----------------------------
BUG#58948 - Valgrind warning in do_handle_one_connection() Fixed that proxy_user may be used uninitialized. 	cb2e57c788497b06d63894d23e10c60afbc5a70a
----------------------------
BUG#57482: server_uuid fails on PB2 Removed entries from the experimental list. 	6cf74e1915ee3228adfc776f9fc8404e2b8955e9
----------------------------
"Bug58747 57359 patch: breaks secure_file_priv+not secure yet+still accesses other folders ""load data infile ..""  allowed for access to unautohorized tables. Due to a faulty if-statement it was possible to circumvent the secure_file_priv restriction. "	bef12c6ed125264efd236f9e731a8875f62929fb
----------------------------
bug#58955: Must -DBUILD_CONFIG=mysql_release require libaio on Linux Allow users to build without aio if they really want to, by passing -DIGNORE_AIO_CHECK to cmake. 	caebacaf93a758f5a35f85cb814a5b76402a1f3d
----------------------------
Bug#58953: 5.5 does not build with -DWITHOUT_PERFSCHEMA_STORAGE_ENGINE=1 The MYSQL_LOG::open member function does not take a PSI key file argument when the PSI interface is not present. 	eb5a21dd909b2001235c7b8cf05075ebc170f6ea
----------------------------
BuG#58913: rpl_lcase_tblnames_rewrite_db & rpl_stm_lcase_tblnames fails on Mac OSX The following three test cases fail on Mac OSX because they assume that the lower_case_table_names is set to 0 on the master by default (which is not the case on MacOSX - defaults to 2 - nor on Windows - defaults to 1): - rpl.rpl_row_lcase_tblnames - rpl.rpl_stm_lcase_tblnames - rpl.rpl_lcase_tblnames_rewrite_db This causes a result mismatch when the tests are run on such platforms. However, the tests are configured to be skipped on windows, so this issue does not show up on that platform, only on Mac OSX. We fix this by masking out the part of the result that is different on Mac OSX and other platforms. 	de31c640682a59dcada53aa9cd4c03f0ce841608
----------------------------
Bug #58914: Valgrind warning in rpl_make_log_name() Adding calls to my_free to free the memory allocated for: - log_bin_basename - log_bin_index - relay_log_basename - relay_log_index 	6308d4cca31b4a8a690c975ab3b386e1c9b250cb
----------------------------
WL#4616 UTF16-LE Additional patch. Recording updated test results for funcs_1 and sys_vars. @ mysql-test/suite/funcs_1/r/innodb_func_view.result @ mysql-test/suite/funcs_1/r/memory_func_view.result @ mysql-test/suite/funcs_1/r/myisam_func_view.result @ mysql-test/suite/sys_vars/r/character_set_client_basic.result @ mysql-test/suite/sys_vars/r/character_set_connection_basic.result @ mysql-test/suite/sys_vars/r/character_set_database_basic.result @ mysql-test/suite/sys_vars/r/character_set_filesystem_basic.result @ mysql-test/suite/sys_vars/r/character_set_results_basic.result Recording updated test results. 	f40191295e6cae48a9f18df8633faa3e0c57e336
----------------------------
WL#5217: Add explicit partition selection Implement 'PARTITION (<list of partitions>)' clause for SELECT, DELETE, UPDATE, INSERT, LOAD, like SELECT * FROM t PARTITION (pFirst); Including pruning of locking. Also includes adding HANDLER_EXTERNAL_LOCK_COUNT status variable, to be able to test and monitor lock pruning. 	7e924138433f04856432062ffefa12e6cb6faacb
----------------------------
"WL#4616 UTF16-LE added: @ mysql-test/include/ctype_heap.inc @ mysql-test/r/ctype_utf16le.result @ mysql-test/t/ctype_utf16le.test Adding rests modified: @ cmake/character_sets.cmake Adding utf16le into the list of the possible default character sets and into the list of complex character sets. @ include/m_ctype.h Adding prototype for global variables @ mysql-test/r/ctype_utf16.result Conversion from binary to utf16 did not work well. Warning did not work well. Recording new results @ mysql-test/r/ctype_utf32.result Warning did not work well. Recording new results @ mysys/charset-def.c Adding initialization for utf16le collations @ sql/item.cc Warning did not work well for non-ASCII based character sets. Adding ErrConvString. @ sql/item_func.cc Error message about bad truncated number in CAST(string AS SIGNED) did not work well (a missing part of ""WL#751 Error message construction""). @ sql/sql_string.cc Conversion from binary to utf16 and utf16le did not work well. 0x61 was incorrectly extended to 0x00000061 instead of 0x0061. @ sql/sys_vars.cc ""SET collation_connection=utf16_general_ci"" followed by ""SET NAMES 'latin1'"" did not work well, because get_charset_by_csname('latin1') was called with utf16 representation of 'latin1' string. Fixing val_str() to val_str_ascii() to always call get_charset_by_csname() with 8-bit representation. Fixing the similar problem for get_charset_by_name(). @ strings/ctype-ucs2.c - Changing my_strtoll10_mb2 from accessing memory directly using s[0] and s[1] to mb_wc() method, to reuse the same code for utf16le. - Adding useful macro for surrogate high/low first/last values. - Adding macros MY_UTF16_WC2 and MY_UTF16_WC4, to make some utf16 routines more readable. - Fixing my_caseup_utf16, my_hash_sort_utf16, my_ismbchar_utf16, my_strnncoll_utf16_bin, my_hash_sort_utf16_bin to use cs->cset->mb_wc instead of dirrect call to my_utf16_uni, to reuse the code. - Fixing my_hash_sort_utf16 and my_hash_sort_utf16_bin to use lengthsp() instead of direct memory access to reuse the code for utf16le. - Adding low level utf16le functions my_utf16le_uni, my_uni_utf16le, my_lengthsp_utf16le. These are the only three new functions. All other functions reuse utf16/ucs2 code. - Adding utf16le structures. "	424c33f58633e86780c05600c94baea13909a705
----------------------------
"Implement WL#5674 InnoDB: report all deadlocks (Bug#1784) Bug#1784 ability to log details on all deadlocks When InnoDB encounters a deadlock it prints the information to a dedicated file. Later when SHOW ENGINE INNODB STATUS is called, it reads the data from this file and sends it to the user. When a new deadlock occurs, the dedicated file is rewind(3)ed and the information about the new deadlock is printed into it. The implementation of this WorkLog simply duplicates what is printed into the dedicated file into stderr. A new configuration parameter is added --innodb-print-all-deadlocks (off by default) which when enabled causes the deadlock info to be printed to stderr. Approved by:	Jimmy (rb://533) "	8bbb9e8ec596d885a70008ee1f03cd4b92ee4557
----------------------------
Bug#39828 : Autoinc wraps around when offset and increment > 1 Auto increment value wraps when performing a bulk insert with auto_increment_increment and auto_increment_offset greater than one. The fix: If overflow happened then return MAX_ULONGLONG value as an indication of overflow and check this before storing the value into the field in update_auto_increment(). 	0e77c3295a83eaaf3ac37e13c4d2c7a467add12e
----------------------------
55222 - Previous patch had a bug in unused code which was reactivated in mysql-trunk-innodb in rev revno: 3367  Tue 2010-12-07 02:25:25-0800. The crash happens only when lower_case_table_names=2, such as on MacOS, when running the new testcase innodb-system-table-view.  Specifically, it crashes when any query is made against the INFORMATION_SCHEMA. INNODB_SYS_FOREIGN table.  The function dict_process_sys_foreign_rec() is only used for displaying SYS_FOREIGN records so it does not need a lookup version of those names to be allocated. In this patch, those new function calls are deleted. 	9fef50565ef86ab4660a4cd38a756caa42e7a8e0
----------------------------
WL#5371 PERFORMANCE_SCHEMA Instrumenting Table Locks WL#5379 PERFORMANCE SCHEMA TABLE / INDEX IO SUMMARY WL#5420 PERFORMANCE SCHEMA TABLE LOCK WAIT SUMMARY New test cases for table io and table lock aggregates. 	40f665ace01115537540af9047be1b390fd451c8
----------------------------
WL#5371 PERFORMANCE_SCHEMA Instrumenting Table Locks WL#5379 PERFORMANCE SCHEMA TABLE / INDEX IO SUMMARY WL#5420 PERFORMANCE SCHEMA TABLE LOCK WAIT SUMMARY Implementation of table io and table lock aggregates. 	91f0b6695a9a90a5d0afaa0ae4f33c83f63b3df0
----------------------------
Bug#58798 SHOW ENGINE PERFORMANCE_SCHEMA STATUS: incorrect table lettercase Before this fix, the output of SHOW ENGINE PERFORMANCE_SCHEMA STATUS used uppercase to name performance schema tables. This is inconsistent since performance schema tables have been renamed to lowercase. Also, an old table 'PROCESSLIST' was still visible, even after this table got renamed to 'threads'. This fix: - correctly uses lowercases in the output, to match the current naming. - replaced 'PROCESSLIST' with 'threads'. Tested the output of SHOW ENGINE PERFORMANCE_SCHEMA STATUS manually. No automated test cases can be written for this, since the output is too platform dependent (sizes). 	537366fd24cd383c8c11cda060957ff604a65d6b
----------------------------
Fix for bug #58669: read_only not enforced on 5.5.x merged from mysql-5.5.8-release tree, revision: ramil@mysql.com-20101203174908-217tdkn150vieha9 	d33574fbf747aac57fc9f16b669ee92ad66d06f6
----------------------------
BUG#58762: rpl.rpl_packet fails in the weekly PB2 run The test contains an assertion that depends on an exact match on mysqlbinlog output. However, mysqlbinlog output changes when checksums are ON, because it adds the checksum description as well. This makes the test case to fail when running it with --mysqld=--binlog-checksum=... The fix is to rewrite the assertion so that the pattern matching is made crc agnostic. To do this we resort to perl instead of mysql text function INSTR. 	11de29db11f56b70b953c1df1ca642a695a0255e
----------------------------
Merge: 22ccfaa 304d9a6 Merge opt-backporting => opt-team Text conflict in mysql-test/r/index_merge_myisam.result Text conflict in mysql-test/r/mysqld--help-notwin.result Text conflict in mysql-test/r/mysqld--help-win.result Text conflict in mysql-test/suite/sys_vars/r/optimizer_switch_basic.result Failing test(s): main.index_merge_myisam main.join_cache_jcl4 main.myisam_mrr main.myisam_mrr_cost main.myisam_mrr_cost_icp main.myisam_mrr_icp main.mysqld--help-notwin sys_vars.optimizer_switch_basic 	993bc51372c36057d1b459f34fc264cdc9fcd0fa
----------------------------
"Fix for bug #58669: read_only not enforced on 5.5.x Problem: ""read-only"" option ignored if it's enabled in the command line (or in the config file). Fix: sync opt_readonly (which is used for checks) with read_only (global var) when all server options are handled. "	93efc7e2c4bc8cffa235f2406db3bdaf4180189d
----------------------------
Bug#58172 Column performance_schema.threads.processlist_time out of range Before this fix, the column processlist_time in table performance_schema.threads could receive out of range values. Some negative time was computed, because timers may have some drift and are not guaranteed to be always monotonous. This fix replaces negative time values with 0, to correct the data, and make the data fit into an unsigned column. 	ad736e885878a72a4b02a72ad38c3435713ab3f6
----------------------------
Addendum patch for bug#58628: Update of result file due to changed (improved) behaviour when constructing a REF key from 'out of bound' values. As the main fix will cause failing const key value ::copy() to be reevaluate inside JOIN::exec(), we will detect out of bound values (which will form an illegal/undefined REF key) before executing the access request. Previously these const REF keys was produced by JOIN::optimize() and any conversion/range errors was ignored. - Possibly causing undefined keys to be produced. These access request may then be ignored wo/ a Handler_read_key request being executed. 	1f6e76c2deb0892d9fc04eea12f57268873cd68f
----------------------------
ndb - fix rare bug with conflicting file-names for config-testing 	b1fb69578a184a43bba4b5e7292673afbaaf34c3
----------------------------
Merge: 4a6832e 357df02 Merge next-mr-opt-backporting => next-mr-opt-team Text conflict in mysql-test/r/index_merge_myisam.result Text conflict in mysql-test/r/mysqld--help-notwin.result Text conflict in mysql-test/r/mysqld--help-win.result Text conflict in mysql-test/suite/sys_vars/r/optimizer_switch_basic.result Failing test(s): main.join_cache_jcl1 main.join_cache_jcl2 main.join_cache_jcl3 main.join_cache_jcl4 	e9b7aef155d415a7adfb9a956f5be03e65031a14
----------------------------
Bug#58512 Performance_schema.myisam_file_io fails sporadically in PB2 Before this fix, the test myisam_file_io executed: - (a) an update on setup_instrument to disable non myisam file io instruments - (b) a truncate on events_waits_history_long and later - (c) a select on events_waits_history_long Surprisingly, events that were supposed to be disabled in (a) and removed in (b) still were found in (c). This happened for events such as wait/io/file/innodb/innodb_data_file fil0fil.c: sync because the sync was started before (a) and completed after (b), and as a consequence was added in the performance schema history, as expected. Presence of these records in the history made the test fail. This fix makes the test script more robust to account for extra spill waits records in (c). 	b12eb4a11a66c651f39ea73f3ce5f7e72738da59
----------------------------
Bug#55222 - RB://517 - Approved by Sunny InnoDB does not attempt to handle lower_case_table_names == 2 when looking up foreign table names and referenced table name.  It turned that server variable into a boolean and ignored the possibility of it being '2'. The setting lower_case_table_names == 2 means that it should be stored and displayed in mixed case as given, but compared internally in lower case. Normally the server deals with this since it stores table names.  But InnoDB stores referential constraints for the server, so it needs to keep track of both lower case and given names. This solution creates two table name pointers for each foreign and referenced table name.  One to display the name, and one to look it up.  Both pointers point to the same allocated string unless this setting is 2.  So the overhead added is not too much. Two functions are created in dict0mem.c to populate the ..._lookup versions of these pointers.  Both dict_mem_foreign_table_name_lookup_set() and dict_mem_referenced_table_name_lookup_set() are called 5 times each. 	a53845ca4571210168f419ba12b098f0faddf463
----------------------------
"WL#5692 ""Enable Disk-Sweep Multi-Range Read optimizer feature"". This patch contains the second part of this worklog. With this change the MySQL server will be built with support for the Multi-Range Read (MRR) feature. The default will be that cost-based MRR will be enabled. The following changes to MySQL are implemented: 1. Enable disk-sweep Multi-Range Read for MyISAM and InnoDB With this feature enabled the optimizer will consider to use the disk-sweep multi-range read strategy when reading a range of records using a secondary index. The decision whether to use MRR or not is (by default) cost-based. The disk-sweep MRR strategy is implemented for MyISAM and InnoDB. The main change by enabling MRR should be improved performance for range queries that needs to access records from the base table using a secondary index when the base table requires disk-access. The user should be able to see if MRR has been used by looking in the ""Extra"" column of the EXPLAIN output. If this field contains the string ""Using MRR"" then MRR will be used. 2. Enable the user to control the use of Multi-Range Read When MRR has been enabled the user will be able to control the use of MRR by using two optimizer_switch configuration variables: * mrr: if this is on then MRR is available for use by the optimizer The default value is ""on"". * mrr_cost_based: This determines whether the use of MRR should be based on cost estimates done by the optimizer (value: on) or if MRR should always be used (value: off). The default value is ""on"". "	304d9a67768965b18ceebb46dfd276fa2129c037
----------------------------
Bug #58414 mysql_upgrade fails on dump upgrade between 5.1.53 -> 5.5.8 The problem was that mysql_upgrade failed because DROP DATABASE refused to drop the 'performance_schema' database when the mysql.proc table definition was made temporarily invalid by dump import. This patch fixes the problem by adding the error resulting from opening a damaged mysq.proc table (ER_CANNOT_LOAD_FROM_TABLE), to the list of errors DROP DATABASE will ignore when trying to lock stored procedures and functions before deletion. This problem was a regression introduced by the patch for Bug#57663. Test case added to sp-destruct.test. 	a186085a077c3f22827496a86c4029c8fd1384af
----------------------------
"BUG#57288: binlog_tmp_table fails sporadically: ""Failed to write the DROP statement ..."" Problem: When using temporary tables and closing a session, an implicit DROP TEMPORARY TABLE IF EXISTS is written to the binary log (while cleaning up the context of the session THD - see: sql_class.cc:THD::cleanup which calls close_temporary_tables). close_temporary_tables, first checks if the binary log is opened and then proceeds to creating the DROP statements. Then, such statements, are written to the binary log through MYSQL_BIN_LOG::write(Log_event *). Inside, there is another check if the binary log is opened and if not an error is returned. This is where the faulty behavior is triggered. Given that the test case replays a binary log, with temp tables statements, and right after it issues RESET MASTER, there is a chance that is_open will report false (when the mysql session is closed and the temporary tables are written). is_open may return false, because MYSQL_BIN_LOG::reset_logs is not setting the correct flag (LOG_CLOSE_TO_BE_OPENED), on the MYSQL_LOG_BIN::log_state (instead it sets just the LOG_CLOSE_INDEX flag, leaving the log_state to LOG_CLOSED). Thence, when writing the DROP statement as part of the THD::cleanup, the thread could get a return value of false for is_open - inside MYSQL_BIN_LOG::write, ultimately reporting that it can't write the event to the binary log. Fix: We fix this by adding the correct flag, missing in the second close. "	23636330c96cfc158881393cd1a99bcc069cd75f
----------------------------
"WL#5692 Enable Disk-Sweep Multi-Range Read optimizer feature. This patch contains the first part of this worklog. It changes the default value of the optimizer switch ""mrr_cost_based"" from being off as default to be on by default. To ensure that both non-cost-based MRR and cost-based MRR get tested the following changes are done to our MRR tests: 1. to ensure MRR code get tested: the optimizer_switch flag mrr_cost_based is set to off in test that specifically is named to test MRR (these have _mrr or _all in their name). 2. to ensure cost-based MRR get tested: New versions of existing MRR tests are added. These have added _mrr_cost in their test name. "	357df02b871f38d6f9fd56464bfcbe16b4fb22a5
----------------------------
BUG#47699 Postfix, moved the test for this bug from rpl_slave_status to rpl_slave_start.test. As the other tests in rpl_slave_status don't need debug_sync. 	86b75eca5fce0c2ec4e0a97519dbb53f802f0a21
----------------------------
Bug #58455 Starting mysqld with defaults file without extension cause segmentation fault Not running mysqld--defaults-file on Windows since it was not designed for it. 	d06f18721f33e10fef6e8c65adcf085d25625108
----------------------------
BUG#57035: 'ulonglong sql_mode' stored into ulong, is risky and causes compiler warning Post-push fix. 	d1f0f57d522b19360597529149fdfa935dcb9b92
----------------------------
Merge: 0939d89 03786c9 BUG#45441: MySQL should have a datetime for the last slave heartbeat Merging Andrew's patch to latest mysql-trunk-bugfixing. Had to do a minor change in show_slave_last_heartbeat, to remove pthread_mutex_(un)lock and replace it with mysql_mutex_(un)lock. 	13413c71407c2dcda3efd406afb50f3e1437b8f3
----------------------------
"Bug #57035 'ulonglong sql_mode' stored into ulong, is risky and causes compiler warning In 5.5 THD::variables::sql_mode was changed from ulong to ulonglong. The problem was that several variables used to store sql_mode were still declared as ulong. This patch updates these declarations to sql_mode_t which is typedef'ed to ulonglong. The patch also adds a test case designed to break once someone adds a new SQL mode. This is done to serve as an indication that current tests which use ""SET @@sql_mode= cast(pow(2,32)-1"" to activate all SQL modes will then have to be updated. "	5e55648bd75962465af161c5d829218907d83a0b
----------------------------
ndb - Add LIBSOCKET into ndbportlib so that all users of portlib get the proper socket libraries linked in. 	67293fbe7c2226a51f40d3e2d1ddd554f1722eae
----------------------------
BUG#54903 BINLOG statement toggles session variables When using BINLOG statement to execute rows log events, session variables foreign_key_checks and unique_checks are changed temporarily.  As each rows log event has their own special session environment and its own foreign_key_checks and unique_checks can be different from current session which executing the BINLOG statement. But these variables are not restored correctly after BINLOG statement. This problem will cause that the following statements fail or generate unexpected data. In this patch, code is added to backup and restore these two variables. So BINLOG statement will not affect current session's variables again. 	abb201c131a6ea390e3f9974a603e43742c73445
----------------------------
Remove server_uuid_embedded from experimental list 	1dd64a9668cc4be54aa2bd253d307a4d738bc4a8
----------------------------
Cherry pick fix for shared_memory_base_name_basic from 5.5-bugteam 	e053f9dc4c42462dadb0955b0a28ca495f495558
----------------------------
Fix the PAUSE instruction handling in InnoDB Previously HAVE_IB_PAUSE_INSTRUCTION was never defined and thus InnoDB never used the PAUSE instruction on non-windows even if it was available. Probably the check was never migrated from autotools' storage/innobase/plug.in to storage/innobase/CMakeLists.txt. Since the check for PAUSE is done at top-level configure.cmake we can use the result from there (HAVE_PAUSE_INSTRUCTION) instead of rolling InnoDB's own HAVE_IB_PAUSE_INSTRUCTION (the check is identical anyway). 	e8cdc991cd60415cff646d410109d05f2cf3e9a4
----------------------------
ndb - mask out --server-id-bits from mysqld--help*.test since it's a variable that is only there depending on how you compile the server. 	d26a35847edebaa765da9c8d3c1f9c8a4f709db8
----------------------------
Merge: b90e069 08c9f31 Test sys_vars.shared_memory_base_name_basic used wrong path 	0afb6a48a50d7364d80632d8b625e4f759016734
----------------------------
Test sys_vars.shared_memory_base_name_basic used wrong path 	08c9f317eeaefd864186ec12ef82d9c57f516013
----------------------------
Bug#45445: cannot execute procedures with thread_stack set to 128k. Reverting the patch. 	efb1f6407361ba7978aa092cfea102b700359333
----------------------------
Bug #58171 server_uuid_embedded fails sporadically Fixed if condition to explicitly test for empty string as it used to 	fcc97722aee648eef1b87fde7ee9174e9f527044
----------------------------
Fix Bug #57804 enabling monitor counter from server configure file rb://505 approved by Sunny Bains 	62bc82defb2b31272d5005530520ced9d647bfa5
----------------------------
Supressed memory leaks in the LF_HASH, expected since shutdown_performance_schema() is not called. 	5e4873a86e22562c47e5a63907d10bfba3f9a77a
----------------------------
WL#5665: Removal of the autotools-based build system Remove some more leftovers from the initial removal: o Update relevant mentions of configure.in throughout the source code. o Remove win/configure.js, which at this point just duplicates logic already present in CMake based build system. o Remove support files which relied on the autotools build system. In any case, MySQL is no longer officially supported on SCO. o Remove files which are no longer part of the build. 	5324d10fe7a41f8f9aba989bc5a566a86af908fd
----------------------------
WL#5665: Removal of the autotools-based build system The autotools-based build system has been superseded and is being removed in order to ease the maintenance burden on developers tweaking and maintaining the build system. In order to support tools that need to extract the server version, a new file that (only) contains the server version, called VERSION, is introduced. The file contents are human and machine-readable. The format is: MYSQL_VERSION_MAJOR=5 MYSQL_VERSION_MINOR=5 MYSQL_VERSION_PATCH=8 MYSQL_VERSION_EXTRA=-rc The CMake based version extraction in cmake/mysql_version.cmake is changed to extract the version from this file. The configure to CMake wrapper is retained for backwards compatibility and to support the BUILD/ scripts. Also, a new a makefile target show-dist-name that prints the server version is introduced. 	f6deb00a56b2e87287d606aba3bcd71290d876ae
----------------------------
Bug#58313: CMake stops with VS Express if -DBUILD_CONFIG=mysql_release.cmake Bug : -DBUILD_CONFIG=mysql_release sets SIGNCODE parameter which requires singtool.exe (part of Windows SDK)  in order to be able to sign the binaries ( only if valid certificate is found). However singtool is not a part of the SDK shipped with Visual Studio Express, so the build fails claiming missing singtools.exe Fix: Do not  use SIGNCODE  wiith VC Express. Also, fix broken nmake build (*.rc files could not be compiled due to ADD_DEFINITIONS contaning C/C++ compiler specific flags) 	bf6a7d09e993de577e07a378bf6aa6ce7c0c3651
----------------------------
WL#5597 Work-in-progress. Improvements: - Placed code for handling row hashing into its own class aggregating an HASH instance. - Moved hash handling to rpl_utility.cc - Fixed a few implementation bugs that were making some tests failing. - slave idempotency and slave-skip-errors seems to be working properly. Needs more testing. 	2904345d4fe5b85d50e43820392294f84e4ecfe4
----------------------------
"Fix Bug#58279 Incorrect enabling of UNIV_DEBUG in debug builds Checking ""IF(WITH_DEBUG)"" does not work for multi-configuration CMake generators like VS or XCode. See http://forge.mysql.com/wiki/CMake#Debug-only_options "	fe136f159966de12b2a81ae53e2f1bf9574c6e16
----------------------------
"Bug #50021: Windows standard configuration files are showing Linux options/settings 1. Changed the default value for socket on Windows to the windows default 2. Removed hard-coded trailing slashes from innodb_data_home_dir and innodb_log_group_name_dir. 3. Added extra backslashes to the innodb directory example 4. Made the tempdir platform ""dependent"" 5. Fixed the comments in the .ini files 6. Removed the tmpdir from the templates and the scripts "	589428b625bdc9667d224d5e2899658519a2bf4b
----------------------------
"Bug#57306 SHOW PROCESSLIST does not display string literals well. Problem: Extended characters outside of ASCII range where not displayed properly in SHOW PROCESSLIST, because thd_info->query was always sent as system_character_set (utf8). This was wrong, because query buffer is never converted to utf8 - it is always have client character set. Fix: sending query buffer using query character set @ sql/sql_class.cc @ sql/sql_class.h Introducing a new class CSET_STRING, a LEX_STRING with character set. Adding set_query(&CSET_STRING) Adding reset_query(), to use instead of set_query(0, NULL). @ sql/event_data_objects.cc Using reset_query() @ sql/log_event.cc Using reset_query() Adding charset argument to set_query_and_id(). @ sql/slave.cc Using reset_query(). @ sql/sp_head.cc Changing backing up and restore code to use CSET_STRING. @ sql/sql_audit.h Using CSET_STRING. In the ""else"" branch it's OK not to use global_system_variables.character_set_client. &my_charset_latin1, which is set in constructor, is fine (verified with Sergey Vojtovich). @ sql/sql_insert.cc Using set_query() with proper character set: table_name is utf8. @ sql/sql_parse.cc Adding character set argument to set_query_and_id(). (This is the main point where thd->charset() is stored into thd->query_string.cs, for use in ""SHOW PROCESSLIST"".) Using reset_query(). @ sql/sql_prepare.cc Storing client character set into thd->query_string.cs. @ sql/sql_show.cc Using CSET_STRING to fetch and send charset-aware query information from threads. @ storage/myisam/ha_myisam.cc Using set_query() with proper character set: table_name is utf8. @ mysql-test/r/show_check.result @ mysql-test/t/show_check.test Adding tests "	fad763a81fce41539606d24a9a2ad1e4e20c6d68
----------------------------
ndb - move the define of NDB_PORT to ndb_config.h 	5720639c515b63799a92783b5b7538b48c3b541c
----------------------------
Bug#58272:  -DBUILD_CONFIG=mysql_release is broken with cmake 2.8.3 The reason  for the bug is that : -  we use system checks in cmake/os/mysql_release.cmake -  we include cmake/os/mysql_release.cmake using CMAKE_USER_MAKE_RULES_OVERRIDE -  this  (having system checks based on TRY_COMPILE inside file pointed by CMAKE_USER_MAKE_RULES_OVERRIDE  does not work with cmake 2.8.3, and  according to Kitware was never meant to work, it just happened to work by accident until 2.8.2 release (though, it seems not to work wiith 2.6.0 either) Related CMake bug discussing the situation: http://public.kitware.com/Bug/view.php?id=11469 The fix is to use INCLUDE instead of CMAKE_USER_MAKE_RULES_OVERRIDE as suggested by Kitware. The downside is that compile flags are not in cache, but this is  pure cosmetics. The functionality is the same,  flags are used for compiling are correct using INCLUDE. 	be93a81172071c412b5c890c06c691ce4c5054ec
----------------------------
ndb - remove config/type_ndbapi.cmake from repo and files which used it - add include/logger to global set of include files - add .current_sourcedir to includes for ndbapi 	48bc16422d9ccee368d55337231f71e46d16353c
----------------------------
ndb - don't typedef mode_t on Windows if it's already been defined by MySQL by cmake configure check in my_config.h 	2a7db62bbdf7e564d1701618e43870c9d18541ad
----------------------------
ndb - set --configdir for ndb_mgmd to ndb_mgmd's datadir 	f8bf73f0f00555b2f3ea511b3ca538a843458975
----------------------------
Merge: 2d93242 88effc9 Manual merge: mysql-trunk --> mysql-next-mr-wl2540 Conflicts ========= Text conflict in mysql-test/r/explain.result Text conflict in mysql-test/r/mysqld--help-notwin.result Text conflict in mysql-test/r/mysqld--help-win.result Text conflict in mysql-test/suite/rpl/r/rpl_mixed_binlog_max_cache_size.result Text conflict in mysql-test/suite/rpl/r/rpl_row_binlog_max_cache_size.result Text conflict in mysql-test/suite/rpl/r/rpl_stm_binlog_max_cache_size.result Text conflict in mysql-test/suite/rpl/t/disabled.def Text conflict in mysql-test/suite/sys_vars/r/max_binlog_cache_size_basic.result Text conflict in sql/mysqld.h Text conflict in sql/share/errmsg-utf8.txt 	4760ba799c38fc9fa2c63db5db41bbf2433e3d5a
----------------------------
BUG#56573: mtr has to run with --binlog-checksum=CRC32 (replication checksum enabled) Adding collections to run mysql-trunk.daily and mysql-trunk.weekly.  Both are a copy of the respective default.* collection, excpet that they have one extra mtr run with checksums enabled: - daily: suite=binlog,rpl - weekly: suite=main,binlog,innodb,federated,rpl,sys_vars,perfschema 	2d932424bf14dadb6de1c777971210f59e1d293b
----------------------------
Bug#58197: main.variables-big fails on windows The test result differs on windows, since it writes out 'localhost:<port>' instead of only 'localhost', since it uses tcp/ip instead of unix sockets on windows. Fixed by replacing that column. Also requires --big-test from some long running tests and added a weekly run of all test requiring --big-test. 	413dd7d2ca2bf71833fac7d4fd2075e3f8bb6d5d
----------------------------
WL#4801 Changed rpl_change_master to run it with with master-info-repository=TABLE enabled to increase gcov numbers. 	e4a735c27027246ed7a0633f05b5fc9af6313c76
----------------------------
Bug#58159 mtr.pl can't run out of source build with NDB - use $bindir instead of $basedir when looking for binaries - NOTE! the $ENV{NDB_EXAMPLES_*} will be reworked so that mtr.pl does not need to set them up. 	b57fd367365fcc8b509a0f27a05c53dc5d9321ec
----------------------------
Bug #52275  CMake configure wrapper does not handle --with-comment correctly Properly convert --with-comment do not uppercase it, quote as it might contain spaces. 	07e713ff2fa4bd356638ace976adeb0a73210ef3
----------------------------
BUG#58063: rpl_server_uuid segfaults on win Follow up patch removing unused thread_id variable. Fixed also in this cset a couple more compile warnings. 	8cf058443cd91d9117804afadd8dd038b7644281
----------------------------
Bug#57915 perfschema.threads_mysql fails sporadically after WL#4674 Fixed the new performance_schema.threads_mysql test case to be more robust, to avoid spurious failures. 	ae5681b7a12e03d5eba44dde9c303ffa1821e306
----------------------------
ndb - fix MYSQLCLUSTERDIR define for both Windows, *nix, automake and cmake - only define MYSQLCLUSTERDIR for ndb_mgmd compilation since it's only refernced by MgtmSrvr.* files - remove hardcoded value of MYSQLCLUSTERDIR on Windows - Remove remains of MYSQL_DATADIR, DEFAULT_MYSQL_HOME and SHAREDIR since they are not used (but also defined on top level Makefile or config.h) 	e0e4b2d4a586a7c5955c801926d1fdf1678034eb
----------------------------
Bug#58003 Segfault on CHECKSUM TABLE performance_schema.EVENTS_WAITS_HISTORY_LONG EXTENDED This fix is a follow up on the fix for similar issue 56761. When sanitizing data read from the events_waits_history_long table, the code needs also to sanitize the schema_name / object_name / file_name pointers, because such pointers could also hold invalid values. Checking the string length alone was required but not sufficient. This fix verifies that: - the table schema and table name used in table io events - the file name used in file io events are valid pointers before dereferencing these pointers. 	d47af174be567a584f8cedc2de62e8cab772c85e
----------------------------
Bug#57890: Assertion failed: next_insert_id == 0 with on duplicate key update There was a missed corner case in the partitioning handler, which caused the next_insert_id to be changed in the second level handlers (i.e the hander of a partition), which caused this debug assertion. The solution was to always ensure that only the partitioning level generates auto_increment values, since if it was done within a partition, it may fail to match the partition function. 	a58527deec6a331626dc3a8efc8dd54250a56d21
----------------------------
BUG#58063: rpl_server_uuid segfaults on win While connecting to the master the slave thread sets a session variable (@master_binlog_checksum). Then, later, it queries the master for this variable content. However, in this test, the master is restarted a few times, which can cause the slave to reconnect between the time it sets and the time it queries the session var @master_binlog_checksum on the master. Ultimately, this can cause the slave to receive NULL when SELECTing the var after a master restart, causing the slave to crash. We fix this by checking whether the value is NULL or not before taking any action based on the var value. Other changes in this cset: 1. Fix for rpl_checksum_cache failure in valgrind The test takes too long when using RBR and times out because the slave takes too long time to replay the row events for a table without a primary key. We fix it by adding a PK to the table, which makes the slave to find the rows to delete. 2. rpl_corruption fails with errors in valgrind This is a bug uncovered while testing WL#2540. Details are available in BUG#58129. We workaround it by replacing the offending part of the test (ie, do not use TEXT type and use VARCHAR instead). 	8e9294256a26ac877d9a8f534385101799317138
----------------------------
Bug#58057: 5.1 libmysql/libmysql.c unused variable/compile failure Bug#57995: Compiler flag change build error on OSX 10.4: my_getncpus.c Bug#57996: Compiler flag change build error on OSX 10.5 : bind.c Bug#57994: Compiler flag change build error : my_redel.c Bug#57993: Compiler flag change build error on FreeBsd 7.0 : regexec.c Bug#57992: Compiler flag change build error on FreeBsd : mf_keycache.c Bug#57997: Compiler flag change build error on OSX 10.6: debug_sync.cc Fix assorted compiler generated warnings. 	80246ac8b8d0d2db08feae2a643a3dc89f9022d6
----------------------------
ndb - add ndb_require_variable.cmake - move READLINE_INCLUDE_DIR to global includes - move zlib checks to ndb_configure.cmake and require that ZLIB_LIBRARY and ZLIB_INCLUDE_DIR is set - fix message about hardcoded use of bundle zlib for NDB 	0b51954b6e988a21fd1e0d9c8ffcbc68a843d752
----------------------------
Fixed bug#56619 - Assertion failed during ALTER TABLE RENAME, DISABLE KEYS. The code of ALTER TABLE RENAME, DISABLE KEYS could issue a commit while holding LOCK_open mutex. This is a regression introduced by the fix for Bug 54453. This failed an assert guarding us against a potential deadlock with connections trying to execute FLUSH TABLES WITH READ LOCK. The fix is to move acquisition of LOCK_open outside the section that issues ha_autocommit_or_rollback(). LOCK_open is taken to protect against concurrent operations with .frms and the table definition cache, and doesn't need to cover the call to commit. A test case added to innodb_mysql.test. The patch is to be null-merged to 5.5, which already has 54453 null-merged to it. 	ce3a7f4b01578ae00d972bdec8700349f3ed44a2
----------------------------
ndb - configure cmake/Makefile 	17d4d22b4539231cec81088ba6487ccdc1316aac
----------------------------
Added support in DEBUG_SYNC framework for actions when THD object isn't actively executed, that is when mysys_var == NULL 	2c40c11c8359b12d7c3e4d498c0fb18730d73f92
----------------------------
Merge: 9639755 9ba9ea4 mtr: ignore SERVER_UUID change in check-testcase 	46df137b605e8799e1ff7dca776bebf5d2f85ab9
----------------------------
"ndb - fixup ""unused"" prefetch.h file and add NDB_PREFETCH_READ and NDB_PREFETCH_WRITE macros. The macros where referenced but never enabled to prefetch - change the places that used old prefetch to use new - make mt.cpp include ndb_global.h so it get all the same defines as other code - detect sun_prefetch.h in configure and cmake and enable prefetching with forte based on that file. "	52b1a38a4ece313fa5d150333010874730f674e8
----------------------------
"Post-merge fix. ""bind-address"" option (duplicated) declaration removed from sql/mysqld.cc. "	500ab50fae050f7ad6cbddacedac464aa720c263
----------------------------
Bug#57609 performance_schema does not work with lower_case_table_names Merge to mysql-trunk-bugfixing (5.6), fixed 5.6 specific test cases. 	e15fdad5c5c852554fbd83be59c556872a59f138
----------------------------
"Bug #58063  	rpl_server_uuid segfaults on win This is an intermediate patch to get more details out of the failure. "	c2963681e4a6da008f50eb2652845ed44aaaaaf1
----------------------------
"Patch for WL#5639 ""Enable Index Condition Pushdown optimizer feature"" With this change the MySQL server will be built with support for the Index Condition Pushdown (ICP) feature. The default will be that ICP will be enabled. The following changes to MySQL are implemented: 1. Enable index condition pushdown With this feature enabled the optimizer will consider to push down to the handler/storage engine parts (or all) of the where condition that can be evaluated by the handler/storage engine using the content of the index that is used for execution of the query. The main change by enabling index condition pushdown should be improved performance for certain queries. The user should be able to see if index condition pushdown has been used by looking in the ""Extra"" column of the EXPLAIN output. If this field contains the string ""Using index condition"" parts or all of the where statement has been pushed down and will be evaluated by the handler/storage engine. 2. Enable the user to control the use of index condition pushdown When this has been enabled the user will be able to control the use of index condition pushdown by using the optimizer_switch configuration variable. The new optimizer_switch flag that will become available is named ""index_condition_pushdown"" and can take the values ""on"", ""off"" and ""default"". The default value for this optimizer switch flag will be ""on"". "	3a273dd4e94c373b33a6261f17f8b8ee698c7216
----------------------------
WL5353 Reflecting Gci Implement propagation of applied epochs via ndb_apply_status table. A new MySQLD option --ndb-log-apply-status is added which causes a MySQLD acting as a Slave to log mysql.ndb_apply_status updates received from its immediate Master in its Binlog with its own Server Id. This allows them to propagate into the mysql.ndb_apply_status table(s) of downstream slaves.  In a circular configuration they propagate back to the originating Cluster. In chained-slave replication scenarios, this gives downstream slaves visibility of their position relative to all their upstream contributors. In circular replication scenarios, this gives a Master visibility of when its changes (epochs) have been applied to other Clusters in a replication circle. New testcase rpl_ndb_break_3_chain added. New testcase ndb_binlog_log_apply_status added. Testcase rpl_ndb_circular extended. This functionality is a basis for WL5353. 	f7520ca29a698be3de01df20d2bee31e821c3f12
----------------------------
BUG#57275 binlog_cache_size affects trx- and stmt-cache and gets twice the expected memory After the WL#2687, the binlog_cache_size and max_binlog_cache_size affect both the stmt-cache and the trx-cache. This means that the resource used is twice the amount expected/defined by the user. The binlog_cache_use is incremented when the stmt-cache or the trx-cache is used and binlog_cache_disk_use is incremented when the disk space from the stmt-cache or the trx-cache is used. This behavior does not allow to distinguish which cache may be harming performance due to the extra disk accesses and needs to have its in-memory cache increased. To fix the problem, we introduced two new options and status variables related to the stmt-cache: Options: . binlog_stmt_cache_size . max_binlog_stmt_cache_size Status Variables: . binlog_stmt_cache_use . binlog_stmt_cache_disk_use So there are . binlog_cache_size that defines the size of the transactional cache for updates to transactional engines for the binary log. . binlog_stmt_cache_size that defines the size of the statement cache for updates to non-transactional engines for the binary log. . max_binlog_cache_size that sets the total size of the transactional cache. . max_binlog_stmt_cache_size that sets the total size of the statement cache. . binlog_cache_use that identifies the number of transactions that used the temporary transactional binary log cache. . binlog_cache_disk_use that identifies the number of transactions that used the temporary transactional binary log cache but that exceeded the value of binlog_cache_size. . binlog_stmt_cache_use that identifies the number of statements that used the temporary non-transactional binary log cache. . binlog_stmt_cache_disk_use that identifies the number of statements that used the temporary non-transactional binary log cache but that exceeded the value of binlog_stmt_cache_size. 	bf2c66d4a7281c1d7dbf49cbad315c7041762670
----------------------------
"Bug #57840 MTR: parallel execution breaks with smart ordering of test cases There were actually more problems in this area: Slaves (if any) were unconditionally restarted, this appears unnecessary. Sort criteria were suboptimal, included the test name. Added logic to ""reserve"" a sequence of tests with same config for one thread Got rid of sort_criteria hash, put it into the test case itself Adds little sanity check that expected worker picks up test Fixed some tests that may fail if starting on running server Some of these fail only if *same* test is repeated. Finally, special sorting of tests that do --force-restart "	0527d492cc098b5471e9eb873432c66e0182f203
----------------------------
Merge: 4a1a6a2 0be27d8 BUG#56343 binlog_cache_use status is bigger than expected The binlog_cache_use is incremented twice when changes to a transactional table are committed, i.e. TC_LOG_BINLOG::log_xid calls is called. The problem happens because log_xid calls both binlog_flush_stmt_cache and binlog_flush_trx_cache without checking if such caches are empty thus unintentionally increasing the binlog_cache_use value twice. Although not explicitly mentioned in the bug, the binlog_cache_disk_use presents the same problem. The binlog_cache_use and binlog_cache_disk_use are status variables that are incremented when transactional (i.e. trx-cache) or non-transactional (i.e. stmt-cache) changes are committed. They are used to compute the ratio between the use of disk and memory while gathering updates for a transaction. The problem reported is fixed by avoiding incrementing the binlog_cache_use and binlog_cache_disk_use if a cache is empty. We also have decided to increment both variables when a cache is truncated as the cache is used although its content is discarded and is not written to the binary log. In this patch, we take the opportunity to re-organize the code around the function binlog_flush_trx_cache and binlog_flush_stmt_cache. 	c26c9b805eeac8cd5cf41ecafd8ddfda74a996e9
----------------------------
Bug #57950 restoring the default value of master_verify_checksum at server startup. The earlier changed aimed at getting more evidence to rpl_stm_start_stop_slave. 	d136a375f3dcd15354b54de6f751f4863f1174ce
----------------------------
"Fix for BUG#57316 ""It is not clear how to disable autocommit"" add boolean command-line option --autocommit. "	f80d13e5303c80e149d82701d97bb5f57a18c4f2
----------------------------
ndb - add ndb_config.h.in to EXTRA_DIST 	4a5becf46925b3aede549a109803db25c4e8722f
----------------------------
Bug #57749 vs-config option of mysql-test-run does not work Option was incorrectly coded without an argument Added the missing =s 	e0ade8fd9738bb692f884c0d6faa486bcc06face
----------------------------
ndb - add ndb_configure.cmake to EXTRA_DIST 	b20df83d17d2f9c3f82bf54411b69ee5a5a4f59c
----------------------------
"BUG#57899: Certain reserved words should not be reserved Small fix for the test case. The column named ""slow"" was used twice in the SELECTs. As a consequence, the column named ""ignore_server_ids"" was not used. To fix this we simply replace the second column selected named ""slow"" with a column named ""ignore_server_ids"". "	2ac03c699d3fb617d8b9b24382133af93b244b36
----------------------------
Merge: 20ce354 358e953 Merge next-mr-bugfixing => next-mr-opt-backporting Text conflict in mysql-test/r/innodb_icp_none.result Contents conflict in mysql-test/r/optimizer_switch_eng_cond_pushdown1.result Contents conflict in mysql-test/r/optimizer_switch_eng_cond_pushdown2.result Contents conflict in mysql-test/suite/sys_vars/r/engine_condition_pushdown_basic.result 	e682f2ce52feceb3c01f0277983883f305d785d7
----------------------------
WL#5465: System variables: paths to relay log and binary log files Adding new variables with paths to where the binary log files and the relay log files are located. Three new global read-only variables are added and one has changed contents. log_bin_basename This variable hold the full path and name used for the binary logs: not including the extension of the files. log_bin_index This variable contain the full path to the binary log index file. relay_log_basename This variable hold the full path and name used for the relay logs: not including the extension of the files. relay_log_index This variable now contain the full path to the relay log index file.  Previously, it just contained the value supplied to mysqld option relay-log-index,  which was then used to compute the path to the index file. 	5f20d5b8c7f4248efc240b08ae4e0c0898b9c65a
----------------------------
WL#5185 post-push fix mysql-test-run was not able to run in version 1, since it uses --log and --log-slow-queries, and these were removed as part of the worklog. This in turn made RQG fail. Updated the v.1 mtr client to use the new syntax (--general-log, --general-log-file-name, etc.) 	9042d3cd72de21ee8cd118829d231d1dc8a08fe8
----------------------------
BUG#57108: mysqld crashes when I attempt to install plugin If a relative path is supplied to option --defaults-file or --defaults-extra-file, the server will crash when executing an INSTALL PLUGIN command. The reason is that the defaults file is initially read relative the current working directory when the server is started, but when INSTALL PLUGIN is executed, the server has changed working directory to the data directory. Since there is no check that the call to my_load_defaults() inside mysql_install_plugin(), the subsequence call to free_defaults() will crash the server. This patch fixes the problem by: - Prepending the current working directory to the file name when a relative path is given to the --defaults-file or --defaults- extra-file option the first time my_load_defaults() is called, which is just after the server has started in main(). - Adding a check of the return value of my_load_defaults() inside mysql_install_plugin() and aborting command (with an error) if an error is returned. - It also adds a check of the return value for load_defaults in lib_sql.cc for the embedded server since that was missing. To test that the relative files for the options --defaults-file and --defaults-extra-file is handled properly, mysql-test-run.pl is also changed to not add a --defaults-file option if one is provided in the tests *.opt file. 	d817b7cb8af1f0f4754ffd14135a86660a23006d
----------------------------
ndb - use .in as suffix for teplate for generated file ndb_config.h 	e86b5c4f883ca0f0a854ee2bfd16f545ab9296f3
----------------------------
Bug#56628 - Adjust hte results of testcase innodb-create-options for the next-mr branch where storage_engine is being depricated and replaced with 'default_storage_engine'.  Also, the message for warning 1051-ER_BAD_TABLE_ERROR now includes the database name. 	bc08f8e7af88f9cd58a73bdb048ef131cf0eea76
----------------------------
Bug#57609 performance_schema does not work with lower_case_table_names Before this fix, the performance schema tables were defined in UPPERCASE. This was incompatible with the lowercase_table_names option, and caused issues with the install / upgrade process, when changing the lower case table names setting *after* the install or upgrade. With this fix, all performance schema tables are exposed with lowercase names. As a result, the name of the performance schema table is always lowercase, no matter how / if / when the lowercase_table_names setting if changed. 	7f35b15ada5c5b2e63256423c37ce0c907181d85
----------------------------
BUG#57899: Certain reserved words should not be reserved In MySQL 5.5 the new reserved words include: SLOW                    as in FLUSH SLOW LOGS GENERAL                 as in FLUSH GENERAL LOGS IGNORE_SERVER_IDS       as in CHANGE MASTER ... IGNORE_SERVER_IDS MASTER_HEARTBEAT_PERIOD as in CHANGE MASTER ... MASTER_HEARTBEAT_PERIOD These are not reserved words in standard SQL, or in Oracle 11g, and as such, may affect existing applications. We fix this by adding the new words to the list of keywords that are allowed for labels in SPs. 	9d102947e8844eb34ced2a7c593e80c7968d8eee
----------------------------
Changed the type in the slave_master_info.master_log_pos, slave_relay_log_info.master_log_pos and slave_relay_log_info.relay_log_pos from int to bigint in order to support files greater than 1G. See BUG#55231, WL#2775. 	7907d72d515cf6a81fed1da8178ae3a58e7c4490
----------------------------
Bug #57893  rpl_row_ignorable_event fails when --binlog-checksum=CRC32 There were two issues with the failure: 1. The reported explicitly  CRC32 `val' in the header needs filtering out via --replace_regex 2. More serious is that at verbose mode of event decoding the checksum trailing part of Rows-log-event:s was not cut off so the decoder decides there is more data. Fixed with deploying --r--replace_regex in the test and correcting the actual event size inside the verbose decoder of Log_event::print_base64(). 	1134fcc6391229706068965c9cfb91e619ef28c6
----------------------------
WL#5185 Remove deprecated 5.1 features This patch removes a set of options, syntax and variables that was formerly deprecated in MySQL 5.1. The specific regressions tests in the sys_vars suite that tests the removed variables are also removed. System options: ------------------- --skip-thread-priority    removed -l, --log[=name]          removed --log-slow-queries[=name] removed --one-thread              removed --rpl-recovery-rank=#    was already removed System variables: ------------------ sql_low_priority_updates  removed sql_max_join_size         removed sql_big_tables            removed storage_engine            will be removed later rpl_recovery_rank         was already removed log                       removed log_slow_queries          removed have_csv                  removed have_innodb               removed have_ndbcluster           removed have_partitioning         removed table_cache               was already removed engine_condition_pushdown removed SQL: ----------------- SLAVE START               removed SLAVE STOP                removed ONE_SHOT                  removed SET OPTION                removed FLUSH MASTER              was already removed FLUSH SLAVE               was already removed USING/TYPE before ON      will be removed later Notes: 'storage_engine' was deprecated in 5.5, so it can't be removed in this version.  It will be removed two GA releases later. The documentation on 'USING/TYPE before ON' has been inconsistent, and there has not been given a proper deprecation warning on the use of the syntax. See also Bug #57920 Inconsistency in syntax and example for CREATE INDEX Bug #36140 Inconsistent synonymy of USING and TYPE for index creation 	7f3952971425d49327afe710954b773cf09f4e02
----------------------------
Make main.server_uuid experimental. 	15c9f2bb706fde000e59954f5c8a73e32215291b
----------------------------
Temporarily fix for configure.in -- CMakeFiles requires suffix in version tag. 	6b666752f42f7ea064b1461701035d4e26e9c85a
----------------------------
ndb - add cmake configure checks for ndb 	28cbd55d824dfb4e4842051a79cf86e9f82607ff
----------------------------
ndb - fix problem with extracting the long cluster version string from configure.in - apply MCP patch for BUG57843 to 5.5-telco 	8f9f7bb349b64794b2447fd72210810522056415
----------------------------
Fixed valdring warning message in WL#2775. ==7207== Conditional jump or move depends on uninitialised value(s) ==7207==    at 0x54A71F: String::c_ptr() (sql_string.h:112) ==7207==    by 0x8AD72C: Rpl_info_file::do_set_info(int, Server_ids const*) (rpl_info_file.cc:226) ==7207==    by 0x8A746F: bool Rpl_info_handler::set_info<Server_ids*>(Server_ids*) (rpl_info_handler.h:141) ==7207==    by 0x8A5E7C: Master_info::write_info(Rpl_info_handler*, bool) (rpl_mi.cc:433) ... 	1eda4007cc6486eef8b80ab0169d97dbebb077b7
----------------------------
Bug #44355: Need system variable for --bind-address option Added a system variable for the bind_address command line option. 	23faa03aa844348a60bc7e92cec4f037fd261cf7
----------------------------
"Bug#51631 general-log flag doesn't accept ""on"" as a value in the my.cnf, works as command Different parsing mechanisms are used for command line/my.cnf options  and the SQL commands.  The former only accepted numeric arguments, and regarded all numbers different from 0 as 'true'.  Any other argument was parsed as 'false' . This patch adds the words 'true' and 'on' as valid truth values for boolean option arguments. A test case is not provided, as the fix is simple and does not warrant a separate test file (no existing suitable test file was found) "	9677b72a888f7a3571de3fed666b8f452772118f
----------------------------
Bug #57589 SHOW SLAVE STATUS doesnt show err:1665 on NM-OS when slave can't handle checksum OS can't connect to the checksumming-ON NM and an error goes out to the error log (which is good), but OS can't stop trying to reconnect constantly (which is not). While practically this scenario must be pretty rare it's possible to fix the issue a rather nice way. Master sends back to checksum-unaware OS the ER_MASTER_FATAL_ERROR_READING_BINLOG critical error accompanied with a verbose clarification mentioning the checksum situation like in the following snippet of the error log from the patch testing: 101026 20:15:45 [ERROR] Error reading packet from server: Slave can not handle replication events with the checksum that master is configured to log ( server_errno=1236) 101026 20:15:45 [ERROR] Slave I/O: Got fatal error 1236 from master when reading data from binary log: 'Slave can not handle replication events with the checksum that master is configured to log', Error_code: 1236 Master also logs a warning 101026 20:15:33 [Warning] Configured to log replication events with checksum Master rejects sending them to Slave that can not handle it. Additional fixes for wl#2540 targeting sysvar suite. Each system var must have a test file in there. The tests are adeed. 	ba56fddaec6a9a08bf874ef3de70e33811e120e5
----------------------------
Bug #57730 Clean up references to InnoDB Plugin CMakeLists.txt: Remove the checks for mysql_storage_engine.cmake and MYSQL_VERSION_ID. ha_innodb.cc, ha_innodb.h: Remove the checks for MYSQL_VERSION_ID. 	548289eea0371edd1102d616a0bd7aa20e3d1529
----------------------------
Bug#57720 - Windows Vista and possibly Windows 7 can return ERROR_TIMEOUT instead of WAIT_TIMEOUT from calls to SleepConditionVariableCS() which is used in os0sync.c; os_cond_wait_timeout() where it is mapped to sleep_condition_variable(). Consider ERROR_TIMEOUT to be a timeout just like WAIT_TIMEOUT. In addition, test for EINTR as a possible return value from pthread_cond_timeout() in the posix section of os_cond_wait_timeout(), even though it is not supposed to be returned, but just to be safe. 	2dad3c94f707094fa701ddac0a399c1150d0cf2d
----------------------------
Merge: 1e5da34 257b48e Manual merge from mysql-next-mr-merge. Conflicts: - mysql-test/r/explain.result - mysql-test/suite/rpl/r/rpl_mixed_binlog_max_cache_size.result - mysql-test/suite/rpl/r/rpl_row_binlog_max_cache_size.result - mysql-test/suite/rpl/r/rpl_stm_binlog_max_cache_size.result - mysql-test/suite/sys_vars/r/max_binlog_cache_size_basic.result - mysql-test/t/disabled.def 	0050183c93412b00640f368080fbb6a9e1632a74
----------------------------
Bug#54569 Some options are not allowed to take argument when passed with loose- prefix Boolean options cause parsing failures when they are given with prefix loose- and an argument, either in the command line or in configuration file. The reason was a faulty logic which forced the parsing to throw an error when an argument of type NO_ARG was used together with an argument which has been identified as a key-value pair. Despite the attribute NO_ARG these options actually take arguments if they are of type BOOL. 	3611d5e38017950d58469216bed24a1c5e51764c
----------------------------
"WL#5265 Deprecate features in Dahlia This is a patch for deprecating items, so they can be scheduled for removal at a later stage. A deprecation consists of adding a deprecation note to help texts, and returning a SQL warning upon the use. Most of the affected regression tests have been changed to use new or alternative syntax.  A few tests, in particular in the 'sys_vars' suite are still run with the deprecated syntax, to verify that the options still work, and give the correct warning text. Some deprecation warnings introduced by an earlier patch included the MySQL version number when the feature/option would be removed.  Since future version numbers may not be known, the text has been changed to ""and will be removed in a future release"". The following items have been adressed by this patch: ----------------------------------------------------- --master-retry-count       option deprecated (see also Bug#44209) --languages | -l           option deprecated (see also WL#751) @@storage_engine           sysvar deprecated (see also WL#4738) @@sql_big_tables           sysvar deprecated @@sql_low_priority_updates sysvar deprecated @@thread_concurrency       sysvar deprecated (see also Bug#55001) In addition, the following is mentioned in the worklog, but already adressed by other patches: -------------------------------------------------------- @@table_lock_wait_timeout  sysvar was removed as part of Bug#45225 @@optimizer_search_depth ( value 63) was deprecated in WL#5252 and removed as part of WL#5369 "	1e5da3480ead497b519385b43ef0c6d392202ec4
----------------------------
"Bug #57555  	mtr finds a new unsuppressed error after rpl.rpl_server_uuid The reason is STOP SLAVE or shutdown that mtr executes sometimes catch the slave at querying master. Fixed by adding the error suppression directive to mtr. Similar to the reported warnings are suppressed as well: Slave I/O: Get master BINLOG_CHECKSUM failed with error Slave I/O: Notifying master by SET @master_binlog_checksum= @@global.binlog_checksum failed with error. Small fixes to tests: solaris' failure was caused by long exec time of rpl_checksum_cache. Decreasing the main loop of the test param as twice. "	ef4358e857ede2a28968f10843cc8883839650c9
----------------------------
ndb - apply MCP patch for BUG53205 which adds a --server-id-bits option to mysqld and mysqlbinlog 	ff1c87fa59da6b6b260042bbff63c4028184801c
----------------------------
After a discussion with James Day on bug# 20877, it turns out that the MySQL config parameter table_def_size is more appropriate for our purpose, to limit the InnoDB data dictionary size. 	0f057f671fd188367f6159516282247f7d29dc51
----------------------------
Merge: fb8e878 617e0e9 Merge next-mr => next-mr-merge Text conflict in mysql-test/collections/default.experimental <<<<<<< TREE ======= rpl.rpl_row_sp011* @solaris              # Bug#47791 2010-01-20 alik Several test cases fail on Solaris with error Thread stack overrun rpl.rpl_delayed_slave                    # BUG#57514 rpl_delayed_slave fails sporadically in pb >>>>>>> MERGE-SOURCE sql/log_event.cc: In member function 'virtual int Rows_log_event::do_apply_event(const Relay_log_info*)': sql/log_event.cc:7915: error: 'RPL_LOG_NAME' was not declared in this scope ==> s/RPL_LOG_NAME/const_cast<Relay_log_info*>(rli)->get_rpl_log_name()/ 	5138f04065c0a4857348f09e17323455896c0295
----------------------------
Merge: 9052cb1 06dc368 Merge from trunk-merge. Text conflict in mysql-test/suite/rpl/r/rpl_mixed_binlog_max_cache_size.result Text conflict in mysql-test/suite/rpl/r/rpl_row_binlog_max_cache_size.result Text conflict in mysql-test/suite/rpl/r/rpl_stm_binlog_max_cache_size.result Contents conflict in mysql-test/suite/rpl/t/rpl_mixed_binlog_max_cache_size-master.opt Contents conflict in mysql-test/suite/rpl/t/rpl_row_binlog_max_cache_size-master.opt Contents conflict in mysql-test/suite/rpl/t/rpl_stm_binlog_max_cache_size-master.opt Text conflict in sql/share/errmsg-utf8.txt Text conflict in sql/sql_partition_admin.cc Text conflict in sql/sql_partition_admin.h Text conflict in sql/sql_truncate.cc Text conflict in sql/sql_truncate.h Text conflict in storage/innobase/row/row0sel.c 12 conflicts encountered. Adapted incoming changes to new class hierarchy in next-mr Added missing warnings to result files. Added this to the ### CLEAN ### section of rpl_binlog_max_cache_size.test --disable_query_log --eval SET GLOBAL max_binlog_cache_size= $old_max_binlog_cache_size --eval SET GLOBAL binlog_cache_size= $old_binlog_cache_size --enable_query_log Fixed some compile warnings: handler/ha_innodb.cc if (do_idx_cond_push && ((need_second_pass && !index_covers_field) || (!need_second_pass && index_covers_field))) { storage/innobase/row/row0sel.c res = row_sel_store_mysql_rec(buf, prebuilt, rec, offsets, 0, prebuilt->n_index_fields); sql/sql_insert.cc delayed_row(LEX_STRING const query_arg, enum_duplicates dup_arg, bool ignore_arg, bool log_query_arg) : record(0), dup(dup_arg), ignore(ignore_arg), log_query(log_query_arg), binlog_rows_query_log_events(FALSE), forced_insert_id(0), query(query_arg), time_zone(0) {} 	fb8e878df846a679a9b9ad6489001ee8d6156969
----------------------------
Fixed bug#45445 - cannot execute procedures with thread_stack set to 128k. 	3d9cddabf828ae1a070d621db3414f6c409ac21b
----------------------------
Fix a sys_vars.all_vars failure caused by Bug #56680 instrumentation. The variable innodb_change_buffering_debug is only present in debug builds. Hide it from the test, so that the test passes in both debug and non-debug. 	7ee0551f4358cb6a4217eb42126de309ca2bad1a
----------------------------
Rename srv_lock_timeout_thread_event to srv_timeout_event. Reset the lock0wait.c global variables in lock_sys_create() Update comments in srv0srv.c In lock_wait_timeout_thread() add check for shutdown before changing state to active after event wait. Change sleep to a timed event wait. Previously the signals to this event were ignored, this was inheritd from the parent code. 	958eb028af56565ba6d4f240cfe6956b739f0b65
----------------------------
Bug#57604  Reserve bit in option_bits for slave_allow_batching feature - Add  define to reserve bit number 36 for slave_allow_batching feature 	95ee8f4cf61d9be85f1df6805a058fa11b6de04d
----------------------------
Bug#57603 slave_allow_batching uses same bit in thd->options as profiling - Change so that slave_allow_batching does not use the same bit as profiling 	4a4399e540919d25f97f9e41748b500eef3cae27
----------------------------
Bug #57555 Similar to the reported warning is suppressed: Slave I/O: Notifying master by SET @master_binlog_checksum= @@global.binlog_checksum failed with error. 	9ea7cc9f70dcf2fee3ad767a47d4a99ed1382d2d
----------------------------
Bug #57555 Similar to the reported warning is suppressed: Slave I/O: Get master BINLOG_CHECKSUM failed with error 	8a072311197cabeaf52c2de7cc7cc806778bd43e
----------------------------
Test wait_timeout: do not fail by SQL syntax error, use die 	8a94240c7d76b7b9e77bb38eda5b75ea83c46340
----------------------------
Bug #46941 crash with lower_case_table_names=2 and foreign key data dictionary confusion On file systems with case insensitive file names, and lower_case_table_names set to '2', the server could crash due to a table definition cache inconsistency.  This is the default setting on MacOSX, but may also be set and used on MS Windows. The bug is caused by using two different strategies for creating the hash key for the table definition cache, resulting in failure to look up an entry which is present in the cache, or failure to delete an existing entry.  One strategy was to use the real table name (with case preserved), and the other to use a normalized table name (i.e a lower case version). This is manifested in two cases.  One is  during 'DROP DATABASE', where all known files are removed.  The removal from the table definition cache is done via a generated list of TABLE_LIST with keys (wrongly) created using the case preserved name.  The other is during CREATE TABLE, where the cache lookup is also (wrongly) based on the case preserved name. The fix was to use only the normalized table name when creating hash keys. 	1c68d2efe72b8663fb3cfba91667179d142e81be
----------------------------
"Bug #57555  	mtr finds a new unsuppressed error after rpl.rpl_server_uuid The reason is STOP SLAVE or shutdown that mtr executes sometimes catch the slave at querying master. Fixed by adding the error suppression directive to mtr. "	0accba536c65a1ce8cd470ff06ebb4dbad55828b
----------------------------
Merge: 7506344 b568369 Merge Bug #56680 from mysql-5.1. Additional fixes in 5.5: ibuf_set_del_mark(): Add diagnostics when setting a buffered delete-mark fails. ibuf_delete(): Correct a misleading comment about non-found records. rec_print(): Add a const qualifier to the index parameter. Bug #56680 wrong InnoDB results from a case-insensitive covering index row_search_for_mysql(): When a secondary index record might not be visible in the current transaction's read view and we consult the clustered index and optionally some undo log records, return the relevant columns of the clustered index record to MySQL instead of the secondary index record. ibuf_insert_to_index_page_low(): New function, refactored from ibuf_insert_to_index_page(). ibuf_insert_to_index_page(): When we are inserting a record in place of a delete-marked record and some fields of the record differ, update that record just like row_ins_sec_index_entry_by_modify() would do. btr_cur_update_alloc_zip(): Make the function public. mysql_row_templ_t: Add clust_rec_field_no. row_sel_store_mysql_rec(), row_sel_push_cache_row_for_mysql(): Add the flag rec_clust, for returning data at clust_rec_field_no instead of rec_field_no. Resurrect the debug assertion that the record not be marked for deletion. (Bug #55626) [UNIV_DEBUG || UNIV_IBUF_DEBUG] ibuf_debug, buf_page_get_gen(), buf_flush_page_try(): Implement innodb_change_buffering_debug=1 for evicting pages from the buffer pool, so that change buffering will be attempted more frequently. 	e85e1206b1cead211b166885ce7d12dc275ead55
----------------------------
Bug #56680 wrong InnoDB results from a case-insensitive covering index row_search_for_mysql(): When a secondary index record might not be visible in the current transaction's read view and we consult the clustered index and optionally some undo log records, return the relevant columns of the clustered index record to MySQL instead of the secondary index record. ibuf_insert_to_index_page_low(): New function, refactored from ibuf_insert_to_index_page(). ibuf_insert_to_index_page(): When we are inserting a record in place of a delete-marked record and some fields of the record differ, update that record just like row_ins_sec_index_entry_by_modify() would do. btr_cur_update_alloc_zip(): Make the function public. mysql_row_templ_t: Add clust_rec_field_no. row_sel_store_mysql_rec(), row_sel_push_cache_row_for_mysql(): Add the flag rec_clust, for returning data at clust_rec_field_no instead of rec_field_no. Resurrect the debug assertion that the record not be marked for deletion. (Bug #55626) [UNIV_DEBUG || UNIV_IBUF_DEBUG] ibuf_debug, buf_page_get_gen(), buf_flush_page_try(): Implement innodb_change_buffering_debug=1 for evicting pages from the buffer pool, so that change buffering will be attempted more frequently. 	b568369dba30a196d12eeb314127219c7f93a4f2
----------------------------
Bug #56680 wrong InnoDB results from a case-insensitive covering index row_search_for_mysql(): When a secondary index record might not be visible in the current transaction's read view and we consult the clustered index and optionally some undo log records, return the relevant columns of the clustered index record to MySQL instead of the secondary index record. REC_INFO_DELETED_FLAG: Move the definition from rem0rec.ic to rem0rec.h. ibuf_insert_to_index_page_low(): New function, refactored from ibuf_insert_to_index_page(). ibuf_insert_to_index_page(): When we are inserting a record in place of a delete-marked record and some fields of the record differ, update that record just like row_ins_sec_index_entry_by_modify() would do. mysql_row_templ_t: Add clust_rec_field_no. row_sel_store_mysql_rec(), row_sel_push_cache_row_for_mysql(): Add the flag rec_clust, for returning data at clust_rec_field_no instead of rec_field_no. Resurrect the debug assertion that the record not be marked for deletion. (Bug #55626) buf_LRU_free_block(): Refactored from buf_LRU_search_and_free_block(). This is needed for the innodb_change_buffering_debug diagnostics. [UNIV_DEBUG || UNIV_IBUF_DEBUG] ibuf_debug, buf_page_get_gen(), buf_flush_page_try(): Implement innodb_change_buffering_debug=1 for evicting pages from the buffer pool, so that change buffering will be attempted more frequently. 	f2d39c9eafd31304c1aaead7cd47209fb2451033
----------------------------
Follow-up for bug#36742: changed results for test ipv4_as_ipv6 because hostname is case-insensitive. 	ff72d36125e0faf3f2bfc3f7f4eb0182d13b527b
----------------------------
Follow up for bug#36742. Changed test case for bug#19828 because currently hostname stored in db in lowercase. 	990771432a1da7abc51fc6d6818ef92818177851
----------------------------
Merge: 665fdb4 367549a Bug#52172 test binlog.binlog_index needs --skip-core-file to avoid leaving core files For crash testing: kill the server without generating core file. include/my_dbug.h Use kill(getpid(), SIGKILL) which cannot be caught by signal handlers. All DBUG_XXX macros should be no-ops in optimized mode, do that for DBUG_ABORT as well. sql/handler.cc Kill server without generating core. sql/binlog.cc Kill server without generating core. unittest/gunit/CMakeLists.txt Add unit test. unittest/gunit/dbug-t.cc Add unit test. 	c9657d0508536aef35fd786f488c1ed4838ed36d
----------------------------
Merge: b1b7e53 0853153 Bug#52172 test binlog.binlog_index needs --skip-core-file to avoid leaving core files For crash testing: kill the server without generating core file. include/my_dbug.h Use kill(getpid(), SIGKILL) which cannot be caught by signal handlers. All DBUG_XXX macros should be no-ops in optimized mode, do that for DBUG_ABORT as well. sql/handler.cc Kill server without generating core. sql/log.cc Kill server without generating core. 	367549ab2bb162b68cc5fab9594d1f69b6a70f97
----------------------------
Bug#52172 test binlog.binlog_index needs --skip-core-file to avoid leaving core files For crash testing: kill the server without generating core file. include/my_dbug.h Use kill(getpid(), SIGKILL) which cannot be caught by signal handlers. All DBUG_XXX macros should be no-ops in optimized mode, do that for DBUG_ABORT as well. sql/handler.cc Kill server without generating core. sql/log.cc Kill server without generating core. 	08531533466732294306afe1c216f66a61b929cb
----------------------------
Bug#57359 Possible to circumvent secure_file_priv using '..' on Windows Where realpath(3) is used in Linux, mf_load_path is used for Windows. This function doesn't however correspond to the functionality of realpath. This patch attempts to do better by using the Windows function GetFullPathName() instead. 	017b88f0de5711f876e0fe278a86e207b032ae12
----------------------------
Recommit after fixing diverged-branches: spj-svs: MRR read may fail to close cursors for pending ScanOperations causing 'out of transaction / operation / lock' errors depending on the database config. This fix is cherry picked from proposed fix for bug 57481, with the addition of an additional SPJ test for the same scenario. 	7344c73e104d4c23b804d6f61234aa414d7897ca
----------------------------
"Bug#31480: Incorrect result for nested subquery when executed via semijoin This problem may occur when we have a query containing at least two nested subqueries; one subquery is transformed into a semijoin, and a subquery that is inner to the transformed subquery (and is not itself transformed away) contains outer references either to the transformed subquery or to it's immediate outer query block. When this situation happens, the transformed query and it's immediate outer query block is consolidated into one query block. In this process, involved tables may be renumbered, and resolved information for the inner expressions may change. Example with a query: select t1.a from t1 where t1.a in (select t2.c from t2 where t2.d >= some(select t3.e from t3 where t1.b=t3.e)); Graph of select_lex objects and table objects for this query, before transformation: A - t1 \ B - t2 \ C - t3 For shorthand, we denote the IN predicate the ""outer subquery predicate"" and the quantified comparison predicate the ""inner subquery predicate"". The outer subquery predicate contains select_lex B and the inner subquery predicate contains select_lex C. Now, semijoin transformation is applied to the outer subquery predicate. Here is the query graph after transformation: A - t1, t2 \ C - t3 After the transformation, used_tables information is wrong for the column t1.b. The problem is fixed by adding fix_after_pullout() functions for the subquery objects (Item_subselect, Item_in_subselect, Item_in_optimizer), that can propagate re-resolution down to subqueries that have expressions that are affected by the semijoin transformation. In addition, fix_after_pullout() is extended with another argument that identifies the select_lex object that is being removed. With the current use of fix_after_pullout(), this information is implicit, but it has to be explicit when also handling fields that are referenced within inner subqueries. The new fix_after_pullout() interface then becomes: fix_after_pullout(st_select_lex *parent_select, st_select_lex *removed_select, Item **ref); fix_after_pullout() applied to an Item_field object only needs to handle cases where the depended_from or context->select_lex is equal to either parent_select or removed_select. If the field belongs to a table that is ""inner"" or ""outer"" compared to the select_lex level we are transforming, then no information needs to be updated. Note also that information about correlated outer columns must be recorded directly in a subquery predicate object. Suppose we have two select_lex objects A and B. B is part of a subquery that is evaluated on level A. The subquery has a predicate that contains a reference to a column that is resolved to a table t1 that belongs to select_lex A. In order to properly evaluate the subquery predicate, we need to make sure that a row from t1 is present. Thus, the fix_after_pullout() function for Item_field needs to propagate information about the table it is resolved within to an outer subquery predicate, if that predicate is evaluated on the same level as the table t1 is resolved on. mysql-test/r/optimizer_switch.result Added result for test case for Bug#31480 mysql-test/r/subquery_sj_all.result mysql-test/r/subquery_sj_all_jcl6.result mysql-test/r/subquery_sj_all_jcl7.result mysql-test/r/subquery_sj_dupsweed.result mysql-test/r/subquery_sj_dupsweed_jcl6.result mysql-test/r/subquery_sj_dupsweed_jcl7.result mysql-test/r/subquery_sj_firstmatch.result mysql-test/r/subquery_sj_firstmatch_jcl6.result mysql-test/r/subquery_sj_firstmatch_jcl7.result mysql-test/r/subquery_sj_loosescan.result mysql-test/r/subquery_sj_loosescan_jcl6.result mysql-test/r/subquery_sj_loosescan_jcl7.result mysql-test/r/subquery_sj_mat.result mysql-test/r/subquery_sj_mat_jcl6.result mysql-test/r/subquery_sj_mat_jcl7.result Minor plan change (WHERE clause moved from first to second table). The reason for this is that the IN subquery predicate object is updated with correct used tables information. mysql-test/t/optimizer_switch.test Added test case for Bug#31480 Notice that the test case with an inner grouped subquery is wrong when semijoin optimization is turned on. sql/item.cc Item_field::resolved_used_tables() is implemented. Item_field::fix_after_pullout() is changed so that it behaves properly also for fields that are used in a scope that is inner to the select_lex being removed. Also update used_tables information for subqueries that are outer-correlated with respect to this field. Updated fix_after_pullout() in conformance with new interface. sql/item.h Changed interface of fix_after_pullout(). Added interface for resolved_used_tables(). This function returns used table information for the level on which a field's table is resolved, in contrast to used_tables() which returns OUTER_REF_TABLE_BIT if the field is an outer reference. sql/item_cmpfunc.cc Necessary changes to fix_after_pullout(). Item_in_optimizer::fix_after_pullout() resolves itself by dispatching to the wrapped Item_in_subselect object. sql/item_cmpfunc.h Added fix_after_pullout() to class Item_in_optimizer. sql/item_func.cc Necessary changes to fix_after_pullout(). sql/item_func.h Changed interface of fix_after_pullout(). sql/item_row.cc Necessary changes to fix_after_pullout(). sql/item_row.h Changed interface of fix_after_pullout(). sql/item_subselect.cc Item_subselect::fix_after_pullout() resolves all expressions referred from the inner query specification objects (select_lex objects). Item_in_subselect::fix_after_pullout() dispatches the query expression resolution to Item_subselect::fix_after_pullout(), but needs to resolve its left expression explicitly. sql/item_subselect.h Added fix_after_pullout() to classes Item_subselect and Item_in_subselect. sql/sql_select.cc Interface change to fix_list_after_tbl_changes(). Also make sure that transformed-away select_lex object is removed before calling fix_after_pullout(), so that the function operates on a chain of select_lex objects that is valid after semijoin transformation. "	226a5d281a2498f0066cfee2ed4307b425f536e0
----------------------------
"A patch for Bug#48874 (Test ""is_triggers"" fails because of wrong charset info). The thing is that the following attributes are fixed (remembered) when a trigger is created: - character_set_client - character_set_results - collation_connection There are two triggers created in mysql-test/include/mtr_warnings.sql. They were created using ""current default"" character set / collation. is_triggers.test shows definition of these triggers including recorded character set information. The problem was that if ""current default"" changed, the recorded character set information was not accurate. There might be two ways to fix that: a) update is_triggers.test so that it does not put character-set information into result-file; b) update mtr_warnings.sql so that the triggers are created using hard-coded character sets. This patch implements option b). "	69693c26330665ba6c8d9cff0fb7c20758e8ced7
----------------------------
Bug #51639  Some replication filters are case sensitive, some are not! There is an inconsistency in name comparison of rpl filters. Some are case sensitive, while others are not. And they did not follow the setting of lower_case_table_names. To fix the problem to make all the filters follow the setting of lower_case_table_name to be case sensitive and accent sensitive when setting lower_case_table_name=0. Otherwise they will be case insensitive but accent sensitive. 	9a4f725c54c81f0cb865f4bbec841ac957838723
----------------------------
ndb - fix result file for ndb_config 	804a3b75a649b0b55441dffc283bebe2a770eef6
----------------------------
Reverting a patch for Bug#45445 (cannot execute procedures with thread_stack set to 128k). Some platforms don't work with 4 * STACK_MIN_SIZE. Thus, reverting back to 8 * STACK_MIN_SIZE and waiting for another fix. 	46f2610b26641928d5fdd131a97ee3f0346bed61
----------------------------
Reverting a patch for Bug#45445 (cannot execute procedures with thread_stack set to 128k). Some platforms don't work with 4 * STACK_MIN_SIZE. Thus, reverting back to 8 * STACK_MIN_SIZE and waiting for another fix. 	79626ba4ab927e091ca75731283d19df5e6f82dc
----------------------------
Fixed bug#36742 - GRANT hostname case handling inconsistent. 	fea55c7ff512b244bce9c0d94c8fb6517d2f5277
----------------------------
wl#2540 Fixing a lapse of the last commit. Forcing checksum be active in the started by mtr servers through supplying --mysqld=--binlog-checksum=CRC32 in collectios/default.push 	24adc36078b942e2999436deef5df7b84fe386b9
----------------------------
Bug#56632 - The warning code related to KEY_BLOCK_SIZE and ROW_FORMAT  when innodb_strict_mode=OFF  is improved in order to take into account whether the KEY_BLOCK_SIZE is specified on the current ALTER statement or the previous CREATE statement. The testcase shows the expected results of 12 different combinations of these settings. 	f3292c3a13b3c50086ac721bb6f714666155eea0
----------------------------
Bug#56632 - The warning code related to KEY_BLOCK_SIZE and ROW_FORMAT  when innodb_strict_mode=OFF  is improved in order to take into account whether the KEY_BLOCK_SIZE is specified on the current ALTER statement or the previous CREATE statement. The testcase shows the expected results of 12 different combinations of these settings. 	b1698f638f3814124405a7d94952f5ce55bf0009
----------------------------
Bug#55375  Transaction bigger than max_binlog_cache_size crashes slave When slave executes a transaction bigger than slave's max_binlog_cache_size, slave will crash. It is caused by the assert that server should only roll back the statement but not the whole transaction if the error ER_TRANS_CACHE_FULL happens. But slave sql thread always rollbacks the whole transaction when an error happens. Ather this patch, we always clear any error set in sql thread(it is different from the error in 'SHOW SLAVE STATUS') and it is cleared before rolling back the transaction. 	b66825912a436cb263253bf47c535f3728ccbe85
----------------------------
wl#2540 Forcing checksum be active in the started by mtr servers through supplying --mysqld=--binlog-format=CRC32 in collectios/default.push 	cfc3d2d00ec5207d143e9f44db35faa5a2fdf32c
----------------------------
Adjust results files after innodb_file_per_table became 0. In calvin.sun@oracle.com-20101005183830-p81bemgffq8l2en9 the default value of innodb_file_per_table was changed from 1 to 0. 	2e1c48e0697c140f5c2265d1a3d065c5ad057b5b
----------------------------
Bug#30025 Mysqld prints out warnings/errors being run with --no-defaults --help now do no initializations for the --help. Do it for --verbose --help though. per-file comments: sql/mysqld.cc Bug#30025 Mysqld prints out warnings/errors being run with --no-defaults --help quit with the help message at once as --help was given 	a3983787764d82e312e28f6f65fa86750e491fec
----------------------------
"Bug#56822: Add a thread state for sessions waiting on the query cache lock The problem was that threads waiting on the query cache lock are not easily seen due to the lack of a state indicating that the thread is waiting on the said lock. This made it difficult for users to quickly spot (for example, via SHOW PROCESSLIST) a query cache contention problem. The solution is to update the thread state when the query cache lock needs to be acquired. Whenever the lock is to be acquired, the thread state is updated to ""Waiting for query cache lock"" and is reset once the lock is granted or the wait is interrupted. The intention is to make query cache related hangs more evident. To further investigate query cache related locking problems, one may use PERFORMANCE_SCHEMA to track the overhead associated with the locking bits and determine which particular lock is being a contention point. "	76643a469a58beee1ffff9636c87eb8c36f2177d
----------------------------
BUG#54144: ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE is hard coded The error message for ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE was hard coded. Additionally, the same error was used in three separate error symptoms: 1. when heartbeat period exceeds the value of slave_net_timeout, 2. when it is smaller than 1 milisecond and 3. when it was not in range, ie, either negative or greater than the maximum allowed. We fix this by splitting into three distinct errors and by removing the message from the source code and moving it to the errmsg-utf8.txt file. 	cc15d2462cf0b32576010d1810960969cba48182
----------------------------
Fixed bug#45445 - cannot execute procedures with thread_stack set to 128k. 	eec581e07f80c34dd0a91b231f15e6c1a59b7f62
----------------------------
"WL#5503 SEAGULL: Move config/ac-macros/ha_ndbcluster.m4 to storage/ndb/ - Move file ha_ndbcluster.m4 - Move ""sinclude"" directive from configure.in to storag/ndb/plug.in "	455d1f6ade5070f7ffa81e355bc3715bed1d92ac
----------------------------
Bug#57154 Rename THREADS.ID to THREADS.PROCESSLIST_ID in 5.5 This change is to align the 5.5 performance_schema.THREADS table definition with the 5.6 performance_schema.THREADS table, to facilitate the 5.5 -> 5.6 migration later. In the table performance_schema.THREADS: - renamed ID to PROCESSLIST_ID, removed not null - changed NAME from varchar(64) to varchar(128) to match the columns definitions from 5.6 Adjusted the test cases accordingly. Note: this fix is for 5.5 only, to null merge into 5.6 	4c929d53fa1259e6a89ca73d77d351b66f079939
----------------------------
Bug#49938: Failing assertion: inode or deadlock in fsp/fsp0fsp.c Bug#54678: InnoDB, TRUNCATE, ALTER, I_S SELECT, crash or deadlock - Incompatible change: truncate no longer resorts to a row by row delete if the storage engine does not support the truncate method. Consequently, the count of affected rows does not, in any case, reflect the actual number of rows. - Incompatible change: it is no longer possible to truncate a table that participates as a parent in a foreign key constraint, unless it is a self-referencing constraint (both parent and child are in the same table). To work around this incompatible change and still be able to truncate such tables, disable foreign checks with SET foreign_key_checks=0 before truncate. Alternatively, if foreign key checks are necessary, please use a DELETE statement without a WHERE condition. Problem description: The problem was that for storage engines that do not support truncate table via a external drop and recreate, such as InnoDB which implements truncate via a internal drop and recreate, the delete_all_rows method could be invoked with a shared metadata lock, causing problems if the engine needed exclusive access to some internal metadata. This problem originated with the fact that there is no truncate specific handler method, which ended up leading to a abuse of the delete_all_rows method that is primarily used for delete operations without a condition. Solution: The solution is to introduce a truncate handler method that is invoked when the engine does not support truncation via a table drop and recreate. This method is invoked under a exclusive metadata lock, so that there is only a single instance of the table when the method is invoked. Also, the method is not invoked and a error is thrown if the table is a parent in a non-self-referencing foreign key relationship. This was necessary to avoid inconsistency as some integrity checks are bypassed. This is inline with the fact that truncate is primarily a DDL operation that was designed to quickly remove all data from a table. 	5f911fa874f2472562de5b595b5dab86a92fbdf1
----------------------------
BUG#56343 binlog_cache_use status is bigger than expected The binlog_cache_use is incremented twice when changes to a transactional table are committed, i.e. TC_LOG_BINLOG::log_xid calls is called. The problem happens because log_xid calls both binlog_flush_stmt_cache and binlog_flush_trx_cache without checking if such caches are empty thus unintentionally increasing the binlog_cache_use value twice. To fix the problem we avoided incrementing the binlog_cache_use if the cache is empty. We also decided to increment binlog_cache_use when the cache is truncated as the cache is used although its content is discarded and is not written to the binary log. Note that binlog_cache_use is incremented for both types of cache, transactional and non-transactional and that the behavior presented in this patch also applies to the binlog_cache_disk_use. Finally, we re-organized the code around the functions binlog_flush_trx_cache and binlog_flush_stmt_cache. 	0be27d8f1cb9d1a3002c1a60fbd05310d8a7fb99
----------------------------
bug#56318: Replication aborts with ER_TOO_BIG_ROWSIZE if innodb parameters don't match Revert the changes of the default values of innodb_file_per_table and innobase_file_format in 5.5, until WL#5135 is implemented. 	5df8fd90beb7877cc81ccfd60e2fca38fd8e7c71
----------------------------
Adjust all_vars.result with the 3 new config variables. 	6a4c0a917d705004020376c694a7737c3d3113fc
----------------------------
Bug#56537: parse error in sql_yacc.cc in next-mr (compile-pentium-debug, configure+make) Sql_cmd changed in mysql-next-mr, requiring a sql_command_code function that was missing when compiling without support for partitioning. Added it also when compiling without partitioning 	80892ac606a379d4dcac4a96bbba4b6f6358bcca
----------------------------
wl#2540 fixing an assert on 64-bit linux: retyping binlog_checksum_options to ulong. 	abeeeda203181a2bed58c77d6ad979c3b95346ea
----------------------------
ndb - Reduce MCP by removing unused define SOCKET_ECONNREFUSED 	a4313439984a9f94b3f43db6d725f23d76319c43
----------------------------
Fix bug Bug #50461 many uses of btr_search_latch with innodb_adaptive_hash_index is OFF rb://460 approved by Inaam 	595501ea0022956d8d27d24d16ccd40550ddd2a6
----------------------------
Bug#56375 Ignore socket path since it may vary. Added some comments to inline perl in the test. 	2dd56c26cb727c737794535d96e291e843c83fb1
----------------------------
ndb - this patch moves ndbapi config parameters (batch size etc) from TransporterFacade to ndb_cluster_connection 	b15b5f345cc94e49a9aa402c7b0b0afb315c0a96
----------------------------
WL#3126  TCP address binding for mysql client library - Add tests for all mysql* clients that have got the new --bind-address option. Since --bind-address is only used with TCP connections, the client is tricked to use TCP either by setting host to 127.0.0.1 or by using protocol=tcp. - Test is assuming that 127.0.0.1 always is available on test host. 	8a33c215fcbba2a9ff65c98d63e1aa8849908e27
----------------------------
"BUG#46110: --replicate-wild-do-table invalidates --replicate-do-db matching rule When using --replicate-do-db and --replicate-ignore-db with --replicate-wild-do-table, some database level statements, eg DROP DATABASE or CREATE DATABASE, might not be replayed even if the DATABASE name was inline with the rules set in --replicate-do-db and/or --replicate-ignore-db. The following example would not replicate correctly: SLAVE, configured with: --replicate-do-db=dbx --replicate-wild-do-table=db%.t1 MASTER, dba issues: MASTER> CREATE DATABASE dbx; Although, at first sight, there is nothing in the filter rules that might prevent this statement to be replayed, the slave would not execute it. In fact, ""replicate-wild-do-table=db%.t1"" invalidates the ""OK"" from ""replicate-do-db=dbx"", making the event to be skipped/filtered out. We fix this, by making --replicate-do/ignore-db rules take precedence over replicate-wild-do-table for *database* level statements only: - CREATE/DROP/ALTER DATABASE ... As such, when replicating such statements, we only look into replicate-wild-do-table if and only if replicate-do/ignore-db rules are void. Otherwise, --replicate-do/ignore-db rules dictate the fate of the statement: either filtered out or executed. "	bf378d385aa49e3d33650e53500ea0df3bde323b
----------------------------
crund - minor improvements to Readmes, config files, and code 	8931c9f5ec519fdc921db3f253bb876d603df9ea
----------------------------
crund - minor improvements to Readmes, config files, and code 	77e9d92fcb207317f379fc81d52cb47d1f76dab6
----------------------------
crund - updated TWS benchmark Readme and configuration files 	db3ebc90571765245f2357c055ba886561293174
----------------------------
crund - updated TWS benchmark Readme and configuration files 	ef9d71ddcb3bf1c78e05c6cccb909de9a00cebd7
----------------------------
"Bug#54226 Can't force graceful node STOP that would bring down the cluster - Make it possible to force stop and restart although it would mean that all nodes in the cluster need to be stopped/restarted - Add new MGMAPI functions 'ndb_mgm_stop4' and 'ndb_mgm_restart4' which take a force flag indicating that the node(s) should be gracefully shutdown even if it means shutting down the whole cluster. - Add -F flag to ""<nodeid> STOP"" and ""<nodeid> RESTART"" in ndb_mgm> Additionally: - Move version checks in mgmapi _after_ CHECK_CONNECTED, this was a bug in ndb_mgm_start_backup and ndb_mgm_get_configuration. - Add handle::mgmd_version() so it's easy to check version against NDB_MAKE_VERSION(Y,Y,Y) and also make it possible to add asserts for connected and version fetched. - Remove mgmapi only version define from ndb_version.h.in - Reset the mgmd_version_xxx variables as part of connect to safeguard against a handle being used for reconnect to ndb_mgmd with potentially different version. - Add testcase for forced stop and restart "	a20d00b172e50d3a969193e0d8d0cae89c8541cd
----------------------------
Bug #56125 MTR2 start-and-exit removes server tmpdir, server becomes not operational This happens when creating new tmpdir due to too long socket path Don't delete it if --start-and-exit, but warn user to do it. 	f643d1b6d39700a2932840ba27ab4f55156d0940
----------------------------
WL#4816 PERFORMANCE_SCHEMA SUMMARIES Porting to 5.6, continued 	9b07e973210c23effbaa2462cf798f7b0bd4c2d7
----------------------------
BUG#55377 max_binlog_cache_size does not work as specified Post-push fixes. 	c140398e99233bb432ff03b38c6ec699cd37f9b0
----------------------------
Bug#50557 checksum table crashes server when used in performance_schema CHECKSUM TABLE for performance schema tables could cause uninitialized memory reads. The root cause is a design flaw in the implementation of mysql_checksum_table(), which do not honor null fields. However, fixing this bug in CHECKSUM TABLE is risky, as it can cause the checksum value to change. This fix implements a work around, to systematically reset fields values even for null fields, so that the field memory representation is always initialized with a known value. 	fa4c505edafa6f8d213db50b4059b5b33a669183
----------------------------
ndb - bug#56844 - make config change protocol contact nodes in order to avoid deadlock 	fdf06e63568cd08f09cb2e81e634570f1dba4ae9
----------------------------
Bug#56832 perfschema.server_init test output not consistent Before this fix, the test output for perfschema.server_init would vary between executions, because some of the objects tested were not guaranteed to exist in all configurations / code paths. This fix removes these weak tests. Also, comments referring to abandonned code have been cleaned up. 	fd6497b3d84954880041a2a12c0653d7f1e5302d
----------------------------
"Fixed bug#42503 - ""Lost connection"" errors when using compression protocol. The loss of connection was caused by a malformed packet sent by the server in case when query cache was in use. When storing data in the query cache, the query  cache memory allocation algorithm had a tendency to reduce the amount of memory block necessary to store a result set, up to finally storing the entire result set in a single block. With a significant result set, this memory block could turn out to be quite large - 30, 40 MB and on. When such a result set was sent to the client, the entire memory block was compressed and written to network as a single network packet. However, the length of the network packet is limited by 0xFFFFFF (16MB), since the packet format only allows 3 bytes for packet length. As a result, a malformed, overly large packet with truncated length would be sent to the client and break the client/server protocol. The solution is, when sending result sets from the query cache, to ensure that the data is chopped into network packets of size <= 16MB, so that there is no corruption of packet length. This solution, however, has a shortcoming: since the result set is still stored in the query cache as a single block, at the time of sending, we've lost boundaries of individual logical packets (one logical packet = one row of the result set) and thus can end up sending a truncated logical packet in a compressed network packet. As a result, on the client we may require more memory than max_allowed_packet to keep, both, the truncated last logical packet, and the compressed next packet. This never (or in practice never) happens without compression, since without compression it's very unlikely that a) a truncated logical packet would remain on the client when it's time to read the next packet b) a subsequent logical packet that is being read would be so large that size-of-new-packet + size-of-old-packet-tail > max_allowed_packet. To remedy this issue, we send data in 1MB sized packets, that's below the current client default of 16MB for max_allowed_packet, but large enough to ensure there is no unnecessary overhead from too many syscalls per result set. "	be794bc5eb1c355c86a94c8988faed0d4c40cf69
----------------------------
Bug #56595 RENAME TABLE causes assert on OS X The problem was that RENAME TABLE caused an assert if the system variable lower_case_table_names was 2 (default on Mac OS X) and the old table name was given in upper case. This caused lowercase_table2.test to fail. The assert checks that an exclusive metadata lock is held by the connection trying to do RENAME TABLE - specificially during updates of table triggers. The assert was triggered since the check is case sensitive and the lock was held on the normalized (lower case) version of the table name. This patch fixes the problem by making sure a normalized version of the table name is used for the metadata lock check, while using a non-normalized version of the table name for the rename of trigger files. The same is done for ALTER TABLE ... RENAME. Regression testing for the bug itself is already covered by lowercase_table2.test. Additional coverage added to lowercase_fs_off.test. 	f14d947c9898569367fda8028a8287ff676777c8
----------------------------
Bug#56761 Segfault on CHECKSUM TABLE performance_schema.EVENTS_WAITS_HISTORY EXTENDED Before this fix, the server could crash inside a memcpy when reading data from the EVENTS_WAITS_CURRENT / HISTORY / HISTORY_LONG  tables. The root cause is that the length used in a memcpy could be corrupted, when another thread writes data in the wait record being read. Reading unsafe data is ok, per design choice, and the code does sanitize the data in general, but did not sanitize the length given to memcpy. The fix is to also sanitize the schema name / object name / file name length when extracting the data to produce a row. 	2e4717ffcd8a3c7a025be78a7328ec219bed97db
----------------------------
"Fix for bug #56251 ""Deadlock with INSERT DELAYED and MERGE tables"". Attempting to issue an INSERT DELAYED statement for a MERGE table might have caused a deadlock if it happened as part of a transaction or under LOCK TABLES, and there was a concurrent DDL or LOCK TABLES ... WRITE statement which tried to lock one of its underlying tables. The problem occurred when a delayed insert handler thread tried to open a MERGE table and discovered that to do this it had also to open all underlying tables and hence acquire metadata locks on them. Since metadata locks on the underlying tables were not pre-acquired by the connection thread executing INSERT DELAYED, attempts to do so might lead to waiting. In this case the connection thread had to wait for the delayed insert thread. If the thread which was preventing the lock on the underlying table from being acquired had to wait for the connection thread (due to this or other metadata locks), a deadlock occurred. This deadlock was not detected by the MDL deadlock detector since waiting for the handler thread by the connection thread is not represented in the wait-for graph. This patch solves the problem by ensuring that the delayed insert handler thread never tries to open underlying tables of a MERGE table. Instead open_tables() is aborted right after the parent table is opened and a ER_DELAYED_NOT_SUPPORTED error is emitted (which is passed to the connection thread and ultimately to the user). "	6d5065a9f4b6accf51906f5c5e38325dfb4707e8
----------------------------
Changed the name of the functions create_fake_thd() and drop_fake_thd() by create_bootstrap_thd() and drop_bootstrap_thd(), respectively, as they are used to create and drop a THD during the bootstrap. Added a call to restore_backup_open_tables_state() which was missing when it happended to fail to open a table. 	09977d9e3db2668d27af6f89032ecab999fbca00
----------------------------
Selective transfer of a bugfix patch into 5.5.6-rc. The first part is the functional change, the second is needed as a compile fix on Windows (header file order). | committer: Marc Alff <marc.alff@oracle.com> | branch nick: mysql-5.5-bugfixing-56521 | timestamp: Thu 2010-09-09 14:28:47 -0600 | message: |   Bug#56521 Assertion failed: (m_state == 2), function allocated_to_free, pfs_lock.h (138) | |   Before this fix, it was possible to build the server: |   - with the performance schema |   - with a dummy implementation of my_atomic (MY_ATOMIC_MODE_DUMMY). | |   In this case, the resulting binary will just crash, |   as this configuration is not supported. | |   This fix enforces that the build will fail with a compilation error in this |   configuration, instead of resulting in a broken binary. | committer: Tor Didriksen <tor.didriksen@oracle.com> | branch nick: 5.5-bugfixing-56521 | timestamp: Fri 2010-09-10 11:10:38 +0200 | message: |   Header files should be self-contained 	91392cd8931fc1d63868a292f1d42df15bd59dcf
----------------------------
"Bug#56324 Race Condition while shutting down MySQL: ""PSI_server"" Before this fix, the server could crash during shutdown, due to race conditions, that occured when killing the server. In particular, the performance schema instrumentation handle, PSI_server, and the performance schema itself would be cleaned up too soon, causing race conditions with a running kill server thread. The specifics of the race condition found are that: the main thread executing ""PSI_server= NULL"" can cause crashes in other threads still running, which are executing ""if (PSI_server != NULL) PSI_server->xxx()"" as part of the performance schema instrumentation. While the bug was reported for the kill server thread, in theory the same crash could happen with the signal thread, as found by code analysis. The correct fix would be to only shutdown the performance schema and set PSI_server to NULL after every other thread is guaranteed to be completed, including the kill_server_thread. However, due to the existing mysqld server design, this is not the case. See in particular bug number 56666. The work around used to fix this race condition is to simply not perform the call to shutdown_performance_schema() when the server exits, and to keep the PSI_server pointer unchanged. This will cause memory leaks to be reported by tools like valgrind, but no memory leak actually happen because the process is about to exit(). As a result, the file mysql-test/valgrind.supp has been updated to filter out these false positive messages. This code has been tested with running in a loop the following tests in parallel, which have been known to fail with race conditions in the past: - rpl_change_master - binlog_max_extension - events_restart - rpl_heartbeat_basic and no crash of test failure has been seen with the changed code. "	2779f0aad1af99abd8295d41c99e208668ef317e
----------------------------
Bug#56521 Assertion failed: (m_state == 2), function allocated_to_free, pfs_lock.h (138) Before this fix, it was possible to build the server: - with the performance schema - with a dummy implementation of my_atomic (MY_ATOMIC_MODE_DUMMY). In this case, the resulting binary will just crash, as this configuration is not supported. This fix enforces that the build will fail with a compilation error in this configuration, instead of resulting in a broken binary. 	c9ab025dcd7f74ff9d6db09a584980383c840853
----------------------------
"Fix for bug #55273 ""FLUSH TABLE tm WITH READ LOCK for Merge table causes assert failure"". Attempting to use FLUSH TABLE table_list WITH READ LOCK statement for a MERGE table led to an assertion failure if one of its children was not present in the list of tables to be flushed. The problem was not visible in non-debug builds. The assertion failure was caused by the fact that in such situations FLUSH TABLES table_list WITH READ LOCK implementation tried to use (e.g. lock) such child tables without acquiring metadata lock on them. This happened because when opening tables we assumed metadata locks on all tables were already acquired earlier during statement execution and a such assumption was false for MERGE children. This patch fixes the problem by ensuring at open_tables() time that we try to acquire metadata locks on all tables to be opened. For normal tables such requests are satisfied instantly since locks are already acquired for them. For MERGE children metadata locks are acquired in normal fashion. Note that FLUSH TABLES merge_table WITH READ LOCK will lock for read both the MERGE table and its children but will flush only the MERGE table. To flush children one has to mention them in table list explicitly. This is expected behavior and it is consistent with usage patterns for this statement (e.g. in mysqlhotcopy script). "	3326614df1d1dd01b3956a8f9c87003d839c485d
----------------------------
Bug#56528 Increased server footprint with MTR With recent changes in the performance schema default sizing parameters, the memory used by a mysqld binary increased accordingly. This negatively affects the MTR test suite, because running several tests in parallel now consumes more ressources. The fix is to leave the default production values unchanged, and to configure the MTR environment to limit memory used when running tests in the test suite, which is ok because only a few objects are typically used within a test script. This fix: - changed the default configuration in MTR to use less memory - adjusted the performance schema tests accordingly Note that 1,000 mutex instances was too short and caused test failures in the past in team trees, so the default used is now 10,000 in MTR. The amount of memory used by the performance schema itself can be observed with the statement SHOW ENGINE PERFORMANCE_SCHEMA STATUS 	92c6d9fc75f0025f0453e352d0bbfcc40398730e
----------------------------
WL#5096: Write test cases for WL 5092 Some rpl_row_img tests would make PB2 timeout on valgrind runs, because they would take too long to complete. We make these tests run faster by relaxing InnoDB transaction syncing to disk so that tests do not spend too much time on IO. This avoids PB2 test timeout (as stated above happening mostly on valgrind runs). Basically, we have deployed innodb_flush_log_at_trx_commit= 0 on .cnf files for those tests. Since these tests do not care about durability (we are not interested in crash-recovery scenarios), this is a safe change. 	7231f32cebe27bc699a9497c43cfc9c3a5e60e04
----------------------------
Bug#54543: update ignore with incorrect subquery leads to assertion failure: inited==INDEX When an error occurs while sending the data in a temporary table there was no cleanup performed. This caused a failed assertion in the case when different access methods were used for populating the table vs. retrieving the data from the table if IGNORE was specified and sql_safe_updates = 0. In this case execution continues, but the handler expects to continue with the access method used for row retrieval. Fixed by doing the cleanup even if errors occur. 	3d5b9792e61d0a5afba550fabd7bfbb3b35a4073
----------------------------
BUG#55377 max_binlog_cache_size does not work as specified The binary log is created with a maximum size defined by max (max_binlog_cache_size, binlog_cache_size) and not by the max_binlog_cache_size as one expects. To fix this behavior, we issue a warning message when the binlog_cache_size is greater than the max_binlog_cache_size and set binlog_cache_size to max_binlog_cache_size. 	984c9e539ffbf815dad941feb0ab89cf95deecde
----------------------------
Merge: bc93d51 d23a41d Manual merge: mysql-next-mr into mysql-next-mr-wl5092. Conflicts ========= Text conflict in mysql-test/include/diff_tables.inc Text conflict in mysql-test/suite/rpl/r/rpl_row_find_row.result Text conflict in mysql-test/suite/rpl/t/rpl_row_find_row.test Text conflict in sql/log_event.cc Text conflict in sql/sql_class.cc Text conflict in sql/sql_class.h Text conflict in sql/sql_update.cc 7 conflicts encountered. Additional changes due to merge =============================== rpl.rpl_conditional_comments deployed connection master after using diff_tables. log_event.cc Changed data type for binlog_row_image from uint to ulong. diff_tables.inc Existing version in mysql-next-mr is almost the same as in wl5092 tree, except for the fact that it does not restore the connection at the end. Kept the mysql-next-mr and deployed connection restoring at the end of diff_tables. 	ec03351a79c5e1d5e1acce827e5900b0ee6c2bc6
----------------------------
Merge: 1f82504 58ddafe ndb - merge in support for CI_BITMASK parameters in config.in and my.cnf - change to use same code path(as much as possible) for reading both config.ini and my.cnf so that the same rules are applied to config. 	278fb90c249dc47b6fa99a728b05eaf2975012bc
----------------------------
ndb - use configure to check for __is_pod and similar (instead of #defines), fix problems found 	778adecd598792260ea6fa50bbf4c9674ee4c0b9
----------------------------
ndb - Unit test for the new CI_BITMASK type for configuration parameters, also add some tests for CI_ENUM - mtr test to check that it's possible to specify CI_BITMASK and CI_ENUM in both my.nf and config.ini - This to make sure that functionality added for bug#56185 works 	58ddafebceb3018f552dd1da618a8521b0543d9e
----------------------------
ndb - trim the hostname read from my.cnf to avoid hostname with leading or ending spaces are used. 	5fe30d5da15024ce6a614684846a470b5e531297
----------------------------
ndb - Add a CI_BITMASK type for configuration parameters to make it possible for the ndb_mgmd to validate the bitmask spec. early. - Make LockExecuteThreadToCPU use the new type. Set max to 65535(i.e same as in ndbd). 	6203c8d92526fd5c3bfc9f5e81c29eaa05cfe1d0
----------------------------
ndb - Change the code so it uses same path for validating parameters regardless of wheter they are read from config.ini and my.cnf - This fixes a problem where CI_ENUM type was not properly validated when read through my.cnf 	3e22efb66033ef017cec2f7e135c12ba97bec09c
----------------------------
ndb - add checks to make sure that no CI_STRING parameters have min or max values set. - remove the min max from those config params that have it. 	63806c16f837ff1bffbea17a4c85a21bc1904b46
----------------------------
Bug#52312 lost Handler_read_last status variable Post-push fix: adjust more test results. 	39a44feb30aff9994b0cc7d585b79ae82fbf2a59
----------------------------
Fixed result file and temporary removed crash-safe collections until some bugs are fixed. To reproduce the bugs, run the following test case: ./mtr rpl_heartbeat_basic --mysqld=--relay-log-info-repository=TABLE --mysqld=--master-info-repository=TABLE 	2daac8f31b623b124703edfe1ff12ef7e1346594
----------------------------
Merge: d7c27ab e196059 BUG #55707 MTR test sys_vars.secure_file_priv fails when run with --mem option Use $MYSQL_TEST_DIR to point to mysql-test dir. The test was trying to go up three levels from data dir to get to the test dir. This will not work when run with --mem option. 	f56a7e1767673990e1d5cc7c5b770027b0b32bbe
----------------------------
"Bug#52312 lost Handler_read_last status variable Before this fix, the ha_read_last_count status variable was defined and updated internally, for never exposed as a system variable. This fix exposes the system variable as ""Handler_read_last"", for completness of the Handler_read_* system variables interface. Adjusted tests results accordingly. "	b4dd6de474df1bc8940101af8d9595ece340c2ac
----------------------------
Replay a change which I uncommitted to fix the tree: revno: 3255 revision-id: jimmy.yang@oracle.com-20100804020341-42tglff4hy2xrnv1 parent: jimmy.yang@oracle.com-20100803062157-s3he1ia42crj9jrk committer: Jimmy Yang <jimmy.yang@oracle.com> branch nick: mysql-next-mr-innodb timestamp: Tue 2010-08-03 19:03:41 -0700 message: Fix Bug #55114 Create status variable for innodb_open_files rb://412 approved by Sunny Bains 	78e169fdd1bc9bd96708d33b4d48f3765a15e504
----------------------------
Merge Bug#55832 fix from mysql-5.1-innodb: ------------------------------------------------------------ revno: 3550 revision-id: marko.makela@oracle.com-20100824081003-v4ecy0tga99cpxw2 parent: marko.makela@oracle.com-20100823102854-t1clrojqis2ley36 committer: Marko Mäkelä <marko.makela@oracle.com> branch nick: 5.1-innodb timestamp: Tue 2010-08-24 11:10:03 +0300 message: Bug#55832: selects crash too easily when innodb_force_recovery>3 dict_update_statistics_low(): Create bogus statistics for those indexes that cannot be accessed because of the innodb_force_recovery setting. ha_innobase::info(): Calculate statistics for each index, even if innodb_force_recovery is set. Fill in bogus data for those indexes that are not accessed because of the innodb_force_recovery setting. 	0a7a78a8d54029734d60809869098786d3680e00
----------------------------
Bug#55832: selects crash too easily when innodb_force_recovery>3 dict_update_statistics_low(): Create bogus statistics for those indexes that cannot be accessed because of the innodb_force_recovery setting. ha_innobase::info(): Calculate statistics for each index, even if innodb_force_recovery is set. Fill in bogus data for those indexes that are not accessed because of the innodb_force_recovery setting. 	ce7d6a288ca40e8a5e253c5c2e7084cfc985534c
----------------------------
Bug#55832: selects crash too easily when innodb_force_recovery>3 dict_update_statistics_low(): Create bogus statistics for those indexes that cannot be accessed because of the innodb_force_recovery setting. ha_innobase::info(): Calculate statistics for each index, even if innodb_force_recovery is set. Fill in bogus data for those indexes that are not accessed because of the innodb_force_recovery setting. 	109893dac0597b5114188ce257e469ad9f85110e
----------------------------
Bug #56006  test failures on mysql-5.1-rep+2-wl2540 this patch 1. fixes an assert erronously firing when the master started with --master-verify-checksum=1. 2. corrects access to event_buf bytes - the header flags - to treat the buffer as an array of bytes. 	8569939d254e43a9f88b50d19e94fa82f79ebeed
----------------------------
Bug#54747: Deadlock between REORGANIZE PARTITION and SELECT is not detected The ALTER PARTITION and SELECT seemed to be deadlocked when having innodb_thread_concurrency = 1. Problem was that there was unreleased latches in the ALTER PARTITION thread which was needed by the SELECT thread to be able to continue. Solution was to release the latches by commit before requesting upgrade to exclusive MDL lock. Updated according to reviewers comments (3). 	0c2b883dd2a9e8e5135d0830a60d475e85e0aecf
----------------------------
Bug#55912 FORMAT with locale set fails for numbers < 1000 Problems: - dot character was always printed as decimal point instead of localized decimal point for short numbers without thousands - Item_func_format::val_str always returned values in ASCII format, regargless of @@character_set_connection, which in case of utf32 led to crash in debug build, or to incorrect values in release build. Fix: - Adding a piece of code to replace dot character to localized decimal point in short numbers. - Changing parent class for Item_func_format to Item_str_ascii_func, because its val_str() implementation is heavily ASCII oriented. 	bf78f4767dc09d624cc3e1f721ff8244a1e63d89
----------------------------
BUG#54989 - With null_audit installed, server hangs on an attempt to install a plugin twice Server crashes when [UN]INSTALL PLUGIN fails (returns an error) and general log is disabled and there are audit plugins interested in MYSQL_AUDIT_GENERAL_CLASS. When audit event is triggered, audit subsystem acquires interested plugins by walking through plugin list. Evidently plugin list iterator protects plugin list by acquiring LOCK_plugin, see plugin_foreach_with_mask(). On the other hand [UN]INSTALL PLUGIN is acquiring LOCK_plugin rather for a long time. When audit event is triggered during [UN]INSTALL PLUGIN, plugin list iterator acquires the same lock (within the same thread) second time. Repeatable only with general_log disabled, because general_log triggers MYSQL_AUDIT_GENERAL_LOG event, which acquires audit plugins before [UN]INSTALL PLUGIN acquired LOCK_plugin. With this fix we pre-acquire audit plugins for events that may potentially occur during [UN]INSTALL PLUGIN. This hack should be removed when LOCK_plugin is fixed so it protects only what it supposed to protect. No test case for this fix - we do not have facility to test audit plugins yet. 	b8aceb707f8cca755548d4ee6319126432427db7
----------------------------
"Fixed failure of parts.partition_debug_sync_innodb.test which was caused by change of thread state name from ""Waiting for table"" to ""Waiting for table metadata lock"" (which has happened as part of fix for bug 52044 ""FLUSH TABLES WITH READ LOCK and FLUSH TABLES <list> WITH READ LOCK are incompati""). "	27cb76cd30bfd256eb563a3bdc69dbd3ca8520f3
----------------------------
BUG#53452 Inconsistent behavior of binlog_direct_non_transactional_updates with temp table This patch introduces two key changes in the replication's behavior. Firstly, it reverts part of BUG#51894 which puts any update to temporary tables into the trx-cache. Now, updates to temporary tables are handled according to the type of their engines as a regular table. Secondly, an unsafe mixed statement, (i.e. a statement that access transactional table as well non-transactional or temporary table, and writes to any of them), are written into the trx-cache in order to minimize errors in the execution when the statement logging format is in use. Such changes has a direct impact on which statements are classified as unsafe statements and thus part of BUG#53259 is reverted. 	c6d4915f3c9e242dc8cb02d9d96ffff6a66b7a7a
----------------------------
"Bug#50489: another segfault in fix_semijoin_strategies... This particular problem occurs when we try to execute a query multiple times with different optimizer switch settings. On first execution, semijoin materialization strategy is a candidate and an SJ_MATERIALIZATION_INFO object is created. On second execution, materialization strategy is not a candidate, but there is a dangling pointer to the SJ_MATERIALIZATION_INFO object created in the prior execution. The pointer is followed, and we suffer a segfault. The solution chosen here is to refactor the SJ_MATERIALIZATION_INFO class so that optimization information is put into a new struct Semijoin_mat_optimize which is embedded in struct st_nested_join. SJ_MATERIALIZATION_INFO itself is renamed to Semijoin_mat_exec. If semijoin materialization is an allowed strategy and materialization is possible for the semijoin in question, the Semijoin_mat_optimize object is filled in and an st_position object is created and filled with information about the join strategy for the materialization. Later in the optimization, the materialization strategy is compared with other semijoin strategies, and, if selected, an Semijoin_mat_exec object is created and attached to the join nest representing the semijoin operation. The object is then filled with data relevant for semijoin execution, such as number of tables involved, whether this is a scan, information about temporary table for materialization, etc. NOTE. This bug no longer occurs on the current souce code base. It does however fix bug#46744, which is re-introduced by the fix for bug#43768, and it should also be useful because of the refactoring effect on the semijoin materialization strategy. mysql-test/r/optimizer_switch.result Added results for test case for bug#50489 mysql-test/t/optimizer_switch.test Added test case for bug#50489 sql/sql_class.h Optimization data are removed from class SJ_MATERIALIZATION_INFO. SJ_MATERIALIZATION_INFO is renamed to Semijoin_mat_exec. sql/sql_select.cc optimize_semijoin_nests() will no longer create SJ_MATERIALIZATION_INFO objects. Instead it populates the Semijoin_mat_optimize struct inside the nested_join object with estimated cost for the materialized semijoin. fix_semijoin_strategies_for_picked_join_order() is given a boolean return value. The return value is necessary because the function may create Semijoin_mat_exec objects, hence it must be able to return error conditions. Notice that these objects are created and populated only if a semijoin materialization strategy is actually chosen. Reset of sjm.positions is performed in this function. advance_sj_state() has been slightly simplified: the ""emb_sj_nest"" is now assigned when the function is entered, in addition to changes that was necessitated by the splitting up of SJ_MATERIALIZATION_INFO. Reset of the pointer sj_nest->sj_mat_exec is added to JOIN::destroy(). sql/sql_select.h List with name sjm_info_list is renamed to sjm_exec_list. sql/sql_test.cc New interface for function print_sjm(), made necessary by the splitting of SJ_MATERIALIZATION_INFO. sql/sql_test.h New interface for function print_sjm(). sql/table.h Defines struct Semijoin_mat_optimize containing estimated cost for a materialized semijoin operation. The struct is added as a member in struct st_nested_join. "	7be27a778b6b897b6e1d21608a7a5341729df488
----------------------------
Backporting Bug#32391 Character sets: crash with --character-set-server from mysql-trunk-bugfixing (5.6.1-m5) from mysql-5.5-bugfixing (5.5.6-m3). 	89e6eb0b1e0199f2eecd5b27d8ebd488e4bcb2b6
----------------------------
Bug #55547 InnoDB is not included when configuring by default Added InnoDB to the 'default' plugin group, and modified the autoconf script so the 'default' group is actually built by default. (i.e  ./configure.am == ./configure.am --with-plugins=default , instead of being ./configure.am --with-plugins=none ) 	bd75361929caadac565d471d7e374060ff93794d
----------------------------
Bug #54850 rpl_ndb.rpl_ndb_stm_innodb and rpl_ndb.rpl_ndb_2other fails The two regressions tests failed after WL#5349 was pushed, since they were writted with the implicit requirement that MyISAM is the default storage engine. Adding --default-storage-engine=MyISAM as startup parameter, to mimic the pre-wl#5349 situation. 	7d2d2e0f9b50c9f5e813b3018d247125478e39d1
----------------------------
Bug#55001 Change in behavior: thread_concurrency (docs, example files) The system variable 'thread_concurrency' has been (re-)enabled on all platforms, to prevent startup errors. 'thread_concurrency' is unused and has no effect, on any platform, in MySQL 5.1 and later versions.  It will be deprecated, and removed, in context of worklog WL#5265 	19c9957367090afe9cb2bfb7ce81dea5c22751a0
----------------------------
Change default for innodb_strict_mode to FALSE. Note that this was originally pushed by Calvin but the was later reverted by mistake. bug#54702 	231a97fde065574538351f593184cefb05176364
----------------------------
Undo changes to innodb_strict_mode that went in by mistake in r3149 	0daa01fed06c452a168b7935aa87bec62d28247b
----------------------------
"Bug#32391 Character sets: crash with --character-set-server Problem: mysqld crashed on initialization of the built-in stopwords when started with --character-set-server=utf16. ft_init_stopwords() mistakenly compared the built-in stopwords using ""utf16"" as character set, which lead to exit on DBUG_ASSERT((slen % 2) == 0) in my_strnncollsp_utf16() when comparing a word with an even length (for example word=""about"", len=5). Fix: Using latin1 when initializing the built-in stopwords for the ""tricky"" character sets. "	1ca3e847e97966215fc29194c8c8f88204dfb858
----------------------------
"Bug#47595 Don't print log lines to STDOUT for ndb_mgmd - Move the printouts for which config files is being used until after the config has been read and thus the cluster logs lotation is known. It's a little chicken and egg problem since the location must be read before it can used. - Move the printout of ""MySQL Cluster management server X.X.X started..."" a little later so it also end up in cluster log. - Change the option parsing code in main.cpp to use ""fprintf(stderr, ..."" for error printouts and move it before setup of eventlogger - Print ""MySQL Cluster management server X.X.X"" to stdout as first thing when program starts up. "	1dc1e537a0dbb119e21d00c6e9a7688c293aad27
----------------------------
"Bug#54316 mysqldump and restore ndbinfo fails - Problem was caused by ""blocks"" and ""config_params"" lookup tables being empty after restore of dump with no data. - Don't allow the ndbinfo databse to be dumped(not even if explicitly given on command line). - Use LEFT JOIN in the views so that they would return rows even if the lookup tables are empty(for whatever reason). - Add primary key indexes on the lookup tables for faster lookups. "	42331288e42dfc0e8b5f68f28105c24a26cd9983
----------------------------
ndb - bug#55963 - Add DictTrace config variable 	f6ec19cf3fbe94eb275154c6372e87e971bc77ee
----------------------------
Bug#55416 Renaming of performance_schema tables for 5.5 Removed table SETUP_OBJECTS. Renamed table PROCESSLIST to THREADS. Renamed table EVENTS_WAITS_SUMMARY_BY_EVENT_NAME to EVENTS_WAITS_SUMMARY_GLOBAL_BY_EVENT_NAME. Adjusted Makefiles, code and tests accordingly. 	7dd46008503e7e4be844f32071a30db69abe9dc5
----------------------------
Bug#55906 Read errors in MGMAPI caused by interrupted 'poll' - Make 'ndb_socket_poller::poll' interrupt safe - Add 'ndb_socket_poller::poll_unsafe' for those that handle interrupted wait already - Add signal handler catching SIGUSR1 to two test programs to allow testing the interrupt safety. - Create subfunction in socket_io.cpp to get rid of duplicated time calulation and poll code 	e1c2fa199896b50f137da3d4335eaaad28d8c53d
----------------------------
BUG #55707 MTR test sys_vars.secure_file_priv fails when run with --mem option Use $MYSQL_TEST_DIR to point to mysql-test dir. The test was trying to go up three levels from data dir to get to the test dir. This will not work when run with --mem option. 	e196059b1018a335f333d0fabbf5f4a5a38d3471
----------------------------
Bug#55839 ndb_config --configinfo --xml does not expose HostName1/2 for TCP sections - Change HostName1 and HostName2 to CI_USED for TCP, SCI and SHM(although the latter two are still experimental they are changed for consistency) 	a4f826a6f264d3c2b9656b5729de71cc31180eea
----------------------------
Post-commit fix for Bug#41158 A label statement needs to be followed by at least one primary expression.  If built without WITH_PARTITION_STORAGE_ENGINE set, the block would be empty. Added ';' as a dummy statement to fix it. 	07a4e49a7f476f7fed3683e525931305b707cce3
----------------------------
Bug#54914: InnoDB: performance drop with innodb_change_buffering=all Reduce ibuf_mutex and ibuf_pessimistic_insert_mutex contention further. Protect ibuf->empty by the insert buffer root page latch, not ibuf_mutex. ibuf_tree_root_get(): Assert that ibuf_mutex is owned by the caller. Assert that the stamped page number is correct. Assert that ibuf->empty agrees with the root page. ibuf_size_update(): Do not update ibuf->empty. ibuf_init_at_db_start(): Update ibuf->empty while holding the root page latch. ibuf_add_free_page(): Return TRUE/FALSE instead of DB_SUCCESS/DB_STRONG_FAIL. ibuf_remove_free_page(): Release ibuf_pessimistic_insert_mutex as early as possible. ibuf_contract_ext(): Rely on a dirty read of ibuf->empty, unless the server is being shut down. Never acquire ibuf_mutex. Eliminate n_stored. ibuf_contract_after_insert(): Never acquire ibuf_mutex. Perform dirty reads of ibuf->size and ibuf->max_size. ibuf_insert_low(): Only acquire ibuf_mutex for mode==BTR_MODIFY_TREE. Perform dirty reads of ibuf->size and ibuf->max_size. Update ibuf->empty while holding the root page latch. ibuf_delete_rec(): Update ibuf->empty while holding the root page latch. ibuf_is_empty(): Release ibuf_mutex earlier. 	ef6f561a9ee9c7743eda64eec82c15d29ee1187f
----------------------------
"fix for simple test failures. Some tests set the ""debug"" variable but are expected to pass even if this variable doesn't exist; but for a binary which has debug_sync compiled in and not debug, setting debug will try to set (""prefix rule"") debug-sync-timeout and this will fail. Solution: made tests require debug binary. "	10ce6804900d7361d0f932041c609c6abafc0b03
----------------------------
Reduce the ibuf_mutex hold time. This does not fix the update regression in Bug #54914, but it does speed up the execution for innodb_change_buffering=inserts. ibuf_add_ops(), ibuf_merge_or_delete_for_page(), ibuf_delete_for_discarded_space(): Use atomic built-ins instead of ibuf_mutex, when available. ibuf_add_free_page(), ibuf_remove_free_page(), ibuf_contract_ext(): Release ibuf_mutex earlier. ibuf_free_excess_pages(): Release ibuf_mutex before a conditional branch. ibuf_insert_low(): Release ibuf_mutex before a conditional branch. Create ibuf_entry before re-acquiring ibuf_mutex. Simplify a loop to reduce code footprint. Release ibuf_mutex before mtr_commit() [btr_pcur_close()]. ibuf_is_empty(): Release ibuf_mutex before mtr_commit(). 	84fbabace0ad32c71c9317ff07b944adece92121
----------------------------
Bug #54909: Confusing description about read_buffer_size and read_rnd_buffer_size Applied the updated description from Paul's patch. 	87acb536f18657218910d6de846a6fba30d7024e
----------------------------
ndb - remove unecessary include of NdbMem.h in LocalConfig.cpp - move include of NdbOut.hpp into LocalConfig.cpp - add include of BaseString.hpp to LocalConfig.hpp 	daca395a9f00aa36d6c32f76b83bb2d7d3315cfd
----------------------------
"Part of fix for bug#52044 ""FLUSH TABLES WITH READ LOCK and FLUSH TABLES <list> WITH READ LOCK are incompatible"" to be pushed as separate patch. Replaced thread state name ""Waiting for table"", which was used by threads waiting for a metadata lock or table flush, with a set of names which better reflect types of resources being waited for. Also replaced ""Table lock"" thread state name, which was used by threads waiting on thr_lock.c table level lock, with more elaborate ""Waiting for table level lock"", to make it more consistent with other thread state names. Updated test cases and their results according to these changes. Fixed sys_vars.query_cache_wlock_invalidate_func test to not to wait for timeout of wait_condition.inc script. "	a6c00c276ed8e7f2e30301a414533891a8cf2b5d
----------------------------
WL#5508 SEAGULL: Move NDB version configuration down into storage/ndb - Improve comments and group defines together 	c9c7cfe46585e2cccf65dd7091ce07b132150b97
----------------------------
ndb - Add comment for JAVA_NDB_VERSION - Remove  JAVA_NDB_VERSION from my_config.h/config.h 	7dd15c0d82d478d6b7e36e7e828af58bb1822ad5
----------------------------
WL#5508 SEAGULL: Move NDB version configuration down into storage/ndb - Calculate the NDB_MYSQL_VERSION_XX variables from MYSQL_VERSION_ID thus removing the need for our build systems to extract it. - Remove automake and cmake code to extract NDB_MYSQL_VERSION_XX - Add test that NDB_MYSQL_VERSION_XX maps backto MYSQL_VERSION_ID - Remove NDB_MYSQL_VERSION_XX from my_config.h/config.h 	4d61b791dbe34dd694a22f5631df05fc289d8ac3
----------------------------
"WL#5508 SEAGULL: Move NDB version configuration down into storage/ndb - Add macro to type_JAVA.cmake that (if not already set) builds the version string to use when generating jars etc. directly from the NDB_VERSION_XX variables and save the string in JAVA_NDB_VERSION. - Call the macro from all places that need to variable to be set. - Remove old include file for extracting NDB version for ""java"" from configure.in "	6c36748dc9874e1a5e96a18d76f1d28720f972a5
----------------------------
WL#5508 SEAGULL: Move NDB version configuration down into storage/ndb_configure.m4 - Move NDB_VERSION_XXX variables from configure.in to ndb_configure.m4 - Make storage/ndb/include/CmakeLists.txt extract the NDB version from ndb_configure.m4 instead of configure.in 	bf8435bb55cd831e3013b7408c4305ef49b82447
----------------------------
Fix Bug #55114 Create status variable for innodb_open_files rb://412 approved by Sunny Bains 	5af8b4d1157525d3a7e84d71cd48f9cba0df07b2
----------------------------
ndb - reduce MCP in configure.in - fix merge error causing duplicate comments - add missing newline 	eabb20b175a146c8fbd22b6aefb1e633cc6479cf
----------------------------
Bug #54702: revert the default of innodb_strict_mode to false. 	ae67979f76f9bdcda08d6afdaf748bb9d0c12bb0
----------------------------
Revert revision which disabled the generating of configuration scripts if cmake is available. We need to always generate the scripts in order for the dual cmake/autotools support to work. 	b5c8757a6d48ad1c6b7f8707434a1b00a0beadb4
----------------------------
Bug #55188: GROUP BY, GROUP_CONCAT and TEXT - inconsistent results In order to be able to check if the set of the grouping fields in a GROUP BY has changed (and thus to start a new group) the optimizer caches the current values of these fields in a set of Cached_item derived objects. The Cached_item_str, used for caching varchar and TEXT columns, is limited in length by the max_sort_length variable. A String buffer to store the value with an alloced length of either the max length of the string or the value of max_sort_length (whichever is smaller) in Cached_item_str's constructor. Then, at compare time the value of the string to compare to was truncated to the alloced length of the string buffer inside Cached_item_str. This is all fine and valid, but only if you're not assigning values near or equal to the alloced length of this buffer. Because when assigning values like this the alloced length is rounded up and as a result the next set of data will not match the group buffer, thus leading to wrong results because of the changed alloced_length. Fixed by preserving the original maximum length in the Cached_item_str's constructor and using this instead of the alloced_length to limit the string to compare to. Test case added. 	d765e30a1d2533ce74e45a144be0e132c3485bf4
----------------------------
"Improved and additional tests for WL#4674 PERFORMANCE_SCHEMA Setup For Actors Attention: schema_lc1.result and schema_lc2.result are ""guesses"" because I couldn't check them within my environment. "	9b724609b1d7a75f5a8db14512c3e8df6241a5cd
----------------------------
Bug#55205 Memory leak in ndb_mgmd when --disable-config-cache is used - Unsubscribe from incoming signals before terminating the ConfigManager thread 	26f428c0bfb20820a1a01e00052495b88352e3b0
----------------------------
BUG#44209: MASTER_CONNECT_RETRY and --master-retry-count disconnected from each other Improvements on the tests: 1. Changed assertion when CHANGE MASTER TO master_rety_count=0; 2. Added assertion to check that when issuing a CHANGE MASTER TO without specifying a value for master_retry_count, the current value is preserved; 3. Added assertion checking that when feeding a negative value for master_retry_count, an error is raised; 	ef5c8f4357640e460ba7fe41bab1b590aedde9ff
----------------------------
BUG#44209: MASTER_CONNECT_RETRY and --master-retry-count disconnected from each other Post-push fix. CHANGE MASTER TO master_retry_count=0 was not working properly, because before assiging the value got from the lex, we would check if it was different than zero. This is wrong. To fix this we, deploy a flag that states when the value was indeed set by a CHANGE MASTER TO command - which could even be 0 - and only then we assign the new value. 	c25db00ddf7c24b48aa66259e346703543af500b
----------------------------
Bug #54660 MTR cannot start server properly with non-default innodb_log_file_size Pass any --innodb* options to bootstrap as well Backported to v1, where also a removal of --loose-skip-innodb is needed 	0ebd10bc3b06d8e5499e3935ddcf08525baac2c9
----------------------------
"Fix for bug #52044 ""FLUSH TABLES WITH READ LOCK and FLUSH TABLES <list> WITH READ LOCK are incompatible"". The problem was that FLUSH TABLES <list> WITH READ LOCK which was issued when other connection has acquired global read lock using FLUSH TABLES WITH READ LOCK was blocked and has to wait until global read lock is released. This issue stemmed from the fact that FLUSH TABLES <list> WITH READ LOCK implementation has acquired X metadata locks on tables to be flushed. Since these locks required acquiring of global IX lock this statement was incompatible with global read lock. This patch addresses problem by using SNW metadata type of lock for tables to be flushed by FLUSH TABLES <list> WITH READ LOCK. It is OK to acquire them without global IX lock as long as we won't try to upgrade those locks. Since SNW locks allow concurrent statements using same table FLUSH TABLE <list> WITH READ LOCK now has to wait until old versions of tables to be flushed go away after acquiring metadata locks. Since such waiting can lead to deadlock MDL deadlock detector was extended to take into account waits for flush and resolve such deadlocks. As a bonus code in open_tables() which was responsible for waiting old versions of tables to go away was refactored. Now when we encounter old version of table in open_table() we don't back-off and wait for all old version to go away, but instead wait for this particular table to be flushed. Such approach supported by deadlock detection should reduce number of scenarios in which FLUSH TABLES aborts concurrent multi-statement transactions. Note that active FLUSH TABLES <list> WITH READ LOCK still blocks concurrent FLUSH TABLES WITH READ LOCK statement as the former keeps tables open and thus prevents the latter statement from doing flush. "	5fff906edd3d7a5d999cec5403f009f33f8dfb81
----------------------------
Bug #54805 definitions in regex/my_regex.h conflict with /usr/include/regex.h Post Push fix: my_regex-t was vulnerable to #include file ordering: the result was that sizeof(off_t) == 4 in the .cc main program but sizeof(off_t) == 8 in the regex .c files fix: always include my_config.h first Added the same #include to all gunit test files. 	3b471901537ba7ee2d2db825536087c8f93f5368
----------------------------
Use an array of mutexes to control access to the page_hash table within each buffer pool. The idea is to reduce contention on the buf_pool mutex. Adds a new configuration parameter innodb_page_hash_mutexes with default being 256 and a permissible range of 1 - 1024. rb://394 	aad1c7d0dd8a152ef6bb685356c68ad9978d686a
----------------------------
Fix the failing innodb.innodb_bug54679 test A change in the default values of some config parameters caused this test to fail, adjust the test and make it more robust so it does not fail for the same reason in the future. 	3074ff5233d128be5a3539ab0dab9e213600513d
----------------------------
Do not generate autotools configuration scripts when cmake is to be used. 	92b9ca54228b750fd011ce83873a34aa187f7135
----------------------------
Merge: abacbed 83aebca Merge mysql-trunk-bugfixing -> mysql-trunk-innodb (resolving conflicts in mysql-test/suite/rpl/t/rpl_sync-slave.opt and configure.cmake) 	8152cd0ac80d3b1c7e9ff98082f109a3eb24433b
----------------------------
Fixed bug #42496 - the server could crash on a debug assert after a failure to write into a closed socket 	49d327ebf763dca23969ac4afe814617815d1411
----------------------------
BUG#55322: SHOW BINLOG EVENTS increases @@SESSION.MAX_ALLOWED_PACKET Problem: when SHOW BINLOG EVENTS was issued, it increased the value of @@session.max_allowed_packet. This allowed a non-root user to increase the amount of memory used by her thread arbitrarily. Thus, it removes the bound on the amount of system resources used by a client, so it presents a security risk (DoS attack). Fix: it is correct to increase the value of @@session.max_allowed_packet while executing SHOW BINLOG EVENTS (see BUG 30435). However, the increase should only be temporary. Thus, the fix is to restore the value when SHOW BINLOG EVENTS ends. The value of @@session.max_allowed_packet is also increased in mysql_binlog_send (i.e., the binlog dump thread). It is not clear if this can cause any trouble, since normally the client that issues COM_BINLOG_DUMP will not issue any other commands that would be affected by the increased value of @@session.max_allowed_packet. However, we restore the value just in case. 	cf5e69c9042614459b9098548be0b33cb4a4671d
----------------------------
Merge: 57d0aa0 9503a8e Manual merge from mysql-trunk-bugfixing. Conflicts: - cmake/cpack_source_ignore_files.cmake - packaging/WiX/CPackWixConfig.cmake 	dfb2f9afae6dc80dc59565d4bd2eb363e046edf6
----------------------------
"Post-merge fix. Suppressed warning message from main.innodb_mysql_lock2: ""Unsafe statement binlogged in statement format since BINLOG_FORMAT = STATEMENT."" "	bdf650defb345689c645429810a2219a82979889
----------------------------
Bug#53566 SHOW ENGINE PERFORMANCE_SCHEMA STATUS reports less memory than really used Backporting the fix from myql-next-mr (5.6) to mysql-trunk (5.5) 	9f27e289764f3d4e6d921b69cb2ea19e8c99bfb2
----------------------------
Strip maintainer mode options from the flags written to mysql_config. Those are mainly warning options intended to monitor the server code and shouldn't be leaked to client code. 	125315b4e4f2fc8b54df927bb77e896826a8e507
----------------------------
Merge: a9625de 42fb232 Manual merge Improve the system variable description. Add code to initialize server_uuid for embedded server. 	34e853373aced3805d0ad7b4e7b50aa05af8bb77
----------------------------
Bug #53493 : add_to_status does not handle the longlong fields in STATUS_VAR bytes_received/bytes_sent are ulonglong so they cannot be handled by the ulong handling code in add_to_status/add_diff_to_status(). Fixed by adding code to handle these two variables in add_to_status()/add_diff_to_status() and making sure they are not a subject to the ulong handling code. 	16a730882580465356e0582fbfbadb9e2722d3dd
----------------------------
Consolidation of the tests for WL#4895 PERFORMANCE_SCHEMA Instrumenting Table IO 1. Add several tests 2. Some modifications within the include files so that the can be used for the tests added 3. Minor beautification of the code 	b90853f1366eb328edde0663f219134b81324795
----------------------------
Fix Bug #55095 innodb_file_format_check: no warning for illegal value rb://397 approved by Sunny Bains 	5b775faf584562a246a6f9c36a1f8ecf0c2d5c01
----------------------------
"backport of guilhem@mysql.com-20100628140739-i9vy8ugxp1v5aspb from next-mr-bugfixing: BUG#54682 ""set sql_select_limit=0 does not work""; let SQL_SELECT_LIMIT=0 work like it does in 5.1. "	65bdafda29864697100260e4726b90166b122050
----------------------------
Handle more gracefully errors from que_eval_sql() Allow error codes other than DB_SUCCESS and DB_LOCK_WAIT_TIMEOUT to be returned from que_eval_sql(), construct a more generic message if an error is returned. 	2f23b1668f19a586f37bde9da046bd6f1f1480d7
----------------------------
Fix sys_vars.large_files_support_basic failure. 	bf4a5d961d0d3d7df3fbb054146a26ea8c2d711d
----------------------------
We can't rely on mysql_config for core functionality like plugins as it may be part of a separate package. Work out the likliest plugin directory using similar logic to the data directory, and avoid the dependancy. 	8f1b8816163ff24d005dda51482f2cb761eb8766
----------------------------
Remove flags which have already been defined in configure.cmake. Add a note to investigate -felide-constructors usage on OSX. 	8c3c09ab57eb348e8a2b54685e72a338a1776e40
----------------------------
Backporting patch for Bug#52716 (Large files support is disabled, large-pages option is broken) from next-mr to mysql-5.5.5-m3-release. Original revision: ------------------------------------------------------------ revision-id: vvaintroub@mysql.com-20100416134524-y4v27j90p5xvblmy parent: luis.soares@sun.com-20100416000700-n267ynu77visx31t committer: Vladislav Vaintroub <vvaintroub@mysql.com> branch nick: mysql-next-mr-bugfixing timestamp: Fri 2010-04-16 15:45:24 +0200 message: Bug #52716 Large files support is disabled, large-pages option is broken. Correct typo: large pages option was tied to wrong variable opt_large_files, instead of opt_large_pages. ------------------------------------------------------------ 	863b07d038b4e6f3afaf2ccd4126d4db4233e6d6
----------------------------
Backporting patch for Bug#52716 (Large files support is disabled, large-pages option is broken) from next-mr to trunk-bugfixing. Original revision: ------------------------------------------------------------ revision-id: vvaintroub@mysql.com-20100416134524-y4v27j90p5xvblmy parent: luis.soares@sun.com-20100416000700-n267ynu77visx31t committer: Vladislav Vaintroub <vvaintroub@mysql.com> branch nick: mysql-next-mr-bugfixing timestamp: Fri 2010-04-16 15:45:24 +0200 message: Bug #52716 Large files support is disabled, large-pages option is broken. Correct typo: large pages option was tied to wrong variable opt_large_files, instead of opt_large_pages. ------------------------------------------------------------ 	73074274edbd0c631cbbb31f8f25c29a14626bb2
----------------------------
Postfix for bug#48321 Some test cases set ANSI_QUOTES in sql_mode. So we have to use single quotes to quote literal strings. 	363a2ccc0c0c500b4c146bae4f829873623836d3
----------------------------
"A test case for Bug#50788 ""main.merge fails on HPUX"", and a backport of relevant changes from the 6.0 version of the fix done by Ingo Struewing. The bug itself was fixed by the patch for Bug#54811. MyISAMMRG engine would try to use MMAP on its children even on platforms that don't support it and even if myisam_use_mmap option was off. This lead to an infinite hang in INSERT ... SELECT into a MyISAMMRG table when the destination MyISAM table was also selected from. A bug in duplicate detection fixed by 54811 was essential to the hang - when a duplicate is detected, the optimizer disables the use of memory mapped files, and it wasn't the case. The patch below is also to not turn on MMAP on children tables if myisam_use_mmap is off. A test case is added to cover MyISAMMRG and myisam_use_mmap option. "	0e9b910d6b7442a42f2aea0a0043327fff44b267
----------------------------
Bug#52305 Customizing storage of server id inside the anyValue Test UserData part of AnyValue Add a DBUG-only env variable to trigger MySQLD to set the user portion of AnyValue to all 1s. Modify my.cnf for some AnyValue-sensitive testcases to set a 24-bit user portion which will be set to all 1s. This gives coverage of the case(s) where the User portion is non-zero, checking that the system still functions as expected w.r.t. ServerId, NoLogging etc. The existing repl_ndb_slave_lsu testcase is modified to also use the mysqlbinlog tool to look at the events recorded. A new variant of it called rpl_ndb_slave_lsu_anyval runs with the top 24 bits set to 1 and server-id-bits set to 7.  The testcase ensures that : - Server-ids are correctly extracted from the composite serverid - Composite serverids are binlogged - Composite serverids pass through the slave and can be binlogged - mysqlbinlog can be used to see composite server id values. 	ab78e96bb288ce855d7013a631d1ad7925a1b4f9
----------------------------
Bug#52305 Customizing storage of server id inside the anyValue Add support for server-id-bits to Ndb handler Ndb handler is modified to support the server-id-bits mechanism as follows : - Where server-id-bits is < 31, only those bits will be set on NdbApi operations created by the handler - When receiving events for committed NdbApi operations, only the server-id-bits lsbs will be consulted to determine the source serverId (if any). - When writing events to the Binlog, the user-data from the received AnyValue (if any) will be written into the Binlog event's ServerId.  Only the bottom server-id-bits will be set to the event's ServerId (As received for replicated updates, or the server's own Id for non-replicated updates). This mechanism allows : - NdbApi applications to set the user-data portion of the AnyValue for their operations (bits server-id-bits to 30). - NdbApi applications to listen to events and receive the user-data portion of their AnyValue. - User-data portions of AnyValue to be recorded in the Binlog - User-data portions of AnyValue to be tagged onto replicated updates in the slave - User-data portions of AnyValue to be recorded in the Slave's Binlog.... - Normal 'no-logging', 'log-slave-updates', 'replication-loop-detection' and 'ndb_apply_status' mechanism work as expected. The default value of server-id-bits is 32, which causes no change in the current behaviour of the Ndb handler w.r.t. AnyValue and ServerIds. Note that in future it may be useful to offer a configuration where the userdata portion of the AnyValue is ignored within a Cluster, but userdata is *not* recorded in the ServerId field of Binlogged events. 	41209f911ef88a3b6acfc2534492a712bff9a0f3
----------------------------
Bug#52305 : Customizing storage of server id inside the anyValue Add server-id-bits option to MySQLD A general server-id-bits option is added to MySQLD initialisation options. This option indicates the number of lsbs within the 32-bit ServerId which actually contain the server-id. Indicating that the actual server-id uses < 32 bits allows some of the remaining bits to be used for other purposes.  When extracting the actual server-id for purposes such as replication-loop-detection, the server will ignore the irrelevant bits. If the configured server-id cannot be expressed in server-id-bits then the MySQLD will refuse to start. The server-id bits option is used mask out the irrelevant bits of the serverid in the IO and SQL threads when deciding whether an event should be ignored based on serverid. The event's serverid is used to set the slave thread's thd->server_id in the normal way, and a new thd variable, unmasked_server_id carries the full 32-bits of the received server_id. In cases where server_id_bits is < 32, handlers can look at thd->unmasked_server_id to get the non-server-id data associated with the event. The mysqlbinlog tool gets a new option --server-id-bits which controls how it interprets the server ids in the Binlogs it reads.  As with MySQLD this defaults to 32.  Where the Binlog was written by a MySQLD with server-id-bits < 32 and some useful info in the msbs, running mysqlbinlog with server-id-bits of 32 allows this data to be seen. 	213ad2cb1dd2b938bc2775162805b8128fe28778
----------------------------
wl#2540 replication events checksum Few issues are fixed when discovered at merging with rep+2 repository containing bug@49741 fixes necessary for the wl: modified: all over modified files BINLOG_CHECKSUM_ALG_ILL -> BINLOG_CHECKSUM_ALG_UNDEF (Luis' suggestion). mysql-test/extra/rpl_tests/create_recursive_construct.inc actually must be bug@49741 call to replace 107. sql/log.cc removed earier introduced flag_arg to FD constructor. Although that is not any kind of error, The arg is unnecessary. STOP event generated by master is fixed to contain the correct (A). sql/log_event.cc removed earier introduced flag_arg to FD constructor. Corrected checksumming FD containting binlog-in-use flag ON: the event is logged with the actual value of the flag and checksum value corresponds to the event with the flag OFF. cleanup and a type typo in need_checksum() is fixed. FD version less than the current are constructed with checksum_alg := undefined. Easied logics of version comparison. sql/log_event.h removed earier introduced flag_arg to FD constructor. methods to FD are add to ease logics of version comparison. sql/slave.cc changes due to `removed earier introduced flag_arg to FD constructor'. 	e69f5173f5a56e732854ec7695feccf812f6ecce
----------------------------
fix include directory for config/type_util.cmake 	f972bdb01258203d75f7ffe0391b4691019bfec7
----------------------------
bug#52737 plugin_dir is set to /usr/local/mysql/lib/plugin while starting via mysqld_safe Rather than hardcode the plugin directory, enhance mysql_config to fix plugin path when running a relocated install, and use it to provide the plugin directory to mysqld_safe. 	18cd34153c857d54edaee48b077a328e6e557167
----------------------------
Copy-pasted the wrong line from configure.in, fix gcc detection. 	0b7b897dec0abebe3f86aae2cbb4dcdec0da5bbd
----------------------------
BUG#54842: DROP TEMPORARY TABLE not binlogged after manual switching binlog format to ROW BUG 52616 fixed the case which the user would switch from STMT to ROW binlog format, but the server would silently ignore it. After that fix thd->is_current_stmt_binlog_format_row() reports correct value at logging time and events are logged in ROW (as expected) instead of STMT as they were previously and wrongly logged. However, the fix was only partially complete, because on disconnect, at THD cleanup, the implicit logging of temporary tables is conditionally performed. If the binlog_format==ROW and thd->is_current_stmt_binlog_format_row() is true then DROPs are not logged. Given that the user can switch from STMT to ROW, this is wrong because the server cannot tell, just by relying on the ROW binlog format, that the tables have been dropped before. This is effectively similar to the MIXED scenario when a switch from STMT to ROW is triggered. We fix this by removing this condition from close_temporary_tables. 	bf261cdb6f270a086c8ca9d4ae41b90421de8983
----------------------------
Bug#54041: MySQL 5.0.92 fails when tests from Connector/C suite run The problem was that a user could supply supply data in chunks via the COM_STMT_SEND_LONG_DATA command to prepared statement parameter other than of type TEXT or BLOB. This posed a problem since other parameter types aren't setup to handle long data, which would lead to a crash when attempting to use the supplied data. Given that long data can be supplied at any stage of a prepared statement, coupled with the fact that the type of a parameter marker might change between consecutive executions, the solution is to validate at execution time each parameter marker for which a data stream was provided. If the parameter type is not TEXT or BLOB (that is, if the type is not able to handle a data stream), a error is returned. 	07767edcce4709b42bae5d3d9ca7be9ceacb95da
----------------------------
"BUG#54682 ""set sql_select_limit=0 does not work""; let SQL_SELECT_LIMIT=0 work like it does in 5.1. "	d9d12eb9e870c28154307312e827ade5b43dda46
----------------------------
"Bug #53757 assert in mysql_truncate_by_delete The assert was triggered if a connection executing TRUNCATE on a InnoDB table was killed during open_tables. This bug was fixed in the scope of Bug #45643 ""InnoDB does not support replication of TRUNCATE TABLE"". This patch adds test coverage to innodb_mysql_sync.test. "	9702d53ff8c340e9b9563e7f5298b336c2af7f3a
----------------------------
BUG#54509: rpl_show_slave_running crashes the server sporadically Problem: SQL and IO thread were racing for the IO_CACHE. The former to flush it, the latter to close it. In some cases this would cause the SQL thread to lock an invalid IO_CACHE mutex (it had been destroyed by IO thread). This would happen when SQL thread was initializing the master.info Solution: We solve this by locking the log and checking if it is hot. If it is we keep the log while seeking. Otherwise we release it right away, because a log can get from hot to cold, but not from cold to hot. 	16141e0c8591736197c4b74dc3f9c0e7ca85b12b
----------------------------
"Fix Bug #54739 Accidental change in compile-time definitions for FreeBSD Revert the accidental setting of ""HAVE_BROKEN_REALPATH"" on current versions of FreeBSD, do it for both autotools (""configure.in"") and cmake (""cmake/os/FreeBSD.cmake""). "	f1cc08433e09088f0929d387b8b2fe79f610c6af
----------------------------
"CMakeLists.txt cmake/build_configurations/mysql_release.cmake - Corrected spelling ENABLE_LOCAL_INFILE => ENABLED_LOCAL_INFILE - In addition to ""RelWithDebInfo"", set target ""Release"" and ""Debug"" - Set Debug flags - Enabled SSL on Mac OS X - For gcc builds, set RELEASE and DEBUG flags as well - For g++ builds, added ""-fno-implicit-templates"" - Use ""-O"" (gcc -O1) for optimized binaries, as ""DEBUG"" in out case is more about enabling trace support to the server, no optimization makes binaries too slow to be practical to reproduce problems cmake/os/WindowsCache.cmake - Removed unused HAVE_SYS_IOCTL config.h.cmake - Added header checks and missing defines - Removed unused HAVE_SYS_IOCTL - Grouped and uncommented some HAVE_* that are really not defines, but internal variables used in the CMake setup, - Added hard coded flags for HP-UX and Mac OS X configure.cmake - Added header checks and missing defines - Removed unused HAVE_SYS_IOCTL - ""sys/dir.h"" test needs ""sys/types.h"" - Corrected syntax for ""sys/ptem.h"" test - Don't exclude test for some types if Mac OS X, harmless to do the test and we want the HAVE_<type> settings - Added hard coded flags for HP-UX and Mac OS X extra/yassl/CMakeLists.txt extra/yassl/taocrypt/CMakeLists.txt - Added missing source file ""template_instnt.cpp"" "	24b3962d512fad51225ceafcd50d74f52e603472
----------------------------
Backport into build-201006221614-5.1.46sp1 > ------------------------------------------------------------ > revno: 1810.3987.14 > revision-id: davi.arnaut@sun.com-20100429132816-ictyul6d75itek22 > parent: ramil@mysql.com-20100429044232-f0pkyx8fnpszf142 > committer: Davi Arnaut <Davi.Arnaut@Sun.COM> > branch nick: 50974-5.0 > timestamp: Thu 2010-04-29 10:28:16 -0300 > message: >   Bug#50974: Server keeps receiving big (> max_allowed_packet) packets indefinitely. > >   The server could be tricked to read packets indefinitely if it >   received a packet larger than the maximum size of one packet. >   This problem is aggravated by the fact that it can be triggered >   before authentication. > >   The solution is to no skip big packets for non-authenticated >   sessions. If a big packet is sent before a session is authen- >   ticated, a error is returned and the connection is closed. > ------------------------------------------------------------ > revno: 3363 [merge] > revision-id: davi.arnaut@sun.com-20100429231819-i3anwzrdasjmezvt > parent: davi.arnaut@sun.com-20100401131522-895y8uzvv8ag44gs > parent: davi.arnaut@sun.com-20100429132816-ictyul6d75itek22 > committer: Davi Arnaut <Davi.Arnaut@Sun.COM> > branch nick: mysql-5.1-bugteam > timestamp: Thu 2010-04-29 20:18:19 -0300 > message: >   Manual merge. > ------------------------------------------------------------ > Use --include-merges or -n0 to see merged revisions. 	74a077b0b67dbf9dd449972e9a3c954de12e8399
----------------------------
"Post-push fix for WL#4801 Removed the ""SELECT * FROM mysql.slave_relay_log_info;"" that was causing the test to fail in the windows platform due to differences in how paths are represented in different platforms. "	255fe8443a8f9dbd04cd8ca7238cc600801257c3
----------------------------
BUG#28760 / WL#344 post-push fix In this worklog, init_relay_log_info was changed into a member function, Relay_log_info::init() in rpl_rli.cc. To reduce the size of the original patch, the function did not replace references to the old explicit parameter 'rli' by implicit references to the new implicit parameter 'this'. This patch replaces the explicit references to 'rli' by implicit references to 'this'. 	3cb7201a48974d51f1b673368101453842e4b815
----------------------------
"Implemented a new ""CHANGE MASTER TO MASTER_DELAY = X"" option, which causes the replication slave to be X seconds behind the master. This entails the following changes: - New syntax: CHANGE MASTER TO MASTER_DELAY = <int> - The SQL thread sleeps as needed. - SHOW SLAVE STATUS has three new fields with information about the delay and the SQL thread status. - When the slave SQL thread is sleeping, SHOW PROCESSLIST indicates this. - RESET SLAVE resets the delay. - The option is saved to the relay_log.info file. - The BINLOG statement no longer accepts event types other than Format_description_log_event or row events. In addition, some small refactorings and bug fixes were needed to make this work. See file-specific commit messages for details. "	23038ba62420f90b334e3d682228470faee2afbf
----------------------------
WL#5416 Restructure MTR subquery tests Second patch: - Add tests for more optimizer_switch combinations - Put ordering on some query results to reduce difference between different settings of optimizer_switch - Disable a few test cases that are failing due to bugs 	31aa3721132ed8d6995a263d6e1c368cdaf7d8c2
----------------------------
wl#2540 replication events checksum fixing mysqlbinlog compilation issue and correcting binlog_checksum.test. 	51701da14a4efc22f4ca689e55662902b43d8ade
----------------------------
WL#5416 Restructure MTR subquery tests Restructure the current MTR subquery tests, into a set of general subquery tests that can be run with different settings of optimizer_switch and optimizer_join_cache_level. Main goals: - Be able to more systematically test subquery execution with different settings of optimizer_switch. - Be able to incrementally add optimizer_switch sub-variables to a tree without having to operate with different result files in different trees. (This will make it easier to incrementally add original 6.0 features now residining in mysql-next-mr-opt-backporting to mysql-next-mr) - Be able have different defaults for optimizer_switch settings in different trees without having to operate with different result files. Moved existing test files into include directory to be included from different tests with different settings of optimizer_swicth.  Added tests for whether switches and cache levels that tests depend upon are supported.  If not, tests are skipped. Added result ordering to some queries to avoid result differences when switches are turned off. 	0e1b654d907e2bd47c52de2cd807f00c06036c49
----------------------------
WL#5349 Change default storage engine to InnoDB The default storage engine is changed from MyISAM to InnoDB, in all builds except for the embedded server. In addition, the following system variables are changed: * innodb_file_per_table is enabled * innodb_strict_mode is enabled * innodb_file_format_name_update is changed to 'Barracuda' The test suite is changed so that tests that do not explicitly include the have_innodb.inc are run with --default-storage-engine=MyISAM.  This is to ease the transition, so that most regression tests are run with the same engine as before. Some tests are disabled for the embedded server regression test, as the output of certain statements will be different that for the regular server (i.e SELECT @@default_storage_engine).  This is to ease transition. 	3ac6a4b451f61b8edf9cb326111157a86f1bdc1c
----------------------------
Fix possible waits when dropping an index Fix possible waits when dropping an index similarly to the way they were fixed in DROP TABLE - set trx->allowed_to_wait to FALSE during que_eval_sql() so it does not wait on possible user locks but returns DB_LOCK_WAIT_TIMEOUT immediately. Also push the error message to the client in addition to printing it to the server error log and change DROP TABLE not to fail if stats cannot be deleted. 	6cc400293b25d6a638fe976e0dcb95729ef04581
----------------------------
This change splits innodb_file_format_check into innodb_file_format_check and innodb_file_format_max two system variables. And this also fixes bug #53654 after 2nd shutdown innodb_file_format_check attains strange values. rb://366 approved by Marko 	689d245782350e9296e4e44a090fb6c1e38e6d15
----------------------------
"Post-push fix for WL#2775. Implemented changes requested by reviewers: . Changed the signature of the Rpl_info_table_access::find_info_id(). . Changed the name of the option that defines the storage engine used for the mysql.slave_master_info and mysql.slave_relay_log_info from ""engine-rep"" to ""rep-engine"". . Added a comment explaining why the positions are not updated after processing XID event. "	536c5f104680674665eb1e323781c4f8625a8d91
----------------------------
"Bug #52275  	CMake configure wrapper does not handle --with-comment correctly Properly convert --with-comment do not uppercase it, quote as it might contain spaces. "	f79c50f8754267b849a4c6da32ca7605d1c67b44
----------------------------
Resolve possible waits in DROP TABLE * Add a new flag allowed_to_wait to trx_t that when FALSE has the same effect as thd_lock_wait_timeout() being 0 for this trx. * Set allowed_to_wait to FALSE for the private trx that is doing DELETE FROM table_stats WHERE table_name='t'; inside DROP TABLE t; If the DBA has locked the rows in table_stats then DROP will return an error. * Ensure that the stats tables will not get DROPped when dict_stats_drop_table() is executing by inrementing the table reference count. Currently MySQL is protecting us with the LOCK_open mutex, but there are plans to remove it. * Remove now unnecessary function lock_table_by_name() 	26bbdab642436a58727c31923b17efcaeb7b6454
----------------------------
BUG#52737: plugin_dir is set to /usr/local/mysql/lib/plugin while starting via mysqld_safe Incremental patch to fix plugin_dir from .../lib/plugin to .../lib/mysql/plugin. 	c7170276efa491d4c6a04a454710701ae78eb53d
----------------------------
bug#52182 c01_hborder.diff configure HB order [re-commit] 	bba97daae0925785ef7a1fa6f6d00e19323033eb
----------------------------
ndb test - make the config file for loki27 similar to linux by adding initial tablespaces and shared memory settings 	b284c62c4a2ec68a6cd45982695b1f826c64eab7
----------------------------
Bug #52321 mtr test suite paths need to be updated Use $suitedir instead of $basedir to find suites Add 'testdir' to ConfigFactory 	4316bf37f042fce342ac8b984976030e550e8d16
----------------------------
Make perfschema.pfs_upgrade and sys_vars.wait_timeout_func experimental. 	63f529a469c9a6f7bc63e07a04105603c4b6456d
----------------------------
Bug #54368 MTR does not recognize carriage return in --defaults-file Remove any leftover trailing ^M from lines read in 	3a320f95deeba165a4879836a8fc45a0f0f95168
----------------------------
wl#2540 replication events checksum The final conceptual patch addresses the 1st item for the last commit todo. That includes a. extending rpl_checksum to demonstrate slave execution stability in face of binary and relay-log rotations in the context of master and slave having arbitrary (possibly different) server's checksum algorithms. b. prior the test to pass some piece of code was clean up to simplify logics of need_checksum() and propagation of the relay-log checksum Alg from one master-slave session to the other. c. binlog_checksum is converted from bool to enum forcing changes in external and internal interfaces as well as the master-slave binlog-checksum handshake. This patch leaves the reliable FD issue out to be addresses in a separate piece of work. That will implement an idea described on WL#2540 which is about `we need to distinguish between a checksummed-and-corrupted FD and not checksummed'. TODO: 1. extend the test base to verify all cover cases of OM -> NS and NM -> OS 2. merge with bug#49741 Fine details of changes per file: mysql-test/extra/rpl_tests/rpl_log.test gave out to wait for  bug#49741 merge to edit myself mysql-test/include/have_binlog_checksum_off.inc a new guard to require by tests which mess with simulation incompatible checksum ways. mysql-test/suite/rpl/t/rpl_checksum.test to demonstrate slave execution stability in face of binary and relay-log rotations in the context of master and slave having arbitrary (possibly different) server's checksum algorithms. sql/log.cc Addressing, binlog-checksum bool-to-enum-conversion, RL-checksum placeholder logics simplification, Log_event::need_checksum() correcting and relaxing. sql/log.h Commenting on the definition of relay_log_checksum_alg as the placeholder of  Relay-LoG  checksum alg value. sql/log_event.cc Addressing, binlog-checksum bool-to-enum-conversion, RL-checksum placeholder logics simplification, Log_event::need_checksum() correcting and relaxing. sql/rpl_mi.h sql/rpl_mi.cc RL-checksum placeholder logics simplification. The last seen value of FD_m.A (master's FD checksum alg) is stored in relay_log's member right upon receiving the event. That makes unnecessary ealier ramped up last_master_checksum_alg. sql/mysqld.c sql/mysql_priv.h sql/log_event.h Addressing, binlog-checksum bool-to-enum-conversion. sql/set_var.h Addressing binlog-checksum bool-to-enum-conversion. *Notice* change (private->protected for `value' member) in a base class which is similar to one done ago to  sys_var_set. sql/slave.cc Addressing binlog-checksum bool-to-enum-conversion incl master-slave handshake, equality of FD_q.A with RL.checksum_alg. sql/sql_repl.cc Addressing binlog-checksum bool-to-enum-conversion via redifing the binlog-checksum sys_var class. 	a99ce7c2121c313a6f1f0a8fa5feb3a18d2dad63
----------------------------
Post-push fix for WL#2775. Added a reference to server_ids.h. 	5aa004ae4da84449f4fe2e291d7ad26e2fa84857
----------------------------
"Post-push fix for WL#2775. 1- Changed the name of the following tables: . mysql.rli_info to mysql.slave_relay_log_info and; . mysql.mi_info to mysql.slave_master_info. 2- Removed the empty Xid_log_event::do_update_pos as Log_event::update_pos is not called from the slave.cc when an XID_EVENT is processed. This means however, that update_pos() is called if the event is skiped. 3- A TRUE returned from find_info_id() was interpreted as ""row not found"" what was not right. So, we fixed this. "	25bb19723b215020bba3113ba89f6d396c850f51
----------------------------
Overcome return code variation due to VM_TRACE defaulting of opt_core_file. 	530150f9acc4aabaffaec88f4be44cf77baf2835
----------------------------
wl#2540 replication events checksum the patch covers fixing rpl, binlog suite testing. That includes two tests edited, the new rpl_checksum* improved and source files. The latter a. refined Log_event::need_checksum() with checking  LOG_EVENT_RELAY_LOG_F inside b. changing FD constructor to let  LOG_EVENT_RELAY_LOG_F flag to be propagated into c. fixing ROLLBACK query event to be constructed with the direct binlogging intention d. some cleanup incl improved asserts. 	44231a61482fd74ace3bc93756e7b8102ee1aee8
----------------------------
"A review comment for WL#4441 "" LOCK_open: Remove requirement of mutex protecting thd->open_tables"". We should not manipulate with table->s->version outside the table definition cache code, but use the TDC API to achieve the desired result. Fix one violation: close_all_tables_for_name(). "	b976fb144407d3fbc892d080fce9bcd3c3922c93
----------------------------
Bug #53949 Allow MTR2 to start server without hardcoded command-line options Added option --user-args, to be used with --start* Only keeps --defaults-file and --defaults-group-suffix Also added missing help text entry for --start-and-exit 	84a27302a17f807339d5ee2e1bef306516375b4d
----------------------------
Merge: 85391c9 5ac769b Bug#20837 Apparent change of isolation level during transaction Bug#46527 COMMIT AND CHAIN RELEASE does not make sense Bug#53343 completion_type=1, COMMIT/ROLLBACK AND CHAIN don't preserve the isolation level Bug#53346 completion_type has strange effect in a stored procedure/prepared statement Added test cases to verify the expected behaviour of : SET SESSION TRANSACTION ISOLATION LEVEL, SET TRANSACTION ISOLATION LEVEL, @@completion_type, COMMIT AND CHAIN, ROLLBACK AND CHAIN ..and some combinations of the above 	0cb90edfe5350eef140801a08f19ac82fc01c0dd
----------------------------
"WL#4441 ""LOCK_open: Remove requirement of mutex protecting thd->open_tables"" thd->open_tables list is not normally accessed concurrently except for one case: when the connection has open SQL HANDLER tables, and we want to perform a DDL on the table, we want to abort waits on MyISAM thr_lock of those connections that prevent the DDL from proceeding, and iterate over thd->open_tables list to find out the tables on which the thread is waiting. In 5.5 we mostly use deadlock detection and soft deadlock prevention, as opposed to ""hard"" deadlock prevention of 5.1, which would abort any transaction that may cause a deadlock. The only remaining case when neither deadlock detection nor deadlock prevention is implemented in 5.5 is HANDLER SQL, where we use old good thr_lock_abort() technique form 5.1. Thus, replace use of LOCK_open to protect thd->open_tables with thd->LOCK_ha_data (a lock protecting various session private data). This is a port of the work done for 5.5.4 for review and inclusion into 5.5.5. "	4b6b69d22e33b1fadf1546492b17c81dfed20766
----------------------------
WL#5363: Thread Pool Service Interface In order to allow thread schedulers to be dynamically loaded, it is necessary to make the following changes to the server: - Two new service interfaces - Modifications to InnoDB to inform the thread scheduler of state changes. - Changes to the VIO subsystem for checking if data is available on a socket. - Elimination of remains of the old thread pool implementation. The two new service interfaces introduces are: my_thread_scheduler A service interface to register a thread scheduler. thd_wait A service interface to inform thread scheduler that the thread is about to start waiting. In addition, the patch adds code that: - Add a call to thd_wait for table locks in mysys thd_lock.c by introducing a set function that can be used to set a callback to be used when waiting on a lock and resuming from waiting. - Calling the mysys set function from the server to set the callbacks correctly. 	b1dcf448ead09e9a70cf035f20ac0e1a168e79a6
----------------------------
"Patch that changes approach to how we acquire metadata locks for DML statements and changes the way MDL locks are acquired/granted in contended case. Instead of backing-off when a lock conflict is encountered and waiting for it to go away before restarting open_tables() process we now wait for lock to be released without releasing any previously acquired locks. If conflicting lock goes away we resume opening tables. If waiting leads to a deadlock we try to resolve it by backing-off and restarting open_tables() immediately. As result both waiting for possibility to acquire and acquiring of a metadata lock now always happen within the same MDL API call. This has allowed to make release of a lock and granting it to the most appropriate pending request an atomic operation. Thanks to this it became possible to wake up during release of lock only those waiters which requests can be satisfied at the moment as well as wake up only one waiter in case when granting its request would prevent all other requests from being satisfied. This solves thundering herd problem which occured in cases when we were releasing some lock and woke up many waiters for SNRW or X locks (this was the issue in bug#52289 ""performance regression for MyISAM in sysbench OLTP_RW test"". This also allowed to implement more fair (FIFO) scheduling among waiters with the same priority. It also opens the door for introducing new types of requests for metadata locks such as low-prio SNRW lock which is necessary in order to support LOCK TABLES LOW_PRIORITY WRITE. Notice that after this sometimes can report ER_LOCK_DEADLOCK error in cases in which it has not happened before. Particularly we will always report this error if waiting for conflicting lock has happened in the middle of transaction and resulted in a deadlock. Before this patch the error was not reported if deadlock could have been resolved by backing off all metadata locks acquired by the current statement. "	571acc878b4ff884e78c2a8373a9c22660ea180d
----------------------------
Merge: ec97ce9 75dce25 manual merge from mysql-trunk-bugfixing Conflicts: Text conflict in mysql-test/r/archive.result Contents conflict in mysql-test/r/innodb_bug38231.result Text conflict in mysql-test/r/mdl_sync.result Text conflict in mysql-test/suite/binlog/t/disabled.def Text conflict in mysql-test/suite/rpl_ndb/r/rpl_ndb_binlog_format_errors.result Text conflict in mysql-test/t/archive.test Contents conflict in mysql-test/t/innodb_bug38231.test Text conflict in mysql-test/t/mdl_sync.test Text conflict in sql/sp_head.cc Text conflict in sql/sql_show.cc Text conflict in sql/table.cc Text conflict in sql/table.h 	1af11051bffc8d364f5e78167d9f7d8e5e3c99e9
----------------------------
wl#2540 replication events checksum Addressing `never attempt to execute' corrupted event requirement. *This is not yet the final commit but rather an improved prototype to capture all discussed arch-issues*. TODO: 1.  extend test bases to cover few corner cases and more simulations to add. 2.  sort out if we need (A) duplication of to be content with always CRC32-ed FD. LOG_EVENT_CHECKSUM_F flag is removed. Instead, the FD event is responsible to hold the checksum alg descriptor (A). If FD version is lower that the home of checksumming then the descriptor will stay in an undefined value which allows to support OM -> NS scenario (normal upgrading that is). At relay-logging the master's FD is always examined on the matter of (A) value. The value is propagated into FD-for-queue that affect the way the local slave events are relay-logged (FD, Rotate, Stop). The mentioned propagation makes possible to identify (A) correctly regardless of what server originated the event at time of reading RL by SQL thread. FD is made to contain (A) as well as CRC32 signature regardless of (A) value. That is FD starting from the home-checksumming version can be always CRC32-verified. There are few exceptional cases. I. The first event from master is not FD but so called fake Rotate event. In order to recognize its checksum status slave-master handshake is extended to notify the slave side about the instant value of @@global.binlog_checksum of the master that matches R_f checksum. II. R_f or any real Rotate from master are relay-log right after the slave's own FD_s. As the last seen FD is (A)-holder for the following events stream R is relay-logged checksum-compatibly to FD_s. sql/log MYSQL_BIN_LOG class is extended with `relay_log_checksum_alg' memeber to denote the slave's initial preference how to checksum its FD as well as serves as tool to keep up FD_q's checksum_alg value at time FD_q changes -> (STOP SLAVE: NULL) -> (START SLAVE: restores). write_cache:  fixing the end_log position because one did account systematic BINLOG_CHECKSUM_LEN drift per event. slave side STOP event, FD, Rotate event are `flagged' right after constructor with appropriate value of checksum_alg. sql/log_event Log_event:checksum_alg    the base class is made the placeholder to serve as mechanism to control checksumming Log_event::need_checksum(). sql/rpl_m + Master_info::checksum_alg_before_fd   to hold checksum alg in use until IO thread has received FD + Master_info::last_master_checksum_alg  restart slave via STOP, START sequence makes IO thread to rotate the former session relay-log. The rotation event of the new session needs checksum alg of the former one. sql/slave.cc get_master_version_and_clock()  elaborated slave-master handshake to make the slave be aware about R_f checksum and to prepare FD_q.checksum_alg with the value from the last session (if it happened) or with the very first RL's FD's checksum_alg (to instruct how to checksum R_f incl one from OM). queue_event()   takes care of facing the first R_f, as well as exceptions incl OM -> NS. sql/sql_repl.c refined fake_rotate_event(), send_heartbeat_event() to deal with the correct checksum_alg values when prepering events. Providing support for SQL thread and Show-Binlog-Events handlers. 	b865bedf4a8323c45ab79dc8a375c536b13646aa
----------------------------
merge of patch for bug#52913 from 5.1-bugteam to trunk-bugfixing. Changed $basedir to $bindir in mysql-test-run.pl. 	7e84f28c74e6e75f2093fa7e21b6a2b3781b9fe9
----------------------------
WL#5381 SEAGULL: Move configure.in extensions for ndb to storage/ndb/plug.in - move the check for 'clock_gettime' in librt back to configure.in so that it's properly detected the first time around. - (also submitted patch to fix the bug 37639 in a future MySQL version) 	9e0cb008fcc8d2ea7468bac0885cb637f968050d
----------------------------
WL#5381 SEAGULL: Move configure.in extensions for ndb to storage/ndb/plug.in - Fix problem with the AM_CONDITIONAL for BUILD_NDBMTD being evaluated too early in configure - this is due to order of including plug.in files and actually running the plugin actions - by redefining the AM_CONDITIONAL as part of running the actions. This will cause the AM_CONDITIONAL to be properly evaluated after the checks for ndbmtd asm have been made while also making it available in a build without ndb. 	8352fd6a741986a1e0dc8c40524497e191a272af
----------------------------
WL#5381 SEAGULL: Move configure.in extensions for ndb to storage/ndb/plug.in - Remove old junk comment 	fc51fd50005209625617b83b3af06f6ac284456b
----------------------------
WL#5381 SEAGULL: Move configure.in extensions for ndb to storage/ndb/plug.in - Move remaining checks to ndb_configure.m4 - The checks will only be run if ndbcluster is enabled 	d2f8f4b3f46c87c9ec3fd39056c4ec0eff6b2d17
----------------------------
WL#5381 SEAGULL: Move configure.in extensions for ndb to storage/ndb/plug.in - Move all code for checking if ndbmtd is supported/enabled to NDB_CHECK_NDBMTD - Run the checks only if ndbcluster is enabled and --with-ndbmtd(which is the default) is specified - Remove the unused HAVE_NDBMTD_ASM define - Remove the export build_ndbmtd (no other AM_CONDITIONAL is exported) 	51b7e132ce9394c7701c7ef154515f537bf238d1
----------------------------
WL#5381 SEAGULL: Move configure.in extensions for ndb to storage/ndb/plug.in - Remove unused ndb_mgmclient_libs define 	c8cb06babea773110d20449ed14d89b789bff751
----------------------------
WL#5381 SEAGULL: Move configure.in extensions for ndb to storage/ndb/plug.in - Remove unused TEST_NDBCLUSTER define 	050e6b6ca9dd86a3f70a78752d6db5b0162f294a
----------------------------
ndb - fix ndb_socket_poller to compie also without HAVE_POLL(small oversight) - Use SOCKET_SIZE_TYPE everywhere(2 places) for last arg to my_getsockopt 	19c7b2241da793081706d6dd62176d1f148d9e5b
----------------------------
"Bug#29791 relocation R_X86_64_32 against `a local symbol' - Changed libmysys, libmystrings and libdbug from normal libs to noinst libtool helper libs. - Changed libndbclient to include the symbols from libmysys, libmystring and libdbug - This is a backport of relevant parts for fixing the bug from 6.0 to next-mr, it does not include: --  the changes to tests in mysys/ -- any changes to configure ie. ZLIB_LIBS, NSL_LIBS or CRYPT_LIBS -- the change to ""mysql_config"" -- the change to BUILD/autorun.sh "	f01b791d1ee5842b42336e1bee96c5ae0bf320f7
----------------------------
Merge: 7d9eaa3 36d2769 Manual merge from mysql-5.1-bugteam to mysql-trunk-merge. conflicts: conflict      configure.in 	6633d23f0254f8d614debce16ffa90a61ed4935f
----------------------------
Merge: 3ed0c0e 02fc237 merge mysql-trunk-bugfixing --> mysql-next-mr-bugfixing Conflicts: rpl_ndb_binlog_format_errors.result rpl_ndb_binlog_format_errors.test 	392a0b3b8e82788acbab642c62bfcca8aee87650
----------------------------
BUG#50479 DDL stmt on row-only/stmt-only tables generate spurious binlog_format errors In the fix of BUG#39934 in 5.1-rep+3, errors are generated when binlog_format=row and a statement modifies a table restricted to statement-logging (ER_BINLOG_ROW_MODE_AND_STMT_ENGINE); or if binlog_format=statement and a statement modifies a table restricted to row-logging (ER_BINLOG_STMT_MODE_AND_ROW_ENGINE). However, some DDL statements that lock tables (e.g. ALTER TABLE, CREATE INDEX and CREATE TRIGGER) were causing spurious errors, although no row might be inserted into the binary log. To fix the problem, we tagged statements that may generate rows into the binary log and thence the warning messages are only printed out when the appropriate conditions hold and rows might be changed. 	02fc237a2c4f14d9a2f9b543f732e2347123717f
----------------------------
ndb - rewrite the NDB_CLOSE_SOCKET mess to a inline function 	b2c758a96f168f31f1683951b91074b33f752576
----------------------------
Merge: 71bc62d 355a167 Bug#34303 Client using NDBAPI crashes if client application uses many connections - Merge to 7.0 - Add copyright headers to ndb_socket* files - Convert SocketInputStream2 to use 'ndb_poll' 	03ca6e26b4b388d87f5e1f0737bdeb9c6dc1e6b8
----------------------------
"Bug#34303 Client using NDBAPI crashes if client application uses many connections - Add portability wrapper class ndb_socket_poller for 'poll' and 'select' with special dynamic fd_set support for Windows. - Add new 'ndb_poll' function for waiting on events on one socket. - Use the 'ndb_poll' function everywhere waiting on one socket. - Change from ""struct timeval"" to ""int timeout_millisec"" as parameter to sendIsPossible, no need to convert back and forth when 'ndb_poll' accepts timeout in milliseconds. - Add new member variable to TCP_Transporter for remembering which index in the poll ist each transporter is using. - Backport the remove of 'select' before disconnect of faulty connection from 7.0 - Remove the windows specific ""sleep if no fds for select"", since that is now done in ndb_socket_poller - Backport patch from 7.0 which makes the SocketServer::doAccept loop sleep if there is a failure returned from 'accept', otherwise 100% CPU was used. "	355a167e73d2d6046c8f75ef2c3e069e25ce6ade
----------------------------
"Merge: f775c6d e061985 Bug #49931  	Incorrect type in read_log_event error Bug #49932  	mysqlbinlog max_allowed_packet hard coded to 1GB The size limitation of ROW event is controlled by binlog-row-event-max-size (4G), which can be larger than max-allowed-packet (1G). And the value of max_allowed_packet is hard coded to 1GB in mysqlbinlog. But the slave IO/SQL thread and mysqlbinlog just check the size of the ROW event by the value of 'max_allowed_packet' when reading log event from binlog. So it will cause 'Event too large' or 'packet too large' error, if the size of ROW event is bigger than the value of 'max_allowed_packet'. To fix the problem, the slave IO/SQL thread and mysqlbinlog will check the bigger one of the values of 'max_allowed_packet' and 'binlog-row-event-max-size' when reading log event from binlog. And add a new 'binlog-row-event-max-size' (4G by default) option to mysqlbinlog. Then mysqlbinlog can read a large ROW event. "	eb46686c9ee4a22068392570c22e649e8b76b426
----------------------------
"Merge: 006e158 e061985 Bug #49931  	Incorrect type in read_log_event error Bug #49932  	mysqlbinlog max_allowed_packet hard coded to 1GB The size limitation of ROW event is controlled by binlog-row-event-max-size (4G), which can be larger than max-allowed-packet (1G). And the value of max_allowed_packet is hard coded to 1GB in mysqlbinlog. But the slave IO/SQL thread and mysqlbinlog just check the size of the ROW event by the value of 'max_allowed_packet' when reading log event from binlog. So it will cause 'Event too large' or 'packet too large' error, if the size of ROW event is bigger than the value of 'max_allowed_packet'. To fix the problem, the slave IO/SQL thread and mysqlbinlog will check the bigger one of the values of 'max_allowed_packet' and 'binlog-row-event-max-size' when reading log event from binlog. And add a new 'binlog-row-event-max-size' (4G by default) option to mysqlbinlog. Then mysqlbinlog can read a large ROW event. "	85394bf8b64ee7fb8ed2d74f25f17c9ad2154d84
----------------------------
"Bug #49931  	Incorrect type in read_log_event error Bug #49932  	mysqlbinlog max_allowed_packet hard coded to 1GB The size limitation of ROW event is controlled by binlog-row-event-max-size (4G), which can be larger than max-allowed-packet (1G). And the value of max_allowed_packet is hard coded to 1GB in mysqlbinlog. But the slave IO/SQL thread and mysqlbinlog just check the size of the ROW event by the value of 'max_allowed_packet' when reading log event from binlog. So it will cause 'Event too large' or 'packet too large' error, if the size of ROW event is bigger than the value of 'max_allowed_packet'. To fix the problem, the slave IO/SQL thread and mysqlbinlog will check the bigger one of the values of 'max_allowed_packet' and 'binlog-row-event-max-size' when reading log event from binlog. And add a new 'binlog-row-event-max-size' (4G by default) option to mysqlbinlog. Then mysqlbinlog can read a large ROW event. "	e061985813db54948f99892d89f7e076242473a5
----------------------------
Updated RQG grammar and test setup to fix 2 problems causing false failures to be reported when testing SPJ: #1: Disabled usage of scalar subquery as we may get false errors: 'Returned more than 1 rows' due to this exception being trown when producing intermediate results. #2: Specify a case sensitive (or binary) collation sequence when the test databases are created. Required to ensure a deterministic result set when a LIMIT is specifed as part of the query. Removed previous test configuration where usage of latin1 and utf8 was hardcoded as part of the RQG grammar. 	6b5796dc845ae037d12f6cb559396d7035c59784
----------------------------
"A 5.1-only version of  fix for bug #46947 ""Embedded SELECT without FOR UPDATE is causing a lock"". SELECT statements with subqueries referencing InnoDB tables were acquiring shared locks on rows in these tables when they were executed in REPEATABLE-READ mode and with statement or mixed mode binary logging turned on. This was a regression which were introduced when fixing bug 39843. The problem was that for tables belonging to subqueries parser set TL_READ_DEFAULT as a lock type. In cases when statement/mixed binary logging at open_tables() time this type of lock was converted to TL_READ_NO_INSERT lock at open_tables() time and caused InnoDB engine to acquire shared locks on reads from these tables. Although in some cases such behavior was correct (e.g. for subqueries in DELETE) in case of SELECT it has caused unnecessary locking. This patch implements minimal version of the fix for the specific problem described in the bug-report which supposed to be not too risky for pushing into 5.1 tree. The 5.5 tree already contains a more appropriate solution which also addresses other related issues like bug 53921 ""Wrong locks for SELECTs used stored functions may lead to broken SBR"". This patch tries to solve the problem by ensuring that TL_READ_DEFAULT lock which is set in the parser for tables participating in subqueries at open_tables() time is interpreted as TL_READ_NO_INSERT or TL_READ. TL_READ is used only if we know that this is a SELECT and that this particular table is not used by a stored function. Test coverage is added for both InnoDB and MyISAM. This patch introduces an ""incompatible"" change in locking scheme for subqueries used in SELECT ... FOR UPDATE and SELECT .. IN SHARE MODE. In 4.1 (as well as in 5.0 and 5.1 before fix for bug 39843) the server would use a snapshot InnoDB read for subqueries in SELECT FOR UPDATE and SELECT .. IN SHARE MODE statements, regardless of whether the binary log is on or off. If the user required a different type of read (i.e. locking read), he/she could request so explicitly by providing FOR UPDATE/IN SHARE MODE clause for each individual subquery. The patch for bug 39843 broke this behaviour (which was not documented or tested), and started to use locking reads for all subqueries in SELECT ... FOR UPDATE/IN SHARE MODE. This patch restores 4.1 behaviour. This patch should be mostly null-merged into 5.5 tree. "	78c6a8ca30ee47407f034ec76008d200793cca7c
----------------------------
"BUG#53437 @@session.sql_bin_log support in substatements is incorrect The thd->variables.option_bits & OPTION_BIN_LOG is currently abused: it's both a system variable and an implementation switch. The current approach to this option bit breaks the session variable encapsulation. Besides it is allowed to change @@session.sql_bin_log within a transaction what may lead to not correctly logging a transaction. To fix the problems,  we created a thd->variables variable to represent the ""sql_log_bin"" and prohibited its update inside a transaction or sub-statement. "	9fbf4b723dc1b50596fd2b31c1fa3d31672ded17
----------------------------
"Fix for bug #51263 ""Deadlock between transactional SELECT and ALTER TABLE ...  REBUILD PARTITION"". ALTER TABLE on InnoDB table (including partitioned tables) acquired exclusive locks on rows of table being altered. In cases when there was concurrent transaction which did locking reads from this table this sometimes led to a deadlock which was not detected by MDL subsystem nor by InnoDB engine (and was reported only after exceeding innodb_lock_wait_timeout). This problem stemmed from the fact that ALTER TABLE acquired TL_WRITE_ALLOW_READ lock on table being altered. This lock was interpreted as a write lock and thus for table being altered handler::external_lock() method was called with F_WRLCK as an argument. As result InnoDB engine treated ALTER TABLE as an operation which is going to change data and acquired LOCK_X locks on rows being read from old version of table. In case when there was a transaction which already acquired SR metadata lock on table and some LOCK_S locks on its rows (e.g. by using it in subquery of DML statement) concurrent ALTER TABLE was blocked at the moment when it tried to acquire LOCK_X lock before reading one of these rows. The transaction's attempt to acquire SW metadata lock on table being altered led to deadlock, since it had to wait for ALTER TABLE to release SNW lock. This deadlock was not detected and got resolved only after timeout expiring because waiting were happening in two different subsystems. Similar deadlocks could have occured in other situations. This patch tries to solve the problem by changing ALTER TABLE implementation to use TL_READ_NO_INSERT lock instead of TL_WRITE_ALLOW_READ. After this step handler::external_lock() is called with F_RDLCK as an argument and InnoDB engine correctly interprets ALTER TABLE as operation which only reads data from original version of table. Thanks to this ALTER TABLE acquires only LOCK_S locks on rows it reads. This, in its turn, causes inter-subsystem deadlocks to go away, as all potential lock conflicts and thus deadlocks will be limited to metadata locking subsystem: - When ALTER TABLE reads rows from table being altered it can't encounter any locks which conflict with LOCK_S row locks. There should be no concurrent transactions holding LOCK_X row locks. Such a transaction should have been acquired SW metadata lock on table first which would have conflicted with ALTER's SNW lock. - Vice versa, when DML which runs concurrently with ALTER TABLE tries to lock row it should be requesting only LOCK_S lock which is compatible with locks acquired by ALTER, as otherwise such DML must own an SW metadata lock on table which would be incompatible with ALTER's SNW lock. "	c070e5a1ede5c34dda7fdefe93d7c19be53ceb00
----------------------------
"WL#3126 TCP address binding for mysql client library - This patch extends the MySQL C API making it possible to select which local interface to use when clients connect to a MySQL Server using TCP. The user calls 'mysql_options' to specify the address which will will be used in 'mysql_real_connect' to extract a list of address info's which the source socket will 'bind' to. If no matching source+destination is found an error will be returned. - Since the client_ip memeber of st_mysql_options is only used by embedded server and the bind_address is only used by non embedded server we can reuse it and thus avoid breaking the ABI(like was done in MySQL Cluster) without using the ""extension"". Example: mysql_options(mysql, MYSQL_OPT_BIND, ""192.168.10.12""); - Add support for --bind-address to the mysql, mysqladmin, mysqlbinlog, mysqlcheck, mysqldump, mysqlimport and mysqlshow programs "	9584a05b1ba16c15467d79dcdb7db1ba924b3785
----------------------------
WL#5369: Remove --optimizer_search_depth=63 Remove deprecated value 63 for this switch, and the old function find_best() that was controlled by this value. mysql-test/r/greedy_optimizer.result WL#5369: Updated test result. mysql-test/r/mysqld--help-notwin.result WL#5369: Updated test result. mysql-test/r/mysqld--help-win.result WL#5369: Updated test result. mysql-test/suite/sys_vars/r/optimizer_search_depth_basic.result WL#5369: Updated test result. mysql-test/suite/sys_vars/t/optimizer_search_depth_basic.test WL#5369: Updated test file. mysql-test/t/greedy_optimizer.test WL#5369: Updated test file. sql/sql_select.cc Removed test for 'MAX_TABLES+2' in choose_plan(), removed function find_best(), ie we are now always calling greedy_search(), unless we use straight_join to override the join optimizer. sql/sql_select.h Removed reference to find_best(). sql/sys_vars.cc Updated limits and comment for variable optimizer-search-depth. 	2796d8e1c9bb0b5b9eabb9358aca7f827d07e847
----------------------------
BUG#44209: MASTER_CONNECT_RETRY and --master-retry-count disconnected from each other Post-push fix. The mi->retry_count was set to an uninitilized value when master.info did not contain a correspondent line for the retry_count value. We fix this by setting the default before actually loading the value from master.info. If there is no value to read, mi->retry_count remains the default (or the value set in the command line). The retry_count in master.info value takes precedence over the one from the command line (which I believe is more inline with the proposal for deprecation of master-retry-count). 	5268bf73f3907453cb6aec4a2f6203894ad0d9b5
----------------------------
Bug#42643: InnoDB does not support replication of TRUNCATE TABLE The problem was that TRUNCATE TABLE didn't take a exclusive lock on a table if it resorted to truncating via delete of all rows in the table. Specifically for InnoDB tables, this could break proper isolation as InnoDB ends up aborting some granted locks when truncating a table. The solution is to take a exclusive metadata lock before TRUNCATE TABLE can proceed. This guarantees that no other transaction is using the table. Incompatible change: Truncate via delete no longer fails if sql_safe_updates is activated (this was a undocumented side effect). 	3c279d9a5a45d734c7cdd2b641520e199e342f95
----------------------------
"Pre-requisite patch for bug #51263 ""Deadlock between transactional SELECT and ALTER TABLE ... REBUILD PARTITION"". The goal of this patch is to decouple type of metadata lock acquired for table by open_tables() from type of table-level lock to be acquired on it. To achieve this we change approach to how we determine what type of metadata lock should be acquired on table to be open. Now instead of inferring it at open_tables() time from flags and type of table-level lock we rely on that type of metadata lock is properly set at parsing time and is not changed further. "	a3c080be7ac95ce7f6f384a07f9ff0b31fd33a0f
----------------------------
configure.cmake - Reverted a faulty change of MY_SEARCH_LIBS - Added the proper change for MY_SEARCH_LIBS and HAVE_<libname> 	3dec34f4f71f721652c49e612cb6bc9c53cebefe
----------------------------
Bug #49741  test files contain explicit references to bin/relay-log positions Some of the test cases reference to binlog position and these position numbers are written into result explicitly. It is difficult to maintain if log event format changes. There are a couple of cases explicit position number appears, we handle them in different ways A. 'CHANGE MASTER ...' with MASTER_LOG_POS or/and RELAY_LOG_POS options Use --replace_result to mask them. B. 'SHOW BINLOG EVENT ...' Replaced by show_binlog_events.inc or wait_for_binlog_event.inc. show_binlog_events.inc file's function is enhanced by given $binlog_file and $binlog_limit. C. 'SHOW SLAVE STATUS', 'show_slave_status.inc' and 'show_slave_status2.inc' For the test cases just care a few items in the result of 'SHOW SLAVE STATUS', only the items related to each test case are showed. 'show_slave_status.inc' is rebuild, only the given items in $status_items will be showed. 'check_slave_is_running.inc' and 'check_slave_no_error.inc' and 'check_slave_param.inc' are auxiliary files helping to show running status and error information easily. 	cc0544083698163cf5f76d20e8aba7ec4f573eb3
----------------------------
"Fix for Bug#52923 (Inadequate documentation of ""Can't get hostname for your address"" error). The thing is that on some platforms (e.g. Mac OS X) sockaddr_in / sockaddr_in6 contain a non-standard field (sin_len / sin6_len), that must be set. The problem was that only standard fields were set, thus getnameinfo() returned EAI_SYSTEM instead of EAI_NONAME. The fix is to introduce configure-time checks (for GNU auto-tools and CMake) for those additional fields and to set them if they are available. "	75e552d50910e88debeca2fa18cc6d9a18da1843
----------------------------
"Follow-up for the fix for bug #46947 ""Embedded SELECT without FOR UPDATE is causing a lock"". This patch tries to address problems which were exposed during backporting of original patch to 5.1 tree. - It ensures that we don't change locking behavior of simple SELECT statements on InnoDB tables when they are executed under LOCK TABLES ... READ and with @@innodb_table_locks=0. Also we no longer pass TL_READ_DEFAULT/TL_WRITE_DEFAULT lock types, which are supposed to be parser-only, to handler::start_stmt() method. - It makes check_/no_concurrent_insert.inc auxiliary scripts more robust against changes in test cases that use them and also ensures that they don't unnecessarily change environment of caller. "	6ceacd4fb94f84faeb6d637d068cea2722a016c1
----------------------------
add cluster configure options to cmake 	ee2f2277d67639823f312f70b457ba76f12d306a
----------------------------
config.h.cmake - Set SIZEOF_VOIDP the same way as others - Unindent the no Mac OS settings, to let the checker scripts find the lines - Removed duplicate SIZEOF_SIZE_T setting - Added missing value for HAVE_CHARSET_ascii configure.cmake - Added HAVE_ prefix to library names, like HAVE_LIBM - Set HAVE_CXXABI_H if header is found, HAVE_ABI_CXA_DEMANGLE controls if useful - Set SIZEOF_VOIDP the same way as others 	497abee8f31732367ee3c7d74c0cd56313535609
----------------------------
Merge a change from mysql-5.1-innodb: TO DO: Enable this in CMake-based builds. ------------------------------------------------------------ revno: 3474 revision-id: marko.makela@oracle.com-20100520104042-ma2nsscqdvwoph8k parent: marko.makela@oracle.com-20100519081618-h38q02qxuvcowbtk committer: Marko Mäkelä <marko.makela@oracle.com> branch nick: 5.1-innodb timestamp: Thu 2010-05-20 13:40:42 +0300 message: Bug#53593: Add some instrumentation to improve Valgrind sensitivity BUILD/*: Add valgrind_configs=--with-valgrind. BUILD/*: Remove -USAFEMALLOC from valgrind_flags. configure.in: Add AC_ARG_WITH(valgrind) and HAVE_VALGRIND. include/my_sys.h: Define a number of MEM_ wrappers for VALGRIND_ functions. include/my_sys.h: Make TRASH do MEM_UNDEFINED(). include/m_string.h: Remove unused macro bzero_if_purify(A,B). _mymalloc(): Declare MEM_UNDEFINED() on the allocated memory. _myfree(): Declare MEM_NOACCESS() on the freed memory. storage/innobase/include/univ.i: Enable UNIV_DEBUG_VALGRIND based on HAVE_VALGRIND rather than HAVE_purify. Possible things to do: * In my_global.h, remove the defined(HAVE_purify) condition from the _WIN32 uint3korr(). * In my_global.h *int*korr(), use | instead of + in order to keep the Valgrind V bits accurate * Consider replacing HAVE_purify with HAVE_VALGRIND * Use VALGRIND_CREATE_BLOCK, VALGRIND_DISCARD in mem_root and similar places 	525768ddc9625f23074c7c90d819f768ac9f826a
----------------------------
Bug#53593: Add some instrumentation to improve Valgrind sensitivity BUILD/*: Add valgrind_configs=--with-valgrind. BUILD/*: Remove -USAFEMALLOC from valgrind_flags. configure.in: Add AC_ARG_WITH(valgrind) and HAVE_VALGRIND. include/my_sys.h: Define a number of MEM_ wrappers for VALGRIND_ functions. include/my_sys.h: Make TRASH do MEM_UNDEFINED(). include/m_string.h: Remove unused macro bzero_if_purify(A,B). _mymalloc(): Declare MEM_UNDEFINED() on the allocated memory. _myfree(): Declare MEM_NOACCESS() on the freed memory. storage/innobase/include/univ.i: Enable UNIV_DEBUG_VALGRIND based on HAVE_VALGRIND rather than HAVE_purify. Possible things to do: * In my_global.h, remove the defined(HAVE_purify) condition from the _WIN32 uint3korr(). * In my_global.h *int*korr(), use | instead of + in order to keep the Valgrind V bits accurate * Consider replacing HAVE_purify with HAVE_VALGRIND * Use VALGRIND_CREATE_BLOCK, VALGRIND_DISCARD in mem_root and similar places 	5fc862d6c96be8dd9b5b4e938cb34cfa42f09501
----------------------------
WL#5092: fixing mysql-5.1-rpl-wl5092 merge to mysql-next-mr-wl5092 Fixed: - binlog_row_image system var implementation - binlog_row_image system var tests - st_table::mark_columns_per_... -> TABLE::mark_columns_per_... 	6e0423112cc37730663b2339a0ed7a830851b9f0
----------------------------
Fix a bug reported by PushBuild on OSX 10.6.3. It turned out to be a compiler bug. The code has been changed to work around it. To reprocude the bug simply revert this change and build the binary with: GCC Using built-in specs. Target: i686-apple-darwin10 Configured with: /var/tmp/gcc/gcc-5659~1/src/configure --disable-checking --enable-werror --prefix=/usr --mandir=/share/man --enable-languages=c,objc,c++,obj-c++ --program-transform-name=/^[cg][^.-]*$/s/$/-4.2/ --with-slibdir=/usr/lib --build=i686-apple-darwin10 --program-prefix=i686-apple-darwin10- --host=x86_64-apple-darwin10 --target=i686-apple-darwin10 --with-gxx-include-dir=/include/c++/4.2.1 Thread model: posix gcc version 4.2.1 (Apple Inc. build 5659) export LDFLAGS='-g -arch i386' export CFLAGS='-g -no-cpp-precomp -arch i386 -O2' export CXXFLAGS='-g -no-cpp-precomp -arch i386 -O2' ./configure --enable-thread-safe-client --enable-local-infile --with-pic --with-client-ldflags=-static --with-mysqld-ldflags=-static --with-zlib-dir=bundled --without-ndb-debug --with-big-tables --with-ssl --with-readline --with-embedded-server --with-archive-storage-engine --with-blackhole-storage-engine --with-csv-storage-engine --with-example-storage-engine --with-federated-storage-engine --with-partition --with-extra-charsets=all --with-innodb --with-ndbcluster --with-libevent --target=i386-apple-darwin --program-transform-name= Approved by Marko on IM. 	33e6fc1ffa8342911b2cba5ba97e9af5250ed587
----------------------------
"config.h.cmake - Added missing HAVE_SYS_TIMES_H, HAVE_SYS_TIME_H, HAVE_TIME_H, HAVE_TIME and HAVE_TIMES - Removed most #if constructs, keep logic in ""configure.cmake"" - Use space after # if inside #if, for consistency configure.cmake - Added MY_CHECK_TYPE_SIZE function that sets both SIZEOF_* and HAVE_* - If ""sys/stream.h"" exists, include it before ""sys/ptem.h"" in test - Set VOID_SIGHANDLER if RETSIGTYPE is set to ""void"" "	bb6c611314e6fef51fb31e797b7c61598f33f671
----------------------------
Fix bug #52546, crash on shutdown of plugin with innodb_use_sys_malloc=0. rb://339, approved by Sunny Bains. 	0ddfb66f5b45c49d1931aa6400ae77b4dec67473
----------------------------
"Partial and sufficient backporing of sergefp@mysql.com-20090319170358-ksx8sx0xolhj9sym : ""set optimizer_switch='';"" does nothing, replace with ""set optimizer_switch=default;"" "	97b12e6880ffd5a0c40e9665b7b0dc29a86b2d41
----------------------------
BUG#50410: rpl_ndb tests should run with binlog_format=row Post-fix: Updated a test case after the patch for BUG#50410, because the patch makes ndb to run in the row format and as such unsafe warning messages are not printed out. 	6400d6d54a1a80046ad1b848887afddd36f533c1
----------------------------
Bug#53617 Missing performance schema tables not reported in the server log at startup Before this fix, when the performance schema tables are missing due to a broken installation or upgrade, the server would start but not report missing performance schema tables. With this fix, missing tables are reported in the server error log, like for example as: ERROR Native table 'performance_schema'.'SETUP_TIMERS' has the wrong structure This test can not be automated: tested manually, no script provided. 	a7b0fcad7967a83b39450144cad005a417519609
----------------------------
Small clean-up. Removed standalone enum_open_table_action enum type, which some time ago became part of Open_table_context class. Apparently standalone enum type was erroneously re-introduced during one of merges. 	017d66b5c80663acad3d968a408de6fd52db3070
----------------------------
bug#49400: when parsing a config file, reject any TCP,SHM, or SCI connection that is a duplicate of a previously defined connection. 	f062b9430617a5e5fc98208fcba3e3929e57ff79
----------------------------
Post-fix for Bug#50373: sys_vars.secure_file_priv_basic can not be run with mysql-test/var as a symlink any longer. 	6fcceb3d580ac061f3f2d365e3738842112bbf56
----------------------------
BUG#50410: rpl_ndb tests should run with binlog_format=row Problem: The rpl_ndb did not set binlog_format explicitly. Since the default is binlog_format=statement, it means that the suite ran with that. ndb does not support binlog_format=statement, and many tests were skipped because they sourced include/have_binlog_format_row_or_mixed.inc Fix: set binlog_format=row explicitly in the configuration file for the rpl_ndb suite. 	b0b0000d4069d055cdbe9c5c7f2fd59eb31cc529
----------------------------
Bug#21317 SHOW CREATE DATABASE does not obey to lower_case_table_names preserve lettercase for DB name as it specified in 'show create' (backport to next-mr) 	635479cf41cae3225c34a33093393696d50ce6a7
----------------------------
Merge: 57aad34 cb0d64c Manual merge from mysql-trunk-merge. Conflicts: - configure.in 	c68df6b2bb2d759482b1092a6a2595c9eb3f0a6e
----------------------------
Merge from mysql-5.1-innodb: ------------------------------------------------------------ revno: 3459 revision-id: marko.makela@oracle.com-20100511165845-lsw7seixftgzpfqt parent: vasil.dimov@oracle.com-20100511110029-18xvuu6r7har8toh committer: Marko Mäkelä <marko.makela@oracle.com> branch nick: mysql-5.1-innodb2 timestamp: Tue 2010-05-11 19:58:45 +0300 message: Fix sys_vars.tx_isolation_func.test, which was broken in revno 3432 when making READ UNCOMMITTED lock as little as READ COMMITTED. 	42974cbfa6624a6713ab9cd5410f095e2e652195
----------------------------
Fix sys_vars.tx_isolation_func.test, which was broken in revno 3432 when making READ UNCOMMITTED lock as little as READ COMMITTED. 	762c82c16bea56279c6189bffd2d92939b051bc2
----------------------------
Bug#53566 SHOW ENGINE PERFORMANCE_SCHEMA STATUS reports less memory than really used Prior to this fix, the statement SHOW ENGINE PERFORMANCE_SCHEMA STATUS would report less memory that really allocated by the performance schema. With this fix: - memory usage is now reported accurately - an assert enforces that everything allocated internally is reported, to avoid future discrepancies. No test script needed, as the existing scripts in the test suite provide coverage when using a debug binary (with asserts). 	62e755d431cd6b128dcbc15717ec3f987db46812
----------------------------
Bug #52737: plugin_dir is set to /usr/local/mysql/lib/plugin while starting via mysqld_safe Plugin dir was set to a hard-coded path instead of relative the base dir. This patch fixes this by using a path relative the basedir instead of the plugin directory indicated by the configuration. 	7f514f45e6ca6b0e3b5428343e1c21304e316053
----------------------------
WL#4783  Extend mysqlbinlog to support remote backup of binary logs The aim is to modify mysqlbinlog so that it can remotely retrieve the raw binary logs and stay connected retrieving them.  This way you can have an up-to-the-second remote backup of your data (even better when combined with mysqldump --master-data as snapshots). You retrieve from many servers simultaneously into a backup server using this method (use a mysqlbinlog instance per server). Changes: * mysqlbinlog now safely exits with CTRL-C or kill (closes files properly) * --raw added which will retrieve raw binlog files from the remote server and save them using the filenames in the replication headers * --stop-never added which waits for new data on a remote connection instead of quitting at the end of the last log * --stop-never-slave-server-id added to set the MySQL slave server ID for --stop-never (default 65535) * --result-file modified so that when used with --raw mode it is a prefix for the output files 	c60c34ec044e0e1e9be5c9c3f51b46e7fd589c39
----------------------------
WL#4674 PERFORMANCE_SCHEMA Setup For Actors Port, continued 	dc66a87447a4cfef28c8a0917f13be08737f1f97
----------------------------
bug#52268: ndb_mgmd could fail to set its working directory before creating a cluster log, when starting up from a cached configuration; this would cause the cluster log file to be placed in the wrong directory. 	d59075e3e016c8bf1059b64c7ac672a6869f62e5
----------------------------
bug#53008: implement --skip-config-cache option to ndb_mgmd, causing the ConfigManager thread to exit on startup; create a test case in testMgmd.  (In the previous patch, the thread went to sleep rather than exiting). 	c5153417d1ae015b553932087514ea7abe7c71d9
----------------------------
Backporting: * Disabled MRR implementation for NDB, now the default one is used * Adjusted the query_alloc_block_size_basic test 	6b0a48595a114f238f10bf17c2b70d86f217c265
----------------------------
Merge: 31a79ec 5661e72 BUG#49522: Replication problem with mixed MyISAM/InnoDB When using a non-transactional table (t1) on the master and with autocommit disabled, no COMMIT is recorded in the binary log ending the statement. Therefore, if the slave has t1 in a transactional engine, then it will be as if a transaction is started but never ends. This is actually BUG#29288 all over again. We fix this by cherrypicking the cset for BUG#29288 which was pushed to a later mysql version. The revision picked was: mats@sun.com-20090923094343-bnheplq8n95opjay . Additionally, a test case for covering the scenario depicted in the bug report is included in this cset. 	60ff8469a0c0ba6ab5190dbed026bcc0ee23c875
----------------------------
"WL#5116 ""Changes to optimizer-controlling session variables"". ( Backporting of guilhem@mysql.com-20100120101129-vs1cd8equni03sh3 ). 1) @@join_cache_level renamed to @@optimizer_join_cache_level (so with ""SHOW VARIABLES LIKE 'optimizer%' you see more optimizer-related variables). 2) @@optimizer_switch's flag ""engine_condition_pushdown"" used to control Engine and Index Condition Pushdown, two different features, now it controls only ECP, and a new flag ""index_condition_pushdown"" controls ICP. 3) @@optimizer_use_mrr is removed, new flags ""mrr"" and ""mrr_cost_based"" are added to @@optimizer_switch: ""@@optimizer_use_mrr=auto"" is now expressed by ""@@optimizer_switch='mrr=on,mrr_cost_based=on', ""@@optimizer_use_mrr=force"" is now expressed by ""@@optimizer_switch='mrr=on,mrr_cost_based=off', ""@@optimizer_use_mrr=disable"" is now expressed by ""@@optimizer_switch='mrr=off'. 4) all those changes don't need deprecation precautions as join_cache_level, ICP and MRR have only been in 6.0 releases. "	9161b511149b784124079cd1dd8182f8aa89470f
----------------------------
"Draft patch that fixes and a sketches test cases for: Bug#20837 Apparent change of isolation level during transaction, Bug#46527 COMMIT AND CHAIN RELEASE does not make sense, Bug#53343 completion_type=1, COMMIT/ROLLBACK AND CHAIN don't preserve the isolation level Bug#53346 completion_type has strange effect in a stored procedure/prepared statement Make thd->tx_isolation mean strictly ""current transaction isolation level"" Make thd->variables.tx_isolation mean ""current session isolation level"". The current transaction isolation level is now established at transaction start. If there was a SET TRANSACTION ISOLATION LEVEL statement, the value is taken from it. Otherwise, the session value is used. A change in a session value, made while a transaction is active, whereas still allowed, no longer has any effect on the current transaction isolation level. This is an incompatible change. A change in a session isolation level, made while there is no active transaction, overrides SET TRANSACTION statement, if there was any. Changed the impelmentation to not look at @@session.completion_type in the parser, and thus fixed Bug#53346. Changed the parser to not allow AND NO CHAIN RELEASE, and thus fixed Bug#46527. Changed the transaction API to take the current transaction isolation level into account: - BEGIN/COMMIT now do preserve the current transaction isolation level if chaining is on. - implicit commit, XA COMMIT or XA ROLLBACK or autocommit don't. "	5ac769be68fbe2c112ef65b3d5590a7e5d080319
----------------------------
"Bug#50089: Second call of procedure with view in subselect crashes server The bug case contains a query that references a view. Here is the view definition: SELECT t1field AS v1_field FROM t1 AS A WHERE A.t1field IN (SELECT t1field FROM t1); When expanding the view at prepare time, this select_lex graph is created: VS1(A) \ VS2(t1) This is the query that is executed: SELECT t1field FROM t1 WHERE t1field IN (SELECT * FROM v1); At prepare time, the query is conceptually expanded to the following query: SELECT t1field FROM t1 WHERE t1field IN (SELECT t1field AS v1_field FROM t1 AS A WHERE A.t1field IN (SELECT t1field FROM t1)); Here is the select_lex graph after view expansion: S1(t1) \ S2(A) \ VS2(t1) The contents of select_lex VS1 is merged with the query graph and VS1 is discarded after merging. At first execution, semijoin conversion is performed, and the query is transformed to: SELECT t1_field FROM t1 semijoin t1 AS A ON t1.t1_field = A.t1_field WHERE A.t1_field IN (SELECT t1_field FROM t1)); Now, the select_lex object S2 is optimized away and the table A is added to S1. Here is the select_lex graph after transformation: S1(t1) \ VS2(t1) The master field of VS2 points to S1 after conversion. However, the return_to field of VS2 still points to VS1. First execution proceeds normally after this. At second execution, all items in the transformed query are first re-resolved. When re-resolving A.t1_field, function mark_select_range_as_dependent() is called with VS1 as current_sel and S1 as last_select arguments. Now, the master unit of VS1 does not have an ""item"", and we segfault. Problem occurs when mark_select_range_as_dependent() is called with two select_lex pointers that point into different query trees, one tree being the main query tree, the other being the tree representing the view. This problem is due to the fact that the function return_after_parsing() is used to provide pointer to the select_lex object representing the outer query specification of a subquery. However, the return_to field was not properly updated in all situations. But it was also noticed that outer_select() gives the same information as return_after_parsing(), and the data used by this function is always kept up-to-date. The bug was thus fixed by removing return_after_parsing() and associated data, and replacing calls with outer_select(). Notice also that queries within procedures internally create prepared statements, so the solution works equally well for procedures as well as for prepared statements. mysql-test/r/subselect_sj.result Test result for Bug#50089 mysql-test/r/subselect_sj_jcl6.result Test result for Bug#50089 mysql-test/t/subselect_sj.test Test case for Bug#50089 sql/item_subselect.cc Replaced references to return_after_parsing() with outer_select(). sql/sql_lex.cc Removed function return_after_parsing() and data field return_to. sql/sql_lex.h Removed function return_after_parsing() and data field return_to. sql/sql_parse.cc Replaced reference to return_after_parsing() with outer_select(). sql/sql_select.cc Replaced reference to return_after_parsing() with outer_select(). sql/sql_yacc.yy Replaced reference to return_after_parsing() with outer_select(). revid:marc.alff@sun.com-20100310053357-iufi8n11rjkh8lrb..roy.lyseng@sun.com-20100310111425-7r30qg17f5z13ptd "	0325c32da14b00861c8772f7d4e46c04c34b177e
----------------------------
WL#4674 PERFORMANCE_SCHEMA SETUP ACTORS Port in progress 	4c16c6045a710efbe56e17fd11b0e5669d0cd1e5
----------------------------
BUG#44209: MASTER_CONNECT_RETRY and --master-retry-count disconnected from each other Post-push fix! One of the test cases is not robust enough because it depends on a time variable. This can cause it to fail because it is a source of non-determinism (especially on slow environments). The specific test case is about waiting for slave to stop after retrying the N expected times and then checking that no more than a number of expected seconds has ellapsed. This assertion is not deterministic. We fix the assertion by checking the number of retries reported by the server, instead of checking how much seconds have ellapsed. 	6806baa175ddffaf4d6641e2659553006389d393
----------------------------
Bug#52357: Assertion failed: join->best_read in greedy_search optimizer_search_depth=0 The algorithm inside restore_prev_nj_state failed to properly update the counters within the NESTED_JOIN tree. The counter was decremented each time a table in the node was removed from the QEP, the correct thing to do being only to decrement it when the last table in the child node was removed from the plan. This lead to node counters getting negative values and the plan thus appeared impossible. An assertion caught this. Fixed by not recursing up the tree unless the last table in the join nest node is removed from the plan 	4e75f7c053775dc8671feda46225e785d33f5d0b
----------------------------
A post-fix for WL#5303 Romansh locale for DAYNAME, MONTHNAME, DATE_FORMAT 	e27caebb1fccea1630efaec7e623746a93d47f44
----------------------------
Output the config.h defines to stdout 	63fbe9cce8bafbbb65a54294c958f5ce9c5f05ee
----------------------------
Fix bug #53165, Setting innodb_change_buffering=DEFAULT produces incorrect result. rb://295 approved by Marko 	fe8b56db30116f823aa7c6c8fe3b0d053ebd7622
----------------------------
Merge from mysql-5.1-innodb: ------------------------------------------------------------ revno: 3441 revision-id: marko.makela@oracle.com-20100504130917-qmvzbj3pgil2nuat parent: marko.makela@oracle.com-20100504125510-gemcfhj7mefrhalo committer: Marko M?kel? <marko.makela@oracle.com> branch nick: 5.1-innodb timestamp: Tue 2010-05-04 16:09:17 +0300 message: fsp_init_file_page_low(): Zero out the page. (Bug #53306) modified: storage/innodb_plugin/fsp/fsp0fsp.c 2@16c675df-0fcb-4bc9-8058-dcc011a37293:trunk%2Ffsp%2Ffsp0fsp.c ------------------------------------------------------------ 	3024d99a964cc12ebc35a3a731ea591e7b2e78c4
----------------------------
fsp_init_file_page_low(): Zero out the page. (Bug #53306) 	dc29792ff2996aefbb6e64bb2f0bc3aa8fc879e9
----------------------------
fsp_init_file_page_low(): Zero out the page. (Bug #53306) 	264cfbb0c579c3a6782465fb7fad10fdcf61206e
----------------------------
BUG#43407 SET GLOBAL SQL_SLAVE_SKIP_COUNTER should log previous state in error log When issuing a 'SET GLOBAL SQL_SLAVE_SKIP_COUNTER' statement, the previous position along with the new position is dumped into the error log. Namely, the following information is printed out: skip_counter, group_relay_log_name and group_relay_log_pos. 	ee364647036019ff095624c60b8e4f4aaca544e2
----------------------------
Bug#53394 Tests: perfschema.myisam_file_io fails Before this fix, the test perfschema.myisam_file_io could fail with spurious failures, depending on which test was executed in the same MTR run. With this fix, the test perfschema.myisam_file_io resets the server status variables, to be independent of previous runs. In particular, performance_schema_*_lost now have a predictable value. 	9097b7d71003cc8e2e1c643590724fe59565f68a
----------------------------
"Bug#50373 --secure-file-priv="""" Iterative patch improvement. Previously committed patch caused wrong result on Windows. The previous patch also broke secure_file_priv for symlinks since not all file paths which must be compared against this variable are normalized using the same norm. The server variable opt_secure_file_priv wasn't normalized properly and caused the operations LOAD DATA INFILE .. INTO TABLE .. and SELECT load_file(..) to do different interpretations of the --secure-file-priv option. The patch moves code to the server initialization routines so that the path always is normalized once and only once. It was also intended that setting the option to an empty string should be equal to lifting all previously set restrictions. This is also fixed by this patch. "	5b6ebdf086fe0506dc1d2cb70a95f9633fd7a782
----------------------------
"Changes to MSI installer: - Introduce MANUFACTURER setting to set package manufacturer via CMake. - Introduce COMMUNITY_BUILD setting to be passed on to packaging (not used here, but required for our own packages to determine what added files should be included in the package). - Create an RTF version of the COPYING text file and use that as the default license (can be overridden by providing a COPYING.rtf file). - Allow passing extra arguments to candle and light via environment. (Need -sval in pushbuild, but want validation elsewhere.) - Introduce a custom action that stops and uninstalls the service if the user installed one that points into the MySQL directory that is being removed. (Our own packages historically used the instance configuration wizard for this, but it wouldn't be very nice if MSIs created by our users couldn't remove it too.) - Make install location configurable again (""Browse"" button in custom installation was greyed out before). - Remove registry keys that use ""MySQL AB""; they should only be set in packages provided by us. Users can set their own registry keys if they want to. "	d60efe5820d98bba41f1b76c37927c8f648937c9
----------------------------
Merge: 72ae25b e287445 Manual merge of mysql-5.1-bugteam to mysql-trunk-merge. Conflicts: Text conflict in configure.in Text conflict in dbug/dbug.c Text conflict in mysql-test/r/ps.result Text conflict in mysql-test/t/ps.test Text conflict in sql/CMakeLists.txt Text conflict in sql/ha_ndbcluster.cc Text conflict in sql/mysqld.cc Text conflict in sql/sql_plugin.cc Text conflict in sql/sql_table.cc 	940ad61b712cb2f10bf5ff62330b0c9c4d8473ba
----------------------------
Bug#50974: Server keeps receiving big (> max_allowed_packet) packets indefinitely. The server could be tricked to read packets indefinitely if it received a packet larger than the maximum size of one packet. This problem is aggravated by the fact that it can be triggered before authentication. The solution is to no skip big packets for non-authenticated sessions. If a big packet is sent before a session is authen- ticated, a error is returned and the connection is closed. 	14ccbeb4e40042e3fe624707d5b2e6c047149a2f
----------------------------
Merge: 138fed5 ae2eafc merge mysql-trunk-bugfixing --> mysql-next-mr-bugfixing Conflicts: . rpl_ndb_binlog_format_errors.result 	9c060b43c448ead380be5206cfdc96c49e4beb2c
----------------------------
WL#5125 Refactory of Slave's master.info and relay_log.info Reorganizes the code in order to easy the creation of different types of repository to store the relay log info and the master info as the current code only support files. 	53fa741cbcb254d238bc736a8f5c47fe890db761
----------------------------
"Committing on behalf or Dmitry Lenev: Fix for bug #46947 ""Embedded SELECT without FOR UPDATE is causing a lock"", with after-review fixes. SELECT statements with subqueries referencing InnoDB tables were acquiring shared locks on rows in these tables when they were executed in REPEATABLE-READ mode and with statement or mixed mode binary logging turned on. This was a regression which were introduced when fixing bug 39843. The problem was that for tables belonging to subqueries parser set TL_READ_DEFAULT as a lock type. In cases when statement/mixed binary logging at open_tables() time this type of lock was converted to TL_READ_NO_INSERT lock at open_tables() time and caused InnoDB engine to acquire shared locks on reads from these tables. Although in some cases such behavior was correct (e.g. for subqueries in DELETE) in case of SELECT it has caused unnecessary locking. This patch tries to solve this problem by rethinking our approach to how we handle locking for SELECT and subqueries. Now we always set TL_READ_DEFAULT lock type for all cases when we read data. When at open_tables() time this lock is interpreted as TL_READ_NO_INSERT or TL_READ depending on whether this statement as a whole or call to function which uses particular table should be written to the binary log or not (if yes then statement should be properly serialized with concurrent statements and stronger lock should be acquired). Test coverage is added for both InnoDB and MyISAM. This patch introduces an ""incompatible"" change in locking scheme for subqueries used in SELECT ... FOR UPDATE and SELECT .. IN SHARE MODE. In 4.1 the server would use a snapshot InnoDB read for subqueries in SELECT FOR UPDATE and SELECT .. IN SHARE MODE statements, regardless of whether the binary log is on or off. If the user required a different type of read (i.e. locking read), he/she could request so explicitly by providing FOR UPDATE/IN SHARE MODE clause for each individual subquery. On of the patches for 5.0 broke this behaviour (which was not documented or tested), and started to use locking reads fora all subqueries in SELECT ... FOR UPDATE/IN SHARE MODE. This patch restored 4.1 behaviour. "	8280fdd3c3df5460f77490daa55df24c560466ea
----------------------------
Fix bug introduced by r3038. When a transaction is rolled back by the lock monitor thread, it may have locks that are granted to waited to waiting transactions. These waiting transactions will need to be woken up but their trx->lock_wait_timeout flag will be FALSE causing the old code to break. What we need is a flag that covers the entire lock release process not individual transactions. The fix is to move the flag out of trx_t and into srv_sys_t. 	6c3b6808e82cd38fe85298267c4a716e748fbb7a
----------------------------
"On Mac OS X, add the ""-arch"" option to the 'mysql_config' output "	b9303c87e3841cd75a8f95fc752497eca14a7c2c
----------------------------
ndb - reenable the ignore of warning about conversion from SOCKET to int in instance manager, this warning is suppressed in 5.1 but was removed when adding my_socket. 	26e2fc248cc1c01aa91dce5da23d8751e2aa3dc5
----------------------------
WL#4012  port ndb_mgmd to MS Windows platforms - Configure event logger to use Windows event log again in 'setClusterLog' since all log handlers are closed for reconfigure 	2f22b11cb70b5750afc362079c50b5ef1e1ab338
----------------------------
"Patch for Bug#53022: Compilation of ""embedded"" is broken. The bug was a side effect of WL#5030 (fix header files) and WL#5161 (CMake). The problem was that CMake-generated config.h (and my_config.h as a copy of it) had a header guard. GNU autotools-generated [my_]config.h did not. During WL#5030 the order of header files was changed, so the following started to happen (using GNU autotools, in embedded server): - my_config.h included, defining HAVE_OPENSSL - my_global.h included, un-defining  HAVE_OPENSSL - zlib.h included, including config.h, defining HAVE_OPENSSL again. The fix is to check HAVE_OPENSSL in conjuction with EMBEDDED_LIBRARY. More common fix would be to define a macros as HAVE_OPENSSL && !EMBEDDED_LIBRARY and use it instead of HAVE_OPENSSL. "	53af29c086aada825d50e3518dbe112bd625ce51
----------------------------
Bug#46261 Plugins can be installed with --skip-grant-tables Previously installed dynamic plugins are explicitly not loaded on startup with --skip-grant-tables enabled. However, INSTALL PLUGIN/UNINSTALL PLUGIN commands are allowed, and result in inconsistent error messages (reporting duplicate plugin or plugin does not exist). This patch adds a check for --skip-grant-tables mode, and returns error ER_OPTION_PREVENTS_STATEMENT to the user when the above commands are attempted. 	9ea5576662a6bb94f0ba818f0c4591e7f78c2205
----------------------------
"Merge r3403..3414 from mysql-5.1-innodb: ------------------------------------------------------------ revno: 3414 revision-id: marko.makela@oracle.com-20100422093342-jf9ojlzdqsdebohn parent: marko.makela@oracle.com-20100421185359-8qaxoa2yyrpzwdd7 committer: Marko M?kel? <marko.makela@oracle.com> branch nick: 5.1-innodb timestamp: Thu 2010-04-22 12:33:42 +0300 message: Correct the definition of DICT_SYS_INDEXES_NAME_FIELD. When row_merge_drop_temp_indexes() was reworked to drop the indexes via the data dictionary cache, the code was broken because it would read the index name from the wrong field. modified: storage/innodb_plugin/ChangeLog 2425@16c675df-0fcb-4bc9-8058-dcc011a37293:branches%2Fzip%2FChangeLog storage/innodb_plugin/dict/dict0boot.c 2@16c675df-0fcb-4bc9-8058-dcc011a37293:trunk%2Fdict%2Fdict0boot.c storage/innodb_plugin/include/dict0boot.h 2@16c675df-0fcb-4bc9-8058-dcc011a37293:trunk%2Finclude%2Fdict0boot.h ------------------------------------------------------------ revno: 3413 revision-id: marko.makela@oracle.com-20100421185359-8qaxoa2yyrpzwdd7 parent: marko.makela@oracle.com-20100421102723-0i80uezbyu0ekj5d committer: Marko M?kel? <marko.makela@oracle.com> branch nick: 5.1-innodb timestamp: Wed 2010-04-21 21:53:59 +0300 message: btr_page_split_and_insert(): Avoid an infinite loop. (Bug #52964) btr_page_tuple_smaller(): New function, refactored from btr_page_split_and_insert(). btr_page_get_split_rec(): Renamed from btr_page_get_sure_split_rec(). Note that a NULL return may mean that the tuple is to be inserted into either the lower or upper page, to be determined by btr_page_tuple_smaller(). btr_page_split_and_insert(): When btr_page_get_split_rec() returns NULL, invoke btr_page_tuple_smaller() to determine which half-page the tuple belongs to. Reviewed by Sunny Bains modified: storage/innodb_plugin/ChangeLog 2425@16c675df-0fcb-4bc9-8058-dcc011a37293:branches%2Fzip%2FChangeLog storage/innodb_plugin/btr/btr0btr.c 2@16c675df-0fcb-4bc9-8058-dcc011a37293:trunk%2Fbtr%2Fbtr0btr.c ------------------------------------------------------------ revno: 3412 revision-id: marko.makela@oracle.com-20100421102723-0i80uezbyu0ekj5d parent: marko.makela@oracle.com-20100421100029-mji6lmdgvuqh96qq committer: Marko M?kel? <marko.makela@oracle.com> branch nick: 5.1-innodb timestamp: Wed 2010-04-21 13:27:23 +0300 message: dict_create_index_step(): Be strict about DYNAMIC and COMPRESSED tables. Bug #50495 is about REDUNDANT and COMPACT tables, after all. modified: mysql-test/suite/innodb_plugin/r/innodb-zip.result 2252@16c675df-0fcb-4bc9-8058-dcc011a37293:branches%2Fzip%2Fmysql-test%2Finnodb-zip.result mysql-test/suite/innodb_plugin/t/innodb-zip.test 2252@16c675df-0fcb-4bc9-8058-dcc011a37293:branches%2Fzip%2Fmysql-test%2Finnodb-zip.test storage/innodb_plugin/ChangeLog 2425@16c675df-0fcb-4bc9-8058-dcc011a37293:branches%2Fzip%2FChangeLog storage/innodb_plugin/dict/dict0crea.c 2@16c675df-0fcb-4bc9-8058-dcc011a37293:trunk%2Fdict%2Fdict0crea.c ------------------------------------------------------------ revno: 3411 revision-id: marko.makela@oracle.com-20100421100029-mji6lmdgvuqh96qq parent: marko.makela@oracle.com-20100421095033-0acvzxb8um8cms0a committer: Marko M?kel? <marko.makela@oracle.com> branch nick: 5.1-innodb timestamp: Wed 2010-04-21 13:00:29 +0300 message: ha_innobase::add_index(): Only check for duplicate indexes when the data dictionary is locked. This fixes a UNIV_DEBUG assertion failure in innodb-index.test. modified: storage/innodb_plugin/handler/handler0alter.cc 1845@16c675df-0fcb-4bc9-8058-dcc011a37293:branches%2Fzip%2Fhandler%2Fhandler0alter.cc ------------------------------------------------------------ revno: 3410 revision-id: marko.makela@oracle.com-20100421095033-0acvzxb8um8cms0a parent: marko.makela@oracle.com-20100421094032-ir4glqk46qvg2ywn committer: Marko M?kel? <marko.makela@oracle.com> branch nick: 5.1-innodb timestamp: Wed 2010-04-21 12:50:33 +0300 message: dtuple_convert_big_rec(): Store locally any fields whose maximum length is less than 256 bytes. (Bug #52745) Add related comments and debug assertions to the ""offsets"" functions in rem0rec.c. Approved by Sunny Bains modified: storage/innodb_plugin/ChangeLog 2425@16c675df-0fcb-4bc9-8058-dcc011a37293:branches%2Fzip%2FChangeLog storage/innodb_plugin/data/data0data.c 2@16c675df-0fcb-4bc9-8058-dcc011a37293:trunk%2Fdata%2Fdata0data.c storage/innodb_plugin/rem/rem0rec.c 2@16c675df-0fcb-4bc9-8058-dcc011a37293:trunk%2Frem%2Frem0rec.c ------------------------------------------------------------ revno: 3409 revision-id: marko.makela@oracle.com-20100421094032-ir4glqk46qvg2ywn parent: marko.makela@oracle.com-20100421091611-uu46iygmv5sizjru committer: Marko M?kel? <marko.makela@oracle.com> branch nick: 5.1-innodb timestamp: Wed 2010-04-21 12:40:32 +0300 message: Adjust tests for the Bug #50495 fix. modified: mysql-test/suite/innodb_plugin/r/innodb-zip.result 2252@16c675df-0fcb-4bc9-8058-dcc011a37293:branches%2Fzip%2Fmysql-test%2Finnodb-zip.result mysql-test/suite/innodb_plugin/t/innodb-zip.test 2252@16c675df-0fcb-4bc9-8058-dcc011a37293:branches%2Fzip%2Fmysql-test%2Finnodb-zip.test mysql-test/suite/innodb_plugin/t/innodb_bug36169.test 2418@16c675df-0fcb-4bc9-8058-dcc011a37293:branches%2Fzip%2Fmysql-test%2Finnodb_bug36169.test ------------------------------------------------------------ revno: 3408 revision-id: marko.makela@oracle.com-20100421091611-uu46iygmv5sizjru parent: marko.makela@oracle.com-20100421063916-h3gwjea7jzjilyww committer: Marko M?kel? <marko.makela@oracle.com> branch nick: 5.1-innodb timestamp: Wed 2010-04-21 12:16:11 +0300 message: rec_convert_dtuple_to_rec(): Correct the debug check. The ""extern"" accessor functions return zero or nonzero, not 0 or 1. modified: storage/innodb_plugin/rem/rem0rec.c 2@16c675df-0fcb-4bc9-8058-dcc011a37293:trunk%2Frem%2Frem0rec.c ------------------------------------------------------------ revno: 3407 revision-id: marko.makela@oracle.com-20100421063916-h3gwjea7jzjilyww parent: marko.makela@oracle.com-20100420201550-cax1xywvlcdshgfg committer: Marko M?kel? <marko.makela@oracle.com> branch nick: 5.1-innodb timestamp: Wed 2010-04-21 09:39:16 +0300 message: rec_convert_dtuple_to_rec(): Add a debug check. modified: storage/innodb_plugin/rem/rem0rec.c 2@16c675df-0fcb-4bc9-8058-dcc011a37293:trunk%2Frem%2Frem0rec.c ------------------------------------------------------------ revno: 3406 revision-id: marko.makela@oracle.com-20100420201550-cax1xywvlcdshgfg parent: marko.makela@oracle.com-20100420114222-diq7h2hiom9ww6me committer: Marko Makela <marko.makela@oracle.com> branch nick: 5.1-innodb timestamp: Tue 2010-04-20 23:15:50 +0300 message: btr_cur_optimistic_insert(): Remove unused variable ""heap"". modified: storage/innodb_plugin/btr/btr0cur.c 2@16c675df-0fcb-4bc9-8058-dcc011a37293:trunk%2Fbtr%2Fbtr0cur.c ------------------------------------------------------------ revno: 3405 revision-id: marko.makela@oracle.com-20100420114222-diq7h2hiom9ww6me parent: marko.makela@oracle.com-20100420082908-tpako8jd4imkh1xb committer: Marko Makela <marko.makela@oracle.com> branch nick: 5.1-innodb timestamp: Tue 2010-04-20 14:42:22 +0300 message: dict_create_index_step(): Invoke dict_index_add_to_cache() in strict mode only if innodb_strict_mode is set. (Bug #50495) trx_is_strict(): New function, for checking innodb_strict_mode. modified: storage/innodb_plugin/ChangeLog 2425@16c675df-0fcb-4bc9-8058-dcc011a37293:branches%2Fzip%2FChangeLog storage/innodb_plugin/dict/dict0crea.c 2@16c675df-0fcb-4bc9-8058-dcc011a37293:trunk%2Fdict%2Fdict0crea.c storage/innodb_plugin/handler/ha_innodb.cc 2@16c675df-0fcb-4bc9-8058-dcc011a37293:trunk%2Fhandler%2Fha_innodb.cc storage/innodb_plugin/include/trx0trx.h 2@16c675df-0fcb-4bc9-8058-dcc011a37293:trunk%2Finclude%2Ftrx0trx.h ------------------------------------------------------------ revno: 3404 revision-id: marko.makela@oracle.com-20100420082908-tpako8jd4imkh1xb parent: marko.makela@oracle.com-20100419103603-u5pz4qc6hfhx4nua committer: Marko M?kel? <marko.makela@oracle.com> branch nick: 5.1-innodb timestamp: Tue 2010-04-20 11:29:08 +0300 message: Implement UNIV_BTR_AVOID_COPY, an optimization of page splits. modified: storage/innodb_plugin/ChangeLog 2425@16c675df-0fcb-4bc9-8058-dcc011a37293:branches%2Fzip%2FChangeLog storage/innodb_plugin/btr/btr0btr.c 2@16c675df-0fcb-4bc9-8058-dcc011a37293:trunk%2Fbtr%2Fbtr0btr.c storage/innodb_plugin/include/univ.i 2@16c675df-0fcb-4bc9-8058-dcc011a37293:trunk%2Finclude%2Funiv.i ------------------------------------------------------------ revno: 3403 revision-id: marko.makela@oracle.com-20100419103603-u5pz4qc6hfhx4nua parent: marko.makela@oracle.com-20100419094405-fd3xwadullishv07 committer: Marko =?ISO-8859-1?Q?M=E4kel=E4?= <marko.makela@oracle.com> branch nick: 5.1-innodb timestamp: Mon 2010-04-19 13:36:03 +0300 message: Enable UNIV_DEBUG_VALGRIND when HAVE_purify is set. modified: storage/innobase/include/univ.i 2@cee13dc7-1704-0410-992b-c9b4543f1246:trunk%2Finclude%2Funiv.i storage/innodb_plugin/include/univ.i 2@16c675df-0fcb-4bc9-8058-dcc011a37293:trunk%2Finclude%2Funiv.i "	0ecec12df38c1a1bf06d7adc61e2e57e304b642c
----------------------------
branches/innodb+: Merge revisions 6949:6970 from branches/zip, skipping the revisions that do not make sense in branches/innodb+: ------------------------------------------------------------------------ r6957 | vdimov | 2010-04-06 22:05:54 +0300 (Tue, 06 Apr 2010) | 2 lines Changed paths: M /branches/zip/trx/trx0trx.c branches/zip: Whitespace fixup ------------------------------------------------------------------------ r6962 | mmakela | 2010-04-07 15:03:54 +0300 (Wed, 07 Apr 2010) | 2 lines Changed paths: M /branches/zip/handler/ha_innodb.cc branches/zip: innobase_init(): Correct the error message about wrong innodb_change_buffering value.  Reported by Ranger. ------------------------------------------------------------------------ r6967 | vdimov | 2010-04-07 22:40:38 +0300 (Wed, 07 Apr 2010) | 2 lines Changed paths: M /branches/zip/include/univ.i branches/zip: Whitespace fixup in univ.i ------------------------------------------------------------------------ 	eda8d678a56fa582cc8200d9d45ddc700d4bcac2
----------------------------
"Patch for Bug#53022: Compilation of ""embedded"" is broken. The bug was a side effect of WL#5030 (fix header files) and WL#5161 (CMake). The problem was that CMake-generated config.h (and my_config.h as a copy of it) had a header guard. GNU autotools-generated [my_]config.h did not. During WL#5030 the order of header files was changed, so the following started to happen (using GNU autotools, in embedded server): - my_config.h included, defining HAVE_OPENSSL - my_global.h included, un-defining  HAVE_OPENSSL - zlib.h included, including config.h, defining HAVE_OPENSSL again. The fix is to change the order of header file, moving zlib.h to the top of the header list. More proper fix would be to wrap unguarded auto-generated [my_]config.h by guarded non-generated header file. "	fd64b18545d8e6dd9f4493162df068d174ffb24c
----------------------------
"Bug#50373 --secure-file-priv="""" Correcting a patch misstake. The converted file path is placed in 'buff' not in opt_secure_file_priv. "	9d63e36ca745769dde6d65d62b362d711d242d24
----------------------------
Adjust the result for the mysql-test sys_vars.all_vars after the addition of a new config variable. 	63d38a4815a764c1f32443e82353b274574d833e
----------------------------
dict_create_index_step(): Invoke dict_index_add_to_cache() in strict mode only if innodb_strict_mode is set. (Bug #50495) trx_is_strict(): New function, for checking innodb_strict_mode. 	10c53c391339f8e7e6a328f97483f01891871d08
----------------------------
Added a test for skip_name_resolve to the sys_vars suite. 	5575d724cf1e40c467ab0eab934ce8846b452a9a
----------------------------
BUG#44209: MASTER_CONNECT_RETRY and --master-retry-count disconnected from each other MASTER_CONNECT_RETRY and --master-retry-count are logically related. The former sets the value for the time the slave thread waits until reconnecting, while the latter sets the value for the number of reconnection attempts until it gives up. The problem here was that --master-retry-count is not dynamic and can only be set on slave startup, while MASTER_CONNECT_RETRY is dynamic and can be set using CHANGE MASTER. As such, the user should also be allowed to change the value of master_retry_count using CHANGE MASTER command. In this patch we extend the syntax of CHANGE MASTER to allow MASTER_RETRY_COUNT symbol that can be used to set the variable that holds the value for master_retry_count. The option --master-retry-count can now be deprecated (this patch takes no action regarding deprecating this option). 	a389b9cf4635ce725cf49376b17e4aeaaba70689
----------------------------
"Bug#50373 --secure-file-priv="""" The server variable opt_secure_file_priv wasn't normalized properly and caused the operations LOAD DATA INFILE .. INTO TABLE .. and SELECT load_file(..) to do different interpretations of the --secure-file-priv option. The patch moves code to the server initialization routines so that the path always is normalized once and only once. It was also intended that setting the option to an empty string should be equal to lifting all previously set restrictions. This is also fixed by this patch. "	2a37d531be7c29eb93ade6c7a9c33fd3b9b9f1de
----------------------------
Bug #52381 Cannot connect to server with IPv6 using hostname or IPv4 address The bug occurs on Visual Studio 2005. IPV6_V6ONLY TCP flag is not defined in the VS2005 SDK (it is an older pre-Vista one). The code in mysqld.cc responsible for creating dual-mode socket is enclosed into #ifdef IPV6_V6ONLY. When compiled with VS2005, v6only socket option is not cleared which results into server listening only on IPV6 address. There used to be a workaround for this problem, defining IPV6_V6ONLY expli citly when it is not defined in system headers. The  system checks  for it are already in place in CMake, but the results were precached (i.e check was effectively deactivated). The patch reactivates checks for IPV6_V6ONLY on pre-VS2008 Visual Studio. If these constants are  not found, my_config.h will contain #define IPV6_V6ONLY 27 and this will make mysqld.cc compile with socket dual-mode  again. 	fe3235d1ec4f0addd46b5a4cadec5740b50eb1aa
----------------------------
Bug #52716 Large files support is disabled, large-pages option is broken. Correct typo: large pages option was tied to wrong variable opt_large_files, instead of opt_large_pages. 	1e29af4a222e38fb31a298d523d3f271c80f83f3
----------------------------
Postfix WL#4677 Some result files need to be changed. restart_server.inc can't work well on embedded MySQL, so server_uuid.test and rpl_server_uuid.test skip embedded MySQL. Suppress two connection errors for getting master's UUID. 	f300543480d3fe4faac322bd149a074c6e479f28
----------------------------
WL#5330 SEAGULL: Move my_socket.h to storage/ndb/ - Revert two more forgotten lines in libmysqld 	fb1bac8c6209c4653c8b68a1985ddc922dab75a0
----------------------------
"Bug #51391 Deadlock involving events during rqg_info_schema test This was a deadlock between CREATE/ALTER/DROP EVENT and a query accessing both the mysql.event table and I_S.GLOBAL_VARIABLES. The root of the problem was that the LOCK_event_metadata mutex was used to both protect the ""event_scheduler"" global system variable and the internal event data structures used by CREATE/ALTER/DROP EVENT. The deadlock would occur if CREATE/ALTER/DROP EVENT held LOCK_event_metadata while trying to open the mysql.event table, at the same time as the query had mysql.event open, trying to lock LOCK_event_metadata to access ""event_scheduler"". This bug was fixed in the scope of Bug#51160 by using only LOCK_global_system_variables to protect ""event_scheduler"". This makes it so that the query above won't lock LOCK_event_metadata, thereby preventing this deadlock from occuring. This patch contains no code changes. Test case added to lock_sync.test. "	b6f0c3a1573565779722fd3aa7a70351056b6922
----------------------------
Bug #51327 MyISAM table is automatically repaired on ALTER even if myisam-recover is OFF The problem was that a corrupted MyISAM table was auto repaired even if the myisam_recover_options server variable (or the myisam_recover option) was set to OFF. The reason was that the auto_repair() function, which is supposed to say if auto repair is to be used, did not use the server variable setting correctly. This bug was a regression introduced by WL#4738. This patch fixes the problem by making sure auto_repair() returns FALSE if myisam_recover_options is set to OFF. Test case added to myisam.test. 	e232fbe0675e59b5d82b963a6c5f1e55fab00fc3
----------------------------
"Replay r2875.107.114 on top of the innodb-lock mysql test ------------------------------------------------------------ revno: 2875.107.114 revision-id: dlenev@mysql.com-20100201114306-cve0yq5akrxjoei0 parent: dlenev@mysql.com-20100121204303-sr6d1436mac7x6vz committer: Dmitry Lenev <dlenev@mysql.com> branch nick: mysql-next-4284-nl-push timestamp: Mon 2010-02-01 14:43:06 +0300 message: Implement new type-of-operation-aware metadata locks. Add a wait-for graph based deadlock detector to the MDL subsystem. Fixes bug #46272 ""MySQL 5.4.4, new MDL: unnecessary deadlock"" and bug #37346 ""innodb does not detect deadlock between update and alter table"". The first bug manifested itself as an unwarranted abort of a transaction with ER_LOCK_DEADLOCK error by a concurrent ALTER statement, when this transaction tried to repeat use of a table, which it has already used in a similar fashion before ALTER started. The second bug showed up as a deadlock between table-level locks and InnoDB row locks, which was ""detected"" only after innodb_lock_wait_timeout timeout. A transaction would start using the table and modify a few rows. Then ALTER TABLE would come in, and start copying rows into a temporary table. Eventually it would stumble on the modified records and get blocked on a row lock. The first transaction would try to do more updates, and get blocked on thr_lock.c lock. This situation of circular wait would only get resolved by a timeout. Both these bugs stemmed from inadequate solutions to the problem of deadlocks occurring between different locking subsystems. In the first case we tried to avoid deadlocks between metadata locking and table-level locking subsystems, when upgrading shared metadata lock to exclusive one. Transactions holding the shared lock on the table and waiting for some table-level lock used to be aborted too aggressively. We also allowed ALTER TABLE to start in presence of transactions that modify the subject table. ALTER TABLE acquires TL_WRITE_ALLOW_READ lock at start, and that block all writes against the table (naturally, we don't want any writes to be lost when switching the old and the new table). TL_WRITE_ALLOW_READ lock, in turn, would block the started transaction on thr_lock.c lock, should they do more updates. This, again, lead to the need to abort such transactions. The second bug occurred simply because we didn't have any mechanism to detect deadlocks between the table-level locks in thr_lock.c and row-level locks in InnoDB, other than innodb_lock_wait_timeout. This patch solves both these problems by moving lock conflicts which are causing these deadlocks into the metadata locking subsystem, thus making it possible to avoid or detect such deadlocks inside MDL. To do this we introduce new type-of-operation-aware metadata locks, which allow MDL subsystem to know not only the fact that transaction has used or is going to use some object but also what kind of operation it has carried out or going to carry out on the object. This, along with the addition of a special kind of upgradable metadata lock, allows ALTER TABLE to wait until all transactions which has updated the table to go away. This solves the second issue. Another special type of upgradable metadata lock is acquired by LOCK TABLE WRITE. This second lock type allows to solve the first issue, since abortion of table-level locks in event of DDL under LOCK TABLES becomes also unnecessary. Below follows the list of incompatible changes introduced by this patch: - From now on, ALTER TABLE and CREATE/DROP TRIGGER SQL (i.e. those statements that acquire TL_WRITE_ALLOW_READ lock) wait for all transactions which has *updated* the table to complete. - From now on, LOCK TABLES ... WRITE, REPAIR/OPTIMIZE TABLE (i.e. all statements which acquire TL_WRITE table-level lock) wait for all transaction which *updated or read* from the table to complete. As a consequence, innodb_table_locks=0 option no longer applies to LOCK TABLES ... WRITE. - DROP DATABASE, DROP TABLE, RENAME TABLE no longer abort statements or transactions which use tables being dropped or renamed, and instead wait for these transactions to complete. - Since LOCK TABLES WRITE now takes a special metadata lock, not compatible with with reads or writes against the subject table and transaction-wide, thr_lock.c deadlock avoidance algorithm that used to ensure absence of deadlocks between LOCK TABLES WRITE and other statements is no longer sufficient, even for MyISAM. The wait-for graph based deadlock detector of MDL subsystem may sometimes be necessary and is involved. This may lead to ER_LOCK_DEADLOCK error produced for multi-statement transactions even if these only use MyISAM: session 1:         session 2: begin; update t1 ...      lock table t2 write, t1 write; -- gets a lock on t2, blocks on t1 update t2 ... (ER_LOCK_DEADLOCK) - Finally,  support of LOW_PRIORITY option for LOCK TABLES ... WRITE was abandoned. LOCK TABLE ... LOW_PRIORITY WRITE from now on has the same priority as the usual LOCK TABLE ... WRITE. SELECT HIGH PRIORITY no longer trumps LOCK TABLE ... WRITE  in the wait queue. - We do not take upgradable metadata locks on implicitly locked tables. So if one has, say, a view v1 that uses table t1, and issues: LOCK TABLE v1 WRITE; FLUSH TABLE t1; -- (or just 'FLUSH TABLES'), an error is produced. In order to be able to perform DDL on a table under LOCK TABLES, the table must be locked explicitly in the LOCK TABLES list. @ mysql-test/include/handler.inc Adjusted test case to trigger an execution path on which bug 41110 ""crash with handler command when used concurrently with alter table"" and bug 41112 ""crash in mysql_ha_close_table/get_lock_data with alter table"" were originally discovered. Left old test case which no longer triggers this execution path for the sake of coverage. Added test coverage for HANDLER SQL statements and type-aware metadata locks. Added a test for the global shared lock and HANDLER SQL. Updated tests to take into account that the old simple deadlock detection heuristics was replaced with a graph-based deadlock detector. @ mysql-test/r/debug_sync.result Updated results (see debug_sync.test). @ mysql-test/r/handler_innodb.result Updated results (see handler.inc test). @ mysql-test/r/handler_myisam.result Updated results (see handler.inc test). @ mysql-test/r/innodb-lock.result Updated results (see innodb-lock.test). @ mysql-test/r/innodb_mysql_lock.result Updated results (see innodb_mysql_lock.test). @ mysql-test/r/lock.result Updated results (see lock.test). @ mysql-test/r/lock_multi.result Updated results (see lock_multi.test). @ mysql-test/r/lock_sync.result Updated results (see lock_sync.test). @ mysql-test/r/mdl_sync.result Updated results (see mdl_sync.test). @ mysql-test/r/sp-threads.result SHOW PROCESSLIST output has changed due to the fact that waiting for LOCK TABLES WRITE now happens within metadata locking subsystem. @ mysql-test/r/truncate_coverage.result Updated results (see truncate_coverage.test). @ mysql-test/suite/funcs_1/datadict/processlist_val.inc SELECT FROM I_S.PROCESSLIST output has changed due to fact that waiting for LOCK TABLES WRITE now happens within metadata locking subsystem. @ mysql-test/suite/funcs_1/r/processlist_val_no_prot.result SELECT FROM I_S.PROCESSLIST output has changed due to fact that waiting for LOCK TABLES WRITE now happens within metadata locking subsystem. @ mysql-test/suite/rpl/t/rpl_sp.test Updated to a new SHOW PROCESSLIST state name. @ mysql-test/t/debug_sync.test Use LOCK TABLES READ instead of LOCK TABLES WRITE as the latter no longer allows to trigger execution path involving waiting on thr_lock.c lock and therefore reaching debug sync-point covered by this test. @ mysql-test/t/innodb-lock.test Adjusted test case to the fact that innodb_table_locks=0 option is no longer supported, since LOCK TABLES WRITE handles all its conflicts within MDL subsystem. @ mysql-test/t/innodb_mysql_lock.test Added test for bug #37346 ""innodb does not detect deadlock between update and alter table"". @ mysql-test/t/lock.test Added test coverage which checks the fact that we no longer support DDL under LOCK TABLES on tables which were locked implicitly. Adjusted existing test cases accordingly. @ mysql-test/t/lock_multi.test Added test for bug #46272 ""MySQL 5.4.4, new MDL: unnecessary deadlock"".  Adjusted other test cases to take into account the fact that waiting for LOCK TABLES ... WRITE now happens within MDL subsystem. @ mysql-test/t/lock_sync.test Since LOCK TABLES ... WRITE now takes SNRW metadata lock for tables locked explicitly we have to implicitly lock InnoDB tables (through view) to trigger the table-level lock conflict between TL_WRITE and TL_WRITE_ALLOW_WRITE. @ mysql-test/t/mdl_sync.test Added basic test coverage for type-of-operation-aware metadata locks. Also covered with tests some use cases involving HANDLER statements in which a deadlock could arise. Adjusted existing tests to take type-of-operation-aware MDL into account. @ mysql-test/t/multi_update.test Update to a new SHOW PROCESSLIST state name. @ mysql-test/t/truncate_coverage.test Adjusted test case after making LOCK TABLES WRITE to wait until transactions that use the table to be locked are completed. Updated to the changed name of DEBUG_SYNC point. @ sql/handler.cc Global read lock functionality has been moved into a class. @ sql/lock.cc Global read lock functionality has been moved into a class. Updated code to use the new MDL API. @ sql/mdl.cc Introduced new type-of-operation aware metadata locks. To do this: - Changed MDL_lock to use one list for waiting requests and one list for granted requests. For each list, added a bitmap that holds information what lock types a list contains. Added a helper class MDL_lock::List to manipulate with granted and waited lists while keeping the bitmaps in sync with list contents. - Changed lock-compatibility functions to use bitmaps that define compatibility. - Introduced a graph based deadlock detector inspired by waiting_threads.c from Maria implementation. - Now that we have a deadlock detector, and no longer have a global lock to protect individual lock objects, but rather use an rw lock per object, removed redundant code for upgrade, and the global read lock. Changed the MDL API to no longer require the caller to acquire the global intention exclusive lock by means of a separate method. Removed a few more methods that became redundant. - Removed deadlock detection heuristic, it has been made obsolete by the deadlock detector. - With operation-type-aware metadata locks, MDL subsystem has become aware of potential conflicts between DDL and open transactions. This made it possible to remove calls to mysql_abort_transactions_with_shared_lock() from acquisition paths for exclusive lock and lock upgrade. Now we can simply wait for these transactions to complete without fear of deadlock. Function mysql_lock_abort() has also become unnecessary for all conflicting cases except when a DDL conflicts with a connection that has an open HANDLER. @ sql/mdl.h Introduced new type-of-operation aware metadata locks. Introduced a graph based deadlock detector and supporting methods. Added comments. God rid of redundant API calls. Renamed m_lt_or_ha_sentinel to m_trans_sentinel, since now it guards the global read lock as well as LOCK TABLES and HANDLER locks. @ sql/mysql_priv.h Moved the global read lock functionality into a class. Added MYSQL_OPEN_FORCE_SHARED_MDL flag which forces open_tables() to take MDL_SHARED on tables instead of metadata locks specified in the parser. We use this to allow PREPARE run concurrently in presence of LOCK TABLES ... WRITE. Added signature for find_table_for_mdl_ugprade(). @ sql/set_var.cc Global read lock functionality has been moved into a class. @ sql/sp_head.cc When creating TABLE_LIST elements for prelocking or system tables set the type of request for metadata lock according to the operation that will be performed on the table. @ sql/sql_base.cc - Updated code to use the new MDL API. - In order to avoid locks starvation we take upgradable locks all at once. As result implicitly locked tables no longer get an upgradable lock. Consequently DDL and FLUSH TABLES for such tables is prohibited. find_write_locked_table() was replaced by find_table_for_mdl_upgrade() function. open_table() was adjusted to return TABLE instance with upgradable ticket when necessary. - We no longer wait for all locks on OT_WAIT back off action -- only on the lock that caused the wait conflict. Moreover, now we distinguish cases when we have to wait due to conflict in MDL and old version of table in TDC. - Upate mysql_notify_threads_having_share_locks() to only abort thr_lock.c waits of threads that have open HANDLERs, since lock conflicts with only these threads now can lead to deadlocks not detectable by the MDL deadlock detector. - Remove mysql_abort_transactions_with_shared_locks() which is no longer needed. @ sql/sql_class.cc Global read lock functionality has been moved into a class. Re-arranged code in THD::cleanup() to simplify assert. @ sql/sql_class.h Introduced class to incapsulate global read lock functionality. Now sentinel in MDL subsystem guards the global read lock as well as LOCK TABLES and HANDLER locks. Adjusted code accordingly. @ sql/sql_db.cc Global read lock functionality has been moved into a class. @ sql/sql_delete.cc We no longer acquire upgradable metadata locks on tables which are locked by LOCK TABLES implicitly. As result TRUNCATE TABLE is no longer allowed for such tables. Updated code to use the new MDL API. @ sql/sql_handler.cc Inform MDL_context about presence of open HANDLERs. Since HANLDERs break MDL protocol by acquiring table-level lock while holding only S metadata lock on a table MDL subsystem should take special care about such contexts (Now this is the only case when mysql_lock_abort() is used). @ sql/sql_parse.cc Global read lock functionality has been moved into a class. Do not take upgradable metadata locks when opening tables for CREATE TABLE SELECT as it is not necessary and limits concurrency. When initializing TABLE_LIST objects before adding them to the table list set the type of request for metadata lock according to the operation that will be performed on the table. We no longer acquire upgradable metadata locks on tables which are locked by LOCK TABLES implicitly. As result FLUSH TABLES is no longer allowed for such tables. @ sql/sql_prepare.cc Use MYSQL_OPEN_FORCE_SHARED_MDL flag when opening tables during PREPARE. This allows PREPARE to run concurrently in presence of LOCK TABLES ... WRITE. @ sql/sql_rename.cc Global read lock functionality has been moved into a class. @ sql/sql_show.cc Updated code to use the new MDL API. @ sql/sql_table.cc Global read lock functionality has been moved into a class. We no longer acquire upgradable metadata locks on tables which are locked by LOCK TABLES implicitly. As result DROP TABLE is no longer allowed for such tables. Updated code to use the new MDL API. @ sql/sql_trigger.cc Global read lock functionality has been moved into a class. We no longer acquire upgradable metadata locks on tables which are locked by LOCK TABLES implicitly. As result CREATE/DROP TRIGGER is no longer allowed for such tables. Updated code to use the new MDL API. @ sql/sql_view.cc Global read lock functionality has been moved into a class. Fixed results of wrong merge that led to misuse of GLR API. CREATE VIEW statement is not a commit statement. @ sql/table.cc When resetting TABLE_LIST objects for PS or SP re-execution set the type of request for metadata lock according to the operation that will be performed on the table. Do the same in auxiliary function initializing metadata lock requests in a table list. @ sql/table.h When initializing TABLE_LIST objects set the type of request for metadata lock according to the operation that will be performed on the table. @ sql/transaction.cc Global read lock functionality has been moved into a class. "	5a8749546a0e8d4c34b6339ee2c47dc961157ad3
----------------------------
Update mysql-test innodb_file_format to match the latest behavior (different error number). 	501da6811b46166b0d3bbbbe2966e4da8fd4160a
----------------------------
"Update the sys_vars.innodb_change_buffering_basic mysql-test since the imported InnoDB provides more values for ""innodb_change_buffering"". "	3b4be648f0cb8731d358893d47010b4b9116be3a
----------------------------
Bug #46744 Crash in optimize_semijoin_nests on empty view with limit and procedure. Backport of tor.didriksen@sun.com-20091123102734-nlord11m6o0rw2vu Skip optimize_semijoin_nests() if optimizer_switch = 'semijoin=off'; 	f4b6a2da37cb2bf46388de31c74cf741acc7de03
----------------------------
Update the result file for sys_vars.all_vars since the imported InnoDB provides a few more config variables. 	818b32c4b90fd3a52edd1a31ea5f73cfc8fdc5b7
----------------------------
Bug#33866 Test 'ndb_config' has different result - Most likely occurs when localhost!=127.0.0.1 - Use localhost as the argument for filter, will be resolved to whatever ip is used for localhost on that machine and then used to filter the relevant hosts(which has HostName=localhost) in config.ini 	1f7d51f202493c48c21239d33cb4ccb0b85b1598
----------------------------
Replay 2661.581.1 and 3092.5.1 on top of storage/innobase. ------------------------------------------------------------ revno: 2661.581.1 revision-id: sven.sandberg@sun.com-20090714193119-4693witmsqcaf28q parent: staale.smedseng@sun.com-20090615160325-miaxz8z9rjgm78h4 committer: Sven Sandberg <sven.sandberg@sun.com> branch nick: 5.1-bugteam timestamp: Tue 2009-07-14 21:31:19 +0200 message: BUG#39934: Slave stops for engine that only support row-based logging ... ------------------------------------------------------------ revno: 3092.5.1 revision-id: luis.soares@sun.com-20090924145252-8vvsnbvwo9l8v4vc parent: anurag.shekhar@sun.com-20090831075609-tkpqu41hxtupdeip committer: Luis Soares <luis.soares@sun.com> branch nick: mysql-5.1-bugteam timestamp: Thu 2009-09-24 15:52:52 +0100 message: BUG#42829: binlogging enabled for all schemas regardless of binlog-db-db / binlog-ignore-db ... 	4eb60be01f39c68bcf922dea3f4ecda41913d9f3
----------------------------
"Bug #52367 Deadlock involving SET GLOBAL EVENT_SCHEDULER = OFF during rqg_mdl_deadlock test The problem was that if two connection threads simultaneously tries to execute ""SET GLOBAL EVENT_SCHEDULER = OFF"", one of them could hang waiting for the scheduler to stop. The first connection thread would kill the event scheduler thread and then start waiting for it to exit. The second connection thread would then find the event scheduler thread in the process of exiting and also wait for it to exit. However, since the event scheduler thread used signal to wake only one waiting thread, the other connection thread would be left waiting. This bug was a regression introduced by the fix for Bug#51160. Before #51160 it was not possible for two connection threads to try to stop the event scheduler thread simultaneously. This patch fixes the problem my making sure the event scheduler thread uses broadcast to notify all waiters that it is exiting. No test case added as this would require adding debug sync points to parts of the code where sync points are currently not used. The patch has been tested with the non-deterministic test case from the bug description as well as using the RQG. "	7e6eddd37485f3579ee1e8843ce4a34fcf6e4f61
----------------------------
WL#5330 SEAGULL: Move my_socket.h to storage/ndb/ - Postfix the my_socket define on Windows 	9e6afc1a770f242e401aa584762b496e966cc1cf
----------------------------
WL#5330 SEAGULL: Move my_socket.h to storage/ndb/ - Revert the changes to use my_socket portability layer in MySQL Server part of MySQL Cluster. - Move my_socket* files to portlib - Align the IPV6 connect code in sql-common/client.c with 5.5 where it's backported from. - Align the --bind-address code in sql-common/client.c with suggested patch for 5.X - Fix the few places in storage/ndb which was not using the NDB_SOCKET_TYPE define 	382dbbd1241ea8720b021109d7b59b0f878d1e4a
----------------------------
Fix compile error (different storage class for mysql_temp_dir_list) when trying to build innodb as plugin. The reason for the error is mismatch in mysql_temp_dir_list declaration between mysqld.h and usage in ha_innodb.cc Add missing MYSQL_PLUGIN_IMPORT to mysql_tmpdir_list (variables exported by the server and used by plugin need it). 	2283e1b510998ea904f118b0da50986ec4047de2
----------------------------
Bug#52754 Build break in mysql-trunk, performance schema unit test Tree cleaup after the last major merges in mysql-trunk: The files sql/lex_hash.h and sql/sql_yacc.h are automatically generated, and should not be checked in the configuration management system. These files are now removed. No changes are required for .bzrignore, which already listed these files (and similar files in libmysqld/). The file storage/perfschema/unittest/pfs_timer-t.cc did not build after the header files refactoring affecting mysql_priv.h The file now builds properly using sql_priv.h 	7decb1b9289cf1ea125a0a09e74b7b9bac025fec
----------------------------
ndb - move the NONBLOCKERR global define to the only place where it's used in SocketClient.cpp 	8446f60d65396f3e00c8c1dd998981b1a4da1d0e
----------------------------
Bug #47095: Can't open_files_limit really be larger than 65535? Several problems addressed: 1. The maximum value for --open_files_limit on non-windows boxes is now raised to UINT_MAX (the maximum possible without significant changes in the code). The maximum value on windows is kept to be 2048 due to a known limitation (bug 24509). 2. mysqld_safe now supports --open_files_limit=xx in addition to --open-files-limit=xx 3. mysqld_safe always passes through --open[_-]files[_-]limit to the underlying mysqld. It used to pass it through only if it the user running the script has access to the root directory or there was an --user argument specified. 4. Fixed a prototype in my_file.c to match its counterpart in the other #ifdef branch. 	17a21c4f35812eba71a44e906e18ec947517cf35
----------------------------
ndb_mgmd - make 'match_hostname' a static function instead of MgmtSrvr member 	e3fcd6d98df50bb7f157a8db73e8287ab59c1f55
----------------------------
branches/zip: innobase_init(): Correct the error message about wrong innodb_change_buffering value.  Reported by Ranger. 	c2ecefe6e83297f7e99be790ed4d19967cc667d7
----------------------------
Bug#52586 Misleading error message on attempt to access a P_S table using a wrong name Before this fix, select * from performance_schema.no_such_table would fail with ER_TABLEACCESS_DENIED_ERROR, because the performance schema code automatically denied SELECT_ACL on performance_schema.*. With this fix, SELECT_ACL on performance_schema.* is not premptively rejected, so that: select * from performance_schema.no_such_table now fails later in the code execution with ER_NO_SUCH_TABLE. The statement still fails, as expected, but returning a more detailed error (that now discloses the information that the table really does not exist) is better for ease of use. 	f78b59bde7e112ac6fd7680f0069ea11387eccbf
----------------------------
Merge: f2d77ee 52d89df Manual merge of mysql-5.1-bugteam into mysql-trunk-merge. Conflicts: Text conflict in mysql-test/r/func_str.result Text conflict in mysql-test/suite/sys_vars/r/myisam_sort_buffer_size_basic_32.result Text conflict in mysql-test/suite/sys_vars/r/myisam_sort_buffer_size_basic_64.result Text conflict in mysql-test/t/func_str.test Text conflict in sql/mysqld.cc Text conflict in sql/protocol.cc Text conflict in storage/myisam/mi_open.c 	87b98f6350b57a58e2a0c436c6c4c6783e3d27dd
----------------------------
Expand @HOSTNAME@. 	bbe86d08ba83425423c70b29d1ca757bf57a5e34
----------------------------
"Applying InnoDB snapshot Detailed revision comments: r6861 | vdimov | 2010-03-23 19:31:02 +0200 (Tue, 23 Mar 2010) | 36 lines branches/zip: Merge joerg@mysql.com-20100322150231-vdq0afbqtmbs6phy from BZR, Including univ.i before mysql/plugin.h is needed to avoid this compiler error: o  This is how gcc puts it: o  > > ccache /usr/local/gcc-4.3.2/bin/gcc -static-libgcc -DHAVE_CONFIG_H -I. -I../../include -I../../include -I../../include -I../../regex -I./include -I../../sql -I. -I../../zlib    -g -O3 -march=i686   -DUNIV_LINUX -MT libinnobase_a-trx0i_s.o -MD -MP -MF .deps/libinnobase_a-trx0i_s.Tpo -c -o libinnobase_a-trx0i_s.o `test -f 'trx/trx0i_s.c' || echo './'`trx/trx0i_s.c o  > > In file included from ./include/univ.i:114, o  > >                  from trx/trx0i_s.c:36: o  > > ../../include/my_pthread.h:628: error: expected ')' before '*' token o  > > In file included from ../../include/my_pthread.h:732, o  > >                  from ./include/univ.i:114, o  > >                  from trx/trx0i_s.c:36: o  > > ../../include/mysql/psi/mysql_thread.h:100: error: expected specifier-qualifier-list before 'pthread_rwlock_t' o  > > ../../include/mysql/psi/mysql_thread.h:116: error: expected specifier-qualifier-list before 'pthread_rwlock_t' o  > > ../../include/mysql/psi/mysql_thread.h: In function 'inline_mysql_rwlock_init': o  > > ../../include/mysql/psi/mysql_thread.h:711: error: 'mysql_rwlock_t' has no member named 'm_psi' o  > > ../../include/mysql/psi/mysql_thread.h:716: error: 'mysql_rwlock_t' has no member named 'm_rwlock' o  > > .... ((continued)) o o  Intel's icc gives slightly clearer messages: o  > > icc -static-intel -static-libgcc -DHAVE_CONFIG_H -I. -I../../include -I../../include -I../../include -I../../regex -I./include -I../../sql -I. -I../../zlib    -O3 -g -unroll2 -ip -mp -restrict -no-ftz -no-prefetch   -DUNIV_LINUX -MT libinnobase_a-trx0i_s.o -MD -MP -MF .deps/libinnobase_a-trx0i_s.Tpo -c -o libinnobase_a-trx0i_s.o `test -f 'trx/trx0i_s.c' || echo './'`trx/trx0i_s.c o  > > ../../include/my_pthread.h(628): error: identifier ""pthread_rwlock_t"" is undefined o  > >   extern int rw_pr_init(rw_pr_lock_t *); o  > >                         ^ o  > > o  > > ../../include/mysql/psi/mysql_thread.h(100): error: identifier ""pthread_rwlock_t"" is undefined o  > >     rw_lock_t m_rwlock; o  > >     ^ o  > > o  > > ../../include/mysql/psi/mysql_thread.h(116): error: identifier ""pthread_rwlock_t"" is undefined o  > >     rw_pr_lock_t m_prlock; o  > >     ^ "	64d2ade65db9766b18d14ff1f993603368586d87
----------------------------
Fix SVR4 datadir 	5593e29304b08652f5249bcee223655cb98e896b
----------------------------
Applying InnoDB snapshot Detailed revision comments: r6858 | mmakela | 2010-03-23 14:09:24 +0200 (Tue, 23 Mar 2010) | 1 line branches/zip: innodb_read_ahead_threshold: Add missing space to help string. 	9f0592dd38f2d268e954d69869f0a90dfdc03303
----------------------------
Applying InnoDB snapshot Detailed revision comments: r6857 | mmakela | 2010-03-23 14:07:53 +0200 (Tue, 23 Mar 2010) | 1 line branches/zip: innodb_change_buffering: Correct the documentation. 	d56ea0322e0baafe718b74b51a744bde8be2e8dd
----------------------------
Applying InnoDB snapshot Detailed revision comments: r6787 | marko | 2010-03-10 10:35:06 +0200 (Wed, 10 Mar 2010) | 10 lines branches/zip: recv_parse_log_rec(): Remove a bogus assertion about page_no. TODO: We might also consider removing recv_max_parsed_page_no, because it does not make much sense with *.ibd files. recv_report_corrupt_log(), recv_scan_log_recs(): Abort when a corrupted log record has been found, unless innodb_force_recovery has been set. This fixes Issue #464. rb://265 approved by Heikki Tuuri 	434cf1894cab0ae2a2b8a2cf6d452b60b9033338
----------------------------
Applying InnoDB snapshot Detailed revision comments: r6727 | marko | 2010-02-17 18:50:20 +0200 (Wed, 17 Feb 2010) | 2 lines branches/zip: fsp_init_file_page_low(): Declare the page uninitialized for Valgrind. 	49a27847af85fbd7ec52fe953e269ae234a3700f
----------------------------
Try to fix datadir 	f037ad4fbf1ed87254d36e94f4368cfb348d8248
----------------------------
Applying InnoDB snapshot Detailed revision comments: r6472 | calvin | 2010-01-16 01:53:47 +0200 (Sat, 16 Jan 2010) | 12 lines branches/zip: Merge revisions 6425:6471 from branches/5.1 to pick up the first part fix of bug49396. ------------------------------------------------------------------------ r6471 | calvin | 2010-01-15 17:43:27 -0600 (Fri, 15 Jan 2010) | 4 lines branches/5.1: fix bug#49396: main.innodb test fails in embedded mode Change replace_result by using $MYSQLD_DATADIR. Tested in both embedded mode and normal server mode. ------------------------------------------------------------------------ r6473 | calvin | 2010-01-16 01:58:16 +0200 (Sat, 16 Jan 2010) | 6 lines branches/zip: fix bug#49396: innodb.innodb-index test fails in embedded mode This is 2nd part of the fix for bug#49396. The 1st part is innodb.test. Tested in both embedded mode and normal server mode. 	33bac9249fc19c371bacd68baef6e78dee032b7b
----------------------------
Applying InnoDB snapshot Detailed revision comments: r6425 | marko | 2010-01-12 13:47:11 +0200 (Tue, 12 Jan 2010) | 45 lines branches/zip: Merge revisions 6350:6424 from branches/5.1: ------------------------------------------------------------------------ r6421 | jyang | 2010-01-12 07:59:16 +0200 (Tue, 12 Jan 2010) | 8 lines Changed paths: M /branches/5.1/row/row0mysql.c branches/5.1: Fix bug #49238: Creating/Dropping a temporary table while at 1023 transactions will cause assert. Handle possible DB_TOO_MANY_CONCURRENT_TRXS when deleting metadata in row_drop_table_for_mysql(). rb://220, approved by Marko ------------------------------------------------------------------------ r6422 | marko | 2010-01-12 11:34:27 +0200 (Tue, 12 Jan 2010) | 3 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/handler/ha_innodb.h branches/5.1: Non-functional change: Make innobase_get_int_col_max_value() a static function. It does not access any fields of class ha_innobase. ------------------------------------------------------------------------ r6424 | marko | 2010-01-12 12:22:19 +0200 (Tue, 12 Jan 2010) | 16 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/handler/ha_innodb.h branches/5.1: In innobase_initialize_autoinc(), do not attempt to read the maximum auto-increment value from the table if innodb_force_recovery is set to at least 4, so that writes are disabled. (Bug #46193) innobase_get_int_col_max_value(): Move the function definition before ha_innobase::innobase_initialize_autoinc(), because that function now calls this function. ha_innobase::innobase_initialize_autoinc(): Change the return type to void.  Do not attempt to read the maximum auto-increment value from the table if innodb_force_recovery is set to at least 4.  Issue ER_AUTOINC_READ_FAILED to the client when the auto-increment value cannot be read. rb://144 by Sunny, revised by Marko ------------------------------------------------------------------------ 	68afad078a8a8d2aa3c9d1e4298e670678b0dbc7
----------------------------
BUG#51291 Unfortunate effect around variable binlog_direct_non_transactional_updates Post-merge fix. 	ec6c56ef5a4ffd7cab5b2c5b5da79e45530fcf33
----------------------------
branches/innodb+ rb://257 When a transaction joins we check if there are any other transactions waiting on its locks. If there aren't any waiting then no deadlock can occur.  This patch however has additional changes. 1. Count leading zeros 2. Count trailing zeros There are two version of both these utility functions. One is hand coded and the other will use the GCC builtin when available. The changes to configure have yet to be made. Simplify the next record lock fetch in the deadlock check code. Pass the heap number as a parameter to the deadlock check code. Written by: Sunny 	efde23d5b7850788c1c44dbf6f3bd63d49abff69
----------------------------
branches/innodb+ Non-functional change. Take our the start up message about ignoring innodb_use_native_aio. 	5fa48065dd255f0454b7359e04eac2352f1a9de8
----------------------------
branches/innodb+: Create a separate purge thread to do the purge. Introduce two new configuration parameters. 1. innodb-purge-threads := [01] -- default is 0 2. innodb-purge-batch-size := 20 ... 5000 -- default is 20 rb://271 	e39826c69b990b65239c6f618659f16054f6bf3b
----------------------------
BUG#51291 Unfortunate effect around variable binlog_direct_non_transactional_updates Added test cases to check the case where the option binlog_direct_non_transactional_updates is OFF. 	f7776c999ed59e850dd7781e09329a50c8def881
----------------------------
"BUG#51291 Unfortunate effect around variable binlog_direct_non_transactional_updates BUG#46364 introduced the flag binlog_direct_non_transactional_updates which would make N-changes to be written to the binary log upon committing the statement when ""ON"". On the other hand, when ""OFF"" the option was supposed to mimic the behavior in 5.1. However, the implementation was not mimicking the behavior correctly and the following bugs popped up: Case #1: N-changes executed within a transaction would go into the S-cache. When later in the same transaction a T-change occurs, N-changes following it were written to the T-cache instead of the S-cache. In some cases, this raises problems. For example, a Table_map_log_event being written initially into the S-cache, together with the initial N-changes, would be absent from the T-cache. This would log N-changes orphaned from a Table_map_log_event (thence discarded at the slave). (MIXED and ROW) Case #2: When rolling back a transaction, the N-changes that might be in the T-cache were disregarded and truncated along with the T-changes. (MIXED and ROW) Case #3: When a MIXED statement (TN) is ahead of any other T-changes in the transaction and it fails, it is kept in the T-cache until the transaction ends. This is not the case in 5.1 or Betony (5.5.2). In these, the failed TN statement would be written to the binlog at the same instant it had failed and not deferred until transaction end. (SBR) To fix these problems, we have decided to do what follows: For Case #1 and #2, we circumvent them: 1. by not letting binlog_direct_non_transactional_updates affect MIXED and RBR. These modes will keep the behavior provided by WL#2687. Although this will make Celosia to behave differently from 5.1, an execution will be always safe under such modes in the sense that slaves will never go out sync. In 5.1, using either MIXED or ROW while mixing N-statements and T-statements was not safe. For Case #3, we don't actually fix it. We: 1. keep it and make all MIXED statements whether they end up failing or not or whether they are up front in the transaction or after some transactional change to always be stored in the T-cache. This means that it is written to the binary log on transaction commit/rollback only. 2. We make the warning message even more specific about the MIXED statement and SBR. "	7827688f231be69a86a317e110fd1b3ba559af43
----------------------------
Bug #37168: Missing variable - skip_name_resolve Added a read-only global boolean variable skip_name_resolve. 	56c9c9e9f5f40d0fb96b85b0362cd35c9d989883
----------------------------
Fix socket path in RPMs.  XXX should be put into cmake/* somewhere. 	719d62a3dd3e77857d373366311cb5449e492573
----------------------------
"branches/innodb+: Merge revisions 6853:6897 from branches/zip: Skip r6860, which was merged from branches/innodb+ to branches/zip, and r6857, which is only applicable to branches/zip. ------------------------------------------------------------------------ r6858 | mmakela | 2010-03-23 14:09:24 +0200 (Tue, 23 Mar 2010) | 1 line Changed paths: M /branches/zip/handler/ha_innodb.cc branches/zip: innodb_read_ahead_threshold: Add missing space to help string. ------------------------------------------------------------------------ r6861 | vdimov | 2010-03-23 19:31:02 +0200 (Tue, 23 Mar 2010) | 36 lines Changed paths: M /branches/zip/trx/trx0i_s.c branches/zip: Merge joerg@mysql.com-20100322150231-vdq0afbqtmbs6phy from BZR, Including univ.i before mysql/plugin.h is needed to avoid this compiler error: o  This is how gcc puts it: o  > > ccache /usr/local/gcc-4.3.2/bin/gcc -static-libgcc -DHAVE_CONFIG_H -I. -I../../include -I../../include -I../../include -I../../regex -I./include -I../../sql -I. -I../../zlib    -g -O3 -march=i686   -DUNIV_LINUX -MT libinnobase_a-trx0i_s.o -MD -MP -MF .deps/libinnobase_a-trx0i_s.Tpo -c -o libinnobase_a-trx0i_s.o `test -f 'trx/trx0i_s.c' || echo './'`trx/trx0i_s.c o  > > In file included from ./include/univ.i:114, o  > >                  from trx/trx0i_s.c:36: o  > > ../../include/my_pthread.h:628: error: expected ')' before '*' token o  > > In file included from ../../include/my_pthread.h:732, o  > >                  from ./include/univ.i:114, o  > >                  from trx/trx0i_s.c:36: o  > > ../../include/mysql/psi/mysql_thread.h:100: error: expected specifier-qualifier-list before 'pthread_rwlock_t' o  > > ../../include/mysql/psi/mysql_thread.h:116: error: expected specifier-qualifier-list before 'pthread_rwlock_t' o  > > ../../include/mysql/psi/mysql_thread.h: In function 'inline_mysql_rwlock_init': o  > > ../../include/mysql/psi/mysql_thread.h:711: error: 'mysql_rwlock_t' has no member named 'm_psi' o  > > ../../include/mysql/psi/mysql_thread.h:716: error: 'mysql_rwlock_t' has no member named 'm_rwlock' o  > > .... ((continued)) o o  Intel's icc gives slightly clearer messages: o  > > icc -static-intel -static-libgcc -DHAVE_CONFIG_H -I. -I../../include -I../../include -I../../include -I../../regex -I./include -I../../sql -I. -I../../zlib    -O3 -g -unroll2 -ip -mp -restrict -no-ftz -no-prefetch   -DUNIV_LINUX -MT libinnobase_a-trx0i_s.o -MD -MP -MF .deps/libinnobase_a-trx0i_s.Tpo -c -o libinnobase_a-trx0i_s.o `test -f 'trx/trx0i_s.c' || echo './'`trx/trx0i_s.c o  > > ../../include/my_pthread.h(628): error: identifier ""pthread_rwlock_t"" is undefined o  > >   extern int rw_pr_init(rw_pr_lock_t *); o  > >                         ^ o  > > o  > > ../../include/mysql/psi/mysql_thread.h(100): error: identifier ""pthread_rwlock_t"" is undefined o  > >     rw_lock_t m_rwlock; o  > >     ^ o  > > o  > > ../../include/mysql/psi/mysql_thread.h(116): error: identifier ""pthread_rwlock_t"" is undefined o  > >     rw_pr_lock_t m_prlock; o  > >     ^ ------------------------------------------------------------------------ r6864 | mmakela | 2010-03-24 14:05:53 +0200 (Wed, 24 Mar 2010) | 1 line Changed paths: M /branches/zip/include/data0type.ic branches/zip: dtype_new_store_for_order_and_null_size(): Add ut_ad() on mtype. ------------------------------------------------------------------------ r6868 | mmakela | 2010-03-25 13:03:08 +0200 (Thu, 25 Mar 2010) | 1 line Changed paths: M /branches/zip/page/page0page.c branches/zip: page_validate(): Check the buf[] bounds. ------------------------------------------------------------------------ r6871 | vdimov | 2010-03-25 16:39:44 +0200 (Thu, 25 Mar 2010) | 4 lines Changed paths: M /branches/zip/ChangeLog branches/zip: Whitespace fixup to be consistent with the rest of the file. ------------------------------------------------------------------------ r6872 | vdimov | 2010-03-25 17:03:17 +0200 (Thu, 25 Mar 2010) | 4 lines Changed paths: M /branches/zip/ChangeLog branches/zip: Fix ChangeLog - write only the bug title in bugs.mysql.com-related entires. ------------------------------------------------------------------------ r6873 | vdimov | 2010-03-25 17:06:56 +0200 (Thu, 25 Mar 2010) | 4 lines Changed paths: M /branches/zip/ChangeLog branches/zip: Use Bug#N instead of Bug #N to be consistent with the rest of the fil. ------------------------------------------------------------------------ r6874 | vdimov | 2010-03-25 17:17:52 +0200 (Thu, 25 Mar 2010) | 4 lines Changed paths: M /branches/zip/ChangeLog branches/zip: Wrap ChangeLog at 78th column ------------------------------------------------------------------------ r6875 | vdimov | 2010-03-25 18:18:15 +0200 (Thu, 25 Mar 2010) | 4 lines Changed paths: M /branches/zip/ChangeLog branches/zip: Wrap line at 78 column in ChangeLog. ------------------------------------------------------------------------ r6891 | vdimov | 2010-03-26 16:19:01 +0200 (Fri, 26 Mar 2010) | 5 lines Changed paths: M /branches/innodb+/buf/buf0buddy.c M /branches/innodb+/include/btr0btr.ic M /branches/innodb+/include/buf0buf.ic M /branches/innodb+/include/handler0alter.h M /branches/innodb+/include/mtr0mtr.ic M /branches/innodb+/include/pars0pars.h M /branches/innodb+/include/row0merge.h M /branches/innodb+/include/row0row.h M /branches/innodb+/include/row0sel.h M /branches/innodb+/include/row0types.h M /branches/innodb+/include/sync0rw.h M /branches/innodb+/include/ut0lst.h M /branches/innodb+/include/ut0ut.h M /branches/innodb+/os/os0thread.c M /branches/innodb+/pars/pars0pars.c M /branches/innodb+/plug.in M /branches/innodb+/row/row0purge.c M /branches/innodb+/row/row0row.c M /branches/innodb+/row/row0uins.c M /branches/innodb+/trx/trx0rec.c M /branches/innodb+/ut/ut0ut.c M /branches/innodb+_persistent_stats/buf/buf0buddy.c M /branches/innodb+_persistent_stats/include/btr0btr.ic M /branches/innodb+_persistent_stats/include/buf0buf.ic M /branches/innodb+_persistent_stats/include/handler0alter.h M /branches/innodb+_persistent_stats/include/mtr0mtr.ic M /branches/innodb+_persistent_stats/include/row0merge.h M /branches/innodb+_persistent_stats/include/row0row.h M /branches/innodb+_persistent_stats/include/row0sel.h M /branches/innodb+_persistent_stats/include/row0types.h M /branches/innodb+_persistent_stats/include/sync0rw.h M /branches/innodb+_persistent_stats/os/os0thread.c M /branches/innodb+_persistent_stats/plug.in M /branches/innodb+_persistent_stats/row/row0purge.c M /branches/innodb+_persistent_stats/row/row0row.c M /branches/innodb+_persistent_stats/row/row0uins.c M /branches/innodb+_persistent_stats/trx/trx0rec.c M /branches/performance_schema/buf/buf0buddy.c M /branches/performance_schema/buf/buf0flu.c M /branches/performance_schema/compile-innodb-debug M /branches/performance_schema/include/btr0btr.ic M /branches/performance_schema/include/buf0buf.ic M /branches/performance_schema/include/dict0boot.ic M /branches/performance_schema/include/dict0dict.h M /branches/performance_schema/include/os0file.ic M /branches/performance_schema/include/os0thread.h M /branches/performance_schema/include/row0sel.h M /branches/performance_schema/include/trx0purge.h M /branches/performance_schema/include/trx0sys.ic M /branches/performance_schema/include/ut0wqueue.h M /branches/performance_schema/lock/lock0iter.c M /branches/performance_schema/mem/mem0pool.c M /branches/performance_schema/os/os0thread.c M /branches/performance_schema/page/page0zip.c M /branches/performance_schema/que/que0que.c M /branches/performance_schema/read/read0read.c M /branches/performance_schema/row/row0purge.c M /branches/performance_schema/row/row0row.c M /branches/performance_schema/row/row0vers.c M /branches/performance_schema/sync/sync0arr.c M /branches/performance_schema/thr/thr0loc.c M /branches/performance_schema/trx/trx0rec.c M /branches/performance_schema/trx/trx0roll.c M /branches/performance_schema/trx/trx0undo.c M /branches/performance_schema/ut/ut0wqueue.c M /branches/perfschema/btr/btr0sea.c M /branches/perfschema/buf/buf0buddy.c M /branches/perfschema/buf/buf0flu.c M /branches/perfschema/compile-innodb-debug M /branches/perfschema/ha/hash0hash.c M /branches/perfschema/include/buf0buf.ic M /branches/perfschema/include/buf0flu.ic M /branches/perfschema/include/dict0boot.ic M /branches/perfschema/include/os0thread.h M /branches/perfschema/include/sync0rw.h M /branches/perfschema/include/sync0rw.ic M /branches/perfschema/include/sync0sync.ic M /branches/perfschema/mem/mem0pool.c M /branches/perfschema/os/os0thread.c M /branches/perfschema/page/page0zip.c M /branches/perfschema/que/que0que.c M /branches/perfschema/read/read0read.c M /branches/perfschema/row/row0purge.c M /branches/perfschema/row/row0vers.c M /branches/perfschema/sync/sync0arr.c M /branches/perfschema/sync/sync0rw.c M /branches/perfschema/thr/thr0loc.c M /branches/perfschema/trx/trx0purge.c M /branches/perfschema/trx/trx0rec.c M /branches/perfschema/trx/trx0roll.c M /branches/perfschema/trx/trx0undo.c M /branches/perfschema/ut/ut0wqueue.c M /branches/zip/buf/buf0buddy.c M /branches/zip/buf/buf0flu.c M /branches/zip/buf/buf0rea.c M /branches/zip/fil/fil0fil.c M /branches/zip/include/btr0btr.ic M /branches/zip/include/buf0buf.ic M /branches/zip/include/buf0flu.h M /branches/zip/include/data0type.ic M /branches/zip/include/mtr0mtr.ic M /branches/zip/include/row0sel.h M /branches/zip/include/sync0rw.h M /branches/zip/plug.in M /branches/zip/row/row0row.c M /branches/zip/trx/trx0i_s.c M /branches/zip/trx/trx0rec.c M /branches/zip/trx/trx0sys.c Non-functional change: update copyright year to 2010 of the files that have been modified after 2010-01-01 according to svn. for f in $(svn log -v -r{2010-01-01}:HEAD |grep ""^   M "" |cut -b 16- |sort -u) ; do sed -i """" -E 's/(Copyright \(c\) [0-9]{4},) [0-9]{4}, (.*Innobase Oy.+All Rights Reserved)/\1 2010, \2/' $f ; done ------------------------------------------------------------------------ r6897 | mmakela | 2010-03-29 11:36:19 +0300 (Mon, 29 Mar 2010) | 3 lines Changed paths: M /branches/zip/handler/ha_innodb.cc branches/zip: innodb_mutex_show_status(): Fix a condition that was accidentally negated in r6781, making SHOW ENGINE INNODB MUTEX STATUS display only locks with no OS waits. ------------------------------------------------------------------------ "	b7188cd26bb1626650a3c768493aa38654e29fdb
----------------------------
branches/innodb+: Merge branches/perfschema back into innodb+. Check in code change for implementing Performace Schema in InnoDB. Objects in four different modules in InnoDB have been performance instrumented, these modules are: 1) mutexes 2) rwlocks 3) file I/O 4) threads We mostly preserved the existing APIs, but APIs would point to instrumented function wrappers if performance schema is defined. There are 4 different defines that controls the instrumentation of each module.  The feature is off by default, and will be compiled in with special build option, and requre configure option to turn it on when server boots.  For more detail design and functional information, please refer to performance schema wiki page. rb://270 approved by Marko Mäkelä 	cefc7748b2fd0292b1bf531162d0b667f9bc863b
----------------------------
"WL#5096 -- Addressing review comments rpl_row_record_find_* - Removed these tests which are now superseded by rpl_row_img.test diff_tables.inc - Refactored so that it is now possible to specify tables on any two connections, instead of just master and slave. diff_tables2.inc - Moved its contents to diff_tables.inc and removed it. rpl_row_img_set.inc - Refactored and made generic. - It takes a list of connections and binlog-row-image values. Runs through the list and sets the respective value. It also takes a third argument per connection, which controls whether stop and start slave should be issued. - Added some comments to the file. rpl_row_img_sanity_set_img - Removed as it became obsolete after refactorings on rpl_row_img_set. rpl_row_img_sanity.test - Removed some comments (including ones referencing reviews). - Added assertion for default binlog_row_image - Refactored the main loop to be more descriptive - Reduced the code length by reusing rpl_row_img_sanity_set_img.inc rpl_row_img_general_loop.test - Changed so that the new argument for rpl_row_img_set.inc would be used. - Improved comments. rpl_row_img_parts_assertion.inc - This was rpl_row_mysqbinlog_img_check.inc. Got renamed. - Refactored to: 1. make image expected argument to be more concise; 2. make it call mysqlbinlog itself and has start position as an argument. This way we can have mysqlbinlog to dump just a specific part of the binary log and reduce the scope of the pattern matching used in the assertion; 3. to clean up error reporting. - Improved comments. rpl_row_img_parts_master_slave.inc - New file. - Wrapper to rpl_row_img_parts_assertion that handles replication scenarios, combining master and slave assertions together. It also handles automatic synchronization before executing the statement that generates row events, saves the binary log positions and in the end calls rpl_row_img_parts_assertion for both master and slave assertions. rpl_row_img_sanity_assertions.inc - Removed and merged remains on rpl_row_img_sanity. rpl_row_img_sanity_create_table - Removed and merged remains on rpl_row_img_sanity. rpl_row_img_sanity.test - After the refactorings above, replaced the obsolete parts with the new functionality. - Improved comments. rpl_auto_increment - Was missing a ""connection master"" on the clean up section. Since diff_tables.inc now restores the connection to the one it was using before finishing, this means that the clean up commands were being issued on the slave's connection, whereas before they were issued on the master's connection. This commit also includes the corresponding result file updates. "	b1fa8005a2547edb722b03720db88e7511317b33
----------------------------
An addition to fix for BUG#51866 - crash with repair by sort and fulltext keys. Min value for myisam_sort_buffer_size is 4096. 	bd2a0eaa82c15af2b49cfbe405489a3207f196e0
----------------------------
BUG#51866 - crash with repair by sort and fulltext keys Repairing MyISAM table with fulltext indexes and low myisam_sort_buffer_size may crash the server. Estimation of number of index entries was done incorrectly, causing further assertion failure or server crash. Docs note: min value for myisam_sort_buffer_size has been changed from 4 to 4096. 	3f641968fc91950bf974a8dbfe0cd6d913cab75a
----------------------------
WL#5303 Romansh locale for DAYNAME, MONTHNAME, DATE_FORMAT (Bug#50915 Romansh language patch for MySQL server) Adding Romansh locale. Adding tests: mysql-test/r/locale.result mysql-test/r/variables.result mysql-test/t/locale.test mysql-test/t/variables.test Adding locale data for rm_CH: sql/sql_locale.cc 	9f3c61879eeb6d81f1f5762739db5b89aa44657e
----------------------------
"Add ""--with-perfschema"" to the configure options for RPMs. "	8a5aca0dc7861eff472ad04f7aa1029e78822654
----------------------------
BUG#52341: PB2: rpl tests started taking three times more time on linux x86_64 max Rpl tests were surprisingly taking too long when server was built using cmake on linux. This was because cmake counter part of patch for WL#4949 was not defining SIGNAL_WITH_VIO_CLOSE flag, which had negative impact on the time needed to stop the slave IO thread on STOP SLAVE command. We fix this by deploy the missing SET command on configure.cmake. 	b684173e3352c954a07845b891caae42462e9f0e
----------------------------
Bug#47096  LOST_EVENTS incident not reported when --binlog-ignore-db is used: Skip filtering on database for Incident_bilog_event 	8b5dda56b01b4f2032da5359bdcddce04fdfd722
----------------------------
Backport into build-201003230706-5.1.43sp1 > ------------------------------------------------------------ > revno: 3345.2.1 > revision-id: joro@sun.com-20100218084815-53nb9oonzd7r4gmj > parent: sergey.glukhov@sun.com-20100217121457-jqx19u6x387rgk7e > committer: Georgi Kodinov <joro@sun.com> > branch nick: fix-5.1-bugteam > timestamp: Thu 2010-02-18 10:48:15 +0200 > message: >   Bug #51049: main.bug39022 fails in mysql-trunk-merge > >   Fixed the test to behave correctly with ps-protocol >   and binlog format row. > ------------------------------------------------------------ > revno: 3333.1.6 > revision-id: joro@sun.com-20100129093628-sze9cv0neu0xbabm > parent: davi.arnaut@sun.com-20100128215140-x0w6fe2de0b28opp > committer: Georgi Kodinov <joro@sun.com> > branch nick: B49552-5.1-bugteam > timestamp: Fri 2010-01-29 11:36:28 +0200 > message: >   Bug #49552 : sql_buffer_result cause crash + not found records >     in multitable delete/subquery > >   SQL_BUFFER_RESULT should not have an effect on non-SELECT >   statements according to our documentation. >   Fixed by not passing it through to multi-table DELETE (similarly >   to how it's done for multi-table UPDATE). 	d72e1f779595546209bbc3ce952d04a749bfe94a
----------------------------
Backporting for 5.1.43sp1 ,file added mysql-test/include/not_binlog_format_row.inc 	d7e9fd7e5fb159e041a10147f6333d284ae3e196
----------------------------
Backport into build-201003230706-5.1.43sp1 > ------------------------------------------------------------ > revno: 3329.2.3 > revision-id: svoj@sun.com-20100122095702-e18xzhmyll1e5s25 > parent: svoj@sun.com-20100122095632-j8ssd5csnlzp1zpf > committer: Sergey Vojtovich <svoj@sun.com> > branch nick: mysql-5.1-bugteam > timestamp: Fri 2010-01-22 13:57:02 +0400 > message: >   Applying InnoDB snapshot, fixes BUG#46193. > >   Detailed revision comments: > >   r6424 | marko | 2010-01-12 12:22:19 +0200 (Tue, 12 Jan 2010) | 16 lines >   branches/5.1: In innobase_initialize_autoinc(), do not attempt to read >   the maximum auto-increment value from the table if >   innodb_force_recovery is set to at least 4, so that writes are >   disabled. (Bug #46193) > >   innobase_get_int_col_max_value(): Move the function definition before >   ha_innobase::innobase_initialize_autoinc(), because that function now >   calls this function. > >   ha_innobase::innobase_initialize_autoinc(): Change the return type to >   void.  Do not attempt to read the maximum auto-increment value from >   the table if innodb_force_recovery is set to at least 4.  Issue >   ER_AUTOINC_READ_FAILED to the client when the auto-increment value >   cannot be read. > >   rb://144 by Sunny, revised by Marko 	3f67377531ed9ea40d9523974e9c7b3765a1a299
----------------------------
"branches/zip: Merge joerg@mysql.com-20100322150231-vdq0afbqtmbs6phy from BZR, Including univ.i before mysql/plugin.h is needed to avoid this compiler error: o  This is how gcc puts it: o  > > ccache /usr/local/gcc-4.3.2/bin/gcc -static-libgcc -DHAVE_CONFIG_H -I. -I../../include -I../../include -I../../include -I../../regex -I./include -I../../sql -I. -I../../zlib    -g -O3 -march=i686   -DUNIV_LINUX -MT libinnobase_a-trx0i_s.o -MD -MP -MF .deps/libinnobase_a-trx0i_s.Tpo -c -o libinnobase_a-trx0i_s.o `test -f 'trx/trx0i_s.c' || echo './'`trx/trx0i_s.c o  > > In file included from ./include/univ.i:114, o  > >                  from trx/trx0i_s.c:36: o  > > ../../include/my_pthread.h:628: error: expected ')' before '*' token o  > > In file included from ../../include/my_pthread.h:732, o  > >                  from ./include/univ.i:114, o  > >                  from trx/trx0i_s.c:36: o  > > ../../include/mysql/psi/mysql_thread.h:100: error: expected specifier-qualifier-list before 'pthread_rwlock_t' o  > > ../../include/mysql/psi/mysql_thread.h:116: error: expected specifier-qualifier-list before 'pthread_rwlock_t' o  > > ../../include/mysql/psi/mysql_thread.h: In function 'inline_mysql_rwlock_init': o  > > ../../include/mysql/psi/mysql_thread.h:711: error: 'mysql_rwlock_t' has no member named 'm_psi' o  > > ../../include/mysql/psi/mysql_thread.h:716: error: 'mysql_rwlock_t' has no member named 'm_rwlock' o  > > .... ((continued)) o o  Intel's icc gives slightly clearer messages: o  > > icc -static-intel -static-libgcc -DHAVE_CONFIG_H -I. -I../../include -I../../include -I../../include -I../../regex -I./include -I../../sql -I. -I../../zlib    -O3 -g -unroll2 -ip -mp -restrict -no-ftz -no-prefetch   -DUNIV_LINUX -MT libinnobase_a-trx0i_s.o -MD -MP -MF .deps/libinnobase_a-trx0i_s.Tpo -c -o libinnobase_a-trx0i_s.o `test -f 'trx/trx0i_s.c' || echo './'`trx/trx0i_s.c o  > > ../../include/my_pthread.h(628): error: identifier ""pthread_rwlock_t"" is undefined o  > >   extern int rw_pr_init(rw_pr_lock_t *); o  > >                         ^ o  > > o  > > ../../include/mysql/psi/mysql_thread.h(100): error: identifier ""pthread_rwlock_t"" is undefined o  > >     rw_lock_t m_rwlock; o  > >     ^ o  > > o  > > ../../include/mysql/psi/mysql_thread.h(116): error: identifier ""pthread_rwlock_t"" is undefined o  > >     rw_pr_lock_t m_prlock; o  > >     ^ "	b830a9400a526588795ca07966e6c0f6d898c9b5
----------------------------
branches/zip: innodb_read_ahead_threshold: Add missing space to help string. 	d2b4c4f532d14f73479f6648dd2dacfb95c1ffa3
----------------------------
branches/zip: innodb_change_buffering: Correct the documentation. 	1005e06d8af80cc9d82faa3cb444222332cff270
----------------------------
Fixed the incorrectly merged rpl.rpl_show_slave_running test in mysql-trunk-merge (by copying the .result/.test files from mysql-pe). 	bbe6b90b52aa28a9fce6319e08fbe64cd87b8f25
----------------------------
BUG#51868 - crash with myisam_use_mmap and partitioned myisam tables Queries following TRUNCATE of partitioned MyISAM table may crash server if myisam_use_mmap is true. Internally this is MyISAM bug, but limited to partitioned tables, because MyISAM doesn't use ::delete_all_rows() method for TRUNCATE, but goes via table recreate instead. MyISAM didn't properly fall back to non-mmaped I/O after mmap() failure. Was not repeatable on linux before, likely because (quote from man mmap): SUSv3  specifies  that  mmap() should fail if length is 0. However, in kernels before 2.6.12, mmap() succeeded in this case: no mapping was created and the call returned addr. Since kernel 2.6.12, mmap() fails with the error EINVAL for this case. 	356d075418d2f1a5c8342b0de61945170a987b50
----------------------------
bug#51648 comments to rpl_show_slave_running test are added to ease merging 	ccdec568c1b1fc7b1bea109cdb96194bf2a54ded
----------------------------
fix grep -q in ndb_configure.m4 	9d8131cb65a78edf906ea3c80e18854bc5e823a5
----------------------------
backport 3654 from 6.0-codebase-bugfixing-gtest: At configure time: compile and link with gtest, to catch compiler/platform version problems up front. 	d4fd844f5b2bab4fca3f702ea8ff2dc830acc2ad
----------------------------
Bug #51648  DBUG_SYNC_POINT is not defined on all platforms and mtr cant pre-check that DBUG_SYNC_POINT has at least one strong limitation that it's not defined on all platforms. It has issues cooperating with @@debug. All in all its functionality is superseded by DEBUG_SYNC facility and there is no reason to maintain the old less flexible one. Fixed with adding debug_sync_set_action() function as a facility to set up a sync-action in the server sources code and re-writing existing simulations (found 3) to use it. Couple of tests have been reworked as well. The patch offers a pattern for setting sync-points in replication threads where the standard DEBUG_SYNC does not suffice to reach goals. 	30df18909cc2c8f657c265d0e8a0b3e5152e0990
----------------------------
branches/innodb+: fix slash in innodb_change_buffering_basic.diff 	8c7bb285a3bbd5669d0276758dd6f32602b49605
----------------------------
branches/innodb+: update test case innodb_change_buffering_basic. The valid values of innodb_change_buffering are 'inserts', 'deletes', 'changes', 'purges', 'all', and 'none', with default value 'all'. 	dbad70e100fcb856080d6fc2138451c89fd6efeb
----------------------------
"WL#3985: Subquery optimization: smart choice between semi-join and materialization - Better calculations for materialized table's cardinality. - Fix a number of problems in semi-join cost calculations - Better comments - Code cleanup * Add optimizer_flag(thd, ...) convience function, make the code to use it * Add @@optimizer_switch='no_firstmatch' flag * Fix a problem with using sj-materialization when subquery's select list element SCOL is covered by equality propagation and has preceding equal column PCOL which belongs to a table within the the semi-join nest: SJM-Scan process should unpack column value not to SCOL but rather to PCOL, as substitute_best_equal has made all conditions to refer to PCOL. * Cosmetic fixes in sub_select_sjm(). - More subquery tests Subquery optimization: DuplicateWeedout strategy: switch from late position() calls to early. - Before, there was JOIN_TAB::rowid_keep_flags, with two possible flags: KEEP_ROWID and CALL_POSITION. CALL_POSITION was needed because we needed to know whether to call join_tab->file->position() or the rowid is already there because it has been packed/unpacked by join buffering. - Now the ""owner"" join tab calls position() for every record, so at DuplicateWeedout point we don't need to ever call position() anymore. Hence CALL_POSITION is gone and ""keep_rowid_flags & KEEP_ROWID"" is replaced with keep_current_rowid "	64d96b77643e51fe6bb80ca2c18e9eb6ec2d24bc
----------------------------
Additional fix for DEBUG_SYNC which failed for some rpl-tests, due to DBUG_ASSERT. (added in bug#50561) 	b3f162ae337bc821e0bef95e03d8bd304794ce9d
----------------------------
"branches/innodb+: Merge revisions 6293:6797 from branches/plugin-1.1, skipping the following revisions that were merges from branches/zip: r6543 r6775 ------------------------------------------------------------------------ r6749 | vasil | 2010-02-20 18:45:41 +0200 (Sat, 20 Feb 2010) | 5 lines Changed paths: M /branches/embedded-1.0/btr/btr0btr.c M /branches/embedded-1.0/btr/btr0cur.c M /branches/embedded-1.0/btr/btr0pcur.c M /branches/embedded-1.0/buf/buf0buf.c M /branches/embedded-1.0/buf/buf0flu.c M /branches/embedded-1.0/buf/buf0lru.c M /branches/embedded-1.0/dict/dict0boot.c M /branches/embedded-1.0/dict/dict0crea.c M /branches/embedded-1.0/dict/dict0dict.c M /branches/embedded-1.0/dict/dict0load.c M /branches/embedded-1.0/fil/fil0fil.c M /branches/embedded-1.0/fsp/fsp0fsp.c M /branches/embedded-1.0/ibuf/ibuf0ibuf.c M /branches/embedded-1.0/include/btr0btr.h M /branches/embedded-1.0/include/btr0cur.h M /branches/embedded-1.0/include/btr0pcur.h M /branches/embedded-1.0/include/btr0pcur.ic M /branches/embedded-1.0/include/buf0buf.h M /branches/embedded-1.0/include/buf0buf.ic M /branches/embedded-1.0/include/dict0boot.h M /branches/embedded-1.0/include/fil0fil.h M /branches/embedded-1.0/include/lock0lock.h M /branches/embedded-1.0/include/log0log.h M /branches/embedded-1.0/include/log0log.ic M /branches/embedded-1.0/include/log0recv.h M /branches/embedded-1.0/include/mem0dbg.h M /branches/embedded-1.0/include/mem0dbg.ic M /branches/embedded-1.0/include/mem0mem.h M /branches/embedded-1.0/include/mem0mem.ic M /branches/embedded-1.0/include/os0file.h M /branches/embedded-1.0/include/os0sync.h M /branches/embedded-1.0/include/os0sync.ic M /branches/embedded-1.0/include/os0thread.h M /branches/embedded-1.0/include/que0que.h M /branches/embedded-1.0/include/que0que.ic M /branches/embedded-1.0/include/row0merge.h M /branches/embedded-1.0/include/row0prebuilt.h M /branches/embedded-1.0/include/srv0srv.h M /branches/embedded-1.0/include/sync0sync.h M /branches/embedded-1.0/include/trx0rseg.h M /branches/embedded-1.0/include/trx0sys.h M /branches/embedded-1.0/include/trx0trx.h M /branches/embedded-1.0/include/trx0types.h M /branches/embedded-1.0/include/trx0undo.h M /branches/embedded-1.0/include/trx0xa.h M /branches/embedded-1.0/include/univ.i M /branches/embedded-1.0/include/ut0vec.h M /branches/embedded-1.0/include/ut0vec.ic M /branches/embedded-1.0/lock/lock0lock.c M /branches/embedded-1.0/log/log0log.c M /branches/embedded-1.0/log/log0recv.c M /branches/embedded-1.0/mem/mem0mem.c M /branches/embedded-1.0/os/os0file.c M /branches/embedded-1.0/os/os0thread.c M /branches/embedded-1.0/page/page0page.c M /branches/embedded-1.0/rem/rem0rec.c M /branches/embedded-1.0/row/row0ins.c M /branches/embedded-1.0/row/row0merge.c M /branches/embedded-1.0/row/row0prebuilt.c M /branches/embedded-1.0/row/row0sel.c M /branches/embedded-1.0/row/row0umod.c M /branches/embedded-1.0/row/row0undo.c M /branches/embedded-1.0/row/row0upd.c M /branches/embedded-1.0/srv/srv0srv.c M /branches/embedded-1.0/srv/srv0start.c M /branches/embedded-1.0/sync/sync0sync.c M /branches/embedded-1.0/trx/trx0sys.c M /branches/embedded-1.0/trx/trx0trx.c M /branches/embedded-1.0/trx/trx0undo.c M /branches/embedded-1.0/ut/ut0mem.c M /branches/innodb+/btr/btr0btr.c M /branches/innodb+/btr/btr0cur.c M /branches/innodb+/btr/btr0pcur.c M /branches/innodb+/buf/buf0buf.c M /branches/innodb+/buf/buf0lru.c M /branches/innodb+/dict/dict0crea.c M /branches/innodb+/dict/dict0dict.c M /branches/innodb+/dict/dict0load.c M /branches/innodb+/handler/ha_innodb.cc M /branches/innodb+/handler/ha_innodb.h M /branches/innodb+/handler/handler0alter.cc M /branches/innodb+/include/btr0btr.h M /branches/innodb+/include/btr0cur.h M /branches/innodb+/include/btr0pcur.h M /branches/innodb+/include/btr0pcur.ic M /branches/innodb+/include/buf0buf.h M /branches/innodb+/include/log0log.h M /branches/innodb+/include/mem0dbg.h M /branches/innodb+/include/mem0dbg.ic M /branches/innodb+/include/os0file.h M /branches/innodb+/include/row0mysql.h M /branches/innodb+/include/srv0srv.h M /branches/innodb+/include/sync0sync.h M /branches/innodb+/include/trx0trx.h M /branches/innodb+/lock/lock0lock.c M /branches/innodb+/log/log0log.c M /branches/innodb+/log/log0recv.c M /branches/innodb+/mem/mem0dbg.c M /branches/innodb+/os/os0file.c M /branches/innodb+/page/page0page.c M /branches/innodb+/row/row0ins.c M /branches/innodb+/row/row0mysql.c M /branches/innodb+/row/row0sel.c M /branches/innodb+/srv/srv0srv.c M /branches/innodb+/srv/srv0start.c M /branches/innodb+/sync/sync0sync.c M /branches/innodb+_metrics_table/btr/btr0btr.c M /branches/innodb+_metrics_table/buf/buf0buf.c M /branches/innodb+_metrics_table/buf/buf0flu.c M /branches/innodb+_metrics_table/dict/dict0crea.c M /branches/innodb+_metrics_table/dict/dict0dict.c M /branches/innodb+_metrics_table/dict/dict0load.c M /branches/innodb+_metrics_table/handler/ha_innodb.cc M /branches/innodb+_metrics_table/handler/ha_innodb.h M /branches/innodb+_metrics_table/handler/handler0alter.cc M /branches/innodb+_metrics_table/handler/i_s.cc M /branches/innodb+_metrics_table/handler/i_s.h M /branches/innodb+_metrics_table/include/mem0dbg.h M /branches/innodb+_metrics_table/include/mem0dbg.ic M /branches/innodb+_metrics_table/include/srv0mon.h M /branches/innodb+_metrics_table/include/srv0mon.ic M /branches/innodb+_metrics_table/include/srv0srv.h M /branches/innodb+_metrics_table/lock/lock0lock.c M /branches/innodb+_metrics_table/log/log0log.c M /branches/innodb+_metrics_table/mem/mem0dbg.c M /branches/innodb+_metrics_table/os/os0file.c M /branches/innodb+_metrics_table/page/page0zip.c M /branches/innodb+_metrics_table/row/row0mysql.c M /branches/innodb+_metrics_table/row/row0purge.c M /branches/innodb+_metrics_table/row/row0sel.c M /branches/innodb+_metrics_table/srv/srv0mon.c M /branches/innodb+_metrics_table/srv/srv0srv.c M /branches/innodb+_metrics_table/sync/sync0sync.c M /branches/innodb+_metrics_table/trx/trx0roll.c M /branches/innodb+_metrics_table/trx/trx0trx.c M /branches/innodb+_persistent_stats/btr/btr0btr.c M /branches/innodb+_persistent_stats/buf/buf0buf.c M /branches/innodb+_persistent_stats/data/data0type.c M /branches/innodb+_persistent_stats/dict/dict0boot.c M /branches/innodb+_persistent_stats/dict/dict0crea.c M /branches/innodb+_persistent_stats/dict/dict0dict.c M /branches/innodb+_persistent_stats/dict/dict0load.c M /branches/innodb+_persistent_stats/dict/dict0mem.c M /branches/innodb+_persistent_stats/fil/fil0fil.c M /branches/innodb+_persistent_stats/fsp/fsp0fsp.c M /branches/innodb+_persistent_stats/handler/ha_innodb.cc M /branches/innodb+_persistent_stats/handler/ha_innodb.h M /branches/innodb+_persistent_stats/handler/handler0alter.cc M /branches/innodb+_persistent_stats/ibuf/ibuf0ibuf.c M /branches/innodb+_persistent_stats/include/btr0pcur.h M /branches/innodb+_persistent_stats/include/btr0pcur.ic M /branches/innodb+_persistent_stats/include/db0err.h M /branches/innodb+_persistent_stats/include/dict0dict.h M /branches/innodb+_persistent_stats/include/dict0mem.h M /branches/innodb+_persistent_stats/include/ha_prototypes.h M /branches/innodb+_persistent_stats/include/lock0lock.h M /branches/innodb+_persistent_stats/include/log0log.h M /branches/innodb+_persistent_stats/include/log0recv.h M /branches/innodb+_persistent_stats/include/mem0dbg.h M /branches/innodb+_persistent_stats/include/mem0dbg.ic M /branches/innodb+_persistent_stats/include/os0file.h M /branches/innodb+_persistent_stats/include/pars0pars.h M /branches/innodb+_persistent_stats/include/srv0srv.h M /branches/innodb+_persistent_stats/include/sync0sync.h M /branches/innodb+_persistent_stats/include/trx0sys.h M /branches/innodb+_persistent_stats/include/trx0trx.h M /branches/innodb+_persistent_stats/include/ut0lst.h M /branches/innodb+_persistent_stats/include/ut0ut.h M /branches/innodb+_persistent_stats/lock/lock0lock.c M /branches/innodb+_persistent_stats/log/log0log.c M /branches/innodb+_persistent_stats/log/log0recv.c M /branches/innodb+_persistent_stats/mem/mem0dbg.c M /branches/innodb+_persistent_stats/os/os0file.c M /branches/innodb+_persistent_stats/page/page0page.c M /branches/innodb+_persistent_stats/pars/pars0pars.c M /branches/innodb+_persistent_stats/row/row0merge.c M /branches/innodb+_persistent_stats/row/row0mysql.c M /branches/innodb+_persistent_stats/row/row0sel.c M /branches/innodb+_persistent_stats/row/row0umod.c M /branches/innodb+_persistent_stats/row/row0upd.c M /branches/innodb+_persistent_stats/srv/srv0srv.c M /branches/innodb+_persistent_stats/srv/srv0start.c M /branches/innodb+_persistent_stats/sync/sync0sync.c M /branches/innodb+_persistent_stats/trx/trx0i_s.c M /branches/innodb+_persistent_stats/trx/trx0sys.c M /branches/innodb+_persistent_stats/trx/trx0trx.c M /branches/innodb+_persistent_stats/ut/ut0ut.c M /branches/innofts+/handler/ha_innodb.cc M /branches/innofts+/handler/i_s.cc M /branches/innofts+/handler/i_s.h M /branches/innofts+/include/fut0fut.h M /branches/performance_schema/btr/btr0sea.c M /branches/performance_schema/buf/buf0buf.c M /branches/performance_schema/dict/dict0dict.c M /branches/performance_schema/fil/fil0fil.c M /branches/performance_schema/handler/ha_innodb.cc M /branches/performance_schema/include/srv0srv.h M /branches/performance_schema/include/sync0rw.h M /branches/performance_schema/include/sync0rw.ic M /branches/performance_schema/include/sync0sync.h M /branches/performance_schema/include/sync0sync.ic M /branches/performance_schema/include/sync0types.h M /branches/performance_schema/log/log0log.c M /branches/performance_schema/srv/srv0srv.c M /branches/performance_schema/sync/sync0rw.c M /branches/performance_schema/trx/trx0i_s.c M /branches/performance_schema/trx/trx0purge.c M /branches/plugin-2.0/buf/buf0buf.c M /branches/plugin-2.0/buf/buf0lru.c M /branches/plugin-2.0/dict/dict0boot.c M /branches/plugin-2.0/dict/dict0crea.c M /branches/plugin-2.0/dict/dict0dict.c M /branches/plugin-2.0/dict/dict0load.c M /branches/plugin-2.0/dict/dict0mem.c M /branches/plugin-2.0/fil/fil0fil.c M /branches/plugin-2.0/fsp/fsp0fsp.c M /branches/plugin-2.0/handler/ha_innodb.cc M /branches/plugin-2.0/handler/ha_innodb.h M /branches/plugin-2.0/handler/handler0alter.cc M /branches/plugin-2.0/ibuf/ibuf0ibuf.c M /branches/plugin-2.0/include/dict0mem.h M /branches/plugin-2.0/include/ha_prototypes.h M /branches/plugin-2.0/include/lock0lock.h M /branches/plugin-2.0/include/log0log.h M /branches/plugin-2.0/include/log0recv.h M /branches/plugin-2.0/include/mem0dbg.h M /branches/plugin-2.0/include/mem0dbg.ic M /branches/plugin-2.0/include/os0file.h M /branches/plugin-2.0/include/row0mysql.h M /branches/plugin-2.0/include/srv0srv.h M /branches/plugin-2.0/include/sync0sync.h M /branches/plugin-2.0/include/trx0sys.h M /branches/plugin-2.0/include/trx0trx.h M /branches/plugin-2.0/lock/lock0lock.c M /branches/plugin-2.0/log/log0log.c M /branches/plugin-2.0/log/log0recv.c M /branches/plugin-2.0/mem/mem0dbg.c M /branches/plugin-2.0/os/os0file.c M /branches/plugin-2.0/page/page0page.c M /branches/plugin-2.0/row/row0merge.c M /branches/plugin-2.0/row/row0mysql.c M /branches/plugin-2.0/row/row0sel.c M /branches/plugin-2.0/row/row0umod.c M /branches/plugin-2.0/row/row0upd.c M /branches/plugin-2.0/srv/srv0srv.c M /branches/plugin-2.0/srv/srv0start.c M /branches/plugin-2.0/sync/sync0sync.c M /branches/plugin-2.0/trx/trx0i_s.c M /branches/plugin-2.0/trx/trx0sys.c M /branches/plugin-2.0/trx/trx0trx.c M /branches/zip/btr/btr0btr.c M /branches/zip/btr/btr0cur.c M /branches/zip/btr/btr0pcur.c M /branches/zip/buf/buf0buf.c M /branches/zip/buf/buf0lru.c M /branches/zip/dict/dict0boot.c M /branches/zip/dict/dict0crea.c M /branches/zip/dict/dict0dict.c M /branches/zip/dict/dict0load.c M /branches/zip/fsp/fsp0fsp.c M /branches/zip/handler/ha_innodb.cc M /branches/zip/handler/ha_innodb.h M /branches/zip/handler/handler0alter.cc M /branches/zip/include/btr0btr.h M /branches/zip/include/btr0cur.h M /branches/zip/include/btr0pcur.h M /branches/zip/include/btr0pcur.ic M /branches/zip/include/buf0buf.h M /branches/zip/include/dict0boot.h M /branches/zip/include/fil0fil.h M /branches/zip/include/log0log.h M /branches/zip/include/log0log.ic M /branches/zip/include/log0recv.h M /branches/zip/include/mem0dbg.h M /branches/zip/include/mem0dbg.ic M /branches/zip/include/mem0mem.h M /branches/zip/include/mem0mem.ic M /branches/zip/include/os0file.h M /branches/zip/include/que0que.h M /branches/zip/include/que0que.ic M /branches/zip/include/row0mysql.h M /branches/zip/include/srv0srv.h M /branches/zip/include/sync0sync.h M /branches/zip/include/trx0rseg.h M /branches/zip/include/trx0trx.h M /branches/zip/include/trx0types.h M /branches/zip/include/univ.i M /branches/zip/lock/lock0lock.c M /branches/zip/log/log0log.c M /branches/zip/log/log0recv.c M /branches/zip/mem/mem0dbg.c M /branches/zip/mem/mem0mem.c M /branches/zip/os/os0file.c M /branches/zip/page/page0page.c M /branches/zip/rem/rem0rec.c M /branches/zip/row/row0ins.c M /branches/zip/row/row0merge.c M /branches/zip/row/row0mysql.c M /branches/zip/row/row0sel.c M /branches/zip/row/row0umod.c M /branches/zip/srv/srv0srv.c M /branches/zip/srv/srv0start.c M /branches/zip/sync/sync0sync.c M /branches/zip/trx/trx0rseg.c M /branches/zip/trx/trx0trx.c Non-functional change: update copyright year to 2010 of the files that have been modified after 2010-01-01 according to svn. for f in $(svn log -v -r{2010-01-01}:HEAD |grep ""^   M "" |cut -b 16- |sort -u) ; do sed -i """" -E 's/(Copyright \(c\) [0-9]{4},) [0-9]{4}, (.*Innobase Oy.+All Rights Reserved)/\1 2010, \2/' $f ; done ------------------------------------------------------------------------ r6795 | calvin | 2010-03-11 06:29:35 +0200 (Thu, 11 Mar 2010) | 4 lines Changed paths: M /branches/plugin-2.0/CMakeLists.txt branches/plugin-2.0: take the CMake file from MySQL. The CMake files are significantly changed in MySQL 5.5 to have cross-platform support. ------------------------------------------------------------------------ r6796 | calvin | 2010-03-11 06:38:24 +0200 (Thu, 11 Mar 2010) | 4 lines Changed paths: A /branches/plugin-1.1 (from /branches/plugin-2.0:6795) D /branches/plugin-2.0 branches/plugin-1.1: Rename the branch from plugin-2.0 to plugin-1.1, to be used with MySQL 5.5. ------------------------------------------------------------------------ r6797 | calvin | 2010-03-11 06:45:29 +0200 (Thu, 11 Mar 2010) | 4 lines Changed paths: M /branches/plugin-1.1/include/univ.i branches/plugin-1.1: change the version number to 1.1.0. ------------------------------------------------------------------------ "	3c5065929d10d479cbf1a86bc1876046f091916f
----------------------------
"Bug #51398 Test ""rpl_heartbeat_basic"" fails ""while waiting for slave_received_heartbeats"" Non-determinism of the test was caused by lack of setting a proper value to hb period, actually fixed by BUG@50767. These fixes aim at possible non-determinism in comparison of received hb events by master and slave in the circular part of the test. Even though the HB periods ratio was choosen to be as high as 10, it's still incorrect to compare number of hb-events basing only a relation between their periods. Yet another issue is relatively short 60 secs timeout of wait_for_status_var.inc makes valgrind runs to fail. Fixed with deploying wait_for_slave_io_to_start afront of calling wait_for_status_var. The test is made runnable only with MIXED binlog-format as it has close to 1 min total exec time and there is nothing format specific in it. "	cf206a57f69196887873e61ad9051ce9663c6994
----------------------------
ndb - remove unecessary EmulatorData argument to ThreadConfig::init, the EmulatorData instance is global and can be accessed directly. 	2c203d289a85eed96529049795be8527a4a1e0ef
----------------------------
"WL#4523  Run ndbd as Windows Service - Make the angel connect to ndb_mgmd, fetch config and allocate nodeid. - This removes the use of any global data  in the angel, for example ""theConfig"" - Change Configuration::fetch_configuration for ndbd to not allocate a nodeid if --allocated-nodeid is set. "	5b4386bd6d6c31dc0586f93bca75bbcad2ca7980
----------------------------
Bug #51160 Deadlock around SET GLOBAL EVENT_SCHEDULER = ON|OFF This deadlock could occour betweeen one connection executing SET GLOBAL EVENT_SCHEDULER= ON and another executing SET GLOBAL EVENT_SCHEDULER= OFF. The bug was introduced by WL#4738. The first connection would hold LOCK_event_metadata (protecting the global variable) while trying to lock LOCK_global_system_variables starting the event scheduler thread (in THD:init()). The second connection would hold LOCK_global_system_variables while trying to get LOCK_event_scheduler after stopping the event scheduler inside event_scheduler_update(). This patch fixes the problem by not using LOCK_event_metadata to protect the event_scheduler variable. It is still protected using LOCK_global_system_variables. This fixes the deadlock as it removes one of the two mutexes used to produce it. However, this patch opens up the possibility that the event_scheduler variable and the real event_scheduler state can become out of sync (e.g. variable = OFF, but scheduler running). But this can only happen under very unlikely conditions - two concurrent SET GLOBAL statments, with one thread interrupted at the exact wrong moment. This is preferable to having the possibility of a deadlock. This patch also fixes a bug where it was possible to exit create_event() without releasing LOCK_event_metadata if running out of memory during its exection. No test case added since a repeatable test case would have required excessive use of new sync points. Instead we rely on the fact that this bug was easily reproduceable using RGQ tests. 	dd69b281f0ed7210a2b78f5c187c3b31138645eb
----------------------------
ndb - remove unused forward declaration of IPCConfig 	4acd186b87cd35e25cfb56b67e43cdc4ab56f4a2
----------------------------
"WL#4523  Run ndbd as Windows Service - Make the angel pass the --nostart option it may receieve when ndbd terminates as an ""arg"" to ndbd - NOTE! Also this patch need to Configuration to be created _after_ to work "	20adea39e701c9eb6222df4a1a66973ed97f1a50
----------------------------
"WL#4523  Run ndbd as Windows Service - Make the angel pass the --initial option it may receieve when ndbd terminates as an ""--arg"" to ndbd - Remove the 'setInitialStart' functions from Configuration - Move 'getInitialStart' impl. into class definition - NOTE! ""RESTART -i"" does not work until Configuration is created _after_ fork(i.e the angel_config_and_nodeid) patch "	91ba8e11ac49339ad0d9eb5823989db85a889787
----------------------------
WL#4523  Run ndbd as Windows Service - Remove _daemonMode from Configuration, thus it will not be magically printed in hex in error log on crash. 	07db99b5572d6d3c2f6426b6087aee3dc3a47c63
----------------------------
"ndb - add feature to pass-though configure options using BUILD/compile-ndb-autotest (and friends) using ""--"" "	182219e9386bbfc2c79ee5ffc218da4e772199e5
----------------------------
WL#4523  Run ndbd as Windows Service - Extract the hosts to report to directly from ndb_mgm_configuration passed as parameter to function - only angel uses reportShutDown function now - Remove the m_mgmds vector from the global configuration previsouly used by reportShutdown - Remove friend declarations of reportShutdown - Make reportShutdown static 	65ba92869ce96df9a386824bf8001cc0a3f58c6f
----------------------------
"Bug #51938  	plugin_dir gets bad default value When building the script directory using a CMake-based build, both the variables in config.h.cmake (including PLUGINDIR) and the variables in CMakeList.txt (which includes pkgplugindir). However, for autotools-based builds, only pkgplugindir is substituted, which means that the plugin-path is not substituted. This patch solves the problem by using pkgplugindir, which works on both CMake-based and autotools-based builds, instead of PLUGINDIR. "	d21fa1426ad3cfdf9d768abd2e13e6125fb941c2
----------------------------
BUG#47444 - --myisam_repair_threads>1can result in all index cardinalities=1 Parallel repair didn't poroperly update index cardinality in certain cases. When myisam_sort_buffer_size is not enough to store all keys, index cardinality was updated before index was actually written, when no index statistic is available. 	4762eb64ecc42a4f7499217ba471f11a7e366436
----------------------------
use configure's HAVE_STDINT in jtie 	135255962df8370965a5e56442c3d398fe1fd4e2
----------------------------
"branches/innodb+: Merge revisions 6773:6801 from branches/zip: ------------------------------------------------------------------------ r6777 | marko | 2010-03-04 13:01:25 +0200 (Thu, 04 Mar 2010) | 2 lines Changed paths: M /branches/zip/trx/trx0rec.c branches/zip: trx_undo_update_rec_get_update(): Silence a bogus GCC warning about a possibly uninitialized variable. ------------------------------------------------------------------------ r6779 | marko | 2010-03-08 14:35:42 +0200 (Mon, 08 Mar 2010) | 6 lines Changed paths: M /branches/zip/ChangeLog M /branches/zip/fil/fil0fil.c branches/zip: Fix IMPORT TABLESPACE of compressed tables.  Previously, a wrong parameter was passed to buf_flush_init_for_writing(). fil_reset_too_high_lsns(): Set up page_zip and use it if needed. rb://264, Issue #352 ------------------------------------------------------------------------ r6781 | marko | 2010-03-09 09:41:08 +0200 (Tue, 09 Mar 2010) | 4 lines Changed paths: M /branches/zip/ChangeLog M /branches/zip/handler/ha_innodb.cc branches/zip: Make SHOW ENGINE INNODB MUTEX display SUM(os_waits) for block mutexes and blocks. Designed by Michael and Marko. rb://188, Issue #358 ------------------------------------------------------------------------ r6782 | marko | 2010-03-09 14:09:26 +0200 (Tue, 09 Mar 2010) | 1 line Changed paths: M /branches/zip/fil/fil0fil.c branches/zip: fil0fil.c: Update comments on table->flags as of r6252. ------------------------------------------------------------------------ r6786 | vasil | 2010-03-10 09:16:50 +0200 (Wed, 10 Mar 2010) | 4 lines Changed paths: M /branches/zip/mysql-test/innodb-consistent.test branches/zip: Fix typo in comment ------------------------------------------------------------------------ r6787 | marko | 2010-03-10 10:35:06 +0200 (Wed, 10 Mar 2010) | 10 lines Changed paths: M /branches/zip/ChangeLog M /branches/zip/log/log0recv.c branches/zip: recv_parse_log_rec(): Remove a bogus assertion about page_no. TODO: We might also consider removing recv_max_parsed_page_no, because it does not make much sense with *.ibd files. recv_report_corrupt_log(), recv_scan_log_recs(): Abort when a corrupted log record has been found, unless innodb_force_recovery has been set. This fixes Issue #464. rb://265 approved by Heikki Tuuri ------------------------------------------------------------------------ r6789 | jyang | 2010-03-10 11:18:18 +0200 (Wed, 10 Mar 2010) | 10 lines Changed paths: M /branches/zip/handler/ha_innodb.cc M /branches/zip/handler/handler0alter.cc A /branches/zip/mysql-test/innodb_bug51378.result A /branches/zip/mysql-test/innodb_bug51378.test branches/zip: If a unique index is on a column prefix, such unique index cannot be upgrade to primary index even if there is no primary index already defined. Also fix possible corruption when initialize ""ref_length"" value in case there is a mismatch between MySQL and InnoDB primary key. Fix bug #51378: ""Init 'ref_length'  to correct value, in case an out of bound MySQL primary_key"". rb://262 approved by Marko. ------------------------------------------------------------------------ r6790 | jyang | 2010-03-10 13:09:41 +0200 (Wed, 10 Mar 2010) | 7 lines Changed paths: M /branches/zip/handler/ha_innodb.cc branches/zip: Fix bug #51356: ""many valgrind errors in error messages with concurrent ddl"". Null terminate the name string returned from innobase_convert_identifier() call when reporting DB_DUPLICATE_KEY error in create_table_def(). rb://266 approved by Marko ------------------------------------------------------------------------ r6791 | marko | 2010-03-10 13:39:06 +0200 (Wed, 10 Mar 2010) | 1 line Changed paths: M /branches/zip/ChangeLog branches/zip: Add ChangeLog entries for r6789, r6790. ------------------------------------------------------------------------ r6792 | marko | 2010-03-10 13:56:41 +0200 (Wed, 10 Mar 2010) | 1 line Changed paths: A /branches/zip/mysql-test/innodb_bug38231.result (from /branches/5.1/mysql-test/innodb_bug38231.result:6791) A /branches/zip/mysql-test/innodb_bug38231.test (from /branches/5.1/mysql-test/innodb_bug38231.test:6791) A /branches/zip/mysql-test/innodb_bug39438-master.opt (from /branches/5.1/mysql-test/innodb_bug39438-master.opt:6791) A /branches/zip/mysql-test/innodb_bug39438.result (from /branches/5.1/mysql-test/innodb_bug39438.result:6791) A /branches/zip/mysql-test/innodb_bug39438.test (from /branches/5.1/mysql-test/innodb_bug39438.test:6791) branches/zip: Copy tests from branches/5.1 that were lost in some merge. ------------------------------------------------------------------------ r6793 | marko | 2010-03-10 14:02:19 +0200 (Wed, 10 Mar 2010) | 60 lines Changed paths: M /branches/zip/ChangeLog M /branches/zip/handler/ha_innodb.cc M /branches/zip/mysql-test/innodb_bug21704.result A /branches/zip/mysql-test/innodb_bug47621.result (from /branches/5.1/mysql-test/innodb_bug47621.result:6788) A /branches/zip/mysql-test/innodb_bug47621.test (from /branches/5.1/mysql-test/innodb_bug47621.test:6788) M /branches/zip/plug.in M /branches/zip/trx/trx0sys.c branches/zip: Merge revisions 6669:6788 from branches/5.1: ------------------------------------------------------------------------ r6774 | calvin | 2010-03-03 23:56:10 +0200 (Wed, 03 Mar 2010) | 2 lines Changed paths: M /branches/5.1/trx/trx0sys.c branches/5.1: fix bug#51653: outdated reference to set-variable Non functional change. ------------------------------------------------------------------------ r6780 | vasil | 2010-03-08 19:13:20 +0200 (Mon, 08 Mar 2010) | 4 lines Changed paths: M /branches/5.1/plug.in branches/5.1: Whitespace fixup. ------------------------------------------------------------------------ r6783 | jyang | 2010-03-09 17:54:14 +0200 (Tue, 09 Mar 2010) | 9 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/mysql-test/innodb_bug21704.result A /branches/5.1/mysql-test/innodb_bug47621.result A /branches/5.1/mysql-test/innodb_bug47621.test branches/5.1: Fix bug #47621 ""MySQL and InnoDB data dictionaries will become out of sync when renaming columns"". MySQL does not provide new column name information to storage engine to update the system table. To avoid column name mismatch, we shall just request a table copy for now. rb://246 approved by Marko. ------------------------------------------------------------------------ r6785 | vasil | 2010-03-10 09:04:38 +0200 (Wed, 10 Mar 2010) | 11 lines Changed paths: M /branches/5.1/mysql-test/innodb_bug38231.test branches/5.1: Add the missing --reap statements in innodb_bug38231.test. Probably MySQL enforced the presence of those recently and the test started failing like: main.innodb_bug38231                     [ fail ] Test ended at 2010-03-10 08:48:32 CURRENT_TEST: main.innodb_bug38231 mysqltest: At line 49: Cannot run query on connection between send and reap ------------------------------------------------------------------------ r6788 | vasil | 2010-03-10 10:53:21 +0200 (Wed, 10 Mar 2010) | 8 lines Changed paths: M /branches/5.1/mysql-test/innodb_bug38231.test branches/5.1: In innodb_bug38231.test: replace the fragile sleep 0.2 that depends on timing with a more robust condition which waits for the TRUNCATE and LOCK commands to appear in information_schema.processlist. This could also break if there are other sessions executing the same SQL commands, but there are none during the execution of the mysql test. ------------------------------------------------------------------------ ------------------------------------------------------------------------ r6798 | marko | 2010-03-11 09:53:01 +0200 (Thu, 11 Mar 2010) | 14 lines Changed paths: M /branches/zip/ChangeLog M /branches/zip/include/buf0buf.h M /branches/zip/include/buf0buf.ic branches/zip: Fix and clarify the latching of some buf_block_t members. buf_block_t::check_index_page_at_flush: Note that this field is not protected by any mutex. Make it a separate field, not a bitfield that could share the machine word with other fields. buf_block_t::lock_hash_val: Note that this field is protected by buf_block_t::lock (or during block creation, by buf_pool_mutex and buf_block_t::mutex). buf_block_get_lock_hash_val(): Assert that block->lock is held by the current thread. Issue #465, rb://267 approved by Inaam Rana ------------------------------------------------------------------------ r6799 | jyang | 2010-03-11 09:59:42 +0200 (Thu, 11 Mar 2010) | 5 lines Changed paths: M /branches/zip/mysql-test/innodb_bug44571.result M /branches/zip/mysql-test/innodb_bug44571.test branches/zip: Once change in bug #47621 merges into zip branch, zip only test innodb_bug44571 needs to be updated to reflect the column name change would be successful be done in InnoDB as well. ------------------------------------------------------------------------ r6800 | marko | 2010-03-11 12:02:57 +0200 (Thu, 11 Mar 2010) | 1 line Changed paths: M /branches/zip/btr/btr0pcur.c M /branches/zip/buf/buf0buf.c M /branches/zip/include/mtr0mtr.ic branches/zip: Add ut_ad(mtr->state == MTR_ACTIVE) to various places. ------------------------------------------------------------------------ r6801 | marko | 2010-03-11 13:34:28 +0200 (Thu, 11 Mar 2010) | 2 lines Changed paths: M /branches/zip/include/mtr0mtr.ic branches/zip: mtr_memo_contains(): Relax the assertion of r6800, allowing mtr->state == MTR_COMMITTING. ------------------------------------------------------------------------ "	8a0537c01322083db6b264368a341d9ff49d8529
----------------------------
Fix for BUG#51716 and BUG#51787: test case improvements. Split rpl_row_charset into: - rpl_row_utf16. - rpl_row_utf32. This way these tests can run independently if server supports either one of the charsets but not both. Cleaned up rpl_row_utf32 which had a spurious instruction: -- let $reset_slave_type_conversions= 0 	9b5a6748e06a2fdb8a39b20ef65ef3afed26e6f0
----------------------------
Bug#50545: Single table UPDATE IGNORE crashes on join view in sql_safe_updates mode. This bug was unexpectedly fixed along with bug number 49534. This patch contains only the test case. 	2cc8c47b936207c966dd78a127bf5f3647777623
----------------------------
An addition to fix for BUG#51342 - more xid crashing Restore autocommit variable by supplying explicit value. 	774cba95055cfa33a5f359dcb16a6558619deb1a
----------------------------
Bug#33669: Transactional temporary tables do not work under --read-only The problem was that in read only mode (read_only enabled), the server would mistakenly deny data modification attempts for temporary tables which belong to a transactional storage engine (eg. InnoDB). The solution is to allow transactional temporary tables to be modified under read only mode. As a whole, the read only mode does not apply to any kind of temporary table. 	30cb1779ed3c2666bf72ab6d068025cf06963ff3
----------------------------
"BUG#50442: MTR check for rpl_sync fails The test case crashes and recovers the server twice, and while recovering InnoDB sets innodb_file_format_check to different format on second restart. This makes the test case clean up check to fail. We fix this by deploying the option ""--innodb_file_format_check='ON'"" in slave startup configuration. This makes the innodb_file_format_check to not change on secod restart. "	fccd3c1a1fb233e81b288c13c14fd012e3ac95a2
----------------------------
BUG#51342 - more xid crashing SET autocommit=1 while XA transaction is active may cause various side effects, including memory corruption and server crash. The problem is that SET autocommit=1 and further queries attempt to commit local transaction, whereas XA transaction is still active. As local and XA transactions are mutually exclusive, this patch forbids enabling autocommit mode while XA transaction is active. 	8478e707d94bc9c8dd25024d6ca3ec4731fbbe66
----------------------------
branches/zip: recv_parse_log_rec(): Remove a bogus assertion about page_no. TODO: We might also consider removing recv_max_parsed_page_no, because it does not make much sense with *.ibd files. recv_report_corrupt_log(), recv_scan_log_recs(): Abort when a corrupted log record has been found, unless innodb_force_recovery has been set. This fixes Issue #464. rb://265 approved by Heikki Tuuri 	6c7ddbe2ed7df7ee8cf2fdd5b0143d3944edb3cb
----------------------------
"Bug #51861  	my_rename on windows: check that ""from"" exists . use MoveFileEx() . i'd like to write a test case but unsure how it's done - what configure options - using tap? "	915a56fe204e57fedc50325a63d78ff7c72d8bc0
----------------------------
"Bug#51607: Automake distcheck target broken. Reason for the error was that ./configure wrapper script was  not safe for VPATH builds used by ""make distcheck"", specifically it expected configure.am to be in the current directory. Fix changes configure wrapper to resolve script names relative to configure script path. Also, use $top_srcdir/configure.am instead of configure.am in dist-hook to be more VPATH friendly. "	cb0d6611a39a78dae3fc7badc0f46b18653ce418
----------------------------
Bug #35250: readline check breaks when doing vpath build MySQL uses two source layouts when building : the bzr layout and the source package layout. The previous fix for bug 35250 contained 1 change that is valid for both modes and a number of changes that are valid only for the bzr source layout. The important thing was to fix the source package layout. And for this the change in configure.in was sufficient. It's not trivial (and not requested by this bug) to support VPATH builds from the bzr trees. This is why the other changes are reverted and the change to fix the VPATH build for source distributions is left intact. 	a774c83c2f6936dbafbe4e1149a2305bb691f040
----------------------------
Bug#51832 mysql_upgrade failing on performance_schema tables in mysql-trunk Before this fix, client tools (mysql_upgrade, mysqlcheck, mysqldump) would try to process performance schema tables, leading to failures. The fix is to align FIRST_PERFORMANCE_SCHEMA_VERSION to 5.5.3, which is the version number of mysql-trunk where the performance schema is first available. 	35f5e9c78c25267c301212cfef757cfc933f9541
----------------------------
Bug#51856 malloced memory freed by safemalloc in debug compiled MySQL Cluster - Rename my_socket.cc to my_socket.c so that mysys only consists of C files again and thus uses CFLAGS_DEBUG as expected 	5a0e9beba354c2ed9d0de5037d24dc112ac86dea
----------------------------
Bug #41057: mysql_update fails FATAL ERROR: Failed to create temporary file for defaults mysql_upgrade was passing an non-initialized non-null tmpdir to create_temp_file() if no --tmpdir was specified. This prevents create_temp_file() from taking the system temporary file path and as a result mysql_upgrade was trying to open a file in a directory that it may not have write access to. Fixed by making sure mysql_upgrade will pass a zero length temp dir string to create_temp_file() if no --tmpdir is specified. 	25a271a0f84e1ea32c46da090c2d0bde77fadbbc
----------------------------
BUG#44958: Setting read_only won't succeed if tx is already started in different connection Backporting cset from 6.0 revision id: luis.soares@sun.com-20090626142234-8da6l9d991pw8tyx This bug was opened to report the disabling of test rpl_read_only after patch for BUG#989 was pushed and to reenable this test case with the appropriate changes. This test case consists of three parts: 1. check that the readonly variable is not replicated. The variable is set on the master before any locking takes place. This is safe wrt to the patch for BUG#989. 2. check that user root (on conn1) can commit even if 'set read_only=1' is done concurrently (on conn3) just before conn1 issues commit. This checks also that other users than root will not be able to commit under the same scenario. 3. check that the sql slave thread is able to apply the changes even if read_only is set. This is safe wrt to the patch for BUG#989. The test case now hangs in 2. because it tries to set the flag read_only, while there are active changes going on (and mdl locks are taken). The proposed fix addresses this, by changing a little the test case in 2., so that the read_only flag is set before the changes are done. This makes the test not to hang anymore and keeps as close as possible the same assertions from before: i) assertion that the SUPER user can commit persists; ii) assertion that the non-super user cannot commit is changed - since read_only is set before the inserts, now when this user tries to insert it will get an error (ie, the check is performed earlier - before commit). 	9cd2e368b2935cf3ef1dd5051369263aa6ae0abe
----------------------------
Bug#45194 mysql_upgrade deletes existing data in performance_schema database/schema Before this fix, mysql_upgrade would always drop and re create the performance_schema database. This in theory could destroy user data created using 5.1 or older versions. With this fix, mysql_upgrade checks the content of the performance_schema database before droping it. 	51f7f7f43ec456720bc4b24a1d898483e274ad80
----------------------------
"Fix for BUG#51215 ""log-error partially works with version 5.5"": WL 4738 (reengineering of server variables) had broken the 5.1 behaviour of --log-error: --log-error without argument sent to stderr instead of writing to a file with an autogenerated name. "	39e30ed9e0c8b4fbb44a372a5a8014427176ad5f
----------------------------
Bug#50392: insert_id is not reset for partitioned tables auto_increment on duplicate entry The bug was that when INSERT_ID was used and the storage engine was told to release any reserved but not used auto_increment values, it set the highest auto_increment value to INSERT_ID. The fix was to check if the auto_increment value was forced by user (INSERT_ID) or by slave-thread, i.e. not auto- generated. So that it is only allowed to release generated values. 	25596746dbc048930d53a798d0640a3cc431c576
----------------------------
BUG#51055: Replication failure on duplicate key + traditional SQL mode When the master was executing in sql_mode='traditional' (which implies that really_abort_on_warning returns TRUE - because of MODE_STRICT_ALL_TABLES), the error code (ER_DUP_ENTRY in the reported case) was not being set in the Query_log_event. Therefore, even if a failure was to be expected when replaying the statement on the slave, a failure would occur, because the Query_log_event was not transporting the expected error code, but 0 instead. This was because when the master was getting the error code to set it in the Query_log_event, the executing thread would be assumed to have been killed: THD::killed==THD::KILL_BAD_DATA. This would make the error code fetch routine not to check thd->main_da.sql_errno(), but instead the thd->killed value. What's more, is that the server would thd->killed value if thd->killed == THD::KILL_BAD_DATA and return 0 instead. So this is a double inconsistency, as the we should not even check thd->killed but rather thd->main_da.sql_errno(). We fix this by extending the condition used to choose whether to check the thd->main_da.sql_errno() or thd->killed, so that it takes into consideration the case when: thd->killed==THD::KILL_BAD_DATA. 	e831e729db5d0a64290accd98fb480e0773b9ff5
----------------------------
"branches/innodb+: Merge revisions 6560:6773 from branches/zip: ------------------------------------------------------------------------ r6560 | sunny | 2010-02-04 16:11:23 +0200 (Thu, 04 Feb 2010) | 7 lines Changed paths: M /branches/zip/lock/lock0lock.c branches/zip: Remove the additional check introduced in r6534 which tries to check if the joining transaction has any other transactions waiting on its locks. This optimization results in excessive deadlocks when running Sysbench with a large number of threads. The function seems to return FALSE positives. rb://250 ------------------------------------------------------------------------ r6591 | marko | 2010-02-08 10:06:39 +0200 (Mon, 08 Feb 2010) | 3 lines Changed paths: M /branches/zip/row/row0merge.c branches/zip: row_merge_drop_index(): Remove redundant condition on SYS_INDEXES.TABLE_ID.  INDEX_ID must be instance-widely unique, because SYS_FIELDS is not indexed by TABLE_ID. ------------------------------------------------------------------------ r6594 | marko | 2010-02-08 12:55:04 +0200 (Mon, 08 Feb 2010) | 2 lines Changed paths: M /branches/zip/rem/rem0rec.c branches/zip: rec_get_nth_field_offs_old(): Replace if (!cond) ut_error; tests with ut_a(cond). ------------------------------------------------------------------------ r6595 | marko | 2010-02-08 13:53:02 +0200 (Mon, 08 Feb 2010) | 1 line Changed paths: M /branches/zip/include/btr0pcur.h M /branches/zip/include/btr0pcur.ic branches/zip: btr_pcur_commit(): Unused function, remove. ------------------------------------------------------------------------ r6608 | marko | 2010-02-09 11:02:37 +0200 (Tue, 09 Feb 2010) | 1 line Changed paths: M /branches/zip/handler/handler0alter.cc branches/zip: ha_innobase::add_index(): Check for !innodb_table. ------------------------------------------------------------------------ r6609 | marko | 2010-02-09 13:45:40 +0200 (Tue, 09 Feb 2010) | 1 line Changed paths: M /branches/zip/dict/dict0dict.c branches/zip: dict_field_print_low(): Add const qualifier. ------------------------------------------------------------------------ r6610 | marko | 2010-02-09 13:53:59 +0200 (Tue, 09 Feb 2010) | 17 lines Changed paths: M /branches/zip/dict/dict0boot.c M /branches/zip/include/dict0boot.h M /branches/zip/row/row0merge.c M /branches/zip/row/row0mysql.c branches/zip: When dropping temporary indexes and tables at startup, first load them to the data dictionary cache and use the normal routines for dropping tables or indexes.  This should reduce the risk of bugs and also make the code compatible with the upcoming TablespaceDictionary implementation. DICT_SYS_INDEXES_NAME_FIELD: The clustered index position of SYS_INDEXES.NAME. row_merge_drop_temp_indexes(): Scan SYS_INDEXES for tables containing temporary indexes, and load the tables as needed. Invoke row_merge_drop_index() to drop the indexes. row_mysql_drop_temp_tables(): Scan SYS_TABLES for temporary tables, load them with dict_load_table() and drop them with row_drop_table_for_mysql(). rb://251, not yet reviewed ------------------------------------------------------------------------ r6611 | marko | 2010-02-09 14:28:25 +0200 (Tue, 09 Feb 2010) | 11 lines Changed paths: M /branches/zip/include/log0recv.h M /branches/zip/log/log0recv.c M /branches/zip/srv/srv0start.c branches/zip: Roll back dictionary transaction(s) before scanning *.ibd files innobase_start_or_create_for_mysql(): Roll back data dictionary transactions before scanning the *.ibd files. Then, data dictionary records can be loaded to the cache before opening the *.ibd files. recv_recovery_rollback_active(): Refactored from recv_recovery_from_checkpoint_finish(). rb://235, committing without review, because this is needed for TablespaceDictionary. ------------------------------------------------------------------------ r6612 | marko | 2010-02-09 14:32:39 +0200 (Tue, 09 Feb 2010) | 3 lines Changed paths: M /branches/zip/log/log0recv.c branches/zip: recv_recovery_rollback_active(): Drop the temporary tables and indexes after enabling sync order checks. This should not make any difference. This could have been done in r6611. ------------------------------------------------------------------------ r6614 | inaam | 2010-02-09 20:26:23 +0200 (Tue, 09 Feb 2010) | 7 lines Changed paths: M /branches/zip/srv/srv0srv.c branches/plugin rb://242 Let the master thread sleep if the amount of work to be done is calibrated as taking less than a second. Approved by: Heikki ------------------------------------------------------------------------ r6631 | marko | 2010-02-10 09:19:52 +0200 (Wed, 10 Feb 2010) | 1 line Changed paths: M /branches/zip/ChangeLog branches/zip: Document r6614 in ChangeLog. ------------------------------------------------------------------------ r6633 | marko | 2010-02-10 10:40:55 +0200 (Wed, 10 Feb 2010) | 31 lines Changed paths: M /branches/zip/ChangeLog M /branches/zip/buf/buf0buf.c M /branches/zip/lock/lock0lock.c branches/zip: Merge revisions 6538:6613 from branches/5.1: ------------------------------------------------------------------------ r6545 | jyang | 2010-02-03 03:57:32 +0200 (Wed, 03 Feb 2010) | 8 lines Changed paths: M /branches/5.1/lock/lock0lock.c branches/5.1: Fix bug #49001, ""SHOW INNODB STATUS deadlock info incorrect when deadlock detection aborts"". Print the correct lock owner when recursive function lock_deadlock_recursive() exceeds its maximum depth LOCK_MAX_DEPTH_IN_DEADLOCK_CHECK. rb://217, approved by Marko. ------------------------------------------------------------------------ r6613 | inaam | 2010-02-09 20:23:09 +0200 (Tue, 09 Feb 2010) | 11 lines Changed paths: M /branches/5.1/buf/buf0buf.c M /branches/5.1/buf/buf0rea.c M /branches/5.1/include/buf0rea.h branches/5.1: Fix Bug #38901 InnoDB logs error repeatedly when trying to load page into buffer pool In buf_page_get_gen() if we are unable to read a page (because of corruption or some other reason) we keep on retrying. This fills up error log with millions of entries in no time and we'd eventually run out of disk space. This patch limits the number of attempts that we make (currently set to 100) and after that we abort with a message. rb://241 Approved by: Heikki ------------------------------------------------------------------------ ------------------------------------------------------------------------ r6635 | marko | 2010-02-10 11:07:05 +0200 (Wed, 10 Feb 2010) | 4 lines Changed paths: M /branches/zip/row/row0sel.c branches/zip: Clean up after r6559.  Now that btr_pcur_open_with_no_init() is a macro, do not mix preprocessor directives in the macro invocation, because it is implementation-defined whether that is going to work. ------------------------------------------------------------------------ r6639 | marko | 2010-02-10 13:11:04 +0200 (Wed, 10 Feb 2010) | 1 line Changed paths: M /branches/zip/include/trx0rseg.h M /branches/zip/trx/trx0rseg.c branches/zip: trx_rseg_create(): Unused function, remove. ------------------------------------------------------------------------ r6660 | marko | 2010-02-11 11:21:11 +0200 (Thu, 11 Feb 2010) | 7 lines Changed paths: M /branches/zip/row/row0umod.c branches/zip: Clarify the rollback of INSERT by UPDATE of delete-marked rec. row_undo_mod_remove_clust_low(): Augment the function comment. row_undo_mod_remove_clust_low(), row_undo_mod_del_mark_or_remove_sec_low(), row_undo_mod_del_mark_or_remove_sec(), row_undo_mod_upd_del_sec(): Add ut_ad(node->rec_type == TRX_UNDO_UPD_DEL_REC); ------------------------------------------------------------------------ r6672 | marko | 2010-02-11 13:01:18 +0200 (Thu, 11 Feb 2010) | 1 line Changed paths: M /branches/zip/include/que0que.h M /branches/zip/include/que0que.ic M /branches/zip/row/row0umod.c branches/zip: Introduce thr_is_recv(). ------------------------------------------------------------------------ r6673 | marko | 2010-02-11 13:09:48 +0200 (Thu, 11 Feb 2010) | 9 lines Changed paths: M /branches/zip/btr/btr0cur.c M /branches/zip/include/trx0types.h M /branches/zip/row/row0umod.c branches/zip: Relax a debug assertion about a missing BLOB. (Issue #452) When rolling back an incomplete transaction in purge, tolerate missing BLOBs also in update undo, when undoing an INSERT by updating a delete-marked record, and the delete-marked record is no longer needed. Previously, we only tolerated missing BLOBs in insert undo. This merely fixes a debug assertion; the code performed correctly without UNIV_DEBUG. rb://249 approved by Sunny Bains. ------------------------------------------------------------------------ r6674 | inaam | 2010-02-11 17:54:44 +0200 (Thu, 11 Feb 2010) | 16 lines Changed paths: M /branches/zip/include/mem0mem.h M /branches/zip/include/mem0mem.ic M /branches/zip/mem/mem0mem.c branches/zip bug# 49535 This is a backport of r4924. mem_heap_get_size() scans all allocated blocks to calculate the total size of the heap. This patch introduces a new, total_size, field in mem_block_info_struct. This field is valid only for base block (i.e.: the first block allocated for the heap) and is set to ULINT_UNDEFINED in other blocks. This considerably improves the performance of redo scan during recovery. rb://108 issue#216 Approved by: Heikki ------------------------------------------------------------------------ r6675 | marko | 2010-02-11 22:41:11 +0200 (Thu, 11 Feb 2010) | 1 line Changed paths: M /branches/zip/row/row0umod.c branches/zip: Remove bogus debug assertions introduced in r6660. ------------------------------------------------------------------------ r6707 | inaam | 2010-02-12 19:22:35 +0200 (Fri, 12 Feb 2010) | 4 lines Changed paths: M /branches/zip/ChangeLog branches/zip ChangeLog entry for r6674. ------------------------------------------------------------------------ r6712 | marko | 2010-02-16 10:05:36 +0200 (Tue, 16 Feb 2010) | 2 lines Changed paths: M /branches/zip/trx/trx0trx.c branches/zip: trx_lists_init_at_db_start(): Assert that the kernel_mutex is held by the caller. ------------------------------------------------------------------------ r6713 | sunny | 2010-02-16 10:12:17 +0200 (Tue, 16 Feb 2010) | 7 lines Changed paths: M /branches/zip/include/trx0trx.h branches/zip: Change the bit fields back to ulint. Bit fields were causing problems with concurrency on SMP systems because of word packing issues. The number of trx_t's in a system is not sufficient enough to require that we try and save a few bytes in the data structure. See rb://255 for details. ------------------------------------------------------------------------ r6714 | sunny | 2010-02-16 10:12:25 +0200 (Tue, 16 Feb 2010) | 2 lines Changed paths: M /branches/zip/include/trx0trx.h branches/zip: Update the comments and fix the whitespace issues. See rb://255 Approved by: Marko ------------------------------------------------------------------------ r6715 | sunny | 2010-02-16 10:14:21 +0200 (Tue, 16 Feb 2010) | 1 line Changed paths: M /branches/zip/include/trx0trx.h branches/zip: Fix comment. Non functional change. ------------------------------------------------------------------------ r6717 | marko | 2010-02-16 14:53:20 +0200 (Tue, 16 Feb 2010) | 2 lines Changed paths: M /branches/zip/include/log0log.ic branches/zip: log_reserve_and_write_fast(): Correct a race condition in UNIV_LOG_LSN_DEBUG.  This could have caused Issue #440. ------------------------------------------------------------------------ r6718 | marko | 2010-02-16 15:06:16 +0200 (Tue, 16 Feb 2010) | 1 line Changed paths: M /branches/zip/include/trx0trx.h branches/zip: Fix a comment. ------------------------------------------------------------------------ r6723 | marko | 2010-02-17 11:48:34 +0200 (Wed, 17 Feb 2010) | 3 lines Changed paths: M /branches/zip/lock/lock0lock.c branches/zip: lock_table_other_has_incompatible(): Return an incompatible lock or NULL instead of TRUE or FALSE. Approved by Sunny over IM. ------------------------------------------------------------------------ r6724 | marko | 2010-02-17 15:52:05 +0200 (Wed, 17 Feb 2010) | 11 lines Changed paths: M /branches/zip/os/os0file.c branches/zip: Merge revisions 6613:6669 from branches/5.1: ------------------------------------------------------------------------ r6669 | jyang | 2010-02-11 12:24:19 +0200 (Thu, 11 Feb 2010) | 7 lines branches/5.1: Fix bug #50691, AIX implementation of readdir_r causes InnoDB errors. readdir_r() returns an non-NULL value in the case of reaching the end of a directory. It should not be treated as an error return. rb://238 approved by Marko ------------------------------------------------------------------------ ------------------------------------------------------------------------ r6726 | marko | 2010-02-17 18:49:21 +0200 (Wed, 17 Feb 2010) | 3 lines Changed paths: M /branches/zip/include/fil0fil.h branches/zip: FIL_PAGE_FILE_FLUSH_LSN: Note that the field is only valid for the first page of each ibdata* file, not *.ibd files. Suggested by Heikki, in connection with the LSN warning noted in Issue #341. ------------------------------------------------------------------------ r6727 | marko | 2010-02-17 18:50:20 +0200 (Wed, 17 Feb 2010) | 2 lines Changed paths: M /branches/zip/fsp/fsp0fsp.c branches/zip: fsp_init_file_page_low(): Declare the page uninitialized for Valgrind. ------------------------------------------------------------------------ r6728 | marko | 2010-02-17 18:54:04 +0200 (Wed, 17 Feb 2010) | 3 lines Changed paths: M /branches/zip/fsp/fsp0fsp.c M /branches/zip/include/univ.i branches/zip: Remove UNIV_BASIC_LOG_DEBUG. This fixes the FILE_FLUSH_LSN printouts mentioned in Issue #341. Suggested by Heikki. ------------------------------------------------------------------------ r6740 | sunny | 2010-02-18 13:44:31 +0200 (Thu, 18 Feb 2010) | 6 lines Changed paths: M /branches/zip/lock/lock0lock.c branches/zip: Don't print the entire lock bit set if the block was not found in the buffer pool. Only print the bits that are set and that information is in the lock and not in the block. See rb://256 approved by Marko. ------------------------------------------------------------------------ r6749 | vasil | 2010-02-20 18:45:41 +0200 (Sat, 20 Feb 2010) | 5 lines Changed paths: M /branches/embedded-1.0/btr/btr0btr.c M /branches/embedded-1.0/btr/btr0cur.c M /branches/embedded-1.0/btr/btr0pcur.c M /branches/embedded-1.0/buf/buf0buf.c M /branches/embedded-1.0/buf/buf0flu.c M /branches/embedded-1.0/buf/buf0lru.c M /branches/embedded-1.0/dict/dict0boot.c M /branches/embedded-1.0/dict/dict0crea.c M /branches/embedded-1.0/dict/dict0dict.c M /branches/embedded-1.0/dict/dict0load.c M /branches/embedded-1.0/fil/fil0fil.c M /branches/embedded-1.0/fsp/fsp0fsp.c M /branches/embedded-1.0/ibuf/ibuf0ibuf.c M /branches/embedded-1.0/include/btr0btr.h M /branches/embedded-1.0/include/btr0cur.h M /branches/embedded-1.0/include/btr0pcur.h M /branches/embedded-1.0/include/btr0pcur.ic M /branches/embedded-1.0/include/buf0buf.h M /branches/embedded-1.0/include/buf0buf.ic M /branches/embedded-1.0/include/dict0boot.h M /branches/embedded-1.0/include/fil0fil.h M /branches/embedded-1.0/include/lock0lock.h M /branches/embedded-1.0/include/log0log.h M /branches/embedded-1.0/include/log0log.ic M /branches/embedded-1.0/include/log0recv.h M /branches/embedded-1.0/include/mem0dbg.h M /branches/embedded-1.0/include/mem0dbg.ic M /branches/embedded-1.0/include/mem0mem.h M /branches/embedded-1.0/include/mem0mem.ic M /branches/embedded-1.0/include/os0file.h M /branches/embedded-1.0/include/os0sync.h M /branches/embedded-1.0/include/os0sync.ic M /branches/embedded-1.0/include/os0thread.h M /branches/embedded-1.0/include/que0que.h M /branches/embedded-1.0/include/que0que.ic M /branches/embedded-1.0/include/row0merge.h M /branches/embedded-1.0/include/row0prebuilt.h M /branches/embedded-1.0/include/srv0srv.h M /branches/embedded-1.0/include/sync0sync.h M /branches/embedded-1.0/include/trx0rseg.h M /branches/embedded-1.0/include/trx0sys.h M /branches/embedded-1.0/include/trx0trx.h M /branches/embedded-1.0/include/trx0types.h M /branches/embedded-1.0/include/trx0undo.h M /branches/embedded-1.0/include/trx0xa.h M /branches/embedded-1.0/include/univ.i M /branches/embedded-1.0/include/ut0vec.h M /branches/embedded-1.0/include/ut0vec.ic M /branches/embedded-1.0/lock/lock0lock.c M /branches/embedded-1.0/log/log0log.c M /branches/embedded-1.0/log/log0recv.c M /branches/embedded-1.0/mem/mem0mem.c M /branches/embedded-1.0/os/os0file.c M /branches/embedded-1.0/os/os0thread.c M /branches/embedded-1.0/page/page0page.c M /branches/embedded-1.0/rem/rem0rec.c M /branches/embedded-1.0/row/row0ins.c M /branches/embedded-1.0/row/row0merge.c M /branches/embedded-1.0/row/row0prebuilt.c M /branches/embedded-1.0/row/row0sel.c M /branches/embedded-1.0/row/row0umod.c M /branches/embedded-1.0/row/row0undo.c M /branches/embedded-1.0/row/row0upd.c M /branches/embedded-1.0/srv/srv0srv.c M /branches/embedded-1.0/srv/srv0start.c M /branches/embedded-1.0/sync/sync0sync.c M /branches/embedded-1.0/trx/trx0sys.c M /branches/embedded-1.0/trx/trx0trx.c M /branches/embedded-1.0/trx/trx0undo.c M /branches/embedded-1.0/ut/ut0mem.c M /branches/innodb+/btr/btr0btr.c M /branches/innodb+/btr/btr0cur.c M /branches/innodb+/btr/btr0pcur.c M /branches/innodb+/buf/buf0buf.c M /branches/innodb+/buf/buf0lru.c M /branches/innodb+/dict/dict0crea.c M /branches/innodb+/dict/dict0dict.c M /branches/innodb+/dict/dict0load.c M /branches/innodb+/handler/ha_innodb.cc M /branches/innodb+/handler/ha_innodb.h M /branches/innodb+/handler/handler0alter.cc M /branches/innodb+/include/btr0btr.h M /branches/innodb+/include/btr0cur.h M /branches/innodb+/include/btr0pcur.h M /branches/innodb+/include/btr0pcur.ic M /branches/innodb+/include/buf0buf.h M /branches/innodb+/include/log0log.h M /branches/innodb+/include/mem0dbg.h M /branches/innodb+/include/mem0dbg.ic M /branches/innodb+/include/os0file.h M /branches/innodb+/include/row0mysql.h M /branches/innodb+/include/srv0srv.h M /branches/innodb+/include/sync0sync.h M /branches/innodb+/include/trx0trx.h M /branches/innodb+/lock/lock0lock.c M /branches/innodb+/log/log0log.c M /branches/innodb+/log/log0recv.c M /branches/innodb+/mem/mem0dbg.c M /branches/innodb+/os/os0file.c M /branches/innodb+/page/page0page.c M /branches/innodb+/row/row0ins.c M /branches/innodb+/row/row0mysql.c M /branches/innodb+/row/row0sel.c M /branches/innodb+/srv/srv0srv.c M /branches/innodb+/srv/srv0start.c M /branches/innodb+/sync/sync0sync.c M /branches/innodb+_metrics_table/btr/btr0btr.c M /branches/innodb+_metrics_table/buf/buf0buf.c M /branches/innodb+_metrics_table/buf/buf0flu.c M /branches/innodb+_metrics_table/dict/dict0crea.c M /branches/innodb+_metrics_table/dict/dict0dict.c M /branches/innodb+_metrics_table/dict/dict0load.c M /branches/innodb+_metrics_table/handler/ha_innodb.cc M /branches/innodb+_metrics_table/handler/ha_innodb.h M /branches/innodb+_metrics_table/handler/handler0alter.cc M /branches/innodb+_metrics_table/handler/i_s.cc M /branches/innodb+_metrics_table/handler/i_s.h M /branches/innodb+_metrics_table/include/mem0dbg.h M /branches/innodb+_metrics_table/include/mem0dbg.ic M /branches/innodb+_metrics_table/include/srv0mon.h M /branches/innodb+_metrics_table/include/srv0mon.ic M /branches/innodb+_metrics_table/include/srv0srv.h M /branches/innodb+_metrics_table/lock/lock0lock.c M /branches/innodb+_metrics_table/log/log0log.c M /branches/innodb+_metrics_table/mem/mem0dbg.c M /branches/innodb+_metrics_table/os/os0file.c M /branches/innodb+_metrics_table/page/page0zip.c M /branches/innodb+_metrics_table/row/row0mysql.c M /branches/innodb+_metrics_table/row/row0purge.c M /branches/innodb+_metrics_table/row/row0sel.c M /branches/innodb+_metrics_table/srv/srv0mon.c M /branches/innodb+_metrics_table/srv/srv0srv.c M /branches/innodb+_metrics_table/sync/sync0sync.c M /branches/innodb+_metrics_table/trx/trx0roll.c M /branches/innodb+_metrics_table/trx/trx0trx.c M /branches/innodb+_persistent_stats/btr/btr0btr.c M /branches/innodb+_persistent_stats/buf/buf0buf.c M /branches/innodb+_persistent_stats/data/data0type.c M /branches/innodb+_persistent_stats/dict/dict0boot.c M /branches/innodb+_persistent_stats/dict/dict0crea.c M /branches/innodb+_persistent_stats/dict/dict0dict.c M /branches/innodb+_persistent_stats/dict/dict0load.c M /branches/innodb+_persistent_stats/dict/dict0mem.c M /branches/innodb+_persistent_stats/fil/fil0fil.c M /branches/innodb+_persistent_stats/fsp/fsp0fsp.c M /branches/innodb+_persistent_stats/handler/ha_innodb.cc M /branches/innodb+_persistent_stats/handler/ha_innodb.h M /branches/innodb+_persistent_stats/handler/handler0alter.cc M /branches/innodb+_persistent_stats/ibuf/ibuf0ibuf.c M /branches/innodb+_persistent_stats/include/btr0pcur.h M /branches/innodb+_persistent_stats/include/btr0pcur.ic M /branches/innodb+_persistent_stats/include/db0err.h M /branches/innodb+_persistent_stats/include/dict0dict.h M /branches/innodb+_persistent_stats/include/dict0mem.h M /branches/innodb+_persistent_stats/include/ha_prototypes.h M /branches/innodb+_persistent_stats/include/lock0lock.h M /branches/innodb+_persistent_stats/include/log0log.h M /branches/innodb+_persistent_stats/include/log0recv.h M /branches/innodb+_persistent_stats/include/mem0dbg.h M /branches/innodb+_persistent_stats/include/mem0dbg.ic M /branches/innodb+_persistent_stats/include/os0file.h M /branches/innodb+_persistent_stats/include/pars0pars.h M /branches/innodb+_persistent_stats/include/srv0srv.h M /branches/innodb+_persistent_stats/include/sync0sync.h M /branches/innodb+_persistent_stats/include/trx0sys.h M /branches/innodb+_persistent_stats/include/trx0trx.h M /branches/innodb+_persistent_stats/include/ut0lst.h M /branches/innodb+_persistent_stats/include/ut0ut.h M /branches/innodb+_persistent_stats/lock/lock0lock.c M /branches/innodb+_persistent_stats/log/log0log.c M /branches/innodb+_persistent_stats/log/log0recv.c M /branches/innodb+_persistent_stats/mem/mem0dbg.c M /branches/innodb+_persistent_stats/os/os0file.c M /branches/innodb+_persistent_stats/page/page0page.c M /branches/innodb+_persistent_stats/pars/pars0pars.c M /branches/innodb+_persistent_stats/row/row0merge.c M /branches/innodb+_persistent_stats/row/row0mysql.c M /branches/innodb+_persistent_stats/row/row0sel.c M /branches/innodb+_persistent_stats/row/row0umod.c M /branches/innodb+_persistent_stats/row/row0upd.c M /branches/innodb+_persistent_stats/srv/srv0srv.c M /branches/innodb+_persistent_stats/srv/srv0start.c M /branches/innodb+_persistent_stats/sync/sync0sync.c M /branches/innodb+_persistent_stats/trx/trx0i_s.c M /branches/innodb+_persistent_stats/trx/trx0sys.c M /branches/innodb+_persistent_stats/trx/trx0trx.c M /branches/innodb+_persistent_stats/ut/ut0ut.c M /branches/innofts+/handler/ha_innodb.cc M /branches/innofts+/handler/i_s.cc M /branches/innofts+/handler/i_s.h M /branches/innofts+/include/fut0fut.h M /branches/performance_schema/btr/btr0sea.c M /branches/performance_schema/buf/buf0buf.c M /branches/performance_schema/dict/dict0dict.c M /branches/performance_schema/fil/fil0fil.c M /branches/performance_schema/handler/ha_innodb.cc M /branches/performance_schema/include/srv0srv.h M /branches/performance_schema/include/sync0rw.h M /branches/performance_schema/include/sync0rw.ic M /branches/performance_schema/include/sync0sync.h M /branches/performance_schema/include/sync0sync.ic M /branches/performance_schema/include/sync0types.h M /branches/performance_schema/log/log0log.c M /branches/performance_schema/srv/srv0srv.c M /branches/performance_schema/sync/sync0rw.c M /branches/performance_schema/trx/trx0i_s.c M /branches/performance_schema/trx/trx0purge.c M /branches/plugin-2.0/buf/buf0buf.c M /branches/plugin-2.0/buf/buf0lru.c M /branches/plugin-2.0/dict/dict0boot.c M /branches/plugin-2.0/dict/dict0crea.c M /branches/plugin-2.0/dict/dict0dict.c M /branches/plugin-2.0/dict/dict0load.c M /branches/plugin-2.0/dict/dict0mem.c M /branches/plugin-2.0/fil/fil0fil.c M /branches/plugin-2.0/fsp/fsp0fsp.c M /branches/plugin-2.0/handler/ha_innodb.cc M /branches/plugin-2.0/handler/ha_innodb.h M /branches/plugin-2.0/handler/handler0alter.cc M /branches/plugin-2.0/ibuf/ibuf0ibuf.c M /branches/plugin-2.0/include/dict0mem.h M /branches/plugin-2.0/include/ha_prototypes.h M /branches/plugin-2.0/include/lock0lock.h M /branches/plugin-2.0/include/log0log.h M /branches/plugin-2.0/include/log0recv.h M /branches/plugin-2.0/include/mem0dbg.h M /branches/plugin-2.0/include/mem0dbg.ic M /branches/plugin-2.0/include/os0file.h M /branches/plugin-2.0/include/row0mysql.h M /branches/plugin-2.0/include/srv0srv.h M /branches/plugin-2.0/include/sync0sync.h M /branches/plugin-2.0/include/trx0sys.h M /branches/plugin-2.0/include/trx0trx.h M /branches/plugin-2.0/lock/lock0lock.c M /branches/plugin-2.0/log/log0log.c M /branches/plugin-2.0/log/log0recv.c M /branches/plugin-2.0/mem/mem0dbg.c M /branches/plugin-2.0/os/os0file.c M /branches/plugin-2.0/page/page0page.c M /branches/plugin-2.0/row/row0merge.c M /branches/plugin-2.0/row/row0mysql.c M /branches/plugin-2.0/row/row0sel.c M /branches/plugin-2.0/row/row0umod.c M /branches/plugin-2.0/row/row0upd.c M /branches/plugin-2.0/srv/srv0srv.c M /branches/plugin-2.0/srv/srv0start.c M /branches/plugin-2.0/sync/sync0sync.c M /branches/plugin-2.0/trx/trx0i_s.c M /branches/plugin-2.0/trx/trx0sys.c M /branches/plugin-2.0/trx/trx0trx.c M /branches/zip/btr/btr0btr.c M /branches/zip/btr/btr0cur.c M /branches/zip/btr/btr0pcur.c M /branches/zip/buf/buf0buf.c M /branches/zip/buf/buf0lru.c M /branches/zip/dict/dict0boot.c M /branches/zip/dict/dict0crea.c M /branches/zip/dict/dict0dict.c M /branches/zip/dict/dict0load.c M /branches/zip/fsp/fsp0fsp.c M /branches/zip/handler/ha_innodb.cc M /branches/zip/handler/ha_innodb.h M /branches/zip/handler/handler0alter.cc M /branches/zip/include/btr0btr.h M /branches/zip/include/btr0cur.h M /branches/zip/include/btr0pcur.h M /branches/zip/include/btr0pcur.ic M /branches/zip/include/buf0buf.h M /branches/zip/include/dict0boot.h M /branches/zip/include/fil0fil.h M /branches/zip/include/log0log.h M /branches/zip/include/log0log.ic M /branches/zip/include/log0recv.h M /branches/zip/include/mem0dbg.h M /branches/zip/include/mem0dbg.ic M /branches/zip/include/mem0mem.h M /branches/zip/include/mem0mem.ic M /branches/zip/include/os0file.h M /branches/zip/include/que0que.h M /branches/zip/include/que0que.ic M /branches/zip/include/row0mysql.h M /branches/zip/include/srv0srv.h M /branches/zip/include/sync0sync.h M /branches/zip/include/trx0rseg.h M /branches/zip/include/trx0trx.h M /branches/zip/include/trx0types.h M /branches/zip/include/univ.i M /branches/zip/lock/lock0lock.c M /branches/zip/log/log0log.c M /branches/zip/log/log0recv.c M /branches/zip/mem/mem0dbg.c M /branches/zip/mem/mem0mem.c M /branches/zip/os/os0file.c M /branches/zip/page/page0page.c M /branches/zip/rem/rem0rec.c M /branches/zip/row/row0ins.c M /branches/zip/row/row0merge.c M /branches/zip/row/row0mysql.c M /branches/zip/row/row0sel.c M /branches/zip/row/row0umod.c M /branches/zip/srv/srv0srv.c M /branches/zip/srv/srv0start.c M /branches/zip/sync/sync0sync.c M /branches/zip/trx/trx0rseg.c M /branches/zip/trx/trx0trx.c Non-functional change: update copyright year to 2010 of the files that have been modified after 2010-01-01 according to svn. for f in $(svn log -v -r{2010-01-01}:HEAD |grep ""^   M "" |cut -b 16- |sort -u) ; do sed -i """" -E 's/(Copyright \(c\) [0-9]{4},) [0-9]{4}, (.*Innobase Oy.+All Rights Reserved)/\1 2010, \2/' $f ; done ------------------------------------------------------------------------ r6750 | marko | 2010-02-22 08:57:23 +0200 (Mon, 22 Feb 2010) | 2 lines Changed paths: M /branches/zip/include/row0sel.h M /branches/zip/row/row0sel.c branches/zip: row_fetch_store_uint4(): Remove unused function. This was added to trunk in r435. ------------------------------------------------------------------------ r6754 | marko | 2010-02-24 10:56:43 +0200 (Wed, 24 Feb 2010) | 17 lines Changed paths: M /branches/zip/row/row0merge.c branches/zip: Allocate the merge sort buffers from a heap, not stack. The merge sort can use up to 48KiB of buffers when merging blocks. That can cause a stack overflow, especially on 64-bit systems when not building with inlined functions.  This was reported as Issue #462. row_merge_dup_report(): Allocate buf and offsets from a heap. row_merge_heap_create(): Allocate space for buf[3] too. Fix bogus sizeof arithmetics that happened to work, because sizeof(ulint)==sizeof(void*). row_merge_blocks(), row_merge_blocks_copy(): Allocate buf[3] from heap. row_merge_insert_index_tuples(): Allocate buf from graph_heap. rb://258 approved and tested by Sunny Bains ------------------------------------------------------------------------ r6767 | calvin | 2010-03-01 18:16:10 +0200 (Mon, 01 Mar 2010) | 3 lines Changed paths: M /branches/zip/srv/srv0srv.c branches/zip: fix bug#51587 Non-functional change. ------------------------------------------------------------------------ r6768 | vasil | 2010-03-02 18:20:48 +0200 (Tue, 02 Mar 2010) | 5 lines Changed paths: M /branches/zip/include/btr0btr.h M /branches/zip/include/btr0btr.ic branches/zip: Add a NOTE to the comment of btr_node_ptr_get_child_page_no() to prevent mysterious bugs. ------------------------------------------------------------------------ r6770 | marko | 2010-03-03 12:52:55 +0200 (Wed, 03 Mar 2010) | 12 lines Changed paths: M /branches/zip/handler/handler0alter.cc M /branches/zip/mysql-test/innodb-index.result M /branches/zip/mysql-test/innodb-index.test M /branches/zip/mysql-test/innodb.result M /branches/zip/mysql-test/innodb.test branches/zip: Disallow duplicate index name when creating an index. This should fix Mantis Issue #461. innodb.test, innodb.result, innodb-index.test, innodb-index.result: Adjust the test result and mention that the introduced restriction has been reported as MySQL Bug #51451. innobase_check_index_keys(): Add a parameter for the InnoDB table and check that no duplicate index name is added.  Report errors by my_error() instead of sql_print_error(). rb://260 approved by Sunny Bains ------------------------------------------------------------------------ r6771 | marko | 2010-03-03 14:52:43 +0200 (Wed, 03 Mar 2010) | 1 line Changed paths: M /branches/zip/ChangeLog Document r6770. ------------------------------------------------------------------------ r6773 | marko | 2010-03-03 15:31:54 +0200 (Wed, 03 Mar 2010) | 2 lines Changed paths: M /branches/zip/row/row0row.c branches/zip: row_raw_format(): Silence a GCC 4.4.2 warning of possibly uninitialized variable format_in_hex. ------------------------------------------------------------------------ "	fb2ff6daf35dcdc94e7409a17965a43e77829a62
----------------------------
Bug #45482 MTR2: --default-storage-engine=csv is rejected by mtr Added csv to list of builtin engines Fixed dysfunctional part of csv.test so it actuallu used csv 	a320ebe897b734136e61d5a3ffa7a903cb3f3257
----------------------------
Merge: 7cebbef 0bba392 merged gca(5.1,next-mr) -> 5.1-rep+2 conflicts: Text conflict in mysql-test/mysql-test-run.pl Text conflict in mysql-test/r/log_state.result Text conflict in mysql-test/r/show_check.result Text conflict in mysql-test/r/sp-error.result Text conflict in mysql-test/r/sp.result Text conflict in mysql-test/r/sp_trans.result Text conflict in mysql-test/r/type_blob.result Text conflict in mysql-test/r/type_timestamp.result Text conflict in mysql-test/r/warnings.result Text conflict in mysql-test/suite/rpl/r/rpl_slow_query_log.result Text conflict in mysql-test/suite/rpl/r/rpl_sp.result Text conflict in mysql-test/suite/rpl/t/rpl_slow_query_log.test Text conflict in sql/mysqld.cc 	9a8ae832b2fbeea1bdfd728b3c14315fba593d75
----------------------------
Post-merge fixes in rpl_ndb_binlog_format_errors to fix test failures after 6.0-codebase was merged with 5.1-rep+3. Background: In the fix of BUG#39934 in 5.1-rep+3, errors are generated when binlog_format=row and a statement modifies a table restricted to statement-logging; or if binlog_format=statement and a statement modifies a table limited to row-logging. The check is based on which tables are locked. In the version of 5.1 that BUG#39934 was based on, CREATE TRIGGER did not call lock_tables, so CREATE TRIGGER could not generate the error. In work made concurrently to BUG#39934 in 6.0-codebase, CREATE TRIGGER was changed so that it calls lock_tables. Problem: When the two branches were merged, the test case rpl_ndb.rpl_ndb_binlog_format_errors started to fail, because it invokes CREATE TRIGGER on a statement-only table when binlog_format=ROW. Fix: rpl_ndb_binlog_format_errors doesn't have to use triggers in the place where it fails. All that is important is that it modifies two tables in one statement. Fixed by replacing an INSERT into a table with a trigger by a multi-table UPDATE. The fix is pushed to 5.1-rep+2 since the test was introduced there. See also BUG#50479 	7cebbef1cc4d1030810d8d4bcc2e6cdeb155f003
----------------------------
BUG#51226: mysqlbinlog replay: ERROR 1146 when using temp tables + failing statements Implicit DROP event for temporary table is not getting LOG_EVENT_THREAD_SPECIFIC_F flag, because, in the previous executed statement in the same thread, which might even be a failed statement, the thread_specific_used flag is set to FALSE (in mysql_reset_thd_for_next_command) and not set to TRUE before connection is shutdown. This means that implicit DROP event will take the FALSE value from thread_specific_used and will not set LOG_EVENT_THREAD_SPECIFIC_F in the event header. As a consequence, mysqlbinlog will not print the pseudo_thread_id from the DROP event, because one of the requirements for the printout is that this flag is set to TRUE. We fix this by setting thread_specific_used whenever we are binlogging a DROP in close_temporary_tables, and resetting it to its previous value afterward. 	24f7afe7bcb1befec02f7c6efe884229bda3ff39
----------------------------
"Bug #51488 :missing features and change behavior in cmake runs compared to autotools runs - Fix recognition of --with-debug=full in configure wrapper - Remove CMakeCache.txt in configure wrapper, to match the original - Fix recognition of max-no-ndb - Fix broken dependencies of mysql_fix_privilege_table.sql from mysql_system_tables.sql and mysql_system_tables_fix.sql - Add ""distclean target"" that informs user about appropriate bzr command "	273d74eaa586117951113a372249c1cd0bbdb842
----------------------------
"Bug #51376 Assert `! is_set()' failed in Diagnostics_area::set_ok_status on DROP FUNCTION This assert tests that the server is not trying to send ""ok"" to the client if an error has occured during statement processing. In this case, the assert was triggered by lock timeout errors when accessing system tables to do an implicit REVOKE after executing DROP FUNCTION/PROCEDURE. In practice, this was only likely to happen with very low values for ""lock_wait_timeout"" (in the bug report 1 second was used). These errors were ignored and the server tried to send ""ok"" to the client, triggering the assert. The patch for Bug#45225 introduced lock timeouts for metadata locks. This made it possible to get timeouts when accessing system tables. Note that a followup patch for Bug#45225 pushed after this bug was reported, changed accessing of system tables such that the user-supplied timeout value is ignored and the maximum timeout value is used instead. This exact bug was therefore only noticeable in the period between the initial Bug#45225 patch and the followup patch. However, the same problem could occur for any errors during revoking of privileges - not just timeouts. This patch fixes the problem by making sure that any errors during revoking of privileges are reported to the client. Test case added to sp-destruct.test. Since the original bug is not reproducable now that system tables are accessed using a a long timeout value, this test instead calls DROP FUNCTION with a grant system table missing. "	b59f88ee1f3965b1e796a89aea5d09c627562d5d
----------------------------
BUG#37656: lower_case_table_names=1 doesn't convert database names in replicated statements BUG#50653: drop procedure implicitely treats db name in a case sensitive way This bug revealed itself while using case sensitive filesystems and exhibited two symptoms: 1. If setting lower_case_table_names=1 on the slave, but not on the master, this setting will not convert database name in replicated statements, ultimately breaking replication; 2. The same problem for symptom 1. surfaced in RBR, but this time for table names, as these would not be converted to lower case for row based replication events. Symptom 1. is addressed by conditionally converting to lower case, database name on Query_log_event constructor and Load_log_event::do_apply_event. Symptom 2. is addressed by conditionally converting to lower database name and table name when processing Table_map_log_event. A side note on BUG#50653. It's basically a duplicate of BUG#37656 but I included a test case for it in this patch. 	739a3b28ea9f924e288dc6178346dfc902fa5434
----------------------------
WL#2980 & WL#1110. Backporting commit#6. optimizer_switch now controls semi-join and materialization. 	1303db0917359eadbdb8b6b71fbc04dab6b47fdf
----------------------------
Fix WITH_DEBUG problems in CMake build, so people who use configure wrappers do not suffer. The problem was that when custom C flags were defined with in environment variable CFLAGS, WITH_DEBUG did not have any effect. Also, switch from WITH_DEBUG=ON to WITH_DEBUG=OFF   was not handled correctly .Expected is switch to with RelwithDebInfo or when custom compiler flags  are defined, to None. 	e1384dc718890ed3950795cbc4f425dd453ab018
----------------------------
WL#5252: deprecate --optimizer_search_depth=63 Followup: Changes in sys_vars test suite mysql-test/suite/sys_vars/r/optimizer_search_depth_basic.result Added warnings. 	19d25e5658d120cb671c119c7bc5724d72da407f
----------------------------
Merge: 4d23608 0bba392 Manual merge from mysql-5.1. Conflicts: - support-files/mysql.spec.sh - configure.in 	fe6e3bf20ad2af8a58bb6dc87278a44bfbd967e3
----------------------------
BUG#50296 restoring the maximum of slave_net_timeout as defined #define LONG_TIMEOUT ((ulong) 3600L*24L*365L) 	16a81cd32fcc74338c1b124e44055afcd73ae5ee
----------------------------
WL#5252: Deprecate --optimizer_search_depth=63 Add deprecation warning when variable optimizer_search_depth is given the value 63. mysql-test/r/greedy_optimizer.result Updated with warning text. mysql-test/r/mysqld--help-notwin.result Updated with warning from mysqld --help --verbose. mysql-test/r/mysqld--help-win.result Updated with warning from mysqld --help --verbose. sql/sys_vars.cc Added an update check function to the constructor invocation for the optimizer_search_depth variable. The function emits a warning message for the value 63. 	9302df9131e5aa93dbc609d57592973d0aa69f30
----------------------------
Bug#50296 Slave reconnects earlier than the prescribed slave_net_timeout value Fixed failed assert on 64 bit platforms, introduced by the previous fix. mysqld: sys_vars.h:125: Assertion `size == sizeof(T)' failed. 	9b2bb69c4a958604d6c5f92f40d651f82954fcec
----------------------------
Disable partition_debug_sync temporarily awaiting a patch from Mattias. 	ef5ef725e359ec5714f36b4ca2a4e6282f198b88
----------------------------
Add configure.am to .bzrignore. 	dec27c317b36b4e8c662fb217e66731f18707944
----------------------------
"Bug #50296 Slave reconnects earlier than the prescribed slave_net_timeout value There was auto-reconnecting by slave earlier than a prescribed by slave_net_timeout value. The issue happened on 64bit solaris that spotted rather incorrect casting of the ulong slave_net_timeout into the uint of mysql.options.read_timeout. Notice, that there is no reason for slave_net_timeout to be of type of ulong. Since it's primarily passed as arg to mysql_options the type can be made as uint to avoid all conversion hassles. That's what the fixes are made. A ""side"" effect of the patch is a new value for the max of slave_net_timeout to be the max of the unsigned int type (therefore to vary across platforms). Note, a regression test can't be made to run reliably without making it to last over some 20 secs. That's why it is placed in suite/large_tests. "	e8de82d3d56e9feb7fb0024afaf798f42a47cd95
----------------------------
Bug#49823: mysql_upgrade fatal error due to general_log / slow_low CSV NULL The problem was that the CSV storage engine does not support NULL fields, yet in some early 5.1 version the log tables (general_log and slow_log) were created with null fields. On top of this, when altering a CSV table column, all fields of the table must be NOT NULL otherwise the alteration fails. The solution is to ensure that during upgrade all columns of the log tables are NOT NULL. 	5dd3b617d447658b6fe373975a24a1437a04af4e
----------------------------
crund - adjusted paths to new 7.1 jar/lib file layout; added local crund/config_sample/ dir. 	2b07d1f9b74340fa07a0fed9b5eeb4aac85d795c
----------------------------
Bug#41103      6.0 Windows embedded-server tests fail Two problems addressed here: Embedded-server linking failure. sql/sys_vars.cc absents in the libmysqld/CMakeLists.txt The PERFORMANCE_SCHEMA-related failure of the embedded-server compilation. We try to disable the PERFORMANCE_SCHEMA in the embedded server as it's considered useless there. But we do it in wrong way as we only disable header's links to the PF, not the PF's library itself. So on Unix-ex the embedded library still contains the PF code and grows bigger with no reason. On Windows that just fails to compile. per-file comments: include/my_global.h Bug#41103      6.0 Windows embedded-server tests fail No PERFORMANCE_SCHEMA disabling in the embedded server. User can just use the --without-perfschema-engine-plugin option to exclude it from the compilation. 	ec0f9feabbbce64b75590ab73c39cd59f2fbddb8
----------------------------
Bug #51089   SHOW STATUS LIKE 'Slave_running' is not compatible with `SHOW SLAVE STATUS' backporting of bug@30703 to 5.1. The fixes are backed up with a regression test. 	c23aee47b190a5573de580e534bd9e02779db87f
----------------------------
"Followup to Bug#45225 Locking: hang if drop table with no timeout This patch prevents system threads and system table accesses from using user-specified values for ""lock_wait_timeout"". Instead all such accesses are done using the default value (1 year). This prevents background tasks (such as replication, events, accessing stored function definitions, logging, reading time-zone information, etc.) from failing in cases where the global value of ""lock_wait_timeout"" is set very low. The patch also simplifies the open tables API. Rather than adding another convenience function for opening and locking system tables, this patch removes most of the existing convenience functions for open_and_lock_tables_derived(). Before, open_and_lock_tables() was a convenience function that enforced derived tables handling, while open_and_lock_tables_derived() was the main function where derived tables handling was optional. Now, this convencience function is gone and the main function is renamed to open_and_lock_tables(). No test case added as it would have required the use of --sleep to check that system threads and system tables have a different timeout value from the user-specified ""lock_wait_timeout"" system variable. "	dd42aab8406e70caec4f58435c0281cddc8ea2c0
----------------------------
Merge: bca31a6 b416a55 Manual merge from mysql-trunk-merge. Conflicts: - client/mysql.cc - client/mysqldump.c - configure.in - mysql-test/r/csv.result - mysql-test/r/func_time.result - mysql-test/r/show_check.result - mysql-test/r/sp-error.result - mysql-test/r/sp.result - mysql-test/r/sp_trans.result - mysql-test/r/type_blob.result - mysql-test/r/type_timestamp.result - mysql-test/r/warnings.result - mysql-test/suite/rpl/r/rpl_sp.result - sql/mysql_priv.h - sql/mysqld.cc - sql/sp.cc - sql/sql_base.cc - sql/sql_table.cc - sql/sql_trigger.cc - sql/sql_view.cc - sql/table.h - sql/share/errmsg.txt - mysql-test/suite/sys_vars/r/log_bin_trust_routine_creators_basic.result 	04b8cb1882d895931380f2671fe942852e62bc24
----------------------------
BUG#51277 SUPER_ACL should be checked unconditionally (binlog_format and binlog_direct) SUPER_ACL should be checked unconditionally while verifying if the binlog_format or the binlog_direct_non_transactional_updates might be changed. Roughly speaking, both session values cannot be changed in the context of a transaction or a stored function. Note that changing the global value does not cause any effect until a new connection is created. So, we fixed the problem by first checking the permissions and right after further verifications are ignored if the global value is being updated. In this patch, we also re-structure the test case to make it more readable. 	2173e61833013f2973719d77d0f2a1141f9bb2e6
----------------------------
cleaning cmake includes, adding WITH_CLASSPATH option to configure.js 	d43e5fd716f1a231a9957384434ff3a2ada690d5
----------------------------
Merge: 8c31c4d a341ec7 Manual merge of mysql-5.1-bugteam to mysql-trunk-merge. Conflicts: Text conflict in client/mysqltest.cc Text conflict in configure.in Text conflict in mysql-test/include/mtr_warnings.sql 	92a5dd032365205beb5b14a347b3e681ce23da97
----------------------------
Bug#43201 : Stack overrun when running sp-error test. It appears that stack overflow checks for recusrive stored procedure calls, that run in the normal server, did not work in embedded and were dummified with preprocessor magic( #ifndef EMBEDDED_SERVER ). The fix is to remove ifdefs, there is no reason not to run overflow checks and crash in deeply recursive calls. Note: Start of the stack (thd->thread_stack variable) in embedded is not necessarily exact but stil provides the best guess. Unless the caller of mysql_read_connect()   is already deep in the stack, thd->thread_stack variable should approximate stack  start address well. 	94bd96e815333955974b53ca42e4480c8754b75c
----------------------------
"Bug #51414:  Arguments with embedded spaces are not correctly handled by configure wrapper. The bug was that ./configure was  passing paramers to subscripts as $@, and to handle embedded spaces it needs to be quoted as ""$@"". This resulting into a bug when ./configure was called e.g with CFLAGS='-m64 -Xstrconst'.. Additionally, fixed cmake/configure.pl did not handle environment variables passed on the command line. this is fixed in this push "	c88200172e0de06df30d4466f6c9de43a318b7ac
----------------------------
"Revert of a change introduced by Bug#47974 ""TYPE=storage_engine"" is deprecated, and will be removed in the Celosia release of MySQL.  Since the option is present in the Betony release and the version number of Celosia is still not decided, we need to bump the deprecation version number back up to ""6.0"". "	0d41207c591921345b4b2a00d0da8379de69ab50
----------------------------
Post-push fix for BUG#50364. There was an erroneous parameter when calling flush_master_info from write_ignored_events_info_to_relay_log which could lead to a server crash. This happens because the I/O thread releases the log_lock before calling the flush_master_info. Set the function to call flush_master_info with third parameter to true, so that the mutex is properly taken. 	1e638e728abb3ba75b62bbc01baf9cbe6c60e111
----------------------------
extend configure-like perl wrapper for INSTALL_FOODIR variables 	b2d289f3d799f0c9025572625347abaa488506f1
----------------------------
Fix configure.js : set the variabes in cache, so they can overwrite cache variables in CMakeLists.txt 	ab3ecf5a7cc0ddf5bf631d1abfcbddf744eed171
----------------------------
Fix some glitches with INSTALL_LAYOUT=STANDALONE - mysql_install_db is in scripts dir now - sql-bench is installed -some extra support-files (e.g ini) are in support-files 	0563ac784eedbdfe8a061d73895a01d98289d267
----------------------------
Add coverage of non-traditional upgrade orders to testUpgrade Upgrade_Api_Only - Performs no upgrade of kernel before Api is upgraded, then checks Api behaviour Upgrade_Api_Before_NR1 - Same as Upgrade_Api_Only, followed by NR1 (Node by Node rolling restart) Upgrade_Api_NDBD_MGMD - Upgrades Api first, then NDBD nodes (1 per ng at a time) then MGMD Upgrade_Mixed_MGMD_API_NDBD - Upgrades MGMD, NDBD, API then MGMD + NDBD Where the upgrade is not performed in the 'traditional' order, the postUpgrade program is invoked with the noddl argument.  This is done as : 1) 6.3 and 7.0 have specific DDL incompatibility due to schema transactions in 7.0 2) In general (and enforced in 7.0), DDL should not be possible in a mixed version configuration. New methods are added to NdbRestarter for querying running node versions. Additionally some small test framework issues are fixed: - A constant for the parser max line length is provided. - CpcClient checks that arguments passed to CPCD are not larger than the CPCD parser's maximum (512 bytes) - Set process environment part of Atrt modified to replace variables rather than append to the environment. - A small issue with Atrt mysql client reconnect is fixed 	b9e61453617be32fda956232b12eec2cee659743
----------------------------
Cleanup after push of WL#5154 - Remove deprecated 4.1 features The fix is the removal of the sql_log_update_basic test, as this option is deprecated and removed, and a minor change to the result file of lc_time_names_basic as the error message has changed. 	2da4521fb801d980470f21e48583337c882682d6
----------------------------
BUG#48993: valgrind errors in mysqlbinlog I found three issues during the analysis: 1. Memory leak caused by temp_buf not being freed; 2. Memory leak caused when handling argv; 3. Conditional jump that depended on unitialized values. Issue #1 -------- DESCRIPTION: when mysqlbinlog is reading from a remote location the event temp_buf references the incoming stream (in NET object), which is not freed by mysqlbinlog explicitly. On the other hand, when it is reading local binary log, it points to a temporary buffer that needs to be explicitly freed. For both cases, the temp_buf was not freed by mysqlbinlog, instead was set to 0.  This clearly disregards the free required in the second case, thence creating a memory leak. FIX: we make temp_buf to be conditionally freed depending on the value of remote_opt. Found out that similar fix is already in most recent codebases. Issue #2 -------- DESCRIPTION: load_defaults is called by parse_args, and it reads default options from configuration files and put them BEFORE the arguments that are already in argc and argv. This is done resorting to MEM_ROOT. However, parse_args calls handle_options immediately after which changes argv. Later when freeing the defaults, pointers to MEM_ROOT won't match, causing the memory not to be freed: void free_defaults(char **argv) { MEM_ROOT ptr memcpy_fixed((char*) &ptr,(char *) argv - sizeof(ptr), sizeof(ptr)); free_root(&ptr,MYF(0)); } FIX: we remove load_defaults from parse_args and call it before. Then we save argv with defaults in defaults_argv BEFORE calling parse_args (which inside can then call handle_options at will). Actually, found out that this is in fact kind of a backport for BUG#38468 into 5.1, so I merged in the test case as well and added error check for load_defaults call. Fix based on: revid:zhenxing.he@sun.com-20091002081840-uv26f0flw4uvo33y Issue #3 -------- DESCRIPTION: the structure st_print_event_info constructor would not initialize the sql_mode member, although it did for sql_mode_inited (set to false). This would later raise the warning in valgrind when printing the sql_mode in the event header, as this print out is protected by a check against sql_mode_inited and sql_mode variables. Given that sql_mode was not initialized valgrind would output the warning. FIX: we add initialization of sql_mode to the st_print_event_info constructor. 	fbf595d0fb70a27bce21a73f4deb144a18b9faf3
----------------------------
configure.in - Changes to the banner text - Use older AC_PROG_LIBTOOL (Bug#51009) scripts/mysql_install_db.sh - Changes to banner text 	df555c117cb9415e6076c48c94189c421837f4b0
----------------------------
branches/zip: fsp_init_file_page_low(): Declare the page uninitialized for Valgrind. 	ccc115b6783de96b5cb004b4154e5be5a36e3670
----------------------------
Bug #51248 Server start fails with MTR_VERSION=1 and code with WL5154 Replaced --default-character-set with --character-set-server Replaced --language with --lc-messages-dir NB full test suite not tested yet 	547f9acd528ad156a11acd5d542e2b00fe248446
----------------------------
Bug#48308. 1. Now test use fake_relay_log primitive 2. Added RESET SLAVE to include/setup_fake_relay_log.inc for removing relay log info file 3. Added RESET SLAVE to include/cleanup_fake_relay_log.inc 4. Test moved to rpl suite as rpl_binlog_auto_inc_bug33029.test 5. Updated result file 	ed76c63c30815f9812eca6ed0ac2266151106cf4
----------------------------
adding CPackWixConfig 	df312a95a06919faa4523f142661c05f3a30a5c3
----------------------------
"A fix and a test case for Bug#47648 ""main.merge fails sporadically"". If a prepared statement used both a MyISAMMRG table and a stored function or trigger, execution could fail with ""No such table"" error or crash. The error would come from a failure of the MyISAMMRG engine to meet the expectations of the prelocking algorithm, in particular maintain lex->query_tables_own_last pointer in sync with lex->query_tables_last pointer/the contents of lex->query_tables. When adding merge children, the merge engine would extend the table list. Then, when adding prelocked tables, the prelocking algorithm would use a pointer to the last merge child to assign to lex->query_tables_own_last. Then, when merge children were removed at the end of open_tables(), lex->query_tables_own_last was not updated, and kept pointing to a removed merge child. The fix ensures that query_tables_own_last is always in sync with lex->query_tables_last. This is a regression introduced by WL#4144 and present only in next-4284 tree and 6.0. "	dd510064f10ff60c77db06b948d35a3701f2685e
----------------------------
ndb - fix configure.in version 	f00374dfbe601f691f36224a796b7f14386e43dd
----------------------------
"Followup to Bug#45225 Locking: hang if drop table with no timeout This patch removes the unused server variable ""table_lock_wait_timeout"". "	96560266581a2c76f427412d4b8718655dc20f80
----------------------------
Bug#48929 Error in Accept() if using many file descriptors In POSIX systems, the file descriptor set used in the select(2) system call is represented by a bit vector of size FD_SETSIZE. When select(2) is used on file/socket descriptors with a value that is beyond this size, unpredictable errors may occur. In this case, the error happens when there are a large number of tables that need repair.  These tables are opened before the sockets for incoming connections are acquired, resulting in these sockets getting descriptor id which is higher than FD_SETSIZE. Replacing the call to select(2) with poll(2) fixes the problem, as poll takes an array of the wanted descriptors, instead of a bit vector. MS Windows has a different implementation of 'select', and is not affected by this bug. 	6f80e0697dc84b102ac5f940d6ca711c532d95c1
----------------------------
Merge: 33f40fe f68fbf2 Null-merge (configure.in) from mysql-trunk. 	9f6a63497fec6c7969cd35fe4d3db0e3fcc58dbb
----------------------------
Merge: 0c4b0e9 f6df177 Manual merge from mysql-5.1. Conflicts ========= Text conflict in mysql-test/extra/rpl_tests/rpl_loaddata.test Conflict adding file mysql-test/extra/rpl_tests/rpl_mixing_engines.inc.  Moved existing file to mysql-test/extra/rpl_tests/rpl_mixing_engines.inc.moved. Text conflict in mysql-test/extra/rpl_tests/rpl_row_func003.test Text conflict in mysql-test/include/setup_fake_relay_log.inc Text conflict in mysql-test/r/mysqlbinlog.result Text conflict in mysql-test/suite/binlog/r/binlog_killed_simulate.result Text conflict in mysql-test/suite/binlog/r/binlog_row_mix_innodb_myisam.result Text conflict in mysql-test/suite/binlog/r/binlog_unsafe.result Text conflict in mysql-test/suite/binlog/t/binlog_unsafe.test Text conflict in mysql-test/suite/rpl/r/rpl_loaddata.result Text conflict in mysql-test/suite/rpl/r/rpl_loaddata_fatal.result Text conflict in mysql-test/suite/rpl/r/rpl_loaddata_map.result Text conflict in mysql-test/suite/rpl/r/rpl_sp.result Text conflict in mysql-test/suite/rpl/r/rpl_stm_log.result Text conflict in mysql-test/suite/rpl/t/rpl_optimize.test Text conflict in mysql-test/t/mysqlbinlog.test Text conflict in sql/event_db_repository.cc Text conflict in sql/events.cc Text conflict in sql/log.cc Text conflict in sql/log_event.cc Text conflict in sql/log_event_old.cc Text conflict in sql/mysql_priv.h Text conflict in sql/mysqld.cc Text conflict in sql/rpl_utility.h Text conflict in sql/set_var.cc Text conflict in sql/sp.cc Text conflict in sql/sql_acl.cc Text conflict in sql/sql_base.cc Text conflict in sql/sql_db.cc Text conflict in sql/sql_delete.cc Text conflict in sql/sql_insert.cc Text conflict in sql/sql_load.cc Text conflict in sql/sql_table.cc Text conflict in sql/sql_udf.cc Text conflict in sql/sql_update.cc Text conflict in sql/sql_view.cc Text conflict in sql/sql_yacc.yy 	bb9b9fc31954c165b04efd3ebcc56a7a0dd0e20e
----------------------------
"Followup to Bug#34604 handler::ha_rnd_end(): Assertion `inited==RND' failed. The test case for this bug relies on getting a ER_LOCK_WAIT_TIMEOUT error. However with the introduction of MDL, the test would hang forever since the metadata locks would not timeout. MDL timeouts are now introduced in the scope of Bug#45225. This patch changes the testcase for Bug#34604 to set the new server variable ""lock_wait_timeout"" to one second which makes the test generate the necessary timeout again. "	affdd53394fc7644f03963f1ed4b1abcdb164a43
----------------------------
"Bug #45225 Locking: hang if drop table with no timeout This patch introduces timeouts for metadata locks. The timeout is specified in seconds using the new dynamic system variable  ""lock_wait_timeout"" which has both GLOBAL and SESSION scopes. Allowed values range from 1 to 31536000 seconds (= 1 year). The default value is 1 year. The new server parameter ""lock-wait-timeout"" can be used to set the default value parameter upon server startup. ""lock_wait_timeout"" applies to all statements that use metadata locks. These include DML and DDL operations on tables, views, stored procedures and stored functions. They also include LOCK TABLES, FLUSH TABLES WITH READ LOCK and HANDLER statements. The patch also changes thr_lock.c code (table data locks used by MyISAM and other simplistic engines) to use the same system variable. InnoDB row locks are unaffected. One exception to the handling of the ""lock_wait_timeout"" variable is delayed inserts. All delayed inserts are executed with a timeout of 1 year regardless of the setting for the global variable. As the connection issuing the delayed insert gets no notification of delayed insert timeouts, we want to avoid unnecessary timeouts. It's important to note that the timeout value is used for each lock acquired and that one statement can take more than one lock. A statement can therefore block for longer than the lock_wait_timeout value before reporting a timeout error. When lock timeout occurs, ER_LOCK_WAIT_TIMEOUT is reported. Test case added to lock_multi.test. "	5bb67f34b864ea40c74dc729fdc960de13718ab3
----------------------------
"WL#2649 Number-to-string conversions added: include/ctype_numconv.inc mysql-test/include/ctype_numconv.inc mysql-test/r/ctype_binary.result mysql-test/t/ctype_binary.test Adding tests modified: mysql-test/r/bigint.result mysql-test/r/case.result mysql-test/r/create.result mysql-test/r/ctype_cp1251.result mysql-test/r/ctype_latin1.result mysql-test/r/ctype_ucs.result mysql-test/r/func_gconcat.result mysql-test/r/func_str.result mysql-test/r/metadata.result mysql-test/r/ps_1general.result mysql-test/r/ps_2myisam.result mysql-test/r/ps_3innodb.result mysql-test/r/ps_4heap.result mysql-test/r/ps_5merge.result mysql-test/r/show_check.result mysql-test/r/type_datetime.result mysql-test/r/type_ranges.result mysql-test/r/union.result mysql-test/suite/ndb/r/ps_7ndb.result mysql-test/t/ctype_cp1251.test mysql-test/t/ctype_latin1.test mysql-test/t/ctype_ucs.test mysql-test/t/func_str.test Fixing tests @ sql/field.cc - Return str result using my_charset_numeric. - Using real multi-byte aware str_to_XXX functions to handle tricky charset values propely (e.g. UCS2) @ sql/field.h - Changing derivation of non-string field types to DERIVATION_NUMERIC. - Changing binary() for numeric/datetime fields to always return TRUE even if charset is not my_charset_bin. We need this to keep ha_base_keytype() return HA_KEYTYPE_BINARY. - Adding BINARY_FLAG into some fields, because it's not being set automatically anymore with ""my_charset_bin to my_charset_numeric"" change. - Changing derivation for numeric/datetime datatypes to a weaker value, to make ""SELECT concat('string', field)"" use character set of the string literal for the result of the function. @ sql/item.cc - Implementing generic val_str_ascii(). - Using max_char_length() instead of direct read of max_length to make ""tricky"" charsets like UCS2 work. NOTE: in the future we'll possibly remove all direct reads of max_length - Fixing Item_num::safe_charset_converter(). Previously it alligned binary string to character string (for example by adding leading 0x00 when doing binary->UCS2 conversion). Now it just converts from my_charset_numbner to ""tocs"". - Using val_str_ascii() in Item::get_time() to make UCS2 arguments work. - Other misc changes @ sql/item.h - Changing MY_COLL_CMP_CONV and MY_COLL_ALLOW_CONV to bit operations instead of hard-coded bit masks. - Addding new method DTCollation.set_numeric(). - Adding new methods to Item. - Adding helper functions to make code look nicer: agg_item_charsets_for_string_result() agg_item_charsets_for_comparison() - Changing charset for Item_num-derived items from my_charset_bin to my_charset_numeric (which is an alias for latin1). @ sql/item_cmpfunc.cc - Using new helper functions - Other misc changes @ sql/item_cmpfunc.h - Fixing strcmp() to return max_length=2. Previously it returned 1, which was wrong, because it did not fit '-1'. @ sql/item_func.cc - Using new helper functions - Other minor changes @ sql/item_func.h - Removing unused functions - Adding helper functions agg_arg_charsets_for_string_result() agg_arg_charsets_for_comparison() - Adding set_numeric() into constructors of numeric items. - Using fix_length_and_charset() and fix_char_length() instead of direct write to max_length. @ sql/item_geofunc.cc - Changing class for Item_func_geometry_type and Item_func_as_wkt from Item_str_func to Item_str_ascii_func, to make them return UCS2 result properly (when character_set_connection=ucs2). @ sql/item_geofunc.h - Changing class for Item_func_geometry_type and Item_func_as_wkt from Item_str_func to Item_str_ascii_func, to make them return UCS2 result properly (when @@character_set_connection=ucs2). @ sql/item_strfunc.cc - Implementing Item_str_func::val_str(). - Renaming val_str to val_str_ascii for some items, to make them work with UCS2 properly. - Using new helper functions - All single-argument functions that expect string result now call this method: agg_arg_charsets_for_string_result(collation, args, 1); This enables character set conversion to @@character_set_connection in case of pure numeric input. @ sql/item_strfunc.h - Introducing Item_str_ascii_func - for functions which return pure ASCII data, for performance purposes, as well as for the cases when the old implementation of val_str() was heavily 8-bit oriented and implementing a UCS2-aware version is tricky. @ sql/item_sum.cc - Using new helper functions. @ sql/item_timefunc.cc - Using my_charset_numeric instead of my_charset_bin. - Using fix_char_length(), fix_length_and_charset() and fix_length_and_charset_datetime() instead of direct write to max_length. - Using tricky-charset aware function str_to_time_with_warn() @ sql/item_timefunc.h - Using new helper functions for charset and length initialization. - Changing base class for Item_func_get_format() to make it return UCS2 properly (when character_set_connection=ucs2). @ sql/item_xmlfunc.cc - Using new helper function @ sql/my_decimal.cc - Adding a new DECIMAL to CHAR converter with real multibyte support (e.g. UCS2) @ sql/mysql_priv.h - Introducing a new derivation level for numeric/datetime data types. - Adding macros for my_charset_numeric and MY_REPERTOIRE_NUMERIC. - Adding prototypes for str_set_decimal() - Adding prototypes for character-set aware str_to_xxx() functions. @ sql/protocol.cc - Changing charsetnr to ""binary"" client-side metadata for numeric/datetime data types. @ sql/time.cc - Adding to_ascii() helper function, to convert a string in any character set to ascii representation. In the future can be extended to understand digits written in various non-Latin word scripts. - Adding real multy-byte character set aware versions for str_to_XXXX, to make these these type of queries work correct: INSERT INTO t1 SET datetime_column=ucs2_expression; @  strings/ctype-ucs2.c - endptr was not calculated correctly. INSERTing of UCS2 values into numeric columns returned warnings about truncated wrong data. "	1094ffd572ebd533aa9b61d42ceaccc957f8e6c2
----------------------------
BUG#51021: current_stmt_binlog_row_based not removed in next-mr A closely related problem, hardly worth a new bug report: Removed a spurious call to: thd->set_current_stmt_binlog_format_row_if_mixed() in sql_base.cc:lock_tables(). 	f4f4a2c780166cb93414839bc87fc5ff14b3e38f
----------------------------
BUG#51021: current_stmt_binlog_row_based not removed in next-mr As part of BUG@39934 fix, the public: - THD::current_stmt_binlog_row_based variable had been removed and replaced by a private variable: - THD::current_stmt_binlog_format. THD was refactored and some modifiers and accessors were implemented for the new variable. However, due to a bad merge, the THD::current_stmt_binlog_row_based variable is back as a public member of THD. This in itself is already potentially harmful. What's even worse is that while merging some more patches and resolving conflicts, the variable started being used again, which is obviously wrong. To fix this we: 1. remove the extraneous variable from sql_class.h 2. revert a bad merge for BUG#49132 3. merge BUG#49132 properly again (actually, making use of the cset used to merge the original patch to mysql-pe). 	9ba558302bbe95595c10175d34d4bf733da76fd7
----------------------------
"Bug#47974 'TYPE=storage_engine' is deprecated and will be removed in MySQL 6.0 CREATE TABLE... TYPE= returns the warning ""The syntax 'TYPE=storage_engine' is deprecated and will be removed in MySQL 6.0. Please use 'ENGINE=storage_engine' instead"" This syntax is deprecated already from version 5.4.4, so the message has been changed. In addition, the deprecation macro was changed to reflect the ServerPT decision not to include version number in the warning message. A number of test result files have been changed as a consequence of the change in the deprecation macro. "	a1e10b01f90b9695d46604dfff47f2f5193ec571
----------------------------
Merge: a93d838 29b7338 Manual merge of mysql-5.1-bugteam into mysql-trunk-merge. Conflicts: Text conflict in .bzr-mysql/default.conf Text conflict in mysql-test/suite/rpl/r/rpl_slow_query_log.result Text conflict in mysql-test/suite/rpl/t/rpl_slow_query_log.test Conflict adding files to server-tools.  Created directory. Conflict because server-tools is not versioned, but has versioned children.  Versioned directory. Conflict adding files to server-tools/instance-manager.  Created directory. Conflict because server-tools/instance-manager is not versioned, but has versioned children.  Versioned directory. Contents conflict in server-tools/instance-manager/options.cc Text conflict in sql/mysqld.cc 	017c9698965ea4eac378d5ff9d8f9312e5b51e8e
----------------------------
"Merge: a93d838 f6df177 Upmerge ""configure.in"" text change from 5.1 to 5.5 (""trunk""), fixing bug#50950. "	fc5e9a4a5442cf6d775c133fc13021a6fe8a7b14
----------------------------
"Merge: 1c9ab8d 15728d0 Upmerge ""configure.in"" text change from 5.0 to 5.1, fixing bug#50950. "	f6df1770fc17da804a88825444efb217a21dec85
----------------------------
"Bug#50950   	Obsolete reference to www.mysql.com in message printed at end of configure New text for the success message of ""configure"". "	15728d0721c88799f759db5f2fd97baa2d9d1d4b
----------------------------
BUG#50620: Adding an index to a table prevents slave from logging into slow log While processing a statement, down the mysql_parse execution stack, the thd->enable_slow_log can be assigned to opt_log_slow_admin_statements, depending whether one is executing administrative statements, such as ALTER TABLE, OPTIMIZE, ANALYZE, etc, or not. This can have an impact on slow logging for statements that are executed after an administrative statement execution is completed. When executing statements directly from the user this is fine because, the thd->enable_slow_log is reset right at the beginning of the dispatch_command function, ie, everytime a new statement is set is set to execute. On the other hand, for slave SQL thread (sql_thd) the story is a bit different. When in SBR the sql_thd applies statements by calling mysql_parse. Right after, it calls log_slow_statement function to log them if they take too long. Calling mysql_parse directly is fine, but also means that dispatch_command function is bypassed. As a consequence, thd->enable_slow_log does not get a chance to be reset before the next statement to be executed by the sql_thd. If the statement just executed by the sql_thd was an administrative statement and logging of admin statements was disabled, this means that sql_thd->enable_slow_log will be set to 0 (disabled) from that moment on. End result: sql_thd stops logging slow statements. We fix this by resetting the value of sql_thd->enable_slow_log to the value of opt_log_slow_slave_statements right after log_slow_stement is called by the sql_thd. 	d0c74a61b220bb67431d0f9804ff44c93f7971bd
----------------------------
"BUG#48632: Fix for Bug #23300 Has Not Been Backported To 5.x Release Notes ===== This is a backport of BUG#23300 into 5.1 GA. Original cset revid (in betony): luis.soares@sun.com-20090929140901-s4kjtl3iiyy4ls2h Description =========== When using replication, the slave will not log any slow query logs queries replicated from the master, even if the option ""--log-slow-slave-statements"" is set and these take more than ""log_query_time"" to execute. In order to log slow queries in replicated thread one needs to set the --log-slow-slave-statements, so that the SQL thread is initialized with the correct switch. Although setting this flag correctly configures the slave thread option to log slow queries, there is an issue with the condition that is used to check whether to log the slow query or not. When replaying binlog events the statement contains the SET TIMESTAMP clause which will force the slow logging condition check to fail. Consequently, the slow query logging will not take place. This patch addresses this issue by removing the second condition from the log_slow_statements as it prevents slow queries to be binlogged and seems to be deprecated. "	1458896dca020ac0b8d8a857e4bb45b051660ee6
----------------------------
Merge: 40d93c7 4c8fd3c Manual merger from mysql-trunk-merge. Conflicts: - configure.in 	8bf60770a588e3227aafd5746afe2ea337adb5a5
----------------------------
Merge: 9d55dab 480663e Manual merge from mysql-trunk-merge. Conflicts: - configure.in 	40d93c7167c41b1f4f4bfd75943d845dc8d20414
----------------------------
Merge: f62f1a5 21a6569 Manual merge from mysql-5.1-bugteam. Conflicts: - configure.in - mysql-test/include/setup_fake_relay_log.inc - sql/sql_select.cc 	4c8fd3cf57f17b3506bad12245ba435f7a4498af
----------------------------
"BUG#50364: FLUSH LOGS crashes the server (rpl.rpl_heartbeat_basic fails in PB sporadically) The IO thread can concurrently access the relay log IO_CACHE while another thread is performing an FLUSH LOGS procedure. FLUSH LOGS closes and reopens the relay log and while doing so it (re)initializes its IO_CACHE. During this procedure the IO_CACHE mutex is also reinitialized, which can cause problems if some other thread (namely the IO THREAD) is concurrently accessing it at the time . This patch fixes the problem by extending the interface of the flush_master_info function to also include a second paramater, ""need_relay_log_lock"", stating whether the thread should grab the relay log lock or not before actually flushing the relay log. Also, IO thread now calls flush_master_info with this flag set when it flushes master info with in the event read_event loop. Finally, we also increase loop time in rpl_heartbeat_basic test case, so that the number of calls to flush logs doubles, stressing this part of the code a little more. "	d0ffa8e51b104839a9e397aacda8ca1f110e3fad
----------------------------
Bug #50786 Assertion `thd->mdl_context.trans_sentinel() == __null' failed in open_ltable() The problem was too restrictive asserts that enforced that open_ltable() was called without any active HANDLERs, LOCK TABLES or global read locks. However, this can happen in several cases when opening system tables. The assert would, for example, be triggered when drop function was called from a connection with active HANDLERs as this would cause open_ltable() to be called for mysql.proc. The assert could also be triggered when using table-based general log (mysql.general_log). This patch removes the asserts since they will be triggered in several legitimate cases and because the asserts are no longer relevant due to changes in how locks are released. The patch also fixes set_needs_thr_lock_abort() that before ignored its parameter and always set the member variable to TRUE. Test case added to mdl_sync.test. Thanks to Dmitry Lenev for help with this bug! 	e190a415b45e31514c6d5ac73a9832134edb2767
----------------------------
"Adjuster the parsing of ""configure.in"" version number line "	21a6569952dfa8afb65e163197f9aec2f53eace8
----------------------------
"Fix for bug #50784 ""MDL: Assertion `m_tickets.is_empty() || m_tickets.front() == m_trans_sentinel'"". Debug build of server crashed due to assert failure in MDL subsystem when one tried to execute multi-table REPAIR or OPTIMIZE in autocommit=0 mode. The assert failure occured when multi-table REPAIR or OPTIMIZE started processing of second table from its table list and tried to acquire upgradable metadata lock on this table. The cause of the assert failure were MDL locks left over from processing of previous table. It turned out that in autocommit=0 mode close_thread_tables() which happens at the end of table processing doesn't release metadata locks. This fix solves problem by releasing locks explicitly using MDL_context::release_trans_locks() call. "	0ede71256f58f0298f473277e9f03d62fc81a85a
----------------------------
When using SIGNCODE parameter, check that signing of test executable reaööy works. If not,  write warning and disable signing Also, set SIGNCODE in mysql_release build configuration. 	b6779a71c448a77460a2be0ce9a9e0e30b5bbe92
----------------------------
Cleanup fix  for WL#5154 that splits commands handling for --default-character-set and --character-set-server such that only the first will give a deprecation warning. Apart from that, the two options should do the same. 	632cf4c5023ca8e714c5e250662ece59678f7c59
----------------------------
"BUG#47639: The rpl_binlog_corruption test fails on Windows The test case rpl_binlog_corruption fails on windows because when adding a line to the binary log index file it gets terminated with a CR+LF (which btw, is the normal case in windows, but not on Unixes - LF). This causes mismatch between the relay log names, causing mysqld to report that it cannot find the log file. We fix this by creating the instrumented index file through mysql, ie, using SELECT ... INTO DUMPFILE ..., as opposed on relying on ultimatly OS commands like: -- echo ""..."" > index. These changes go into the file and make the procedure platform independent: include/setup_fake_relay_log.inc Side note: when using SELECT ... INTO DUMPFILE ..., one needs to check if mysqld is running with secure_file_priv. If it is, we do it in two steps: 1. create the file on the allowed location; 2. move it to the datadir. If it is not, then we just create the file directly on the datadir (so previous step 2. is not needed). "	d8bd11e5b1e9171de67967bf1bf2b4457de06692
----------------------------
Merge: 865c03f b4d483a Merge config files updates from 7.0 	da982e01afdb98fd1da4b5d002e28dac0f80ae8d
----------------------------
ATRT config files used in Trondheim 	b4d483a803723bb9eca286d19372bffcdbffae06
----------------------------
"BUG#50351 - ft_min_word_len=2 Causes query to hang Performing fulltext prefix search (a word with truncation operator) may cause a dead-loop. ft_min_word_len value doesn't matter actually. The problem was introduced along with ""smarter index merge"" optimization. "	37934f862ec7952f6baeb5c5c323e37b151aa298
----------------------------
Remove binlog_direct_non_transactional_updates_basic.test and binlog_direct_non_transactional_updates_basic.result. They will be added by a cherry-picking merge from mysql-next-mr-bugfixing (Bug#50766). 	562c6046d4273e946872910baa411cf551a292af
----------------------------
"Implement new type-of-operation-aware metadata locks. Add a wait-for graph based deadlock detector to the MDL subsystem. Fixes bug #46272 ""MySQL 5.4.4, new MDL: unnecessary deadlock"" and bug #37346 ""innodb does not detect deadlock between update and alter table"". The first bug manifested itself as an unwarranted abort of a transaction with ER_LOCK_DEADLOCK error by a concurrent ALTER statement, when this transaction tried to repeat use of a table, which it has already used in a similar fashion before ALTER started. The second bug showed up as a deadlock between table-level locks and InnoDB row locks, which was ""detected"" only after innodb_lock_wait_timeout timeout. A transaction would start using the table and modify a few rows. Then ALTER TABLE would come in, and start copying rows into a temporary table. Eventually it would stumble on the modified records and get blocked on a row lock. The first transaction would try to do more updates, and get blocked on thr_lock.c lock. This situation of circular wait would only get resolved by a timeout. Both these bugs stemmed from inadequate solutions to the problem of deadlocks occurring between different locking subsystems. In the first case we tried to avoid deadlocks between metadata locking and table-level locking subsystems, when upgrading shared metadata lock to exclusive one. Transactions holding the shared lock on the table and waiting for some table-level lock used to be aborted too aggressively. We also allowed ALTER TABLE to start in presence of transactions that modify the subject table. ALTER TABLE acquires TL_WRITE_ALLOW_READ lock at start, and that block all writes against the table (naturally, we don't want any writes to be lost when switching the old and the new table). TL_WRITE_ALLOW_READ lock, in turn, would block the started transaction on thr_lock.c lock, should they do more updates. This, again, lead to the need to abort such transactions. The second bug occurred simply because we didn't have any mechanism to detect deadlocks between the table-level locks in thr_lock.c and row-level locks in InnoDB, other than innodb_lock_wait_timeout. This patch solves both these problems by moving lock conflicts which are causing these deadlocks into the metadata locking subsystem, thus making it possible to avoid or detect such deadlocks inside MDL. To do this we introduce new type-of-operation-aware metadata locks, which allow MDL subsystem to know not only the fact that transaction has used or is going to use some object but also what kind of operation it has carried out or going to carry out on the object. This, along with the addition of a special kind of upgradable metadata lock, allows ALTER TABLE to wait until all transactions which has updated the table to go away. This solves the second issue. Another special type of upgradable metadata lock is acquired by LOCK TABLE WRITE. This second lock type allows to solve the first issue, since abortion of table-level locks in event of DDL under LOCK TABLES becomes also unnecessary. Below follows the list of incompatible changes introduced by this patch: - From now on, ALTER TABLE and CREATE/DROP TRIGGER SQL (i.e. those statements that acquire TL_WRITE_ALLOW_READ lock) wait for all transactions which has *updated* the table to complete. - From now on, LOCK TABLES ... WRITE, REPAIR/OPTIMIZE TABLE (i.e. all statements which acquire TL_WRITE table-level lock) wait for all transaction which *updated or read* from the table to complete. As a consequence, innodb_table_locks=0 option no longer applies to LOCK TABLES ... WRITE. - DROP DATABASE, DROP TABLE, RENAME TABLE no longer abort statements or transactions which use tables being dropped or renamed, and instead wait for these transactions to complete. - Since LOCK TABLES WRITE now takes a special metadata lock, not compatible with with reads or writes against the subject table and transaction-wide, thr_lock.c deadlock avoidance algorithm that used to ensure absence of deadlocks between LOCK TABLES WRITE and other statements is no longer sufficient, even for MyISAM. The wait-for graph based deadlock detector of MDL subsystem may sometimes be necessary and is involved. This may lead to ER_LOCK_DEADLOCK error produced for multi-statement transactions even if these only use MyISAM: session 1:         session 2: begin; update t1 ...      lock table t2 write, t1 write; -- gets a lock on t2, blocks on t1 update t2 ... (ER_LOCK_DEADLOCK) - Finally,  support of LOW_PRIORITY option for LOCK TABLES ... WRITE was abandoned. LOCK TABLE ... LOW_PRIORITY WRITE from now on has the same priority as the usual LOCK TABLE ... WRITE. SELECT HIGH PRIORITY no longer trumps LOCK TABLE ... WRITE  in the wait queue. - We do not take upgradable metadata locks on implicitly locked tables. So if one has, say, a view v1 that uses table t1, and issues: LOCK TABLE v1 WRITE; FLUSH TABLE t1; -- (or just 'FLUSH TABLES'), an error is produced. In order to be able to perform DDL on a table under LOCK TABLES, the table must be locked explicitly in the LOCK TABLES list. "	afd15c43a9103c47389835105489acd07d64e014
----------------------------
ndb_config.m4 cleanup and ndbjtie .hpp dist fix 	11898113ad4c0337f4886c7cdfc03176cc03372e
----------------------------
ndb - bug#50717 - release TTFM before existing ConfigManager (by deleting SignalSender) to avoid hanging shutdowns 	d6692feab48d4af7ff30de79cfcebebad34d90e2
----------------------------
Fix syntax errors in configure.cmake 	513027f4fd79fe0fac5ab712b857b13075de9293
----------------------------
Add windows  system check cache that prevents tests from running, most are irrelevant anyway Add cached variable WITH_XXX_STORAGE_ENGINE for dynamic plugins that can be static or dynamic. 	f719e51f8b317137fc7f380d290b4379d24aad06
----------------------------
Bug #49552 : sql_buffer_result cause crash + not found records in multitable delete/subquery SQL_BUFFER_RESULT should not have an effect on non-SELECT statements according to our documentation. Fixed by not passing it through to multi-table DELETE (similarly to how it's done for multi-table UPDATE). 	5de67f2045be3efd3261be0cc9731bf22aab81ae
----------------------------
Merge: 7d5bb84 6e351da Bug #49210 Enable MTR timeout configuration through environment variables Define env. vars for both timeout settings Also incorporated 5.0 patch into mtr version 1 	f363fece5e2bb80bdcec800d73e5c1a3b84fb2b2
----------------------------
Bug #49210 Enable MTR timeout configuration through environment variables Define env. vars for both timeout settings This patch is for 5.0 (mtr v1) and should replaces for 5.1 up 	6e351da89bc3d4c1624ab28e23748656e8a12192
----------------------------
Bug #47905 stored procedures with conditional statements not being logged to slow query log The problem is that the execution time for a multi-statement stored procedure as a whole may not be accurate, and thus not be entered into the slow query log even if the total time exceeds long_query_time. The reason for this is that THD::utime_after_lock used for time calculation may be reset at the start of each new statement, possibly leaving the total SP execution equal to the time spent executing the last statement in the SP. This patch stores the utime on start of SP execution, and restores it on exit of SP execution. A test is added. 	c1a6dc5084cd91bfbaa7d0bb68d5a3a5b98dc031
----------------------------
Bug#49534: multitable IGNORE update with sql_safe_updates error causes debug assertion The IGNORE option of the multiple-table UPDATE command was not intended to suppress errors caused by the sql_safe_updates mode. This flag will raise an error if the execution of UPDATE does not use a key for row retrieval, and should continue do so regardless of the IGNORE option. However the implementation of IGNORE does not support exceptions to the rule; it always converts errors to warnings and cannot be extended. The Internal_error_handler interface offers the infrastructure to handle individual errors, making sure that the error raised by sql_safe_updates is not silenced. Fixed by implementing an Internal_error_handler and using it for UPDATE IGNORE commands. 	2a22dc2e01202a04f8e1cb6e787d3ef5e35977d2
----------------------------
Bug#50409 Solaris 8 compatibility broken by assumption about printstack() being present When Bug#47391 was fixed, no assumption was made that support for Solaris 8 was needed. Solaris 8 lacks printstack(), and the build breaks because of this. This patch adds a test for the presence of printstack() to configure.in for 5.0, and uses HAVE_PRINTSTACK to make decisions rather than the __sun define. 	e3dd88c8563b8698180340a78daa9d8ba6630c66
----------------------------
Bug #49191  rpl_get_master_version_and_clock failed on PB2: COM_REGISTER_SLAVE failed The 'rpl_get_master_version_and_clock' test verifies if the slave I/O thread tries to reconnect to master when it tries to get the values of the UNIX_TIMESTAMP, SERVER_ID from master under network disconnection. So the master server is restarted for making the transient network disconnection, during the period the COM_REGISTER_SLAVE failures are produced in server log file when the slave I/O thread tries to register on master. To fix the problem, suppress COM_REGISTER_SLAVE failures in server log file by mtr suppression, because they are expected. 	73cfad9ff426212d4d88f4cd8d86c1a3d67c1790
----------------------------
Added AIX, OS400 and Cygwin. This finishes of moving code from configure.cmake IF()'s to platform specific files 	8d74e5c50e65d746c4afd408ea5a3d74aa01c885
----------------------------
"Bug #45855  	row events in binlog after switch from binlog_fmt=mix to stmt with open tmp tbl Bug #45856  	can't switch from binlog_format=row to mix with open tmp tbl If binlog_format=MIXED, there are open temporary tables, an unsafe statement is executed, and the user issues 'SET @@session.binlog_format = STATEMENT', then subsequent DML statements will be written in row format despite binlog_format=STATEMENT. Because the binlog format can't be reset to statement based by 'reset_current_stmt_binlog_row_based' function. If binlog_format=ROW, there are open temporary tables, and an unsafe statement is executed, then the statement 'SET @@session.binlog_format = MIXED' generates the error: ""Cannot switch out of the row-based binary log format when the session has open temporary tables"" However, it is safe to switch to MIXED mode because events in row format are allowed. To fix the above two problems, generate ER_TEMP_TABLE_PREVENTS_SWITCH_OUT_OF_RBR and forbid switching from MIXED or ROW to STATEMENT when there are open temp tables and we are logging in row format. There is no error in any other case. "	0c4b0e9a3aad7550da2980af0db06a277687e1c7
----------------------------
fix ndb_config 	1357c483d3050a91e6c49583fb8ae906b589b916
----------------------------
"Bug#50337 --defaults-file=~/something doesn't work anymore Before this fix, opening a configuration file located under ""~"" failed. To evaluate the ""~"" path, home_dir needs to be initialized. The 'home_dir' variable was initialized too late in my_init(). This fix: - moved the home_dir initialization from my_init() to my_basic_init(), using getenv(""HOME"")) - moved the initialization of my_umask / my_umask_dir also to my_basic_init(), to have all the my_umask / my_umask_dir init code in the same place. The second part is not strictly required, but makes the code more maintainable. Tested the fix manually. No MTR tests added, because MTR should not access or modify the $HOME directory of the user running tests. "	edb122134b6bf3bb3b65d35c58f6bf5baaf2ebdf
----------------------------
Make sys_vars.delayed_insert_limit_func experimental due to Bug 50435. 	deb6ded14ca3b8f2ce9c71c7f98bd91afcae854c
----------------------------
"Bug #47142 ""slave start until"" stops 1 event too late in 4.1 to 5.0 replication When replicating from 4.1 master to 5.0 slave START SLAVE UNTIL can stop too late. The necessary in calculating of the beginning of an event the event's length did not correspond to the master's genuine information at the event's execution time. That piece of info was changed at the event's relay-logging due to binlog_version<4 event conversion by IO thread. Fixed with storing the master genuine Query_log_event size into a new status variable at relay-logging of the event. The stored info is extacted at the event execution and participate further to caclulate the correct start position of the event in the until-pos stopping routine. The new status variable's algorithm will be only active when the event comes from the master of version < 5.0 (binlog_version < 4). "	1c0056b3ba34354c63026c541718529df735fbed
----------------------------
Fix typos : - opensolaris cmake package is SUNWcmake not SUNWCMake - it is configure.cmake not config.cmake 	1c0f30ae9a7968ed5d97cf444943498d8218389f
----------------------------
"In standalone package, default data subdirectory is ""data"", not ""var"" "	261a29e20ee852ef16cc1ef17caedb91d80efe09
----------------------------
Fix failing sys_vars.plugin_dir_basic - treat both '/' and '\' as path separators in get_relative_path() on Windows 	8ec9fdd4abfa63ed566f73b7ce487c68a157747e
----------------------------
Handle different installation layouts. using  cmake option INSTALL_LAYOUT=STANDALONE would produce the layout as in tar.gz or zip packages. INSTALL_LAYOUT=UNIX will produce unixish install layout  (with mysqld being in sbin subdirectory , libs in lib/mysql etc). This layout is used for RPM packages. Subtle differences in both packages unfortunately lead to the need to recompile MySQL to use with other package type - as otherwise for example default plugins or data directories would be wrong set. There are numerous other variables that  allow fine-tuning packaging layout. (INSTALL_BINDIR, INSTALL_LIBDIR , INSTALL_PLUGINDIR etc). This options are different from autotools as they do not expect full paths to directories, but only subdirectory of CMAKE_INSTALL_PREFIX. There are 2 special options that expect full directory paths - MYSQL_DATADIR that defines default MYSQL data directory (autotools equivalent is --localstatedir) - SYSCONFDIR  can be added to search my.cnf search path (autotools equivalent is --sysconfdir) 	c827968a2df5ad35e64cea0116abf862776cef26
----------------------------
add jardir to storage/ndb/config/common.mk.am for cluster/j 	15e33629fb96bed407ab7c4c0bc47bd68a087376
----------------------------
Applying InnoDB snapshot, fixes BUG#49396. Detailed revision comments: r6471 | calvin | 2010-01-16 01:43:27 +0200 (Sat, 16 Jan 2010) | 4 lines branches/5.1: fix bug#49396: main.innodb test fails in embedded mode Change replace_result by using $MYSQLD_DATADIR. Tested in both embedded mode and normal server mode. 	58ebdfaec011d5f44a2aae525cd2d95ead03fc4f
----------------------------
Applying InnoDB snapshot, fixes BUG#46193. Detailed revision comments: r6424 | marko | 2010-01-12 12:22:19 +0200 (Tue, 12 Jan 2010) | 16 lines branches/5.1: In innobase_initialize_autoinc(), do not attempt to read the maximum auto-increment value from the table if innodb_force_recovery is set to at least 4, so that writes are disabled. (Bug #46193) innobase_get_int_col_max_value(): Move the function definition before ha_innobase::innobase_initialize_autoinc(), because that function now calls this function. ha_innobase::innobase_initialize_autoinc(): Change the return type to void.  Do not attempt to read the maximum auto-increment value from the table if innodb_force_recovery is set to at least 4.  Issue ER_AUTOINC_READ_FAILED to the client when the auto-increment value cannot be read. rb://144 by Sunny, revised by Marko 	8f32c618421eb8ac893d010f59b1f7eba6c0608a
----------------------------
Bug#50513 Build failure with ifdef HAVE_OPENSSL + ifndef HAVE_YASSL When compiling wiht ./configure --with-ssl=/usr, which used OPEN_SSL but not YASSL, the code in sql/mysqld.cc failed to build because of an incomplete performance schema instrumentation. This fix implements properly the instrumentation for the rwlock used in openssl_lock_t. Verified that the code builds, and the ssl + performance schema tests do pass. 	cc8caa7d9ef6376bb41fa5262695538de70c075f
----------------------------
branches/innodb+: Merge revisions 6448:6504 from branches/zip: ------------------------------------------------------------------------ r6449 | marko | 2010-01-13 15:38:53 -0500 (Wed, 13 Jan 2010) | 18 lines branches/zip: lock_rec_validate_page(): Only validate the record queues when the thread is not holding a space->latch. When UNIV_DEBUG is defined while UNIV_SYNC_DEBUG is not, latching order violations will still occur and deadlocks will be possible. sync_thread_levels_nonempty_gen(): Renamed from sync_thread_levels_empty_gen().  Return the violating latch or NULL instead of FALSE or TRUE, except that there will be a ut_error before the non-NULL return. sync_thread_levels_empty_gen(): A macro that negates the return value of sync_thread_levels_nonempty_gen(). sync_thread_levels_contains(): New function, based on sync_thread_levels_nonempty_gen(). This should fix Issue #441. ------------------------------------------------------------------------ r6463 | marko | 2010-01-14 08:43:37 -0500 (Thu, 14 Jan 2010) | 5 lines branches/zip: page_copy_rec_list_end(), page_copy_rec_list_start(): Update PAGE_MAX_TRX_ID before attempting to compress the page.  This fixes Issue #382 (a debug assertion failure in page_zip_reorganize()) and reduces the generated redo log.  There was no bug or crash in non-debug builds. ------------------------------------------------------------------------ r6467 | inaam | 2010-01-14 13:46:00 -0500 (Thu, 14 Jan 2010) | 10 lines branches/zip rb://226 log_sys->written_to_all_lsn does not accurately represent the LSN upto which write and flush has taken place. Under a race condition it can fall behind log_sys->flushed_to_disk_lsn which is accurate. Besides written_to_all_lsn is redundant as currently InnoDB supports only one log group. Approved by: Heikki ------------------------------------------------------------------------ r6472 | calvin | 2010-01-15 18:53:47 -0500 (Fri, 15 Jan 2010) | 12 lines branches/zip: Merge revisions 6425:6471 from branches/5.1 to pick up the first part fix of bug49396. ------------------------------------------------------------------------ r6471 | calvin | 2010-01-15 17:43:27 -0600 (Fri, 15 Jan 2010) | 4 lines branches/5.1: fix bug#49396: main.innodb test fails in embedded mode Change replace_result by using $MYSQLD_DATADIR. Tested in both embedded mode and normal server mode. ------------------------------------------------------------------------ ------------------------------------------------------------------------ r6473 | calvin | 2010-01-15 18:58:16 -0500 (Fri, 15 Jan 2010) | 6 lines branches/zip: fix bug#49396: innodb.innodb-index test fails in embedded mode This is 2nd part of the fix for bug#49396. The 1st part is innodb.test. Tested in both embedded mode and normal server mode. ------------------------------------------------------------------------ r6498 | marko | 2010-01-21 04:22:52 -0500 (Thu, 21 Jan 2010) | 15 lines branches/zip: buf_page_get_gen(): Obey recv_no_ibuf_operations and do not call ibuf_merge_or_delete_for_page() in crash recovery, before the redo log has been applied. This could cure some hard-to-repeat, hard-to-explain bugs related to secondary indexes. A possible recipe to repeat the bug: 1. update a secondary index leaf page on a compressed table 2. evict the page from the buffer pool while it is still dirty 3. ibuf_insert() something for the page 4. crash 5. crash recovery; ibuf merge would be done too early, before applying redo log to the sec index page or the ibuf pages ------------------------------------------------------------------------ 	6b7f0fc9f30b81bc87d44be24898e4c46c172d89
----------------------------
"BUG#50473: rpl_sync fails on windows debug enabled binaries The test case was failing because it contained instructions to close/reopen files, when they were in use. This raises problems in windows. Example of such instruction: ---exec echo ""failure"" > $MYSQLD_SLAVE_DATADIR/$file The test also contains commands that are not platform agnostic. Example: --exec cat $MYSQLD_SLAVE_DATADIR/master.backup > \ $MYSQLD_SLAVE_DATADIR/master.info We fix this by just truncating the necessary file and write ""failure"" into it (ie, without closing the file). The platform specific instruction is removed from the test case as it seems redundant. "	27828ba8e76fe746a33d07753189d2a50359f7ce
----------------------------
Removes duplicate entry for ER_SLAVE_IGNORE_SERVER_IDS in errmsg.txt. Kept the one in that matched the location in errmsg-utf8.txt, ie after ER_UNKNOWN_LOCALE. 	47ac59608056bae83a3196e2feefe7d7631218e7
----------------------------
- another take on BUILD_CONFIG variable - use OPTION instead of SET for boolean variables to ensure option is in cache. Also use documented CMAKE_USE_MAKE_RULES_OVERRIDE feature instead of INCLUDE. - remove superfluous tests in innobase's CMakeLists.txt 	df2d0359d8c3f1c58d0f442692c92cdabc885a9d
----------------------------
Merge: dedfdb4 8a433bc Manual merge from mysql-trunk-merge. Conflicts: - configure.in - include/m_string.h - mysql-test/extra/rpl_tests/rpl_row_func003.test - mysql-test/r/mysqlbinlog.result - mysql-test/r/union.result - mysql-test/suite/binlog/r/binlog_killed_simulate.result - mysql-test/suite/binlog/r/binlog_row_mix_innodb_myisam.result - mysql-test/suite/binlog/r/binlog_unsafe.result - mysql-test/suite/binlog/t/binlog_unsafe.test - mysql-test/suite/rpl/r/rpl_loaddata_fatal.result - mysql-test/suite/rpl/r/rpl_loaddata_map.result - mysql-test/suite/rpl/r/rpl_stm_loaddata_concurrent.result - mysql-test/suite/rpl/r/rpl_stm_log.result - mysql-test/suite/rpl/t/rpl_optimize.test - mysql-test/t/mysqlbinlog.test - mysql-test/t/union.test - sql/rpl_utility.h - sql/sql_union.cc - strings/Makefile.am 	eacc937d48babce40829b729bb9dfe2711a43d17
----------------------------
Bug#43005 main.init_connect fails on Windows due to wrong quoting of args - The arguments are properly quoted when mtr.pl calls my_safe_process but unfortunately the all off when running with active state perl and stays in cygwin perl. - Extend the patch to only quote args that are not already quoted This a redo of previous commit, will be included in next push 	01795763f08d1dcc0d3e7f6426add597d53b0d6c
----------------------------
Fix end-of-line characters in mysql_release.cmake to be unix-conform make -DBUILD_CONFIG=mysql_release work 	7d1d78e5744a9b459584c12907373ccb8d7ed7d9
----------------------------
Fix  some problems found by kent. -lm is sometimes not linked, which causes errors about undefined rint() - FreeBSD embedded library does not link with the flags returned by mysql_config (added -lcrypt to LIBS, whereby causing overlinking in case of normal non-embedded client) 	ce59ee8098e22d99f402eea1b9d2d5de62a0caaf
----------------------------
branches/zip: Merge revisions 6425:6471 from branches/5.1 to pick up the first part fix of bug49396. ------------------------------------------------------------------------ r6471 | calvin | 2010-01-15 17:43:27 -0600 (Fri, 15 Jan 2010) | 4 lines branches/5.1: fix bug#49396: main.innodb test fails in embedded mode Change replace_result by using $MYSQLD_DATADIR. Tested in both embedded mode and normal server mode. ------------------------------------------------------------------------ 	20b55b55a0911e458d556780b11949d789d67f84
----------------------------
branches/5.1: fix bug#49396: main.innodb test fails in embedded mode Change replace_result by using $MYSQLD_DATADIR. Tested in both embedded mode and normal server mode. 	7acd931df6160b39e5312bc7c6a2848db4f2437c
----------------------------
"Fix for perfschema.binlog_stmt failure: Problem: The test case failed because: (i) warning text in result file differed from the warning output by the server, and (ii) binlog contents in result file did not show the statements logged wrapped in BEGIN/COMMIT as it is the case after WL 2687. Solution: We update the result file, but first we change the unsafe warning text to also refer to performance_schema table(s). This required changing the result files for existing test cases that provide output for warnings related to ER_BINLOG_UNSAFE_SYSTEM_TABLE. ""Grepping"" in result files, shows that only binlog_unsafe contained reference to such a warning. We also update the result file with the missing BEGIN/COMMIT statements. "	fe99d915932635cd3ce9f0ae9aa6e3235beb8d86
----------------------------
Augmented the rpl_ndb_binlog_format_errors to verify if a slave running in the STMT mode aborts the SQL Thread if it receives changes in ROW mode and such changes are not processed. 	9b0ae85aeae534f7ace5a365c1d5fc9627b20cb5
----------------------------
"Fix for Bug#50221 Server refuses to start from non-default installdir on Solaris 32-bit When starting mysqld it did not recognize most of the options given on the command line when it was compiled for 32-bit Solaris using Sun Studio compiler. The cause for this was that most of the entries in the my_long_options array contained ""garbage"" data. The garbage data was caused by a compiler bug. When initilizing the def_value member for the ""default-storage-engine"" entry it was initialized like this: (longlong)""MyISAM"" i.e. casting a 32 bit pointer to a 64 bit integer value. Due to the compiler bug only 4 bytes was allocated (instead of 8 bytes). This caused everything following this entry to be stored at a location that was 4 byte wrong. The fix/work-around for this problem is initialize the def_value for default-storage-engine in my_long_options to 0 and instead initialize the default_storage_engine variable to ""MyISAM"" in init_common_variables(). "	6559e92732a983c935acff7d0404c8eb4c3d817c
----------------------------
Fix CFLAGS passed to mysql_config, in case makefile generator is Makefile based 	912ce798ff440ca327cdd93c7832443f851226d7
----------------------------
branches/innodb+: Merge revisions 6364:6447 from branches/zip: ------------------------------------------------------------------------ r6367 | marko | 2009-12-28 15:39:19 +0200 (Mon, 28 Dec 2009) | 2 lines Changed paths: M /branches/zip/dict/dict0dict.c branches/zip: dict_index_add_to_cache(): Always free the index object, also when returning DB_CORRUPTION. ------------------------------------------------------------------------ r6425 | marko | 2010-01-12 13:47:11 +0200 (Tue, 12 Jan 2010) | 45 lines Changed paths: M /branches/zip/ChangeLog M /branches/zip/handler/ha_innodb.cc M /branches/zip/handler/ha_innodb.h M /branches/zip/row/row0mysql.c branches/zip: Merge revisions 6350:6424 from branches/5.1: ------------------------------------------------------------------------ r6421 | jyang | 2010-01-12 07:59:16 +0200 (Tue, 12 Jan 2010) | 8 lines Changed paths: M /branches/5.1/row/row0mysql.c branches/5.1: Fix bug #49238: Creating/Dropping a temporary table while at 1023 transactions will cause assert. Handle possible DB_TOO_MANY_CONCURRENT_TRXS when deleting metadata in row_drop_table_for_mysql(). rb://220, approved by Marko ------------------------------------------------------------------------ r6422 | marko | 2010-01-12 11:34:27 +0200 (Tue, 12 Jan 2010) | 3 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/handler/ha_innodb.h branches/5.1: Non-functional change: Make innobase_get_int_col_max_value() a static function. It does not access any fields of class ha_innobase. ------------------------------------------------------------------------ r6424 | marko | 2010-01-12 12:22:19 +0200 (Tue, 12 Jan 2010) | 16 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/handler/ha_innodb.h branches/5.1: In innobase_initialize_autoinc(), do not attempt to read the maximum auto-increment value from the table if innodb_force_recovery is set to at least 4, so that writes are disabled. (Bug #46193) innobase_get_int_col_max_value(): Move the function definition before ha_innobase::innobase_initialize_autoinc(), because that function now calls this function. ha_innobase::innobase_initialize_autoinc(): Change the return type to void.  Do not attempt to read the maximum auto-increment value from the table if innodb_force_recovery is set to at least 4.  Issue ER_AUTOINC_READ_FAILED to the client when the auto-increment value cannot be read. rb://144 by Sunny, revised by Marko ------------------------------------------------------------------------ ------------------------------------------------------------------------ r6426 | marko | 2010-01-12 15:36:14 +0200 (Tue, 12 Jan 2010) | 2 lines Changed paths: M /branches/zip/row/row0sel.c branches/zip: row_sel_sec_rec_is_for_clust_rec(): Document the return value more accurately. ------------------------------------------------------------------------ r6433 | marko | 2010-01-13 13:19:00 +0200 (Wed, 13 Jan 2010) | 2 lines Changed paths: M /branches/zip/dict/dict0crea.c M /branches/zip/dict/dict0load.c branches/zip: dict_sys_tables_get_flags(), dict_create_sys_*_tuple(): Add some const qualifiers and comments. ------------------------------------------------------------------------ r6445 | marko | 2010-01-13 17:15:29 +0200 (Wed, 13 Jan 2010) | 3 lines Changed paths: M /branches/zip/ChangeLog M /branches/zip/buf/buf0buf.c branches/zip: buf_pool_drop_hash_index(): Check block->page.state before checking block->is_hashed, because the latter may be uninitialized right after server startup. ------------------------------------------------------------------------ r6446 | marko | 2010-01-13 17:20:10 +0200 (Wed, 13 Jan 2010) | 3 lines Changed paths: M /branches/zip/include/mem0dbg.h M /branches/zip/include/mem0dbg.ic M /branches/zip/mem/mem0dbg.c M /branches/zip/sync/sync0sync.c branches/zip: Treat mem_hash_mutex specially in mutex_free(), and explicitly free mem_hash_mutex in mem_close(). This fixes the breakage of UNIV_MEM_DEBUG that was filed as Issue #434. ------------------------------------------------------------------------ r6447 | marko | 2010-01-13 17:43:44 +0200 (Wed, 13 Jan 2010) | 5 lines Changed paths: M /branches/zip/ChangeLog M /branches/zip/row/row0sel.c branches/zip: row_sel_get_clust_rec_for_mysql(): On the READ UNCOMMITTED isolation level, do not attempt to access a clustered index record that has been marked for deletion.  This fixes Issue #433. Approved by Heikki over the IM. ------------------------------------------------------------------------ 	076550285b4939d3620e9f185f1925882fcd872b
----------------------------
Add WITH_FAST_MUTEXES option (non-debug configurations only) 	7e7965aeb4bea403a39f314ee7efb0662affad6b
----------------------------
BUG#49222: Mark RAND() as unsafe Problem: When RAND() is binlogged in statement mode, the seed is binlogged too, so the replication slave generates the same sequence of random numbers. This makes replication work in many cases, but not in all cases: the order of rows is not guaranteed for, e.g., UPDATE or INSERT...SELECT statements, so the row data will be different if master and slave retrieve the rows in different orders. Fix: Mark RAND() as unsafe. It will generate a warning if binlog_format=STATEMENT and switch to row-logging if binlog_format=ROW. 	94946c680762954a5b88ea46b93e3975995cf504
----------------------------
Makes slave_type_conversions_basic to be skipped in embedded run in PB2 as it ought to be. Otherwise test will fail because variable is no recognized: 1193: Unknown system variable 'slave_type_conversions' 	231773b44919435b33696f77023ba81fd8a274c4
----------------------------
Fixes one more failure in gcov run: - sys_vars.rpl_init_slave_func Added suppression for the unsafe warning. 	88a9362d48a63b7972867d308a349bb6859d4128
----------------------------
Fixes for three test failures: - sys_vars.all_vars: Added test case for slave_type_conversions variable - rpl_row_idempotency Removed ER_SLAVE_AMBIGOUS_EXEC_MODE (which was removed by WL 4738) from the test case. Using ER_WRONG_VALUE_FOR_VAR instead. - mysqld--help-win Added missing help for --slave-type-conversions from the result file. 	c88f938bb8182fd2b00dd2f0de16fa10f1d8f70f
----------------------------
"Merge: 684405a 789352e Upmerge the changes for RPM versioning/naming from 5.0 to 5.1. This includes ""MYSQL_U_SCORE_VERSION"" in ""configure.in"". "	b0dad6edf48e3c1df5fd61919f42b6fde2056b0e
----------------------------
branches/zip: Merge revisions 6350:6424 from branches/5.1: ------------------------------------------------------------------------ r6421 | jyang | 2010-01-12 07:59:16 +0200 (Tue, 12 Jan 2010) | 8 lines Changed paths: M /branches/5.1/row/row0mysql.c branches/5.1: Fix bug #49238: Creating/Dropping a temporary table while at 1023 transactions will cause assert. Handle possible DB_TOO_MANY_CONCURRENT_TRXS when deleting metadata in row_drop_table_for_mysql(). rb://220, approved by Marko ------------------------------------------------------------------------ r6422 | marko | 2010-01-12 11:34:27 +0200 (Tue, 12 Jan 2010) | 3 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/handler/ha_innodb.h branches/5.1: Non-functional change: Make innobase_get_int_col_max_value() a static function. It does not access any fields of class ha_innobase. ------------------------------------------------------------------------ r6424 | marko | 2010-01-12 12:22:19 +0200 (Tue, 12 Jan 2010) | 16 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/handler/ha_innodb.h branches/5.1: In innobase_initialize_autoinc(), do not attempt to read the maximum auto-increment value from the table if innodb_force_recovery is set to at least 4, so that writes are disabled. (Bug #46193) innobase_get_int_col_max_value(): Move the function definition before ha_innobase::innobase_initialize_autoinc(), because that function now calls this function. ha_innobase::innobase_initialize_autoinc(): Change the return type to void.  Do not attempt to read the maximum auto-increment value from the table if innodb_force_recovery is set to at least 4.  Issue ER_AUTOINC_READ_FAILED to the client when the auto-increment value cannot be read. rb://144 by Sunny, revised by Marko ------------------------------------------------------------------------ 	4fdd498cdf1d0d461caad0ca1b40902246eb07fd
----------------------------
branches/5.1: In innobase_initialize_autoinc(), do not attempt to read the maximum auto-increment value from the table if innodb_force_recovery is set to at least 4, so that writes are disabled. (Bug #46193) innobase_get_int_col_max_value(): Move the function definition before ha_innobase::innobase_initialize_autoinc(), because that function now calls this function. ha_innobase::innobase_initialize_autoinc(): Change the return type to void.  Do not attempt to read the maximum auto-increment value from the table if innodb_force_recovery is set to at least 4.  Issue ER_AUTOINC_READ_FAILED to the client when the auto-increment value cannot be read. rb://144 by Sunny, revised by Marko 	04e0ee05d1306a232e5f4717bfa6ad2cca8bfee5
----------------------------
Backporting revision from mysql-6.0-codebase-bugfixing. Original revision: ------------------------------------------------------------ revno: 3789.1.9 revision-id: serg@mysql.com-20091229134448-phe834ukzmi0k2e3 parent: serg@mysql.com-20091227081418-bgfg952gzumn1k3h committer: Sergei Golubchik <serg@mysql.com> branch nick: 6.0-codebase timestamp: Tue 2009-12-29 14:44:48 +0100 message: better fix for Bug#48758 mysqltest crashes on sys_vars.collation_server_basic in gcov builds use setenv instead of putenv ------------------------------------------------------------ 	c06a305001bc89116a718cf0c12dd03b58cfe92a
----------------------------
Add option for specifying MYSQL build configurations. Add mysql_release.cmake intended for use by the build team ( compile options, build settings to do MySQL releases) 	125cd58f2b3239b7ff0ec727a62e8ca160f3a877
----------------------------
Merge: e6c4013 77e2c04 Merge from telco-7.0. Due to changed functionality introduced by merge, fixed: - Reset 'tab->read_record.unlock_row) to (Default)rr_unlock_row() when then linked-cursor accesor 'join_read_linked_key' is initialized. - There is stricter value checking for config variables in mysqld, which required the values for 'ndb-join-pushdown' to be changed from on/off to true/false . 	226e31d3122ed755d5226854385a11b3bb603b37
----------------------------
"Fix for bug #48538 ""Assertion in thr_lock() on LOAD DATA CONCURRENT INFILE"". Attempts to execute an INSERT statement for a MEMORY table which invoked a trigger or called a stored function which tried to perform LOW_PRIORITY update on the table being inserted into, resulted in debug servers aborting due to an assertion failure. On non-debug servers such INSERTs failed with ""Can't update table t1 in stored function/trigger because it is already used by statement which invoked this stored function/trigger"" as expected. The problem was that in the above scenario TL_WRITE_CONCURRENT_INSERT is converted to TL_WRITE inside the thr_lock() function since the MEMORY engine does not support concurrent inserts. This triggered an assertion which assumed that for the same table, one thread always requests locks with higher thr_lock_type value first. When TL_WRITE_CONCURRENT_INSERT is upgraded to TL_WRITE after the locks have been sorted, this is no longer true. In this case, TL_WRITE was requested after acquiring a TL_WRITE_LOW_PRIORITY lock on the table, triggering the assert. This fix solves the problem by adjusting this assert to take this scenario into account. An alternative approach to change handler::store_locks() methods for all engines which do not support concurrent inserts in such way that TL_WRITE_CONCURRENT_INSERT is upgraded to TL_WRITE there instead, was considered too intrusive. Commit on behalf of Dmitry Lenev. "	0bce0c9041c5faf5a64855f21680f6898113d550
----------------------------
Merge: b79df3b 05989e2 merge mysql-5.1-rep+2-delivery1 --> mysql-5.1-rpl-merge Conflicts: Text conflict in .bzr-mysql/default.conf Text conflict in mysql-test/extra/rpl_tests/rpl_loaddata.test Text conflict in mysql-test/r/mysqlbinlog2.result Text conflict in mysql-test/suite/binlog/r/binlog_stm_mix_innodb_myisam.result Text conflict in mysql-test/suite/binlog/r/binlog_unsafe.result Text conflict in mysql-test/suite/rpl/r/rpl_insert_id.result Text conflict in mysql-test/suite/rpl/r/rpl_loaddata.result Text conflict in mysql-test/suite/rpl/r/rpl_stm_auto_increment_bug33029.result Text conflict in mysql-test/suite/rpl/r/rpl_udf.result Text conflict in mysql-test/suite/rpl/t/rpl_slow_query_log.test Text conflict in sql/field.h Text conflict in sql/log.cc Text conflict in sql/log_event.cc Text conflict in sql/log_event_old.cc Text conflict in sql/mysql_priv.h Text conflict in sql/share/errmsg.txt Text conflict in sql/sp.cc Text conflict in sql/sql_acl.cc Text conflict in sql/sql_base.cc Text conflict in sql/sql_class.h Text conflict in sql/sql_db.cc Text conflict in sql/sql_delete.cc Text conflict in sql/sql_insert.cc Text conflict in sql/sql_lex.cc Text conflict in sql/sql_lex.h Text conflict in sql/sql_load.cc Text conflict in sql/sql_table.cc Text conflict in sql/sql_update.cc Text conflict in sql/sql_view.cc Conflict adding files to storage/innobase.  Created directory. Conflict because storage/innobase is not versioned, but has versioned children.  Versioned directory. Conflict adding file storage/innobase.  Moved existing file to storage/innobase.moved. Conflict adding files to storage/innobase/handler.  Created directory. Conflict because storage/innobase/handler is not versioned, but has versioned children.  Versioned directory. Contents conflict in storage/innobase/handler/ha_innodb.cc 	6f7929b1432441ce90180b6b578aa4e06b84224c
----------------------------
"Fix for BUG#50081 ""Tests: mysqld--help-notwin fails with --parallel"": eliminate 3 more ""directory path"" variables from the test's output (it was already the case for other similar ones likes slow-query-log-file). "	03d10b8cd082ea070de3cf344276b55dfe7fb524
----------------------------
"WL#5197 ""Move @@engine_condition_pushdown to @@optimizer_switch"" ""set engine_condition_pushdown"" is deprecated, engine condition pushdown is controlled by a new ""set optimizer_switch=engine_condition_pushdown=on|off"". "	716c1bce835435ef6c16a9306ac3185a5b9d72c0
----------------------------
possible fix for sporadic sys_vars.delayed_insert_limit_func failures 	4949ee3a75ab6c56960e8a86a6ecb1d54d17a24a
----------------------------
"Merge: ece5ad5 31cd064 Manual merge of WL#4738 from mysql-next-mr: - backported code that handles %f/%g arguments in my_vsnprintf.c from 6.0 - backported %f/%g tests in unittest/mysys/my_vsnprintf-t.c from 6.0 - replaced snprintf(""%g"") in sql/set_var.cc with my_gcvt() - removed unnecessary ""--replace-result""s for Windows in mysql-test/suite/sys_vars/t/long_query_time_basic.test - some test results adjustments "	85d5a08b51e24af57120068bed4534e4c1e889f4
----------------------------
"branches/innodb+: Merge revisions 6130:6364 from branches/zip: ------------------------------------------------------------------------ r6130 | marko | 2009-11-02 11:42:56 +0200 (Mon, 02 Nov 2009) | 9 lines Changed paths: M /branches/zip/ChangeLog M /branches/zip/btr/btr0sea.c M /branches/zip/buf/buf0buf.c M /branches/zip/dict/dict0dict.c M /branches/zip/fil/fil0fil.c M /branches/zip/ibuf/ibuf0ibuf.c M /branches/zip/include/btr0sea.h M /branches/zip/include/dict0dict.h M /branches/zip/include/fil0fil.h M /branches/zip/include/ibuf0ibuf.h M /branches/zip/include/lock0lock.h M /branches/zip/include/log0log.h M /branches/zip/include/log0recv.h M /branches/zip/include/mem0mem.h M /branches/zip/include/mem0pool.h M /branches/zip/include/os0file.h M /branches/zip/include/pars0pars.h M /branches/zip/include/srv0srv.h M /branches/zip/include/thr0loc.h M /branches/zip/include/trx0i_s.h M /branches/zip/include/trx0purge.h M /branches/zip/include/trx0rseg.h M /branches/zip/include/trx0sys.h M /branches/zip/include/trx0undo.h M /branches/zip/include/usr0sess.h M /branches/zip/lock/lock0lock.c M /branches/zip/log/log0log.c M /branches/zip/log/log0recv.c M /branches/zip/mem/mem0dbg.c M /branches/zip/mem/mem0pool.c M /branches/zip/os/os0file.c M /branches/zip/os/os0sync.c M /branches/zip/os/os0thread.c M /branches/zip/pars/lexyy.c M /branches/zip/pars/pars0lex.l M /branches/zip/que/que0que.c M /branches/zip/srv/srv0srv.c M /branches/zip/srv/srv0start.c M /branches/zip/sync/sync0arr.c M /branches/zip/sync/sync0sync.c M /branches/zip/thr/thr0loc.c M /branches/zip/trx/trx0i_s.c M /branches/zip/trx/trx0purge.c M /branches/zip/trx/trx0rseg.c M /branches/zip/trx/trx0sys.c M /branches/zip/trx/trx0undo.c M /branches/zip/usr/usr0sess.c M /branches/zip/ut/ut0mem.c branches/zip: Free all resources at shutdown. Set pointers to NULL, so that Valgrind will not complain about freed data structures that are reachable via pointers.  This addresses Bug #45992 and Bug #46656. This patch is mostly based on changes copied from branches/embedded-1.0, mainly c5432, c3439, c3134, c2994, c2978, but also some other code was copied.  Some added cleanup code is specific to MySQL/InnoDB. rb://199 approved by Sunny Bains ------------------------------------------------------------------------ r6134 | marko | 2009-11-04 09:57:29 +0200 (Wed, 04 Nov 2009) | 5 lines Changed paths: M /branches/zip/ChangeLog M /branches/zip/handler/ha_innodb.cc branches/zip: innobase_convert_identifier(): Convert table names with explain_filename() to address Bug #32430: 'show innodb status' causes errors Invalid (old?) table or database name in logs. rb://134 approved by Sunny Bains ------------------------------------------------------------------------ r6137 | marko | 2009-11-04 15:24:28 +0200 (Wed, 04 Nov 2009) | 1 line Changed paths: M /branches/zip/dict/dict0dict.c branches/zip: dict_index_too_big_for_undo(): Correct a typo. ------------------------------------------------------------------------ r6153 | vasil | 2009-11-10 15:33:22 +0200 (Tue, 10 Nov 2009) | 145 lines Changed paths: M /branches/zip/handler/ha_innodb.cc branches/zip: Merge r6125:6152 from branches/5.1: (everything except the last white-space change was skipped as it is already in branches/zip) ------------------------------------------------------------------------ r6127 | vasil | 2009-10-30 11:18:25 +0200 (Fri, 30 Oct 2009) | 18 lines Changed paths: M /branches/5.1/Makefile.am M /branches/5.1/mysql-test/innodb-autoinc.result M /branches/5.1/mysql-test/innodb-autoinc.test branches/5.1: Backport c6121 from branches/zip: ------------------------------------------------------------------------ r6121 | sunny | 2009-10-30 01:42:11 +0200 (Fri, 30 Oct 2009) | 7 lines Changed paths: M /branches/zip/mysql-test/innodb-autoinc.result branches/zip: This test has been problematic for sometime now. The underlying bug is that the data dictionaries get out of sync. In the AUTOINC code we try and apply salve to the symptoms. In the past MySQL made some unrelated change and the dictionaries stopped getting out of sync and this test started to fail. Now, it seems they have reverted that changed and the test is passing again. I suspect this is not he last time that this test will change. ------------------------------------------------------------------------ ------------------------------------------------------------------------ r6129 | vasil | 2009-10-30 17:14:22 +0200 (Fri, 30 Oct 2009) | 4 lines Changed paths: M /branches/5.1/Makefile.am branches/5.1: Revert a change to Makefile.am that sneaked unnoticed in c6127. ------------------------------------------------------------------------ r6136 | marko | 2009-11-04 12:28:10 +0200 (Wed, 04 Nov 2009) | 15 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/include/ha_prototypes.h M /branches/5.1/ut/ut0ut.c branches/5.1: Port r6134 from branches/zip: ------------------------------------------------------------------------ r6134 | marko | 2009-11-04 07:57:29 +0000 (Wed, 04 Nov 2009) | 5 lines branches/zip: innobase_convert_identifier(): Convert table names with explain_filename() to address Bug #32430: 'show innodb status' causes errors Invalid (old?) table or database name in logs. rb://134 approved by Sunny Bains ------------------------------------------------------------------------ innobase_print_identifier(): Replace with innobase_convert_name(). innobase_convert_identifier(): New function, called by innobase_convert_name(). ------------------------------------------------------------------------ r6149 | vasil | 2009-11-09 11:15:01 +0200 (Mon, 09 Nov 2009) | 5 lines Changed paths: M /branches/5.1/CMakeLists.txt branches/5.1: Followup to r5700: Adjust the changes so they are the same as in the BZR repository. ------------------------------------------------------------------------ r6150 | vasil | 2009-11-09 11:43:31 +0200 (Mon, 09 Nov 2009) | 58 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: Merge a part of r2911.5.5 from MySQL: (the other part of this was merged in c5700) ------------------------------------------------------------ revno: 2911.5.5 committer: Vladislav Vaintroub <vvaintroub@mysql.com> branch nick: 5.1-innodb_plugin timestamp: Wed 2009-06-10 10:59:49 +0200 message: Backport WL#3653 to 5.1 to enable bundled innodb plugin. Remove custom DLL loader code from innodb plugin code, use symbols exported from mysqld. removed: storage/innodb_plugin/handler/handler0vars.h storage/innodb_plugin/handler/win_delay_loader.cc added: storage/mysql_storage_engine.cmake win/create_def_file.js modified: CMakeLists.txt include/m_ctype.h include/my_global.h include/my_sys.h include/mysql/plugin.h libmysqld/CMakeLists.txt mysql-test/mysql-test-run.pl mysql-test/t/plugin.test mysql-test/t/plugin_load-master.opt mysys/charset.c sql/CMakeLists.txt sql/handler.h sql/mysql_priv.h sql/mysqld.cc sql/sql_class.cc sql/sql_class.h sql/sql_list.h sql/sql_profile.h storage/Makefile.am storage/archive/CMakeLists.txt storage/blackhole/CMakeLists.txt storage/csv/CMakeLists.txt storage/example/CMakeLists.txt storage/federated/CMakeLists.txt storage/heap/CMakeLists.txt storage/innobase/CMakeLists.txt storage/innobase/handler/ha_innodb.cc storage/innodb_plugin/CMakeLists.txt storage/innodb_plugin/handler/ha_innodb.cc storage/innodb_plugin/handler/handler0alter.cc storage/innodb_plugin/handler/i_s.cc storage/innodb_plugin/plug.in storage/myisam/CMakeLists.txt storage/myisammrg/CMakeLists.txt win/Makefile.am win/configure.js ------------------------------------------------------------------------ r6152 | vasil | 2009-11-10 15:30:20 +0200 (Tue, 10 Nov 2009) | 4 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: White space fixup. ------------------------------------------------------------------------ ------------------------------------------------------------------------ r6157 | jyang | 2009-11-11 14:27:09 +0200 (Wed, 11 Nov 2009) | 10 lines Changed paths: M /branches/zip/handler/ha_innodb.cc A /branches/zip/mysql-test/innodb_bug47167.result A /branches/zip/mysql-test/innodb_bug47167.test M /branches/zip/mysql-test/innodb_file_format.result branches/zip: Fix an issue that a local variable defined in innodb_file_format_check_validate() is being referenced across function in innodb_file_format_check_update(). In addition, fix ""set global innodb_file_format_check = DEFAULT"" call. Bug #47167: ""set global innodb_file_format_check"" cannot set value by User-Defined Variable."" rb://169 approved by Sunny Bains and Marko. ------------------------------------------------------------------------ r6159 | vasil | 2009-11-11 15:13:01 +0200 (Wed, 11 Nov 2009) | 37 lines Changed paths: M /branches/zip/handler/ha_innodb.cc M /branches/zip/handler/ha_innodb.h branches/zip: Merge a change from MySQL: (this has been reviewed by Calvin and Marko, and Calvin says Luis has incorporated Marko's suggestions) ------------------------------------------------------------ revno: 3092.5.1 committer: Luis Soares <luis.soares@sun.com> branch nick: mysql-5.1-bugteam timestamp: Thu 2009-09-24 15:52:52 +0100 message: BUG#42829: binlogging enabled for all schemas regardless of binlog-db-db / binlog-ignore-db InnoDB will return an error if statement based replication is used along with transaction isolation level READ-COMMITTED (or weaker), even if the statement in question is filtered out according to the binlog-do-db rules set. In this case, an error should not be printed. This patch addresses this issue by extending the existing check in external_lock to take into account the filter rules before deciding to print an error. Furthermore, it also changes decide_logging_format to take into consideration whether the statement is filtered out from binlog before decision is made. added: mysql-test/suite/binlog/r/binlog_stm_do_db.result mysql-test/suite/binlog/t/binlog_stm_do_db-master.opt mysql-test/suite/binlog/t/binlog_stm_do_db.test modified: sql/sql_base.cc sql/sql_class.cc storage/innobase/handler/ha_innodb.cc storage/innobase/handler/ha_innodb.h storage/innodb_plugin/handler/ha_innodb.cc storage/innodb_plugin/handler/ha_innodb.h ------------------------------------------------------------------------ r6160 | vasil | 2009-11-11 15:33:49 +0200 (Wed, 11 Nov 2009) | 72 lines Changed paths: M /branches/zip/include/os0file.h M /branches/zip/os/os0file.c branches/zip: Merge r6152:6159 from branches/5.1: (r6158 was skipped as an equivallent change has already been merged from MySQL) ------------------------------------------------------------------------ r6154 | calvin | 2009-11-11 02:51:17 +0200 (Wed, 11 Nov 2009) | 17 lines Changed paths: M /branches/5.1/include/os0file.h M /branches/5.1/os/os0file.c branches/5.1: fix bug#3139: Mysql crashes: 'windows error 995' after several selects on a large DB During stress environment, Windows AIO may fail with error code ERROR_OPERATION_ABORTED. InnoDB does not handle the error, rather crashes. The cause of the error is unknown, but likely due to faulty hardware or driver. This patch introduces a new error code OS_FILE_OPERATION_ABORTED, which maps to Windows ERROR_OPERATION_ABORTED (995). When the error is detected during AIO, the InnoDB will issue a synchronous retry (read/write). This patch has been extensively tested by MySQL support. Approved by: Marko rb://196 ------------------------------------------------------------------------ r6158 | vasil | 2009-11-11 14:52:14 +0200 (Wed, 11 Nov 2009) | 37 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/handler/ha_innodb.h branches/5.1: Merge a change from MySQL: (this has been reviewed by Calvin and Marko, and Calvin says Luis has incorporated Marko's suggestions) ------------------------------------------------------------ revno: 3092.5.1 committer: Luis Soares <luis.soares@sun.com> branch nick: mysql-5.1-bugteam timestamp: Thu 2009-09-24 15:52:52 +0100 message: BUG#42829: binlogging enabled for all schemas regardless of binlog-db-db / binlog-ignore-db InnoDB will return an error if statement based replication is used along with transaction isolation level READ-COMMITTED (or weaker), even if the statement in question is filtered out according to the binlog-do-db rules set. In this case, an error should not be printed. This patch addresses this issue by extending the existing check in external_lock to take into account the filter rules before deciding to print an error. Furthermore, it also changes decide_logging_format to take into consideration whether the statement is filtered out from binlog before decision is made. added: mysql-test/suite/binlog/r/binlog_stm_do_db.result mysql-test/suite/binlog/t/binlog_stm_do_db-master.opt mysql-test/suite/binlog/t/binlog_stm_do_db.test modified: sql/sql_base.cc sql/sql_class.cc storage/innobase/handler/ha_innodb.cc storage/innobase/handler/ha_innodb.h storage/innodb_plugin/handler/ha_innodb.cc storage/innodb_plugin/handler/ha_innodb.h ------------------------------------------------------------------------ ------------------------------------------------------------------------ r6161 | vasil | 2009-11-11 15:36:16 +0200 (Wed, 11 Nov 2009) | 4 lines Changed paths: M /branches/zip/ChangeLog branches/zip: Add changelog entry for r6160. ------------------------------------------------------------------------ r6162 | vasil | 2009-11-11 16:00:12 +0200 (Wed, 11 Nov 2009) | 4 lines Changed paths: M /branches/zip/ChangeLog branches/zip: Add ChangeLog for r6157. ------------------------------------------------------------------------ r6163 | calvin | 2009-11-11 17:53:20 +0200 (Wed, 11 Nov 2009) | 8 lines Changed paths: M /branches/zip/handler/ha_innodb.cc M /branches/zip/handler/ha_innodb.h branches/zip: Exclude thd_binlog_filter_ok() when building with older version of MySQL. thd_binlog_filter_ok() is introduced in MySQL 5.1.41. But the plugin can be built with MySQL prior to 5.1.41. Approved by Heikki (on IM). ------------------------------------------------------------------------ r6169 | calvin | 2009-11-12 14:40:43 +0200 (Thu, 12 Nov 2009) | 6 lines Changed paths: A /branches/zip/mysql-test/innodb_bug46676.result A /branches/zip/mysql-test/innodb_bug46676.test branches/zip: add test case for bug#46676 This crash is reproducible with InnoDB plugin 1.0.4 + MySQL 5.1.37. But no longer reproducible after MySQL 5.1.38 (with plugin 1.0.5). Add test case to catch future regression. ------------------------------------------------------------------------ r6170 | marko | 2009-11-12 15:49:08 +0200 (Thu, 12 Nov 2009) | 4 lines Changed paths: M /branches/zip/ChangeLog M /branches/zip/handler/ha_innodb.cc M /branches/zip/include/db0err.h M /branches/zip/row/row0merge.c M /branches/zip/row/row0mysql.c branches/zip: Allow CREATE INDEX to be interrupted.  (Issue #354) rb://183 approved by Heikki Tuuri ------------------------------------------------------------------------ r6175 | vasil | 2009-11-16 20:07:39 +0200 (Mon, 16 Nov 2009) | 4 lines Changed paths: M /branches/zip/ChangeLog branches/zip: Wrap line at 78th char in the ChangeLog ------------------------------------------------------------------------ r6177 | calvin | 2009-11-16 20:20:38 +0200 (Mon, 16 Nov 2009) | 2 lines Changed paths: M /branches/zip/ChangeLog branches/zip: add an entry to ChangeLog for r6065 ------------------------------------------------------------------------ r6179 | marko | 2009-11-17 10:19:34 +0200 (Tue, 17 Nov 2009) | 2 lines Changed paths: M /branches/zip/handler/ha_innodb.cc branches/zip: ha_innobase::change_active_index(): When the history is missing, report it to the client, not to the error log. ------------------------------------------------------------------------ r6181 | vasil | 2009-11-17 12:21:41 +0200 (Tue, 17 Nov 2009) | 33 lines Changed paths: M /branches/zip/mysql-test/innodb-index.test branches/zip: At the end of innodb-index.test: restore the environment as it was before the test was started to silence this warning: MTR's internal check of the test case 'main.innodb-index' failed. This means that the test case does not preserve the state that existed before the test case was executed.  Most likely the test case did not do a proper clean-up. This is the diff of the states of the servers before and after the test case was executed: mysqltest: Logging to '/tmp/autotest.sh-20091117_033000-zip.btyZwu/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.log'. mysqltest: Results saved in '/tmp/autotest.sh-20091117_033000-zip.btyZwu/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.result'. mysqltest: Connecting to server localhost:13000 (socket /tmp/autotest.sh-20091117_033000-zip.btyZwu/mysql-5.1/mysql-test/var/tmp/mysqld.1.sock) as 'root', connection 'default', attempt 0 ... mysqltest: ... Connected. mysqltest: Start processing test commands from './include/check-testcase.test' ... mysqltest: ... Done processing test commands. --- /tmp/autotest.sh-20091117_033000-zip.btyZwu/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.result	2009-11-17 13:10:40.000000000 +0300 +++ /tmp/autotest.sh-20091117_033000-zip.btyZwu/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.reject	2009-11-17 13:10:54.000000000 +0300 @@ -84,7 +84,7 @@ INNODB_DOUBLEWRITE	ON INNODB_FAST_SHUTDOWN	1 INNODB_FILE_FORMAT	Antelope -INNODB_FILE_FORMAT_CHECK	Antelope +INNODB_FILE_FORMAT_CHECK	Barracuda INNODB_FILE_PER_TABLE	OFF INNODB_FLUSH_LOG_AT_TRX_COMMIT	1 INNODB_FLUSH_METHOD mysqltest: Result content mismatch not ok ------------------------------------------------------------------------ r6182 | marko | 2009-11-17 13:49:15 +0200 (Tue, 17 Nov 2009) | 1 line Changed paths: M /branches/zip/mysql-test/innodb-consistent-master.opt M /branches/zip/mysql-test/innodb-consistent.result M /branches/zip/mysql-test/innodb-consistent.test M /branches/zip/mysql-test/innodb-use-sys-malloc-master.opt M /branches/zip/mysql-test/innodb-use-sys-malloc.result M /branches/zip/mysql-test/innodb-use-sys-malloc.test M /branches/zip/mysql-test/innodb_bug21704.result M /branches/zip/mysql-test/innodb_bug21704.test M /branches/zip/mysql-test/innodb_bug40360.test M /branches/zip/mysql-test/innodb_bug40565.result M /branches/zip/mysql-test/innodb_bug40565.test M /branches/zip/mysql-test/innodb_bug41904.result M /branches/zip/mysql-test/innodb_bug41904.test M /branches/zip/mysql-test/innodb_bug42101-nonzero-master.opt M /branches/zip/mysql-test/innodb_bug42101-nonzero.result M /branches/zip/mysql-test/innodb_bug42101-nonzero.test M /branches/zip/mysql-test/innodb_bug42101.result M /branches/zip/mysql-test/innodb_bug42101.test M /branches/zip/mysql-test/innodb_bug44032.result M /branches/zip/mysql-test/innodb_bug44032.test M /branches/zip/mysql-test/innodb_bug44369.result M /branches/zip/mysql-test/innodb_bug44369.test M /branches/zip/mysql-test/innodb_bug44571.result M /branches/zip/mysql-test/innodb_bug44571.test M /branches/zip/mysql-test/innodb_bug45357.test M /branches/zip/mysql-test/innodb_bug46000.result M /branches/zip/mysql-test/innodb_bug46000.test M /branches/zip/mysql-test/innodb_bug46676.result M /branches/zip/mysql-test/innodb_bug46676.test M /branches/zip/mysql-test/innodb_bug47167.result M /branches/zip/mysql-test/innodb_bug47167.test M /branches/zip/mysql-test/innodb_bug47777.result M /branches/zip/mysql-test/innodb_bug47777.test M /branches/zip/mysql-test/innodb_file_format.result M /branches/zip/mysql-test/innodb_file_format.test branches/zip: Set svn:eol-style on mysql-test files. ------------------------------------------------------------------------ r6183 | marko | 2009-11-17 13:51:16 +0200 (Tue, 17 Nov 2009) | 1 line Changed paths: M /branches/zip/mysql-test/innodb-consistent-master.opt M /branches/zip/mysql-test/innodb-master.opt M /branches/zip/mysql-test/innodb-semi-consistent-master.opt M /branches/zip/mysql-test/innodb-use-sys-malloc-master.opt M /branches/zip/mysql-test/innodb_bug42101-nonzero-master.opt branches/zip: Prepend loose_ to plugin-only mysql-test options. ------------------------------------------------------------------------ r6184 | marko | 2009-11-17 13:52:01 +0200 (Tue, 17 Nov 2009) | 1 line Changed paths: M /branches/zip/mysql-test/innodb-index.result M /branches/zip/mysql-test/innodb-index.test branches/zip: innodb-index.test: Restore innodb_file_format_check. ------------------------------------------------------------------------ r6185 | marko | 2009-11-17 16:44:20 +0200 (Tue, 17 Nov 2009) | 16 lines Changed paths: M /branches/zip/handler/ha_innodb.cc M /branches/zip/mysql-test/innodb.result M /branches/zip/mysql-test/innodb.test M /branches/zip/mysql-test/innodb_bug44369.result M /branches/zip/mysql-test/innodb_bug44369.test D /branches/zip/mysql-test/patches/innodb-index.diff M /branches/zip/row/row0mysql.c branches/zip: Report duplicate table names to the client connection, not to the error log.  This change will allow innodb-index.test to be re-enabled.  It was previously disabled, because mysql-test-run does not like output in the error log. row_create_table_for_mysql(): Do not output anything to the error log when reporting DB_DUPLICATE_KEY.  Let the caller report the error. Add a TODO comment that the dict_table_t object is apparently not freed when an error occurs. create_table_def(): Convert InnoDB table names to the character set of the client connection for reporting.  Use my_error(ER_WRONG_COLUMN_NAME) for reporting reserved column names.  Report my_error(ER_TABLE_EXISTS_ERROR) when row_create_table_for_mysql() returns DB_DUPLICATE_KEY. rb://206 ------------------------------------------------------------------------ r6186 | vasil | 2009-11-17 16:48:14 +0200 (Tue, 17 Nov 2009) | 4 lines Changed paths: M /branches/zip/ChangeLog branches/zip: Add ChangeLog entry for r6185. ------------------------------------------------------------------------ r6189 | marko | 2009-11-18 11:36:18 +0200 (Wed, 18 Nov 2009) | 5 lines Changed paths: M /branches/zip/ChangeLog M /branches/zip/handler/handler0alter.cc branches/zip: ha_innobase::add_index(): When creating the primary key and the table is being locked by another transaction, do not attempt to drop the table. (Bug #48782) Approved by Sunny Bains over IM ------------------------------------------------------------------------ r6194 | vasil | 2009-11-19 09:24:45 +0200 (Thu, 19 Nov 2009) | 5 lines Changed paths: M /branches/zip/include/univ.i branches/zip: Increment version number from 1.0.5 to 1.0.6 since 1.0.5 was just released by MySQL and we will soon release 1.0.6. ------------------------------------------------------------------------ r6197 | calvin | 2009-11-19 09:32:55 +0200 (Thu, 19 Nov 2009) | 6 lines Changed paths: M /branches/zip/CMakeLists.txt branches/zip: merge the fix of bug#48317 (CMake file) Due to MySQL changes to the CMake, it is no longer able to build InnoDB plugin as a static library on Windows. The fix is proposed by Vlad of MySQL. ------------------------------------------------------------------------ r6198 | vasil | 2009-11-19 09:44:31 +0200 (Thu, 19 Nov 2009) | 4 lines Changed paths: M /branches/zip/ChangeLog branches/zip: Add ChangeLog entry for r6197. ------------------------------------------------------------------------ r6199 | vasil | 2009-11-19 12:10:12 +0200 (Thu, 19 Nov 2009) | 31 lines Changed paths: M /branches/zip/ChangeLog M /branches/zip/btr/btr0btr.c M /branches/zip/data/data0type.c branches/zip: Merge r6159:6198 from branches/5.1: ------------------------------------------------------------------------ r6187 | jyang | 2009-11-18 05:27:30 +0200 (Wed, 18 Nov 2009) | 9 lines Changed paths: M /branches/5.1/btr/btr0btr.c branches/5.1: Fix bug #48469 ""when innodb tablespace is configured too small, crash and corruption!"". Function btr_create() did not check the return status of fseg_create(), and continue the index creation even there is no sufficient space. rb://205 Approved by Marko ------------------------------------------------------------------------ r6188 | jyang | 2009-11-18 07:14:23 +0200 (Wed, 18 Nov 2009) | 8 lines Changed paths: M /branches/5.1/data/data0type.c branches/5.1: Fix bug #48526 ""Data type for float and double is incorrectly reported in InnoDB table monitor"". Certain datatypes are not printed correctly in dtype_print(). rb://204 Approved by Marko. ------------------------------------------------------------------------ ------------------------------------------------------------------------ r6201 | marko | 2009-11-19 14:09:11 +0200 (Thu, 19 Nov 2009) | 2 lines Changed paths: M /branches/zip/handler/handler0alter.cc branches/zip: ha_innobase::add_index(): Clarify the comment on orphaned tables when creating a primary key. ------------------------------------------------------------------------ r6202 | jyang | 2009-11-19 15:01:00 +0200 (Thu, 19 Nov 2009) | 8 lines Changed paths: M /branches/zip/btr/btr0btr.c branches/zip: Function fseg_free() is no longer defined in branches/zip. To port fix for bug #48469 to zip, we can use btr_free_root() which frees the page, and also does not require mini-transaction. Approved by Marko. ------------------------------------------------------------------------ r6207 | vasil | 2009-11-20 10:19:14 +0200 (Fri, 20 Nov 2009) | 54 lines Changed paths: M /branches/zip/handler/ha_innodb.cc branches/zip: Merge r6198:6206 from branches/5.1: (r6203 was skipped as it is already in branches/zip) ------------------------------------------------------------------------ r6200 | vasil | 2009-11-19 12:14:23 +0200 (Thu, 19 Nov 2009) | 4 lines Changed paths: M /branches/5.1/btr/btr0btr.c branches/5.1: White space fixup - indent under the opening ( ------------------------------------------------------------------------ r6203 | jyang | 2009-11-19 15:12:22 +0200 (Thu, 19 Nov 2009) | 8 lines Changed paths: M /branches/5.1/btr/btr0btr.c branches/5.1: Use btr_free_root() instead of fseg_free() for the fix of bug #48469, because fseg_free() is not defined in the zip branch. And we could save one mini-trasaction started by fseg_free(). Approved by Marko. ------------------------------------------------------------------------ r6205 | jyang | 2009-11-20 07:55:48 +0200 (Fri, 20 Nov 2009) | 11 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: Add a special case to handle the Duplicated Key error and return DB_ERROR instead. This is to avoid a possible SIGSEGV by mysql error handling re-entering the storage layer for dup key info without proper table handle. This is to prevent a server crash when error situation in bug #45961 ""DDL on partitioned innodb tables leaves data dictionary in an inconsistent state"" happens. rb://157 approved by Sunny Bains. ------------------------------------------------------------------------ r6206 | jyang | 2009-11-20 09:38:43 +0200 (Fri, 20 Nov 2009) | 5 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: Fix a minor code formating issue for the parenthesis iplacement of the if condition in rename_table(). ------------------------------------------------------------------------ ------------------------------------------------------------------------ r6208 | vasil | 2009-11-20 10:49:24 +0200 (Fri, 20 Nov 2009) | 4 lines Changed paths: M /branches/zip/ChangeLog branches/zip: Add ChangeLog entry for c6207. ------------------------------------------------------------------------ r6210 | vasil | 2009-11-20 23:39:48 +0200 (Fri, 20 Nov 2009) | 3 lines Changed paths: M /branches/zip/trx/trx0i_s.c branches/zip: Whitespace fixup. ------------------------------------------------------------------------ r6248 | marko | 2009-11-30 12:19:50 +0200 (Mon, 30 Nov 2009) | 1 line Changed paths: M /branches/zip/ChangeLog branches/zip: ChangeLog: Document r4922 that was forgotten. ------------------------------------------------------------------------ r6252 | marko | 2009-11-30 12:50:11 +0200 (Mon, 30 Nov 2009) | 23 lines Changed paths: M /branches/zip/ChangeLog M /branches/zip/dict/dict0boot.c M /branches/zip/dict/dict0crea.c M /branches/zip/dict/dict0load.c M /branches/zip/dict/dict0mem.c M /branches/zip/fil/fil0fil.c M /branches/zip/handler/ha_innodb.cc M /branches/zip/include/dict0mem.h M /branches/zip/row/row0mysql.c branches/zip: Suppress errors about non-found temporary tables. Write the is_temp flag to SYS_TABLES.MIX_LEN. dict_table_t::flags: Add a flag for is_temporary, DICT_TF2_TEMPORARY. Unlike other flags, this will not be written to the tablespace flags or SYS_TABLES.TYPE, but only to SYS_TABLES.MIX_LEN. dict_build_table_def_step(): Only pass DICT_TF_BITS to tablespaces. dict_check_tablespaces_and_store_max_id(), dict_load_table(): Suppress errors about temporary tables not being found. dict_create_sys_tables_tuple(): Write the DICT_TF2_TEMPORARY flag to SYS_TABLES.MIX_LEN. fil_space_create(), fil_create_new_single_table_tablespace(): Add assertions about space->flags. row_drop_table_for_mysql(): Do not complain about non-found temporary tables. rb://160 approved by Heikki Tuuri.  This addresses the second part of Bug #41609 Crash recovery does not work for InnoDB temporary tables. ------------------------------------------------------------------------ r6263 | vasil | 2009-12-01 14:49:05 +0200 (Tue, 01 Dec 2009) | 4 lines Changed paths: M /branches/zip/include/univ.i branches/zip: Increment version number from 1.0.6 to 1.0.7 1.0.6 has been released ------------------------------------------------------------------------ r6264 | vasil | 2009-12-01 16:19:44 +0200 (Tue, 01 Dec 2009) | 1 line Changed paths: M /branches/zip/ChangeLog branches/zip: Add ChangeLog entry for the release of 1.0.6. ------------------------------------------------------------------------ r6269 | marko | 2009-12-02 11:35:22 +0200 (Wed, 02 Dec 2009) | 2 lines Changed paths: M /branches/zip/srv/srv0start.c branches/zip: innobase_start_or_create_for_mysql(): UNIV_IBUF_DEBUG should not break crash recovery, but UNIV_IBUF_COUNT_DEBUG will. ------------------------------------------------------------------------ r6270 | marko | 2009-12-02 11:36:47 +0200 (Wed, 02 Dec 2009) | 1 line Changed paths: M /branches/zip/srv/srv0start.c branches/zip: innobase_start_or_create_for_mysql(): Log the zlib version. ------------------------------------------------------------------------ r6271 | marko | 2009-12-02 11:43:49 +0200 (Wed, 02 Dec 2009) | 2 lines Changed paths: M /branches/zip/ChangeLog M /branches/zip/Makefile.am M /branches/zip/include/univ.i M /branches/zip/plug.in branches/zip: ChangeLog: Document that since r6270, the zlib version number will be displayed at start-up. ------------------------------------------------------------------------ r6272 | marko | 2009-12-02 11:46:05 +0200 (Wed, 02 Dec 2009) | 1 line Changed paths: M /branches/zip/Makefile.am M /branches/zip/include/univ.i M /branches/zip/plug.in branches/zip: Revert changes that were accidentally committed in r6271. ------------------------------------------------------------------------ r6274 | marko | 2009-12-03 14:47:12 +0200 (Thu, 03 Dec 2009) | 6 lines Changed paths: M /branches/zip/dict/dict0dict.c branches/zip: dict_table_check_for_dup_indexes(): Assert that the data dictionary mutex is being held while table->indexes is accessed. This is already the case. Currently, only dict_table_get_next_index() and dict_table_get_first_index() are being invoked without holding dict_sys->mutex. ------------------------------------------------------------------------ r6275 | pekka | 2009-12-03 18:32:47 +0200 (Thu, 03 Dec 2009) | 10 lines Changed paths: M /branches/zip/include/log0recv.h M /branches/zip/include/trx0sys.h M /branches/zip/log/log0recv.c M /branches/zip/trx/trx0sys.c branches/zip: Minor changes which allow build with UNIV_HOTBACKUP defined to succeed: include/trx0sys.h: Allow Hot Backup build to see some TRX_SYS_DOUBLEWRITE_... macros. trx/trx0sys.c:     Exclude trx_sys_close() function from Hot Backup build. log/log0recv.[ch]: Exclude recv_sys_var_init() function from Hot Backup build. This change should not affect !UNIV_HOTBACKUP build. ------------------------------------------------------------------------ r6277 | marko | 2009-12-08 11:13:36 +0200 (Tue, 08 Dec 2009) | 1 line Changed paths: M /branches/zip/fsp/fsp0fsp.c branches/zip: fsp0fsp.c: Add some missing in/out and const qualifiers. ------------------------------------------------------------------------ r6285 | marko | 2009-12-09 09:24:50 +0200 (Wed, 09 Dec 2009) | 13 lines Changed paths: M /branches/zip/row/row0sel.c branches/zip: row_sel_fetch_columns(): Remove redundant code that was accidentally added in r1591, which introduced dfield_t::ext in order to make the merge sort of fast index creation support externally stored columns, Initially, I tried to allocate the bit for dfield_t::ext from dfield_t::len by making the length 31 bits and mapping UNIV_SQL_NULL to something that would fit in it.  Then I decided that it would be too risky.  The redundant check was part of the mapping.  The condition may have been dfield_is_null() initially. This redundant code was noticed by Sergey Petrunya on the MySQL internals list. ------------------------------------------------------------------------ r6288 | marko | 2009-12-09 09:51:00 +0200 (Wed, 09 Dec 2009) | 15 lines Changed paths: M /branches/zip/row/row0upd.c branches/zip: row_upd_copy_columns(): Remove redundant code that was accidentally added in r1591, which introduced dfield_t::ext in order to make the merge sort of fast index creation support externally stored columns. Initially, I tried to allocate the bit for dfield_t::ext from dfield_t::len by making the length 31 bits and mapping UNIV_SQL_NULL to something that would fit in it.  Then I decided that it would be too risky.  The redundant check was part of the mapping.  The condition may have been dfield_is_null() initially. This is similar to the redundant code in row_sel_fetch_columns() that was noticed by Sergey Petrunya on the MySQL internals list and removed in r6285.  As far as I can tell, there are no redundant UNIV_SQL_NULL assignments remaining after this change. ------------------------------------------------------------------------ r6305 | marko | 2009-12-14 13:03:57 +0200 (Mon, 14 Dec 2009) | 2 lines Changed paths: M /branches/zip/row/row0umod.c branches/zip: row_undo_mod_del_unmark_sec_and_undo_update(): Add a missing const qualifier. ------------------------------------------------------------------------ r6309 | marko | 2009-12-15 14:05:50 +0200 (Tue, 15 Dec 2009) | 3 lines Changed paths: M /branches/zip/lock/lock0lock.c branches/zip: lock_rec_insert_check_and_lock(): Avoid casting away constness. Use page_rec_get_next_const() instead. This silences a gcc 4.2.4 warning. Reported by Sunny Bains. ------------------------------------------------------------------------ r6312 | marko | 2009-12-16 10:10:36 +0200 (Wed, 16 Dec 2009) | 6 lines Changed paths: M /branches/zip/fil/fil0fil.c branches/zip: fil_close(): Add #ifndef UNIV_HOTBACKUP around a debug assertion on mutex.magic_n.  InnoDB Hot Backup is a single-threaded program and does not contain mutexes.  This change allows InnoDB Hot Backup to be compiled with UNIV_DEBUG. Suggested by Michael Izioumtchenko. ------------------------------------------------------------------------ r6321 | marko | 2009-12-16 16:16:33 +0200 (Wed, 16 Dec 2009) | 4 lines Changed paths: M /branches/zip/row/row0merge.c branches/zip: row_merge_drop_temp_indexes(): Revert a hack to transaction isolation level that was made unnecessary by r5826 (Issue #337). When this function is called, any active data dictionary transaction should have been rolled back. ------------------------------------------------------------------------ r6345 | marko | 2009-12-21 10:46:14 +0200 (Mon, 21 Dec 2009) | 7 lines Changed paths: M /branches/zip/log/log0recv.c branches/zip: recv_scan_log_recs(): Non-functional change: Replace a debug assertion ut_ad(len > 0) with ut_ad(len >= OS_FILE_LOG_BLOCK_SIZE). This change is only for readability, for Issue #428.  Another assertion on len being an integer multiple of OS_FILE_LOG_BLOCK_SIZE already ensured together with the old ut_ad(len > 0) that actually len must be at least OS_FILE_LOG_BLOCK_SIZE. ------------------------------------------------------------------------ r6346 | marko | 2009-12-21 12:03:25 +0200 (Mon, 21 Dec 2009) | 2 lines Changed paths: M /branches/zip/log/log0recv.c branches/zip: recv_recovery_from_checkpoint_finish(): Revert a change that was accidentally committed in r6345. ------------------------------------------------------------------------ r6348 | marko | 2009-12-22 11:04:34 +0200 (Tue, 22 Dec 2009) | 37 lines Changed paths: M /branches/zip/handler/ha_innodb.cc M /branches/zip/include/ha_prototypes.h M /branches/zip/include/trx0trx.h M /branches/zip/lock/lock0lock.c M /branches/zip/trx/trx0i_s.c M /branches/zip/trx/trx0trx.c branches/zip: Merge a change from MySQL: ------------------------------------------------------------ revno: 3236 committer: Satya B <satya.bn@sun.com> branch nick: mysql-5.1-bugteam timestamp: Tue 2009-12-01 17:48:57 +0530 message: merge to mysql-5.1-bugteam ------------------------------------------------------------ revno: 3234.1.1 committer: Gleb Shchepa <gshchepa@mysql.com> branch nick: mysql-5.1-bugteam timestamp: Tue 2009-12-01 14:38:40 +0400 message: Bug #38883 (reopened): thd_security_context is not thread safe, crashes? manual merge 5.0-->5.1, updating InnoDB plugin. ------------------------------------------------------------ revno: 1810.3968.13 committer: Gleb Shchepa <gshchepa@mysql.com> branch nick: mysql-5.0-bugteam timestamp: Tue 2009-12-01 14:24:44 +0400 message: Bug #38883 (reopened): thd_security_context is not thread safe, crashes? The bug 38816 changed the lock that protects THD::query from LOCK_thread_count to LOCK_thd_data, but didn't update the associated InnoDB functions. 1. The innobase_mysql_prepare_print_arbitrary_thd and the innobase_mysql_end_print_arbitrary_thd InnoDB functions have been removed, since now we have a per-thread mutex: now we don't need to wrap several inter-thread access tries to THD::query with a single global LOCK_thread_count lock, so we can simplify the code. 2. The innobase_mysql_print_thd function has been modified to lock LOCK_thd_data in direct way. ------------------------------------------------------------------------ r6351 | marko | 2009-12-22 11:11:18 +0200 (Tue, 22 Dec 2009) | 1 line Changed paths: M /branches/zip/handler/ha_innodb.cc branches/zip: Remove an obsolete declaration of LOCK_thread_count. ------------------------------------------------------------------------ r6352 | marko | 2009-12-22 12:33:01 +0200 (Tue, 22 Dec 2009) | 104 lines Changed paths: M /branches/zip/handler/ha_innodb.cc M /branches/zip/include/lock0lock.h M /branches/zip/include/srv0srv.h M /branches/zip/lock/lock0lock.c M /branches/zip/log/log0log.c M /branches/zip/mysql-test/innodb-autoinc.result M /branches/zip/mysql-test/innodb-autoinc.test M /branches/zip/row/row0sel.c M /branches/zip/srv/srv0srv.c M /branches/zip/srv/srv0start.c branches/zip: Merge revisions 6206:6350 from branches/5.1, except r6347, r6349, r6350 which were committed separately to both branches, and r6310, which was backported from zip to 5.1. ------------------------------------------------------------------------ r6206 | jyang | 2009-11-20 09:38:43 +0200 (Fri, 20 Nov 2009) | 3 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: Non-functional change, fix formatting. ------------------------------------------------------------------------ r6230 | sunny | 2009-11-24 23:52:43 +0200 (Tue, 24 Nov 2009) | 3 lines Changed paths: M /branches/5.1/mysql-test/innodb-autoinc.result branches/5.1: Fix autoinc failing test results. (this should be skipped when merging 5.1 into zip) ------------------------------------------------------------------------ r6231 | sunny | 2009-11-25 10:26:27 +0200 (Wed, 25 Nov 2009) | 7 lines Changed paths: M /branches/5.1/mysql-test/innodb-autoinc.result M /branches/5.1/mysql-test/innodb-autoinc.test M /branches/5.1/row/row0sel.c branches/5.1: Fix BUG#49032 - auto_increment field does not initialize to last value in InnoDB Storage Engine. We use the appropriate function to read the column value for non-integer autoinc column types, namely float and double. rb://208. Approved by Marko. ------------------------------------------------------------------------ r6232 | sunny | 2009-11-25 10:27:39 +0200 (Wed, 25 Nov 2009) | 2 lines Changed paths: M /branches/5.1/row/row0sel.c branches/5.1: This is an interim fix, fix white space errors. ------------------------------------------------------------------------ r6233 | sunny | 2009-11-25 10:28:35 +0200 (Wed, 25 Nov 2009) | 2 lines Changed paths: M /branches/5.1/include/mach0data.h M /branches/5.1/include/mach0data.ic M /branches/5.1/mysql-test/innodb-autoinc.result M /branches/5.1/mysql-test/innodb-autoinc.test M /branches/5.1/row/row0sel.c branches/5.1: This is an interim fix, fix tests and make read float/double arg const. ------------------------------------------------------------------------ r6234 | sunny | 2009-11-25 10:29:03 +0200 (Wed, 25 Nov 2009) | 2 lines Changed paths: M /branches/5.1/row/row0sel.c branches/5.1: This is an interim fix, fix whitepsace issues. ------------------------------------------------------------------------ r6235 | sunny | 2009-11-26 01:14:42 +0200 (Thu, 26 Nov 2009) | 9 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/mysql-test/innodb-autoinc.result M /branches/5.1/mysql-test/innodb-autoinc.test branches/5.1: Fix Bug#47720 - REPLACE INTO Autoincrement column with negative values. This bug is similiar to the negative autoinc filter patch from earlier, with the additional handling of filtering out the negative column values set explicitly by the user. rb://184 Approved by Heikki. ------------------------------------------------------------------------ r6242 | vasil | 2009-11-27 22:07:12 +0200 (Fri, 27 Nov 2009) | 4 lines Changed paths: M /branches/5.1/export.sh branches/5.1: Minor changes to support plugin snapshots. ------------------------------------------------------------------------ r6306 | calvin | 2009-12-14 15:12:46 +0200 (Mon, 14 Dec 2009) | 5 lines Changed paths: M /branches/5.1/mysql-test/innodb-autoinc.result M /branches/5.1/mysql-test/innodb-autoinc.test branches/5.1: fix bug#49267: innodb-autoinc.test fails on windows because of different case mode There is no change to the InnoDB code, only to fix test case by changing ""T1"" to ""t1"". ------------------------------------------------------------------------ r6324 | jyang | 2009-12-17 06:54:24 +0200 (Thu, 17 Dec 2009) | 8 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/include/lock0lock.h M /branches/5.1/include/srv0srv.h M /branches/5.1/lock/lock0lock.c M /branches/5.1/log/log0log.c M /branches/5.1/srv/srv0srv.c M /branches/5.1/srv/srv0start.c branches/5.1: Fix bug #47814 - Diagnostics are frequently not printed after a long lock wait in InnoDB. Separate out the lock wait timeout check thread from monitor information printing thread. rb://200 Approved by Marko. ------------------------------------------------------------------------ ------------------------------------------------------------------------ r6364 | marko | 2009-12-26 21:06:31 +0200 (Sat, 26 Dec 2009) | 4 lines Changed paths: M /branches/zip/ibuf/ibuf0ibuf.c branches/zip: ibuf_bitmap_get_map_page(): Define a wrapper macro that passes __FILE__, __LINE__ of the caller to buf_page_get_gen(). This will ease the diagnosis of the likes of Issue #135. ------------------------------------------------------------------------ "	67cd3302564cbb5e913b46b58e5f03a58f622f8d
----------------------------
don't show the value of open_files_limit 	825ba2ec8b39ebe78d93bb3f34dd00ea35c3ff2e
----------------------------
"Backport Bug #43913  rpl_cross_version can't pass on conflicts complainig clash with --slave-load-tm The 'rpl_cross_version' fails on mysql-next-mr-bugfixing as following: mysqltest: In included file ""./include/setup_fake_relay_log.inc"": At line 80: query 'select './$_fake_filename-fake.000001\n' into dumpfile '$_fake_relay_index'' failed: 1290: The MySQL server is running with the --secure-file-priv option so it cannot execute this statement. To fix the problem by removeing the --secure-file-priv option for adapting the update of the 'setup_fake_relay_log.inc'. "	0c4e5f784b191222c871711286f90651e33da046
----------------------------
"Bug #47863  	binlog_format should be writable only at transaction boundaries When @@session.binlog_format is modified inside a transaction, it can cause slave to go out of sync. To fix the problem, make the session variable 'binlog_format' read-only inside a transaction. "	8e1d1e45f1a4d7da6da6284718bb839cd377c71a
----------------------------
"Change RPM file naming: - Suffix like ""-m2"", ""-rc"" becomes part of version as ""_m2"", ""_rc"". - Release counts from 1, not 0. This is done for both the ""generic"" RPMs and the ""shared-compat"" ones. It includes introducing a new version variable ""MYSQL_U_SCORE_VERSION"" in ""configure.in"", where the dash is replaced by an underscore: 5.5.1-m2   ->  5.5.1_m2 "	a10699754f41c08cdf9564eea817e183952b1891
----------------------------
Merge: 5eed2ac ff82bc7 Merge 7.0-ndb_configure -> 7.0 	0dc086f9cd72a47cfe914ea2415992811e7557aa
----------------------------
"Bug #48878	""Embedded"" tests fail due to an unknown variable ""shared-memory-base-name"" - Remove the special hacks for 'shared-memory-base-name"" and  instead use the loose prefix to allow some programs on some platforms in some configurations not to accept the parameter. - If there is a need to check that the product has ben compiled with a specific paramater that can be done by a .test file and not in the test runner. "	621ee9885d1f7eba291639b3c68dc633cc86006b
----------------------------
ndb - Move config/ac-macros/ha_ndbcluster.m4 to storage/ndb/ where everything belonging to ndb should be kept. 	ff82bc70895265eb358e94b57985d3fa378554b9
----------------------------
"WL#4738 streamline/simplify @@variable creation process Bug#16565 mysqld --help --verbose does not order variablesBug#20413 sql_slave_skip_counter is not shown in show variables Bug#20415 Output of mysqld --help --verbose is incomplete Bug#25430 variable not found in SELECT @@global.ft_max_word_len; Bug#32902 plugin variables don't know their names Bug#34599 MySQLD Option and Variable Reference need to be consistent in formatting! Bug#34829 No default value for variable and setting default does not raise error Bug#34834 ? Is accepted as a valid sql mode Bug#34878 Few variables have default value according to documentation but error occurs Bug#34883 ft_boolean_syntax cant be assigned from user variable to global var. Bug#37187 `INFORMATION_SCHEMA`.`GLOBAL_VARIABLES`: inconsistent status Bug#40988 log_output_basic.test succeeded though syntactically false. Bug#41010 enum-style command-line options are not honoured (maria.maria-recover fails) Bug#42103 Setting key_buffer_size to a negative value may lead to very large allocations Bug#44691 Some plugins configured as MYSQL_PLUGIN_MANDATORY in can be disabled Bug#44797 plugins w/o command-line options have no disabling option in --help Bug#46314 string system variables don't support expressions Bug#46470 sys_vars.max_binlog_cache_size_basic_32 is broken Bug#46586 When using the plugin interface the type ""set"" for options caused a crash. Bug#47212 Crash in DBUG_PRINT in mysqltest.cc when trying to print octal number Bug#48758 mysqltest crashes on sys_vars.collation_server_basic in gcov builds Bug#49417 some complaints about mysqld --help --verbose output Bug#49540 DEFAULT value of binlog_format isn't the default value Bug#49640 ambiguous option '--skip-skip-myisam' (double skip prefix) Bug#49644 init_connect and \0 Bug#49645 init_slave and multi-byte characters Bug#49646 mysql --show-warnings crashes when server dies "	ae2768ce9c7df45ec88ba49bf149985bf7c9308d
----------------------------
Bug#43005 main.init_connect fails on Windows due to wrong quoting of args - The arguments are properly quoted when mtr.pl calls my_safe_process but unfortunately the all off when running with active state perl and stays in cygwin perl. - Extend the patch to only quote args that are not already quoted 	f8c38500ed439331b4496e8da3243a1557b6bddd
----------------------------
Bug#49807 2nd management node refuses to start when 1st mgmd and data nodes are running - reset any dynamic ports in the config fetched from other mgmd before using it. 	ea7b10609d8e25d45231094aae150bde543c8253
----------------------------
Merge: 1ae7130 d05c63f Manual merge from mysql-trunk-merge (configure.in). 	45222a117dcc9f358bf217646f292a8cae5b9ad0
----------------------------
Bug#30331: Table_locks_waited shows inaccurate values Post-merge fix: wait for statement result before disconnecting. Otherwise, the statement might affect unrelated tests. 	885523381fc5e0f56a25c9a1f6671a55fd93a239
----------------------------
Fix for Bug#37408 - Compressed MyISAM files should not require/use mmap() When compressed myisam files are opened, they are always memory mapped sometimes causing memory swapping problems. When we mmap the myisam compressed tables of size greater than the memory available, the kswapd0 process utilization is very high consuming 30-40% of the cpu. This happens only with linux kernels older than 2.6.9 With newer linux kernels, we don't have this problem of high cpu consumption and this option may not be required. The option 'myisam_mmap_size' is added to limit the amount of memory used for memory mapping of myisam files. This option is not dynamic. The default value on 32 bit system is 4294967295 bytes and on 64 bit system it is 18446744073709547520 bytes. Note: Testcase only tests the option variable. The actual bug has be to tested manually. 	801deedcf265bd3fe90e45c93b37133b68a19ba9
----------------------------
Merge: 42cfe5b d6e7402 merging from 5.1 to rep+2 starting at gca(5.1, next-mr) == build@mysql.com-20091208092611-pbno5awyb0v38hs7 Fixed conflicts in: - binlog.binlog_unsafe - rpl.rpl_slow_query_log 	013cc668df5e553cc93527ae002ef1be3b6cdf10
----------------------------
bug#47037 fixing master_server_id to stay initially 0 	37aa837657832826f44818ab63cf6ae2aaaedd99
----------------------------
Backporting a patch for Bug#49170 (Inconsistent placement of semisync plugin prevents it from getting tested) from mysql-next-mr-bugfixing to mysql-trunk-bugfixing. Original revision: ------------------------------------------------------------ revision-id: zhenxing.he@sun.com-20091204014339-2m06r42vajhm9vke committer: He Zhenxing <zhenxing.he@sun.com> branch nick: 5.1-rep-semisync timestamp: Fri 2009-12-04 09:43:39 +0800 message: Bug#49170 Inconsistent placement of semisync plugin prevents it from getting tested Add $basedir/lib/plugin to the search paths for semisync plugins. ------------------------------------------------------------ 	7688c7369c8d164f6985860aeb14e5fe6645b592
----------------------------
ndb - remove 3200 warnings from ConfigInfo, by being more type unsafe and obscure 	e903d93d0909fe08a93c660c669db233b0b20b7b
----------------------------
Merge: 7dcc9c8 5e74b3a bug#47037 improving display of master_server_id to show it as (ulong) -1 while the value is not yet gained from a real connected master 	5df8d260107f5111779e6a893876d27f9f29f968
----------------------------
Bug #48940 MDL deadlocks against mysql_rm_db This deadlock would occur between two connections A and B if statements where executed in the following way: 1) Connection A executes a DML statement against table s1.t1 with autocommit off. This causes a shared metadata lock on s1.t1 to be acquired. (With autocommit on, the metadata lock will be dropped once the statment completes and the deadlock will not occour.) 2) Connection B tries to DROP DATABASE s1. This will block against the metadata lock connection A holds on s1.t1. While blocking, connection B will hold the LOCK_mysql_create_db mutex. 3) Connection A tries to ALTER DATABASE s1. This will block when trying to get LOCK_mysql_create_db mutex held by connection B. 4) Deadlock between DROP DATABASE and ALTER DATABASE (which has autocommit off). If Connection A used an explicitly started transaction rather than having autocommit off, this deadlock did not happen as ALTER DATABASE is disallowed inside transactions. This patch fixes the problem by changing ALTER DATABASE to cause an implicit commit before executing. This will cause the metadata lock on s1.t1 to be dropped, allowing DROP DATABASE to proceed. This will in turn cause the LOCK_mysql_create_db mutex to be unlocked, allowing ALTER DATABASE to proceed. Note that SQL commands other than ALTER DATABASE that also use LOCK_mysql_create_db, already cause an implicit commit. Incompatible change: ALTER DATABASE (and its synonym ALTER SCHEMA) now cause an implicit commit. This must be reflected in the documentation. Test case added to schema.test. 	3394cbf72cc09ca4735f88c2669ccd853134dfa8
----------------------------
"bug#49536 - deadlock on rotate_and_purge when using expire_logs_days Problem is that purge_logs implementation in ndb (ndbcluster_binlog_index_purge_file) calls mysql_parse (with (thd->options & OPTION_BIN_LOG) === 0)) but MYSQL_BIN_LOG first takes LOCK_log and then checks thd->options Solution in this patch, changes so that rotate_and_purge does not hold LOCK_log when calling purge_logs_before_date. I think this is safe as other ""purge""-function(s) is called wo/ holding LOCK_log, e.g purge_master_logs "	e76d96c4adddd1ab2868339b82abb49ba7e17cda
----------------------------
WL#5151: Conversion between different types when replicating Row-based replication requires the types of columns on the master and slave to be approximately the same (some safe conversions between strings are allowed), but does not allow safe conversions between fields of similar types such as TINYINT and INT. This patch implement type conversions between similar fields on the master and slave. The conversions are controlled using a new variable SLAVE_TYPE_CONVERSIONS of type SET('ALL_LOSSY','ALL_NON_LOSSY'). Non-lossy conversions are any conversions that do not run the risk of losing any information, while lossy conversions can potentially truncate the value. The column definitions are checked to decide if the conversion is acceptable. If neither conversion is enabled, it is required that the definitions of the columns are identical on master and slave. Conversion is done by creating an internal conversion table, unpacking the master data into it, and then copy the data to the real table on the slave. 	c63df11f375dc5f7eb461c2955ce04ca42aa1e8c
----------------------------
bug#49536 - deadlock on rotate_and_purge when using expire_logs_days Problem is that purge_logs implementation in ndb (ndbcluster_binlog_index_purge_file) calls mysql_parse (with (thd->options & OPTION_BIN_LOG) === 0)) but MYSQL_BIN_LOG first takes LOCK_log and then checks thd->options Solution in this patch, changes so that rotate_and_purge does not hold LOCK_log when calling purge_logs_before_date. 	739a56d3e582bfd10db8528cb6478f4369822234
----------------------------
Bug #42849: innodb crash with varying time_zone on partitioned timestamp primary key Since TIMESTAMP values are adjusted by the current time zone settings in both numeric and string contexts, using any expressions involving TIMESTAMP values as a (sub)partitioning function leads to undeterministic behavior of partitioned tables. The effect may vary depending on a storage engine, it can be either incorrect data being retrieved or stored, or an assertion failure. The root cause of this is the fact that the calculated partition ID may differ from a previously calculated ID for the same data due to timezone adjustments of the partitioning expression value. Fixed by disabling any expressions involving TIMESTAMP values to be used in partitioning functions with the follwing two exceptions: 1. Creating or altering into a partitioned table that violates the above rule is not allowed, but opening existing such tables results in a warning rather than an error so that such tables could be fixed. 2. UNIX_TIMESTAMP() is the only way to get a timezone-independent value from a TIMESTAMP column, because it returns the internal representation (a time_t value) of a TIMESTAMP argument verbatim. So UNIX_TIMESTAMP(timestamp_column) is allowed and should be used to fix existing tables if one wants to use TIMESTAMP columns with partitioning. 	a8cfe3d4f74db680084c3ec8a8b6fbd8f71780d6
----------------------------
"Backport of: ----------------------------------------------------------- 2630.28.28 Magne Mahre  2008-12-05 Bug #38661 'all threads hang in ""opening tables"" or ""waiting for table"" and cpu is at 100%' Concurrent execution of FLUSH TABLES statement and at least two statements using the same table might have led to live-lock which caused all three connections to stall and hog 100% of CPU. tdc_wait_for_old_versions() wrongly assumed that there cannot be a share with an old version and no used TABLE instances and thus was failing to perform wait in situation when such old share was cached in MDL subsystem thanks to a still active metadata lock on the table. So it might have happened that two or more connections simultaneously executing statements which involve table being flushed managed to prevent each other from waiting in this function by keeping shared metadata lock on the table constantly active (i.e. one of the statements managed to take/hold this lock while other statements were calling tdc_wait_for_old_versions()). Thus they were forcing each other to loop infinitely in open_tables() - close_thread_tables_for_reopen() - tdc_wait_for_old_versions() cycle causing CPU hogging. This patch fixes this problem by removing this false assumption from tdc_wait_for_old_versions(). Note that the problem is specific only for server versions >= 6.0. No test case is submitted for this test, as the test infrastructure hasn't got the necessary primitives to test the behaviour.  The manifestation is that throughput will decrease to a low level (possibly 0) after some time, and stay at that level. Several transactions will not complete. Manual testing can be done by running the code submitted by Shane Bester attached to the bug report.  If the bug persists, the transaction thruput will almost immediately drop to near zero (shown as the transaction count output from the test program staying on a close to constant value, instead of increasing rapidly). "	a3814e36356fb339f0d22d19a886a7bb68a9161f
----------------------------
WL#5092: Fix so that binlog_row_image works with session value in delayed thread. Minor changes in the sanity test case. 	8fada28217d031781d8c07a43c1c9e5a866ec82e
----------------------------
Bug#41425 Assertion in Protocol::end_statement() (pushbuild2) (diagnostics_area) Execution of CREATE TABLE ... SELECT statement was not atomic in the sense that concurrent statements trying to affect its target table might have sneaked in between the moment when the table was created and moment when it was filled according to SELECT clause. This resulted in inconsistent binary log, unexpected target table contents. In cases when concurrent statement was a DDL statement CREATE TABLE ... SELECT might have failed with ER_CANT_LOCK error. In more detail: Due to premature metadata lock downgrade which occured after CREATE TABLE SELECT statement created table but before it managed to obtain table-level lock on it other statements were allowed to open, lock and change target table in the middle of CREATE TABLE SELECT execution. This also meant that it was possible that CREATE TABLE SELECT would wait in mysql_lock_tables() when it was called for newly created table and that this wait could have been aborted by concurrent DDL. The latter led to execution of unexpected branch of code and CREATE TABLE SELECT ending with ER_CANT_LOCK error. The premature downgrade occured because open_table(), which was called for newly created table, decided that it is OK to downgrade metadata lock from exclusive to shared since table exists, even although it was not acquired within this call. This fix ensures that open_table() does not downgrade metadata lock if it is not acquired during its current invocation. Testing: The bug is exposed in a race condition, and is thus difficult to expose in a standard mysql-test-run test case.  Instead, a stress test using the Random Query Generator (https://launchpad.net/randgen) will trip the problem occasionally. % perl  runall.pl \ --basedir=<build dir> \ --mysqld=--table-lock-wait-timeout=5 \ --mysqld=--skip-safemalloc \ --grammar=conf/maria_bulk_insert.yy \ --reporters=ErrorLog,Backtrace,WinPackage \ --mysqld=--log-output=file  \ --queries=100000 \ --threads=10 \ --engine=myisam Note: You will need a debug build to expose the bug When the bug is tripped, the server will abort and dump core. Backport from 6.0-codebase   (revid: 2617.53.4) 	323f20eaef320b4d0c27620eb178cdc68e7a8afc
----------------------------
Backport of revno: 2617.68.3 Followup to Bug#42546 Backup: RESTORE fails, thinking it finds an existing table This patch updates lowercase_table2.test with the changed error message CREATE TABLE produces if it fails because it finds an matching TABLE_SHARE in the TDC even if the .FRM/.MYD has been removed from disk. With the changes introduced in Bug#42546, CREATE TABLE uses open_tables() which will find the TDC entry and fail in open_table_from_share() with ER_FILE_NOT_FOUND. Before, CREATE TABLE would not use open_tables() and fail with ER_TABLE_EXISTS_ERROR upon finding the TDC entry in mysql_create_table_no_lock(). 	9e17ef84ccf4e00648eb7aab9d98dd4eab3b6e5a
----------------------------
"------------------------------------------------------------ revno: 2617.68.23 committer: Dmitry Lenev <dlenev@mysql.com> branch nick: mysql-next-bg-pre1 timestamp: Wed 2009-09-16 09:34:42 +0400 message: Pre-requisite patch for fixing bug #30977 ""Concurrent statement using stored function and DROP FUNCTION breaks SBR"". CREATE TABLE SELECT statements take exclusive metadata lock on table being created. Invariant of metadata locking subsystem states that such lock should be taken before taking any kind of shared locks. Once metadata locks on stored routines are introduced statements like ""CREATE TABLE ... SELECT f1()"" will break this invariant by taking shared locks on routines before exclusive lock on target table. To avoid this, open_tables() is reworked to process tables which are directly used by the statement before stored routines are processed. "	10db8e79c58ebb646ad777ae8288d6276698b545
----------------------------
"Backport of: ------------------------------------------------------------ revno: 2617.68.10 committer: Dmitry Lenev <dlenev@mysql.com> branch nick: mysql-next-bg46673 timestamp: Tue 2009-09-01 19:57:05 +0400 message: Fix for bug #46673 ""Deadlock between FLUSH TABLES WITH READ LOCK and DML"". Deadlocks occured when one concurrently executed transactions with several statements modifying data and FLUSH TABLES WITH READ LOCK statement or SET READ_ONLY=1 statement. These deadlocks were introduced by the patch for WL 4284: ""Transactional DDL locking""/Bug 989: ""If DROP TABLE while there's an active transaction, wrong binlog order"" which has changed FLUSH TABLES WITH READ LOCK/SET READ_ONLY=1 to wait for pending transactions. What happened was that FLUSH TABLES WITH READ LOCK blocked all further statements changing tables by setting global_read_lock global variable and has started waiting for all pending transactions to complete. Then one of those transactions tried to executed DML, detected that global_read_lock non-zero and tried to wait until global read lock will be released (i.e. global_read_lock becomes 0), indeed, this led to a deadlock. Proper solution for this problem should probably involve full integration of global read lock with metadata locking subsystem (which will allow to implement waiting for pending transactions without blocking DML in them). But since it requires significant changes another, short-term solution for the problem is implemented in this patch. Basically, this patch restores behavior of FLUSH TABLES WITH READ LOCK/ SET READ_ONLY=1 before the patch for WL 4284/bug 989. By ensuring that extra references to TABLE_SHARE are not stored for active metadata locks it changes these statements not to wait for pending transactions. As result deadlock is eliminated. Note that this does not change the fact that active FLUSH TABLES WITH READ LOCK lock or SET READ_ONLY=1 prevent modifications to tables as they also block transaction commits. "	2c538778957b81ea70de57501eee61403c284e91
----------------------------
Backport of revno: 2617.31.30 Bug #21793 Missing CF_CHANGES_DATA and CF_STATUS_COMMAND for handful of commands CF_CHANGES_DATA and CF_STATUS_COMMAND flags added to the commands mentioned in the bug description. With the following two exceptions: 1) 4 commands do not exist: SQLCOM_RENAME_DB SQLCOM_LOAD_MASTER_DATA SQLCOM_LOAD_MASTER_TABLE SQLCOM_SHOW_COLUMN_TYPES 2) All SQLCOM_SHOW_* commands already had CF_STATUS_COMMAND, leaving only SQLCOM_BINLOG_BASE64_EVENT. Further, check_prepared_statement() in sql_prepare.cc has been simplified by taking advantage of the CF_STATUS_COMMAND flag. Note that no test case has been added. 	fb545cf9d8f2cc38afe35640534f51e6281dee38
----------------------------
"Backport of revno: 2617.69.34 Bug #45949 Assertion `!tables->table' in open_tables() on ALTER + INSERT DELAYED The assertion was caused by improperly closing tables when INSERT DELAYED needed to reopen tables. This patch replaces the call to close_thread_tables with close_tables_for_reopen which fixes the problem. The only way I was able to trigger the reopen code path and thus the assertion, was if ALTER TABLE killed the delayed insert thread and the delayed insert thread was able to enter the reopen code path before it noticed that thd->killed had been set. Note that in these cases reopen will always fail since open_table() will check thd->killed and return. This patch therefore adds two more thd->killed checks to minimize the chance of entering the reopen code path without hope for success. The patch also changes it so that if the delayed insert is killed using KILL_CONNECTION, the error message that is copied to the connection thread is ER_QUERY_INTERRUPTED rather than ER_SERVER_SHUTDOWN. This means that if INSERT DELAYED fails, the user will now see ""Query execution was interrupted"" rather than the misleading ""Server shutdown in progress"". No test case is supplied. This is for two reasons: 1) Unable to reproduce the error without having the delayed insert thread in a killed state which means that reopen is futile and was not supposed to be attempted. 2) Difficulty of using sync points in other threads than the connection thread. The patch has been successfully tested with the RQG and the grammar supplied in the bug description. "	4b8db713aaa617ee089eedab42d3ab4598355e3f
----------------------------
"Backport of: ------------------------------------------------------------ revno: 2617.69.37 committer: Dmitry Lenev <dlenev@mysql.com> branch nick: mysql-next-bg46748 timestamp: Fri 2009-08-21 18:17:02 +0400 message: Fix for bug #46748 ""Assertion in MDL_context::wait_for_locks() on INSERT + CREATE TRIGGER"". Concurrent execution of statements involving stored functions or triggers which were using several tables and DDL statements which affected those tables on debug build of server might have led to assertion failures in MDL_context::wait_for_locks(). Non-debug build was not affected. The problem was that during back-off which happens when open_tables() encounters conflicting metadata lock for one of the tables being open we didn't reset MDL_request::ticket value for requests which correspond to tables from extended prelocking set. Since these requests are part of of list of requests to be waited for in Open_table_context this broke assumption that ticket value for them is 0 in MDL_context::wait_for_locks() and caused assertion failure. This fix ensures that close_tables_for_reopen(), which performs this back-off resets MDL_request::ticket value not only for tables directly used by the statement but also for tables from extended prelocking set, thus satisfying assumption described above. "	289d2bf72b7ee99b2f7e5f60e9aabb0e0d41bef3
----------------------------
Backport of: ---------------------------------------------------------- revno: 2617.69.25 committer: Konstantin Osipov <kostja@sun.com> branch nick: 5.4-42546 timestamp: Fri 2009-08-14 23:52:00 +0400 message: A cleanup in open_tables() and lock_tables(): change return type of these functions to bool from int, to follow convention in the rest of the code. (Part of WL#4284 review fixes). 	c95448ba11e1827cb7863a6679fbd57907f097c5
----------------------------
Use CMAKE_CFG_INTDIR instead of different MSVC and Xcode specific configuration names 	962d3fb94af144c716fd84d953ee324cca915ae4
----------------------------
"Backport of: ---------------------------------------------------------- revno: 2617.69.24 committer: Konstantin Osipov <kostja@sun.com> branch nick: 5.4-42546 timestamp: Fri 2009-08-14 19:22:05 +0400 message: A pre-requisite for a fix for Bug#42546 ""Backup: RESTORE fails, thinking it finds an existing table"" Back-port from WL 148 ""Foreign keys"" feature tree a patch that introduced Prelocking_strategy class -- a way to parameterize open_tables() behaviour, implemented by Dmitry Lenev. (Part of WL#4284). "	c20afa6d49d36df2b8609da7c977b852d3bac521
----------------------------
"Backport of revid 2617.69.21, 2617.69.22, 2617.29.23: ---------------------------------------------------------- revno: 2617.69.21 committer: Konstantin Osipov <kostja@sun.com> branch nick: 5.4-4284-1-assert timestamp: Thu 2009-08-13 20:13:55 +0400 message: A fix and a test case for Bug#46610 ""MySQL 5.4.4: MyISAM MRG engine crash on auto-repair of child"". Also fixes Bug#42862 ""Crash on failed attempt to open a children of a merge table"". MERGE engine needs to extend the global table list with TABLE_LIST elements for child tables, so that they are opened and locked. Previously these table list elements were allocated in memory of ha_myisammrg object (MERGE engine handler). That would lead to access to freed memory in recover_from_failed_open_table_attempt(), which would try to recover a MERGE table child (MyISAM table) and use for that TABLE_LIST of that child. But by the time recover_from_failed_open_table_attempt() is invoked, ha_myisammrg object that owns this TABLE_LIST may be destroyed, and thus TABLE_LIST memory freed. The fix is to ensure that TABLE_LIST elements that are added to the global table list (lex->query_tables) are always allocated in thd->mem_root, which is not destroyed until end of execution. If previously TABLE_LIST elements were allocated at ha_myisammrg::open() (i.e. when the TABLE object was created and added to the table cache), now they are allocated in ha_myisammrg::add_chidlren_list() (i.e. right after ""open"" of the merge parent in open_tables()). We still create a list of children names at ha_myisammrg::open() to use as a basis for creation of TABLE_LISTs, that allows to avoid reading the merge handler data file on every execution. "	22630531cbea0bf85217ecba4e2670b7e3e21bbb
----------------------------
"Backport of revno: 2617.65.1 Bug #22876 Four-way deadlock This bug was fixed as a part of Bug#989 ""If DROP TABLE while there's an active transaction, wrong binlog order"" A statement which would have caused circular wait will now be aborted with ER_LOCK_DEADLOCK. Test case based on bug description added to innodb_mysql_lock.test. Note that innodb_lock_wait_timeout is set to 5 mins to prevent race conditions in the test. "	502b4ea47f2d1bdc96c34ce77ce6d25d3df9e1dc
----------------------------
ndb - allow ndbd to connect to 63 ndb_mgmd, by not asserting if CFG_SYS_CONFIG_GENERATION is not found 	325a9e4bd1906cf5de4280e4b4e54e0866ebfc2a
----------------------------
"Backport of: ---------------------------------------------------------- revno: 2617.69.20 committer: Konstantin Osipov <kostja@sun.com> branch nick: 5.4-4284-1-assert timestamp: Thu 2009-08-13 18:29:55 +0400 message: WL#4284 ""Transactional DDL locking"" A review fix. Since WL#4284 implementation separated MDL_request and MDL_ticket, MDL_request becamse a utility object necessary only to get a ticket. Store it by-value in TABLE_LIST with the intent to merge MDL_request::key with table_list->table_name and table_list->db in future. Change the MDL subsystem to not require MDL_requests to stay around till close_thread_tables(). Remove the list of requests from the MDL context. Requests for shared metadata locks acquired in open_tables() are only used as a list in recover_from_failed_open_table_attempt(), which calls mdl_context.wait_for_locks() for this list. To keep such list for recover_from_failed_open_table_attempt(), introduce a context class (Open_table_context), that collects all requests. A lot of minor cleanups and simplications that became possible with this change. "	a66a2608ae4d70a3f9b3d41e38cfb97eb616bed3
----------------------------
"Backport of: ---------------------------------------------------------- revno: 2617.69.2 committer: Konstantin Osipov <kostja@sun.com> branch nick: 5.4-azalea-bugfixing timestamp: Mon 2009-08-03 19:26:04 +0400 message: A fix and a test case for Bug#45035 ""Altering table under LOCK TABLES results in ""Error 1213 Deadlock found..."". If a user had a table locked with LOCK TABLES for READ and for WRITE in the same connection, ALTER TABLE could fail. Root cause analysis: If a connection issues LOCK TABLE t1 write, t1 a read, t1 b read; the new LOCK TABLES code in 6.0 (part of WL 3726) will create the following list of TABLE_LIST objects (thd->locked_tables_list->m_locked_tables): {""t1"" ""b"" tl_read_no_insert}, {""t1"" ""a"" tl_read_no_insert}, {""t1"" ""t1"" tl_write } Later on, when we try to ALTER table t1, mysql_alter_table() closes all TABLE instances and releases its thr_lock locks, keeping only an exclusive metadata lock on t1. But when ALTER is finished, Locked_table_list::reopen_tables() tries to restore the original list of open and locked tables. Before this patch, it used to do so one by one: Open t1 b, get TL_READ_NO_INSERT lock, Open t1 a, get TL_READ_NO_INSERT lock Open t1, try to get TL_WRITE lock, deadlock. The cause of the deadlock is that thr_lock.c doesn't resolve the situation when the read list only consists of locks taken by the same thread, followed by this very thread trying to take a WRITE lock. Indeed, since thr_lock_multi always gets a sorted list of locks, WRITE locks always precede READ locks in the list to lock. Don't try to fix thr_lock.c deficiency, keep this code simple. Instead, try to take all thr_lock locks at once in ::reopen_tables(). "	4a8a1c568d8785dc608cc111e74e1ed389f1353e
----------------------------
fix small stuff in mysql_config 	8c09ac87b28b8ba9b28b5e51a7b07f7e2f8834b2
----------------------------
remove mtmalloc from configure.in 	45ca0a309386dfeeaec54b8455b771f7396f9b48
----------------------------
Bug #45441 MySQL should have a datetime for the last slave heartbeat Adds the status variable 'Slave_last_heartbeat' which records the datetime of when the last heartbeat was received. Port to MySQL 5.5 and remove un-needed mutex lock. 	03786c9e0d424ab56270b8f46c903646ad0de7a3
----------------------------
BUG#45292 orphan binary log created when starting server twice This patch fixes three bugs as follows. First, aborting the server while purging binary logs might generate orphan files due to how the purge operation was implemented: (purge routine - sql/log.cc - MYSQL_BIN_LOG::purge_logs) 1 - register the files to be removed in a temporary buffer. 2 - update the log-bin.index. 3 - flush the log-bin.index. 4 - erase the files whose names where register in the temporary buffer in step 1. Thus a failure while  executing step 4 would generate an orphan file. Second, a similar issue might happen while creating a new binary as follows: (create routine - sql/log.cc - MYSQL_BIN_LOG::open) 1 - open the new log-bin. 2 - update the log-bin.index. Thus a failure while executing step 1 would generate an orphan file. To fix these issues, we record the files to be purged or created before really removing or adding them. So if a failure happens such records can be used to automatically remove dangling files. The new steps might be outlined as follows: (purge routine - sql/log.cc - MYSQL_BIN_LOG::purge_logs) 1 - register the files to be removed in the log-bin.~rec~ placed in the data directory. 2 - update the log-bin.index. 3 - flush the log-bin.index. 4 - delete the log-bin.~rec~. (create routine - sql/log.cc - MYSQL_BIN_LOG::open) 1 - register the file to be created in the log-bin.~rec~ placed in the data directory. 2 - open the new log-bin. 3 - update the log-bin.index. 4 - delete the log-bin.~rec~. (recovery routine - sql/log.cc - MYSQL_BIN_LOG::open_index_file) 1 - open the log-bin.index. 2 - open the log-bin.~rec~. 3 - for each file in log-bin.~rec~. 3.1 Check if the file is in the log-bin.index and if so ignore it. 3.2 Otherwise, delete it. The third issue can be described as follows. The purge operation was allowing to remove a file in use thus leading to the loss of data and possible inconsistencies between the master and slave. Roughly, the routine was only taking into account the dump threads and so if a slave was not connect the file might be delete even though it was in use. 	e362e9a71bf311e6d241e60fafc04adcf6bb756d
----------------------------
Bug#49020 Semi-sync master crashed with free_pool == NULL, assertion `free_pool_' Before this patch, semisync assumed transactions running in parallel can not be larger than max_connections, but this is not true when the event scheduler is executing events, and cause semisync run out of preallocated transaction nodes. Fix the problem by allocating transaction nodes dynamically. This patch also fixed a possible deadlock when running UNINSTALL PLUGIN rpl_semi_sync_master and updating in parallel. Fixed by releasing the internal Delegate lock before unlock the plugins. 	16ec25c0a8438473d2273722de37ade855615ea4
----------------------------
Bug#49170 Inconsistent placement of semisync plugin prevents it from getting tested Add $basedir/lib/plugin to the search paths for semisync plugins. 	4ea0296e43cb712cf8913962bfc370bc1520141d
----------------------------
------------------------------------------------------------ revno: 2617.22.4 committer: Davi Arnaut <Davi.Arnaut@Sun.COM> branch nick: mysql-6.0-runtime timestamp: Mon 2009-01-26 15:19:14 -0200 message: Move checks for OPTION_NOT_AUTOCOMMIT | OPTION_BEGIN to a separate helper function. 	67c1b06f1257744d587779132e8434cbeb5fd343
----------------------------
"This is a patch for bug#41569. ""mysql_upgrade (ver 5.1) add 3 fields to mysql.proc table but does not set values"". mysql_upgrade (ver 5.1) adds 3 fields (character_set_client, collation_connection and db_collation) to the mysql.proc table, but does not set any values. When we run stored procedures, which were created with mysql 5.0, a warning is logged into the error log. The solution to this is for mysql_upgrade to set default best guess values for these fields. A warning is also written during upgrade, to make the user aware that default values are set. "	99654c27f07a22fcd291d46e97cb01b68e1249fb
----------------------------
Bug #48985: show create table crashes if previous access to the table was killed When checking for an error after removing the special view error handler the code was not taking into account that open_tables() may fail because of the current statement being killed. Added a check for thd->killed. Added a client program to test it. 	1457d7b3679956e5d97a34e58a7b0ff5dffcec85
----------------------------
"Backport of: ------------------------------------------------------------ revno: 2630.4.39 committer: Dmitry Lenev <dlenev@mysql.com> branch nick: mysql-6.0-3726-w2 timestamp: Thu 2008-06-26 13:08:27 +0400 message: Fix warnings about passing pointer to not fully-initialized THD object to constructor of base Open_tables_state classe, which appeared on Windows and were introduced by one of the patches implementing WL#3726 ""DDL locking for all metadata objects"". "	45a5d7971336620d37b153526f1d7c9da0f99c1d
----------------------------
"Backport of: ---------------------------------------------------------- revno: 2630.4.38 committer: Konstantin Osipov <konstantin@mysql.com> branch nick: mysql-6.0-4144 timestamp: Wed 2008-06-25 22:07:06 +0400 message: WL#4144 - Lock MERGE engine children. Committing a version of the patch merged with WL#3726 on behalf of Ingo. Step #1: Move locking from parent to children. MERGE children are now left in the query list of tables after inserted there in open_tables(). So they are locked by lock_tables() as all other tables are. The MERGE parent does not store locks any more. It appears in a MYSQL_LOCK with zero lock data. This is kind of a ""dummy"" lock. All other lock handling is also done directly on the children. To protect against parent or child modifications during LOCK TABLES, the children are detached after every statement and attached before every statement, even under LOCK TABLES. The children table list is removed from the query list of tables on every detach and on close of the parent. Step #2: Move MERGE specific functionality from SQL layer into table handler. Functionality moved from SQL layer (mainly sql_base.cc) to the table handler (ha_myisammrg.cc). Unnecessary code is removed from the SQL layer. Step #3: Moved all MERGE specific members from TABLE to ha_myisammrg. Moved members from TABLE to ha_myisammrg. Renamed some mebers. Fixed comments. Step #4: Valgrind and coverage testing Valgrind did not uncover new problems. Added purecov comments. Added a new test for DATA/INDEX DIRECTORY options. Changed handling of ::reset() for non-attached children. Fixed the merge-big test. Step #5: Fixed crashes detected during review Changed detection when to attach/detach. Added new tests. Backport also the fix for Bug#44040 ""MySQL allows creating a MERGE table upon VIEWs but crashes when using it"" "	ef15a335b3c924b779ba986acafffad41ff07ba8
----------------------------
"Backport of: ------------------------------------------------------------ revno: 2630.4.27 committer: Dmitry Lenev <dlenev@mysql.com> branch nick: mysql-6.0-3726-w2 timestamp: Mon 2008-06-09 14:01:19 +0400 message: WL#3726 ""DDL locking for all metadata objects"". After review fixes in progress. Changed open_table() to return bool. This allows more easily to distinguish cases when this function succeeds but returns no TABLE instance (in case of view or in case of special kind of open) from cases when we have an error. Pointer to TABLE instance is now always returned in TABLE_LIST::table member. This change allows to get rid of false assumption in open_tables() implementation and makes it more clear. "	77be8ba5e000e3d5b1cbc946aa57d08cc7343157
----------------------------
- Introduce MYSQL_ADD_PLUGIN that replaces MYSQL_STORAGE_ENGINE - Fix semisync library prefix (remove lib on Unixes) - restrict exported symbols from zlib and yassl (fvisibility=hidden) 	5dfa313eb7c9c1663b0e79b6ff4bca1f9ac77e51
----------------------------
"Applying InnoDB Plugin 1.0.6 snapshot, part 9. Fixes BUG#48526, BUG#48317 applied revisions: r6197, r6198, r6199 r6197 - BUG#48317 r6199 - BUG#48526 Detailed revision comments: r6197 | calvin | 2009-11-19 09:32:55 +0200 (Thu, 19 Nov 2009) | 6 lines branches/zip: merge the fix of bug#48317 (CMake file) Due to MySQL changes to the CMake, it is no longer able to build InnoDB plugin as a static library on Windows. The fix is proposed by Vlad of MySQL. r6198 | vasil | 2009-11-19 09:44:31 +0200 (Thu, 19 Nov 2009) | 4 lines branches/zip: Add ChangeLog entry for r6197. r6199 | vasil | 2009-11-19 12:10:12 +0200 (Thu, 19 Nov 2009) | 31 lines branches/zip: Merge r6159:6198 from branches/5.1: ------------------------------------------------------------------------ r6187 | jyang | 2009-11-18 05:27:30 +0200 (Wed, 18 Nov 2009) | 9 lines Changed paths: M /branches/5.1/btr/btr0btr.c branches/5.1: Fix bug #48469 ""when innodb tablespace is configured too small, crash and corruption!"". Function btr_create() did not check the return status of fseg_create(), and continue the index creation even there is no sufficient space. rb://205 Approved by Marko ------------------------------------------------------------------------ r6188 | jyang | 2009-11-18 07:14:23 +0200 (Wed, 18 Nov 2009) | 8 lines Changed paths: M /branches/5.1/data/data0type.c branches/5.1: Fix bug #48526 ""Data type for float and double is incorrectly reported in InnoDB table monitor"". Certain datatypes are not printed correctly in dtype_print(). rb://204 Approved by Marko. ------------------------------------------------------------------------ "	f35e3c0aab44e48dbd0ecfb8488549f8f18fd2a7
----------------------------
"Applying InnoDB Plugin 1.0.6 snapshot, part 7 Fixes several test cases. applied revisions: r6181, r6182, r6183, r6184 r6183 - changes are made only to tests in innodb suite which is only innodb-consistent-master.opt Detailed revision comments: r6181 | vasil | 2009-11-17 12:21:41 +0200 (Tue, 17 Nov 2009) | 33 lines branches/zip: At the end of innodb-index.test: restore the environment as it was before the test was started to silence this warning: MTR's internal check of the test case 'main.innodb-index' failed. This means that the test case does not preserve the state that existed before the test case was executed.  Most likely the test case did not do a proper clean-up. This is the diff of the states of the servers before and after the test case was executed: mysqltest: Logging to '/tmp/autotest.sh-20091117_033000-zip.btyZwu/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.log'. mysqltest: Results saved in '/tmp/autotest.sh-20091117_033000-zip.btyZwu/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.result'. mysqltest: Connecting to server localhost:13000 (socket /tmp/autotest.sh-20091117_033000-zip.btyZwu/mysql-5.1/mysql-test/var/tmp/mysqld.1.sock) as 'root', connection 'default', attempt 0 ... mysqltest: ... Connected. mysqltest: Start processing test commands from './include/check-testcase.test' ... mysqltest: ... Done processing test commands. --- /tmp/autotest.sh-20091117_033000-zip.btyZwu/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.result	2009-11-17 13:10:40.000000000 +0300 +++ /tmp/autotest.sh-20091117_033000-zip.btyZwu/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.reject	2009-11-17 13:10:54.000000000 +0300 @@ -84,7 +84,7 @@ INNODB_DOUBLEWRITE	ON INNODB_FAST_SHUTDOWN	1 INNODB_FILE_FORMAT	Antelope -INNODB_FILE_FORMAT_CHECK	Antelope +INNODB_FILE_FORMAT_CHECK	Barracuda INNODB_FILE_PER_TABLE	OFF INNODB_FLUSH_LOG_AT_TRX_COMMIT	1 INNODB_FLUSH_METHOD mysqltest: Result content mismatch not ok r6182 | marko | 2009-11-17 13:49:15 +0200 (Tue, 17 Nov 2009) | 1 line branches/zip: Set svn:eol-style on mysql-test files. r6183 | marko | 2009-11-17 13:51:16 +0200 (Tue, 17 Nov 2009) | 1 line branches/zip: Prepend loose_ to plugin-only mysql-test options. r6184 | marko | 2009-11-17 13:52:01 +0200 (Tue, 17 Nov 2009) | 1 line branches/zip: innodb-index.test: Restore innodb_file_format_check. "	072e2bb4db0c3998f3b0527b3fb75e984ef8f403
----------------------------
Applying InnoDB Plugin 1.0.6 snapshot, part 4. Fixes BUG#3139 applied revisions: r6160 Detailed revision comments: r6160 | vasil | 2009-11-11 15:33:49 +0200 (Wed, 11 Nov 2009) | 72 lines branches/zip: Merge r6152:6159 from branches/5.1: (r6158 was skipped as an equivallent change has already been merged from MySQL) ------------------------------------------------------------------------ r6154 | calvin | 2009-11-11 02:51:17 +0200 (Wed, 11 Nov 2009) | 17 lines Changed paths: M /branches/5.1/include/os0file.h M /branches/5.1/os/os0file.c branches/5.1: fix bug#3139: Mysql crashes: 'windows error 995' after several selects on a large DB During stress environment, Windows AIO may fail with error code ERROR_OPERATION_ABORTED. InnoDB does not handle the error, rather crashes. The cause of the error is unknown, but likely due to faulty hardware or driver. This patch introduces a new error code OS_FILE_OPERATION_ABORTED, which maps to Windows ERROR_OPERATION_ABORTED (995). When the error is detected during AIO, the InnoDB will issue a synchronous retry (read/write). This patch has been extensively tested by MySQL support. Approved by: Marko rb://196 ------------------------------------------------------------------------ r6158 | vasil | 2009-11-11 14:52:14 +0200 (Wed, 11 Nov 2009) | 37 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/handler/ha_innodb.h branches/5.1: Merge a change from MySQL: (this has been reviewed by Calvin and Marko, and Calvin says Luis has incorporated Marko's suggestions) ------------------------------------------------------------ revno: 3092.5.1 committer: Luis Soares <luis.soares@sun.com> branch nick: mysql-5.1-bugteam timestamp: Thu 2009-09-24 15:52:52 +0100 message: BUG#42829: binlogging enabled for all schemas regardless of binlog-db-db / binlog-ignore-db InnoDB will return an error if statement based replication is used along with transaction isolation level READ-COMMITTED (or weaker), even if the statement in question is filtered out according to the binlog-do-db rules set. In this case, an error should not be printed. This patch addresses this issue by extending the existing check in external_lock to take into account the filter rules before deciding to print an error. Furthermore, it also changes decide_logging_format to take into consideration whether the statement is filtered out from binlog before decision is made. added: mysql-test/suite/binlog/r/binlog_stm_do_db.result mysql-test/suite/binlog/t/binlog_stm_do_db-master.opt mysql-test/suite/binlog/t/binlog_stm_do_db.test modified: sql/sql_base.cc sql/sql_class.cc storage/innobase/handler/ha_innodb.cc storage/innobase/handler/ha_innodb.h storage/innodb_plugin/handler/ha_innodb.cc storage/innodb_plugin/handler/ha_innodb.h ------------------------------------------------------------------------ 	457291482525a7b0ae80ed0e602723581925a027
----------------------------
"Applying InnoDB Plugin 1.0.6 snapshot, part 3. Fixes BUG#47167 applied revisions: r6157 Detailed revision comments: r6157 | jyang | 2009-11-11 14:27:09 +0200 (Wed, 11 Nov 2009) | 10 lines branches/zip: Fix an issue that a local variable defined in innodb_file_format_check_validate() is being referenced across function in innodb_file_format_check_update(). In addition, fix ""set global innodb_file_format_check = DEFAULT"" call. Bug #47167: ""set global innodb_file_format_check"" cannot set value by User-Defined Variable."" rb://169 approved by Sunny Bains and Marko. "	dded7cf8c8e27051cb9e46d41569e1030952689c
----------------------------
Applying InnoDB Plugin 1.0.6 snapshot, part 2. Fixes BUG#32430 Enable partition_innodb_plugin.test for BUG#32430 applied revisions: r6134, r6137, r6153 Detailed revision comments: r6134 | marko | 2009-11-04 09:57:29 +0200 (Wed, 04 Nov 2009) | 5 lines branches/zip: innobase_convert_identifier(): Convert table names with explain_filename() to address Bug #32430: 'show innodb status' causes errors Invalid (old?) table or database name in logs. rb://134 approved by Sunny Bains r6137 | marko | 2009-11-04 15:24:28 +0200 (Wed, 04 Nov 2009) | 1 line branches/zip: dict_index_too_big_for_undo(): Correct a typo. r6153 | vasil | 2009-11-10 15:33:22 +0200 (Tue, 10 Nov 2009) | 145 lines branches/zip: Merge r6125:6152 from branches/5.1: (everything except the last white-space change was skipped as it is already in branches/zip) ------------------------------------------------------------------------ r6127 | vasil | 2009-10-30 11:18:25 +0200 (Fri, 30 Oct 2009) | 18 lines Changed paths: M /branches/5.1/Makefile.am M /branches/5.1/mysql-test/innodb-autoinc.result M /branches/5.1/mysql-test/innodb-autoinc.test branches/5.1: Backport c6121 from branches/zip: ------------------------------------------------------------------------ r6121 | sunny | 2009-10-30 01:42:11 +0200 (Fri, 30 Oct 2009) | 7 lines Changed paths: M /branches/zip/mysql-test/innodb-autoinc.result branches/zip: This test has been problematic for sometime now. The underlying bug is that the data dictionaries get out of sync. In the AUTOINC code we try and apply salve to the symptoms. In the past MySQL made some unrelated change and the dictionaries stopped getting out of sync and this test started to fail. Now, it seems they have reverted that changed and the test is passing again. I suspect this is not he last time that this test will change. ------------------------------------------------------------------------ ------------------------------------------------------------------------ r6129 | vasil | 2009-10-30 17:14:22 +0200 (Fri, 30 Oct 2009) | 4 lines Changed paths: M /branches/5.1/Makefile.am branches/5.1: Revert a change to Makefile.am that sneaked unnoticed in c6127. ------------------------------------------------------------------------ r6136 | marko | 2009-11-04 12:28:10 +0200 (Wed, 04 Nov 2009) | 15 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/include/ha_prototypes.h M /branches/5.1/ut/ut0ut.c branches/5.1: Port r6134 from branches/zip: ------------------------------------------------------------------------ r6134 | marko | 2009-11-04 07:57:29 +0000 (Wed, 04 Nov 2009) | 5 lines branches/zip: innobase_convert_identifier(): Convert table names with explain_filename() to address Bug #32430: 'show innodb status' causes errors Invalid (old?) table or database name in logs. rb://134 approved by Sunny Bains ------------------------------------------------------------------------ innobase_print_identifier(): Replace with innobase_convert_name(). innobase_convert_identifier(): New function, called by innobase_convert_name(). ------------------------------------------------------------------------ r6149 | vasil | 2009-11-09 11:15:01 +0200 (Mon, 09 Nov 2009) | 5 lines Changed paths: M /branches/5.1/CMakeLists.txt branches/5.1: Followup to r5700: Adjust the changes so they are the same as in the BZR repository. ------------------------------------------------------------------------ r6150 | vasil | 2009-11-09 11:43:31 +0200 (Mon, 09 Nov 2009) | 58 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: Merge a part of r2911.5.5 from MySQL: (the other part of this was merged in c5700) ------------------------------------------------------------ revno: 2911.5.5 committer: Vladislav Vaintroub <vvaintroub@mysql.com> branch nick: 5.1-innodb_plugin timestamp: Wed 2009-06-10 10:59:49 +0200 message: Backport WL#3653 to 5.1 to enable bundled innodb plugin. Remove custom DLL loader code from innodb plugin code, use symbols exported from mysqld. removed: storage/innodb_plugin/handler/handler0vars.h storage/innodb_plugin/handler/win_delay_loader.cc added: storage/mysql_storage_engine.cmake win/create_def_file.js modified: CMakeLists.txt include/m_ctype.h include/my_global.h include/my_sys.h include/mysql/plugin.h libmysqld/CMakeLists.txt mysql-test/mysql-test-run.pl mysql-test/t/plugin.test mysql-test/t/plugin_load-master.opt mysys/charset.c sql/CMakeLists.txt sql/handler.h sql/mysql_priv.h sql/mysqld.cc sql/sql_class.cc sql/sql_class.h sql/sql_list.h sql/sql_profile.h storage/Makefile.am storage/archive/CMakeLists.txt storage/blackhole/CMakeLists.txt storage/csv/CMakeLists.txt storage/example/CMakeLists.txt storage/federated/CMakeLists.txt storage/heap/CMakeLists.txt storage/innobase/CMakeLists.txt storage/innobase/handler/ha_innodb.cc storage/innodb_plugin/CMakeLists.txt storage/innodb_plugin/handler/ha_innodb.cc storage/innodb_plugin/handler/handler0alter.cc storage/innodb_plugin/handler/i_s.cc storage/innodb_plugin/plug.in storage/myisam/CMakeLists.txt storage/myisammrg/CMakeLists.txt win/Makefile.am win/configure.js ------------------------------------------------------------------------ r6152 | vasil | 2009-11-10 15:30:20 +0200 (Tue, 10 Nov 2009) | 4 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: White space fixup. ------------------------------------------------------------------------ 	20bec594f1c22fd07cd8604f01bce93ea8601bfe
----------------------------
Bug #20837 Apparent change of isolation level during transaction SET TRANSACTION ISOLATION LEVEL is used to temporarily set the trans.iso.level for the next transaction.  After the transaction, the iso.level is (re-)set to value of the session variable 'tx_isolation'. The bug is caused by setting the thd->variables.tx_isolation field to the value of the session variable upon each statement commit.  It should only be set at the end of the full transaction. The fix has been to remove the setting of the variable in ha_autocommit_or_rollback if we're in a transaction, as it will be correctly set in  either ha_rollback or ha_commit_one_phase. If, on the other hand, we're in  autocommit mode, tx_isolation will be explicitly set here. 	8c24f5d14a6f44697630bf641fdb6c48d4357562
----------------------------
"Applying InnoDB snapshot 5.1-ss6242, part 3. Fixes BUG#48469 1. BUG#4869 - when innodb tablespace is configured too small, crash and corruption! Detailed revision comments: r6187 | jyang | 2009-11-18 05:27:30 +0200 (Wed, 18 Nov 2009) | 9 lines branches/5.1: Fix bug #48469 ""when innodb tablespace is configured too small, crash and corruption!"". Function btr_create() did not check the return status of fseg_create(), and continue the index creation even there is no sufficient space. rb://205 Approved by Marko r6200 | vasil | 2009-11-19 12:14:23 +0200 (Thu, 19 Nov 2009) | 4 lines branches/5.1: White space fixup - indent under the opening ( r6203 | jyang | 2009-11-19 15:12:22 +0200 (Thu, 19 Nov 2009) | 8 lines branches/5.1: Use btr_free_root() instead of fseg_free() for the fix of bug #48469, because fseg_free() is not defined in the zip branch. And we could save one mini-trasaction started by fseg_free(). Approved by Marko. "	f452f1271fd2e13560a289a4975c5f5610e7d9fa
----------------------------
"Bug #43913  	rpl_cross_version can't pass on conflicts complainig clash with --slave-load-tm The 'slave_patternload_file' is assigned to the real path of the load data file when initializing the object of Relay_log_info. But the path of the load data file is not formatted to real path when executing event from relay log. So the error will be encountered if the path of the load data file is a symbolic link. Actually the global 'opt_secure_file_priv' is not formatted to real path when loading data from file. So the same thing will happen too. To fix these errors, the path of the load data file should be formatted to real path when executing event from relay log. And the 'opt_secure_file_priv' should be formatted to real path when loading data infile. "	f6ff4a58108cef656e702284b8d80681d46606cd
----------------------------
No more socket and no more diffs in result files. 	836b51ac23d3bcce334afa67fca85b8cc00bbf78
----------------------------
Delay configuring scripts like mysql_install_db until CPack runs (to handle DESTDIR correctly) 	dba1a7ccd91621432f51d4663ce450e5dc1af1ff
----------------------------
Backport into build-200911241145-5.1.40sp1 > ------------------------------------------------------------ > revno: 3148.9.3 > revision-id: azundris@mysql.com-20091029230154-jp2xqvzw2nhj9q41 > parent: azundris@mysql.com-20091027095316-54lwjr9vqkscq1ik > committer: Tatiana A. Nurnberg <azundris@mysql.com> > branch nick: 51-48295 > timestamp: Thu 2009-10-29 16:01:54 -0700 > message: >   Bug#48295: explain extended crash with subquery and ONLY_FULL_GROUP_BY sql_mode > >   If an outer query is broken, a subquery might not even get set up. >   EXPLAIN EXTENDED did not expect this and merrily tried to de-ref all >   of the half-setup info. > >   We now catch this case and print as much as we have, as it doesn't cost us >   anything (doesn't make regular execution slower). 	3b0456570422c0ddadec247c3aac60b738b013bb
----------------------------
"Bug#48878      ""Embedded"" tests fail due to an unknown variable ""shared-memory-base-name"" the 'shared-memory-base-name' was added to the [client] section of the my.cnf file. That option isn't supported by the mysqltest_embedded. per-file comments: mysql-test/lib/My/ConfigFactory.pm "	a07d7da4e73cf514ae5c51b6aef09769a78ef143
----------------------------
Backport of WL#798 (MySQL IPv6 support) from 6.0. The following 6.0 revisions were analyzed: - sp1r-brian@zim.(none)-20071228102738-21894 - sp1r-brian@zim.(none)-20071228121841-56447 - sp1r-brian@zim.(none)-20071228205403-56423 - sp1r-brian@zim.(none)-20071228221139-55341 - sp1r-brian@zim.(none)-20071228233443-55352 - sp1r-brian@zim.(none)-20071229094527-61763 - sp1r-brian@zim.(none)-20071230203739-61746 - sp1r-brian@zim.(none)-20080102213805-61741 - sp1r-brian@zim.(none)-20080103201041-61746 - sp1r-brian@zim.(none)-20080104234927-59875 - sp1r-brian@zim.(none)-20080105005827-59874 - sp1r-brian@zim.(none)-20080105012020-59865 - sp1r-brian@zim.(none)-20080106003858-59857 - sp1r-brian@zim.(none)-20080123195552-31680 - sp1r-brian@zim.(none)-20080124201848-29999 - sp1r-brian@zim.(none)-20080129075144-36991 - sp1r-cbell/Chuck@mysql_cab_desk.-20080215041806-21954 - sp1r-vvaintroub@wva.-20080212124547-06272 - sp1r-dfischer/mysqldev@mysql.com/production.mysql.com-20071223184258-15140 - sp1r-brian@zim.(none)-20080206122216-35774 - sp1r-baker@bk-internal.mysql.com-20080209005622-35947 - sp1r-baker@bk-internal.mysql.com-20080224215608-24613 - sp1r-baker@bk-internal.mysql.com-20080307170710-63543 - sp1r-baker@bk-internal.mysql.com-20080312233205-13069 - sp1r-Reggie@core.-20080402175211-28643 - kpettersson@mysql.com-20080901101150-4ne74r8v0492vv42 - alik@sun.com-20090805173811-9fzt0ymcp9tsvn7k - alik@sun.com-20090805173937-fcv1fdveodq5x9gb - alik@sun.com-20090805175009-g1od16i3t1xkw2qr - kostja@sun.com-20090805200643-j9i4fy7ii8ijho5c - alik@sun.com-20090807195303-j4fb5m4l1dgdahwo - alik@sun.com-20090808114848-3rkzr9kifrijzaqy - alik@sun.com-20090810041739-ugmx34h34uid8mox - alik@sun.com-20090810105306-rf43rfyzzblsy5e7 - alik@sun.com-20090810123113-ccdjwai68b5woqdm - alik@sun.com-20090811080423-gb7pibec1znaydzy - alik@sun.com-20090811082130-5uckar1vx3kdsw7g - alik@sun.com-20090812202051-uqkfwwxxcjvo5ean The following bugfixes are also backported within this patch: - Bug#34292: netdb.h missing in hostname.cc - Bug#39153: Failing to lookup a host name can lead to crash in current IPv6 implementation - Bug#38247: Server does not resolve connecting ip's - Bug#43006: main.skip_name_resolve fails on Windows in PB2 - Bug#45606: ACL requires IPv4-mapped addresses to be used - Bug#45584: Host name cache does not work as a cache 	90f2a469c98f8235edb1d94a71c326c0ce459375
----------------------------
Backport the implementation of vio_pending from 6.0-codebase. Original changeset: ------------------------------------------------------------ revno: 2626 committer: davi@mysql.com/endora.local timestamp: Wed 2008-04-23 09:33:25 -0300 message: Fix for main.ssl and main.ssl_compress test case failures under pool-of-threads. The problem is that the SSL layer has a read buffer and might read more data than requested by the VIO layer. The SSL layer empties the socket buffer which causes the socket to not be signaled for IO if the client is waiting for a command which is sitting in the read buffer. The solution is to retrieve from the transport layer the number of bytes waiting in the read buffer. The data in the read buffer needs to be processed before waiting for more data. 	a2a437b7cae6e5d78296a936738a07f2d9ef88f9
----------------------------
Backport of: ------------------------------------------------------------ revno: 2572.23.1 committer: davi@mysql.com/endora.local timestamp: Wed 2008-03-19 09:03:08 -0300 message: Bug#17954 Threads_connected > Threads_created The problem is that insert delayed threads are counted as connected but not as created, leading to a Threads_connected value greater then the Threads_created value. The solution is to enforce the documented behavior that the Threads_connected value shall be the number of currently open connections and that Threads_created shall be the number of threads created to handle connections. 	5a78d2a7d5a0643dca5e25df5d2cb95cbc1b7ccb
----------------------------
"branches/zip: Merge r6159:6198 from branches/5.1: ------------------------------------------------------------------------ r6187 | jyang | 2009-11-18 05:27:30 +0200 (Wed, 18 Nov 2009) | 9 lines Changed paths: M /branches/5.1/btr/btr0btr.c branches/5.1: Fix bug #48469 ""when innodb tablespace is configured too small, crash and corruption!"". Function btr_create() did not check the return status of fseg_create(), and continue the index creation even there is no sufficient space. rb://205 Approved by Marko ------------------------------------------------------------------------ r6188 | jyang | 2009-11-18 07:14:23 +0200 (Wed, 18 Nov 2009) | 8 lines Changed paths: M /branches/5.1/data/data0type.c branches/5.1: Fix bug #48526 ""Data type for float and double is incorrectly reported in InnoDB table monitor"". Certain datatypes are not printed correctly in dtype_print(). rb://204 Approved by Marko. ------------------------------------------------------------------------ "	bc66ae8cc66ea69b2928facaed0f0f43a78571f6
----------------------------
"Backport of the fix for BUG#40368 ""mysqld_safe not honouring underscore same as dash on server options"" from 6.0 (revision-id:guilhem@mysql.com-20090505113602-l12kxupeatve18dh). Such bug led ""mysqld_safe --core_file_size=#"" to not work because mysqld_safe wouldn't recognize that ""ulimit -c"" is needed; only --core-file-size=# worked. Same for --open_files_limit and other options with _ where mysqld_safe needs to do something more than passing to mysqld. Original fix by Erik Ljungstrom erik at ibiblio dot org ; slightly modified here. Tested on all internally accessible Unix. "	408dd52a6ad1698619fb933b62966fa8b843f859
----------------------------
"branches/5.1: Fix bug #48469 ""when innodb tablespace is configured too small, crash and corruption!"". Function btr_create() did not check the return status of fseg_create(), and continue the index creation even there is no sufficient space. rb://205 Approved by Marko "	409112e408bd13125f2346eb6f64c5ca4ae1cf01
----------------------------
ndb - build and run MgmConfig-t also on windows. 	6ec9085a3ffac6ba0bcd7866d1a2733ce8ed8062
----------------------------
Bug#48669 ndb_mgmd needs --no-wait option - part2, adds checksum to CONFIG_CHECK protocol 	48aa419f8a47cc8dbab307ebdb8abb23b6770ec0
----------------------------
Bug#48405 Allow explicit node id for mysqld with connection pooling - In the constructor of Ndb_cluster_connection in the case when it has been created _with_ a main_connection, set the nodeid to 0 for ConfigRetriever after its been created(who then parses the connectstring and extracts which nodeid to use, should any be set). Also change the constructor not to destroy ConfigRetriver if it fails to parse the connect string, that task is performed by destructor. 	77983338568ac640b2071d02eb67b35017c9a8aa
----------------------------
ndbapi - Remove the m_name variable from Ndb_cluster_connection and only set it on the mgm handle belonging to ConfigRetriever Saves space and removes extra code. 	d273d569ca4f578ac252bcd90f85284af10893fd
----------------------------
branches/zip: innodb-index.test: Restore innodb_file_format_check. 	f3efc5f306b4623217bfc7d889b2ed20df2a9cb0
----------------------------
"branches/zip: At the end of innodb-index.test: restore the environment as it was before the test was started to silence this warning: MTR's internal check of the test case 'main.innodb-index' failed. This means that the test case does not preserve the state that existed before the test case was executed.  Most likely the test case did not do a proper clean-up. This is the diff of the states of the servers before and after the test case was executed: mysqltest: Logging to '/tmp/autotest.sh-20091117_033000-zip.btyZwu/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.log'. mysqltest: Results saved in '/tmp/autotest.sh-20091117_033000-zip.btyZwu/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.result'. mysqltest: Connecting to server localhost:13000 (socket /tmp/autotest.sh-20091117_033000-zip.btyZwu/mysql-5.1/mysql-test/var/tmp/mysqld.1.sock) as 'root', connection 'default', attempt 0 ... mysqltest: ... Connected. mysqltest: Start processing test commands from './include/check-testcase.test' ... mysqltest: ... Done processing test commands. --- /tmp/autotest.sh-20091117_033000-zip.btyZwu/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.result	2009-11-17 13:10:40.000000000 +0300 +++ /tmp/autotest.sh-20091117_033000-zip.btyZwu/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.reject	2009-11-17 13:10:54.000000000 +0300 @@ -84,7 +84,7 @@ INNODB_DOUBLEWRITE	ON INNODB_FAST_SHUTDOWN	1 INNODB_FILE_FORMAT	Antelope -INNODB_FILE_FORMAT_CHECK	Antelope +INNODB_FILE_FORMAT_CHECK	Barracuda INNODB_FILE_PER_TABLE	OFF INNODB_FLUSH_LOG_AT_TRX_COMMIT	1 INNODB_FLUSH_METHOD mysqltest: Result content mismatch not ok "	b0ed43b0a4f17aebb97a429a8492e2716de892b9
----------------------------
Support out of source build with the wrapper configure.pl script 	c982aaa38c3ebbc63f641bafc34a9229a6aae36a
----------------------------
fix tree name in bzr config file 	1b2fe5f257d8505463a8631fb1e76962f30a89b1
----------------------------
Bug#48669 ndb_mgmd needs --no-wait option - Add --nowait-nodes option to ndb_mgmd and exclude the given nodes from the config change protocol during startup. As soon as one configuration change has been performed, all ndb_mgmd's are waited for again. - Add testcase in testMgmd 	5ee345725e0dd4578901553c922c0b11492b2258
----------------------------
BUG#48738: Backport patch for Bug 34582 to 5.0 codebase. From BUG 34582 commit message: Issuing 'FLUSH LOGS' does not close and reopen indexfile. Instead a SEEK_SET is performed. This patch makes index file to be closed and reopened whenever a rotation happens (FLUSH LOGS is issued or binary log exceeds maximum configured size). 	fe40b1721af2e2bdb4f9eb275deda96212147136
----------------------------
ndbinfo - add all tables for first version - add views for all public tables - add utility tables for mapping blocks and config params - Rewrite counters in TC and LQH to be monotonic but still allow differential report to be sent with regular interval 	8cabc5dbf05a0fb9551f613a22238bc55386f23b
----------------------------
branches/zip: Merge r6152:6159 from branches/5.1: (r6158 was skipped as an equivallent change has already been merged from MySQL) ------------------------------------------------------------------------ r6154 | calvin | 2009-11-11 02:51:17 +0200 (Wed, 11 Nov 2009) | 17 lines Changed paths: M /branches/5.1/include/os0file.h M /branches/5.1/os/os0file.c branches/5.1: fix bug#3139: Mysql crashes: 'windows error 995' after several selects on a large DB During stress environment, Windows AIO may fail with error code ERROR_OPERATION_ABORTED. InnoDB does not handle the error, rather crashes. The cause of the error is unknown, but likely due to faulty hardware or driver. This patch introduces a new error code OS_FILE_OPERATION_ABORTED, which maps to Windows ERROR_OPERATION_ABORTED (995). When the error is detected during AIO, the InnoDB will issue a synchronous retry (read/write). This patch has been extensively tested by MySQL support. Approved by: Marko rb://196 ------------------------------------------------------------------------ r6158 | vasil | 2009-11-11 14:52:14 +0200 (Wed, 11 Nov 2009) | 37 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/handler/ha_innodb.h branches/5.1: Merge a change from MySQL: (this has been reviewed by Calvin and Marko, and Calvin says Luis has incorporated Marko's suggestions) ------------------------------------------------------------ revno: 3092.5.1 committer: Luis Soares <luis.soares@sun.com> branch nick: mysql-5.1-bugteam timestamp: Thu 2009-09-24 15:52:52 +0100 message: BUG#42829: binlogging enabled for all schemas regardless of binlog-db-db / binlog-ignore-db InnoDB will return an error if statement based replication is used along with transaction isolation level READ-COMMITTED (or weaker), even if the statement in question is filtered out according to the binlog-do-db rules set. In this case, an error should not be printed. This patch addresses this issue by extending the existing check in external_lock to take into account the filter rules before deciding to print an error. Furthermore, it also changes decide_logging_format to take into consideration whether the statement is filtered out from binlog before decision is made. added: mysql-test/suite/binlog/r/binlog_stm_do_db.result mysql-test/suite/binlog/t/binlog_stm_do_db-master.opt mysql-test/suite/binlog/t/binlog_stm_do_db.test modified: sql/sql_base.cc sql/sql_class.cc storage/innobase/handler/ha_innodb.cc storage/innobase/handler/ha_innodb.h storage/innodb_plugin/handler/ha_innodb.cc storage/innodb_plugin/handler/ha_innodb.h ------------------------------------------------------------------------ 	65d21143f75fd1948a3ad6c8af98dea5a912fd7e
----------------------------
branches/zip: Merge a change from MySQL: (this has been reviewed by Calvin and Marko, and Calvin says Luis has incorporated Marko's suggestions) ------------------------------------------------------------ revno: 3092.5.1 committer: Luis Soares <luis.soares@sun.com> branch nick: mysql-5.1-bugteam timestamp: Thu 2009-09-24 15:52:52 +0100 message: BUG#42829: binlogging enabled for all schemas regardless of binlog-db-db / binlog-ignore-db InnoDB will return an error if statement based replication is used along with transaction isolation level READ-COMMITTED (or weaker), even if the statement in question is filtered out according to the binlog-do-db rules set. In this case, an error should not be printed. This patch addresses this issue by extending the existing check in external_lock to take into account the filter rules before deciding to print an error. Furthermore, it also changes decide_logging_format to take into consideration whether the statement is filtered out from binlog before decision is made. added: mysql-test/suite/binlog/r/binlog_stm_do_db.result mysql-test/suite/binlog/t/binlog_stm_do_db-master.opt mysql-test/suite/binlog/t/binlog_stm_do_db.test modified: sql/sql_base.cc sql/sql_class.cc storage/innobase/handler/ha_innodb.cc storage/innobase/handler/ha_innodb.h storage/innodb_plugin/handler/ha_innodb.cc storage/innodb_plugin/handler/ha_innodb.h 	130d2029d21f2eb0ac07369b4a242b996433f534
----------------------------
branches/5.1: Merge a change from MySQL: (this has been reviewed by Calvin and Marko, and Calvin says Luis has incorporated Marko's suggestions) ------------------------------------------------------------ revno: 3092.5.1 committer: Luis Soares <luis.soares@sun.com> branch nick: mysql-5.1-bugteam timestamp: Thu 2009-09-24 15:52:52 +0100 message: BUG#42829: binlogging enabled for all schemas regardless of binlog-db-db / binlog-ignore-db InnoDB will return an error if statement based replication is used along with transaction isolation level READ-COMMITTED (or weaker), even if the statement in question is filtered out according to the binlog-do-db rules set. In this case, an error should not be printed. This patch addresses this issue by extending the existing check in external_lock to take into account the filter rules before deciding to print an error. Furthermore, it also changes decide_logging_format to take into consideration whether the statement is filtered out from binlog before decision is made. added: mysql-test/suite/binlog/r/binlog_stm_do_db.result mysql-test/suite/binlog/t/binlog_stm_do_db-master.opt mysql-test/suite/binlog/t/binlog_stm_do_db.test modified: sql/sql_base.cc sql/sql_class.cc storage/innobase/handler/ha_innodb.cc storage/innobase/handler/ha_innodb.h storage/innodb_plugin/handler/ha_innodb.cc storage/innodb_plugin/handler/ha_innodb.h 	5652676929b1af0c2ba3bd453b238504edd5ff1d
----------------------------
"branches/zip: Fix an issue that a local variable defined in innodb_file_format_check_validate() is being referenced across function in innodb_file_format_check_update(). In addition, fix ""set global innodb_file_format_check = DEFAULT"" call. Bug #47167: ""set global innodb_file_format_check"" cannot set value by User-Defined Variable."" rb://169 approved by Sunny Bains and Marko. "	dd881561a4b543368933bd7f950671345a8e0083
----------------------------
Backport of Bug#41860 to mysql-next-mr ------------------------------------------------------------ revno: 3317 revision-id: davi.arnaut@sun.com-20090522170916-fzc5ca3tjs9roy1t parent: patrick.crews@sun.com-20090522152933-ole8s3suy4zqyvku committer: Davi Arnaut <Davi.Arnaut@Sun.COM> branch nick: 41860-6.0 timestamp: Fri 2009-05-22 14:09:16 -0300 message: Bug#41860: Without Windows named pipe The problem was that the patch for Bug#10374 broke named pipe and shared memory transports on Windows due to a failure to implement a dummy poll method for transports other than BSD sockets. Another problem was that mysqltest lacked support for named pipe and shared memory connections, which lead to misleading test cases that were supposed run common queries over both transports. The solution is to properly implement, at the VIO layer, the poll and is_connected methods. The is_connected method is implemented for every suppported transport and the poll one only where it makes sense. Furthermore, support for named pipe and shared memory connections is added to mysqltest as to enable testing of both transports using the test suite. 	5783428f3b3fd8fbae5b9923cb942f3916011f32
----------------------------
Backport of Bug#10374 to mysql-next-mr ------------------------------------------------------------ revno: 2597.37.3 revision-id: sp1r-davi@mysql.com/endora.local-20080328123626-16430 parent: sp1r-anozdrin/alik@quad.opbmk-20080327125300-11290 committer: davi@mysql.com/endora.local timestamp: Fri 2008-03-28 09:36:26 -0300 message: Bug#10374 GET_LOCK does not let connection to close on the server side if it's aborted The problem is that the server doesn't detect aborted connections which are waiting on a lock or sleeping (user sleep), wasting system resources for a connection that is already dead. The solution is to peek at the connection every five seconds to verify if the connection is not aborted. A aborted connection is detect by polling the connection socket for available data to be read or end of file and in case of eof, the wait is aborted and the connection killed. 	58706b3f7d73b1b1c5fce40b1296670d4e6d3ddf
----------------------------
branches/zip: Merge r6125:6152 from branches/5.1: (everything except the last white-space change was skipped as it is already in branches/zip) ------------------------------------------------------------------------ r6127 | vasil | 2009-10-30 11:18:25 +0200 (Fri, 30 Oct 2009) | 18 lines Changed paths: M /branches/5.1/Makefile.am M /branches/5.1/mysql-test/innodb-autoinc.result M /branches/5.1/mysql-test/innodb-autoinc.test branches/5.1: Backport c6121 from branches/zip: ------------------------------------------------------------------------ r6121 | sunny | 2009-10-30 01:42:11 +0200 (Fri, 30 Oct 2009) | 7 lines Changed paths: M /branches/zip/mysql-test/innodb-autoinc.result branches/zip: This test has been problematic for sometime now. The underlying bug is that the data dictionaries get out of sync. In the AUTOINC code we try and apply salve to the symptoms. In the past MySQL made some unrelated change and the dictionaries stopped getting out of sync and this test started to fail. Now, it seems they have reverted that changed and the test is passing again. I suspect this is not he last time that this test will change. ------------------------------------------------------------------------ ------------------------------------------------------------------------ r6129 | vasil | 2009-10-30 17:14:22 +0200 (Fri, 30 Oct 2009) | 4 lines Changed paths: M /branches/5.1/Makefile.am branches/5.1: Revert a change to Makefile.am that sneaked unnoticed in c6127. ------------------------------------------------------------------------ r6136 | marko | 2009-11-04 12:28:10 +0200 (Wed, 04 Nov 2009) | 15 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/include/ha_prototypes.h M /branches/5.1/ut/ut0ut.c branches/5.1: Port r6134 from branches/zip: ------------------------------------------------------------------------ r6134 | marko | 2009-11-04 07:57:29 +0000 (Wed, 04 Nov 2009) | 5 lines branches/zip: innobase_convert_identifier(): Convert table names with explain_filename() to address Bug #32430: 'show innodb status' causes errors Invalid (old?) table or database name in logs. rb://134 approved by Sunny Bains ------------------------------------------------------------------------ innobase_print_identifier(): Replace with innobase_convert_name(). innobase_convert_identifier(): New function, called by innobase_convert_name(). ------------------------------------------------------------------------ r6149 | vasil | 2009-11-09 11:15:01 +0200 (Mon, 09 Nov 2009) | 5 lines Changed paths: M /branches/5.1/CMakeLists.txt branches/5.1: Followup to r5700: Adjust the changes so they are the same as in the BZR repository. ------------------------------------------------------------------------ r6150 | vasil | 2009-11-09 11:43:31 +0200 (Mon, 09 Nov 2009) | 58 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: Merge a part of r2911.5.5 from MySQL: (the other part of this was merged in c5700) ------------------------------------------------------------ revno: 2911.5.5 committer: Vladislav Vaintroub <vvaintroub@mysql.com> branch nick: 5.1-innodb_plugin timestamp: Wed 2009-06-10 10:59:49 +0200 message: Backport WL#3653 to 5.1 to enable bundled innodb plugin. Remove custom DLL loader code from innodb plugin code, use symbols exported from mysqld. removed: storage/innodb_plugin/handler/handler0vars.h storage/innodb_plugin/handler/win_delay_loader.cc added: storage/mysql_storage_engine.cmake win/create_def_file.js modified: CMakeLists.txt include/m_ctype.h include/my_global.h include/my_sys.h include/mysql/plugin.h libmysqld/CMakeLists.txt mysql-test/mysql-test-run.pl mysql-test/t/plugin.test mysql-test/t/plugin_load-master.opt mysys/charset.c sql/CMakeLists.txt sql/handler.h sql/mysql_priv.h sql/mysqld.cc sql/sql_class.cc sql/sql_class.h sql/sql_list.h sql/sql_profile.h storage/Makefile.am storage/archive/CMakeLists.txt storage/blackhole/CMakeLists.txt storage/csv/CMakeLists.txt storage/example/CMakeLists.txt storage/federated/CMakeLists.txt storage/heap/CMakeLists.txt storage/innobase/CMakeLists.txt storage/innobase/handler/ha_innodb.cc storage/innodb_plugin/CMakeLists.txt storage/innodb_plugin/handler/ha_innodb.cc storage/innodb_plugin/handler/handler0alter.cc storage/innodb_plugin/handler/i_s.cc storage/innodb_plugin/plug.in storage/myisam/CMakeLists.txt storage/myisammrg/CMakeLists.txt win/Makefile.am win/configure.js ------------------------------------------------------------------------ r6152 | vasil | 2009-11-10 15:30:20 +0200 (Tue, 10 Nov 2009) | 4 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: White space fixup. ------------------------------------------------------------------------ 	59277a500b3636e5f19846553cfcb825ec88418e
----------------------------
branches/5.1: Merge a part of r2911.5.5 from MySQL: (the other part of this was merged in c5700) ------------------------------------------------------------ revno: 2911.5.5 committer: Vladislav Vaintroub <vvaintroub@mysql.com> branch nick: 5.1-innodb_plugin timestamp: Wed 2009-06-10 10:59:49 +0200 message: Backport WL#3653 to 5.1 to enable bundled innodb plugin. Remove custom DLL loader code from innodb plugin code, use symbols exported from mysqld. removed: storage/innodb_plugin/handler/handler0vars.h storage/innodb_plugin/handler/win_delay_loader.cc added: storage/mysql_storage_engine.cmake win/create_def_file.js modified: CMakeLists.txt include/m_ctype.h include/my_global.h include/my_sys.h include/mysql/plugin.h libmysqld/CMakeLists.txt mysql-test/mysql-test-run.pl mysql-test/t/plugin.test mysql-test/t/plugin_load-master.opt mysys/charset.c sql/CMakeLists.txt sql/handler.h sql/mysql_priv.h sql/mysqld.cc sql/sql_class.cc sql/sql_class.h sql/sql_list.h sql/sql_profile.h storage/Makefile.am storage/archive/CMakeLists.txt storage/blackhole/CMakeLists.txt storage/csv/CMakeLists.txt storage/example/CMakeLists.txt storage/federated/CMakeLists.txt storage/heap/CMakeLists.txt storage/innobase/CMakeLists.txt storage/innobase/handler/ha_innodb.cc storage/innodb_plugin/CMakeLists.txt storage/innodb_plugin/handler/ha_innodb.cc storage/innodb_plugin/handler/handler0alter.cc storage/innodb_plugin/handler/i_s.cc storage/innodb_plugin/plug.in storage/myisam/CMakeLists.txt storage/myisammrg/CMakeLists.txt win/Makefile.am win/configure.js 	2c140ed3ed0c21a4a9d834fa530b9baee6fa8f6b
----------------------------
BUG#48048: Deprecated constructs need removal in Betony NOTE: Backport of: bzr log -r revid:sp1r-serg@sergbook.mysql.com-20070505200319-38337 ------------------------------------------------------------ revno: 2469.263.4 committer: serg@sergbook.mysql.com timestamp: Sat 2007-05-05 13:03:19 -0700 message: Removing deprecated features: --master-XXX command-line options log_bin_trust_routine_creators table_type BACKUP TABLE ... RESTORE TABLE ... SHOW PLUGIN LOAD TABLE ... FROM MASTER LOAD DATA FROM MASTER SHOW INNODB STATUS SHOW MUTEX STATUS SHOW TABLE TYPES ... TIMESTAMP(N) ... TYPE=engine RESET SLAVE don't reset connection parameters anymore LOAD DATA: check opt_secure_file_priv before access(filename) improved WARN_DEPRECATED macro 	6e068a9cf8cc9943f2ef5f3a71bba3ee522349a1
----------------------------
Bug #34739  unexpected binlog file name when --log-bin is set to a directory name If --log-bin is set to a directory name with the trailing 'FN_LIBCHAR', which will be '/' on Unix like systems, and '\\' on Windows like systems. the basename of the binlog is empty so that the created files named '.000001' and '.index'. It is not expected. The same thing happened to --log-bin-index, --relay-log and --relay-log-index options. To resolve the problem, in these cases the program should report an error and abort. 	8d52424326f9fea4e616c8aad5edbe632dbbdf63
----------------------------
"branches/innodb+: Merge revisions r5971:6130 from branches/zip. ------------------------------------------------------------------------ r5971 | marko | 2009-09-23 23:03:51 +1000 (Wed, 23 Sep 2009) | 2 lines branches/zip: os_file_pwrite(): Make the code compile in InnoDB Hot Backup when the pwrite system call is not available. ------------------------------------------------------------------------ r5972 | marko | 2009-09-24 05:44:52 +1000 (Thu, 24 Sep 2009) | 5 lines branches/zip: fil_node_open_file(): In InnoDB Hot Backup, determine the page size of single-file tablespaces before computing the file node size.  Otherwise, the space->size of compressed tablespaces would be computed with UNIV_PAGE_SIZE instead of key_block_size. This should fix Issue #313. ------------------------------------------------------------------------ r5973 | marko | 2009-09-24 05:53:21 +1000 (Thu, 24 Sep 2009) | 2 lines branches/zip: recv_add_to_hash_table(): Simplify obfuscated pointer arithmetics. ------------------------------------------------------------------------ r5978 | marko | 2009-09-24 17:47:56 +1000 (Thu, 24 Sep 2009) | 1 line branches/zip: Fix warnings and errors when UNIV_HOTBACKUP is defined. ------------------------------------------------------------------------ r5979 | marko | 2009-09-24 20:16:10 +1000 (Thu, 24 Sep 2009) | 4 lines branches/zip: ha_innodb.cc: Define MYSQL_PLUGIN_IMPORT when necessary. This preprocessor symbol has been recently introduced in MySQL 5.1. The InnoDB Plugin should remain source compatible with MySQL 5.1.24 and later. ------------------------------------------------------------------------ r5988 | calvin | 2009-09-26 05:14:43 +1000 (Sat, 26 Sep 2009) | 8 lines branches/zip: fix bug#47055 unconditional exit(1) on ERROR_WORKING_SET_QUOTA 1453 (0x5AD) for InnoDB backend When error ERROR_WORKING_SET_QUOTA or ERROR_NO_SYSTEM_RESOURCES occurs, yields for 100ms and retries the operation. Approved by: Heikki (on IM) ------------------------------------------------------------------------ r5992 | vasil | 2009-09-28 17:10:29 +1000 (Mon, 28 Sep 2009) | 4 lines branches/zip: Add ChangeLog entry for c5988. ------------------------------------------------------------------------ r5994 | marko | 2009-09-28 18:33:59 +1000 (Mon, 28 Sep 2009) | 17 lines branches/zip: Try to prevent the reuse of tablespace identifiers after InnoDB has crashed during table creation.  Also, refuse to start if files with duplicate tablespace identifiers are encountered. fil_node_create(): Update fil_system->max_assigned_id.  This should prevent the reuse of a space->id when InnoDB does a full crash recovery and invokes fil_load_single_table_tablespaces().  Normally, fil_system->max_assigned_id is initialized from SELECT MAX(ID) FROM SYS_TABLES. fil_open_single_table_tablespace(): Return FALSE when fil_space_create() fails. fil_load_single_table_tablespace(): Exit if fil_space_create() fails and innodb_force_recovery=0. rb://173 approved by Heikki Tuuri.  This addresses Issue #335. ------------------------------------------------------------------------ r5995 | marko | 2009-09-28 18:52:25 +1000 (Mon, 28 Sep 2009) | 17 lines branches/zip: Do not write to PAGE_INDEX_ID after page creation, not even when restoring an uncompressed page after a compression failure. btr_page_reorganize_low(): On compression failure, do not restore those page header fields that should not be affected by the reorganization.  Instead, compare the fields. page_zip_decompress(): Add the parameter ibool all, for copying all page header fields.  Pass the parameter all=TRUE on block read completion, redo log application, and page_zip_validate(); pass all=FALSE in all other cases. page_zip_reorganize(): Do not restore the uncompressed page on failure.  It will be restored (to pre-modification state) by the caller anyway. rb://167, Issue #346 ------------------------------------------------------------------------ r5996 | marko | 2009-09-28 22:46:02 +1000 (Mon, 28 Sep 2009) | 4 lines branches/zip: Address Issue #350 in comments. lock_rec_queue_validate(), lock_rec_queue_validate(): Note that this debug code may violate the latching order and cause deadlocks. ------------------------------------------------------------------------ r5997 | marko | 2009-09-28 23:03:58 +1000 (Mon, 28 Sep 2009) | 12 lines branches/zip: Remove an assertion failure when the InnoDB data dictionary is inconsistent with the MySQL .frm file. ha_innobase::index_read(): When the index cannot be found, return an error. ha_innobase::change_active_index(): When prebuilt->index == NULL, set also prebuilt->index_usable = FALSE.  This is not needed for correctness, because prebuilt->index_usable is only checked by row_search_for_mysql(), which requires prebuilt->index != NULL. This addresses Issue #349.  Approved by Heikki Tuuri over IM. ------------------------------------------------------------------------ r6005 | vasil | 2009-09-29 18:09:52 +1000 (Tue, 29 Sep 2009) | 4 lines branches/zip: ChangeLog: wrap around 78th column, not earlier. ------------------------------------------------------------------------ r6006 | vasil | 2009-09-29 20:15:25 +1000 (Tue, 29 Sep 2009) | 4 lines branches/zip: Add ChangeLog entry for the release of 1.0.4. ------------------------------------------------------------------------ r6007 | vasil | 2009-09-29 23:19:59 +1000 (Tue, 29 Sep 2009) | 6 lines branches/zip: Fix the year, should be 2009. Pointed by:	Calvin ------------------------------------------------------------------------ r6026 | marko | 2009-09-30 17:18:24 +1000 (Wed, 30 Sep 2009) | 1 line branches/zip: Add some debug assertions for checking FSEG_MAGIC_N. ------------------------------------------------------------------------ r6028 | marko | 2009-09-30 23:55:23 +1000 (Wed, 30 Sep 2009) | 3 lines branches/zip: recv_no_log_write: New debug flag for tracking down Mantis Issue #347.  No modifications should be made to the database while recv_apply_hashed_log_recs() is about to complete. ------------------------------------------------------------------------ r6029 | calvin | 2009-10-01 06:32:02 +1000 (Thu, 01 Oct 2009) | 4 lines branches/zip: non-functional changes Fix typo. ------------------------------------------------------------------------ r6031 | marko | 2009-10-01 21:24:33 +1000 (Thu, 01 Oct 2009) | 49 lines branches/zip: Clean up after a crash during DROP INDEX. When InnoDB crashes while dropping an index, ensure that the index will be completely dropped during crash recovery. row_merge_drop_index(): Before dropping an index, rename the index to start with TEMP_INDEX_PREFIX_STR and commit the change, so that row_merge_drop_temp_indexes() will drop the index after crash recovery if the server crashes while dropping the index. fseg_inode_try_get(): New function, forked from fseg_inode_get(). Return NULL if the file segment index node is free. fseg_inode_get(): Assert that the file segment index node is not free. fseg_free_step(): If the file segment index node is already free, print a diagnostic message and return TRUE. fsp_free_seg_inode(): Write a nonzero number to FSEG_MAGIC_N, so that allocated-and-freed file segment index nodes can be better distinguished from uninitialized ones. This is rb://174, addressing Issue #348. Tested by restarting mysqld upon the completion of the added log_write_up_to() invocation below, during DROP INDEX.  The index was dropped after crash recovery, and re-issuing the DROP INDEX did not crash the server. Index: btr/btr0btr.c =================================================================== --- btr/btr0btr.c	(revision 6026) +++ btr/btr0btr.c	(working copy) @@ -42,6 +42,7 @@ Created 6/2/1994 Heikki Tuuri #include ""ibuf0ibuf.h"" #include ""trx0trx.h"" +#include ""log0log.h"" /* Latching strategy of the InnoDB B-tree -------------------------------------- @@ -873,6 +874,8 @@ leaf_loop: goto leaf_loop; } + +	log_write_up_to(mtr.end_lsn, LOG_WAIT_ALL_GROUPS, TRUE); top_loop: mtr_start(&mtr); ------------------------------------------------------------------------ r6033 | calvin | 2009-10-02 06:19:46 +1000 (Fri, 02 Oct 2009) | 4 lines branches/zip: fix a typo in error message Reported as bug#47763. ------------------------------------------------------------------------ r6043 | inaam | 2009-10-06 01:45:35 +1100 (Tue, 06 Oct 2009) | 12 lines branches/zip  rb://176 Do not invalidate buffer pool while an LRU batch is active. Added code to buf_pool_invalidate() to wait for the running batches to finish. This patch also resets the state of buf_pool struct at invalidation. This addresses the concern where buf_pool->freed_page_clock becomes non-zero because we read in a system tablespace page for file format info at startup. Approved by: Marko ------------------------------------------------------------------------ r6044 | pekka | 2009-10-07 01:44:54 +1100 (Wed, 07 Oct 2009) | 5 lines branches/zip: Add os_file_is_same() function for Hot Backup (inside ifdef UNIV_HOTBACKUP). This is part of the fix for Issue #186. Note! The Windows implementation is incomplete. ------------------------------------------------------------------------ r6046 | pekka | 2009-10-08 20:24:56 +1100 (Thu, 08 Oct 2009) | 3 lines branches/zip: Revert r6044 which added os_file_is_same() function (issue#186). This functionality is moved to Hot Backup source tree. ------------------------------------------------------------------------ r6048 | vasil | 2009-10-09 16:42:55 +1100 (Fri, 09 Oct 2009) | 16 lines branches/zip: When scanning a directory readdir() is called and stat() after it, if a file is deleted between the two calls stat will fail and the whole precedure will fail. Change this behavior to continue with the next entry if stat() fails because of nonexistent file. This is transparent change as it will make it look as if the file was deleted before the readdir() call. This change is needed in order to fix https://svn.innodb.com/mantis/view.php?id=174 in which we need to abort if os_file_readdir_next_file() encounters ""real"" errors. Approved by:	Marko, Pekka (rb://177) ------------------------------------------------------------------------ r6049 | vasil | 2009-10-10 03:05:26 +1100 (Sat, 10 Oct 2009) | 7 lines branches/zip: Fix compilation warning in Hot Backup: innodb/fil/fil0fil.c: In function 'fil_load_single_table_tablespace': innodb/fil/fil0fil.c:3253: warning: format '%lld' expects type 'long long int', but argument 6 has type 'ib_int64_t' ------------------------------------------------------------------------ r6064 | calvin | 2009-10-14 02:23:35 +1100 (Wed, 14 Oct 2009) | 4 lines branches/zip: non-functional changes Changes from MySQL to fix build issue. ------------------------------------------------------------------------ r6065 | inaam | 2009-10-14 04:43:13 +1100 (Wed, 14 Oct 2009) | 7 lines branches/zip rb://182 Call fsync() on datafiles after a batch of pages is written to disk even when skip_innodb_doublewrite is set. Approved by: Heikki ------------------------------------------------------------------------ r6080 | sunny | 2009-10-15 09:29:01 +1100 (Thu, 15 Oct 2009) | 3 lines branches/zip: Change page_mem_alloc_free() to inline. Fix Bug #47058 - Failure to compile innodb_plugin on solaris 10u7 + spro cc/CC 5.10 ------------------------------------------------------------------------ r6084 | vasil | 2009-10-15 16:21:17 +1100 (Thu, 15 Oct 2009) | 4 lines branches/zip: Add ChangeLog entry for r6080. ------------------------------------------------------------------------ r6095 | vasil | 2009-10-20 00:04:59 +1100 (Tue, 20 Oct 2009) | 7 lines branches/zip: Fix Bug#47808 innodb_information_schema.test fails when run under valgrind by using the wait_until_rows_count macro that loops until the number of rows becomes 14 instead of sleep 0.1, which is obviously very fragile. ------------------------------------------------------------------------ r6096 | vasil | 2009-10-20 00:06:09 +1100 (Tue, 20 Oct 2009) | 4 lines branches/zip: Add ChangeLog entry for r6095. ------------------------------------------------------------------------ r6099 | jyang | 2009-10-22 13:58:39 +1100 (Thu, 22 Oct 2009) | 7 lines branches/zip: Port bug #46000 related changes from 5.1 to zip branch. Due to different code path for creating index in zip branch comparing to 5.1), the index reserved name check function is extended to be used in ha_innobase::add_index(). rb://190  Approved by: Marko ------------------------------------------------------------------------ r6100 | jyang | 2009-10-22 14:51:07 +1100 (Thu, 22 Oct 2009) | 6 lines branches/zip: As a request from mysql, WARN_LEVEL_ERROR cannot be used for push_warning_* call any more. Switch to WARN_LEVEL_WARN. Bug #47233. rb://172 approved by Sunny Bains and Marko. ------------------------------------------------------------------------ r6101 | jyang | 2009-10-23 19:45:50 +1100 (Fri, 23 Oct 2009) | 7 lines branches/zip: Update test result with the WARN_LEVEL_ERROR to WARN_LEVEL_WARN change. This is the same result as submitted in rb://172 review, which approved by Sunny Bains and Marko. ------------------------------------------------------------------------ r6102 | marko | 2009-10-26 18:32:23 +1100 (Mon, 26 Oct 2009) | 1 line branches/zip: row_prebuilt_struct::prebuilts: Unused field, remove. ------------------------------------------------------------------------ r6103 | marko | 2009-10-27 00:46:18 +1100 (Tue, 27 Oct 2009) | 4 lines branches/zip: row_ins_alloc_sys_fields(): Zero out the system columns DB_TRX_ID, DB_ROLL_PTR and DB_ROW_ID, in order to avoid harmless Valgrind warnings about uninitialized data.  (The warnings were harmless, because the fields would be initialized at a later stage.) ------------------------------------------------------------------------ r6105 | calvin | 2009-10-28 09:05:52 +1100 (Wed, 28 Oct 2009) | 6 lines branches/zip: backport r3848 from 6.0 branch ---- branches/6.0: innobase_start_or_create_for_mysql(): Make the 10 MB minimum tablespace limit independent of UNIV_PAGE_SIZE. (Bug #41490) ------------------------------------------------------------------------ r6107 | marko | 2009-10-29 01:10:34 +1100 (Thu, 29 Oct 2009) | 5 lines branches/zip: buf_page_set_old(): Improve UNIV_LRU_DEBUG diagnostics in order to catch the buf_pool->LRU_old corruption reported in Issue #381. buf_LRU_old_init(): Set the property from the tail towards the front of the buf_pool->LRU list, in order not to trip the debug check. ------------------------------------------------------------------------ r6108 | calvin | 2009-10-29 16:58:04 +1100 (Thu, 29 Oct 2009) | 5 lines branches/zip: close file handle when building with UNIV_HOTBACKUP The change does not affect regular InnoDB engine. Confirmed by Marko. ------------------------------------------------------------------------ r6109 | jyang | 2009-10-29 19:37:32 +1100 (Thu, 29 Oct 2009) | 7 lines branches/zip: In os_mem_alloc_large(), if we fail to attach the shared memory, reset memory pointer ptr to NULL, and allocate memory from conventional pool. Bug #48237 Error handling in os_mem_alloc_large appears to be incorrect rb://198  Approved by: Marko ------------------------------------------------------------------------ r6110 | marko | 2009-10-29 21:44:57 +1100 (Thu, 29 Oct 2009) | 2 lines branches/zip: Makefile.am (INCLUDES): Merge a change from MySQL: Use $(srcdir)/include instead of $(top_srcdir)/storage/innobase/include. ------------------------------------------------------------------------ r6111 | marko | 2009-10-29 22:04:11 +1100 (Thu, 29 Oct 2009) | 33 lines branches/zip: Fix corruption of buf_pool->LRU_old and improve debug assertions. This was reported as Issue #381. buf_page_set_old(): Assert that blocks may only be set old if buf_pool->LRU_old is initialized and buf_pool->LRU_old_len is nonzero. Assert that buf_pool->LRU_old points to the block at the old/new boundary. buf_LRU_old_adjust_len(): Invoke buf_page_set_old() after adjusting buf_pool->LRU_old and buf_pool->LRU_old_len, in order not to violate the added assertions. buf_LRU_old_init(): Replace buf_page_set_old() with a direct assignment to bpage->old, because these loops that initialize all the blocks would temporarily violate the assertions about buf_pool->LRU_old. buf_LRU_remove_block(): When setting buf_pool->LRU_old = NULL, also clear all bpage->old flags and set buf_pool->LRU_old_len = 0. buf_LRU_add_block_to_end_low(), buf_LRU_add_block_low(): Move the buf_page_set_old() call later in order not to violate the debug assertions.  If buf_pool->LRU_old is NULL, set old=FALSE. buf_LRU_free_block(): Replace the UNIV_LRU_DEBUG assertion with a dummy buf_page_set_old() call that performs more thorough checks. buf_LRU_validate(): Do not tolerate garbage in buf_pool->LRU_old_len even if buf_pool->LRU_old is NULL.  Check that bpage->old is monotonic. buf_relocate(): Make the UNIV_LRU_DEBUG checks stricter. buf0buf.h: Revise the documentation of buf_page_t::old and buf_pool_t::LRU_old_len. ------------------------------------------------------------------------ r6112 | calvin | 2009-10-30 01:21:15 +1100 (Fri, 30 Oct 2009) | 4 lines branches/zip: consideration for icc compilers Proposed by MySQL, and approved by Marko. ------------------------------------------------------------------------ r6113 | vasil | 2009-10-30 03:15:50 +1100 (Fri, 30 Oct 2009) | 93 lines branches/zip: Merge r5912:6112 from branches/5.1: (after this merge the innodb-autoinc test starts to fail, but I commit anyway because it would be easier to investigate the failure this way) ------------------------------------------------------------------------ r5952 | calvin | 2009-09-22 19:45:07 +0300 (Tue, 22 Sep 2009) | 7 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: fix bug#42383: Can't create table 'test.bug39438' For embedded server, MySQL may pass in full path, which is currently disallowed. It is needed to relax the condition by accepting full paths in the embedded case. Approved by: Heikki (on IM) ------------------------------------------------------------------------ r6032 | vasil | 2009-10-01 15:55:49 +0300 (Thu, 01 Oct 2009) | 8 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: Fix Bug#38996 Race condition in ANALYZE TABLE by serializing ANALYZE TABLE inside InnoDB. Approved by:	Heikki (rb://175) ------------------------------------------------------------------------ r6045 | jyang | 2009-10-08 02:27:08 +0300 (Thu, 08 Oct 2009) | 7 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc A /branches/5.1/mysql-test/innodb_bug47777.result A /branches/5.1/mysql-test/innodb_bug47777.test branches/5.1: Fix bug #47777. Treat the Geometry data same as Binary BLOB in ha_innobase::store_key_val_for_row(), since the Geometry data is stored as Binary BLOB in Innodb. Review: rb://180 approved by Marko Makela. ------------------------------------------------------------------------ r6051 | sunny | 2009-10-12 07:05:00 +0300 (Mon, 12 Oct 2009) | 6 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/mysql-test/innodb-autoinc.result M /branches/5.1/mysql-test/innodb-autoinc.test branches/5.1: Ignore negative values supplied by the user when calculating the next value to store in dict_table_t. Setting autoincrement columns top negative values is undefined behavior and this change should bring the behavior of InnoDB closer to what users expect. Added several tests to check. rb://162 ------------------------------------------------------------------------ r6052 | sunny | 2009-10-12 07:09:56 +0300 (Mon, 12 Oct 2009) | 4 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/mysql-test/innodb-autoinc.result M /branches/5.1/mysql-test/innodb-autoinc.test branches/5.1: Reset the statement level autoinc counter on ROLLBACK. Fix the test results too. rb://164 ------------------------------------------------------------------------ r6053 | sunny | 2009-10-12 07:37:49 +0300 (Mon, 12 Oct 2009) | 6 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/mysql-test/innodb-autoinc.result M /branches/5.1/mysql-test/innodb-autoinc.test branches/5.1: Copy the maximum AUTOINC value from the old table to the new table when MySQL does a CREATE INDEX ON T. This is required because MySQL does a table copy, rename and drops the old table. Fix Bug#47125: auto_increment start value is ignored if an index is created and engine=innodb rb://168 ------------------------------------------------------------------------ r6076 | vasil | 2009-10-14 19:30:12 +0300 (Wed, 14 Oct 2009) | 4 lines Changed paths: M /branches/5.1/row/row0mysql.c branches/5.1: Fix typo. ------------------------------------------------------------------------ ------------------------------------------------------------------------ r6114 | vasil | 2009-10-30 03:43:51 +1100 (Fri, 30 Oct 2009) | 6 lines branches/zip: * Add ChangeLog entries for latest changes * Obey alphabetical order in the list of the files * White-space fixup ------------------------------------------------------------------------ r6121 | sunny | 2009-10-30 10:42:11 +1100 (Fri, 30 Oct 2009) | 7 lines branches/zip: This test has been problematic for sometime now. The underlying bug is that the data dictionaries get out of sync. In the AUTOINC code we try and apply salve to the symptoms. In the past MySQL made some unrelated change and the dictionaries stopped getting out of sync and this test started to fail. Now, it seems they have reverted that changed and the test is passing again. I suspect this is not he last time that this test will change. ------------------------------------------------------------------------ r6124 | jyang | 2009-10-30 19:02:31 +1100 (Fri, 30 Oct 2009) | 5 lines branches/zip: Correct the bug number for -r6109 change from # 48273 to #48237 ------------------------------------------------------------------------ r6126 | vasil | 2009-10-30 19:36:07 +1100 (Fri, 30 Oct 2009) | 45 lines branches/zip: Merge r6112:6125 from branches/5.1: (skipping r6122 and r6123, Jimmy says these are already present and need not be merged): ------------------------------------------------------------------------ r6122 | jyang | 2009-10-30 05:18:38 +0200 (Fri, 30 Oct 2009) | 7 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/mysql-test/innodb_bug44369.result M /branches/5.1/mysql-test/innodb_bug44369.test M /branches/5.1/mysql-test/innodb_bug46000.result M /branches/5.1/mysql-test/innodb_bug46000.test branches/5.1: Chnage WARN_LEVEL_ERROR to WARN_LEVEL_WARN for push_warning_printf() call in innodb. Fix Bug#47233: Innodb calls push_warning(MYSQL_ERROR::WARN_LEVEL_ERROR) rb://170 approved by Marko. ------------------------------------------------------------------------ r6123 | jyang | 2009-10-30 05:43:06 +0200 (Fri, 30 Oct 2009) | 8 lines Changed paths: M /branches/5.1/os/os0proc.c branches/5.1: In os_mem_alloc_large(), if we fail to attach the shared memory, reset memory pointer ptr to NULL, and allocate memory from conventional pool. This is a port from branches/zip. Bug #48237 Error handling in os_mem_alloc_large appears to be incorrect rb://198  Approved by: Marko ------------------------------------------------------------------------ r6125 | vasil | 2009-10-30 10:31:23 +0200 (Fri, 30 Oct 2009) | 4 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: White-space fixup. ------------------------------------------------------------------------ ------------------------------------------------------------------------ r6130 | marko | 2009-11-02 20:42:56 +1100 (Mon, 02 Nov 2009) | 9 lines branches/zip: Free all resources at shutdown. Set pointers to NULL, so that Valgrind will not complain about freed data structures that are reachable via pointers.  This addresses Bug #45992 and Bug #46656. This patch is mostly based on changes copied from branches/embedded-1.0, mainly c5432, c3439, c3134, c2994, c2978, but also some other code was copied.  Some added cleanup code is specific to MySQL/InnoDB. rb://199 approved by Sunny Bains ------------------------------------------------------------------------ "	00c16e8a30d5d5b37cb7291cca59521e6fc3e677
----------------------------
MgmConfig-t - add code that can print out how nodes need to be restarted for config parameter change to take effect 	661f1167529f84402001ef927ea8d9691cb281d2
----------------------------
Bug#47366 ndb_config --xml --configinfo: Add restart type for config variables - Add flags CS_RESTART_INITIAL and CS_RESTART_SYSTEM which describes how the system must be restarted for a configuration parameter change to take effect. Default is none of these flags set, which means node restart of one node at a time for the setting to take effect CS_RESTART_INITIAL Each data node need to be restarted one at a time with --initial CS_RESTART_SYSTEM The whole system need to be stopped and then started up again CS_RESTART_SYSTEM + CS_RESTART_INITIAL The whole system need to be stopped and then restarted with --initial thus destroying any data in the cluster - Rename CI_UPDATEABALE to CI_ONLINE_UPDATEABLE and check that no parameter yet have that flag set, turn it off for some variables. - This is the current list of parameters that require --initial node restart NoOfFragmentLogFiles FragmentLogFileSize InitFragmentLogFiles DataDir FileSystemPath BackupDataDir CompressedLCP FileSystemPathDD FileSystemPathDataFiles FileSystemPathUndoFiles - This is the current list of parameters that require --initial system restart NoOfReplicas Diskless(aka Discless) InitialLogfileGroup InitialTablespace - There are currently no parameters that require system restart 	199c53576d299849cddc72d4379e8b4ea5235e4b
----------------------------
"Bug#41371      Select returns 1 row with condition ""col is not null and col is null"" For application compatibility reasons  MySQL converts ""<autoincrement_column> IS NULL"" predicates to ""<autoincrement_column> = LAST_INSERT_ID()"" in the first SELECT following an INSERT regardless of whether they're top level predicates or not. This causes wrong and obscure results when these predicates are combined with others on the same columns. Fixed by only doing the transformation on a single top-level predicate if a special SQL mode is turned on (sql_auto_is_null). Also made sql_auto_is_null off by default. per-file comments: mysql-test/r/func_isnull.result Bug#41371      Select returns 1 row with condition ""col is not null and col is null"" test result updated mysql-test/t/func_isnull.test Bug#41371      Select returns 1 row with condition ""col is not null and col is null"" test case added sql/mysqld.cc Bug#41371      Select returns 1 row with condition ""col is not null and col is null"" sql_auto_is_null now is OFF by default. sql/sql_select.cc Bug#41371      Select returns 1 row with condition ""col is not null and col is null"" remove_eq_conds() split in two parts - one only checks the upper condition, the req_remove_eq_conds() recursively checks all the condition tree. mysql-test/extra/rpl_tests/rpl_insert_id.test Bug#41371      Select returns 1 row with condition ""col is not null and col is null"" test fixed (set the sql_auto_is_null variable) mysql-test/r/mysqlbinlog.result Bug#41371      Select returns 1 row with condition ""col is not null and col is null"" result updated mysql-test/r/mysqlbinlog2.result Bug#41371      Select returns 1 row with condition ""col is not null and col is null"" result updated mysql-test/r/odbc.result Bug#41371      Select returns 1 row with condition ""col is not null and col is null"" result updated mysql-test/r/query_cache.result Bug#41371      Select returns 1 row with condition ""col is not null and col is null"" result updated mysql-test/r/user_var-binlog.result Bug#41371      Select returns 1 row with condition ""col is not null and col is null"" result updated mysql-test/suite/binlog/r/binlog_row_ctype_ucs.result Bug#41371      Select returns 1 row with condition ""col is not null and col is null"" result updated mysql-test/suite/binlog/r/binlog_stm_ctype_ucs.result Bug#41371      Select returns 1 row with condition ""col is not null and col is null"" result updated mysql-test/suite/rpl/r/rpl_insert_id.result Bug#41371      Select returns 1 row with condition ""col is not null and col is null"" result updated mysql-test/suite/rpl/r/rpl_row_mysqlbinlog.result Bug#41371      Select returns 1 row with condition ""col is not null and col is null"" result updated mysql-test/suite/rpl/r/rpl_sp.result Bug#41371      Select returns 1 row with condition ""col is not null and col is null"" result updated mysql-test/t/odbc.test Bug#41371      Select returns 1 row with condition ""col is not null and col is null"" test fixed (set the sql_auto_is_null variable) "	567bf9d37cc89083ed9ed8ba96aba5963c30cdaa
----------------------------
Bug#47365 ndb_config --xml --configinfo: mark shm*, sci* as unsupported - Extend status for a config parameter so it can now also have the status experimental - Mark all SCI and SHM parameters as experimental 	ff65f793822326b15fc968bde8b7c827cb808027
----------------------------
sql_plugin.cc: error log messages should not depend on the current_thd lc_messages. this also fixes a crash when plugin_init() uses ER() too early 	01c2a65f39d2c84357c757b57e2bbed9d9e5203b
----------------------------
Applying InnoDB plugin snashot Detailed revision comments: r6064 | calvin | 2009-10-13 18:23:35 +0300 (Tue, 13 Oct 2009) | 4 lines branches/zip: non-functional changes Changes from MySQL to fix build issue. r6065 | inaam | 2009-10-13 20:43:13 +0300 (Tue, 13 Oct 2009) | 7 lines branches/zip rb://182 Call fsync() on datafiles after a batch of pages is written to disk even when skip_innodb_doublewrite is set. Approved by: Heikki 	280b7ee2916a8c5d2d9e4b73d04e9bce3be52e8a
----------------------------
"Bug #47423 mtr connects to wrong database The reason for the bug is that mysqtest as well as other client tools running in test suite (mysqlbinlog, mysqldump) will first try to connect whatever database has created shared memory with default base name ""MySQL"" and use this. (Same effect could be seen on Unix if mtr would not care to calculate ""port"" and ""socket"" parameter). The fix ensures that all client tools and  running in mtr use unique per-database shared memory base parameters, so there is no possibility to clash with already installed one. We use socket name for shared memory base (it's known to be unique). This shared-memory-base is written to the MTR config file to the [client] and [mysqld] sections. Fix made also made sure all client tools understand and correctly handle --shared-memory-base. Prior to this patch  it was not the case for  mysqltest, mysqlbinlog and mysql_client_test. All new connections done from mtr scripts via connect() will by default set shared-memory-base. And finally, there is a possibility to force shared memory or pipe connection and overwrite shared memory/pipe base name from within mtr scripts via optional PIPE or SHM modifier. This functionality was manually backported from 6.0 (original patch  http://lists.mysql.com/commits/74749) "	2f075a1e37a483833e6f7e2de4bd3f9b1848082c
----------------------------
"Bug#47655: Memory free error when connecting to 4.1 server from 5.1+ client When starting the (5.1+) mysql command-line client, we try to get ""select @@version_comment"" from the server to present it to the user. Recent clients are aware that older servers do not have that variable and fall back on other info to be able to present *something* at least. This fallback string was allocated through the POSIX interface, but released through the my*() suite, which rightfully complained about the imbalance in calls when compiled with --debug. While this wasn't as bad as it looked (no double-free, use of uninitialized or freed buffer, etc.), it did look funky. Using my_strdup() now for what will be my_free()d later. "	a0d5521f06030c3884ea26fd3c0e7520ca43ff26
----------------------------
Bug#48295: explain extended crash with subquery and ONLY_FULL_GROUP_BY sql_mode If an outer query is broken, a subquery might not even get set up. EXPLAIN EXTENDED did not expect this and merrily tried to de-ref all of the half-setup info. We now catch this case and print as much as we have, as it doesn't cost us anything (doesn't make regular execution slower). 	d7e7765b36092cc83d29e016d0e4d32c4f882a13
----------------------------
WL#5096: (WORK-IN-PROGRESS) Merged some test files by making use of the dynamic property from binlog_row_image system variable. 	55b8244812f11acd1b0a23ce3a5e0454e68ab48f
----------------------------
"Bug#33637 SHOW PROCEDURE CODE/SHOW FUNCTION CODE sp_name gives a syntax error. Backport for 5.5 In non debug builds, the statements: - SHOW PROCEDURE CODE - SHOW FUNCTION CODE used to fail with a ""syntax error"", which is misleading. These statements have been changed to return the following error for non debug builds: ERROR HY000: The 'SHOW PROCEDURE|FUNCTION CODE' feature is disabled; you need MySQL built with '--with-debug' to have it working For debug builds (./configure --with-debug), nothing is changed. "	6a67daaa5ab1c818845ce1dd4405cce1436ca1f2
----------------------------
Bug#38968 Unused mutex LOCK_bytes_sent, LOCK_bytes_received Backport for 5.5 	2497093ad40ac5def9b864d1ecbb57561be8500f
----------------------------
WL#5092: (WORK-IN-PROGRESS) Moved towards dynamic binlog_row_image server variable. 	db3d3111edb08e89ef51093a22c2478290549abe
----------------------------
Bug#38551 query cache can still consume [very little] cpu time even when it is off. When the query cache is disabled, the server shouldn't attempt to take the query cache mutex. By using the command line option --query_cache_type=0, the user can disable (backport from mysql-pe) 	2d6a356abfc82a70c05167eb198669705c69daeb
----------------------------
"Bug #46828  	rpl_get_master_version_and_clock fails on PB-2 The 'rpl_get_master_version_and_clock' test verifies if the slave I/O thread tries to reconnect to master when it tries to get the values of the UNIX_TIMESTAMP, SERVER_ID from master under network disconnection. So the master server is restarted for making the transient network disconnection. Restarting master server can bring two problems as following: 1. The time out error is encountered sporadically. The slave I/O thread tries to reconnect master ten times, which is set in my.cnf. So in the test framework sporadically the slave I/O thread really stoped when it can't reconnect to master in the ten times successfully before the master starts, then the time out error will be encountered while waiting for the slave to start. 2. These warnings and errors are produced in server log file when the slave I/O thread tries to get the values of the UNIX_TIMESTAMP, SERVER_ID from master under the transient network disconnection. To fix problem 1, increase the master retry count to sixty times, so that the slave I/O thread has enough time to reconnect master successfully. To fix problem 2, suppress these warnings and errors by mtr suppression, because they are expected. "	fccc33a3ca31a458017b4a8e3ab9378980a09170
----------------------------
Fixed sql_mode issue in BUG#48164, will ignore sql_mode when generating constants, also warnings will not be tolerated 	59cc5189900e08e770239f2d53cb83cb194e8b3c
----------------------------
"ndb_mgmd - Clear(silently ignore) any dynamic ports with value from config submitted by user through 'set config'. The dynamic ports reported by nodes in the cluster are kept in a separate hash table and written into the config again when client ask for the config. This way we avoid having ""stale"" ports in the binary config written to disk. "	3ba9fcb238d6660eee3d5b5c1e9e451b31b8e54b
----------------------------
A follow-up to fix for BUG#47073 - valgrind errs, corruption,failed repair of partition, low myisam_sort_buffer_size Fixed race conditions discovered with the provided test case and stabilized test case. 	9fbc44eb091d33563af9a0e3ef6485b3e50205f7
----------------------------
"Bug #48317 cannot build innodb as static library. The problem here is that the latest innodb push contains both MYSQL_STORAGE_ENGINE(INNOBASE) and MYSQL_STORAGE_ENGINE(INNOBASE) in the same CMakeLists.txt, to make the resulting library ha_innodb.dll, instead of ha_innobase.dll. Using multiple MYSQL_STORAGE_ENGINE within the same  CMakeLists.txt conflicts with the fix for the bug Bug #47795 ""CMake, storage engine name different from directory name"". Top-level CMakeLists.txt now parses storage engine's  CMakeLists.txt to extract engines name from MYSQL_STORAGE_ENGINE(). For innodb, it concludes that there is not storage engine named INNOBASE, hence WITH_INNOBASE_STORAGE_ENGINE has no effect. The fix is to use SET_TARGET_PROPERTIES(... PROPERTIES OUTPUT_NAME ...), instead of renaming the engine to have plugins named ha_innodb.dll. "	b1c355b34c793fbfc059e10cbb9268f03e3549f0
----------------------------
ndb - don't use --binlog-format if a particular mysqld in the configuration doesn't use log-bin 	7af7313bf2e532568da0684f3cb0c061b49f63bc
----------------------------
post-push fixes Disabled rpl_cross_version (instead of setting it experimental). Fixed outstanding warning fix in main.debug_sync. 	ec9aa90ad91c69acbba4d266198cfe17ffa5aae0
----------------------------
Bug #47919 assert in open_table during ALTER temporary table This assertion would occur if UPDATE was used to update multiple tables containing an AUTO_INCREMENT column and if the inserted row had a user-supplied value for that column. The assertion could then be triggered by the next statement. The problem was only noticeable on debug builds of the server. The cause of the problem was that the code for multi update did not properly reset the TABLE->auto_increment_if_null flag after update. The flag is used to indicate that a non-null value of an auto_increment field has been provided by the user or retrieved from a current record. Open_tables() contains an assertion that tests this flag, and this was triggered in this case by ALTER TABLE. This patch fixes the problem by resetting the auto_increment_if_null field to FALSE once a row has been updated. This bug is similar to Bug#47274, but for multi update rather than INSERT DELAYED. Test case added to update.test. 	111da3a4c0dd88df7f572f6529f2ed26f2c1ff66
----------------------------
"BUG#48091 valgrind errors when slave has double not null and master has double null Backporting BUG#43789 to mysql-5.1-bugteam The replication was generating corrupted data, warning messages on Valgrind and aborting on debug mode while replicating a ""null"" to ""not null"" field. Specifically the unpack_row routine, was considering the slave's table definition and trying to retrieve a field value, where there was nothing to be retrieved, ignoring the fact that the value was defined as ""null"" by the master. To fix the problem, we proceed as follows: 1 - If it is not STRICT sql_mode, implicit default values are used, regardless if it is multi-row or single-row statement. 2 - However, if it is STRICT mode, then a we do what follows: 2.1 If it is a transactional engine, we do a rollback on the first NULL that is to be set into a NOT NULL column and return an error. 2.2 If it is a non-transactional engine and it is the first row to be inserted with multi-row, we also return the error. Otherwise, we proceed with the execution, use implicit default values and print out warning messages. Unfortunately, the current patch cannot mimic the behavior showed by the master for updates on multi-tables and multi-row inserts. This happens because such statements are unfolded in different row events. For instance, considering the following updates and strict mode: (master) create table t1 (a int); create table t2 (a int not null); insert into t1 values (1); insert into t2 values (2); update t1, t2 SET t1.a=10, t2.a=NULL; t1 would have (10) and t2 would have (0) as this would be handled as a multi-row update. On the other hand, if we had the following updates: (master) create table t1 (a int); create table t2 (a int); (slave) create table t1 (a int); create table t2 (a int not null); (master) insert into t1 values (1); insert into t2 values (2); update t1, t2 SET t1.a=10, t2.a=NULL; On the master t1 would have (10) and t2 would have (NULL). On the slave, t1 would have (10) but the update on t1 would fail. "	4f164c4c5abcb828c3612ac8ba75790899a02009
----------------------------
BUG#48091 valgrind errors when slave has double not null and master has double null Backporting BUG#38173 to mysql-5.1-bugteam The reason of  the bug was incompatibile with the master side behaviour. INSERT query on the master is allowed to insert into a table without specifying values of DEFAULT-less fields if sql_mode is not strict. Fixed with checking sql_mode by the sql thread to decide how to react. Non-strict sql_mode should allow Write_rows event to complete. todo: warnings can be shown via show slave status, still this is a separate rather general issue how to show warnings for the slave threads. 	434810542494f364dac830af36fbb455fa3b0ba0
----------------------------
Backporting WL#3953 from 6.0. Original revision: ------------------------------------------------------------ revno: 2476.714.9 committer: markleith@medusa.mysql.com timestamp: Mon 2007-09-03 23:18:50 +0100 message: Bug#25822 / WL#3953 - Log Access Denied errors for bad passwords in the error log Added logging of Access Denied messages on failed new connections to the error log when log-warnings = 2. This allows a user to log these messages without having to incur the overhead of using the general query log on production systems. ------------------------------------------------------------ 	28724351d0fddcdf297c43886825848359d05c00
----------------------------
ndb - fix compiler warning and close extra sockets during shutdown 	ff6bd6f15fbd8b4cb019c2fc3dd7003fa7a9c150
----------------------------
ndb - TransporterRegistry::wakeup This patch introduces the feature of waking up a thread blocking on IO by introducing a socket-pair, that 1 byte is written to 	17bdc173789e259c936f2c4376b0e02a6f0f6a05
----------------------------
ndb/mysys - add my_socketpair 	58149cd2329463906e1540d4f4fdb48b1e40cba9
----------------------------
BUG#34582: FLUSH LOGS does not close and reopen the binlog index file Issuing 'FLUSH LOGS' does not close and reopen indexfile. Instead a SEEK_SET is performed. This patch makes index file to be closed and reopened whenever a rotation happens (FLUSH LOGS is issued or binary log exceeds maximum configured size). 	454a0c0d209de06709ddcbf083a9839214512927
----------------------------
"Bug#13963  	SHOW SLAVE HOSTS is unreliable Before the patch, slaves only appear in the output of SHOW SLAVE HOSTS when report-host option is set. If an expected slave does not appear in the list, nobody knows whether the slave does not connect or has started without the ""report-host"" option. The output also contains a strange field ""Rpl_recovery_rank"" which has never been implemented and the manual of MySQL5.4 declares that the field has been removed from MySQL5.4. This patch is done with these, According to the manual of MySQL5.4, ""Rpl_recovery_rank"" is removed. Slaves will register themselves to master no matter if report_host option is set or not. When slaves are registering themselves, their Server_ids, report_host and other information are together sent to master. Sever_ids are never null and is unique in one replication group. Slaves always can be identified with different Server_ids no matter if report_host exists. "	d17245e772eea94cc77f8eabbc94b39bd226dfac
----------------------------
Bug #48149 MTR should automatically skip SSL tests if SSL not supported Knowledge of no SSL support is not used Skip tests the same way e.g. innodb tests are Does not refer to have_ssl_communication.inc, will add this when merging to 6.0-codebase 	23ef842e030f76a5d376b206b21f15d5799bb0ec
----------------------------
"Back-port from 6.0 of the fix for BUG#41759: ""Valgrind warning: Invalid read of size 1 open_tables() with ps-protocol"" (from revid:sergefp@mysql.com-20081227013233-f9n2by8romt37hyi) "	b1f765a98a1b5b8ca66c11cb4a62f8362b62964f
----------------------------
BUG48143 nbd_mgmd - crash in CONFIG_CHECK_REF 	d355c5f912af72af918f23af43210f052dc9f0e4
----------------------------
BUG#39934 - post-push fixes. The rpl_ndb/combinations file was introduced as part of the fix. The file contained an error: ndb suites shall not run with binlog_format=mixed. Removed that combination. 	00a65bd421f4efdf78d6647644873745c6808c23
----------------------------
Postfix of bug#45674 rpl_semi_sync_master_wait_sessions was reset by FLUSH STATUS, which could cause the master fail to wake up waiting sessions and result in master timeout waiting for slave reply. rpl_semi_sync_master_wait_session should not be reset, this problem is fixed by this patch. 	f71b836e500d9d0647d492d597f7b49168af32ee
----------------------------
WL#5092 Adds SHOW VARIABLE LIKE 'binlog_row_image'; 	f1eb8a8e2b322ae2b32ed6e878cccaf0becffcfb
----------------------------
Backporting patch for Bug#38992 from 6.0. Original revision: revno: 2617.55.2 committer: Alexander Nozdrin <alik@sun.com> branch nick: azalea-bf-bug38992 timestamp: Fri 2009-06-19 16:41:16 +0400 message: Fix for Bug#38992: Server crashes sporadically with 'waiting for initial ...' msg on windows. The problem is that connection timeout is too small for busy windows box. The fix is to - add support for connect_timeout command line argument to mysqltest; - set default value of the connect_timeout option to 120 seconds. 	4ebb631f3a1c03a111c20af22df28cf585585536
----------------------------
"Backport of 2617.65.4 from 6.0-codebase. A fix and a test case for Bug#34898 ""mysql_info() reports 0 warnings while mysql_warning_count() reports 1"" Review the patch by Chad Miller, implement review comments (since Chad left) and push the patch. This bug is actually not a bug. At least according to Monty. See Bug#841 ""wrong number of warnings"" reported back in July 2003 and closed as ""not a bug"". mysql_info() was printing the number of truncated columns, not the number of warnings. But since the message of mysql_info() was ""Warnings: <number of truncated columns>"", people would expect to get the number of warnings in it, not the number of truncated columns. So a possible fix would be to change the message of mysql_info() to say Rows changed: <n>, truncated: <m>. Instead, put the number of warnings there. That is, remove the feature that thd->cuted_fields (the number of truncated fields) is exposed to the client. The number of truncated columns can be calculated on the client, by analyzing SHOW WARNINGS output, and in future we may remove thd->cuted_fields altogether. So let's have one less thing to worry about. "	8441517b52fd7f3b392b451745aeedfb21c0d244
----------------------------
"Bug #37433  	Deadlock between open_table, close_open_tables, get_table_share, drop_open_table In the partition handler code, LOCK_open and share->LOCK_ha_data are acquired in the wrong order in certain cases.  When doing a multi-row INSERT (i.e a INSERT..SELECT) in a table with auto- increment column(s). the increments must be in a monotonically continuous increasing sequence (i.e it can't have ""holes""). To achieve this, a lock is held for the duration of the operation. share->LOCK_ha_data was used for this purpose. Whenever there was a need to open a view _during_ the operation (views are not currently pre-opened the way tables are), and LOCK_open was grabbed, a deadlock could occur.  share->LOCK_ha_data is other places used _while_ holding LOCK_open. A new mutex was introduced in the HA_DATA_PARTITION structure, for exclusive use of the autoincrement data fields, so we don't need to overload the use of LOCK_ha_data here. A module test case has not been supplied, since the problem occurs as a result of a race condition, and testing for this condition is thus not deterministic.   Testing for it could be done by setting up a test case as described in the bug report. "	6b80cd916a0863f22f68cbbb2572ad67ac877728
----------------------------
"Bug #38124 ""general_log_file"" variable silently unset when using expression When assigning the new string value to the variable, the Item::str_value member was used.  This is not according to the protocol.  str_value is an internal member used for temporary assignments, and is not consistently set for all string operations.  It is set for constant strings, so it would work in these cases, but not for string functions (concat, substr, etc.) The correct approach is to use Item::val_str(..) to evaluate and retrieve the string. Backport from 6.0-codebase 6.0-codebase revno: 2617.31.17 "	ebb0b02ce519dcc57c163ca8c3892f462eb07889
----------------------------
Bug #48047 Can't do normal shutdown Fix a regression that crept in when downporting Windows improvements. Instead of a shutdown thread, another thread that  handledsocket connection was created. 	68c55462ef9f7f14d377c7fd15386e0fced174ec
----------------------------
BUG#39934: Slave stops for engine that only support row-based logging Post-push fix. Problem: After the original bugfix, if a statement is unsafe, binlog_format=mixed, and engine is statement-only, a warning was generated and the statement executed. However, it is a fundamental principle of binlogging that binlog_format=mixed should guarantee correct logging, no compromise. So correct behavior is to generate an error and don't execute the statement. Fix: Generate error instead of warning. Since issue_unsafe_warnings can only generate one error message, this allows us to simplify the code a bit too: decide_logging_format does not have to save the error code for issue_unsafe_warnings 	73b296c4c4d7c03528f33f0c6f1c91905ec7b8e6
----------------------------
Backport of revno: 2617.81.4 Bug #47274 assert in open_table on CREATE TABLE <already existing> The problem was an assertion during execution of CREATE TABLES. This assertion would occur if INSERT DELAYED or REPLACE DELAYED were used to update a table containing an AUTO_INCREMENT column and if the inserted row had a user-supplied value for that column. Any CREATE TABLE statement (including CREATE TABLE SELECT and CREATE TABLE LIKE) trying to create the same table and which followed the INSERT/REPLACED would cause the assertion. The problem was only noticeable on debug builds of the server and not present in the mysql-5.1 tree. The cause of the problem was that the code for delayed insert did not properly reset the TABLE->auto_increment_if_null flag after The flag is used to indicate that a non-null value of an auto_increment field has been provided by the user or retrieved from a current record. Open_tables() contains an assertion that tests this flag, and this was triggered by CREATE TABLE. This patch fixes the problem by resetting the auto_increment_if_null field to FALSE once INSERT/REPLACE DELAYED has updated the table, similar to what is done already for regular INSERT statements. Test case added to delayed.test. 	6438ca9f18a9f8af5b15bdbf8e4a30fdd3e6a80d
----------------------------
Bug#46640: output from mysqlbinlog command in 5.1 breaks replication The BINLOG statement was sharing too much code with the slave SQL thread, introduced with the patch for Bug#32407. This caused statements to be logged with the wrong server_id, the id stored inside the events of the BINLOG statement rather than the id of the running server. Fix by rearranging code a bit so that only relevant parts of the code are executed by the BINLOG statement, and the server_id of the server executing the statements will not be overrided by the server_id stored in the 'format description BINLOG statement'. 	0ece5891a28d9e7f8387573a4c69f2c278edd225
----------------------------
---------------------------------------------------------- revno: 2630.2.16 committer: Konstantin Osipov <konstantin@mysql.com> branch nick: mysql-6.0-runtime timestamp: Fri 2008-06-27 13:26:03 +0400 message: Fix max_user_connections_func failure on Solaris. A connection that failed to log in due to a resource limit could be returned to the thread pool with a dangling link to user_connect structure of an old user. Later on it could be authenticated to a user that doesn't have a resource limit, so this dangling link won't be reset. --pool-of-threads mode made the situation easy to reproduce, and thus highlighted a bug that has been around forever. Make sure there are no dangling links. 	2f01aa9727e4c062b382d53bd871d7fdaf3802b6
----------------------------
Backport of: ---------------------------------------------------------- revno: 2630.2.6 committer: Konstantin Osipov <konstantin@mysql.com> branch nick: mysql-6.0-27430 timestamp: Mon 2008-05-26 16:12:28 +0400 message: Cover four special cases of WL#4166 with tests: - when the query cache is disabled at the time of prepared statement reprepare - when long data parameters are used - when character_set_connection != character_set_client, and a parameter conversion takes place - when parameter data is out of acceptable range, e.g. year 10000 is supplied as part of MYSQL_TYPE_DATETIME value. The server is supposed to warn in such case. 	59c1746b21ddee25baea1f64e60ceba2d3ebd689
----------------------------
"Backport of the following revision from 6.0-codebase: ---------------------------------------------------------- revno: 2617.1.12 committer: kostja@bodhi.(none) timestamp: Sun 2008-04-20 11:18:52 +0400 message: A fix for Bug#32771 ""events_bugs.test fails randomly"". In Event_scheduler::stop(), which may be called from destructor, wait synchronously for the parallel Event_scheduler::stop() to complete before returning. This fixes a race between MySQL shutdown thread and the scheduler thread who could call stop() in parallel. "	3dd1d5983b13be1f87a4da82cc89140605e9714d
----------------------------
branches/zip rb://182 Call fsync() on datafiles after a batch of pages is written to disk even when skip_innodb_doublewrite is set. Approved by: Heikki 	51c89873d1fa33c25913a6b44359fad8d03743f7
----------------------------
Bug #33693 general log name and location depend on PID file, not on predefined values The default name of the PID file was constructed, as documented, based on the hostname.  This name was subsequently used as the base for the general log file name.   If the name of the PID file was overridden in the configuration, and no explicit name was set for the general log file, the path location for the PID file was used also for the general log file. A new variable, 'default_logfile_name', has been introduced.  This name is constructed based on the hostname, and is then used to construct both the PID file and the general log file. The general log file will now, unless explicitly set, be located in the server data directory (as documentated in the server docs) 	10390cec03109dd9ffd0d6785d2bc843166fcf38
----------------------------
Backport BUG#47298 Semisync: always wait until timeout if no semi-sync slave available Add an option to control whether the master should keep waiting until timeout when it detected that there is no semi-sync slave available. The bool option 'rpl_semi_sync_master_wait_no_slave' is 1 by defalt, and will keep waiting until timeout. When set to 0, the master will switch to asynchronous replication immediately when no semi-sync slave is available. 	b92ec529153d9b45cb3db1a5c1ee74d87590aa7a
----------------------------
BUG#45674 FLUSH STATUS does not reset semisynchronous counters Semi-sync status were not reset by FLUSH STATUS, this was because all semi-sync status variables are defined as SHOW_FUNC and FLUSH STATUS could only reset SHOW_LONG type variables. This problem is fixed by change all status variables that should be reset by FLUSH STATUS from SHOW_FUNC to SHOW_LONG. After the fix, the following status variables will be reset by FLUSH STATUS: Rpl_semi_sync_master_yes_tx Rpl_semi_sync_master_no_tx Note: normally, FLUSH STATUS itself will be written into binlog and be replicated, so after FLUSH STATS, one of Rpl_semi_sync_master_yes_tx Rpl_semi_sync_master_no_tx can be 1 dependent on the semi-sync status. So it's recommended to use FLUSH NO_WRITE_TO_BINLOG STATUS to avoid this. 	64fc766c93e4a5c9835af091d9adbb0799a301ad
----------------------------
Bug#46944 Internal prepared XA transction XIDs are not removed if server_id changes When MySQL crashes (or a snapshot is taken which simulates a crash), then it is possible that internal XA transactions (used to sync the binary log and InnoDB) can be left in a PREPARED state, whereas they should be rolled back.  This is done when the server_id changes before the restart occurs. This patch releases he restriction that the server_id should be consistent if the XID is to be considerred valid. The rollback phase should then be able to clean up all pending XA transactions. 	1574e9cd3fd201c31ebc3aedb87a64cf3fb67e8e
----------------------------
"Applying InnoDB Plugin 1.0.5 snapshot, part 13 1. Undo r6031 btr/btr0btr.c changes 2. apply skipped Plug.in changes and missed revisions Detailed revision comments: r5865 | vasil | 2009-09-12 02:26:03 -0500 (Sat, 12 Sep 2009) | 10 lines branches/zip: Simplify the compile time checks by splittig them into 5 independent checks: * Whether GCC atomics are available * Whether pthread_t can be used by GCC atomics * Whether Solaris libc atomics are available * Whether pthread_t can be used by Solaris libs atomics * Checking the size of pthread_t r5869 | vasil | 2009-09-12 03:33:11 -0500 (Sat, 12 Sep 2009) | 15 lines branches/zip: Include ut0auxconf.h only if none of the macros it would define is defined. The check when to include this header was outdated from the time when there was only one macro involved. Move the atomics checks that are in univ.i outside of #if windows ... #else ... #endif This simplifies the code and removes some duplicates like defining HAVE_ATOMIC_BUILTINS if HAVE_WINDOWS_ATOMICS is defined in both branches. Do not define the same macro HAVE_ATOMIC_PTHREAD_T for different events. Instead define HAVE_IB_ATOMIC_PTHREAD_T_GCC and HAVE_IB_ATOMIC_PTHREAD_T_SOLARIS. r5871 | vasil | 2009-09-12 04:25:44 -0500 (Sat, 12 Sep 2009) | 6 lines branches/zip: Rename HAVE_SOLARIS_ATOMICS to HAVE_IB_SOLARIS_ATOMICS and IB_HAVE_PAUSE_INSTRUCTION to HAVE_IB_PAUSE_INSTRUCTION so they all follow the same HAVE_IB_* convention. r5888 | vasil | 2009-09-14 03:38:45 -0500 (Mon, 14 Sep 2009) | 40 lines branches/zip: Back-merge c5880 and c5881 from branches/embedded-1.0: ------------------------------------------------------------------------ r5880 | vasil | 2009-09-12 17:28:44 +0300 (Sat, 12 Sep 2009) | 18 lines Changed paths: M /branches/embedded-1.0/configure.in M /branches/embedded-1.0/include/os0sync.h M /branches/embedded-1.0/srv/srv0start.c branches/embedded-1.0: Clean up and simplify the code that surrounds the atomic ops: * Simplify the code that prints what atomics are used: Instead of repeating the same conditions on which each atomics are used use just one printf that prints a variable defined by the code which chooses what atomics to use. * In os0sync.h pick up each atomic variant only if it has been selected by autoconf (based on IB_ATOMIC_MODE_* macros). Define the startup message to be printed. * In configure.in: check what user has chosen and if he has chosen something that is not available, emit an error. If nothing has been chosen explicitly by the user, auto select an option according to the described logic in configure.in. ------------------------------------------------------------------------ r5881 | vasil | 2009-09-12 20:08:27 +0300 (Sat, 12 Sep 2009) | 4 lines Changed paths: M /branches/embedded-1.0/configure.in branches/embedded-1.0: Fix syntax error in test program. ------------------------------------------------------------------------ r5889 | vasil | 2009-09-14 04:17:18 -0500 (Mon, 14 Sep 2009) | 5 lines branches/zip: Add missing return statement in the test program that could have caused a warning. r5893 | inaam | 2009-09-14 10:20:48 -0500 (Mon, 14 Sep 2009) | 10 lines branches/zip  rb://159 In case of pages that are not made young the counter is incremented only when the page in question is 'old'. In case of pages that are made young the counter is incremented in case of all pages. For apple to apple comparison this patch changes the 'young-making' counter to consider only 'old' blocks. Approved by: Marko r5537 | vasil | 2009-07-21 04:31:26 -0500 (Tue, 21 Jul 2009) | 5 lines branches/zip: Fixups in ChangeLog: sort filenames alphabetically and wrap to 78 chars per line. r5870 | vasil | 2009-09-12 04:13:44 -0500 (Sat, 12 Sep 2009) | 7 lines branches/zip: Define HAVE_ATOMIC_BUILTINS and INNODB_RW_LOCKS_USE_ATOMICS in os0sync.h instead of in univ.i. The code expects os_*() macros to be present if HAVE_ATOMIC_BUILTINS and INNODB_RW_LOCKS_USE_ATOMICS are defined. So define them next to defining the os_*() macros. r5696 | vasil | 2009-08-26 08:15:59 -0500 (Wed, 26 Aug 2009) | 14 lines branches/zip: Merge a change from MySQL: http://lists.mysql.com/commits/80832 2968 Jonathan Perkin	2009-08-14 Build fixes for Windows, AIX, HP/UX and Sun Studio11, from Timothy Smith. modified: CMakeLists.txt cmd-line-utils/readline/util.c storage/innodb_plugin/handler/i_s.cc storage/innodb_plugin/include/univ.i r5897 | marko | 2009-09-15 03:29:00 -0500 (Tue, 15 Sep 2009) | 8 lines branches/zip: Avoid bogus messages about latching order violations when UNIV_SYNC_DEBUG is defined. sync_thread_levels_g(): Add the parameter ""warn"".  Do not print anything unless it is set. sync_thread_add_level(): Pass warn=TRUE to sync_thread_levels_g() when the check is within an assertion; FALSE if it is not. r5899 | marko | 2009-09-15 06:26:01 -0500 (Tue, 15 Sep 2009) | 4 lines branches/zip: ut0ut.h: Do not #include ""os0sync.h"" #ifdef UNIV_HOTBACKUP. Since r5872, the InnoDB Hot Backup build was broken. Fix it by not defining any thread synchronization primitives in ut0ut.h. InnoDB Hot Backup is a single-threaded program. "	d0c28265aeeb26feb8e34a2e3ae1ed42f6774f87
----------------------------
BUG#47073 - valgrind errs, corruption,failed repair of partition, low myisam_sort_buffer_size Repair by sort (default) or parallel repair of a MyISAM table (doesn't matter partitioned or not) as well as bulk inserts and enable indexes some times didn't failover to repair with key cache. The problem was that after unsuccessful attempt, data file was closed. Whereas repair with key cache requires open data file. Fixed by reopening data file. Also fixed a valgrind warning, which may appear during repair by sort or parallel repair with certain myisam_sort_buffer_size number of rows and length of an index entry (very dependent). 	858713edd376ccb7eaf4826732869be8e71d0190
----------------------------
Bug #21099 MySQL 5.0.22 silently creates MyISAM tables even though InnoDB specified. NO_ENGINE_SUBSTITUTION added to TRADITIONAL sql mode to prevent silent conversions from InnoDB to MyISAM in that sql mode. A number of test case results files updated to reflect this change. Test added to sql_mode.test that checks that TRADITIONAL really includes NO_ENGINE_SUBSTITUION. 	43bf01e3372932c32f087aee74e9df83ad89e1c1
----------------------------
Bug#47216      programs should quit if the file specified by --defaults-file option isn't found added code to exit a tool if the forced config file wasn't found per-file comments: client/mysql.cc Bug#47216      programs should quit if the file specified by --defaults-file option isn't found added code to exit a tool if the forced config file wasn't found client/mysql_upgrade.c Bug#47216      programs should quit if the file specified by --defaults-file option isn't found added code to exit a tool if the forced config file wasn't found client/mysqladmin.cc Bug#47216      programs should quit if the file specified by --defaults-file option isn't found added code to exit a tool if the forced config file wasn't found client/mysqlcheck.c Bug#47216      programs should quit if the file specified by --defaults-file option isn't found added code to exit a tool if the forced config file wasn't found client/mysqldump.c Bug#47216      programs should quit if the file specified by --defaults-file option isn't found added code to exit a tool if the forced config file wasn't found client/mysqlimport.c Bug#47216      programs should quit if the file specified by --defaults-file option isn't found added code to exit a tool if the forced config file wasn't found client/mysqlshow.c Bug#47216      programs should quit if the file specified by --defaults-file option isn't found added code to exit a tool if the forced config file wasn't found client/mysqlslap.c Bug#47216      programs should quit if the file specified by --defaults-file option isn't found added code to exit a tool if the forced config file wasn't found mysql-test/t/mysql.test Bug#47216      programs should quit if the file specified by --defaults-file option isn't found test added sql/mysqld.cc Bug#47216      programs should quit if the file specified by --defaults-file option isn't found added code to exit a tool if the forced config file wasn't found storage/myisam/myisamchk.c Bug#47216      programs should quit if the file specified by --defaults-file option isn't found added code to exit a tool if the forced config file wasn't found storage/myisam/myisampack.c Bug#47216      programs should quit if the file specified by --defaults-file option isn't found added code to exit a tool if the forced config file wasn't found 	de7619823d3846fa514d7f540a7e5af898b142a8
----------------------------
"Bug #47941  	configure --with-ndb-port-base=port broken and should be removed - Print warning if --with-ndb-port-base is used, it has not effect - Since ndb_global.h.in does not have any ""substs"" anymore, move it to ndb_global.h - Remove the last remnants of NDB_TCP_PORT_BASE usage from ConfigInfo.cpp, dead code. "	5232ea08384716d0afe3d57985a47e81c3a03bc6
----------------------------
Bug#46922 post push update Disable the test when it will not hit the open_files_limit 	fa548cd0ffe4a029db71c27d783b8cbcd642c50f
----------------------------
Applying InnoDB Plugin 1.0.5  snapshot, part 11 From revision r5945 to r5994 r5950 - already applied and so skipped Detailed revision comments: r5945 | calvin | 2009-09-21 09:53:22 -0500 (Mon, 21 Sep 2009) | 4 lines branches/zip: fix a type in r5935 Should be innodb_open_files, spotted by Michael. r5951 | calvin | 2009-09-22 10:17:01 -0500 (Tue, 22 Sep 2009) | 4 lines branches/zip: adjust CMake file to work with old versions of MySQL Tested with MySQL 5.1.38 and 5.1.30. r5956 | calvin | 2009-09-22 18:30:10 -0500 (Tue, 22 Sep 2009) | 4 lines branches/zip: remove handler0vars.h from Makefile.am Left over from r5950. r5971 | marko | 2009-09-23 08:03:51 -0500 (Wed, 23 Sep 2009) | 2 lines branches/zip: os_file_pwrite(): Make the code compile in InnoDB Hot Backup when the pwrite system call is not available. r5972 | marko | 2009-09-23 14:44:52 -0500 (Wed, 23 Sep 2009) | 5 lines branches/zip: fil_node_open_file(): In InnoDB Hot Backup, determine the page size of single-file tablespaces before computing the file node size.  Otherwise, the space->size of compressed tablespaces would be computed with UNIV_PAGE_SIZE instead of key_block_size. This should fix Issue #313. r5973 | marko | 2009-09-23 14:53:21 -0500 (Wed, 23 Sep 2009) | 2 lines branches/zip: recv_add_to_hash_table(): Simplify obfuscated pointer arithmetics. r5978 | marko | 2009-09-24 02:47:56 -0500 (Thu, 24 Sep 2009) | 1 line branches/zip: Fix warnings and errors when UNIV_HOTBACKUP is defined. r5979 | marko | 2009-09-24 05:16:10 -0500 (Thu, 24 Sep 2009) | 4 lines branches/zip: ha_innodb.cc: Define MYSQL_PLUGIN_IMPORT when necessary. This preprocessor symbol has been recently introduced in MySQL 5.1. The InnoDB Plugin should remain source compatible with MySQL 5.1.24 and later. r5988 | calvin | 2009-09-25 14:14:43 -0500 (Fri, 25 Sep 2009) | 8 lines branches/zip: fix bug#47055 unconditional exit(1) on ERROR_WORKING_SET_QUOTA 1453 (0x5AD) for InnoDB backend When error ERROR_WORKING_SET_QUOTA or ERROR_NO_SYSTEM_RESOURCES occurs, yields for 100ms and retries the operation. Approved by: Heikki (on IM) r5992 | vasil | 2009-09-28 02:10:29 -0500 (Mon, 28 Sep 2009) | 4 lines branches/zip: Add ChangeLog entry for c5988. r5994 | marko | 2009-09-28 03:33:59 -0500 (Mon, 28 Sep 2009) | 17 lines branches/zip: Try to prevent the reuse of tablespace identifiers after InnoDB has crashed during table creation.  Also, refuse to start if files with duplicate tablespace identifiers are encountered. fil_node_create(): Update fil_system->max_assigned_id.  This should prevent the reuse of a space->id when InnoDB does a full crash recovery and invokes fil_load_single_table_tablespaces().  Normally, fil_system->max_assigned_id is initialized from SELECT MAX(ID) FROM SYS_TABLES. fil_open_single_table_tablespace(): Return FALSE when fil_space_create() fails. fil_load_single_table_tablespace(): Exit if fil_space_create() fails and innodb_force_recovery=0. rb://173 approved by Heikki Tuuri.  This addresses Issue #335. 	a1bb24eb2b7345edaf6d47305cd5c205f7a9c903
----------------------------
"Bug #44651 ""have_community_features"" variable should be renamed ""have_profiling"" 1) Renamed have_community_features server system variable to have_profiling. 2) Removed eable-community-features configure option and ENABLE_COMMUNITY_FEATURES macro. 3) Removed COMMUNITY_SERVER macro and replaced its usage by ENABLED_PROFILING. Only --enable-profiling is now needed to enable profiling. It was the only existing ""community feature"", so there was no need for both configure options. Using --enable-community-features will give a warning message since it no longer exists. "	0eccb93214fe11d60f4e95a813793357856e4ad7
----------------------------
Applying InnoDB Plugin 1.0.5 snapshot, part 10 From r5917 to r5940 Detailed revision comments: r5917 | marko | 2009-09-16 04:56:23 -0500 (Wed, 16 Sep 2009) | 1 line branches/zip: innobase_get_cset_width(): Cache the value of current_thd. r5919 | vasil | 2009-09-16 13:37:13 -0500 (Wed, 16 Sep 2009) | 4 lines branches/zip: Whitespace cleanup in the ChangeLog. r5920 | vasil | 2009-09-16 13:47:22 -0500 (Wed, 16 Sep 2009) | 4 lines branches/zip: Add ChangeLog entries for r5916. r5922 | marko | 2009-09-17 01:32:08 -0500 (Thu, 17 Sep 2009) | 4 lines branches/zip: innodb-zip.test: Make the test work with zlib 1.2.3.3. Apparently, the definition of compressBound() has slightly changed. This has been filed as Mantis Issue #345. r5924 | vasil | 2009-09-17 23:59:30 -0500 (Thu, 17 Sep 2009) | 4 lines branches/zip: White space and formatting cleanup in the ChangeLog r5934 | vasil | 2009-09-18 12:06:46 -0500 (Fri, 18 Sep 2009) | 4 lines branches/zip: Fix typo. r5935 | calvin | 2009-09-18 16:08:02 -0500 (Fri, 18 Sep 2009) | 6 lines branches/zip: fix bug#44338; minor non-functional changes Bug#44338 innodb has message about non-existing option innodb_max_files_open. Change the option to innodb_open_files. The fix was committed into 6.0 branch. r5938 | calvin | 2009-09-19 02:14:25 -0500 (Sat, 19 Sep 2009) | 41 lines branches/zip: Merge revisions 2584:2956 from branches/6.0, except c2932. Bug#37232 and bug#31183 were fixed in the 6.0 branch only. They should be fixed in the plugin too, specially MySQL 6.0 is discontinued at this point. ------------------------------------------------------------------------ r2604 | inaam | 2008-08-21 09:37:06 -0500 (Thu, 21 Aug 2008) | 8 lines branches/6.0     bug#37232 Relax locking behaviour for REPLACE INTO t SELECT ... FROM t1. Now SELECT on t1 is performed as a consistent read when the isolation level is set to READ COMMITTED. Reviewed by: Heikki ------------------------------------------------------------------------ r2605 | inaam | 2008-08-21 09:59:33 -0500 (Thu, 21 Aug 2008) | 7 lines branches/6.0 Added a comment to clarify why distinct calls to read MySQL binary log file name and log position do not entail any race condition. Suggested by: Heikki ------------------------------------------------------------------------ r2956 | inaam | 2008-11-04 04:47:30 -0600 (Tue, 04 Nov 2008) | 11 lines branches/6.0  bug#31183 If the system tablespace runs out of space because 'autoextend' is not specified with innodb_data_file_path there was no error message printed to the error log. The client would get 'table full' error. This patch prints an appropriate error message to the error log. rb://43 Approved by: Marko ------------------------------------------------------------------------ r5940 | vasil | 2009-09-21 00:26:04 -0500 (Mon, 21 Sep 2009) | 4 lines branches/zip: Add ChangeLog entries for c5938. 	8fffb92862b643e4d38232d7fa790917caac31e8
----------------------------
"Applying InnoDB Plugin 1.0.5 snapshot , part 9 r5888 - plug.in related changes skipped r5889 - skipped(plug.in related changes) r5916 - innodb_bug4600.test and innodb_bug44369.test already exists in main suite Detailed revision comments: r5875 | vasil | 2009-09-12 07:11:25 -0500 (Sat, 12 Sep 2009) | 4 lines branches/zip: Remove unnecessary macro. r5888 | vasil | 2009-09-14 03:38:45 -0500 (Mon, 14 Sep 2009) | 40 lines branches/zip: Back-merge c5880 and c5881 from branches/embedded-1.0: ------------------------------------------------------------------------ r5880 | vasil | 2009-09-12 17:28:44 +0300 (Sat, 12 Sep 2009) | 18 lines Changed paths: M /branches/embedded-1.0/configure.in M /branches/embedded-1.0/include/os0sync.h M /branches/embedded-1.0/srv/srv0start.c branches/embedded-1.0: Clean up and simplify the code that surrounds the atomic ops: * Simplify the code that prints what atomics are used: Instead of repeating the same conditions on which each atomics are used use just one printf that prints a variable defined by the code which chooses what atomics to use. * In os0sync.h pick up each atomic variant only if it has been selected by autoconf (based on IB_ATOMIC_MODE_* macros). Define the startup message to be printed. * In configure.in: check what user has chosen and if he has chosen something that is not available, emit an error. If nothing has been chosen explicitly by the user, auto select an option according to the described logic in configure.in. ------------------------------------------------------------------------ r5881 | vasil | 2009-09-12 20:08:27 +0300 (Sat, 12 Sep 2009) | 4 lines Changed paths: M /branches/embedded-1.0/configure.in branches/embedded-1.0: Fix syntax error in test program. r5910 | marko | 2009-09-16 03:07:21 -0500 (Wed, 16 Sep 2009) | 9 lines branches/zip: Introduce UNIV_LOG_LSN_DEBUG and MLOG_LSN for redo log diagnostics.  This was written in order to better track down Issue #313 in InnoDB Hot Backup. MLOG_LSN: A new redo log entry type, for recording the current log sequence number (LSN).  This will be checked in an assertion in recv_parse_log_rec(). rb://161, discussed with Sunny and Vasil. r5916 | marko | 2009-09-16 04:54:43 -0500 (Wed, 16 Sep 2009) | 128 lines branches/zip: Merge revisions 5622:5912 from branches/5.1, except r5700 (changes to CMakeLists.txt) ------------------------------------------------------------------------ r5622 | vasil | 2009-08-03 15:27:00 +0300 (Mon, 03 Aug 2009) | 20 lines Changed paths: M /branches/5.1/Makefile.am branches/5.1: Merge a change from MySQL: ------------------------------------------------------------ revno: 2988 committer: Satya B <satya.bn@sun.com> branch nick: mysql-5.1-bugteam timestamp: Wed 2009-07-01 11:06:05 +0530 message: Fix build failure after applying Innodb snapshot 5.1-ss5282 After applying Innodb snapshot 5.1-ss5282, build was broken because of missing header file. Adding the header file to Makefile.am after informing the innodb developers. modified: storage/innobase/Makefile.am ------------------------------------------------------------------------ r5740 | jyang | 2009-09-03 06:33:47 +0300 (Thu, 03 Sep 2009) | 5 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/include/db0err.h A /branches/5.1/mysql-test/innodb_bug46000.result A /branches/5.1/mysql-test/innodb_bug46000.test branches/5.1: Disallow creating index with the name of ""GEN_CLUST_INDEX"" which is reserved for the default system primary index. (Bug #46000) rb://149 approved by Sunny Bains. ------------------------------------------------------------------------ r5741 | jyang | 2009-09-03 07:16:01 +0300 (Thu, 03 Sep 2009) | 5 lines Changed paths: M /branches/5.1/dict/dict0dict.c M /branches/5.1/handler/ha_innodb.cc A /branches/5.1/mysql-test/innodb_bug44369.result A /branches/5.1/mysql-test/innodb_bug44369.test M /branches/5.1/row/row0mysql.c branches/5.1: Block creating table with column name conflicting with Innodb reserved key words. (Bug #44369) rb://151 approved by Sunny Bains. ------------------------------------------------------------------------ r5757 | jyang | 2009-09-04 04:26:13 +0300 (Fri, 04 Sep 2009) | 3 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/include/db0err.h D /branches/5.1/mysql-test/innodb_bug46000.result D /branches/5.1/mysql-test/innodb_bug46000.test branches/5.1: Revert change in 5740. Making the fix in a subsequent check in. ------------------------------------------------------------------------ r5760 | jyang | 2009-09-04 07:07:34 +0300 (Fri, 04 Sep 2009) | 3 lines Changed paths: M /branches/5.1/dict/dict0dict.c M /branches/5.1/handler/ha_innodb.cc D /branches/5.1/mysql-test/innodb_bug44369.result D /branches/5.1/mysql-test/innodb_bug44369.test M /branches/5.1/row/row0mysql.c branches/5.1: This is to revert change 5741. A return status for create_table_def() needs to be fixed. ------------------------------------------------------------------------ r5797 | calvin | 2009-09-09 18:26:29 +0300 (Wed, 09 Sep 2009) | 3 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: merge change from 5.1.38 HA_ERR_TOO_MANY_CONCURRENT_TRXS is added in 5.1.38. ------------------------------------------------------------------------ r5799 | calvin | 2009-09-09 20:47:31 +0300 (Wed, 09 Sep 2009) | 10 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: fix bug#46256 Allow tables to be dropped even if the collation is not found, but issue a warning. Could not find an easy way to add mysql-test since it requires changes to charsets and restarting the server. Tests were executed manually. Approved by: Heikki (on IM) ------------------------------------------------------------------------ r5805 | vasil | 2009-09-10 08:41:48 +0300 (Thu, 10 Sep 2009) | 7 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: Fix a compilation warning caused by c5799: handler/ha_innodb.cc: In function 'void innobase_get_cset_width(ulint, ulint*, ulint*)': handler/ha_innodb.cc:830: warning: format '%d' expects type 'int', but argument 2 has type 'ulint' ------------------------------------------------------------------------ r5834 | jyang | 2009-09-11 00:43:05 +0300 (Fri, 11 Sep 2009) | 5 lines Changed paths: M /branches/5.1/dict/dict0dict.c M /branches/5.1/handler/ha_innodb.cc A /branches/5.1/mysql-test/innodb_bug44369.result A /branches/5.1/mysql-test/innodb_bug44369.test M /branches/5.1/row/row0mysql.c branches/5.1: Block creating table with column name conflicting with Innodb reserved key words. (Bug #44369) rb://151 approved by Sunny Bains. ------------------------------------------------------------------------ r5895 | jyang | 2009-09-15 03:39:21 +0300 (Tue, 15 Sep 2009) | 5 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc A /branches/5.1/mysql-test/innodb_bug46000.result A /branches/5.1/mysql-test/innodb_bug46000.test branches/5.1: Disallow creating index with the name of ""GEN_CLUST_INDEX"" which is reserved for the default system primary index. (Bug #46000) rb://149 approved by Marko Makela. ------------------------------------------------------------------------ "	15fd02cb0209d5e13b852d4e3b1a5e3d1fcd36e8
----------------------------
Bug#47944 ndb_mgmd config diff printout for larger numbers failure - Fix format specifier to printout the unisgned number as unsigned 	a1dba5e25bd62cdd313fcfa28903097368cd49cc
----------------------------
Bug#47932 ndb_mgmd, fails to parse config with DiskSyncSize=4294967040 - The printout of unsigned 64bit values was using non standard %Lu, changed it to %llu 	9fd68de4b091ee1c408c5dcb244a42a10a37a96d
----------------------------
"Fix for bug #44738 ""fill_schema_table_from_frm() opens tables without lowercasing table name"". In lower_case_table_names > 0 mode some queries to I_S left entries with incorrect key in table definition cache. This wasted memory and caused some of the further queries to I_S to produce stale results in cases when table definition was changed by a DDL statement. Also in combination with similar problem in CREATE TABLE (which also has peeked into table definition cache using non-normalized key) this issue led to to spurious ER_TABLE_EXISTS_ERROR errors when one tried to create a table with the same name as a previously existing but dropped table (assuming that table name contained characters in upper case). This problem occured due to fact that fill_schema_table_from_frm() was not properly normalizing (lowercasing) database and table names which it used for lookups in table definition cache. This fix adds proper normalization to this function. It also solves similar problem in CREATE TABLE's code by ensuring that it uses properly normalized version of table name when it peeks into table definition cache instead of non-normalized one. "	a7b014805775602aa02948bd5fc00335de9a4aa6
----------------------------
Bug#46922: crash when adding partitions and open_files_limit is reached Problem was bad error handling, leaving some new temporary partitions locked and initialized and some not yet initialized and locked, leading to a crash when trying to unlock the not yet initialized and locked partitions Solution was to unlock the already locked partitions, and not include any of the new temporary partitions in later unlocks 	87a4644db8715c1d04560f8c80a776d5a7ebfd9e
----------------------------
"Applying InnoDB Plugin 1.0.5 snapshot, part 7 From revisions r5792 to r5864 Detailed revision comments: r5792 | vasil | 2009-09-09 08:35:58 -0500 (Wed, 09 Sep 2009) | 32 lines branches/zip: Fix a bug in manipulating the variable innodb_old_blocks_pct: for any value assigned it got that value -1, except for 75. When assigned 75, it got 75. mysql> set global innodb_old_blocks_pct=15; Query OK, 0 rows affected (0.00 sec) mysql> show variables like 'innodb_old_blocks_pct'; +-----------------------+-------+ | Variable_name         | Value | +-----------------------+-------+ | innodb_old_blocks_pct | 14    | +-----------------------+-------+ 1 row in set (0.00 sec) mysql> set global innodb_old_blocks_pct=75; Query OK, 0 rows affected (0.00 sec) mysql> show variables like 'innodb_old_blocks_pct'; +-----------------------+-------+ | Variable_name         | Value | +-----------------------+-------+ | innodb_old_blocks_pct | 75    | +-----------------------+-------+ After the fix it gets exactly what was assigned. Approved by:	Marko (via IM) r5798 | calvin | 2009-09-09 10:28:10 -0500 (Wed, 09 Sep 2009) | 5 lines branches/zip: HA_ERR_TOO_MANY_CONCURRENT_TRXS is added in 5.1.38. But the plugin should still work with previous versions of MySQL. r5804 | marko | 2009-09-10 00:29:31 -0500 (Thu, 10 Sep 2009) | 1 line branches/zip: trx_cleanup_at_db_startup(): Fix a typo in comment. r5822 | marko | 2009-09-10 05:10:20 -0500 (Thu, 10 Sep 2009) | 1 line branches/zip: buf_page_release(): De-stutter the function comment. r5825 | marko | 2009-09-10 05:47:09 -0500 (Thu, 10 Sep 2009) | 20 lines branches/zip: Reduce mutex contention that was introduced when addressing Bug #45015 (Issue #316), in r5703. buf_page_set_accessed_make_young(): New auxiliary function, called by buf_page_get_zip(), buf_page_get_gen(), buf_page_optimistic_get_func(). Call ut_time_ms() outside of buf_pool_mutex. Use cached access_time. buf_page_set_accessed(): Add the parameter time_ms, so that ut_time_ms() need not be called while holding buf_pool_mutex. buf_page_optimistic_get_func(), buf_page_get_known_nowait(): Read buf_page_t::access_time without holding buf_pool_mutex. This should be OK, because the field is only used for heuristic purposes. buf_page_peek_if_too_old(): If buf_pool->freed_page_clock == 0, return FALSE, so that we will not waste time moving blocks in the LRU list in the warm-up phase or when the workload fits in the buffer pool. rb://156 approved by Sunny Bains r5826 | marko | 2009-09-10 06:29:46 -0500 (Thu, 10 Sep 2009) | 12 lines branches/zip: Roll back recovered dictionary transactions before dropping incomplete indexes (Issue #337). trx_rollback_or_clean_recovered(ibool all): New function, split from trx_rollback_or_clean_all_recovered().  all==FALSE will only roll back dictionary transactions. recv_recovery_from_checkpoint_finish(): Call trx_rollback_or_clean_recovered(FALSE) before row_merge_drop_temp_indexes(). rb://158 approved by Sunny Bains r5858 | vasil | 2009-09-11 12:46:47 -0500 (Fri, 11 Sep 2009) | 4 lines branches/zip: Fix the indentation of the closing bracket. r5863 | vasil | 2009-09-12 02:07:08 -0500 (Sat, 12 Sep 2009) | 10 lines branches/zip: Check that pthread_t can indeed be passed to Solaris atomic functions, instead of assuming that it can be passed if 0 can be assigned to it. It could be that: * 0 can be assigned, but pthread_t cannot be passed and * 0 cannot be assigned but pthread_t can be passed Better to check what we are interested in, not something else and make assumptions. r5864 | vasil | 2009-09-12 02:22:55 -0500 (Sat, 12 Sep 2009) | 4 lines branches/zip: Include string.h which is needed for memset(). "	bf3b0747af10346bcdb97ea1cae42460f94b182e
----------------------------
"Applying InnoDB Plugin 1.0.5 snapshot, part 4 From revision r5703 to r5716 Detailed revision comments: r5703 | marko | 2009-08-27 02:25:00 -0500 (Thu, 27 Aug 2009) | 41 lines branches/zip: Replace the constant 3/8 ratio that controls the LRU_old size with the settable global variable innodb_old_blocks_pct. The minimum and maximum values are 5 and 95 per cent, respectively. The default is 100*3/8, in line with the old behavior. ut_time_ms(): New utility function, to return the current time in milliseconds. TODO: Is there a more efficient timestamp function, such as rdtsc divided by a power of two? buf_LRU_old_threshold_ms: New variable, corresponding to innodb_old_blocks_time. The value 0 is the default behaviour: no timeout before making blocks 'new'. bpage->accessed, bpage->LRU_position, buf_pool->ulint_clock: Remove. bpage->access_time: New field, replacing bpage->accessed. Protected by buf_pool_mutex instead of bpage->mutex. Updated when a page is created or accessed the first time in the buffer pool. buf_LRU_old_ratio, innobase_old_blocks_pct: New variables, corresponding to innodb_old_blocks_pct buf_LRU_old_ratio_update(), innobase_old_blocks_pct_update(): Update functions for buf_LRU_old_ratio, innobase_old_blocks_pct. buf_page_peek_if_too_old(): Compare ut_time_ms() to bpage->access_time if buf_LRU_old_threshold_ms && bpage->old.  Else observe buf_LRU_old_ratio and bpage->freed_page_clock. buf_pool_t: Add n_pages_made_young, n_pages_not_made_young, n_pages_made_young_old, n_pages_not_made_young, for statistics. buf_print(): Display buf_pool->n_pages_made_young, buf_pool->n_pages_not_made_young.  This function is only for crash diagnostics. buf_print_io(): Display buf_pool->LRU_old_len and quantities derived from buf_pool->n_pages_made_young, buf_pool->n_pages_not_made_young. This function is invoked by SHOW ENGINE INNODB STATUS. rb://129 approved by Heikki Tuuri.  This addresses Bug #45015. r5704 | marko | 2009-08-27 03:31:17 -0500 (Thu, 27 Aug 2009) | 32 lines branches/zip: Fix a critical bug in fast index creation that could corrupt the created indexes. row_merge(): Make ""half"" an in/out parameter. Determine the offset of half the output file. Copy the last blocks record-by-record instead of block-by-block, so that the records can be counted. Check that the input and output have matching n_rec. row_merge_sort(): Do not assume that two blocks of size N are merged into a block of size 2*N. The output block can be shorter than the input if the last page of each input block is almost empty. Use an accurate termination condition, based on the ""half"" computed by row_merge(). row_merge_read(), row_merge_write(), row_merge_blocks(): Add debug output. merge_file_t, row_merge_file_create(): Add n_rec, the number of records in the merge file. row_merge_read_clustered_index(): Update n_rec. row_merge_blocks(): Update and check n_rec. row_merge_blocks_copy(): New function, for copying the last blocks in row_merge().  Update and check n_rec. This bug was discovered with a user-supplied test case that creates an index where the initial temporary file is 249 one-megabyte blocks and the merged files become smaller. In the test, possible merge record sizes are 10, 18, and 26 bytes. rb://150 approved by Sunny Bains.  This addresses Issue #320. r5705 | marko | 2009-08-27 06:56:24 -0500 (Thu, 27 Aug 2009) | 11 lines branches/zip: dict_index_find_cols(): On column name lookup failure, return DB_CORRUPTION (HA_ERR_CRASHED) instead of abnormally terminating the server.  Also, disable the previously added diagnostic output to the error log, because mysql-test-run does not like extra output in the error log.  (Bug #44571) dict_index_add_to_cache(): Handle errors from dict_index_find_cols(). mysql-test/innodb_bug44571.test: A test case for triggering the bug. rb://135 approved by Sunny Bains. r5706 | inaam | 2009-08-27 11:00:27 -0500 (Thu, 27 Aug 2009) | 20 lines branches/zip rb://147 Done away with following two status variables: innodb_buffer_pool_read_ahead_rnd innodb_buffer_pool_read_ahead_seq Introduced two new status variables: innodb_buffer_pool_read_ahead = number of pages read as part of readahead since server startup innodb_buffer_pool_read_ahead_evicted = number of pages that are read in as readahead but were evicted before ever being accessed since server startup i.e.: a measure of how badly our readahead is performing SHOW INNODB STATUS will show two extra numbers in buffer pool section: pages read ahead/sec and pages evicted without access/sec Approved by: Marko r5707 | inaam | 2009-08-27 11:20:35 -0500 (Thu, 27 Aug 2009) | 6 lines branches/zip Remove unused macros as we erased the random readahead code in r5703. Also fixed some comments. r5708 | inaam | 2009-08-27 17:43:32 -0500 (Thu, 27 Aug 2009) | 4 lines branches/zip Remove redundant TRUE : FALSE from the return statement r5709 | inaam | 2009-08-28 01:22:46 -0500 (Fri, 28 Aug 2009) | 5 lines branches/zip rb://152 Disable display of deprecated parameter innodb_file_io_threads in 'show variables'. r5714 | marko | 2009-08-31 01:10:10 -0500 (Mon, 31 Aug 2009) | 5 lines branches/zip: buf_chunk_not_freed(): Do not acquire block->mutex unless block->page.state == BUF_BLOCK_FILE_PAGE.  Check that block->page.state makes sense. Approved by Sunny Bains over the IM. r5716 | vasil | 2009-08-31 02:47:49 -0500 (Mon, 31 Aug 2009) | 9 lines branches/zip: Fix Bug#46718 InnoDB plugin incompatible with gcc 4.1 (at least: on PPC): ""Undefined symbol"" by implementing our own check in plug.in instead of using the result from the check from MySQL because it is insufficient. Approved by:	Marko (rb://154) "	7f890ab6aa436386f1aa9eb989b164d9af82b008
----------------------------
"Applying InnoDB Plugin 1.0.5 snapshot, part 2 From r5639 to r5685 Detailed revision comments: r5639 | marko | 2009-08-06 05:39:34 -0500 (Thu, 06 Aug 2009) | 3 lines branches/zip: mem_heap_block_free(): If innodb_use_sys_malloc is set, do not tell Valgrind that the memory is free, to avoid a bogus warning in Valgrind's built-in free() hook. r5642 | calvin | 2009-08-06 18:04:03 -0500 (Thu, 06 Aug 2009) | 2 lines branches/zip: remove duplicate ""the"" in comments. r5662 | marko | 2009-08-11 04:54:16 -0500 (Tue, 11 Aug 2009) | 1 line branches/zip: Bump the version number to 1.0.5 after releasing 1.0.4. r5663 | marko | 2009-08-11 06:42:37 -0500 (Tue, 11 Aug 2009) | 2 lines branches/zip: trx_general_rollback_for_mysql(): Remove the redundant parameter partial. If savept==NULL, partial==FALSE. r5670 | marko | 2009-08-12 08:16:37 -0500 (Wed, 12 Aug 2009) | 2 lines branches/zip: trx_undo_rec_copy(): Add const qualifier to undo_rec. This is a non-functional change. r5671 | marko | 2009-08-13 03:46:33 -0500 (Thu, 13 Aug 2009) | 5 lines branches/zip: ha_innobase::add_index(): Fix Bug #46557: after a successful operation, read innodb_table->flags from the newly created table object, not from the old one that was just freed. Approved by Sunny. r5681 | sunny | 2009-08-14 01:16:24 -0500 (Fri, 14 Aug 2009) | 3 lines branches/zip: When building HotBackup srv_use_sys_malloc is #ifdef out. We move access to the this variable within a !UNIV_HOTBACKUP block. r5684 | sunny | 2009-08-20 03:05:30 -0500 (Thu, 20 Aug 2009) | 10 lines branches/zip: Fix bug# 46650:  Innodb assertion autoinc_lock == lock in lock_table_remove_low on INSERT SELECT We only store the autoinc locks that are granted in the transaction's autoinc lock vector. A transacton, that has been rolled back due to a deadlock because of an AUTOINC lock attempt, will not have added that lock to the vector. We need to check for that when we remove that lock. rb://145 Approved by Marko. r5685 | sunny | 2009-08-20 03:18:29 -0500 (Thu, 20 Aug 2009) | 2 lines branches/zip: Update the ChangeLog with r5684 change. "	cf8c95e0653129b19c80f0c1cd6eb42d20edc406
----------------------------
A backport a patch of Bug#34828. Original revision is from mysql-6.0-codebase: revno: 2617.23.13 committer: Alexander Nozdrin <alik@sun.com> branch nick: 6.0-rt-bug34828 timestamp: Tue 2009-02-24 14:25:46 +0300 message: A patch for Bug#34828: OF is taken as OFF and a value of 0 is set for variable SQL_notes. The problem was that partial match was allowed for keywords. A fix is to disable partial match and require full match. 	4db0f8b83275e6cb1377308b751b0a26bbf76f7e
----------------------------
Bug#35990 Error code 1062 to 1296 (unknown) after setting sql_mode to STRICT_TRANS_TABLES: Disable ndb error warnings in strict mode 	030e2c6ed2eb50ab186143bbbc3add0bb82731cf
----------------------------
Bug #46327 MTR2 prevents gcov data accumulation mysqladmin fails on Linux in 6.0 without --character-sets-dir Also added timeout for server shutdown, hope this will solve it 	a0ed9a389df83559ba8b4426d20320b057f639d1
----------------------------
Backporting WL#4642 Greek locale for DAYNAME, MONTHNAME, DATE_FORMAT added: mysql-test/r/locale.result mysql-test/t/locale.test modified: mysql-test/r/variables.result mysql-test/t/variables.test sql/sql_locale.cc 	1c58e90695a781d32ea4aa49768017ff4d9fab07
----------------------------
Fixed a valgrind error in debug_sync 	e86e52e50f5dd4da60367a3491fb520a13309062
----------------------------
Bug#47548 : hostname.cc: ip_to_hostname(): DEBUG_ASSERT err_status must fail 	a5ca2731921021ac9939384cc34222db74966832
----------------------------
ndb - remove config.cmake also from Makefile.am 	cc70f9dd6cf83418c7f020777256220776f500b0
----------------------------
fixing tests results: rpl_ndb_log, rpl_ndb_multi, sp_trans_log; adding replicate-ignore_server_ids specific tests 	d0c5656eb8b729fd52583ca6262b348f686665d8
----------------------------
Backport BUG#12190 CHANGE MASTER has differ path requiremts on MASTER_LOG_FILE and RELAY_LOG_FILE CHANGE MASTER TO command required the value for RELAY_LOG_FILE to be an absolute path, which was different from the requirement of MASTER_LOG_FILE. This patch fixed the problem by changing the value for RELAY_LOG_FILE to be the basename of the log file as that for MASTER_LOG_FILE. 	79faadd54d5360ad0d2a480f4dcdc1757fe567f4
----------------------------
Backport BUG#25192 Using relay-log and relay-log-index without values produces unexpected results. Options loaded from config files were added before command line arguments, and they were parsed together, which could interprete the following: option-a option-b as --option-a=--option-b if 'option-a' requires a value, and caused confusing. Because all options that requires a value are always given in the form '--option=value', so it's an error if there is no '=value' part for such an option read from config file. This patch added a separator to separate the arguments from config files and that from command line, so that they can be handled differently. And report an error for options loaded from config files that requires a value and is not given in the form '--option=value'. 	86c36aa1fd05c510b036dcc8573e68b58549742d
----------------------------
Bug#46018      group_concat(distinct ...) uses max_heap_table_size for memory allocations Use min(max_heap_table_size, tmp_table_size) instead per-file comments: sql/item_sum.cc Bug#46018      group_concat(distinct ...) uses max_heap_table_size for memory allocations Item_sum_**::setup fixed, so they use ram_limitation() for Unique-s they embed sql/item_sum.h Bug#46018      group_concat(distinct ...) uses max_heap_table_size for memory allocations Item_sum::ram_limitation() declared 	f41c5961d0f0e643fb0ed3dddc2440b1676583a0
----------------------------
BUG#43075 rpl.rpl_sync fails sporadically on pushbuild NOTE: Backporting the patch to next-mr. The slave was crashing while failing to execute the init_slave() function. The issue stems from two different reasons: 1 - A failure while allocating the master info structure generated a segfault due to a NULL pointer. 2 - A failure while recovering generated a segfault due to a non-initialized relay log file. In other words, the mi->init and rli->init were both set to true before executing the recovery process thus creating an inconsistent state as the relay log file was not initialized. To circumvent such problems, we refactored the recovery process which is now executed while initializing the relay log. It is ensured that the master info structure is created before accessing it and any error is propagated thus avoiding to set mi->init and rli->init to true when for instance the relay log is not initialized or the relay info is not flushed. The changes related to the refactory are described below: 1 - Removed call to init_recovery from init_slave. 2 - Changed the signature of the function init_recovery. 3 - Removed flushes. They are called while initializing the relay log and master info. 4 - Made sure that if the relay info is not flushed the mi-init and rli-init are not set to true. In this patch, we also replaced the exit(1) in the fault injection by DBUG_ABORT() to make it compliant with the code guidelines. 	9682ff8a26cef6dc2252b6a520f841dcfa62ee20
----------------------------
Bug#47525: MySQL crashed (Federated) On Mac OS X or Windows, sending a SIGHUP to the server or a asynchronous flush (triggered by flush_time), would cause the server to crash. The problem was that a hook used to detach client API handles wasn't prepared to handle cases where the thread does not have a associated session. The solution is to verify whether the thread has a associated session before trying to detach a handle. 	d941a1f3042c4b6278cc41b32b7367a8b4c76c90
----------------------------
Merge: c90e971 d83b69f merged fixes for BUG#39934 to 5.1-rpl+3 Also renamed current_stmt_binlog_row_based to current_stmt_binlog_format_row for consistency 	31193a632e2c1f4b7582c495e69b2b8eff7cc003
----------------------------
bug#27693: Windows compilation from bk fails using WITH_BERKELEY_STORAGE_ENGINE Make configure.js bail with an error if trying to build bdb from a bzr tree. 	706241d679877d8d69c0719a1a84cdddf922298e
----------------------------
"Backporting WL#3759 Optimize identifier conversion in client-server protocol This patch provides performance improvements: - send_fields() when character_set_results = latin1 is now about twice faster for column/table/database names, consisting on ASCII characters. Changes: - Protocol doesn't use ""convert"" temporary buffer anymore, and converts strings directly to ""packet"". - General conversion optimization: quick conversion of ASCII strings was added. modified files: include/m_ctype.h - Adding a new flag. - Adding a new function prototype libmysqld/lib_sql.cc - Adding quick conversion method for embedded library: conversion is now done directly to result buffer, without using a temporary buffer. mysys/charset.c - Mark all dynamic ucs2 character sets as non-ASCII - Mark some dymamic 7bit and 8bit charsets as non-ASCII (for example swe7 is not fully ASCII compatible). sql/protocol.cc - Adding quick method to convert a string directly into protocol buffer, without using a temporary buffer. sql/protocol.h - Adding a new method prototype sql/sql_string.cc Optimization for conversion between two ASCII-compatible charsets: - quickly convert ASCII strings, switch to mc_wc->wc_mb method only when a non-ASCII character is met. - copy four ASCII characters at once on i386 strings/conf_to_src.c - Marking non-ASCII character sets with a flag. strings/ctype-extra.c - Regenerating ctype-extra.c by running ""conf_to_src"". strings/ctype-uca.c - Marking UCS2 character set as non-ASCII. strings/ctype-ucs2.c - Marking UCS2 character set as non-ASCII. strings/ctype.c - A new function to detect if a 7bit or 8bit character set is ascii compatible. "	482d3bfd80f3531aa2c5ecf64cc78fe98b6de194
----------------------------
"WL#4259 - Debug Sync Facility Backport from 6.0 to 5.1. Only those sync points are included, which are used in debug_sync.test. The Debug Sync Facility allows to place synchronization points in the code: open_tables(...) DEBUG_SYNC(thd, ""after_open_tables""); lock_tables(...) When activated, a sync point can - Send a signal and/or - Wait for a signal Nomenclature: - signal:            A value of a global variable that persists until overwritten by a new signal. The global variable can also be seen as a ""signal post"" or ""flag mast"". Then the signal is what is attached to the ""signal post"" or ""flag mast"". - send a signal:     Assign the value (the signal) to the global variable (""set a flag"") and broadcast a global condition to wake those waiting for a signal. - wait for a signal: Loop over waiting for the global condition until the global value matches the wait-for signal. Please find more information in the top comment in debug_sync.cc or in the worklog entry. "	21586dfb084b05ac7d98ee990d64637b4be9222a
----------------------------
Merge: 21d401c 2f0a79a autocommit 	f79b783b7ebeb9fd9d30a4740b33e76ae53815e0
----------------------------
BUG#40337 Fsyncing master and relay log to disk after every event is too slow NOTE: Backporting the patch to next-mr. The fix proposed in BUG#35542 and BUG#31665 introduces a performance issue when fsyncing the master.info, relay.info and relay-log.bin* after #th events. Although such solution has been proposed to reduce the probability of corrupted files due to a slave-crash, the performance penalty introduced by it has made the approach impractical for highly intensive workloads. In a nutshell, the option --syn-relay-log proposed in BUG#35542 and BUG#31665 simultaneously fsyncs master.info, relay-log.info and relay-log.bin* and this is the main source of performance issues. This patch introduces new options that give more control to the user on what should be fsynced and how often: 1) (--sync-master-info, integer) which syncs the master.info after #th event; 2) (--sync-relay-log, integer) which syncs the relay-log.bin* after #th events. 3) (--sync-relay-log-info, integer) which syncs the relay.info after #th transactions. To provide both performance and increased reliability, we recommend the following setup: 1) --sync-master-info = 0 eventually the operating system will fsync it; 2) --sync-relay-log = 0 eventually the operating system will fsync it; 3) --sync-relay-log-info = 1 fsyncs it after every transaction; Notice, that the previous setup does not reduce the probability of corrupted master.info and relay-log.bin*. To overcome the issue, this patch also introduces a recovery mechanism that right after restart throws away relay-log.bin* retrieved from a master and updates the master.info based on the relay.info: 4) (--relay-log-recovery, boolean) which enables a recovery mechanism that throws away relay-log.bin* after a crash. However, it can only recover the incorrect binlog file and position in master.info, if other informations (host, port password, etc) are corrupted or incorrect, then this recovery mechanism will fail to work. 	a48ff22004594cacc0517d50a631a931f3ce06a9
----------------------------
BUG#35542 Add option to sync master and relay log to disk after every event BUG#31665 sync_binlog should cause relay logs to be synchronized NOTE: Backporting the patch to next-mr. Add sync_relay_log option to server, this option works for relay log the same as option sync_binlog for binlog. This option also synchronize master info to disk when set to non-zero value. Original patches from Sinisa and Mark, with some modifications 	4e0cb6dbb7da3a8e98f6050779206d65f3096f47
----------------------------
"BUG#43789 different master/slave table defs cause crash: text/varchar null vs not null NOTE: Backporting the patch to next-mr. The replication was generating corrupted data, warning messages on Valgrind and aborting on debug mode while replicating a ""null"" to ""not null"" field. Specifically the unpack_row routine, was considering the slave's table definition and trying to retrieve a field value, where there was nothing to be retrieved, ignoring the fact that the value was defined as ""null"" by the master. To fix the problem, we proceed as follows: 1 - If it is not STRICT sql_mode, implicit default values are used, regardless if it is multi-row or single-row statement. 2 - However, if it is STRICT mode, then a we do what follows: 2.1 If it is a transactional engine, we do a rollback on the first NULL that is to be set into a NOT NULL column and return an error. 2.2 If it is a non-transactional engine and it is the first row to be inserted with multi-row, we also return the error. Otherwise, we proceed with the execution, use implicit default values and print out warning messages. Unfortunately, the current patch cannot mimic the behavior showed by the master for updates on multi-tables and multi-row inserts. This happens because such statements are unfolded in different row events. For instance, considering the following updates and strict mode: (master) create table t1 (a int); create table t2 (a int not null); insert into t1 values (1); insert into t2 values (2); update t1, t2 SET t1.a=10, t2.a=NULL; t1 would have (10) and t2 would have (0) as this would be handled as a multi-row update. On the other hand, if we had the following updates: (master) create table t1 (a int); create table t2 (a int); (slave) create table t1 (a int); create table t2 (a int not null); (master) insert into t1 values (1); insert into t2 values (2); update t1, t2 SET t1.a=10, t2.a=NULL; On the master t1 would have (10) and t2 would have (NULL). On the slave, t1 would have (10) but the update on t1 would fail. "	63278c561cd6b24a622cab9e2674dd272b24f061
----------------------------
"BUG#42928: binlog-format setting prevents server from start if binary logging is disabled NOTE: this is the backport to next-mr. If one sets binlog-format but does NOT enable binary log, server refuses to start up. The following messages appears in the error log: 090217 12:47:14 [ERROR] You need to use --log-bin to make --binlog-format work. 090217 12:47:14 [ERROR] Aborting This patch addresses this by making the server not to bail out if the binlog-format is set without the log-bin option. Additionally, the specified binlog-format is stored, in the global system variable ""binlog_format"", and a warning is printed instead of an error. "	a11e2137c241a3e5e588c4f48659d3f7a856f51e
----------------------------
"Bug #30703  SHOW STATUS LIKE 'Slave_running' is not compatible with `SHOW SLAVE STATUS' NOTE: this is the backport to next-mr. SHOW SHOW STATUS LIKE 'Slave_running' command believes that if active_mi->slave_running != 0, then io thread is running normally. But it isn't so in fact. When some errors happen to make io thread try to reconnect master, then it will become transitional status (MYSQL_SLAVE_RUN_NOT_CONNECT == 1), which also doesn't equal 0. Yet, ""SHOW SLAVE STATUS"" believes that only if active_mi->slave_running == MYSQL_SLAVE_RUN_CONNECT, then io thread is running. So ""SHOW SLAVE STATUS"" can get the correct result. Fixed to make SHOW SHOW STATUS LIKE 'Slave_running' command have the same check condition with ""SHOW SLAVE STATUS"". It only believe that the io thread is running when active_mi->slave_running == MYSQL_SLAVE_RUN_CONNECT. "	ca151daf85f1e5e8af957157855e9c6de20555e3
----------------------------
"BUG#23300: Slow query log on slave does not log slow replicated statements NOTE: this is the backport to next-mr. When using replication, the slave will not log any slow query logs queries replicated from the master, even if the option ""--log-slow-slave-statements"" is set and these take more than ""log_query_time"" to execute. In order to log slow queries in replicated thread one needs to set the --log-slow-slave-statements, so that the SQL thread is initialized with the correct switch. Although setting this flag correctly configures the slave thread option to log slow queries, there is an issue with the condition that is used to check whether to log the slow query or not. When replaying binlog events the statement contains the SET TIMESTAMP clause which will force the slow logging condition check to fail. Consequently, the slow query logging will not take place. This patch addresses this issue by removing the second condition from the log_slow_statements as it prevents slow queries to be binlogged and seems to be deprecated. "	7cf996223d12dc4049ebccb9ccc80df7ece9e091
----------------------------
BUG#38173 Field doesn't have a default value with row-based replication NOTE: Backporting the patch to next-mr. The reason of  the bug was incompatibile with the master side behaviour. INSERT query on the master is allowed to insert into a table without specifying values of DEFAULT-less fields if sql_mode is not strict. Fixed with checking sql_mode by the sql thread to decide how to react. Non-strict sql_mode should allow Write_rows event to complete. todo: warnings can be shown via show slave status, still this is a separate rather general issue how to show warnings for the slave threads. 	bbc830f7fce965a3aa6055a4bf7bea5712eaebf5
----------------------------
"WL#4828 and BUG#45747 NOTE: Backporting the patch to next-mr. WL#4828 Augment DBUG_ENTER/DBUG_EXIT to crash MySQL in different functions ------- The assessment of the replication code in the presence of faults is extremely import to increase reliability. In particular, one needs to know if servers will either correctly recovery or print out appropriate error messages thus avoiding unexpected problems in a production environment. In order to accomplish this, the current patch refactories the debug macros already provided in the source code and introduces three new macros that allows to inject faults, specifically crashes, while entering or exiting a function or method. For instance, to crash a server while returning from the init_slave function (see module sql/slave.cc), one needs to do what follows: 1 - Modify the source replacing DBUG_RETURN by DBUG_CRASH_RETURN; DBUG_CRASH_RETURN(0); 2 - Use the debug variable to activate dbug instructions: SET SESSION debug=""+d,init_slave_crash_return""; The new macros are briefly described below: DBUG_CRASH_ENTER (function) is equivalent to DBUG_ENTER which registers the beginning of a function but in addition to it allows for crashing the server while entering the function if the appropriate dbug instruction is activate. In this case, the dbug instruction should be ""+d,function_crash_enter"". DBUG_CRASH_RETURN (value) is equivalent to DBUG_RETURN which notifies the end of a function but in addition to it allows for crashing the server while returning from the function if the appropriate dbug instruction is activate. In this case, the dbug instruction should be ""+d,function_crash_return"". Note that ""function"" should be the same string used by either the DBUG_ENTER or DBUG_CRASH_ENTER. DBUG_CRASH_VOID_RETURN (value) is equivalent to DBUG_VOID_RETURN which notifies the end of a function but in addition to it allows for crashing the server while returning from the function if the appropriate dbug instruction is activate. In this case, the dbug instruction should be ""+d,function_crash_return"". Note that ""function"" should be the same string used by either the DBUG_ENTER or DBUG_CRASH_ENTER. To inject other faults, for instance, wrong return values, one should rely on the macros already available. The current patch also removes a set of macros that were either not being used or were redundant as other macros could be used to provide the same feature. In the future, we also consider dynamic instrumentation of the code. BUG#45747 DBUG_CRASH_* is not setting the strict option --------- When combining DBUG_CRASH_* with ""--debug=d:t:i:A,file"" the server crashes due to a call to the abort function in the DBUG_CRASH_* macro althought the appropriate keyword has not been set. "	5280dc82c1c5c0564073c49b377aab4c877dda58
----------------------------
BUG#44663 Unused replication options prevent server from starting. NOTE: Backporting the patch to next-mr. The use of option log_slave_updates without log_bin was preventing the server from starting. To fix the problem, we replaced the error message and the exit call by a warning message. 	f940fe75cc0ce3b94e269e0691ee01e7ce717cfd
----------------------------
"Bug#45497 ndb_mgmd opened file exhaustion and take 100% CPU usage - Fix problem of 100%CPU by making doAccept return false in case of an error, allowing the caller to sleep for a short while before retrying. - Add some more debug printouts in the MgmApiSessions::runSession loop so it's possible to better see client disconnect progress when ndb_mgmd is started with --verbose. I.e the ""<ip>: Disconnected"" is only printed when socket has been closed. - Add test program which connect until no more connections can be made. "	82b257a8009191f57a24b4a514722997aaa11c32
----------------------------
"BUG#28777, WL#4293: SHOW BINLOG EVENTS does not work on relay log files NOTE: this is the backport to next-mr. SHOW BINLOG EVENTS does not work with relay log files. If issuing ""SHOW BINLOG EVENTS IN 'relay-log.000001'"" in a non-empty relay log file (relay-log.000001), mysql reports empty set. This patch addresses this issue by extending the SHOW command with RELAYLOG. Events in relay log files can now be inspected by issuing SHOW RELAYLOG EVENTS [IN 'log_name'] [FROM pos] [LIMIT [offset,] row_count]. "	d28ef002d7c9bd8febf8965134cac802222ba279
----------------------------
"branches/innodb+: Merged revisions 5525:5971 from branches/zip ------------------------------------------------------------------------ r5971 | marko | 2009-09-23 09:03:51 -0400 (Wed, 23 Sep 2009) | 2 lines branches/zip: os_file_pwrite(): Make the code compile in InnoDB Hot Backup when the pwrite system call is not available. ------------------------------------------------------------------------ r5956 | calvin | 2009-09-22 19:30:10 -0400 (Tue, 22 Sep 2009) | 4 lines branches/zip: remove handler0vars.h from Makefile.am Left over from r5950. ------------------------------------------------------------------------ r5951 | calvin | 2009-09-22 11:17:01 -0400 (Tue, 22 Sep 2009) | 4 lines branches/zip: adjust CMake file to work with old versions of MySQL Tested with MySQL 5.1.38 and 5.1.30. ------------------------------------------------------------------------ r5950 | calvin | 2009-09-22 02:42:46 -0400 (Tue, 22 Sep 2009) | 17 lines branches/zip: adjust Windows loading method for 5.1.38 Starting at 5.1.38, MySQL server exports symbols needed for dynamic plugin on Windows. There is no need for Windows specific loading. Also, the CMake files are simplified in 5.1.38. When WITH_INNOBASE_STORAGE_ENGINE is specified during configuration (win\configure.js), InnoDB is built as a static library. Otherwise, a dynamic InnoDB will be built (ha_innodb.dll). CMakeLists.txt requires minor changes in order to work with MySQL prior to 5.1.38. The changes will be in a separate patch. This patch addresses Mantis issue#286. ------------------------------------------------------------------------ r5945 | calvin | 2009-09-21 10:53:22 -0400 (Mon, 21 Sep 2009) | 4 lines branches/zip: fix a type in r5935 Should be innodb_open_files, spotted by Michael. ------------------------------------------------------------------------ r5940 | vasil | 2009-09-21 01:26:04 -0400 (Mon, 21 Sep 2009) | 4 lines branches/zip: Add ChangeLog entries for c5938. ------------------------------------------------------------------------ r5938 | calvin | 2009-09-19 03:14:25 -0400 (Sat, 19 Sep 2009) | 41 lines branches/zip: Merge revisions 2584:2956 from branches/6.0, except c2932. Bug#37232 and bug#31183 were fixed in the 6.0 branch only. They should be fixed in the plugin too, specially MySQL 6.0 is discontinued at this point. ------------------------------------------------------------------------ r2604 | inaam | 2008-08-21 09:37:06 -0500 (Thu, 21 Aug 2008) | 8 lines branches/6.0     bug#37232 Relax locking behaviour for REPLACE INTO t SELECT ... FROM t1. Now SELECT on t1 is performed as a consistent read when the isolation level is set to READ COMMITTED. Reviewed by: Heikki ------------------------------------------------------------------------ r2605 | inaam | 2008-08-21 09:59:33 -0500 (Thu, 21 Aug 2008) | 7 lines branches/6.0 Added a comment to clarify why distinct calls to read MySQL binary log file name and log position do not entail any race condition. Suggested by: Heikki ------------------------------------------------------------------------ r2956 | inaam | 2008-11-04 04:47:30 -0600 (Tue, 04 Nov 2008) | 11 lines branches/6.0  bug#31183 If the system tablespace runs out of space because 'autoextend' is not specified with innodb_data_file_path there was no error message printed to the error log. The client would get 'table full' error. This patch prints an appropriate error message to the error log. rb://43 Approved by: Marko ------------------------------------------------------------------------ ------------------------------------------------------------------------ r5935 | calvin | 2009-09-18 17:08:02 -0400 (Fri, 18 Sep 2009) | 6 lines branches/zip: fix bug#44338; minor non-functional changes Bug#44338 innodb has message about non-existing option innodb_max_files_open. Change the option to innodb_open_files. The fix was committed into 6.0 branch. ------------------------------------------------------------------------ r5934 | vasil | 2009-09-18 13:06:46 -0400 (Fri, 18 Sep 2009) | 4 lines branches/zip: Fix typo. ------------------------------------------------------------------------ r5924 | vasil | 2009-09-18 00:59:30 -0400 (Fri, 18 Sep 2009) | 4 lines branches/zip: White space and formatting cleanup in the ChangeLog ------------------------------------------------------------------------ r5922 | marko | 2009-09-17 02:32:08 -0400 (Thu, 17 Sep 2009) | 4 lines branches/zip: innodb-zip.test: Make the test work with zlib 1.2.3.3. Apparently, the definition of compressBound() has slightly changed. This has been filed as Mantis Issue #345. ------------------------------------------------------------------------ r5920 | vasil | 2009-09-16 14:47:22 -0400 (Wed, 16 Sep 2009) | 4 lines branches/zip: Add ChangeLog entries for r5916. ------------------------------------------------------------------------ r5919 | vasil | 2009-09-16 14:37:13 -0400 (Wed, 16 Sep 2009) | 4 lines branches/zip: Whitespace cleanup in the ChangeLog. ------------------------------------------------------------------------ r5917 | marko | 2009-09-16 05:56:23 -0400 (Wed, 16 Sep 2009) | 1 line branches/zip: innobase_get_cset_width(): Cache the value of current_thd. ------------------------------------------------------------------------ r5916 | marko | 2009-09-16 05:54:43 -0400 (Wed, 16 Sep 2009) | 128 lines branches/zip: Merge revisions 5622:5912 from branches/5.1, except r5700 (changes to CMakeLists.txt) ------------------------------------------------------------------------ r5622 | vasil | 2009-08-03 15:27:00 +0300 (Mon, 03 Aug 2009) | 20 lines Changed paths: M /branches/5.1/Makefile.am branches/5.1: Merge a change from MySQL: ------------------------------------------------------------ revno: 2988 committer: Satya B <satya.bn@sun.com> branch nick: mysql-5.1-bugteam timestamp: Wed 2009-07-01 11:06:05 +0530 message: Fix build failure after applying Innodb snapshot 5.1-ss5282 After applying Innodb snapshot 5.1-ss5282, build was broken because of missing header file. Adding the header file to Makefile.am after informing the innodb developers. modified: storage/innobase/Makefile.am ------------------------------------------------------------------------ r5740 | jyang | 2009-09-03 06:33:47 +0300 (Thu, 03 Sep 2009) | 5 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/include/db0err.h A /branches/5.1/mysql-test/innodb_bug46000.result A /branches/5.1/mysql-test/innodb_bug46000.test branches/5.1: Disallow creating index with the name of ""GEN_CLUST_INDEX"" which is reserved for the default system primary index. (Bug #46000) rb://149 approved by Sunny Bains. ------------------------------------------------------------------------ r5741 | jyang | 2009-09-03 07:16:01 +0300 (Thu, 03 Sep 2009) | 5 lines Changed paths: M /branches/5.1/dict/dict0dict.c M /branches/5.1/handler/ha_innodb.cc A /branches/5.1/mysql-test/innodb_bug44369.result A /branches/5.1/mysql-test/innodb_bug44369.test M /branches/5.1/row/row0mysql.c branches/5.1: Block creating table with column name conflicting with Innodb reserved key words. (Bug #44369) rb://151 approved by Sunny Bains. ------------------------------------------------------------------------ r5757 | jyang | 2009-09-04 04:26:13 +0300 (Fri, 04 Sep 2009) | 3 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/include/db0err.h D /branches/5.1/mysql-test/innodb_bug46000.result D /branches/5.1/mysql-test/innodb_bug46000.test branches/5.1: Revert change in 5740. Making the fix in a subsequent check in. ------------------------------------------------------------------------ r5760 | jyang | 2009-09-04 07:07:34 +0300 (Fri, 04 Sep 2009) | 3 lines Changed paths: M /branches/5.1/dict/dict0dict.c M /branches/5.1/handler/ha_innodb.cc D /branches/5.1/mysql-test/innodb_bug44369.result D /branches/5.1/mysql-test/innodb_bug44369.test M /branches/5.1/row/row0mysql.c branches/5.1: This is to revert change 5741. A return status for create_table_def() needs to be fixed. ------------------------------------------------------------------------ r5797 | calvin | 2009-09-09 18:26:29 +0300 (Wed, 09 Sep 2009) | 3 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: merge change from 5.1.38 HA_ERR_TOO_MANY_CONCURRENT_TRXS is added in 5.1.38. ------------------------------------------------------------------------ r5799 | calvin | 2009-09-09 20:47:31 +0300 (Wed, 09 Sep 2009) | 10 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: fix bug#46256 Allow tables to be dropped even if the collation is not found, but issue a warning. Could not find an easy way to add mysql-test since it requires changes to charsets and restarting the server. Tests were executed manually. Approved by: Heikki (on IM) ------------------------------------------------------------------------ r5805 | vasil | 2009-09-10 08:41:48 +0300 (Thu, 10 Sep 2009) | 7 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: Fix a compilation warning caused by c5799: handler/ha_innodb.cc: In function 'void innobase_get_cset_width(ulint, ulint*, ulint*)': handler/ha_innodb.cc:830: warning: format '%d' expects type 'int', but argument 2 has type 'ulint' ------------------------------------------------------------------------ r5834 | jyang | 2009-09-11 00:43:05 +0300 (Fri, 11 Sep 2009) | 5 lines Changed paths: M /branches/5.1/dict/dict0dict.c M /branches/5.1/handler/ha_innodb.cc A /branches/5.1/mysql-test/innodb_bug44369.result A /branches/5.1/mysql-test/innodb_bug44369.test M /branches/5.1/row/row0mysql.c branches/5.1: Block creating table with column name conflicting with Innodb reserved key words. (Bug #44369) rb://151 approved by Sunny Bains. ------------------------------------------------------------------------ r5895 | jyang | 2009-09-15 03:39:21 +0300 (Tue, 15 Sep 2009) | 5 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc A /branches/5.1/mysql-test/innodb_bug46000.result A /branches/5.1/mysql-test/innodb_bug46000.test branches/5.1: Disallow creating index with the name of ""GEN_CLUST_INDEX"" which is reserved for the default system primary index. (Bug #46000) rb://149 approved by Marko Makela. ------------------------------------------------------------------------ ------------------------------------------------------------------------ r5910 | marko | 2009-09-16 04:07:21 -0400 (Wed, 16 Sep 2009) | 9 lines branches/zip: Introduce UNIV_LOG_LSN_DEBUG and MLOG_LSN for redo log diagnostics.  This was written in order to better track down Issue #313 in InnoDB Hot Backup. MLOG_LSN: A new redo log entry type, for recording the current log sequence number (LSN).  This will be checked in an assertion in recv_parse_log_rec(). rb://161, discussed with Sunny and Vasil. ------------------------------------------------------------------------ r5899 | marko | 2009-09-15 07:26:01 -0400 (Tue, 15 Sep 2009) | 4 lines branches/zip: ut0ut.h: Do not #include ""os0sync.h"" #ifdef UNIV_HOTBACKUP. Since r5872, the InnoDB Hot Backup build was broken. Fix it by not defining any thread synchronization primitives in ut0ut.h. InnoDB Hot Backup is a single-threaded program. ------------------------------------------------------------------------ r5898 | marko | 2009-09-15 06:18:50 -0400 (Tue, 15 Sep 2009) | 2 lines branches/zip: Add */.dirstamp to svn:ignore, for https://svn.innodb.com/svn/hotbackup/branches/3.5 ------------------------------------------------------------------------ r5897 | marko | 2009-09-15 04:29:00 -0400 (Tue, 15 Sep 2009) | 8 lines branches/zip: Avoid bogus messages about latching order violations when UNIV_SYNC_DEBUG is defined. sync_thread_levels_g(): Add the parameter ""warn"".  Do not print anything unless it is set. sync_thread_add_level(): Pass warn=TRUE to sync_thread_levels_g() when the check is within an assertion; FALSE if it is not. ------------------------------------------------------------------------ r5893 | inaam | 2009-09-14 11:20:48 -0400 (Mon, 14 Sep 2009) | 10 lines branches/zip  rb://159 In case of pages that are not made young the counter is incremented only when the page in question is 'old'. In case of pages that are made young the counter is incremented in case of all pages. For apple to apple comparison this patch changes the 'young-making' counter to consider only 'old' blocks. Approved by: Marko ------------------------------------------------------------------------ r5889 | vasil | 2009-09-14 05:17:18 -0400 (Mon, 14 Sep 2009) | 5 lines branches/zip: Add missing return statement in the test program that could have caused a warning. ------------------------------------------------------------------------ r5888 | vasil | 2009-09-14 04:38:45 -0400 (Mon, 14 Sep 2009) | 40 lines branches/zip: Back-merge c5880 and c5881 from branches/embedded-1.0: ------------------------------------------------------------------------ r5880 | vasil | 2009-09-12 17:28:44 +0300 (Sat, 12 Sep 2009) | 18 lines Changed paths: M /branches/embedded-1.0/configure.in M /branches/embedded-1.0/include/os0sync.h M /branches/embedded-1.0/srv/srv0start.c branches/embedded-1.0: Clean up and simplify the code that surrounds the atomic ops: * Simplify the code that prints what atomics are used: Instead of repeating the same conditions on which each atomics are used use just one printf that prints a variable defined by the code which chooses what atomics to use. * In os0sync.h pick up each atomic variant only if it has been selected by autoconf (based on IB_ATOMIC_MODE_* macros). Define the startup message to be printed. * In configure.in: check what user has chosen and if he has chosen something that is not available, emit an error. If nothing has been chosen explicitly by the user, auto select an option according to the described logic in configure.in. ------------------------------------------------------------------------ r5881 | vasil | 2009-09-12 20:08:27 +0300 (Sat, 12 Sep 2009) | 4 lines Changed paths: M /branches/embedded-1.0/configure.in branches/embedded-1.0: Fix syntax error in test program. ------------------------------------------------------------------------ ------------------------------------------------------------------------ r5875 | vasil | 2009-09-12 08:11:25 -0400 (Sat, 12 Sep 2009) | 4 lines branches/zip: Remove unnecessary macro. ------------------------------------------------------------------------ r5872 | vasil | 2009-09-12 05:35:17 -0400 (Sat, 12 Sep 2009) | 5 lines branches/zip: Explicitly include os0sync.h to the places where HAVE_ATOMIC_BUILTINS and INNODB_RW_LOCKS_USE_ATOMICS are used to avoid potential problems. ------------------------------------------------------------------------ r5871 | vasil | 2009-09-12 05:25:44 -0400 (Sat, 12 Sep 2009) | 6 lines branches/zip: Rename HAVE_SOLARIS_ATOMICS to HAVE_IB_SOLARIS_ATOMICS and IB_HAVE_PAUSE_INSTRUCTION to HAVE_IB_PAUSE_INSTRUCTION so they all follow the same HAVE_IB_* convention. ------------------------------------------------------------------------ r5870 | vasil | 2009-09-12 05:13:44 -0400 (Sat, 12 Sep 2009) | 7 lines branches/zip: Define HAVE_ATOMIC_BUILTINS and INNODB_RW_LOCKS_USE_ATOMICS in os0sync.h instead of in univ.i. The code expects os_*() macros to be present if HAVE_ATOMIC_BUILTINS and INNODB_RW_LOCKS_USE_ATOMICS are defined. So define them next to defining the os_*() macros. ------------------------------------------------------------------------ r5869 | vasil | 2009-09-12 04:33:11 -0400 (Sat, 12 Sep 2009) | 15 lines branches/zip: Include ut0auxconf.h only if none of the macros it would define is defined. The check when to include this header was outdated from the time when there was only one macro involved. Move the atomics checks that are in univ.i outside of #if windows ... #else ... #endif This simplifies the code and removes some duplicates like defining HAVE_ATOMIC_BUILTINS if HAVE_WINDOWS_ATOMICS is defined in both branches. Do not define the same macro HAVE_ATOMIC_PTHREAD_T for different events. Instead define HAVE_IB_ATOMIC_PTHREAD_T_GCC and HAVE_IB_ATOMIC_PTHREAD_T_SOLARIS. ------------------------------------------------------------------------ r5868 | vasil | 2009-09-12 04:01:17 -0400 (Sat, 12 Sep 2009) | 6 lines branches/zip: Move the check whether to include ut0auxconf.h before everything because we are now even checking for GCC atomics, we relied on MySQL to define this macro before. ------------------------------------------------------------------------ r5867 | vasil | 2009-09-12 03:43:45 -0400 (Sat, 12 Sep 2009) | 4 lines branches/zip: Update comment to reflect reality. ------------------------------------------------------------------------ r5866 | vasil | 2009-09-12 03:30:08 -0400 (Sat, 12 Sep 2009) | 5 lines branches/zip: Add the check for GCC atomics to ut0auxconf* (copied from plug.in) because we no longer rely on MySQL's HAVE_GCC_ATOMIC_BUILTINS. ------------------------------------------------------------------------ r5865 | vasil | 2009-09-12 03:26:03 -0400 (Sat, 12 Sep 2009) | 10 lines branches/zip: Simplify the compile time checks by splittig them into 5 independent checks: * Whether GCC atomics are available * Whether pthread_t can be used by GCC atomics * Whether Solaris libc atomics are available * Whether pthread_t can be used by Solaris libs atomics * Checking the size of pthread_t ------------------------------------------------------------------------ r5864 | vasil | 2009-09-12 03:22:55 -0400 (Sat, 12 Sep 2009) | 4 lines branches/zip: Include string.h which is needed for memset(). ------------------------------------------------------------------------ r5863 | vasil | 2009-09-12 03:07:08 -0400 (Sat, 12 Sep 2009) | 10 lines branches/zip: Check that pthread_t can indeed be passed to Solaris atomic functions, instead of assuming that it can be passed if 0 can be assigned to it. It could be that: * 0 can be assigned, but pthread_t cannot be passed and * 0 cannot be assigned but pthread_t can be passed Better to check what we are interested in, not something else and make assumptions. ------------------------------------------------------------------------ r5858 | vasil | 2009-09-11 13:46:47 -0400 (Fri, 11 Sep 2009) | 4 lines branches/zip: Fix the indentation of the closing bracket. ------------------------------------------------------------------------ r5826 | marko | 2009-09-10 07:29:46 -0400 (Thu, 10 Sep 2009) | 12 lines branches/zip: Roll back recovered dictionary transactions before dropping incomplete indexes (Issue #337). trx_rollback_or_clean_recovered(ibool all): New function, split from trx_rollback_or_clean_all_recovered().  all==FALSE will only roll back dictionary transactions. recv_recovery_from_checkpoint_finish(): Call trx_rollback_or_clean_recovered(FALSE) before row_merge_drop_temp_indexes(). rb://158 approved by Sunny Bains ------------------------------------------------------------------------ r5825 | marko | 2009-09-10 06:47:09 -0400 (Thu, 10 Sep 2009) | 20 lines branches/zip: Reduce mutex contention that was introduced when addressing Bug #45015 (Issue #316), in r5703. buf_page_set_accessed_make_young(): New auxiliary function, called by buf_page_get_zip(), buf_page_get_gen(), buf_page_optimistic_get_func(). Call ut_time_ms() outside of buf_pool_mutex. Use cached access_time. buf_page_set_accessed(): Add the parameter time_ms, so that ut_time_ms() need not be called while holding buf_pool_mutex. buf_page_optimistic_get_func(), buf_page_get_known_nowait(): Read buf_page_t::access_time without holding buf_pool_mutex. This should be OK, because the field is only used for heuristic purposes. buf_page_peek_if_too_old(): If buf_pool->freed_page_clock == 0, return FALSE, so that we will not waste time moving blocks in the LRU list in the warm-up phase or when the workload fits in the buffer pool. rb://156 approved by Sunny Bains ------------------------------------------------------------------------ r5822 | marko | 2009-09-10 06:10:20 -0400 (Thu, 10 Sep 2009) | 1 line branches/zip: buf_page_release(): De-stutter the function comment. ------------------------------------------------------------------------ r5804 | marko | 2009-09-10 01:29:31 -0400 (Thu, 10 Sep 2009) | 1 line branches/zip: trx_cleanup_at_db_startup(): Fix a typo in comment. ------------------------------------------------------------------------ r5798 | calvin | 2009-09-09 11:28:10 -0400 (Wed, 09 Sep 2009) | 5 lines branches/zip: HA_ERR_TOO_MANY_CONCURRENT_TRXS is added in 5.1.38. But the plugin should still work with previous versions of MySQL. ------------------------------------------------------------------------ r5792 | vasil | 2009-09-09 09:35:58 -0400 (Wed, 09 Sep 2009) | 32 lines branches/zip: Fix a bug in manipulating the variable innodb_old_blocks_pct: for any value assigned it got that value -1, except for 75. When assigned 75, it got 75. mysql> set global innodb_old_blocks_pct=15; Query OK, 0 rows affected (0.00 sec) mysql> show variables like 'innodb_old_blocks_pct'; +-----------------------+-------+ | Variable_name         | Value | +-----------------------+-------+ | innodb_old_blocks_pct | 14    | +-----------------------+-------+ 1 row in set (0.00 sec) mysql> set global innodb_old_blocks_pct=75; Query OK, 0 rows affected (0.00 sec) mysql> show variables like 'innodb_old_blocks_pct'; +-----------------------+-------+ | Variable_name         | Value | +-----------------------+-------+ | innodb_old_blocks_pct | 75    | +-----------------------+-------+ After the fix it gets exactly what was assigned. Approved by:	Marko (via IM) ------------------------------------------------------------------------ r5783 | marko | 2009-09-09 03:25:00 -0400 (Wed, 09 Sep 2009) | 1 line branches/zip: buf_page_is_accessed(): Correct the function comment. ------------------------------------------------------------------------ r5782 | marko | 2009-09-09 03:00:59 -0400 (Wed, 09 Sep 2009) | 2 lines branches/zip: buf_page_peek_if_too_old(): Silence a compiler warning that was introduced in r5779 on 32-bit systems. ------------------------------------------------------------------------ r5780 | marko | 2009-09-09 02:50:50 -0400 (Wed, 09 Sep 2009) | 1 line branches/zip: ut_time_ms(): Return ulint, not uint. ------------------------------------------------------------------------ r5779 | marko | 2009-09-09 02:17:19 -0400 (Wed, 09 Sep 2009) | 2 lines branches/zip: buf_page_peek_if_too_old(): Make the bitmasking work when buf_pool->freed_page_clock is wider than 32 bits. ------------------------------------------------------------------------ r5777 | marko | 2009-09-08 11:50:25 -0400 (Tue, 08 Sep 2009) | 2 lines branches/zip: Remove BUF_LRU_INITIAL_RATIO, which should have been removed together with buf_LRU_get_recent_limit(). ------------------------------------------------------------------------ r5775 | calvin | 2009-09-07 17:15:05 -0400 (Mon, 07 Sep 2009) | 13 lines branches/zip: Build InnoDB on Windows with UNIV_HOTBACKUP The changes are non-functional changes for normal InnoDB, but needed for building the Hot Backup on Windows (with UNIV_HOTBACKUP defined). - Define os_aio_use_native_aio for HB. - Do not acquire seek mutexes for backup since HB is single threaded. - Do not use srv_flush_log_at_trx_commit for HB build rb://155 Approved by: Marko ------------------------------------------------------------------------ r5752 | marko | 2009-09-03 10:55:51 -0400 (Thu, 03 Sep 2009) | 10 lines branches/zip: recv_recover_page_func(): Write the log sequence number to the compressed page, if there is one.  Previously, the function only wrote the LSN to the uncompressed page. It is not clear why recv_recover_page_func() is updating FIL_PAGE_LSN in the buffer pool.  The log sequence number will be stamped on the page when it is flushed to disk, in buf_flush_init_for_writing(). I noticed this inconsistency when analyzing Issue #313, but this patch does not fix it.  That is no surprise, since FIL_PAGE_LSN should only matter on disk files, not in the buffer pool. ------------------------------------------------------------------------ r5751 | marko | 2009-09-03 10:36:15 -0400 (Thu, 03 Sep 2009) | 7 lines branches/zip: row_merge(): Remove a bogus debug assertion that was triggered when creating an index on an empty table. row_merge_sort(): Add debug assertions and comments that justify the loop termination condition. The bogus assertion ut_ad(ihalf > 0) was reported by Michael. ------------------------------------------------------------------------ r5748 | marko | 2009-09-03 07:05:44 -0400 (Thu, 03 Sep 2009) | 1 line branches/zip: MLOG_MULTI_REC_END: Correct the comment. ------------------------------------------------------------------------ r5747 | marko | 2009-09-03 06:46:38 -0400 (Thu, 03 Sep 2009) | 2 lines branches/zip: recv_scan_log_recs(): Replace while with do...while, because the termination condition will always hold on the first iteration. ------------------------------------------------------------------------ r5746 | marko | 2009-09-03 04:55:36 -0400 (Thu, 03 Sep 2009) | 2 lines branches/zip: log_reserve_and_write_fast(): Do not cache the log_sys pointer in a local variable. ------------------------------------------------------------------------ r5745 | marko | 2009-09-03 04:38:22 -0400 (Thu, 03 Sep 2009) | 2 lines branches/zip: log_check_log_recs(): Enclose in #ifdef UNIV_LOG_DEBUG. Add const qualifiers. ------------------------------------------------------------------------ r5744 | marko | 2009-09-03 04:28:35 -0400 (Thu, 03 Sep 2009) | 1 line branches/zip: ut_align(): Make ptr const, like in ut_align_down(). ------------------------------------------------------------------------ r5743 | marko | 2009-09-03 02:36:12 -0400 (Thu, 03 Sep 2009) | 3 lines branches/zip: log_reserve_and_write_fast(): Remove the redundant output parameter ""success"". Success is also indicated by a nonzero return value. ------------------------------------------------------------------------ r5736 | marko | 2009-09-02 03:53:19 -0400 (Wed, 02 Sep 2009) | 1 line branches/zip: Enclose some timestamp functions in #ifndef UNIV_HOTBACKUP. ------------------------------------------------------------------------ r5735 | marko | 2009-09-02 03:43:09 -0400 (Wed, 02 Sep 2009) | 2 lines branches/zip: univ.i: Do not undefine PACKAGE or VERSION. InnoDB source code does not refer to these macros. ------------------------------------------------------------------------ r5734 | sunny | 2009-09-02 03:08:45 -0400 (Wed, 02 Sep 2009) | 2 lines branches/zip: Update ChangeLog with r5733 changes. ------------------------------------------------------------------------ r5733 | sunny | 2009-09-02 03:05:15 -0400 (Wed, 02 Sep 2009) | 6 lines branches/zip: Fix a regression introduced by the fix for bug#26316. We check whether a transaction holds any AUTOINC locks before we acquire the kernel mutex and release those locks. Fix for rb://153. Approved by Marko. ------------------------------------------------------------------------ r5716 | vasil | 2009-08-31 03:47:49 -0400 (Mon, 31 Aug 2009) | 9 lines branches/zip: Fix Bug#46718 InnoDB plugin incompatible with gcc 4.1 (at least: on PPC): ""Undefined symbol"" by implementing our own check in plug.in instead of using the result from the check from MySQL because it is insufficient. Approved by:	Marko (rb://154) ------------------------------------------------------------------------ r5714 | marko | 2009-08-31 02:10:10 -0400 (Mon, 31 Aug 2009) | 5 lines branches/zip: buf_chunk_not_freed(): Do not acquire block->mutex unless block->page.state == BUF_BLOCK_FILE_PAGE.  Check that block->page.state makes sense. Approved by Sunny Bains over the IM. ------------------------------------------------------------------------ r5709 | inaam | 2009-08-28 02:22:46 -0400 (Fri, 28 Aug 2009) | 5 lines branches/zip rb://152 Disable display of deprecated parameter innodb_file_io_threads in 'show variables'. ------------------------------------------------------------------------ r5708 | inaam | 2009-08-27 18:43:32 -0400 (Thu, 27 Aug 2009) | 4 lines branches/zip Remove redundant TRUE : FALSE from the return statement ------------------------------------------------------------------------ r5707 | inaam | 2009-08-27 12:20:35 -0400 (Thu, 27 Aug 2009) | 6 lines branches/zip Remove unused macros as we erased the random readahead code in r5703. Also fixed some comments. ------------------------------------------------------------------------ r5706 | inaam | 2009-08-27 12:00:27 -0400 (Thu, 27 Aug 2009) | 20 lines branches/zip rb://147 Done away with following two status variables: innodb_buffer_pool_read_ahead_rnd innodb_buffer_pool_read_ahead_seq Introduced two new status variables: innodb_buffer_pool_read_ahead = number of pages read as part of readahead since server startup innodb_buffer_pool_read_ahead_evicted = number of pages that are read in as readahead but were evicted before ever being accessed since server startup i.e.: a measure of how badly our readahead is performing SHOW INNODB STATUS will show two extra numbers in buffer pool section: pages read ahead/sec and pages evicted without access/sec Approved by: Marko ------------------------------------------------------------------------ r5705 | marko | 2009-08-27 07:56:24 -0400 (Thu, 27 Aug 2009) | 11 lines branches/zip: dict_index_find_cols(): On column name lookup failure, return DB_CORRUPTION (HA_ERR_CRASHED) instead of abnormally terminating the server.  Also, disable the previously added diagnostic output to the error log, because mysql-test-run does not like extra output in the error log.  (Bug #44571) dict_index_add_to_cache(): Handle errors from dict_index_find_cols(). mysql-test/innodb_bug44571.test: A test case for triggering the bug. rb://135 approved by Sunny Bains. ------------------------------------------------------------------------ r5704 | marko | 2009-08-27 04:31:17 -0400 (Thu, 27 Aug 2009) | 32 lines branches/zip: Fix a critical bug in fast index creation that could corrupt the created indexes. row_merge(): Make ""half"" an in/out parameter. Determine the offset of half the output file. Copy the last blocks record-by-record instead of block-by-block, so that the records can be counted. Check that the input and output have matching n_rec. row_merge_sort(): Do not assume that two blocks of size N are merged into a block of size 2*N. The output block can be shorter than the input if the last page of each input block is almost empty. Use an accurate termination condition, based on the ""half"" computed by row_merge(). row_merge_read(), row_merge_write(), row_merge_blocks(): Add debug output. merge_file_t, row_merge_file_create(): Add n_rec, the number of records in the merge file. row_merge_read_clustered_index(): Update n_rec. row_merge_blocks(): Update and check n_rec. row_merge_blocks_copy(): New function, for copying the last blocks in row_merge().  Update and check n_rec. This bug was discovered with a user-supplied test case that creates an index where the initial temporary file is 249 one-megabyte blocks and the merged files become smaller. In the test, possible merge record sizes are 10, 18, and 26 bytes. rb://150 approved by Sunny Bains.  This addresses Issue #320. ------------------------------------------------------------------------ r5703 | marko | 2009-08-27 03:25:00 -0400 (Thu, 27 Aug 2009) | 41 lines branches/zip: Replace the constant 3/8 ratio that controls the LRU_old size with the settable global variable innodb_old_blocks_pct. The minimum and maximum values are 5 and 95 per cent, respectively. The default is 100*3/8, in line with the old behavior. ut_time_ms(): New utility function, to return the current time in milliseconds. TODO: Is there a more efficient timestamp function, such as rdtsc divided by a power of two? buf_LRU_old_threshold_ms: New variable, corresponding to innodb_old_blocks_time. The value 0 is the default behaviour: no timeout before making blocks 'new'. bpage->accessed, bpage->LRU_position, buf_pool->ulint_clock: Remove. bpage->access_time: New field, replacing bpage->accessed. Protected by buf_pool_mutex instead of bpage->mutex. Updated when a page is created or accessed the first time in the buffer pool. buf_LRU_old_ratio, innobase_old_blocks_pct: New variables, corresponding to innodb_old_blocks_pct buf_LRU_old_ratio_update(), innobase_old_blocks_pct_update(): Update functions for buf_LRU_old_ratio, innobase_old_blocks_pct. buf_page_peek_if_too_old(): Compare ut_time_ms() to bpage->access_time if buf_LRU_old_threshold_ms && bpage->old.  Else observe buf_LRU_old_ratio and bpage->freed_page_clock. buf_pool_t: Add n_pages_made_young, n_pages_not_made_young, n_pages_made_young_old, n_pages_not_made_young, for statistics. buf_print(): Display buf_pool->n_pages_made_young, buf_pool->n_pages_not_made_young.  This function is only for crash diagnostics. buf_print_io(): Display buf_pool->LRU_old_len and quantities derived from buf_pool->n_pages_made_young, buf_pool->n_pages_not_made_young. This function is invoked by SHOW ENGINE INNODB STATUS. rb://129 approved by Heikki Tuuri.  This addresses Bug #45015. ------------------------------------------------------------------------ r5702 | marko | 2009-08-27 03:03:15 -0400 (Thu, 27 Aug 2009) | 1 line branches/zip: Document also the files affected by r5698 in the ChangeLog. ------------------------------------------------------------------------ r5701 | marko | 2009-08-27 03:01:42 -0400 (Thu, 27 Aug 2009) | 1 line branches/zip: Document r5698 in the ChangeLog. ------------------------------------------------------------------------ r5698 | inaam | 2009-08-26 10:34:35 -0400 (Wed, 26 Aug 2009) | 13 lines branches/zip  bug#42885  rb://148 The call to put IO threads to sleep was most probably meant for Windows only as the comment in buf0rea.c suggests. However it was enabled on all platforms. This patch restricts the sleep call to windows. This approach of not putting threads to sleep makes even more sense because now we have multiple threads working in the background and it probably is not a good idea to put all of them to sleep because a user thread wants to post a batch for readahead. Approved by: Marko ------------------------------------------------------------------------ r5697 | vasil | 2009-08-26 09:44:40 -0400 (Wed, 26 Aug 2009) | 4 lines branches/zip: Fix typo. ------------------------------------------------------------------------ r5696 | vasil | 2009-08-26 09:15:59 -0400 (Wed, 26 Aug 2009) | 14 lines branches/zip: Merge a change from MySQL: http://lists.mysql.com/commits/80832 2968 Jonathan Perkin	2009-08-14 Build fixes for Windows, AIX, HP/UX and Sun Studio11, from Timothy Smith. modified: CMakeLists.txt cmd-line-utils/readline/util.c storage/innodb_plugin/handler/i_s.cc storage/innodb_plugin/include/univ.i ------------------------------------------------------------------------ r5695 | marko | 2009-08-26 09:14:59 -0400 (Wed, 26 Aug 2009) | 1 line branches/zip: UNIV_DEBUG_LOCK_VALIDATE: Move the definition to univ.i. ------------------------------------------------------------------------ r5694 | marko | 2009-08-26 07:25:26 -0400 (Wed, 26 Aug 2009) | 2 lines branches/zip: buf_page_t: Clarify that bpage->list may contain garbage. This comment was provoked by Inaam. ------------------------------------------------------------------------ r5687 | vasil | 2009-08-20 05:20:22 -0400 (Thu, 20 Aug 2009) | 8 lines branches/zip: ChangeLog: Follow the convention from the rest of the ChangeLog: for bugfixes from bugs.mysql.com only the bug number and title goes in the ChangeLog. Detailed explanation on what is the problem and how it was fixed is present in the bugs database. ------------------------------------------------------------------------ r5686 | vasil | 2009-08-20 05:15:05 -0400 (Thu, 20 Aug 2009) | 4 lines branches/zip: White-space fixup. ------------------------------------------------------------------------ r5685 | sunny | 2009-08-20 04:18:29 -0400 (Thu, 20 Aug 2009) | 2 lines branches/zip: Update the ChangeLog with r5684 change. ------------------------------------------------------------------------ r5684 | sunny | 2009-08-20 04:05:30 -0400 (Thu, 20 Aug 2009) | 10 lines branches/zip: Fix bug# 46650:  Innodb assertion autoinc_lock == lock in lock_table_remove_low on INSERT SELECT We only store the autoinc locks that are granted in the transaction's autoinc lock vector. A transacton, that has been rolled back due to a deadlock because of an AUTOINC lock attempt, will not have added that lock to the vector. We need to check for that when we remove that lock. rb://145 Approved by Marko. ------------------------------------------------------------------------ r5681 | sunny | 2009-08-14 02:16:24 -0400 (Fri, 14 Aug 2009) | 3 lines branches/zip: When building HotBackup srv_use_sys_malloc is #ifdef out. We move access to the this variable within a !UNIV_HOTBACKUP block. ------------------------------------------------------------------------ r5671 | marko | 2009-08-13 04:46:33 -0400 (Thu, 13 Aug 2009) | 5 lines branches/zip: ha_innobase::add_index(): Fix Bug #46557: after a successful operation, read innodb_table->flags from the newly created table object, not from the old one that was just freed. Approved by Sunny. ------------------------------------------------------------------------ r5670 | marko | 2009-08-12 09:16:37 -0400 (Wed, 12 Aug 2009) | 2 lines branches/zip: trx_undo_rec_copy(): Add const qualifier to undo_rec. This is a non-functional change. ------------------------------------------------------------------------ r5663 | marko | 2009-08-11 07:42:37 -0400 (Tue, 11 Aug 2009) | 2 lines branches/zip: trx_general_rollback_for_mysql(): Remove the redundant parameter partial. If savept==NULL, partial==FALSE. ------------------------------------------------------------------------ r5662 | marko | 2009-08-11 05:54:16 -0400 (Tue, 11 Aug 2009) | 1 line branches/zip: Bump the version number to 1.0.5 after releasing 1.0.4. ------------------------------------------------------------------------ r5642 | calvin | 2009-08-06 19:04:03 -0400 (Thu, 06 Aug 2009) | 2 lines branches/zip: remove duplicate ""the"" in comments. ------------------------------------------------------------------------ r5639 | marko | 2009-08-06 06:39:34 -0400 (Thu, 06 Aug 2009) | 3 lines branches/zip: mem_heap_block_free(): If innodb_use_sys_malloc is set, do not tell Valgrind that the memory is free, to avoid a bogus warning in Valgrind's built-in free() hook. ------------------------------------------------------------------------ r5636 | marko | 2009-08-05 08:27:30 -0400 (Wed, 05 Aug 2009) | 2 lines branches/zip: lock_rec_validate_page(): Add the parameter zip_size. This should help track down Mantis Issue #289. ------------------------------------------------------------------------ r5635 | marko | 2009-08-05 07:06:55 -0400 (Wed, 05 Aug 2009) | 2 lines branches/zip: Replace <number> with NUMBER in some comments, to avoid problems with Doxygen XML output. ------------------------------------------------------------------------ r5629 | marko | 2009-08-04 07:42:44 -0400 (Tue, 04 Aug 2009) | 1 line branches/zip: mysql-test: Pass MTR's internal checks. ------------------------------------------------------------------------ r5626 | vasil | 2009-08-04 01:53:31 -0400 (Tue, 04 Aug 2009) | 4 lines branches/zip: Revert the dummy change from c5625. ------------------------------------------------------------------------ r5625 | vasil | 2009-08-04 01:52:48 -0400 (Tue, 04 Aug 2009) | 32 lines branches/zip: Merge 5518:5622 from branches/5.1, resolving conflict in r5622 (after resolving the conflict Makefile.am was not changed so I have made a dummy change so I can commit and thus record that branches/5.1 has been merged in branches/zip up to 5622): ------------------------------------------------------------------------ r5622 | vasil | 2009-08-03 15:27:00 +0300 (Mon, 03 Aug 2009) | 20 lines Changed paths: M /branches/5.1/Makefile.am branches/5.1: Merge a change from MySQL: ------------------------------------------------------------ revno: 2988 committer: Satya B <satya.bn@sun.com> branch nick: mysql-5.1-bugteam timestamp: Wed 2009-07-01 11:06:05 +0530 message: Fix build failure after applying Innodb snapshot 5.1-ss5282 After applying Innodb snapshot 5.1-ss5282, build was broken because of missing header file. Adding the header file to Makefile.am after informing the innodb developers. modified: storage/innobase/Makefile.am ------------------------------------------------------------------------ ------------------------------------------------------------------------ r5614 | vasil | 2009-07-31 11:09:07 -0400 (Fri, 31 Jul 2009) | 6 lines branches/zip: Add fsp0types.h to the list of noinst_HEADERS Suggested by:	Sergey Vojtovich <svoj@sun.com> ------------------------------------------------------------------------ r5539 | vasil | 2009-07-21 06:28:27 -0400 (Tue, 21 Jul 2009) | 4 lines branches/zip: Add a test program to check whether the PAUSE instruction is available. ------------------------------------------------------------------------ r5537 | vasil | 2009-07-21 05:31:26 -0400 (Tue, 21 Jul 2009) | 5 lines branches/zip: Fixups in ChangeLog: sort filenames alphabetically and wrap to 78 chars per line. ------------------------------------------------------------------------ r5527 | sunny | 2009-07-20 17:56:30 -0400 (Mon, 20 Jul 2009) | 2 lines branches/zip: For HotBackup builds we don't want to hide the symbols. ------------------------------------------------------------------------ r5525 | calvin | 2009-07-20 13:14:30 -0400 (Mon, 20 Jul 2009) | 2 lines branches/zip: add ChangeLog entry for r5524. ------------------------------------------------------------------------ "	95b46843b7f48595458008b6414cd08fa54f7930
----------------------------
"bug#30954: ""configure"" script in binary distributions considered harmfull Add --help option. "	8f640b6239babacf2f7fc23b19b279a1c69f8b30
----------------------------
branches/zip: Try to prevent the reuse of tablespace identifiers after InnoDB has crashed during table creation.  Also, refuse to start if files with duplicate tablespace identifiers are encountered. fil_node_create(): Update fil_system->max_assigned_id.  This should prevent the reuse of a space->id when InnoDB does a full crash recovery and invokes fil_load_single_table_tablespaces().  Normally, fil_system->max_assigned_id is initialized from SELECT MAX(ID) FROM SYS_TABLES. fil_open_single_table_tablespace(): Return FALSE when fil_space_create() fails. fil_load_single_table_tablespace(): Exit if fil_space_create() fails and innodb_force_recovery=0. rb://173 approved by Heikki Tuuri.  This addresses Issue #335. 	e5f474417cb673e56e8ad7b9a9c65233a59e3e5b
----------------------------
Bug#47036 Reload of config shows only diff of last changed parameter - Fix bug causing only the first diff in each section to be printed. - Add testcase, convert testConfig.cpp to MgmConfig-t ameking it run as unit test 	fbf6a736ea76df7a122ba03e39d6af234e8269ff
----------------------------
"Bug#42015 ndb_mgmd --initial + no config file = hang - Print message saying ""trying to fetch config from other node"" every 30 seconds - Improve error message returned when the config is not yet confirmed - Add test to check that ndb_mgmd can fetch config from another mgmd using NDB_CONNECTSTRING(or equvivalent) "	5e77006dd592125cfe90f4076f7f87ae6200a903
----------------------------
"Bug#45495 multiple managment servers fail to start - Make it possible to start a second ndb_mgmd with --initial with exactly the same configuration as an already started and confirmed ndb_mgmd. Implementation details: - When refusing a CONFIG_CHECK, send the confirmed config back so that requestor can do ""node recovery"" from it. - If the config returned in CONFIG_CHECK_REF is exactly equal to own config.ini - use it to do ""node recovery"" - Add test program "	c28978ef5656220ee4baf677d5bc2e45d6a26b88
----------------------------
"Bug#38502 NDB_PORT cause ndb_mgmd fail - Detect the case when ""./configure --with-ndb-port""  is used without a portnumber(or something) actually supplied. - Cleanup the usage of NDB_PORT by putting it in [my_]config.h - Remove some sprintf by using preprocessor macros for building the default connect string as well as string variants of the port number. - Quite sure that the compiler will now complain if the port is not a number. "	2510250f448d47f13a10810848eaf348b74eb301
----------------------------
BUG#42829: binlogging enabled for all schemas regardless of binlog-db-db / binlog-ignore-db InnoDB will return an error if statement based replication is used along with transaction isolation level READ-COMMITTED (or weaker), even if the statement in question is filtered out according to the binlog-do-db rules set. In this case, an error should not be printed. This patch addresses this issue by extending the existing check in external_lock to take into account the filter rules before deciding to print an error. Furthermore, it also changes decide_logging_format to take into consideration whether the statement is filtered out from binlog before decision is made. 	5e04d4695ba8dfef7945882923b977df554be2e2
----------------------------
bug#47037 to port Bug@25998 fixes to telco 6.2 the 2nd patch to address 6.2 -> 6.3 possible upgrade issue. The added ignore_server_ids param is stored as the last line in master.info on 6.2, but on 6.3 it would be buried by some more lines that are last currently  in there. It was suggested to make the 6.2 configuration line to have the same offset (the 18th) in 6.2 as it would be in 6.3. Fixed with implementing the suggestion. The 6.2 master.info will have two blank lines before the terminal one describing ignore_server_ids. 	ccfea12645a2ad10583fed30af4df46a9d91e69e
----------------------------
Bug #37221: SET AUTOCOMMIT=1 does not commit binary log When setting AUTOCOMMIT=1 after starting a transaction, the binary log did not commit the outstanding transaction. The reason was that the binary log commit function saw the values of the new settings, deciding that there were nothing to commit. Fixed the problem by moving the implicit commit to before the thread option flags were changed, so that the binary log sees the old values of the flags instead of the values they will take after the statement. 	8f35f7c907992c77b1bda584956cf8acf97e88d5
----------------------------
Update version in configure.in. 	72feecb4f05dae752f5061a0157dc87de3899ae5
----------------------------
BUG#29288: myisam transactions replicated to a transactional slave leaves slave unstable Problem: when replicating from non-transactional to transactional engine with autocommit off, no BEGIN/COMMIT is written to the binlog. When the slave replicates, it will start a transaction that never ends. Fix: Force autocommit=on on slave by always replicating autocommit=1 from the master. 	5661e72623e66d9170dbe3e7913ff4f36b79100d
----------------------------
"Bug#45498: Socket variable not available on Windows The ""socket"" variable is not available on Windows even though the --socket option can be used to specify the pipe name for local connections that use a named pipe. The solution is to ensure that the variable is always defined. "	0e7242d895dfe8c428a2101450032ce68a8e5519
----------------------------
branches/zip: adjust Windows loading method for 5.1.38 Starting at 5.1.38, MySQL server exports symbols needed for dynamic plugin on Windows. There is no need for Windows specific loading. Also, the CMake files are simplified in 5.1.38. When WITH_INNOBASE_STORAGE_ENGINE is specified during configuration (win\configure.js), InnoDB is built as a static library. Otherwise, a dynamic InnoDB will be built (ha_innodb.dll). CMakeLists.txt requires minor changes in order to work with MySQL prior to 5.1.38. The changes will be in a separate patch. This patch addresses Mantis issue#286. 	a340e71bd416e725bbadda496c7722ee534476ff
----------------------------
branches/zip: fix a type in r5935 Should be innodb_open_files, spotted by Michael. 	75fbaa78d57cfa84d3ae099f7c4a9b88ff5b65b6
----------------------------
branches/zip: Merge revisions 2584:2956 from branches/6.0, except c2932. Bug#37232 and bug#31183 were fixed in the 6.0 branch only. They should be fixed in the plugin too, specially MySQL 6.0 is discontinued at this point. ------------------------------------------------------------------------ r2604 | inaam | 2008-08-21 09:37:06 -0500 (Thu, 21 Aug 2008) | 8 lines branches/6.0     bug#37232 Relax locking behaviour for REPLACE INTO t SELECT ... FROM t1. Now SELECT on t1 is performed as a consistent read when the isolation level is set to READ COMMITTED. Reviewed by: Heikki ------------------------------------------------------------------------ r2605 | inaam | 2008-08-21 09:59:33 -0500 (Thu, 21 Aug 2008) | 7 lines branches/6.0 Added a comment to clarify why distinct calls to read MySQL binary log file name and log position do not entail any race condition. Suggested by: Heikki ------------------------------------------------------------------------ r2956 | inaam | 2008-11-04 04:47:30 -0600 (Tue, 04 Nov 2008) | 11 lines branches/6.0  bug#31183 If the system tablespace runs out of space because 'autoextend' is not specified with innodb_data_file_path there was no error message printed to the error log. The client would get 'table full' error. This patch prints an appropriate error message to the error log. rb://43 Approved by: Marko ------------------------------------------------------------------------ 	5af4815f80f5892be6d6be12b09a8ebe7eeb9131
----------------------------
branches/zip: fix bug#44338; minor non-functional changes Bug#44338 innodb has message about non-existing option innodb_max_files_open. Change the option to innodb_open_files. The fix was committed into 6.0 branch. 	411864293e35e36c776d067a415618fed9f41ac6
----------------------------
Bug #42914 Log event that larger than max_allowed_packet results in stop of slave I/O thread, But there is no Last_IO_Error reported. On the master, if a binary log event is larger than max_allowed_packet, ER_MASTER_FATAL_ERROR_READING_BINLOG and the specific reason of this error is sent to a slave when it requests a dump from the master, thus leading the I/O thread to stop. On a slave, the I/O thread stops when receiving a packet larger than max_allowed_packet. In both cases, however, there was no Last_IO_Error reported. This patch adds code to report the Last_IO_Error and exact reason before stopping the I/O thread and also reports the case the out memory pops up while handling packets from the master. 	7079338e0ed8f5ef52c77fd81ad23bbb8fd8c86a
----------------------------
"Fix bug#47137 Solaris binary packages should be compiled with '-g0', not '-g' The main fix for this is done in the build tools, but in the sources it affects ""configure.in"" which sets ""DEBUG_CXXFLAGS"" to be used in all debug builds. "	275cec8026332310b6642e6f50cd1d3a718e4ffd
----------------------------
"Fix bug#46980 Option ""--without-server"" still not working in 5.1 The general approach is to make sure that source files which require thread support are only compiled if the build really needs thread support, which means when the server is built or a thread-safe client library. This required several changes: - Make sure the subdirectories ""storage/"" and ""plugin/"" are only processed if the server is built, not ifclient-only. - Make the compilation of some modules which inherently require threading depend on thread supportin the build. - Separate the handling of threading in ""configure.in"" from that of server issues, threading is also needed in a non-server build of a thread-safe client library. Also, ""libdbug"" must get built even in a client-only build, so ""dbug/"" must be in the list of client directories. In addition, calls to thread functions in source files which can be built without thread support must use the wrapper functions which handle the non-threaded build. So the modules ""client/mysqlimport.c"" and ""client/mysqlslap.c"" must call ""my_thread_end()"" only via ""mysql_thread_end()"". "	67bcf54df6cf8a35ae3e7ce91631dab60ab9356e
----------------------------
"Bug #45840 read_buffer_size allocated for each partition when ""insert into.. select * from"" When inserting into a partitioned table using 'insert into <target> select * from <src>', read_buffer_size bytes of memory are allocated for each partition in the target table. This resulted in large memory consumption when the number of partitions are high. This patch introduces a new method which tries to estimate the buffer size required for each partition and limits the maximum buffer size used to maximum of 10 * read_buffer_size, 11 * read_buffer_size in case of monotonic partition functions. "	05bf2ebaa8d00e2df564a4017749140b28d38714
----------------------------
Bug#47325 NDB Cluster Management Node core dump during shutdown - Crash occur because ConfigManager is freeed before all clients have disconnected - Move delete of ConfigManager to after listening socket closed and all clients disconnected 	ad58fe1b605279d0fd4002f9cc41650d95cf1c13
----------------------------
Merge: a041c79 4f6b870 autocommit 	16d8401a2897258c94bb741110c59e534d2d637c
----------------------------
Merge: cae61b1 09f07bc autocommit 	a041c79ec9122277a9c09d3082011f46d24d4578
----------------------------
branches/zip: Back-merge c5880 and c5881 from branches/embedded-1.0: ------------------------------------------------------------------------ r5880 | vasil | 2009-09-12 17:28:44 +0300 (Sat, 12 Sep 2009) | 18 lines Changed paths: M /branches/embedded-1.0/configure.in M /branches/embedded-1.0/include/os0sync.h M /branches/embedded-1.0/srv/srv0start.c branches/embedded-1.0: Clean up and simplify the code that surrounds the atomic ops: * Simplify the code that prints what atomics are used: Instead of repeating the same conditions on which each atomics are used use just one printf that prints a variable defined by the code which chooses what atomics to use. * In os0sync.h pick up each atomic variant only if it has been selected by autoconf (based on IB_ATOMIC_MODE_* macros). Define the startup message to be printed. * In configure.in: check what user has chosen and if he has chosen something that is not available, emit an error. If nothing has been chosen explicitly by the user, auto select an option according to the described logic in configure.in. ------------------------------------------------------------------------ r5881 | vasil | 2009-09-12 20:08:27 +0300 (Sat, 12 Sep 2009) | 4 lines Changed paths: M /branches/embedded-1.0/configure.in branches/embedded-1.0: Fix syntax error in test program. ------------------------------------------------------------------------ 	78b505b47fefc7f9ccfa6087deec8629d556e704
----------------------------
"Fix for bug#47130: misplaced or redundant check for null pointer? Problem: LOGGER::general_log_write() relied on valid ""thd"" parameter passed but had inconsistent ""if (thd)"" check. Fix: as we always pass a valid ""thd"" parameter to the method, redundant check removed. "	4def19eeac03c09c6db0c5b52bff25909dacb177
----------------------------
Bug#45756 : DDL statements not always in binary logs of other SQL Nodes on slave cluster - Modify source-server-id mechanism for DDL propagation within cluster to allow Binlog Injector to differentiate between local-cluster-sourced and replication-slave-sourced DDL changes. - Modify Binlog Injector to generate DDL Binlog entries for replication-slave-sourced DDL changes iff log-slave-updates is On. Impact - Binlogging of DDL on MySQLDs attached to slave cluster is independent of log-bin and log-slave-updates setting on active slave MySQLD This aligns DDL handling behaviour with DML handling behaviour - Source server-id for DDL Binlog entries is set to the server-id of the first MySQLD to Binlog the change. This aligns DDL handling behaviour with DML handling behaviour Risks - Online upgrade of Binlogging MySQLDs DDL applied by non-upgraded MySQLDs will not be logged by upgraded MySQLDs unless the upgraded MySQLDs have log-slave-updates on. This is because the upgraded MySQLDs will think that the DDL sourced by locally-attached non-upgraded MySQLDs has been applied by a slave applier. Workarounds : 1) Do not perform DDL during online upgrade of attached MySQLDs or 2) Upgrade binlogging MySQLD node last or 3) Reconfigure binlogging MySQLD nodes to set log-slave-updates=On before upgrade This may have other effects in circular replication scenarios. 	4b5788315f9f233b6e91fa85bce20da7058382ab
----------------------------
BUG#45999 Row based replication fails when auto_increment field = 0 In RBR, There is an inconsistency between slaves and master. When INSERT statement which includes an auto_increment field is executed, Store engine of master will check the value of the auto_increment field. It will generate a sequence number and then replace the value, if its value is NULL or empty. if the field's value is 0, the store engine will do like encountering the NULL values unless NO_AUTO_VALUE_ON_ZERO is set into SQL_MODE. In contrast, if the field's value is 0, Store engine of slave always generates a new sequence number whether or not NO_AUTO_VALUE_ON_ZERO is set into SQL_MODE. SQL MODE of slave sql thread is always consistency with master's. Another variable is related to this bug. If generateing a sequence number is decided by the values of table->auto_increment_field_not_null and SQL_MODE(if includes MODE_NO_AUTO_VALUE_ON_ZERO) The table->auto_increment_is_not_null is FALSE, which causes this bug to appear. .. 	df67d14983bb7ce1d879da6b6a9f861cc76a1ec2
----------------------------
Bug #47037 to port Bug25998 fixes to telco Repeating the parent bugfixes commits: Bug #25998 problems about circle replication Bug #27808 Infinite looping in circular replication to mysql-5.1-telco. In case of withdrawing one of the servers from the circular multi-master replication group events generated by the removed server could become unstoppable (bug#25998). That's because the originator had been the terminator of the own event flow. Other possibility of the unstoppable event is the cluster replication (bug#27808). In that case an event generated by a member of a cluster was replicated to another member, got accepted and executed. By that same time effects of the event had been already propagated across the cluster via the cluster communications. In order to avoid double-applying, a replication event generated by a co-member of the cluster should not be accepted. Both variations of the unstoppable replication event are fixable with introducing a new option for CHANGE MASTER: IGNORE_SERVER_IDS= (sid_1, sid_2, ... ) The option can be set to the empty list that resets. Fixed with implementing the feature. Properties of the feature: a. reporting an error if the id of an ignored server is the slave itself and its configuration on startup was with --replicate-same-server-id; b. overriding the existing IGNORE_SERVER_IDS list by the following CHANGE MASTER ... IGNORE_SERVER_IDS= (list), the empty list arg nullifies the current ignored list; c. preserving the existing list by CHANGE MASTER w/o IGNORE_SERVER_IDS; d. preserving the ignored server ids after RESET SLAVE; e. extending SHOW SLAVE STATUS with a new line listing ignored servers; f. a new line in master.info with the list of ignored servers; g. Differently from --replicate-same-server-id handling, the sql thread is not concerned with the ignored server ids, because it's supposed that the relay log consists only of events that can not be unstoppable. In order to guarantee that, e.g in case of the circular replication with a failing server DBA needs to change master necessarily using the new option. h. Rotate and FD events originated by the current master listed in the ignored list are still relay-logged which does not create any termination issue. i. The possible list of ignored servers is sorted for the fastest processing of filtering algorithm. Two new lines to show slave status output are added: the list of ignored servers and the current master server id (yet another feature for the user!). Use cases for this feature can be found on the bug report page. mysql-test/include/master-slave.inc@1.17, 2008-06-04 19:39:26+03:00, aelkin@mysql1000.dsl.inet.fi +2 -0 forcing this basic macro to synchronize the slave right after it has connected to the master. Tests get the guarantee of synchronization at the beginning. mysql-test/suite/rpl/r/rpl_server_id_ignore.result@1.1, 2008-06-04 19:39:26+03:00, aelkin@mysql1000.dsl.inet.fi +46 -0 new results mysql-test/suite/rpl/r/rpl_server_id_ignore.result@1.0, 2008-06-04 19:39:26+03:00, aelkin@mysql1000.dsl.inet.fi +0 -0 mysql-test/suite/rpl/t/rpl_server_id_ignore-slave.opt@1.1, 2008-06-04 19:39:26+03:00, aelkin@mysql1000.dsl.inet.fi +1 -0 --replicate-same-server-id is set in order to show reaction on its possible clashing with the new gnored_server_id:s option of change master. mysql-test/suite/rpl/t/rpl_server_id_ignore-slave.opt@1.0, 2008-06-04 19:39:26+03:00, aelkin@mysql1000.dsl.inet.fi +0 -0 mysql-test/suite/rpl/t/rpl_server_id_ignore.test@1.1, 2008-06-04 19:39:26+03:00, aelkin@mysql1000.dsl.inet.fi +114 -0 The basic tests for the new feature. mysql-test/suite/rpl/t/rpl_server_id_ignore.test@1.0, 2008-06-04 19:39:26+03:00, aelkin@mysql1000.dsl.inet.fi +0 -0 sql/lex.h@1.184, 2008-06-04 19:39:26+03:00, aelkin@mysql1000.dsl.inet.fi +1 -0 IGNORE_SERVER_ID new option for change master sql/rpl_mi.cc@1.16, 2008-06-04 19:39:26+03:00, aelkin@mysql1000.dsl.inet.fi +82 -4 allocation, storing into master info, reading from the file, deallocation of the list of ignored server id:s; a new change_master_server_id_cmp() comparison function definition to use with bsearch; a new Master_info::shall_ignore_server_id() method definition, calling it to find out if a server_id should be ignored; a formal initialization of a new member Master_info::master_id; extending the number of lines in master.info. sql/rpl_mi.h@1.9, 2008-06-04 19:39:26+03:00, aelkin@mysql1000.dsl.inet.fi +5 -0 a new method Master_info::shall_ignore_server_id answering filtering question; a new member Master_info::ignore_server_ids to hold the list of ignored servers; a new member Master_info::master_id to hold the current master server id; a new search function change_master_server_id_cmp() to use with bsearch. sql/share/errmsg.txt@1.134, 2008-06-04 19:39:26+03:00, aelkin@mysql1000.dsl.inet.fi +2 -0 a new error message about possible clashing of options. sql/slave.cc@1.348, 2008-06-04 19:39:26+03:00, aelkin@mysql1000.dsl.inet.fi +152 -11 a new init_dynarray_intvar_from_file() helper function to read an array of variable size of intergers. Refining io-thread's filtering condition to consult with the list of ignored servers. Note, that FD and Rotate events from an ignored server being the current master are still accepted. Filtering basing on --replicate-same-server-id remains as before if the ignored servers list is empty. Adding two new lines in show slave status. Initialization of the new member Master_info::master_id in get_master_version_and_clock(). Displaying the ignored servers and the current master id with show slave status. sql/sql_lex.h@1.320, 2008-06-04 19:39:26+03:00, aelkin@mysql1000.dsl.inet.fi +2 -1 parser time storage for variable size array of server ids; a new repl_ignore_server_ids_opt member for LEX_MASTER_INFO; sql/sql_repl.cc@1.175, 2008-06-04 19:39:26+03:00, aelkin@mysql1000.dsl.inet.fi +45 -14 aux function for sorting the ignored server_id:s; sorting of the ignored servers implementation; failing change master do not forget to free lex's dynamical storage with parsed ignored server_ids; resetting the old list of ignored server if the parser detected the new list; shifting some pieces of code in order to comply with the above logics; sql/sql_yacc.yy@1.540, 2008-06-04 19:39:26+03:00, aelkin@mysql1000.dsl.inet.fi +25 -0 allocation a dyn array for possible list of ignored server ids; filling the array; resetting (missed part of wl#342) heartbeat_opt at the beginning of CHANGE MASTER processing; 	affca479102b1d1c39f2ff7a3e97c05abbf2d616
----------------------------
Merge: a37c61b 1b60803 Bug#17332 - changing key_buffer_size on a running server can crash under load Merge from 5.0, after backport from 5.1/5.4 to 5.0. This makes the fixes for Bug 44068 (RESTORE can disable the MyISAM Key Cache) Bug 40944 (Backup: crash after myisampack) available to 5.1. 	8dcaefca2148fc523c154176568cdff07f6f0c3e
----------------------------
"branches/zip: Fix a bug in manipulating the variable innodb_old_blocks_pct: for any value assigned it got that value -1, except for 75. When assigned 75, it got 75. mysql> set global innodb_old_blocks_pct=15; Query OK, 0 rows affected (0.00 sec) mysql> show variables like 'innodb_old_blocks_pct'; +-----------------------+-------+ | Variable_name         | Value | +-----------------------+-------+ | innodb_old_blocks_pct | 14    | +-----------------------+-------+ 1 row in set (0.00 sec) mysql> set global innodb_old_blocks_pct=75; Query OK, 0 rows affected (0.00 sec) mysql> show variables like 'innodb_old_blocks_pct'; +-----------------------+-------+ | Variable_name         | Value | +-----------------------+-------+ | innodb_old_blocks_pct | 75    | +-----------------------+-------+ After the fix it gets exactly what was assigned. Approved by:	Marko (via IM) "	549e7644313ae0ac7f19083b4ec5a200d853184a
----------------------------
BUG#45638 - Create temporary table with engine innodb fails Create temporary InnoDB table fails on case insensitive filesystems, when lower_case_table_names is 2 (e.g. OS X) and temporary directory path contains upper case letters. The problem was that tmpdir prefix was converted to lower case when table was created, but was passed as is when table was opened. Fixed by leaving tmpdir prefix part intact. 	16c57d9099c4fee924be5b66642296850d922235
----------------------------
ndb - bug#47166 Fix correct default value of StringMemory (25) in ConfigInfo to avoid confusion 	a13f45a2599d06fb54fd4b1845ea34467289845f
----------------------------
"This is the 5.4 version of the fix for bug#47007 Unresolved reference to 'innodb_system_libs' in ""mysql_config"" In 5.4.2, we use InnoDB 1.0.4 which does file IO via separate threads, opposed to the use of asynchronous IO previously. So there is no InnoDB call to ""aio_read()"" which was searched in ""librt"", causing a ""-lrt"" value of ""innodb_system_libs"", that whole variable is gone. This fix was applied in the build of 5.4.2-beta. "	d141e840a2ee7764d6cc8b7e0a104d802141af52
----------------------------
Bug#35751 ndb_mgm and other mgmapi clients hang on OS X 10.5 intel - Change NdbThread_Create function so that when 0 is specified as\ thread_stack_size, our default value of 64k is used. - Change all threads (except ndbfs threads (and some tests)) to request default stack size 	78c579a02beb64ab3dee3c08769d06467f1e6b8e
----------------------------
Bug#17332 - changing key_buffer_size on a running server can crash under load Backport from 5.1. Does also include key cache fixes from: Bug 44068 (RESTORE can disable the MyISAM Key Cache) Bug 40944 (Backup: crash after myisampack) 	1b60803282ddfd6aa082c983a774d57d3e5470c5
----------------------------
Addition to Fix for BUG#46591 - .frm file isn't sync'd with sync_frm enabled for CREATE TABLE...LIKE... Add my_sync.c to mysqltest sources list in CMakeLists.txt 	81053daf9731145a84827ca0ce58b0097518ccf0
----------------------------
Fix for Bug#33785 - myisamchk show warning message myisamchk tool generates warnings when run on an myisam files (.MYI or .MYD) This is because of the conversion of max_value for certain options in myisamchk from singed long to unsigned long The max value for the options key_buffer_size, read_buffer_size, write_buffer _size and sort_buffer_size is given as (long) ~0L which becomes -1  when casted from signed long to longlong and then casted to ulonglong. When (ulonglong) -1 is compared with maximal value for GET_ULONG data type, we adjust it to (ulonglong) ULONG_MAX and throw the warning. Fixed by using the right max size. Max values for the variables (from mysqld.cc) ---------------------------- 1. key_buffer_size 5.0: ULONG_MAX 5.1: SIZE_T_MAX 6.0: SIZE_T_MAX 2. read_buffer_size and write_buffer_size 5.0: INT_MAX32 5.1: INT_MAX32 6.0: INT_MAX32 3. sort_buffer_size (aka myisam_sort_buffer_size) 5.0: UINT_MAX32 5.1: ULONG_MAX 6.0: ULONG_MAX Note: testcase not attached 	5a41fb5ce0fa17b804eea508c26e4d179dd3d373
----------------------------
Fix for BUG#46591 - .frm file isn't sync'd with sync_frm enabled for CREATE TABLE...LIKE... The mysql server option 'sync_frm' is ignored when table is created with syntax CREATE TABLE .. LIKE.. Fixed by adding the MY_SYNC flag and calling my_sync() from my_copy() when the flag is set. In mysql_create_table(), when the 'sync_frm' is set, MY_SYNC flag is passed to my_copy(). Note: TestCase is not attached and can be tested manually using debugger. 	4a9e7e8e25192fda25a71bbb4d7f9b5b6088e0c6
----------------------------
ndb - ndbd_redo_log_reader - adopt to configurable sized log-files 	e6b46a8b73e430a4226c89a612a39c2acf12718b
----------------------------
Bug#38034: last_insert_id() value not shown in table with trigger, added test case. 	310a2f32a40e4b9628b55f9b7f420d89263cff78
----------------------------
"Bug#46954 ndb_mgmd version mysql-5.1.34 ndb-7.0.6 does not handle SYSTEM sections - Always add ""Type"" when transforming the SYSTEM section. - Add testcase to ndb_config_config.ini - Move the data files for ndb_config tests into suite/ndb/ instead of ""global"" std_data "	3ed67ac04867b0df561f1749fb9ed55f03e67f83
----------------------------
BUG#46861 Auto-closing of temporary tables broken by replicate-rewrite-db When a connection is dropped any remaining temporary table is also automatically dropped and the SQL statement of this operation is written to the binary log in order to drop such tables on the slave and keep the slave in sync. Specifically, the current code base creates the following type of statement: DROP /*!40005 TEMPORARY */ TABLE IF EXISTS `db`.`table`; Unfortunately, appending the database to the table name in this manner circumvents the replicate-rewrite-db option (and any options that check the current database). To solve the issue, we started writing the statement to the binary as follows: use `db`; DROP /*!40005 TEMPORARY */ TABLE IF EXISTS `table`; 	fe03c7dce698a34072f4adf146c21c26432f4447
----------------------------
branches/zip rb://147 Done away with following two status variables: innodb_buffer_pool_read_ahead_rnd innodb_buffer_pool_read_ahead_seq Introduced two new status variables: innodb_buffer_pool_read_ahead = number of pages read as part of readahead since server startup innodb_buffer_pool_read_ahead_evicted = number of pages that are read in as readahead but were evicted before ever being accessed since server startup i.e.: a measure of how badly our readahead is performing SHOW INNODB STATUS will show two extra numbers in buffer pool section: pages read ahead/sec and pages evicted without access/sec Approved by: Marko 	8658a2c43d92f19f76aedf68372ab665bc66ad5a
----------------------------
branches/zip: Replace the constant 3/8 ratio that controls the LRU_old size with the settable global variable innodb_old_blocks_pct. The minimum and maximum values are 5 and 95 per cent, respectively. The default is 100*3/8, in line with the old behavior. ut_time_ms(): New utility function, to return the current time in milliseconds. TODO: Is there a more efficient timestamp function, such as rdtsc divided by a power of two? buf_LRU_old_threshold_ms: New variable, corresponding to innodb_old_blocks_time. The value 0 is the default behaviour: no timeout before making blocks 'new'. bpage->accessed, bpage->LRU_position, buf_pool->ulint_clock: Remove. bpage->access_time: New field, replacing bpage->accessed. Protected by buf_pool_mutex instead of bpage->mutex. Updated when a page is created or accessed the first time in the buffer pool. buf_LRU_old_ratio, innobase_old_blocks_pct: New variables, corresponding to innodb_old_blocks_pct buf_LRU_old_ratio_update(), innobase_old_blocks_pct_update(): Update functions for buf_LRU_old_ratio, innobase_old_blocks_pct. buf_page_peek_if_too_old(): Compare ut_time_ms() to bpage->access_time if buf_LRU_old_threshold_ms && bpage->old.  Else observe buf_LRU_old_ratio and bpage->freed_page_clock. buf_pool_t: Add n_pages_made_young, n_pages_not_made_young, n_pages_made_young_old, n_pages_not_made_young, for statistics. buf_print(): Display buf_pool->n_pages_made_young, buf_pool->n_pages_not_made_young.  This function is only for crash diagnostics. buf_print_io(): Display buf_pool->LRU_old_len and quantities derived from buf_pool->n_pages_made_young, buf_pool->n_pages_not_made_young. This function is invoked by SHOW ENGINE INNODB STATUS. rb://129 approved by Heikki Tuuri.  This addresses Bug #45015. 	0f7895d4777e1be82ec0b39b6963933f01bb6821
----------------------------
branches/5.1: Merge PART OF r2911.5.5 from MySQL: adjust CMakeLists.txt to work with MySQL 5.1.38 and beyond. MySQL changed how the build works on Windows starting from 5.1.38. All shared properties are defined in mysql_storage_engine.cmake. And the top level CMakeLists.txt determines what engines to build and how (static vs. dynamic). log message from BZR: ------------------------------------------------------------ revno: 2911.5.5 committer: Vladislav Vaintroub <vvaintroub@mysql.com> branch nick: 5.1-innodb_plugin timestamp: Wed 2009-06-10 10:59:49 +0200 message: Backport WL#3653 to 5.1 to enable bundled innodb plugin. Remove custom DLL loader code from innodb plugin code, use symbols exported from mysqld. removed: storage/innodb_plugin/handler/handler0vars.h storage/innodb_plugin/handler/win_delay_loader.cc added: storage/mysql_storage_engine.cmake win/create_def_file.js modified: CMakeLists.txt include/m_ctype.h include/my_global.h include/my_sys.h include/mysql/plugin.h libmysqld/CMakeLists.txt mysql-test/mysql-test-run.pl mysql-test/t/plugin.test mysql-test/t/plugin_load-master.opt mysys/charset.c sql/CMakeLists.txt sql/handler.h sql/mysql_priv.h sql/mysqld.cc sql/sql_class.cc sql/sql_class.h sql/sql_list.h sql/sql_profile.h storage/Makefile.am storage/archive/CMakeLists.txt storage/blackhole/CMakeLists.txt storage/csv/CMakeLists.txt storage/example/CMakeLists.txt storage/federated/CMakeLists.txt storage/heap/CMakeLists.txt storage/innobase/CMakeLists.txt storage/innobase/handler/ha_innodb.cc storage/innodb_plugin/CMakeLists.txt storage/innodb_plugin/handler/ha_innodb.cc storage/innodb_plugin/handler/handler0alter.cc storage/innodb_plugin/handler/i_s.cc storage/innodb_plugin/plug.in storage/myisam/CMakeLists.txt storage/myisammrg/CMakeLists.txt win/Makefile.am win/configure.js 	06db0143f96e2b1b8e1f1243667951a3ceacfddd
----------------------------
Bug#20577: Partitions: use of to_days() function leads to selection failures Problem was that the partition containing NULL values was pruned away, since '2001-01-01' < '2001-02-00' but TO_DAYS('2001-02-00') is NULL. Added the NULL partition for RANGE/LIST partitioning on TO_DAYS() function to be scanned too. Also fixed a bug that added ALLOW_INVALID_DATES to sql_mode (SELECT * FROM t WHERE date_col < '1999-99-99' on a RANGE/LIST partitioned table would add it). 	401fb7c6fb84d1fe255fd490a0d3eb6ccb216507
----------------------------
BUG#42013 Inconsistent Option Names for ndb_mgmd - Add --config-dir as an alias for --configdir in ndb_mgmd 	eeebe11306fe52c7686bc88a73f653898781d1bf
----------------------------
Bug #44723 Larger read_buffer_size values can cause performance decrease for INSERTs Bulk inserts (multiple row, CREATE ... SELECT, INSERT ... SELECT) into MyISAM tables were performed inefficiently. This was mainly affecting use cases where read_buffer_size was considerably large (>256K) and low number of rows was inserted (e.g. 30-100). The problem was that during I/O cache initialization (this happens before each bulk insert) allocated I/O buffer was unnecessarily initialized to '\0'. This was happening because of mess in flag values. MyISAM informs I/O cache to wait for free space (if out of disk space) by passing MY_WAIT_IF_FULL flag. Since MY_WAIT_IF_FULL and MY_ZEROFILL have the same values, memory allocator was initializing memory to '\0'. The performance gain provided with this patch may only be visible with non-debug binaries, since safemalloc always initializes allocated memory to 0xA5A5... 	90032c100751d4a864f371dd451fda7d8b12022d
----------------------------
"BUG#45694 Deadlock in replicated statement is not retried If the SQL Thread fails to execute an event due to a temporary error (e.g. ER_LOCK_DEADLOCK) and the option ""--slave_transaction_retries"" is set the SQL Thread should not be aborted and the transaction should be restarted from the beginning and re-executed. Unfortunately, a wrong interpretation of the THD::is_fatal_error was preventing this behavior. In a nutshell, ""this variable is set to TRUE if an execution of a compound statement cannot continue. In particular, it is used to disable access to the CONTINUE or EXIT handlers of stored routines. So even temporary errors may have this variable set. To fix the bug, we have done what follows: DBUG_ENTER(""has_temporary_error""); -  if (thd->is_fatal_error) -    DBUG_RETURN(0); - DBUG_EXECUTE_IF(""all_errors_are_temporary_errors"", if (thd->main_da.is_error()) { "	f132d6b4c1d3d645354c03d06e6595b5e5c42390
----------------------------
"Bug#46013: rpl_extraColmaster_myisam fails on pb2 Bug#45243: crash on win in sql thread clear_tables_to_lock() -> free() Bug#45242: crash on win in mysql_close() -> free() Bug#45238: rpl_slave_skip, rpl_change_master failed (lost connection) for STOP SLAVE Bug#46030: rpl_truncate_3innodb causes server crash on windows Bug#46014: rpl_stm_reset_slave crashes the server sporadically in pb2 When killing a user session on the server, it's necessary to interrupt (notify) the thread associated with the session that the connection is being killed so that the thread is woken up if waiting for I/O. On a few platforms (Mac, Windows and HP-UX) where the SIGNAL_WITH_VIO_CLOSE flag is defined, this interruption procedure is to asynchronously close the underlying socket of the connection. In order to enable this schema, each connection serving thread registers its VIO (I/O interface) so that other threads can access it and close the connection. But only the owner thread of the VIO might delete it as to guarantee that other threads won't see freed memory (the thread unregisters the VIO before deleting it). A side note: closing the socket introduces a harmless race that might cause a thread attempt to read from a closed socket, but this is deemed acceptable. The problem is that this infrastructure was meant to only be used by server threads, but the slave I/O thread was registering the VIO of a mysql handle (a client API structure that represents a connection to another server instance) as a active connection of the thread. But under some circumstances such as network failures, the client API might destroy the VIO associated with a handle at will, yet the VIO wouldn't be properly unregistered. This could lead to accesses to freed data if a thread attempted to kill a slave I/O thread whose connection was already broken. There was a attempt to work around this by checking whether the socket was being interrupted, but this hack didn't work as intended due to the aforementioned race -- attempting to read from the socket would yield a ""bad file descriptor"" error. The solution is to add a hook to the client API that is called from the client code before the VIO of a handle is deleted. This hook allows the slave I/O thread to detach the active vio so it does not point to freed memory. "	97dbd987f0f7d32b846b4ee7e311c8b35d1c431e
----------------------------
"BUG#45516 SQL thread does not use database charset properly Replication SQL thread does not set database default charset to thd->variables.collation_database properly, when executing LOAD DATA binlog. This bug can be repeated by using ""LOAD DATA"" command in STATEMENT mode. This patch adds code to find the default character set of the current database then assign it to thd->db_charset when slave server begins to execute a relay log. The test of this bug is added into rpl_loaddata_charset.test "	f5be2159fea9800c0d75046ab9c632abb401e9f0
----------------------------
"BUG#45516 SQL thread does not use database charset properly Replication SQL thread does not set database default charset to thd->variables.collation_database properly, when executing LOAD DATA binlog. This bug can be repeated by using ""LOAD DATA"" command in STATEMENT mode. This patch adds code to find the default character set of the current database then assign it to thd->db_charset when slave server begins to execute a relay log. The test of this bug is added into rpl_loaddata_charset.test "	dd273d5bb462f3b55f1a1297fda73bad8af27107
----------------------------
"BUG#45516 SQL thread does not use database charset properly Replication SQL thread does not set database default charset to thd->variables.collation_database properly, when executing LOAD DATA binlog. This bug can be repeated by using ""LOAD DATA"" command in STATEMENT mode. This patch adds code to find the default character set of the current database then assign it to thd->db_charset when slave server begins to execute a relay log. The test of this bug is added into rpl_loaddata_charset.test "	10d5cba09992fc0204debd2297c1d9468f71eb40
----------------------------
Renamed storage/innodb_plugin to storage/innobase, so that 1) it's the same layout as we always had in trees containing only the builtin 2) win\configure.js WITH_INNOBASE_STORAGE_ENGINE still works. 	29a46b4cf93afb06d7de8d97de5c376226f61377
----------------------------
Bug #27535 Installing Windows service with --defaults-file option - quotation marks issues - Remove offensive quotes. 	1c07007f0644b5579065edb3a3380d290028fd7a
----------------------------
branches/zip: mem_heap_block_free(): If innodb_use_sys_malloc is set, do not tell Valgrind that the memory is free, to avoid a bogus warning in Valgrind's built-in free() hook. 	50ba5c7389bc8fd656cbf27a869b8dab2ced8cb9
----------------------------
Bug #45771 AIX and i5/OS Perl bug: check_socket_path_length in MTR fails Bug in Perl Scrap attempt to do this smartly on AIX, just drop the test and assume it's OK This commit undoes the previous push and adds a line to ignore on AIX 	e4b2b9783922db96255143427180526154251be5
----------------------------
Bug #45771 AIX and i5/OS Perl bug: check_socket_path_length in MTR fails Bug is actually in Perl Fixed by trapping and ignoring error from IO::Socket::UNIX 	c26dd8e87b4c4b61d990bf3b7ace0344205a23d1
----------------------------
"ndb - bug#46242 1) allow stray "";"" at end of config values 2) fix spelling in error message "	4c61864c1bb848f6a8dc7f6c65b9262948f3e7ee
----------------------------
Not all of the necessary tests for multi-byte support in readline were included in the configure tests. (Bug #46310) 	57f6e7ebae2a0b66debee5fd24f29527e9e9ee9b
----------------------------
Bug#17270 - mysql client tool could not find ../share/charsets folder and fails. - Define and pass compile time path variables as pre-processor definitions to mimic the makefile build. - Set new CMake version and policy requirements explicitly. - Changed DATADIR to MYSQL_DATADIR to avoid conflicting definition in Platform SDK header ObjIdl.h which also defines DATADIR. 	6df2af22ceda4a59fc43a661f6ecfac362e9783a
----------------------------
Bug#46265: Can not disable warning about unsafe statements for binary logging If using statement based replication (SBR), repeatedly calling statements which are unsafe for SBR will cause a warning message to be written to the error for each statement. This might lead to filling up the error log and there is no way to disable this behavior. The solution is to only log these message (about statements unsafe for statement based replication) if the log_warnings option is set. For example: SET GLOBAL LOG_WARNINGS = 0; INSERT INTO t1 VALUES(UUID()); SET GLOBAL LOG_WARNINGS = 1; INSERT INTO t1 VALUES(UUID()); In this case the message will be printed only once: [Warning] Statement may not be safe to log in statement format. Statement: INSERT INTO t1 VALUES(UUID()) 	e1c43705b9bf19e5167a2bfb5b539eb98d0197c2
----------------------------
Bug#45017: Failure to connect if hostname maps to multiple addresses The problem is that the C API function mysql_real_connect only attempts to connect to the first IP address returned for a hostname. This can be a problem if a hostname maps to multiple IP address and the server is not bound to the first one that is returned. The solution is to augment mysql_real_connect so that it attempts to connect to all IPv4 addresses that a domain name maps to. The function goes over the list of address until a successful connection is established. No test case is provided as its not possible to test this automatically with the current testing infrastructure. 	35e5b9b8c9257b16f4f82655a53c021ad72e61d3
----------------------------
If running the mysql_upgrade test case with Valgrind, the resource consumption (CPU) for upgrading a large log table can be intense. Therefore, truncate the general_log table beforehand if running mysql_upgrade test with Valgrind. 	b8a69f4f6f40ccee3e930e2a48b0412ccffba7b0
----------------------------
"BUG#41166 stored function requires ""deterministic"" if binlog_format is ""statement"" If the log_bin_trust_function_creators option is not defined, creating a stored function requires either one of the modifiers DETERMINISTIC, NO SQL, or READS SQL DATA. Executing a stored function should also follows the same rules if in STATEMENT mode. However, this was not happening and a wrong error was being printed out: ER_BINLOG_ROW_RBR_TO_SBR. The patch makes the creation and execution compatible and prints out the correct error ER_BINLOG_UNSAFE_ROUTINE when a stored function without one of the modifiers above is executed in STATEMENT mode. "	90f8eb4883189e11a93105088f5a004968021e41
----------------------------
Bug#46385: [Warning] option 'max_join_size': unsigned value 18446744073709551615 adjusted t The maximum value of the max_join_size variable is set by converting a signed type (long int) with negative value (-1) to a wider unsigned type (unsigned long long), which yields the largest possible value of the wider unsigned type -- as per the language conversion rules. But, depending on build options, the type of the max_join_size might be a shorter type (ha_rows - unsigned long) which causes the warning to be thrown once the large value is truncated to fit. The solution is to ensure that the maximum value of the variable is always set to the maximum value of integer type of max_join_size. Furthermore, it would be interesting to always have a fixed type for this variable, but this would incur in a change of behavior which is not acceptable for a GA version. See Bug#35346. 	71713f32d0f7b9f83552ea6557a2c851bb82a102
----------------------------
Bug#20023: mysql_change_user() resets the value of SQL_BIG_SELECTS Post-merge fix: test case could fail due to a conversion of the max_join_size value to a integer. Fixed by preserving the value as a string for comparison purposes. 	93bd65b04bacd3302c3d571895f7e931448fb463
----------------------------
Merge: 9c72a7b 3199702 Bug#43587: Putting event_scheduler=1 in init SQL file crashes mysqld The problem was that enabling the event scheduler inside a init file caused the server to crash upon start-up. The crash occurred because the event scheduler wasn't being initialized before the commands in the init-file are processed. The solution is to initialize the event scheduler before the init file is read. The patch also disables the event scheduler during bootstrap and makes the bootstrap operation robust in the presence of background threads. 	97ff334b371331e34ec741a021d8aa0b5449480e
----------------------------
Code review for Bug#43587 Putting event_scheduler=1 in init SQL file crashes mysqld 	31997022d79f55922e4915fe649619f2dcc1ab40
----------------------------
Post-push fixes for BUG#39934 Suppress warnings if binlog_format=STATEMENT and the current database is filtered out using --binlog-[do|ignore]-db. This was a regression in my previous patch. 	3f6c13ba0afaf8bd798d55cc591091e30ba6bca4
----------------------------
Backport into build-200907211706-5.0.82sp1 > ------------------------------------------------------------ > revno: 2772 > revision-id: joro@sun.com-20090615133815-eb007p5793in33p5 > parent: joro@sun.com-20090612140659-4hj1tta9p8wvcw4k > committer: Georgi Kodinov <joro@sun.com> > branch nick: B44810-5.0-bugteam > timestamp: Mon 2009-06-15 16:38:15 +0300 > message: >   Bug #44810: index merge and order by with low sort_buffer_size >   crashes server! > >   The problem affects the scenario when index merge is followed by a filesort >   and the sort buffer is not big enough for all the sort keys. >   In this case the filesort function will read the data to the end through the >   index merge quick access method (and thus closing the cursor etc), >   but will leave the pointer to the quick select method in place. >   It will then create a temporary file to hold the results of the filesort and >   will add it as a sort output file (in sort.io_cache). >   Note that filesort will copy the original 'sort' structure in an automatic >   variable and restore it after it's done. >   As a result at exiting filesort() we have a sort.io_cache filled in and >   nothing else (as a result of close of the cursors at end of reading data >   through index merge). >   Now create_sort_index() will note that there is a select and will clean it up >   (as it's been used already by filesort() reading the data in). While doing that >   a special case in the index merge destructor will clean up the sort.io_cache, >   assuming it's an output of the index merge method and is not needed anymore. >   As a result the code that tries to read the data back from the filesort output >   will get no data in both memory and disk and will crash. > >   Fixed similarly to how filesort() does it : by copying the sort.io_cache structure >   to a local variable, removing the pointer to the io_cache (so that it's not freed >   by QUICK_INDEX_MERGE_SELECT::~QUICK_INDEX_MERGE_SELECT) and restoring the original >   structure (together with the valid pointer) after the cleanup is done. >   This is a safe thing to do because all the structures are already cleaned up by >   hitting the end of the index merge's read method (QUICK_INDEX_MERGE_SELECT::get_next()) >   and the cleanup code being written in a way that tolerates repeating cleanups. 	4461edde0a6e37328f2101d8c75a2267cc6ed50d
----------------------------
"branches/innodb+: Merge revisions 5144:5524 from branches/zip ------------------------------------------------------------------------ r5147 | marko | 2009-05-27 06:55:14 -0400 (Wed, 27 May 2009) | 1 line branches/zip: ibuf0ibuf.c: Improve a comment. ------------------------------------------------------------------------ r5149 | marko | 2009-05-27 07:46:42 -0400 (Wed, 27 May 2009) | 34 lines branches/zip: Merge revisions 4994:5148 from branches/5.1: ------------------------------------------------------------------------ r5126 | vasil | 2009-05-26 16:57:12 +0300 (Tue, 26 May 2009) | 9 lines branches/5.1: Preparation for the fix of Bug#45097 Hang during recovery, redo logs for doublewrite buffer pages Non-functional change: move FSP_* macros from fsp0fsp.h to a new file fsp0types.h. This is needed in order to be able to use FSP_EXTENT_SIZE in mtr0log.ic. ------------------------------------------------------------------------ r5127 | vasil | 2009-05-26 17:05:43 +0300 (Tue, 26 May 2009) | 9 lines branches/5.1: Preparation for the fix of Bug#45097 Hang during recovery, redo logs for doublewrite buffer pages Do not include unnecessary headers mtr0log.h and fut0lst.h in trx0sys.h and include fsp0fsp.h just before it is needed. This is needed in order to be able to use TRX_SYS_SPACE in mtr0log.ic. ------------------------------------------------------------------------ r5128 | vasil | 2009-05-26 17:26:37 +0300 (Tue, 26 May 2009) | 7 lines branches/5.1: Fix Bug#45097 Hang during recovery, redo logs for doublewrite buffer pages Do not write redo log for the pages in the doublewrite buffer. Also, do not make a dummy change to the page because this is not needed. ------------------------------------------------------------------------ ------------------------------------------------------------------------ r5169 | marko | 2009-05-28 03:21:55 -0400 (Thu, 28 May 2009) | 1 line branches/zip: mtr0mtr.h: Add Doxygen comments for the redo log entry types. ------------------------------------------------------------------------ r5176 | marko | 2009-05-28 07:14:02 -0400 (Thu, 28 May 2009) | 1 line branches/zip: Correct a debug assertion that was added in r5125. ------------------------------------------------------------------------ r5201 | marko | 2009-06-01 06:35:25 -0400 (Mon, 01 Jun 2009) | 2 lines branches/zip: Clean up some comments. Make the rec parameter of mlog_open_and_write_index() const. ------------------------------------------------------------------------ r5234 | marko | 2009-06-03 08:26:41 -0400 (Wed, 03 Jun 2009) | 44 lines branches/zip: Merge revisions 5148:5233 from branches/5.1: ------------------------------------------------------------------------ r5150 | vasil | 2009-05-27 18:56:03 +0300 (Wed, 27 May 2009) | 4 lines branches/5.1: Whitespace fixup. ------------------------------------------------------------------------ r5191 | vasil | 2009-05-30 17:46:05 +0300 (Sat, 30 May 2009) | 19 lines branches/5.1: Merge a change from MySQL (this fixes the failing innodb_mysql test): ------------------------------------------------------------ revno: 1810.3894.10 committer: Sergey Glukhov <Sergey.Glukhov@sun.com> branch nick: mysql-5.0-bugteam timestamp: Tue 2009-05-19 11:32:21 +0500 message: Bug#39793 Foreign keys not constructed when column has a '#' in a comment or default value Internal InnoDN FK parser does not recognize '\'' as quotation symbol. Suggested fix is to add '\'' symbol check for quotation condition (dict_strip_comments() function). modified: innobase/dict/dict0dict.c mysql-test/r/innodb_mysql.result mysql-test/t/innodb_mysql.test ------------------------------------------------------------------------ r5233 | marko | 2009-06-03 15:12:44 +0300 (Wed, 03 Jun 2009) | 11 lines branches/5.1: Merge the test case from r5232 from branches/5.0: ------------------------------------------------------------------------ r5232 | marko | 2009-06-03 14:31:04 +0300 (Wed, 03 Jun 2009) | 21 lines branches/5.0: Merge r3590 from branches/5.1 in order to fix Bug #40565 (Update Query Results in ""1 Row Affected"" But Should Be ""Zero Rows""). Also, add a test case for Bug #40565. rb://128 approved by Heikki Tuuri ------------------------------------------------------------------------ ------------------------------------------------------------------------ ------------------------------------------------------------------------ r5250 | marko | 2009-06-04 02:58:23 -0400 (Thu, 04 Jun 2009) | 1 line branches/zip: Add Doxygen comments to the rest of buf0*. ------------------------------------------------------------------------ r5251 | marko | 2009-06-04 02:59:51 -0400 (Thu, 04 Jun 2009) | 1 line branches/zip: Replace <= in a function comment. ------------------------------------------------------------------------ r5253 | marko | 2009-06-04 06:37:35 -0400 (Thu, 04 Jun 2009) | 1 line branches/zip: Add missing Doxygen comments for page0zip. ------------------------------------------------------------------------ r5261 | vasil | 2009-06-05 11:13:31 -0400 (Fri, 05 Jun 2009) | 15 lines branches/zip: Fix Mantis Issue#244 fix bug in linear read ahead (no check on access pattern) The changes are: 1) Take into account access pattern when deciding whether or not to do linear read ahead. 2) Expose a knob innodb_read_ahead_factor = [0-64] default (8), dynamic, global to control linear read ahead behvior 3) Disable random read ahead. Keep the code for now. Submitted by:	Inaam (rb://122) Approved by:	Heikki (rb://122) ------------------------------------------------------------------------ r5262 | vasil | 2009-06-05 12:04:25 -0400 (Fri, 05 Jun 2009) | 22 lines branches/zip: Enable functionality to have multiple background io helper threads. This patch is based on percona contributions. More details about this patch will be written at: https://svn.innodb.com/innobase/MultipleBackgroundThreads The patch essentially does the following: expose following knobs: innodb_read_io_threads = [1 - 64] default 1 innodb_write_io_threads = [1 - 64] default 1 deprecate innodb_file_io_threads (this parameter was relevant only on windows) Internally it allows multiple segments for read and write IO request arrays where one thread works on one segement. Submitted by:	Inaam (rb://124) Approved by:	Heikki (rb://124) ------------------------------------------------------------------------ r5263 | vasil | 2009-06-05 12:19:37 -0400 (Fri, 05 Jun 2009) | 4 lines branches/zip: Whitespace cleanup. ------------------------------------------------------------------------ r5264 | vasil | 2009-06-05 12:26:58 -0400 (Fri, 05 Jun 2009) | 4 lines branches/zip: Add ChangeLog entry for r5261. ------------------------------------------------------------------------ r5265 | vasil | 2009-06-05 12:34:11 -0400 (Fri, 05 Jun 2009) | 4 lines branches/zip: Add ChangeLog entry for r5262. ------------------------------------------------------------------------ r5268 | inaam | 2009-06-08 12:18:21 -0400 (Mon, 08 Jun 2009) | 7 lines branches/zip Non functional change: Added legal notices acknowledging percona contribution to the multiple IO helper threads patch i.e.: r5262 ------------------------------------------------------------------------ r5283 | inaam | 2009-06-09 13:46:29 -0400 (Tue, 09 Jun 2009) | 9 lines branches/zip rb://130 Enable Group Commit functionality that was broken in 5.0 when distributed transactions were introduced. Reviewed by: Heikki ------------------------------------------------------------------------ r5319 | marko | 2009-06-11 04:40:33 -0400 (Thu, 11 Jun 2009) | 3 lines branches/zip: Declare os_thread_id_t as unsigned long, because ulint is wrong on Win64. Pointed out by Vladislav Vaintroub <wlad@sun.com>. ------------------------------------------------------------------------ r5320 | inaam | 2009-06-11 09:15:41 -0400 (Thu, 11 Jun 2009) | 14 lines branches/zip	rb://131 This patch changes the following defaults: max_dirty_pages_pct: default from 90 to 75. max allowed from 100 to 99 additional_mem_pool_size: default from 1 to 8 MB buffer_pool_size: default from 8 to 128 MB log_buffer_size: default from 1 to 8 MB read_io_threads/write_io_threads: default from 1 to 4 The log file sizes are untouched because of upgrade issues Reviewed by: Heikki ------------------------------------------------------------------------ r5330 | marko | 2009-06-16 04:08:59 -0400 (Tue, 16 Jun 2009) | 2 lines branches/zip: buf_page_get_gen(): Reduce mutex holding time by adjusting buf_pool->n_pend_unzip while only holding buf_pool_mutex. ------------------------------------------------------------------------ r5331 | marko | 2009-06-16 05:00:48 -0400 (Tue, 16 Jun 2009) | 2 lines branches/zip: buf_page_get_zip(): Eliminate a buf_page_get_mutex() call. The function must switch on the block state anyway. ------------------------------------------------------------------------ r5332 | vasil | 2009-06-16 05:03:27 -0400 (Tue, 16 Jun 2009) | 4 lines branches/zip: Add ChangeLog entries for r5283 and r5320. ------------------------------------------------------------------------ r5333 | marko | 2009-06-16 05:27:46 -0400 (Tue, 16 Jun 2009) | 1 line branches/zip: buf_page_io_query(): Remove unused function. ------------------------------------------------------------------------ r5335 | marko | 2009-06-16 09:23:10 -0400 (Tue, 16 Jun 2009) | 2 lines branches/zip: innodb.test: Adjust the tolerance of innodb_buffer_pool_pages_total for r5320. ------------------------------------------------------------------------ r5342 | marko | 2009-06-17 06:15:32 -0400 (Wed, 17 Jun 2009) | 60 lines branches/zip: Merge revisions 5233:5341 from branches/5.1: ------------------------------------------------------------------------ r5233 | marko | 2009-06-03 15:12:44 +0300 (Wed, 03 Jun 2009) | 11 lines branches/5.1: Merge the test case from r5232 from branches/5.0: ------------------------------------------------------------------------ r5232 | marko | 2009-06-03 14:31:04 +0300 (Wed, 03 Jun 2009) | 21 lines branches/5.0: Merge r3590 from branches/5.1 in order to fix Bug #40565 (Update Query Results in ""1 Row Affected"" But Should Be ""Zero Rows""). Also, add a test case for Bug #40565. rb://128 approved by Heikki Tuuri ------------------------------------------------------------------------ ------------------------------------------------------------------------ r5243 | sunny | 2009-06-04 03:17:14 +0300 (Thu, 04 Jun 2009) | 14 lines branches/5.1: When the InnoDB and MySQL data dictionaries go out of sync, before the bug fix we would assert on missing autoinc columns. With this fix we allow MySQL to open the table but set the next autoinc value for the column to the MAX value. This effectively disables the next value generation. INSERTs will fail with a generic AUTOINC failure. However, the user should be able to read/dump the table, set the column values explicitly, use ALTER TABLE to set the next autoinc value and/or sync the two data dictionaries to resume normal operations. Fix Bug#44030 Error: (1500) Couldn't read the MAX(ID) autoinc value from the index (PRIMARY) rb://118 ------------------------------------------------------------------------ r5252 | sunny | 2009-06-04 10:16:24 +0300 (Thu, 04 Jun 2009) | 2 lines branches/5.1: The version of the result file checked in was broken in r5243. ------------------------------------------------------------------------ r5259 | vasil | 2009-06-05 10:29:16 +0300 (Fri, 05 Jun 2009) | 7 lines branches/5.1: Remove the word ""Error"" from the printout because the mysqltest suite interprets it as an error and thus the innodb-autoinc test fails. Approved by:	Sunny (via IM) ------------------------------------------------------------------------ r5339 | marko | 2009-06-17 11:01:37 +0300 (Wed, 17 Jun 2009) | 2 lines branches/5.1: Add missing #include ""mtr0log.h"" so that the code compiles with -DUNIV_MUST_NOT_INLINE. (null merge; this had already been committed in branches/zip) ------------------------------------------------------------------------ r5340 | marko | 2009-06-17 12:11:49 +0300 (Wed, 17 Jun 2009) | 4 lines branches/5.1: row_unlock_for_mysql(): When the clustered index is unknown, refuse to unlock the record. (Bug #45357, caused by the fix of Bug #39320). rb://132 approved by Sunny Bains. ------------------------------------------------------------------------ ------------------------------------------------------------------------ r5343 | vasil | 2009-06-17 08:56:12 -0400 (Wed, 17 Jun 2009) | 4 lines branches/zip: Add ChangeLog entry for r5342. ------------------------------------------------------------------------ r5344 | marko | 2009-06-17 09:03:45 -0400 (Wed, 17 Jun 2009) | 1 line branches/zip: row_merge_read_rec(): Fix a UNIV_DEBUG bug (Bug #45426) ------------------------------------------------------------------------ r5391 | marko | 2009-06-22 05:31:35 -0400 (Mon, 22 Jun 2009) | 2 lines branches/zip: buf_page_get_zip(): Fix a bogus warning about block_mutex being possibly uninitialized. ------------------------------------------------------------------------ r5392 | marko | 2009-06-22 07:58:20 -0400 (Mon, 22 Jun 2009) | 4 lines branches/zip: ha_innobase::check_if_incompatible_data(): When ROW_FORMAT=DEFAULT, do not compare to get_row_type(). Without this change, fast index creation will be disabled in recent versions of MySQL 5.1. ------------------------------------------------------------------------ r5393 | pekka | 2009-06-22 09:27:55 -0400 (Mon, 22 Jun 2009) | 4 lines branches/zip: Minor changes for Hot Backup to build correctly. (The code bracketed between #ifdef UNIV_HOTBACKUP and #endif /* UNIV_HOTBACKUP */). This change should not affect !UNIV_HOTBACKUP build. ------------------------------------------------------------------------ r5394 | pekka | 2009-06-22 09:46:34 -0400 (Mon, 22 Jun 2009) | 4 lines branches/zip: Add functions for checking the format of tablespaces for Hot Backup build (UNIV_HOTBACKUP defined). This change should not affect !UNIV_HOTBACKUP build. ------------------------------------------------------------------------ r5397 | calvin | 2009-06-23 16:59:42 -0400 (Tue, 23 Jun 2009) | 7 lines branches/zip: change the header file path. Change the header file path from ../storage/innobase/include/ to ../include/. In the planned 5.1 + plugin release, the source directory of the plugin will not be in storage/innobase. Approved by: Heikki (IM) ------------------------------------------------------------------------ r5407 | calvin | 2009-06-24 09:51:08 -0400 (Wed, 24 Jun 2009) | 4 lines branches/zip: remove relative path of header files. Suggested by Marko. ------------------------------------------------------------------------ r5412 | marko | 2009-06-25 06:27:08 -0400 (Thu, 25 Jun 2009) | 1 line branches/zip: Replace a DBUG_ASSERT with ut_a to track down Issue #290. ------------------------------------------------------------------------ r5415 | marko | 2009-06-25 06:45:57 -0400 (Thu, 25 Jun 2009) | 3 lines branches/zip: dict_index_find_cols(): Print diagnostic on name mismatch. This addresses Bug #44571 but does not fix it. rb://135 approved by Sunny Bains. ------------------------------------------------------------------------ r5417 | marko | 2009-06-25 08:20:56 -0400 (Thu, 25 Jun 2009) | 1 line branches/zip: ha_innodb.cc: Move the misplaced Doxygen @file comment. ------------------------------------------------------------------------ r5418 | marko | 2009-06-25 08:55:52 -0400 (Thu, 25 Jun 2009) | 5 lines branches/zip: Fix a race condition caused by SET GLOBAL innodb_commit_concurrency=DEFAULT. (Bug #45749) When innodb_commit_concurrency is initially set nonzero, DEFAULT would change it back to 0, triggering Bug #42101. rb://139 approved by Heikki Tuuri. ------------------------------------------------------------------------ r5423 | calvin | 2009-06-26 16:52:52 -0400 (Fri, 26 Jun 2009) | 2 lines branches/zip: Fix typos. ------------------------------------------------------------------------ r5425 | marko | 2009-06-29 04:52:30 -0400 (Mon, 29 Jun 2009) | 4 lines branches/zip: ha_innobase::add_index(), ha_innobase::final_drop_index(): Start prebuilt->trx before locking the table.  This should fix Issue #293 and could fix Issue #229. Approved by Sunny (over IM). ------------------------------------------------------------------------ r5426 | marko | 2009-06-29 05:24:27 -0400 (Mon, 29 Jun 2009) | 3 lines branches/zip: buf_page_get_gen(): Fix a race condition when reading buf_fix_count.  This could explain Issue #156. Tested by Michael. ------------------------------------------------------------------------ r5427 | marko | 2009-06-29 05:54:53 -0400 (Mon, 29 Jun 2009) | 5 lines branches/zip: lock_print_info_all_transactions(), buf_read_recv_pages(): Tolerate missing tablespaces (zip_size==ULINT_UNDEFINED). buf_page_get_gen(): Add ut_ad(ut_is_2pow(zip_size)). Issue #289, rb://136 approved by Sunny Bains ------------------------------------------------------------------------ r5428 | marko | 2009-06-29 07:06:29 -0400 (Mon, 29 Jun 2009) | 2 lines branches/zip: row_sel_store_mysql_rec(): Add missing pointer cast. Do not do arithmetics on void pointers. ------------------------------------------------------------------------ r5429 | marko | 2009-06-29 09:49:54 -0400 (Mon, 29 Jun 2009) | 13 lines branches/zip: Do not crash on SET GLOBAL innodb_file_format=DEFAULT or SET GLOBAL innodb_file_format_check=DEFAULT. innodb_file_format.test: New test for innodb_file_format and innodb_file_format_check. innodb_file_format_name_validate(): Store the string in *save. innodb_file_format_name_update(): Check the string again. innodb_file_format_check_validate(): Store the string in *save. innodb_file_format_check_update(): Check the string again. Issue #282, rb://140 approved by Heikki Tuuri ------------------------------------------------------------------------ r5430 | marko | 2009-06-29 09:58:07 -0400 (Mon, 29 Jun 2009) | 2 lines branches/zip: lock_rec_validate_page(): Add another assertion to track down Issue #289. ------------------------------------------------------------------------ r5431 | marko | 2009-06-29 09:58:40 -0400 (Mon, 29 Jun 2009) | 1 line branches/zip: Revert an accidentally made change in r5430 to univ.i. ------------------------------------------------------------------------ r5437 | marko | 2009-06-30 05:10:01 -0400 (Tue, 30 Jun 2009) | 1 line branches/zip: ibuf_dummy_index_free(): Beautify the comment. ------------------------------------------------------------------------ r5438 | marko | 2009-06-30 05:10:32 -0400 (Tue, 30 Jun 2009) | 1 line branches/zip: fseg_free(): Remove this unused function. ------------------------------------------------------------------------ r5439 | marko | 2009-06-30 05:15:22 -0400 (Tue, 30 Jun 2009) | 2 lines branches/zip: fseg_validate(): Enclose in #ifdef UNIV_DEBUG. This function is unused, but it could turn out to be a useful debugging aid. ------------------------------------------------------------------------ r5441 | marko | 2009-06-30 06:30:14 -0400 (Tue, 30 Jun 2009) | 2 lines branches/zip: ha_delete(): Remove this unused function that was very similar to ha_search_and_delete_if_found(). ------------------------------------------------------------------------ r5442 | marko | 2009-06-30 06:45:41 -0400 (Tue, 30 Jun 2009) | 1 line branches/zip: lock_is_on_table(), lock_table_unlock(): Unused, remove. ------------------------------------------------------------------------ r5443 | marko | 2009-06-30 07:03:00 -0400 (Tue, 30 Jun 2009) | 1 line branches/zip: os_event_create_auto(): Unused, remove. ------------------------------------------------------------------------ r5444 | marko | 2009-06-30 07:19:49 -0400 (Tue, 30 Jun 2009) | 1 line branches/zip: que_graph_try_free(): Unused, remove. ------------------------------------------------------------------------ r5445 | marko | 2009-06-30 07:28:11 -0400 (Tue, 30 Jun 2009) | 1 line branches/zip: row_build_row_ref_from_row(): Unused, remove. ------------------------------------------------------------------------ r5446 | marko | 2009-06-30 07:35:45 -0400 (Tue, 30 Jun 2009) | 1 line branches/zip: srv_que_round_robin(), srv_que_task_enqueue(): Unused, remove. ------------------------------------------------------------------------ r5447 | marko | 2009-06-30 07:37:58 -0400 (Tue, 30 Jun 2009) | 1 line branches/zip: srv_que_task_queue_check(): Unused, remove. ------------------------------------------------------------------------ r5448 | marko | 2009-06-30 07:56:36 -0400 (Tue, 30 Jun 2009) | 1 line branches/zip: mem_heap_cat(): Unused, remove. ------------------------------------------------------------------------ r5449 | marko | 2009-06-30 08:00:50 -0400 (Tue, 30 Jun 2009) | 2 lines branches/zip: innobase_start_or_create_for_mysql(): Invoke os_get_os_version() at most once. ------------------------------------------------------------------------ r5450 | marko | 2009-06-30 08:02:20 -0400 (Tue, 30 Jun 2009) | 1 line branches/zip: os_file_close_no_error_handling(): Unused, remove. ------------------------------------------------------------------------ r5451 | marko | 2009-06-30 08:09:49 -0400 (Tue, 30 Jun 2009) | 2 lines branches/zip: page_set_max_trx_id(): Make the code compile with UNIV_HOTBACKUP. ------------------------------------------------------------------------ r5452 | marko | 2009-06-30 08:10:26 -0400 (Tue, 30 Jun 2009) | 2 lines branches/zip: os_file_close_no_error_handling(): Restore, as this function is used within InnoDB Hot Backup. ------------------------------------------------------------------------ r5453 | marko | 2009-06-30 08:14:01 -0400 (Tue, 30 Jun 2009) | 1 line branches/zip: os_process_set_priority_boost(): Unused, remove. ------------------------------------------------------------------------ r5454 | marko | 2009-06-30 08:42:52 -0400 (Tue, 30 Jun 2009) | 2 lines branches/zip: Replace a non-ASCII character (ISO 8859-1 encoded U+00AD SOFT HYPHEN) with a cheap ASCII substitute. ------------------------------------------------------------------------ r5456 | inaam | 2009-06-30 14:21:09 -0400 (Tue, 30 Jun 2009) | 4 lines branches/zip Non functional change. s/Percona/Percona Inc./ ------------------------------------------------------------------------ r5470 | vasil | 2009-07-02 09:12:36 -0400 (Thu, 02 Jul 2009) | 16 lines branches/zip: Use PAUSE instruction inside spinloop if it is available. The patch was originally developed by Mikael Ronstrom <mikael@mysql.com> and can be found here: http://bazaar.launchpad.net/%7Emysql/mysql-server/mysql-5.4/revision/2768 http://bazaar.launchpad.net/%7Emysql/mysql-server/mysql-5.4/revision/2771 http://bazaar.launchpad.net/%7Emysql/mysql-server/mysql-5.4/revision/2772 http://bazaar.launchpad.net/%7Emysql/mysql-server/mysql-5.4/revision/2774 http://bazaar.launchpad.net/%7Emysql/mysql-server/mysql-5.4/revision/2777 http://bazaar.launchpad.net/%7Emysql/mysql-server/mysql-5.4/revision/2799 http://bazaar.launchpad.net/%7Emysql/mysql-server/mysql-5.4/revision/2800 Approved by:	Heikki (rb://137) ------------------------------------------------------------------------ r5481 | vasil | 2009-07-06 13:16:32 -0400 (Mon, 06 Jul 2009) | 4 lines branches/zip: Remove unnecessary quotes and simplify plug.in. ------------------------------------------------------------------------ r5482 | calvin | 2009-07-06 18:36:35 -0400 (Mon, 06 Jul 2009) | 5 lines branches/zip: add COPYING files for Percona and Sun Micro. 1.0.4 contains patches based on contributions from Percona and Sun Microsystems. ------------------------------------------------------------------------ r5483 | calvin | 2009-07-07 05:36:43 -0400 (Tue, 07 Jul 2009) | 3 lines branches/zip: add IB_HAVE_PAUSE_INSTRUCTION to CMake. Windows will support PAUSE instruction by default. ------------------------------------------------------------------------ r5484 | inaam | 2009-07-07 18:57:14 -0400 (Tue, 07 Jul 2009) | 13 lines branches/zip  rb://126 Based on contribution from Google Inc. This patch introduces a new parameter innodb_io_capacity to control the rate at which master threads performs various tasks. The default value is 200 and higher values imply more aggressive flushing and ibuf merges from within the master thread. This patch also changes the ibuf merge from synchronous to asynchronous. Another minor change is not to force the master thread to wait for a log flush to complete every second. Approved by: Heikki ------------------------------------------------------------------------ r5485 | inaam | 2009-07-07 19:00:49 -0400 (Tue, 07 Jul 2009) | 18 lines branches/zip  rb://138 The current implementation is to try to flush the neighbors of every page that we flush. This patch makes the following distinction: 1) If the flush is from flush_list AND 2) If the flush is intended to move the oldest_modification LSN ahead (this happens when a user thread sees little space in the log file and attempts to flush pages from the buffer pool so that a checkpoint can be made) THEN Do not try to flush the neighbors. Just focus on flushing dirty pages at the end of flush_list Approved by: Heikki ------------------------------------------------------------------------ r5486 | inaam | 2009-07-08 12:11:40 -0400 (Wed, 08 Jul 2009) | 29 lines branches/zip  rb://133 This patch introduces heuristics based flushing rate of dirty pages to avoid IO bursts at checkpoint. 1) log_capacity / log_generated per second gives us number of seconds in which ALL dirty pages need to be flushed. Based on this rough assumption we can say that n_dirty_pages / (log_capacity / log_generation_rate) = desired_flush_rate 2) We use weighted averages (hard coded to 20 seconds) of log_generation_rate to avoid resonance. 3) From the desired_flush_rate we subtract the number of pages that have been flushed due to LRU flushing. That gives us pages that we should flush as part of flush_list cleanup. And that is the number (capped by maximum io_capacity) that we try to flush from the master thread. Knobs: ====== innodb_adaptive_flushing: boolean, global, dynamic, default TRUE. Since this heuristic is very experimental and has the potential to dramatically change the IO pattern I think it is a good idea to leave a knob to turn it off. Approved by: Heikki ------------------------------------------------------------------------ r5487 | calvin | 2009-07-08 12:42:28 -0400 (Wed, 08 Jul 2009) | 7 lines branches/zip: fix PAUSE instruction patch on Windows The original PAUSE instruction patch (r5470) does not compile on Windows. Also, there is an elegant way of doing it on Windows - YieldProcessor(). Approved by: Heikki (on IM) ------------------------------------------------------------------------ r5489 | vasil | 2009-07-10 05:02:22 -0400 (Fri, 10 Jul 2009) | 9 lines branches/zip: Change the defaults for innodb_sync_spin_loops: 20 -> 30 innodb_spin_wait_delay: 5 -> 6 This change was proposed by Sun/MySQL based on their performance testing, see https://svn.innodb.com/innobase/Release_tasks_for_InnoDB_Plugin_V1.0.4 ------------------------------------------------------------------------ r5490 | vasil | 2009-07-10 05:04:20 -0400 (Fri, 10 Jul 2009) | 4 lines branches/zip: Add ChangeLog entry for 5489. ------------------------------------------------------------------------ r5491 | calvin | 2009-07-10 12:19:17 -0400 (Fri, 10 Jul 2009) | 6 lines branches/zip: add copyright info to files related to PAUSE instruction patch, contributed by Sun Microsystems. ------------------------------------------------------------------------ r5492 | calvin | 2009-07-10 17:47:34 -0400 (Fri, 10 Jul 2009) | 5 lines branches/zip: add ChangeLog entries for r5484-r5486. ------------------------------------------------------------------------ r5494 | vasil | 2009-07-13 03:37:35 -0400 (Mon, 13 Jul 2009) | 6 lines branches/zip: Restore the original value of innodb_sync_spin_loops at the end, previously the test assumed that setting it to 20 will do this, but now the default is 30 and MTR's internal check failed. ------------------------------------------------------------------------ r5495 | inaam | 2009-07-13 11:48:45 -0400 (Mon, 13 Jul 2009) | 5 lines branches/zip rb://138 (REVERT) Revert the flush neighbors patch as it shows regression in the benchmarks run by Michael. ------------------------------------------------------------------------ r5496 | inaam | 2009-07-13 14:04:57 -0400 (Mon, 13 Jul 2009) | 4 lines branches/zip Fixed warnings on windows where ulint != ib_uint64_t ------------------------------------------------------------------------ r5497 | calvin | 2009-07-13 15:01:00 -0400 (Mon, 13 Jul 2009) | 9 lines branches/zip: fix run-time symbols clash on Solaris. This patch is from Sergey Vojtovich of Sun Microsystems, to fix run-time symbols clash on Solaris with older C++ compiler: - when finding out a way to hide symbols, make decision basing on compiler, not operating system. - Sun Studio supports __hidden declaration specifier for this purpose. ------------------------------------------------------------------------ r5498 | vasil | 2009-07-14 03:16:18 -0400 (Tue, 14 Jul 2009) | 92 lines branches/zip: Merge r5341:5497 from branches/5.1, skipping: c5419 because it is merge from branches/zip into branches/5.1 c5466 because the source code has been adjusted to match the MySQL behavior and the innodb-autoinc test does not fail in branches/zip, if c5466 is merged, then innodb-autoinc starts failing, Sunny suggested not to merge c5466. and resolving conflicts in c5410, c5440, c5488: ------------------------------------------------------------------------ r5410 | marko | 2009-06-24 22:26:34 +0300 (Wed, 24 Jun 2009) | 2 lines Changed paths: M /branches/5.1/include/trx0sys.ic M /branches/5.1/trx/trx0purge.c M /branches/5.1/trx/trx0sys.c M /branches/5.1/trx/trx0undo.c branches/5.1: Add missing #include ""mtr0log.h"" to avoid warnings when compiling with -DUNIV_MUST_NOT_INLINE. ------------------------------------------------------------------------ r5419 | marko | 2009-06-25 16:11:57 +0300 (Thu, 25 Jun 2009) | 18 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/mysql-test/innodb_bug42101-nonzero.result M /branches/5.1/mysql-test/innodb_bug42101-nonzero.test M /branches/5.1/mysql-test/innodb_bug42101.result M /branches/5.1/mysql-test/innodb_bug42101.test branches/5.1: Merge r5418 from branches/zip: ------------------------------------------------------------------------ r5418 | marko | 2009-06-25 15:55:52 +0300 (Thu, 25 Jun 2009) | 5 lines Changed paths: M /branches/zip/ChangeLog M /branches/zip/handler/ha_innodb.cc M /branches/zip/mysql-test/innodb_bug42101-nonzero.result M /branches/zip/mysql-test/innodb_bug42101-nonzero.test M /branches/zip/mysql-test/innodb_bug42101.result M /branches/zip/mysql-test/innodb_bug42101.test branches/zip: Fix a race condition caused by SET GLOBAL innodb_commit_concurrency=DEFAULT. (Bug #45749) When innodb_commit_concurrency is initially set nonzero, DEFAULT would change it back to 0, triggering Bug #42101. rb://139 approved by Heikki Tuuri. ------------------------------------------------------------------------ ------------------------------------------------------------------------ r5440 | vasil | 2009-06-30 13:04:29 +0300 (Tue, 30 Jun 2009) | 8 lines Changed paths: M /branches/5.1/fil/fil0fil.c branches/5.1: Fix Bug#45814 URL reference in InnoDB server errors needs adjusting to match documentation by changing the URL from http://dev.mysql.com/doc/refman/5.1/en/innodb-troubleshooting.html to http://dev.mysql.com/doc/refman/5.1/en/innodb-troubleshooting-datadict.html ------------------------------------------------------------------------ r5466 | vasil | 2009-07-02 10:46:45 +0300 (Thu, 02 Jul 2009) | 6 lines Changed paths: M /branches/5.1/mysql-test/innodb-autoinc.result M /branches/5.1/mysql-test/innodb-autoinc.test branches/5.1: Adjust the failing innodb-autoinc test to conform to the latest behavior of the MySQL code. The idea and the comment in innodb-autoinc.test come from Sunny. ------------------------------------------------------------------------ r5488 | vasil | 2009-07-09 19:16:44 +0300 (Thu, 09 Jul 2009) | 13 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc A /branches/5.1/mysql-test/innodb_bug21704.result A /branches/5.1/mysql-test/innodb_bug21704.test branches/5.1: Fix Bug#21704 Renaming column does not update FK definition by checking whether a column that participates in a FK definition is being renamed and denying the ALTER in this case. The patch was originally developed by Davi Arnaut <Davi.Arnaut@Sun.COM>: http://lists.mysql.com/commits/77714 and was later adjusted to conform to InnoDB coding style by me (Vasil), I also added some more comments and moved the bug specific mysql-test to a separate file to make it more manageable and flexible. ------------------------------------------------------------------------ ------------------------------------------------------------------------ r5499 | calvin | 2009-07-14 12:55:10 -0400 (Tue, 14 Jul 2009) | 3 lines branches/zip: add a missing file in Makefile.am This change was suggested by MySQL. ------------------------------------------------------------------------ r5500 | calvin | 2009-07-14 13:03:26 -0400 (Tue, 14 Jul 2009) | 3 lines branches/zip: minor change Remove an extra ""with"". ------------------------------------------------------------------------ r5501 | vasil | 2009-07-14 13:58:15 -0400 (Tue, 14 Jul 2009) | 5 lines branches/zip: Add @ZLIB_INCLUDES@ so that the InnoDB Plugin picks up the same zlib.h header file that is eventually used by mysqld. ------------------------------------------------------------------------ r5502 | vasil | 2009-07-14 13:59:59 -0400 (Tue, 14 Jul 2009) | 4 lines branches/zip: Add include/ut0auxconf.h to noinst_HEADERS ------------------------------------------------------------------------ r5503 | vasil | 2009-07-14 14:16:11 -0400 (Tue, 14 Jul 2009) | 8 lines branches/zip: Non-functional change: put files in noinst_HEADERS and libinnobase_a_SOURCES one per line and sort alphabetically, so it is easier to find if a file is there or not and also diffs show exactly the added or removed file instead of surrounding lines too. ------------------------------------------------------------------------ r5504 | calvin | 2009-07-15 04:58:44 -0400 (Wed, 15 Jul 2009) | 6 lines branches/zip: fix compile errors on Win64 Both srv_read_ahead_factor and srv_io_capacity should be defined as ulong. Approved by: Sunny ------------------------------------------------------------------------ r5508 | calvin | 2009-07-16 09:40:47 -0400 (Thu, 16 Jul 2009) | 16 lines branches/zip: Support inlining of functions and prefetch with Sun Studio Those changes are contributed by Sun/MySQL. Two sets of changes in this patch when Sun Studio is used: - Explicit inlining of functions - Prefetch Support This patch has been tested by Sunny with the plugin statically built in. Since we've never built the plugin as a dynamically loaded module on Solaris, it is a separate task to change plug.in. rb://142 Approved by: Heikki ------------------------------------------------------------------------ r5509 | calvin | 2009-07-16 09:45:28 -0400 (Thu, 16 Jul 2009) | 2 lines branches/zip: add ChangeLog entry for r5508. ------------------------------------------------------------------------ r5512 | sunny | 2009-07-19 19:52:48 -0400 (Sun, 19 Jul 2009) | 2 lines branches/zip: Remove unused extern ref to timed_mutexes. ------------------------------------------------------------------------ r5513 | sunny | 2009-07-19 19:58:43 -0400 (Sun, 19 Jul 2009) | 2 lines branches/zip: Undo r5512 ------------------------------------------------------------------------ r5514 | sunny | 2009-07-19 20:08:49 -0400 (Sun, 19 Jul 2009) | 2 lines branches/zip: Only use my_bool when UNIV_HOTBACKUP is not defined. ------------------------------------------------------------------------ r5515 | sunny | 2009-07-20 03:29:14 -0400 (Mon, 20 Jul 2009) | 2 lines branches/zip: The dict_table_t::autoinc_mutex field is not used in HotBackup. ------------------------------------------------------------------------ r5516 | sunny | 2009-07-20 03:46:05 -0400 (Mon, 20 Jul 2009) | 4 lines branches/zip: Make this file usable from within HotBackup. A new file has been introduced called hb_univ.i. This file should have all the HotBackup specific configuration. ------------------------------------------------------------------------ r5517 | sunny | 2009-07-20 03:55:11 -0400 (Mon, 20 Jul 2009) | 2 lines Add /* UNIV_HOTBACK */ ------------------------------------------------------------------------ r5519 | vasil | 2009-07-20 04:45:18 -0400 (Mon, 20 Jul 2009) | 31 lines branches/zip: Merge r5497:5518 from branches/5.1: ------------------------------------------------------------------------ r5518 | vasil | 2009-07-20 11:29:47 +0300 (Mon, 20 Jul 2009) | 22 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: Merge a change from MySQL: ------------------------------------------------------------ revno: 2874.2.1 committer: Anurag Shekhar <anurag.shekhar@sun.com> branch nick: mysql-5.1-bugteam-windows-warning timestamp: Wed 2009-05-13 15:41:24 +0530 message: Bug #39802 On Windows, 32-bit time_t should be enforced This patch fixes compilation warning, ""conversion from 'time_t' to 'ulong', possible loss of data"". The fix is to typecast time_t to ulong before assigning it to ulong. Backported this from 6.0-bugteam tree. modified: storage/archive/ha_archive.cc storage/federated/ha_federated.cc storage/innobase/handler/ha_innodb.cc storage/myisam/ha_myisam.cc ------------------------------------------------------------------------ ------------------------------------------------------------------------ r5520 | vasil | 2009-07-20 04:51:47 -0400 (Mon, 20 Jul 2009) | 4 lines branches/zip: Add ChangeLog entries for r5498 and r5519. ------------------------------------------------------------------------ r5524 | inaam | 2009-07-20 12:23:15 -0400 (Mon, 20 Jul 2009) | 9 lines branches/zip Change the read ahead parameter name to innodb_read_ahead_threshold. Change the meaning of this parameter to signify the number of pages that must be sequentially accessed for InnoDB to trigger a readahead request. Suggested by: Ken ------------------------------------------------------------------------ "	0c990811dee00ace58d1436436db4832859d5ab5
----------------------------
branches/zip Change the read ahead parameter name to innodb_read_ahead_threshold. Change the meaning of this parameter to signify the number of pages that must be sequentially accessed for InnoDB to trigger a readahead request. Suggested by: Ken 	c34ab748cc799cef7f329af3f1979b2763492bdf
----------------------------
branches/zip: Make this file usable from within HotBackup. A new file has been introduced called hb_univ.i. This file should have all the HotBackup specific configuration. 	64b5315e62f9560930e708c672538abc99561488
----------------------------
branches/zip: Remove unused extern ref to timed_mutexes. 	940e1ef159d1c1368a1ca4b6d78247bbffe9cbc1
----------------------------
"Bug #45700 MTR v1 --start-and-exit --default-storage-engine=Innodb is froken Change of variable states in Bug 19027 was not backported to v1 Changed ne ""TRUE"" to eq ""OFF"" "	53e14eaa0aab03020b7ae268e3a45d03ab6d7ac0
----------------------------
post-push fixes for BUG#39934: make mysqldump.test pass even with binlog_format = MIXED or ROW. 	a14adb8773e8fb02b2e6f1066281aed76ac5cebb
----------------------------
"A fix for Bug#44495 ""Prepared Statement: CALL p(<x>) - `thd->protocol == &thd->protocol_text' failed"" Do not assume that SQL prepared statements always run in text protocol. When invoked from a stored procedure, which is itself invoked by means of prepared CALL statement, the protocol may be binary. Juggle with the protocol only when we want to change it to binary in COM_STMT_EXECUTE, COM_STMT_PREPARE. This is a backport from 5.4/6.0, where the bug was fixed as part of WL#4264 ""Backup: Stabilize Service Interface"" "	e601194cf75f20db6b102a917ab7e9da8913ca7b
----------------------------
"Bug #43005 main.init_connect fais on Windows in PB2 Server args containing spaces do not work on Windows Fixed my_safe_rprocess-win to re-apply """" around such args "	8d6a25a23f8d3453a2d729b79553a5b64a7c4b40
----------------------------
BUG#39934: Slave stops for engine that only support row-based logging General overview: The logic for switching to row format when binlog_format=MIXED had numerous flaws. The underlying problem was the lack of a consistent architecture. General purpose of this changeset: This changeset introduces an architecture for switching to row format when binlog_format=MIXED. It enforces the architecture where it has to. It leaves some bugs to be fixed later. It adds extensive tests to verify that unsafe statements work as expected and that appropriate errors are produced by problems with the selection of binlog format. It was not practical to split this into smaller pieces of work. Problem 1: To determine the logging mode, the code has to take several parameters into account (namely: (1) the value of binlog_format; (2) the capabilities of the engines; (3) the type of the current statement: normal, unsafe, or row injection). These parameters may conflict in several ways, namely: - binlog_format=STATEMENT for a row injection - binlog_format=STATEMENT for an unsafe statement - binlog_format=STATEMENT for an engine only supporting row logging - binlog_format=ROW for an engine only supporting statement logging - statement is unsafe and engine does not support row logging - row injection in a table that does not support statement logging - statement modifies one table that does not support row logging and one that does not support statement logging Several of these conflicts were not detected, or were detected with an inappropriate error message. The problem of BUG#39934 was that no appropriate error message was written for the case when an engine only supporting row logging executed a row injection with binlog_format=ROW. However, all above cases must be handled. Fix 1: Introduce new error codes (sql/share/errmsg.txt). Ensure that all conditions are detected and handled in decide_logging_format() Problem 2: The binlog format shall be determined once per statement, in decide_logging_format(). It shall not be changed before or after that. Before decide_logging_format() is called, all information necessary to determine the logging format must be available. This principle ensures that all unsafe statements are handled in a consistent way. However, this principle is not followed: thd->set_current_stmt_binlog_row_based_if_mixed() is called in several places, including from code executing UPDATE..LIMIT, INSERT..SELECT..LIMIT, DELETE..LIMIT, INSERT DELAYED, and SET @@binlog_format. After Problem 1 was fixed, that caused inconsistencies where these unsafe statements would not print the appropriate warnings or errors for some of the conflicts. Fix 2: Remove calls to THD::set_current_stmt_binlog_row_based_if_mixed() from code executed after decide_logging_format(). Compensate by calling the set_current_stmt_unsafe() at parse time. This way, all unsafe statements are detected by decide_logging_format(). Problem 3: INSERT DELAYED is not unsafe: it is logged in statement format even if binlog_format=MIXED, and no warning is printed even if binlog_format=STATEMENT. This is BUG#45825. Fix 3: Made INSERT DELAYED set itself to unsafe at parse time. This allows decide_logging_format() to detect that a warning should be printed or the binlog_format changed. Problem 4: LIMIT clause were not marked as unsafe when executed inside stored functions/triggers/views/prepared statements. This is BUG#45785. Fix 4: Make statements containing the LIMIT clause marked as unsafe at parse time, instead of at execution time. This allows propagating unsafe-ness to the view. 	f3985c649d65c2d932a6f74d22de3d2e6624d525
----------------------------
"branches/zip: Merge r5341:5497 from branches/5.1, skipping: c5419 because it is merge from branches/zip into branches/5.1 c5466 because the source code has been adjusted to match the MySQL behavior and the innodb-autoinc test does not fail in branches/zip, if c5466 is merged, then innodb-autoinc starts failing, Sunny suggested not to merge c5466. and resolving conflicts in c5410, c5440, c5488: ------------------------------------------------------------------------ r5410 | marko | 2009-06-24 22:26:34 +0300 (Wed, 24 Jun 2009) | 2 lines Changed paths: M /branches/5.1/include/trx0sys.ic M /branches/5.1/trx/trx0purge.c M /branches/5.1/trx/trx0sys.c M /branches/5.1/trx/trx0undo.c branches/5.1: Add missing #include ""mtr0log.h"" to avoid warnings when compiling with -DUNIV_MUST_NOT_INLINE. ------------------------------------------------------------------------ r5419 | marko | 2009-06-25 16:11:57 +0300 (Thu, 25 Jun 2009) | 18 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/mysql-test/innodb_bug42101-nonzero.result M /branches/5.1/mysql-test/innodb_bug42101-nonzero.test M /branches/5.1/mysql-test/innodb_bug42101.result M /branches/5.1/mysql-test/innodb_bug42101.test branches/5.1: Merge r5418 from branches/zip: ------------------------------------------------------------------------ r5418 | marko | 2009-06-25 15:55:52 +0300 (Thu, 25 Jun 2009) | 5 lines Changed paths: M /branches/zip/ChangeLog M /branches/zip/handler/ha_innodb.cc M /branches/zip/mysql-test/innodb_bug42101-nonzero.result M /branches/zip/mysql-test/innodb_bug42101-nonzero.test M /branches/zip/mysql-test/innodb_bug42101.result M /branches/zip/mysql-test/innodb_bug42101.test branches/zip: Fix a race condition caused by SET GLOBAL innodb_commit_concurrency=DEFAULT. (Bug #45749) When innodb_commit_concurrency is initially set nonzero, DEFAULT would change it back to 0, triggering Bug #42101. rb://139 approved by Heikki Tuuri. ------------------------------------------------------------------------ ------------------------------------------------------------------------ r5440 | vasil | 2009-06-30 13:04:29 +0300 (Tue, 30 Jun 2009) | 8 lines Changed paths: M /branches/5.1/fil/fil0fil.c branches/5.1: Fix Bug#45814 URL reference in InnoDB server errors needs adjusting to match documentation by changing the URL from http://dev.mysql.com/doc/refman/5.1/en/innodb-troubleshooting.html to http://dev.mysql.com/doc/refman/5.1/en/innodb-troubleshooting-datadict.html ------------------------------------------------------------------------ r5466 | vasil | 2009-07-02 10:46:45 +0300 (Thu, 02 Jul 2009) | 6 lines Changed paths: M /branches/5.1/mysql-test/innodb-autoinc.result M /branches/5.1/mysql-test/innodb-autoinc.test branches/5.1: Adjust the failing innodb-autoinc test to conform to the latest behavior of the MySQL code. The idea and the comment in innodb-autoinc.test come from Sunny. ------------------------------------------------------------------------ r5488 | vasil | 2009-07-09 19:16:44 +0300 (Thu, 09 Jul 2009) | 13 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc A /branches/5.1/mysql-test/innodb_bug21704.result A /branches/5.1/mysql-test/innodb_bug21704.test branches/5.1: Fix Bug#21704 Renaming column does not update FK definition by checking whether a column that participates in a FK definition is being renamed and denying the ALTER in this case. The patch was originally developed by Davi Arnaut <Davi.Arnaut@Sun.COM>: http://lists.mysql.com/commits/77714 and was later adjusted to conform to InnoDB coding style by me (Vasil), I also added some more comments and moved the bug specific mysql-test to a separate file to make it more manageable and flexible. ------------------------------------------------------------------------ "	8d57fae29c1bc599519eb91d29699d535d0168df
----------------------------
branches/zip: Restore the original value of innodb_sync_spin_loops at the end, previously the test assumed that setting it to 20 will do this, but now the default is 30 and MTR's internal check failed. 	f1f529dd6dad665f07cef17606ba9db945f9e319
----------------------------
Bug #46080: group_concat(... order by) crashes server when sort_buffer_size cannot allocate The NULL return from tree_insert() (on low memory) was not checked for in Item_func_group_concat::add(). As a result on low memory conditions a crash happens. Fixed by properly checking the return code. 	5a6809590c02a0bf851c8e6b89fd3fcabfecbca1
----------------------------
Applying InnoDB snapshot 5.1-ss5488,part 2. Fixes BUG#45749 BUG#45749 - Race condition in SET GLOBAL innodb_commit_concurrency=DEFAULT Detailed revision comments: r5419 | marko | 2009-06-25 16:11:57 +0300 (Thu, 25 Jun 2009) | 18 lines branches/5.1: Merge r5418 from branches/zip: ------------------------------------------------------------------------ r5418 | marko | 2009-06-25 15:55:52 +0300 (Thu, 25 Jun 2009) | 5 lines Changed paths: M /branches/zip/ChangeLog M /branches/zip/handler/ha_innodb.cc M /branches/zip/mysql-test/innodb_bug42101-nonzero.result M /branches/zip/mysql-test/innodb_bug42101-nonzero.test M /branches/zip/mysql-test/innodb_bug42101.result M /branches/zip/mysql-test/innodb_bug42101.test branches/zip: Fix a race condition caused by SET GLOBAL innodb_commit_concurrency=DEFAULT. (Bug #45749) When innodb_commit_concurrency is initially set nonzero, DEFAULT would change it back to 0, triggering Bug #42101. rb://139 approved by Heikki Tuuri. ------------------------------------------------------------------------ 	1a40d4cd5eef1b7c3cb5d6a0d608cfd03c71a18d
----------------------------
branches/zip: Change the defaults for innodb_sync_spin_loops: 20 -> 30 innodb_spin_wait_delay: 5 -> 6 This change was proposed by Sun/MySQL based on their performance testing, see https://svn.innodb.com/innobase/Release_tasks_for_InnoDB_Plugin_V1.0.4 	95a9790ceb4308d98afa3b0cfe4f7f469b6b448d
----------------------------
branches/zip  rb://133 This patch introduces heuristics based flushing rate of dirty pages to avoid IO bursts at checkpoint. 1) log_capacity / log_generated per second gives us number of seconds in which ALL dirty pages need to be flushed. Based on this rough assumption we can say that n_dirty_pages / (log_capacity / log_generation_rate) = desired_flush_rate 2) We use weighted averages (hard coded to 20 seconds) of log_generation_rate to avoid resonance. 3) From the desired_flush_rate we subtract the number of pages that have been flushed due to LRU flushing. That gives us pages that we should flush as part of flush_list cleanup. And that is the number (capped by maximum io_capacity) that we try to flush from the master thread. Knobs: ====== innodb_adaptive_flushing: boolean, global, dynamic, default TRUE. Since this heuristic is very experimental and has the potential to dramatically change the IO pattern I think it is a good idea to leave a knob to turn it off. Approved by: Heikki 	43fceb74f215da67e014d320b05a797da90e45a3
----------------------------
branches/zip  rb://126 Based on contribution from Google Inc. This patch introduces a new parameter innodb_io_capacity to control the rate at which master threads performs various tasks. The default value is 200 and higher values imply more aggressive flushing and ibuf merges from within the master thread. This patch also changes the ibuf merge from synchronous to asynchronous. Another minor change is not to force the master thread to wait for a log flush to complete every second. Approved by: Heikki 	462111149c277f6a24551b76e1a2dd9db80ddad6
----------------------------
Bug #44115 purge_relay_logs doesn't return an error when count_relay_log_space fails purge_relay_logs() did not propagate an error happend in count_relay_log_space(). Fixed with the suggestesd setting the error= true. Note, propagation generally out of purge_relay_logs() was fixed for Bug #44179, and the issue does not exist in 6.0 thanks to a patch for WL#2775. 	ed5138aa6eb2bf31ebd7a87fae9e0cf6d9af25b0
----------------------------
BUG#44581 Slave stops when transaction with non-transactional table gets lock wait timeout In STMT and MIXED modes, a statement that changes both non-transactional and transactional tables must be written to the binary log whenever there are changes to non-transactional tables. This means that the statement gets into the binary log even when the changes to the transactional tables fail. In particular , in the presence of a failure such statement is annotated with the error number and wrapped in a begin/rollback. On the slave, while applying the statement, it is expected the same failure and the rollback prevents the transactional changes to be persisted. Unfortunately, statements that fail due to concurrency issues (e.g. deadlocks, timeouts) are logged in the same way causing the slave to stop as the statements are applied sequentially by the SQL Thread. To fix this bug, we automatically ignore concurrency failures on the slave. Specifically, the following failures are ignored: ER_LOCK_WAIT_TIMEOUT, ER_LOCK_DEADLOCK and ER_XA_RBDEADLOCK. 	508fe9dd15ff28ed0d692c00e87d0b6836ea4836
----------------------------
Set minimum table_open_cache and table_default_cache to 400 	16e0a9b8cbdd6906e1ae7477c65cd74377d5af65
----------------------------
Bug #45807: crash accessing partitioned table and sql_mode contains ONLY_FULL_GROUP_BY The partitioning code needs to issue a Item::fix_fields() on the partitioning expression in order to prepare it for being evaluated. It does this by creating a special table and a table list for the scope of the partitioning expression. But when checking ONLY_FULL_GROUP_BY the Item_field::fix_fields() was relying that there always be cached_table set and was trying to use it to get the select_lex of the SELECT the field's table is in. But the cached_table was not set by the partitioning code that creates the artificial TABLE_LIST used to resolve the partitioning expression and this resulted in a crash. Fixed by rectifying the following errors : 1. Item_field::fix_fields() : the code that check for ONLY_FULL_GROUP_BY relies on having tables with cacheable_table set. This is mostly true, the only two exceptions being the partitioning context table and the trigger context table. Fixed by taking the current parsing context if no pointer to the TABLE_LIST instance is present in the cached_table. 2. fix_fields_part_func() : 2a. The code that adds the table being created to the scope for the partitioning expression is mostly a copy of the add_table_to_list and friends with one exception : it was not marking the table as cacheable (something that normal add_table_to_list is doing). This caused the problem in the check for ONLY_FULL_GROUP_BY in Item_field::fix_fields() to appear. Fixed by setting the correct members to make the table cacheable. The ideal structural fix for this is to use a unified interface for adding a table to a table list (add_table_to_list?) : noted in a TODO comment 2b. The Item::fix_fields() was called with a NULL destination pointer. This causes uninitalized memory reads in the overloaded ::fix_fields() function (namely Item_field::fix_fields()) as it expects a non-zero pointer there. Fixed by passing the source pointer similarly to how it's done in JOIN::prepare(). 	5572f8e7de8882c8f8412ce0ede07ed0f44b5ed2
----------------------------
"Fix for Bug#45902 rpl_sp fails sporadically in check testcases Details: - Add ""sync_slave_with_master"" at test end - Restore the initial value of log_bin_trust_function_creators "	90c97d7ccc7d3a499f8bda04f38e56ba3c951b2b
----------------------------
Bug #45790 Potential DoS vector: Writing of user input to log without proper formatting The problem is that a suitably crafted database identifier supplied to COM_CREATE_DB or COM_DROP_DB can cause a SIGSEGV, and thereby a denial of service. The database name is printed to the log without using a format string, so potential attackers can control the behavior of my_b_vprintf() by supplying their own format string. A CREATE or DROP privilege would be required. This patch supplies a format string to the printing of the database name. A test case is added to mysql_client_test. 	490f443221108903d497b387bc8a16029b83601c
----------------------------
branches/zip: Do not crash on SET GLOBAL innodb_file_format=DEFAULT or SET GLOBAL innodb_file_format_check=DEFAULT. innodb_file_format.test: New test for innodb_file_format and innodb_file_format_check. innodb_file_format_name_validate(): Store the string in *save. innodb_file_format_name_update(): Check the string again. innodb_file_format_check_validate(): Store the string in *save. innodb_file_format_check_update(): Check the string again. Issue #282, rb://140 approved by Heikki Tuuri 	6bfbdb2d0d9ca228cabb1b969c1d1eb09882b544
----------------------------
branches/5.1: Merge r5418 from branches/zip: ------------------------------------------------------------------------ r5418 | marko | 2009-06-25 15:55:52 +0300 (Thu, 25 Jun 2009) | 5 lines Changed paths: M /branches/zip/ChangeLog M /branches/zip/handler/ha_innodb.cc M /branches/zip/mysql-test/innodb_bug42101-nonzero.result M /branches/zip/mysql-test/innodb_bug42101-nonzero.test M /branches/zip/mysql-test/innodb_bug42101.result M /branches/zip/mysql-test/innodb_bug42101.test branches/zip: Fix a race condition caused by SET GLOBAL innodb_commit_concurrency=DEFAULT. (Bug #45749) When innodb_commit_concurrency is initially set nonzero, DEFAULT would change it back to 0, triggering Bug #42101. rb://139 approved by Heikki Tuuri. ------------------------------------------------------------------------ 	274dd54952b97a10314d7536e38f5c0f70e969fc
----------------------------
branches/zip: Fix a race condition caused by SET GLOBAL innodb_commit_concurrency=DEFAULT. (Bug #45749) When innodb_commit_concurrency is initially set nonzero, DEFAULT would change it back to 0, triggering Bug #42101. rb://139 approved by Heikki Tuuri. 	bb0e1c34dfd642ede4dd3cbfca8bbeabbe25d403
----------------------------
Bug#45485 replication different between master/slaver using procedure with gbk In Item_param::set_from_user_var value.cs_info.character_set_client is set to 'fromcs' value. It's wrong, it should be set to thd->variables.character_set_client. 	2c53a70e1563a8c79262e7561ee3a33be6a01e01
----------------------------
Backport into build-200906240007-5.1.34sp1 > ------------------------------------------------------------ > revno: 2871.4.1 > revision-id: vvaintroub@mysql.com-20090429115110-1ye4700m8it5tyc5 > parent: staale.smedseng@sun.com-20090428161955-3vnku1igwt0knpfu > committer: Vladislav Vaintroub <vvaintroub@mysql.com> > branch nick: mysql-5.1-bugteam > timestamp: Wed 2009-04-29 13:51:10 +0200 > message: >   Bug#43932 myisam index corruption with large index and large >   key_buffer_size. > >   The cause of corruption was number overflow when multiplying >   two ulong values, number of used keycache blocks with size >   of a single block. The result of multiplication exceeded ulong >   range (4G) and this lead to incorrectly calculated  buffer offset >   in the key cache. > >   The fix is to use size_t for multiplication result. > >   This patch also fixes pointless cast in safemalloc >   (size of allocated block to uint), that creates lot of false >   alarm warnings when using big keycache (> 4GB) in debug mode. 	2079763d5c8d4e87becb4bf5c66b9ecb2274e208
----------------------------
"Backport into build-200906240007-5.1.34sp1 > ------------------------------------------------------------ > revno: 2857.1.1 > revision-id: satya.bn@sun.com-20090415114608-26b21dtx3doeidcc > parent: davi.arnaut@sun.com-20090414120532-9a34lwlk105z8log > committer: Satya B <satya.bn@sun.com> > branch nick: mysql-5.1-bugteam-innodb > timestamp: Wed 2009-04-15 17:16:08 +0530 > message: >   Applying InnoDB snashot 5.1-ss4699, part 1. Fixes BUG#39320 and other >   problems > >   1) BUG#39320 - innodb crash in file btr/btr0pcur.c line 217 with >                  innodb_locks_unsafe_for_binlog > >   2) Fixes bug in multi-table semi consistent reads. > >   3) Fixes email address from dev@innodb.com to innodb_dev_ww@oracle.com > >   4) Fixes warning message generated by main.innodb test > > >   Detailed revision comments: > >   r4399 | marko | 2009-03-12 09:38:05 +0200 (Thu, 12 Mar 2009) | 5 lines >   branches/5.1: row_sel_get_clust_rec_for_mysql(): Store the cursor position >   also for unlock_row().  (Bug #39320) > >   rb://96 approved by Heikki Tuuri. > >   r4400 | marko | 2009-03-12 10:06:44 +0200 (Thu, 12 Mar 2009) | 8 lines >   branches/5.1: Fix a bug in multi-table semi-consistent reads. >   Remember the acquired record locks per table handle (row_prebuilt_t) >   rather than per transaction (trx_t), so that unlock_row should successfully >   unlock all non-matching rows in multi-table operations. >   This deficiency was found while investigating Bug #39320. > >   rb://94 approved by Heikki Tuuri. > >   r4481 | marko | 2009-03-19 15:01:48 +0200 (Thu, 19 Mar 2009) | 6 lines >   branches/5.1: row_unlock_for_mysql(): Do not unlock records that were >   modified by the current transaction.  This bug was introduced or unmasked >   in r4400. > >   rb://97 approved by Heikki Tuuri > >   r4573 | vasil | 2009-03-30 14:17:13 +0300 (Mon, 30 Mar 2009) | 4 lines >   branches/5.1: > >   Fix email address from dev@innodb.com to innodb_dev_ww@oracle.com > >   r4574 | vasil | 2009-03-30 14:27:08 +0300 (Mon, 30 Mar 2009) | 38 lines >   branches/5.1: > >   Restore the state of INNODB_THREAD_CONCURRENCY to silence this warning: > >     TEST                                      RESULT   TIME (ms) >     ------------------------------------------------------------ > >     worker[1] Using MTR_BUILD_THREAD 250, with reserved ports 12500..12509 >     main.innodb                              [ pass ]   8803 > >     MTR's internal check of the test case 'main.innodb' failed. >     This means that the test case does not preserve the state that existed >     before the test case was executed.  Most likely the test case did not >     do a proper clean-up. >     This is the diff of the states of the servers before and after the >     test case was executed: >     mysqltest: Logging to '/tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.log'. >     mysqltest: Results saved in '/tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.result'. >     mysqltest: Connecting to server localhost:12500 (socket /tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/mysqld.1.sock) as 'root', connection 'default', attempt 0 ... >     mysqltest: ... Connected. >     mysqltest: Start processing test commands from './include/check-testcase.test' ... >     mysqltest: ... Done processing test commands. >     --- /tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.result	2009-03-30 14:12:31.000000000 +0300 >     +++ /tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.reject	2009-03-30 14:12:41.000000000 +0300 >     @@ -99,7 +99,7 @@ >      INNODB_SUPPORT_XA	ON >      INNODB_SYNC_SPIN_LOOPS	20 >      INNODB_TABLE_LOCKS	ON >     -INNODB_THREAD_CONCURRENCY	8 >     +INNODB_THREAD_CONCURRENCY	16 >      INNODB_THREAD_SLEEP_DELAY	10000 >      INSERT_ID	0 >      INTERACTIVE_TIMEOUT	28800 > >     mysqltest: Result content mismatch > >     not ok > >   r4576 | vasil | 2009-03-30 16:25:10 +0300 (Mon, 30 Mar 2009) | 4 lines >   branches/5.1: > >   Revert a change to Makefile.am that I committed accidentally in c4574. "	027cd1d438baf57ccc2aff46b1f9c8563e0e7fe3
----------------------------
ndb - skip-grant-tables for autotest upgrade tests (started failing after last 5.1-mainline merge) 	f21767b14cf7c0a8ad91aa66db9ce06316705ade
----------------------------
Bug #38240 Crash in safe_mutex_lock () thr_mutex.c line 97 on rotate_relay_log The reason for the crash was rotate_relay_log (mi=0x0) did not verify the passed value of active_mi.  There are more cases where active_mi is supposed to be non-zero e.g change_master(), stop_slave(), and it's reasonable to protect from a similar crash all of them with common fixes. Fixed with spliting end_slave() in slave threads release and slave data clean-up parts (a new close_active_mi()). The new function is invoked at the very end of close_connections() so that all users of active_mi are proven to have left. 	0ecf826a863891312c9b3aa84ccc9a7b781a795a
----------------------------
Bug #45309: InnoDB does not rollback for delete and update queries if query was killed Since we rely on thd->is_error() to decide whether we should COMMIT or ROLLBACK after a query execution, check the query 'killed' state and throw an error before calling ha_autocommit_or_rollback(), not after. The patch was tested manually. For reliable results, the test case would have to KILL QUERY while a DELETE/UPDATE query in another thread is still running. I don't see a way to achieve this kind of synchronization in our test suite (no debug_sync in 5.1). 	3625c1e1579be1d6a79daf134b41bc2bb121cd18
----------------------------
Bug #43780 mysql-test-run uses deprecated server options Updated to use general_log[_file] and slow_query_log[_file] 	63910fc2a04baf6376578af6e758037b827cca4e
----------------------------
ndb - initial checkin of configure checks for java stuff needed for ndb-jtie 	0feb56c42599d80fb2195bf7bfadc69592ea6c4c
----------------------------
BUG#42721 configure.in invokes 'nm' directly A hardcoded use of nm and libc was put into configure.in. This broke cross-compiling and is bad practice. Fitting variables now used. 	77fb9608a975ada6ec44d7dfb875967ecdac06a6
----------------------------
Bug #36654: mysqld_multi cannot start instances with different versions occasionally. mysql_multi can call mysqld_safe. In doing this it's not changing the current working directory. This may cause confusion in the case where mysqld_multi is handling instances of servers of different versions and the current working directory is the installation directory of one of these servers. Fixed by enhancing the meaning of basedir in [mysqldN] sections of mysqld_multi. If specified, mysqld_multi will change the current working directory to the basedir directory before starting the server in mysqld_multi ... start ... and then change it back to what it was. 	c5d904ebbe274453a39f145522d6af9a792f61e7
----------------------------
Bug #32223 SETting max_allowed_packet variable Inconsistent behavior of session variable max_allowed_packet (and net_buffer_length); only assignment to the global variable has any effect, without this being obvious to the user. The patch for Bug#22891 is backported to 5.0, making the two session variables read-only. As this is a backport to GA software, the error used when trying to assign to the read- only variable is ER_UNKNOWN_ERROR. The error message is the same as in 5.1+. 	2b48caa42dc69a802598dcf165226c98434c9598
----------------------------
BUG#43929 binlog corruption when max_binlog_cache_size is exceeded Large transactions and statements may corrupt the binary log if the size of the cache, which is set by the max_binlog_cache_size, is not enough to store the the changes. In a nutshell, to fix the bug, we save the position of the next character in the cache before starting processing a statement. If there is a problem, we simply restore the position thus removing any effect of the statement from the cache. Unfortunately, to avoid corrupting the binary log, we may end up loosing changes on non-transactional tables if they do not fit in the cache. In such cases, we store an Incident_log_event in order to stop the slave and alert users that some changes were not logged. Precisely, for every non-transactional changes that do not fit into the cache, we do the following: a) the statement is *not* logged b) an incident event is logged after committing/rolling back the transaction, if any. Note that if a failure happens before writing the incident event to the binary log, the slave will not stop and the master will not have reported any error. c) its respective statement gives an error For transactional changes that do not fit into the cache, we do the following: a) the statement is *not* logged b) its respective statement gives an error To work properly, this patch requires two additional things. Firstly, callers to MYSQL_BIN_LOG::write and THD::binlog_query must handle any error returned and take the appropriate actions such as undoing the effects of a statement. We already changed some calls in the sql_insert.cc, sql_update.cc and sql_insert.cc modules but the remaining calls spread all over the code should be handled in BUG#37148. Secondly, statements must be either classified as DDL or DML because DDLs that do not get into the cache must generate an incident event since they cannot be rolled back. 	ac1b464a3320a1faa59bc3f1f8e7b466dfb733f7
----------------------------
branches/zip: innodb.test: Adjust the tolerance of innodb_buffer_pool_pages_total for r5320. 	3f44960223d9e2002494e4ff2f3290b450c92a66
----------------------------
Bug #44810: index merge and order by with low sort_buffer_size crashes server! The problem affects the scenario when index merge is followed by a filesort and the sort buffer is not big enough for all the sort keys. In this case the filesort function will read the data to the end through the index merge quick access method (and thus closing the cursor etc), but will leave the pointer to the quick select method in place. It will then create a temporary file to hold the results of the filesort and will add it as a sort output file (in sort.io_cache). Note that filesort will copy the original 'sort' structure in an automatic variable and restore it after it's done. As a result at exiting filesort() we have a sort.io_cache filled in and nothing else (as a result of close of the cursors at end of reading data through index merge). Now create_sort_index() will note that there is a select and will clean it up (as it's been used already by filesort() reading the data in). While doing that a special case in the index merge destructor will clean up the sort.io_cache, assuming it's an output of the index merge method and is not needed anymore. As a result the code that tries to read the data back from the filesort output will get no data in both memory and disk and will crash. Fixed similarly to how filesort() does it : by copying the sort.io_cache structure to a local variable, removing the pointer to the io_cache (so that it's not freed by QUICK_INDEX_MERGE_SELECT::~QUICK_INDEX_MERGE_SELECT) and restoring the original structure (together with the valid pointer) after the cleanup is done. This is a safe thing to do because all the structures are already cleaned up by hitting the end of the index merge's read method (QUICK_INDEX_MERGE_SELECT::get_next()) and the cleanup code being written in a way that tolerates repeating cleanups. 	b1560b9f2f0c8d64e256a7305e066df161f8d10d
----------------------------
Bug#45100: Incomplete DROP USER in case of SQL_MODE = 'PAD_CHAR_TO_FULL_LENGTH' The SQL-mode PAD_CHAR_TO_FULL_LENGTH could prevent a DROP USER statement from privileges associated with the user being dropped. What ocurred was that reading from the User and Host fields of the tables tables_priv or columns_priv would yield values padded with spaces, causing a failure to match a specified user or host ('user' != 'user     '); The solution is to disregard the PAD_CHAR_TO_FULL_LENGTH mode when iterating over and matching values in the privileges tables for a DROP USER statement. 	1ad8016974bab985781041bd791f9f97a294d998
----------------------------
Bug#44920: MTR2 is not processing master.opt input properly on Windows Re-enabled tests main.init_connect and rpl.rpl_init_slave.test for non-Windows platforms. Please remove this code upon fixing the bug. 	8f2ff69434d5b821d1b952eb24e3d8fdb1d65a13
----------------------------
Removed legacy name for innodb_plugin SE, so --with[out]-innodb option doesn't affect innodb_plugin. Currently it works as following: * configure without relevant options producing two dynamic plugins * configure --with-plugin-innodb (or legacy --with-innodb) producing static standard InnoDB * configure --without-plugin-innodb (or legacy --without-innodb) disabling standard InnoDB * configure --with-plugin-innodb_plugin producing dynamic innodb_plugin * configure --without-plugin-innodb_plugin disabling innodb_plugin 	4adad43f75be353381881c7a5bb66a76e79f5db8
----------------------------
"Bug #44248  	Identifying nodes waited for from cluster log requires mental gymnastics. changed EventLogger to use new BaseString::getPrettyText() removed nodes2str() from ConfigManager.cpp and now use getPrettyText() "	8ccd4ff4239caecb35fe54819f191ac28cfa7ee2
----------------------------
Bug #45236: large blob inserts from mysqldump fail, possible memory issue ? The mysql command line client could misinterpret some character sequences as commands under some circumstances. The upper limit for internal readline buffer was raised to 1 GB (the same as for server's max_allowed_packet) so that any input line is processed by add_line() as a whole rather than in chunks. 	08410f34dd40835a00357529ea196dbabd0d6381
----------------------------
Remove assignments of the $MASTER_MYSOCK variable. This variable is defined by default and one should not do it directly as the socket variable is not available on Windows. 	20b938ec976f7cff6452c9f56b71d78dcd38e766
----------------------------
"branches/zip: Enable functionality to have multiple background io helper threads. This patch is based on percona contributions. More details about this patch will be written at: https://svn.innodb.com/innobase/MultipleBackgroundThreads The patch essentially does the following: expose following knobs: innodb_read_io_threads = [1 - 64] default 1 innodb_write_io_threads = [1 - 64] default 1 deprecate innodb_file_io_threads (this parameter was relevant only on windows) Internally it allows multiple segments for read and write IO request arrays where one thread works on one segement. Submitted by:	Inaam (rb://124) Approved by:	Heikki (rb://124) "	5d3b805292efaa4b3134208d1c7c6e85f07577b6
----------------------------
Bug#44798 MySQL engine crashes when creating stored procedures with execute_priv=N The crash happens because of uninitialized lex->ssl_cipher, lex->x509_subject, lex->x509_issuer variables. The fix is to add initialization of these variables for stored procedures&functions. 	1a1ffe7312d54247c4aa05bdedfd8fd15adf36a5
----------------------------
Followup Fix for BUG#10206 - InnoDB: Transaction requiring Max_BinLog_Cache_size > 4GB always rollsback. There is failure on pushbuild machines which are using old compilers complaining about ULLONG_MAX declaration. Changing this to ULONGLONG_MAX to solve the problem. 	e0beb7a93532fce98c74675b58d00f070490537a
----------------------------
"WL#4914  ArbitrationMethod=external - Add new configuration variable Arbitration that accepts Disabled, Default and WaitExternal - Implement WaitExternal which will wait for ArbitrationTimeout before continuing. During this time the ""external"" arbitrator should do it's job. - Add support for enum variables in config.ini "	bdf833d9f6941447b9b2e5534b81ffa5de5c46e0
----------------------------
BUG#43263 BEGIN skipped in some replicate-do-db cases BEGIN/COMMIT/ROLLBACK was subject to replication db rules, and caused the boundary of a transaction not recognized correctly when these queries were ignored by the rules. Fixed the problem by skipping replication db rules for these statements. 	c0fde0eda7e05e0c7f170c3cb353e7f38086fcfc
----------------------------
Bug #44638: mysql_upgrade, mysqlcheck output instance unclear Dump all connection-related arguments when running mysqlcheck from mysql_upgrade. No test case, since the output depends on the test suite configuration and platform. 	23c0cf38bf65d84a934f4a2755377241d50c1fb5
----------------------------
Bug#43940 64-bit windows myisamchk doesn't support key_buffer_size > 4G The fix is to allow myisamchk to use >4G key_buffer_size on win64 	7dc42f175f04adf379ac0cb35c09c39c8cd07640
----------------------------
"ndb - fix mtr ""check"" for rpl_heartbeat, where slave_net_timeout is not properly reset at end of test "	f0f9d1103e25deef94145411a2be36855a0b2b95
----------------------------
"branches/innodb+: Merge revisions 4660:5090 from branches/zip: ------------------------------------------------------------------------ r4670 | vasil | 2009-04-07 09:35:23 +0300 (Tue, 07 Apr 2009) | 11 lines branches/zip: Fix Bug#43660 SHOW INDEXES/ANALYZE does NOT update cardinality for indexes of InnoDB table by replacing the pseudo random number generator with a better one (LCG). This also fixes Mantis Issue#212. Approved by:	Heikki (rb://110) ------------------------------------------------------------------------ r4671 | vasil | 2009-04-07 09:37:31 +0300 (Tue, 07 Apr 2009) | 4 lines branches/zip: Add ChangeLog entry for r4670. ------------------------------------------------------------------------ r4673 | marko | 2009-04-07 15:45:28 +0300 (Tue, 07 Apr 2009) | 4 lines branches/zip: Allow in-place updates of UTF-8 CHAR columns from or to NULL in ROW_FORMAT=REDUNDANT. (Bug #44032) rb://107 approved by Heikki Tuuri. ------------------------------------------------------------------------ r4677 | marko | 2009-04-07 16:19:31 +0300 (Tue, 07 Apr 2009) | 1 line branches/zip: Adjust r4673 as in the merge to branches/6.0 -r4676. ------------------------------------------------------------------------ r4678 | inaam | 2009-04-07 18:45:37 +0300 (Tue, 07 Apr 2009) | 12 lines branches/zip Enable atomics on solaris (using the libc functions as defined in atomic.h) if GCC atomic builtins are not present. There still remains some work to be done (by Vasil?). This patch makes changes to plug.in to check pthread_t size and presence of atomic functions when running on solaris. The same has to become a part of the generated Makefile.in when we bake our source. Reviewed by: Heikki rb://106 ------------------------------------------------------------------------ r4687 | vasil | 2009-04-08 13:08:59 +0300 (Wed, 08 Apr 2009) | 4 lines branches/zip: Whitespace fixup in the ChangeLog ------------------------------------------------------------------------ r4688 | vasil | 2009-04-08 13:11:15 +0300 (Wed, 08 Apr 2009) | 4 lines branches/zip: Add ChangeLog entry for r4678. ------------------------------------------------------------------------ r4689 | marko | 2009-04-08 14:24:49 +0300 (Wed, 08 Apr 2009) | 5 lines branches/zip: Hide unnecessarily visible globals. dict_ind_redundant, dict_ind_compact: Declare these UNIV_INTERN. innodb_hton_ptr: Declare static.  We do not attempt to access the built-in InnoDB any more. trx_roll_savepoints_free(): Declare UNIV_INTERN. ------------------------------------------------------------------------ r4700 | calvin | 2009-04-11 00:37:10 +0300 (Sat, 11 Apr 2009) | 9 lines branches/zip: Rewrite CMakeLists.txt CMakeLists.txt is completely rewritten: - To replace the one written by mysql - Print out some useful information, such as system name, directory, generator used, win64, Microsoft compiler, etc. - Remove one workaround for mysqld.lib location. User does not need to specify a build type ------------------------------------------------------------------------ r4702 | calvin | 2009-04-13 18:16:44 +0300 (Mon, 13 Apr 2009) | 3 lines branches/zip: delete the original CMakeLists.txt A new version will be committed, suggested by Ken. ------------------------------------------------------------------------ r4703 | calvin | 2009-04-13 18:20:45 +0300 (Mon, 13 Apr 2009) | 9 lines branches/zip: new CMakeLists.txt CMakeLists.txt is completely rewritten with enhancements: - Print out useful information, such as system name, directory, generator used, win64, Microsoft compiler, etc. - Remove one workaround for mysqld.lib location. User does not need to specify a build type when invoking MSVC generator. ------------------------------------------------------------------------ r4706 | vasil | 2009-04-14 14:32:11 +0300 (Tue, 14 Apr 2009) | 5 lines branches/zip: When using the random function, first take the modulus by the number of pages and then typecast to ulint. ------------------------------------------------------------------------ r4707 | calvin | 2009-04-14 17:47:31 +0300 (Tue, 14 Apr 2009) | 13 lines branches/zip: remove statically linked libraries from mysql To make zlib and strings dynamically linked; mysqld will export additional functions required by InnoDB. Since the symbols will be resolved dynamically during runtime, wdl_load_mapfile() is no longer able to make any function calls to ones in mysqld. As the result, strtoull() (from strings.lib) is replaced with _strtoui64(). rb://111 Approved by: Marko ------------------------------------------------------------------------ r4712 | vasil | 2009-04-15 12:26:32 +0300 (Wed, 15 Apr 2009) | 157 lines branches/zip: Merge revisions 4481:4710 from branches/5.1: (resolving conflict in r4574, r4575 and skipping r4699 and r4705 because analogous changes to r4699 and r4705 were already made to branches/zip) ------------------------------------------------------------------------ r4573 | vasil | 2009-03-30 14:17:13 +0300 (Mon, 30 Mar 2009) | 4 lines Changed paths: M /branches/5.1/mysql-test/innodb.test branches/5.1: Fix email address from dev@innodb.com to innodb_dev_ww@oracle.com ------------------------------------------------------------------------ r4574 | vasil | 2009-03-30 14:27:08 +0300 (Mon, 30 Mar 2009) | 38 lines Changed paths: M /branches/5.1/Makefile.am M /branches/5.1/mysql-test/innodb.test branches/5.1: Restore the state of INNODB_THREAD_CONCURRENCY to silence this warning: TEST                                      RESULT   TIME (ms) ------------------------------------------------------------ worker[1] Using MTR_BUILD_THREAD 250, with reserved ports 12500..12509 main.innodb                              [ pass ]   8803 MTR's internal check of the test case 'main.innodb' failed. This means that the test case does not preserve the state that existed before the test case was executed.  Most likely the test case did not do a proper clean-up. This is the diff of the states of the servers before and after the test case was executed: mysqltest: Logging to '/tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.log'. mysqltest: Results saved in '/tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.result'. mysqltest: Connecting to server localhost:12500 (socket /tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/mysqld.1.sock) as 'root', connection 'default', attempt 0 ... mysqltest: ... Connected. mysqltest: Start processing test commands from './include/check-testcase.test' ... mysqltest: ... Done processing test commands. --- /tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.result	2009-03-30 14:12:31.000000000 +0300 +++ /tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.reject	2009-03-30 14:12:41.000000000 +0300 @@ -99,7 +99,7 @@ INNODB_SUPPORT_XA	ON INNODB_SYNC_SPIN_LOOPS	20 INNODB_TABLE_LOCKS	ON -INNODB_THREAD_CONCURRENCY	8 +INNODB_THREAD_CONCURRENCY	16 INNODB_THREAD_SLEEP_DELAY	10000 INSERT_ID	0 INTERACTIVE_TIMEOUT	28800 mysqltest: Result content mismatch not ok ------------------------------------------------------------------------ r4575 | vasil | 2009-03-30 15:55:31 +0300 (Mon, 30 Mar 2009) | 8 lines Changed paths: M /branches/5.1/mysql-test/innodb.result M /branches/5.1/mysql-test/innodb.test branches/5.1: Fix Bug#43309 Test main.innodb can't be run twice Make the innodb mysql-test more flexible by inspecting how much a variable of interest has changed since the start of the test. Do not assume the variables have zero values at the start of the test. ------------------------------------------------------------------------ r4576 | vasil | 2009-03-30 16:25:10 +0300 (Mon, 30 Mar 2009) | 4 lines Changed paths: M /branches/5.1/Makefile.am branches/5.1: Revert a change to Makefile.am that I committed accidentally in c4574. ------------------------------------------------------------------------ r4659 | vasil | 2009-04-06 15:34:51 +0300 (Mon, 06 Apr 2009) | 6 lines Changed paths: M /branches/5.1/mysql-test/innodb.test branches/5.1: Followup to r4575 and the fix of Bug#43309 Test main.innodb can't be run twice: Add an explanatory comment, as suggested by Patrick Crews in the bug report. ------------------------------------------------------------------------ r4699 | vasil | 2009-04-09 14:01:52 +0300 (Thu, 09 Apr 2009) | 15 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/include/srv0srv.h M /branches/5.1/page/page0cur.c M /branches/5.1/srv/srv0srv.c branches/5.1: Fix Bug#43660 SHOW INDEXES/ANALYZE does NOT update cardinality for indexes of InnoDB table by replacing the PRNG that is used to pick random pages with a better one. This is based on r4670 but also adds a new configuration option and enables the fix only if this option is changed. Please skip the present revision when merging. Approved by:	Heikki (via email) ------------------------------------------------------------------------ r4705 | vasil | 2009-04-14 14:30:13 +0300 (Tue, 14 Apr 2009) | 5 lines Changed paths: M /branches/5.1/page/page0cur.c branches/5.1: When using the random function, first take the modulus by the number of pages and then typecast to ulint. ------------------------------------------------------------------------ r4710 | vasil | 2009-04-15 11:55:18 +0300 (Wed, 15 Apr 2009) | 25 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: Merge a change from MySQL (looks like this is against 5.0 but they later merged it to 5.1): ------------------------------------------------------------ revno: 1810.3846.1 committer: Alexey Botchkov <holyfoot@mysql.com> branch nick: 31435 timestamp: Tue 2008-11-11 14:42:32 +0400 message: Bug#31435 ha_innodb.cc:3983: ulint convert_search_mode_to_innobase(ha_rkey_function): Asse I think we don't need to issue an error statement in the convert_search_mode_to_innobase(). Returning the PAGE_CUR_UNSUPP value is enough as allows to handle this case depending on the requirements. per-file comments: sql/ha_innodb.cc Bug#31435 ha_innodb.cc:3983: ulint convert_search_mode_to_innobase(ha_rkey_function): Asse no error issued in convert_search_mode_to_innobase. ha_innobase::records_in_range() returns HA_POS_ERROR if search mode isn't supported. modified: sql/ha_innodb.cc ------------------------------------------------------------------------ ------------------------------------------------------------------------ r4713 | vasil | 2009-04-15 12:36:16 +0300 (Wed, 15 Apr 2009) | 4 lines branches/zip: Add missing ChangeLog entries ------------------------------------------------------------------------ r4714 | vasil | 2009-04-15 12:36:57 +0300 (Wed, 15 Apr 2009) | 4 lines branches/zip: Fix typo in the ChangeLog ------------------------------------------------------------------------ r4715 | vasil | 2009-04-15 12:39:04 +0300 (Wed, 15 Apr 2009) | 4 lines branches/zip: Whitespace cleanup in ChangeLog ------------------------------------------------------------------------ r4716 | vasil | 2009-04-15 21:36:06 +0300 (Wed, 15 Apr 2009) | 4 lines branches/zip: Add ChangeLog entry for r4543. ------------------------------------------------------------------------ r4717 | calvin | 2009-04-16 01:22:35 +0300 (Thu, 16 Apr 2009) | 18 lines branches/zip: Use the Windows Interlocked functions for atomic memory access Mapping the atomic operations to Windows Interlocked functions: os_compare_and_swap_* to InterlockedCompareExchange(64) os_atomic_increment_* to InterlockedExchangeAdd(64) os_atomic_test_and_set_byte to InterlockedExchange In this patch, the legacy code under UNIV_CAN_USE_X86_ASSEMBLER is removed all together, and add HAVE_WINDOWS_ATOMICS and INNODB_RW_LOCKS_USE_ATOMICS to CMakeLists.txt This is to address mantis issue#194. rb://113 Approved by: Marko ------------------------------------------------------------------------ r4720 | vasil | 2009-04-16 09:44:48 +0300 (Thu, 16 Apr 2009) | 4 lines branches/zip: Add ChangeLog entry for r4717. ------------------------------------------------------------------------ r4721 | marko | 2009-04-16 10:32:09 +0300 (Thu, 16 Apr 2009) | 2 lines branches/zip: row_scan_and_check_index(): Initialize prebuilt->index_usable. This should have been done in r4631.  Spotted by Michael. ------------------------------------------------------------------------ r4728 | marko | 2009-04-16 16:02:27 +0300 (Thu, 16 Apr 2009) | 3 lines branches/zip: univ.i: Define REFMAN as the base URL of the MySQL Reference Manual and use it in every string. This fixes Issue #221. ------------------------------------------------------------------------ r4733 | calvin | 2009-04-17 08:13:20 +0300 (Fri, 17 Apr 2009) | 6 lines branches/zip: minor changes to CMakeLists.txt All are non-functional changes: - should check for long (not int), spotted by Sunny - comment out the project definition, avoiding to generate another .sln file. ------------------------------------------------------------------------ r4748 | vasil | 2009-04-18 00:50:09 +0300 (Sat, 18 Apr 2009) | 118 lines branches/zip: Merge revisions 4710:4746 from branches/5.1: ------------------------------------------------------------------------ r4746 | vasil | 2009-04-18 00:32:08 +0300 (Sat, 18 Apr 2009) | 110 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/include/pars0pars.h branches/5.1: Merge a change from MySQL: ------------------------------------------------------------ revno: 2728.10.2 committer: Ignacio Galarza <iggy@mysql.com> branch nick: mysql-5.1-bugteam-bug29125 timestamp: Fri 2009-02-13 11:41:47 -0500 message: Bug#29125 Windows Server X64: so many compiler warnings - Remove bothersome warning messages.  This change focuses on the warnings that are covered by the ignore file: support-files/compiler_warnings.supp. - Strings are guaranteed to be max uint in length modified: client/mysql_upgrade.c client/mysqladmin.cc client/mysqlbinlog.cc client/mysqlcheck.c client/mysqldump.c client/mysqlslap.c client/mysqltest.cc client/sql_string.cc extra/comp_err.c extra/yassl/src/buffer.cpp extra/yassl/taocrypt/include/block.hpp extra/yassl/taocrypt/src/algebra.cpp extra/yassl/taocrypt/src/asn.cpp include/config-win.h libmysql/libmysql.c mysys/array.c mysys/base64.c mysys/charset.c mysys/checksum.c mysys/default.c mysys/default_modify.c mysys/hash.c mysys/mf_keycache.c mysys/mf_tempdir.c mysys/my_append.c mysys/my_compress.c mysys/my_conio.c mysys/my_copy.c mysys/my_getwd.c mysys/my_pread.c mysys/my_quick.c mysys/my_read.c mysys/safemalloc.c mysys/string.c server-tools/instance-manager/buffer.cc server-tools/instance-manager/instance.cc server-tools/instance-manager/options.cc server-tools/instance-manager/parse.h sql-common/client.c sql-common/my_user.c sql/event_data_objects.cc sql/event_parse_data.cc sql/events.cc sql/gen_lex_hash.cc sql/item.h sql/item_func.cc sql/item_strfunc.cc sql/item_timefunc.cc sql/lock.cc sql/log_event.cc sql/log_event.h sql/log_event_old.cc sql/net_serv.cc sql/sp_head.h sql/spatial.h sql/sql_class.h sql/sql_connect.cc sql/sql_crypt.cc sql/sql_error.cc sql/sql_insert.cc sql/sql_lex.cc sql/sql_lex.h sql/sql_load.cc sql/sql_prepare.cc sql/sql_profile.cc sql/sql_repl.cc sql/sql_servers.cc sql/sql_string.cc sql/sql_table.cc sql/sql_trigger.cc sql/sql_udf.cc sql/sql_view.cc sql/udf_example.c sql/uniques.cc storage/archive/azio.c storage/archive/azlib.h storage/csv/ha_tina.cc storage/csv/ha_tina.h storage/csv/transparent_file.h storage/federated/ha_federated.cc storage/federated/ha_federated.h storage/heap/hp_write.c storage/innobase/handler/ha_innodb.cc storage/innobase/include/pars0pars.h storage/myisam/ha_myisam.cc storage/myisam/mi_check.c storage/myisam/mi_packrec.c storage/myisam/mi_search.c storage/myisam/rt_index.c storage/myisammrg/ha_myisammrg.cc strings/ctype.c strings/my_vsnprintf.c tests/bug25714.c tests/mysql_client_test.c ------------------------------------------------------------------------ r4749 | vasil | 2009-04-18 00:58:08 +0300 (Sat, 18 Apr 2009) | 4 lines branches/zip: Add ChangeLog entry for t4748. ------------------------------------------------------------------------ r4751 | vasil | 2009-04-18 01:29:16 +0300 (Sat, 18 Apr 2009) | 4 lines branches/zip: Silence warning about unused variables. ------------------------------------------------------------------------ r4752 | vasil | 2009-04-18 01:30:37 +0300 (Sat, 18 Apr 2009) | 4 lines branches/zip: Include the needed header for memset(). ------------------------------------------------------------------------ r4753 | vasil | 2009-04-18 01:31:34 +0300 (Sat, 18 Apr 2009) | 4 lines branches/zip: Silence a compiler warning. ------------------------------------------------------------------------ r4756 | vasil | 2009-04-18 02:19:03 +0300 (Sat, 18 Apr 2009) | 5 lines branches/zip: Rename the aux config program and give it a more specific name because more are coming. ------------------------------------------------------------------------ r4757 | vasil | 2009-04-18 02:22:33 +0300 (Sat, 18 Apr 2009) | 4 lines branches/zip: Add comment and copyright notice to the aux config program. ------------------------------------------------------------------------ r4758 | vasil | 2009-04-18 02:40:47 +0300 (Sat, 18 Apr 2009) | 5 lines branches/zip: Add aux config programs to emulate the newly added checks in plug.in (from r4678). ------------------------------------------------------------------------ r4830 | marko | 2009-04-20 16:11:38 +0300 (Mon, 20 Apr 2009) | 6 lines branches/zip: Cosmetic fixes. row_unlock_for_mysql(): Add a const qualifier to read-only rec_t*. Use dict_index_is_clust(). CMakeLists.txt: svn propset svn:eol-style native. ------------------------------------------------------------------------ r4893 | marko | 2009-04-23 09:32:36 +0300 (Thu, 23 Apr 2009) | 11 lines branches/zip: Introduce the logical type names trx_id_t, roll_ptr_t, and undo_no_t. Each type is still defined as dulint. This is an initial step towards replacing dulint with a 64-bit data type. Because modern compilers have no trouble supporting 64-bit arithmetics even on 32-bit targets, the dulint struct is a relic that should go. The last remaining major use of dulint is dictionary IDs (table, index, and row ids). rb://114 approved by Sunny Bains ------------------------------------------------------------------------ r4894 | marko | 2009-04-23 10:21:07 +0300 (Thu, 23 Apr 2009) | 1 line branches/zip: ChangeLog: Document r4893. ------------------------------------------------------------------------ r4895 | marko | 2009-04-23 10:22:06 +0300 (Thu, 23 Apr 2009) | 1 line branches/zip: ChangeLog: Add the missing include/ to two files. ------------------------------------------------------------------------ r4896 | marko | 2009-04-23 10:37:40 +0300 (Thu, 23 Apr 2009) | 4 lines branches/zip: row_scan_and_check_index(): Improve the diagnostics, by reporting errors from row_search_for_mysql() in the error log. The errors will still be ignored by CHECK TABLE. This is somewhat related to Issue #211. ------------------------------------------------------------------------ r4897 | marko | 2009-04-23 10:40:34 +0300 (Thu, 23 Apr 2009) | 2 lines branches/zip: row_scan_and_check_index(): Check row_merge_is_index_usable() earlier, to make the logic clearer. ------------------------------------------------------------------------ r4898 | marko | 2009-04-23 15:15:07 +0300 (Thu, 23 Apr 2009) | 4 lines branches/zip: Correct a misleading comment.  PAGE_MAX_TRX_ID will be updated in ibuf_insert_low() and updated from the insert buffer tree page to the secondary index tree page during the insert buffer merge. ------------------------------------------------------------------------ r4915 | marko | 2009-04-27 13:40:20 +0300 (Mon, 27 Apr 2009) | 2 lines branches/zip: row_scan_and_check_index(): Add some comments on prebuilt->index_usable, as suggested by Michael. ------------------------------------------------------------------------ r4921 | marko | 2009-04-29 11:51:25 +0300 (Wed, 29 Apr 2009) | 2 lines branches/zip: btr_cur_optimistic_insert(): Remove a redundant condition. The insert buffer tree is a clustered index. ------------------------------------------------------------------------ r4922 | marko | 2009-04-29 23:23:27 +0300 (Wed, 29 Apr 2009) | 22 lines branches/zip: Distinguish temporary tables in MLOG_FILE_CREATE. This addresses Mantis Issue #23 in InnoDB Hot Backup and some of MySQL Bug #41609. In MLOG_FILE_CREATE, we need to distinguish temporary tables, so that InnoDB Hot Backup can work correctly.  It turns out that we can do this easily, by using a bit of the previously unused parameter for page number. (The page number parameter of MLOG_FILE_CREATE has been written as 0 ever since MySQL 4.1, which introduced MLOG_FILE_CREATE.) MLOG_FILE_FLAG_TEMP: A flag for indicating a temporary table in the page number parameter of MLOG_FILE_ operations. fil_op_write_log(): Add the parameter log_flags. fil_op_log_parse_or_replay(): Add the parameter log_flags. Do not replay MLOG_FILE_CREATE when MLOG_FILE_FLAG_TEMP is set in log_flags. This only affects ibbackup --apply-log.  InnoDB itself never replays file operations. rb://117 approved by Heikki Tuuri ------------------------------------------------------------------------ r4977 | marko | 2009-05-13 15:49:38 +0300 (Wed, 13 May 2009) | 12 lines branches/zip: Merge revisions 4746:4976 from branches/5.1: ------------------------------------------------------------------------ r4976 | marko | 2009-05-13 15:44:54 +0300 (Wed, 13 May 2009) | 6 lines branches/5.1: Display DB_ROLL_PTR in the COLUMNS section of the innodb_table_monitor output.  It was accidentally omitted due to an off-by-one loop condition.  (Bug #44320) rb://116 approved by Heikki Tuuri ------------------------------------------------------------------------ ------------------------------------------------------------------------ r4978 | vasil | 2009-05-13 16:21:55 +0300 (Wed, 13 May 2009) | 4 lines branches/zip: Add ChangeLog entry for r4977. ------------------------------------------------------------------------ r4995 | marko | 2009-05-14 15:31:43 +0300 (Thu, 14 May 2009) | 24 lines branches/zip: Merge revisions 4976:4994 from branches/5.1: ------------------------------------------------------------------------ r4994 | marko | 2009-05-14 15:04:55 +0300 (Thu, 14 May 2009) | 18 lines branches/5.1: Prevent a race condition in innobase_commit() by ensuring that innodb_commit_concurrency>0 remains constant at run time. (Bug #42101) srv_commit_concurrency: Make this a static variable in ha_innodb.cc. innobase_commit_concurrency_validate(): Check that innodb_commit_concurrency is not changed from or to 0 at run time.  This is needed, because innobase_commit() assumes that innodb_commit_concurrency>0 remains constant. Without this limitation, the checks for innodb_commit_concurrency>0 in innobase_commit() should be removed and that function would have to acquire and release commit_cond_m at least twice per invocation. Normally, innodb_commit_concurrency=0, and introducing the mutex operations would mean significant overhead. innodb_bug42101.test, innodb_bug42101-nonzero.test: Test cases. rb://123 approved by Heikki Tuuri ------------------------------------------------------------------------ ------------------------------------------------------------------------ r5000 | vasil | 2009-05-14 20:13:41 +0300 (Thu, 14 May 2009) | 4 lines branches/zip: Add ChangeLog entry for r4994. ------------------------------------------------------------------------ r5026 | marko | 2009-05-18 16:29:51 +0300 (Mon, 18 May 2009) | 1 line branches/zip: buf_validate(): Add missing out: comment. ------------------------------------------------------------------------ r5027 | marko | 2009-05-18 16:36:10 +0300 (Mon, 18 May 2009) | 1 line branches/zip: Add some missing out: comments to buf0buf.h, buf0buf.c. ------------------------------------------------------------------------ r5028 | marko | 2009-05-18 16:40:07 +0300 (Mon, 18 May 2009) | 11 lines branches/zip: When executing an optimistic update by delete-and-insert, correctly estimate the free space on the compressed page by page_zip_available(..., create=TRUE). This was reported as Issue #231. btr_cur_update_alloc_zip(): Add the parameter ibool create and pass it to page_zip_available(). The parameter was previously passed as 0. btr_cur_optimistic_update(): Pass create=TRUE to btr_cur_update_alloc_zip(). rb://120 approved by Heikki Tuuri ------------------------------------------------------------------------ r5030 | marko | 2009-05-19 10:04:04 +0300 (Tue, 19 May 2009) | 2 lines branches/zip: os_thread_get_curr_id(), os_thread_get_curr(): Add missing out: comments. ------------------------------------------------------------------------ r5031 | marko | 2009-05-19 10:30:02 +0300 (Tue, 19 May 2009) | 1 line branches/zip: Add missing out: comments to nullary functions. ------------------------------------------------------------------------ r5033 | marko | 2009-05-19 11:00:51 +0300 (Tue, 19 May 2009) | 1 line branches/zip: Remove bogus out: comments of functions returning void. ------------------------------------------------------------------------ r5034 | marko | 2009-05-19 12:41:32 +0300 (Tue, 19 May 2009) | 1 line branches/zip: row_update_prebuilt_trx(): Correct bogus comment. ------------------------------------------------------------------------ r5035 | marko | 2009-05-19 13:04:58 +0300 (Tue, 19 May 2009) | 3 lines branches/zip: ut0auxconf_have_solaris_atomics.c: Get the function declarations from <atomic.h>. Call the functions with proper arguments. ------------------------------------------------------------------------ r5036 | marko | 2009-05-19 13:05:50 +0300 (Tue, 19 May 2009) | 1 line branches/zip: Add proper comments to some file page accessors. ------------------------------------------------------------------------ r5037 | marko | 2009-05-19 13:08:16 +0300 (Tue, 19 May 2009) | 1 line branches/zip: Fix a typo that was introduced in r5036. ------------------------------------------------------------------------ r5038 | marko | 2009-05-19 22:59:07 +0300 (Tue, 19 May 2009) | 30 lines branches/zip: Write PAGE_MAX_TRX_ID to the redo log. Otherwise, transactions that are started before the rollback of incomplete transactions has finished may have an inconsistent view of the secondary indexes. dict_index_is_sec_or_ibuf(): Auxiliary function for controlling updates and checks of PAGE_MAX_TRX_ID: check whether an index is a secondary index or the insert buffer tree. page_set_max_trx_id(), page_update_max_trx_id(), lock_rec_insert_check_and_lock(), lock_sec_rec_modify_check_and_lock(), btr_cur_ins_lock_and_undo(), btr_cur_upd_lock_and_undo(): Add the parameter mtr. page_set_max_trx_id(): Allow mtr to be NULL.  When mtr==NULL, do not attempt to write to the redo log.  This only occurs when creating a page or reorganizing a compressed page.  In these cases, the PAGE_MAX_TRX_ID will be set correctly during the application of redo log records, even though there is no explicit log record about it. btr_discard_only_page_on_level(): Preserve PAGE_MAX_TRX_ID.  This function should be unreachable, though. btr_cur_pessimistic_update(): Update PAGE_MAX_TRX_ID. Add some assertions for checking that PAGE_MAX_TRX_ID is set on all secondary index leaf pages. rb://115 tested by Michael, fixes Issue #211 ------------------------------------------------------------------------ r5039 | marko | 2009-05-19 23:13:12 +0300 (Tue, 19 May 2009) | 1 line branches/zip: ib_wqueue_wait(): Add decorative comment. ------------------------------------------------------------------------ r5041 | marko | 2009-05-20 08:42:12 +0300 (Wed, 20 May 2009) | 1 line branches/zip: Add missing function comments. ------------------------------------------------------------------------ r5042 | marko | 2009-05-20 08:46:01 +0300 (Wed, 20 May 2009) | 1 line branches/zip: sync0rw.ic: Remove an extra ; that was added in r5041. ------------------------------------------------------------------------ r5044 | marko | 2009-05-20 11:11:58 +0300 (Wed, 20 May 2009) | 2 lines branches/zip: mlog_parse_index(): Correct a parameter comment and add a const qualifier that was missing. ------------------------------------------------------------------------ r5045 | marko | 2009-05-20 11:37:08 +0300 (Wed, 20 May 2009) | 1 line branches/zip: fil0fil.c: Correct some comments. ------------------------------------------------------------------------ r5046 | marko | 2009-05-20 12:19:40 +0300 (Wed, 20 May 2009) | 1 line branches/zip: Fix some function comments. ------------------------------------------------------------------------ r5047 | marko | 2009-05-20 12:26:49 +0300 (Wed, 20 May 2009) | 1 line branches/zip: ut_snprintf(): Fix the function comments. ------------------------------------------------------------------------ r5048 | marko | 2009-05-20 12:28:44 +0300 (Wed, 20 May 2009) | 3 lines branches/zip: inno_bcmp(): Remove this memcmp replacement. srv0start.c does not (any longer) call memcmp. srv_parse_megabytes(): Add a function comment. ------------------------------------------------------------------------ r5052 | marko | 2009-05-20 12:32:37 +0300 (Wed, 20 May 2009) | 1 line branches/zip: ib_vector_is_empty(): Fix the function comment. ------------------------------------------------------------------------ r5054 | marko | 2009-05-20 12:35:33 +0300 (Wed, 20 May 2009) | 1 line branches/zip: page_cur_lcg_prng(): Add missing parameter list. ------------------------------------------------------------------------ r5057 | marko | 2009-05-20 12:45:17 +0300 (Wed, 20 May 2009) | 1 line branches/zip: Remove bogus in: comments from struct members. ------------------------------------------------------------------------ r5058 | marko | 2009-05-20 13:06:03 +0300 (Wed, 20 May 2009) | 1 line branches/zip: Clean up some function comments. ------------------------------------------------------------------------ r5060 | marko | 2009-05-20 14:06:59 +0300 (Wed, 20 May 2009) | 1 line branches/zip: Clean up some comments. ------------------------------------------------------------------------ r5061 | marko | 2009-05-20 14:07:49 +0300 (Wed, 20 May 2009) | 2 lines branches/zip: innodb_export_status(): Remove the return(0), now that the function was declared void in r5060. ------------------------------------------------------------------------ r5062 | marko | 2009-05-20 14:45:03 +0300 (Wed, 20 May 2009) | 1 line branches/zip: ha_innodb.cc: Clean up some comments. ------------------------------------------------------------------------ r5063 | marko | 2009-05-20 16:10:17 +0300 (Wed, 20 May 2009) | 1 line branches/zip: ut_dulint_sort(): Write proper comments. ------------------------------------------------------------------------ r5064 | marko | 2009-05-20 16:17:26 +0300 (Wed, 20 May 2009) | 2 lines branches/zip: innobase_end(), innobase_flush_logs(): Document the function parameters. ------------------------------------------------------------------------ r5065 | marko | 2009-05-20 23:17:43 +0300 (Wed, 20 May 2009) | 1 line branches/zip: ha_innodb.cc: Add some missing function comments. ------------------------------------------------------------------------ r5066 | marko | 2009-05-21 00:51:23 +0300 (Thu, 21 May 2009) | 2 lines branches/zip: Fix some function comments. ------------------------------------------------------------------------ r5070 | vasil | 2009-05-21 08:27:00 +0300 (Thu, 21 May 2009) | 4 lines branches/zip: Whitespace fixup. ------------------------------------------------------------------------ "	509e761f06d6d7902bd5fdd0955447ed772af768
----------------------------
Bug#40465 - mysqldump.test does no checking of dump or restore Created new .test file - mysqldump_restore that does test restore from mysqldump output for a limited number of basic cases. Create new .inc file - mysqldump.inc - renames original table and uses mysqldump output to recreate the table, then uses diff_tables.inc to compare the two tables. Backported include/diff_tables.inc to facilitate this testing. New patch incorporating review feedback prior to push. mysqldump.test - removed redundant call to include/have_log_bin.inc (was used twice in the test!) 	6c31d59bf43d2d2d0b363a93f7acf2100a816a6a
----------------------------
Attempt #2 to fix PB failures introduced by the patch for bug #44796. Since max_allowed_packet is a read-only variable in 5.1 and up, disable warnings to avoid unnecessary test case complication. 	1341ab23474f5eca9e26d68dffaea836c8030530
----------------------------
Fixed a PB failure introduced by the patch for bug #44796. Set max_allowed_packet to get a consistent error message. 	6077086cb48eade26068867d57219935bb49b692
----------------------------
Bug#43974 ndb_mgmd: SIGSEGV in TransporterRegistry::updateWritePtr() when restarting nodes - Open the connection to other mgm nodes after sendbuffer has been created. The other mgm nodes are not allowed to connect during configure anyway. 	a5160c223497dc106eefe55a3722b2fdc98984d8
----------------------------
mysql_upgrade ignored the --basedir and --datadir arguments as it has no use for them, but it did so silently. (Bug #36558) 	eb1261502c361df2ae60713785068d45c1689cb2
----------------------------
Bug#44749 ndb_config --xml: hostname as valid key and MaxNoOfOpenFiles need fix - Revert the previous change of HostName to UNDEFINED 	4121a08b2fa204ba224496064045d14113d4c7c3
----------------------------
Bug#44685 ndb_config --xml does not give all section variants - Mark also FileSystemPathDD and FileSystemPathUndeFiles as CHECK_WRITABLE 	b032f3bbf7c926c05a7a54a7bd36b2ce1c7b8fe9
----------------------------
"Bug#44685 ndb_config --xml does not give all section variants - Fix merge to 7.0 - ""false"" is not valid as Uint32 "	32b8bf6c71282981724755148b32a1f6234b48ab
----------------------------
"Bug#44685 ndb_config --xml does not give all section variants - part 3 - Add new attribute ""flags"" to the list of configuration parameters - print the check=""writable"" tag if parameter has CI_CHECK_WRITABLE flag set "	6dcb78a1711459e913f4f3d16a9a6e61472c239b
----------------------------
Bug#44685 ndb_config --xml does not give all section variants - fix part2, the [<section> DEFAULT] should not have any primary keys since it belongs to all nodes. 	2c3523956063d78d1c827c7d029270ef4a64e981
----------------------------
Bug #44685 ndb_config --xml does not give all section variants - part 2 - generate values also for [<section> DEFAULT] sections 	f3f69060b2dedd47ec65fbbf3ebe5e063345bcf9
----------------------------
BUG#44685 ndb_config --xml does not give all section variants - part 1 - add primarykeys tag 	99452e1a72d9a814a66e624ac692d1f82f3c470e
----------------------------
Bug#19027 MySQL 5.0 starts even with Fatal InnoDB errors Fix bug in mtr_cases.pm script visible only when InnoDB isn't configured. 	0b608e98bb190244136c109ea31762d672e634cd
----------------------------
Fix for BUG#10206 - InnoDB: Transaction requiring Max_BinLog_Cache_size > 4GB always rollsback. The global variable max_binlog_cache_size cannot be set more than 4GB on 32 bit systems, limiting transactions of all storage engines to 4G of changes. The problem is max_binlog_cache_size is declared as ulong which is 4 bytes on 32 bit and 8 bytes on 64 bit machines. Fixed by using ulonglong for max_binlog_cache_size which is 8bytes on 32 and 64 bit machines.The range for max_binlog_cache_size on 32 bit and 64 bit systems is 4096-18446744073709547520 bytes. 	fe5121af677b6e1d7c5abc299e3506a323a197eb
----------------------------
"Bug#44866 dynamic ports no longer available in configuration - Moved the responsibilty of keeping the list of dynamic ports to ConfigManager, that way it can write the ports it now about to the config when a client asks for it. To avoid having to do that too many times the resulting ""packed config"" is now cached until the config is changed or a new dynamic port is set. - This also avoid the need to copy dynamic ports when config change, which means that BUG#44488 should be completely fixed now. "	cbcc264e5971542d992a3dc909c1026862a75389
----------------------------
Merge: 17c6fc2 d5fd4d4 Bugs #44871 and #43894: UNIX sockets need to be on a path shorter than 70 characters on some older platofrms. MTRv1 tries to fix this by moving the socket to the $TMPDIR, however this causes issues with certain tests on Windows. Fixed by not applying any hacks on Windows - Windows does not need them. 	1ae3d2ac68c7af9a431fee8177df13c319463544
----------------------------
Bugs #44871 and #43894: UNIX sockets need to be on a path shorter than 70 characters on some older platofrms. MTRv1 tries to fix this by moving the socket to the $TMPDIR, however this causes issues with certain tests on Windows. Fixed by not applying any hacks on Windows - Windows does not need them. 	d5fd4d4204ead23a3eed3c34df8684ef0c628b94
----------------------------
branches/zip: Merge revisions 4976:4994 from branches/5.1: ------------------------------------------------------------------------ r4994 | marko | 2009-05-14 15:04:55 +0300 (Thu, 14 May 2009) | 18 lines branches/5.1: Prevent a race condition in innobase_commit() by ensuring that innodb_commit_concurrency>0 remains constant at run time. (Bug #42101) srv_commit_concurrency: Make this a static variable in ha_innodb.cc. innobase_commit_concurrency_validate(): Check that innodb_commit_concurrency is not changed from or to 0 at run time.  This is needed, because innobase_commit() assumes that innodb_commit_concurrency>0 remains constant. Without this limitation, the checks for innodb_commit_concurrency>0 in innobase_commit() should be removed and that function would have to acquire and release commit_cond_m at least twice per invocation. Normally, innodb_commit_concurrency=0, and introducing the mutex operations would mean significant overhead. innodb_bug42101.test, innodb_bug42101-nonzero.test: Test cases. rb://123 approved by Heikki Tuuri ------------------------------------------------------------------------ 	bc48ebd87040add245124548d8ca16e8af92dfd9
----------------------------
branches/5.1: Prevent a race condition in innobase_commit() by ensuring that innodb_commit_concurrency>0 remains constant at run time. (Bug #42101) srv_commit_concurrency: Make this a static variable in ha_innodb.cc. innobase_commit_concurrency_validate(): Check that innodb_commit_concurrency is not changed from or to 0 at run time.  This is needed, because innobase_commit() assumes that innodb_commit_concurrency>0 remains constant. Without this limitation, the checks for innodb_commit_concurrency>0 in innobase_commit() should be removed and that function would have to acquire and release commit_cond_m at least twice per invocation. Normally, innodb_commit_concurrency=0, and introducing the mutex operations would mean significant overhead. innodb_bug42101.test, innodb_bug42101-nonzero.test: Test cases. rb://123 approved by Heikki Tuuri 	f1439b00db61fbef2b6a4f2aa59e41fb967b3f51
----------------------------
Bug#44488 ndb_mgmd is busy 4 min in startup (24 datanodes) - Part2, speed up diff of two configs by building a lookup table to be used when comparing the connections. This will avoid having to iterate the other config over and over again. 	d25f507a5a96f113cc2ad720697e740d643ccf41
----------------------------
"ndb_config - set category for event logger to ""ndb_config"" - decfine static functions same way as declaration "	415397cb91a4883d2f0bddf34b8371afcc73969e
----------------------------
Bug #44846  ndb_config should not read from my.cnf if specified config file can't be found - return from 'load_configuration' with NULL when no config loaded from config.ini 	e4f48b2fd6d67821897653ef24482f48804ac239
----------------------------
"Bug #44488  	ndb_mgmd is busy 4 min in startup (24 datanodes) - Part 1, expand the ConfigValues containter to aprox. right size before inserting the configuration into it. "	6d2a993c9fd4ccb0a200280a22640413644a72fd
----------------------------
Applying InnoDB snashot 5.1-ss5024,part 3. Fixes BUG#42101 BUG#42101 - Race condition in innodb_commit_concurrency Detailed revision comments: r4994 | marko | 2009-05-14 15:04:55 +0300 (Thu, 14 May 2009) | 18 lines branches/5.1: Prevent a race condition in innobase_commit() by ensuring that innodb_commit_concurrency>0 remains constant at run time. (Bug #42101) srv_commit_concurrency: Make this a static variable in ha_innodb.cc. innobase_commit_concurrency_validate(): Check that innodb_commit_concurrency is not changed from or to 0 at run time.  This is needed, because innobase_commit() assumes that innodb_commit_concurrency>0 remains constant. Without this limitation, the checks for innodb_commit_concurrency>0 in innobase_commit() should be removed and that function would have to acquire and release commit_cond_m at least twice per invocation. Normally, innodb_commit_concurrency=0, and introducing the mutex operations would mean significant overhead. innodb_bug42101.test, innodb_bug42101-nonzero.test: Test cases. rb://123 approved by Heikki Tuuri 	3ea0fd9d89da5498f82599d9dc6b84e79d7f9fe3
----------------------------
"Bug#44749 ndb_config --xml: hostname as valid key and MaxNoOfOpenFiles need fix - HostName in sections for [ndbd], [ndb_mgmd] and [mysqld] was marked as ""internal"", changed that to ""used"" so that they are now visible. Also set default value to undefined, ie. no default value. - MaxNoOfOpenFiles had illegal default value 0(outside min/max), changed to undefined, i.e no default value. "	4d4e707497d2523330aea69ef27db02c3c97e80f
----------------------------
Bug #44179 reset slave crashes in my_error when reset_logs returns non-zero my_error() was invoked in reset_slave()'s with purge_relay_logs()-failing branch without passing sql_errno to it. Fixed with setting sql_errno= ER_RELAY_LOG_FAIL in the purge_relay_logs()-failing branch. 	b3190a4528b634199ab5e4aefc97bd4d7ecdb95d
----------------------------
"Bug#43962 ""Packets out of order"" calling a SHOW TABLE STATUS Error happens because sp_head::MULTI_RESULTS is not set for SP which has 'show table status' command. The fix is to add a SQLCOM_SHOW_TABLE_STATUS case into sp_get_flags_for_command() func. "	430406a68fc261cfc72806b20b2a26a8bdb67c42
----------------------------
Bug#43932 myisam index corruption with large index and large key_buffer_size. The cause of corruption was number overflow when multiplying two ulong values, number of used keycache blocks with size of a single block. The result of multiplication exceeded ulong range (4G) and this lead to incorrectly calculated  buffer offset in the key cache. The fix is to use size_t for multiplication result. This patch also fixes pointless cast in safemalloc (size of allocated block to uint), that creates lot of false alarm warnings when using big keycache (> 4GB) in debug mode. 	57b4295d2b7693dc15e047b6a5d0f6b86b612fa2
----------------------------
Bug #38694  Race condition in replication thread shutdown The issue of the current bug is unguarded access to mi->slave_running by the shutdown thread calling end_slave() that is bug#29968 (alas happened not to be cross-linked with the current bug) Fixed: with removing the unguarded read of the running status and perform reading it in terminate_slave_thread() at time run_lock is taken (mostly bug#29968 backporting, still with some improvements over that patch - see the error reporting from terminate_slave_thread()). Issue of bug#38716 is fixed here for 5.0 branch as well. Note: There has been a separate artifact identified - a race condition between init_slave() and  end_slave() - reported as  Bug#44467. 	e02d162f792c1df93c19b584bfc5f098fbbbfb5e
----------------------------
"Bug#32784: Timeout in test ""innodb_charset"": InnoDB much slower than other handlers Turned off autocommit at the start of this test per Innobase recommendation. Noted significant reduction in run time for this test w/ a minor increase in other tests' run-times. "	3df4ad8a5d5452d9a62027c7fbe82ba1875a93c5
----------------------------
"Fix for BUG#43660- SHOW INDEXES/ANALYZE does NOT update cardinality for indexes of InnoDB table Fixes by replacing the PRNG that is used to pick random pages with a better one. Also adds a configuration option ""innodb_use_legacy_cardinality_algorithm"" to enable the fix only when the option is set. This patch is from http://bugs.mysql.com/file.php?id=11789 "	97ae03bf526a0cef7c76739b9a583a0f6209aa7f
----------------------------
"BUG#43949 Initialization of slave produces a warning message in Valgrind In order to define the --slave-load-tmpdir, the init_relay_log_file() was calling fn_format(MY_PACK_FILENAME) which internally was indirectly calling strmov_overlapp() (through pack_dirname) and the following warning message was being printed out while running in Valgrind: ""source and destination overlap in strcpy"". We fixed the issue by removing the flag MY_PACK_FILENAME as it was not necessary. In a nutshell, with this flag the function fn_format() tried to replace a directory by either ""~"", ""."" or "".."". However, we wanted exactly to remove such strings. In this patch, we also refactored the functions init_relay_log_file() and check_temp_dir(). The former was refactored to call the fn_format() with the flag MY_SAFE_PATH along with the MY_RETURN_REAL_PATH,  in order to avoid issues with long directories and return an absolute path, respectively. The flag MY_SAFE_UNPACK_FILENAME was removed too as it was responsible for removing ""~"", ""."" or "".."" only from the file parameter and we wanted to remove such strings from the directory parameter in the fn_format(). This result is stored in an rli variable, which is then processed by the other function in order to verify if the directory exists and if we are able to create files in it. "	8caf4bfc52eee69683423fa4b61e71cd6a1464d1
----------------------------
branches/zip: Add aux config programs to emulate the newly added checks in plug.in (from r4678). 	e6081cf14014a0a9eb3f034a10675d85c7dd7e4c
----------------------------
branches/zip: Add comment and copyright notice to the aux config program. 	25aea25a45b6648d0fcf73afdbc138a447faf17c
----------------------------
branches/zip: Rename the aux config program and give it a more specific name because more are coming. 	55501722620315d70edc666560d01d7983ab1539
----------------------------
branches/zip: Merge revisions 4710:4746 from branches/5.1: ------------------------------------------------------------------------ r4746 | vasil | 2009-04-18 00:32:08 +0300 (Sat, 18 Apr 2009) | 110 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/include/pars0pars.h branches/5.1: Merge a change from MySQL: ------------------------------------------------------------ revno: 2728.10.2 committer: Ignacio Galarza <iggy@mysql.com> branch nick: mysql-5.1-bugteam-bug29125 timestamp: Fri 2009-02-13 11:41:47 -0500 message: Bug#29125 Windows Server X64: so many compiler warnings - Remove bothersome warning messages.  This change focuses on the warnings that are covered by the ignore file: support-files/compiler_warnings.supp. - Strings are guaranteed to be max uint in length modified: client/mysql_upgrade.c client/mysqladmin.cc client/mysqlbinlog.cc client/mysqlcheck.c client/mysqldump.c client/mysqlslap.c client/mysqltest.cc client/sql_string.cc extra/comp_err.c extra/yassl/src/buffer.cpp extra/yassl/taocrypt/include/block.hpp extra/yassl/taocrypt/src/algebra.cpp extra/yassl/taocrypt/src/asn.cpp include/config-win.h libmysql/libmysql.c mysys/array.c mysys/base64.c mysys/charset.c mysys/checksum.c mysys/default.c mysys/default_modify.c mysys/hash.c mysys/mf_keycache.c mysys/mf_tempdir.c mysys/my_append.c mysys/my_compress.c mysys/my_conio.c mysys/my_copy.c mysys/my_getwd.c mysys/my_pread.c mysys/my_quick.c mysys/my_read.c mysys/safemalloc.c mysys/string.c server-tools/instance-manager/buffer.cc server-tools/instance-manager/instance.cc server-tools/instance-manager/options.cc server-tools/instance-manager/parse.h sql-common/client.c sql-common/my_user.c sql/event_data_objects.cc sql/event_parse_data.cc sql/events.cc sql/gen_lex_hash.cc sql/item.h sql/item_func.cc sql/item_strfunc.cc sql/item_timefunc.cc sql/lock.cc sql/log_event.cc sql/log_event.h sql/log_event_old.cc sql/net_serv.cc sql/sp_head.h sql/spatial.h sql/sql_class.h sql/sql_connect.cc sql/sql_crypt.cc sql/sql_error.cc sql/sql_insert.cc sql/sql_lex.cc sql/sql_lex.h sql/sql_load.cc sql/sql_prepare.cc sql/sql_profile.cc sql/sql_repl.cc sql/sql_servers.cc sql/sql_string.cc sql/sql_table.cc sql/sql_trigger.cc sql/sql_udf.cc sql/sql_view.cc sql/udf_example.c sql/uniques.cc storage/archive/azio.c storage/archive/azlib.h storage/csv/ha_tina.cc storage/csv/ha_tina.h storage/csv/transparent_file.h storage/federated/ha_federated.cc storage/federated/ha_federated.h storage/heap/hp_write.c storage/innobase/handler/ha_innodb.cc storage/innobase/include/pars0pars.h storage/myisam/ha_myisam.cc storage/myisam/mi_check.c storage/myisam/mi_packrec.c storage/myisam/mi_search.c storage/myisam/rt_index.c storage/myisammrg/ha_myisammrg.cc strings/ctype.c strings/my_vsnprintf.c tests/bug25714.c tests/mysql_client_test.c 	06e8e00ed9da2f7dfdf721be17437631e7038aa9
----------------------------
branches/5.1: Merge a change from MySQL: ------------------------------------------------------------ revno: 2728.10.2 committer: Ignacio Galarza <iggy@mysql.com> branch nick: mysql-5.1-bugteam-bug29125 timestamp: Fri 2009-02-13 11:41:47 -0500 message: Bug#29125 Windows Server X64: so many compiler warnings - Remove bothersome warning messages.  This change focuses on the warnings that are covered by the ignore file: support-files/compiler_warnings.supp. - Strings are guaranteed to be max uint in length modified: client/mysql_upgrade.c client/mysqladmin.cc client/mysqlbinlog.cc client/mysqlcheck.c client/mysqldump.c client/mysqlslap.c client/mysqltest.cc client/sql_string.cc extra/comp_err.c extra/yassl/src/buffer.cpp extra/yassl/taocrypt/include/block.hpp extra/yassl/taocrypt/src/algebra.cpp extra/yassl/taocrypt/src/asn.cpp include/config-win.h libmysql/libmysql.c mysys/array.c mysys/base64.c mysys/charset.c mysys/checksum.c mysys/default.c mysys/default_modify.c mysys/hash.c mysys/mf_keycache.c mysys/mf_tempdir.c mysys/my_append.c mysys/my_compress.c mysys/my_conio.c mysys/my_copy.c mysys/my_getwd.c mysys/my_pread.c mysys/my_quick.c mysys/my_read.c mysys/safemalloc.c mysys/string.c server-tools/instance-manager/buffer.cc server-tools/instance-manager/instance.cc server-tools/instance-manager/options.cc server-tools/instance-manager/parse.h sql-common/client.c sql-common/my_user.c sql/event_data_objects.cc sql/event_parse_data.cc sql/events.cc sql/gen_lex_hash.cc sql/item.h sql/item_func.cc sql/item_strfunc.cc sql/item_timefunc.cc sql/lock.cc sql/log_event.cc sql/log_event.h sql/log_event_old.cc sql/net_serv.cc sql/sp_head.h sql/spatial.h sql/sql_class.h sql/sql_connect.cc sql/sql_crypt.cc sql/sql_error.cc sql/sql_insert.cc sql/sql_lex.cc sql/sql_lex.h sql/sql_load.cc sql/sql_prepare.cc sql/sql_profile.cc sql/sql_repl.cc sql/sql_servers.cc sql/sql_string.cc sql/sql_table.cc sql/sql_trigger.cc sql/sql_udf.cc sql/sql_view.cc sql/udf_example.c sql/uniques.cc storage/archive/azio.c storage/archive/azlib.h storage/csv/ha_tina.cc storage/csv/ha_tina.h storage/csv/transparent_file.h storage/federated/ha_federated.cc storage/federated/ha_federated.h storage/heap/hp_write.c storage/innobase/handler/ha_innodb.cc storage/innobase/include/pars0pars.h storage/myisam/ha_myisam.cc storage/myisam/mi_check.c storage/myisam/mi_packrec.c storage/myisam/mi_search.c storage/myisam/rt_index.c storage/myisammrg/ha_myisammrg.cc strings/ctype.c strings/my_vsnprintf.c tests/bug25714.c tests/mysql_client_test.c 	1bf3bcbc997b2d09612d03ceaa4ece0dc22ba03e
----------------------------
ndb - fix compiler warnings - remove unimplemented ArrayPool::load causing vc++ to complain when instantiating - Use Uint64 variable for incrementin GlobalData.JobLap - Remove unecessary forward declaration of IPCConfig 	fccdec5d015ed40dcb0458d24dfda4ee1f0e762c
----------------------------
mtr --vs-config doesn't allow an option (reported as bug 44314 	5a4994c1cb46e8e54f5bc4306029e9fc4001be66
----------------------------
Bug#44295 SSL connection fails on bigendian - Avoiding the need to include winsock2.h only to get SOCKET by declaring the YASSL_SOCKET_T as the same type as socket would be, but with native datatypes. 	8a44c51f17cd676c31b86462724a7b2531fa4f79
----------------------------
ndb - bug#44294 - part VI Don't simply exit() on config-check-ref But allow peer/own node to be in CS_INITIAL, and in these case instead just ignore it 	09dcc2a5fc3b026a5af8aed9f5f5c142c0d42637
----------------------------
ndb - bug#44294 - part IV Fix sending of ConfigCheckConf to use correct length 	5f25db5741c0c9e42ef9a01fb9a5a357307d6288
----------------------------
ndb - bug#44294 - part III Fix sending of ConfigCheckRef to use correct length 	bb9715aa8facd52cab5dd96e177702ca1b1f5ff2
----------------------------
"Applying InnoDB snashot 5.1-ss4699, part 3. Fixes BUG#43660 1) BUG#43660 - SHOW INDEXES/ANALYZE does NOT update cardinality for indexes of InnoDB table Detailed revision comments: r4699 | vasil | 2009-04-09 14:01:52 +0300 (Thu, 09 Apr 2009) | 15 lines branches/5.1: Fix Bug#43660 SHOW INDEXES/ANALYZE does NOT update cardinality for indexes of InnoDB table by replacing the PRNG that is used to pick random pages with a better one. This is based on r4670 but also adds a new configuration option and enables the fix only if this option is changed. Please skip the present revision when merging. Approved by:	Heikki (via email) "	3e90469f9523813820ae03736b51228a8a93407a
----------------------------
"Applying InnoDB snashot 5.1-ss4699, part 1. Fixes BUG#39320 and other problems 1) BUG#39320 - innodb crash in file btr/btr0pcur.c line 217 with innodb_locks_unsafe_for_binlog 2) Fixes bug in multi-table semi consistent reads. 3) Fixes email address from dev@innodb.com to innodb_dev_ww@oracle.com 4) Fixes warning message generated by main.innodb test Detailed revision comments: r4399 | marko | 2009-03-12 09:38:05 +0200 (Thu, 12 Mar 2009) | 5 lines branches/5.1: row_sel_get_clust_rec_for_mysql(): Store the cursor position also for unlock_row().  (Bug #39320) rb://96 approved by Heikki Tuuri. r4400 | marko | 2009-03-12 10:06:44 +0200 (Thu, 12 Mar 2009) | 8 lines branches/5.1: Fix a bug in multi-table semi-consistent reads. Remember the acquired record locks per table handle (row_prebuilt_t) rather than per transaction (trx_t), so that unlock_row should successfully unlock all non-matching rows in multi-table operations. This deficiency was found while investigating Bug #39320. rb://94 approved by Heikki Tuuri. r4481 | marko | 2009-03-19 15:01:48 +0200 (Thu, 19 Mar 2009) | 6 lines branches/5.1: row_unlock_for_mysql(): Do not unlock records that were modified by the current transaction.  This bug was introduced or unmasked in r4400. rb://97 approved by Heikki Tuuri r4573 | vasil | 2009-03-30 14:17:13 +0300 (Mon, 30 Mar 2009) | 4 lines branches/5.1: Fix email address from dev@innodb.com to innodb_dev_ww@oracle.com r4574 | vasil | 2009-03-30 14:27:08 +0300 (Mon, 30 Mar 2009) | 38 lines branches/5.1: Restore the state of INNODB_THREAD_CONCURRENCY to silence this warning: TEST                                      RESULT   TIME (ms) ------------------------------------------------------------ worker[1] Using MTR_BUILD_THREAD 250, with reserved ports 12500..12509 main.innodb                              [ pass ]   8803 MTR's internal check of the test case 'main.innodb' failed. This means that the test case does not preserve the state that existed before the test case was executed.  Most likely the test case did not do a proper clean-up. This is the diff of the states of the servers before and after the test case was executed: mysqltest: Logging to '/tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.log'. mysqltest: Results saved in '/tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.result'. mysqltest: Connecting to server localhost:12500 (socket /tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/mysqld.1.sock) as 'root', connection 'default', attempt 0 ... mysqltest: ... Connected. mysqltest: Start processing test commands from './include/check-testcase.test' ... mysqltest: ... Done processing test commands. --- /tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.result	2009-03-30 14:12:31.000000000 +0300 +++ /tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.reject	2009-03-30 14:12:41.000000000 +0300 @@ -99,7 +99,7 @@ INNODB_SUPPORT_XA	ON INNODB_SYNC_SPIN_LOOPS	20 INNODB_TABLE_LOCKS	ON -INNODB_THREAD_CONCURRENCY	8 +INNODB_THREAD_CONCURRENCY	16 INNODB_THREAD_SLEEP_DELAY	10000 INSERT_ID	0 INTERACTIVE_TIMEOUT	28800 mysqltest: Result content mismatch not ok r4576 | vasil | 2009-03-30 16:25:10 +0300 (Mon, 30 Mar 2009) | 4 lines branches/5.1: Revert a change to Makefile.am that I committed accidentally in c4574. "	df7f5472c9e153460c6fbdc46842b6b6b5995bcd
----------------------------
"branches/zip: Merge revisions 4481:4710 from branches/5.1: (resolving conflict in r4574, r4575 and skipping r4699 and r4705 because analogous changes to r4699 and r4705 were already made to branches/zip) ------------------------------------------------------------------------ r4573 | vasil | 2009-03-30 14:17:13 +0300 (Mon, 30 Mar 2009) | 4 lines Changed paths: M /branches/5.1/mysql-test/innodb.test branches/5.1: Fix email address from dev@innodb.com to innodb_dev_ww@oracle.com ------------------------------------------------------------------------ r4574 | vasil | 2009-03-30 14:27:08 +0300 (Mon, 30 Mar 2009) | 38 lines Changed paths: M /branches/5.1/Makefile.am M /branches/5.1/mysql-test/innodb.test branches/5.1: Restore the state of INNODB_THREAD_CONCURRENCY to silence this warning: TEST                                      RESULT   TIME (ms) ------------------------------------------------------------ worker[1] Using MTR_BUILD_THREAD 250, with reserved ports 12500..12509 main.innodb                              [ pass ]   8803 MTR's internal check of the test case 'main.innodb' failed. This means that the test case does not preserve the state that existed before the test case was executed.  Most likely the test case did not do a proper clean-up. This is the diff of the states of the servers before and after the test case was executed: mysqltest: Logging to '/tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.log'. mysqltest: Results saved in '/tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.result'. mysqltest: Connecting to server localhost:12500 (socket /tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/mysqld.1.sock) as 'root', connection 'default', attempt 0 ... mysqltest: ... Connected. mysqltest: Start processing test commands from './include/check-testcase.test' ... mysqltest: ... Done processing test commands. --- /tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.result	2009-03-30 14:12:31.000000000 +0300 +++ /tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.reject	2009-03-30 14:12:41.000000000 +0300 @@ -99,7 +99,7 @@ INNODB_SUPPORT_XA	ON INNODB_SYNC_SPIN_LOOPS	20 INNODB_TABLE_LOCKS	ON -INNODB_THREAD_CONCURRENCY	8 +INNODB_THREAD_CONCURRENCY	16 INNODB_THREAD_SLEEP_DELAY	10000 INSERT_ID	0 INTERACTIVE_TIMEOUT	28800 mysqltest: Result content mismatch not ok ------------------------------------------------------------------------ r4575 | vasil | 2009-03-30 15:55:31 +0300 (Mon, 30 Mar 2009) | 8 lines Changed paths: M /branches/5.1/mysql-test/innodb.result M /branches/5.1/mysql-test/innodb.test branches/5.1: Fix Bug#43309 Test main.innodb can't be run twice Make the innodb mysql-test more flexible by inspecting how much a variable of interest has changed since the start of the test. Do not assume the variables have zero values at the start of the test. ------------------------------------------------------------------------ r4576 | vasil | 2009-03-30 16:25:10 +0300 (Mon, 30 Mar 2009) | 4 lines Changed paths: M /branches/5.1/Makefile.am branches/5.1: Revert a change to Makefile.am that I committed accidentally in c4574. ------------------------------------------------------------------------ r4659 | vasil | 2009-04-06 15:34:51 +0300 (Mon, 06 Apr 2009) | 6 lines Changed paths: M /branches/5.1/mysql-test/innodb.test branches/5.1: Followup to r4575 and the fix of Bug#43309 Test main.innodb can't be run twice: Add an explanatory comment, as suggested by Patrick Crews in the bug report. ------------------------------------------------------------------------ r4699 | vasil | 2009-04-09 14:01:52 +0300 (Thu, 09 Apr 2009) | 15 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/include/srv0srv.h M /branches/5.1/page/page0cur.c M /branches/5.1/srv/srv0srv.c branches/5.1: Fix Bug#43660 SHOW INDEXES/ANALYZE does NOT update cardinality for indexes of InnoDB table by replacing the PRNG that is used to pick random pages with a better one. This is based on r4670 but also adds a new configuration option and enables the fix only if this option is changed. Please skip the present revision when merging. Approved by:	Heikki (via email) ------------------------------------------------------------------------ r4705 | vasil | 2009-04-14 14:30:13 +0300 (Tue, 14 Apr 2009) | 5 lines Changed paths: M /branches/5.1/page/page0cur.c branches/5.1: When using the random function, first take the modulus by the number of pages and then typecast to ulint. ------------------------------------------------------------------------ r4710 | vasil | 2009-04-15 11:55:18 +0300 (Wed, 15 Apr 2009) | 25 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: Merge a change from MySQL (looks like this is against 5.0 but they later merged it to 5.1): ------------------------------------------------------------ revno: 1810.3846.1 committer: Alexey Botchkov <holyfoot@mysql.com> branch nick: 31435 timestamp: Tue 2008-11-11 14:42:32 +0400 message: Bug#31435 ha_innodb.cc:3983: ulint convert_search_mode_to_innobase(ha_rkey_function): Asse I think we don't need to issue an error statement in the convert_search_mode_to_innobase(). Returning the PAGE_CUR_UNSUPP value is enough as allows to handle this case depending on the requirements. per-file comments: sql/ha_innodb.cc Bug#31435 ha_innodb.cc:3983: ulint convert_search_mode_to_innobase(ha_rkey_function): Asse no error issued in convert_search_mode_to_innobase. ha_innobase::records_in_range() returns HA_POS_ERROR if search mode isn't supported. modified: sql/ha_innodb.cc ------------------------------------------------------------------------ "	4f3c09517dc1d6c445ab3f883dbee4e0c100b82e
----------------------------
Merge: 7628ca3 050a0b9 Merge some merge changesets from 5.0 up into 5.1-build (code changes have already been merged separately). Use this occasion to fix the branch name in the configuration file. 	bb092109e103c73924dff3ae4a98afbd25c65fa2
----------------------------
"branches/5.1: Fix Bug#43660 SHOW INDEXES/ANALYZE does NOT update cardinality for indexes of InnoDB table by replacing the PRNG that is used to pick random pages with a better one. This is based on r4670 but also adds a new configuration option and enables the fix only if this option is changed. Please skip the present revision when merging. Approved by:	Heikki (via email) "	fc7d1cf0339c7aff1b6c8d1340e6b79f96d1f153
----------------------------
Bug#38848 myisam_use_mmap causes widespread myisam corruption on windows Currently the memory map is being created with a size that is greater than the size of the underlying datafile. This can cause varying behaviour, e.g. In windows the size of the datafile is increased, while on linux it remains the same. This fix removes the increment margin to the size that is used while creating the memory map. 	9b1076b4717e470c6b9391441a1016b402053541
----------------------------
branches/innodb+: Merge revisions 4657:4660 from branches/zip: ------------------------------------------------------------------------ r4660 | marko | 2009-04-06 16:17:30 +0300 (Mon, 06 Apr 2009) | 7 lines branches/zip: Initialize innodb_change_buffering from the configuration file. So far, the parameter innodb_change_buffering was only settable by the SET GLOBAL command. Any change specified in the configuration file or on the mysqld command line was ignored. This was reported as Issue #217. rb://109 approved by Heikki Tuuri. ------------------------------------------------------------------------ 	688b511871afdc690362de7309f76a806fedea3b
----------------------------
branches/zip: Initialize innodb_change_buffering from the configuration file. So far, the parameter innodb_change_buffering was only settable by the SET GLOBAL command. Any change specified in the configuration file or on the mysqld command line was ignored. This was reported as Issue #217. rb://109 approved by Heikki Tuuri. 	e650b0533bf2b1f769f9cc67c2cee891f75c0d08
----------------------------
"Bug#43835: SHOW VARIABLES does not include 0 for slave_skip_errors We didn't expect ""error: no error"", although this is in fact a legitimate state (if something is erroneous on the master, but not on the slave, e.g. INSERT fails on master due to UNIQUE constraint which does not exist on slave). We now list the ignore for ""0: no error"" the same way as any other ignore; moreover, if no or an empty --slave-skip-errors is passed at start-up, we show ""OFF"" instead of empty list, as intended. (The code for that was there, but was only run for the empty- argument case, even if it subsequently tested for both conditions.) "	11f44544fcb9c8508c95b75dd4d3ef7ee254588a
----------------------------
branches/innodb+: Merge revisions 4528:4657 from branches/zip: ------------------------------------------------------------------------ r4530 | marko | 2009-03-24 14:02:29 +0200 (Tue, 24 Mar 2009) | 3 lines branches/zip: Remove references to UNIV_HOTBACKUP from files that are not used when building InnoDB Hot Backup.  Declare innobase_invalidate_query_cache() in ha_prototypes.h. ------------------------------------------------------------------------ r4531 | marko | 2009-03-24 15:46:12 +0200 (Tue, 24 Mar 2009) | 7 lines branches/zip: Note that buf_page_t::list and buf_page_t::in_flush_list are only protected by buf_pool_mutex, not by the block mutex. buf_page_release(): Remove the assertion on in_flush_list. The function is only holding block->mutex, not buf_pool_mutex. This was reported by Sunny.  This was the only piece of code that accessed in_flush_list while not holding buf_pool_mutex. ------------------------------------------------------------------------ r4532 | calvin | 2009-03-24 17:59:45 +0200 (Tue, 24 Mar 2009) | 13 lines branches/zip: Mantis issue #201 - remove innodb_plugin_init() due to new option --ignore_builtin_innodb Starting 5.1.33, MySQL has a new option --ignore_builtin_innodb for using the dynamic plugin. It is required to remove innodb_plugin_init() in the plugin. This patch removes innodb_plugin_init() as well as functions, variables used by innodb_plugin_init(). rb://98 Approved by: Marko ------------------------------------------------------------------------ r4543 | inaam | 2009-03-25 19:18:33 +0200 (Wed, 25 Mar 2009) | 17 lines branches/zip SHOW ENGINE INNODB MUTEX shows all mutexes and rw_locks. This can be overwhelming particularly when the buffer pool is very large (note that each block in buffer pool has at least one mutex, one rw_lock and an additional mutex if rw_lock does not use atomics). With this patch status of following mutexes and rw-locks is not shown: 1) block->mutex 2) block->lock 3) block->lock->mutex (if applicable) 4) All other mutexes and rw-locks for which number of os-waits are zero Addresses issue# 179 rb://99 Approved by: Marko ------------------------------------------------------------------------ r4579 | marko | 2009-03-31 10:40:58 +0300 (Tue, 31 Mar 2009) | 3 lines branches/zip: struct read_view_struct: Add clarifying comments about low_limit_id and up_limit_id. ------------------------------------------------------------------------ r4630 | calvin | 2009-04-02 15:46:47 +0300 (Thu, 02 Apr 2009) | 6 lines branches/zip: Mantis issue #197 - Make srv_spin_wait_delay configurable New parameter innodb_spin_wait_delay to set the maximum delay between polling for a spin lock. 5 is the default. Approved by: Marko (on IM) ------------------------------------------------------------------------ r4631 | marko | 2009-04-02 16:23:12 +0300 (Thu, 02 Apr 2009) | 24 lines branches/zip: Refuse to use newly created indexes that may lack history.  This addresses Mantis issue #116. dict_index_t: Enable the storage of trx_id. row_prebuilt_t: Make many fields bit-fields to reduce the memory footprint. Add index_usable. ha_innobase::change_active_index(): Check if the index is usable and set prebuilt->index_usable accordingly. Unfortunately, the return status of this function is ignored by MySQL, and the actual refusal to use the index must be made in row_search_for_mysql(). row_search_for_mysql(): Return DB_MISSING_HISTORY if !prebuilt->index_usable. convert_error_code_to_mysql(): Map DB_MISSING_HISTORY to HA_ERR_TABLE_DEF_CHANGED. innodb-index.test: Add a test case where access to a newly created secondary index must be blocked for old transactions. rb://100 approved by Heikki Tuuri ------------------------------------------------------------------------ r4647 | vasil | 2009-04-06 10:05:25 +0300 (Mon, 06 Apr 2009) | 4 lines branches/zip: Add changelog entry for c4630. ------------------------------------------------------------------------ r4648 | vasil | 2009-04-06 10:07:26 +0300 (Mon, 06 Apr 2009) | 4 lines branches/zip: Fix formatting in ChangeLog to be consistent. ------------------------------------------------------------------------ r4657 | marko | 2009-04-06 15:13:45 +0300 (Mon, 06 Apr 2009) | 1 line branches/zip: Remove the bogus failure reported in Issue #219. ------------------------------------------------------------------------ 	6129c15f05386c607d5ff56c93faf240fec37b69
----------------------------
"BUG#39393 slave-skip-errors does not work when using ROW based replication RBR was not considering the option --slave-skip-errors. To fix the problem, we are reporting the ignored ERROR(s) as warnings thus avoiding stopping the SQL Thread. Besides, it fixes the output of ""SHOW VARIABLES LIKE 'slave_skip_errors'"" which was showing nothing when the value ""all"" was assigned to --slave-skip-errors. @sql/log_event.cc skipped rbr errors when the option skip-slave-errors is set. @sql/slave.cc fixed the output of for SHOW VARIABLES LIKE 'slave_skip_errors'"" @test-cases fixed the output of rpl.rpl_idempotency updated the test case rpl_skip_error "	1287d8c53a71c583508802a0fb98e92983fea9ed
----------------------------
Bug#43716: Test mysqlbinlog_row_big is failing, needs to be updated Altered the test to accommodate the new behavior of max_allowed_packet. Had to disconnect / reconnect the default connection for the new value to register. Re-enabled certain parts of the test that were commented out and added some setup / cleanup code to ensure proper reset of max_allowed_packet at the end of the test. Re-recorded the .result file to account for changes to the test. 	4fda8858b16ebb41262e8e4944e204ece83aaec9
----------------------------
"Bug#43876: mysqld_multi introduces --no-defaults which screws up my system Bug#32136: mysqld_multi --defaults-file not respected while using \ --mysqld=mysqld_safe Revert change that adds ""--no-defaults"" to mysqld_multi. This closes Bug#43508 and re-opens Bug#32136. "	668d988c71a7980b3f131feb51c24427cfd78082
----------------------------
branches/zip: Mantis issue #197 - Make srv_spin_wait_delay configurable New parameter innodb_spin_wait_delay to set the maximum delay between polling for a spin lock. 5 is the default. Approved by: Marko (on IM) 	dacfdf4a1dec4b3b9ef00b45c368a3e8b5198f9f
----------------------------
Bug #42507 mtr2: the --check is fooled up by a code executed in --init_file mtr *thinks* there's a side effect Use the new force_restart() to avoid running the check-testcase 	6494ae0357a10ef484868450ca0cb33166f9684d
----------------------------
"ndb - testMgm now properly detects if mycnf is used and allows a different error message from ""reload config"" in that case. "	4ece68d07ad21cf86b3b59cd9615689050b2e533
----------------------------
testMgm - print latest error if get or set config fails 	9a16a739c26b049568c44821aeeb33a26a83e932
----------------------------
Merge: fb87fe8 94a7e11 Bug#34521, removed a bunch of deprecated options from template my.cnf files. Merged from 5.0 version of this patch: - Removed entire isamchk section. Support for ISAM tables was removed in 5.0. - Replaced key_buffer with key_buffer_size (correct spelling). - Removed skip-bdb, as BDB is no longer included in 5.0 and above. - Removed commented-out bdb_cache_size and bdb_max_lock for the same reason. - Removed commented-out innodb_log_arch_dir, deprecated in 5.0.24. - Removed myisam_max_extra_sort_file_size, deprecated in 5.0.6. - Removed log_long_format, deprecated in 4.1. - Replaced default_table_type with default-storage-engine. New in 5.1: - Replaced table_cache with table_open_cache. - Removed skip-federated, should have been in 5.0 only. - Replaced log_slow_queries with slow_query_log, deprecated in 5.1.29. 	b075f36280585fc6ab5b5223848cd6b6ba337c9c
----------------------------
Bug#34521, removed a bunch of deprecated options from template my.cnf files: - Removed entire isamchk section. Support for ISAM tables was removed in 5.0. - Replaced key_buffer with key_buffer_size (correct spelling). - Removed skip-bdb, as BDB is no longer included in 5.0 and above. - Removed commented-out bdb_cache_size and bdb_max_lock for the same reason. - Removed commented-out innodb_log_arch_dir, deprecated in 5.0.24. - Removed myisam_max_extra_sort_file_size, deprecated in 5.0.6. - Removed log_long_format, deprecated in 4.1. - Replaced default_table_type with default-storage-engine. 	94a7e115db8dab2efd0c9ee01b9a4f1eefd70016
----------------------------
"ndb - add_node*.test use default configs instead of ""add_node"" config decrease no of rows in test from 100k to 10k "	64f8ff1fb772d20c659cad940a6cdfc95035b1d1
----------------------------
"branches/5.1: Restore the state of INNODB_THREAD_CONCURRENCY to silence this warning: TEST                                      RESULT   TIME (ms) ------------------------------------------------------------ worker[1] Using MTR_BUILD_THREAD 250, with reserved ports 12500..12509 main.innodb                              [ pass ]   8803 MTR's internal check of the test case 'main.innodb' failed. This means that the test case does not preserve the state that existed before the test case was executed.  Most likely the test case did not do a proper clean-up. This is the diff of the states of the servers before and after the test case was executed: mysqltest: Logging to '/tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.log'. mysqltest: Results saved in '/tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.result'. mysqltest: Connecting to server localhost:12500 (socket /tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/mysqld.1.sock) as 'root', connection 'default', attempt 0 ... mysqltest: ... Connected. mysqltest: Start processing test commands from './include/check-testcase.test' ... mysqltest: ... Done processing test commands. --- /tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.result	2009-03-30 14:12:31.000000000 +0300 +++ /tmp/autotest.sh-20090330_033000-5.1.5Hg8CY/mysql-5.1/mysql-test/var/tmp/check-mysqld_1.reject	2009-03-30 14:12:41.000000000 +0300 @@ -99,7 +99,7 @@ INNODB_SUPPORT_XA	ON INNODB_SYNC_SPIN_LOOPS	20 INNODB_TABLE_LOCKS	ON -INNODB_THREAD_CONCURRENCY	8 +INNODB_THREAD_CONCURRENCY	16 INNODB_THREAD_SLEEP_DELAY	10000 INSERT_ID	0 INTERACTIVE_TIMEOUT	28800 mysqltest: Result content mismatch not ok "	97f920709b8db9fc2380dce6e00fe5b3f12e0a31
----------------------------
Bug#39953 Triggers are not working properly with multi table updates Attempt to execute trigger or stored function with multi-UPDATE which used - but didn't update - a table that was also used by the calling statement led to an error. Read-only reference to tables used in the calling statement should be allowed. This problem was caused by the fact that check for conflicting use of tables in SP/triggers was performed in open_tables(), and in case of multi-UPDATE we didn't know exact lock type at this stage. We solve the problem by moving this check to lock_tables(), so it can be performed after exact lock types for tables used by multi-UPDATE are determined. 	fce11a8bb1df6a0c3ba5bbb3aa89a8ee031a1f0e
----------------------------
Increase testBlobs robustness testBlobs often fails when running against blobs-on-disk tables with timeout errors. This occurs as the deadlock detection timeout is fixed per-TC block, but reading/writing data to a heavily loaded disk subsystem can take a long time and trigger the timeout. Potential fixes : 1 Increase deadlock detection timeout for all hosts where ATRT is run 2 Make deadlock detection timeout configurable from API on per transaction or operation basis 3 Improve robustness of testBlobs TC, allowing bounded retries in case of timeouts. This patch takes approach 3.  Approach 2 should be considered in future. Additionally, the number of rows used for the testcase is reduced from 100 to 25, reflecting the 4-fold increase in testcases introduced by testing NdbRecAttr + NdbRecord APIs + Memory + Disk based Blobs.  This should reduce the runtime of the testBlobs testcases. 	3c2b764150ee234f0da933282cfd0b4b798b0869
----------------------------
ndbd - print generation of the configuration that was fetched from ndb_mgmd - Remove the need to save port and hostname of the connected ndb_mgmd in yet another place. 	9ed54fd39c793efcd5d8d8746e653d0468df5562
----------------------------
Bug#43641 ndb_mgm_get_configuration fails fetching config - Return better error message when refusing to return the configuration - Add 'ndb_mgm_get_configuration2 'so that mgmapi users can tell which nodetype they are - this is for internal use by ndb_mgmd and ndbd - no need to change applications. 	50e298d800327218bfae44af2edf53977d9f6b5b
----------------------------
Bug#43641 ndb_mgm_get_configuration fails fetching config - Detect upgrade from version that does not have ConfigManager. - Exclude ndb_mgmd nodes from previous version from config change protocol. 	2200dd96751860cce97d7aea3c3a79ebb94b6bac
----------------------------
"ndb  - use ""ndb_mgm_node_type"" type in ConfigRetriever "	37b06ebc3ebb7f3785642430c6d26f587ac36fa4
----------------------------
WL#4350 ndb_mgmd - consistent configuration - Move the function that returns a bitmask of nodes of a certain type from SignalSender to Config - Rewrite m_config_change_state so that a setter function must be used when changing the state. - Trigger rebuild of m_all_mgm when m_config_change_state is set back to IDLE 	4e2faedc746ae523711d5a8976e9a1ecb74f5d0e
----------------------------
"Fix for bug#35383: binlog playback and replication breaks due to name_const substitution Problem: ""In general, statements executed within a stored procedure are written to the binary log using the same rules that would apply were the statements to be executed in standalone fashion. Some special care is taken when logging procedure statements because statement execution within procedures is not quite the same as in non-procedure context"". For example, each reference to a local variable in SP's statements is replaced by NAME_CONST(var_name, var_value). Queries like ""CREATE TABLE ... SELECT FUNC(local_var ..."" are logged as ""CREATE TABLE ... SELECT FUNC(NAME_CONST(""local_var"", var_value) ..."" that leads to differrent field names and might result in ""Incorrect column name"" if var_value is long enough. Fix: in 5.x we'll issue a warning in such a case. In 6.0 we should get rid of NAME_CONST(). Note: this issue and change should be described in the documentation (""Binary Logging of Stored Programs""). "	cf6c7262d014873e192b64151d71e03e814e8d29
----------------------------
branches/zip: Mantis issue #201 - remove innodb_plugin_init() due to new option --ignore_builtin_innodb Starting 5.1.33, MySQL has a new option --ignore_builtin_innodb for using the dynamic plugin. It is required to remove innodb_plugin_init() in the plugin. This patch removes innodb_plugin_init() as well as functions, variables used by innodb_plugin_init(). rb://98 Approved by: Marko 	6cf14ddda4290a9d8fc1d7a428579288ca6653f2
----------------------------
"branches/innodb+: Merge revisions 4150:4528 from branches/zip: ------------------------------------------------------------------------ r4152 | marko | 2009-02-10 12:52:27 +0200 (Tue, 10 Feb 2009) | 12 lines branches/zip: When innodb_use_sys_malloc is set, ignore innodb_additional_mem_pool_size, because nothing will be allocated from mem_comm_pool. mem_pool_create(): Remove the assertion about size.  The function will work with any size.  However, an assertion would fail in ut_malloc_low() when size==0. mem_init(): When srv_use_sys_malloc is set, pass size=1 to mem_pool_create(). mem0mem.c: Add #include ""srv0srv.h"" that is needed by mem0dbg.c. ------------------------------------------------------------------------ r4153 | vasil | 2009-02-10 22:58:17 +0200 (Tue, 10 Feb 2009) | 14 lines branches/zip: (followup to r4145) Non-functional change: Change the os_atomic_increment() and os_compare_and_swap() functions to macros to avoid artificial limitations on the types of those functions' arguments. As a consequence typecasts from the source code can be removed. Also remove Google's copyright from os0sync.ic because that file no longer contains code from Google. Approved by:	Marko (rb://88), also ok from Inaam via IM ------------------------------------------------------------------------ r4163 | marko | 2009-02-12 00:14:19 +0200 (Thu, 12 Feb 2009) | 4 lines branches/zip: Make innodb_thread_concurrency=0 the default. The old default was 8. ------------------------------------------------------------------------ r4169 | calvin | 2009-02-12 10:37:10 +0200 (Thu, 12 Feb 2009) | 3 lines branches/zip: Adjust the result file of innodb_thread_concurrency_basic test. The default value of innodb_thread_concurrency is changed to 0 (from 8) via r4163. ------------------------------------------------------------------------ r4174 | vasil | 2009-02-12 17:38:27 +0200 (Thu, 12 Feb 2009) | 4 lines branches/zip: Fix pathname of the file to patch. ------------------------------------------------------------------------ r4176 | vasil | 2009-02-13 10:06:31 +0200 (Fri, 13 Feb 2009) | 7 lines branches/zip: Fix the failing mysql-test partition_innodb, which failed only if run after innodb_trx_weight (or other test that would leave LATEST DEADLOCK ERROR into the output of SHOW ENGINE INNODB STATUS). Find further explanation for the failure at the top of the added patch partition_innodb.diff. ------------------------------------------------------------------------ r4198 | vasil | 2009-02-17 09:06:07 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: Add the full text of the GPLv2 license into the root directory of the plugin. In previous releases this file was copied from an external source (https://svn.innodb.com/svn/plugin/trunk/support/COPYING) ""manually"" when creating the source and binary archives. It is less confusing to have this present in the root directory of the SVN branch. ------------------------------------------------------------------------ r4199 | vasil | 2009-02-17 09:11:58 +0200 (Tue, 17 Feb 2009) | 4 lines branches/zip: Add Google's license into COPYING.Google. ------------------------------------------------------------------------ r4200 | vasil | 2009-02-17 09:56:33 +0200 (Tue, 17 Feb 2009) | 11 lines branches/zip: To the files touched by the Google patch from c4144 (excluding include/os0sync.ic because later we removed Google code from that file): * Remove the Google license * Remove old Innobase copyright lines * Add a reference to the Google license and to the GPLv2 license at the top, as recommended by the lawyers at Oracle Legal. ------------------------------------------------------------------------ r4201 | vasil | 2009-02-17 10:12:02 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 1/28] ------------------------------------------------------------------------ r4202 | vasil | 2009-02-17 10:15:06 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 2/28] ------------------------------------------------------------------------ r4203 | vasil | 2009-02-17 10:25:45 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 3/28] ------------------------------------------------------------------------ r4204 | vasil | 2009-02-17 10:55:41 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 4/28] ------------------------------------------------------------------------ r4205 | vasil | 2009-02-17 10:59:22 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 5/28] ------------------------------------------------------------------------ r4206 | vasil | 2009-02-17 11:02:27 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 6/28] ------------------------------------------------------------------------ r4207 | vasil | 2009-02-17 11:04:28 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 7/28] ------------------------------------------------------------------------ r4208 | vasil | 2009-02-17 11:06:49 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 8/28] ------------------------------------------------------------------------ r4209 | vasil | 2009-02-17 11:10:18 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 9/28] ------------------------------------------------------------------------ r4210 | vasil | 2009-02-17 11:12:41 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 10/28] ------------------------------------------------------------------------ r4211 | vasil | 2009-02-17 11:14:40 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 11/28] ------------------------------------------------------------------------ r4212 | vasil | 2009-02-17 11:18:35 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 12/28] ------------------------------------------------------------------------ r4213 | vasil | 2009-02-17 11:24:40 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 13/28] ------------------------------------------------------------------------ r4214 | vasil | 2009-02-17 11:27:31 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 13/28] ------------------------------------------------------------------------ r4215 | vasil | 2009-02-17 11:29:55 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 15/28] ------------------------------------------------------------------------ r4216 | vasil | 2009-02-17 11:33:38 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 16/28] ------------------------------------------------------------------------ r4217 | vasil | 2009-02-17 11:36:44 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 17/28] ------------------------------------------------------------------------ r4218 | vasil | 2009-02-17 11:39:11 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 18/28] ------------------------------------------------------------------------ r4219 | vasil | 2009-02-17 11:41:24 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 19/28] ------------------------------------------------------------------------ r4220 | vasil | 2009-02-17 11:43:50 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 20/28] ------------------------------------------------------------------------ r4221 | vasil | 2009-02-17 11:46:52 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 21/28] ------------------------------------------------------------------------ r4222 | vasil | 2009-02-17 11:50:12 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 22/28] ------------------------------------------------------------------------ r4223 | vasil | 2009-02-17 11:53:58 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 23/28] ------------------------------------------------------------------------ r4224 | vasil | 2009-02-17 12:01:41 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 24/28] ------------------------------------------------------------------------ r4225 | vasil | 2009-02-17 12:05:45 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 25/28] ------------------------------------------------------------------------ r4226 | vasil | 2009-02-17 12:09:16 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 26/28] ------------------------------------------------------------------------ r4227 | vasil | 2009-02-17 12:12:56 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 27/28] ------------------------------------------------------------------------ r4228 | vasil | 2009-02-17 12:14:04 +0200 (Tue, 17 Feb 2009) | 8 lines branches/zip: * Remove old Innobase copyright lines from C source files * Add a reference to the GPLv2 license as recommended by the lawyers at Oracle Legal [Step 28/28] ------------------------------------------------------------------------ r4229 | vasil | 2009-02-17 12:30:55 +0200 (Tue, 17 Feb 2009) | 4 lines branches/zip: Add the copyright notice to the non C files. ------------------------------------------------------------------------ r4231 | marko | 2009-02-17 14:26:53 +0200 (Tue, 17 Feb 2009) | 12 lines Minor cleanup of the Google SMP patch. sync_array_object_signalled(): Add a (void) cast to eliminate a gcc warning about the return value of os_atomic_increment() being ignored. rw_lock_create_func(): Properly indent the preprocessor directives. rw_lock_x_lock_low(), rw_lock_x_lock_func_nowait(): Split lines correctly. rw_lock_set_writer_id_and_recursion_flag(): Silence a Valgrind warning. Do not mix statements and variable declarations. ------------------------------------------------------------------------ r4232 | marko | 2009-02-17 14:59:54 +0200 (Tue, 17 Feb 2009) | 3 lines branches/zip: When assigning lock->recursive = FALSE, also flag lock->writer_thread invalid, so that Valgrind will catch more errors. This is related to Issue #175. ------------------------------------------------------------------------ r4242 | marko | 2009-02-18 17:01:09 +0200 (Wed, 18 Feb 2009) | 2 lines branches/zip: UT_DBG_STOP: Use do{} while(0) to silence a g++-4.3.2 warning about a while(0); statement.  This should fix (part of) Issue #176. ------------------------------------------------------------------------ r4243 | marko | 2009-02-18 17:04:03 +0200 (Wed, 18 Feb 2009) | 3 lines branches/zip: buf_buddy_get_slot(): Fix a gcc 4.3.2 warning about an empty body of a ""for"" statement. This fixes part of Issue #176. ------------------------------------------------------------------------ r4244 | marko | 2009-02-18 17:25:45 +0200 (Wed, 18 Feb 2009) | 11 lines branches/zip: Protect ut_total_allocated_memory with ut_list_mutex. Unprotected updates to ut_total_allocated_memory in os_mem_alloc_large() and os_mem_free_large(), called during fast index creation, may corrupt the variable and cause assertion failures. Also, add UNIV_MEM_ALLOC() and UNIV_MEM_FREE() instrumentation around os_mem_alloc_large() and os_mem_free_large(), so that Valgrind can detect more errors. rb://90 approved by Heikki Tuuri.  This addresses Issue #177. ------------------------------------------------------------------------ r4248 | marko | 2009-02-19 11:52:39 +0200 (Thu, 19 Feb 2009) | 2 lines branches/zip: page_zip_set_size(): Fix a g++ 4.3.2 warning about an empty body in a ""for"" statement.  This closes Issue #176. ------------------------------------------------------------------------ r4251 | inaam | 2009-02-19 15:46:27 +0200 (Thu, 19 Feb 2009) | 8 lines branches/zip: Issue #178 rb://91 Change plug.in to have same CXXFLAGS as CFLAGS. This is to ensure that both .c and .cc files get compiled with same flags. To fix the issue where UNIV_LINUX was defined only in .c files. Approved by: Marko ------------------------------------------------------------------------ r4258 | vasil | 2009-02-20 11:52:19 +0200 (Fri, 20 Feb 2009) | 7 lines branches/zip: Cleanup in ChangeLog: * Wrap lines at 78 characters * Changed files are listed alphabetically * White-space cleanup ------------------------------------------------------------------------ r4259 | vasil | 2009-02-20 11:59:42 +0200 (Fri, 20 Feb 2009) | 6 lines branches/zip: ChangeLog: Remove include/os0sync.ic from the entry about the google patch, this file was modified later to not include Google's code. ------------------------------------------------------------------------ r4262 | vasil | 2009-02-20 14:56:59 +0200 (Fri, 20 Feb 2009) | 373 lines branches/zip: Merge revisions 4035:4261 from branches/5.1: ------------------------------------------------------------------------ r4065 | sunny | 2009-01-29 16:01:36 +0200 (Thu, 29 Jan 2009) | 8 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/mysql-test/innodb-autoinc.result M /branches/5.1/mysql-test/innodb-autoinc.test branches/5.1: In the last round of AUTOINC cleanup we assumed that AUTOINC is only defined for integer columns. This caused an assertion failure when we checked for the maximum value of a column type. We now calculate the max value for floating-point autoinc columns too. Fix Bug#42400 - InnoDB autoinc code can't handle floating-point columns rb://84 and Mantis issue://162 ------------------------------------------------------------------------ r4111 | sunny | 2009-02-03 22:06:52 +0200 (Tue, 03 Feb 2009) | 2 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: Add the ULL suffix otherwise there is an overflow. ------------------------------------------------------------------------ r4128 | vasil | 2009-02-08 21:36:45 +0200 (Sun, 08 Feb 2009) | 18 lines Changed paths: M /branches/5.1/mysql-test/innodb-autoinc.result M /branches/5.1/mysql-test/innodb-autoinc.test branches/5.1: Merge a change from MySQL: ------------------------------------------------------------ revno: 2709.20.31 committer: Timothy Smith <timothy.smith@sun.com> branch nick: 51 timestamp: Fri 2008-12-19 01:28:51 +0100 message: Disable part of innodb-autoinc.test, because the MySQL server asserts when compiled --with-debug, due to bug 39828, ""autoinc wraps around when offset and increment > 1"".  This change should be reverted when that bug is fixed (and a a few other minor changes to the test as described in comments). modified: mysql-test/r/innodb-autoinc.result mysql-test/t/innodb-autoinc.test ------------------------------------------------------------------------ r4129 | vasil | 2009-02-08 21:54:25 +0200 (Sun, 08 Feb 2009) | 310 lines Changed paths: M /branches/5.1/mysql-test/innodb-autoinc.test branches/5.1: Merge a change from MySQL: [looks like the changes to innodb-autoinc.test were made as part of the following huge merge, but we are merging only changes to that file] ------------------------------------------------------------ revno: 2546.47.1 committer: Luis Soares <luis.soares@sun.com> branch nick: 5.1-rpl timestamp: Fri 2009-01-23 13:22:05 +0100 message: merge: 5.1 -> 5.1-rpl conflicts: Text conflict in client/mysqltest.cc Text conflict in mysql-test/include/wait_until_connected_again.inc Text conflict in mysql-test/lib/mtr_report.pm Text conflict in mysql-test/mysql-test-run.pl Text conflict in mysql-test/r/events_bugs.result Text conflict in mysql-test/r/log_state.result Text conflict in mysql-test/r/myisam_data_pointer_size_func.result Text conflict in mysql-test/r/mysqlcheck.result Text conflict in mysql-test/r/query_cache.result Text conflict in mysql-test/r/status.result Text conflict in mysql-test/suite/binlog/r/binlog_index.result Text conflict in mysql-test/suite/binlog/r/binlog_innodb.result Text conflict in mysql-test/suite/rpl/r/rpl_packet.result Text conflict in mysql-test/suite/rpl/t/rpl_packet.test Text conflict in mysql-test/t/disabled.def Text conflict in mysql-test/t/events_bugs.test Text conflict in mysql-test/t/log_state.test Text conflict in mysql-test/t/myisam_data_pointer_size_func.test Text conflict in mysql-test/t/mysqlcheck.test Text conflict in mysql-test/t/query_cache.test Text conflict in mysql-test/t/rpl_init_slave_func.test Text conflict in mysql-test/t/status.test removed: mysql-test/suite/parts/r/partition_bit_ndb.result mysql-test/suite/parts/t/partition_bit_ndb.test mysql-test/suite/parts/t/partition_sessions.test mysql-test/suite/sys_vars/inc/tmp_table_size_basic.inc mysql-test/suite/sys_vars/r/tmp_table_size_basic_32.result mysql-test/suite/sys_vars/r/tmp_table_size_basic_64.result mysql-test/suite/sys_vars/t/tmp_table_size_basic_32.test mysql-test/suite/sys_vars/t/tmp_table_size_basic_64.test mysql-test/t/log_bin_trust_function_creators_func-master.opt mysql-test/t/rpl_init_slave_func-slave.opt added: mysql-test/include/check_events_off.inc mysql-test/include/cleanup_fake_relay_log.inc mysql-test/include/have_simple_parser.inc mysql-test/include/no_running_event_scheduler.inc mysql-test/include/no_running_events.inc mysql-test/include/running_event_scheduler.inc mysql-test/include/setup_fake_relay_log.inc mysql-test/include/wait_condition_sp.inc mysql-test/r/fulltext_plugin.result mysql-test/r/have_simple_parser.require mysql-test/r/innodb_bug38231.result mysql-test/r/innodb_bug39438.result mysql-test/r/innodb_mysql_rbk.result mysql-test/r/partition_innodb_semi_consistent.result mysql-test/r/query_cache_28249.result mysql-test/r/status2.result mysql-test/std_data/bug40482-bin.000001 mysql-test/suite/binlog/r/binlog_innodb_row.result mysql-test/suite/binlog/t/binlog_innodb_row.test mysql-test/suite/rpl/r/rpl_binlog_corruption.result mysql-test/suite/rpl/t/rpl_binlog_corruption-master.opt mysql-test/suite/rpl/t/rpl_binlog_corruption.test mysql-test/suite/sys_vars/r/tmp_table_size_basic.result mysql-test/suite/sys_vars/t/tmp_table_size_basic.test mysql-test/t/fulltext_plugin-master.opt mysql-test/t/fulltext_plugin.test mysql-test/t/innodb_bug38231.test mysql-test/t/innodb_bug39438-master.opt mysql-test/t/innodb_bug39438.test mysql-test/t/innodb_mysql_rbk-master.opt mysql-test/t/innodb_mysql_rbk.test mysql-test/t/partition_innodb_semi_consistent-master.opt mysql-test/t/partition_innodb_semi_consistent.test mysql-test/t/query_cache_28249.test mysql-test/t/status2.test renamed: mysql-test/suite/funcs_1/r/is_collation_character_set_applicability.result => mysql-test/suite/funcs_1/r/is_coll_char_set_appl.result mysql-test/suite/funcs_1/t/is_collation_character_set_applicability.test => mysql-test/suite/funcs_1/t/is_coll_char_set_appl.test modified: .bzr-mysql/default.conf CMakeLists.txt client/mysql.cc client/mysql_upgrade.c client/mysqlcheck.c client/mysqltest.cc configure.in extra/resolve_stack_dump.c extra/yassl/include/openssl/ssl.h include/config-win.h include/m_ctype.h include/my_global.h mysql-test/extra/binlog_tests/database.test mysql-test/extra/rpl_tests/rpl_auto_increment.test mysql-test/include/commit.inc mysql-test/include/have_32bit.inc mysql-test/include/have_64bit.inc mysql-test/include/index_merge1.inc mysql-test/include/linux_sys_vars.inc mysql-test/include/windows_sys_vars.inc mysql-test/lib/mtr_report.pm mysql-test/mysql-test-run.pl mysql-test/r/alter_table.result mysql-test/r/commit_1innodb.result mysql-test/r/create.result mysql-test/r/csv.result mysql-test/r/ctype_ucs.result mysql-test/r/date_formats.result mysql-test/r/events_bugs.result mysql-test/r/events_scheduling.result mysql-test/r/fulltext.result mysql-test/r/func_if.result mysql-test/r/func_in.result mysql-test/r/func_str.result mysql-test/r/func_time.result mysql-test/r/grant.result mysql-test/r/index_merge_myisam.result mysql-test/r/information_schema.result mysql-test/r/innodb-autoinc.result mysql-test/r/innodb.result mysql-test/r/innodb_mysql.result mysql-test/r/log_bin_trust_function_creators_func.result mysql-test/r/log_state.result mysql-test/r/myisampack.result mysql-test/r/mysql.result mysql-test/r/mysqlcheck.result mysql-test/r/partition_datatype.result mysql-test/r/partition_mgm.result mysql-test/r/partition_pruning.result mysql-test/r/query_cache.result mysql-test/r/read_buffer_size_basic.result mysql-test/r/read_rnd_buffer_size_basic.result mysql-test/r/rpl_init_slave_func.result mysql-test/r/select.result mysql-test/r/status.result mysql-test/r/strict.result mysql-test/r/temp_table.result mysql-test/r/type_bit.result mysql-test/r/type_date.result mysql-test/r/type_float.result mysql-test/r/warnings_engine_disabled.result mysql-test/r/xml.result mysql-test/suite/binlog/r/binlog_database.result mysql-test/suite/binlog/r/binlog_index.result mysql-test/suite/binlog/r/binlog_innodb.result mysql-test/suite/binlog/r/binlog_row_mix_innodb_myisam.result mysql-test/suite/binlog/t/binlog_innodb.test mysql-test/suite/funcs_1/r/is_columns_is.result mysql-test/suite/funcs_1/r/is_engines.result mysql-test/suite/funcs_1/r/storedproc.result mysql-test/suite/funcs_1/storedproc/param_check.inc mysql-test/suite/funcs_2/t/disabled.def mysql-test/suite/ndb/t/disabled.def mysql-test/suite/parts/r/partition_bit_innodb.result mysql-test/suite/parts/r/partition_bit_myisam.result mysql-test/suite/parts/r/partition_special_innodb.result mysql-test/suite/parts/t/disabled.def mysql-test/suite/parts/t/partition_special_innodb.test mysql-test/suite/parts/t/partition_value_innodb.test mysql-test/suite/parts/t/partition_value_myisam.test mysql-test/suite/parts/t/partition_value_ndb.test mysql-test/suite/rpl/r/rpl_auto_increment.result mysql-test/suite/rpl/r/rpl_packet.result mysql-test/suite/rpl/r/rpl_row_create_table.result mysql-test/suite/rpl/r/rpl_slave_skip.result mysql-test/suite/rpl/r/rpl_trigger.result mysql-test/suite/rpl/t/disabled.def mysql-test/suite/rpl/t/rpl_packet.test mysql-test/suite/rpl/t/rpl_row_create_table.test mysql-test/suite/rpl/t/rpl_slave_skip.test mysql-test/suite/rpl/t/rpl_trigger.test mysql-test/suite/rpl_ndb/t/disabled.def mysql-test/suite/sys_vars/inc/key_buffer_size_basic.inc mysql-test/suite/sys_vars/inc/sort_buffer_size_basic.inc mysql-test/suite/sys_vars/r/key_buffer_size_basic_32.result mysql-test/suite/sys_vars/r/key_buffer_size_basic_64.result mysql-test/suite/sys_vars/r/sort_buffer_size_basic_32.result mysql-test/suite/sys_vars/r/sort_buffer_size_basic_64.result mysql-test/t/alter_table.test mysql-test/t/create.test mysql-test/t/csv.test mysql-test/t/ctype_ucs.test mysql-test/t/date_formats.test mysql-test/t/disabled.def mysql-test/t/events_bugs.test mysql-test/t/events_scheduling.test mysql-test/t/fulltext.test mysql-test/t/func_if.test mysql-test/t/func_in.test mysql-test/t/func_str.test mysql-test/t/func_time.test mysql-test/t/grant.test mysql-test/t/information_schema.test mysql-test/t/innodb-autoinc.test mysql-test/t/innodb.test mysql-test/t/innodb_mysql.test mysql-test/t/log_bin_trust_function_creators_func.test mysql-test/t/log_state.test mysql-test/t/myisam_data_pointer_size_func.test mysql-test/t/myisampack.test mysql-test/t/mysql.test mysql-test/t/mysqlcheck.test mysql-test/t/partition_innodb_stmt.test mysql-test/t/partition_mgm.test mysql-test/t/partition_pruning.test mysql-test/t/query_cache.test mysql-test/t/rpl_init_slave_func.test mysql-test/t/select.test mysql-test/t/status.test mysql-test/t/strict.test mysql-test/t/temp_table.test mysql-test/t/type_bit.test mysql-test/t/type_date.test mysql-test/t/type_float.test mysql-test/t/warnings_engine_disabled.test mysql-test/t/xml.test mysys/my_getopt.c mysys/my_init.c scripts/mysql_install_db.sh sql-common/my_time.c sql/field.cc sql/field.h sql/filesort.cc sql/ha_partition.cc sql/ha_partition.h sql/item.cc sql/item_cmpfunc.cc sql/item_func.h sql/item_strfunc.cc sql/item_sum.cc sql/item_timefunc.cc sql/item_timefunc.h sql/log.cc sql/log.h sql/log_event.cc sql/log_event.h sql/mysql_priv.h sql/mysqld.cc sql/opt_range.cc sql/partition_info.cc sql/repl_failsafe.cc sql/rpl_constants.h sql/set_var.cc sql/slave.cc sql/spatial.h sql/sql_acl.cc sql/sql_base.cc sql/sql_binlog.cc sql/sql_class.h sql/sql_cursor.cc sql/sql_delete.cc sql/sql_lex.cc sql/sql_lex.h sql/sql_locale.cc sql/sql_parse.cc sql/sql_partition.cc sql/sql_plugin.cc sql/sql_plugin.h sql/sql_profile.cc sql/sql_repl.cc sql/sql_select.cc sql/sql_select.h sql/sql_show.cc sql/sql_table.cc sql/sql_trigger.cc sql/sql_trigger.h sql/table.cc sql/table.h sql/unireg.cc storage/csv/ha_tina.cc storage/federated/ha_federated.cc storage/heap/ha_heap.cc storage/innobase/Makefile.am storage/innobase/btr/btr0sea.c storage/innobase/buf/buf0lru.c storage/innobase/dict/dict0dict.c storage/innobase/dict/dict0mem.c storage/innobase/handler/ha_innodb.cc storage/innobase/handler/ha_innodb.h storage/innobase/include/btr0sea.h storage/innobase/include/dict0dict.h storage/innobase/include/dict0mem.h storage/innobase/include/ha_prototypes.h storage/innobase/include/lock0lock.h storage/innobase/include/row0mysql.h storage/innobase/include/sync0sync.ic storage/innobase/include/ut0ut.h storage/innobase/lock/lock0lock.c storage/innobase/os/os0file.c storage/innobase/plug.in storage/innobase/row/row0mysql.c storage/innobase/row/row0sel.c storage/innobase/srv/srv0srv.c storage/innobase/srv/srv0start.c storage/innobase/ut/ut0ut.c storage/myisam/ft_boolean_search.c strings/ctype.c strings/xml.c tests/mysql_client_test.c win/configure.js mysql-test/suite/funcs_1/t/is_coll_char_set_appl.test ------------------------------------------------------------------------ r4165 | calvin | 2009-02-12 01:34:27 +0200 (Thu, 12 Feb 2009) | 1 line Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: minor non-functional changes. ------------------------------------------------------------------------ ------------------------------------------------------------------------ r4263 | vasil | 2009-02-20 15:00:46 +0200 (Fri, 20 Feb 2009) | 4 lines branches/zip: Add a ChangeLog entry for a change in r4262. ------------------------------------------------------------------------ r4265 | marko | 2009-02-20 22:31:03 +0200 (Fri, 20 Feb 2009) | 5 lines branches/zip: Make innodb_use_sys_malloc=ON the default. Replace srv_use_sys_malloc with UNIV_LIKELY(srv_use_sys_malloc) to improve branch prediction in the default case. Approved by Ken over the IM. ------------------------------------------------------------------------ r4266 | vasil | 2009-02-20 23:29:32 +0200 (Fri, 20 Feb 2009) | 7 lines branches/zip: Add a sentence at the top of COPYING.Google to clarify that this license does not apply to the whole InnoDB. Suggested by:	Ken ------------------------------------------------------------------------ r4268 | marko | 2009-02-23 12:43:51 +0200 (Mon, 23 Feb 2009) | 9 lines branches/zip: Initialize ut_list_mutex at startup.  Without this fix, ut_list_mutex would be used uninitialized when innodb_use_sys_malloc=1. This fix addresses Issue #181. ut_mem_block_list_init(): Rename to ut_mem_init() and make public. ut_malloc_low(), ut_free_all_mem(): Add ut_a(ut_mem_block_list_inited). mem_init(): Call ut_mem_init(). ------------------------------------------------------------------------ r4269 | marko | 2009-02-23 15:09:49 +0200 (Mon, 23 Feb 2009) | 7 lines branches/zip: When freeing an uncompressed BLOB page, tolerate garbage in FIL_PAGE_TYPE.  (Bug #43043, Issue #182) btr_check_blob_fil_page_type(): New function. btr_free_externally_stored_field(), btr_copy_blob_prefix(): Call btr_check_blob_fil_page_type() to check FIL_PAGE_TYPE. ------------------------------------------------------------------------ r4272 | marko | 2009-02-23 23:10:18 +0200 (Mon, 23 Feb 2009) | 8 lines branches/zip: Adjust the fix of Issue #182 in r4269 per Inaam's suggestion. btr_check_blob_fil_page_type(): Replace the parameter const char* op with ibool read.  Do not print anything about page type mismatch when reading a BLOB page in Antelope format. Print space id before page number. ------------------------------------------------------------------------ r4273 | marko | 2009-02-24 00:11:11 +0200 (Tue, 24 Feb 2009) | 1 line branches/zip: ut_mem_init(): Add the assertion !ut_mem_block_list_inited. ------------------------------------------------------------------------ r4274 | marko | 2009-02-24 00:14:38 +0200 (Tue, 24 Feb 2009) | 12 lines branches/zip: Fix bugs in the fix of Issue #181.  Tested inside and outside Valgrind, with innodb_use_sys_malloc set to 0 and 1. mem_init(): Invoke ut_mem_init() before mem_pool_create(), because the latter one will invoke ut_malloc(). srv_general_init(): Do not initialize the memory subsystem (mem_init()). innobase_init(): Initialize the memory subsystem (mem_init()) before calling srv_parse_data_file_paths_and_sizes(), which needs ut_malloc(). Call ut_free_all_mem() in error handling to clean up after the mem_init(). ------------------------------------------------------------------------ r4280 | marko | 2009-02-24 15:14:59 +0200 (Tue, 24 Feb 2009) | 1 line branches/zip: Remove unused function os_mem_alloc_nocache(). ------------------------------------------------------------------------ r4281 | marko | 2009-02-24 16:02:48 +0200 (Tue, 24 Feb 2009) | 1 line branches/zip: Remove the unused function dict_index_get_type(). ------------------------------------------------------------------------ r4283 | marko | 2009-02-24 23:06:56 +0200 (Tue, 24 Feb 2009) | 1 line branches/zip: srv0start.c: Remove unnecessary #include ""mem0pool.h"". ------------------------------------------------------------------------ r4284 | marko | 2009-02-24 23:26:38 +0200 (Tue, 24 Feb 2009) | 1 line branches/zip: mem0mem.c: Remove unnecessary #include ""mach0data.h"". ------------------------------------------------------------------------ r4288 | vasil | 2009-02-25 10:48:07 +0200 (Wed, 25 Feb 2009) | 21 lines branches/zip: Merge revisions 4261:4287 from branches/5.1: ------------------------------------------------------------------------ r4287 | sunny | 2009-02-25 05:32:01 +0200 (Wed, 25 Feb 2009) | 10 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/mysql-test/innodb-autoinc.result M /branches/5.1/mysql-test/innodb-autoinc.test branches/5.1: Fix Bug#42714 AUTO_INCREMENT errors in 5.1.31. There are two changes to the autoinc handling. 1. To fix the immediate problem from the bug report, we must ensure that the value written to the table is always less than the max value stored in dict_table_t. 2. The second related change is that according to MySQL documentation when the offset is greater than the increment, we should ignore the offset. ------------------------------------------------------------------------ ------------------------------------------------------------------------ r4289 | vasil | 2009-02-25 10:53:51 +0200 (Wed, 25 Feb 2009) | 4 lines branches/zip: Add ChangeLog entry for the fix in r4288. ------------------------------------------------------------------------ r4290 | vasil | 2009-02-25 11:05:44 +0200 (Wed, 25 Feb 2009) | 11 lines branches/zip: Make ChangeLog entries for bugs in bugs.mysql.com in the form: Fix Bug#12345 bug title (for bugs after 1.0.2 was released and the ChangeLog published) There is no need to bloat the ChangeLog with information that is available via bugs.mysql.com. Discussed with:	Marko ------------------------------------------------------------------------ r4291 | vasil | 2009-02-25 11:08:32 +0200 (Wed, 25 Feb 2009) | 4 lines branches/zip: Fix Bug synopsis and remove explanation ------------------------------------------------------------------------ r4292 | marko | 2009-02-25 12:09:15 +0200 (Wed, 25 Feb 2009) | 25 lines branches/zip: Correct the initialization of the memory subsystem once again, to finally put Issue #181 to rest. Revert some parts of r4274.  It is best not to call ut_malloc() before srv_general_init(). mem_init(): Do not call ut_mem_init(). srv_general_init(): Initialize the memory subsystem in two phases: first ut_mem_init(), then mem_init().  This is because os_sync_init() and sync_init() depend on ut_mem_init() and mem_init() depends on os_sync_init() or sync_init(). srv_parse_data_file_paths_and_sizes(), srv_parse_log_group_home_dirs(): Remove the output parameters.  Assign to the global variables directly.  Allocate memory with malloc() instead of ut_malloc(), because these functions will be called before srv_general_init(). srv_free_paths_and_sizes(): New function, for cleaning up after srv_parse_data_file_paths_and_sizes() and srv_parse_log_group_home_dirs(). rb://92 approved by Sunny Bains ------------------------------------------------------------------------ r4297 | vasil | 2009-02-25 17:19:19 +0200 (Wed, 25 Feb 2009) | 4 lines branches/zip: White-space cleanup in the ChangeLog ------------------------------------------------------------------------ r4301 | vasil | 2009-02-25 21:33:32 +0200 (Wed, 25 Feb 2009) | 5 lines branches/zip: Do not output the commands that restore the environment because they depend on the state of the environment before the test starts executing. ------------------------------------------------------------------------ r4315 | vasil | 2009-02-26 09:21:20 +0200 (Thu, 26 Feb 2009) | 5 lines branches/zip: Apply any necessary patches to the mysql tree at the end of setup.sh This step was previously done manually (and sometimes forgotten). ------------------------------------------------------------------------ r4319 | marko | 2009-02-26 23:27:51 +0200 (Thu, 26 Feb 2009) | 6 lines branches/zip: btr_check_blob_fil_page_type(): Do not report FIL_PAGE_TYPE mismatch even when purging a BLOB. Heavy users may have large data files created with MySQL 5.0 or earlier, and they don not want to have the error log flooded with such messages. This fixes Issue #182. ------------------------------------------------------------------------ r4320 | inaam | 2009-02-27 02:13:19 +0200 (Fri, 27 Feb 2009) | 8 lines branches/zip This is to revert the changes made to the plug.in (r4251) as a fix for issue# 178. Changes to plug.in will not propogate to a plugin installation unless autotools are rerun which is unacceptable. A fix for issue# 178 will be committed in a separate commit. ------------------------------------------------------------------------ r4321 | inaam | 2009-02-27 02:16:46 +0200 (Fri, 27 Feb 2009) | 6 lines branches/zip This is a fix for issue#178. Instead of using UNIV_LINUX which is defined through CFLAGS we use compiler generated define __linux__ that is effective for both .c and .cc files. ------------------------------------------------------------------------ r4324 | vasil | 2009-02-27 13:27:18 +0200 (Fri, 27 Feb 2009) | 39 lines branches/zip: Add FreeBSD to the list of the operating systems that have sizeof(pthread_t) == sizeof(void*) (i.e. word size). On FreeBSD pthread_t is defined like: /usr/include/sys/_pthreadtypes.h: typedef struct  pthread                 *pthread_t; I did the following tests (per Inaam's recommendation): a) appropriate version of GCC is available on that platform (4.1.2 or higher for atomics to be available) On FreeBSD 6.x the default compiler is 3.4.6, on FreeBSD 7.x the default one is 4.2.1. One can always install the version of choice from the ports collection. If gcc 3.x is used then HAVE_GCC_ATOMIC_BUILTINS will not be defined and thus the change I am committing will make no difference. b) find out if sizeof(pthread_t) == sizeof(long) On 32 bit both are 4 bytes, on 64 bit both are 8 bytes. c) find out the compiler generated platform define (e.g.: __aix, __sunos__ etc.) The macro is __FreeBSD__. d) patch univ.i with the appropriate platform define e) build the mysql f) ensure it is using atomic builtins (look at the err.log message at system startup. It should say we are using atomics for both mutexes and rw-locks) g) do sanity testing (keeping in view the smp changes) I ran the mysql-test suite. All tests pass. ------------------------------------------------------------------------ r4353 | vasil | 2009-03-05 09:27:29 +0200 (Thu, 05 Mar 2009) | 6 lines branches/zip: As suggested by Ken, print a message that says that the Google SMP patch (GCC atomics) is disabled if it is. Also extend the message when the patch is partially enabled to make it clear that it is partially enabled. ------------------------------------------------------------------------ r4356 | vasil | 2009-03-05 13:49:51 +0200 (Thu, 05 Mar 2009) | 4 lines branches/zip: Fix typo made in r4353. ------------------------------------------------------------------------ r4357 | vasil | 2009-03-05 16:38:59 +0200 (Thu, 05 Mar 2009) | 23 lines branches/zip: Implement a check whether pthread_t objects can be used by GCC atomic builtin functions. This check is implemented in plug.in and defines the macro HAVE_ATOMIC_PTHREAD_T. This macro is checked in univ.i and the relevant part of the code enabled (the one that uses GCC atomics against pthread_t objects). In addition to this, the same program that is compiled as part of the plug.in check is added in ut/ut0auxconf.c. In the InnoDB Plugin source archives that are shipped to the users, a generated Makefile.in is added. That Makefile.in will be modified to compile ut/ut0auxconf.c and define the macro HAVE_ATOMIC_PTHREAD_T if the compilation succeeds. I.e. Makefile.in will emulate the work that is done by plug.in. This is done in order to make the check happen and HAVE_ATOMIC_PTHREAD_T eventually defined without regenerating MySQL's ./configure from ./storage/innobase/plug.in. The point is not to ask users to install the autotools and regenerate ./configure. rb://95 Approved by:	Marko ------------------------------------------------------------------------ r4360 | vasil | 2009-03-05 22:23:17 +0200 (Thu, 05 Mar 2009) | 21 lines branches/zip: Merge revisions 4287:4357 from branches/5.1: ------------------------------------------------------------------------ r4325 | sunny | 2009-03-02 02:28:52 +0200 (Mon, 02 Mar 2009) | 10 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/mysql-test/innodb-autoinc.result M /branches/5.1/mysql-test/innodb-autoinc.test branches/5.1: Bug#43203: Overflow from auto incrementing causes server segv It was not a SIGSEGV but an assertion failure. The assertion was checking the invariant that *first_value passed in by MySQL doesn't contain a value that is greater than the max value for that type. The assertion has been changed to a check and if the value is greater than the max we report a generic AUTOINC failure. rb://93 Approved by Heikki ------------------------------------------------------------------------ ------------------------------------------------------------------------ r4361 | vasil | 2009-03-05 22:27:54 +0200 (Thu, 05 Mar 2009) | 30 lines branches/zip: Merge revision 4358 from branches/5.1 (resolving a conflict): ------------------------------------------------------------------------ r4358 | vasil | 2009-03-05 21:21:10 +0200 (Thu, 05 Mar 2009) | 21 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: Merge a change from MySQL: ------------------------------------------------------------ revno: 2728.19.1 committer: Alfranio Correia <alfranio.correia@sun.com> branch nick: mysql-5.1-bugteam timestamp: Tue 2009-02-03 11:36:46 +0000 message: BUG#42445 Warning messages in innobase/handler/ha_innodb.cc There was a type casting problem in the storage/innobase/handler/ha_innodb.cc, (int ha_innobase::write_row(...)). Innobase uses has an internal error variable of type 'ulint' while mysql uses an 'int'. To fix the problem the function manipulates an error variable of type 'ulint' and only casts it into 'int' when needs to return the value. modified: storage/innobase/handler/ha_innodb.cc ------------------------------------------------------------------------ ------------------------------------------------------------------------ r4362 | vasil | 2009-03-05 22:29:07 +0200 (Thu, 05 Mar 2009) | 23 lines branches/zip: Merge revision 4359 from branches/5.1: ------------------------------------------------------------------------ r4359 | vasil | 2009-03-05 21:42:01 +0200 (Thu, 05 Mar 2009) | 14 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: Merge a change from MySQL: ------------------------------------------------------------ revno: 2747 committer: Timothy Smith <timothy.smith@sun.com> branch nick: 51 timestamp: Fri 2009-01-16 17:49:07 +0100 message: Add another cast to ignore int/ulong difference in error types, silence warning on Win64 modified: storage/innobase/handler/ha_innodb.cc ------------------------------------------------------------------------ ------------------------------------------------------------------------ r4363 | vasil | 2009-03-05 22:31:37 +0200 (Thu, 05 Mar 2009) | 4 lines branches/zip: Add ChangeLog entry for the bugfix in c4360. ------------------------------------------------------------------------ r4378 | calvin | 2009-03-09 10:10:17 +0200 (Mon, 09 Mar 2009) | 7 lines branches/zip: remove compile flag MYSQL_SERVER for dynamic plugin The dynamic plugin on Windows used to be built with MYSQL_SERVER compile flag, while it is not the case for other platforms. r3797 assumed MYSQL_SERVER was not defined for dynamic plugin, which introduced the engine crash during dropping a database. ------------------------------------------------------------------------ r4396 | marko | 2009-03-12 09:22:27 +0200 (Thu, 12 Mar 2009) | 3 lines branches/zip: btr_store_big_rec_extern_fields(): Initialize FIL_PAGE_TYPE in a separate redo log entry.  This will make ibbackup --apply-log debugging easier. ------------------------------------------------------------------------ r4397 | marko | 2009-03-12 09:26:11 +0200 (Thu, 12 Mar 2009) | 3 lines branches/zip: trx_sys_create_doublewrite_buf(): As the dummy change, initialize FIL_PAGE_TYPE.  This will make it easier to write the debug assertions for ibbackup --apply-log. ------------------------------------------------------------------------ r4401 | marko | 2009-03-12 10:26:40 +0200 (Thu, 12 Mar 2009) | 19 lines branches/zip: Merge revisions 4359:4400 from branches/5.1: ------------------------------------------------------------------------ r4399 | marko | 2009-03-12 09:38:05 +0200 (Thu, 12 Mar 2009) | 2 lines branches/5.1: row_sel_get_clust_rec_for_mysql(): Store the cursor position also for unlock_row().  (Bug #39320) ------------------------------------------------------------------------ r4400 | marko | 2009-03-12 10:06:44 +0200 (Thu, 12 Mar 2009) | 5 lines branches/5.1: Fix a bug in multi-table semi-consistent reads. Remember the acquired record locks per table handle (row_prebuilt_t) rather than per transaction (trx_t), so that unlock_row should successfully unlock all non-matching rows in multi-table operations. This deficiency was found while investigating Bug #39320. ------------------------------------------------------------------------ These were submitted as rb://94 and rb://96 and approved by Heikki Tuuri. ------------------------------------------------------------------------ r4455 | marko | 2009-03-16 11:43:34 +0200 (Mon, 16 Mar 2009) | 2 lines branches/zip: UT_LIST_VALIDATE(): Add the parameter ASSERTION and adjust all callers. ------------------------------------------------------------------------ r4456 | marko | 2009-03-16 12:59:25 +0200 (Mon, 16 Mar 2009) | 6 lines branches/zip: UT_LIST_VALIDATE(): Assert that the link is non-NULL before dereferencing it.  In this way, ut_list_node_313 will be pointing to the last non-NULL list item at the time of the assertion failure.  (gcc-4.3.2 -O3 seems to optimize the common subexpressions and make the variable NULL, though.) ------------------------------------------------------------------------ r4457 | marko | 2009-03-16 14:12:02 +0200 (Mon, 16 Mar 2009) | 2 lines branches/zip: sync_thread_add_level(): Make the assertions about level == SYNC_BUF_BLOCK more readable. ------------------------------------------------------------------------ r4461 | vasil | 2009-03-17 09:38:19 +0200 (Tue, 17 Mar 2009) | 6 lines branches/zip: Remove mysql-test/patches/bug32625.diff because that bug was fixed in the mysql repository (1 year and 4 months after sending them the simple patch!). See http://bugs.mysql.com/32625 ------------------------------------------------------------------------ r4465 | marko | 2009-03-17 12:34:19 +0200 (Tue, 17 Mar 2009) | 1 line branches/zip: buf0buddy.c: Add and adjust some debug assertions. ------------------------------------------------------------------------ r4473 | vasil | 2009-03-17 15:50:30 +0200 (Tue, 17 Mar 2009) | 5 lines branches/zip: Increment the InnoDB Plugin version from 1.0.3 to 1.0.4 now that 1.0.3 has been released. ------------------------------------------------------------------------ r4478 | vasil | 2009-03-18 11:53:53 +0200 (Wed, 18 Mar 2009) | 5 lines branches/zip: Remove mysql-test/patches/bug41893.diff because that bug has been fixed in the MySQL repository, see http://bugs.mysql.com/41893. ------------------------------------------------------------------------ r4479 | marko | 2009-03-18 12:43:54 +0200 (Wed, 18 Mar 2009) | 2 lines branches/zip: buf_LRU_block_remove_hashed_page(): Add some debug assertions. ------------------------------------------------------------------------ r4480 | marko | 2009-03-18 14:32:13 +0200 (Wed, 18 Mar 2009) | 1 line branches/zip: buf_buddy_free_low(): Correct the function comment. ------------------------------------------------------------------------ r4482 | marko | 2009-03-19 15:23:32 +0200 (Thu, 19 Mar 2009) | 12 lines branches/zip: Merge revisions 4400:4481 from branches/5.1: ------------------------------------------------------------------------ r4481 | marko | 2009-03-19 15:01:48 +0200 (Thu, 19 Mar 2009) | 6 lines branches/5.1: row_unlock_for_mysql(): Do not unlock records that were modified by the current transaction.  This bug was introduced or unmasked in r4400. rb://97 approved by Heikki Tuuri ------------------------------------------------------------------------ ------------------------------------------------------------------------ r4490 | marko | 2009-03-20 12:33:33 +0200 (Fri, 20 Mar 2009) | 4 lines branches/zip: Non-functional change for reducing dependencies in InnoDB Hot Backup: Replace srv_sys->dummy_ind1 and srv_sys->dummy_ind2 with dict_ind_redundant and dict_ind_compact, initialized in dict_init(). ------------------------------------------------------------------------ r4491 | marko | 2009-03-20 12:45:18 +0200 (Fri, 20 Mar 2009) | 2 lines branches/zip: Add const qualifiers or in/out comments to some function parameters in log0log. ------------------------------------------------------------------------ r4492 | marko | 2009-03-20 12:52:14 +0200 (Fri, 20 Mar 2009) | 5 lines branches/zip: page_validate(): Always report the space id and the name of the index. In Hot Backup, do not invoke comparison functions, as MySQL collations will be unavailable. ------------------------------------------------------------------------ r4493 | marko | 2009-03-20 13:24:06 +0200 (Fri, 20 Mar 2009) | 1 line branches/zip: Replace fil_get_space_for_id_low() with fil_space_get_by_id(). ------------------------------------------------------------------------ r4494 | marko | 2009-03-20 13:51:35 +0200 (Fri, 20 Mar 2009) | 3 lines branches/zip: fil0fil.c: Refer to fil_system directly, not via local vars. This eliminates some ""unused variable"" warnings when building InnoDB Hot Backup in such a way that all mutex operations are no-ops. ------------------------------------------------------------------------ r4495 | marko | 2009-03-20 14:15:52 +0200 (Fri, 20 Mar 2009) | 1 line branches/zip: innobase_get_at_most_n_mbchars(): Declare in ha_prototypes.h. ------------------------------------------------------------------------ r4496 | marko | 2009-03-20 14:48:26 +0200 (Fri, 20 Mar 2009) | 1 line branches/zip: recv_recover_page(): Remove compile-time constant parameters. ------------------------------------------------------------------------ r4497 | marko | 2009-03-20 14:56:19 +0200 (Fri, 20 Mar 2009) | 1 line branches/zip: recv_sys_init(): Remove a compile-time constant parameter. ------------------------------------------------------------------------ r4498 | marko | 2009-03-20 15:08:05 +0200 (Fri, 20 Mar 2009) | 4 lines branches/zip: Non-functional change: Add const qualifiers. log_block_checksum_is_ok_or_old_format(), recv_sys_add_to_parsing_buf(): The log block is read-only.  Make it const. ------------------------------------------------------------------------ r4499 | marko | 2009-03-20 15:10:25 +0200 (Fri, 20 Mar 2009) | 1 line branches/zip: recv_scan_log_recs(): Remove a compile-time constant parameter. ------------------------------------------------------------------------ r4500 | marko | 2009-03-20 15:47:17 +0200 (Fri, 20 Mar 2009) | 1 line branches/zip: fil_init(): Add the parameter hash_size. ------------------------------------------------------------------------ r4501 | vasil | 2009-03-20 16:50:41 +0200 (Fri, 20 Mar 2009) | 4 lines branches/zip: Add any entry about the release of 1.0.3 in the ChangeLog. ------------------------------------------------------------------------ r4515 | marko | 2009-03-23 10:49:53 +0200 (Mon, 23 Mar 2009) | 1 line branches/zip: hash_table_t: adaptive: Remove from UNIV_HOTBACKUP builds. ------------------------------------------------------------------------ r4516 | marko | 2009-03-23 10:57:16 +0200 (Mon, 23 Mar 2009) | 2 lines branches/zip: Define and use ASSERT_HASH_MUTEX_OWN. Make it a no-op in UNIV_HOTBACKUP builds. ------------------------------------------------------------------------ r4517 | marko | 2009-03-23 11:07:20 +0200 (Mon, 23 Mar 2009) | 2 lines branches/zip: Define and use PAGE_ZIP_MATCH. In UNIV_HOTBACKUP builds, assume fixed allocation. ------------------------------------------------------------------------ r4521 | marko | 2009-03-23 12:05:47 +0200 (Mon, 23 Mar 2009) | 1 line branches/zip: buf_page_print(): Clean up the code #ifdef UNIV_HOTBACKUP. ------------------------------------------------------------------------ r4522 | marko | 2009-03-23 12:20:50 +0200 (Mon, 23 Mar 2009) | 2 lines branches/zip: Exclude some operating system interface code from UNIV_HOTBACKUP builds. ------------------------------------------------------------------------ r4523 | marko | 2009-03-23 13:00:43 +0200 (Mon, 23 Mar 2009) | 2 lines branches/zip: Remove the remaining references to hash_table_t::adapive from UNIV_HOTBACKUP builds.  This should have been done in r4515. ------------------------------------------------------------------------ r4524 | marko | 2009-03-23 14:05:18 +0200 (Mon, 23 Mar 2009) | 2 lines branches/zip: Enclose recv_recovery_from_backup_on and recv_recovery_from_backup_is_on() in #ifdef UNIV_LOG_ARCHIVE. ------------------------------------------------------------------------ r4525 | marko | 2009-03-23 14:57:45 +0200 (Mon, 23 Mar 2009) | 2 lines branches/zip: recv_parse_or_apply_log_rec_body(): Add debug assertions ensuring that FIL_PAGE_TYPE makes sense when applying log records. ------------------------------------------------------------------------ r4526 | marko | 2009-03-23 16:21:34 +0200 (Mon, 23 Mar 2009) | 2 lines branches/zip: Remove unneeded definitions and dependencies from UNIV_HOTBACKUP builds. ------------------------------------------------------------------------ r4527 | calvin | 2009-03-23 23:15:33 +0200 (Mon, 23 Mar 2009) | 5 lines branches/zip: adjust build files on Windows Adjust the patch positions based on the latest MySQL source. Also add the patches to the .bat files for vs9. ------------------------------------------------------------------------ "	9bff459082105fb9d9ec4675d2913f5b3ee7e580
----------------------------
Fix for bug #42965: isinf() on 32bit x86 with gcc 4.3 can produce incorrect results for ROUND() Added a workaround and a configure check to test whether isinf() is affected by the GCC bug #39228. Since no code in MySQL server is currently affected by that bug, the patch is actually a safeguard for possible future code modifications. No test cases or changelog entries are needed. 	73cb9b6e04a110c3fd71f68bcf3bc0cbfcc4f326
----------------------------
BUG#41719 delayed INSERT into timestamp col needs set time_zone for concurrent binlogging When do 'insert delayed' operation, the time_zone info doesn't be keeped in the row info. So when we do insert sometime later, time_zone didn't write into binlog. This will cause wrong result for timestamp column in slave. Our solution is that adding time_zone info with the delayed-row and restoring time_zone from row-info when execute that row in the furture by another thread. So we can write correct time_zone info into binlog and got correct result in slave. 	97c6e3f88b36d7feaee2872291c80401d2d998f8
----------------------------
Bug#43254: SQL_SELECT_LIMIT=0 crashes command line client When asking what database is selected, client expected to *always* get an answer from the server. We now handle failure more gracefully. See comments in ticket for a discussion of what happens, and how things interlock. 	e5a599bd73d49b73462e118f9a831cbae2ac4864
----------------------------
Fix for BUG#41330 -Myisam table open count set to zero before index blocks are written. When we have a myisam table with DELAY_KEY_WRITE option, index updates are not applied until the flush tables command is issued or until the server is shutdown. If server gets killed before the index updates are written to disk, the index file is corrupted as expected but the table is not marked as crashed. So when we start server with myisam-recover, table is not repaired leaving the table unusable. The problem is when we try to write the index updates to index file, we decrement the open_count even before the flushing the keys to index file. Fixed by moving the decrement operation after flushing the keys to the index file. So we always have non zero open count if the flush table operation is killed and when the server is started with mysiam-recover option, it marks the table as crashed and repairs it. Note: No testcase for added as we need to kill the server and start the server with different set of options and other non trivial operations involved. 	0e0843d8700a791e379e8c2d41bc85eff307026f
----------------------------
"WL#4778 Make ndb_config print configuration parameters - Add support for printing the available config parameters using ndb_config - supported commands are ""ndb_config --configinfo"" and ""ndb_config --configinfo --xml"" "	b2b429f55eb1a535c169d26cee8e6dffa833b779
----------------------------
Bug#43153: Version comment is too long mysql-client used static buffer to concatenate server- version and version_comment. Sufficiently long comments could get cut off. This was harmless, but looked daft. Now using a dynamic buffer instead. 	dc1e9bfb562969845b0e39585d9224d33a6fb108
----------------------------
"Copy include/config.h to include/my_config.h at configure-time.  Also, continue to update it at make-time. One shouldn't need to run ""make"" on server source to get the stuff we say plugins should use. "	f30dda6ff1b14f8e342870bc336d0cf97f6832d7
----------------------------
Merge: 79909a2 efbaf94 Merge @@optimizer_switch no_xxx -> xxx=off change to 6.0 	108109b5d3e2758d08476c3cc0b4918236c5d0cc
----------------------------
Fixed test failures in 5.1/6.0 introduced by the patch for bug #41486. Session max_allowed_packet is read-only as of MySQL 5.1.31. In addition, the global variable now has no effect on the current session. 	a82402dd6fd603168d5c23c3d0d424b64fdfee9d
----------------------------
Bug #42861 Assigning invalid directories to --slave-load-tmpdir crashes the slave Compiling with debug and assigning an invalid directory to --slave-load-tmpdir was crashing the slave due to the following assertion DBUG_ASSERT(! is_set() || can_overwrite_status). This assertion assumes that a thread can change its state once (i.e. ok,error, etc) before aborting, cleaning/resuming or completing its execution unless the overwrite flag (i.e. can_overwrite_status) is true. The Append_block_log_event::do_apply_event which is responsible for creating temporary file(s) was not cleaning the thread state. Thus a failure while trying to create a file in an invalid temporary directory was causing the crash. To fix the problem we check if the temporary directory is valid before starting the SQL Thread and reset the thread state before creating a file in Append_block_log_event::do_apply_event. 	2f16f07054115d2f328ae1bce726da26d2858b30
----------------------------
Fix for bug#41486: extra character appears in BLOB for every ~40Mb after mysqldump/import When the input string exceeds the maximum allowed size for the internal buffer, batch_readline() returns a truncated string. Since there was no way for a caller to determine whether the string was truncated or not, the command line client assumed batch_readline() to always return the whole input string and appended a newline character. This resulted in garbled data when importing dumps containing strings longer than the maximum input buffer size. Fixed by adding a flag to the batch_readline() interface to signal a truncated string to the caller. Other minor problems fixed during patch implementation: - The maximum allowed buffer size for batch_readline() was set up depending on the client's max_allowed_packet value. It does not actully make any sense, as those variables are not related. The input buffer size limit is now always set to 1 MB. - fill_buffer() did not always set the EOF flag. - The input buffer could actually grow twice as the specified limit due to insufficient checks in intern_read_line(). 	a3e5737abdf3a555e06c9ae073b2d01efe251dd6
----------------------------
"@@optimizer_switch switch from no_xxx to xxx={on|off} syntax: - Fix valgrind warning on attempt to run a ""SET optimizer_switch=number"" statement. Need to call c_ptr_safe() as strings returned by non-string items are not necessarily null-terminated. "	64603af1b912d86f855ad77fe191cf563998b646
----------------------------
Bug#36446: Attempt to set @@join_buffer_size to its minimum value produces spurious warning If a sys-var has a base and a block-size>1, and then a user-supplied value >= minimum ended up below minimum thanks to block-size alignment, we threw a warning. This meant for instance that when getting, then setting the minimum, we'd see a warning. This was needlessly confusing. (updated patch) 	611a09f596c5944a7bc5e846fede3ce9ce69d66d
----------------------------
Bug#39326: mysqld_safe doesn't use --basedir value in search of \ my_print_defaults Now use basedir to set an unset ledir and to find the location of my_print_defaults . 	e53a81335266c30604db7e30d638db57d17457b3
----------------------------
@@optimizer_switch backport and change from no_xxx to xx=on|off: post-review fixes 	c7e44fddfcc15b96e804180ff4cfe88df62856d6
----------------------------
Bug #43614: make distcheck failure (ndb/Makefile is made, but not subdirs of ndb) There are some recursive targets that automake generates which reference DIST_SUBDIRS.  It's critical, then, for such subdirs to exist even if they won't be built as part of SUBDIRS. During a VPATH build, it is the configure script which creates the subdirs (when it processes the AC_CONFIG_FILES() for each subdir's Makefile).  If autoconf doesn't create a subdir's Makefile, then the recursive make will fail when it is unable to cd into that subdir. This isn't a problem in non-VPATH builds, because the subdirs are all present in the source tarball.  So the problem only shows up during 'make distcheck', which does a VPATH build. The fix is to look, when configure is being created by autoconf, for any plugin subdirectories.  These are the dynamic subdirectories which need to be handled specially.  It's enough to tell autoconf to generate a Makefile for any Makefile.am found in the plugin directory - all plugin subdirectories using automake (i.e., listed in the plugin's DIST_SUBDIRS) will have a Makefile.am. This is done by calling 'find'.  This means that 'find' must be in the PATH on the host that is running autoconf.  'find' is NOT needed when calling configure, so it is not an additional dependency for the user. Finally, ha_ndbcluster.m4 had called AC_CONFIG_FILES() on all those subdir Makefiles, but only when the plugin was actually being built.  So it didn't work in the case that NDB was not being built.  All of those Makefiles have to be removed from this static list, since the plugin machinery is now adding them automatically.  autoconf fails if a file is duplicated in AC_CONFIG_FILES(). 	c14a43cd40012a41096fafe519a304adbab7e766
----------------------------
Bug#42610 Dynamic plugin broken in 5.1.31 --added ability to obtain plugin variables from my.cnf on INSTALL PLUGIN stage --option 'ignore-builtin-innodb' disables all InnoDB builtin plugins (including I_S plugins) 	390afdd16ee2a4aef2271bdf6f3b412d7d562ce7
----------------------------
Bug#40657: assertion with out of range variables and traditional sql_mode normalize error-messages 	e58840fc85b9e60e3247882981a3f1381c50aa8c
----------------------------
Bug#36540: CREATE EVENT and ALTER EVENT statements fail with large server_id The problem is that creating a event could fail if the value of the variable server_id didn't fit in the originator column of the event system table. The cause is two-fold: it was possible to set server_id to a value outside the documented range (from 0 to 2^32-1) and the originator column of the event table didn't have enough room for values in this range. The log tables (general_log and slow_log) also don't have a proper column type to store the server_id and having a large server_id value could prevent queries from being logged. The solution is to ensure that all system tables that store the server_id value have a proper column type (int unsigned) and that the variable can't be set to a value that is not within the range. 	c5bb49d020066c2805efc52507e904d8342ed0a7
----------------------------
Change optimizer_switch from no_xxx to xxx=on/xx=off. 	7877de39fdb745ea7daebf9e30b86b5354ba504f
----------------------------
Bug#40657: assertion with out of range variables and traditional sql_mode test-fixes for 32-bit 	dec80f3ee57def44779da22f6dafa7b4b9bb2bfd
----------------------------
Bug #43410 --skip-core-file has no effect if core file size is set Would not prevent mysqld from core dumping Passes --nocore arg to safe_process, which then sets rlimit core to 0 for child 	8179ed26494806a9cf0218b9d8d6bba0924d28ea
----------------------------
ndb test - The error message provoked by 'check_reload_config_invalid_config_filename' depends on wether ndb_mgmd was started with my.cnf or not - handle that. 	424efa4281b74b29e1c29fb2e855630b3b7bc0f0
----------------------------
Bug#43420 ndb_mgmd cores on in InitConfigFileParser::Context::reportWarning - Remove remnants of m_errrstream(which was left uninitialized) and use g_eventLogger everywhere 	f4900857b278b572de9e7eb242dffd2abd17013a
----------------------------
"BUG#22082 Slave hangs(holds mutex) on ""disk full"" When disk is full, server may waiting for free space while writing binlog, relay-log or MyISAM tables. The server will continue after user have freed some space. But the error message printed was not quite clear about the how often the error message is printed, and there will be a delay before the server continue and user freeing space. And caused users thinking that the server was hanging forever. This patch fixed the problem by making the error messages printed more clear. The error message is split into two part, the first part will only be printed once, and the second part will be printed very 10 times. Message first part: Disk is full writing '<filename>' (Errcode: <errorno>). Waiting for someone to free space... (Expect up to 60 secs delay for server to continue after freeing disk space) Message second part: Retry in 60 secs, Message reprinted in 600 secs "	e7605e338b0f2126cae6083a3f92f210f4ff2488
----------------------------
Bug#40657: assertion with out of range variables and traditional sql_mode Some changes that make things more elegant in 6.0, backported so the code is mostly the same in 5.1, for easier maintainence. 	38a9c269b53a76634e9e9450e091a4fdf3937bbb
----------------------------
"branches/zip: Implement a check whether pthread_t objects can be used by GCC atomic builtin functions. This check is implemented in plug.in and defines the macro HAVE_ATOMIC_PTHREAD_T. This macro is checked in univ.i and the relevant part of the code enabled (the one that uses GCC atomics against pthread_t objects). In addition to this, the same program that is compiled as part of the plug.in check is added in ut/ut0auxconf.c. In the InnoDB Plugin source archives that are shipped to the users, a generated Makefile.in is added. That Makefile.in will be modified to compile ut/ut0auxconf.c and define the macro HAVE_ATOMIC_PTHREAD_T if the compilation succeeds. I.e. Makefile.in will emulate the work that is done by plug.in. This is done in order to make the check happen and HAVE_ATOMIC_PTHREAD_T eventually defined without regenerating MySQL's ./configure from ./storage/innobase/plug.in. The point is not to ask users to install the autotools and regenerate ./configure. rb://95 Approved by:	Marko "	3c9bec1100fce35efbc70adf62a80aceadfe46c9
----------------------------
Bug#40363 Bug 20023 is not fixed on 5.0 This is a back port from 5.1 to 5.0. Fix for BUG 20023: mysql_change_user() resets the value of SQL_BIG_SELECTS. The bug was that SQL_BIG_SELECTS was not properly set in COM_CHANGE_USER. The fix is to update SQL_BIG_SELECTS properly. 	76a5891429c62b3ec0fe3c74e8f3efb272433135
----------------------------
BUG#41980 SBL, INSERT .. SELECT .. LIMIT = ERROR, even when @@SQL_LOG_BIN is 0 ! When binlog_format is STATEMENT and the statement is unsafe before, the unsafe warning/error message was issued without checking whether the SQL_LOG_BIN was turned on or not. Fixed with adding a sql_log_bin_toplevel flag in THD to check whether SQL_LOG_BIN is ON in current session whatever the current is in sp or not. 	58dfaa8b6740402bc10b66ac0a3eeeb81ac6e86a
----------------------------
"Fix for bug #40702 ""skip_name_resolve fails sporadically on pushbuild"". Under new MTR the server is not restarted for every test, so threads started in the previous test case can show up in the results of SHOW PROCESSLIST statement in this test, causing a test failure. Since we are not really interested in results of SHOW PROCESSLIST in this test but rather in fact that server doesn't crash when executing this statement this fix simply disables output of this statement. "	ac2d9c177d3dd3ce9be9bd119d669c07e75f85bc
----------------------------
"WL#4804 Make ndbd's angel portable - Remove _ownNodeId variable from ConfigRetriever, instead it need to be passed in when calling th only function('getConfig') that uses it. - Remove ""cruft"" "	3bbe18a82225c097507761d075c2c3cb25eec1a4
----------------------------
BUG#39526 sql_mode not retained in binary log for CREATE PROCEDURE Set wrong sql_mode when creating a procedure. So that the sql_mode can't be writen into binary log correctly. Restore the current session sql_mode right before generating the binlog event when creating a procedure. 	d0d6782eb40c2e09c0daa3b40965bb9bd47e8e7e
----------------------------
Bug#40657: assertion with out of range variables and traditional sql_mode In STRICT mode, out-of-bounds values caused an error message to be queued (rather than just a warning), without any further error-like processing happening. (The error is queued during update, at which time it's too late. For it to be processed properly, it would need to be queued during check-stage.) The assertion rightfully complains that we're trying to send an OK while having an error queued. Changeset breaks a lot of tests out into check-stage. This also allows us to send more correct warnings/error messages. 	e3233c25b5292193b11044ef410fb2aae896a52a
----------------------------
Bug #43172 MTR leaves test files in /tmp after check_socket_path_length finds path too long Faulty logic in cleanup Put test file into tmpdir, cleanup by removing tmpdir 	0f33682fa4dbd6f4378d1d537071208ec682f879
----------------------------
Bug#40657: assertion with out of range variables and traditional sql_mode In STRICT mode, out-of-bounds values caused an error message to be queued (rather than just a warning), without any further error-like processing happening. (The error is queued during update, at which time it's too late. For it to be processed properly, it would need to be queued during check-stage.) The assertion rightfully complains that we're trying to send an OK while having an error queued. Changeset breaks a lot of tests out into check-stage. This also allows us to send more correct warnings/error messages. 	76e063b9a0c6b3ad1db1f617c0fb60cf37a508e5
----------------------------
Bug#40178: Test main.completion_type_func does not clean up / needs to be rewritten Revised the test to include a test of completion_type = 1 as well as making the test more readable / worthwhile Removed the master.opt file as it was redundant / unnecessary. 	64c32d5a09833922e633804bb601e6313a71d90c
----------------------------
"Merge: 2515ce7 4f7608e Bug#42888 for MySQL 5.1. Add collections of test runs to make it both configurable and transparent what kinds of tests we run during integration testing. Implement filter list in mysql-test-run.pl to filter out failures of experimental test cases, using a new status code ""exp-fail"", so we can tell regressions (""fail"") from failures of test cases that are still in development (""exp-fail""). "	4943ffde540a142a551ef092f402edbcc8c8edbe
----------------------------
bug#42888: Add collections of test runs to make it both configurable and transparent what kinds of tests we run during integration testing. 	4f7608e759d3e2510fb0e984107b5ba7ea00554f
----------------------------
WL#4804 Make ndbd's angel portable - Move argument processing from Configuration.cpp to main.cpp - Remove unused member variables and function from Configuration 	cc6a4c58f47abc2ff6c19fd69bebb5937a25bf60
----------------------------
WL#4804 Make ndbd's angel portable - Remove unused member variable Configuration::_programName 	df75555d02f4a4742025363f4797957195c91602
----------------------------
loose in config to allow to run with config in embedded 	150ebb2971c694ef33c4657d24383ed7b19143d8
----------------------------
branches/zip: Fix bugs in the fix of Issue #181.  Tested inside and outside Valgrind, with innodb_use_sys_malloc set to 0 and 1. mem_init(): Invoke ut_mem_init() before mem_pool_create(), because the latter one will invoke ut_malloc(). srv_general_init(): Do not initialize the memory subsystem (mem_init()). innobase_init(): Initialize the memory subsystem (mem_init()) before calling srv_parse_data_file_paths_and_sizes(), which needs ut_malloc(). Call ut_free_all_mem() in error handling to clean up after the mem_init(). 	d25cf61788c818f6e46a6ed80f12e5df70e3ea57
----------------------------
- Backport @@optimizer_switch support from 6.0 - Add support for setting it as a server commandline argument - Add support for those switches: = no_index_merge = no_index_merge_union = no_index_merge_sort_union = no_index_merge_intersection 	e08a5318d522b557a906284600bd4434098d2b93
----------------------------
branches/zip: Initialize ut_list_mutex at startup.  Without this fix, ut_list_mutex would be used uninitialized when innodb_use_sys_malloc=1. This fix addresses Issue #181. ut_mem_block_list_init(): Rename to ut_mem_init() and make public. ut_malloc_low(), ut_free_all_mem(): Add ut_a(ut_mem_block_list_inited). mem_init(): Call ut_mem_init(). 	e2196c3419a3062e6f21eae36a78308a41f298c0
----------------------------
Bug#42543 ndb_mgmd can't handle configuration larger then 32k - Patch 2, send fragmented. - To overcome the 32k limit on configuration data, the signal need to be sent fragmented. i.e it's split up into chunks smaller than 32k and then reassembled on the other side. - Change both ConfigManager->ConfigManger and MgmtSrvr->ConfigManager to use fragmented signals 	501cfa0027bb1905c306e653ef5d619c26636411
----------------------------
"Bug#42543 ndb_mgmd can't handle configuration larger then 32k - Patch 1, error handling. - Don't continue configuration change protocol unless signal for ""prepare"" has been sent to all ndb_mgmd's - Print error message and exit if ndb_mgmd is starting up. - Send ConfigChangeRef to requestor if ndb_mgmd is running "	0bd5c74d28af90bb341c090ea630d652e8d963ed
----------------------------
"WL#4350 - ndb_mgm consistent configuration - Handle nodefailure signals in 'MgmtSrvr::change_config' - return error message ""Node x failed during configuration change"" "	a58aa85fd2660c71e9f88a03f16f9390194149e4
----------------------------
WL#4350 - ndb_mgm consistent configuration - Improve error mesage for node failure during config change 	36fe0acc332e07634875ba21b4dd38af484e49fe
----------------------------
WL#4350 - ndb_mgm consistent configuration - Improve the error message shown when configuration changed failed. 	4f82c11b95097781dd7a1bfb5b12144ea6e6b737
----------------------------
BUG#38174 secure-file-priv breaks LOAD DATA INFILE replication in statement mode If secure-file-priv was set on slave, it became unable to execute LOAD DATA INFILE statements sent from master using mixed or statement-based replication. This patch fixes the issue by ignoring this security restriction and checking if the files are created and read by the slave in the --slave-load-tmpdir while executing the SQL Thread. 	4447ce614feba0e9cd49515a91ccfaa84b640cc1
----------------------------
branches/zip: Make innodb_use_sys_malloc=ON the default. Replace srv_use_sys_malloc with UNIV_LIKELY(srv_use_sys_malloc) to improve branch prediction in the default case. Approved by Ken over the IM. 	e31baa849f311dea8a8cb3e2cd4f25e73abf63d3
----------------------------
making warnings test independent on config run... e.g. workaround for mtr running with cluster config in embedded 	bb18dfe2bb2098e80b77d563ccbff4022d2b7353
----------------------------
"branches/zip: Merge revisions 4035:4261 from branches/5.1: ------------------------------------------------------------------------ r4065 | sunny | 2009-01-29 16:01:36 +0200 (Thu, 29 Jan 2009) | 8 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/mysql-test/innodb-autoinc.result M /branches/5.1/mysql-test/innodb-autoinc.test branches/5.1: In the last round of AUTOINC cleanup we assumed that AUTOINC is only defined for integer columns. This caused an assertion failure when we checked for the maximum value of a column type. We now calculate the max value for floating-point autoinc columns too. Fix Bug#42400 - InnoDB autoinc code can't handle floating-point columns rb://84 and Mantis issue://162 ------------------------------------------------------------------------ r4111 | sunny | 2009-02-03 22:06:52 +0200 (Tue, 03 Feb 2009) | 2 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: Add the ULL suffix otherwise there is an overflow. ------------------------------------------------------------------------ r4128 | vasil | 2009-02-08 21:36:45 +0200 (Sun, 08 Feb 2009) | 18 lines Changed paths: M /branches/5.1/mysql-test/innodb-autoinc.result M /branches/5.1/mysql-test/innodb-autoinc.test branches/5.1: Merge a change from MySQL: ------------------------------------------------------------ revno: 2709.20.31 committer: Timothy Smith <timothy.smith@sun.com> branch nick: 51 timestamp: Fri 2008-12-19 01:28:51 +0100 message: Disable part of innodb-autoinc.test, because the MySQL server asserts when compiled --with-debug, due to bug 39828, ""autoinc wraps around when offset and increment > 1"".  This change should be reverted when that bug is fixed (and a a few other minor changes to the test as described in comments). modified: mysql-test/r/innodb-autoinc.result mysql-test/t/innodb-autoinc.test ------------------------------------------------------------------------ r4129 | vasil | 2009-02-08 21:54:25 +0200 (Sun, 08 Feb 2009) | 310 lines Changed paths: M /branches/5.1/mysql-test/innodb-autoinc.test branches/5.1: Merge a change from MySQL: [looks like the changes to innodb-autoinc.test were made as part of the following huge merge, but we are merging only changes to that file] ------------------------------------------------------------ revno: 2546.47.1 committer: Luis Soares <luis.soares@sun.com> branch nick: 5.1-rpl timestamp: Fri 2009-01-23 13:22:05 +0100 message: merge: 5.1 -> 5.1-rpl conflicts: Text conflict in client/mysqltest.cc Text conflict in mysql-test/include/wait_until_connected_again.inc Text conflict in mysql-test/lib/mtr_report.pm Text conflict in mysql-test/mysql-test-run.pl Text conflict in mysql-test/r/events_bugs.result Text conflict in mysql-test/r/log_state.result Text conflict in mysql-test/r/myisam_data_pointer_size_func.result Text conflict in mysql-test/r/mysqlcheck.result Text conflict in mysql-test/r/query_cache.result Text conflict in mysql-test/r/status.result Text conflict in mysql-test/suite/binlog/r/binlog_index.result Text conflict in mysql-test/suite/binlog/r/binlog_innodb.result Text conflict in mysql-test/suite/rpl/r/rpl_packet.result Text conflict in mysql-test/suite/rpl/t/rpl_packet.test Text conflict in mysql-test/t/disabled.def Text conflict in mysql-test/t/events_bugs.test Text conflict in mysql-test/t/log_state.test Text conflict in mysql-test/t/myisam_data_pointer_size_func.test Text conflict in mysql-test/t/mysqlcheck.test Text conflict in mysql-test/t/query_cache.test Text conflict in mysql-test/t/rpl_init_slave_func.test Text conflict in mysql-test/t/status.test removed: mysql-test/suite/parts/r/partition_bit_ndb.result mysql-test/suite/parts/t/partition_bit_ndb.test mysql-test/suite/parts/t/partition_sessions.test mysql-test/suite/sys_vars/inc/tmp_table_size_basic.inc mysql-test/suite/sys_vars/r/tmp_table_size_basic_32.result mysql-test/suite/sys_vars/r/tmp_table_size_basic_64.result mysql-test/suite/sys_vars/t/tmp_table_size_basic_32.test mysql-test/suite/sys_vars/t/tmp_table_size_basic_64.test mysql-test/t/log_bin_trust_function_creators_func-master.opt mysql-test/t/rpl_init_slave_func-slave.opt added: mysql-test/include/check_events_off.inc mysql-test/include/cleanup_fake_relay_log.inc mysql-test/include/have_simple_parser.inc mysql-test/include/no_running_event_scheduler.inc mysql-test/include/no_running_events.inc mysql-test/include/running_event_scheduler.inc mysql-test/include/setup_fake_relay_log.inc mysql-test/include/wait_condition_sp.inc mysql-test/r/fulltext_plugin.result mysql-test/r/have_simple_parser.require mysql-test/r/innodb_bug38231.result mysql-test/r/innodb_bug39438.result mysql-test/r/innodb_mysql_rbk.result mysql-test/r/partition_innodb_semi_consistent.result mysql-test/r/query_cache_28249.result mysql-test/r/status2.result mysql-test/std_data/bug40482-bin.000001 mysql-test/suite/binlog/r/binlog_innodb_row.result mysql-test/suite/binlog/t/binlog_innodb_row.test mysql-test/suite/rpl/r/rpl_binlog_corruption.result mysql-test/suite/rpl/t/rpl_binlog_corruption-master.opt mysql-test/suite/rpl/t/rpl_binlog_corruption.test mysql-test/suite/sys_vars/r/tmp_table_size_basic.result mysql-test/suite/sys_vars/t/tmp_table_size_basic.test mysql-test/t/fulltext_plugin-master.opt mysql-test/t/fulltext_plugin.test mysql-test/t/innodb_bug38231.test mysql-test/t/innodb_bug39438-master.opt mysql-test/t/innodb_bug39438.test mysql-test/t/innodb_mysql_rbk-master.opt mysql-test/t/innodb_mysql_rbk.test mysql-test/t/partition_innodb_semi_consistent-master.opt mysql-test/t/partition_innodb_semi_consistent.test mysql-test/t/query_cache_28249.test mysql-test/t/status2.test renamed: mysql-test/suite/funcs_1/r/is_collation_character_set_applicability.result => mysql-test/suite/funcs_1/r/is_coll_char_set_appl.result mysql-test/suite/funcs_1/t/is_collation_character_set_applicability.test => mysql-test/suite/funcs_1/t/is_coll_char_set_appl.test modified: .bzr-mysql/default.conf CMakeLists.txt client/mysql.cc client/mysql_upgrade.c client/mysqlcheck.c client/mysqltest.cc configure.in extra/resolve_stack_dump.c extra/yassl/include/openssl/ssl.h include/config-win.h include/m_ctype.h include/my_global.h mysql-test/extra/binlog_tests/database.test mysql-test/extra/rpl_tests/rpl_auto_increment.test mysql-test/include/commit.inc mysql-test/include/have_32bit.inc mysql-test/include/have_64bit.inc mysql-test/include/index_merge1.inc mysql-test/include/linux_sys_vars.inc mysql-test/include/windows_sys_vars.inc mysql-test/lib/mtr_report.pm mysql-test/mysql-test-run.pl mysql-test/r/alter_table.result mysql-test/r/commit_1innodb.result mysql-test/r/create.result mysql-test/r/csv.result mysql-test/r/ctype_ucs.result mysql-test/r/date_formats.result mysql-test/r/events_bugs.result mysql-test/r/events_scheduling.result mysql-test/r/fulltext.result mysql-test/r/func_if.result mysql-test/r/func_in.result mysql-test/r/func_str.result mysql-test/r/func_time.result mysql-test/r/grant.result mysql-test/r/index_merge_myisam.result mysql-test/r/information_schema.result mysql-test/r/innodb-autoinc.result mysql-test/r/innodb.result mysql-test/r/innodb_mysql.result mysql-test/r/log_bin_trust_function_creators_func.result mysql-test/r/log_state.result mysql-test/r/myisampack.result mysql-test/r/mysql.result mysql-test/r/mysqlcheck.result mysql-test/r/partition_datatype.result mysql-test/r/partition_mgm.result mysql-test/r/partition_pruning.result mysql-test/r/query_cache.result mysql-test/r/read_buffer_size_basic.result mysql-test/r/read_rnd_buffer_size_basic.result mysql-test/r/rpl_init_slave_func.result mysql-test/r/select.result mysql-test/r/status.result mysql-test/r/strict.result mysql-test/r/temp_table.result mysql-test/r/type_bit.result mysql-test/r/type_date.result mysql-test/r/type_float.result mysql-test/r/warnings_engine_disabled.result mysql-test/r/xml.result mysql-test/suite/binlog/r/binlog_database.result mysql-test/suite/binlog/r/binlog_index.result mysql-test/suite/binlog/r/binlog_innodb.result mysql-test/suite/binlog/r/binlog_row_mix_innodb_myisam.result mysql-test/suite/binlog/t/binlog_innodb.test mysql-test/suite/funcs_1/r/is_columns_is.result mysql-test/suite/funcs_1/r/is_engines.result mysql-test/suite/funcs_1/r/storedproc.result mysql-test/suite/funcs_1/storedproc/param_check.inc mysql-test/suite/funcs_2/t/disabled.def mysql-test/suite/ndb/t/disabled.def mysql-test/suite/parts/r/partition_bit_innodb.result mysql-test/suite/parts/r/partition_bit_myisam.result mysql-test/suite/parts/r/partition_special_innodb.result mysql-test/suite/parts/t/disabled.def mysql-test/suite/parts/t/partition_special_innodb.test mysql-test/suite/parts/t/partition_value_innodb.test mysql-test/suite/parts/t/partition_value_myisam.test mysql-test/suite/parts/t/partition_value_ndb.test mysql-test/suite/rpl/r/rpl_auto_increment.result mysql-test/suite/rpl/r/rpl_packet.result mysql-test/suite/rpl/r/rpl_row_create_table.result mysql-test/suite/rpl/r/rpl_slave_skip.result mysql-test/suite/rpl/r/rpl_trigger.result mysql-test/suite/rpl/t/disabled.def mysql-test/suite/rpl/t/rpl_packet.test mysql-test/suite/rpl/t/rpl_row_create_table.test mysql-test/suite/rpl/t/rpl_slave_skip.test mysql-test/suite/rpl/t/rpl_trigger.test mysql-test/suite/rpl_ndb/t/disabled.def mysql-test/suite/sys_vars/inc/key_buffer_size_basic.inc mysql-test/suite/sys_vars/inc/sort_buffer_size_basic.inc mysql-test/suite/sys_vars/r/key_buffer_size_basic_32.result mysql-test/suite/sys_vars/r/key_buffer_size_basic_64.result mysql-test/suite/sys_vars/r/sort_buffer_size_basic_32.result mysql-test/suite/sys_vars/r/sort_buffer_size_basic_64.result mysql-test/t/alter_table.test mysql-test/t/create.test mysql-test/t/csv.test mysql-test/t/ctype_ucs.test mysql-test/t/date_formats.test mysql-test/t/disabled.def mysql-test/t/events_bugs.test mysql-test/t/events_scheduling.test mysql-test/t/fulltext.test mysql-test/t/func_if.test mysql-test/t/func_in.test mysql-test/t/func_str.test mysql-test/t/func_time.test mysql-test/t/grant.test mysql-test/t/information_schema.test mysql-test/t/innodb-autoinc.test mysql-test/t/innodb.test mysql-test/t/innodb_mysql.test mysql-test/t/log_bin_trust_function_creators_func.test mysql-test/t/log_state.test mysql-test/t/myisam_data_pointer_size_func.test mysql-test/t/myisampack.test mysql-test/t/mysql.test mysql-test/t/mysqlcheck.test mysql-test/t/partition_innodb_stmt.test mysql-test/t/partition_mgm.test mysql-test/t/partition_pruning.test mysql-test/t/query_cache.test mysql-test/t/rpl_init_slave_func.test mysql-test/t/select.test mysql-test/t/status.test mysql-test/t/strict.test mysql-test/t/temp_table.test mysql-test/t/type_bit.test mysql-test/t/type_date.test mysql-test/t/type_float.test mysql-test/t/warnings_engine_disabled.test mysql-test/t/xml.test mysys/my_getopt.c mysys/my_init.c scripts/mysql_install_db.sh sql-common/my_time.c sql/field.cc sql/field.h sql/filesort.cc sql/ha_partition.cc sql/ha_partition.h sql/item.cc sql/item_cmpfunc.cc sql/item_func.h sql/item_strfunc.cc sql/item_sum.cc sql/item_timefunc.cc sql/item_timefunc.h sql/log.cc sql/log.h sql/log_event.cc sql/log_event.h sql/mysql_priv.h sql/mysqld.cc sql/opt_range.cc sql/partition_info.cc sql/repl_failsafe.cc sql/rpl_constants.h sql/set_var.cc sql/slave.cc sql/spatial.h sql/sql_acl.cc sql/sql_base.cc sql/sql_binlog.cc sql/sql_class.h sql/sql_cursor.cc sql/sql_delete.cc sql/sql_lex.cc sql/sql_lex.h sql/sql_locale.cc sql/sql_parse.cc sql/sql_partition.cc sql/sql_plugin.cc sql/sql_plugin.h sql/sql_profile.cc sql/sql_repl.cc sql/sql_select.cc sql/sql_select.h sql/sql_show.cc sql/sql_table.cc sql/sql_trigger.cc sql/sql_trigger.h sql/table.cc sql/table.h sql/unireg.cc storage/csv/ha_tina.cc storage/federated/ha_federated.cc storage/heap/ha_heap.cc storage/innobase/Makefile.am storage/innobase/btr/btr0sea.c storage/innobase/buf/buf0lru.c storage/innobase/dict/dict0dict.c storage/innobase/dict/dict0mem.c storage/innobase/handler/ha_innodb.cc storage/innobase/handler/ha_innodb.h storage/innobase/include/btr0sea.h storage/innobase/include/dict0dict.h storage/innobase/include/dict0mem.h storage/innobase/include/ha_prototypes.h storage/innobase/include/lock0lock.h storage/innobase/include/row0mysql.h storage/innobase/include/sync0sync.ic storage/innobase/include/ut0ut.h storage/innobase/lock/lock0lock.c storage/innobase/os/os0file.c storage/innobase/plug.in storage/innobase/row/row0mysql.c storage/innobase/row/row0sel.c storage/innobase/srv/srv0srv.c storage/innobase/srv/srv0start.c storage/innobase/ut/ut0ut.c storage/myisam/ft_boolean_search.c strings/ctype.c strings/xml.c tests/mysql_client_test.c win/configure.js mysql-test/suite/funcs_1/t/is_coll_char_set_appl.test ------------------------------------------------------------------------ r4165 | calvin | 2009-02-12 01:34:27 +0200 (Thu, 12 Feb 2009) | 1 line Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: minor non-functional changes. ------------------------------------------------------------------------ "	b4399fa81931f27fa1395b78f427cabc9febe79a
----------------------------
Bug #37313 BINLOG Contains Incorrect server id Signed integer format specifier forced to print the binlog header with server_id negative if the unsigned value sets the sign-bit ON. Fixed with correcting the specifier to correspond to typeof(server_id) == ulong. 	c02752a0055b3393df72c7e62e542549f2658b45
----------------------------
"Merge: 6a9de01 5622d42 Bug#33550: mysqldump 4.0 compatibility broken mysqldump included character_set_client magic that is unknown before 4.1 even when asked for an appropriate compatibility mode. In compatibility (3.23, 4.0) mode, we do not output charset statements (not even in a ""comment conditional""), nor do we do magic on the server, even if the server is sufficient new (4.1+). Table-names will be output converted to the charset requested by mysqldump; if such a conversion is not possible (Ivrit -> Latin), mysqldump will fail. "	f218f9f278b26dd9efe1ce109e17b1c5d0c3cb44
----------------------------
Bug#31506 detection of function's availability is wrong in configure.in Replacing AC_CHECK_FUNC+AC_CHECK_LIB combination with AC_SEARCH_LIBS. 	ac8f752e929fa90cec607ebced0ee12d6045b11d
----------------------------
Fix for bug #41078: With CURSOR_TYPE_READ_ONLY mysql_stmt_fetch() returns short string value. Multibyte character sets were not taken into account when calculating max_length in Item_param::convert_str_value(). As a result, string parameters of a prepared statement could be truncated later when calculating string length in characters by dividing length in bytes by the charset's mbmaxlen value (e.g. in Field_varstring::store()). Fixed by taking charset's mbmaxlen into account when calculating max_length in Item_param::convert_str_value(). 	c4f0c2d38cf4c741bcd22469ea135b72ae4a0bc4
----------------------------
ndb - fix bug in new DD config 	5ef841750ff3a5b5f3cf84de3ddf9c75e5a76f0d
----------------------------
Fixed test cases for new config variables and changed defaults, min and max values 	92e572e86c8a3c1c87f9c44565412ff966a96d97
----------------------------
ndb - fix for new DD-config (dead code now) 	2670cbd50245bc5e0dd58ad0c225cc636d49c4d7
----------------------------
ndb - add new DD config variables FileSystemPathDD FileSystemPathDataFiles FileSystemPathUndoFiles InitialLogfileGroup InitialTablespace 	affa326ad69291c8fd58c377df5f36fc2e431c23
----------------------------
Add the IBM DB2 for i storage engine. Modify plugins.m4 configuration framework so that plugins which are not built still get added to the source distribution during make dist. This came up now because we can only build ibmdb2i on i5/OS, and we can't bootstrap our source dist on that platform.  The solution is to specify DIST_SUBDIRS containing all plugins, separate from SUBDIRS which contains the plugins which are actually built. This ibmdb2i code is from the ibmdb2i-ga3-src.zip file, with a patch to plug.in to disable the plugin if the PASE environment isn't available. 	858d40d82cf81fd71b01048fa6db21e563463018
----------------------------
"Bug #42197  	Query cache and autocommit - disable ndb_cache_trans in 5.1-telco-* waiting for fix "	b53ce7b244a85f765831166adec1db9d333a82de
----------------------------
Bug#42797 mtr.pl - temporary directory are deleted when child exit's - Since we are only using the auto cleanup in one place of mtr.pl today, disable the autocleanup and write our own END handler that clean up the tmpdir only when the process that created it exits. 	07fad74238561fd49f545733e48bf87a271be7a5
----------------------------
branches/zip: Adjust the result file of innodb_thread_concurrency_basic test. The default value of innodb_thread_concurrency is changed to 0 (from 8) via r4163. 	9cec478049b258cb1a2f2863242435f65a0f6673
----------------------------
branches/zip: Make innodb_thread_concurrency=0 the default. The old default was 8. 	25f45c0d1c1ee151071a5d14905f4edf67efe4e1
----------------------------
ndb - add static ndbd/ndbmtd config for mtr 	95cc239a604f6e734b82a702fd0917d919337d61
----------------------------
"BUG#38197 Errors in @@init_slave not visible in 'show slave status' Some errors that cause the slave SQL thread to stop are not shown in the Slave_SQL_Error column of ""SHOW SLAVE STATUS"". Instead, the error is only in the server's error log. That makes it difficult to analyze the error for the user. One example of an error that stops the slave but is not shown by ""SHOW SLAVE STATUS"" is when @@global.init_slave is set incorrectly (e.g., it contains something that is not valid SQL). Three failures were not correctly reported: 1 - Failures during slave thread initialization 2 - Failures while initializing the relay log position right after starting the slave thread. 3 - Failures while processing queries passed through the init_slave option. This patch fixes the issues by reporting the errors through relay-info->report. "	87679ac97302915962f3c9c5f188f5b0c3d44b22
----------------------------
Fix for bug #41868: crash or memory overrun with concat + upper, date_format functions String::realloc() did not check whether the existing string data fits in the newly allocated buffer for cases when reallocating a String object with external buffer (i.e.alloced == FALSE).  This could lead to memory overruns in some cases. 	a715b702789a0577d2c5f895b455d0fcd718240f
----------------------------
"branches/zip: When innodb_use_sys_malloc is set, ignore innodb_additional_mem_pool_size, because nothing will be allocated from mem_comm_pool. mem_pool_create(): Remove the assertion about size.  The function will work with any size.  However, an assertion would fail in ut_malloc_low() when size==0. mem_init(): When srv_use_sys_malloc is set, pass size=1 to mem_pool_create(). mem0mem.c: Add #include ""srv0srv.h"" that is needed by mem0dbg.c. "	a805ee5fd54274c3b98c93bafff618c3fa7d9908
----------------------------
"branches/innodb+: Merge revisions 4072:4150 from branches/zip: ------------------------------------------------------------------------ r4074 | vasil | 2009-01-31 08:05:24 +0200 (Sat, 31 Jan 2009) | 4 lines branches/zip: Adjust the failing patch patches/information_schema.diff. ------------------------------------------------------------------------ r4076 | vasil | 2009-02-02 09:32:04 +0200 (Mon, 02 Feb 2009) | 4 lines branches/zip: Add ChangeLog entry for the change in r4072. ------------------------------------------------------------------------ r4077 | marko | 2009-02-02 10:48:05 +0200 (Mon, 02 Feb 2009) | 2 lines branches/zip: innobase_start_or_create_for_mysql(): Remove a factual error in the function comment.  Parameters are not read from a file ""srv_init"". ------------------------------------------------------------------------ r4081 | marko | 2009-02-02 14:28:17 +0200 (Mon, 02 Feb 2009) | 4 lines branches/zip: Enclose some backup functions in #ifdef UNIV_HOTBACKUP. recv_read_cp_info_for_backup(), recv_scan_log_seg_for_backup(): These functions are only called by InnoDB Hot Backup. ------------------------------------------------------------------------ r4082 | vasil | 2009-02-02 18:24:08 +0200 (Mon, 02 Feb 2009) | 10 lines branches/zip: Fix a mysql-test failure in innodb-zip: main.innodb-zip                          [ fail ] Test ended at 2009-02-02 18:13:25 CURRENT_TEST: main.innodb-zip mysqltest: At line 160: Found line beginning with --  that didn't contain a valid mysqltest command, check your syntax or use # if you intended to write a comment ------------------------------------------------------------------------ r4083 | vasil | 2009-02-02 18:33:20 +0200 (Mon, 02 Feb 2009) | 6 lines branches/zip: Fix the failing innodb-zip test to restore the environment as it was before the test execution because a newly added feature in the mysql-test framework does check for this. ------------------------------------------------------------------------ r4088 | calvin | 2009-02-03 02:35:56 +0200 (Tue, 03 Feb 2009) | 8 lines branches/zip: fix a compiler error and a warning Both are minor changes: 1) Compiler error introduced in r4072: double ';' at the end. 2) Warning introduced in r3613: \mem\mem0pool.c(481) : warning C4098: 'mem_area_free' : 'void' function returning a value Approved by: Sunny (IM) ------------------------------------------------------------------------ r4098 | marko | 2009-02-03 09:52:45 +0200 (Tue, 03 Feb 2009) | 4 lines branches/zip: mem_area_free(): Correct a bug that was introduced in r4088. free() is not the same as ut_free().  ut_free() pairs with ut_malloc(), not malloc().  free() pairs with malloc() and some other functions. ------------------------------------------------------------------------ r4114 | marko | 2009-02-04 16:09:24 +0200 (Wed, 04 Feb 2009) | 2 lines branches/zip: buf_block_align(): Fix a bogus debug assertion that was introduced in r4036, to address Issue #161. ------------------------------------------------------------------------ r4139 | vasil | 2009-02-09 13:47:16 +0200 (Mon, 09 Feb 2009) | 5 lines branches/zip: Remove mysql-test/patches/bug35261.diff because that bug has been fixed in the MySQL repository. ------------------------------------------------------------------------ r4141 | marko | 2009-02-09 15:35:50 +0200 (Mon, 09 Feb 2009) | 1 line branches/zip: fil_write_lsn_and_arch_no_to_file(): Plug a memory leak. ------------------------------------------------------------------------ r4144 | inaam | 2009-02-10 01:36:25 +0200 (Tue, 10 Feb 2009) | 9 lines branches/zip            rb://30 This patch changes the innodb mutexes and rw_locks implementation. On supported platforms it uses GCC builtin atomics. These changes are based on the patch sent by Mark Callaghan of Google under BSD license. More technical discussion can be found at rb://30 Approved by: Heikki ------------------------------------------------------------------------ r4145 | vasil | 2009-02-10 07:34:43 +0200 (Tue, 10 Feb 2009) | 9 lines branches/zip: Non-functional change: Fix a compilation warning introduced in r4144: gcc -DHAVE_CONFIG_H -I. -I../../include -I../../include -I../../include -I../../regex -I../../storage/innobase/include -I../../sql -I.   -Werror         -Wall -g   -MT libinnobase_a-sync0arr.o -MD -MP -MF .deps/libinnobase_a-sync0arr.Tpo -c -o libinnobase_a-sync0arr.o `test -f 'sync/sync0arr.c' || echo './'`sync/sync0arr.c cc1: warnings being treated as errors sync/sync0arr.c: In function 'sync_array_object_signalled': sync/sync0arr.c:869: warning: pointer targets in passing argument 1 of 'os_atomic_increment' differ in signedness ------------------------------------------------------------------------ r4148 | marko | 2009-02-10 10:38:41 +0200 (Tue, 10 Feb 2009) | 12 lines branches/zip: Map ut_malloc(), ut_realloc(), ut_free() to malloc(), realloc(), free() when innodb_use_sys_malloc is set. ut_free_all_mem(): If innodb_use_sys_malloc is set, do nothing, because then ut_mem_block_list_inited will never be set. log_init(): Use mem_alloc() instead of ut_malloc(), so that the memory will be freed.  (Tested with Valgrind, although it is not clear why the memory would be freed.) rb://86 approved by Heikki Tuuri and Ken Jacobs.  This addresses Issue #168. ------------------------------------------------------------------------ r4149 | marko | 2009-02-10 11:09:15 +0200 (Tue, 10 Feb 2009) | 1 line branches/zip: ChangeLog: Document recent changes. ------------------------------------------------------------------------ r4150 | marko | 2009-02-10 11:51:43 +0200 (Tue, 10 Feb 2009) | 6 lines branches/zip: get_share(), free_share(): Make table locking case sensitive. If lower_case_table_names=1, MySQL will pass the table names in lower case. Thus, we can use a binary comparison (strcmp) in the hash table. rb://87 approved by Heikki Tuuri, to address Bug #41676 and Issue #167. ------------------------------------------------------------------------ "	40c6857eafcb6a1ac542e308199a0698c263b0b4
----------------------------
branches/zip: get_share(), free_share(): Make table locking case sensitive. If lower_case_table_names=1, MySQL will pass the table names in lower case. Thus, we can use a binary comparison (strcmp) in the hash table. rb://87 approved by Heikki Tuuri, to address Bug #41676 and Issue #167. 	ecda78f01c05327b4230241025a0bff9e247f2ba
----------------------------
branches/zip: Map ut_malloc(), ut_realloc(), ut_free() to malloc(), realloc(), free() when innodb_use_sys_malloc is set. ut_free_all_mem(): If innodb_use_sys_malloc is set, do nothing, because then ut_mem_block_list_inited will never be set. log_init(): Use mem_alloc() instead of ut_malloc(), so that the memory will be freed.  (Tested with Valgrind, although it is not clear why the memory would be freed.) rb://86 approved by Heikki Tuuri and Ken Jacobs.  This addresses Issue #168. 	f4cccb1f81034060ae617009baa228600485c8b6
----------------------------
Fix for bug #40757: Starting server on Windows with innodb_flush_method=wrong_value causes crash Problem: after a failed plugin initialization, incompletely initialized data remained in the plugin and handlerton data structures. These were used later and caused the crash. Fix: clean-up plugin related data if initialization failed. Note: no test case added, hand tested. 	f6017fc4bd7ee543801ccb5dd59ef3b46bc7da67
----------------------------
"branches/zip: Non-functional change: Fix a compilation warning introduced in r4144: gcc -DHAVE_CONFIG_H -I. -I../../include -I../../include -I../../include -I../../regex -I../../storage/innobase/include -I../../sql -I.   -Werror 	 -Wall -g   -MT libinnobase_a-sync0arr.o -MD -MP -MF .deps/libinnobase_a-sync0arr.Tpo -c -o libinnobase_a-sync0arr.o `test -f 'sync/sync0arr.c' || echo './'`sync/sync0arr.c cc1: warnings being treated as errors sync/sync0arr.c: In function 'sync_array_object_signalled': sync/sync0arr.c:869: warning: pointer targets in passing argument 1 of 'os_atomic_increment' differ in signedness "	51bc19d7e253c5a0e45d73b941222b090742b321
----------------------------
Bug#42610 Dynamic plugin broken in 5.1.31 added ignore-builtin-innodb option which disabled initialization of builtin InnoDB plugin 	53eed773e3768bd4efc5f8eb4827d3ca274e6c02
----------------------------
"Bug #42451 setup_fake_relay_log makes an incorrect path on windows Path composition for the relay log file that is stored into the relay index file was not correct for windows. mysql-test language does not provide primitives for portable path composition. Fixed with storing only the basename part of the external ""fake"" relay log into the relay index file. Safety of removal of the dirname part of the relaylog is provided by logics of `setup_fake_relay_log' that places the fake file into @@datadir directory. "	98733e857eefb9c4df2748467c436df058f20817
----------------------------
branches/5.1: Merge a change from MySQL: [looks like the changes to innodb-autoinc.test were made as part of the following huge merge, but we are merging only changes to that file] ------------------------------------------------------------ revno: 2546.47.1 committer: Luis Soares <luis.soares@sun.com> branch nick: 5.1-rpl timestamp: Fri 2009-01-23 13:22:05 +0100 message: merge: 5.1 -> 5.1-rpl conflicts: Text conflict in client/mysqltest.cc Text conflict in mysql-test/include/wait_until_connected_again.inc Text conflict in mysql-test/lib/mtr_report.pm Text conflict in mysql-test/mysql-test-run.pl Text conflict in mysql-test/r/events_bugs.result Text conflict in mysql-test/r/log_state.result Text conflict in mysql-test/r/myisam_data_pointer_size_func.result Text conflict in mysql-test/r/mysqlcheck.result Text conflict in mysql-test/r/query_cache.result Text conflict in mysql-test/r/status.result Text conflict in mysql-test/suite/binlog/r/binlog_index.result Text conflict in mysql-test/suite/binlog/r/binlog_innodb.result Text conflict in mysql-test/suite/rpl/r/rpl_packet.result Text conflict in mysql-test/suite/rpl/t/rpl_packet.test Text conflict in mysql-test/t/disabled.def Text conflict in mysql-test/t/events_bugs.test Text conflict in mysql-test/t/log_state.test Text conflict in mysql-test/t/myisam_data_pointer_size_func.test Text conflict in mysql-test/t/mysqlcheck.test Text conflict in mysql-test/t/query_cache.test Text conflict in mysql-test/t/rpl_init_slave_func.test Text conflict in mysql-test/t/status.test removed: mysql-test/suite/parts/r/partition_bit_ndb.result mysql-test/suite/parts/t/partition_bit_ndb.test mysql-test/suite/parts/t/partition_sessions.test mysql-test/suite/sys_vars/inc/tmp_table_size_basic.inc mysql-test/suite/sys_vars/r/tmp_table_size_basic_32.result mysql-test/suite/sys_vars/r/tmp_table_size_basic_64.result mysql-test/suite/sys_vars/t/tmp_table_size_basic_32.test mysql-test/suite/sys_vars/t/tmp_table_size_basic_64.test mysql-test/t/log_bin_trust_function_creators_func-master.opt mysql-test/t/rpl_init_slave_func-slave.opt added: mysql-test/include/check_events_off.inc mysql-test/include/cleanup_fake_relay_log.inc mysql-test/include/have_simple_parser.inc mysql-test/include/no_running_event_scheduler.inc mysql-test/include/no_running_events.inc mysql-test/include/running_event_scheduler.inc mysql-test/include/setup_fake_relay_log.inc mysql-test/include/wait_condition_sp.inc mysql-test/r/fulltext_plugin.result mysql-test/r/have_simple_parser.require mysql-test/r/innodb_bug38231.result mysql-test/r/innodb_bug39438.result mysql-test/r/innodb_mysql_rbk.result mysql-test/r/partition_innodb_semi_consistent.result mysql-test/r/query_cache_28249.result mysql-test/r/status2.result mysql-test/std_data/bug40482-bin.000001 mysql-test/suite/binlog/r/binlog_innodb_row.result mysql-test/suite/binlog/t/binlog_innodb_row.test mysql-test/suite/rpl/r/rpl_binlog_corruption.result mysql-test/suite/rpl/t/rpl_binlog_corruption-master.opt mysql-test/suite/rpl/t/rpl_binlog_corruption.test mysql-test/suite/sys_vars/r/tmp_table_size_basic.result mysql-test/suite/sys_vars/t/tmp_table_size_basic.test mysql-test/t/fulltext_plugin-master.opt mysql-test/t/fulltext_plugin.test mysql-test/t/innodb_bug38231.test mysql-test/t/innodb_bug39438-master.opt mysql-test/t/innodb_bug39438.test mysql-test/t/innodb_mysql_rbk-master.opt mysql-test/t/innodb_mysql_rbk.test mysql-test/t/partition_innodb_semi_consistent-master.opt mysql-test/t/partition_innodb_semi_consistent.test mysql-test/t/query_cache_28249.test mysql-test/t/status2.test renamed: mysql-test/suite/funcs_1/r/is_collation_character_set_applicability.result => mysql-test/suite/funcs_1/r/is_coll_char_set_appl.result mysql-test/suite/funcs_1/t/is_collation_character_set_applicability.test => mysql-test/suite/funcs_1/t/is_coll_char_set_appl.test modified: .bzr-mysql/default.conf CMakeLists.txt client/mysql.cc client/mysql_upgrade.c client/mysqlcheck.c client/mysqltest.cc configure.in extra/resolve_stack_dump.c extra/yassl/include/openssl/ssl.h include/config-win.h include/m_ctype.h include/my_global.h mysql-test/extra/binlog_tests/database.test mysql-test/extra/rpl_tests/rpl_auto_increment.test mysql-test/include/commit.inc mysql-test/include/have_32bit.inc mysql-test/include/have_64bit.inc mysql-test/include/index_merge1.inc mysql-test/include/linux_sys_vars.inc mysql-test/include/windows_sys_vars.inc mysql-test/lib/mtr_report.pm mysql-test/mysql-test-run.pl mysql-test/r/alter_table.result mysql-test/r/commit_1innodb.result mysql-test/r/create.result mysql-test/r/csv.result mysql-test/r/ctype_ucs.result mysql-test/r/date_formats.result mysql-test/r/events_bugs.result mysql-test/r/events_scheduling.result mysql-test/r/fulltext.result mysql-test/r/func_if.result mysql-test/r/func_in.result mysql-test/r/func_str.result mysql-test/r/func_time.result mysql-test/r/grant.result mysql-test/r/index_merge_myisam.result mysql-test/r/information_schema.result mysql-test/r/innodb-autoinc.result mysql-test/r/innodb.result mysql-test/r/innodb_mysql.result mysql-test/r/log_bin_trust_function_creators_func.result mysql-test/r/log_state.result mysql-test/r/myisampack.result mysql-test/r/mysql.result mysql-test/r/mysqlcheck.result mysql-test/r/partition_datatype.result mysql-test/r/partition_mgm.result mysql-test/r/partition_pruning.result mysql-test/r/query_cache.result mysql-test/r/read_buffer_size_basic.result mysql-test/r/read_rnd_buffer_size_basic.result mysql-test/r/rpl_init_slave_func.result mysql-test/r/select.result mysql-test/r/status.result mysql-test/r/strict.result mysql-test/r/temp_table.result mysql-test/r/type_bit.result mysql-test/r/type_date.result mysql-test/r/type_float.result mysql-test/r/warnings_engine_disabled.result mysql-test/r/xml.result mysql-test/suite/binlog/r/binlog_database.result mysql-test/suite/binlog/r/binlog_index.result mysql-test/suite/binlog/r/binlog_innodb.result mysql-test/suite/binlog/r/binlog_row_mix_innodb_myisam.result mysql-test/suite/binlog/t/binlog_innodb.test mysql-test/suite/funcs_1/r/is_columns_is.result mysql-test/suite/funcs_1/r/is_engines.result mysql-test/suite/funcs_1/r/storedproc.result mysql-test/suite/funcs_1/storedproc/param_check.inc mysql-test/suite/funcs_2/t/disabled.def mysql-test/suite/ndb/t/disabled.def mysql-test/suite/parts/r/partition_bit_innodb.result mysql-test/suite/parts/r/partition_bit_myisam.result mysql-test/suite/parts/r/partition_special_innodb.result mysql-test/suite/parts/t/disabled.def mysql-test/suite/parts/t/partition_special_innodb.test mysql-test/suite/parts/t/partition_value_innodb.test mysql-test/suite/parts/t/partition_value_myisam.test mysql-test/suite/parts/t/partition_value_ndb.test mysql-test/suite/rpl/r/rpl_auto_increment.result mysql-test/suite/rpl/r/rpl_packet.result mysql-test/suite/rpl/r/rpl_row_create_table.result mysql-test/suite/rpl/r/rpl_slave_skip.result mysql-test/suite/rpl/r/rpl_trigger.result mysql-test/suite/rpl/t/disabled.def mysql-test/suite/rpl/t/rpl_packet.test mysql-test/suite/rpl/t/rpl_row_create_table.test mysql-test/suite/rpl/t/rpl_slave_skip.test mysql-test/suite/rpl/t/rpl_trigger.test mysql-test/suite/rpl_ndb/t/disabled.def mysql-test/suite/sys_vars/inc/key_buffer_size_basic.inc mysql-test/suite/sys_vars/inc/sort_buffer_size_basic.inc mysql-test/suite/sys_vars/r/key_buffer_size_basic_32.result mysql-test/suite/sys_vars/r/key_buffer_size_basic_64.result mysql-test/suite/sys_vars/r/sort_buffer_size_basic_32.result mysql-test/suite/sys_vars/r/sort_buffer_size_basic_64.result mysql-test/t/alter_table.test mysql-test/t/create.test mysql-test/t/csv.test mysql-test/t/ctype_ucs.test mysql-test/t/date_formats.test mysql-test/t/disabled.def mysql-test/t/events_bugs.test mysql-test/t/events_scheduling.test mysql-test/t/fulltext.test mysql-test/t/func_if.test mysql-test/t/func_in.test mysql-test/t/func_str.test mysql-test/t/func_time.test mysql-test/t/grant.test mysql-test/t/information_schema.test mysql-test/t/innodb-autoinc.test mysql-test/t/innodb.test mysql-test/t/innodb_mysql.test mysql-test/t/log_bin_trust_function_creators_func.test mysql-test/t/log_state.test mysql-test/t/myisam_data_pointer_size_func.test mysql-test/t/myisampack.test mysql-test/t/mysql.test mysql-test/t/mysqlcheck.test mysql-test/t/partition_innodb_stmt.test mysql-test/t/partition_mgm.test mysql-test/t/partition_pruning.test mysql-test/t/query_cache.test mysql-test/t/rpl_init_slave_func.test mysql-test/t/select.test mysql-test/t/status.test mysql-test/t/strict.test mysql-test/t/temp_table.test mysql-test/t/type_bit.test mysql-test/t/type_date.test mysql-test/t/type_float.test mysql-test/t/warnings_engine_disabled.test mysql-test/t/xml.test mysys/my_getopt.c mysys/my_init.c scripts/mysql_install_db.sh sql-common/my_time.c sql/field.cc sql/field.h sql/filesort.cc sql/ha_partition.cc sql/ha_partition.h sql/item.cc sql/item_cmpfunc.cc sql/item_func.h sql/item_strfunc.cc sql/item_sum.cc sql/item_timefunc.cc sql/item_timefunc.h sql/log.cc sql/log.h sql/log_event.cc sql/log_event.h sql/mysql_priv.h sql/mysqld.cc sql/opt_range.cc sql/partition_info.cc sql/repl_failsafe.cc sql/rpl_constants.h sql/set_var.cc sql/slave.cc sql/spatial.h sql/sql_acl.cc sql/sql_base.cc sql/sql_binlog.cc sql/sql_class.h sql/sql_cursor.cc sql/sql_delete.cc sql/sql_lex.cc sql/sql_lex.h sql/sql_locale.cc sql/sql_parse.cc sql/sql_partition.cc sql/sql_plugin.cc sql/sql_plugin.h sql/sql_profile.cc sql/sql_repl.cc sql/sql_select.cc sql/sql_select.h sql/sql_show.cc sql/sql_table.cc sql/sql_trigger.cc sql/sql_trigger.h sql/table.cc sql/table.h sql/unireg.cc storage/csv/ha_tina.cc storage/federated/ha_federated.cc storage/heap/ha_heap.cc storage/innobase/Makefile.am storage/innobase/btr/btr0sea.c storage/innobase/buf/buf0lru.c storage/innobase/dict/dict0dict.c storage/innobase/dict/dict0mem.c storage/innobase/handler/ha_innodb.cc storage/innobase/handler/ha_innodb.h storage/innobase/include/btr0sea.h storage/innobase/include/dict0dict.h storage/innobase/include/dict0mem.h storage/innobase/include/ha_prototypes.h storage/innobase/include/lock0lock.h storage/innobase/include/row0mysql.h storage/innobase/include/sync0sync.ic storage/innobase/include/ut0ut.h storage/innobase/lock/lock0lock.c storage/innobase/os/os0file.c storage/innobase/plug.in storage/innobase/row/row0mysql.c storage/innobase/row/row0sel.c storage/innobase/srv/srv0srv.c storage/innobase/srv/srv0start.c storage/innobase/ut/ut0ut.c storage/myisam/ft_boolean_search.c strings/ctype.c strings/xml.c tests/mysql_client_test.c win/configure.js mysql-test/suite/funcs_1/t/is_coll_char_set_appl.test 	fe8fbb1e4f1fa79a4280bc376aa59f62e1f2cdb0
----------------------------
Updated InnoDB defaults 1) Buffer Pool size now defaults to 1GB and a minimum of 64MB 2) Log files are 3 by default and each 128MB in size 3) Removed innodb-file-io-threads config variable since no longer used 4) Set read io and write io threads to 8 by default for better default performance 5) Set log buffer size to 16 MB by default and minimum to 2MB 6) Set additional memory buffer pool to 8 MB and minimum to 2MB 7) Set max dirty percent to 75% and decreased to 99% to never allow a completely dirty buffer pool 8) Increased io capacity to 200 for a good default 	d7d7cf6ce947d1fa8fdd2ceb0a6cfbf583d25054
----------------------------
Bug#42588 system_mysql_db_fix30020 fails when run from bin dist with mtr2 - Properly set --bindir=$path_client_bindir and --basedir=$basedir by adding %s format specifier 	15dc0c2a744e6a52f0701b0d469a7ac504245444
----------------------------
Fix for bug #41868: crash or memory overrun with concat + upper, date_format functions String::realloc() did not check whether the existing string data fits in the newly allocated buffer for cases when reallocating a String object with external buffer (i.e.alloced == FALSE).  This could lead to memory overruns in some cases. 	887d1493fa45b528ed9aa93c6b1e50c2ab0c13dc
----------------------------
"Bug#40536: SELECT is blocked by INSERT DELAYED waiting on upgrading lock, even with low_priority_updates The problem is that there is no mechanism to control whether a delayed insert takes a high or low priority lock on a table. The solution is to modify the delayed insert thread (""handler"") to take into account the global value of low_priority_updates when taking table locks. The value of low_priority_updates is retrieved when the insert delayed thread is created and will remain the same for the duration of the thread. "	bc03c9ef19c567fa26ecb2a2e35c3b49b241b101
----------------------------
Bug#40657: assertion with out of range variables and traditional sql_mode In STRICT mode, out-of-bounds values caused an error message to be queued (rather than just a warning), without any further error-like processing happening. (The error is queued during update, at which time it's too late. For it to be processed properly, it would need to be queued during check-stage.) The assertion rightfully complains that we're trying to send an OK while having an error queued. Changeset breaks a lot of tests out into check-stage. This also allows us to send more correct warnings/error messages. 	3b9132fdab05aecd7187f095b3a1c790e09df57b
----------------------------
Bug #41732 rpl_ndb_circular_2ch needs an updated configuration file There are two issues: 1. 6.0 uses the obsolate master-*** server options; 2. the test is not deterministic in that although master vs slave consistency is fine, two runs of the test can have different results. The reason of the non-determinism is the combination of a chosen way to demo results and the ndb_autoincrement_prefetch_sz feature. The current patch fixes the 2nd issue by putting out results via diff_table macro instead of the former run-sensitive method. The 1st issue is going to be fixed by a separate patch to 6.0. 	176a78810536cb2fa2388d747597debd8c2010e5
----------------------------
"Bug#33550: mysqldump 4.0 compatibility broken mysqldump included character_set_client magic that is unknown before 4.1 even when asked for an appropriate compatibility mode. In compatibility (3.23, 4.0) mode, we do not output charset statements (not even in a ""comment conditional""), nor do we do magic on the server, even if the server is sufficient new (4.1+). Table-names will be output converted to the charset requested by mysqldump; if such a conversion is not possible (Ivrit -> Latin), mysqldump will fail. "	5622d4261f015a73330d07f50a876304834c5341
----------------------------
"Fix from magnus for the  ""The socket file path is too long (> 107)"" failure. "	fb9ab0407834bf34580e63099f0f30a15dbcf454
----------------------------
branches/innodb+: Merge revisions 4070:4072 from branches/zip: ------------------------------------------------------------------------ r4072 | marko | 2009-01-30 23:30:29 +0200 (Fri, 30 Jan 2009) | 32 lines branches/zip: Make innodb_adaptive_hash_index settable. btr_search_disabled: Rename to btr_search_enabled and change the type to char, so that it can be directly linked to the MySQL parameters. Note that the variable is protected by btr_search_latch and btr_search_enabled_mutex, a new mutex introduced in this patch. btr_search_enabled_mutex: A new mutex, to protect btr_search_enabled together with btr_search_latch. buf_pool_drop_hash_index(): New function, to be called from btr_search_disable(). btr_search_disable(), btr_search_enable(): Fix bugs.  These functions were previously unused. btr_search_guess_on_hash(), btr_search_build_page_hash_index(): Check btr_search_enabled once more, while holding btr_search_latch. btr_cur_search_to_nth_level(): Note that the reads of btr_search_enabled may be dirty and explain why it should not be a problem. innobase_adaptive_hash_index: Remove. The variable btr_search_enabled will be used directly instead. innodb_adaptive_hash_index_update(): New function, an update callback for innodb_adaptive_hash_index.  This will call either btr_search_disable() or btr_search_enable() when the value is assigned.  The functions will be called even if the value does not appear to be changed, e.g., when setting from TRUE to TRUE or FALSE to FALSE. rb://85 approved by Heikki Tuuri.  This addresses Issue #163. ------------------------------------------------------------------------ 	02957eab878a9c642c9d9c06743f97c93efc9349
----------------------------
branches/zip: Make innodb_adaptive_hash_index settable. btr_search_disabled: Rename to btr_search_enabled and change the type to char, so that it can be directly linked to the MySQL parameters. Note that the variable is protected by btr_search_latch and btr_search_enabled_mutex, a new mutex introduced in this patch. btr_search_enabled_mutex: A new mutex, to protect btr_search_enabled together with btr_search_latch. buf_pool_drop_hash_index(): New function, to be called from btr_search_disable(). btr_search_disable(), btr_search_enable(): Fix bugs.  These functions were previously unused. btr_search_guess_on_hash(), btr_search_build_page_hash_index(): Check btr_search_enabled once more, while holding btr_search_latch. btr_cur_search_to_nth_level(): Note that the reads of btr_search_enabled may be dirty and explain why it should not be a problem. innobase_adaptive_hash_index: Remove. The variable btr_search_enabled will be used directly instead. innodb_adaptive_hash_index_update(): New function, an update callback for innodb_adaptive_hash_index.  This will call either btr_search_disable() or btr_search_enable() when the value is assigned.  The functions will be called even if the value does not appear to be changed, e.g., when setting from TRUE to TRUE or FALSE to FALSE. rb://85 approved by Heikki Tuuri.  This addresses Issue #163. 	6aab391620fe83a43151d65417c17b3b60ac12e4
----------------------------
"ndbmtd - depricate mt-classic in favor of mt-lqh enable mt-classic if setting ""__ndbmt_classic=1"" in config, or export=NDB_MT_LQH=NOPLEASE "	46ff13e9752a686ba0e4c55036a3a74f43a3d879
----------------------------
Merge: 4dcde22 37f9da1 merge: 5.1 -> 5.1-rpl-merge conflicts: Text conflict in mysql-test/suite/sys_vars/r/rpl_max_binlog_size_func.result Text conflict in mysql-test/suite/sys_vars/t/rpl_max_binlog_size_func.test 	16a6158c4764d0a264c16ce7010753e16946ab42
----------------------------
bug #42451  setup_fake_relay_log makes an incorrect path on windows Temporarily blocking to run the test on windows. Todo: remove the include upon setup_fake_relay_log has been fixed. 	355d084567bb94a878fe586c75d0756d3fdf8204
----------------------------
Re-enabled log_bin_trust_function_creators_func as the patch in BUG#41003 reached our trees. 	5fe924b5fa96d6b9c69b9fda2763f0c29ce74222
----------------------------
"branches/innodb+: Merge revisions 4006:4060 from branches/zip: ------------------------------------------------------------------------ r4008 | vasil | 2009-01-20 17:01:08 +0200 (Tue, 20 Jan 2009) | 4 lines branches/zip: Add ChangeLog entries for the bugfixes in r4004 and r4005. ------------------------------------------------------------------------ r4027 | marko | 2009-01-23 11:04:49 +0200 (Fri, 23 Jan 2009) | 1 line branches/zip: Remove some redundant #include statements. ------------------------------------------------------------------------ r4028 | marko | 2009-01-23 11:26:10 +0200 (Fri, 23 Jan 2009) | 13 lines branches/zip: Enclose some more unused code in #ifdef UNIV_LOG_ARCHIVE. This will help trim the dependencies of InnoDB Hot Backup. recv_recovery_from_checkpoint_start(): Rename to recv_recovery_from_checkpoint_start_func(), and remove the two first parameters unless UNIV_LOG_ARCHIVE is defined.  Define and use the auxiliary macros TYPE_CHECKPOINT and LIMIT_LSN in the function. struct recv_sys_struct: Remove archive_group unless UNIV_LOG_ARCHIVE is defined. Do not define LOG_ARCHIVE unless UNIV_LOG_ARCHIVE is defined. ------------------------------------------------------------------------ r4029 | marko | 2009-01-23 14:07:38 +0200 (Fri, 23 Jan 2009) | 1 line branches/zip: Remove some redundant #include directives. ------------------------------------------------------------------------ r4030 | marko | 2009-01-23 15:31:36 +0200 (Fri, 23 Jan 2009) | 2 lines branches/zip: buf_page_get_gen(): Remove the unused mode BUF_GET_NOWAIT. This was noticed while investigating Issue #160. ------------------------------------------------------------------------ r4033 | marko | 2009-01-23 15:49:04 +0200 (Fri, 23 Jan 2009) | 16 lines branches/zip: Merge revisions 4005:4032 from branches/5.1: ------------------------------------------------------------------------ r4032 | marko | 2009-01-23 15:43:51 +0200 (Fri, 23 Jan 2009) | 10 lines branches/5.1: Merge r4031 from branches/5.0: btr_search_drop_page_hash_when_freed(): Check if buf_page_get_gen() returns NULL.  The page may have been evicted from the buffer pool between buf_page_peek_if_search_hashed() and buf_page_get_gen(), because the buffer pool mutex will be released between these two calls. (Bug #42279, Issue #160) rb://82 approved by Heikki Tuuri ------------------------------------------------------------------------ ------------------------------------------------------------------------ r4034 | marko | 2009-01-26 16:16:39 +0200 (Mon, 26 Jan 2009) | 2 lines branches/zip: buf_page_get_gen(): Fix a ""possibly uninitialized"" warning that was introduced in r4030. ------------------------------------------------------------------------ r4036 | marko | 2009-01-26 22:33:20 +0200 (Mon, 26 Jan 2009) | 22 lines branches/zip: In r988, the function buf_block_align() was enclosed within UNIV_DEBUG. The two remaining callers in non-debug builds, btr_search_guess_on_hash() and btr_search_validate(), were rewritten to call buf_page_hash_get(). To implement support for a resizeable buffer pool, the function buf_block_align() had been rewritten to perform a page hash lookup in the buffer pool. The caller was also made responsible for holding the buffer pool mutex. Because the page hash lookup is expensive and it has to be done while holding the buffer pool mutex, implement buf_block_align() by pointer arithmetics again, and make btr_search_guess_on_hash() call it. Note that this will have to be adjusted if the interface to the resizeable buffer pool is actually implemented. rb://83 approved by Heikki Tuuri, to address Issue #161. As a deviation from the approved patch, this patch also makes btr_search_validate() (invoked by CHECK TABLE) check that buf_pool->page_hash is consistent with buf_block_align(). ------------------------------------------------------------------------ r4039 | vasil | 2009-01-27 08:04:17 +0200 (Tue, 27 Jan 2009) | 5 lines branches/zip: Adjust the paths in innodb_file_per_table.diff with a recent rename of the test/result files in the MySQL tree. ------------------------------------------------------------------------ r4042 | marko | 2009-01-27 10:05:24 +0200 (Tue, 27 Jan 2009) | 2 lines branches/zip: buf_LRU_invalidate_tablespace(): Fix a race condition: read zip_size while still holding block_mutex. ------------------------------------------------------------------------ r4045 | marko | 2009-01-28 00:31:17 +0200 (Wed, 28 Jan 2009) | 8 lines branches/zip: btr_search_validate(): Fix a bogus UNIV_DEBUG assertion failure that was accidentally introduced in r4036. Instead of calling buf_block_get_frame(), which asserts that the block must be buffer-fixed, access block->frame directly.  That is safe, because changes of block->page.state are protected by the buffer pool mutex, which we are holding. This bug was reported by Michael. ------------------------------------------------------------------------ r4046 | marko | 2009-01-28 00:33:20 +0200 (Wed, 28 Jan 2009) | 2 lines branches/zip: Revert the change to univ.i that was accidentally committed in r4045. ------------------------------------------------------------------------ r4047 | marko | 2009-01-28 00:46:13 +0200 (Wed, 28 Jan 2009) | 6 lines branches/zip: btr_search_validate(): Fix an assertion failure that was introduced in r4036. Do not call buf_block_get_space(), buf_block_get_page_no() unless the block state is BUF_BLOCK_FILE_PAGE. This bug was reported by Michael. ------------------------------------------------------------------------ r4050 | vasil | 2009-01-28 08:21:44 +0200 (Wed, 28 Jan 2009) | 5 lines branches/zip: Adjust the paths in innodb_lock_wait_timeout.diff with a recent rename of the test/result files in the MySQL tree. ------------------------------------------------------------------------ r4051 | marko | 2009-01-28 14:35:49 +0200 (Wed, 28 Jan 2009) | 1 line branches/zip: trx0sys.ic: Remove unnecessary #include <data0type.h>. ------------------------------------------------------------------------ r4052 | marko | 2009-01-28 15:21:45 +0200 (Wed, 28 Jan 2009) | 5 lines branches/zip: Enclose some functions inside #ifdef UNIV_HOTBACKUP: ut_sprintf_timestamp_without_extra_chars(), ut_get_year_month_day(), log_reset_first_header_and_checkpoint(): These functions are only used in InnoDB Hot Backup. ------------------------------------------------------------------------ r4056 | calvin | 2009-01-29 03:06:41 +0200 (Thu, 29 Jan 2009) | 33 lines branches/zip: Merge revisions 4032:4035 from branches/5.1 All InnoDB related tests passed on Windows, except known failure in partition_innodb_semi_consistent. The inadvertent change to btr0sea.c in this commit is reverted in r4060. ------------------------------------------------------------------------ r4035 | vasil | 2009-01-26 09:26:25 -0600 (Mon, 26 Jan 2009) | 23 lines branches/5.1: Merge a change from MySQL: ------------------------------------------------------------ revno: 2646.161.4 committer: Tatiana A. Nurnberg <azundris@mysql.com> branch nick: 51-31177v2 timestamp: Mon 2009-01-12 06:32:49 +0100 message: Bug#31177: Server variables can't be set to their current values Bounds-checks and blocksize corrections were applied to user-input, but constants in the server were trusted implicitly. If these values did not actually meet the requirements, the user could not set change a variable, then set it back to the (wonky) factory default or maximum by explicitly specifying it (SET <var>=<value> vs SET <var>=DEFAULT). Now checks also apply to the server's presets. Wonky values and maxima get corrected at startup. Consequently all non-offsetted values the user sees are valid, and users can set the variable to that exact value if they so desire. ------------------------------------------------------------------------ r4060 | marko | 2009-01-29 09:39:04 +0200 (Thu, 29 Jan 2009) | 1 line branches/zip: btr0sea.c: Revert the inadvertent change made in r4056. ------------------------------------------------------------------------ "	372c4132fdaa437c539a3843e57b4dd79ade4dc7
----------------------------
branches/zip: Port the applicable parts of r4053 from branches/innodb+: Implement the global variable innodb_change_buffering, with the following values: none - buffer nothing inserts - buffer inserts (the default) Approved by Ken Jacobs. 	8b025adba68b1decd9019814cab74020fd6c8c4a
----------------------------
"BUG#35583 mysqlbinlog replay fails with ERROR 1146 when temp tables are used When using CREATE TEMPORARY TABLE LIKE to create a temporary table, or using TRUNCATE to delete all rows of a temporary table, they did not set the tmp_table_used flag, and cause the omission of ""SET @@session.pseudo_thread_id"" when dumping binlog with mysqlbinlog, and cause error when replay the statements. This patch fixed the problem by setting tmp_table_used in these two cases. (Done by He Zhenxing 2009-01-12) "	4aee29e844b0fe1afd357db53a7897bdb570693b
----------------------------
branches/innodb+: branches/innodb+: Implement the global variable innodb_change_buffering, with the following values: none - buffer nothing inserts - buffer inserts (like InnoDB so far) deletes - buffer delete-marks changes - buffer inserts and delete-marks purges - buffer delete-marks and deletes all - buffer all operations (insert, delete-mark, delete) The default is 'all'. All values except 'none' and 'inserts' will make InnoDB+ write new-format records to the insert buffer, even for inserts. We will implement this variable in the InnoDB Plugin 1.0.3 with the values 'none' and 'inserts' (the default). This patch also adds a #if 0 TODO snippet for tagging the insert buffer format in the system tablespace. This is related to https://svn.innodb.com/innobase/Saving_last_shutdown_state and Issue #81. rb://79 approved by Heikki Tuuri and Ken Jacobs. 	78301bbe11e37d718bbd1a46986ee04c7eab78f1
----------------------------
Bug#42413 : IPv6 connection handling code bugs Fix some bugs in backport of IPv6 code from mysql-6.0. Also, unrelated Ndb Version fix to configure.in 	1dab5d41aadc55c477bc95838042d8b4f9dd89c6
----------------------------
branches/zip: Adjust the paths in innodb_lock_wait_timeout.diff with a recent rename of the test/result files in the MySQL tree. 	3c0d6f302f6f208a33a2908c576c2bd3f35a8c15
----------------------------
WL#4189 mtr.pl v2 - Bypass --secure-file-priv by loading the file from the client using LOAD DATA LOCAL INFILE 	c1376aeae02087db8596f456692072a782a627e6
----------------------------
"WL#4189 mtr.pl v2 - Add a ""skip-ssl=1"" to [mysqltest] section so that mysqltest will not run with ssl turned on by default but stil be able to turn it on when requested - This avoids that check_warnings and check_testcase connects to the server woth SSL turned on "	d85073033372b7e1513f8f72dabfd2bbda8faf24
----------------------------
"Bug #31240  	load data infile replication between (4.0 or 4.1) and 5.1 fails Fixing pb failures caused by mtr invokes the test with --tmpdir to which there are  sensitive operations in the test and setup_fake_relay_log.inc also needed --secure-file-priv for its own separate directory. Fixed with removing SELECT INTO OUTFILE and deploying --exec echo instead in the marco. The test's opt file should contain --secure-file-priv=$MYSQL_TEST_DIR as the test operations deal with files located in $MYSQL_TEST_DIR. "	8afe7c2fe6604355913e8ae27f91b7d5369193a8
----------------------------
branches/zip: Adjust the paths in innodb_file_per_table.diff with a recent rename of the test/result files in the MySQL tree. 	b20b32d1c871893bb2316adc504cfe63961e85ab
----------------------------
"Bug #31240  	load data infile replication between (4.0 or 4.1) and 5.1 fails Overriding a default value of --secure-file-priv on pb.mtr to be $MYSQLTEST_VARDIR which makes pb's mtr happy to execute the regression test for the bug. "	1c23fb68c7fe55ba63808953328114774a062e34
----------------------------
"Bug #31240  	load data infile replication between (4.0 or 4.1) and 5.1 fails Overriding a default value of --secure-file-priv on pb.mtr with a value allowable the test to pass on pb. "	0020291ab7cc08121394a95718436fb3467538ce
----------------------------
Fix for bug #37756: enabling fulltext indexes with myisam_repair_threads > 1 causes crash Problem: parallel repair (myisam_repair_threads > 1) of a myisam table with two or more fulltext keys that use the same parser may lead to a server crash. ALTER TABLE ENABLE KEYS is affected as well. Fix: properly initialize fulltext structures for parallel repair. Note: 1. there's no deterministic test case. 2. now we call parser->init() for each fulltext key (not for each fulltext parser used). 	01511453102aa18fb8933927d80eccdeef501c68
----------------------------
"WL#4198 mtr.pl v2 - fix typo, use ""$old_log_error"" as name when loading from .err-old file "	097508292d70f5699d272f4033e5f836ed4c5c63
----------------------------
Merge: 37e91ac 4f0d2f5 merge: 5.1 -> 5.1-rpl conflicts: Text conflict in client/mysqltest.cc Text conflict in mysql-test/include/wait_until_connected_again.inc Text conflict in mysql-test/lib/mtr_report.pm Text conflict in mysql-test/mysql-test-run.pl Text conflict in mysql-test/r/events_bugs.result Text conflict in mysql-test/r/log_state.result Text conflict in mysql-test/r/myisam_data_pointer_size_func.result Text conflict in mysql-test/r/mysqlcheck.result Text conflict in mysql-test/r/query_cache.result Text conflict in mysql-test/r/status.result Text conflict in mysql-test/suite/binlog/r/binlog_index.result Text conflict in mysql-test/suite/binlog/r/binlog_innodb.result Text conflict in mysql-test/suite/rpl/r/rpl_packet.result Text conflict in mysql-test/suite/rpl/t/rpl_packet.test Text conflict in mysql-test/t/disabled.def Text conflict in mysql-test/t/events_bugs.test Text conflict in mysql-test/t/log_state.test Text conflict in mysql-test/t/myisam_data_pointer_size_func.test Text conflict in mysql-test/t/mysqlcheck.test Text conflict in mysql-test/t/query_cache.test Text conflict in mysql-test/t/rpl_init_slave_func.test Text conflict in mysql-test/t/status.test 	14d4576bfe87c490cc34927d53b9b68f028b51c2
----------------------------
add options --ndb-log-bin --ndb-log-binlog-index 	c891fbd05cf0866bcd7bd5a4999e873401c359cc
----------------------------
"Bug#35735 mysql-test-run.pl creates tmpdir for socket path longer than 70 - Additional patch with improved protection by putting it all inside an ""eval"" - Calling 'hostpath' on a truncated socket may also croak. - Remove the need to create any directory parts of ""path"" inside the function. "	e1e296bbf811f260a68a00de29e0c793850ca557
----------------------------
ndbmtd - 1) OJ optimizations developed for cmt/bw 2) pessemstic scheduling (update_sched_config), bug#42052 only execute signals if space exist to send to other-threads in system 3) new NdbCondition_ComputeAbsTime/NdbCondition_WaitTimeoutAbs 	264c319a33208f17a217ec3376c7e2b97458bd6e
----------------------------
"Adding a test to verify that Bug#27208 ""If no current database, character_set_database !=character_set_server"" is fixed. "	e456ef4b8d711c2e61c932f7e59f2e2e30edae3b
----------------------------
"Merge: 4c4e488 4ecaa45 Upmerge changesets from 5.0-build to 5.1-build. This does not bring any contents changes, it is purely metadata which are affected. Details: Even within 5.0, most of these changesets did not cause file contents changes, because they were backports done for the ""service pack"" builds of 5.0.66sp1 and 5.0.72sp1. The ""real"" changesets are also already present in 5.1, so this upmerge doesn't change any contents. The only ""real"" changeset in 5.0 was a fix of the shell scripts used to configure bdb (BerkeleyDB). As we completele removed bdb from the 5.1 sources already, the affected files are not present in the 5.1 source tree, so this changeset also does not cause any contents changes. "	4f0d2f5a03ce0ded7138dbabb416534cb09abf75
----------------------------
"Merge: 887126a b725068 Merge some tool fixes from the 5.0.72sp1 build back into the tree. This is not the final merge of that release build, but we need early access to these tool fixes (use of ""awk"" in the BDB configuration). "	4ecaa45d11e3ead0d128e9535f8f0e35767c00ad
----------------------------
Bug#42056 ndb_mgmd hang on STOPing the management node - part2 - Continue sthutdown of ndb_mgmd even if not all threads/sessions has stopped within 2*MgmApiSession::SOCKET_TIMEOUT(currently 30 seconds) - Print a message if not all sessions has stopped and shutdown continues anyway - Add constant for SOCKET_TIMEOUT to used when a MgmApiSession read or write to the client, as well as when shutting down all sessions. 	c8ff455b7fff22bb5ca1f5c7ebb3fabb6f481687
----------------------------
"Bug#38145: .frm file isn't sync'd with sync_frm enabled Views weren't sync()d the same way other structures were. In creating the FRM for views, obey the same rules for variable ""sync_frm"" as for everything else. "	8c9e81e8afd64a2f80fc4c622169145432b3a895
----------------------------
"branches/innodb+: Merge revisions 3602:3931 from branches/zip: ------------------------------------------------------------------------ r3607 | marko | 2008-12-30 22:33:31 +0200 (Tue, 30 Dec 2008) | 20 lines branches/zip: Remove the dependency on the MySQL HASH table implementation. Use the InnoDB hash table for keeping track of INNOBASE_SHARE objects. struct st_innobase_share: Make table_name const uchar*.  Add the member table_name_hash. innobase_open_tables: Change the type from HASH to hash_table_t*. innobase_get_key(): Remove. innobase_fold_name(): New function, for computing the fold value for the InnoDB hash table. get_share(), free_share(): Use the InnoDB hash functions. innobase_end(): Free innobase_open_tables before shutting down InnoDB. Shutting down InnoDB will invalidate all memory allocated via InnoDB. rb://65 approved by Heikki Tuuri.  This addresses Issue #104. ------------------------------------------------------------------------ r3608 | marko | 2008-12-30 22:45:04 +0200 (Tue, 30 Dec 2008) | 22 lines branches/zip: When setting the PAGE_LEVEL of a compressed B-tree page from or to 0, compress the page at the same time.  This is necessary, because the column information stored on the compressed page will differ between leaf and non-leaf pages.  Leaf pages are identified by PAGE_LEVEL=0.  This bug was reported as Issue #150. Document the similarity between btr_page_create() and btr_page_empty().  Make the function signature of btr_page_empty() identical with btr_page_create().  (This will add the parameter ""level"".) btr_root_raise_and_insert(): Replace some code with a call to btr_page_empty(). btr_attach_half_pages(): Assert that the page level has already been set on both block and new_block.  Do not set it again. btr_discard_only_page_on_level(): Document that this function is probably never called.  Make it work on any height tree.  (Tested on 2-high tree by disabling btr_lift_page_up().) rb://68 ------------------------------------------------------------------------ r3612 | marko | 2009-01-02 11:02:44 +0200 (Fri, 02 Jan 2009) | 14 lines branches/zip: Merge c2998 from branches/6.0, so that the same InnoDB Plugin source tree will work both under 5.1 and 6.0.  Do not add the test case innodb_ctype_ldml.test, because it would not work under MySQL 5.1. Refuse to create tables whose columns contain collation IDs above 255. This removes an assertion failure that was introduced in WL#4164 (Two-byte collation IDs). create_table_def(): Do not fail an assertion if a column contains a charset-collation ID greater than 256. Instead, issue an error and refuse to create the table. The original change (branches/6.0 r2998) was rb://51 approved by Calvin Sun. ------------------------------------------------------------------------ r3613 | inaam | 2009-01-02 15:10:50 +0200 (Fri, 02 Jan 2009) | 6 lines branches/zip: Implement the parameter innodb_use_sys_malloc (false by default), for disabling InnoDB's internal memory allocator and using system malloc/free instead. rb://62 approved by Marko ------------------------------------------------------------------------ r3614 | marko | 2009-01-02 15:55:12 +0200 (Fri, 02 Jan 2009) | 1 line branches/zip: ChangeLog: Document r3608 and r3613. ------------------------------------------------------------------------ r3615 | marko | 2009-01-02 15:57:51 +0200 (Fri, 02 Jan 2009) | 1 line branches/zip: ChangeLog: Clarify the impact of r3608. ------------------------------------------------------------------------ r3616 | marko | 2009-01-03 00:23:30 +0200 (Sat, 03 Jan 2009) | 1 line branches/zip: srv_suspend_mysql_thread(): Add some clarifying comments. ------------------------------------------------------------------------ r3618 | marko | 2009-01-05 12:54:53 +0200 (Mon, 05 Jan 2009) | 15 lines branches/zip: Merge revisions 3598:3601 from branches/5.1: ------------------------------------------------------------------------ r3601 | marko | 2008-12-22 16:05:19 +0200 (Mon, 22 Dec 2008) | 9 lines branches/5.1: Make SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED a true replacement of SET GLOBAL INNODB_LOCKS_UNSAFE_FOR_BINLOG=1. This fixes an error that was introduced in r370, causing semi-consistent read not to not unlock rows in READ COMMITTED mode. (Bug #41671, Issue #146) rb://67 approved by Heikki Tuuri ------------------------------------------------------------------------ ------------------------------------------------------------------------ r3623 | vasil | 2009-01-06 09:56:32 +0200 (Tue, 06 Jan 2009) | 7 lines branches/zip: Add patch to fix the failing main.variables mysql-test. It started failing after the variable innodb_use_sys_malloc was added because it matches '%alloc%' and the test is badly written and expects that no new variables like that will ever be added. ------------------------------------------------------------------------ r3795 | marko | 2009-01-07 16:17:47 +0200 (Wed, 07 Jan 2009) | 7 lines branches/zip: row_merge_tuple_cmp(): Do not report a duplicate key value if any of the fields are NULL.  While the tuples are equal in the sorting order, SQL NULL is defined to be logically inequal to anything else. (Bug #41904) rb://70 approved by Heikki Tuuri ------------------------------------------------------------------------ r3796 | marko | 2009-01-07 16:19:32 +0200 (Wed, 07 Jan 2009) | 1 line branches/zip: Add the tests that were forgotten from r3795. ------------------------------------------------------------------------ r3797 | marko | 2009-01-07 16:22:18 +0200 (Wed, 07 Jan 2009) | 22 lines branches/zip: Do not call trx_allocate_for_mysql() directly, but use helper functions that initialize some members of the transaction struct. (Bug #41680) innobase_trx_init(): New function: initialize some fields of a transaction struct from a MySQL THD object. innobase_trx_allocate(): New function: allocate and initialize a transaction struct. check_trx_exists(): Use the above two functions. ha_innobase::delete_table(), ha_innobase::rename_table(), ha_innobase::add_index(), ha_innobase::final_drop_index(): Use innobase_trx_allocate(). innobase_drop_database(): In the Windows plugin, initialize the trx_t specially, because the THD is not available.  Otherwise, use innobase_trx_allocate(). rb://69 accepted by Heikki Tuuri ------------------------------------------------------------------------ r3798 | marko | 2009-01-07 16:42:42 +0200 (Wed, 07 Jan 2009) | 8 lines branches/zip: row_merge_drop_temp_indexes(): Do not lock the rows of SYS_INDEXES when looking for partially created indexes.  Use the transaction isolation level READ UNCOMMITTED to avoid interfering with locks held by incomplete transactions that will be rolled back in a subsequent step in the recovery.  (Issue #152) Approved by Heikki Tuuri ------------------------------------------------------------------------ r3852 | vasil | 2009-01-08 22:10:10 +0200 (Thu, 08 Jan 2009) | 4 lines branches/zip: Add ChangeLog entries for r3795 r3796 r3797 r3798. ------------------------------------------------------------------------ r3866 | marko | 2009-01-09 15:09:51 +0200 (Fri, 09 Jan 2009) | 2 lines branches/zip: buf_flush_try_page(): Move some common code from each switch case before the switch block. ------------------------------------------------------------------------ r3867 | marko | 2009-01-09 15:13:14 +0200 (Fri, 09 Jan 2009) | 2 lines branches/zip: buf_flush_try_page(): Introduce the variable is_compressed for caching the result of buf_page_get_state(bpage) == BUF_BLOCK_FILE_PAGE. ------------------------------------------------------------------------ r3868 | marko | 2009-01-09 15:40:11 +0200 (Fri, 09 Jan 2009) | 4 lines branches/zip: buf_flush_insert_into_flush_list(), buf_flush_insert_sorted_into_flush_list(): Remove unused code. Change the parameter to buf_block_t* block and assert that block->state == BUF_BLOCK_FILE_PAGE.  This is part of Issue #155. ------------------------------------------------------------------------ r3873 | marko | 2009-01-09 22:27:40 +0200 (Fri, 09 Jan 2009) | 17 lines branches/zip: Some non-functional changes related to Issue #155. buf_page_struct: Note that space and offset are also protected by buf_pool_mutex.  They are only assigned to by buf_block_set_file_page().  Thus, it suffices for buf_flush_batch() to hold just buf_pool_mutex when checking these fields. buf_flush_try_page(): Rename ""locked"" to ""is_s_latched"", per Heikki's request. buf_flush_batch(): Move the common statement mutex_exit(block_mutex) from all if-else if-else branches before the if block.  Remove the redundant test (buf_pool->init_flush[flush_type] == FALSE) that was apparently copied from buf_flush_write_complete(). buf_flush_write_block_low(): Note why it is safe not to hold buf_pool_mutex or block_mutex.  Enumerate the assumptions in debug assertions. ------------------------------------------------------------------------ r3874 | marko | 2009-01-09 23:09:06 +0200 (Fri, 09 Jan 2009) | 4 lines branches/zip: Add comments related to Issue #155. buf_flush_try_page(): Note why it is safe to access bpage without holding buf_pool_mutex or block_mutex. ------------------------------------------------------------------------ r3875 | marko | 2009-01-09 23:15:12 +0200 (Fri, 09 Jan 2009) | 11 lines branches/zip: Non-functional change: Tighten debug assertions and remove dead code. buf_flush_ready_for_flush(), buf_flush_try_page(): Assert that flush_type is one of BUF_FLUSH_LRU or BUF_FLUSH_LIST.  The flush_type comes from buf_flush_batch(), which already asserts this.  The assertion holds for all calls in the source code. buf_flush_try_page(): Remove the dead case BUF_FLUSH_SINGLE_PAGE of switch (flush_type). ------------------------------------------------------------------------ r3879 | marko | 2009-01-12 12:46:44 +0200 (Mon, 12 Jan 2009) | 14 lines branches/zip: Simplify the flushing of dirty pages from the buffer pool. buf_flush_try_page(): Rename to buf_flush_page(), and change the return type to void.  Replace the parameters space, offset with bpage, and remove the second page hash lookup.  Note and assert that both buf_pool_mutex and block_mutex must now be held upon entering the function.  They will still be released by this function. buf_flush_try_neighbors(): Replace buf_flush_try_page() with buf_flush_page().  Make the logic easier to follow by not negating the precondition of buf_flush_page(). rb://73 approved by Sunny Bains.  This is related to Issue #157. ------------------------------------------------------------------------ r3880 | marko | 2009-01-12 13:24:37 +0200 (Mon, 12 Jan 2009) | 2 lines branches/zip: buf_flush_page(): Fix a comment that should have been fixed in r3879.  Spotted by Sunny. ------------------------------------------------------------------------ r3881 | marko | 2009-01-12 14:25:22 +0200 (Mon, 12 Jan 2009) | 2 lines branches/zip: buf_page_get_newest_modification(): Use the block mutex instead of the buffer pool mutex.  This is related to Issue #157. ------------------------------------------------------------------------ r3882 | marko | 2009-01-12 14:40:08 +0200 (Mon, 12 Jan 2009) | 3 lines branches/zip: struct mtr_struct: Remove the unused field magic_n unless UNIV_DEBUG is defined.  mtr->magic_n is only assigned to and checked in UNIV_DEBUG builds. ------------------------------------------------------------------------ r3883 | marko | 2009-01-12 14:48:59 +0200 (Mon, 12 Jan 2009) | 1 line branches/zip: Non-functional change: Use ut_d when assigning to mtr->state. ------------------------------------------------------------------------ r3884 | marko | 2009-01-12 18:56:11 +0200 (Mon, 12 Jan 2009) | 16 lines branches/zip: Non-functional change: Add some debug assertions and comments. buf_page_t: Note that the LRU fields are protected by buf_pool_mutex only, not block->mutex or buf_pool_zip_mutex. buf_page_get_freed_page_clock(): Note that this is sometimes invoked without mutex protection. buf_pool_get_oldest_modification(): Note that the result may be out of date. buf_page_get_LRU_position(), buf_page_is_old(): Assert that the buffer pool mutex is being held. buf_page_release(): Assert that dirty blocks are in the flush list. ------------------------------------------------------------------------ r3896 | marko | 2009-01-13 09:30:26 +0200 (Tue, 13 Jan 2009) | 2 lines branches/zip: buf_flush_try_neighbors(): Fix a bug that was introduced in r3879 (rb://73). ------------------------------------------------------------------------ r3900 | marko | 2009-01-13 10:32:24 +0200 (Tue, 13 Jan 2009) | 1 line branches/zip: Fix some comments to say buf_pool_mutex. ------------------------------------------------------------------------ r3907 | marko | 2009-01-13 11:54:01 +0200 (Tue, 13 Jan 2009) | 3 lines branches/zip: row_merge_create_temporary_table(): On error, row_create_table_for_mysql() already frees new_table. Do not attempt to free it again. ------------------------------------------------------------------------ r3908 | marko | 2009-01-13 12:34:32 +0200 (Tue, 13 Jan 2009) | 1 line branches/zip: Enable HASH_ASSERT_OWNED independently of UNIV_SYNC_DEBUG. ------------------------------------------------------------------------ r3914 | marko | 2009-01-13 21:46:22 +0200 (Tue, 13 Jan 2009) | 37 lines branches/zip: In hash table lookups, assert that the traversed items satisfy some conditions when UNIV_DEBUG is defined. HASH_SEARCH(): New parameter: ASSERTION. All users will pass an appropriate ut_ad() or nothing. dict_table_add_to_columns(): Assert that the table being added to the data dictionary cache is not already being pointed to by the name_hash and id_hash tables. HASH_SEARCH_ALL(): New macro, for use in dict_table_add_to_columns(). dict_mem_table_free(): Set ut_d(table->cached = FALSE), so that we can check ut_ad(table->cached) when traversing the hash tables, as in HASH_SEARCH(name_hash, dict_sys->table_hash, ...) and HASH_SEARCH(id_hash, dict_sys->table_id_hash, ...). dict_table_get_low(), dict_table_get_on_id_low(): Assert ut_ad(!table || table->cached). fil_space_get_by_id(): Check ut_ad(space->magic_n == FIL_SPACE_MAGIC_N) in HASH_SEARCH(hash, fil_system->spaces, ...). fil_space_get_by_name(): Check ut_ad(space->magic_n == FIL_SPACE_MAGIC_N) in HASH_SEARCH(name_hash, fil_system->name_hash, ...). buf_buddy_block_free(): Check that the blocks are in valid state in HASH_SEARCH(hash, buf_pool->zip_hash, ...). buf_page_hash_get(): Check that the blocks are in valid state in HASH_SEARCH(hash, buf_pool->page_hash, ...). get_share(), free_share(): Check ut_ad(share->use_count > 0) in HASH_SEARCH(table_name_hash, innobase_open_tables, ...). This was posted as rb://75 for tracking down errors similar to Issue #153. ------------------------------------------------------------------------ r3931 | marko | 2009-01-14 16:06:22 +0200 (Wed, 14 Jan 2009) | 26 lines branches/zip: Merge revisions 3601:3930 from branches/5.1: ------------------------------------------------------------------------ r3911 | sunny | 2009-01-13 14:15:24 +0200 (Tue, 13 Jan 2009) | 13 lines branches/5.1: Fix Bug#38187 Error 153 when creating savepoints InnoDB previously treated savepoints as a stack e.g., SAVEPOINT a; SAVEPOINT b; SAVEPOINT c; SAVEPOINT b; <- This would delete b and c. This fix changes the behavior to: SAVEPOINT a; SAVEPOINT b; SAVEPOINT c; SAVEPOINT b; <- Does not delete savepoint c ------------------------------------------------------------------------ r3930 | marko | 2009-01-14 15:51:30 +0200 (Wed, 14 Jan 2009) | 4 lines branches/5.1: dict_load_table(): If dict_load_indexes() fails, invoke dict_table_remove_from_cache() instead of dict_mem_table_free(), so that the data dictionary will not point to freed data. (Bug #42075, Issue #153, rb://76 approved by Heikki Tuuri) ------------------------------------------------------------------------ ------------------------------------------------------------------------ "	23151f3db8d233804f3512a452dc3856adfce1fa
----------------------------
Fix Bug #35261: date_format test fails if new variables LIKE '%e_format' are added Use SELECT FROM INFORMATION_SCHEMA instead of SHOW VARIABLES LIKE to restrict values correctly. 	6efd026f14ce12ad733e2da102617ae879179469
----------------------------
branches/zip: In hash table lookups, assert that the traversed items satisfy some conditions when UNIV_DEBUG is defined. HASH_SEARCH(): New parameter: ASSERTION. All users will pass an appropriate ut_ad() or nothing. dict_table_add_to_columns(): Assert that the table being added to the data dictionary cache is not already being pointed to by the name_hash and id_hash tables. HASH_SEARCH_ALL(): New macro, for use in dict_table_add_to_columns(). dict_mem_table_free(): Set ut_d(table->cached = FALSE), so that we can check ut_ad(table->cached) when traversing the hash tables, as in HASH_SEARCH(name_hash, dict_sys->table_hash, ...) and HASH_SEARCH(id_hash, dict_sys->table_id_hash, ...). dict_table_get_low(), dict_table_get_on_id_low(): Assert ut_ad(!table || table->cached). fil_space_get_by_id(): Check ut_ad(space->magic_n == FIL_SPACE_MAGIC_N) in HASH_SEARCH(hash, fil_system->spaces, ...). fil_space_get_by_name(): Check ut_ad(space->magic_n == FIL_SPACE_MAGIC_N) in HASH_SEARCH(name_hash, fil_system->name_hash, ...). buf_buddy_block_free(): Check that the blocks are in valid state in HASH_SEARCH(hash, buf_pool->zip_hash, ...). buf_page_hash_get(): Check that the blocks are in valid state in HASH_SEARCH(hash, buf_pool->page_hash, ...). get_share(), free_share(): Check ut_ad(share->use_count > 0) in HASH_SEARCH(table_name_hash, innobase_open_tables, ...). This was posted as rb://75 for tracking down errors similar to Issue #153. 	2f7bcc7d999ccbffe4e9aecbc71ed2e8ef5bd3b0
----------------------------
Fix Bug#32831: libmysql should be built with all charsets Add #define HAVE_CHARSET_name in config-win.h for all character sets that MySQL supports.  Add comments to config/ac-macros/character_sets.m4 and config-win.h so hopefully they will be updated in sync. 	8c23b07a9a6489329885b2c57cea5cf6d13ddae3
----------------------------
Applying InnoDB snapshot innodb-5.1-ss3603 Detailed description of changes: r3601 | marko | 2008-12-22 16:05:19 +0200 (Mon, 22 Dec 2008) | 9 lines branches/5.1: Make SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED a true replacement of SET GLOBAL INNODB_LOCKS_UNSAFE_FOR_BINLOG=1. This fixes an error that was introduced in r370, causing semi-consistent read not to not unlock rows in READ UNCOMMITTED mode. (Bug #41671, Issue #146) rb://67 approved by Heikki Tuuri 	5d8c3529ec7e65e0e4683a01b53842e8482f6f21
----------------------------
"Tool fix, needed for ""compile-dist"" to succeed on Solaris: The default ""awk"" there cannot handle some of the scripts which are used by BDB for configuration. The fix: 1) Introduce a variable ""AWK"" in some of the BDB shell scripts, 2) search ""gawk"" and give it precedence over ""awk"" when assigning a value to the ""AWK"" variable, fail if neither is found, 3) use that variable when calling an ""awk"" program with one of the critical scripts. The perfect solution would be to use the ""awk"" program found by ""configure"", but we cannot follow that approach because BDB's configuration is handled as a special case before the overall ""configure"" is run. Because of this, 1) the ""configure"" result isn't yet available, 2) ""configure"" will not handle these BDB files. Searching ""gawk"" is a (not-so-nice) way out. Note that all this need not be perfectly portable, it is needed only when we create a source distribution tarball from a develkopment tree. "	b72506881b56e804e9fb36ed0e83940a54fc59ab
----------------------------
Applying InnoDB snapshot innodb-5.1-ss3603 Detailed description of changes: r3257 | inaam | 2008-11-24 22:06:50 +0200 (Mon, 24 Nov 2008) | 13 lines branches/5.1 bug#40760 The config param innodb_thread_concurrency is dynamically set and is read when a thread enters/exits innodb. If the value is changed between the enter and exit time the behaviour becomes erratic. The fix is not to use srv_thread_concurrency when exiting, instead use the flag trx->declared_to_be_inside_innodb. rb://57 Approved by: Marko 	c36cf42f055d38981e8bd584d283d777189ee105
----------------------------
"Applying InnoDB snapshot innodb-5.1-ss3603 Detailed description of changes: r2902 | vasil | 2008-10-28 12:10:25 +0200 (Tue, 28 Oct 2008) | 10 lines branches/5.1: Fix Bug#38189 innodb_stats_on_metadata missing Make the variable innodb_stats_on_metadata visible to the users and also settable at runtime. Previously it was only ""visible"" as a command line startup option to mysqld. Approved by:	Marko (https://svn.innodb.com/rb/r/36) "	ab216c8721b5a8f4bb7c2da4c800a9352304af51
----------------------------
"Backport of a 5.0.74 fix into 5.0.72sp1: Remove bashisms from BUILD/compile-dist and configure.in, so Bootstrap works on Solaris box; - force GNU make in compile-dist; - remove unportable ""grep -q"" from configure.in Original changeset: revision-id: build@mysql.com-20081203041148-icwscut3bk09ds47 parent: kgeorge@mysql.com-20081202125040-eiu6s7bk6s96s4xh author: timothy.smith@sun.com committer: MySQL Build Team <build@mysql.com> branch nick: mysql-5.0.74-release timestamp: Wed 2008-12-03 05:11:48 +0100 "	cafe06c29a86f0a8aa1d3e6d8628043f7c67506f
----------------------------
WL#4350 - Copy dynamic ports from old to new config when config changes. The dynamic ports are kept in the local config of MgmtSrvr and are thus never written to disk. 	c690f1860fb76f29cf1fc4f6de024878d11d49e4
----------------------------
WL4562 IPv6 support for replication ----------------------------------- Add IPv6 support to MySQLD, supporting IPv6 clients and replication over IPv6. - MySQLD is modified to bind to a socket using IPv6 compatible methods - Common client code is modified to bind to a socket using IPv6 compatible methods - MASTER_BIND option is modified to default to the empty string '' rather than 0.0.0.0. MySQLD server socket binding can be controlled via command line option. MySQLD server client socket (replication) binding can be controlled via MASTER_BIND option MySQL client socket binding can be controlled via command line option. 	189c872b5f585d86849a74ba877d661d44267114
----------------------------
"Bug#41470: DATE_FORMAT() crashes the complete server with a valid date Passing dubious ""year zero"" in non-zero date (not ""0000-00-00"") could lead to negative value for year internally, while variable was unsigned. This led to Really Bad Things further down the line. Now doing calculations with signed type for year internally. "	17bbe30cb0770459a03bd9ae78095e8fc8e7234f
----------------------------
bug#41828: mysql_install_db misses mysqld options when using --basedir * pass --languages to mysqld when using --basedir * improve error messages when unable to find files in basedir 	240baba269f4abf6e472cd0170ca09acb8d0ff08
----------------------------
branches/zip: Add patch to fix the failing main.variables mysql-test. It started failing after the variable innodb_use_sys_malloc was added because it matches '%alloc%' and the test is badly written and expects that no new variables like that will ever be added. 	881759bacb0ec4f16dd94e8a8dd95747cf3bbf78
----------------------------
branches/zip: Merge revisions 3598:3601 from branches/5.1: ------------------------------------------------------------------------ r3601 | marko | 2008-12-22 16:05:19 +0200 (Mon, 22 Dec 2008) | 9 lines branches/5.1: Make SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED a true replacement of SET GLOBAL INNODB_LOCKS_UNSAFE_FOR_BINLOG=1. This fixes an error that was introduced in r370, causing semi-consistent read not to not unlock rows in READ COMMITTED mode. (Bug #41671, Issue #146) rb://67 approved by Heikki Tuuri ------------------------------------------------------------------------ 	6c9b61690a962dd4d63f4c83ea3baa2fc70fcf74
----------------------------
branches/zip: Implement the parameter innodb_use_sys_malloc (false by default), for disabling InnoDB's internal memory allocator and using system malloc/free instead. rb://62 approved by Marko 	09a089ecf888f15e4c12704c03e721fae4949547
----------------------------
"branches/innodb+: Merge revisions 3602:3608 from branches/zip: ------------------------------------------------------------------------ r3607 | marko | 2008-12-30 22:33:31 +0200 (Tue, 30 Dec 2008) | 20 lines branches/zip: Remove the dependency on the MySQL HASH table implementation. Use the InnoDB hash table for keeping track of INNOBASE_SHARE objects. struct st_innobase_share: Make table_name const uchar*.  Add the member table_name_hash. innobase_open_tables: Change the type from HASH to hash_table_t*. innobase_get_key(): Remove. innobase_fold_name(): New function, for computing the fold value for the InnoDB hash table. get_share(), free_share(): Use the InnoDB hash functions. innobase_end(): Free innobase_open_tables before shutting down InnoDB. Shutting down InnoDB will invalidate all memory allocated via InnoDB. rb://65 approved by Heikki Tuuri.  This addresses Issue #104. ------------------------------------------------------------------------ r3608 | marko | 2008-12-30 22:45:04 +0200 (Tue, 30 Dec 2008) | 22 lines branches/zip: When setting the PAGE_LEVEL of a compressed B-tree page from or to 0, compress the page at the same time.  This is necessary, because the column information stored on the compressed page will differ between leaf and non-leaf pages.  Leaf pages are identified by PAGE_LEVEL=0.  This bug was reported as Issue #150. Document the similarity between btr_page_create() and btr_page_empty().  Make the function signature of btr_page_empty() identical with btr_page_create().  (This will add the parameter ""level"".) btr_root_raise_and_insert(): Replace some code with a call to btr_page_empty(). btr_attach_half_pages(): Assert that the page level has already been set on both block and new_block.  Do not set it again. btr_discard_only_page_on_level(): Document that this function is probably never called.  Make it work on any height tree.  (Tested on 2-high tree by disabling btr_lift_page_up().) rb://68 ------------------------------------------------------------------------ "	157c2901b2fbb6f8c9681c88f62ff9eb97ebcd96
----------------------------
branches/zip: Remove the dependency on the MySQL HASH table implementation. Use the InnoDB hash table for keeping track of INNOBASE_SHARE objects. struct st_innobase_share: Make table_name const uchar*.  Add the member table_name_hash. innobase_open_tables: Change the type from HASH to hash_table_t*. innobase_get_key(): Remove. innobase_fold_name(): New function, for computing the fold value for the InnoDB hash table. get_share(), free_share(): Use the InnoDB hash functions. innobase_end(): Free innobase_open_tables before shutting down InnoDB. Shutting down InnoDB will invalidate all memory allocated via InnoDB. rb://65 approved by Heikki Tuuri.  This addresses Issue #104. 	d4d4e50285c073c0ab97e3d5ade373799f1014ef
----------------------------
correct testcase because of config change 	877c9ecea9969ee77e81adaf308423fbf87b3d58
----------------------------
branches/5.1: Make SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED a true replacement of SET GLOBAL INNODB_LOCKS_UNSAFE_FOR_BINLOG=1. This fixes an error that was introduced in r370, causing semi-consistent read not to not unlock rows in READ COMMITTED mode. (Bug #41671, Issue #146) rb://67 approved by Heikki Tuuri 	d32440100b060e4f785083a978c6e1986c4ad1c1
----------------------------
Bug#38540 rpl_server_id2 uses show slave status unnecessarily a minor improvement to the test to ease merging. 	50fa9c57fa40d304266075ab2bba0cf638e5636c
----------------------------
Bug#38934 slave slave until does not work with --replicate-same-server-id Bug#38540 rpl_server_id2 uses show slave status unnecessarily Slave did not perform any event recorded into the relay log from some different master when it was started with --replicate-same-server-id. The reason appeared to be a consequence of BUG#38734 which stopped the sql thread at its startup time. The real fixes for the current bug are in the patch for BUG#38734. This changeset carries only a regression test for the bugs.  Bug#38540 gets fixed too by means of eliminating an extra show slave status. 	04d72f8682ea8f18b5edf9e8cc7d05470897e1fe
----------------------------
"WL#4350 return ""true"" from change_config instead of 0 "	e99d1311b9886827d4ebff52c67bcd09c8d863bb
----------------------------
Bug#36312: InnoDB DATA_FREE BUG? Problem is that DATA_FREE in SHOW TABLE STATUS is not correct when not using innodb_file_per_table. The solution is to use I_S.PARTITIONS instead. This is only a small fix for correcting mean record length and always return 0 if the table is empty. 	4effc0bc9a28ef7bd0065f22f6d8468e70ab4aaf
----------------------------
Bug #41601  ndb_log_orig can result in wrong orig_epoch and orig_server_id in ndb_binlog_ind 	b697260fae40c084d5355a4544195e8a23895df2
----------------------------
WL#4350 consistent configuration - extend test program - fix error messages 	df75cc94901b1822175210b1bae29fc78fa0a298
----------------------------
WL#4350 Extend Config class 	c4fe37ad9e6cc0de4c8a8a082d3ddd11a46caf4c
----------------------------
WL#4350 change config error messages 	b428a3073b2f47a4afbcea972655ead76eb87af6
----------------------------
WL#4350 Add detection of previously failed config change 	c1d1fb83d3cb6cff3da4b437abb70b7680f22800
----------------------------
WL#4350 - add show config 	0dd1ea1ba03140e6d87785a916483c8e9cde0b3b
----------------------------
Update test result file for binlog_innodb.result; the tested values (change in binlog_cache_use status variable) don't change, just the starting value is reduced. 	b774a8dd7a33c1f8bbbf7d575e3b35078404b627
----------------------------
"ndb - autoupgrade - fix failure to start mysqld by using ./mysql.sock (otherwise socket-path became too long) and let client use tcp instead of ""default"" "	d6451be580f88e29b711b7ce4bbc130c3ed9bafd
----------------------------
Merge: c7d03ca ff1161e Bug #31983 Running mysql-test from RPM fails for NDB Adds $glob_basedir/sbin to search path when needed 	60a2e4a90c3cd1d676e932f6331716543b86cbd2
----------------------------
Apply InnoDB snapshot innodb-5.1-ss2858, part 1.  Fixes Bug #35498: Cannot get table test/table1 auto-inccounter value in ::info Detailed revison comments: r2702 | sunny | 2008-09-30 11:41:56 +0300 (Tue, 30 Sep 2008) | 13 lines branches/5.1: Since handler::get_auto_increment() doesn't allow us to return the cause of failure we have to inform MySQL using the sql_print_warning() function to return the cause for autoinc failure. Previously we simply printed the error code, this patch prints the text string representing the following two error codes: DB_LOCK_WAIT_TIMEOUT DB_DEADLOCK. Bug#35498 Cannot get table test/table1 auto-inccounter value in ::info Approved by Marko. 	e4591eb25b6ad5b0a3a571c3e415df049a8e37f0
----------------------------
Apply InnoDB snapshot innodb-5.1-ss2637, part 1.  Fixes Bug #37885: row_search_for_mysql may gap lock unnecessarily with SQL comments in query Detailed revision comments: r2603 | marko | 2008-08-21 16:25:05 +0300 (Thu, 21 Aug 2008) | 10 lines branches/5.1: Identify SELECT statements by thd_sql_command() == SQLCOM_SELECT instead of parsing the query string.  This fixes MySQL Bug #37885 without us having to implement lexical analysis of SQL comments in yet another place. thd_is_select(): A new predicate. row_search_for_mysql(): Use thd_is_select(). Approved by Heikki. 	8b0a676eb45e7c65156594d8791724ca9bd1a653
----------------------------
Complete application of InnoDB snapshot innodb-5.1-ss2485, part 1.  Fixes Bug #36819: ut_usectime does not handle errors from gettimeofday Detailed revision comments: r2480 | vasil | 2008-05-27 11:40:07 +0300 (Tue, 27 May 2008) | 11 lines branches/5.1: Fix Bug#36819 ut_usectime does not handle errors from gettimeofday by retrying gettimeofday() several times if it fails in ut_usectime(). If it fails on all calls then return error to the caller to be handled at higher level. Update the variable innodb_row_lock_time_max in SHOW STATUS output only if ut_usectime() was successful. 	8b88249b0aa5423bc6e3a32299902dbd087af6e8
----------------------------
"Complete applying InnoDB snapshot innodb-5.1-ss2479.  Fixes Bug #11894: innodb_file_per_table crashes w/ Windows .sym symbolic link hack Detailed revision comments: r2466 | calvin | 2008-05-20 01:37:14 +0300 (Tue, 20 May 2008) | 12 lines branches/5.1: Fix Bug#11894 innodb_file_per_table crashes w/ Windows .sym symbolic link hack The crash was due to un-handled error 3 (path not found). In the case of file per table, change the call to os_file_handle_error_no_exit() from os_file_handle_error(). Also, checks for full path pattern during table create (Windows only), which is used in symbolic link and temp table creation. Approved by:	Heikki "	63a5c5708e7b3c072584f76fc48589b1b48f705e
----------------------------
"Completing snapshot innodb-5.1-ss2438, part 3. Changes to plug.in structure, some INNODB_CFLAGS improvements for better maintenance, and some comments and whitespace changes. Detailed revision comments: r2433 | vasil | 2008-04-30 12:02:35 +0300 (Wed, 30 Apr 2008) | 5 lines branches/5.1: Add vim modeline to hint it that plug.in is a config file so it can be colorized. r2429 | vasil | 2008-04-30 11:19:06 +0300 (Wed, 30 Apr 2008) | 10 lines branches/5.1: * Use INNODB_CFLAGS insead of cluttering CFLAGS with InnoDB specific flags. CFLAGS are used to compile every file in the MySQL source tree. * Add INNODB_DYNAMIC_CFLAGS to the flags of the dynamic plugin and use -prefer-non-pic to make the dynamic plugin faster on i386. Approved by:	Sunny r2430 | vasil | 2008-04-30 11:48:35 +0300 (Wed, 30 Apr 2008) | 8 lines branches/5.1: Use CFLAGS instead of INNODB_CFLAGS to avoid having incompatible flags inserted in CFLAGS and INNODB_CFLAGS and to avoid compiling mysql and innodb with different flags. Discussed with:	Sunny r2431 | vasil | 2008-04-30 11:54:49 +0300 (Wed, 30 Apr 2008) | 4 lines branches/5.1: Fix r2430, it should be CFLAGS=""$CFLAGS ..."" not CFLAGS=""..."" r2432 | vasil | 2008-04-30 11:58:38 +0300 (Wed, 30 Apr 2008) | 4 lines branches/5.1: Non-functional change: use tabs for indentation in plug.in. r2436 | vasil | 2008-04-30 19:15:46 +0300 (Wed, 30 Apr 2008) | 7 lines branches/5.1: Non-functional white space change in Makefile.am: Use tabs for indentation and be consistent about spaces around the equal sign. "	4e7bc33e0b8964c51c91b667baef87a4884b10f5
----------------------------
"Completing snapshot innodb-5.1-ss2438, part 1.  Fixes Bug #35537: Innodb doesn't increment handler_update and handler_delete Detailed revision comments: r2388 | vasil | 2008-03-27 14:02:34 +0200 (Thu, 27 Mar 2008) | 7 lines branches/5.1: Swap the order in which mysql_thd, mysql_query_str and *mysql_query_str are checked for non-NULL. Suggested by:	Marko r2421 | calvin | 2008-04-24 15:32:30 +0300 (Thu, 24 Apr 2008) | 6 lines branches/5.1: Fix bug#35537 - Innodb doesn't increment handler_update and handler_delete Add the calls to ha_statistic_increment() in ha_innobase::delete_row() and ha_innobase::update_row(). "	46c19805381f3e44dbc87b5f9fe27501d8f72c6c
----------------------------
"Apply the rest of innodb-5.0-ss2475.  This fixes Bug#36819, ""ut_usectime does not handle errors from gettimeofday"". r2475 | vasil | 2008-05-22 19:35:30 +0300 (Thu, 22 May 2008) | 13 lines Fix by retrying gettimeofday() several times if it fails in ut_usectime(). If it fails on all calls then return error to the caller to be handled at higher level. Update the variable innodb_row_lock_time_max in SHOW STATUS output only if ut_usectime() was successful. "	ae75d95370ca3d73a9329091fd56abcab8ff5dc3
----------------------------
"Bug #40129  no-threads fails on pushbuild in 6.0-rpl, ps_stm_threadpool The test reacted on the way how mtr orders arguments for the server that are gathered from different source. It appeared that the opt-file options were parsed before those that supplied to mtr via its command line. In effect, the opt-file preferences got overriden by the command line and some tests, like no-threads, were caught by surprise: a test expects an option value that had been ""hardcoded"" into its opt-file but gets another one. This server options ordering problem exists on in the new rpl trees mtr.  In option of the author of this patch, the opt-file shall be considered as having the highest preference weight. The opt-file is merely a part of the header of a test, namely a part that can not be technically deployed along the test file. It's unnatural for the test writer to provide both the opt file value and a guard that guarantees the value will be set on in the run time. It's logical to provide either one: the option and its value or the guard. Fixed with relocating parse of the opt file to be the last among sources of the sever's options. A side effect: fixing a small problem of resetting the suite options at time the opt file starts parsing. A side effect: main.log_bin_trust_function_creators_func is disabled to be re-enabled with the fixes for bug#41003 will be merged from the main trees. "	cf99c5ba7ca796c9d233ace960792d9d3d4c39dd
----------------------------
Introduced a new timer based innodb thread concurrency. A new parameter innodb_thread_concurrency_timer_based is used to get this new feature (it is set by default). The new feature is only available on platforms where atomic instructions are available. 	625b7a00e9b09b428753a35d21cfda78c31ca18e
----------------------------
Bug #41003 log_bin_trust_function_creators_func test explicitly warns on a bug in it The test 1. did not verify that CREATE FUNCTION shall fails in a case of active binlog and @@log_bin_trust_function_creators is zero if there is no DETERMINISTIC qualifier and super user privilege; 2. contained an explit warning on that CREATE FUNCTION actually succeeded whereas it was supposed to fail; 3. did not demand the bin-log be set ON even though it has contained the opt file explictily setting the name for the binlog file. Fixed 1-3 with modifying the test accordingly. 	d083ceabe840e9049ae340ddedb7343ad38b1589
----------------------------
Bug #31983 Running mysql-test from RPM fails for NDB Added $glob_basedir/sbin to search path for relevant binaries 	ff1161eb585aab4662834ced18ffaddb2ff2ffd8
----------------------------
branches/zip: Clean up the insert buffer subsystem. Originally, there were provisions in InnoDB for multiple insert buffer B-trees, apparently one for each tablespace. When Heikki implemented innodb_file_per_table (multiple InnoDB tablespaces) in MySQL 4.1, he made the insert buffer live only in the system tablespace (space 0) but left the provisions in the code. When Osku Salerma implemented delete buffering, he also cleaned up the insert buffer subsystem so that only one insert buffer B-tree exists. This patch applies the clean-up to the InnoDB Plugin. Having a separate patch of the insert buffer clean-up should help us better compare the essential changes of the InnoDB Plugin and InnoDB+ and to track down bugs that are specific to InnoDB+. IBUF_SPACE_ID: New constant, defined as 0. ibuf_data_t: Remove. ibuf_t: Add the applicable fields from ibuf_data_t.  There is only one insert buffer tree from now on. ibuf_page_low(), ibuf_page(): Merge to a single function ibuf_page(). fil_space_t: Remove ibuf_data. fil_space_get_ibuf_data(): Remove.  There is only one ibuf_data, for space IBUF_SPACE_ID. fil_ibuf_init_at_db_start(): Remove. ibuf_init_at_db_start(): Fuse with ibuf_data_init_for_space(). ibuf_validate_low(): Remove.  There is only one ibuf tree. ibuf_free_excess_pages(), ibuf_header_page_get(), ibuf_free_excess_pages(): Remove the parameter space, which was always 0. ibuf_tree_root_get(): Remove the parameters space and data.  There is only one ibuf tree, for space IBUF_SPACE_ID. ibuf_data_sizes_update(): Rename to ibuf_size_update(), and remove the parameter data.  There is only one ibuf data struct. ibuf_build_entry_pre_4_1_x(): New function, refactored from ibuf_build_entry_from_ibuf_rec(). ibuf_data_enough_free_for_insert(), ibuf_data_too_much_free(): Remove the parameter data.  There is only one insert buffer tree. ibuf_add_free_page(), ibuf_remove_free_page(): Remove the parameters space and data.  There is only one insert buffer tree. ibuf_get_merge_page_nos(): Add parenthesis, to reduce diffs to branches/innodb+. ibuf_contract_ext(): Do not pick an insert buffer tree at random. There is only one. ibuf_print(): Print the single insert buffer tree. rb://19 approved by Heikki on IM 	d32ffdd1a3a67a15b1d586536a4ba65c93463404
----------------------------
Bug #41383 Test commit1_innodb fails with binlog-format=row The test explicitly warned on existence of a bug in its 27th part. The expected values of prepare and commit counters changed, corrected, by fixes to bug#40221. Notice, that binlog does not have to register for a statement with the statement binlog-format because the statement rollback does not need to do anything in that mode. It's not so with the ROW format which was bug#40221 concern. Fixed with correcting the expected values of the mentioned counters and explained that with comments in the test. 	2b761ffde93fe951eb884c796d8f8232e78723f0
----------------------------
"branches/innodb+: Merge revisions 3459:3498 from branches/zip: ------------------------------------------------------------------------ r3459 | vasil | 2008-12-09 11:49:03 +0200 (Tue, 09 Dec 2008) | 152 lines branches/zip: Merge 2929:3458 from branches/5.1 (resolving conflict in c3257, note also that r3363 reverted r2933 so there are not changes in mysql-test/innodb-autoinc.result with the current merge): ------------------------------------------------------------------------ r2933 | calvin | 2008-10-30 02:57:31 +0200 (Thu, 30 Oct 2008) | 10 lines Changed paths: M /branches/5.1/mysql-test/innodb-autoinc.result branches/5.1: correct the result file innodb-autoinc.result Change the followings: auto_increment_increment auto_increment_offset to auto-increment-increment auto-increment-offset ------------------------------------------------------------------------ r2981 | marko | 2008-11-07 14:54:10 +0200 (Fri, 07 Nov 2008) | 5 lines Changed paths: M /branches/5.1/row/row0mysql.c branches/5.0: row_mysql_store_col_in_innobase_format(): Correct a misleading comment. In the UTF-8 encoding, ASCII takes 1 byte per character, while the ""latin1"" character set (normally ISO-8859-1, but in MySQL it actually refers to the Windows Code Page 1252 a.k.a. CP1252, WinLatin1) takes 1 to 3 bytes (1 to 2 bytes for the ISO-8859-1 subset). ------------------------------------------------------------------------ r3114 | calvin | 2008-11-14 20:31:48 +0200 (Fri, 14 Nov 2008) | 8 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: fix bug#40386: Not flushing query cache after truncate ha_statistics.records can not be 0 unless the table is empty, set to 1 instead. The original problem of bug#29507 is fixed in the server. Additional test was done with the fix of bug#29507 in the server. Approved by: Heikki (on IM) ------------------------------------------------------------------------ r3257 | inaam | 2008-11-24 22:06:50 +0200 (Mon, 24 Nov 2008) | 13 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/srv/srv0srv.c M /branches/5.1/trx/trx0trx.c branches/5.1 bug#40760 The config param innodb_thread_concurrency is dynamically set and is read when a thread enters/exits innodb. If the value is changed between the enter and exit time the behaviour becomes erratic. The fix is not to use srv_thread_concurrency when exiting, instead use the flag trx->declared_to_be_inside_innodb. rb://57 Approved by: Marko ------------------------------------------------------------------------ r3363 | calvin | 2008-12-04 19:00:20 +0200 (Thu, 04 Dec 2008) | 13 lines Changed paths: M /branches/5.1/mysql-test/innodb-autoinc.result branches/5.1: revert the changes in r2933 The changes in r2933 causes test failure on Linux. More investigation is needed for Windows. Change the followings in innodb-autoinc.result: auto-increment-increment auto-increment-offset back to: auto_increment_increment auto_increment_offset ------------------------------------------------------------------------ r3412 | vasil | 2008-12-05 10:46:18 +0200 (Fri, 05 Dec 2008) | 7 lines Changed paths: M /branches/5.1/trx/trx0undo.c branches/5.1: Add the traditional 2 spaces after the timestamp so the message does not look like: 070223 13:26:01InnoDB: Warning: canno.... ------------------------------------------------------------------------ r3458 | vasil | 2008-12-09 11:21:08 +0200 (Tue, 09 Dec 2008) | 51 lines Changed paths: M /branches/5.1/mysql-test/innodb_bug34300.test branches/5.1: Merge a change from MySQL to fix the failing innodb_bug34300 mysql-test: main.innodb_bug34300           [ fail ] mysqltest: At line 11: query 'SET @@max_allowed_packet=16777216' failed: 1621: SESSION variable 'max_allowed_packet' is read-only. Use SET GLOBAL to assign the value Aborting: main.innodb_bug34300 failed in default mode. The changeset is this: ------------------------------------------------------------ revno: 2709.1.10 committer: Staale Smedseng <staale.smedseng@sun.com> branch nick: b22891-51-bugteam timestamp: Thu 2008-11-20 08:51:48 +0100 message: A fix for Bug#22891 ""session level max_allowed_packet can be set but is ignored"". This patch makes @@session.max_allowed_packed and @@session.net_buffer_length read-only as suggested in the bug report. The user will have to use SET GLOBAL (and reconnect) to alter the session values of these variables. The error string ER_VARIABLE_IS_READONLY is introduced. Tests are modified accordingly. modified: mysql-test/r/func_compress.result mysql-test/r/max_allowed_packet_basic.result mysql-test/r/max_allowed_packet_func.result mysql-test/r/net_buffer_length_basic.result mysql-test/r/packet.result mysql-test/r/union.result mysql-test/r/variables.result mysql-test/t/func_compress.test mysql-test/t/innodb_bug34300.test mysql-test/t/max_allowed_packet_basic.test mysql-test/t/max_allowed_packet_func.test mysql-test/t/net_buffer_length_basic.test mysql-test/t/packet.test mysql-test/t/union.test mysql-test/t/variables.test sql/set_var.cc sql/set_var.h sql/share/errmsg.txt ------------------------------------------------------------ ------------------------------------------------------------------------ ------------------------------------------------------------------------ r3480 | calvin | 2008-12-10 23:56:00 +0200 (Wed, 10 Dec 2008) | 11 lines branches/zip: Merge r3458:3479 from branches/5.1: ------------------------------------------------------------------------ r3479 | calvin | 2008-12-10 15:30:05 -0600 (Wed, 10 Dec 2008) | 4 lines branches/5.1: change .result file eol-style to LF mysql-test-run only takes LF style even on Windows. ------------------------------------------------------------------------ ------------------------------------------------------------------------ r3481 | calvin | 2008-12-11 00:01:20 +0200 (Thu, 11 Dec 2008) | 4 lines branches/zip: change diff and result files eol-style to LF The patch utility takes LF style diff, and mysql-test-run also only takes LF style, even on Windows. ------------------------------------------------------------------------ r3482 | calvin | 2008-12-11 00:19:07 +0200 (Thu, 11 Dec 2008) | 9 lines branches/zip: fix Mantis issue #138 InnoDB fails if innodb_buffer_pool_size >= 4096M on x64 Windows All three srv_buf_pool related variables are defined as ulong, which is 32-bit on 64-bit Windows. They are changed to 64-bit ulint. Also system_info.dwPageSize appears to be 32-bit only. Casting to 64-bit is required. Approved by:    Marko (on IM) ------------------------------------------------------------------------ r3498 | marko | 2008-12-11 17:08:14 +0200 (Thu, 11 Dec 2008) | 6 lines branches/zip: ibuf_merge_or_delete_for_page(): Restore the seemingly redundant checks for ibuf_fixed_addr_page() || fsp_descr_page() that were removed in r3432, and add a comment explaining why. Thanks to Michael for reporting this bug. ------------------------------------------------------------------------ "	d681f5b9671df4f59914f4659d5eafc9423960ea
----------------------------
configdir 	0a922c8500b950a1427fca8c1cf40b8fbb4dcd6d
----------------------------
"branches/zip: fix Mantis issue #138 InnoDB fails if innodb_buffer_pool_size >= 4096M on x64 Windows All three srv_buf_pool related variables are defined as ulong, which is 32-bit on 64-bit Windows. They are changed to 64-bit ulint. Also system_info.dwPageSize appears to be 32-bit only. Casting to 64-bit is required. Approved by:	Marko (on IM) "	cb876f88dfe5c7ba1459551a0e837a2c2d97b608
----------------------------
WL#4350 move initialization of default value for configdir from getopt 	40ef7d962990546025b5b38b520e911f7835ac83
----------------------------
"branches/innodb+: Merge revisions 3312:3459 from branches/zip: ------------------------------------------------------------------------ r3328 | marko | 2008-12-02 10:16:05 +0200 (Tue, 02 Dec 2008) | 7 lines branches/zip: page_cur_insert_rec_zip(): When allocating insert_buf from the free list, zero out the DB_TRX_ID and DB_ROLL_PTR of the deleted record if the new record would not overwrite these fields. This fixes a harmless content mismatch reported by page_zip_validate() that was reported as Issue #111. rb://55 approved by Sunny Bains. ------------------------------------------------------------------------ r3329 | vasil | 2008-12-02 12:03:17 +0200 (Tue, 02 Dec 2008) | 4 lines branches/zip: Add entry in the ChangeLog for the release of 1.0.2. ------------------------------------------------------------------------ r3331 | vasil | 2008-12-02 12:09:20 +0200 (Tue, 02 Dec 2008) | 5 lines branches/zip: Remove an entry from the ChnageLog for a change that was made before the release of 1.0.2 but was not included in that release. ------------------------------------------------------------------------ r3333 | vasil | 2008-12-02 12:11:54 +0200 (Tue, 02 Dec 2008) | 4 lines branches/zip: Now that 1.0.2 is out, the current tree is version 1.0.3. ------------------------------------------------------------------------ r3336 | vasil | 2008-12-02 13:34:36 +0200 (Tue, 02 Dec 2008) | 5 lines branches/zip: Resurrect a ChangeLog entry that I removed in c3331 with a fake date so it does not appear that it has been included in 1.0.2. ------------------------------------------------------------------------ r3361 | vasil | 2008-12-04 18:10:08 +0200 (Thu, 04 Dec 2008) | 9 lines branches/zip: Fix Mantis issue#103 mysql_addons.c depends on THD internals - please remove it Use MySQL's thd_get_thread_id() instead of our own ib_thd_get_thread_id() since MySQL implemented the former, see http://bugs.mysql.com/30930. Approved by:    Marko (https://svn.innodb.com/rb/r/40, rb://40) ------------------------------------------------------------------------ r3362 | vasil | 2008-12-04 18:49:24 +0200 (Thu, 04 Dec 2008) | 15 lines branches/zip: Revert our temporary fix for Bug#40360 Binlog related errors with binlog off This bug was fixed in MySQL code. Our fix went into r2944 and r2947, but this patch does not entirely revert those revisions because we want to leave the test case that was introduced and also r2944 itself reverted r2935 and r2936. So if we completely revert r2944 and r2947 then we would loose the test and will restore r2935 and r2936. This resolves Issue#108 We should remove ib_bin_log_is_engaged() once mysql add an equivallent, see Bug#40360 ------------------------------------------------------------------------ r3404 | marko | 2008-12-05 10:02:54 +0200 (Fri, 05 Dec 2008) | 5 lines branches/zip: row_undo_mod_del_mark_or_remove_sec_low(): Do not complain if the record is not found.  Explain that this is possible when a deadlock occurs during an update.  Heikki investigated this in Issue #134. ------------------------------------------------------------------------ r3432 | marko | 2008-12-08 14:14:01 +0200 (Mon, 08 Dec 2008) | 4 lines branches/zip: ibuf_merge_or_delete_for_page(): Remove the redundant checks for ibuf_fixed_addr_page() || fsp_descr_page().  The one at the beginning of the function is enough. ------------------------------------------------------------------------ r3456 | marko | 2008-12-09 10:31:26 +0200 (Tue, 09 Dec 2008) | 3 lines branches/zip: row_purge_remove_sec_if_poss_low(): Allocate mtr_vers from the stack, not with mem_alloc(). ------------------------------------------------------------------------ r3459 | vasil | 2008-12-09 11:49:03 +0200 (Tue, 09 Dec 2008) | 152 lines branches/zip: Merge 2929:3458 from branches/5.1 (resolving conflict in c3257, note also that r3363 reverted r2933 so there are not changes in mysql-test/innodb-autoinc.result with the current merge): ------------------------------------------------------------------------ r2933 | calvin | 2008-10-30 02:57:31 +0200 (Thu, 30 Oct 2008) | 10 lines Changed paths: M /branches/5.1/mysql-test/innodb-autoinc.result branches/5.1: correct the result file innodb-autoinc.result Change the followings: auto_increment_increment auto_increment_offset to auto-increment-increment auto-increment-offset ------------------------------------------------------------------------ r2981 | marko | 2008-11-07 14:54:10 +0200 (Fri, 07 Nov 2008) | 5 lines Changed paths: M /branches/5.1/row/row0mysql.c branches/5.0: row_mysql_store_col_in_innobase_format(): Correct a misleading comment. In the UTF-8 encoding, ASCII takes 1 byte per character, while the ""latin1"" character set (normally ISO-8859-1, but in MySQL it actually refers to the Windows Code Page 1252 a.k.a. CP1252, WinLatin1) takes 1 to 3 bytes (1 to 2 bytes for the ISO-8859-1 subset). ------------------------------------------------------------------------ r3114 | calvin | 2008-11-14 20:31:48 +0200 (Fri, 14 Nov 2008) | 8 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: fix bug#40386: Not flushing query cache after truncate ha_statistics.records can not be 0 unless the table is empty, set to 1 instead. The original problem of bug#29507 is fixed in the server. Additional test was done with the fix of bug#29507 in the server. Approved by: Heikki (on IM) ------------------------------------------------------------------------ r3257 | inaam | 2008-11-24 22:06:50 +0200 (Mon, 24 Nov 2008) | 13 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/srv/srv0srv.c M /branches/5.1/trx/trx0trx.c branches/5.1 bug#40760 The config param innodb_thread_concurrency is dynamically set and is read when a thread enters/exits innodb. If the value is changed between the enter and exit time the behaviour becomes erratic. The fix is not to use srv_thread_concurrency when exiting, instead use the flag trx->declared_to_be_inside_innodb. rb://57 Approved by: Marko ------------------------------------------------------------------------ r3363 | calvin | 2008-12-04 19:00:20 +0200 (Thu, 04 Dec 2008) | 13 lines Changed paths: M /branches/5.1/mysql-test/innodb-autoinc.result branches/5.1: revert the changes in r2933 The changes in r2933 causes test failure on Linux. More investigation is needed for Windows. Change the followings in innodb-autoinc.result: auto-increment-increment auto-increment-offset back to: auto_increment_increment auto_increment_offset ------------------------------------------------------------------------ r3412 | vasil | 2008-12-05 10:46:18 +0200 (Fri, 05 Dec 2008) | 7 lines Changed paths: M /branches/5.1/trx/trx0undo.c branches/5.1: Add the traditional 2 spaces after the timestamp so the message does not look like: 070223 13:26:01InnoDB: Warning: canno.... ------------------------------------------------------------------------ r3458 | vasil | 2008-12-09 11:21:08 +0200 (Tue, 09 Dec 2008) | 51 lines Changed paths: M /branches/5.1/mysql-test/innodb_bug34300.test branches/5.1: Merge a change from MySQL to fix the failing innodb_bug34300 mysql-test: main.innodb_bug34300           [ fail ] mysqltest: At line 11: query 'SET @@max_allowed_packet=16777216' failed: 1621: SESSION variable 'max_allowed_packet' is read-only. Use SET GLOBAL to assign the value Aborting: main.innodb_bug34300 failed in default mode. The changeset is this: ------------------------------------------------------------ revno: 2709.1.10 committer: Staale Smedseng <staale.smedseng@sun.com> branch nick: b22891-51-bugteam timestamp: Thu 2008-11-20 08:51:48 +0100 message: A fix for Bug#22891 ""session level max_allowed_packet can be set but is ignored"". This patch makes @@session.max_allowed_packed and @@session.net_buffer_length read-only as suggested in the bug report. The user will have to use SET GLOBAL (and reconnect) to alter the session values of these variables. The error string ER_VARIABLE_IS_READONLY is introduced. Tests are modified accordingly. modified: mysql-test/r/func_compress.result mysql-test/r/max_allowed_packet_basic.result mysql-test/r/max_allowed_packet_func.result mysql-test/r/net_buffer_length_basic.result mysql-test/r/packet.result mysql-test/r/union.result mysql-test/r/variables.result mysql-test/t/func_compress.test mysql-test/t/innodb_bug34300.test mysql-test/t/max_allowed_packet_basic.test mysql-test/t/max_allowed_packet_func.test mysql-test/t/net_buffer_length_basic.test mysql-test/t/packet.test mysql-test/t/union.test mysql-test/t/variables.test sql/set_var.cc sql/set_var.h sql/share/errmsg.txt ------------------------------------------------------------ ------------------------------------------------------------------------ ------------------------------------------------------------------------ "	a6dadf36573230f1f8f53ff85b518a6a1a6a778c
----------------------------
"branches/zip: Merge 2929:3458 from branches/5.1 (resolving conflict in c3257, note also that r3363 reverted r2933 so there are not changes in mysql-test/innodb-autoinc.result with the current merge): ------------------------------------------------------------------------ r2933 | calvin | 2008-10-30 02:57:31 +0200 (Thu, 30 Oct 2008) | 10 lines Changed paths: M /branches/5.1/mysql-test/innodb-autoinc.result branches/5.1: correct the result file innodb-autoinc.result Change the followings: auto_increment_increment auto_increment_offset to auto-increment-increment auto-increment-offset ------------------------------------------------------------------------ r2981 | marko | 2008-11-07 14:54:10 +0200 (Fri, 07 Nov 2008) | 5 lines Changed paths: M /branches/5.1/row/row0mysql.c branches/5.0: row_mysql_store_col_in_innobase_format(): Correct a misleading comment. In the UTF-8 encoding, ASCII takes 1 byte per character, while the ""latin1"" character set (normally ISO-8859-1, but in MySQL it actually refers to the Windows Code Page 1252 a.k.a. CP1252, WinLatin1) takes 1 to 3 bytes (1 to 2 bytes for the ISO-8859-1 subset). ------------------------------------------------------------------------ r3114 | calvin | 2008-11-14 20:31:48 +0200 (Fri, 14 Nov 2008) | 8 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: fix bug#40386: Not flushing query cache after truncate ha_statistics.records can not be 0 unless the table is empty, set to 1 instead. The original problem of bug#29507 is fixed in the server. Additional test was done with the fix of bug#29507 in the server. Approved by: Heikki (on IM) ------------------------------------------------------------------------ r3257 | inaam | 2008-11-24 22:06:50 +0200 (Mon, 24 Nov 2008) | 13 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/srv/srv0srv.c M /branches/5.1/trx/trx0trx.c branches/5.1 bug#40760 The config param innodb_thread_concurrency is dynamically set and is read when a thread enters/exits innodb. If the value is changed between the enter and exit time the behaviour becomes erratic. The fix is not to use srv_thread_concurrency when exiting, instead use the flag trx->declared_to_be_inside_innodb. rb://57 Approved by: Marko ------------------------------------------------------------------------ r3363 | calvin | 2008-12-04 19:00:20 +0200 (Thu, 04 Dec 2008) | 13 lines Changed paths: M /branches/5.1/mysql-test/innodb-autoinc.result branches/5.1: revert the changes in r2933 The changes in r2933 causes test failure on Linux. More investigation is needed for Windows. Change the followings in innodb-autoinc.result: auto-increment-increment auto-increment-offset back to: auto_increment_increment auto_increment_offset ------------------------------------------------------------------------ r3412 | vasil | 2008-12-05 10:46:18 +0200 (Fri, 05 Dec 2008) | 7 lines Changed paths: M /branches/5.1/trx/trx0undo.c branches/5.1: Add the traditional 2 spaces after the timestamp so the message does not look like: 070223 13:26:01InnoDB: Warning: canno.... ------------------------------------------------------------------------ r3458 | vasil | 2008-12-09 11:21:08 +0200 (Tue, 09 Dec 2008) | 51 lines Changed paths: M /branches/5.1/mysql-test/innodb_bug34300.test branches/5.1: Merge a change from MySQL to fix the failing innodb_bug34300 mysql-test: main.innodb_bug34300           [ fail ] mysqltest: At line 11: query 'SET @@max_allowed_packet=16777216' failed: 1621: SESSION variable 'max_allowed_packet' is read-only. Use SET GLOBAL to assign the value Aborting: main.innodb_bug34300 failed in default mode. The changeset is this: ------------------------------------------------------------ revno: 2709.1.10 committer: Staale Smedseng <staale.smedseng@sun.com> branch nick: b22891-51-bugteam timestamp: Thu 2008-11-20 08:51:48 +0100 message: A fix for Bug#22891 ""session level max_allowed_packet can be set but is ignored"". This patch makes @@session.max_allowed_packed and @@session.net_buffer_length read-only as suggested in the bug report. The user will have to use SET GLOBAL (and reconnect) to alter the session values of these variables. The error string ER_VARIABLE_IS_READONLY is introduced. Tests are modified accordingly. modified: mysql-test/r/func_compress.result mysql-test/r/max_allowed_packet_basic.result mysql-test/r/max_allowed_packet_func.result mysql-test/r/net_buffer_length_basic.result mysql-test/r/packet.result mysql-test/r/union.result mysql-test/r/variables.result mysql-test/t/func_compress.test mysql-test/t/innodb_bug34300.test mysql-test/t/max_allowed_packet_basic.test mysql-test/t/max_allowed_packet_func.test mysql-test/t/net_buffer_length_basic.test mysql-test/t/packet.test mysql-test/t/union.test mysql-test/t/variables.test sql/set_var.cc sql/set_var.h sql/share/errmsg.txt ------------------------------------------------------------ ------------------------------------------------------------------------ "	7ed448ce95291405fd5df04203d157805dd10b2f
----------------------------
"branches/5.1: Merge a change from MySQL to fix the failing innodb_bug34300 mysql-test: main.innodb_bug34300           [ fail ] mysqltest: At line 11: query 'SET @@max_allowed_packet=16777216' failed: 1621: SESSION variable 'max_allowed_packet' is read-only. Use SET GLOBAL to assign the value Aborting: main.innodb_bug34300 failed in default mode. The changeset is this: ------------------------------------------------------------ revno: 2709.1.10 committer: Staale Smedseng <staale.smedseng@sun.com> branch nick: b22891-51-bugteam timestamp: Thu 2008-11-20 08:51:48 +0100 message: A fix for Bug#22891 ""session level max_allowed_packet can be set but is ignored"". This patch makes @@session.max_allowed_packed and @@session.net_buffer_length read-only as suggested in the bug report. The user will have to use SET GLOBAL (and reconnect) to alter the session values of these variables. The error string ER_VARIABLE_IS_READONLY is introduced. Tests are modified accordingly. modified: mysql-test/r/func_compress.result mysql-test/r/max_allowed_packet_basic.result mysql-test/r/max_allowed_packet_func.result mysql-test/r/net_buffer_length_basic.result mysql-test/r/packet.result mysql-test/r/union.result mysql-test/r/variables.result mysql-test/t/func_compress.test mysql-test/t/innodb_bug34300.test mysql-test/t/max_allowed_packet_basic.test mysql-test/t/max_allowed_packet_func.test mysql-test/t/net_buffer_length_basic.test mysql-test/t/packet.test mysql-test/t/union.test mysql-test/t/variables.test sql/set_var.cc sql/set_var.h sql/share/errmsg.txt ------------------------------------------------------------ "	809a539dce661a9a853a42896566958aa9f8fc33
----------------------------
Added large page support for Solaris Change defaults, now large page support is default if supported Introduced super-large-pages support for Solaris to use 256 MByte page size rather than 4 MByte. 	abae8a2c9c969f98ef72b818e3147cf314fd284b
----------------------------
"Bug#39750 -cannot create temp file on Windows. The problem appears often in conjuction with temp files, when temp-pool is used, so that names of temp files are not unique. The reason is that rapid deletiion and creation of fiiles with the same name on Windows is not guaranteed to succeed. File disappears from the file system only when the last handle to it is closed. If for example  a virus scanner, a backup or indexing  application  opens the  temp file just before MySQL deletes it, the file will enter ""delete pending"" state. In this state,it is not possible to open the file , or create a file with the same name (CreateFile returns  ERROR_ACCESS_DENED, posix open returns EACESS) Fix (rather a cheap workarounf) is not to use temp-pool when working with temporary files- this will make filenames unique. With this patch , temp- pool setting will be ignored on anything but Linux(the option only made sense for Linux since its invention anyway). "	0fc3483b7a260ffa156ed0ac84cd95a96fce2851
----------------------------
Disable wait_timeout_func and report bug #41255. 	cb7b5524f98acf494ef011f044df7c73ca0f73c6
----------------------------
WL#4350 ndb_mgmd --configdir 	85d92d0af849405bf74a7dcde311631385c33de0
----------------------------
branches/5.1: revert the changes in r2933 The changes in r2933 causes test failure on Linux. More investigation is needed for Windows. Change the followings in innodb-autoinc.result: auto-increment-increment auto-increment-offset back to: auto_increment_increment auto_increment_offset 	fce0c716fa11b27300ca95049b8b9902ec9698e1
----------------------------
Merge: 3059c95 5726574 BUG#38826 Race in MYSQL_LOG::purge_logs is impossible to debug in production BUG#39325 Server crash inside MYSQL_LOG::purge_first_log halts replicaiton The patch reverses the order of the purging and updating events for log and relay-log.info/index files respectively. This solves the problem of having holes caused by crashes happening between updating info/index files and purging logs. This patch also contains an aditional test case for testing the crashing before purge logs. NOTE1: This is a combined patch for BUG#38826 and BUG#39325. This patch is based on bugteam tree and takes into account reviewers suggestions. NOTE2: Merge from 5.0-bugteam 	0c9aaecc7f11faab540869d054adde6de7171cfc
----------------------------
BUG#38826 Race in MYSQL_LOG::purge_logs is impossible to debug in production BUG#39325 Server crash inside MYSQL_LOG::purge_first_log halts replicaiton The patch reverses the order of the purging and updating events for log and relay-log.info/index files respectively. This solves the problem of having holes caused by crashes happening between updating info/index files and purging logs. NOTE: This is a combined patch for BUG#38826 and BUG#39325. This patch is based on bugteam tree and takes into account reviewers suggestions. 	5726574b0c11b90047e326f8b36350c82485519f
----------------------------
"Remove bashisms from BUILD/compile-dist and configure.in, so Bootstrap works on Solaris box; force GNU make in compile-dist; remove unportable ""grep -q"" from configure.in "	3742489c3797b14ac3c4453ef4058b5a87a62442
----------------------------
BUG#41018: innodb_max_dirty_pages_pct_func fails sporadically: error 28 from storage engine BUG#39382: innodb_max_dirty_pages_pct_func failed with timeout on pushbuild Disabled innodb_max_dirty_pages_pct_func. Please re-enable if the test gets fixed. 	ee6c9dda9f6285df1875733454658bc71b67d522
----------------------------
Bug #27294: crash with innodb_locks_unsafe_for_binlog=1 Back-port 5.0 fix to 4.1.  Fix Bug#27294 by using trx returned by check_trx_exists() instead of prebuilt->trx. This has been fixed in 5.1 in r782. 	1f25b600a3fbeab0e09b86b3ada954f8eb7e19ad
----------------------------
Bug #39920: MySQL cannot deal with Leap Second expression in string literal. Updated MySQL time handling code to react correctly on UTC leap second additions. MySQL functions that return the OS current time, like e.g. CURDATE(), NOW() etc will return :59:59 instead of :59:60 or 59:61. As a result the reader will receive :59:59 for 2 or 3 consecutive seconds during the leap second. This fix will not affect the values returned by UNIX_TIMESTAMP() for leap seconds. But note that when converting the value returned by UNIX_TIMESTAMP() to broken down time the correction of leap seconds will still be applied. Note that this fix will make a difference *only* if the OS is specially configured to return leap seconds from the OS time calls or when using a MySQL time zone defintion that has leap seconds. Even after this change date/time literals (or other broken down time representations) with leap seconds (ending on :59:60 or 59:61) will still be considered illegal and discarded by the server with an error or a warning depending on the sql mode. Added a test case to demonstrate the effect of the fix. 	8f36a23c0012d0ac6c369b858d232f26322e2693
----------------------------
- Fix for Bug#40179 Test main.query_cache failing randomly on Pushbuild, test weakness - disable the test suffering from Bug#41098 Query Cache returns wrong result with concurrent insert - additional improvements Details: - Move the test for the historic bug Bug 28249 Query Cache returns wrong result with concurrent insert / certain lock into its own testscript query_cache_28249.test. - query_cache.test: - replace error numbers with error names - remove trailing spaces, replace tabs with spaces - reset of @@global.log_bin_trust_function_creators to its original value at the end of the test - query_cache_28249.test: - replace sleep 5 with poll routine - avoid random differences caused by concurrent_inserts effects - improved comments and formatting 	674f88380ce50bcbbdbfbc47d39208385534aeb8
----------------------------
Bug #37339: SHOW VARIABLES not working properly with multi-byte datadir The SHOW VARIABLES LIKE .../SELECT @@/SELECT ... FROM INFORMATION_SCHEMA.VARIABLES were assuming that all the system variables are in system charset (UTF-8). However the variables that are settable through command line will have a different character set (character_set_filesystem). Fixed the server to remember the correct character set of basedir, datadir, tmpdir, ssl, plugin_dir, slave_load_tmpdir, innodb variables; init_connect and init_slave variables and use it when processing data. 	0708ad5f98b8e931282a325ac9d85422a0d6e32c
----------------------------
"Fix for Bug#37766: Inserted review results. Reason for the failing test was that ""SELECT count(*) from mysql.general_log;"" was not always the same number. That was fixed by ""...count(*)>4..."" as the minimal fulfilled condition. As Bug 35371 was fixed the testcase with ""log_output = 'FILE'"" was enabled and changed to have always the same result. "	e6f9a2e1ff5276fca4a7f1c338a351c0b738ad40
----------------------------
Bug#40365 Prepared statements may insert invalid dates. set DATE|DATETIME value to 0 if ALLOW_INVALID_DATES sql_mode is not enabled. 	7b488c46a0882d2e8cc2ab5f2ff57722c395594a
----------------------------
Bug#28234 - global/session scope - documentation vs implementation Post-pushbuild fix. - Windows does not have 'socket' system variable. - Compiler warning in sql/slave.cc 	b903835265ce709a55f7df3f88d9cf32204992e5
----------------------------
Merge: 92607f9 40997e8 ndbconfig mtr tests fix 	cf06d4199c05a55ce3a91c0f9c3eec46cc839f16
----------------------------
fix ndb_config and ndb_config2 tests 	40997e8bfd6f5cb656efc67e4754cc39142029f4
----------------------------
"Bug#32136: mysqld_multi --defaults-file not respected while using \ --mysqld=mysqld_safe The server run didn't know the correct section to read in a configuration file, and would read from ""[mysqld]"" even though mysqld_multi had already read the defaults and made them into explicit parameters. Worse, the ""defaults-file"" parameter says that it means ""Read only this configuration file, do not read the standard system-wide and user-specific files"", which should apply not only to mysql-multi, but to the server also. So, now if ""defaults-file"" is given, put ""no-defaults"" before all the explicit parameters we read from the defaults-file and feed to the mysqld or mysqld_safe. "	0e44a4e94c0ddf2572384ed5daf3e5dc2c37a4e7
----------------------------
Bug#41002 - symlink.test fails on symlinked datadir symlink.test failed when run in an environment that has mysql-test/var symlinked to elsewhere, e.g. a memory file system. This is the case when running mysql-test-run --mem. In this case the server does not detect that the directory specified with a DATA/INDEX DIRECTORY clause is within its data home directory. This problem was reported as Bug#39277 (Creation of table with data and/or index files in data home directory succeeds). It was decided that it will not be fixed in 5.1. Hence, the current behavior is accepted for 5.1. It will be fixed in 6.0 though. Fixed the test case so that it works in both environments. 1. When no symbolic link is involved, the server notices that the data/index directory is in its data hone directory and rejects the CREATE/ALTER TABLE statement. 2. When the data home directory is symlinked, it does not notice the problem and executes the statement sucessfully. 	6673b2849a5780c6c3505037ad9c82ae62e26fc3
----------------------------
"branches/5.1: Fix Bug#40760 ""set global innodb_thread_concurrency = 0;"" is not safe The config param innodb_thread_concurrency is dynamically set and is read when a thread enters/exits innodb. If the value is changed between the enter and exit time the behaviour becomes erratic. The fix is not to use srv_thread_concurrency when exiting, instead use the flag trx->declared_to_be_inside_innodb. rb://57 Approved by: Marko "	9b4f5f6f9f8d383f916d80ef1e125c79a31f5a65
----------------------------
- Fix for Bug#39854 events_scheduling fails sporadically on pushbuild - restore original state of event_scheduler at the end of the test - minor fixes around comments, formatting 	f572b81ac8a37f7ae76a92ec6732835f7337b1bf
----------------------------
ndb - fix ndb_binlog_restore on case-insensitive filesystems by randomly setting lower_case_table_names=0 	30ed4a5ad4eac92403bc4dbfb80dac04f272a94e
----------------------------
Bug#40634 table scan temporary table is 4x slower due to mmap instead instead of caching mmap is slower that caching indeed. Here the problem is that mmap is used even if --myisam-use-mmap=OFF solved by checking the flag in ha_myisam::extra() as it is called in init_read_record() per-file comments: storage/myisam/ha_myisam.cc Bug#40634 table scan temporary table is 4x slower due to mmap instead instead of caching do nothing for HA_EXTRA_MMAP if no opt_myisam_use_mmap 	21c876001414837aae9c1e3abe6132eaf7fa13e4
----------------------------
"branches/innodb+: Merge revisions 2986:3152 from branches/zip: ------------------------------------------------------------------------ r3036 | marko | 2008-11-12 12:34:30 +0200 (Wed, 12 Nov 2008) | 4 lines branches/zip: dtuple_validate(): When UNIV_DEBUG_VALGRIND is defined, rely solely on the UNIV_MEM_ASSERT_RW() check and disable the for loop that would only cause additional noise. ------------------------------------------------------------------------ r3037 | marko | 2008-11-12 13:52:57 +0200 (Wed, 12 Nov 2008) | 6 lines branches/zip: row_vers_impl_x_locked_off_kernel(): Remove compilation warnings about prev_trx_id and vers_del being possibly uninitialized, by handling the case prev_version == NULL in a single if block. rb://45 approved by Inaam Rana. ------------------------------------------------------------------------ r3131 | michael | 2008-11-17 14:56:56 +0200 (Mon, 17 Nov 2008) | 9 lines branches/zip: rb://53 Improve innodb_supports_xa system variable handling and reduces the number of retrievals of the value from MySQL. Approved by: Marko, over IM ------------------------------------------------------------------------ r3132 | michael | 2008-11-17 16:02:01 +0200 (Mon, 17 Nov 2008) | 5 lines branches/zip: rb://53 Final version of rb://53, fixes the styling of a comment, makes the definition and the declaration of thd_supports_xa() identical commentwise. ------------------------------------------------------------------------ r3141 | marko | 2008-11-19 16:39:55 +0200 (Wed, 19 Nov 2008) | 1 line branches/zip: buf_LRU_free_block(): Clarify the function comment. ------------------------------------------------------------------------ r3144 | marko | 2008-11-20 11:39:49 +0200 (Thu, 20 Nov 2008) | 2 lines branches/zip: rec_get_nth_field_offs_old(): Add UNIV_UNLIKELY hints to assertion-like tests. ------------------------------------------------------------------------ r3145 | marko | 2008-11-20 12:22:40 +0200 (Thu, 20 Nov 2008) | 20 lines branches/zip: Always check for ""row too large"" when executing SQL to create an index or table.  We have to skip this check when loading table definitions from the data dictionary, because we could otherwise refuse to load old tables (even uncompressed ones).  This addresses Issue #119. The first ""row too large"" check was implemented in MySQL 5.0.3 to address MySQL Bug #5682.  In the InnoDB Plugin 1.0.2, a more accurate check was implemented in innodb_strict_mode.  We now make the check unconditional. dict_create_index_step(): Pass strict=TRUE to dict_index_add_to_cache(). trx_is_strict(), thd_is_strict(): Remove. innodb-zip.test: Test in innodb_strict_mode=OFF. innodb_bug36169.test: Ensure that none of the tables can be created. rb://56 approved by Sunny Bains. ------------------------------------------------------------------------ r3148 | marko | 2008-11-20 13:27:27 +0200 (Thu, 20 Nov 2008) | 3 lines branches/zip: rec_print_old(), rec_print_comp(): Dump each field in a separate line, so that the dumps can be read and compared more easily. ------------------------------------------------------------------------ "	f7f408167208cae584dedc0cbb665e1ae7a8a12c
----------------------------
"branches/zip: Always check for ""row too large"" when executing SQL to create an index or table.  We have to skip this check when loading table definitions from the data dictionary, because we could otherwise refuse to load old tables (even uncompressed ones).  This addresses Issue #119. The first ""row too large"" check was implemented in MySQL 5.0.3 to address MySQL Bug #5682.  In the InnoDB Plugin 1.0.2, a more accurate check was implemented in innodb_strict_mode.  We now make the check unconditional. dict_create_index_step(): Pass strict=TRUE to dict_index_add_to_cache(). trx_is_strict(), thd_is_strict(): Remove. innodb-zip.test: Test in innodb_strict_mode=OFF. innodb_bug36169.test: Ensure that none of the tables can be created. rb://56 approved by Sunny Bains. "	6bdab319ada46a42e5f9888290a1874bce7b6f91
----------------------------
"A fix for Bug#22891 ""session level max_allowed_packet can be set but is ignored"". This patch makes @@session.max_allowed_packed and @@session.net_buffer_length read-only as suggested in the bug report. The user will have to use SET GLOBAL (and reconnect) to alter the session values of these variables. The error string ER_VARIABLE_IS_READONLY is introduced. Tests are modified accordingly. "	e60c8c8b68d417b8efff48686c84751f3a772c76
----------------------------
Bug#39494 : key_buffer_size > 4GB does not work on 64 bit Windows Cache size  is truncated via 32bit ulong  in  ha_init_key_cache() and ha_resize_key_cache() This change fixes the cast to size_t instead of ulong. This cast is safe, because key_buffer_size parameter is limited to SIZE_T_MAX 	7d5e156c78dc1bbf5b429383aed41f26a993ca3c
----------------------------
ndb - bug#40847 - Add config for full initialization of fragment logfiles 	9b65946c2638f3b037418c474652c90d2a88b12b
----------------------------
"Bug#40498 MGM C API calls ""Exit"" if connection to the managment server is lost - Install SIGPIPE handler to catch broken pipe error that occurs when writing to a closed or rest socket - Add function 'ndb_mgm_set_ignore_sigpipe' making it possible to avoid that mgmapi installs SIGPIPE handler "	092ae304ca5cecebce525b450362d1825bc12888
----------------------------
WL#4350 Fix crash in ~ConfigIter 	6a616633be2d5dbf8b43d729ad6f52f5392db052
----------------------------
Bug#39178: non-RSA keys in connection to a RSA-keyed yaSSL-using server \ using crashes server When the server is configured to use a RSA key, and when the client sends a cipher-suite list that contains a non-RSA key as acceptable, the server would try to process that key even though it was impossible. Now, yaSSL sets its own acceptable-cipher list according to what kind of key the server is started with, and will never explore and try to pair impossible combinations. This involves a partial import of the current YaSSL tree, not the whole thing, so as to try to avoid introducing new bugs. (Updated to avoid many whitespace changes and make diff smaller.) 	918a8c469f679248096c9bfac70a426db87c5d87
----------------------------
"ndb - win32 (my_socket_win32.h) - fix error handling causing spurious ""node failures"" in mtr "	7206d65cbdc96e9f10c2e55496db307de965c348
----------------------------
Bug#31616 div_precision_increment description looks wrong Item_func_div didn't calculate the precision of the result properly. The result of 5/0.0001 is 5000 so we have to add decimals of the divisor to the planned precision. per-file comments: mysql-test/r/type_newdecimal.result Bug#31616 div_precision_increment description looks wrong test result fixed mysql-test/t/type_newdecimal.test Bug#31616 div_precision_increment description looks wrong test case sql/item_func.cc Bug#31616 div_precision_increment description looks wrong precision must be increased with args[1]->decimals parameter 	56dc6b2ecddccc88d8cd77ffd22bbc03af6f8163
----------------------------
Bug #38473  The MGM API function ndb_mgm_listen_event does not use bind-address parameter. + extend ndb connectstring to take bind address parameter 	28ee93c7caa85a6038da1ef946d6fe63d5cac1e1
----------------------------
ndb - hugo - add --rand to hugoPkRead, and more environment for configuring default ts 	44c903118175d473ebc97b878ab1e5d8192da4ef
----------------------------
Fix for Bug#40644 main.group_concat_max_len_func random failures + minor improvements 	3da7ffe6ac4bb4e106ef098e295f312121e3f0a5
----------------------------
Fix for Bug#39979 main.events_time_zone does not clean up + minor improvements. 	15d03999d8dc226f977f08525e7561219f1e1bcf
----------------------------
ignore take-over-tcconf in config mgr 	46feb9a006f451135062d69468cc718136abbe58
----------------------------
Bug#39955 SELECT on INFORMATION_SCHEMA.GLOBAL_VARIABLES takes too long VARIABLE_VALUE field is decreased to 1024 symbols. (affected I_S tables: GLOBAL_VARIABLES, SESSION_VARIABLES, GLOBAL_STATUS, SESSION_STATUS). The only variable which can be longer than 1024 is init_connect. The variable will be truncated with warning. Additional fix: Added where condition filter which speed up queries which have where condition with expressions which use VARIABLE_NAME field. 	3fa2673f19e00245258bad1ca333a29c01540f99
----------------------------
WL#4351 Fix memory leak in ~ConfigValuesFactory 	37a486fa2558a57c985264c7ac2e51949e3828f3
----------------------------
WL#4351 fix memory leak in ~Config 	c9a994129bb59a6a680584b273e79707755780a9
----------------------------
"WL#4350 Reconfigure transporter Make it possible to run IPCConfig::configureTransporters also to reconfigure the transporters in TransporteRegistry. If the transporter already exist, call ""configure(conf)"" on it. Currently the Transporter only detect if the conf is same or different. If different a warning about this will be printed to log and the flag m_need_restart is set. Also detect if a transporter should be removed and print a warning about restart in same fashion as above. "	1fd3fe24856b4b098b07a669ba881a9c93fb345c
----------------------------
"branches/innodb+: Merge revisions 2867:2986 from branches/zip: ------------------------------------------------------------------------ r2867 | marko | 2008-10-24 10:24:17 +0300 (Fri, 24 Oct 2008) | 2 lines branches/zip: ChangeLog: Document r2763, r2794, r2683, r2799, r2809, r2866. ------------------------------------------------------------------------ r2869 | vasil | 2008-10-24 11:14:16 +0300 (Fri, 24 Oct 2008) | 4 lines branches/zip: White space cleanup in ChangeLog ------------------------------------------------------------------------ r2870 | vasil | 2008-10-24 13:36:14 +0300 (Fri, 24 Oct 2008) | 8 lines branches/zip: Remove a statement that causes the innodb-index test to fail. The change in behavior was introduced in MySQL BZR-r2738. Suggested by:	Marko ------------------------------------------------------------------------ r2871 | vasil | 2008-10-24 13:48:38 +0300 (Fri, 24 Oct 2008) | 5 lines branches/zip: Adjust mysql-test/patches/innodb-index.diff after the change to mysql-test/innodb-index.(test|result) in r2870. ------------------------------------------------------------------------ r2878 | calvin | 2008-10-27 11:05:42 +0200 (Mon, 27 Oct 2008) | 8 lines branches/zip: port the fix of Bug#19424 - InnoDB: Possibly a memory overrun of the buffer being freed with 64-bit Microsoft Visual C++. The changed file: CMakeLists.txt: Removing Win64 compiler optimizations for all innodb/mem/* files. ------------------------------------------------------------------------ r2884 | vasil | 2008-10-27 11:48:46 +0200 (Mon, 27 Oct 2008) | 7 lines branches/zip: ChangeLog: Add entry for the fix of Bug#19424 InnoDB: Possibly a memory overrun of the buffer being freed (64-bit Visual C) ------------------------------------------------------------------------ r2886 | calvin | 2008-10-27 22:39:11 +0200 (Mon, 27 Oct 2008) | 8 lines branches/zip: This patch is to solve the issue that file handles can not cross DLL/EXE boundaries on Windows. In builtin InnoDB, it makes call to MySQL server for creating tmp files. innobase_mysql_tmpfile is now rewritten for the plugin. rb://5 Approved by:	Marko ------------------------------------------------------------------------ r2887 | calvin | 2008-10-27 22:48:29 +0200 (Mon, 27 Oct 2008) | 44 lines branches/zip: implement the delayloading of externals for the plugin on Windows, which includes: * Load mysqld.map and insert all symbol/address pairs into hash for quick access * Resolves all external data variables. The delayloading mechanism in MSVC does not support automatic imports of data variables. A workaround is to explicitly handle the data import using the delay loader during the initialization of the plugin. * Resolves all external functions during run-time, by implementing the delayed loading helper function delayLoadHelper2, which is called by run-time as well as HrLoadAllImportsForDll. The delay loader reuses the hash implementation in InnoDB. The normal hash_create (in hash0hash.c) creates hash tables in buffer pool. But the delay loader is invoked before the engine is initialized, and buffer pools are not ready yet. Instead, the delay loader has its own implementation of hash_create() and hash_table_free(), called wdl_hash_create() and wdl_hash_table_free(). This patch should be used with other two patches in order to build a dynamically linked plugin on Windows: * patch for tmpfile functions (r2886) * patch for ""build"" files (to be committed) The list of file changed: handler/handler0vars.h: new file, defines a list of external data variables (no external functions). handler/win_delay_loader.cc: new file, the implementation of the delay loader for Windows plugin. handler/ha_innodb.cc: add a header file, and changes for copying the system variables. handler/handler0alter.cc: add a header file handler/i_s.cc: add a header file rb://27 Reviewed by:	Sunny, Marko Approved by:	Sunny ------------------------------------------------------------------------ r2888 | calvin | 2008-10-28 01:51:49 +0200 (Tue, 28 Oct 2008) | 25 lines branches/zip: for building dynamic plugin on Windows, ha_innodb.dll, when INNODB_DYNAMIC_PLUGIN is specified. The changes are: CMakeLists.txt: add project ha_innodb for dynamic plugin on Windows. ha_innodb depends on project mysqld. ha_innodb.def: a new file with standard exports for a dynamic plugin. Two new files will be added: * sql/mysqld.def:	.def file for 32-bit compiler * sql/mysqld_x64.def:	.def file for x64 compiler It is also required to apply a patch to the MySQL source tree. The patch is described in win-plugin/README: win-plugin/win-plugin.diff - a patch to be applied to MySQL source tree. When applied, the following files will be modified: * CMakeLists.txt:	add INNODB_DYNAMIC_PLUGIN and _USE_32BIT_TIME_T * sql/CMakeLists.txt:	add mysqld.def or mysqld_x64.def for mysqld * win/configure.js:	add INNODB_DYNAMIC_PLUGIN * win/build-vs71.bat:	provide an option to specify CMAKE_BUILD_TYPE * win/build-vs8.bat:	provide an option to specify CMAKE_BUILD_TYPE * win/build-vs8_x64.bat: provide an option to specify CMAKE_BUILD_TYPE ------------------------------------------------------------------------ r2894 | marko | 2008-10-28 08:36:39 +0200 (Tue, 28 Oct 2008) | 4 lines branches/zip: dict_str_starts_with_keyword(): Removed this unused function. Spotted by Sunny. ------------------------------------------------------------------------ r2895 | vasil | 2008-10-28 08:40:45 +0200 (Tue, 28 Oct 2008) | 6 lines branches/zip: ChangeLog: add entry for the Windows plugin. ------------------------------------------------------------------------ r2917 | marko | 2008-10-28 23:53:23 +0200 (Tue, 28 Oct 2008) | 3 lines branches/zip: innodb_plugin_init(): Do not copy session variables, even when the variable is a global variable in the built-in InnoDB. ------------------------------------------------------------------------ r2918 | calvin | 2008-10-29 00:08:11 +0200 (Wed, 29 Oct 2008) | 2 lines branches/zip: fix a problem introduced in r2917 - dyn is not initialized. Move the check into for(). ------------------------------------------------------------------------ r2922 | calvin | 2008-10-29 08:29:01 +0200 (Wed, 29 Oct 2008) | 16 lines branches/zip: fix issue #102 - Windows plugin: resolve dbug functions during run-time. Implement wrapper functions in the plugin. The plugin will get the function entries from mysqld.exe during the init, and invoke the corresponding functions (in mysqld.exe). The list of functions are: _db_pargs_ _db_doprnt_ _db_enter_ _db_return_ _db_dump_ rb://38 Approved by:	Marko ------------------------------------------------------------------------ r2923 | marko | 2008-10-29 09:52:30 +0200 (Wed, 29 Oct 2008) | 1 line branches/zip: ChangeLog: Mention Bug #27276. ------------------------------------------------------------------------ r2925 | calvin | 2008-10-29 10:09:41 +0200 (Wed, 29 Oct 2008) | 16 lines branches/zip: change function names in sql/mysqld.def in order to work with 5.1.29-rc. In 5.1.29, the following function names are changed: _hash_init hash_free hash_search hash_delete changed to _my_hash_init my_hash_free my_hash_search my_hash_delete Approved by:	Marko (on IM) ------------------------------------------------------------------------ r2927 | marko | 2008-10-29 11:43:23 +0200 (Wed, 29 Oct 2008) | 4 lines branches/zip: ha_innodb.cc: Make some functions static, so that they will not be compiled as weak global symbols.  These functions must not be redirected to the built-in InnoDB. ------------------------------------------------------------------------ r2928 | michael | 2008-10-29 19:20:10 +0200 (Wed, 29 Oct 2008) | 4 lines Remove unnecessary assert Approved by: Heikki, over IM ------------------------------------------------------------------------ r2930 | marko | 2008-10-29 21:39:24 +0200 (Wed, 29 Oct 2008) | 33 lines branches/zip: Merge revisions 2854:2929 from branches/5.1, except r2924, which was merged from branches/zip r2866 to branches/5.1 and except r2879 which was merged separately by Calvin: ------------------------------------------------------------------------ r2902 | vasil | 2008-10-28 12:10:25 +0200 (Tue, 28 Oct 2008) | 10 lines branches/5.1: Fix Bug#38189 innodb_stats_on_metadata missing Make the variable innodb_stats_on_metadata visible to the users and also settable at runtime. Previously it was only ""visible"" as a command line startup option to mysqld. Approved by:    Marko (https://svn.innodb.com/rb/r/36) ------------------------------------------------------------------------ r2929 | marko | 2008-10-29 21:26:14 +0200 (Wed, 29 Oct 2008) | 13 lines branches/5.1: dtype_get_sql_null_size(): return the correct storage size of a SQL NULL column. (Bug #40369) When MySQL Bug #20877 was fixed in r834, this function was accidentally modified to return 0 or 1. Apparently, the only impact of this bug is that fixed-length columns cannot be updated in-place from or to SQL NULL, even in ROW_FORMAT=REDUNDANT.  After this fix, fixed-length columns in ROW_FORMAT=REDUNDANT will have a constant storage size as they should, no matter if NULL or non-NULL.  The bug caused fixed-length NULL columns to occupy 1 byte. rb://37 approved by Heikki over IM. ------------------------------------------------------------------------ ------------------------------------------------------------------------ r2931 | vasil | 2008-10-29 22:10:40 +0200 (Wed, 29 Oct 2008) | 4 lines branches/zip: Add 2 ChangeLog entries for the 2 bugfixes that were merged from branches/5.1. ------------------------------------------------------------------------ r2935 | vasil | 2008-10-30 12:17:23 +0200 (Thu, 30 Oct 2008) | 17 lines branches/zip: Fix ""Bug#40360 Binlog related errors with binlog off"" in InnoDB code in order to have a Bug#40360-free InnoDB Plugin 1.0.2. The fix does check whether binary logging is enabled in MySQL by accessing the opt_bin_log global variable that is defined in sql/mysqld.cc. In case MySQL does develop another solution to this via Bug#40360 then we can revert this patch (except the mysql-tests). The windows-plugin part of this fix will be committed as a separate commit to ease eventual merge into branches/5.1 [note from the future: the separate commit went into r2936]. Approved by:	Marko (https://svn.innodb.com/rb/r/39) ------------------------------------------------------------------------ r2936 | vasil | 2008-10-30 12:24:09 +0200 (Thu, 30 Oct 2008) | 7 lines branches/zip: Followup to r2935: add the Windows Delay Loader stuff for the MySQL variable that we are accessing. If someday we have another solution for Bug#40360 Binlog related errors with binlog off then this should also be reverted. ------------------------------------------------------------------------ r2937 | vasil | 2008-10-30 12:28:47 +0200 (Thu, 30 Oct 2008) | 4 lines branches/zip: Add ChangeLog entry for Bug#40360 Binlog related errors with binlog off ------------------------------------------------------------------------ r2938 | vasil | 2008-10-30 12:33:28 +0200 (Thu, 30 Oct 2008) | 5 lines branches/zip: Non-functional change: convert handler/handler0vars.h and handler/win_delay_loader.cc from \r\n (dos) to \n (unix) line terminators. ------------------------------------------------------------------------ r2939 | marko | 2008-10-30 12:38:18 +0200 (Thu, 30 Oct 2008) | 2 lines branches/zip: Set svn:eol-style native on some recently added text files. ------------------------------------------------------------------------ r2940 | marko | 2008-10-30 12:46:21 +0200 (Thu, 30 Oct 2008) | 1 line branches/zip: ChangeLog, ha_innodb.def: Set svn:eol-style native ------------------------------------------------------------------------ r2941 | vasil | 2008-10-30 19:34:27 +0200 (Thu, 30 Oct 2008) | 4 lines branches/zip: Increment the InnoDB Plugin version from 1.0.1 to 1.0.2. ------------------------------------------------------------------------ r2943 | sunny | 2008-10-31 09:40:29 +0200 (Fri, 31 Oct 2008) | 15 lines branches/zip: 1. We add a vector of locks to trx_t. This array contains the autoinc locks granted to a transaction. There is one per table. 2. We enforce releasing of these locks in the reverse order from the one in which they are acquired. The assumption is that since the AUTOINC locks are statement level locks. Nested statements introduced by triggers are stacked it should hold. There was some cleanup done to the vector code too by adding const and some new functions. Rename dict_table_t::auto_inc_lock to autoinc_lock. Fix Bug#26316 Triggers create duplicate entries on auto-increment columns rb://22 ------------------------------------------------------------------------ r2944 | vasil | 2008-10-31 09:44:16 +0200 (Fri, 31 Oct 2008) | 12 lines branches/zip: Revert our temporary fix for ""Bug#40360 Binlog related errors with binlog off"" (r2935, r2936) and deploy MySQL's one, but put the function mysql_bin_log_is_engaged() inside mysql_addons.cc instead of in mysql's log.cc and use a different name for it so there is no collision when MySQL adds this function in log.cc. [note from the future: the windows part of this patch went into r2947] Approved by:	Marko (https://svn.innodb.com/rb/r/41/) ------------------------------------------------------------------------ r2945 | sunny | 2008-10-31 09:44:45 +0200 (Fri, 31 Oct 2008) | 2 lines branches/zip: Update ChangeLog with r2943 info. ------------------------------------------------------------------------ r2946 | marko | 2008-10-31 10:18:47 +0200 (Fri, 31 Oct 2008) | 2 lines branches/zip: Revert the unintended change to univ.i that was made in r2943. ------------------------------------------------------------------------ r2947 | calvin | 2008-10-31 10:38:26 +0200 (Fri, 31 Oct 2008) | 6 lines branches/zip: Windows plugin part of r2944 r2944 has reference to mysql_bin_log.is_open(), which is new in InnoDB. Add two new entries and remove one duplicate in mysqld.def & mysqld_x64.def. ------------------------------------------------------------------------ r2948 | vasil | 2008-10-31 11:39:07 +0200 (Fri, 31 Oct 2008) | 9 lines branches/zip: Fix Mantis issue#106 plugin init error:InnoDB: stats_on_metadata in static InnoDB (flags=0x2401) differs from stats_on_metadata in dynamic InnoDB (fl Ignore the NOSYSVAR flag in addition to ignoring the READONLY flag. Approved by:	Marko (https://svn.innodb.com/rb/r/42/) ------------------------------------------------------------------------ r2949 | vasil | 2008-10-31 11:47:56 +0200 (Fri, 31 Oct 2008) | 4 lines branches/zip: White-space cleanup in ChangeLog. ------------------------------------------------------------------------ r2951 | marko | 2008-10-31 14:21:43 +0200 (Fri, 31 Oct 2008) | 4 lines branches/zip: scripts/install_innodb_plugins_win.sql: New script, for installing the InnoDB plugins in Windows.  Copied from scripts/install_innodb_plugins.sql. ------------------------------------------------------------------------ r2954 | calvin | 2008-11-04 09:15:26 +0200 (Tue, 04 Nov 2008) | 8 lines branches/zip: ignore the failure when builtin_innobase_plugin is not available. External variable builtin_innobase_plugin is not available when mysqld does not have a builtin InnoDB. The init of the Windows plugin should not fail in this case. Approved by:	Marko (on IM) ------------------------------------------------------------------------ r2955 | calvin | 2008-11-04 12:43:14 +0200 (Tue, 04 Nov 2008) | 11 lines branches/zip: windows plugin - fix references to array variables. This problem surfaced when running new test innodb_bug40360.test. Both tx_isolation_names and binlog_format_names are name arrays, and should be defined as wdl_tx_isolation_names and wdl_binlog_format_names, not *wdl_tx_isolation_names and *wdl_binlog_format_names. Another array variable is all_charsets, which is already correctly defined. Approved by:	Marko (on IM) ------------------------------------------------------------------------ r2986 | marko | 2008-11-11 09:28:37 +0200 (Tue, 11 Nov 2008) | 11 lines branches/zip: ha_innobase::create(): Remove the dependences on DICT_TF_ZSSIZE_MAX, so that the code can be compiled with a different uncompressed page size by redefining UNIV_PAGE_SIZE_SHIFT in univ.i. Currently, the allowed values are 12, 13, or 14 (4k, 8k, 16k). Make the default compressed page size half the uncompressed page size. The previous default was 8 kilobytes, which is the same when compiling with the default 16k uncompressed page size. rb://50 approved by Pekka Lampio and Sunny Bains. ------------------------------------------------------------------------ "	c1d46655145abb036ed12c00a2f5849814a46fd5
----------------------------
ndb - Clean junk from IPCConfig 	a6498a985aa98965177191d5b47a83b36feee52a
----------------------------
Bug#34025: mysql_config is not returning -ldl lib flag needed when using embedded server mysql_config did not output -ldl (or equivalent) when needed for --libmysqld-libs, so its output could be insufficient to build an application using the embedded server. LIBDL was already set in configure; it's now propagated all the way into the relevant mysql_config scripts. 	8a774dcc68cc3db9f651a21e75ac87732aafc23b
----------------------------
"Added the default configure COMMUNITY_SERVER and ENABLED_PROFILING to the Windows configuration file ""include/config-win.h"". "	827bae532bbb783ae0edf595ed359d4e739c43f1
----------------------------
"Back merges from 6.0.8 - Removed some copy/paste between debug and normal build in RPM spec - Removed ""mysql_upgrade_shell"" from RPM build - Removed use of ""grep -q"" in ""configure.in"", not portable - Improved test to disable ABI check not to accidently run for icc Other changes - Added make file test targets 'test-bt-fast' and 'test-bt-debug-fast' - Reenabled ""jp"" test suite run "	a21f8a0e57a3d0eabf24ac8f4fccb6f563ecc3b1
----------------------------
"WL#4350 - Make the binary config sent by 'mgm_get_configuration' actually start a config change - Set own node as ""confirmed"" in ClusterMgr's list of nodes, thus making no distinction between local or remote ConfigManager - Add functions to SignalSender to make it easy to find the next node in a bitmask that is connected, alive or confirmed. "	722e19b698d2a4ab1e83eb7f3415b1e6e47c9d8a
----------------------------
WL#4350 - If no nodeid given on command line or in NDB_CONNECTSTRING search --datadir for binary config files, if they are all created by same nodeid, read the newest(based on generation) and determine if only one MGM is defined to run on the current host -> check it's the same as already found and use it. If no nodeid still found and a config.ini or my.cnf given on command line, read that config and see if only one MGM node is defined to run on this host -> use the nodeid of that node. 	aac3ee408bf7882df36a51b38d7cfa9da51dccca
----------------------------
WL#4350 - if no --datadir specified and the datadir compiled into ndb_mgmd doesn't exist, try to create it. 	8501c49b4c90286dd439f6f8d82dab51aad768f7
----------------------------
- Fix for Bug #39848, #39863, #39978, #39569 Bug#39848 events_bugs fails sporadically on pushbuild (missing rows in table event_log) Details: Reimplement the subtest for BUG 28924 - check if the number of rows within the table event_log changes but don't print rows because the number varies depending on load on testing box - shift DROP USER befor DROP EVENT = Subtest fits again to old bug - remove no more needed comments + variables Bug#39863 events_bugs fails sporadically on pushbuild (extra processes in I_S.PROCESSLIST) Details: Abort with appropriate message to the protocol if release_lock() does not has the intended effect. This cannot prevent problems caused by the probably buggy release_lock() but it reveals if we had a problem in this area. Bug#39978 main.events_bugs does not clean up Detail: Restore global.event_scheduler = ON at end of test Bug#39569 events_bugs fails sporadically on pushbuild (should have failed with errno 1539) Detail: Set $wait_timeout to 4 instead of 2 - Fix two instabilities (result sets pulled from processlist in subtest for bug 16407) which were found during tests with high parallel I/O load - Minor improvements of formatting Details: - Add comments - Remove tabs and trailing blanks - Add line breaks for better readability 	b86e9931d5fa5e929963bbbc8d0704592c224081
----------------------------
"branches/zip: windows plugin - fix references to array variables. This problem surfaced when running new test innodb_bug40360.test. Both tx_isolation_names and binlog_format_names are name arrays, and should be defined as wdl_tx_isolation_names and wdl_binlog_format_names, not *wdl_tx_isolation_names and *wdl_binlog_format_names. Another array variable is all_charsets, which is already correctly defined. Approved by:	Marko (on IM) "	bf9b5f06c52256f24d6370165da7ea7244757a65
----------------------------
"Bug#39117 ""plugin_load"" option not documented correct text describing the --plugin-load option to mysqld "	19dba1c68bd55c5bab135a8a7655352991117b67
----------------------------
Bug #40360: Binlog related errors with binlog off When statement-based replication is used, and the transaction isolation level is READ-COMMITTED or stricter, InnoDB will print an error because statement-based replication might lead to inconsistency between master and slave databases. However, when the binary log is not engaged, this is not an issue and an error should not be printed. This patch makes thd_binlog_format() return BINLOG_FORMAT_ UNSPEC when the binary log is not engaged for the given thread. 	005e7fc3ba65da4c54bbc4c0dee706b634c1b3af
----------------------------
BUG#39007 rpl_ndb.rpl_ndb_circular_2ch crashed in pushbuild According to documenation: http://dev.mysql.com/doc/refman/5.1/en/mysql-cluster-replication-issues.html When setting up circular replication for clusters with different SQL nodes in each cluster used as replication master and slave, SQL nodes must not start with --log-slave-updates option. This patch fixed the test case by remove log-slave-updates configuration from test case configuration file. 	ef08c3af3e1fd7efb5e643baf962bbc1b27a94e0
----------------------------
Merge: 18b4588 62a238b merge 6.3->6.4 fixup: - abi check for struct my_socket - ndb_mgmd DirIterator 	bdd0137191cfc105403a00863625ba9c69303414
----------------------------
branches/5.1: correct the result file innodb-autoinc.result Change the followings: auto_increment_increment auto_increment_offset to auto-increment-increment auto-increment-offset 	b233819195d7079d1c70dc3c04179cc759cf1650
----------------------------
"branches/zip: Merge revisions 2854:2929 from branches/5.1, except r2924, which was merged from branches/zip r2866 to branches/5.1 and except r2879 which was merged separately by Calvin: ------------------------------------------------------------------------ r2902 | vasil | 2008-10-28 12:10:25 +0200 (Tue, 28 Oct 2008) | 10 lines branches/5.1: Fix Bug#38189 innodb_stats_on_metadata missing Make the variable innodb_stats_on_metadata visible to the users and also settable at runtime. Previously it was only ""visible"" as a command line startup option to mysqld. Approved by:    Marko (https://svn.innodb.com/rb/r/36) ------------------------------------------------------------------------ r2929 | marko | 2008-10-29 21:26:14 +0200 (Wed, 29 Oct 2008) | 13 lines branches/5.1: dtype_get_sql_null_size(): return the correct storage size of a SQL NULL column. (Bug #40369) When MySQL Bug #20877 was fixed in r834, this function was accidentally modified to return 0 or 1. Apparently, the only impact of this bug is that fixed-length columns cannot be updated in-place from or to SQL NULL, even in ROW_FORMAT=REDUNDANT.  After this fix, fixed-length columns in ROW_FORMAT=REDUNDANT will have a constant storage size as they should, no matter if NULL or non-NULL.  The bug caused fixed-length NULL columns to occupy 1 byte. rb://37 approved by Heikki over IM. ------------------------------------------------------------------------ "	bd3514db332fbde06d6d55e216c271e0905029dd
----------------------------
ndbmtd - add config parameters controlling #threads 	18b4588a5126a60a5c100a71b2892848fb14a171
----------------------------
BUG#40257: Please remove --loose-skip-innodb from suite/rpl/rpl_1slave_base.cnf Removed the flag that disables innodb on slave in the default configuration of replication tests. That made the explicit --innodb flag in -slave.opt files redundant, so lots of -slave.opt files could be removed. Also, -master.opt files containing reduntant --innodb flag were removed (those were redundant even without changing the default). Removing .opt files is good because .opt files cause server restarts and make tests less readable. Also fixed a bug where rpl_innodb_mixed_ddl unintentionally used myisam on slave. 	2dca77e466faaeeb21be4a6d37ff0f91b9d839c1
----------------------------
WL#4350 Restore default DataDir value for [ndbd] to . as default it used to be 	24e67cf3d00630c5be46e06eadbbe561f3e25a66
----------------------------
WL#4350 Make atrt start ndbd_mgmd with --datadir and --ndb-nodeid 	8112448e1db914efa6fc766f3b5023a63b9397ad
----------------------------
"branches/5.1: Fix Bug#38189 innodb_stats_on_metadata missing Make the variable innodb_stats_on_metadata visible to the users and also settable at runtime. Previously it was only ""visible"" as a command line startup option to mysqld. Approved by:	Marko (https://svn.innodb.com/rb/r/36) "	fd5bac6715bc6e49f4bcc303c53c4ec07660b405
----------------------------
"branches/zip: for building dynamic plugin on Windows, ha_innodb.dll, when INNODB_DYNAMIC_PLUGIN is specified. The changes are: CMakeLists.txt: add project ha_innodb for dynamic plugin on Windows. ha_innodb depends on project mysqld. ha_innodb.def: a new file with standard exports for a dynamic plugin. Two new files will be added: * sql/mysqld.def:	.def file for 32-bit compiler * sql/mysqld_x64.def:	.def file for x64 compiler It is also required to apply a patch to the MySQL source tree. The patch is described in win-plugin/README: win-plugin/win-plugin.diff - a patch to be applied to MySQL source tree. When applied, the following files will be modified: * CMakeLists.txt:	add INNODB_DYNAMIC_PLUGIN and _USE_32BIT_TIME_T * sql/CMakeLists.txt:	add mysqld.def or mysqld_x64.def for mysqld * win/configure.js:	add INNODB_DYNAMIC_PLUGIN * win/build-vs71.bat:	provide an option to specify CMAKE_BUILD_TYPE * win/build-vs8.bat:	provide an option to specify CMAKE_BUILD_TYPE * win/build-vs8_x64.bat: provide an option to specify CMAKE_BUILD_TYPE "	117ae892ad0aea7130b544c08303a67311f5a541
----------------------------
Bug#39289 libmysqld.a calls exit() upon error Several functions (mostly in mysqld.cc) directly call exit() function in case of errors, which is not a desired behaviour expecially in the embedded-server library. Fixed by making these functions return error sign instead of exiting. per-file comments: include/my_getopt.h Bug#39289 libmysqld.a calls exit() upon error added 'error' retvalue for my_getopt_register_get_addr libmysqld/lib_sql.cc Bug#39289 libmysqld.a calls exit() upon error unireg_clear() function implemented mysys/default.c Bug#39289 libmysqld.a calls exit() upon error error returned instead of exit() call mysys/mf_tempdir.c Bug#39289 libmysqld.a calls exit() upon error free_tmpdir() - fixed so it's not produce crash on uninitialized tmpdir structure mysys/my_getopt.c Bug#39289 libmysqld.a calls exit() upon error error returned instead of exit() call sql/mysql_priv.h Bug#39289 libmysqld.a calls exit() upon error unireg_abort definition fixed for the embedded server sql/mysqld.cc Bug#39289 libmysqld.a calls exit() upon error various functions fixed error returned instead of exit() call 	da1d159fbfca1bc5f38bd24da633fb7cf1686f58
----------------------------
Bug#39571 abi_check Does not create all prerequisites The abi_check target instroduced as part of WL#4380 verifies changes to mysql.h. mysql.h in turn includes mysql_version.h. mysql_version.h is a file that is generated during the configure phase. We must ensure that mysql_version.h is cleaned only during distclean and not during clean. 	10b525d0bc4c19291496b2235e78cb8e47d85827
----------------------------
"Fix a ""configure"" syntax error. It had been introduced with the patch for bug entry 37098 and affected runs ""--without-server"" only. "	927534d525b87ad16ec35dc684f04a41b817e8b4
----------------------------
WL#4350 Rewrite ConfigRetriever::getConfig(const char*) so it works on all platforms 	0f14ef0904e39672dd8ffc2ae15f8d7882613612
----------------------------
WL#4350 Use C++ config iterator 	d357ff0e67fa2fc37f7575aa1332f1b8b8b07f19
----------------------------
WL#4350 Remove MgmtSrvrConfig.cpp from CMakeLists.txt 	ecd62b7512a479edea320eda4572365792114faf
----------------------------
"branches/innodb+: Merge revisions 2835:2862 from branches/zip: ------------------------------------------------------------------------ r2838 | vasil | 2008-10-21 12:49:27 +0300 (Tue, 21 Oct 2008) | 61 lines branches/zip: Merge 2744:2837 from branches/5.1 (skipping r2782 and r2826): ------------------------------------------------------------------------ r2832 | vasil | 2008-10-21 10:08:30 +0300 (Tue, 21 Oct 2008) | 10 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: In ha_innobase::info(): Replace sql_print_warning() which prints to mysqld error log with push_warning_printf() which sends the error message to the client. Suggested by: Marko, Sunny, Michael Objected by:  Inaam ------------------------------------------------------------------------ r2837 | vasil | 2008-10-21 12:07:44 +0300 (Tue, 21 Oct 2008) | 32 lines Changed paths: M /branches/5.1/mysql-test/innodb-semi-consistent.result M /branches/5.1/mysql-test/innodb-semi-consistent.test M /branches/5.1/mysql-test/innodb.result M /branches/5.1/mysql-test/innodb.test branches/5.1: Merge a change from MySQL (this fixes the failing innodb and innodb-semi-consistent tests): revno: 2757 committer: Georgi Kodinov <kgeorge@mysql.com> branch nick: B39812-5.1-5.1.29-rc timestamp: Fri 2008-10-03 15:24:19 +0300 message: Bug #39812: Make statement replication default for 5.1 (to match 5.0) Make STMT replication default for 5.1. Add a default of MIXED into the config files Fix the tests that needed MIXED replication mode. modified: mysql-test/include/mix1.inc mysql-test/r/innodb-semi-consistent.result mysql-test/r/innodb.result mysql-test/r/innodb_mysql.result mysql-test/r/tx_isolation_func.result mysql-test/t/innodb-semi-consistent.test mysql-test/t/innodb.test mysql-test/t/tx_isolation_func.test sql/mysqld.cc support-files/my-huge.cnf.sh support-files/my-innodb-heavy-4G.cnf.sh support-files/my-large.cnf.sh support-files/my-medium.cnf.sh support-files/my-small.cnf.sh ------------------------------------------------------------------------ ------------------------------------------------------------------------ r2847 | marko | 2008-10-22 10:07:37 +0300 (Wed, 22 Oct 2008) | 6 lines branches/zip: page_zip_rec_needs_ext(): Fix a bug that was introduced in the fix of Mantis issue #73.  With key_block_size=16, we will also have to check the available space on the uncompressed page. Otherwise, the clustered index record can be almost 16 kilobytes in size, and the undo log record will not fit. ------------------------------------------------------------------------ r2850 | marko | 2008-10-22 13:52:12 +0300 (Wed, 22 Oct 2008) | 2 lines branches/zip: ibuf_insert_to_index_page(): Discard the local variable block. page_cur is always positioned on block, the function parameter. ------------------------------------------------------------------------ r2853 | sunny | 2008-10-23 01:52:09 +0300 (Thu, 23 Oct 2008) | 2 lines branches/zip: Add missing UNIV_INTERN. ------------------------------------------------------------------------ r2855 | sunny | 2008-10-23 09:29:46 +0300 (Thu, 23 Oct 2008) | 36 lines branches/zip: Merge revisions 2837:2852 from branches/5.1: ------------------------------------------------------------------------ r2849 | sunny | 2008-10-22 12:01:18 +0300 (Wed, 22 Oct 2008) | 8 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/include/row0mysql.h M /branches/5.1/row/row0mysql.c branches/5.1: Return the actual error code encountered when allocating a new autoinc value. The change in behavior (bug) was introduced in 5.1.22 when we introduced the new AUTOINC locking model. rb://31 Bug#40224 New AUTOINC changes mask reporting of deadlock/timeout errors ------------------------------------------------------------------------ r2852 | sunny | 2008-10-23 01:42:24 +0300 (Thu, 23 Oct 2008) | 9 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/handler/ha_innodb.h branches/5.1: Backport r2724 from branches/zip Check column value against the col max value before updating the table's global autoinc counter value. This is part of simplifying the AUTOINC sub-system. We extract the type info from MySQL data structures at runtime. This fixes Bug#37788 InnoDB Plugin: AUTO_INCREMENT wrong for compressed tables ------------------------------------------------------------------------ ------------------------------------------------------------------------ r2856 | sunny | 2008-10-23 10:07:05 +0300 (Thu, 23 Oct 2008) | 1 line Reverting test file changes from r2855 ------------------------------------------------------------------------ r2857 | sunny | 2008-10-23 10:24:33 +0300 (Thu, 23 Oct 2008) | 30 lines branches/zip: Merge revisions 2852:2854 from branches/5.1: ------------------------------------------------------------------------ r2854 | sunny | 2008-10-23 08:30:32 +0300 (Thu, 23 Oct 2008) | 13 lines Changed paths: M /branches/5.1/dict/dict0dict.c M /branches/5.1/dict/dict0mem.c M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/handler/ha_innodb.h M /branches/5.1/include/dict0dict.h M /branches/5.1/include/dict0mem.h M /branches/5.1/row/row0mysql.c branches/5.1: Backport changes from branches/zip r2725 Simplify the autoinc initialization code. This removes the non-determinism related to reading the table's autoinc value for the first time. This change has also reduced the sizeof dict_table_t by sizeof(ibool) bytes because we don't need the dict_table_t::autoinc_inited field anymore. Bug#39830 Table autoinc value not updated on first insert. Bug#35498 Cannot get table test/table1 auto-inccounter value in ::info Bug#36411 Failed to read auto-increment value from storage engine"" in 5.1.24 auto-inc rb://16 ------------------------------------------------------------------------ ------------------------------------------------------------------------ r2858 | vasil | 2008-10-23 11:33:43 +0300 (Thu, 23 Oct 2008) | 4 lines branches/zip: Update the ChangeLog ------------------------------------------------------------------------ r2861 | marko | 2008-10-23 12:27:15 +0300 (Thu, 23 Oct 2008) | 24 lines branches/zip: Clean up the file format stamping. trx_sys_file_format_max_upgrade(): Rename from trx_sys_file_format_max_update().  Improve the documentation.  Add a const qualifier to the parameter ""name"".  Replace the parameter ""flags"" with ""format_id"", because this function should deal with file format identifiers, not with table flags. trx_sys_file_format_max_write(), trx_sys_file_format_max_set(): Add a const qualifier to the parameter ""name"". ha_innodb.cc: Correct the spelling in some comments: ""side effect"". Remove redundant prototypes for some static callback functions. innodb_file_format_name_update(), innodb_file_format_check_update(): Correct the function signature.  Use appropriate pointer type conversions. MYSQL_SYSVAR_STR(file_format), MYSQL_SYSVAR_STR(file_format_check): Remove the type conversions from the callback function pointers.  When the function signatures match, no type conversion is needed.  The type conversions would only prevent compilation warnings for any mismatch. Approved by Sunny in rb://25. ------------------------------------------------------------------------ r2862 | marko | 2008-10-23 12:37:42 +0300 (Thu, 23 Oct 2008) | 8 lines branches/zip: Non-functional changes: ibuf_get_volume_buffered(): Declare with static linkage. This function is private to ibuf0ibuf.c. btr_cur_pessimistic_delete(): Use the cached result of btr_cur_get_index(cursor). ------------------------------------------------------------------------ "	f557ff3ea9096499ab5cc23c09eb715bbc1762da
----------------------------
"branches/zip: Clean up the file format stamping. trx_sys_file_format_max_upgrade(): Rename from trx_sys_file_format_max_update().  Improve the documentation.  Add a const qualifier to the parameter ""name"".  Replace the parameter ""flags"" with ""format_id"", because this function should deal with file format identifiers, not with table flags. trx_sys_file_format_max_write(), trx_sys_file_format_max_set(): Add a const qualifier to the parameter ""name"". ha_innodb.cc: Correct the spelling in some comments: ""side effect"". Remove redundant prototypes for some static callback functions. innodb_file_format_name_update(), innodb_file_format_check_update(): Correct the function signature.  Use appropriate pointer type conversions. MYSQL_SYSVAR_STR(file_format), MYSQL_SYSVAR_STR(file_format_check): Remove the type conversions from the callback function pointers.  When the function signatures match, no type conversion is needed.  The type conversions would only prevent compilation warnings for any mismatch. Approved by Sunny in rb://25. "	d8fd1aec8d94bfd86ee3ad3efe0bd3bb36e60e1f
----------------------------
BUG#39812: Make statement replication default for 5.1 (to match 5.0) Added test case to check the default value of @@binlog_format. 	01b331592228de4dd0d10f9597bb47c4bc4b5bf0
----------------------------
WL#4350 ndb_mgmd - consistent configuration Add ConfigManager to ndb_mgmd 	a2cc39a6f9e4ebc6a443b3edd3f0d22dc4f345cb
----------------------------
"branches/zip: Merge 2744:2837 from branches/5.1 (skipping r2782 and r2826): ------------------------------------------------------------------------ r2832 | vasil | 2008-10-21 10:08:30 +0300 (Tue, 21 Oct 2008) | 10 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: In ha_innobase::info(): Replace sql_print_warning() which prints to mysqld error log with push_warning_printf() which sends the error message to the client. Suggested by:	Marko, Sunny, Michael Objected by:	Inaam ------------------------------------------------------------------------ r2837 | vasil | 2008-10-21 12:07:44 +0300 (Tue, 21 Oct 2008) | 32 lines Changed paths: M /branches/5.1/mysql-test/innodb-semi-consistent.result M /branches/5.1/mysql-test/innodb-semi-consistent.test M /branches/5.1/mysql-test/innodb.result M /branches/5.1/mysql-test/innodb.test branches/5.1: Merge a change from MySQL (this fixes the failing innodb and innodb-semi-consistent tests): revno: 2757 committer: Georgi Kodinov <kgeorge@mysql.com> branch nick: B39812-5.1-5.1.29-rc timestamp: Fri 2008-10-03 15:24:19 +0300 message: Bug #39812: Make statement replication default for 5.1 (to match 5.0) Make STMT replication default for 5.1. Add a default of MIXED into the config files Fix the tests that needed MIXED replication mode. modified: mysql-test/include/mix1.inc mysql-test/r/innodb-semi-consistent.result mysql-test/r/innodb.result mysql-test/r/innodb_mysql.result mysql-test/r/tx_isolation_func.result mysql-test/t/innodb-semi-consistent.test mysql-test/t/innodb.test mysql-test/t/tx_isolation_func.test sql/mysqld.cc support-files/my-huge.cnf.sh support-files/my-innodb-heavy-4G.cnf.sh support-files/my-large.cnf.sh support-files/my-medium.cnf.sh support-files/my-small.cnf.sh ------------------------------------------------------------------------ "	49589d0ae21c1b2171775ae14271f96ea930505f
----------------------------
branches/5.1: Merge a change from MySQL (this fixes the failing innodb and innodb-semi-consistent tests): revno: 2757 committer: Georgi Kodinov <kgeorge@mysql.com> branch nick: B39812-5.1-5.1.29-rc timestamp: Fri 2008-10-03 15:24:19 +0300 message: Bug #39812: Make statement replication default for 5.1 (to match 5.0) Make STMT replication default for 5.1. Add a default of MIXED into the config files Fix the tests that needed MIXED replication mode. modified: mysql-test/include/mix1.inc mysql-test/r/innodb-semi-consistent.result mysql-test/r/innodb.result mysql-test/r/innodb_mysql.result mysql-test/r/tx_isolation_func.result mysql-test/t/innodb-semi-consistent.test mysql-test/t/innodb.test mysql-test/t/tx_isolation_func.test sql/mysqld.cc support-files/my-huge.cnf.sh support-files/my-innodb-heavy-4G.cnf.sh support-files/my-large.cnf.sh support-files/my-medium.cnf.sh support-files/my-small.cnf.sh 	12617fa38aee74b181b06b709865c777eb85cc80
----------------------------
ndb_mgm hitting assert if event thread startup failed but socket connection successful. reproducable with tracing ndb_mgmd in debugger and allowing connection but not setup of events (or timeout just after connect) do_event_thread was being set incorrectly on error. 	97d4f839c365e7b31edaf9d0bad5e3081611168b
----------------------------
Merge: fd34712 932b5cc merged a few more fixes of test cases for configuration changes 	7e8fdc3ad8b292ada74cdf3d4d9086f37a803494
----------------------------
Merge: f5b7c9f 80baf58 merged fixes to the new default config values 	bbf344b646005c6fadeb718bc60f811cf8a42cb5
----------------------------
Merge: 99f5183 a6a94f8 merged configuration changes 	59ce72deddfdbcaa781f8477e710c83284fe8f0a
----------------------------
Changed configuration defaults for improved performance on modern computers 	a6a94f83f757e0810d50327a81b059b8c568b972
----------------------------
"The header ""config.h"" needs to be included ""early"" to control other headers. This time the inclusion of <stdio.h> before ""config.h"" enabled legacy large file support, seek64() and similar, on AIX breaking the compile of ""gzio.c"" "	36e4c7d281e73897e35fb82e7aa81bddab560f74
----------------------------
More portable sh in configure script 	d8e9fef0fa1df23d964f397698c1dc31b06ab235
----------------------------
BUG#39008 Additional fix after review, remove files that could potentially be set to path outside datadir 	ac24a792905c2b3d20f7f137ce94f8c013162981
----------------------------
Bug#29153 SHOW and INFORMATION_SCHEMA commands increment Created_tmp_disk_tables TRIGGERS.SQL_MODE, EVENTS.SQL_MODE, TRIGGERS.DEFINER: field type is changed to VARCHAR. 	d935c67bbafd25d36c4624fcd822fdccbe4a80ee
----------------------------
WL4403: --general_log and --slow_query_log don't turn on the logging. Fixed a compilation warning 	ff3b524820674fa4f95a95548b42491a89fa2bf2
----------------------------
ndbmtd - change configure check, to allow for other than x86-64 assmebler to be used 	2cfe41ba55bb7d719790bbf0635ebfec9ec87dba
----------------------------
branches/zip: mysql-test/patches/innodb_file_per_table.diff: @@GLOBAL.innodb_file_per_table can be 0 or 1, while SELECT VARIABLE_VALUE FROM INFORMATION_SCHEMA.GLOBAL_VARIABLES WHERE VARIABLE_NAME='innodb_file_per_table' can be 'OFF' or 'ON'.  For some reason, MySQL evaluates (0 = 'OFF') to 1 and (1 = 'ON') to 0.  Thus, the test would fail if innodb_file_per_table is set. 	c39985b0965a56406c9ba85803a87c182eb34762
----------------------------
branches/zip: Add some more patches to mysql-test. type_bit_innodb.diff: Ignore the reported duplicate value.  The reported value depends on the internal workings of the merge sort in fast index creation.  In the built-in InnoDB of MySQL 5.1, the records are copied to a new temporary table in the order they were selected from the original table. information_schema.diff: Account for the INFORMATION_SCHEMA tables that were added in the InnoDB plugin. innodb_file_per_table.diff: In the InnoDB plugin, innodb_file_per_table is a settable global variable. 	2eda3b44a5d8e3fe9d477eb9d7b68ad24c59a91e
----------------------------
branches/zip: Patch the mysql-test suite, so that it will not fail because innodb_lock_wait_timeout is a settable session variable as of r2716. mysql-test/patches/innodb_lock_wait_timeout.diff: New file. 	a25e07bad8213c47d8c5c9bb94bbbc745a184cb0
----------------------------
Merge: 0b097b7 c1ed70d WL#4403 deprecate @log and @slow_log_queries variables Adds --general-log-file, --slow-query-log-file command- line options to match system variables of the same names. Deprecates --log, --log-slow-queries command-line option and log, log_slow_queries system-variables for v7.0; they are superseded by general_log/general_log_file and slow_query_log/slow_query_log_file, respectively. 	1ad9d23584d39d8de0510782594cab11e4865ad9
----------------------------
"Fix for test for b-g#35754 which fails based on hostname ?= ""localhost"". "	318a0601c908bef126a205d5b3890abeb6120673
----------------------------
my_socket_posix.h should include my_config.h 	6c63a7f9f798d8817eb96864738dec6219686425
----------------------------
WL#4403 deprecate @log and @slow_log_queries variables Adds --general_log_file, --slow_query_log_file command- line options to match system variables of the same names. Deprecates --log, --log-slow-queries command-line options and log, log_slow_queries system-variables for v7.0; they are superseded by general_log/general_log_file and slow_query_log/slow_query_log_file, respectively. 	c1ed70d38459d3064474168c5f9389a4b29a1e73
----------------------------
"branches/zip: Merge revisions 2702:2722 from branches/5.1: ------------------------------------------------------------------------ r2702 | sunny | 2008-09-30 11:41:56 +0300 (Tue, 30 Sep 2008) | 13 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: Since handler::get_auto_increment() doesn't allow us to return the cause of failure we have to inform MySQL using the sql_print_warning() function to return the cause for autoinc failure. Previously we simply printed the error code, this patch prints the text string representing the following two error codes: DB_LOCK_WAIT_TIMEOUT DB_DEADLOCK. Bug#35498 Cannot get table test/table1 auto-inccounter value in ::info Approved by Marko. ------------------------------------------------------------------------ r2709 | vasil | 2008-10-01 10:13:13 +0300 (Wed, 01 Oct 2008) | 10 lines Changed paths: M /branches/5.1/include/lock0lock.h M /branches/5.1/lock/lock0lock.c A /branches/5.1/mysql-test/innodb_bug38231.result A /branches/5.1/mysql-test/innodb_bug38231.test M /branches/5.1/row/row0mysql.c branches/5.1: Fix Bug#38231 Innodb crash in lock_reset_all_on_table() on TRUNCATE + LOCK / UNLOCK In TRUNCATE TABLE and discard tablespace: do not remove table-level S and X locks and do not assert on such locks not being wait locks. Leave such locks alone. Approved by:	Heikki (rb://14) ------------------------------------------------------------------------ r2710 | vasil | 2008-10-01 14:13:58 +0300 (Wed, 01 Oct 2008) | 6 lines Changed paths: M /branches/5.1/include/sync0sync.ic branches/5.1: Silence a compilation warning in UNIV_DEBUG. Approved by:	Marko (via IM) ------------------------------------------------------------------------ r2719 | vasil | 2008-10-03 18:17:28 +0300 (Fri, 03 Oct 2008) | 49 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc A /branches/5.1/mysql-test/innodb_bug39438-master.opt A /branches/5.1/mysql-test/innodb_bug39438.result A /branches/5.1/mysql-test/innodb_bug39438.test branches/5.1: Fix Bug#39438 Testcase for Bug#39436 crashes on 5.1 in fil_space_get_latch In ha_innobase::info() - do not try to get the free space for a tablespace which has been discarded with ALTER TABLE ... DISCARD TABLESPACE or if the .ibd file is missing for some other reason. ibd_file_missing and tablespace_discarded are manipulated only in row_discard_tablespace_for_mysql() and in row_import_tablespace_for_mysql() and the manipulation is protected/surrounded by row_mysql_lock_data_dictionary()/row_mysql_unlock_data_dictionary() thus we do the same in ha_innobase::info() when checking the values of those members to avoid race conditions. I have tested the code-path with UNIV_DEBUG and UNIV_SYNC_DEBUG. Looks like it is not possible to avoid mysqld printing warnings in the mysql-test case and thus this test innodb_bug39438 must be added to the list of exceptional test cases that are allowed to print warnings. For this, the following patch must be applied to the mysql source tree: --- cut --- === modified file 'mysql-test/lib/mtr_report.pl' --- mysql-test/lib/mtr_report.pl	2008-08-12 10:26:23 +0000 +++ mysql-test/lib/mtr_report.pl	2008-10-01 11:57:41 +0000 @@ -412,7 +412,10 @@ # When trying to set lower_case_table_names = 2 # on a case sensitive file system. Bug#37402. -                /lower_case_table_names was set to 2, even though your the file system '.*' is case sensitive.  Now setting lower_case_table_names to 0 to avoid future problems./ +                /lower_case_table_names was set to 2, even though your the file system '.*' is case sensitive.  Now setting lower_case_table_names to 0 to avoid future problems./ or + +                # this test is expected to print warnings +                ($testname eq 'main.innodb_bug39438') ) { next;                       # Skip these lines --- cut --- The mysql-test is currently somewhat disabled (see inside innodb_bug39438.test), after the above patch has been applied to the mysql source tree, the test can be enabled. rb://20 Reviewed by:	Inaam, Calvin Approved by:	Heikki ------------------------------------------------------------------------ r2720 | vasil | 2008-10-03 19:52:39 +0300 (Fri, 03 Oct 2008) | 8 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: Print a warning if an attempt is made to get the free space for a table whose .ibd file is missing or the tablespace has been discarded. This is a followup to r2719. Suggested by:	Inaam ------------------------------------------------------------------------ r2721 | sunny | 2008-10-04 02:08:23 +0300 (Sat, 04 Oct 2008) | 6 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: We need to send the messages to the client because handler::get_auto_increment() doesn't allow a way to return the specific error for why it failed. rb://18 ------------------------------------------------------------------------ r2722 | sunny | 2008-10-04 02:48:04 +0300 (Sat, 04 Oct 2008) | 18 lines Changed paths: M /branches/5.1/dict/dict0mem.c M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/include/dict0mem.h M /branches/5.1/include/row0mysql.h M /branches/5.1/mysql-test/innodb-autoinc.result M /branches/5.1/mysql-test/innodb-autoinc.test M /branches/5.1/row/row0mysql.c branches/5.1: This bug has always existed but was masked by other errors. The fix for bug# 38839 triggered this bug. When the offset and increment are > 1 we need to calculate the next value taking into consideration the two variables. Previously we simply assumed they were 1 particularly offset was never used. MySQL does its own calculation and that's probably why it seemed to work in the past. We would return what we thought was the correct next value and then MySQL would recalculate the actual value from that and return it to the caller (e.g., handler::write_row()). Several new tests have been added that try and catch some edge cases. The tests exposed a wrap around error in MySQL next value calculation which was filed as bug#39828. The tests will need to be updated once MySQL fix that bug. One good side effect of this fix is that dict_table_t size has been reduced by 8 bytes because we have moved the autoinc_increment field to the row_prebuilt_t structure. See review-board for a detailed discussion. rb://3 ------------------------------------------------------------------------ "	cb0cacc2d8392a0d6105fa21d215719e97a20cee
----------------------------
"branches/5.1: Fix Bug#39438 Testcase for Bug#39436 crashes on 5.1 in fil_space_get_latch In ha_innobase::info() - do not try to get the free space for a tablespace which has been discarded with ALTER TABLE ... DISCARD TABLESPACE or if the .ibd file is missing for some other reason. ibd_file_missing and tablespace_discarded are manipulated only in row_discard_tablespace_for_mysql() and in row_import_tablespace_for_mysql() and the manipulation is protected/surrounded by row_mysql_lock_data_dictionary()/row_mysql_unlock_data_dictionary() thus we do the same in ha_innobase::info() when checking the values of those members to avoid race conditions. I have tested the code-path with UNIV_DEBUG and UNIV_SYNC_DEBUG. Looks like it is not possible to avoid mysqld printing warnings in the mysql-test case and thus this test innodb_bug39438 must be added to the list of exceptional test cases that are allowed to print warnings. For this, the following patch must be applied to the mysql source tree: --- cut --- === modified file 'mysql-test/lib/mtr_report.pl' --- mysql-test/lib/mtr_report.pl	2008-08-12 10:26:23 +0000 +++ mysql-test/lib/mtr_report.pl	2008-10-01 11:57:41 +0000 @@ -412,7 +412,10 @@ # When trying to set lower_case_table_names = 2 # on a case sensitive file system. Bug#37402. -                /lower_case_table_names was set to 2, even though your the file system '.*' is case sensitive.  Now setting lower_case_table_names to 0 to avoid future problems./ +                /lower_case_table_names was set to 2, even though your the file system '.*' is case sensitive.  Now setting lower_case_table_names to 0 to avoid future problems./ or + +                # this test is expected to print warnings +                ($testname eq 'main.innodb_bug39438') ) { next;                       # Skip these lines --- cut --- The mysql-test is currently somewhat disabled (see inside innodb_bug39438.test), after the above patch has been applied to the mysql source tree, the test can be enabled. rb://20 Reviewed by:	Inaam, Calvin Approved by:	Heikki "	859c2873fceadd2c421d7928e81dcb8a90774b20
----------------------------
Bug #39812: Make statement replication default for 5.1 (to match 5.0) Make STMT replication default for 5.1. Add a default of MIXED into the config files Fix the tests that needed MIXED replication mode. 	7a05a4f5dcb4e40781f50a376649f14fd33d28ec
----------------------------
Bug#37481: status.test fails randomly The problem was that the test was trying to obtain a lock on a table in one connection without ensuring that a insert which was executed in another connection had released the lock on the same table. The solution is to add a dummy select query after the insert to ensure that the table is unlocked and closed by the time it tries to lock it again. This is enough to prevent test failures described in the bug report. As an extra safety measure, concurrent inserts are disabled. Remove comments that calculated the Table_locks_immediate. This value is not tested anymore and it's calculation did not reflect the actual value. 	57c85d554636f2d01406de15ec557462744f61c5
----------------------------
branches/zip: Make innodb_lock_wait_timeout a settable session variable (Bug #36285, rb://9). innodb-index.test, innodb-index.result: Set innodb_lock_wait_timeout as a session variable instead of relying on the global value. innodb-index-master.opt: Remove. innodb-timeout.test: Test that setting the innodb_lock_wait_timeout works as advertised. thd_lock_wait_timeout(): New function, to retrieve the lock wait timeout for a given MySQL client connection (thd), or the global value (thd==NULL). srv_lock_wait_timeout, innobase_lock_wait_timeout: Remove. Replace MYSQL_SYSVAR_LONG(lock_wait_timeout) with MYSQL_THDVAR_ULONG(lock_wait_timeout). 	be56c64772b1c67e2074dd3831b36a214ca39a24
----------------------------
Fix for Bug#36874 : main.slow_launch_time_func test fails 	85d8b39bbba50e411031cea45aa6d510c8a5f2f1
----------------------------
"Merge: 7a12b01 e1ea011 Merge 5.0 -> 5.1 of fix for Bug#38427 ""Data too long"" in some configurations, tests ""<ENGINE>_func_view"" fail "	d6c02b2216df8cb61f9be9dfbc93f1ab0a1b5bd6
----------------------------
"Fix for Bug#38427 ""Data too long"" in some configurations, tests ""<ENGINE>_func_view"" fail "	e1ea011ceef02b2953afdc0a549e9bb2d1c9ec2b
----------------------------
remove false warning suppressions (hiding real bugs). Should also be fixed in this tree with struct my_socket patches. 	b2eeabd6561a4c39fc978794b54c4fef5108dc10
----------------------------
"Fix for Bug#37744 Expected result of ""<engine>_storedproc"" test is inconsistent + several improvements Details: - The subtest with assignment of floating point numbers to DECIMAL parameters in functions and procedures checks now that the final DECIMAL value is the same as if we assign the floating point numbers to columns, user variables etc. = The impact of math libs or truncation must be the same. - Remove storage engine variants of this test because the stored procedure properties tested do not depend on the storage engine. Use the fastest storage engine (MEMORY) for any tables needed. - reset global sort_buffer_size to startup value - Partially improved formatting. "	766803d5174ef27cfc637f8627ba59d49a445032
----------------------------
branches/zip: Merge revisions 2630:2702 from branches/5.1: ------------------------------------------------------------------------ r2702 | sunny | 2008-09-30 11:41:56 +0300 (Tue, 30 Sep 2008) | 13 lines branches/5.1: Since handler::get_auto_increment() doesn't allow us to return the cause of failure we have to inform MySQL using the sql_print_warning() function to return the cause for autoinc failure. Previously we simply printed the error code, this patch prints the text string representing the following two error codes: DB_LOCK_WAIT_TIMEOUT DB_DEADLOCK. Bug#35498 Cannot get table test/table1 auto-inccounter value in ::info Approved by Marko. ------------------------------------------------------------------------ rb://18 	3b90e70d744d9ed863d67cf5873e8923ff6e0dcf
----------------------------
branches/5.1: Since handler::get_auto_increment() doesn't allow us to return the cause of failure we have to inform MySQL using the sql_print_warning() function to return the cause for autoinc failure. Previously we simply printed the error code, this patch prints the text string representing the following two error codes: DB_LOCK_WAIT_TIMEOUT DB_DEADLOCK. Bug#35498 Cannot get table test/table1 auto-inccounter value in ::info Approved by Marko. 	8a92f6fe2c0e2ac2e826a20e76b345bcac9d60cd
----------------------------
BUG#38734 rpl_server_id2 sync_with_master failed Rotate event is automatically generated and written when rotating binary log or relay log. Rotate events for relay logs are usually ignored by slave SQL thread becuase they have the same server id as that of the slave. However, if --replicate-same-server-id is enabled, rotate event for relay log would be treated as if it's a rotate event from master, and would be executed by slave to update the rli->group_master_log_name and rli->group_master_log_pos to a wrong value and cause the MASTER_POS_WAIT function to fail and return NULL. This patch fixed this problem by setting a flag bit (LOG_EVENT_RELAY_LOG_F) in the event to tell the SQL thread to ignore these Rotate events generated for relay logs. This patch also added another binlog event flag bit (LOG_EVENT_ARTIFICIAL_F) to distinquish faked events, the method used before this was by checking if log_pos was zero. 	0d2025e1d4c0b80a13bff64165a06ff71721a7b8
----------------------------
branches/zip: add MySQL files that will be changed for Windows plugin. The following files are from MySQL source tree without any changes. They will be changed for building Windows plugin. The original files will be used as the base for diff purpose. * CMakeLists.txt * sql/CMakeLists.txt * win/configure.js 	4a3ff30caad2d655c885db4720a95a6d20745a2a
----------------------------
ndb - atrt fix replication in 6.0 allow configurations wo/ cluster 	e2e6f653256292f728b875824e4310d6d81eaf91
----------------------------
Bug #37153 Ndb Cluster reports affected rows incorrectly Cluster can report affected rows incorrectly when Insert or Delete used with AutoCommit. This patch corrects the affected rows counts. 	7908d705ab1e6992f99bb427d405058c8c012784
----------------------------
"Bug#35754: mysql_install_db does not work if no hostname is set Machines with hostname set to ""localhost"" cause uniqueness errors in the SQL bootstrap data. Now, insert zero lines for cases where the (lowercased) hostname is the same as an already-inserted 'localhost' name.  Also, fix a few tests that expect certain local accounts to have a certain host name. "	bf996620cd79de204db22526d874df1425a3d7c0
----------------------------
Make sure the direcory where the test socket is to be created exists 	67580cd220d4eeeb6ac7bd8e3a11336d2de2e2af
----------------------------
"branches/zip: When creating an index in innodb_strict_mode, check that the maximum record size will never exceed the B-tree page size limit. For uncompressed tables, there should always be enough space for two records in an empty B-tree page.  For compressed tables, there should be enough space for storing two node pointer records or one data record in an empty page in uncompressed format. dict_build_table_def_step(): Remove the inaccurate check for table row size. dict_index_too_big_for_tree(): New function: check if the index records would be too big for a B-tree page. dict_index_add_to_cache(): Add the parameter ""strict"".  Invoke dict_index_too_big_for_tree() if it is set. trx_is_strict(), thd_is_strict(): New functions, for determining if innodb_strict_mode is enabled for the current transaction. dict_create_index_step(): Pass the new parameter strict of dict_index_add_to_cache() as trx_is_strict(trx).  All other callers pass it as FALSE. innodb.test: Enable innodb_strict_mode before attempting to create a table with a too big record size. innodb-zip.test: Remove the test of inserting random data.  Add tests for checking that the maximum record lengths are enforced at table creation time. "	75fe6fa6a432eda04bdd688e8ee86f4f47b3e177
----------------------------
Bug#37114: sql_mode NO_BACKSLASH_ESCAPES does not work properly with LOAD DATA      Bug#37114: sql_mode NO_BACKSLASH_ESCAPES does not work properly with LOAD DATA INFILE tweaked test to make embedded server happy 	86775b103f5db1920d86ba405cf02f3ed86df507
----------------------------
branches/zip: Add some tests for innodb_strict_mode. ha_innodb.cc: Declare strict_mode as PLUGIN_VAR_OPCMDARG, because we do want to be able to disable innodb_strict_mode.  This is a non-functional change, because PLUGIN_VAR_NOCMDARG seems to accept an argument as well. innodb-zip.test: Do not store innodb_strict_mode.  It is a session variable. Add a test case for innodb_strict_mode=off. 	34426c473e8a713fedd66d8dda7b345ab337de69
----------------------------
Bug#37114: sql_mode NO_BACKSLASH_ESCAPES does not work properly with LOAD DATA INFILE NO_BACKSLASH_ESCAPES was not heeded in LOAD DATA INFILE and SELECT INTO OUTFILE.  It is now. 	a89d13a7f04c3d2d887b85dc35e0f4089f7e763d
----------------------------
Fix for Bug#38184 : main.federated fails sporadically Details: - backport of some improvements which prevent sporadic failures from 5.1 to 5.0 - @@GLOBAL.CONCURRENT_INSERT= 0 also for slave server - --sorted_result before all selects which have result sets with more than one row - Replace error numbers by error names 	2130b894a273145f998807869df2d57812730802
----------------------------
Bug#38338: REPLACE causes last_insert_id() to return an incorrect value Fix the write_record function to record auto increment values in a consistent way. 	83ef8f3427b541206ae3ffb24c1370c64cba5a81
----------------------------
WL#4350 Extend Config 	4e1b6dcad54bdefdc8fd0d48a77301c3800bcb27
----------------------------
"Merge: 031dabd ef1d6cc Bug#37938 Test ""mysqldump"" lacks various INSERT statements / values Merge of fixes from 5.0 -> 5.1 Moved restoration of concurrent_insert's original value to the end of the 5.1 tests Re-recorded .result file to account for changes to test file. "	d1bb214b3adcf72df04063971011369911c4d8a2
----------------------------
"Bug#37938 Test ""mysqldump"" lacks various INSERT statements / values Moved fix for this bug to 5.0 as other mysqldump bugs seem tied to concurrent_insert being on Setting concurrent_insert off during this test as INSERTs weren't being completely processed before the calls to mysqldump, resulting in failing tests. Altered .test file to turn concurrent_insert off during the test and to restore it to whatever the value was at the start of the test when complete. Re-recorded .result file to account for changes to variables in the test. "	ef1d6cca00242f6b20e2215f06c5f82361b91ea0
----------------------------
WL#4189 Create a tempdir if tmpdir path becomes too long 	588efe1216f60bb2c491a7077f0162d9a1abff45
----------------------------
WL#4189 Wrap the check for socket path length in eval 	4174c685952de7ae3772d936579051293ab38c85
----------------------------
"branches/zip: Add a test case to check that mysqld does not crash when running ANALYZE TABLE with different values for innodb_stats_sample_pages. Suggested by:	Marko Approved by:	Marko "	5af796d22b2100507fcf6d72f51d3424304377d5
----------------------------
Bug#35720 ucs2 + pad_char_to_full_length = failure Problem: with @@sql_mode=pad_char_to_full_length a CHAR column returned additional garbage after trailing space characters due to incorrect my_charpos() call. Fix: call my_charpos() with correct arguments. 	4bf1aa826aa7edfa2f7d9276bbc802c7bfa28559
----------------------------
ndb - ndb_config, adjust to new sorting of result 	507e8ed21de901a11b4eab9fbf8a19a455dcd240
----------------------------
WL#4350 Add 'set config' to ndb_mgmd 	ee8956fea3895452bf06e2e222c5534eda1585fb
----------------------------
WL#4350 Add 'ndb_mgm_set_configuration' to mgmapi 	a99eae879f7c314cd975421e2ada8667d03281f0
----------------------------
Fix for bug#38349: concurrent_insert_func must not with embedded server. 	48868b2d0e9ea83b83df077a65c6f6aa590e12d6
----------------------------
Final fix for bug#38349: Did the changes due to the 2 reviews. - Updated slow_query_log_file_basic and general_log_file basis instead of the func version as the func version run good but the basic versions fail. - Sent innodb.test to dev@innodb.com. - variables.test has differences probably due to a bug in mtr or in the SET statement (see bug#39369). - general_log_file_basic.test and slow_query_log_file_bsaic.test have differences, which might be produced by the new mtr (see bug#38124). 	a5e248d4023180d81c27acb9f764e00d4b7cc488
----------------------------
Bug #39106: SUPER is not required to change binlog format for session A user without SUPER privileges can change the value of the session variable BINLOG_FORMAT, causing problems for a DBA. This changeset requires a user to have SUPER privileges to change the value of the session variable BINLOG_FORMAT, and not only the global variable BINLOG_FORMAT. 	69a8281c41bea87d04bbfe21a7ec55894e319ca2
----------------------------
Update win/configure.js for NDB (and dependencies) 	c9f581cfeb1267630a52c5089fd3c094d5502425
----------------------------
WL#4350 Options in my.cnf style config file should not start with -- 	9dbcf1b26f86603c06bbd714274294d83e279c52
----------------------------
Bug #38540 rpl_server_id2 uses show slave status unnecessarily 	e1524b2f1c81264273e80cc82a0a8492a25e1ff7
----------------------------
ndb - atrt - autoconfigure ndb_X_fs directory to cwd this should fix the problems seen in trondheim... but I have no clue why we havent seen this before 	8121e4c971d3351374b7c50ebc3a9b7a893183c9
----------------------------
fix Win64 build of NDB-win32 tree (related to my_socket) 	a212218dd9fb93b84d5e8396f98d49b950831bc5
----------------------------
Bug#36099 replicate-do-db affects replaying RBR events with mysqlbinlog The replication filtering rules were inappropiately applied when executing BINLOG pseudo-query.  The rules are supposed to be active only at times when the slave's sql thread executes an event. Fixed with correcting a condition to call replication rules only if the slave sql thread executes the event. 	21a08eabadb7a9e7a8257f628f2a77fc6de74abf
----------------------------
fix part of mysqld only built on OSX not yet updated for struct my_socket 	17cc473449e5c2c97b7b8eeb9c376dd1d049fc3a
----------------------------
include headers in my_socket_posix.h required on OSX 	6d40c282a4b2f6fd753fd08a8554ce05aeae4208
----------------------------
Use correct paths for vs_config_dirs for ndb binaries. $ndb_path is full path to ndb/ or storage/ndb. We only do NDB on Win32 in 5.1+ which is storage/ndb, so just use storage/ndb here. 	cb196d104522d9fb9113f1fa79e72d90f02de270
----------------------------
Bug#38120: main.partition fails sporadically sporadic failures due to full disk. Fix by truncating general_log before altering it. (if running the full main-test, it can be big). 	d1da4cca8e1c403ffcf30d01852085391417b86d
----------------------------
Bug#36616  rpl tests without 'source include/have_log_bin.inc' fail starting server 	6a4af260cc5d41cbbca6b4744682da4ee11d03d1
----------------------------
mysql-test-run.pl vs_config_dirs for NDB binaries: i.e. allow mtr on windows to find ndb binaries. 	1d6db0462d08e369a2cd8f972763a9438f7df9ce
----------------------------
update config.cmake to support building of embedded server, remove old bdb, fix partitioning description. 	fc4917e7c16638693f6fdcb0c1ca4b5d179ef316
----------------------------
dance around my_socket for Win32 compatibility. 	fcd56f8bdf267b4468516dccca50b33a63a996dc
----------------------------
"Bug#37098  Get rid of ""Installed (but unpackaged)"" files in the RPM build Mostly, this affected files (programs, scripts, and manual pages) which got built during a RPM build but were not listed in the appropriate ""%files"" section of the ""spec"" file. This is fixed now, they are added. To make this consistent, this patch also makes the build of ""innochecksum"" (and its inclusion in a tar.gz or other package) depend on whether InnoDB is configured in the build. Also, some tools to create Windows packages are irrelevant in any binary Unix package (not the sources !), and so they are deleted before packaging. "	ff3d230a03a69330d30ccbb43ce8550cdd6536d4
----------------------------
Bug#37428 Potential security issue with UDFs - linux shellcode execution. plugin_dir option backported from 5.1 	515de310f03012b8502a33af9b60d602042180ab
----------------------------
fix unix socket invalidation if HAVE_CLOSE_SERVER_SOCK (enabled at least on valgrind pb host) 	907dc3bea33c645af1089df5d9afdafe246866b9
----------------------------
my_socket fixes in mysqld.cc (discovered on solaris sparc build) 	fec6ff566a18eb8f9cc441bddf16c30fa47ff4ad
----------------------------
Add PARTITION to config.cmake (allowing selection from Cmake UI). Automatically enable partitioning if NDB engine is enabled. 	4deafc9148d1e847e0d2aaadb506d233ae193377
----------------------------
"branches/zip: Merge 2537:2605 from branches/5.1: ------------------------------------------------------------------------ r2545 | vasil | 2008-07-25 17:24:23 +0300 (Fri, 25 Jul 2008) | 37 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: Fix Bug#38185 ha_innobase::info can hold locks even when called with HA_STATUS_NO_LOCK The fix is to call fsp_get_available_space_in_free_extents() from ha_innobase::info() only if HA_STATUS_NO_LOCK is not present in the flag *AND* change get_schema_tables_record() in MySQL's sql/sql_show.cc to call ::info() *without* HA_STATUS_NO_LOCK whenever a user issues SELECT FROM information_schema.tables; Without the change to sql/sql_show.cc this patch would lead to Bug#32440 resurfacing. I.e. delete_length would never be updated in ::info() and will remain 0 forever, resulting in the free space not being shown anywhere. This is the change to sql/sql_show.cc for reference, it needs to be committed to the MySQL repo before or at the same time with this change to ha_innodb.cc: --- patch begins here --- --- sql/sql_show.cc.orig	2008-07-23 09:32:14.000000000 +0300 +++ sql/sql_show.cc	2008-07-23 09:32:19.000000000 +0300 @@ -3549,8 +3549,7 @@ static int get_schema_tables_record(THD if(file) { -      file->info(HA_STATUS_VARIABLE | HA_STATUS_TIME | HA_STATUS_AUTO | -                 HA_STATUS_NO_LOCK); +      file->info(HA_STATUS_VARIABLE | HA_STATUS_TIME | HA_STATUS_AUTO); enum row_type row_type = file->get_row_type(); switch (row_type) { case ROW_TYPE_NOT_USED: --- patch ends here --- Approved by:	Heikki ------------------------------------------------------------------------ r2603 | marko | 2008-08-21 16:25:05 +0300 (Thu, 21 Aug 2008) | 10 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc M /branches/5.1/include/ha_prototypes.h M /branches/5.1/row/row0sel.c branches/5.1: Identify SELECT statements by thd_sql_command() == SQLCOM_SELECT instead of parsing the query string.  This fixes MySQL Bug #37885 without us having to implement lexical analysis of SQL comments in yet another place. thd_is_select(): A new predicate. row_search_for_mysql(): Use thd_is_select(). Approved by Heikki. ------------------------------------------------------------------------ "	22ecced6479394f0a2c0f076915d434388dc5f39
----------------------------
branches/5.1: Identify SELECT statements by thd_sql_command() == SQLCOM_SELECT instead of parsing the query string.  This fixes MySQL Bug #37885 without us having to implement lexical analysis of SQL comments in yet another place. thd_is_select(): A new predicate. row_search_for_mysql(): Use thd_is_select(). Approved by Heikki. 	06be45c3d17e2a06841b294f67f0989932646ed3
----------------------------
[patch 58/64] WL4012 WL1744 (ndb on win32) dont need netdb.h, is included by my_socket_posix.h--- storage/ndb/tools/ndb_config.cpp |    2 -- 1 file changed, 2 deletions(-) Index: ndbwin32/storage/ndb/tools/ndb_config.cpp =================================================================== 	5fa1e428cfda74d0ec1c8e3ce86fbdb62b7c4dc3
----------------------------
[patch 46/64] WL4012 WL1744 (ndb on win23) include paths for ndb kernel build. some blocks include other blocks headers. add src/kernel/blocks to include path--- storage/ndb/config/type_kernel.cmake                   |    1 + storage/ndb/src/kernel/blocks/dbtup/DbtupExecQuery.cpp |    2 +- storage/ndb/src/kernel/blocks/dbtup/DbtupIndex.cpp     |    2 +- 3 files changed, 3 insertions(+), 2 deletions(-) Index: ndbwin32/storage/ndb/config/type_kernel.cmake =================================================================== 	0c2a8cfaa01b4e7ddf2e61eb1670d7b74dc6f362
----------------------------
[patch 34/64] WL4012 WL1744 (ndb on win32) my_config -> my_global.h for ndb basestring_vsnprintf.c--- storage/ndb/src/common/util/basestring_vsnprintf.c |    2 +- 1 file changed, 1 insertion(+), 1 deletion(-) Index: ndbwin32/storage/ndb/src/common/util/basestring_vsnprintf.c =================================================================== 	9161e9e4171113dad6c8bf32fff1816a103334cd
----------------------------
[patch 31/64] WL4012 WL1744 (ndb on win32) VC++ doesnt have and--- storage/ndb/src/common/util/SocketServer.cpp |    4 ++-- 1 file changed, 2 insertions(+), 2 deletions(-) Index: ndbwin32/storage/ndb/src/common/util/SocketServer.cpp =================================================================== 	28b0a6459402009112bac76ec9cfabd05180c0b2
----------------------------
[patch 27/64] WL4012 WL1744 (ndb on win32) fix (some) compiler warnings--- include/config-win.h                                   |    1 + mysys/my_init.c                                        |    2 +- storage/ndb/include/util/Vector.hpp                    |    5 +++-- storage/ndb/src/common/mgmcommon/IPCConfig.cpp         |    2 +- storage/ndb/src/common/util/Properties.cpp             |    2 +- storage/ndb/src/mgmapi/mgmapi.cpp                      |    4 ++-- storage/ndb/src/ndbapi/ClusterMgr.cpp                  |    6 +++--- storage/ndb/src/ndbapi/NdbDictionaryImpl.cpp           |    2 +- storage/ndb/src/ndbapi/NdbWaiter.hpp                   |    6 +++--- storage/ndb/src/ndbapi/SignalSender.cpp                |    4 ++-- storage/ndb/src/ndbapi/SignalSender.hpp                |    2 +- storage/ndb/src/ndbapi/ndb_cluster_connection_impl.hpp |    4 ++-- 12 files changed, 21 insertions(+), 19 deletions(-) Index: include/config-win.h =================================================================== 	541a45f2887c736812b8f8d2d8d88ca5afc5a844
----------------------------
[patch 26/64] WL4012 WL1744 (ndb on win32) Define ENOTSUP on Windows (not supplied by host, use Solaris define)--- include/config-win.h |    6 ++++++ 1 file changed, 6 insertions(+) Index: ndbwin32/include/config-win.h =================================================================== 	aed056ed26b9c759890d0859af9f95f458fe517d
----------------------------
[patch 23/64] WL4012 WL1744 (ndb on win32): remove InetErrno, replace with my_socket_errno()my_socket_errno() introduced with struct my_socket patchset. uses errrno on posix and socket_errno on win32 	c900cf619a8de70bdaea818bf37eabcb765dcf51
----------------------------
[patch 20/64] WL4012 WL1744 (ndb on win32) remove strcasecmp from ndb_global.h(.in) - already defined in config-win.h 	19d75aad372db73f7c189e989b5b4ab48197c0a0
----------------------------
[patch 19/64] struct my_socket: force compiler to ensure socket code portabilityThis replaces the simple conditional #define of my_socket to either int or SOCKET (depending on if posix like or MS Windows) with a proper typedef struct { int fd; } my_socket; (or similar for Windows). This makes the *compiler* enforce the use of portable functions such as my_socket_close(s) instead of non-portable ones like the OS native close(). The problem is often seen when: - Linux developer writes socket code, uses close() - said developer tests code, works perfectly - said developer pushes code - code throws a runtime error on Windows. Or, if casting from SOCKET to int, if the location in memory of the socket handle (as SOCKET is a pointer on MS Windows) isn't within range of int.... boom. So this patch avoids subtle bugs by breaking the build on all platforms. This means that all developers will be forced to write portable code for sockets. It also adds a few useful wrappers for common functionality. This patch partially ports over previosu socket portability code... sometimes just using the internal member of my_socket and not mucking with the existing (working) code. A future patch should remove the backwards-compat portability code and just use the new my_socket code. done during WL4012 - found and fixed several things in NDB. Every time you see a int -> my_socket change, that's a subtle bug. Every time you see a socket being compared to -1, subtle bug Haven't found a magic solution to errno vs socket_errno versus my_socket_errno() yet. 	ebaf36dad155f45d01f578879bf19faf6a31c2e8
----------------------------
[patch 17/64] WL4012 WL1744 (ndb on win32): ndb_opts full implementation--- storage/ndb/include/util/ndb_opts.h         |   15 +-- storage/ndb/src/common/util/Makefile.am     |    2 storage/ndb/src/common/util/ndb_opts.c      |  123 ++++++++++++++++++++++++++++ storage/ndb/src/kernel/vm/Configuration.cpp |   17 +-- storage/ndb/src/mgmclient/main.cpp          |   18 ++-- storage/ndb/src/mgmsrv/ConfigInfo.cpp       |    4 storage/ndb/src/mgmsrv/MgmtSrvr.cpp         |    2 storage/ndb/src/mgmsrv/main.cpp             |   17 ++- storage/ndb/test/src/NDBT_Test.cpp          |   15 ++- storage/ndb/tools/delete_all.cpp            |   21 ++-- storage/ndb/tools/desc.cpp                  |   23 ++--- storage/ndb/tools/drop_index.cpp            |   20 +--- storage/ndb/tools/drop_tab.cpp              |   20 +--- storage/ndb/tools/listTables.cpp            |   25 ++--- storage/ndb/tools/ndb_config.cpp            |   16 +-- storage/ndb/tools/restore/restore_main.cpp  |   15 +-- storage/ndb/tools/select_all.cpp            |   25 ++--- storage/ndb/tools/select_count.cpp          |   20 +--- storage/ndb/tools/waiter.cpp                |   13 +- 19 files changed, 248 insertions(+), 163 deletions(-) Index: storage/ndb/src/common/util/Makefile.am =================================================================== 	cdeeb83f6b90f7db244f9682ebc3d550c6c88a17
----------------------------
[patch 15/64] WL4012 WL1744 (ndb on win32): socket portability fixes--- storage/ndb/include/util/NdbOut.hpp           |    7 +++++++ storage/ndb/src/common/portlib/NdbTCP.cpp     |   15 +++++++++++++-- storage/ndb/src/common/portlib/win32/NdbTCP.c |    2 +- 3 files changed, 21 insertions(+), 3 deletions(-) Index: storage/ndb/include/util/NdbOut.hpp =================================================================== 	b7078c2faa819a5c05bbebbcbcad59c79e8ddca1
----------------------------
[patch 11/64] WL4012 WL1744 (ndb on win32) NdbTCP - winsock included elsewhere, portable error detection for nonblocking sockets--- storage/ndb/include/portlib/NdbTCP.h |   14 ++++++++------ 1 file changed, 8 insertions(+), 6 deletions(-) Index: storage/ndb/include/portlib/NdbTCP.h =================================================================== 	8bba7b7d55d8f1b8c738d1ab4835c7bc77dae69c
----------------------------
[patch 08/64] WL4012 WL1744 (ndb on win32): target NT5, true/false defines, socket errors, getsockopt--- include/config-win.h |   14 +++++++------- include/my_global.h  |    2 ++ include/my_net.h     |    4 ++++ mysys/my_net.c       |    9 +++++++++ mysys/my_wincond.c   |    1 + 5 files changed, 23 insertions(+), 7 deletions(-) Index: include/config-win.h =================================================================== 	6350c816d5fef1eb6aa71625bd097979caab03aa
----------------------------
[patch 04/64] WL4012 WL1744 (ndb on win32): build fixes for ndb/test on VC++ win32- use BaseString::snprintf on win32 - a few places using errno instead of socket_errno - use send() instead of write() for sockets 	c7a9d4c038ba7b60f76a0d95259f49d0d4b9f327
----------------------------
[patch 03/64] WL4012 WL1744 (ndb on win32): use my_global insetad of my_configthis includes the right headers for win32 	88f91318c8767a1020383dd4fbce01c6db4895ba
----------------------------
Cherry-pick some changes from innodb-5.1-ss2479 snapshot.  Includes fixes for Bug#36600 and Bug#36793: Bug #36600 SHOW STATUS takes a lot of CPU in buf_get_latched_pages_number Fix by removing the Innodb_buffer_pool_pages_latched variable from SHOW STATUS output in non-UNIV_DEBUG compilation. Bug #36793 rpl_innodb_bug28430 fails on Solaris This is a back port from branches/zip. This code has been tested on a big-endian machine too. 	1a01d6a93b9721ff8b87cd898c5b232cd3262a7b
----------------------------
Bug#21579 - innodb_concurrent random failures with varying differences Due to unknown changes the test failed in some ways. Fixed by checking the test case in detail, commenting the expected behavior, and fixing error directives. In the course of the analyze unneeded get_lock()/release_lock() use, unneeded send/reap use, and unneeded sleeps were removed. The lock wait timeout was reduced to 1 second, so that this is no big-test any more. The test was split into two parts, one running the tests with --innodb_locks_unsafe_for_binlog, the other part without. The main part (include/concurrent.inc) conditionally expects lock wait timeouts based on the value of the system variable innodb_locks_unsafe_for_binlog. The major part of the patch comes from Kristofer Pettersson. (Chad queues this patch on demand by Trudy/Davi.) 	6d6b9ffec891e0779e0a7bef6c58ca3679ab6cf1
----------------------------
Correcting tree name in bzr config.  Should not include team suffix. 	18e93e8fd9ab23f0bac9d68b7af1840f8122e74e
----------------------------
Bug#18817, removing --binlog-format option from .opt files 	35e47b31a283add902d87f36caf4aeaefd0dd098
----------------------------
ndb - make SignalSender (used by ndb_mgmd) do forceSend this to remove race-condition introduced in e.g testDict -n FailAddFragment after magnus BufferedSocketOutput patch 	d3fcba6aa2b5de7cc338d76780b1786ef015bd48
----------------------------
WL#4380 Added a comment to the abi_check related part of configure.in 	eaeef499547bb30f5399a0a9300c346dda961b9e
----------------------------
"branches/innodb+:  Merge revisions 2460:2579 from branches/zip The followin mysql-tests failed (and they are known to fail): main.information_schema        	[ fail ] main.innodb_file_per_table_basic[ fail ] main.type_bit_innodb           	[ fail ] Tested against : MYSQL_SERVER_VERSION  ""5.1.28"" "	4b06a4b130906fadc2782ba1166d791f91ccef70
----------------------------
"branches/zip: The cardinality of every index (the number of different key values) is calculated when the table is opened, at SHOW TABLE STATUS, ANALYZE TABLE and on other circumstances (like when the table has changed too much). Note that if the mysql client is running with the auto-rehash setting turned on (default) this causes all tables to be opened when it starts. Previously InnoDB sampled 8 random pages from the index to get an estimate of the cardinality. Now the number of sampled pages can be changed via the global parameter innodb_stats_sample_pages which can be tuned at runtime. The default value for this parameter is 8. If the value of this parameter is changed, there may be serious problems: - small values (say, 1) can cause an error in table stats; - values much larger than 8 (say, 100), can cause a big slowdown in table opening time, SHOW TABLE status, etc. - query plans may be different from the old ones. Approved by:	Heikki "	9bbd5454dbbc3443b5776737b9e087ce26b94275
----------------------------
Patch for combinations file using different --default-storage-engine= directives 	afbbe64aae7755122fb8a43c282b0aea3ee17ed4
----------------------------
Cherry-pick InnoDB fixes for Bug#34286, Bug#35352, and Bug#36600 from snapshot innodb-5.0-ss2475. Bug #34286  Assertion failure in thread 2816 in file .\row\row0sel.c line 3500 Since autoinc init performs a MySQL SELECT query to determine the auto-inc value, set prebuilt->sql_stat_start = TRUE so that it is performed like any normal SELECT, regardless of the context in which it was invoked. Bug #35352  If InnoDB crashes with UNDO slots full error the error persists on restart We've added a heuristic that checks the size of the UNDO slots cache lists (insert and upate). If either of cached lists has more than 500 entries then we add any UNDO slots that are freed, to the common free list instead of the cache list, this is to avoid the case where all the free slots end up in only one of the lists on startup after a crash. Tested with test case for 26590 and passes all mysql-test(s). Bug #36600  SHOW STATUS takes a lot of CPU in buf_get_latched_pages_number Fixed by removing the Innodb_buffer_pool_pages_latched variable from SHOW STATUS output in non-UNIV_DEBUG compilation. 	021d7d72f899c0734a086dde71a599af92c63cfe
----------------------------
Bug#34159: mysql_install_db fails with sql_mode=TRADITIONAL Reset session sql_mode before creating system tables as it is done in the mysql_fix_privilege_tables.sql script. 	8224995eb42b9be09fe919ad78604d2829a7bec3
----------------------------
Bug#34159: mysql_install_db fails with sql_mode=TRADITIONAL Reset session sql_mode before creating system tables as it is done in the mysql_fix_privilege_tables.sql script. 	a0768d32c24b2548a47dbd99aa00d53c5019220d
----------------------------
Bug#35808 utf8 hungarian collation not part of the utf8 charset? config/ac-macros/character_sets.m4 didn't mention hungarian collations in the UTF8 and UCS2 lists. 	08162d8c3b79be33b7c8ddad828a1eebd0f958db
----------------------------
Bug#37428 Potential security issue with UDFs - linux shellcode execution. plugin_dir option backported from 5.1 per-file messages: sql/mysql_priv.h Bug#37428 Potential security issue with UDFs - linux shellcode execution. opt_plugin_dir and opt_plugin_dir_ptr declared. sql/mysqld.cc Bug#37428 Potential security issue with UDFs - linux shellcode execution. 'plugin_dir' option added sql/set_var.cc Bug#37428 Potential security issue with UDFs - linux shellcode execution. 'plugin_dir' option added. sql/sql_udf.cc Bug#37428 Potential security issue with UDFs - linux shellcode execution. opt_plugin_dir added to the udf->dl path. Warn if it's not specified. sql/unireg.h Bug#37428 Potential security issue with UDFs - linux shellcode execution. PLUGINDIR defined. 	5237d24423560970b7bcf51828707d24091eb1cc
----------------------------
Rmove RESET MASTER from have_log_bin.inc because it can cause some test to stall for slave_net_timeout and cause some test case fail 	b1252a7ccf6af29a26f5c341a6ad6d1baaf965a2
----------------------------
wl#4391 02.diff LocalProxy, including READ_CONFIG, and subclasses. 	68e6b1a62458518a7ada6b2cd36d0c1ed1783dee
----------------------------
Print config from the loaded config instead of printing while loading from disk - Remove unused functions Config::prinAllNameValuePairs, Config::printConfigFile and MgmtSrvr::saveConfig x 2 	94bc5ff4ee09ccb1616d0f64993f93891b884e35
----------------------------
Check that the default-storage-engine used by test is a supported engine 	ee3b5acc6200150d2da0f8ccfffcb8ea0c3f4e18
----------------------------
Bug#37027 expire_logs_days and missing binlogs cause a crash ! If the server failed to expired log files during start up it could crash. 	71930db28f94654dd95b2c3c143ed34367d41176
----------------------------
branches/zip: The test for issue#36 assumed that AUTOCOMMIT=OFF. Add an explicit BEGIN. 	131eb3b2e1c5b60128289464ee847727c64e674e
----------------------------
Bug #36818 rpl_server_id1 fails expecting slave has stopped the reason for the failure is that io thread passes through a sequence of state changes before it eventually got stuck at the expect running state as NO. It's unreasonble to wait for the running status while the whole idea of the test is to get to the IO thread error. Fixed with changing the waiting condition. 	a5d1e6101ef3823d770289f3fb7b22d0c1729c87
----------------------------
BUG#38170: rpl_variables failed on pushbuild: could not sync with master Problem: the test set @@global.init_slave to garbage at a time which was not guaranteed to be after the time when the slave's SQL thread used it. That would cause the slave's SQL thread to stop in rare cases. Fix: The test does not care about the value of @@global.init_slave, except that it should be different on master and slave. Hence, we set @@global.init_slave to something that is valid SQL. 	e77957eecb5c24d60b2633e6624cd894016f11fc
----------------------------
Bug#30087 Set query_cache_size, if the value is too small, get a unclear warning Reverting the previous patch 	b8579849f32f149cfc7885d06a1272bd832b6389
----------------------------
BUG#38127: main.mysqlbinlog_base64 fails sporadically on pushbuild Problem: mysqlbinlog_base64 fails because the binlog contains traces from previous test cases. Fix: Make have_log_bin reset the master's binlog. 	e14d0f10c254012c445edd077252dd395e527f40
----------------------------
BUG#37733: rpl.rpl_flushlog_loop 'row' fails sporadically on pushbuild Post-post-push fix. The result file for rpl_rbr_to_sbr needs to be updated. While I was there, made rpl_rbr_to_sbr clean up after itself by reverting @@binlog_format to the value it had before the test started. 	ed8a08ba0cde153deb4626eb7ec0e9e48379abb6
----------------------------
BUG#35478: sort_union() returns bad data when sort_buffer_size is hit - In QUICK_INDEX_MERGE_SELECT::read_keys_and_merge: when we got table->sort from Unique, tell init_read_record() not to use rr_from_cache() because a) rowids are already sorted and b) it might be that the the data is used by filesort(), which will need record rowids (which rr_from_cache() cannot provide). - Fully de-initialize the table->sort read in QUICK_INDEX_MERGE_SELECT::get_next(). This fixes BUG#35477. (bk trigger: file as fix for BUG#35478). 	2951f00be4c2e332686ca713f77dab39615ea083
----------------------------
Bug#37402: Mysql cant read partitioned table with capital letter in the name Problem was that ha_partition had HA_FILE_BASED flag set (since it uses a .par file), but after open it uses the first partitions flags, which results in different case handling for create and for open. Solution was to change the underlying partition name so it was consistent. (Only happens when lower_case_table_names = 2, i.e. Mac OS X and storage engines without HA_FILE_BASED, like InnoDB and Memory.) (Recommit after adding rename of check_lowercase_names to get_canonical_filename, and moved it from handler.h to mysql_priv.h) NOTE: if a mixed case name for a partitioned table was created when lower_case_table_name = 2 it should be renamed or dropped before using the updated version (See bug#37402 for more info) 	295fc5834aef999a8f77d0b38037699d7a2b26bc
----------------------------
BUG#37975: wait_for_slave_* should increase the timeout Problem 1: tests often fail in pushbuild with a timeout when waiting for the slave to start/stop/receive error. Fix 1: Updated the wait_for_slave_* macros in the following way: - The timeout is increased by a factor ten - Refactored the macros so that wait_for_slave_param does the work for the other macros. Problem 2: Tests are often incorrectly written, lacking a source include/wait_for_slave_to_[start|stop].inc. Fix 2: Improved the chance to get it right by adding include/start_slave.inc and include/stop_slave.inc, and updated tests to use these. Problem 3: The the built-in test language command wait_for_slave_to_stop is a misnomer (does not wait for the slave io thread) and does not give as much debug info in case of failure as the otherwise equivalent macro source include/wait_for_slave_sql_to_stop.inc Fix 3: Replaced all calls to the built-in command by a call to the macro. Problem 4: Some, but not all, of the wait_for_slave_* macros had an implicit connection slave. This made some tests confusing to read, and made it more difficult to use the macro in circular replication scenarios, where the connection named master needs to wait. Fix 4: Removed the implicit connection slave from all wait_for_slave_* macros, and updated tests to use an explicit connection slave where necessary. Problem 5: The macros wait_slave_status.inc and wait_show_pattern.inc were unused. Moreover, using them is difficult and error-prone. Fix 5: remove these macros. Problem 6: log_bin_trust_function_creators_basic failed when running tests because it assumed @@global.log_bin_trust_function_creators=1, and some tests modified this variable without resetting it to its original value. Fix 6: All tests that use this variable have been updated so that they reset the value at end of test. 	78c8bfdddf7d3b42c14bd2a8ac312610dd015b9b
----------------------------
"Fix for bug#37669: Server crash by setting ""@@session.innodb_table_locks"" Problem: reading/writing data from/to an address without proper alignment leads to SIGBUS on some platforms. Fix: use the correct data type when dereferencing variable values. "	db56fd008c118246a0ee92c2949b3502fbe324ba
----------------------------
BUG#37906: innodb_max_dirty_pages_pct_func does not clean up after itself Made the test innodb_max_dirty_pages_pct_func clean up after itself. 	e467919d18c2da322c235f76e5267c3e5195a284
----------------------------
"branches/zip: Add a space in a warning message. No functional change to the code. The original message is ""invalid innodb_file_format_checkvalue;..."". The new one is ""invalid innodb_file_format_check value;..."" "	b4d2512bbdb90c791fa67b89d85658ff19393bbe
----------------------------
"Fix for Bug#36787 Test funcs_1.charset_collation_1 failing Details: 1. Skip charset_collation_1 if charset ""ucs2_bin"" is missing (property which distincts ""vanilla"" builds from the others) 2. Let builds with version_comment LIKE ""%Advanced%"" (found them for 5.1) execute charset_collation_3. 3. Update comments charset_collation.inc so that they reflect the current experiences. "	dd7bc1a662ea3ef4c1381d7f1512c54ff12612d1
----------------------------
"Merge: 9d84892 0632a93 Up-merge from 5.0: Fix for Bug#20748, Configuration files should not be read more than once Differences in 5.1: include ""/etc/mysql/"" in include directories; no OS/2 support. "	e3fc4494526ee7ee3a99ae0bfa708bd64e7f60bc
----------------------------
add config file for trondheim host also to Makefile 	a8ade2f45245287990bf7fe62b5a380cafa52503
----------------------------
Bug #20748: Configuration files should not be read more than once Normalize directory names before adding them to default_directories. 	0632a93e08de60427624cc3e6178eb625d8c215a
----------------------------
Bug #36244: MySQL CLI doesn't recognize standalone -- as a commentary mysql client has been modified to interpret EOL after standalone -- commentary strings like whitespace character (according to http://dev.mysql.com/doc/refman/5.0/en/ansi-diff-comments.html) 	7ad63a7202dbeba44d7e646b94fc9d98a915e1e4
----------------------------
add config file for trondheim host 	cedbf912df405791d99c163e3990009df1922802
----------------------------
fix usage of hostname for solaris 	57f418e058e979d67e80902cb04cd9c6ef494bf5
----------------------------
add hook for os-specific configure options for autotest 	f860794bcfdd6cae240865803727406a9207a732
----------------------------
Improve error message when failing to find config file to use 	c6dbddb57169179f413aa74e9c6556743392f0e7
----------------------------
"branches/zip: Fix the rpl_ddl mysql-test that produces a warnings: master.err: rpl.rpl_ddl: 080611 16:27:01 [Warning] MySQL is closing a connection that has an active InnoDB transaction.  13 row modifications will roll back. the bug was introduced in r2256, which adds ""prebuilt->trx->active_trans = 1;"" in ::add_index() and ::final_drop_index() but never calls innobase_commit() or innobase_rollback() to set back active_trans to 0. Also, per Heikki's suggestion we remove the calls to trans_register_ha() from ::add_index() and ::final_drop_index(). Following is the IM discussion that took place about this: --- cut --- (17:59:05) vasil: unsigned        active_trans:2; /* 1 - if a transaction in MySQL is active. 2 - if prepare_commit_mutex was taken */ (17:59:13) vasil: what about 0? (17:59:26) Heikki: Hmm (17:59:42) Heikki: Maybe in the other cases :) (18:01:00) vasil: 2   1369  handler/ha_innodb.cc <<<unknown>>> if (trx->active_trans == 0) { 3   1372  handler/ha_innodb.cc <<<unknown>>> trx->active_trans = 1; (18:01:05) vasil: yes, it can be 0 (18:01:38) Heikki: Maybe no active transaction => the value is 0 (18:02:03) vasil: probably yes (18:09:09) vasil: /* The flag trx->active_trans is set to 1 in 1. ::external_lock(), 2. ::start_stmt(), 3. innobase_query_caching_of_table_permitted(), 4. innobase_savepoint(), 5. ::init_table_handle_for_HANDLER(), 6. innobase_start_trx_and_assign_read_view(), 7. ::transactional_table_lock() and it is only set to 0 in a commit or a rollback. (18:09:14) vasil: this is no longer true (18:09:35) vasil: it is also set to 1 in ::final_drop_index (18:09:56) vasil: and in ::add_index() (18:12:31) Heikki: Please correct the comment :( (18:13:01) vasil: it is not only the comment, I am trying to understand what's wrong (18:13:28) Heikki: What is the symptom? (18:14:37) vasil: can you find this email and the subsequent one: From: Vasil Dimov <vasil.dimov@oracle.com> To: InnoDB Dev <innodb_dev_ww@oracle.com> Subject: Re: innodb - marko - r2256 - in branches/zip: handler include lock trx Date: Wed, 11 Jun 2008 16:33:47 +0300 (18:15:02) vasil: the symptom is master.err: rpl.rpl_ddl: 080611 16:27:01 [Warning] MySQL is closing a connection that has +an active InnoDB transaction.  13 row modifications will roll back. (18:16:22) vasil: My understanding till now is that active_trans is set to 1 in ::add_index() and forgotten like this, never set to 0; I wonder if it should be set to 0 somewhere at the end or not set to 1 at all... or there is more... (18:16:31) Heikki: Vasil, ok the problem is that Marko forgets to commit the transaction (18:16:55) Heikki: An active transaction has to be committed or rolled back (18:17:09) vasil: but i can find this in ::add_index(): /* Commit the data dictionary transaction in order to release the table locks on the system tables.  Unfortunately, this means that if MySQL crashes while creating a new primary key inside row_merge_build_indexes(), indexed_table will not be dropped on crash recovery.  Thus, it will become orphaned. */ trx_commit_for_mysql(trx); (18:17:27) vasil: but this function does not set active_trans to 0 (18:17:43) Heikki: Let me look (18:19:20) vasil: it is only set to 0 in innobase_commit() and in innobase_rollback() (18:20:10) Heikki: Ok (18:20:59) Heikki: Hmm... (18:21:08) vasil: innobase_commit() calls innobase_commit_low() calls trx_commit_for_mysql() innobase_commit() sets active_trans=0 (18:21:26) Heikki: active_trans is strictly a ha_innodb.cc variable (18:21:53) Heikki: It is intended to be used in transactions visible to MySQL (18:22:25) Heikki: I think Marko should call innobase_commit() (18:23:51) vasil: but still set active_trans=1 inside :add_index() inside handler/handler0alter.cc? (18:24:12) Heikki: Hmm (18:24:56) Heikki: I think the transaction is NOT really visible to MySQL (18:24:57) vasil: > Author: marko > Date: 2008-01-25 16:26:07 +0200 (Fri, 25 Jan 2008) > New Revision: 2256 > > Log: > branches/zip: Fast index creation: Release locks on system tables before > creating indexes.  Lock the user table inside the user transaction. > > enum trx_dict_op: Remove TRX_OP_INDEX_MAY_WAIT. > > ha_innobase::add_index(): Lock the user tables within prebuilt->trx. > Commit the data dictionary transaction before creating indexes. > > ha_innobase::final_drop_index(): Lock the user table within prebuilt->trx. (18:26:41) Heikki: Let me look at the old ::create_table() (18:27:25) Heikki: Ok, in the old code, the transactions are internal to InnoDB, not visible to MySQL (18:27:46) Heikki: I think it is an error to set active_trans=1 inside :add_index() i (18:28:11) Heikki: MySQL is not really interested in HOW the engine adds the index. In a transaction or not. (18:28:26) vasil: this is the change inside drop_index(), that is supposed to ""Lock the user table within prebuilt->trx"": (18:28:37) vasil: @@ -1093,27 +1101,25 @@ ha_innobase::final_drop_index( /* Create a background transaction for the operations on the data dictionary tables. */ trx = trx_allocate_for_mysql(); trx_start_if_not_started(trx); trans_register_ha(user_thd, FALSE, ht); + prebuilt->trx->active_trans = 1; trx->mysql_thd = user_thd; trx->mysql_query_str = thd_query(user_thd); /* Flag this transaction as a dictionary operation, so that - the data dictionary will be locked in crash recovery.  Prevent - warnings if row_merge_lock_table() results in a lock wait, - i.e., when another transaction is holding a conflicting lock - on the table, e.g., because of SELECT ... FOR UPDATE. */ - trx_set_dict_operation(trx, TRX_DICT_OP_INDEX_MAY_WAIT); + the data dictionary will be locked in crash recovery. */ + trx_set_dict_operation(trx, TRX_DICT_OP_INDEX); /* Lock the table exclusively, to ensure that no active transaction depends on an index that is being dropped. */ err = convert_error_code_to_mysql( -  row_merge_lock_table(trx, prebuilt->table, LOCK_X), +  row_merge_lock_table(prebuilt->trx, prebuilt->table, LOCK_X), user_thd); if (UNIV_UNLIKELY(err)) { /* Unmark the indexes to be dropped. */ row_mysql_lock_data_dictionary(trx); @@ -1125,14 +1131,12 @@ ha_innobase::final_drop_index( } row_mysql_unlock_data_dictionary(trx); goto func_exit; } - trx_set_dict_operation(trx, TRX_DICT_OP_INDEX); - /* Drop indexes marked to be dropped */ row_mysql_lock_data_dictionary(trx); index = dict_table_get_first_index(prebuilt->table); @@ -1159,12 +1163,13 @@ ha_innobase::final_drop_index( dict_table_check_for_dup_indexes(prebuilt->table); #endif row_mysql_unlock_data_dictionary(trx); func_exit: trx_commit_for_mysql(trx); + trx_commit_for_mysql(prebuilt->trx); /* Flush the log to reduce probability that the .frm files and the InnoDB data dictionary get out-of-sync if the user runs with innodb_flush_log_at_trx_commit = 0 */ log_buffer_flush_to_disk(); (18:28:43) Heikki: Let me look (18:29:05) vasil: this is the change inside drop_index(), that is supposed to ""Lock the user table within prebuilt->trx"" (18:29:26) Heikki:   trans_register_ha(user_thd, FALSE, ht); + prebuilt->trx->active_trans = 1; (18:29:34) Heikki: I think the above code should be removed (18:29:53) Heikki: MySQL is not interested in InnoDB's transaction in this case (18:30:33) Heikki: Alternatively, we should use innobase_commit() instead of trx_commit_... (18:31:01) vasil: but there are many places in ::add_index() where it could return before reaching the trx_commit... (18:31:12) vasil: leaving active_traans=1 (18:31:56) Heikki: Does Marko handle the errors with trx_rollback()? (18:32:08) vasil: let me see.. (18:32:30) Heikki: It is risky to leave error handling to MySQL :( (18:32:35) vasil: 651         if (UNIV_UNLIKELY(error)) { 652 err_exit: 653                 mem_heap_free(heap); 654                 trx_general_rollback_for_mysql(trx, FALSE, NULL); 655                 trx_free_for_mysql(trx); 656                 trx_commit_for_mysql(prebuilt->trx); 657                 DBUG_RETURN(error); 658         } (18:32:43) Heikki: Ok (18:33:25) Heikki: Please remove the ha_register... and active_trx =1 .... (18:33:42) Heikki: Then check if it prints something (18:34:08) Heikki: I believe MySQL is not interested in how the engine does the index build (18:34:11) vasil: why remove ha_register? (18:34:28) Heikki: Because there is no transaction visible to MySQL (18:34:53) vasil: the ha_register call was there from before (18:35:09) Heikki: Registers that InnoDB takes part in an SQL statement, so that MySQL knows to roll back the statement if the statement results in an error. This MUST be called for every SQL statement that may be rolled back by MySQL. Calling this several times to register the same statement is allowed, too. (18:36:01) Heikki: Hmm (18:36:17) Heikki: Obviously, MySQL does NOT call commit at the end (18:36:36) Heikki: Because then innobase_commit() would set active_trx=0! (18:37:00) Heikki: Ok, maybe MySQL thinks CREATE INDEX is NOT a transactional statement (18:37:21) Heikki: Then, .._register_.. should be removed (18:37:51) Heikki: It is logical this way. If it also passes test, even better (18:38:21) vasil: ha_registrer in add_index() was added in r1845 and in drop_index() in r2128, let me read the comments.. (18:38:55) vasil: ------------------------------------------------------------------------ r1845 | marko | 2007-09-13 13:31:54 +0300 (Thu, 13 Sep 2007) | 3 lines branches/zip: Move the code related to fast index creation (smart ALTER TABLE) from ha_innodb.cc to a separate module, handler0alter.cc. (18:39:05) Heikki: One thing you must check is that MySQL does write the CREATE INDEX in the binlog, even if we remove the _register_ (18:39:41) Heikki: I assume Marko did not know if MySQL thinks CREATE INDEX is transactional or not (18:39:49) Heikki: He thought it is transactional (18:39:53) vasil: ------------------------------------------------------------------------ r2128 | marko | 2007-11-29 12:34:55 +0200 (Thu, 29 Nov 2007) | 5 lines branches/zip: ha_innobase::final_drop_index(): Allocate a separate transaction for dropping the index trees, and set the dictionary operation flag, similar to what ha_innobase::add_index() does.  This should ensure correct crash recovery. (18:40:10) Heikki: Ok (18:40:17) vasil: how do you know CREATE INDEX is not transactional? (18:40:33) Heikki: You cannot roll it back (18:40:44) vasil: ok (18:41:03) Heikki: MySQL devs probably thought this way (18:44:15) vasil: hmm (18:44:21) vasil: about r1845 (18:45:00) vasil: the comments says ""move the code"" but it is actually ""move and change the code"" (18:45:28) Heikki: Well (18:45:29) vasil: the code that is deleted from ha_innodb is this: (18:45:32) vasil: -       update_thd(ha_thd()); - -       heap = mem_heap_create(1024); - -       /* In case MySQL calls this in the middle of a SELECT query, release -       possible adaptive hash latch to avoid deadlocks of threads. */ -       trx_search_latch_release_if_reserved(check_trx_exists(user_thd)); - -       trx = trx_allocate_for_mysql(); -       trx_start_if_not_started(trx); - -       innobase_register_stmt(ht, user_thd); - -       trx->mysql_thd = user_thd; (18:45:38) vasil: (in add_index) (18:45:48) inaam left the room. (18:45:52) vasil: but the new one in handler0alter is this: (18:46:16) vasil: +       update_thd(ha_thd()); + +       heap = mem_heap_create(1024); + +       /* In case MySQL calls this in the middle of a SELECT query, release +       possible adaptive hash latch to avoid deadlocks of threads. */ +       trx_search_latch_release_if_reserved(check_trx_exists(user_thd)); + +       trx = trx_allocate_for_mysql(); +       trx_start_if_not_started(trx); + +       trans_register_ha(user_thd, FALSE, ht); + +       trx->mysql_thd = user_thd; (18:46:48) vasil: innobase_register_stmt(ht, user_thd); was substituted with trans_register_ha(user_thd, FALSE, ht); during the move (18:46:49) Heikki: I do not see how MySQL could call it in the middle of a SELECT query! (18:46:59) Heikki: Yes (18:47:21) Heikki: Did Marko change innobase_register_stmt() code too? (18:48:05) vasil: not in this commit r1845 (18:48:54) Heikki: Anyway, please test a version where you remove the register thing (18:49:08) vasil: and active_trans=1? (18:49:15) Heikki: Remove that, too (18:49:35) Heikki: innobase_register_stmt( /*===================*/ handlerton*     hton,   /* in: Innobase hton */ THD*    thd)    /* in: MySQL thd (connection) object */ { DBUG_ASSERT(hton == innodb_hton_ptr); /* Register the statement */ trans_register_ha(thd, FALSE, hton); } (18:50:23) Heikki: looks pretty much the same as what Marko has in the later version (18:50:43) vasil: innobase_register_stmt() was added in add_index() in r1584 (18:50:47) vasil: r1584 | marko | 2007-06-18 15:46:42 +0300 (Mon, 18 Jun 2007) | 12 lines branches/zip: ha_innobase::add_index(): Split some assertions. Remove the variable parent_trx. Call innobase_register_stmt() in order to work around a MySQL bug in mysql_alter_table(), which, as of ChangeSet@1.2482.61.2, 2007-06-07 16:37:15+02:00, joerg@trift2. +8 -0 commits the transaction before calling ha_innobase::add_index(). Without re-registering the statement, the ha_commit_stmt(thd) in mysql_alter_table() would not invoke innobase_commit. (18:51:56) Heikki: But it does not seem to invoke it now, because active_trans is left 1! (18:54:15) Heikki: Apparently, there has been confusion also among MySQL devs whether CREATE INDEX is transactional or not (18:54:45) vasil: :-( (18:54:53) Heikki: The most robust way is to handle all commits and rollbacks internally inside InnoDB and not tell MySQL anything about InnoDB's internal transactions (18:55:01) Heikki: That is my idea (18:55:20) Heikki: Then MySQL cannot spoil the logic of the code (18:55:59) vasil: mysql_alter_table() is ~1100 lines (18:56:08) vasil: and you suggest what? (18:56:43) Heikki: I suggest removing the ..._register_... thing and active_trans = 1 (18:57:08) Heikki: Those things tell MySQL that there is a transaction going on (18:57:14) Heikki: Better not to tell (18:57:29) vasil: and possibly ignoring the above comment in r1584, ""Call innobase_register_stmt() in order to work around a MySQL bug in mysql_alter_table()........."" (18:57:32) vasil: ? (18:57:36) Heikki: Yes (18:57:38) vasil: ok (18:57:44) vasil: same for drop_index? (18:57:48) Heikki: Yes (18:58:51) vasil: testing Index: handler/handler0alter.cc =================================================================== --- handler/handler0alter.cc (revision 2498) +++ handler/handler0alter.cc (working copy) @@ -632,14 +632,14 @@ ha_innobase::add_index( /* Create a background transaction for the operations on the data dictionary tables. */ trx = trx_allocate_for_mysql(); trx_start_if_not_started(trx); - trans_register_ha(user_thd, FALSE, ht); - prebuilt->trx->active_trans = 1; + //trans_register_ha(user_thd, FALSE, ht); + //prebuilt->trx->active_trans = 1; trx->mysql_thd = user_thd; trx->mysql_query_str = thd_query(user_thd); innodb_table = indexed_table = dict_table_get(prebuilt->table->name, FALSE); @@ -1081,14 +1081,14 @@ ha_innobase::final_drop_index( /* Create a background transaction for the operations on the data dictionary tables. */ trx = trx_allocate_for_mysql(); trx_start_if_not_started(trx); - trans_register_ha(user_thd, FALSE, ht); - prebuilt->trx->active_trans = 1; + //trans_register_ha(user_thd, FALSE, ht); + //prebuilt->trx->active_trans = 1; trx->mysql_thd = user_thd; trx->mysql_query_str = thd_query(user_thd); /* Flag this transaction as a dictionary operation, so that the data dictionary will be locked in crash recovery. */ (18:59:07) vasil: not warnings (18:59:22) Heikki: Did it create the indexes (18:59:36) vasil: I did test only removing active_trans=1 and it removed the warnings too (18:59:38) vasil: dunno (18:59:54) Heikki: That is the most important thing to check :) (19:00:10) vasil: :) (19:00:38) vasil: it is some mysqltest that is 610 lines (19:00:48) vasil: and it happens at the end (19:01:02) vasil: lets see how may add index statements... (19:01:11) vasil: 0 (19:01:26) Heikki: Mostly I am concerned that MySQL might work wrong without that _register_ thing (19:03:28) vasil: could be (19:03:49) Heikki: You need to check it still calls ::add_index() (19:05:15) vasil: well, the change we made is inside ::add_index() how could it result in mysql stopping to call ::add_index()? (19:05:39) vasil: if it calls it twice... (19:05:43) Heikki: :-D (19:08:34) vasil: I guess it must have created the index, because the test is doing SHOW INDEX after CREATE INDEX and after DROP INDEX (19:08:43) vasil: the test would have failed if the index was not created (19:09:10) Heikki: You need to check that a query using that index will have the right EXPLAIN and result (19:15:04) vasil: this is with the patch: +CREATE TABLE t (a INT) ENGINE=innodb; +CREATE INDEX ti ON t(a); +INSERT INTO t VALUES (1), (2), (3); +EXPLAIN SELECT * FROM t WHERE a=2; +id select_type table type possible_keys key key_len ref rows Extra +1 SIMPLE t ref ti ti 5 const 1 Using where; Using index +SELECT * FROM t WHERE a=2; +a +2 (19:15:15) Heikki: :) (19:15:46) vasil: this is with the original code: +CREATE TABLE t (a INT) ENGINE=innodb; +CREATE INDEX ti ON t(a); +INSERT INTO t VALUES (1), (2), (3); +EXPLAIN SELECT * FROM t WHERE a=2; +id select_type table type possible_keys key key_len ref rows Extra +1 SIMPLE t ref ti ti 5 const 1 Using where; Using index +SELECT * FROM t WHERE a=2; +a +2 (19:15:59) vasil: it is the same (19:16:06) vasil: do you think this is sufficient? (19:16:20) Heikki: No, you need to do some manual tests, too (19:16:28) vasil: this is manual test (19:16:37) Heikki: Several of them (19:16:46) vasil: what should they do? (19:17:13) Heikki: Test tables of different sizes, different indexes (19:17:27) Heikki: CREATE several indexes at a time (19:19:14) Heikki: Dinner time --> --- cut --- Approved by:	Heikki "	63ad8ddbd68757b2a282165efe90c32e63f5b39e
----------------------------
re 36818: rpl_server_id1 fails expecting slave has stopped On a slow environment like valgrind the test is vulnerable because it does not check if slave has stopped at time of the new session is requested `start slave;' -- disabling test till it is fixed. 	0905d04071ec525630b43d0c43bd71dce3846e47
----------------------------
Instruct mysql_upgrade what tmpdir to use 	ce4b99857bf432da85a55fb456eea1cda9cbd452
----------------------------
Bug#30087 Set query_cache_size, if the value is too small, get a unclear warning This bugs clarifies a warning message issued when the query cache data size becomes smaller than the minium allowed size. 	71be65dd114d0a2bd914bcdb1879015fd76ba2b4
----------------------------
"Bug #37472  	--log-slave-updates=0 will result in some data in the binlog - if no rows in the transaction against the binlog, rollback, instead of commit "	2c05a64a612485860f3a133e65bd11acd3f95f59
----------------------------
Bug#35931 Index search of partitioned MyISAM table returns erroneous results Used the wrong function when fixing 30480 which lead to no stop on end_key resulting in duplicate results from index scan Includes test cases for the duplicates 37327 and 37329, Duplicate rows and bad performance/High Handler_read_next values Recommit after merge issues 	3345a71545317772af702a86b5f6d97b7ecf08a4
----------------------------
Created the 5.1 Storage Engine API tree Changed the tree default configuration 	11ad668b05a746b5155e5503f34b300e70ecf9b0
----------------------------
Use skip-federated by default in all example configs. 	2244456ddf632aef6a8452d8063ab1480da3e321
----------------------------
"Add member variable m_name to each Session and initialize it with <hostname>:<port> when client connects If parse of client command fails, return an error message to the client as well as log it to eventlog using ""debug"", so this output can be turned on when necessary "	f457dc0d8cf2704d031ce243f5ebffc4937b36d5
----------------------------
"Make sure to reflect that the argument to 'getConfig' is not a member variable - rename ""m_handle_arg"" to ""mgm_handle"" "	9a62b8957f204549623df0d51aba373c2b44db86
----------------------------
Bug#31210: INSERT DELAYED crashes server when used on partitioned tables post push patch push build found tree failing test when using: --ps-protocol --mysqld=--binlog-format=row Changed to the new error message. 	77e54c03ac401e7477b2a4ab7831c44f51aebe27
----------------------------
"branches/zip: Merge 2437:2485 from branches/5.1: (r2478 was skipped for the obvious reason) ------------------------------------------------------------------------ r2464 | vasil | 2008-05-19 17:59:42 +0300 (Mon, 19 May 2008) | 9 lines branches/5.1: Fix Bug#36600 SHOW STATUS takes a lot of CPU in buf_get_latched_pages_number by removing the Innodb_buffer_pool_pages_latched variable from SHOW STATUS output in non-UNIV_DEBUG compilation. Approved by:	Heikki ------------------------------------------------------------------------ r2466 | calvin | 2008-05-20 01:37:14 +0300 (Tue, 20 May 2008) | 12 lines branches/5.1: Fix Bug#11894 innodb_file_per_table crashes w/ Windows .sym symbolic link hack The crash was due to un-handled error 3 (path not found). In the case of file per table, change the call to os_file_handle_error_no_exit() from os_file_handle_error(). Also, checks for full path pattern during table create (Windows only), which is used in symbolic link and temp table creation. Approved by:	Heikki ------------------------------------------------------------------------ r2478 | sunny | 2008-05-23 08:29:08 +0300 (Fri, 23 May 2008) | 3 lines branches/5.1: Fix for bug# 36793. This is a back port from branches/zip. This code has been tested on a big-endian machine too. ------------------------------------------------------------------------ r2480 | vasil | 2008-05-27 11:40:07 +0300 (Tue, 27 May 2008) | 11 lines branches/5.1: Fix Bug#36819 ut_usectime does not handle errors from gettimeofday by retrying gettimeofday() several times if it fails in ut_usectime(). If it fails on all calls then return error to the caller to be handled at higher level. Update the variable innodb_row_lock_time_max in SHOW STATUS output only if ut_usectime() was successful. ------------------------------------------------------------------------ r2482 | sunny | 2008-05-28 12:18:35 +0300 (Wed, 28 May 2008) | 5 lines branches/5.1: Fix for Bug#35602, ""Failed to read auto-increment value from storage engine"". The test for REPLACE was an error of ommission since it's classified as a simple INSERT. For REPLACE statements we don't acquire the special AUTOINC lock for AUTOINC_NEW_STYLE_LOCKING with this fix. ------------------------------------------------------------------------ r2485 | vasil | 2008-05-28 16:01:14 +0300 (Wed, 28 May 2008) | 9 lines branches/5.1: Fix Bug#36149 Read buffer overflow in srv0start.c found during ""make test"" Use strncmp(3) instead of memcmp(3) to avoid reading past end of the string if it is empty (*str == '\0'). This bug is _not_ a buffer overflow. Discussed with:	Sunny (via IM) ------------------------------------------------------------------------ "	b21c94dc01e70dbef2420269e7a61962066825db
----------------------------
Fix embedded variant of slave_allow_batching 	b07947fddd7ac915f0d8296cac3acb089a735165
----------------------------
Fix red pushbuild for mysql-5.1-telco-6.2-merge Modify and activate MySQLD slave_allow_batching variable testcase 	69c6e12096ba3968cdfb1432a2be3f4cd4b4cb66
----------------------------
Reserve config numbers for telco-6.4 push. 	a7e1fdf7a411f089c84669ece5a3922efdf5476f
----------------------------
Bug#36692 Query cache only works with cluster if AUTOCOMMIT is active - Allow results to be taken out of the query cache as long as current transaction hasn't changed the table. 	371f4ae9dd978e6a2393d6ea8db294a2d3b41a26
----------------------------
branches/5.1: Fix Bug#36819 ut_usectime does not handle errors from gettimeofday by retrying gettimeofday() several times if it fails in ut_usectime(). If it fails on all calls then return error to the caller to be handled at higher level. Update the variable innodb_row_lock_time_max in SHOW STATUS output only if ut_usectime() was successful. 	ef5a2777eee11a92f9855ee43e2c630002c835fa
----------------------------
Merge: fdd075d fdd075d Bug#32966 main.status fails The failing test case is depending on unnecessary status variable output which changes based on build configuration. By reducing the output the test becomes more stable. 	e840c86e9bbaa4f0b43fe90d0ad604df3d7bf995
----------------------------
"A number of fixes after a merge from the main 5.1 tree: the local tree contains a fix for Bug#32748 ""Inconsistent handling of assignments to general_log_file/slow_query_log_file"", which changes output of a number of tests. "	87a75bdf30144ef338729100d08344aa01d081ad
----------------------------
Bug#36818: rpl_server_id1 fails expecting slave has stopped The test is vulnerable because it does not check if slave has stopped at time of the new session is requested `start slave;' Fixed with deploying explicitly wait_for_slave_to_stop synchronization macro. 	fdd075d0e11755ba75f2942433caa33d1d2b48fe
----------------------------
"branches/5.1: Fix Bug#11894 innodb_file_per_table crashes w/ Windows .sym symbolic link hack The crash was due to un-handled error 3 (path not found). In the case of file per table, change the call to os_file_handle_error_no_exit() from os_file_handle_error(). Also, checks for full path pattern during table create (Windows only), which is used in symbolic link and temp table creation. Approved by:	Heikki "	05f84037e78f3948d828943051e7d1520143965f
----------------------------
"branches/5.1: Fix Bug#36600 SHOW STATUS takes a lot of CPU in buf_get_latched_pages_number by removing the Innodb_buffer_pool_pages_latched variable from SHOW STATUS output in non-UNIV_DEBUG compilation. Approved by:	Heikki "	461cc69ce7e9445f50ab26c6b8bebf19012ea123
----------------------------
Fixed bug#36676: multiupdate using LEFT JOIN updates only first row or fails with an error: ERROR 1022 (23000): Can't write; duplicate key in table '' The server uses intermediate temporary table to store updated row data.  The first column of this table contains rowid. Current server implementation doesn't reset NULL flag of that column even if the server fills a column with rowid. To keep each rowid unique, there is an unique index. An insertion into an unique index takes into account NULL flag of key value and ignores real data if NULL flag is set. So, insertion of actually different rowids may lead to two kind of problems.  Visible effect of each of these problems depends on an initial engine type of temporary table: 1. If multiupdate initially creates temporary table as a MyISAM table (a table contains blob columns, and the create_tmp_table function assumes, that this table is large), it inserts only one single row and updates only rows with one corresponding rowid. Other rows are silently ignored. 2. If multiupdate initially creates MEMORY temporary table, fills it with data and reaches size limit for MEMORY tables (max_heap_table_size), multiupdate converts MEMORY table into MyISAM table and fails with an error: ERROR 1022 (23000): Can't write; duplicate key in table '' Multiupdate has been fixed to update the NULL flag of temporary table rowid columns. 	2459d3a9ad771648f7682d2371fd9969bff3f541
----------------------------
Bug #36705 key_buffer_size of >= 2G allocates all availabel virtual memory on 64-bit wondo. temporary variables of 'long' types were used to store ulong values, that causes init_key_cache to receive distorted parameters 	f9d183b5dc8b414948b20296ff1f754bdcad5943
----------------------------
Fixes to make rpl_insert_id pass in 5.1-bugteam. 	438f2cff3c1ced48ae1cd9e00cf25159eea6a264
----------------------------
Merge: 746905d 365dbaa Merge riska.(none):/home/sven/bkroot/5.1-bugteam into  riska.(none):/home/sven/bk/b36433-rpl_insert_id/5.1-bugteam 	1e886dad164704132525ce238eae29fa57ee6759
----------------------------
BUG#36433: rpl_insert_id detects inconsistency on master Problem: If INSERT is immediately followed by SELECT in another thread, the newly inserted rows may not be returned by the SELECT statement, if ENGINE=myisam and @@concurrent_insert=1. This caused sporadic errors in rpl_insert_id. Fix: The test now uses ENGINE=$engine_type when creating tables (so that innodb is used). It also turns off @@concurrent_insert around the critical place, so that it works if someone in the future writes a test that sets $engine_type=myisam before sourcing extra/rpl_tests/rpl_insert_id.test. It also adds ORDER BY to all SELECTs so that the result is deterministic. 	365dbaab219d3e15af64c2b7bbf25622f4fd2df8
----------------------------
Disable thread_cache_size_func as reported in bug 36733 	80c7d949e3707e4e651c3a09591fa04fc15884b0
----------------------------
"revert the following CS on grounds of ""right patch, wrong time"": ""Apply InnoDB snapshot innodb-5.1-ss2438. Addresses the following bugs: Change the fix for Bug#32440 to show bytes instead of kilobytes in INFORMATION_SCHEMA.TABLES.DATA_FREE. branches/5.1: Fix bug#29507 TRUNCATE shows to many rows effected In InnoDB, the row count is only a rough estimate used by SQL optimization. InnoDB is now return row count 0 for TRUNCATE operation. branches/5.1: Fix bug#35537 - Innodb doesn't increment handler_update and handler_delete Add the calls to ha_statistic_increment() in ha_innobase::delete_row() and ha_innobase::update_row(). Fix Bug#36169 create innodb compressed table with too large row size crash Sometimes it is possible that row_drop_table_for_mysql(index->table_name, trx, FALSE); is invoked in row_create_index_for_mysql() when the index object is freed so copy the table name to a safe place beforehand and use the copy. Fix Bug#36434 ha_innodb.so is installed in the wrong directory Change pkglib_LTLIBRARIES with pkgplugin_LTLIBRARIES which has been forgotten in this commit: http://lists.mysql.com/commits/40206"" "	71fdcc349c513e8343d561142624639d32a75c78
----------------------------
disabled.def: max_heap_table_size_basic_32, query_cache_size_basic_32 and tmp_table_size_basic_32 tests have been disabled according to bug #36522. 	d558fcbd0072ab743b524cee74c992cde262b7fa
----------------------------
BUG#36197: flush tables (or little table cache) can cause crash on slave When flushing tables, there were a slight chance that the flush was occuring between processing of two table map events. Since the tables are opened one by one, it might result in that the tables were not valid and that sub- sequent locking of tables would cause the slave to crash. The problem is solved by opening and locking all tables at once using simple_open_n_lock_tables(). Also, the patch contain a change to open_tables() so that pre-locking only takes place when the trg_event_map is not zero, which was not the case before (this caused the lock to be placed in thd->locked_tables instead of thd->lock since the assumption was that triggers would be called later and therefore the tables should be pre-locked). 	812fa8b24c6c8cec1209409d1b18c122ae2b776b
----------------------------
Apply InnoDB snapshot innodb-5.1-ss2438. Addresses the following bugs: Change the fix for Bug#32440 to show bytes instead of kilobytes in INFORMATION_SCHEMA.TABLES.DATA_FREE. branches/5.1: Fix bug#29507 TRUNCATE shows to many rows effected In InnoDB, the row count is only a rough estimate used by SQL optimization. InnoDB is now return row count 0 for TRUNCATE operation. branches/5.1: Fix bug#35537 - Innodb doesn't increment handler_update and handler_delete Add the calls to ha_statistic_increment() in ha_innobase::delete_row() and ha_innobase::update_row(). Fix Bug#36169 create innodb compressed table with too large row size crashed Sometimes it is possible that row_drop_table_for_mysql(index->table_name, trx, FALSE); is invoked in row_create_index_for_mysql() when the index object is freed so copy the table name to a safe place beforehand and use the copy. Fix Bug#36434 ha_innodb.so is installed in the wrong directory Change pkglib_LTLIBRARIES with pkgplugin_LTLIBRARIES which has been forgotten in this commit: http://lists.mysql.com/commits/40206 	5bdd04bffa920aa2447a549b75b569c19a1a59ec
----------------------------
ndb - bug#36537 Dont remove socket from epoll-set at all (since there can be a race) given the linux-kernel automatically removes it when it's closed. 	bb2b0eef6a5d49a7af05e3be5eeee112bf022270
----------------------------
Re-enable test case thread_cache_size_func as Bug 35988 has been fixed and closed. 	e00347187451f02ec84d5bfeb72fadc7a68f4675
----------------------------
Generate a unique tmpdir for each server to avoid that they delete each others temporary files at start up - see 'mysql_rm_tmp_tables' 	c45e9ff746701fac7f7de5dbc8b1eff3c2961367
----------------------------
"branches/zip: Implement the system tablespace tagging described on the wiki: https://svn.innodb.com/innobase/InnoDB_version_and_feature_compatibility A brief description of the changes: * The file format tag will be saved in the trx system page, starting at (UNIV_PAGE_SIZE - 16) for 8 bytes. * The configuration parameter innodb_file_format_check is introduced. This variable can be set to on/off and any of the supported file formats in the configuration file, but can only be set to any of the supported file formats during runtime. The default is on. * During table create/open, check the current file format against the max in file_format_max. If the current file format is newer, update file_format_max and tag the system tablespace with the newer one in a normal mtr. * During startup, write the tag to the error log and check it against DICT_TF_FORMAT_MAX. Refuse to start with error, if -- DICT_TF_FORMAT_MAX < the tag, and -- innodb_file_format_check is ON Print out a warning , if -- DICT_TF_FORMAT_MAX < the tag, but -- innodb_file_format_check is off * The system tablespace tag is re-settable using: set innodb_file_format_check = <file_format> Approved by:	Sunny "	fc02f76d78f01669fc96a947065a86b47e5840b3
----------------------------
"branches/zip: Add InnoDB version in these places: * In INFORMATION_SCHEMA.PLUGINS.PLUGIN_VERSION, only 1.2 out of 1.2.3 because MySQL supports only one dot there * At startup: ""080501 12:28:06 InnoDB Plugin 1.0.1 started; log sequence number 46509"" * In a server variable innodb_version; mysql> select @@innodb_version; +------------------+ | @@innodb_version | +------------------+ | 1.0.1            | +------------------+ Approved by:	Sunny "	3bad6e25114a88e48b69d0eb524c16f8afbb99eb
----------------------------
Bug#36469 mysql_upgrade does not use --tmpdir 	e549ba80679e90b4b518e513a22004d4008d8381
----------------------------
Bug#36465 mysqltest should always use the --tmpdir 	c1918b0464dcc4bc82cc1207b3a9189d3e7e2139
----------------------------
Use the deignated tmpdir if it exists 	3e18c89fdb4c2d51eaf245c4569ede1debe842de
----------------------------
"branches/zip: Merge 2423:2437 from branches/5.1: ------------------------------------------------------------------------ r2429 | vasil | 2008-04-30 11:19:06 +0300 (Wed, 30 Apr 2008) | 10 lines branches/5.1: * Use INNODB_CFLAGS insead of cluttering CFLAGS with InnoDB specific flags. CFLAGS are used to compile every file in the MySQL source tree. * Add INNODB_DYNAMIC_CFLAGS to the flags of the dynamic plugin and use -prefer-non-pic to make the dynamic plugin faster on i386. Approved by:	Sunny ------------------------------------------------------------------------ r2430 | vasil | 2008-04-30 11:48:35 +0300 (Wed, 30 Apr 2008) | 8 lines branches/5.1: Use CFLAGS instead of INNODB_CFLAGS to avoid having incompatible flags inserted in CFLAGS and INNODB_CFLAGS and to avoid compiling mysql and innodb with different flags. Discussed with:	Sunny ------------------------------------------------------------------------ r2431 | vasil | 2008-04-30 11:54:49 +0300 (Wed, 30 Apr 2008) | 4 lines branches/5.1: Fix r2430, it should be CFLAGS=""$CFLAGS ..."" not CFLAGS=""..."" ------------------------------------------------------------------------ r2432 | vasil | 2008-04-30 11:58:38 +0300 (Wed, 30 Apr 2008) | 4 lines branches/5.1: Non-functional change: use tabs for indentation in plug.in. ------------------------------------------------------------------------ r2433 | vasil | 2008-04-30 12:02:35 +0300 (Wed, 30 Apr 2008) | 5 lines branches/5.1: Add vim modeline to hint it that plug.in is a config file so it can be colorized. ------------------------------------------------------------------------ r2434 | vasil | 2008-04-30 18:45:44 +0300 (Wed, 30 Apr 2008) | 17 lines branches/5.1: Merge changes from MySQL: ChangeSet@1.2645, 2007-12-19 13:24:43+00:00, jperkin@chorlton.adsl.perkin.org.uk +14 -0 Add new pkgplugindir handling to seperate plugins from libraries, and allow override for binary distributions.  Extend mysql_config to print compiled-in plugin location for third-party plugins to use.  Resolves bug#31736. and ChangeSet@1.2646, 2008-01-02 13:00:46+00:00, jperkin@chorlton.adsl.perkin.org.uk +11 -0 Use pkglibdir to simplify pkgplugindir, and fix the path in a couple of Makefiles.  Continuation of the fix for bug#31736. ------------------------------------------------------------------------ r2435 | vasil | 2008-04-30 19:04:36 +0300 (Wed, 30 Apr 2008) | 10 lines branches/5.1: Merge change from MySQL: ChangeSet@1.2563, 2008-03-18 19:42:04+04:00, gluh@mysql.com +1 -0 Bug#35406 5.1-opt crashes on select from I_S.REFERENTIAL_CONSTRAINTS added intialization of f_key_info.referenced_key_name for the case when referenced table is dropped ------------------------------------------------------------------------ r2436 | vasil | 2008-04-30 19:15:46 +0300 (Wed, 30 Apr 2008) | 7 lines branches/5.1: Non-functional white space change in Makefile.am: Use tabs for indentation and be consistent about spaces around the equal sign. ------------------------------------------------------------------------ r2437 | vasil | 2008-04-30 20:36:11 +0300 (Wed, 30 Apr 2008) | 8 lines branches/5.1: Fix Bug#36434 ha_innodb.so is installed in the wrong directory Change pkglib_LTLIBRARIES with pkgplugin_LTLIBRARIES which has been forgotten in this commit: http://lists.mysql.com/commits/40206 ------------------------------------------------------------------------ "	9dd184effec68456b83628f8422e1c3b1bfe6c84
----------------------------
the query_cache_wlock_invalidate_func fails due to bug 35390 and is therefore disabled. 	890eed08d901287429dcd29549b2720268c8fec9
----------------------------
branches/5.1: Merge changes from MySQL: ChangeSet@1.2645, 2007-12-19 13:24:43+00:00, jperkin@chorlton.adsl.perkin.org.uk +14 -0 Add new pkgplugindir handling to seperate plugins from libraries, and allow override for binary distributions.  Extend mysql_config to print compiled-in plugin location for third-party plugins to use.  Resolves bug#31736. and ChangeSet@1.2646, 2008-01-02 13:00:46+00:00, jperkin@chorlton.adsl.perkin.org.uk +11 -0 Use pkglibdir to simplify pkgplugindir, and fix the path in a couple of Makefiles.  Continuation of the fix for bug#31736. 	7a9313e5b328d79e04d9bd0b293f4c6563642879
----------------------------
Bug#35788 A few tests fail due to concurrent inserts The problem is that since MyISAM's concurrent_insert is on by default some concurrent SELECT statements might not see changes made by INSERT statements in other connections, even if the INSERT statement has returned. The solution is to disable concurrent_insert so that INSERT statements returns after the data is actually visible to other statements. 	2bf61233fa78ef83bf581bc3a2024ea2c3ed5343
----------------------------
branches/5.1: Add vim modeline to hint it that plug.in is a config file so it can be colorized. 	9a2b24e7ea495fb5df48afd39c521a0796276212
----------------------------
"branches/zip: Merge 2384:2423 from branches/5.1: ------------------------------------------------------------------------ r2386 | vasil | 2008-03-27 07:45:02 +0200 (Thu, 27 Mar 2008) | 22 lines branches/5.1: Merge change from MySQL (this fixes the failing innodb test): ChangeSet@1.1810.3601.4, 2008-02-07 02:33:21+04:00, gshchepa@host.loc +9 -0 Fixed bug#30059. Server handles truncation for assignment of too-long values into CHAR/VARCHAR/TEXT columns in a different ways when the truncated characters are spaces: 1. CHAR(N) columns silently ignore end-space truncation; 2. TEXT columns post a truncation warning/error in the non-strict/strict mode. 3. VARCHAR columns always post a truncation note in any mode. Space truncation processing has been synchronised over CHAR/VARCHAR/TEXT columns: current behavior of VARCHAR columns has been propagated as standard. Binary-encoded string/BLOB columns are not affected. ------------------------------------------------------------------------ r2387 | vasil | 2008-03-27 08:49:05 +0200 (Thu, 27 Mar 2008) | 8 lines branches/5.1: Check whether *trx->mysql_query_str is != NULL in addition to trx->mysql_query_str. This adds more safety. This may or may not fix Bug#35226 RBR event crashes slave. ------------------------------------------------------------------------ r2388 | vasil | 2008-03-27 14:02:34 +0200 (Thu, 27 Mar 2008) | 7 lines branches/5.1: Swap the order in which mysql_thd, mysql_query_str and *mysql_query_str are checked for non-NULL. Suggested by:	Marko ------------------------------------------------------------------------ r2419 | vasil | 2008-04-23 19:08:06 +0300 (Wed, 23 Apr 2008) | 9 lines branches/5.1: Change the fix for Bug#32440 to show bytes instead of kilobytes in INFORMATION_SCHEMA.TABLES.DATA_FREE. Suggested by:	Domas Mituzas <domas@mysql.com> Approved by:	Heikki ------------------------------------------------------------------------ r2420 | calvin | 2008-04-24 15:25:30 +0300 (Thu, 24 Apr 2008) | 4 lines branches/5.1: Fix bug#29507 TRUNCATE shows to many rows effected In InnoDB, the row count is only a rough estimate used by SQL optimization. InnoDB is now return row count 0 for TRUNCATE operation. ------------------------------------------------------------------------ r2421 | calvin | 2008-04-24 15:32:30 +0300 (Thu, 24 Apr 2008) | 6 lines branches/5.1: Fix bug#35537 - Innodb doesn't increment handler_update and handler_delete Add the calls to ha_statistic_increment() in ha_innobase::delete_row() and ha_innobase::update_row(). ------------------------------------------------------------------------ r2422 | vasil | 2008-04-24 16:00:30 +0300 (Thu, 24 Apr 2008) | 11 lines branches/5.1: Fix Bug#36169 create innodb compressed table with too large row size crashed Sometimes it is possible that row_drop_table_for_mysql(index->table_name, trx, FALSE); is invoked in row_create_index_for_mysql() when the index object is freed so copy the table name to a safe place beforehand and use the copy. Approved by:	Sunny ------------------------------------------------------------------------ "	55db138b953c13b1246a0c9bc69321dd283ef5b8
----------------------------
Don't append thread num to $opt_tmpdir is var/tmp Remove .err and .result files produced by check-testcase and check-warnings 	a0f393d66024335e50507ff39a7883d541e92086
----------------------------
"Only run the ""saved core limit"" if the datadir was saved "	f201478cb7f10973acc193a0833a78c720ef1e18
----------------------------
Move code that saves datadirs to test server Remove mtr_report_test_failed 	4f9409c8353aec715ec9ebd51951207c5d55cc4d
----------------------------
Save datadir in case of test failure, but limit the number of times datadir can be saved in case of constantly failing servers Remove datadirs each time all servers have been stopped thus limiting the size of vardir. The datadirs of failed tests have been saved and that should be enough to diagnose any failures 	3f48a30625b4f3bf7e2a21b78dc2c0f0ef1c1fb8
----------------------------
WL#3754 Fix for mtr, added support personal configuration for test cases 	59c15c6730e90816a740a7518142879cd9305abc
----------------------------
"Add ""match end of string"" marker so that only ""cluster_config.xxx"" are found "	d8b5c50e6b49803ed9ec595fb1669650d0586125
----------------------------
Make it possible to specify test specifi config file as <testname>.cnf 	4a490373a2ebca46b58d16f7c72a024cb4132d09
----------------------------
Be more prcise in which cluster_config sections should be expanded. Ie don't treat cluster_config.mysqld.1.1 as a section specifying a cluster 	99a5c22d1193ae2c69ba2f0388a225825cfeae75
----------------------------
If more than one parallel run, use a subdir of the selected tmpdir 	13461e33d590fefa3bb3cb911a225276e1cb37cf
----------------------------
Allow 2002 as a valid error for connect fails. It's common on windows where we don't use Unix domin sockets for connection to server 	c6aca99321ae5a20cd5003e0fdab769ec604c1b4
----------------------------
branches/5.1: Fix bug#35537 - Innodb doesn't increment handler_update and handler_delete Add the calls to ha_statistic_increment() in ha_innobase::delete_row() and ha_innobase::update_row(). 	ed668cc164120c8f8d9a7def8d052aeefbcde7a3
----------------------------
Many files: [Changes done by mleich] Fix for Bug#35335 funcs_1: Some tests fail within load_file during pushbuild runs Solution: 1. Move files with input data used in load_file, load data etc. from suite/funcs_1/<whatever> to std_data 2. Use for testsuite funcs_1 the server option --secure-file-priv=<MYSQLTEST_VARDIR> 3. Outfiles have to be stored under MYSQLTEST_VARDIR + changes according to WL#4304 Cleanup in funcs_1 tests - backport of fixes/improvements made in 5.1 to 5.0 The differences between scripts in 5.0 and 5.1 cause much additional and annoying work during any upmerge. - replace error numbers with names - improved comments - improved formatting - Unify storage engine names so that result files for storage engine variants do not differ (some tests) - remove a script no more used (tests are done in other scripts) 	3cf72be632d974a1401d09deeeb732df4d97f0a8
----------------------------
Don't symlink var/tmp to $opt_tmpdir Just treat var/tmp and $opt_tmndir that might be different or same. 	3f9adfb812293f26f49f3e5881231295d7051ce4
----------------------------
Fixed bug #35993: memory corruption and crash with multibyte conversion. Grouping or ordering of long values in not indexed BLOB/TEXT columns with GBK or BIG5 charsets crashes the server. MySQL server uses sorting (the filesort procedure) in the temporary table to evaluate the GROUP BY clause in case of lack of suitable index. That procedure takes into account only first @max_sort_length bytes (system variable, usually 1024) of TEXT/BLOB sorting key string. The my_strnxfrm_gbk and my_strnxfrm_big5 fill temporary keys with data of whole blob length instead of @max_sort_length bytes length. That buffer overrun has been fixed. 	9028d2e43668686d0dfa1678c2b0a48890dde01b
----------------------------
Always return 0 inidcating that socket path would not be truncated when running on windows. Apparently Cygwin tries to emulate UNIX Socket and thus fails to create one. 	113dd00d4271bb2b141ce5c1feae41b0f12383a2
----------------------------
"Since IO::Socket::UNIX is part of core perl, it's not enough to ""eval use"" it. Instead trap the error that occurs when creating the socket on platforms that does not support it. "	23f462137eb84de6335c0cbd6caccbfcb82a0520
----------------------------
Move the check for socket path truncation to after the tmpdir has been created since it's used by the check 	5a0ae425c672ec47aea4620e21da82fb69a120b3
----------------------------
Add check for unix socket path truncation Don't allow unix socket path to be truncated 	761b355d0e32c4b3fc87857fa8a8b936f50467cc
----------------------------
"branches/zip: Implementation of using animal names for innodb_file_format, described in Mantis#30. Specifically: - Allow innodb_file_format to take string arguments - Make innodb_file_format system variable a string instead of a number - Implement the callback functions - Update warning messages Three new functions are implemented: file_format_name_lookup(): Validate the file format name and return its corresponding id. innodb_file_format_check(): Check if it is a valid file format. This function is registered as a callback with MySQL. innodb_file_format_update(): Update the global variable using the ""saved"" value. This functions is registered as a callback with MySQL. "	e978b4a2352b707fd1f0c3b50c863879b6893bf6
----------------------------
branches/zip: Handle rename of variables. If the statically linked in engine has a config variable that has since been renamed, we use a mapping table to check for matches. 	0f9b25232650d6bacca8addad528156f1cfaa5f5
----------------------------
branches/zip: Add an additional target architecture parameter to make_binary_release.sh which is passed to dynconfig. If the target architecture is i[3456]86 then we disable the --with-pic flag. 	4ab3c46b3f33a8e9e387d0464a72444f06593a79
----------------------------
Fix not_embedded_server to check if the value of com_select changed regardless of it's current value 	eee737d8235326080ab43976beab9c5e74ac8513
----------------------------
branches/zip: Introduced a new session level config param innodb_strict_mode. If it is set we do extra checking at time of table creation and fail if any invalid combination of KEY_BLOCK_SIZE or ROW_FORMAT is specified. Reviewed by: Sunny 	8bbb6142d930aa03d2995a8ffe9044bf8188effa
----------------------------
"Makefile.am: Add ChangeLog if it exists - Removed separate 'normal+rowrepl' test run, not needed any longer - Removed separate 'rpl' test run, included in main test run already - Renamed some test ""comments"", to use similar naming style - Limited one of the Cluster test runs to 'ndb' and 'rpl_ndb' suites - Reordered test runs, to be aligned with Windows test runs mysql.spec.sh: - No longer including the ""Example"" storage engine - Added to configure ""--without-ENGINE"" if not to compile engine as plugin "	9b6ac078f68061175cdfea7c43385c989e164697
----------------------------
Remove faulty underscore in --defaults-group-suffix for mysqldump 	15d2940fe107b7cdbe81481aa0bab1fd05fa33f4
----------------------------
Fix for bug #35732: read-only blocks SELECT statements in InnoDB Problem: SELECTs prohibited for a transactional SE in autocommit mode if read_only is set. Fix: allow them. 	5397f8c90d6a9fdc38278384bb1d3c695d99d5d3
----------------------------
Bug#35824: mysql_upgrade does not fix scheduler tables when upgrading from 5.1.23 to 5.1.24 The problem is that when upgrading the event table, the sql_mode column was always being added instead of being updated to list new sql_mode values, causing upgrades of the event which already have a sql_mode column to not be updated to the new sql_mode values. The solution is to always add first a stub sql_mode column and subsequently update the column to the new sql_mode values. 	5d725bfdf8b90dd0fe65d68e8c2991850d283ce7
----------------------------
Fix paths MYSQLTEST_VARDIR/master-data -> MYSQLD_DATADIR 	cea71680eb4821270b82a46d8537e8d3e5ac34da
----------------------------
Bug#32653. Added --log-slave-updates because test requires it. The events based on LOAD DATA INFILE masked by --replace_regex instead restarting of slave. Added waiting start and stop of slave after START|STOP SLAVE statements. 	b1dafe5efec012a5c18f7e96b4e68aba8340bd2e
----------------------------
"BUG#34541: mysqlbinlog prints 'set;' in stm mode after changing autocommit mode Problem: a typo in the code. When autocommit, foreign_key_checks, sql_auto_is_null, or unique_checks changes, it prints ""SET"", and then a comma-separated list of assignments. However, it does not print the assignment to the @@autocommit variable. Fix: print the @@autocommit variable. "	0a4d373f3d44c898a794188f58cdd96233d63805
----------------------------
Fix for Bug#35335 funcs_1: Some tests fail within load_file during pushbuild runs Solution: 1. Move files with input data used in load_file, load data etc. from suite/funcs_1/<whatever> to std_data 2. Use for testsuite funcs_1 the server option --secure-file-priv=<MYSQLTEST_VARDIR> 3. Outfiles have to be stored under MYSQLTEST_VARDIR + changes according to WL#4304 Cleanup in funcs_1 tests - backport of fixes/improvements made in 5.1 to 5.0 The differences between scripts in 5.0 and 5.1 cause much additional and annoying work during any upmerge. - replace error numbers with names - improved comments - improved formatting - Unify storage engine names so that result files for storage engine variants do not differ (some tests) - remove a script no more used (tests are done in other scripts) 	89ddc0aa52bf1c6b2ec6ca1394b98d3b0c14c5ec
----------------------------
Fix for Bug#32748: Inconsistent handling of assignments to general_log_file/slow_query_log_file. The problem was that log file path was rejected if directory path was empty. The fix is to reject log file path only if it is entirely empty. 	73345d0fbdffb5f22d3610bcda40b03dad7d62bc
----------------------------
"A patch for Bug#34820: log_output can be set to illegal value. We have ""set"" variables, which can accept empty values (like sql_mode), and which can not (like log_output). The problem was that the code does not distinguish them and allow empty values for every set variable. The fix is to introduce an attribute of a set variable telling whether it can accept empty values. "	d02459cbae885aea96d88173b55b8efc9a1f5f88
----------------------------
"BUG#29020 (Event results not correctly replicated to slave in RBR): The bug allow multiple executing transactions working with non-transactional to interfere with each others by interleaving the events of different trans- actions. Bug is fixed by writing non-transactional events to the transaction cache and flushing the cache to the binary log at statement commit. To mimic the behavior of normal statement-based replication, we flush the transaction cache in row- based mode when there is no committed statements in the transaction cache, which means we are committing the first one. This means that it will be written to the binary log as a ""mini-transaction"" with just the rows for the statement. Note that the changes here does not take effect when building the server with HAVE_TRANSACTIONS set to false, but it is not clear if this was possible before this patch either. For row-based logging, we also have that when AUTOCOMMIT=1, the code now always generates a BEGIN/COMMIT pair for single statements, or BEGIN/ROLLBACK pair in the case of non-transactional changes in a statement that was rolled back. Note that for the case where changes to a non-transactional table causes a rollback due to error, the statement will now be logged with a BEGIN/ROLLBACK pair, even though some changes has been committed to the non-transactional table. "	c8c4500a980a32607d9186a6b6e176650ee686ba
----------------------------
Bug#35272: @@global.key_buffer_size = 4294967295 let the server crash reverting test that has been obsoleted by changes to the code 	7c447021212bf3ef92c7c915a7d2236b1f7b291f
----------------------------
"apply snapshot innodb-5.1-ss2387 ------------------------------------------------------------------------ r2361 | sunny | 2008-03-12 09:08:09 +0200 (Wed, 12 Mar 2008) | 3 lines Changed paths: M /branches/5.1/include/srv0srv.h M /branches/5.1/os/os0file.c M /branches/5.1/srv/srv0srv.c M /branches/5.1/srv/srv0start.c branches/5.1: Remove the innodb_flush_method fdatasync option since it was not being used and there was a potential it could mislead users. ------------------------------------------------------------------------ r2367 | marko | 2008-03-17 10:23:03 +0200 (Mon, 17 Mar 2008) | 5 lines Changed paths: M /branches/5.1/handler/ha_innodb.cc branches/5.1: ha_innobase::check_if_incompatible_data(): Check HA_CREATE_USED_ROW_FORMAT before comparing row_type.  Previously, the comparison was incorrectly guarded by the presence of an AUTO_INCREMENT attribute. ------------------------------------------------------------------------ r2374 | vasil | 2008-03-18 09:35:30 +0200 (Tue, 18 Mar 2008) | 11 lines Changed paths: M /branches/5.1/dict/dict0dict.c A /branches/5.1/mysql-test/innodb_bug35220.result A /branches/5.1/mysql-test/innodb_bug35220.test branches/5.1: Fix Bug#35220 ALTER TABLE too picky on reserved word ""foreign"". In ALTER TABLE, change the internal parser to search for ``FOREIGN[[:space:]]'' instead of only ``FOREIGN'' when parsing ALTER TABLE ... DROP FOREIGN KEY ...; otherwise it could be mistaken with ALTER TABLE ... DROP foreign_col; Approved by:    Heikki ------------------------------------------------------------------------ r2379 | vasil | 2008-03-19 18:48:00 +0200 (Wed, 19 Mar 2008) | 10 lines Changed paths: M /branches/5.1/os/os0file.c branches/5.1: Fix Bug#34823: fsync() occasionally returns ENOLCK and causes InnoDB to restart mysqld Create a wrapper to fsync(2) that retries the operation if the error is ENOLCK. Use that wrapper instead of fsync(2). Approved by:    Heikki ------------------------------------------------------------------------ r2380 | sunny | 2008-03-21 05:03:56 +0200 (Fri, 21 Mar 2008) | 9 lines Changed paths: M /branches/5.1/include/trx0undo.h M /branches/5.1/trx/trx0trx.c M /branches/5.1/trx/trx0undo.c branches/5.1: Fix for Bug# 35352. We've added a heuristic that checks the size of the UNDO slots cache lists (insert and upate). If either of cached lists has more than 500 entries then we add any UNDO slots that are freed, to the common free list instead of the cache list, this is to avoid the case where all the free slots end up in only one of the lists on startup after a crash. Tested with test case for 26590 and passes all mysql-test(s). ------------------------------------------------------------------------ r2383 | vasil | 2008-03-26 09:35:22 +0200 (Wed, 26 Mar 2008) | 4 lines Changed paths: M /branches/5.1/include/row0mysql.h branches/5.1: Fix typo in comment. ------------------------------------------------------------------------ r2384 | vasil | 2008-03-26 18:26:54 +0200 (Wed, 26 Mar 2008) | 20 lines Changed paths: A /branches/5.1/mysql-test/innodb_bug34300.result A /branches/5.1/mysql-test/innodb_bug34300.test M /branches/5.1/row/row0sel.c branches/5.1: Fix Bug#34300 Tinyblob & tinytext fields currupted after export/import and alter in 5.1 Copy the BLOB fields, that are stored internally, to a safe place (prebuilt->blob_heap) when converting a row from InnoDB format to MySQL format in row_sel_store_mysql_rec(). The bug was introduced in: ------------------------------------------------------------------------ r587 | osku | 2006-05-23 15:35:58 +0300 (Tue, 23 May 2006) | 3 lines Optimize BLOB selects by using prebuilt->blob_heap directly instead of first reading BLOB data to a temporary heap and then copying it to prebuilt->blob_heap. ------------------------------------------------------------------------ Approved by:    Heikki ------------------------------------------------------------------------ r2386 | vasil | 2008-03-27 07:45:02 +0200 (Thu, 27 Mar 2008) | 22 lines Changed paths: M /branches/5.1/mysql-test/innodb.result branches/5.1: Merge change from MySQL (this fixes the failing innodb test): ChangeSet@1.1810.3601.4, 2008-02-07 02:33:21+04:00, gshchepa@host.loc +9 -0 Fixed bug#30059. Server handles truncation for assignment of too-long values into CHAR/VARCHAR/TEXT columns in a different ways when the truncated characters are spaces: 1. CHAR(N) columns silently ignore end-space truncation; 2. TEXT columns post a truncation warning/error in the non-strict/strict mode. 3. VARCHAR columns always post a truncation note in any mode. Space truncation processing has been synchronised over CHAR/VARCHAR/TEXT columns: current behavior of VARCHAR columns has been propagated as standard. Binary-encoded string/BLOB columns are not affected. ------------------------------------------------------------------------ r2387 | vasil | 2008-03-27 08:49:05 +0200 (Thu, 27 Mar 2008) | 8 lines Changed paths: M /branches/5.1/row/row0sel.c branches/5.1: Check whether *trx->mysql_query_str is != NULL in addition to trx->mysql_query_str. This adds more safety. This may or may not fix Bug#35226 RBR event crashes slave. ------------------------------------------------------------------------ "	87f5261039bae8769f48686867202641c0ea4403
----------------------------
Post-merge fix. Query cache does now work with concurrent_insert=0. See Bug 33756 - query cache with concurrent_insert=0 appears broken 	ac130084c4a1c533cc279dd446c5601071989354
----------------------------
Post-merge fixes for bug 35103 Don't signal errors for the COM_STMT_SEND_LONG_DATA and COM_STMT_CLOSE commands. 	c7b6a0b0068d9f01229882a54da9511d654de28f
----------------------------
Bug#35559 - plugin_load.test creates warnings plugin_load.test created lines in the warnings files and made pushbuild cells yellow. Some pushbuild systems are configured so that they don't build the ha_example plugin. Trying to load them creates error messages in the error log. These were copied to the warnings file. Fixed by ignoring expected error messages for non-existent ha_example. 	97531cadc9fb1df270b435cc15a19b7f9b0195a8
----------------------------
Bug#35272: @@global.key_buffer_size = 4294967295 let the server crash When trying to get the requested amount of memory for the keybuffer, the out of memory could be signaled if one of the tentative allocations fail. Later the server would crash (debug assert) when trying to send a ok packet with a error set. The solution is only to signal the error if all tentative allocations for the keybuffer fail. 	079a174801a3d19917be5ba2a83fc103f7ba636c
----------------------------
BUG#34768 - nondeterministic INSERT using LIMIT logged in stmt mode if binlog_format=mixed Addition to fix for BUG#34768: fixed test case failures discovered by pushbuild. 	b799ea244cf9b95dd30d5b0a6c5fcc84e08cad53
----------------------------
BUG#35509 - Federated leaks memory when connecting to localhost/default port When creating federated table that points to unspecified host or localhost on unspecified port or port is 0, small memory leak occurs. This happens because we make a copy of unix socket path, which is never freed. With this fix we do not make a copy of unix socket path, instead share->socket points to MYSQL_UNIX_ADDR constant directly. This fix is covered by a test case for BUG34788. Affects 5.0 only. 	f064cd84d59c0f9de3dc8842c28227c6a4d75a00
----------------------------
Find mysqld binary from it's basedir 	9201ff3c362dd25a29ae9a704abe242247af0eeb
----------------------------
A patch for Bug#21854: Problems with CREATE TRIGGER without DEFINER clause in --skip-grant-tables mode. Update error message. 	1b8fb7733a31c16c1d30f7bdd4857db43ab08ac8
----------------------------
BUG#34788 - malformed federated connection url is not handled correctly - crashes server ! Creating federated table with connect string containing empty (zero-length) host name and port is evaluated as 0 (port is incorrect, omitted or 0) crashes server. This happens because federated calls strcmp() with NULL pointer. Fixed by avoiding strcmp() call if hostname is set to NULL. 	2b552aae5024d4ac97b9bee50b4625edc5943897
----------------------------
Bug #35178 INSERT_ID not written to binary log for inserts against BLACKHOLE backed tables binlogging of insert into a autoincrement blackhole table ignored an explicit set insert_id. Fixed with refining of the blackhole's insert method to call update_auto_increment() that prepares binlogging the insert query with the preceeding set insert_id. Note, as the engine does not store any actual data one has to explicitly provide to the server with the value of the autoincrement column via set insert_id. Otherwise binlogging will happend with the default set insert_id=1. 	b581227f89883da5185c38e364032dee1b5f4c04
----------------------------
branches/zip: Remove innodb.patch. This patch tries to enable resizeable buffer pool by polling the configuration parameter for the buffer pool size, which is not a good solution.  The right way could be to have an update function callback of a settable MySQL variable to send an event to the master thread. It could also make sense to expose the buffer pool chunks to the user. The first chunk would never be freed.  Other chunks than the first one would only be used for allocating page frames (uncompressed or compressed) and block descriptors of of compressed pages (buf_page_t).  That is, other users of the buffer pool, such as mem_heap_create_block() and the lock table, would be restricted to the first chunk.  This would allow other chunks to be freed by simply flushing any dirty blocks that they contain. It might also be worthwhile to create multiple chunks initially, based on the initial buffer pool size and the HugeTLB page size.  In that way, the buffer pool could be reduced from the initial configuration at runtime. 	63bcc4a3b9ac1f77b8585f291475890a75d909ec
----------------------------
BUG#34768 - nondeterministic INSERT using LIMIT logged in stmt mode if binlog_format=mixed Statement-based replication of DELETE ... LIMIT, UPDATE ... LIMIT, INSERT ... SELECT ... LIMIT is not safe as order of rows is not defined. With this fix, we issue a warning that this statement is not safe to replicate in statement mode, or go to row-based mode in mixed mode. Note that we may consider a statement as safe if ORDER BY primary_key is present. However it may confuse users to see very similiar statements replicated differently. Note 2: regular UPDATE statement (w/o LIMIT) is unsafe as well, but this patch doesn't address this issue. See comment from Kristian posted 18 Mar 10:55. 	6dfb184f092617919f4399abbc25fbdc01d4ed2b
----------------------------
"Avoid races in connect.test. The problem was in a test case for Bug33507: - when the number of active connections reaches the limit, the server accepts only root connections. That's achieved by accepting a connection, negotiating with the client and checking user credentials. If it is not SUPER, the connection is dropped. - when the server accepts connection, it increases the counter; - when the server drops connection, it decreases the counter; - the race was in between of decreasing the counter and accepting new connection: - max_user_connections = 2; - 2 oridinary user connections accepted; - extra user connection is establishing; - server checked user credentials, and sent 'Too many connections' error; - the client receives the error and establishes extra SUPER user connection; - the server however didn't decrease the counter (the extra user connection still is ""alive"" in the server) -- so, the new SUPER-user connection, will be dropped, because it exceeds (max_user_connections + 1). The fix is to implement ""safe connect"", which makes several attempts to connect and use it in the test script. "	393c54db5076dd93453a992e67fa136fc88cf359
----------------------------
configure.in: adjust version string 	01c58919834392375effbadd09148fa9516b8ab5
----------------------------
Bug#35103 mysql_client_test::test_bug29948 causes sporadic failures The problem was that the COM_STMT_SEND_LONG_DATA was sending a response packet if the prepared statement wasn't found in the server (due to reconnection). The commands COM_STMT_SEND_LONG_DATA and COM_STMT_CLOSE should not send any packets, even error packets should not be sent since they are not expected by the client API. The solution is to clear generated during the execution of the aforementioned commands and to skip resend of prepared statement commands. Another fix is that if the connection breaks during the send of prepared statement command, the command is not sent again since the prepared statement is no longer in the server. 	f23e3fd04c98c4df25e39e946193651e1f1c0f11
----------------------------
BUG#13861 - START SLAVE UNTIL may stop 1 evnt too late if log-slave-updates and circul repl This is a test case fix for BUG#13861. 	243ca22b94b160ee7762a38e1a25b04bb3869a7c
----------------------------
"A fix for Bug#35289: Too many connections -- wrong SQL state in some case. ER_CON_COUNT_ERROR is defined with SQL state 08004. However, this SQL state is not always returned. This error can be thrown in two cases: 1. when an ordinary user (a user w/o SUPER privilege) is connecting, and the number of active user connections is equal or greater than max_connections. 2. when a user is connecting and the number of active user connections is already (max_connections + 1) -- that means that no more connections will be accepted regardless of the user credentials. In the 1-st case, SQL state is correct. The bug happens in the 2-nd case -- on UNIX the client gets 00000 SQL state, which is absolutely wrong (00000 means ""not error SQL state); on Windows the client accidentally gets HY000 (which means ""unknown SQL state). The cause of the problem is that the server rejects extra connection prior to read a packet with client capabilities. Thus, the server does not know if the client supports SQL states or not (if the client supports 4.1 protocol or not). So, the server supposes the worst and does not send SQL state at all. The difference in behavior on UNIX and Windows occurs because on Windows CLI_MYSQL_REAL_CONNECT() invokes create_shared_memory(), which returns an error (in default configuration, where shared memory is not configured). Then, the client does not reset this error, so when the connection is rejected, SQL state is HY000 (from the error from create_shared_memory()). The bug appeared after test case for Bug#33507 -- before that, this behavior just had not been tested. The fix is to 1) reset the error after create_shared_memory(); 2) set SQL state to 'unknown error' if it was not received from the server. A separate test case is not required, since the behavior is already tested in connect.test. Note for doc-team: the manual should be updated to say that under some circumstances, 'Too many connections' has HY000 SQL state. "	d3575ce0e47b595b5e43012aa1f5337d4a4ee3e8
----------------------------
branches/zip: innodb-zip.test: Add tests for warnings about ROW_FORMAT=COMPRESSED when neither innodb_file_per_table nor innodb_file_format are set. 	f7e6f2a9d1ca0ae9d02fd45222c2db128ee605bf
----------------------------
sql_table.cc: Removed use of ha_commit_stmt and ha_commit, use ha_autocommit_or_rollback and end_active_trans instead 	e6b288a621bfc12a71683f8e787bca565bce5a1d
----------------------------
BUG#33029 5.0 to 5.1 replication fails on dup key when inserting using a trig in SP For all 5.0 and up to 5.1.12 exclusive, when a stored routine or trigger caused an INSERT into an AUTO_INCREMENT column, the generated AUTO_INCREMENT value should not be written into the binary log, which means if a statement does not generate AUTO_INCREMENT value itself, there will be no Intvar event (SET INSERT_ID) associated with it even if one of the stored routine or trigger caused generation of such a value. And meanwhile, when executing a stored routine or trigger, it would ignore the INSERT_ID value even if there is a INSERT_ID value available set by a SET INSERT_ID statement. Starting from MySQL 5.1.12, the generated AUTO_INCREMENT value is written into the binary log, and the value will be used if available when executing the stored routine or trigger. Prior fix of this bug in MySQL 5.0 and prior MySQL 5.1.12 (referenced as the buggy versions in the text below), when a statement that generates AUTO_INCREMENT value by the top statement was executed in the body of a SP, all statements in the SP after this statement would be treated as if they had generated AUTO_INCREMENT by the top statement.  When a statement that did not generate AUTO_INCREMENT value by the top statement but by a function/trigger called by it, an erroneous Intvar event would be associated with the statement, this erroneous INSERT_ID value wouldn't cause problem when replicating between masters and slaves of 5.0.x or prior 5.1.12, because the erroneous INSERT_ID value was not used when executing functions/triggers. But when replicating from buggy versions to 5.1.12 or newer, which will use the INSERT_ID value in functions/triggers, the erroneous value will be used, which would cause duplicate entry error and cause the slave to stop. The patch for 5.1 fixed it to ignore the SET INSERT_ID value when executing functions/triggers if it is replicating from a master of buggy versions, another patch for 5.0 fixed it not to generate the erroneous Intvar event. 	a3d02647e643270ea2e7deecf8fb4127834e214d
----------------------------
BUG#33029 5.0 to 5.1 replication fails on dup key when inserting using a trig in SP For all 5.0 and up to 5.1.12 exclusive, when a stored routine or trigger caused an INSERT into an AUTO_INCREMENT column, the generated AUTO_INCREMENT value should not be written into the binary log, which means if a statement does not generate AUTO_INCREMENT value itself, there will be no Intvar event (SET INSERT_ID) associated with it even if one of the stored routine or trigger caused generation of such a value. And meanwhile, when executing a stored routine or trigger, it would ignore the INSERT_ID value even if there is a INSERT_ID value available set by a SET INSERT_ID statement. Starting from MySQL 5.1.12, the generated AUTO_INCREMENT value is written into the binary log, and the value will be used if available when executing the stored routine or trigger. Prior fix of this bug in MySQL 5.0 and prior MySQL 5.1.12 (referenced as the buggy versions in the text below), when a statement that generates AUTO_INCREMENT value by the top statement was executed in the body of a SP, all statements in the SP after this statement would be treated as if they had generated AUTO_INCREMENT by the top statement.  When a statement that did not generate AUTO_INCREMENT value by the top statement but by a function/trigger called by it, an erroneous Intvar event would be associated with the statement, this erroneous INSERT_ID value wouldn't cause problem when replicating between masters and slaves of 5.0.x or prior 5.1.12, because the erroneous INSERT_ID value was not used when executing functions/triggers. But when replicating from buggy versions to 5.1.12 or newer, which will use the INSERT_ID value in functions/triggers, the erroneous value will be used, which would cause duplicate entry error and cause the slave to stop. The patch for 5.0 fixed it not to generate the erroneous Intvar event, another patch for 5.1 fixed it to ignore the SET INSERT_ID value when executing functions/triggers if it is replicating from a master of buggy versions. 	97ae23f4735c46dd03bf542ea52eba0fccb43d2b
----------------------------
Bug#34891 sp_notembedded.test fails sporadically The problem is that since MyISAM's concurrent_insert is on by default some concurrent SELECT statements might not see changes made by INSERT statements in other connections, even if the INSERT statement has returned. The solution is to disable concurrent_insert so that INSERT statements returns after the data is actually visible to other statements. 	c964c0b2cff38ea008f0ed173f3cf85bce9fc4bc
----------------------------
Bug#33756 - query cache with concurrent_insert=0 appears broken When concurrent inserts were disabled, statements after an INSERT were not put into the query cache. This happened because we do not save the current data file length at statement start when concurrent inserts are disabled. But we checked the always zero local length against the real file length anyway. Fixed by doing the check only if concurrent inserts are not diabled. 	d5390b2d56a6a4bf39c56858d54701ce55586e36
----------------------------
Fix for Bug#35074: max_used_connections is not correct. The problem was that number of threads was used to calculate max_used_connections. The fix is to use number of active connections. 	5c1e58d4fa201ebd4c76685156df7137996ef46c
----------------------------
Fix for Bug#33507: Event scheduler creates more threads than max_connections -- which results in user lockout. The problem was that the variable thread_count that contains the number of active threads was interpreted as a number of active connections. The fix is to introduce a new counter for active connections. 	18125abf930b8fd5676c11218cd869d49dcd11a2
----------------------------
Re-enabled the test for mysql_insert_id() after merging from main. 	a48f1d24ab59358b0f38d93f23fe7e449e353029
----------------------------
branches/5.1: Remove the innodb_flush_method fdatasync option since it was not being used and there was a potential it could mislead users. 	aa96dab4eef542e7b72f629a9db11feb80af7096
----------------------------
Problem: sporadic pushbuild errors in rpl_ndb_basic. The reason is that we are using a sleep to wait for slave to reach the slave_transaction_retries limit. Fix: wait for the slave to stop instead. This is what we want to do, since the slave stops when the limit is reached. 	f0a9d75a6ca9952fcb9ad27836c077e55fdc97d1
----------------------------
Problem: Pushbuild errors because sql_mode is unsafe but test thinks it is safe. Fix: Move sql_mode: from the section of the test where safe variables are tested, to the section where unsafe variables are tested. 	afde9893b171188a61963674ec5825886c760471
----------------------------
branches/zip: Implement the configuration parameter and settable global variable innodb_file_format.  Implement file format version stamping of *.ibd files and SYS_TABLES.TYPE. This change breaks introduces an incompatible change for for compressed tables.  We can do this, as we have not released yet. innodb-zip.test: Add tests for stricter KEY_BLOCK_SIZE and ROW_FORMAT checks. DICT_TF_COMPRESSED_MASK, DICT_TF_COMPRESSED_SHIFT: Replace with DICT_TF_ZSSIZE_MASK, DICT_TF_ZSSIZE_SHIFT. DICT_TF_FORMAT_MASK, DICT_TF_FORMAT_SHIFT, DICT_TF_FORMAT_51, DICT_TF_FORMAT_ZIP: File format version, stored in table->flags, in the .ibd file header, and in SYS_TABLES.TYPE. dict_create_sys_tables_tuple(): Write the table flags to SYS_TABLES.TYPE if the format is at least DICT_TF_FORMAT_ZIP.  For old formats (DICT_TF_FORMAT_51), write DICT_TABLE_ORDINARY as the table type. DB_TABLE_ZIP_NO_IBD: Remove the error code.  The error handling is done in ha_innodb.cc; as a failsafe measure, dict_build_table_def_step() will silently clear the compression and format flags instead of returning this error. dict_mem_table_create(): Assert that no extra bits are set in the flags. dict_sys_tables_get_zip_size(): Rename to dict_sys_tables_get_flags(). Check all flag bits, and return ULINT_UNDEFINED if the combination is unsupported. dict_boot(): Document the SYS_TABLES columns N_COLS and TYPE. dict_table_get_format(), dict_table_set_format(), dict_table_flags_to_zip_size(): New accessors to table->flags. dtuple_convert_big_rec(): Introduce the auxiliary variables local_len, local_prefix_len.  Store a 768-byte prefix locally if the file format is less than DICT_TF_FORMAT_ZIP. dtuple_convert_back_big_rec(): Restore the columns. srv_file_format: New variable: innodb_file_format. fil_create_new_single_table_tablespace(): Replace the parameter zip_size with table->flags. fil_open_single_table_tablespace(): Replace the parameter zip_size_in_k with table->flags.  Check the flags. fil_space_struct, fil_space_create(), fil_op_write_log(): Replace zip_size with flags. fil_node_open_file(): Note a TODO item for InnoDB Hot Backup. Check that the tablespace flags match. fil_space_get_zip_size(): Rename to fil_space_get_flags().  Add a wrapper for fil_space_get_zip_size(). fsp_header_get_flags(): New function. fsp_header_init_fields(): Replace zip_size with flags. FSP_SPACE_FLAGS: New name for the tablespace flags.  This field used to be called FSP_PAGE_ZIP_SIZE, or FSP_LOWEST_NO_WRITE.  It has always been written as 0 in MySQL/InnoDB versions 4.1 to 5.1. MLOG_ZIP_FILE_CREATE: Rename to MLOG_FILE_CREATE2.  Add a 32-bit parameter for the tablespace flags. ha_innobase::create(): Check the table attributes ROW_FORMAT and KEY_BLOCK_SIZE.  Issue errors if they are inappropriate, or warnings if the inherited attributes (in ALTER TABLE) will be ignored. PAGE_ZIP_MIN_SIZE_SHIFT: New constant: the 2-logarithm of PAGE_ZIP_MIN_SIZE. 	86361e032b89ce015f2ab298305bb097c043be34
----------------------------
Bug #25486: mysqld_multi.server.sh missing from builds Make mysqld_multi.server executable, and allow it to be installed via chkconfig on LSB-compliant systems. 	1cda9d124bcba3acce49c3ddc4d1bd9a0150d094
----------------------------
Bug #26622 MASTER_POS_WAIT does not work as documented Affected tests fixing. After the fix for st_relay_log_info::wait_for_pos() that handles widely used select('master-bin.xxxx',pos) invoked by mysqltest there appeared to be four tests that either tried synchronizing when the slave was stopped or used incorrect synchronization method like to call `sync_with_master' from the current connection being to the master itself. Fixed with correcting the current connection or/and using the correct synchronization macro when possible. 	8a4c6521995237d8baba402442ec02124b88a06d
----------------------------
"WL#4203 Reorganize and fix the data dictionary tests of testsuite funcs_1 1. Fix the following bugs Bug#30440 ""datadict"" tests (all engines) fail: Character sets depend on configuration Solution: Test variants charset_collation_* adjusted to different builds Bug#32603 ""datadict"" tests (all engines) fail in ""community"" tree: ""PROFILING"" table Solution: Excluding ""PROFILING"" table from queries Bug#33654 ""slow log"" is missing a line Solution: Unify the content of the fields TABLES.TABLE_ROWS and STATISTICS.CARDINALITY within result sets Bug#34532 Some funcs_1 tests do not clean up at end of testing Solution: DROP objects/reset global server variables modified during testing + let tests missing implementation end before loading of tables Bug#31421 funcs_1: ndb__datadict fails, discrepancy between scripts and expected results Solution: Cut <engine>__datadict tests into smaller tests + generate new results. Bug#33599 INFORMATION_SCHEMA.STATISTICS got a new column INDEX_COMMENT: tests fail (2) Generation of new results during post merge fix Bug#33600 CHARACTER_OCTET_LENGTH is now CHARACTER_MAXIMUM_LENGTH * 4 Generation of new results during post merge fix Bug#33631 Platform-specific replace of CHARACTER_MAXIMUM_LENGTH broken by 4-byte encoding Generation of new results during post merge fix + removal of platform-specific replace routine (no more needed) 2. Restructure the tests - Test not more than one INFORMATION_SCHEMA view per testscript - Separate tests of I_S view layout+functionality from content related to the all time existing databases ""information_schema"", ""mysql"" and ""test"" - Avoid storage engine related variants of tests which are not sensible to storage engines at all. 3. Reimplement or add some subtests + cleanup There is a some probability that even the reviewed changeset - does not fix all bugs from above   or - contains new bugs which show up on some platforms <> Linux or on one of the various build types 4. The changeset contains fixes according to - one code review - minor bugs within testing code found after code review (accepted by reviewer) - problems found during tests with 5.0.56 in build environment "	30091e23f94fdee9e83b616d2dc56cdcc69b18d3
----------------------------
innodb-zip.test: Now that innodb_file_per_table is a settable variable as of r2355, remove the special startup options innodb-zip-master.opt and set the variable in innodb-zip.test instead. 	a669361818391e89457e8152a195ed8653bd510e
----------------------------
"BUG#31168: @@hostname does not replicate Problem: in mixed and statement mode, a query that refers to a system variable will use the slave's value when replayed on slave. So if the value of a system variable is inserted into a table, the slave will differ from the master. Fix: mark statements that refer to a system variable as ""unsafe"", meaning they will be replicated by row in mixed mode and produce a warning in statement mode. There are some exceptions: some variables are actually replicated. Those should *not* be marked as unsafe. BUG#34732: mysqlbinlog does not print default values for auto_increment variables Problem: mysqlbinlog does not print default values for some variables, including auto_increment_increment and others. So if a client executing the output of mysqlbinlog has different default values, replication will be wrong. Fix: Always print default values for all variables that are replicated. I need to fix the two bugs at the same time, because the test cases would fail if I only fixed one of them. "	81b1d712bf3dea51c776fba7ac228bf28e4930f7
----------------------------
branches/zip: Make innodb_file_per_table a settable global variable. There is one consideration: fil_init() chooses the tablespace hash size based on the initial value of srv_file_per_table.  However, this is nothing new: InnoDB could be started with innodb_file_per_table=0 even though *.ibd files exist. srv_file_per_table: Declare as my_bool instead of ibool, because MYSQL_SYSVAR_BOOL() expects a pointer to my_bool.  Document the variable also in srv0srv.h. innobase_start_or_create_for_mysql(): Note why it is OK to temporarily clear srv_file_per_table. innobase_file_per_table: Remove. 	c853494ea2170b5db18b7303f52d1c689f3fdaae
----------------------------
Bug #28780 report_host is not available through SELECT @@report_host merging and post-make-test changes. 	9c2ef8377fd8a3d96f1a194346878281e3fc5762
----------------------------
Merge: 51ad290 0958a50 Merge mysql1000.(none):/home/andrei/MySQL/FIXES/5.1/bug28780_report_host_no_show into  mysql1000.(none):/home/andrei/MySQL/MERGE/5.1 	65bb7d3e2da871166ccaf0c7b9152e23b8e3054f
----------------------------
Bug#26622  MASTER_POS_WAIT does not work as documented MASTER_POS_WAIT return values are different than expected when the server is not a slave. It returns -1 instead of NULL. Fixed with correcting  st_relay_log_info::wait_for_pos() to return the proper value in the case of rli info is not inited. 	122fefc593ae374702f90a7220f676bfddae7391
----------------------------
Bug#25132 disabled query cache: Qcache_free_blocks = 1 The initial value of free memory blocks in 0. When the query cache is enabled a new memory block gets allocated and is assigned number 1. The free memory block is later split each time query cache memory is allocated for new blocks. This means that the free memory block counter won't be reduced to zero when the number of allocated blocks are zero, but rather one. To avoid confusion this patch changes this behavior so that the free memory block counter is reset to zero when the query cache is disabled. Note that when the query cache is enabled and resized the free memory block counter was still calculated correctly. 	a13cba5abd351c3916af0fc6404109e787fd8085
----------------------------
"Removed unused ""#!remove_datadir"" Cleanup BACKUP dir from clusters datadir in case of test failure "	5eb114bb4a92f42840333f1f6f5527f2f87b6354
----------------------------
"Bug#34726: open_tables() crashes server if running with --debug The DBUG code emits the current value of the proc_info member of THD, which may be set to NULL.  It was wrong to dereference that value with the format string %s without verifying that it was valid. Now, insert an inline test that substitutes the string ""(null)"" for NULL pointers. "	c1c9cbe0d8b1581e3a2f4d7e8abd98285267c90c
----------------------------
Fix for bug #34889: mysql_client_test::test_mysql_insert_id test fails sporadically Under some circumstances, the mysql_insert_id() value after SELECT ... INSERT could return a wrong value. This could happen when the last SELECT ... INSERT did not involve an AUTO_INCREMENT column, but the value of mysql_insert_id() was changed by some previous statements. Fixed by checking the value of thd->insert_id_used in select_insert::send_eof() and returning 0 for mysql_insert_id() if it is not set. 	80d89023eadf93ac66dac865d82f3ef3bbb40e66
----------------------------
Bug #28780  report_host is not available through SELECT @@report_host There was no way to see if report-{host,port,user,password} were set up. Fixed with introducing new global variables. The variables are made read-only because of a possible need to change them most probably require the slave server restart. Todo: transform the startup options to be CHANGE master parameters - i.e to deprecate `report-' options, and to change the new vars to be updatable at time of CHANGE master executes with new values. 	0958a508f87878b78d7655afc4193721b0e9501e
----------------------------
Fix for bug #31781: multi-table UPDATE with temp-pool enabled fails with errno 17 my_create() did not perform any checks for the case when a file is successfully created by a call to open(), but the call to my_register_filename() later fails because the number of open files has exceeded the my_open_files limit. This can happen on platforms which do not have getrlimit(), and hence we do not know the real limit for open files. In such a case an error was returned to a caller although the file has actually been created. Since callers assume my_create() to return an error only when it failed to create a file, they did not perform any cleanups, leaving an 'orphaned' file on the file system. Fixed by adding a check for the above case to my_create() and ensuring the newly created file is deleted before returning an error. Creating a deterministic test case in the test suite is impossible, because the exact steps required to reproduce the above situation depend on the platform and/or environment (OS per-user limits, queries executed by previous tests, startup parameters). The patch was manually tested on Windows using examples posted in the bug report. 	bd53f960ddc628741081ee15635e8caf1d174b2a
----------------------------
Bug #32801 wait_timeout.test fails randomly wait_timeout test enabled 	fbbd4391d90b90f8817ec5577ff3772373daee51
----------------------------
Bug#23924 general_log truncates queries with character set introducers. Problem: logging of utf8-incompatible binary strings didn't work Fix: hex-encoding of incompatible sequences. 	f83cc8e6db90c96db1eb336f690b8a2af3d49e94
----------------------------
Fix for Bug#31947: Declare with a reserved word succeeded. READ_ONLY token was accidentally placed into wrong place ('ident' rule). The proper place is in the 'keyword_sp' rule. The manual should be re-generated after this patch, because the manual depends on the 'keyword_sp' rule. 	ff97087630e142f112818d07bddc994b2f366abc
----------------------------
BUG#13861 - START SLAVE UNTIL may stop 1 evnt too late if log-slave-updates and circul repl After merge fixes. 	cf50a67cca8e2cb62d7d740c0ad25b1a6fa55165
----------------------------
Bug#34889 mysql_client_test::test_mysql_insert_id test fails sporadically Disable the test case. 	228d350e2e13605bbf6b2435396daccd42af0b7d
----------------------------
"configure.in: Corrected calculation of version id, incorrect last two digits if < 10 Keep ""sp1"" or ""a"" in MYSQL_NO_DASH_VERSION, to set correct version in RPM spec file Added MYSQL_NUMERIC_VERSION that is like MYSQL_NO_DASH_VERSION before Added clear doc how the different version variables differ SocketServer.cpp: Corrected typo in debug error message "	ff25b925431efde1b032b26f13a893c25128d789
----------------------------
Bug#28386 the general log is incomplete The problem is that the commands COM_STMT_CLOSE, COM_STMT_RESET, COM_STMT_SEND_LONG_DATA weren't being logged to the general log. The solution is to log the general log the aforementioned commands. 	bccbc79d0754e6f805ad96a0bc86d4804b66dc85
----------------------------
Bug#29645: Link failure when using the embedded server mysql_config --cflags gave a flag that forced the HP/UX C++ compiler into C-mode; as a result, C++ sources could not be compiled correctly. We now filter out the offending flag (like we do for Sun) so that --cflags will work for both C and C++. 	874e919872047d000207d7651c64380ae4df7221
----------------------------
Bug#32757: hang with sql_mode set when setting some global variables If setting a system-variable provided by a plug-in failed, no OK or error was sent in some cases, hanging the client. We now send an error in the case from the ticket (integer-argument out of range in STRICT mode). We also provide a semi-generic fallback message for possible future cases like this where an error is signalled, but no message is sent to the client. The error/warning handling is unified so it's the same again for variables provided by plugins and those in the server proper. 	79491f93c8fdba2f75d968104ade0f88137cc036
----------------------------
Bug#32753: PAD_CHAR_TO_FULL_LENGTH is not documented and interferes with grant tables SQL-mode PAD_CHAR_TO_FULL_LENGTH affected mysqld's user-table too. If enabled, user-name and host were space-padded and no longer matched the login-data of incoming connexions. Patch disregards pad-flag while loading privileges so ability to log in does not depend on SQL-mode. 	60fc91570b04f0202c7f58c74f493b18e9813923
----------------------------
BUG#13861 - START SLAVE UNTIL may stop 1 evnt too late if log-slave-updates and circul repl Slave SQL thread may execute one extra event when there are events skipped by slave I/O thread (e.g. originated by the same server). Whereas it was requested not to do so by the UNTIL condition. This happens because we compare with the end position of previously executed event. This is fine when there are no skipped by slave I/O thread events, as end position of previous event equals to start position of to be executed event. Otherwise this position equals to start position of skipped event. This is fixed by: - reading the event to be executed before checking if the until condition is satisfied. - comparing the start position of the event to be executed. Since we do not have the start position available, we compute it by subtracting event length from end position (which is available). - if there are no events on the event queue at the slave sql starting time, that meet until condition, we stop immediately, as in this case we do not want to wait for next event. 	fe3b1c8e25669f250159142a507841f6402a38d9
----------------------------
Remove special hack for windows, log-error is already set in my.cnf file 	de4f78d919fe8b142b319e13c82d14742674487e
----------------------------
Merge: 759d2f6 7e93d94 Merge aelkin@bk-internal.mysql.com:/home/bk/mysql-5.1-new-rpl into  mysql1000.(none):/home/andrei/MySQL/FIXES/5.1/bug31316-sss_server_id_clashes 	49915eb88ab75f635a962b09d19ba4acc5d6ce91
----------------------------
"Bug #31316 Report server id clashes in SHOW SLAVE STATUS ""Server_IO_State"" field Critical error messages from get_master_version_and_clock() were written only to the slave errorlog while Show slave status did not display any incident happened. Although the artifact was reported for a particular --replicate-same-server-id related issue the fix refines all critical error reporting with deploying rli->report(). The test for the bug covers only --replicate-same-server-id error reporting. "	7e93d94ce5e0c34d383abc2c9b1fc15a2e23f82f
----------------------------
"Use My::Platform Put all path conversions in one file Convert the --tmpdir  passed to ""mysqld --verbose --help"" "	bf65a61567c913c9d5ba4810759aee7d7529f9ee
----------------------------
Bug #34686 change master w/o explict master_heartbeat_period dont reset period to default There appeared failures on 5.1-telco-6.3 tree after mtr started using bigger value to init @@global.slave_net.timeout. Whereas the very first default setting was correct to follow hb=slave_net_timeout/2 rule rule, the following CHANGE master w/o the keyword failed. Fixed with enforcing logics in change_master() to reset the heartbeat period to the specified slave_net_timeout/2 when the option is not passed to CHANGE master command. 	17b30bfd76f6a18aa42f74c7597c1a3406cccce7
----------------------------
Bug #30604: different flagging of time_zone_used in normal and ps-protocol Finding a routine should be a transparent operation as far as the binary log is concerned. But it was influencing the binary log because of the TIMESTAMP column in the proc table. Fixed by preserving and restoring the time_zone usage flag when searching for a stored routine in the proc table. 	5b508f2d16078eed2e439442557580810ac95fcb
----------------------------
Bug #28555  Upgrading MySQL Fails to shut down old server and kills socket file Check for an existing MySQL server package from a different vendor or major MySQL version.  In such a case, refuse to install the server and recommend how to safely remove the old packages before installing the new ones. 	69dcac5a7e5bf306a1bc1395b305c9d8c3e36057
----------------------------
Merge: f5fe34d 871eb3e Merge aelkin@bk-internal.mysql.com:/home/bk/mysql-5.0-rpl into  mysql1000.dsl.inet.fi:/home/andrei/MySQL/MERGE/5.0-bug33931-assert_write_ignored_ev_when_init_slave_fails 	416001d8edf8c1864f35a3981f4bb05fce0f25aa
----------------------------
Merge: 139e6ac 22072c5 Merge aelkin@bk-internal.mysql.com:/home/bk/mysql-5.0-rpl into  mysql1000.dsl.inet.fi:/home/andrei/MySQL/MERGE/5.0-bug33931-assert_write_ignored_ev_when_init_slave_fails 	f5fe34dcd1e1a22086324e6d9270c920bf47df8f
----------------------------
Bug #21158 mysql_config doesn't include -lmygcc Add -lmygcc to mysql_config output for libs, libs_r, and embedded_libs. Required when linking against our static libs, if yassl is used, and gcc used to build library is significantly different from that which is using the library. 	cd6e2ad99f478e1e5f457e396863a1ca2a545198
----------------------------
Bug #33931 assertion at write_ignored_events_info_to_relay_log if init_slave_thread() fails and bug#33932  assertion at handle_slave_sql if init_slave_thread() fails the asserts were caused by bug33931: having thd deleted at time of executing err: code plus a missed initialization; bug33932: initialization of slave_is_running member was missed; fixed with relocating mi members initialization and removing delete thd It is safe to do as deletion happens later explicitly in the caller of init_slave_thread(). Todo: at merging the test is better to be moved into suite/bugs for 5.x (when x>0). 	22072c5c5777c94adc8c7fb694d4679837883dfd
----------------------------
WL#4083 Resource shortage handling in event mechanism: Adds handling of buffer overflow in Suma during node failure and disconnect of lagging subscribers (subscribers that do not acknowledge GCP's fast enough) based on new configuration parameter MX_BUFFERED_GCP. 	292c61ab56fb11b64f68b8f02d635dd2bf8e3201
----------------------------
branches/zip: scripts/dynconfig: Correct misleading usage message. At present, the script only accepts one command line parameter. Append newline to some die messages, so that the Perl interpreter will not print the file name and line number of the failing statement. 	b27b407d93b72c2895b87685a08d6a672ccfe968
----------------------------
branches/zip: scripts/dynconfig: Minor cleanup (spelling and formatting). 	e0cbe8f4d26a40dcdae0a93319737fe7b79c83d6
----------------------------
Give a more informative message if we failed to write to mysql.general_log table. 	956e9559382b98128c9dd1734dc795b6f0f862d1
----------------------------
Bug#32633 Can not create any routine if SQL_MODE=no_engine_substitution The problem is that one can not create a stored routine if sql_mode contains NO_ENGINE_SUBSTITUTION or PAD_CHAR_TO_FULL_LENGTH. Also when a event is created, the mode is silently lost if sql_mode contains one of the aforementioned.  This was happening because the table definitions which stored sql_mode values weren't being updated to accept new values of sql_mode. The solution is to update, in a backwards compatible manner, the various table definitions (columns) that store the sql_mode value to take into account the new possible values. One incompatible change is that if a event that is being created can't be stored to the mysql.event table, an error will be raised. The tests case also ensure that new SQL modes will be added to the mysql.proc and mysql.event tables, otherwise the tests will fail. 	1c6768c487aa28b8ee33a623a406d89a1b2c3707
----------------------------
Fixed bug#34223: Failure on assignment to my_innodb_autoextend_increment and my_innodb_commit_concurrency global variables. Type of the my_innodb_autoextend_increment and the my_innodb_commit_concurrency variables has been changed to GET_ULONG. 	8adc63ad36b6294aba50a43065996525cc73ee2b
----------------------------
Bug #34275 mysqld leak if doing multiple statements within same transaction (or wo/ trans) - in autocommit do not allocate statistics share, but instead use one directly on the handler 	04c26018a7d5b0c34a90ce6e858d620f819cb7b1
----------------------------
Bug#33329  extraneous ROLLBACK in binlog on connection does not use trans tables There had been two issues. Rollback statement was recorded in binlog even though a multi-update had not modified any non-transactional table. The reason for this artifact was a false initial value of multi_update::transactional_tables. Yet another artifact that explained on the bug page is that `ha_autocommit_or_rollback' works differently depending on whether a transaction engine has been compiled in. Fixed: with setting multi_update::transactional_tables to zero at initialization time. Multi-update on non-trans table won't cause ROLLBACK in binlog with either compilation option. The 2nd mentioned artifact comprises a self-standing issue (to be reported separately). 	7880fade24dec704a5df54d0278f4aae905fc7a5
----------------------------
Bug #34244 Test ndb_binlog_log_bin fails for 'drop table if exists t1,t2,t3' Bug #34245 Test ndb_binlog_multi fails for 'CREATE TABLE' Bug #34246 Test rpl_ndb_transaction fails with 'Failed to create 'mysql/ndb_apply_status' Tests cases didn't wait for cluster to come up due to a typo in have_multi_ndb.inc. 	221ef88c6af1def41afac15b4d131283d711b9da
----------------------------
failure in 5.1 tree for rpl_server_id caused by the wrong offset in the include file. fixed with correcting the offset. 	de7e6d2565dd0be99c724b1351ce89156663cceb
----------------------------
"BUG#22989 - START SLAVE causes Error on COM_REGISTER_SLAVE: 1105 'Wrong parameters to functi START SLAVE reports vague error when it fails to register on master: ""Wrong parameters to function register_slave"". If master failed to register slave because of too long 'report-host'/'report-user'/'report-password', return better error messages: ""Failed to register slave: too long 'report-host'"" ""Failed to register slave: too long 'report-user'"" ""Failed to register slave; too long 'report-password'"" No test case for this fix. "	3b5c25ba656187eac5c20625cdc3a93e22f2eb93
----------------------------
Merge: 7572a9e e4f37ea Merge zhe@bk-internal.mysql.com:/home/bk/mysql-5.0-rpl into  mail.hezx.com:/media/sda3/work/mysql/bkwork/bug26489_corruption_in_relay_log/5.0 	afe8ac3128f36d5e3d078c78907760fb579dbca8
----------------------------
BUG#32434: Replication doesn't work between 5.2.1-a_drop6p9-log and 5.1.22-ndb-6.3.6-telco Problem: When slave reads format_description_log_event, it checks if the master is a version that uses an old binlog format. See also BUG#27779. Not all possible server_versions were listed. Fix: Check for all server_versions which use the old binlog_format. 	dd913eaaf68a51287bf4268f18b5cda68432576b
----------------------------
BUG#33182: Disallow division due to div_precision_increment problems 	8de834fc6af9b33c3ccb4f824d2d465a941e81bd
----------------------------
Bug#30331 Table_locks_waited shows inaccurate values The problem is that the Table_locks_waited was incremented only when the lock request succeed. If a thread waiting for the lock gets killed or the lock request is aborted, the variable would not be incremented, leading to inaccurate values in the variable. The solution is to increment the Table_locks_waited whenever the lock request is queued. This reflects better the intended behavior of the variable -- show how many times a lock was waited. 	ef3200f776290175e25dd16140fdfac6177b0383
----------------------------
Bug #31524: One table one row select on NDB cause optimizer to require SQL_BIG_SELECTS=1 There was a previous test that leaves a non-default (small) max_join_size. Fixed by re-setting the max_join_size to default when the test is over. 	beff5d075253ae046877359b8d6e0c44fd0aea6e
----------------------------
Makefile.am: Needed to add the new sample configuration files to the CLEANFILES section 	c8d4323975735ee62622d233d71d8aacac8d62db
----------------------------
Bug#30366 (recommit) NDB fails to start on OS X, PPC, 64 bit - The errno variable should only be used when the previous socket write failed, it should be regarded as undefined at other times 	24e618192d1a08ac2ac2c48a9666af520f63d4f3
----------------------------
adjust testcase to newconfig param 	45e247caa11011266169f5e6db9623661b748fd3
----------------------------
config.medium.ini.sh, config.small.ini.sh, config.huge.ini.sh: Sample cluster configuration files for 5.1 Makefile.am: Updated for new files 	9803176bd17db3bc83c1674468a2f17e011e8979
----------------------------
"Bug#27427: resolveip fails on hostnames with a leading digit Patch by Kasper Dupont.  No CLA required for this size of patch. ""resolveip"" program produces incorrect result if given a hostname starting with a digit.  Someone seems to have thought that names can not have digits at the beginning. Instead, use the resolver library to work out the rules of hostnames, as it will undoubtedly be better at it than we are. "	c13d726f5d73de5e08e30982742b84c2e94a5efd
----------------------------
"Bug#30366 NDB fails to start on OS X, PPC, 64 bit - The errno variable should only be used when the previous socket write failed, it should be regarded as undefined at other times OutputStream.cpp: Only use ""errno"" after the attempt to write to the socket has failed "	53bdfab23e6aefbf852d7e1e6d7d54e33850f076
----------------------------
configure.in: adjust version string 	68fb45049b973ee5397793e476534c526b6d6db2
----------------------------
configure.in: adjust version number 	e4c8a1872a4598d895c30c0992a7ad3f0cda3de5
----------------------------
update configure.in in telco-6.4 	a4eec75ff483d1ded228fdd435c14208102ca727
----------------------------
bug#32003 rpl.rpl_server_id2 can cause extraneous errors recorded in error log the error printed in the slave error log appeared due to slave's threads were killed in the middle of handling START SLAVE. The sql command is asynchronous so that START may not be complete by the time a test issues STOP. Clearly, printing the error is not necessary if the threads are killed. Fixed with deploying a condition for printing the error that previously was introduced by bug#29976. 	1b3049bcabc4ceecd9bb86c02b7adcbb3bf97600
----------------------------
Add missing include test file for rpl_server_id test 	287b981c876f2a61d5e705746d7b59f9c0127b2b
----------------------------
branches/zip: Split the source-only configuration parameter buf_buddy_min_n_frames into two, also buf_buddy_max_n_frames. Set the default values in such a way that a strict LRU policy will apply for replacing compressed or uncompressed page frames in the buffer pool. These parameters have not yet been exposed to the MySQL layer. 	051ee49116d9ddbd5fb5b509d55a19f33572996f
----------------------------
configure.in, acinclude.m4: Minor cleanup, removed semicolons not needed 	9023b3a30ce0efab39a92187a64c13b5fb16d77e
----------------------------
Bug#30887 Server crashes on SET GLOBAL query_cache_size=0 Reseting the query cache by issuing a SET GLOBAL query_cache_size=0 caused the server to crash if a the server concurrently was saving a new result set to the query cache. The reason for this was that the invalidation wasn't waiting on the result writers to release the block level locks on the query cache. 	96146a392ff70445c9b39e598dc1130fd0fc3ea5
----------------------------
use correct config_readline.h file 	0ac55ddef22f47e0e506f284a4908f22bdb5c213
----------------------------
Merge: d501c40 25d53f9 Merge ssandberg@bk-internal.mysql.com:/home/bk/mysql-5.0-rpl into  riska.(none):/home/sven/bk/b26395-autocommit-xa/5.0-rpl 	72676b226b21e1aba2f02a207f998a44257f305b
----------------------------
Merge: 5c55bb7 2d343e7 Merge ssandberg@bk-internal.mysql.com:/home/bk/mysql-5.1-new-rpl into  riska.(none):/home/sven/bk/b26395-autocommit-xa/5.1-new-rpl 	31a6b8f4dc8e98d403210fce55a53e52eb5695f4
----------------------------
"make_win_bin_dist CMakeLists.txt resolveip.c Makefile.am: Better Windows support in the scripts directory mysql_config.pl.in, mysql_install_db.pl.in: New Perl version of Unix shell script, mainly for Windows Many files in scripts directory: Use default Perl location ""#!/usr/bin/perl"" instead of the build host path "	18418ff8c5c6d3700bc199417d0dd57af7d9b918
----------------------------
"Fix for bug #33305: Test case in 'skip_grants' file need dynamic loading to be compiled in The problem was that on a statically built server an attempt to create a UDF resulted in a different, but reasonable error (""Can't open shared library"" instead of ""UDFs are unavailable with the --skip-grant-tables option""), which caused a failure for the test case for bug #32020. Fixed by moving the test case for bug #32020 from skip_grants.test to a separate test to ensure that it is only run when the server is built with support for dynamically loaded libraries. "	578b3632cce5b97d63d1c7d9bb14e9ce631af8d3
----------------------------
Move test rpl_server_id to suite rpl 	aa36cb781b7886b6dc8de4d9b5f7387163b3d928
----------------------------
bug#30435 changes due to non-determinism in value of read_buffer_size. 	c5b597bc8953591ef824a55b9bcf7acf317f5d68
----------------------------
Merge: 3624851 0ca3250 Merge aelkin@bk-internal.mysql.com:/home/bk/mysql-5.0-rpl into  koti.dsl.inet.fi:/home/elkin/MySQL/TEAM/FIXES/5.0/bug33435-load_data_read_buffer_size 	7801f290419fd725f3532129335bfe56786e1b25
----------------------------
BUG#30435 loading large LOAD DATA INFILE breaks slave with read_buffer_size set on master BUG#33413 show binlog events fails if binlog has event size of close to max_allowed_packet The size of Append_block replication event was determined solely by read_buffer_size whereas the rest of replication code deals with max_allowed_packet. When the former parameter was set to larger than the latter there were two artifacts: the master could not read events from binlog; show master events did not show. Fixed with - fragmenting the used io-cached buffer into pieces each size of less than max_allowed_packet (bug#30435) - incrementing show-binlog-events handling thread's max_allowed_packet with the max estimated for the replication header size 	0ca3250e5910e5e636cbf774027747c3835fe616
----------------------------
Merge: fabaa50 25d53f9 Merge riska.(none):/home/sven/bk/b26395-autocommit-xa/5.0-rpl into  riska.(none):/home/sven/bk/b26395-autocommit-xa/5.1-new-rpl Should really not be merged, will undo later 	e0b7658653b0c297058336756c1644eb95365687
----------------------------
BUG#26395: if crash during autocommit update to transactional table on master, slave fails Now, every transaction (including autocommit transactions) start with a BEGIN and end with a COMMIT/ROLLBACK in the binlog. Added a test case, and updated lots of test case result files. 	25d53f907ce93b2ab285942e3ccae4926f9bd401
----------------------------
BUG#28908 Replication: set global server_id is not setting the session server_id When set the server-id dynamically, the server_id member of current thread is not updated. Update the server_id member of current thread after updated the global variable value. 	329d1a7bf7881d906b8de97dbd14e86c4de7735c
----------------------------
Use --skip-ssl by default 	412ab8016b0c637ecbdca1f3071c5bb923b6533a
----------------------------
BUG#12691 (Exec_master_log_pos corrupted with SQL_SLAVE_SKIP_COUNTER): Complementary patch since LOAD DATA INFILE was not covered in the previous patch. This patch adds a check so that the slave skip counter is not decreased to zero if seeing a BEGIN_LOAD_QUERY_EVENT, APPEND_BLOCK_EVENT, or CREATE_FILE_EVENT since these cannot end a group. The group is terminated by an EXECUTE_LOAD_QUERY_ EVENT or DELETE_FILE_EVENT. 	f1c32705f1800bdcff4f8f8fd441552272fe1ce2
----------------------------
branches/zip: Fast index creation: Lock the data dictionary only after acquiring the table lock.  The data dictionary should not be locked for long periods.  Before this change, in the worst case, the dictionary would be locked until the expiration of innodb_lock_wait_timeout. Virtually, transaction-level locks (locks on database objects, such as records and tables) have a latching order level of SYNC_USER_TRX_LOCK, which is above any InnoDB rw-locks or mutexes.  However, the latching order of SYNC_USER_TRX_LOCK is never checked, not even by UNIV_SYNC_DEBUG. ha_innobase::add_index(), ha_innobase::final_drop_index(): Invoke row_mysql_lock_data_dictionary(trx) only after row_merge_lock_table(). 	e3d19b0f765659c886466c1be388939d95175789
----------------------------
Add new pkgplugindir handling to seperate plugins from libraries, and allow override for binary distributions.  Extend mysql_config to print compiled-in plugin location for third-party plugins to use.  Resolves bug#31736. 	f988a7e600b2eb997d0211ee0c9e7cb436fd260a
----------------------------
"Use dynamic switch directly from ""server_need_restart"" for better control of when to do it. Remove #!force-restart and #!fresh-datadir "	ec886a34c648493fb9c45ac91357492aad3d14b2
----------------------------
Use absolute path to allow tets to be run also when datadir differs 	f4d93f41bc379e3a271c107d190630b7671861a4
----------------------------
Merge: ef4295a 4b5f344 Merge damien-katzs-computer.local:/Users/dkatz/mysql-5.1-runtime into  damien-katzs-computer.local:/Users/dkatz/Com_create_function 	6b2815bedce6d7915377b5581c36b0f8462f79b2
----------------------------
"Bug #30252	Com_create_function is not incremented. Added Com_create_spfunction and all other commands previously missing to the global status variables. "	4b5f3444169ee19a6a16a35e716179ad9049410f
----------------------------
BUG#32407: Impossible to do point-in-time recovery from older binlog Problem: it is unsafe to read base64-printed events without first reading the Format_description_log_event (FD).  Currently, mysqlbinlog cannot print the FD. As a side effect, another bug has also been fixed: When mysqlbinlog --start-position=X was specified, no ROLLBACK was printed. I changed this, so that ROLLBACK is always printed. This patch does several things: - Format_description_log_event (FD) now print themselves in base64 format. - mysqlbinlog is now able to print FD events.  It has three modes: --base64-output=auto    Print row events in base64 output, and print FD event.  The FD event is printed even if it is outside the range specified with --start-position, because it would not be safe to read row events otherwise. This is the default. --base64-output=always  Like --base64-output=auto, but also print base64 output for query events.  This is like the old --base64-output flag, which is also a shorthand for --base64-output=always --base64-output=never   Never print base64 output, generate error if row events occur in binlog.  This is useful to suppress the FD event in binlogs known not to contain row events (e.g., because BINLOG statement is unsafe, requires root privileges, is not SQL, etc) - the BINLOG statement now handles FD events correctly, by setting the thread's rli's relay log's description_event_for_exec to the loaded event. In fact, executing a BINLOG statement is almost the same as reading an event from a relay log.  Before my patch, the code for this was separated (exec_relay_log_event in slave.cc executes events from the relay log, mysql_client_binlog_statement in sql_binlog.cc executes BINLOG statements).  I needed to augment mysql_client_binlog_statement to do parts of what exec_relay_log_event does.  Hence, I did a small refactoring and moved parts of exec_relay_log_event to a new function, which I named apply_event_and_update_pos.  apply_event_and_update_pos is called both from exec_relay_log_event and from mysql_client_binlog_statement. - When a non-FD event is executed in a BINLOG statement, without previously executing a FD event in a BINLOG statement, it generates an error, because that's unsafe.  I took a new error code for that: ER_NO_FORMAT_DESCRIPTION_EVENT_BEFORE_BINLOG_STATEMENTS. In order to get a decent error message containing the name of the event, I added the class method char* Log_event::get_type_str(Log_event_type type), which returns a string name for the given Log_event_type.  This is just like the existing char* Log_event::get_type_str(), except it is a class method that takes the log event type as parameter. I also added PRE_GA_*_ROWS_LOG_EVENT to Log_event::get_type_str(), so that names of old rows event are properly printed. - When reading an event, I added a check that the event type is known by the current Format_description_log_event. Without this, it may crash on bad input (and I was struck by this several times). - I patched the following test cases, which all contain BINLOG statements for row events which must be preceded by BINLOG statements for FD events: - rpl_bug31076 While I was here, I fixed some small things in log_event.cc: - replaced hard-coded 4 by EVENT_TYPE_OFFSET in 3 places - replaced return by DBUG_VOID_RETURN in one place - The name of the logfile can be '-' to indicate stdin.  Before my patch, the code just checked if the first character is '-'; now it does a full strcmp().  Probably, all arguments that begin with a - are already handled somewhere else as flags, but I still think it is better that the code reflects what it is supposed to do, with as little dependencies as possible on other parts of the code.  If we one day implement that all command line arguments after -- are files (as most unix tools do), then we need this. I also fixed the following in slave.cc: - next_event() was declared twice, and queue_event was not static but should be static (not used outside the file). 	5cc348a6a6d4e93bf6f0401996d029b6f249e66d
----------------------------
fix colliding config param numbers 	124b4da08bf50f4bdb7334d44f98c5287121cb78
----------------------------
BUG#26395: if crash during autocommit update to transactional table on master, slave fails Now, every transaction (including autocommit transactions) starts with a BEGIN and ends with a COMMIT/ROLLBACK in the binlog. Added a test case, and updated lots of test case result files. 	ab396c1d091a4836c8c6abca9c34b7869ce76055
----------------------------
Only skip restart(and use dynamic binlog switch) if the next test has 'binlog_format_switch' set 	4930a27d6c177fabb2e653d7ee56aab2ff1c56ea
----------------------------
Don't add --binlog-format if --skip-log-bin or --loose-skip-log-bin is used for the test 	864989d97f22d16bd38ac6c0ca039f4fc4760a82
----------------------------
reserve config numbers 	d4947930e2d5045f6232e04d3e6e54850ce1b8a0
----------------------------
Fix a compilation warning and a subtle bug with truncation of the last_insert_id introduced by the patch for Bug#12713 (part 1) 	2789a12b6a2e615d9793e770eb9166dd1b891f94
----------------------------
Bug#32395 Alter table under a impending global read lock causes a server crash The problem is that some DDL statements (ALTER TABLE, CREATE TRIGGER, FLUSH TABLES, ...) when under LOCK TABLES need to momentarily drop the lock, reopen the table and grab the write lock again (using reopen_tables). When grabbing the lock again, reopen_tables doesn't pass a flag to mysql_lock_tables in order to ignore the impending global read lock, which causes a assertion because LOCK_open is being hold. Also dropping the lock must not signal to any threads that the table has been relinquished (related to the locking/flushing protocol). The solution is to correct the way the table is reopenned and the locks grabbed. When reopening the table and under LOCK TABLES, the table version should be set to 0 so other threads have to wait for the table. When grabbing the lock, any other flush should be ignored because it's theoretically a atomic operation. The chosen solution also fixes a potential discrepancy between binlog and GRL (global read lock) because table placeholders were being ignored, now a FLUSH TABLES WITH READ LOCK will properly for table with open placeholders. It's also important to mention that this patch doesn't fix a potential deadlock if one uses two GRLs under LOCK TABLES concurrently. 	137e90ed55e94b70f842368d56d99347cb634775
----------------------------
"Bug #29993	Default value of log_output should be 'FILE', not 'TABLE' Ensure default logging is ""file"" logging, for additional ways the option can be turned on. Verified on OS X, but not tested automatically. "	9a2b51d34a427bb2ec6840d5404b596390289176
----------------------------
WL#4189 - dynamic configuration support - safe process - cleanups - create new suite for fedarated 	d918988baa943a18b17468f7cf2aa73833217f83
----------------------------
"Bug#12713 ""Error in a stored function called from a SELECT doesn't cause ROLLBACK of statement"", part 1. Review fixes. Do not send OK/EOF packets to the client until we reached the end of the current statement. This is a consolidation, to keep the functionality that is shared by all SQL statements in one place in the server. Currently this functionality includes: - close_thread_tables() - log_slow_statement(). After this patch and the subsequent patch for Bug#12713, it shall also include: - ha_autocommit_or_rollback() - net_end_statement() - query_cache_end_of_result(). In future it may also include: - mysql_reset_thd_for_next_command(). "	ebb9c5d9838f333a73fb197d2bb59ff4ccab6fb9
----------------------------
"Bug#31552 Replication breaks when deleting rows from out-of-sync table without PK Bug#31609 Not all RBR slave errors reported as errors bug#32468 delete rows event on a table with foreign key constraint fails The first two bugs comprise idempotency issues. First, there was no error code reported under conditions of the bug description although the slave sql thread halted. Second, executions were different with and without presence of prim key in the table. Third, there was no way to instruct the slave whether to ignore an error and skip to the following event or to halt. Fourth, there are handler errors which might happen due to idempotent applying of binlog but those were not listed among the ""idempotent"" error list. All the named issues are addressed. Wrt to the 3rd, there is the new global system variable, changeble at run time, which controls the slave sql thread behaviour. The new variable allows further extensions to mimic the sql_mode session/global variable. To address the 4th, the new bug#32468 had to be fixed as it was staying in the way. "	d8d6db6f78f115900167b7ded5ed84fa6f1d806b
----------------------------
"Bug #30651	Problems with thread_handling system variable Changed thread_handling variable to a global only, read only variable, as it is currently used. "	4abafe2617a67194d05c94eab21a6afe7d3c887b
----------------------------
Bug #27440 read_only allows create and drop database When read_only option was enabled, a user without SUPER privilege could perform CREATE DATABASE and DROP DATABASE operations. This patch adds a check to make sure this isn't possible. It also attempts to simplify the logic used to determine if relevant tables are updated, making it more human readable. 	392cc185b3a6b43165df7f0ed942c3d7666fbcbb
----------------------------
BUG#25677 - With --skip-symbolic-links option on, DATA DIRECTORY clause is silently ignored When symbolic links are disabled by command line option or NO_DIR_IN_CREATE sql mode, CREATE TABLE silently ignores DATA/INDEX DIRECTORY options. With this fix a warning is issued when symbolic links are disabled. 	1d0ea2d04377ca7040aba98fd4acbe1f98e0e091
----------------------------
configure.in: Merged missing change in the 5.0 community repository, --without-server was not working if thread safe client was enabled (Bug#32898) 	b058fce73d0d85c02e2552c656cdace977792720
----------------------------
Bug#32996 log_tables.test fails sporadically Only select entries from the general_log that were issued by the current connection. 	b79b57c645048c197f9edfb09484eea631005751
----------------------------
"configure.in: Removed the auto detection and use of Solaris ""libmtmalloc"", as it cause regression on bug#18322. The code removed also prevented a build without using this library. Users can still compile with ""libmtmalloc"", if configuring with ""--with-mysqld-libs=-lmtmalloc"" "	5caf347a560a7592da68ee8dd191a9d074bf08c4
----------------------------
branches/zip: Merge r2154 from trunk: innodb.result, innodb.test: Revert the changes in r2145. The tests that were removed by MySQL ChangeSet@1.2598.2.6  2007-11-06 15:42:58-07:00  tsmith@hindu.god were moved to a new test, innodb_autoinc_lock_mode_zero, which is kept in the MySQL BitKeeper tree. 	45a28445430dced496be857ca8bee8fc9d0ca234
----------------------------
branches/5.1: Merge r2154 from trunk: innodb.result, innodb.test: Revert the changes in r2145. The tests that were removed by MySQL ChangeSet@1.2598.2.6  2007-11-06 15:42:58-07:00  tsmith@hindu.god were moved to a new test, innodb_autoinc_lock_mode_zero, which is kept in the MySQL BitKeeper tree. 	88cdf19670d99819e949a91aabbee8019fe05154
----------------------------
Bug #32679: mysqld_safe looks for errmsg.sys in wrong path The fix for bug 28544 moved our package data from ./share/mysql to ./share.  mysqld_safe had the old directory hard-coded.  The fix is to use the @pkgdatadir@ and @prefix@ values, to adapt to different ways of building the package. 	95b791c7af4c5659e1c022de100af15dd8fd39cd
----------------------------
Bug #26921 Problem in mysql_insert_id() Embedded C API function. client library only sets mysql->insert_id when query returned no recordset. So the embedded library should behave the same way 	5a6161dea42f73a241dd7068eb6b6b5a2562b74d
----------------------------
"A patch for BUG#32148: killing a query may be ineffective. The problem was that THD::killed was reset after a command was read from the socket, but before it was actually handled. That lead to a race: if another KILL statement was issued for this connection in the middle of reading from the socket and processing a command, THD::killed state would be cleaned. The fix is to move this cleanup into net_send_error() function. A sample test case exists in binlog_killed.test: - connection 1: start a new transaction on table t1; - connection 2: send query to the server (w/o waiting for the result) to update data in table t1 -- this query will be blocked since there is unfinished transaction; - connection 1: kill query in connection 2 and finish the transaction; - connection 2: get result of the previous query -- it should be the ""query-killed"" error. This test however contains race condition, which can not be fixed with the current protocol: there is no way to guarantee, that the server will receive and start processing the query in connection 2 (which is intended to get blocked) before the KILL command (sent in the connection 1) will arrive. In other words, there is no way to ensure that the following sequence will not happen: - connection 1: start a new transaction on table t1; - connection 1: kill query in connection 2 and finish the transaction; - connection 2: send query to the server (w/o waiting for the result) to update data in table t1 -- this query will be blocked since there is unfinished transaction; - connection 2: get result of the previous query -- the query will succeed. So, there is no test case for this bug, since it's impossible to write a reliable test case under the current circumstances. "	8377c71f413b6087ace9eef3ea1cf412b93c74ff
----------------------------
ndb - TO during SR now config option, wait-to-sr = true - wait for all nodes to do TO before running last startphases (old behaviour) wait-to-sr = false - all cluster to start, and let TO nodes start (parallel) afterwards 	896fdf8963c2c5cd38f8b43dd9ab046d813b20e9
----------------------------
"Merge a change from MySQL AB: ChangeSet@1.2528.116.42  2007-09-08 20:26:12-07:00  antony@xiphis.org Bug#30919 ""Rows not deleted from innodb partitioned tables if --innodb_autoinc_lock_mode=0"" Due to a previous bugfix which initializes a previously uninitialized variable, ha_partition::get_auto_increment() may fail to operate correctly when the storage engine reports that it is only reserving one value and one or more partitions have a different 'next-value'. Currently, only affects Innodb's new-style auto-increment code which reserves larger blocks of values and has less inter-thread contention. ha_innodb.cc: Bug30919 Only set *first_value if it is less than autoinc value. This allows a higher value to be hinted when operating as a partitioned table. "	2928e930d887ce18489972617d46ca1b5cabbc28
----------------------------
"Merge a change from MySQL AB: ChangeSet@1.2528.116.40  2007-09-08 11:19:35-07:00  acurtis@xiphis.org Bug#30907 ""Regression: ""--innodb_autoinc_lock_mode=0"" (off) not same as older releases"" Bug#28430 ""Failure in replication of innodb partitioned tables on row/mixed format"" Bug#30888 ""Innodb table + stored procedure + row deletion = server crash"" Apply Oracle patch from Sunny Include tests cases by Omer Ensure that innobase_read_and_init_auto performs table autoinc lock when lock_mode = 0 No need for ""if"" guard around row_unlock_table_autoinc_for_mysql() because it already performs same check. Make autoinc_lock_mode variable read-only for duration of running mysqld process. ha_innodb.cc: Bug30907/28430 ""Regression: ""--innodb_autoinc_lock_mode=0"" (off) not same as older releases"" ""Failure in replication of innodb partitioned tables on row/mixed format"" Apply Oracle patch from Sunny Ensure that innobase_read_and_init_auto performs table autoinc lock when lock_mode = 0 No need for ""if"" guard around row_unlock_table_autoinc_for_mysql() because it already performs same check. Make autoinc_lock_mode variable read-only for duration of running mysqld process. "	7acad9f37276f2cb24801871d898e98b937b3880
----------------------------
Bug #32219: too many hosts in default grant tables 6.0.3 Fix is to remove any references to the current hostname when running mysql_install_db --cross-bootstrap.  (The dist-hook make target makes this call, and the resulting data directory is included in the source distribution as win/data/*.) Also, a few other clean-ups to mysql_install_db while there. 	da357f723a696056cc4104ff521588f1033f971a
----------------------------
Bug#8693 Test 'rpl_log_pos' fails sometimes Moved disabling to rpl suite. Bug#32801 wait_timeout.test fails randomly Disabled test case. 	4d38a04665b63c73a229c61049ec40b2fc5d791b
----------------------------
Increase the slave_net_timeout to double of what the master uses for connect_timeout 	038a093c979f178a0ba2b7b87bc436724d645df6
----------------------------
Bug#20830 - INSERT DELAYED does not honour SET INSERT_ID Bug#20627 - INSERT DELAYED does not honour auto_increment_* variables Fixed wrong variable assignment. 	f140e7e000706ff65ea19d71bc13b064ad5487cc
----------------------------
5.0 version of the fix for bug #9481: mysql_insert_id() returns 0 after insert ... select. The 5.0 manual page for mysql_insert_id() does not mention anything about INSERT ... SELECT, though its current behavior is incosistent with what the manual says about the plain INSERT. Fixed by changing the AUTO_INCREMENT and mysql_insert_id() handling logic in INSERT ... SELECT to be consistent with the INSERT behavior, the manual, and the changes in 5.1 introduced by WL3146: - mysql_insert_id() now returns the first automatically generated AUTO_INCREMENT value that was successfully inserted by INSERT ... SELECT -  if an INSERT ... SELECT statement is executed, and no automatically generated value is successfully inserted, mysql_insert_id() now returns the ID of the last inserted row. 	24c9d86416b882a7e339d11d606bb5a2c9019ef9
----------------------------
WL#3949, Added the optimization of rpl tests if mtr started w/o a combination and --mysqld=--binlog-format=XXX 	862cb6cadf8216cbd60163c6d59bf71cdb49fc90
----------------------------
"WL#3949 Test should set binlog format dnamically - Reorganize collect a little to make it easier to apply optimizations and settings to collected test cases. - Add suite/rpl/combination file - Rename include/set_binlog_format_x.inc to .sql since thay are run by ""mysql"" "	20fe800c451cd093a26a59f3dced45d48a283fd5
----------------------------
Fix for bug #32080: Excessive warnings on Solaris: setrlimit could not change the size of core files. Suppress the 'setrlimit could not change the size of the core files' warning in mysql-test-run. We do not want core files on some of the PushBuild hosts, and PushBuild itself does not set --core-files, so that warning is expected. 	347c33d606ec1ecfd208951a95b61a41bbe8d69f
----------------------------
"Makefile.am, configure.in: Include ""manual.chm"" in source TAR if it exists "	41778b565b75220361b15e375d21fb50589001cc
----------------------------
configure.in: Revert version back to 5.0.52 for release build 	003f5640e7cb6bb60358f005a2f240ac0db1912e
----------------------------
"This changeset fixes Bug#31567 ""datadict"" tests (all engines) fail: Reference protocol is non-standard build Bug#30418 ""datadict"" tests (all engines) fail: Dependency on the host name for ordering Modifications: 1. The standard builds (build team) do not contain the collation 'utf8_general_cs'. The common developer builds (compuile-....-max) contain this collation. Solution fitting to both build variants: Exclude the collation 'utf8_general_cs' from result sets. 2. Use mysqltest builtin sorting of result set for the statement where the hostname affects the row order. "	4922727fb7764bd55cd483c5eacd37da0fafab45
----------------------------
branches/zip: INFORMATION_SCHEMA.INNODB_LOCKS: Quote lock_table, lock_index. innodb_information_schema.test. Add tests that display most columns from INFORMATION_SCHEMA.INNODB_LOCKS.  Test that quoting of table names works and respects SQL_MODE='ANSI_QUOTES'. innobase_print_identifier(): Remove. innobase_convert_identifier(): New function, based on innobase_print_identifier(). innobase_convert_name(): New function, similar to ut_print_namel(), but using a memory buffer. ut_print_namel(): Use innobase_convert_name(). fill_innodb_locks_from_cache(): Convert lock_table and lock_index by calling innobase_convert_name(). 	afccd4afd24b3b1472ca4505f61509a863b519b9
----------------------------
Bug#30384: Having SQL_BUFFER_RESULT option in the CREATE .. KEY(..) .. SELECT led to creating corrupted index. Corrected fix. The new method called prepare2 is added to the select_create class. As all preparations are done by the select_create::prepare function it doesn't do anything. Slightly changed algorithm of calling the start_bulk_insert function. Now it's called from the select_insert::prepare2 function when the SQL_BUFFER_RESULT flags is set. The is_bulk_insert_mode flag is removed as it is not needed anymore. 	da7470afb153cf9df6c8b864a5dd03eaa73a3f74
----------------------------
Bug#32429 ssl_cipher setting in my.cnf not read by libmysqlclient 	55cb6d64c3f9d22cb04bfab18cb26b6b5356df97
----------------------------
"Bug#26379 - Combination of FLUSH TABLE and REPAIR TABLE corrupts a MERGE table Bug 26867 - LOCK TABLES + REPAIR + merge table result in memory/cpu hogging Bug 26377 - Deadlock with MERGE and FLUSH TABLE Bug 25038 - Waiting TRUNCATE Bug 25700 - merge base tables get corrupted by optimize/analyze/repair table Bug 30275 - Merge tables: flush tables or unlock tables causes server to crash Bug 19627 - temporary merge table locking Bug 27660 - Falcon: merge table possible Bug 30273 - merge tables: Can't lock file (errno: 155) The problems were: Bug 26379 - Combination of FLUSH TABLE and REPAIR TABLE corrupts a MERGE table 1. A thread trying to lock a MERGE table performs busy waiting while REPAIR TABLE or a similar table administration task is ongoing on one or more of its MyISAM tables. 2. A thread trying to lock a MERGE table performs busy waiting until all threads that did REPAIR TABLE or similar table administration tasks on one or more of its MyISAM tables in LOCK TABLES segments do UNLOCK TABLES. The difference against problem #1 is that the busy waiting takes place *after* the administration task. It is terminated by UNLOCK TABLES only. 3. Two FLUSH TABLES within a LOCK TABLES segment can invalidate the lock. This does *not* require a MERGE table. The first FLUSH TABLES can be replaced by any statement that requires other threads to reopen the table. In 5.0 and 5.1 a single FLUSH TABLES can provoke the problem. Bug 26867 - LOCK TABLES + REPAIR + merge table result in memory/cpu hogging Trying DML on a MERGE table, which has a child locked and repaired by another thread, made an infinite loop in the server. Bug 26377 - Deadlock with MERGE and FLUSH TABLE Locking a MERGE table and its children in parent-child order and flushing the child deadlocked the server. Bug 25038 - Waiting TRUNCATE Truncating a MERGE child, while the MERGE table was in use, let the truncate fail instead of waiting for the table to become free. Bug 25700 - merge base tables get corrupted by optimize/analyze/repair table Repairing a child of an open MERGE table corrupted the child. It was necessary to FLUSH the child first. Bug 30275 - Merge tables: flush tables or unlock tables causes server to crash Flushing and optimizing locked MERGE children crashed the server. Bug 19627 - temporary merge table locking Use of a temporary MERGE table with non-temporary children could corrupt the children. Temporary tables are never locked. So we do now prohibit non-temporary chidlren of a temporary MERGE table. Bug 27660 - Falcon: merge table possible It was possible to create a MERGE table with non-MyISAM children. Bug 30273 - merge tables: Can't lock file (errno: 155) This was a Windows-only bug. Table administration statements sometimes failed with ""Can't lock file (errno: 155)"". These bugs are fixed by a new implementation of MERGE table open. When opening a MERGE table in open_tables() we do now add the child tables to the list of tables to be opened by open_tables() (the ""query_list""). The children are not opened in the handler at this stage. After opening the parent, open_tables() opens each child from the now extended query_list. When the last child is opened, we remove the children from the query_list again and attach the children to the parent. This behaves similar to the old open. However it does not open the MyISAM tables directly, but grabs them from the already open children. When closing a MERGE table in close_thread_table() we detach the children only. Closing of the children is done implicitly because they are in thd->open_tables. For more detail see the comment at the top of ha_myisammrg.cc. Changed from open_ltable() to open_and_lock_tables() in all places that can be relevant for MERGE tables. The latter can handle tables added to the list on the fly. When open_ltable() was used in a loop over a list of tables, the list must be temporarily terminated after every table for open_and_lock_tables(). table_list->required_type is set to FRMTYPE_TABLE to avoid open of special tables. Handling of derived tables is suppressed. These details are handled by the new function open_n_lock_single_table(), which has nearly the same signature as open_ltable() and can replace it in most cases. In reopen_tables() some of the tables open by a thread can be closed and reopened. When a MERGE child is affected, the parent must be closed and reopened too. Closing of the parent is forced before the first child is closed. Reopen happens in the order of thd->open_tables. MERGE parents do not attach their children automatically at open. This is done after all tables are reopened. So all children are open when attaching them. Special lock handling like mysql_lock_abort() or mysql_lock_remove() needs to be suppressed for MERGE children or forwarded to the parent. This depends on the situation. In loops over all open tables one suppresses child lock handling. When a single table is touched, forwarding is done. Behavioral changes: =================== This patch changes the behavior of temporary MERGE tables. Temporary MERGE must have temporary children. The old behavior was wrong. A temporary table is not locked. Hence even non-temporary children were not locked. See Bug 19627 - temporary merge table locking. You cannot change the union list of a non-temporary MERGE table when LOCK TABLES is in effect. The following does *not* work: CREATE TABLE m1 ... ENGINE=MRG_MYISAM ...; LOCK TABLES t1 WRITE, t2 WRITE, m1 WRITE; ALTER TABLE m1 ... UNION=(t1,t2) ...; However, you can do this with a temporary MERGE table. You cannot create a MERGE table with CREATE ... SELECT, neither as a temporary MERGE table, nor as a non-temporary MERGE table. CREATE TABLE m1 ... ENGINE=MRG_MYISAM ... SELECT ...; Gives error message: table is not BASE TABLE. "	060527415532b145bd9612a45b82ea7fbd4ca94e
----------------------------
A patch for BUG#19723: kill of active connection yields different error code depending on platform. On Mac OS X, KILL statement issued to kill the current connection would return a different error code and message than on other platforms ('MySQL server has gone away' instead of 'Shutdown in progress'). The reason for this difference was that on Mac OS X we have macro SIGNAL_WITH_VIO_CLOSE defined. This macro forces KILL implementation to close the communication socket of the thread that is being killed. SIGNAL_WITH_VIO_CLOSE macro is defined on platforms where just sending a signal is not a reliable mechanism to interrupt the thread from sleeping on a blocking system call. In a nutshell, closing the socket is a hack to work around an operating system bug and awake the blocked thread no matter what. However, if the thread that is being killed is the same thread that issued KILL statement, closing the socket leads to a prematurely lost connection. At the same time it is not necessary to close the socket in this case, since the thread in question is not inside a blocking system call. The fix, therefore, is to not close the socket if the thread that is being killed is the same that issued KILL statement, even with defined SIGNAL_WITH_VIO_CLOSE. 	e8343ca83df952a0901a5a1621130c4f89920f8b
----------------------------
[PATCH] WL4081 Futz with mtr ndb config to enable compressed lcp, backup and O_DIRECT Index: telco/mysql-test/ndb/ndb_config_2_node.ini =================================================================== 	c666e0f3de00843347b95733c8249371b87400b2
----------------------------
[PATCH] WL4081: Add compressed file support to AsyncFile (azio) and support compressed backups. - add azio to NDB - add config option for CompressedBackup - add ability to change CompressedBackup (per-node) online using DUMP interface - add test for mysql-test-run for compressed backups (NOTE: won't pass unless read compressed backups patch also applied) Part of the design here is to by default (i.e. without any of the compressed options enabled) - NOT futz with the code paths for normal IO. So if any bug/problem is found - disabling the compression options means none of that code is run. 	4972d3f814639e580442df12711391af4595de48
----------------------------
"Bug #31562: HAVING and lower case The columns in HAVING can reference the GROUP BY and SELECT columns. There can be ""table"" prefixes when referencing these columns. And these ""table"" prefixes in HAVING use the table alias if available. This means that table aliases are subject to the same storage rules as table names and are dependent on lower_case_table_names in the same way as the table names are. Fixed by : 1. Treating table aliases as table names and make them lowercase when printing out the SQL statement for view persistence. 2. Using case insensitive comparison for table aliases when requested by lower_case_table_names "	3384d3e96c459cc2789c912261541f2b4eb13818
----------------------------
Bug#32091: Security breach via directory changes Merge fix partition_mgm did not require have_symlink. Moved the test case to partition_symlink, which require have_symlink, and should work on both *nix and Windows 	9c05d109aa5d29947315f3e465ef31f0f83c3dc0
----------------------------
"Bug #32063 ""create table like"" works case-significant only in ""embedded"" server (libmysqld) in mysql_creata_like_table() we 'downcase' the complete path to the .frm file. It works fine in standalone case as there usually we only have './' as a path to the datahome, but doesn't work in the embedded server where we add the real path there, so if a directory has uppercase letters in it's name, it won't be found. Fixed by 'downcasing' only database/table pair. "	afb9ecaff910e80debb366a64f5f42fa53dfefc7
----------------------------
"BUG#29083 - test suite times out on OS X 64bit - also in older releases The ""mysql client in mysqld""(which is used by replication and federated) should use alarms instead of setting socket timeout value if the rest of the server uses alarm. By always calling 'my_net_set_write_timeout' or 'net_set_read_timeout' when changing the timeout value(s), the selection whether to use alarms or timeouts will be handled by ifdef's in those two functions. This is minimal backport of patch for BUG#26664, which was pushed to 5.0 and up. Affects 4.1 only. "	c6abad79c8592cae49102c4402a497ea0a8de89f
----------------------------
Fix for bug #32020: loading udfs while --skip-grant-tables is enabled causes out of memory errors The code in mysql_create_function() and mysql_drop_function() assumed that the only reason for UDFs being uninitialized at that point is an out-of-memory error during initialization. However, another possible reason for that is the --skip-grant-tables option in which case UDF initialization is skipped and UDFs are unavailable. The solution is to check whether mysqld is running with --skip-grant-tables and issue a proper error in such a case. 	e703c6a78c97eddf6a8fbf20bebe89d1ae504f93
----------------------------
Remove the --source-install option and instead make use of --srcdir to install system tables directly from the source tree (useful for testing purposes).  This helps clean the script up a lot and clarify the three possible ways the script can be called (using compiled-in paths, passing --basedir pointing to alternative install location, or --srcdir).  Include further tidying as well. This fixes bug#30759. 	8cde2055ad02e23fe75c3471146e7540a6057433
----------------------------
configure.in: bump up version 	fa09818f3f1554de4623deae0483b8bea990a230
----------------------------
Bug #20748: Configuration files should not be read more than once A user could not override system-wide settings in their ~/.my.cnf, because the DEFAULT_SYSCONFDIR was being searched last.  Also, in some configurations (especially when the --sysconfdir compile-time option is set to /etc or /etc/mysql), the system-wide my.cnf file was read multiple times, causing confusion and potential problems. Rearrange default directories to conform to the manual and logic. Move --sysconfdir=<path> (DEFAULT_SYSCONFDIR) from the last default directory to the middle of the list.  $HOME/.my.cnf should be last, so the user is able to override the system-wide settings. Change init_default_directories() to remove duplicates from the list. 	ef59ca3d78b80285c11e59b20451c88496abe513
----------------------------
Bug #31928: Search fails on '1000-00-00' date after sql_mode change When constructing a key image stricter date checking (from sql_mode) should not be enabled, because it will reject invalid dates that the server would otherwise accept for searching when there's no index. Fixed by disabling strict date checking when constructing a key image. 	767dca62513b519151335a0b838c9533517402d7
----------------------------
"Apply snapshot innodb-5.1-ss1989 Fixes the following bugs: Bug #30706: SQL thread on slave is allowed to block client queries when slave load is high Add (innodb|innobase|srv)_replication_delay MySQL config parameter. Bug #30888: Innodb table + stored procedure + row deletion = server crash While adding code for the low level read of the AUTOINC value from the index, the case for MEDIUM ints which are 3 bytes was missed triggering an assertion. Bug #30907: Regression: ""--innodb_autoinc_lock_mode=0"" (off) not same as older releases We don't rely on *first_value to be 0 when checking whether get_auto_increment() has been invoked for the first time in a multi-row INSERT. We instead use trx_t::n_autoinc_rows. Initialize trx::n_autoinc_rows inside ha_innobase::start_stmt() too. Bug #31444: ""InnoDB: Error: MySQL is freeing a thd"" in innodb_mysql.test ha_innobase::external_lock(): Update prebuilt->mysql_has_locked and trx->n_mysql_tables_in_use only after row_lock_table_for_mysql() returns DB_SUCCESS.  A timeout on LOCK TABLES would lead to an inconsistent state, which would cause trx_free() to print a warning. Bug #31494: innodb + 5.1 + read committed crash, assertion Set an error code when a deadlock occurs in semi-consistent read. "	eb654791271ceb11baa5d110df6fde38b3442385
----------------------------
configure.in: bump up version 	514d3625fc53d75902c0b496bc2a5901761d8526
----------------------------
Provide better feedback to the user when unable to find MySQL files usually caused by a bad basedir setting. 	51be103e131206a3beffa5f8445c880b89229613
----------------------------
Bug #28597 Replication doesn't start after upgrading to 5.1.18 Since bug@20166, which replaced the binlog file name generating to base on pidfile_name instead of the previous glob_hostname, the binlog file name suddenly started to be stored solely in the absolute path format, including a case when --log-bin option meant a relative path. What's more serious, the path for binlog file can lead unrequestedly to pid-file directory so that after any proper fix for this bug there might be similar to the bug report consequences for one who upgrades from post-fix-bug@20166-pre-fix-bug@28597 to post-fix-bug@28597. Fixed with preserving`pidfile_name' (intr.by bug@20166) but stripping off its directory part. This restores the original logics of storing the names in compatible with --log-bin option format and with the requirement for --log-bin ralative path to corresond to the data directory. Side effects for this fix: effective fixing bug@27070, refining its test; ensuring no overrun for buff can happen anymore (Bug#31836 insufficient space reserved for the suffix of relay log file name); bug#31837  --remove_file $MYSQLTEST_VARDIR/tmp/bug14157.sql missed in rpl_temporary.test; fixes Bug@28603  Invalid log-bin default location; 	571f8be43057e82eda6cd5250ebb2c36b0ba8aea
----------------------------
Bug#28170 replicate-ignore-db=mysql should not ignore mysql.ndb_apply_status - Add test case --- Bug#28170 replicate-ignore-db=mysql should not ignore mysql.ndb_apply_status - Add test case 	5e3725bf481cc0d94b47413e15f635db8cc4b99c
----------------------------
"Bug#30671 ""ALTER SERVER can cause server to crash"" While retrieving values, it would erronously set the socket value to NULL and attempt to use it in strcmp(). Ensure it is correctly set to """" so that strcmp may not crash. "	bcfe0fa67eb32df9ab3df117c9ff11f1d271da5b
----------------------------
"Remove net_printf_error(). Do not talk to network directly in check_user()/check_connection()/check_for_max_user_connections(). This is a pre-requisite patch for the fix for Bug#12713 ""Error in a stored function called from a SELECT doesn't cause ROLLBACK of statem"" Implement review comments. "	c0bb7f8682cd11ad9fc9915781c8447ac2818094
----------------------------
"Fix for a BUG#31649: events.test fails: NULL ""state"" field of SHOW PROCESSLIST. The problem was a race condition: if the Event Scheduler was not quick enough, the following scenario happens: - The Event Scheduler picks up the created event; - The event is executed; - event_scheduler_thread->proc_info is set to NULL; - The client issues SELECT FROM I_S. The fix is to wait for the Event Scheduler to reach 'Waiting for next activation' state. "	62d2ee935e5038b805a368c5eb2f0a30adce1c29
----------------------------
"Makefile.am: Ensure use of libedit ""config.h"" by adding ""-I. -I$(srcdir)"" to DEFS, work around for problem with automake 1.10 (bug#24809) "	2f88dce6ff191e001f4de1a0521143bf48692fb6
----------------------------
Fix failing init_connect.test (5.1-runtime). 	5a09edd203ea125b846af82935b7d7e5da430435
----------------------------
Bug#30366 NDB fails to start on OS X, PPC, 64 bit - The errno variable should only be used when the previous socket write failed, it should be regarded as undefined at other times 	56ec78f7f988c54391143c802ec7345b5cc72e87
----------------------------
Bug#30889: filesort and order by with float/numeric crashes server There are two problems with ROUND(X, D) on an exact numeric (DECIMAL, NUMERIC type) field of a table: 1) The implementation of the ROUND function would change the number of decimal places regardless of the value decided upon in fix_length_and_dec. When the number of decimal places is not constant, this would cause an inconsistent state where the number of digits was less than the number of decimal places, which crashes filesort. Fixed by not allowing the ROUND operation to add any more decimal places than was decided in fix_length_and_dec. 2) fix_length_and_dec would allow the number of decimals to be greater than the maximium configured value for constant values of D. This led to the same crash as in (1). Fixed by not allowing the above in fix_length_and_dec. 	6b92ec4acbf78892bc4880913a762db0189ce20f
----------------------------
BUG#12691 (Exec_master_log_pos corrupted with SQL_SLAVE_SKIP_COUNTER): Adding code to keep skipping events while inside a transaction. Execution will start just after the transaction has been skipped. 	83cfdff63883dbc70794945a0b6a97e6f568d8e4
----------------------------
"Fix for bug #29131: SHOW VARIABLES reports variable 'log' but SET doesn't recognize it This is a 5.1 version of the patch. Problem: 'log' and 'log_slow_queries' were ""fixed"" variables, i.e. they showed up in SHOW VARIABLES, but could not be used in expressions like ""select @@log"". Also, using them in the SET statement produced an incorrect ""unknown system variable"" error. Solution: Since as of MySQL 5.1.12 one can enable or disable the general query log or the slow query log at runtime by changing values of general_log/slow_query_log, make 'log' and 'log_slow_queries"" to be synonyms for 'general_log' and 'slow_query_log' respectively.  This makes expressions using the '@@var' syntax backward compatible with 5.0 and SHOW VARIABLES output to be consistent with the SET statement. "	1f268043f6c99d1ca10e9e513c2673b4f03b85f4
----------------------------
"Fix for bug #29131: SHOW VARIABLES reports variable 'log' but SET doesn't recognize it This is a 5.0 version of the patch, it will be null-merged to 5.1 Problem: 'log' and 'log_slow_queries' were ""fixed"" variables, i.e. they showed up in SHOW VARIABLES, but could not be used in expressions like ""select @@log"". Also, using them in the SET statement produced an incorrect ""unknown system variable"" error. Solution: Make 'log' and 'log_slow_queries' read-only dynamic variables to make them available for use in expressions, and produce a correct error about the variable being read-only when used in the SET statement. "	99f4b74311c8e08446fb2db77e5ccc43d6d9af1d
----------------------------
after-merge fix: new sys_var_character_set_client classs introduced to perform separate checking. 	c380020a7e70a8fdfefb72f9aafa3657577ff176
----------------------------
Bug #31332 --event-scheduler option misbehaving Changed the behaviour of the --event-scheduler option when used without an arguments. It now turns the option on. 	5b01a77c9c92dff6020c58d8c24f22f7659d3f16
----------------------------
This changeset contains the following stuff: - Fix for Bug#28827 Partition test needs archive engine Bug#26669 Two tests on partition fail while blackhole engine is missing Solution: Move ARCHIVE and BLACKHOLE sub test cases to their own main test. - The two bugs above + the fact that CSV could be also sometimes not available --> Move also CSV sub tests out. - Minor cleanups - Replace error numbers with error names - fix typos, wrong comments - remove redundant sub test cases - add missing drop database - SET GLOBAL general_log = default is wrong, = 1 is correct 	51fd4937c40762f8f6159a18297cad95e733ecdc
----------------------------
Bug #28687: Search fails on '0000-00-00' date after sql_mode change When doing indexed search the server constructs a key image for faster comparison to the stored keys. While doing that it must not perform (and stop if they fail) the additional date checks that can be turned on by the SQL mode because there already may be values in the table that don't comply with the error checks. Fixed by ignoring these SQL mode bits while making the key image. 	52b35112cf71ed63487b1f7ac3a73a99013f56fa
----------------------------
BUG#24860 (Incorrect SLAVE_TRANSACTION_RETRIES code can result in slave stuck): If a temporary error occured inside a group on an event that was not the first event of the group, the slave could get stuck because the retry counter is reset whenever an event was executed successfully. This patch only reset the retry counter when an entire group has been successfully executed, or failed with a non-transient error. 	012bccc09f10825713e352784fc4abeb14a99d48
----------------------------
Patch for BUG#31111: --read-only crashes MySQL (events fail to load). There actually were several problems here: - WRITE-lock is required to load events from the mysql.event table, but in the read-only mode an ordinary user can not acquire it; - Security_context::master_access attribute was not properly initialized in Security_context::init(), which led to differences in behavior with and without debug configure options. - if the server failed to load events from mysql.event, it forgot to close the mysql.event table, that led to the coredump, described in the bug report. The patch is to fix all these problems: - Use the super-user to acquire WRITE-lock on the mysql.even table; - The WRITE-lock is acquired by the event scheduler in two cases: - on initial loading of events from the database; - when an event has been executed, so its attributes should be updated. Other cases when WRITE-lock is needed for the mysql.event table happen under the user account. So, nothing should be changed there for the read-only mode. The user is able to create/update/drop an event only if he is a super-user. - Initialize Security_context::master_access; - Close the mysql.event table in case something went wrong. 	c60397ef1988ed1286a4d99dc2b9f9216c5dd98b
----------------------------
BUG#28618 (Skipping into the middle of a group with SQL_SLAVE_SKIP_COUNTER is possible): When skipping the beginning of a transaction starting with BEGIN, the OPTION_BEGIN flag was not set correctly, which caused the slave to not recognize that it was inside a group. This patch sets the OPTION_BEGIN flag for BEGIN, COMMIT, ROLLBACK, and XID events. It also adds checks if inside a group before decreasing the slave skip counter to zero. Begin_query_log_event was not marked that it could not end a group, which is now corrected. 	f2ba11c327c99c3e1c56a58967ea9f3da1deef3c
----------------------------
Fix for bug#31704 Just had to put in the removal of the autocommit, and make sure the commit occurred at the propper time. 	f9046eafbf75f64e1000a38add18eb0ae8df7de0
----------------------------
Bug#21557 entries in the general query log truncated at 1000 characters. The general log write function (general_log_print) uses printf style arguments which need to be pre-processed, meaning that the all arguments are copied to a single buffer and the problem is that the buffer size is constant (1022 characters) but queries can be much larger then this. The solution is to introduce a new log write function that accepts a buffer and it's length as arguments. The function is to be used when a formatted output is not required, which is the case for almost all query write-to-log calls. This is a incompatible change with respect to the log format of prepared statements. 	dd135211d8c21c321f304f36bbe374a66c46655f
----------------------------
Bug#31692 - binlog_killed.test crashes sometimes The server crashed when a thread was killed while locking the general_log table at statement begin. The general_log table is handled like a performance schema table. The state of open tables is saved and cleared so that this table seems to be the only open one. Then this table is opened and locked. After writing, the table is closed and the open table state is restored. Before restoring, however, it is asserted that there is no current table open. After locking the table, mysql_lock_tables() checks if the thread was killed in between. If so, it unlocks the table and returns an error. open_ltable() just returns with the error and leaves closing of the table to close_thread_tables(), which is called at statement end. open_performance_schema_table() did not take this into account. It assumed that a failed open_ltable() would not leave an open table behind. Fixed by closing thread tables after open_ltable() and before restore_backup_open_tables_state() if the thread was killed. No test case. It requires correctly timed parallel execution. Since this bug was detected by the test suite, it seems dispensable to add another test. 	672290b03d6f3c0ffb3e89ed6e38148b0eca84f5
----------------------------
"Modify ""mysqlbug"" (""scripts/mysqlbug.sh"") so that it differs between the original and the modified values of the compile-related variables used in ""configure"". Make the necessary adjustments in ""configure.in"" and ""scripts/Makefile.am"". This fixes bug#31644 Values of *FLAGS that were used for building packages is missed in mysqlbug "	a238d6e280c9a1f43fddeb326b460f8f55421b35
----------------------------
Bug #30638 why doesn't > 4294967295 rows work in myisam on windows. The BIG_TABLES define wasn't enabled on Windows. #define added 	047dd70c885ff52af9aa27c4d89defd7542ccb99
----------------------------
innodb-test: Allow Innodb_buffer_pool_pages_total to be 511 or 512. The size of the buffer pool can be one page smaller than the requested size when os_mem_alloc_large() returns something that is not aligned by UNIV_PAGE_SIZE.  This test may still fail on systems with a big os_large_page_size. 	00b1b124f8db76ffcf7adf33c8254ff75fc9500f
----------------------------
Bug#30710 query_cache.test fails on embedded - per-column privs test The embedded version of the server doesn't use column level grants, and the compile directive NO_EMBEDDED_ACCESS_CHECKS should be checked instead of the redundant HAVE_QUERY_CACHE (which is always the case) to determine if column level grants should be compiled or not. 	8c86e79aa36ce8b41b8ac4b2e1b14f88215674fb
----------------------------
Fix bug #31604: server crash when setting slow_query_log_file/global general_log_file variable Problem: we don't evaluate given expression checking values of the slow_query_log_file/general_log_file, don't check it for NULL. Fix: evaluate the expression, check result returned. 	3d2f493fb42001aac3706b838d8c8bc9f651538e
----------------------------
Fix for bug #31285: main.status test fails with different Table_locks_waited Problem: Table_locks_waited value may depend on general logging. Fix: switch general logging off. 	0dfe3a8dfbcba14d4ccdf09cfe88d59f98fee741
----------------------------
Fix for Bug#31169 Test case does not check whether configuration contains feature tested 	714e2091c57c9f09003b6cc8af82550093372bc7
----------------------------
configure.in: bump up version 	09b4af59ec93b071e19ea898c42a2468cfdfad41
----------------------------
"branches/zip: Allow a dynamically loaded InnoDB storage engine plugin to replace a built-in instance of InnoDB in mysqld.  This is work in progress, with several limitations: * Other plugins defined in the builtin InnoDB are not disabled. However, InnoDB in MySQL 5.1 only defines the storage engine plugin, no INFORMATION_SCHEMA plugins. * The global C symbols in ha_innodb.so except innodb_hton_ptr and builtin_innobase_plugin will have to be redefined, e.g., by objcopy. * The storage engine cannot be called ""InnoDB"" to avoid a conflict with the builtin name.  Here we call it InnoDBzip. innobase_hton_name[]: Rename to ""InnoDBzip"" when building a dynamic plugin. innodb_plugin_init(): New function for the dynamic plugin, to copy and redirect configuration parameters from the builtin InnoDB. innodb_dynamic: New configuration parameter.  This has to be added to the builtin InnoDB in MySQL 5.1.  Also, innodb_hton_ptr must be made global there. innobase_init(): Interpret the parameter innodb_dynamic. Makefile.am: Redefine class ha_innobase to ha_innodb by a preprocessor define.  Apparently, C++ classes cannot be easily renamed by objcopy. "	7c68ba2e9d72e1d33146620fa80184c02067b49f
----------------------------
Bug#20435 Relay logs are rotated at slave_net_timeout when there's no activity; WL#342 heartbeat When receiving no events from its master longer than slave_net_timeout slave's replication io thread disconnects and reconnects. Reconnecting causes rotation of the relay log. That is unnecessary work which also causes inconvenience because of changes of the relay log files names: old files are removed, new are created. Fixed with introducing the Heartbeat event new functionality. Heartbeat event is generated in master's idle time by dump thread. Frequency of sending the event is optional and is determined by slave. The optimal value is within [0.001, slave_net_timeout] interval. The project introduces master_heartbeat_period option for CHANGE MASTER sql clause.  The requested on the slave side value for the period is passed to the dump thread on the master side.  The dump thread sends a heartbeat replication event if there is no more unsent events in the actual binlog file for a period longer that master_heartbeat_period.  Whenever the master's binlog is updated with an event, the waiting for heartbeat sending condition gets reset. Heartbeating is requested implicitly with the period slave_net_timeout/2 when no master_heartbeat_option was provided. if the option's value is set explicitly zero there will be no heartbeats. slave_net_timeout is updated now with generating a warning if the new value is less than the current heartbeat period. Two status variables on the slave side allows to monitor heartbeats flow. The test checks the syntax for the new option, the valid range - errors and warnings on reasonable values; the fact that there is no relay log rotation (thereafter no reconnection) while more than slave_net_timeout seconds elapsed and the master has been idling; new status variables. 	7602b78afcdf349cac2bab27aa439481f721f080
----------------------------
WL#4096 Real time settings and perf improvements in ndb kernel Add 5 new configuration variable: 1) Boolean to set threads in real-time priority 2) Lock main thread to a CPU (parameter is cpu id) 3) Lock other threads to a CPU (parameter is cpu id) all these requires ndbd started as root to have any effect 4) Spin timer in scheduler loop, number of microseconds we'll spin in loop waiting for messages to arrive before going to sleep 5) Execution timer in scheduler loop, number of microseconds we'll execute in loop before we send messages gathered during execution 	eb69236268ce9b867426dbd18c295d3bac7a6746
----------------------------
"Bug#30821: setting --tc_heuristic_recover tries to set myisam_stats_method Options to mysqld were not processed correctly because switch statement was missing some ""break""s. CS adds them. No test case; would require .opt file and server restart. Manually tested. "	5c21619b3a07d1b7b8a76ea7542cb4401c097907
----------------------------
Bug#27858 (Failing to log to a log table doesn't log anything to error log) Before this patch, failures to write to the log tables (mysql.slow_log and mysql.general_log) were improperly printed (the time was printed twice), or not printed at all. With this patch, failures to write to the log tables is reported in the error log, for all cases of failures. 	6428dacd44c8207ff7941711ef6219ccc64ba52a
----------------------------
Moved a lot of old bug fixes and safe cleanups from Maria 5.1 tree to 5.1 - Reserver namespace and place in frm for TABLE_CHECKSUM and PAGE_CHECKSUM create options - Added syncing of directory when creating .frm files - Portability fixes - Added missing cast that could cause bugs - Code cleanups - Made some bit functions inline - Moved things out of myisam.h to my_handler.h to make them more accessable - Renamed some myisam variables and defines to make them more globaly usable (as they are used outside of MyISAM) - Fixed bugs in error conditions - Use compiler time asserts instead of run time - Fixed indentation HA_EXTRA_PREPARE_FOR_DELETE -> HA_EXTRA_PREPARE_FOR_DROP as the old name was wrong (Added a define for old value to ensure we don't break any old code) Added HA_EXTRA_PREPARE_FOR_RENAME as a signal for rename (before we used a DROP signal which is wrong) - Initialize error messages early to get better errors when mysqld or an engine fails to start - Fix windows bug that query_performance_frequency was not initialized if registry code failed - thread_stack -> my_thread_stack_size 	7887babe69412b6f33f6cb782f468e9b58695fb9
----------------------------
"Fix for bug #31174: ""Repair"" command on MyISAM crashes with small myisam_sort_buffer_size. An incorrect length of the sort buffer was used when calculating the maximum number of keys. When myisam_sort_buffer_size is small enough, this could result in the number of keys < number of BUFFPEK structures which in turn led to use of uninitialized BUFFPEKs. Fixed by correcting the buffer length calculation. "	f80541e37045a7f511998718d5b89d5e9942e6a6
----------------------------
Fix for BUG#20023: mysql_change_user() resets the value of SQL_BIG_SELECTS. The bug was that SQL_BIG_SELECTS was not properly set in COM_CHANGE_USER. The fix is to update SQL_BIG_SELECTS properly. 	ac83b3122c32e84c2ec526760273d3a9b1176b49
----------------------------
Bug#28893 --relay-log variable is not exposed with SHOW VARIABLES added variables relay_log, relay_log_index, relay_log_info_file to init_vars[] to make them visible within SHOW VARIABLES 	a5e7b726c1840190d5e90854d2a4838fad68729f
----------------------------
"Bug#27580 SPACE() function collation bug? Problem: when character_set_connection=utf8, mixing SPACE() with a non-Unicode column (e.g. for concat) produced ""illegal mix of collations"" error. Fix: Item_string() corresponding to space character is now created using ""ASCII"" repertoire. Previously it was incorrectly created using ""UNICODE"" repertoure, which didn't allow to convert results of SPACE() to a non-Unicode character set. "	2224e030a9cedab39222abe50c50c9851dc74816
----------------------------
"Bug#21587 FLUSH TABLES causes server crash when used with HANDLER statements This bug is a symptom of the way handler's tables are managed. The most different aspect, compared to the conventional behavior, is that the handler's tables are long lived, meaning that their lifetimes are not bounded by the duration of the command that opened them. For this effect the handler code uses its own list (handler_tables instead of open_tables) to hold open handler tables so that the tables won't be closed at the end of the command/statement. Besides the handler_tables list, there is a hash (handler_tables_hash) which is used to associate handler aliases to tables and to refresh the tables upon demand (flush tables). The current implementation doesn't work properly with refreshed tables -- more precisely when flush commands are issued by other initiators. This happens because when a handler open or read statement is being processed, the associated table has to be opened or locked and, for this matter, the open_tables and handler_tables lists are swapped so that the new table being opened is inserted into the handler_tables list. But when opening or locking the table, if the refresh version is different from the thread refresh version then all used tables in the open_tables list (now handler_tables) are refreshed. In the ""refreshing"" process the handler tables are flushed (closed) without being properly unlinked from the handler hash. The current implementation also fails to properly discard handlers of dropped tables, but this and other problems are going to be addressed in the fixes for bugs 31397 and 31409. The chosen approach tries to properly save and restore the table state so that no table is flushed during the table open and lock operations. The logic is almost the same as before with the list swapping, but with a working glue code. The test case for this bug is going to be committed into 5.1 because it requires a test feature only avaiable in 5.1 (wait_condition). "	305ebc1e21d72c54a2c3e7714b884b847da06efc
----------------------------
"Issue a warning if a user sets an option or a variable to a value that is greater than a defined maximum for the option/variable. This is for bug #29446 ""Specifying a myisam_sort_buffer > 4GB on 64 bit machines not possible"". Support for myisam_sort_buffer_size > 4 GB on 64-bit Windows will be looked at later in 5.2. "	1ba3f4f56b57bcf6266beae20da6a06eda436964
----------------------------
Bug#29675 collation_connection is defined twice for the same value Removing redundant initialization. 	5e14f4f038773440ac168a723932683fa91ccb4d
----------------------------
Merge: cfb88e6 8da409a Merge polly.(none):/home/kaa/src/maint/bug5731.old/my50-bug5731-read_buffer_size into  polly.(none):/home/kaa/src/maint/bug5731/my50-bug5731 	d8d3698b4a037256cb98f112e7f58c17c736cb54
----------------------------
BUG#30472: libmysql doesn't reset charset, insert_id after succ. mysql_change_user() call. Use 2 bytes for character set number. 	7f554deb956f645982fe3b1ba0d505a002f11cb2
----------------------------
"Bug #29589	sys_innodb_max_purge_lag is defined twice in sys_variables Removed duplicate innodb variable from sys_variables array. "	93fd4e200ce1541d20afa711693a626549577274
----------------------------
Patch for BUG#30472: libmysql doesn't reset charset, insert_id after succ. mysql_change_user() call. See also WL 4066. This bug reveals two problems: - the problem on the client side which was described originally; - the problem in protocol / the server side: connection context on client and server should be like after mysql_real_connect() and be consistent. The server however just resets character set variables to the global defaults. The fix seems to be as follows: - extend the protocol so that the client be able to send character set information in COM_CHANGE_USER command; - change the server so that it understands client character set in the command; - change the client: - reset character set to the default value (which has been read from the configuration); - send character set in COM_CHANGE_USER command. 	8051b7568db48a845e1af8fa924c809ef4ca9641
----------------------------
BUG#31276 Micro GCP timeout set too lo (2 seconds) - add config param - timeout must be set in relation to other timeouts 	4e0d260cb2102d5c50a250a755f16e1346f311ee
----------------------------
Prerequisite patch for BUG#30472: libmysql doesn't reset charset, insert_id after succ. mysql_change_user() call. Supply a correct packet length to dispatch command. 	e452c06438f82dbf8e0f6366dddf8e7dd26fa774
----------------------------
BUG#28298 Node Id larger than MAX_NDB_NODES in config file doesn't generate error 	60a185803eb6cb50688ab1502ab0ae1008f32cce
----------------------------
Makefile.am, configure.in: Handle pstack like other optional directories Check if a directory exists relative to $srcdir 	96b62a5c133845b270fc859fd864782ec18f1897
----------------------------
"Makefile.am: Always include all sub directories in ""make dist"" Removed incorrect comment configure.in: Unconditionally list make files in AC_CONFIG_FILES Removed 'thread_dirs', it is not used Minor cleanup compile-dist: Simplified the configure line needed for ""make dist"" to get it all zlib.m4, ssl.m4: Unconditionally list make files in AC_CONFIG_FILES Makefile.am: Removed DIST_SUBDIRS not needed Don't copy soft links as files into source package "	1b53e4a5474f5da7e60b6932a39f55ff29d8f142
----------------------------
Bug#31167 Introduction of @@hostname breaks replication in a ring - Use a local uservariable to avoid @@hostname in binlog 	e068e99cd0f7cc64c999c81f546daa9337402a8e
----------------------------
Bug #15327: configure: --with-tcp-port option being partially ignored make sure that if builder configured with a non-standard (!= 3306) default TCP port that value actually gets used throughout. 	ac026cfeb6d8d3ded34db5c222f4d5b6dfb5262b
----------------------------
- Increase default connect_timeout to avoid intermittent disconnects when test servers are put under load 	ed055965bf2e4f04be61372bb81f67d51231ae33
----------------------------
Bug #15327: configure: --with-tcp-port option being partially ignored make sure that if builder configured with a non-standard (!= 3306) default TCP port that value actually gets used throughout. 	9c9c82e04ecd23e4aa5f44ecfb63a86f8f97b9d3
----------------------------
Bug#28359 Intermitted lost connection at 'reading authorization packet' errors - Increase default 'connect_timeout' value to 10 seconds 	10816b3a08647abdf4e621e0f707cb674c03cda3
----------------------------
Bug#30384: Having SQL_BUFFER_RESULT option in the CREATE .. KEY(..) .. SELECT led to creating corrupted index. While execution of the  CREATE .. SELECT SQL_BUFFER_RESULT statement the engine->start_bulk_insert function was called twice. On the first call On the first call MyISAM disabled all non-unique indexes and on the second call it decides to not re-enable them because all indexes was disabled. Due to this no indexes was actually created during CREATE TABLE thus producing crashed table. Now the select_inset class has is_bulk_insert_mode flag which prevents calling the start_bulk_insert function twice. The flag is set in the select_create::prepare, select_insert::prepare2 functions and the select_insert class constructor. The flag is reset in the select_insert::send_eof function. 	bb5cdfb87e897c6855162001e9ab8f4a18fe9fd6
----------------------------
Bug#19828: Case sensitivity in hostname leads to inconsistent behavior clean up SHOW GRANTS so it will show host-names with case as entered. make REVOKE and friends case-sensitive to make things more intuitive. Patch by Martin Friebe. 	9254e8fb01a515b207f3089568004e5b8afd7200
----------------------------
Revert r1850 as MySQL did not approve the addition. log for r1850: Implement this feature request: http://bugs.mysql.com/30706 * Add a function that returns the number of microseconds since epoch - ut_time_us(). * Add (innodb|innobase|srv)_replication_delay MySQL config parameter. * Add UT_WAIT_FOR() macro that waits for a specified condition to occur until a timeout elapses. * Using all of the above, handle the replication thread specially in srv_conc_enter_innodb(). 	0044736fa39ab4c14768736f478996f9a6f5fe99
----------------------------
Bug #30639: limit offset,rowcount wraps when rowcount >= 2^32 in windows The parser uses ulonglong to store the LIMIT number. This number then is stored into a variable of type ha_rows. ha_rows is either 4 or 8 byte depending on the BIG_TABLES define from config.h So an overflow may occur (and LIMIT becomes zero) while storing an ulonglong value in ha_rows. Fixed by : 1. Using the maximum possible value for ha_rows on overflow 2. Defining BIG_TABLES for the windows builds (to match the others) 	c2abf960f917184084fb0143aaa07d707dc5ff6d
----------------------------
"Implement this feature request: http://bugs.mysql.com/30706 * Add a function that returns the number of microseconds since epoch - ut_time_us(). * Add (innodb|innobase|srv)_replication_delay MySQL config parameter. * Add UT_WAIT_FOR() macro that waits for a specified condition to occur until a timeout elapses. * Using all of the above, handle the replication thread specially in srv_conc_enter_innodb(). Approved by:	Heikki "	83187d4e95e2f0c6ed4a2450df83bd7136f93eed
----------------------------
Bug #15327: configure: --with-tcp-port option being partially ignored after merge fix :-/ 	cc3f0af2e199487c8b2cebd6c7b525168ad5a7a7
----------------------------
"Add config option innodb_use_adaptive_hash_indexes to enable/disable adaptive hash indexes. It is enabled by default (no change in default behavior). Approved by:	Marko "	2f03b9e3212f7b7f9dcdd9f7426bf51506f01624
----------------------------
BUG#30996: Committed too early when autocommit and lock table Moved out a lot of code into functions from external_lock and start_stmt Fixed a crashing bug at memory alloc failure Merged the stmt and all variables into one trans variable Always register start of statement as according to the interface of the handlers. Also register for start of transaction when not statement commit == not autocommit AND no begin - commit ongoing Now that we registered in a proper manner we also needed to handle the commit call when end of statement and transaction is ongoing Added start_stmt_count to know when we have start of statement for first table 	0f18ff3350870c9cadedc3f3fadbbb518a5c4dec
----------------------------
"Bug #15327: configure: --with-tcp-port option being partially ignored make sure that if builder configured with a non-standard (!= 3306) default TCP port that value actually gets used throughout. if they didn't configure a value, assume ""use a sensible default"", which will be read from /etc/services or, failing that, from the factory default. That makes the order of preference - command-line option - my.cnf, where applicable - $MYSQL_TCP_PORT environment variable - /etc/services (unless configured --with-tcp-port) - default port (--with-tcp-port=... or factory default) "	3c6ca8d6edf55764df93a831f61dc3855e82d91c
----------------------------
Bug#16918: Aborted_clients > Connections. The problem was that aborted_threads variable was updated twice when a client connection had been aborted. The fix is to refactor a code to have aborted_threads updated only in one place. 	ef3bcaf3dd46d6a4bc7a38d7a50924eb970148c1
----------------------------
"Bug#30919 ""Rows not deleted from innodb partitioned tables if --innodb_autoinc_lock_mode=0"" Due to a previous bugfix which initializes a previously uninitialized variable, ha_partition::get_auto_increment() may fail to operate correctly when the storage engine reports that it is only reserving one value and one or more partitions have a different 'next-value'. Currently, only affects Innodb's new-style auto-increment code which reserves larger blocks of values and has less inter-thread contention. "	89f88eab6e91c63ea2fa0308f08af9f6c2e8176d
----------------------------
"Bug#30907 ""Regression: ""--innodb_autoinc_lock_mode=0"" (off) not same as older releases"" Bug#28430 ""Failure in replication of innodb partitioned tables on row/mixed format"" Bug#30888 ""Innodb table + stored procedure + row deletion = server crash"" Apply Oracle patch from Sunny Include tests cases by Omer Ensure that innobase_read_and_init_auto performs table autoinc lock when lock_mode = 0 No need for ""if"" guard around row_unlock_table_autoinc_for_mysql() because it already performs same check. Make autoinc_lock_mode variable read-only for duration of running mysqld process. "	d8d199c469e7ede2b08cbbf1b1ec1672aac4f908
----------------------------
"This patch is a part of work on bug #5731 ""key_buffer_size not properly restricted to 4GB"". The patch limits read_buffer_size and read_rnd_buffer_size by 2 GB on all platforms for the following reasons: - I/O code in mysys, code in mf_iocache.c and in some storage engines do not currently work with sizes > 2 GB for those buffers - even if the above had been fixed, Windows POSIX read() and write() calls are not 2GB-safe, so setting those buffer to sizes > 2GB would not work correctly on 64-bit Windows. "	8da409ac16e88ef4fff170521277b3ecb63489c6
----------------------------
Make mysql compilable on gcc-4.2.1. c++config.h now has the following code: // For example, <windows.h> is known to #define min and max as macros... #undef min #undef max So, our defines in my_global.h are undefined when <new> header is included. Move definitions of min()/max() to the end of my_global.h. 	c7de9652158d12fa26dc295a772f962d30b9ff8f
----------------------------
Use SIZE_T_MAX instead of ulong as a limit for key_buffer_size to allow key_bufer_size > 4G on Windows in 5.1. This is for bug #5731. 	0c199938073a2f1359732568707c430f3f0a473f
----------------------------
Fix for BUG#25843: changing default database between PREPARE and EXECUTE of statement breaks binlog. There were two problems discovered by this bug: 1. Default (current) database is not fixed at the creation time. That leads to wrong output of DATABASE() function. 2. Database attributes (@@collation_database) are not fixed at the creation time. That leads to wrong resultset. Binlog breakage and Query Cache wrong output happened because of the first problem. The fix is to remember the current database at the PREPARE-time and set it each time at EXECUTE. 	d6f94b062c370fc0765a8720bdbba50e6d872802
----------------------------
configure.in: beta => rc 	d93c9911c40694ad5280486764a6f8e90c4a126c
----------------------------
Bug#28587 SELECT is blocked by INSERT waiting on read lock, even with low_priority_updates The problem is that a SELECT on one thread is blocked by INSERT ... ON DUPLICATE KEY UPDATE on another thread even when low_priority_updates is activated. The solution is to possibly downgrade the lock type to the setting of low_priority_updates if the INSERT cannot be concurrent. 	1180c22aef303d85926acba398500c6abbd5d0cb
----------------------------
row_create_table_for_mysql(), row_truncate_table_for_mysql(), row_drop_table_for_mysql(): Do not mention innodb_force_recovery when newraw is set. 	e06a17049a52b7a37defdd0eeee9e40090dbbd5d
----------------------------
Merge a change from MySQL AB: ChangeSet@1.2536.10.2  2007-07-25 10:44:45+02:00  jperkin@mysql.com Fix for bug#29641 - $CC on Open Server is set to contain arguments for enabling threads.  However, duplicate AC_PROG_* macros in the innobase plug.in file were resetting $CC and causing link errors. As AC_PROG_* macros are already used in the main configure.in file there should be no need for them to be duplicated here too. plug.in: Remove AC_PROG_* macros 	bcd46059298fc025b1b2463ed08c1e96ec708e32
----------------------------
ndb - bug#27923 add --bind-address to ndb_mgmd 	cf7b7db3dcd456343303040915a5eaacfbe852f1
----------------------------
reserve config id...for micro gcp 	4c485ed326dfdaf851f3bb0b85027dc6c5fdcf61
----------------------------
Bug#30712 (open_performance_schema_table() cause an open table leak on failures) Fixed open_performance_schema_table() and close_performance_schema_table() implementation and callers, to always execute balanced calls to: thd->reset_n_backup_open_tables_state(backup); thd->restore_backup_open_tables_state(backup); 	88091e82506aac0fdb241ed155979d9ebcea549c
----------------------------
mysql_config.sh: Flag changed name in icc 10 	cf285315ebb64789e914ee99539deba99ad826f5
----------------------------
"Post merge fix 2 for ChangeSet@1.2509, 2007-08-28 http://lists.mysql.com/commits/33239 Fixes for the funcs_1 datadict test bugs #30418 ""datadict"" tests (all engines) fail: Dependency on the host name for ordering #30420 ""datadict"" tests (all engines) fail: Release build has help tables loaded #30438 ""{memory,myisam,ndb}__datadict"" tests fail: Use ""InnoDB"" without checking #30440 ""datadict"" tests (all engines) fail: Character sets depend on configuration "	032a4a45d0c1bed27cc737c12156636e4022df20
----------------------------
"Bug #30209  	rpl_packet.test: Slave_running mismatch (timing bug?) explicit --sleep is removed in favor of wait_for_slave_io_to_stop.inc. The status reporting uses `SHOW SLAVE STATUS' *not* possibly buggy ""SHOW STATUS LIKE 'Slave_running'"". "	9ea7b6a7fcc8178f15d8927694bc004351027589
----------------------------
Limit join_buffer_size, sort_buffer_size and myisam_sort_buffer_size to 4GB on all platforms, since the related code in 5.0 is not 64-bit safe. This is patch is a part of work on bug #5731 and will be null-merged to 5.1. 	f02a1f2c9191949f85bc61daa3450d13d465bf4f
----------------------------
Backport of my_malloc() changes from 5.1 to make it 64-bit safe on Unix platforms. This is required to allow key_buffer_size > 4 GB (bug #5731). 	39e53b4fee9296b214981b2ac19a4436a3d321fa
----------------------------
BUG#29968 (rpl_ndb_circular.test and rpl_ndb_log.test fail): Removing unguarded read of slave_running field from inside terminate_slave_threads(). This could cause premature exit in the event that the slave thread already were shutting down, but isn't finished yet. The fields slave_running, io_thd, and sql_thread are guarded by an associated run_lock. A read of these fields were not guarded inside terminate_slave_threads(), which caused an assertion to fire. The assertion was removed, and the code reorganized slightly. 	65399a4bb5d360a9a2988957cfab0ea2a35a63fa
----------------------------
"Post merge fix 1 for ChangeSet@1.2509, 2007-08-28 http://lists.mysql.com/commits/33239 Fixes for the funcs_1 datadict test bugs #30418 ""datadict"" tests (all engines) fail: Dependency on the host name for ordering #30420 ""datadict"" tests (all engines) fail: Release build has help tables loaded #30438 ""{memory,myisam,ndb}__datadict"" tests fail: Use ""InnoDB"" without checking #30440 ""datadict"" tests (all engines) fail: Character sets depend on configuration There are more post merge fixes needed. "	04114a8b68de73bb86c7e15e614e92721bab0a4f
----------------------------
"Fixes for Bug#30418 ""datadict"" tests (all engines) fail: Dependency on the host name for ordering Bug#30420 ""datadict"" tests (all engines) fail: Release build has help tables loaded Bug#30438 ""{memory,myisam,ndb}__datadict"" tests fail: Use ""InnoDB"" without checking Bug#30440 ""datadict"" tests (all engines) fail: Character sets depend on configuration Attention: Only the build team can check if Bug#30440 is really fixed. "	9fa2f3c6b606cdbaed5faf802067b20ed37dca68
----------------------------
Bug #30377: EXPLAIN loses last_query_cost when used with UNION Currently the Last_query_cost session status variable shows only the cost of a single flat subselect. For complex queries (with subselects or unions etc) Last_query_cost is not valid as it was showing the cost for the last optimized subselect. Fixed by reseting to zero Last_query_cost when the complete cost of the query cannot be determined. Last_query_cost will be non-zero only for single flat queries. 	cfaa0983c841310ab75ba052579fe4727de4998a
----------------------------
"Bug#28812 rpl_ssl fails due to assert in extra/yassl/src/socket_wrapper.cpp:117 - Merge sslaccept and sslconnect. - Atomically ""reset"" vio to VIO_TYPE_SSL when the SSL connection has succeeded, this avoids having to revert anything and thus protects against ""close_active_vio"" in the middle. - Add some variance to the testcase "	ec421a02a9415cb074cf9817257193608969b20b
----------------------------
Bug #30389: connection_id() always return 0 in embedded server Initialize thd->variables.pseudo_thread_id when a new embedded thd is created. 	2c44def1eeaaebf365626619a9733a4e90faa801
----------------------------
"Fixes for the following bugs: Bug #30316: Some ""parts"" tests fail because the server uses ""--secure-file-priv"" Bug #30341: Test suite ""parts"" needs to be adapted to the new rules disallowing many functio Bug #30408: Suite ""parts"" needs bug numbers updated Bug #30411: Suite ""parts"" needs bug numbers updated: ER_UNIQUE_KEY_NEED_ALL_FIELDS_IN_PF Bug #30576: part_supported_sql_func_innodb.test tries to LOAD DATA outside of var dir Bug #30581: partition_value tests use disallowed CAST() function Included are some general fixes to allow the ""parts"" test suite to be run successfully.  This includes disabling a few tests or parts of tests, cleaning up the test cases and their results, etc.  Basically, these tests have not been run for some time, and had suffered some bit rot. The bugs were fixed as a single changeset, because in some ways they depend on each other.  I couldn't be sure I'd updated all the error codes (for bugs 30408 and 30411) without also adapting to the new allowed functions rules (bug 30341), and vice versa. "	220cd12f0b3c095a572e541c9fbaffb21cf310bf
----------------------------
Bug#28401 mysql_upgrade Failed with STRICT_ALL_TABLES, ANSI_QUOTES and NO_ZERO_DATE - Set sql_mode to default when creating system tables 	ffc67d70ce6f7b8a197db5fcd51ca551cf1b52db
----------------------------
recommit of Addendum to bug #29325 to 5.1.22 tree keep_files_on_create made a startup option 	682258a699d5906c2372df93da646672ef303e54
----------------------------
"BUG#21842 (Cluster fails to replicate to innodb or myisam with err 134 using TPC-B): Problem: A RBR event can contain incomplete row data (only key value and fields which have been changed). In that case, when the row is unpacked into record and written to a table, the missing fields get incorrect NULL values leading to master-slave inconsistency. Solution: Use values found in slave's table for columns which are not given in the rows event. The code for writing a single row uses the following algorithm: 1. unpack row_data into table->record[0], 2. try to insert record, 3. if duplicate record found, fetch it into table->record[0], 4. unpack row_data into table->record[0], 5. write table->record[0] into the table. Where row_data is the row as stored in the data area of a rows event. Thus: a) unpacking of row_data happens at the time when row is written into a table, b) when unpacking (in step 4), only columns present in row_data are overwritten - all other columns remain as they were found in the table. Since all data needed for the above algorithm is stored inside Rows_log_event class, functions which locate and write rows are turned into methods of that class. replace_record()     -> Rows_log_event::write_row() find_and_fetch_row() -> Rows_log_event::find_row() Both methods take row data from event's data buffer - the row being processed is pointed by m_curr_row. They unpack the data as needed into table's record buffers record[0] or record[1]. When row is unpacked, m_curr_row_end is set to point at next row in the data buffer. Other changes introduced in this changeset: - Change signature of unpack_row(): don't report errors and don't setup table's rw_set here. Errors can happen only when setting default values in prepare_record() function and are detected there. - In Rows_log_event and derived classes, don't pass arguments to the execution primitives (do_...() member functions) but use class members instead. - Move old row handling code into log_event_old.cc to be used by *_rows_log_event_old classes. Also, a new test rpl_ndb_2other is added which tests basic replication from master using ndb tables to slave storing the same tables using (possibly) different engine (myisam,innodb). Test is based on existing tests rpl_ndb_2myisam and rpl_ndb_2innodb. However, these tests doesn't work for various reasons and currently are disabled (see BUG#19227). The new test differs from the ones it is based on as follows: 1. Single test tests replication with different storage engines on slave (myisam, innodb, ndb). 2. Include file extra/rpl_tests/rpl_ndb_2multi_eng.test containing original tests is replaced by extra/rpl_tests/rpl_ndb_2multi_basic.test which doesn't contain tests using partitioned tables as these don't work currently. Instead, it tests replication to a slave which has more or less columns than master. 3. Include file include/rpl_multi_engine3.inc is replaced with include/rpl_multi_engine2.inc. The later differs by performing slightly different operations (updating more than one row in the table) and clearing table with ""TRUNCATE TABLE"" statement instead of ""DELETE FROM"" as replication of ""DELETE"" doesn't work well in this setting. 4. Slave must use option --log-slave-updates=0 as otherwise execution of replication events generated by ndb fails if table uses a different storage engine on slave (see BUG#29569). "	f8b64e17f94923ef421469d648c31c0f06d2cf96
----------------------------
Apply InnoDB snapshot innodb-5.1-ss1751. Bug #16979: AUTO_INC lock in InnoDB works a table level lock Add a table level counter that tracks the number of AUTOINC locks that are pending and/or granted on a table. We peek at this value to determine whether a transaction doing a simple INSERT in innodb_autoinc_lock_mode = 1, needs to acquire the AUTOINC lock or not. This change is related to Bug# 16979. Bug #27950: Duplicate entry error in auto-inc after mysqld restart We check whether the AUTOINC sub-system has been initialized (first) by holding the AUTOINC mutex and if initialization is required then we initialize using our normal procedure. 	f01f1993ddf30bb1cfce8eb71b7d20a6124207ea
----------------------------
Add test case for bug 29936 Stored Procedure DML ignores low_priority_updates setting. This test case uses the wait_condition helper (only available in 5.1) in order to wait till the select/update opens and locks the table. 	0b8bc8a96b355459829b34552a81c00c2f42ff12
----------------------------
Remove unsued variable $glob_hostname, unused functions 'mtr_short_hostname' and 'mtr_full_hostname' 	89780a84c8b77b2232e0593fbb6680101fcf5101
----------------------------
"Remove unecessary use of ""Socket"" "	4fcea0fc5c600ec4082007f1f375df9a4658c205
----------------------------
Fixed bug #30287. Recommit to 5.1.22. The server created temporary tables for filesort in the working directory instead of the specified tmpdir directory. 	e543c7436ef7d72111a1457a83e13651a9297f61
----------------------------
"Bug#30593 No cipher list returned for ""SHOW STATUS LIKE 'Ssl_cipher_list'"" - Move increment of ""i"" to ""increment section"" of for loop - Protect against writing after end of ""buff""(backport from 5.1) "	e1b9e55a5aff8df696e7ae07a58308df69711773
----------------------------
BUG#30017 log-slave-updates incorrect behavior for cluster - let the receiving injector thread decide what to do (recommit for 5.1.22 target) 	8fb593b8401801e8854f22fe7d80906a35aa9924
----------------------------
Bug#27358 INSERT DELAYED does not honour SQL_MODE of the client SQL_MODE was ignored when a client issued INSERT DELAYED. Some system settings weren't copied as intended when a record was saved for a delayed insert. 	b1b2108275d8737b8381ccd0bd64dbaaef04530c
----------------------------
Add a table level counter that tracks the number of AUTOINC locks that are pending and/or granted on a table. We peek at this value to determine whether a transaction doing a simple INSERT in innodb_autoinc_lock_mode = 1, needs to acquire the AUTOINC lock or not. This change is related to Bug# 16979. 	332ea21b2e7d3c1e4c6643a85e4a573f75ffe704
----------------------------
Remove deleted files from bdb CMake configuration.  Fixes bug#27693. 	142681b23c9b391937b111a99cabdb4dd1ad3ebf
----------------------------
"Add variable ""innodb_autoinc_lock_mode""  to control the behavior of the AUTOINC locking. There are three modes, 0 for backward compatibility, 1 for the new style locking (default, safe for statement-based replication) and 2 for no AUTOINC locking (unsafe for statement-based replication). "	4de307d5b73440e9303a8a1c0fcc7a2db9e4c0e1
----------------------------
Fixed bug #30287. The server created temporary tables for filesort in the working directory instead of the specified tmpdir directory. 	5d3809c2644a3359c9b6c9a1fddf79044358a163
----------------------------
"Fix bug#27520.  For some unknown reason, libtool.m4 attempts to find ""ar"" but if it cannot be found sets AR=false.  This leads to confusing failures during the build rather than at configure time. We have our own checks for ar, but as AR was already set earlier by the libtool tests they were never exectuted. Therefore, update the tests so that we catch any libtool failures, and run AC_CHECK_PROG explicitly to ensure that we see sensible output from configure prior to any potential failure. "	e288730abee37cf29af9049cff0798aa1e3a1fb9
----------------------------
branches/zip: Refuse fast index creation if newraw or innodb_force_recovery have been set. ha_innobase::add_index(), ha_innobase::prepare_drop_index(), ha_innobase::final_drop_index(): Return HA_ERR_WRONG_COMMAND if newraw or innodb_force_recovery have been set. 	9ab3abd6ef1c151d7310060f17570f670d7a39b4
----------------------------
Bug #29307: status.test fails with different Table_locks_immediate Finish premature patch which was accidentally pushed; remove debugging info and correct the test. 	76d173fa9df9384c40f4ef368977aeac6381c7b7
----------------------------
Bug #29307: status.test fails with different Table_locks_immediate When using --log --log-output=table, we increment Table_locks_immediate with every query.  The wait_condition.inc runs a query a variable number of times, depending on server load, etc.  This is a problem, when the test is checking the Table_locks_immediate value. Fix is to adjust the Table_locks_immediate value based on how many times the wait_condition query was executed. 	c23b736ed3a74343eb75553f77fe4c6f920c79e2
----------------------------
"Bug#29936 (Stored Procedure DML ignores low_priority_updates setting) This is a follow up for the patch for Bug#26162 ""Trigger DML ignores low_priority_updates setting"", where the stored procedure ignores the session setting of low_priority_updates. "	fa7ba431dfecafd2b871558738d8c3ae9d65a317
----------------------------
"Bug#29936 (Stored Procedure DML ignores low_priority_updates setting) This is a follow up for the patch for Bug#26162 ""Trigger DML ignores low_priority_updates setting"", where the stored procedure ignores the session setting of low_priority_updates. For every table open operation with default write (TL_WRITE_DEFAULT) lock_type, downgrade the lock type to the session setting of low_priority_updates. "	d6692280061d9391e5cae67fcf11f87dc6fd8a13
----------------------------
Fixed errors found by pushbuild: Fixed failing func_misc test for embedded server Added casts to avoid compiler warnings Removed Table_locks_immediate as it's depending on log file cacheing Changed type of get_time() to avoid warnings Removed testing if purger master logs succeded as this is not deterministic 	9b6b53f0d0d747e47a707d7c579b9e2b66020ed3
----------------------------
Renaming RELAY_LOG_INFO and st_relay_log_info to follow coding standards (and be more friendly to Doxygen by removing unnecessary typedefs). 	9c4ef25c55861b403dbc964b32a4297f03c8ba66
----------------------------
"NULL MERGE this ChangeSet to 5.1 Apply innodb-5.0-ss1696 snapshot Fixes: - Bug#20090: InnoDB: Error: trying to declare trx to enter InnoDB - Bug#23710: crash_commit_before fails if innodb_file_per_table=1 At InnoDB startup consider the case where log scan went beyond checkpoint_lsn as a crash and initiate crash recovery code path. - Bug#28781: InnoDB increments auto-increment value incorrectly with ON DUPLICATE KEY UPDATE We need to do some special AUTOINC handling for the following case: INSERT INTO t (c1,c2) VALUES(x,y) ON DUPLICATE KEY UPDATE ... We need to use the AUTOINC counter that was actually used by MySQL in the UPDATE statement, which can be different from the value used in the INSERT statement. - Bug#29097: fsp_get_available_space_in_free_extents() is capped at 4TB Fix by typecasting the variables before multiplying them, so that the result of the multiplication is of type ""unsigned long long"". - Bug#29155: Innodb ""Parallel recovery"" is not prevented Fix by enabling file locking on FreeBSD.  It has been disabled because InnoDB has refused to start on FreeBSD & LinuxThreads, but now it starts just fine. "	5e926bc1204059783375ae23c3fa34b7ad75bc0c
----------------------------
[PATCH] BUG#28253 ndb_size.pl: cannot set socket Index: ndb-work/storage/ndb/tools/ndb_size.pl =================================================================== 	0532a625e25c4d3ea94bbf0bc636ef8dba46318a
----------------------------
Fixed a lot of compiler warnings and errors detected by Forte C++ on Solaris Faster thr_alarm() Added 'Opened_files' status variable to track calls to my_open() Don't give warnings when running mysql_install_db Added option --source-install to mysql_install_db I had to do the following renames() as used polymorphism didn't work with Forte compiler on 64 bit systems index_read()      -> index_read_map() index_read_idx()  -> index_read_idx_map() index_read_last() -> index_read_last_map() 	e53a73e26cf858ac48ead40927d84d54e33c1695
----------------------------
rpl_packet.test: Changed patch to Mats suggestion from review. Patch is for Bug#30209 .del-wait_for_slave_running_off.inc: Delete: mysql-test/include/wait_for_slave_running_off.inc 	cc5c5bed9c734fcf595359dddea3d3d5be505464
----------------------------
rpl_packet.test: Updated test to use new include function wait_for_slave_running_off.inc: Created new include to resolve the timing issue recorded by Bug#30209 rpl_events.inc: The issue shown in Bug#30128 is that 'from er' shows up in a part of the test that it should not show up in. This event really is not created until later in the test, yet since the test runs row and then turns around and runs statement, I am guessing that the first run may not have cleaned up like it should, so I am adding a sync with master after the drop of table t1 to ensure that both master and slave are clean. 	2ba264d812874f444393d65c7716c8d4f71bf827
----------------------------
"CMakeLists.txt (many), win/README, mysql_manifest.cmake, configure.js: Additional changes for bug#29903 - Changed to do embedded build part as normal build, when WITH_EMBEDDED_SERVER is set. - Allow both normal and debug build with embedded. - Build static embedded library by pointing out all source and compile it all, i.e. not building libraries from libraries, not portable. - Let embedded use generated files from the ""sql"" directory, added dependencies to make sure built before embedded. - Mark library ""dbug"" in TARGET_LINK_LIBRARIES() with ""debug"", so only linked in when debug target is used. - Removed change of target name with ""mysqld${MYSQLD_EXE_SUFFIX}"", as others can't depend on it, not defined at configure time. Instead set the output file name. - Created work around for bug in CMake 2.4.6 and output names, to set the ""mysqld<suffix>.pdb"" name to the same base name. - Set the correct manifest ""name"" (patch by iggy) "	413d1e1aa4ab8b990c04334c7b3a1fe27cb979ad
----------------------------
CMakeLists.txt, README, configure.js Several adjustments to make client libraries pass the link test on both win32 and winx64, Visual Studio 2003 and 2005 (bug#30118) 	a6d082f36de35794006fd7bcb5495eeaf2dd7e82
----------------------------
"Bug#28875 Conversion between ASCII and LATIN1 charsets does not function (Regression, caused by a patch for the bug 22646). Problem: when result type of date_format() was changed from binary string to character string, mixing date_format() with a ascii column in CONCAT() stopped to work. Fix: - adding ""repertoire"" flag into DTCollation class, to mark items which can return only pure ASCII strings. - allow character set conversion from pure ASCII to other character sets. "	4eebfd09c2b045258615bf07990deb6f0f73f729
----------------------------
Simplify logging code a bit (to make code smaller and  faster) Moved duplicated code to inline function store_timestamp() Save thd->time_zone_used when logging to table as CSV internally cases it to be changed Added MYSQL_LOCK_IGNORE_FLUSH to log tables to avoid deadlock in case of flush tables. Mark log tables with TIMESTAMP_NO_AUTO_SET to avoid automatic timestamping Set TABLE->no_replicate on open 	237d58670021e62d22d04f70174f4a13b85a0d02
----------------------------
Addendum to bug 29325 keep_files_on_create made a startup option 	b5ac35fa17c9b7cfce42676d6ea032c3d9318fdf
----------------------------
configure.in: bump version to ndb 6.1.19 	5b9e2cb83bdb55c2dcf0824c67906ee44344931c
----------------------------
"Fix for bug #29928: INSERT ... VALUES(connection_id(), ...) incorrect restores from mysqlbinlog out Problem: using ""mysqlbinlog | mysql"" for recoveries the connection_id() result may differ from what was used when issuing the statement. Fix: if there is a connection_id() in a statement, write to binlog SET pseudo_thread_id= XXX; before it and use the value later on. "	7fb417d0ba1c416db1d5a12774cb3f4a6624ba9c
----------------------------
"Bug #29419 ""Specifying a join_buffer > 4GB on 64 bit machines not possible."" Use size_t instead of uint when calculating join buffer size, because uint can be overflown on 64-bit platforms and join_buffer_size > 4 GB. The test case for this bug is a part of the test suite for bug #5731. "	1919076d47717eaa649755dc2d512882b1fdbe43
----------------------------
BUG#29152 - INSERT DELAYED does not use concurrent_insert on slave INSERT DELAYED on a replication slave was converted to regular INSERT, whereas it should try concurrent INSERT first. With this patch we try to convert delayed insert to concurrent insert on a replication slave. If it is impossible for some reason, we fall back to regular insert. No test case for this fix. I do not see anything indicating this is regression - we behave this way since Nov 2000. 	2c539642c0fa0d1fbe438229c445bcb9ee9417a9
----------------------------
Merge: ce50440 01ad489 Merge mysql.com:/home/kent/bk/config_h/mysql-5.0-build into  mysql.com:/home/kent/bk/config_h/mysql-5.1-build 	fd3b865149faced7ef5ff1696109df576f44d508
----------------------------
Merge: 038357d a9d2569 Merge kboortz@bk-internal.mysql.com:/home/bk/mysql-5.0-build into  mysql.com:/home/kent/bk/config_h/mysql-5.0-build 	01ad4893562aff4bad9ce94285942e8405034ebb
----------------------------
"Generate ""config.h"" directly into the ""include"" directory, later copied to ""my_config.h"". Not to pollute the top directory, and to get more control over what is included. Made the include path for ""libedit"" pick up its own ""config.h"" first. "	a9d2569cba4ff0e9c419d26d4e2005337e047984
----------------------------
Merge: 88ef9a4 e99df6f Merge mysql.com:/home/kent/bk/config_h/mysql-4.1-build into  mysql.com:/home/kent/bk/config_h/mysql-5.0-build 	a0571dedb3d9368b8a60131477e8c1d4e55f986d
----------------------------
Bug#24989: The DEADLOCK error is improperly handled by InnoDB. When innodb detects a deadlock it calls ha_rollback_trans() to rollback the main transaction. But such action isn't allowed from inside of triggers and functions. When it happen the 'Explicit or implicit commit' error is thrown even if there is no commit/rollback statements in the trigger/function. This leads to the user confusion. Now the convert_error_code_to_mysql() function doesn't call the ha_rollback_trans() function directly but rather calls the mark_transaction_to_rollback function and returns an error. The sp_rcontext::find_handler() now doesn't allow errors to be caught by the trigger/function error handlers when the thd->is_fatal_sub_stmt_error flag is set. Procedures are still allowed to catch such errors. The sp_rcontext::find_handler function now accepts a THD handle as a parameter. The transaction_rollback_request and the is_fatal_sub_stmt_error flags are added to the THD class. The are initialized by the THD class constructor. Now the ha_autocommit_or_rollback function rolls back main transaction when not in a sub statement and the thd->transaction_rollback_request is set. The THD::restore_sub_statement_state function now resets the thd->is_fatal_sub_stmt_error flag on exit from a sub-statement. 	8de5603d1d4678c9c6fbe0381674fd916fb2baef
----------------------------
Slow query log to file now displays queries with microsecond precission --long-query-time is now given in seconds with microseconds as decimals --min_examined_row_limit added for slow query log long_query_time user variable is now double with 6 decimals Added functions to get time in microseconds Added faster time() functions for system that has gethrtime()  (Solaris) We now do less time() calls. Added field->in_read_set() and field->in_write_set() for easier field manipulation by handlers set_var.cc and my_getopt() can now handle DOUBLE variables. All time() calls changed to my_time() my_time() now does retry's if time() call fails. Added debug function for stopping in mysql_admin_table() when tables are locked Some trivial function and struct variable renames to avoid merge errors. Fixed compiler warnings Initialization of some time variables on windows moved to my_init() 	b16289a5e05397211fd47e05ce08fe12f93ec38a
----------------------------
"Bug #29419 ""Specifying a join_buffer > 4GB on 64 bit machines not possible."" Use size_t instead of uint when calculating join buffer size, because uint can be overflown on 64-bit platforms and join_buffer_size > 4 GB. The test case for this bug is a part of the test suite for bug #5731. "	7c2c8f07e43a5ce3998473bef6565e9e60ac533f
----------------------------
Fix for BUG#30027: mysqldump does not dump views properly. mysqldump generates view defitions in two stages: - dump CREATE TABLE statements for the temporary tables.  For each view a temporary table, that has the same structure as the view is created. - dump DROP TABLE statements for the temporary tables and CREATE VIEW statements for the view. This approach is required because views can have dependencies on each other (a view can use other views). So, they should be created in the particular order. mysqldump however is not smart enough, so in order to resolve dependencies it creates temporary tables first of all. The problem was that mysqldump might have generated incorrect dump for the temporary table when a view has non-ASCII column name. That happened when default-character-set is not utf8. The fix is to: 1. Switch character_set_client for the mysqldump's connection to binary before issuing SHOW FIELDS statement in order to avoid conversion. 2. Dump switch character_set_client statements to UTF8 and back for CREATE TABLE statement that is issued to create temporary table. 	e73f004fe6e5a7b33f6c90134715e8343f8a735d
----------------------------
Fix for BUG#28030: test im_instance_conf fails with an assert. The problem was a race condition on shutdown -- when IM got shutdown request while a guarded mysqld is starting. In this case the Guardian thread tried to stop the mysqld, but might fail if the mysqld hadn't created pid-file so far. When this happened, the mysqld-monitor thread didn't stop, so the assert in Thread_registry happened. The fix is to make several attempts to stop mysqld if it is active. 	bbb1b64b95d1bc869d05ae76f842ca657d93d734
----------------------------
More fixes and cleanups for bug#28585: - make the 'dist-hook' from top-level Makefile work again. - we can find my_print_defaults from --basedir by parsing command line arguments prior to running my_print_defaults. - take advantage of additional command line parsing and allow the --no-defaults etc arguments to work anywhere rather than having to be the first argument. - find SQL files either from binary archive or source install. - consolidate and tidy code and error messages. 	d5293e45840f532c9100cd37c87bdef9ed879601
----------------------------
save the data from mysql.db that we delete (side effect that made read_only fail) 	3afa32dc2b90804cb122607e24d2b667f7b265e1
----------------------------
"WL#3984 (Revise locking of mysql.general_log and mysql.slow_log) Bug#25422 (Hang with log tables) Bug 17876 (Truncating mysql.slow_log in a SP after using cursor locks the thread) Bug 23044 (Warnings on flush of a log table) Bug 29129 (Resetting general_log while the GLOBAL READ LOCK is set causes a deadlock) Prior to this fix, the server would hang when performing concurrent ALTER TABLE or TRUNCATE TABLE statements against the LOG TABLES, which are mysql.general_log and mysql.slow_log. The root cause traces to the following code: in sql_base.cc, open_table() if (table->in_use != thd) { /* wait_for_condition will unlock LOCK_open for us */ wait_for_condition(thd, &LOCK_open, &COND_refresh); } The problem with this code is that the current implementation of the LOGGER creates 'fake' THD objects, like - Log_to_csv_event_handler::general_log_thd - Log_to_csv_event_handler::slow_log_thd which are not associated to a real thread running in the server, so that waiting for these non-existing threads to release table locks cause the dead lock. In general, the design of Log_to_csv_event_handler does not fit into the general architecture of the server, so that the concept of general_log_thd and slow_log_thd has to be abandoned: - this implementation does not work with table locking - it will not work with commands like SHOW PROCESSLIST - having the log tables always opened does not integrate well with DDL operations / FLUSH TABLES / SET GLOBAL READ_ONLY With this patch, the fundamental design of the LOGGER has been changed to: - always open and close a log table when writing a log - remove totally the usage of fake THD objects - clarify how locking of log tables is implemented in general. See WL#3984 for details related to the new locking design. Additional changes (misc bugs exposed and fixed): 1) mysqldump which would ignore some tables in dump_all_tables_in_db(), but forget to ignore the same in dump_all_views_in_db(). 2) mysqldump would also issue an empty ""LOCK TABLE"" command when all the tables to lock are to be ignored (numrows == 0), instead of not issuing the query. 3) Internal errors handlers could intercept errors but not warnings (see sql_error.cc). 4) Implementing a nested call to open tables, for the performance schema tables, exposed an existing bug in remove_table_from_cache(), which would perform: in_use->some_tables_deleted=1; against another thread, without any consideration about thread locking. This call inside remove_table_from_cache() was not required anyway, since calling mysql_lock_abort() takes care of aborting -- cleanly -- threads that might hold a lock on a table. This line (in_use->some_tables_deleted=1) has been removed. "	c7bbd8917c534815316b356e5ea581d9e7167fed
----------------------------
Bug #25061 Build failure on HP/UX similar to BUG#20507 Added libCsup as a mysql library dependency on hpux11. This means any projects statically linking to our libraries using the HPUX11 compiler will need to add the -lCSup option to their build link options. If they use the mysql_config tool this will happen automatically. Projects that dynamically link to libmysqlclient will continue to work without any modifications. Library libCsup is a C++ runtime library needed for yassl support when built with the hpux11 C/C++ compiler. The first attempts to fix this bug were to remove the yassl dependencies on libCsup. We tried removing all pure virtual functions and other hacks, but the dependency remained. The only other options left involve extensive restructuring of the yassl library. 	9fe1a5a952fc70bb907640beb945bb39ec4d21d4
----------------------------
"Fix for BUG#30029: mysql_upgrade fails for 5.0 -> 5.1.21, 5.1.20 -> 5.1.21 upgrades. We generate mysql_fix_privilege.sql file, which contains SQL statements required to upgrade the system database. This script is generated by concatenation of mysql_system_tables.sql and mysql_system_tables_fix.sql. The problem was that - in order to create general_log and slow_log tables we use stored programs in mysql_system_tables.sql; - we upgrade mysql.proc table in mysql_system_tables_fix.sql; So, if mysql.proc table needs to be upgraded, stored procedures can not be used in mysql_system_tables.sql. In other words, in mysql_system_tables.sql stored programs must not be used because they may be unavailable at this point. The fix is to use dynamic SQL instead of stored programs. There is no test case for this bug because our test suite is not suitable for such test cases. system_mysql_db_fix* test cases play with the database ""test"". Here we need to modify the system database and we can not do that in the test suite. "	aee749d0d93352fcdcc3159c28e9ce6cbc31d5eb
----------------------------
tmp_table_size is not about user-created temporary tables, only internal ones (like those of GROUP BY): fixing the --help text. 	48dfd5c79612a5f98167e71faf98f0ec62726086
----------------------------
Patch inspired by BUG#10491: Server returns data as charset binary SHOW CREATE TABLE or SELECT FROM I_S. The problem is that mysqldump generates incorrect dump for a table with non-ASCII column name if the mysqldump's character set is ASCII. The fix is to: 1. Switch character_set_client for the mysqldump's connection to binary before issuing SHOW CREATE TABLE statement in order to avoid conversion. 2. Dump switch character_set_client statements to UTF8 and back for CREATE TABLE statement. 	9f8593e81c99425a028d416854a172543a6f706d
----------------------------
Fix for bug#29641 - $CC on Open Server is set to contain arguments for enabling threads.  However, duplicate AC_PROG_* macros in the innobase plug.in file were resetting $CC and causing link errors. As AC_PROG_* macros are already used in the main configure.in file there should be no need for them to be duplicated here too. 	6df53ea2df58e94cda2dfe9bc2ddb126f5efbd04
----------------------------
Bug#28641 CREATE EVENT with '2038.01.18 03:00:00' let server crash. Creating an EVENT to be executed at a time close to the end of the allowed range (2038.01.19 03:14:07 UTC) would cause the server to crash. The expected behavior is to accept all calendar times within the interval and reject all other values without crashing. This patch replaces the function 'sec_to_epoch_TIME' with a Time_zone API call. This function was broken because it invoked the internal function 'sec_to_epoch' without respecting the restrictions on the function parameters (and this caused assertion failure). It also was used as a reverse function to Time_zone_utc::gmt_sec_to_TIME which it isn't. 	13d5119416edf9b74747219283e22cd3148cd9c9
----------------------------
BUG#30017 log-slave-updates incorrect behavior for cluster - let the receiving injector thread decide what to do 	81bc79a711f0f8090c64315e514b4413c62316c4
----------------------------
"Apply snapshot innodb-51-ss1644 Fixes: - Bug #23710: crash_commit_before fails if innodb_file_per_table=1 - Bug #28254: innodb crash if shutdown during innodb_table_monitor is running - Bug #28604: innodb_force_recovery restricts data dump - Bug #29097: fsp_get_available_space_in_free_extents() is capped at 4TB - Bug #29155: Innodb ""Parallel recovery"" is not prevented "	85982ab747fd5821be4259e07325a289bbf393de
----------------------------
Bug#29993 (Default value of log_output should be 'FILE', not 'TABLE') Changed the default location of the log output to LOG_FILE, for backward compatibility with MySQL 5.0 	2aeab16a65a5bdf8b5cad77868d2c54e9bfe001c
----------------------------
Many files: Put back old code to check stack direction at configure time 	0886cc3bedb394dc38affddd959975f1ed19a91d
----------------------------
Bug#28012 Patch : IM crashes instead of reporting an error when mysqldpath is bad On the windows platform, if an instance object failed to initialize during program start, the instance manager would crash. This could happen if an incorrect mysqld path was supplied in the defaults configuration file. The patch prevents the program from crashing and makes it show an error message instead. 	7d55b07fca5a70ea86e76d4dc387475556d60ecc
----------------------------
"Fixed bug #29788. After dumping triggers mysqldump copied the value of the OLD_SQL_MODE variable to the SQL_MODE variable. If the --compact option of the mysqldump was not set the OLD_SQL_MODE variable had the value of the uninitialized SQL_MODE variable. So usually the NO_AUTO_VALUE_ON_ZERO option of the SQL_MODE variable was discarded. This fix is for non-""--compact"" mode of the mysqldump, because mysqldump --compact never set SQL_MODE to the value of NO_AUTO_VALUE_ON_ZERO. The dump_triggers_for_table function has been modified to restore previous value of the SQL_MODE variable after dumping triggers using the SAVE_SQL_MODE temporary variable. "	c3e925eec32dcd6895bf690f92e64a5eae4365cb
----------------------------
CMakeLists.txt, configure.js: Allow to set mysqld exe suffix 	4ca632bfc39b02111b2ce95c8fc8c9ebfa8bad55
----------------------------
CMakeLists.txt, configure.js: Allow to set mysqld exe suffix 	7c1d25d9f9daab39151a1677384b0568962b8665
----------------------------
Bug #29325: create table overwrites .MYD file of other table (datadir) Set errno when retunring an error in my_create_with_symlink. 	94535ca8289fc8abaeef1e5f7dff5f76efa22728
----------------------------
BUG#29734 - thread_id=0 in binary log which leads to temporary table conflicts pseudo_thread_id was reset to zero via mysql_change_user() handling whereas there is no reason to do that.  Moreover, having two concurrent threads that change user and create a namesake temp tables leads to recording the dup pair of queries: set @@session.pseudo_thread_id = 0; CREATE temporary table `the namesake`; which will stall the slave as the second instance can not be created. And that is the bug case. Fixed by correcting pseudo_thread_id value after mysql_change_user(). 	c5608c9db28c88d05da94c6c06dbeb72158593d2
----------------------------
"Bug #29579  Clients using SSL can hang the server Added an option to yassl to allow ""quiet shutdown"" like openssl does. This option causes the SSL libs to NOT perform the close_notify handshake during shutdown. This fixes a hang we experience because we hold a lock during socket shutdown. "	899aaa6bb2a684b366ec462c8e7160897fde4299
----------------------------
Fix for 5.1 for BUG#10491: Server returns data as charset binary SHOW CREATE TABLE or SELECT FROM I_S. This is the last patch for this bug, which depends on the big CS patch and was pending. The problem was that SHOW CREATE statements returned original queries in the binary character set. That could cause the query to be unreadable. The fix is to use original character_set_client when sending the original query to the client. In order to preserve the query in mysqldump, 'binary' character set results should be set when issuing SHOW CREATE statement. If either source or destination character set is 'binary' , no conversion is performed. The idea is that since the source character set is no longer 'binary', we fix the destination character set to still produce valid dumps. 	3f2e94c401b87dd14b17307dab88e15067a24322
----------------------------
Addendum to bug 29325: test if TRUNCATE TABLE works with keep_files_on_create 	b5aa55e107e9d9ca0a9dfc18c21768318d971438
----------------------------
Bug #29325: By default MyISAM overwrites .MYD and .MYI files no DATA DIRECTORY option is used. This can lead to two tables using the same .MYD and .MYI files (that can't be dropped). To prevent CREATE TABLE from overwriting a file a new option is introduced : keep_files_on_create When this is on the CREATE TABLE throws an error if either the .MYD or .MYI exists for a MyISAM table. The option is off by default (resulting in compatible behavior). 	015e1290a1db21e02560447ffd72238827add8f7
----------------------------
"NULL MERGE UP to 5.1. Apply innodb-5.0-* snapshots:  ss1489 and ss1547. Fixes: Bug#9709:  InnoDB inconsistensy causes ""Operating System Error 32/33"" Bug#22819: SHOW INNODB STATUS crashes the server with an assertion failure under high load Bug#25645: Assertion failure in file srv0srv.c Bug#27294: insert into ... select ... causes crash with innodb_locks_unsafe_for_binlog=1 Bug#28138: indexing column prefixes produces corruption in InnoDB "	ccea97fa6f6fd8adefaf7e168e72d56041dc7253
----------------------------
"Apply the following innodb-5.1-* snapshots:  ss1489, ss1496, ss1550, ss1569. After applying the snapshots, ensure that code conforms to the final version of WL 3914. It is signficant that, after these changes, InnoDB does not define MYSQL_SERVER, and can be built as an independent storage engine plugin. Fixes: Bug#9709:  InnoDB inconsistensy causes ""Operating System Error 32/33"" Bug#18828: If InnoDB runs out of undo slots, it returns misleading 'table is full' Bug#20090: InnoDB: Error: trying to declare trx to enter InnoDB Bug#20352: Make ibuf_contract_for_n_pages tunable Bug#21101: Wrong error on exceeding max row size for InnoDB table Bug#21293: Deadlock detection prefers to kill long running FOR UPDATE queries Bug#22819: SHOW INNODB STATUS crashes the server with an assertion failure under high load Bug#25078: Make the replication thread to ignore innodb_thread_concurrency Bug#25645: Assertion failure in file srv0srv.c Bug#28138: indexing column prefixes produces corruption in InnoDB "	7cb5374120e6d69d696106fff9cf4b58d34d6f3b
----------------------------
Fix for bug #28808: log_queries_not_using_indexes variable dynamic change is ignored Problem: logging queries not using indexes we check a special flag which is set only at the server startup and is not changing with a corresponding server variable together. Fix: check the variable value instead of the flag. 	fca06fbc68215fec57834d39bff2f243f1b519cb
----------------------------
A fix and a teset case for Bug#28551 The warning 'No database selected' is reported when calling stored procedures Remove the offending warning introduced by the fix for Bug 25082 This minimal patch relies on the intrinsic knowledge of the fact that mysql_change_db is never called with 'force_switch' set to TRUE when such a warning may be needed: * every stored routine belongs to a database (unlike, e.g., a user defined function, which does not), so if we're activating the database of a stored routine, it can never be NULL. Therefore, this branch is never called for activation. * if we're restoring the 'old' current database after routine execution is complete, we should not issue a warning, since it's OK to call a routine without having previously selected the current database. TODO: 'force_switch' is an ambiguous flag, since we do not actually have to 'force' the switch in case of stored routines at all. When we activate the routine's database, we should perform all the checks as in case of 'use db', and so we already do (in this case 'force_switch' is unused). When we load a routine into cache, we should not use mysql_change_db at all, since there it's enough to call thd->reset_db(). We do it this way for triggers, but code for routines is different (wrongly). TODO: bugs are lurking in replication, since it bypasses mysql_change_db and calls thd->[re_]set_db to set the current database. The latter does not change thd->db_charset, thd->sctx->db_access and thd->variables.collation_database (and this may have nasty side effects). These todo items are to be addressed in a separate patch, if at all. 	c3f37e0b3df9b00ff386cc622e4d71ee3f852da2
----------------------------
Bug#22540 Incorrect value in column End_log_pos of SHOW BINLOG EVENTS using InnoDB - Update test results for --binlog-format=row 	68c7cc2af4a301999c6f2764ef173cc4b3fdd447
----------------------------
"Bug #29307  	status.test fails with different Table_locks_immediate Instead of sleeping for a fixed period of time, we wait until the other query is executing. "	1ce7a24766fa8e9d7ce4e53c177d4389598fc820
----------------------------
"Bug #29307  	status.test fails with different Table_locks_immediate Added more sleep time befoe reap to allow query to be executed. "	d7ba5280260ed4da5a4d7e877fca44a566cca784
----------------------------
"Bug#24924: shared-memory-base-name that is too long causes buffer overflow long shared-memory-base-names could overflow a static internal buffer and thus crash mysqld and various clients.  change both to dynamic buffers, show everything but overflowing those buffers still works. The test case for this would pretty much amount to mysqld --shared-memory-base-name=HeyMrBaseNameXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX --shared-memory=1 & mysqladmin --no-defaults --shared-memory-base-name=HeyMrBaseNameXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX shutdown Unfortunately, we can't just use an .opt file for the server. The .opt file is used at start-up, before any include in the actual test can tell mysqltest to skip this one on non-Windows. As a result, such a test would break on unices. Fixing mysql-test-run.pl to export full path for master and slave would enable us to start a server from within the test which is ugly and, what's more, doesn't work as the server blocks (mysqltest offers no fire-and-forget fork-and-exec), and mysqladmin never gets run. Making the test rpl_windows_shm or some such so we can is beyond ugly. As is introducing another file-name based special case (run ""win*.test"" only when on Windows). As is (yuck) coding half the test into mtr (as in, having it hand out a customized environment conductive to the shm- thing on Win only). Situation is exacerbated by the fact that .sh is not necessary run as expected on Win. In short, it's just not worth it. No test-case until we have a new-and-improved test framework. "	3c1be0006917b60c65a2633f8c56b8b6c1da50fb
----------------------------
configure.in: Added --with-system-type=<systype> and --with-machine-type=<machtype> options, to be able to override the one detected, for --version strings field.cc, field.h, listener.cc: C++ compatibility change for IBM VisualAge 6 and i5/OS 	2418b850465fd73f86c81e2a27e199e17d180e76
----------------------------
Bug #28839 Errors in strict mode silently stop SQL thread if --slave-skip-errors exists. slave_sql thread calls thd->clear_error() to force error to be ignored, though this method didn't clear thd->killed state, what causes slave_sql thread to stop. clear thd->killed state if we ignore an error 	3b08919f6afe89416465c77ab7d854a7c85dcb78
----------------------------
"Bug#28769 Test case ""innodb"" fails with --skip-log-bin - Move binlog related tests to binlog_innodb.test - Remove ""source include/have_log_bin.inc"" from innodb.test "	46f0c05afce85ca08908eb83ce97a1210a53260f
----------------------------
Bug #29117 (init_file test crashes with embedded server) we use net->vio in my_net_local_init, but in the my_net_init implementation we set it after the call, so work with unspecified net->vio value 	5a9d6856dea9c051cd0c7d2f7521494995daeab7
----------------------------
Sdditional fix-up for bug #26380: LOCK TABLES + FLUSH LOGS causes deadlock FLUSH LOGS should ignore SET GLOBAL READ_ONLY. 	5b22bc3bd59dcc75828072ce738c8acb3ab254fc
----------------------------
Fix for bug #26380: LOCK TABLES + FLUSH LOGS causes deadlock The log tables are by nature PERFORMANCE_SCHEMA tables, which should not be affected by SET GLOBAL READ_ONLY or FLUSH TABLES WITH READ LOCK. The implementation of FLUSH TABLES WITH READ LOCK already ignored log tables. Now with this patch, the implementation of LOCK TABLE also ignore a global read lock for log tables, which was the missing symmetry. 	f47b82906d1ad0f09e2e42948f29575f57eafce4
----------------------------
Embedded Server doesn't build on Windows. - Add build configuration parameter EMBEDDED_ONLY which will configure the VS solution to produce only mysql embedded binary. - Make necessary updates to successfully compile solution. 	c15a2647a0a4e88612bb3c3aa8d7417860016155
----------------------------
configure.in: bump up version 	eace17ece2b4003c6b1a53ae069de5f831098f6f
----------------------------
Bug#26342 auto_increment_increment AND auto_increment_offset REALLY REALLY anger NDB cluster, implemented support for auto_increment_offset and auto_increment_increment for Ndb, post review fix 	c41a4472c7c73f662e3741fdff7f1a3fd3007516
----------------------------
BUG#23051 (READ COMMITTED breaks mixed and statement-based replication): Temporarily using thd_tx_isolation() until decision is made on how to get the isolation level. 	0341be4eb3812ecf0bb556e3d6560f532776cb03
----------------------------
"Bug#27857 (Log tables supplies the wrong value for generating AUTO_INCREMENT numbers) Before this patch, the code in the class Log_to_csv_event_handler, which is used by the global LOGGER object to write to the tables mysql.slow_log and mysql_general_log, was supporting only records of the format defined for these tables in the database creation scripts. Also before this patch, the server would allow, with certain limitations, to perform ALTER TABLE on the LOG TABLES. As implemented, the behavior of the server, with regards to LOG TABLES, is inconsistent: - either ALTER TABLES on LOG TABLES should be prohibited, and the code writing to these tables can make assumptions on the record format, - or ALTER TABLE on LOG TABLES is permitted, in which case the code writing a record to these tables should be more flexible and honor new fields. In particular, adding an AUTO_INCREMENT column to the logs, does not work as expected (per the bug report). Given that the ALTER TABLE on log tables statement has been explicitly implemented to check that the log should be off to perform the operation, and that current test cases already cover this, the user expectation is already set that this is a ""feature"" and should be supported. With this patch, the server will: - populate AUTO INCREMENT columns if present, - populate any additional column with it's default value when writing a record to the LOG TABLES. Tests are provided, that detail the precise sequence of statements a SUPER user might want to perform to add more columns to the log tables. "	dd2bdfda8d32cd9c8c89b6f7c19aee2f15ff35d1
----------------------------
[PATCH] BUG#29063 mgmapi: connect timeout set incorrectly correctly divide timeout by 1000 to convert to seconds for SocketClient Index: ndb-work/storage/ndb/src/mgmapi/mgmapi.cpp =================================================================== 	23eb8698dc5712272d8622b33c6f9de069d2e9b8
----------------------------
"Bug#25411 (trigger code truncated), PART II Bug 28127 (Some valid identifiers names are not parsed correctly) Bug 26302 (MySQL server cuts off trailing ""*/"" from comments in SP/func) This patch is the second part of a major cleanup, required to fix Bug 25411 (trigger code truncated). The root cause of the issue stems from the function skip_rear_comments, which was a work around to remove ""extra"" ""*/"" characters from the query text, when parsing a query and reusing the text fragments to represent a view, trigger, function or stored procedure. The reason for this work around is that ""special comments"", like /*!50002 XXX */, were not parsed properly, so that a query like: AAA /*!50002 BBB */ CCC would be seen by the parser as ""AAA BBB */ CCC"" when the current version is greater or equal to 5.0.2 The root cause of this stems from how special comments are parsed. Special comments are really out-of-bound text that appear inside a query, that affects how the parser behave. In nature, /*!50002 XXX */ in MySQL is similar to the C concept of preprocessing : #if VERSION >= 50002 XXX #endif Depending on the current VERSION of the server, either the special comment should be expanded or it should be ignored, but in all cases the ""text"" of the query should be re-written to strip the ""/*!50002"" and ""*/"" markers, which does not belong to the SQL language itself. Prior to this fix, these markers would leak into : - the storage format for VIEW, - the storage format for FUNCTION, - the storage format for FUNCTION parameters, in mysql.proc (param_list), - the storage format for PROCEDURE, - the storage format for PROCEDURE parameters, in mysql.proc (param_list), - the storage format for TRIGGER, - the binary log used for replication. In all cases, not only this cause format corruption, but also provide a vector for dormant security issues, by allowing to tunnel code that will be activated after an upgrade. The proper solution is to deal with special comments strictly during parsing, when accepting a query from the outside world. Once a query is parsed and an object is created with a persistant representation, this object should not arbitrarily mutate after an upgrade. In short, special comments are a useful but limited feature for MYSQLdump, when used at an *interface* level to facilitate import/export, but bloating the server *internal* storage format is *not* the proper way to deal with configuration management of the user logic. With this fix: - the Lex_input_stream class now acts as a comment pre-processor, and either expands or ignore special comments on the fly. - MYSQLlex and sql_yacc.yy have been cleaned up to strictly use the public interface of Lex_input_stream. In particular, how the input stream accepts or rejects a character is private to Lex_input_stream, and the internal buffer pointers of that class are strictly private, and should not be tempered with during parsing. This caused many changes mostly in sql_lex.cc. During the code cleanup in case MY_LEX_NUMBER_IDENT, Bug 28127 (Some valid identifiers names are not parsed correctly) was found and fixed. By parsing special comments properly, and removing the function 'skip_rear_comments' [sic], Bug 26302 (MySQL server cuts off trailing ""*/"" from comments in SP/func) has been fixed as well. "	a508260b85382f06dd9d97507839030ff9bae8d3
----------------------------
"Bug#29044 - memory buddy allocator ""unoptimal"" memory handling - add config param to have better behavior with large tables "	2606bb1ce5a9aab178f9609f8eca87342765062f
----------------------------
"VC++Files/sql/mysqld.vcproj Ensure "".pdb"" and "".map"" files are created for the MySQL server, in all configurations. "	bd0b478e30e5351cfb5dbaa15f0e8de4213d5ef6
----------------------------
"Fix for bug #29015 ""Stack overflow in processing temporary table name when tmpdir path is long"" In create_tmp_table() don't set full table path as a table name. Other code assumes table names to not exceed NAME_LEN bytes. "	0f5a1e5910d48bb0ef0e21ca8d31a0f7b98f3b4c
----------------------------
"Bug#28149 overflow in some ""SHOW STATUS""-variables changed bytes_received, bytes_sent status variables to longlong "	068f1f7dbf6178fae5089ae8add2facbe415c73b
----------------------------
Bug#27684 undocumented difference between SHOW ENGINES and I_S.ENGINES Changed SHOW ENGINES to work in the same way as I_S.ENGINES. For this: removed the functions mysqld_show_storage_engines and show_handlerton, and made SHOW ENGINES work via the common function iter_schema_engines. There in no test case because an engine (except of MyISAM) may be not compiled or disabled which may affect the test result. 	237374c4579bece1b3e66cb71dc1e46d73d36bf2
----------------------------
"Bug #28754: RPM builds differ from tar.gz in ""ALTER ... RENAME"" on views When constructing the path to the original .frm file ALTER .. RENAME was unnecessary (and incorrectly) lowercasing the whole path when not on a case-insensitive filesystem. This path should not be modified because of lower_case_table_names as it is already in the correct case according to that setting. Fixed by removing the lowercasing. Unfortunately testing this would require running the tests on a case sensitive filesystem in a directory that has uppercase letters. This cannot be guaranteed in all setups so no test case added. "	d12fbdd8d0c3037168c1d2850f37db49ed77dc4f
----------------------------
Bug#18660 Can't grant any privileges on single table in database with underscore char In case of database level grant the database name may be a pattern, in case of table|column level grant the database name can not be a pattern. We use 'dont_check_global_grants' as a flag to determine if it's database level grant command (see SQLCOM_GRANT case, mysql_execute_command() function) and set db_is_pattern according to 'dont_check_global_grants' value. 	a809813b0dd1856b275d61a1d4bb7a829c50e681
----------------------------
"Add ""have_log_bin"" requirement for fast skip when running without binlog "	bbd7ed02871475643011c30f60ea0c742b4b1351
----------------------------
"bug #28309 First insert violates UNIQUE constraint - was ""memory"" table empty? If we have lower_case_table_names == 2 (usually on case insensitive file systems) we sometimes make 'homedir' part of the path sent to the handler into lowercase. So in this case HEAP engine couldn't properly find and remove HP_SHARE, what caused the bug. "	6ee83df5ffb6318f3989de314c747a63e99b2e4c
----------------------------
ndb - update dl145a config for autotest 	79da61069b8e056e5ad6a3b76f0fbb7a4afc7b68
----------------------------
ndb - make size of redo log files (fragment log files) configurable using new config variable FragmentLogFileSize (4M - 1G) 	b8e43a1d9dc7dbcc3404fd85a2d7a2148e9f70c1
----------------------------
"Bug #26162: Trigger DML ignores low_priority_updates setting The value of ""low-priority-updates"" option and the LOW PRIORITY prefix was taken into account at parse time. This caused triggers (among others) to ignore this flag (if supplied for the DML statement). Moved reading of the LOW_PRIORITY flag at run time. Fixed an incosistency when handling SET GLOBAL LOW_PRIORITY_UPDATES : now it is in effect for delayed INSERTs. Tested by checking the effect of LOW_PRIORITY flag via a trigger. "	9a1d8adc9d25018664cf8fefdde2bde6d85a7814
----------------------------
BUG#28752 (binlog_format variable is empty when binlog is turned off): Setting MIXED format instead of UNSPECIFIED format when server is started without log-bin. 	2bcbb7dafcadad9b5a429adb4f208696e84e7a83
----------------------------
"Avoid a compile error which arises from a redefinition of ""inline"": If it has been defined (by ""configure"", in ""include/my_config.h""), then an ""#undef"" is needed to avoid a redefinition. This is needed to prevent a compile error of the debug server on AIX. "	b953f1b2c137ed6310a3f2af40d1e2b83ab7a90f
----------------------------
Bug#28478 - Improper key_cache_block_size corrupts MyISAM tables Setting a key_cache_block_size which is not a power of 2 could corrupt MyISAM tables. A couple of computations in the key cache code use bit operations which do only work if key_cache_block_size is a power of 2. Replaced bit operations by arithmetic operations to make key cache able to handle block sizes that are not a power of 2. 	59a05422097a9f902f29c0aa749f65f321e23460
----------------------------
BUG#28618 (Skipping into the middle of a group with SQL_SLAVE_SKIP_COUNTER is possible): By setting the SQL_SLAVE_SKIP_COUNTER it was possible to start the from the middle of a group. This patch adds code so that events that do not end a statement are ignored instead of skip counted when the slave skip counter is 1. 	b1bd9a6c4f477fc6aba81ee3dc91383c860dbaff
----------------------------
some test cases cannot run with --skip-log-bin 	779a055ed0f0907958ef232f6a0b78f5f29cc48a
----------------------------
Makefile.am, configure.in: Added --with-mysqld-libs configure flag 	b217a9e898582050ee50300fc8eacb8d5bca12e4
----------------------------
configure.in: After merge changes, removed unneeded Netware specific sprintf case 	1d36bcab1d5e8187ed116bd274a4ca32efca0faf
----------------------------
sql_parse.cc, config-win.h, config-netware.h: Don't try determine stack direction at configure time compiler_flag.m4: Use AC_TRY_COMPILE and AC_TRY_LINK instead of AC_TRY_RUN where possible misc.m4, configure.in: Use fourth argument to AC_TRY_RUN, to be used in cross compilation Don't try determine stack direction at configure time 	a069db06a64a34b64a8cdb944042eccf7e66cacb
----------------------------
Test for bug #26842 moved to a separate file as it uses 'show binlog events' and fails with --binlog-format=row. 	61dd2f61be814fb9bfffb24db0054509cc33ad3d
----------------------------
"Bug#26664 test suite times out on OS X 64bit - The ""mysql client in mysqld""(which is used by replication and federated) should use alarms instead of setting socket timeout value if the rest of the server uses alarm. By always calling 'my_net_set_write_timeout' or 'my_net_set_read_timeout' when changing the timeout value(s), the selection whether to use alarms or timeouts will be handled by ifdef's in those two functions. - Move declaration of 'vio_timeout' into ""vio_priv.h"" "	93b1fe65d82661f29b1f6e1ad341eb0f68f4c93c
----------------------------
- This patch addesses the performance issues with invalidating the entire cache by changing the behavior of the query cache resize-method. - set query_cache_size=<new_size>; is significantly faster than RESET QUERY CACHE as it simply destroys and recreates the query cache, whereas RESET QUERY CACHE keeps its internal structure aligned with server load profile. 	c454071eabffefeb4722c0db62e741171a6aa7ec
----------------------------
Bug#21554 (sp_cache.cc: violates C++ aliasing rules) The problem reported is a compile bug, reported by the development GCC team with GCC 4.2. The original issue can no longer be reproduced in MySQL 5.1, since the configure script no longer define HAVE_ATOMIC_ADD, which caused the Linux atomic functions to be used (and cause a problem with an invalid cast). This patch implements some code cleanup for 5.1 only, which was identified during the investigation of this issue. With this patch, statistics maintained in THD::status_var are by definition owned by the running thread, and do not need to be protected against race conditions. These statistics are maintained by the status_var_* helpers, which do not require any lock. 	782096dbcc28a14e65c23a10390e664b4cd03580
----------------------------
Bug #28401 mysql_upgrade Failed with STRICT_ALL_TABLES, ANSI_QUOTES and NO_ZERO_DATE - The SQL commands used by mysql_upgrade are written to be run with sql_mode set to '' - thus the scripts should change sql_mode for the session to make sure the SQL is legal. 	bc69d072f3c3d5af79a0835d92ac242c3cef2ba0
----------------------------
BUG#28341 - Security issue still in library loading UDF can be created from any library in any part of the server LD_LIBRARY_PATH. Allow to load udfs only from plugin_dir. On windows, refuse to open udf in case it's path contains a slash. No good test case for this bug because of imperfect error message that includes error code and error string when it fails to dlopen a library. 	e3f7947da028887ec1932a7e43caf8ea5b91e06b
----------------------------
Bug#24400 Source files for Server: Visual Studio Workspace contains a small config bug - Correct bad path in project files. 	9099f4782341973604646f320fc512d895538b97
----------------------------
Bug#23068 - key_cache_block_size is not set or displayes correctly Command line and configuration file option 'key_cache_block_size' was reduced by MALLOC_OVERHEAD (8 in a production server, 36 in a debug server) from the user supplied value and restricted it to the greatest multiple of 512 less or equal to the reduced value. This patch changes option 'key_cache_block_size' to not deduce MALLOC_OVERHEAD from the input value. However, the restriction to a multiple of 512 is still done. 	c6e0b8d18e768661a22d05e685348a0d0dec3aa1
----------------------------
Bug#28223: mysqldump --compact --routines restores from @OLD_SQL_MODE w/o ever setting it - mysqldump generated output that set OLD_SQL_MODE twice, to different values (for triggers), or not at all (for routines) in some cases. 	e888128e88927fe3087926a4d1ffe03ee380ae2b
----------------------------
"Bug#27344 Total failure to start the server - Give some more protection against ""too long socket name by setting the max length when to use a tmpdir for sockets to 70 "	da8a944dfbdd6a4c18b490c7a22d0b55dabb88ac
----------------------------
BUG#28439 date_formats test case fails with binlog disabled 	d34c87c303bcd195c5726e02e3eda7511267f156
----------------------------
Bug#17332 - changing key_buffer_size on a running server can crash under load Post-post-review fixes. Fixed a typo == -> = Optimized normal flush at end of statement (FLUSH_KEEP), but let other flush types be stringent. Added comments. Fixed debugging. 	3ed42fbb2d4f768660b6b95076546eba8712f728
----------------------------
branches/zip: Merge revisions 1402:1493 from trunk. Remove mysql.patch, because the configuration parameter interface has changed. 	e7284367dcf51abc867577910eafee76dbccff88
----------------------------
Bug#28223: mysqldump --compact --routines restores from @OLD_SQL_MODE w/o ever setting it mysqldump generated output that set OLD_SQL_MODE twice, to different values (for triggers), or not at all (for routines) in some cases. --- Merge blasphemy.mysql.com:/home/tnurnberg/28223/50-28223 into  blasphemy.mysql.com:/home/tnurnberg/28223/51-28223 	a8916920283f3044c340e55f229be68eca33725f
----------------------------
"Bug#27344 Total failure to start the server - Give some more protection against ""too long socket name by setting the max length when to use a tmpdir for sockets to 70 "	b805507358c3866d05c9fca5c0291ea6bf5d3096
----------------------------
Ndb.hpp, Ndb.cpp, ha_ndbcluster.cc: Bug#26342 auto_increment_increment AND auto_increment_offset REALLY REALLY anger NDB cluster, implemented support for auto_increment_offset and auto_increment 	11e98f4126ab2ffa1538111ee8dedd686bfa45d3
----------------------------
Bug#26342 auto_increment_increment AND auto_increment_offset REALLY REALLY anger NDB cluster, implemented support for auto_increment_offset and auto_increment_increment for Ndb 	c5f150349373697c3a137399a9ba081afb958d7a
----------------------------
BUG#17233 : LOAD DATA INFILE: failure causes mysqld dbug_assert, binlog not flushed This patch corrects a bug involving a LOAD DATA INFILE operation on a transactional table. It corrects a problem in the error handler by moving the transactional table check and autocommit_or_rollback operation to the end of the error handler. The problem was an assert was thrown after the operation completed. The assert found a non-sunk event in the transaction cache. The events in the transaction cache were added after commit_or_rollack and thereafter nothing removed them. An additional test case was added to detect this condition. 	e6718df34558482ff3e6efc9318c5e0f75624b61
----------------------------
"Fix Bug#25078 by always letting the replication thread on the slave server to enter InnoDB. This can be made further customizable by the user if we introduce a new config parameter. This will wait until config parameters can be easily added. Approved by:	Marko "	bcb68dadb24c91f039439ff7fca0e317ded1c29d
----------------------------
Bug #27792 query cache returns wrong result, with certain system variables - Queries in the query cache are identified by the individual characters in the query statement, the current database and the current environment expressed as a set of system variable flags. - Since the set of environment flags didn't properly describe the current environment unexpected results were returned from the query cache. - Query cache is now cleared when the variable ft_boolean_syntax is updated. - An identification flag for the variable default_week_format is added to the query cache record. Thanks to Martin Friebe who has supplied significant parts of this patch. 	4ea05eae31f0012741ea3a22de12b5b8c45cf546
----------------------------
BUG#17233 : LOAD DATA INFILE: failure causes mysqld dbug_assert, binlog not flushed This patch corrects a bug involving a LOAD DATA INFILE operation on a transactional table. It corrects a problem in the error handler moving the transactional table check and autocommit_or_rollback operation to the end of the error handler. An additional test case was added to detect this condition. 	41b8ddc873c76812b1830727a33253f7ad614cf6
----------------------------
Fixed bug #27954. This bug affects multi-row INSERT ... ON DUPLICATE into table with PRIMARY KEY of AUTO_INCREMENT field and some additional UNIQUE indices. If the first row in multi-row INSERT contains duplicated values of UNIQUE indices, then following rows of multi-row INSERT (with either duplicated or unique key field values) may me applied to _arbitrary_ records of table as updates. This bug was introduced in 5.0. Related code was widely rewritten in 5.1, and 5.1 is already free of this problem. 4.1 was not affected too. When updating the row during INSERT ON DUPLICATE KEY UPDATE, we called restore_auto_increment(), which set next_insert_id back to 0, but we forgot to set clear_next_insert_id back to 0. restore_auto_increment() function has been fixed. 	eb1f21f8b656e858cfef3daa72d9a5bee7951ce2
----------------------------
"Bug #28267  	Cannot build with OpenSSL - Fix use of uninitialized variable in config/ac-macros/ssl.m4 "	3899138fe0a4df2d80d98191caeb46bc52d416d3
----------------------------
"Bug #27976: Misleading error message, 'Sort buffer to small' The message is gramatically wrong, and factually wrong. Change it to refer to the myisam_sort_buffer_size variable and change ""to"" to ""too"". "	b6502ddb1931197f065d78ccf06009d98fdb385c
----------------------------
Bug #27653: Temp table can't be created if lower_case_table_names=1 and tmpdir has uppercase Fix: don't convert mysql_tmpdir to lower case when building the path to a temporary table 	44af4144e66b1c0100e47c907a44842c75666f9e
----------------------------
Bug #27390: mysqld_multi --config-file= not working as documented Recognize the --no-defaults, --defaults-file and --defaults-extra-file options.  Treat old --config-file argument as if --defaults-extra-file had been specified instead. Plus a few other defaults-related cleanups. 	b90b0c7eb28993ca1abe5e288702efb309ba27a2
----------------------------
mysql-test/mysql-test-run.pl provide the writable datadir for mysqld --help (for lower_case test) sql/log.h, sql/mysqld.cc make default binlog_format value to be 0 (for a hack of using GET_STR for enum to continue to work) 	7dfd5e8d71c2c310ad6d7f68a3520e364c750fe8
----------------------------
Bug#26121 mysqldump includes LOCK TABLES general_log WRITE (backport to telco 6.1) - Giving the directive '--all-databases' to mysqldump caused an attempt to lock and dump log tables which don't support this operation. - With this patch the log tables are excluded from the set of databases tables to dump. 	e038adfa18f59834abb10d4fd30a126b90d9fd92
----------------------------
Added sql_mode PAD_CHAR_TO_FULL_LENGTH (WL#921) This pads the value of CHAR columns with spaces up to full column length (according to ANSI) It's not makde part of oracle or ansi mode yet, as this would cause a notable behaviour change. Added uuid_short(), a generator for increasing 'unique' longlong integers (8 bytes) 	eeaa3adb036085b6f411c2b5f18db70e2e8c6977
----------------------------
Minor improvement to save some testing runtime (~ 2 minutes). Reason: This test executes DML statements on a NDB table to detect if some SQL statements of special interest commits the ongoing transaction. When running in MIXED mode, automatic switching from statement-based to row-based replication takes place when a DML statement updates an NDB table. That means running this test on NDB with binlog-format=mixed and binlog-format=row mostly checks the same routines twice. Therefore we skip the variant with binlog-format=mixed. 	44f02c570a3b04dbb248ce875a8d0d0f980c79cb
----------------------------
"Fixed bug #27650: INSERT into InnoDB table may cause ""ERROR 1062 (23000): Duplicate entry..."" errors or lost records after multi-row INSERT of the form: ""INSERT INTO t (id...) VALUES (NULL...) ON DUPLICATE KEY UPDATE id=VALUES(id)"", where ""id"" is an AUTO_INCREMENT column. It happens because InnoDB handler forgets to save next insert id after updating of auto_increment column with new values. As result of that last insert id stored inside InnoDB dictionary tables differs from it's cached thd->next_insert_id value. "	5983038a669f582ae256e774026e9a91dd0667d1
----------------------------
Add --symbolic-links=1 for partition_not_windows-master.opt. 	c6f625bdbc0936ec9a72b3a5905513a4dea05e9b
----------------------------
Fix test case that was broken for builds without InnoDB. --- Merge pippilotta.erinye.com:/shared/home/df/mysql/build/mysql-5.0-build-work-vanilla-building into  pippilotta.erinye.com:/shared/home/df/mysql/build/mysql-5.1-build-work-vanilla-building --- Fix test cases to pass for a plain ./configure && make build. This includes disabling two test cases when certain features are not present in the server. We're not losing coverage from this because these features are usually present, and disabling them here only serves the purpose to make the test cases work in the unlikely case that they aren't. --- fixes 	b353df747403d1d18142ebcb9ea582760d86baff
----------------------------
BUG#27207 Return correct error message when ndb_mgmd start with wrong config.ini parameter in TCP section 	fcec5410bf6f22cf1e430c5cc8b3f5ebdc520ab4
----------------------------
"Bug #24228  	ndb_size.pl requires non-standard HTML::Template module Bug #24227  	ndb_size.pl should report default values instead of < default for config params Bug #24229  	ndb_size.pl doesn't compute Index usage correctly Big ndb_size.pl update "	14ff88741c2c4fa14c8c9963f04f54dd6271e67e
----------------------------
"configure.in  :  Ensure that ""icheck"" is really the ABI checker, not some other tool (file system checker on Tru64). Patch originally supplied by Peter O'Gorman, slightly modified by me. Bug#27739 ""build fails on Tru64 due to icheck test in configure"" "	5de73f45f93988351e620781ae6e631c3760a7fc
----------------------------
rules: Protect the control file from running ./configure again 	4cc0c69e474d6ff64e5fc3e1837f641b8ec7a224
----------------------------
"Bug #27076 Cluster does not honor SQL_LOG_BIN flag - both for data schema operations - also make sure schema events vet the right server id when injected into the binlog - use same mechanism to signal server_id in bug#17095, and reserve some ""id's"" for flagging special conditions on the event, in this case do not log it - enable printing of server ids in the testcases to show that we cot it right "	38f9729c2adb549ebcdaaafa22d5a922b5da267c
----------------------------
Bug#27783 mysql_install_db should be able to install again, preserving existing files. - Allow mysql_install_db to be run a second time in the same datadir to create and fill any missing system tables 	a3f5321025daaaa932b2cadba153f4d832d2b1d0
----------------------------
"Merge: f5fc147 8437fd6 Merge trift2.:/MySQL/M50/limit-man-5.0 into  trift2.:/MySQL/M51/limit-man-5.1 Fixes during manual merge, due to the ""plugin"" naming of configure variables in 5.1 "	6feaf3c7265839c7e9f656380165fb6e1f1ef631
----------------------------
"Let the ""configure"" options that control table handlers (NDB, InnoDB) or features (""embedded"") also control the list of man pages installed, so that they correspond better to the binaries. This is the second version of this fix, including review comments. "	8437fd62b2da4a7aff965a65481e1ef59c70ad36
----------------------------
Bug #27395 OPTION_STATUS_NO_TRANS_UPDATE is not preserved at the end of SF() tests for the bug and associated is moved into another file because they appeared to be binlog-format sensitive. 	b49cb4fbb4d1c17c3d66220a7b5c079d6c23e4ce
----------------------------
Fix for bug #27715: mysqld --character-sets-dir buffer overflow bug ##26851: Mysql Client --pager Buffer Overflow Using strmov() to copy an argument may cause overflow if the argument's length is bigger than the buffer: use strmake instead. Also, we have to encrease the error message buffer size to fit the longest message. 	e62dbcf746fcb33b7e1c0a1b75ca5f0a9561e956
----------------------------
remove duplicate info in paramInfo and ConfigInfo 	0de46f18ca241d59a228c92aaa2a1b7ec69dceea
----------------------------
Fixing compile problem on some platforms resulting from building a configuration with HAVE_REPLICATION undefined, which causes the *_rows_log_event_old classes to only have a default constructor. This generates an error on some platforms, since the base classes does not have a default constructor defined. Updating signatures of do_prepare_row() for classes above, since signatures in base classes changed. 	7f279ae5e93a8e5d1a8c7fe96f79c41110bf4e5c
----------------------------
"Bug #27322  	failure to allocate transaction_prealloc_size causes crash Fix for when memory pre-allocation fails. "	dac9f99327498e898aec1a90f1002a0695fe6432
----------------------------
BUG#27367 mysql.server should be LSB init script compliant Moved cd $basedir to live in the start section, as it only applies to the start functionality and breaks the restart task 	99c5f418af1e2076b9f66624559f39288129c17a
----------------------------
Bug#27783 mysql_install_db should be able to install again, preserving existing files. - Allow mysql_install_db to be run a second time in the same datadir to create and fill any missing system tables 	74dfba96e73bb00feb518f070ac41c10891965f7
----------------------------
Adding files to support building for debian. --- Removed reference to debian svn location of debian dir. Changed verbage of comment to appease Timothy. --- Removed added manpages that aren't appropriate for our build. --- Added debian dir to list of dist targets. Added list of files needed to be distributed in debian dir. --- Added semi-colons to fix syntax error. --- BUG#27769 MySQL should include debian packaing dir Added debian/Makefile to configure.in to support make dist. 	6547960e28cb95c89e8c38d5062e59d314b2cbe1
----------------------------
make configure handle service pack version strings 	d5f6363ba107fe4312223c7052538f2f01da9050
----------------------------
"Bug#22648 LC_TIME_NAMES: Setting GLOBAL has no effect Problem: setting/displaying @@LC_TIME_NAMES didn't distinguish between GLOBAL and SESSION variable types - always SESSION variable was set/shonw. Fix: set either global or session value. Also, ""mysqld --lc-time-names"" was added to set ""global default"" value. "	4341df8cf65b6a722e9675e2027cc027c63110b7
----------------------------
Bug#26121 mysqldump includes LOCK TABLES general_log WRITE - Giving the directive '--all-databases' to mysqldump caused an attempt to lock and dump log tables which don't support this operation. - With this patch the log tables are excluded from the set of databases tables to dump. 	19027868082252e1d85a9b1caeb2ab05d35cf044
----------------------------
"zlib.m4: Only require the more recent zlibCompileFlags() when building the server, client zlib don't need it. Makefile.am: Always build the bundled zlib static only configure.in: Look for dlopen() even if --with-mysqld-ldflags constains ""-static"", as this is not the same as the flag to ""ld"", it just informs ""libtool"" to link static with libraries created part of the build, even if there exists shared versions. make_binary_distribution.sh: Real ""mysqlmanager"" executable might be in "".libs"" "	463b34e77b187a4d6f725076de6713b7d49a9e5e
----------------------------
Deleted reject files accidently checked in configure.in.rej include/my_global.h.rej BUILD/SETUP.sh.rej mysys/thr_alarm.c.rej include/my_pthread.h.rej 	8cc67c011e29661db8f579f1d2a649bf65605dd0
----------------------------
branches/zip: Fix the merge of branches/fast-index-creation -r1413 in r1414. innodb.test: The error code 1540 has been renumbered to 1542. innodb.result: Adjust the expected value of Innodb_buffer_pool_pages_total. Something may have changed in the BLOB handling in branches/zip. ha_innodb.cc: Add ha_innobase:: prefix to some DBUG_ENTER macros. row_merge_create_temporary_table(): Free the heap only after invoking row_create_table_for_mysql().  The table->col_names points to the heap until the system columns are added by row_create_table_for_mysql(). TODO: use the filename-safe encoding in temporary table names.  Test extensively under Valgrind and fix all errors found.  Eliminate merge_rec_t and rewrite row0merge.c to write the records directly to the merge blocks. 	5650bfbe45751b73c3af14b4cc5128554bd0a864
----------------------------
Backport: B-g#27427: resolveip fails on hostnames with a leading digit We need inet_aton for the extra/resolveip tool.  Some OSes put this in nonstandard libraries. 	6204ae25fc6d6b2153e0e9ab14eee0c0ce5a2e2a
----------------------------
sync the initialization configuration information between ConfigInfo.cpp and ParamInfo.cpp 	888c2057e95727fad288a2100b6743d2e9a37578
----------------------------
Bug#27327 information_schema status views, variable_value conversion Type of 'Slave_running' status variable is changed to bool 	89dec159d13344c81ee0c2f2455d0cd12004fa0f
----------------------------
Bug#21611 Slave can't connect when master-ssl-cipher specified - Change check for return value of 'SSL_CTX_set_cipher_list' in order to handle 0 as error setting cipher. - Thanks to Dan Lukes for finding the problem! 	82b454aa28e46efa9249ee51784b654fbd0a9225
----------------------------
ndb - fix bug in my.cnf config handling put64 for 64-bit variables 	c77ffe4a263d5216d6dc971adaf8bc60f665e6f6
----------------------------
Bug#27049 Race condition in test mysqlbinlog.test - Add --local-load option to avoidthat the load data file requested by mysqlbinlog end up in local var/tmp dir and not in system global tmpdir 	398c24d1a165d805229b361994abe1a4c04b7cfb
----------------------------
BUG#24793 Add SO_KEEPALIVE socket option to avoid cluster nodes keeping dead connections forever. 	2b2ad6d605612f6553f15f7bf85f84678ddc2581
----------------------------
Bug#23233: 0 as LAST_INSERT_ID() after INSERT .. ON DUPLICATE in the NO_AUTO_VALUE_ON_ZERO mode. In the NO_AUTO_VALUE_ON_ZERO mode the table->auto_increment_field_not_null variable is used to indicate that a non-NULL value was specified by the user for an auto_increment column. When an INSERT .. ON DUPLICATE updates the auto_increment field this variable is set to true and stays unchanged for the next insert operation. This makes the next inserted row sometimes wrongly have 0 as the value of the auto_increment field. Now the fill_record() function resets the table->auto_increment_field_not_null variable before filling the record. The table->auto_increment_field_not_null variable is also reset by the open_table() function for a case if we missed some auto_increment_field_not_null handling bug. Now the table->auto_increment_field_not_null is reset at the end of the mysql_load() function. Reset the table->auto_increment_field_not_null variable after each write_row() call in the copy_data_between_tables() function. 	7c42232d1de1746c163fd368806ad566f88d5917
----------------------------
bug #24633 (sql_mode NO_DIR_IN_CREATE doesn't work with partitioned tables) additional patch to fix SHOW CREATE behaviour 	497ff2fa9ca2b601a84982a8ddb11c7f7b9e3567
----------------------------
"Bug#25482 GRANT statements are not replicated if you use ""replicate-ignore-table"" - GRANT and REVOKE statments didn't have the ""updating"" flag set and thus statements with a table specified would not replicate if slave filtering rules where turned on. For example ""GRANT ... ON test.t1 TO ..."" would not replicate. "	a71d1951832262eecc57e0fe2ca191593cf27843
----------------------------
Make the script detect --default-storage-engine=x and mark the test as requiring that storage engine(if we need to do that) Make --ndb and --with-ndbcluster and alias for --mysqld=--default-storage-engine=ndbcluster 	0e04aec960036020951725526c29be1486e273b3
----------------------------
configure.in: Don't install ndb man pages if no ndb configured config-win.h, CMakeLists.txt, README, configure.js: Removed Cybozu patches 	7a2e0ee7d757d71df26c20ab23b11b61c82fd5c7
----------------------------
Set yaSSL to use same type as MySQL do for socket handles 	f8b32417266793b2cad9d452f7c5731f9607fbf9
----------------------------
Bug#25309 SSL connections without CA certificate broken since MySQL 5.0.23 - Turn off verification of peer if both ca_path and ca_file is null i.e from only passing --ssl-key=<client_key> and --ssl-cert=<client_cert> to the mysql utility programs. The server will authenticate the client accoring to GRANT tables but the client won't authenticate the server 	aec7927c8e688ecb42683714f095deb6e95f1384
----------------------------
innobase_commit(): Correct the comments and formatting that were broken when innodb_commit_concurrency was implemented. 	278c29e57691bce8a049877e1600edb99de30ee8
----------------------------
Remove ha_innobase::last_query_id and references to thd->query_id. MySQL calls external_lock at the beginning and end of a statement when it is not calling start_stmt or commit or rollback.  Thus, statement boundaries can be (and are already) detected without monitoring thd->query_id. The function innobase_commit() seemingly lacks the call to innobase_release_stat_resources(), which should be called at the end of every SQL statement.  The call was replaced by equivalent statements by Vadim Tkachenko when he implemented innodb_commit_concurrency in MySQL 5.0: http://mysql.bkbits.net:8080/mysql-5.0/?PAGE=patch&REV=1.1886.70.1 	4f1615b745f7a68356fe9c6cf0bef0a7e57eeeba
----------------------------
Bug#22378 Make error, strings/ctype-utf8.c, uni_plane undeclared - Fixing utf8_general_cs according to recent changes. - Compiling utf8_general_cs in pentium-debug-max configuration to avoid these problems in the future. 	daa7e9c386ae1ff8cc891f8acf25d495bda5dd0a
----------------------------
"Port r1372 from branches/5.0: Merge a change from MySQL AB, and remove the innodb_gis test case. ChangeSet 2007/02/19 13:57:06+03:00 kaa@polly.local Bug#18743: Several test cases fails if ""classic"" configuration in 5.0 The problem happened because those tests were using ""cp932"" and ""ucs2"" without checking whether these character sets are available. This fix moves test parts to make character set specific parts be tested only if they are: - some parts were moved to ""ctype_ucs.test"" and ""ctype_cp932.test"" - some parts were moved to the newly added tests ""innodb-ucs2.test"", ""mysqlbinglog-cp932.test"" and ""sp-ucs2.test"" mysql-test/t/innodb.test 2007/02/19 13:57:02+03:00 kaa@polly.local +0 -222 Moved ucs2-specific test cases to innodb-ucs2.test "	4b64ce644a039a45e4b90c6ee5fbb26190921a88
----------------------------
Merge a change from MySQL AB: ChangeSet@1.2409.1.83  2007-03-06 10:36:15-07:00  tsmith@hindu.god Bug #26598: Create variable to allow turning off of statistic gathering on metadata commands Add innodb_stats_on_metadata option, which enables gathering index statistics when processing metadata commands such as SHOW TABLE STATUS.  Default behavior of the server does not change (this option is enabled by default). 	e15454c52ac44de4fbd9aafd0f01a17b9659c4f6
----------------------------
bug in im* tests - missing --no-defaults in the mysql command line 	77718a3fc19e0e7854a94c4aad3342b04053977c
----------------------------
"Backport from 5.1, limit SHOW VARIABLES to ""log_bin%"" "	a552a07c55ef27ad99472916e8741c15c9f87aa6
----------------------------
Bug#17332 - changing key_buffer_size on a running server can crash under load After review fixes 	942cd7d42448e9ad0128fb99ac1267638511899d
----------------------------
Apply the following InnoDB snapshots: innodb-5.1-ss1318 innodb-5.1-ss1330 innodb-5.1-ss1332 innodb-5.1-ss1340 Fixes: - Bug #21409: Incorrect result returned when in READ-COMMITTED with query_cache ON At low transaction isolation levels we let each consistent read set its own snapshot. - Bug #23666: strange Innodb_row_lock_time_% values in show status; also millisecs wrong On Windows ut_usectime returns secs and usecs relative to the UNIX epoch (which is Jan, 1 1970). - Bug #25494: LATEST DEADLOCK INFORMATION is not always cleared lock_deadlock_recursive(): When the search depth or length is exceeded, rewind lock_latest_err_file and display the two transactions at the point of aborting the search. - Bug #25927: Foreign key with ON DELETE SET NULL on NOT NULL can crash server Prevent ALTER TABLE ... MODIFY ... NOT NULL on columns for which there is a foreign key constraint ON ... SET NULL. - Bug #26835: Repeatable corruption of utf8-enabled tables inside InnoDB The bug could be reproduced as follows: Define a table so that the first column of the clustered index is a VARCHAR or a UTF-8 CHAR in a collation where sequences of bytes of differing length are considered equivalent. Insert and delete a record.  Before the delete-marked record is purged, insert another record whose first column is of different length but equivalent to the first record.  Under certain conditions, the insertion can be incorrectly performed as update-in-place. Likewise, an operation that could be done as update-in-place can unnecessarily be performed as delete and insert, but that would not cause corruption but merely degraded performance. 	baddc4e91c55dd9f4a4c6e649e7e222edfb4f17b
----------------------------
NULL MERGE this to 5.1 Apply the following InnoDB snapshots: innodb-5.0-ss1319 innodb-5.0-ss1331 innodb-5.0-ss1333 innodb-5.0-ss1341 Fixes: - Bug #21409: Incorrect result returned when in READ-COMMITTED with query_cache ON At low transaction isolation levels we let each consistent read set its own snapshot. - Bug #23666: strange Innodb_row_lock_time_% values in show status; also millisecs wrong On Windows ut_usectime returns secs and usecs relative to the UNIX epoch (which is Jan, 1 1970). - Bug #25494: LATEST DEADLOCK INFORMATION is not always cleared lock_deadlock_recursive(): When the search depth or length is exceeded, rewind lock_latest_err_file and display the two transactions at the point of aborting the search. - Bug #25927: Foreign key with ON DELETE SET NULL on NOT NULL can crash server Prevent ALTER TABLE ... MODIFY ... NOT NULL on columns for which there is a foreign key constraint ON ... SET NULL. - Bug #26835: Repeatable corruption of utf8-enabled tables inside InnoDB The bug could be reproduced as follows: Define a table so that the first column of the clustered index is a VARCHAR or a UTF-8 CHAR in a collation where sequences of bytes of differing length are considered equivalent. Insert and delete a record.  Before the delete-marked record is purged, insert another record whose first column is of different length but equivalent to the first record.  Under certain conditions, the insertion can be incorrectly performed as update-in-place. Likewise, an operation that could be done as update-in-place can unnecessarily be performed as delete and insert, but that would not cause corruption but merely degraded performance. 	8abc953662ec8b764c035a26109b336ebb0b1ad7
----------------------------
[PATCH] WL#3704 mgmapi timeouts: Correct cpc client usage of Socket Input/OutputStream for timeouts Index: ndb-work/storage/ndb/include/util/InputStream.hpp =================================================================== 	75cff8cd263b5f3ff876cda9045f9b8ed73fb6c8
----------------------------
[PATCH] WL#3704 mgmapi timeouts: update NDBAPI usage of mgmapi for timeouts Default timout of 30secs for ConfigRetriever Default timout of 5sec for use by Transporter (ports etc). And Ndb_cluster_connection::set_timeout() api for setting timeout from NDBAPI applications. Should be called before connect. e.g. c.set_timeout(4200); c.connect(); Index: ndb-work/storage/ndb/include/mgmcommon/ConfigRetriever.hpp =================================================================== 	acb61e810c058db3a53cdad2005d636c0b145fad
----------------------------
"[PATCH] WL#3704 mgmapi timeouts: Return sane errors for timeout in mgmapi In ndb_mgm_call, add checks for expired timeout in (Input|Output)Stream. In case of timeout, we set NdbMgmHandle->last_error and return NULL. In api calls not using ndb_mgm_call (or using it in conjunction with own IO), they'll need to check for timeouts manually. Macros are provided to do this. Add ndb_mgm_disconnect_quiet(h) to disconnect without checking errors (so we don't clobber NdbMgmHandle->last_error). This helps us provide the *consistent* semantic that on timeout we leave the NdbMgmHandle *disconnected*. We check for this in testMgm. Change CHECK_REPLY in mgmapi to also check for set error in handle->last_error This will pick up the ETIMEDOUT errors and return them to client (through returning correct failure code for API call and setting NdbMgmHandle error). Applications written to MGMAPI before this patch will behave as before, and even hopefully check get_last_error and report the error back to the end user! Adding the last CHECK_TIMEDOUT_RET and delete in ndb_mgm_call() we slightly change behaviour of mgmapi. Previously, if disconnect midway through a reply, where there were only optional parameters left, we'd get a Properties object from ndb_mgm_call() containing NULLs for the optional parameters, leading to interesting error messages. This enables the returning of the *real* message and actually improves the API without breaking compatibility. ndb_mgm_start_signallog ndb_mgm_stop_signallog ndb_mgm_log_signals ndb_mgm_set_trace ndb_mgm_insert_error ndb_mgm_set_int64_parameter [1] ndb_mgm_set_string_parameter [1] ndb_mgm_purge_stale_sessions [2] - return error code on error during ndb_mgm_call TODO: ndb_mgm_report_event [2] [1] marked for removal, unused. [2] return codes incorrect in CHECK_HANDLE/CONNECTED. undocumented. Server side: in Services (per session) add macro for injecting timeout error (just waiting 10 seconds before continuing... it does work!) We inject these errors in a number of critical places - including the tricky api functions that don't just use ndb_mgm_call but do their own thing (get_config, get_status and friends) ATRT: Expand testMgm to add timout tests for API. Fully automated. *THEORETICALLY* timing dependent - an ultra-slow network will cause problems and ""fake"" failures... I welcome other solutions. Tests aren't exhaustive, but cover the generics and the tricky bits. Also test some calling semantics (incl disconnected on error). It is encouraged to add *more* mgmapi tests, not less :) InputStream: Fix where timedout error is set Index: ndb-work/storage/ndb/src/mgmapi/mgmapi.cpp =================================================================== "	e8121e50e80b6c3b66661fef0a3bd2e0d738f86d
----------------------------
Modifying mysql-test-run.pl to allow steeing of --secure-file-priv to 'mysql-test' when running suites other tha the main one 	c21a5bc8b19765c18aefaf3e98c308ba7ef2a8ec
----------------------------
Bug#27070 server logs are created unrequested and in wrong directory - Avoid defaault log file names looking like <hostname>.pid.slow.log by using the FN_REPLACE_EXT flag to 'fn_format' - Remove the default log files generated by log_state.test before test completes 	80fb08310ee338ca6f850243b6f981b889e5f95b
----------------------------
Bug #26079 max_binlog_size + innodb = not make new binlog and hang server There was hanging at binlog_commit by a thread executing autocommit query. The hang appeared to be due to an overly condtion for early return from binlog_commit introduced by bug#20265 fix. Fixed with reverting the logic back to 5.0 version. 	7c22049dfaa6eb385e54bce3843551b9759a9c32
----------------------------
dbug/dbug.c: unused variable removed include/config-win.h: SIZEOF_INT include/my_global.h: win64 fix support-files/Makefile.am: automake magic 	e9fb4a686ff2d464e33902624d8425d379ef5016
----------------------------
BUG#16420: Events: timestamps become UTC BUG#26429: SHOW CREATE EVENT is incorrect for an event that STARTS NOW() BUG#26431: Impossible to re-create an event from backup if its STARTS clause is in the past WL#3698: Events: execution in local time zone The problem was that local times specified by the user in AT, STARTS and ENDS of CREATE EVENT/ALTER EVENT statement were converted to UTC, and the original time zone was forgotten.  This way, event scheduler couldn't honor Daylight Saving Time shifts, and times shown to the user were also in UTC.  Additionally, CREATE EVENT didn't allow times in the past, thus preventing straightforward event restoration from old backups. This patch reworks event scheduler time computations, performing them in the time zone associated with the event.  Also it allows times to be in the past. The patch adds time_zone column to mysql.event table. NOTE: The patch is almost final, but the bug#9953 should be pushed first. 	6d8f6b5bfd6351142164b1f85b613ea133d478d3
----------------------------
"Fix for bug #23775 ""Replicated event larger that max_allowed_packet infinitely re-transmits"". Problem: to handle a situation when the size of event on the master is greater than max_allowed_packet on slave, we checked for the wrong constant (ER_NET_PACKET_TOO_LARGE instead of CR_NET_PACKET_TOO_LARGE). Solution: test for the client ""packet too large"" error code instead of the server one in slave I/O thread. "	55be09c0eea30dc506b579fe80456ed396d601a0
----------------------------
"Bug#26807 ""set global event_scheduler=1"" and --skip-grant-tables crashes server - Crash occured because Event engine is only initialized if ACLs are used but not properly marked as disabled. - The patch is to mark the Event engine as DISABLED if no ACLs are used to avoid access of uninitialized variables. "	218179269fab7227de9f1a603a4786f1120261e1
----------------------------
WL#3629 - Replication of Invocation and Invoked Features This changeset adds replication of events and user-defined functions. There are several bug reports involved in this change: BUG#16421, BUG#17857, BUG#20384: This patch modifies the mysql.events table to permit the addition of another enum value for the status column. The column now has values of ('DISABLED','SLAVESIDE_DISABLED','ENABLED'). A status of SLAVESIDE_DISABLED is set on the slave during replication of events. This enables users to determine which events werereplicated from the master and to later enable them if they promote the slave to a master. The CREATE, ALTER, and DROP statements are binlogged. A new test was added for replication of events (rpl_events). BUG#17671: This patch modifies the code to permit logging of user-defined functions. Note: this is the CREATE FUNCTION ... SONAME variety. A more friendly error message to be displayed should a replicated user-defined function not be found in the loadable library or if the library is missing from the slave.The CREATE andDROP statements are binlogged. A new test was added for replication of user-defined functions (rpl_udf). The patch also adds a new column to the mysql.event table named 'originator' that is used to store the server_id of the server that the event originated on. This enables users to promote a slave to a master and later return the promoted slave to a slave and disable the replicated events. 	3e44599c11e90c2b6470e64dbe6d78bc6c5f9f10
----------------------------
Bug#26285 selecting information_schema crahes server The crash happens when 'skip-grant-tables' is enabled. We skip the filling of I_S privilege tables if acl_cache is not initialized. 	ec4f730ba77b8459d7af12e52b007f8d7b23af40
----------------------------
Bug#27033: 0 as LAST_INSERT_ID() after INSERT .. ON DUPLICATE if rows were touched but not actually changed. The LAST_INSERT_ID() is reset to 0 if no rows were inserted or changed. This is the case when an INSERT ... ON DUPLICATE KEY UPDATE updates a row with the same values as the row contains. Now the LAST_INSERT_ID() values is reset to 0 only if there were no rows successfully inserted or touched. The new 'touched' field is added to the COPY_INFO structure. It holds the number of rows that were touched no matter whether they were actually changed or not. 	92c8558224f09a91c38197ff2158e011d014be7d
----------------------------
configure.in: Added test for sched_yield() possibly in -lposix4 on Solaris 	be226152ab0d1eb2e8aca382ff8f2da1950c035f
----------------------------
Fix the bug introduced with the push of the fix for bug#18326: Do not lock table for writing during prepare of statement. When single call open_normal_and_derived_tables() was used, we never set table_count to the right value.  This patch reverts the part of the old code that does open_tables() (and sets table_count), then checks if table_list->multitable_view is set (and returns if so, using table_count value), and only then it does mysql_handle_derived(). 	53d4592fa8ccb60f5c5dcf1a4003a757cfbd81c2
----------------------------
configure.in: Restored accidently removed line to check for zlib 	512202a88f683ef9b416b7f8d076eaef4e2aaee6
----------------------------
Makefile.am, configure.in, mysys.dsp: Removed unused files .del-my_winsem.c: Delete: mysys/my_winsem.c .del-my_semaphore.c: Delete: mysys/my_semaphore.c .del-my_semaphore.h: Delete: include/my_semaphore.h 	4e4f18417024c5d2349417048defa35ebf5dc971
----------------------------
"BUG#9953: CONVERT_TZ requires mysql.time_zone_name to be locked The problem was that some facilities (like CONVERT_TZ() function or server HELP statement) may require implicit access to some tables in 'mysql' database.  This access was done by ordinary means of adding such tables to the list of tables the query is going to open. However, if we issued LOCK TABLES before that, we would get ""table was not locked"" error trying to open such implicit tables. The solution is to treat certain tables as MySQL system tables, like we already do for mysql.proc.  Such tables may be opened for reading at any moment regardless of any locks in effect.  The cost of this is that system table may be locked for writing only together with other system tables, it is disallowed to lock system tables for writing and have any other lock on any other table. After this patch the following tables are treated as MySQL system tables: mysql.help_category mysql.help_keyword mysql.help_relation mysql.help_topic mysql.proc (it already was) mysql.time_zone mysql.time_zone_leap_second mysql.time_zone_name mysql.time_zone_transition mysql.time_zone_transition_type These tables are now opened with open_system_tables_for_read() and closed with close_system_tables(), or one table may be opened with open_system_table_for_update() and closed with close_thread_tables() (the latter is used for mysql.proc table, which is updated as part of normal MySQL server operation).  These functions may be used when some tables were opened and locked already. NOTE: online update of time zone tables is not possible during replication, because there's no time zone cache flush neither on LOCK TABLES, nor on FLUSH TABLES, so the master may serve stale time zone data from cache, while on slave updated data will be loaded from the time zone tables. "	c19affef54e613ff47daf36986a937fd5192e4a1
----------------------------
The most recent push into mysql-5.1 from mysql-5.2 was a mistake. This just reverses those changes.  I'm really sorry about that. configure.in, version.c: Reverse last push (from mysql-5.2 into mysql-5.1) 	8539d9a7bd63f22c2e2358d546af608015352e29
----------------------------
"ndb - Add new config parameter to allow node to bind INADDR_ANY instead of name in config.ini ""TcpBind_INADDR_ANY"" type bool "	daca04b0b66495492ee0de358b2c421f7d9aced8
----------------------------
"A fix for Bug#26750 ""valgrind leak in sp_head"" (and post-review fixes). The legend: on a replication slave, in case a trigger creation was filtered out because of application of replicate-do-table/ replicate-ignore-table rule, the parsed definition of a trigger was not cleaned up properly. LEX::sphead member was left around and leaked memory. Until the actual implementation of support of replicate-ignore-table rules for triggers by the patch for Bug 24478 it was never the case that ""case SQLCOM_CREATE_TRIGGER"" was not executed once a trigger was parsed, so the deletion of lex->sphead there worked and the memory did not leak. The fix: The real cause of the bug is that there is no 1 or 2 places where we can clean up the main LEX after parse. And the reason we can not have just one or two places where we clean up the LEX is asymmetric behaviour of MYSQLparse in case of success or error. One of the root causes of this behaviour is the code in Item::Item() constructor. There, a newly created item adds itself to THD::free_list - a single-linked list of Items used in a statement. Yuck. This code is unaware that we may have more than one statement active at a time, and always assumes that the free_list of the current statement is located in THD::free_list. One day we need to be able to explicitly allocate an item in a given Query_arena. Thus, when parsing a definition of a stored procedure, like CREATE PROCEDURE p1() BEGIN SELECT a FROM t1; SELECT b FROM t1; END; we actually need to reset THD::mem_root, THD::free_list and THD::lex to parse the nested procedure statement (SELECT *). The actual reset and restore is implemented in semantic actions attached to sp_proc_stmt grammar rule. The problem is that in case of a parsing error inside a nested statement Bison generated parser would abort immediately, without executing the restore part of the semantic action. This would leave THD in an in-the-middle-of-parsing state. This is why we couldn't have had a single place where we clean up the LEX after MYSQLparse - in case of an error we needed to do a clean up immediately, in case of success a clean up could have been delayed. This left the door open for a memory leak. One of the following possibilities were considered when working on a fix: - patch the replication logic to do the clean up. Rejected as breaks module borders, replication code should not need to know the gory details of clean up procedure after CREATE TRIGGER. - wrap MYSQLparse with a function that would do a clean up. Rejected as ideally we should fix the problem when it happens, not adjust for it outside of the problematic code. - make sure MYSQLparse cleans up after itself by invoking the clean up functionality in the appropriate places before return. Implemented in this patch. - use %destructor rule for sp_proc_stmt to restore THD - cleaner than the prevoius approach, but rejected because needs a careful analysis of the side effects, and this patch is for 5.0, and long term we need to use the next alternative anyway - make sure that sp_proc_stmt doesn't juggle with THD - this is a large work that will affect many modules. Cleanup: move main_lex and main_mem_root from Statement to its only two descendants Prepared_statement and THD. This ensures that when a Statement instance was created for purposes of statement backup, we do not involve LEX constructor/destructor, which is fairly expensive. In order to track that the transformation produces equivalent functionality please check the respective constructors and destructors of Statement, Prepared_statement and THD - these members were used only there. This cleanup is unrelated to the patch. "	86f02cd378aac2cdedf1650c2bcdf9ebe0bba239
----------------------------
Bug #25075: sql_class.cc doesn't compile with --without-query-cache Wrap query_cache_init_query() call with #ifdef HAVE_QUERY_CACHE in THD::THD() 	041bea85bf26661957aaf3693a3aa52734f0b60a
----------------------------
Bug #26598: Create variable to allow turning off of statistic gathering on metadata commands Add innodb_stats_on_metadata option, which enables gathering index statistics when processing metadata commands such as SHOW TABLE STATUS.  Default behavior of the server does not change (this option is enabled by default). 	e78b43573ce13c1648c13755bb3fd69af22bb305
----------------------------
"Bug#18946 Test case rpl_ndb_ddl disabled 1. Fixes within the testscripts   (affects rpl_ddl.test and rpl_ndb_ddl.test) - slave connection is only an observer (-> AUTOCOMMIT = 0) This removes the problem with the hanging test around DROP DATABASE (NDB). The hanging test around DROP DATABASE is a difference to InnoDB/MyISAm behaviour but fare away of a clear bug. IMHO this behaviour does not violate the SQL standard and should be therefore simply accepted. - removal of wrong comments - CREATE/DROP TEMPORARY TABLE must not cause implicit commit of the current transaction. NDB behaves here correct and InnoDB/Falcon wrong. - Add a missing connection slave - Reenable the test rpl_ndb_ddl. 2. Disable rpl_ddl.test because of Bug#26418. 3. Reenable rpl_ndb_ddl.test 4. Improvements (affect rpl_ddl.test and rpl_ndb_ddl.test) - Better + extended comments which should prevent that somebody accidently destroys the logics of the test - Replace SELECT's printing comments by ""--echo""  (decreases the number of auxiliary SQL commands) - Remove the need for include/rpl_stmt_seq2.inc   (was mostly redundant to rpl_stmt_seq.inc) - Remove extra/rpl_tests/rpl_ndb_ddl.test         (corrected extra/rpl_tests/rpl_ddl.test is sufficient) - Shift assignment of values to $show_binlog, $manipulate (variables useful for debugging) into the toplevel scripts - The temporary tables get now their storage engine from the variable $temp_engine_type. (more deterministic testing conditions) - Add additional protocol line if the connection is switched (was partially missing) - Add two DML commands for comparison purposes "	2511beddcce5615f393151795b14d584569002ed
----------------------------
"Add ""have_ssl"" as synonym for ""have_openssl"" "	9a2eea4019cdc318efd3391ca948986720cadfa8
----------------------------
bug #26538 (flush2.test fails in embedded run) in the embedded result we don't have 'log_slave_updates OFF' line as replication is disabled in the embedded server. As we don't need to check for log_slave_updates variable in this test, we can not to SHOW it at all 	151aa17bfe533c05e16d89f2e5202130bcd12720
----------------------------
mysqld.cc: fix profiling_history_size type 	82b024e6af39e1b7250b538cdbde18550058d2d3
----------------------------
Additional test changes for Bug N 15126 character_set_database is not replicated (LOAD DATA INFILE need it) Positions of some binlog events were changed because of additional logging of @@collation_database. 	233d4fb214c939dadd0efbfebfd3f75f86a18678
----------------------------
"Bug#15126 character_set_database is not replicated (LOAD DATA INFILE need it) This patch fixes problem that LOAD DATA could use different character sets when loading files on master and on slave sides: - Adding replication of thd->variables.collation_database - Adding optional character set clause into LOAD DATA Note, the second way, with explicit CHARACTER SET clause should be the recommended way to load data using an alternative character set. The old way, using ""SET @@character_set_database=xxx"" should be gradually depricated. "	dd0c43d5fa36337c69750ff4deb7b34d560855de
----------------------------
Add more comments to open_table and open_tables. No real changes. 	7d98fb7e33de4f1bf62854ee115a5301c2506860
----------------------------
BUG#25091 (A DELETE statement to mysql database is not logged in ROW format): With this patch, statements that change metadata (in the mysql database) is logged as statements, while normal changes (e.g., using INSERT, DELETE, and/or UPDATE) is logged according to the format in effect. The log tables (i.e., general_log and slow_log) are not replicated at all. With this patch, the following statements are replicated as statements: GRANT, REVOKE (ALL), CREATE USER, DROP USER, and RENAME USER. 	f9101992702f0c56b1c1319685f814a971a77a8d
----------------------------
Fix for BUG#22511: IM does not remove angel-pid-file on clean shutdown 	03fa3e5aaf89e67e7f7801189253f962a10ca20e
----------------------------
"the fix for BUG#24432 ""INSERT... ON DUPLICATE KEY UPDATE skips auto_increment values"" didn't make it into 5.0.36 and 5.1.16, so we need to adjust the bug-detection-based-on-version-number code. Because the rpl tree has a too old version, rpl_insert_id cannot pass, so I disable it (like is already the case in 5.1-rpl for the same reason), and the repl team will re-enable it when they merge 5.0 and 5.1 into their trees (thus getting the right version number). "	44c6c4cc0540365ea865123a3965235bba00e530
----------------------------
Fixed compiler warnings Fixed compile-pentium64 scripts Fixed wrong estimate of update_with_key_prefix in sql-bench Merge bk-internal.mysql.com:/home/bk/mysql-5.1 into mysql.com:/home/my/mysql-5.1 Fixed unsafe define of uint4korr() Fixed that --extern works with mysql-test-run.pl Small trivial cleanups This also fixes a bug in counting number of rows that are updated when we have many simultanous queries Move all connection handling and command exectuion main loop from sql_parse.cc to sql_connection.cc Split handle_one_connection() into reusable sub functions. Split create_new_thread() into reusable sub functions. Added thread_scheduler; Preliminary interface code for future thread_handling code. Use 'my_thread_id' for internal thread id's Make thr_alarm_kill() to depend on thread_id instead of thread Make thr_abort_locks_for_thread() depend on thread_id instead of thread In store_globals(), set my_thread_var->id to be thd->thread_id. Use my_thread_var->id as basis for my_thread_name() The above changes makes the connection we have between THD and threads more soft. Added a lot of DBUG_PRINT() and DBUG_ASSERT() functions Fixed compiler warnings Fixed core dumps when running with --debug Removed setting of signal masks (was never used) Made event code call pthread_exit() (portability fix) Fixed that event code doesn't call DBUG_xxx functions before my_thread_init() is called. Made handling of thread_id and thd->variables.pseudo_thread_id uniform. Removed one common 'not freed memory' warning from mysqltest Fixed a couple of usage of not initialized warnings (unlikely cases) Suppress compiler warnings from bdb and (for the moment) warnings from ndb 	f0ae3ce9b97f45b717201764c6af6e4bd4176e5c
----------------------------
"Prevent bugs by making DBUG_* expressions syntactically equivalent to a single statement. --- Bug#24795: SHOW PROFILE Profiling is only partially functional on some architectures.  Where there is no getrusage() system call, presently Null values are returned where it would be required.  Notably, Windows needs some love applied to make it as useful. Syntax this adds: SHOW PROFILES SHOW PROFILE [types] [FOR QUERY n] [OFFSET n] [LIMIT n] where ""n"" is an integer and ""types"" is zero or many (comma-separated) of ""CPU"" ""MEMORY"" (not presently supported) ""BLOCK IO"" ""CONTEXT SWITCHES"" ""PAGE FAULTS"" ""IPC"" ""SWAPS"" ""SOURCE"" ""ALL"" It also adds a session variable (boolean) ""profiling"", set to ""no"" by default, and (integer) profiling_history_size, set to 15 by default. This patch abstracts setting THDs' ""proc_info"" behind a macro that can be used as a hook into the profiling code when profiling support is compiled in.  All future code in this line should use that mechanism for setting thd->proc_info. --- Tests are now set to omit the statistics. --- Adds an Information_schema table, ""profiling"" for access to ""show profile"" data. --- Merge zippy.cornsilk.net:/home/cmiller/work/mysql/mysql-5.0-community-3--bug24795 into  zippy.cornsilk.net:/home/cmiller/work/mysql/mysql-5.0-community --- Fix merge problems. --- Fixed one bug in the query_source being NULL. Updated test results. --- Include more thorough profiling tests. Improve support for prepared statements. Use session-specific query IDs, starting at zero. --- Selecting from I_S.profiling is no longer quashed in profiling, as requested by Giuseppe. Limit the size of captured query text. No longer log queries that are zero length. "	6e096ee8d9f5aa2cbe3c2bba4aecde6fceaa888f
----------------------------
Test for setting general_log_file to a directory fails since /tmp is used as the directory. It does not always exist so let's use one that always exists MYSQLTEST_VARDIR 	9da1b427a72d63b46626ada8c273665255d1f2cf
----------------------------
Fix for BUG#24415: Instance manager test im_daemon_life_cycle fails randomly. The cause of im_daemon_life_cycle.imtest random failures was the following behaviour of some implementations of LINUX threads: let's suppose that a process has several threads (in LINUX threads, there is a separate process for each thread). When the main process gets killed, the parent receives SIGCHLD before all threads (child processes) die. In other words, the parent receives SIGCHLD, when its child is not completely dead. In terms of IM, that means that IM-angel receives SIGCHLD when IM-main is not dead and still holds some resources. After receiving SIGCHLD, IM-angel restarts IM-main, but IM-main failed to initialize, because previous instance (copy) of IM-main still holds server socket (TCP-port). Another problem here was that IM-angel restarted IM-main only if it was killed by signal. If it exited with error, IM-angel thought it's intended / graceful shutdown and exited itself. So, when the second instance of IM-main failed to initialize, IM-angel thought it's intended shutdown and quit. The fix is 1. to change IM-angel so that it restarts IM-main if it exited with error code; 2. to change IM-main so that it returns proper exit code in case of failure. 	76f813a52e6d929b94d3f1c799a121ddedcc8252
----------------------------
Bug#20166 mysql-test-run.pl does not test system privilege tables creation - Part 2, add @@hostname system variable 	6caa0a232ed6f741e6c8c9e8d6a89e272dec6505
----------------------------
Bug#23240 --init-file statements with NOW() reports '1970-01-01 11:00:00' as the date time - Merged from 5.0 - Removed redundant call to set_time(); now included in init_for_queries 	84b96eb5e883bbce6776869cbfa19a4e7cd614a8
----------------------------
Bug#23240 --init_file statements with NOW() reports '1970-01-01 11:00:00'as the date time - Starting time of a query sent by bootstrapping wasn't initialized and starting time defaulted to 0. This later used value by NOW- item and was translated to 1970-01-01 11:00:00. - Marketing the time with thd->set_time() before the call to mysql_parse resolves this issue. - set_time was refactored to be part of the thd->init_for_queries- process. 	19dfc42eb6938847e74b4874351171baafbd22c3
----------------------------
Bug#25592 wrong reporting for mysql-test-run.pl --mysqld=--binlog-format=... 	10da8b7e96c7520a634621f7762428444e3a0c10
----------------------------
"Bug#18743: Several test cases fails if ""classic"" configuration in 5.0 The problem happened because those tests were using ""cp932"" and ""ucs2"" without checking whether these character sets are available. This fix moves test parts to make character set specific parts be tested only if they are: - some parts were moved to ""ctype_ucs.test"" and ""ctype_cp932.test"" - some parts were moved to the newly added tests ""innodb-ucs2.test"", ""mysqlbinglog-cp932.test"" and ""sp-ucs2.test"" "	315819fed02f44608a7ab4670cfc7743db8c30ce
----------------------------
Bug#23240 --init-file statements with NOW() reports '1970-01-01 11:00:00'as the date time - Starting time of a query sent by file bootstrapping wasn't initialized and starting time defaulted to 0. This later used value by the Now- item and is translated to 1970-01-01 11:00:00. - marking the time with thd->set_time() before the call to mysql_parse resolves this issue. 	dd41fd573221b26170e9aca914366e553a75e559
----------------------------
"include/config-win.h  : Companion change to this one ChangeSet@1.2206, 2007-01-22 02:32:07+02:00, jani@a88-113-38-195.elisa-laajakaista.fi +8 -0 include/my_pthread.h@1.67, 2007-01-22 02:32:06+02:00, jani@a88-113-38-195.elisa-laajakaista.fi +31 -10 which renamed ""sigset()"" -> ""my_sigset()"" but forgot to do it for Windows ... "	0cdbda1273dcee7be64efa93e89c98a6e9bd3705
----------------------------
"Manual merge from 5.0-rpl, of fixes for: 1) BUG#25507 ""multi-row insert delayed + auto increment causes duplicate key entries on slave"" (two concurrrent connections doing multi-row INSERT DELAYED to insert into an auto_increment column, caused replication slave to stop with ""duplicate key error"" (and binlog was wrong), and BUG#26116 ""If multi-row INSERT DELAYED has errors, statement-based binlogging breaks"" (the binlog was not accounting for all rows inserted, or slave could stop). The fix is that: in statement-based binlogging, a multi-row INSERT DELAYED is silently converted to a non-delayed INSERT. This is supposed to not affect many 5.1 users as in 5.1, the default binlog format is ""mixed"", which does not have the bug (the bug is only with binlog_format=STATEMENT). We should document how the system delayed_insert thread decides of its binlog format (which is not modified by this patch): this decision is taken when the thread is created and holds until it is terminated (is not affected by any later change via SET GLOBAL BINLOG_FORMAT). It is also not affected by the binlog format of the connection which issues INSERT DELAYED (this binlog format does not affect how the row will be binlogged). If one wants to change the binlog format of its server with SET GLOBAL BINLOG_FORMAT, it should do FLUSH TABLES to be sure all delayed_insert threads terminate and thus new threads are created, taking into account the new format. 2) BUG#24432 ""INSERT... ON DUPLICATE KEY UPDATE skips auto_increment values"". When in an INSERT ON DUPLICATE KEY UPDATE, using an autoincrement column, we inserted some autogenerated values and also updated some rows, some autogenerated values were not used (for example, even if 10 was the largest autoinc value in the table at the start of the statement, 12 could be the first autogenerated value inserted by the statement, instead of 11). One autogenerated value was lost per updated row. Led to exhausting the range of the autoincrement column faster. Bug introduced by fix of BUG#20188; present since 5.0.24 and 5.1.12. This bug breaks replication from a pre-5.0.24/pre-5.1.12 master. But the present bugfix, as it makes INSERT ON DUP KEY UPDATE behave like pre-5.0.24/pre-5.1.12, breaks replication from a [5.0.24,5.0.34]/[5.1.12,5.1.15] master to a fixed (5.0.36/5.1.16) slave! To warn users against this when they upgrade their slave, as agreed with the support team, we add code for a fixed slave to detect that it is connected to a buggy master in a situation (INSERT ON DUP KEY UPDATE into autoinc column) likely to break replication, in which case it cannot replicate so stops and prints a message to the slave's error log and to SHOW SLAVE STATUS. For 5.0.36->[5.0.24,5.0.34] replication or 5.1.16->[5.1.12,5.1.15] replication we cannot warn as master does not know the slave's version (but we always recommended to users to have slave at least as new as master). As agreed with support, I have asked for an alert to be put into the MySQL Network Monitoring and Advisory Service. 3) note that I'll re-enable rpl_insert_id as soon as 5.1-rpl gets the changes from the main 5.1. "	39de08fddc0abfc86965d754671014c4482ab759
----------------------------
Backport from the Falcon tree. When opening/creating the transaction coordinator's log, if binlog is used, the tc log is the binlog so we use the binlog's name; otherwise we use the mmap-based log, named after the mandatory argument of the --log-tc option (meant for that). 	2f75c9cd69412de5d3736e775dd302ebdbc1e36d
----------------------------
"Bug#18628 mysql-test-run: security problem(part1) - Implement --secure-file-priv=<dir> option that limits ""load_file"", ""LOAD DATA"" and ""SELECT .. INTO OUTFILE"" to work with files in specified dir. - Use above option for mysqld in mysql-test-run.pl "	45fe5879f4e3130acbe112a200dd79db03707d16
----------------------------
ndb_config_4_node.ini, ndb_config_1_node.ini: new file 	92f9a37dc15fd33e4e016ef978d93a405e48fc98
----------------------------
"BUG#26358  	remove unused and non-working SET_VAR_REQ/CONF signals remove SET_VAR_REQ,REF,CONF - unused, #if 0 and confusing Remove the dead SET_VAR_REQ,REF,CONF signals. They: a) don't currently work b) will cause confusion with future mgmd updates for signal interface to configuration things (e.g. port numbers) "	7ed1f6ac01e87d46bcb33a3aa6d2d367be24841c
----------------------------
BUG#26353 remove GET_CONFIG_BACKWARDS_COMPAT from ndb_mgmd there is backwards compatibility for GET CONFIG style configuration requests in ndb_mgmd. None of the ndbd versions that use this couldn't possibly connect to a 5.0 or 5.1 cluster. remove the backwards compat remove it 	02c847eb0320acfb0111f3e0b7875c5163e25a92
----------------------------
WL#3704 mgmapi timeouts (and cleanups) indicate units in SocketOutputStream timeout rename timeout in SocketOutputStream to reflect units (ms) In 5.0 as well as is safe cleanup patch that will help with merging. 	2805c8352ac5c74c329ec07cc8c368329e7fad5c
----------------------------
branches/zip: Add statistic counters to the buddy allocator. buf_buddy_n_frames: Number of buffer frames allocated for the buddy system buf_buddy_used[]: Counts of allocated blocks, by buddy size. buf_buddy_relocated[]: Counts of blocks relocated, bu buddy size. buf_buddy_alloc_clean(): Note the added configuration parameter buf_buddy_min_n_frames: Preferred minimum buf_buddy_n_frames 	e67d5c761cd9af2a622c7b00fc9d517e2729c42a
----------------------------
Bug#23170: LAST_INSERT_ID isn't reset to 0 in INSERT .. SELECT when no rows were inserted. The select_insert::send_eof() function now resets LAST_INSERT_ID variable if no rows were inserted. 	380c220545e950a53810bf5a3d553d11281370df
----------------------------
"Bug #24000  	ndb_config.cpp has the wrong name ndb_condig.cpp in source distro "	18f63370aae5a90590a7dc47d1c7565e742d046d
----------------------------
modify configure.in 6.1.2 	6c0b47c14f48a936a64185f5c2190d574658342b
----------------------------
ndb - - fix bug when using node ids > 48 causing invalid memory access - modify configuration so that mysql-test-run will use 	116ed900ad24c54ec0af4baf6f74dcaf16e6f1cf
----------------------------
Merge changes from MySQL AB: ChangeSet 2007/01/24 14:49:36+04:00 holyfoot@mysql.com bug #22682 Test fails --without-geometry geometry dependent parts moved to proper .test files mysql-test/r/innodb.result 2007/01/24 14:49:34+04:00 holyfoot@mysql.com +0 -2 result fixed mysql-test/r/innodb_gis.result 2007/01/24 14:49:34+04:00 holyfoot@mysql.com +2 -0 result fixed mysql-test/t/innodb.test 2007/01/24 14:49:34+04:00 holyfoot@mysql.com +0 -6 HAVE_GEOMETRY dependent part moved to innodb_gis.test mysql-test/t/innodb_gis.test 2007/01/24 14:49:35+04:00 holyfoot@mysql.com +6 -0 HAVE_GEOMETRY dependent part moved here from innodb.test 	880cc4a9bae2c548d97ed07f96878054943b82b6
----------------------------
"Correct the non working check for --skip-log-bin in ""extra_opt"" "	b6bd53aa9d52ae6643f9ecd6171624c299770f2e
----------------------------
Bug#24805 mtr.pl can't handle test with --disable-log-bin - Don't give mysqld the --log-bin argument if .opt file contains --skip-log-bin - Enable flush2 test 	958308a5cf8738e7ff1357b6ca40cb6718eadeb3
----------------------------
BUG#23225: Slow query log: setting slow_query_log_file writes to wrong file After execution of SET GLOBAL SLOW_QUERY_LOG_FILE=...; slow query log data would go into the general log file. The problem was in the bogus cut-n-paste in the code. 	c9038f92922ab919cb84996f0cb6b869cd86e9aa
----------------------------
Additional fix for bug 25815 for test results when running with --binlog-format=row 	faf05bf314ce07697ca832a0a9b2ef092df74840
----------------------------
"Bug#25341:  ""init.d/mysql stop"" may timeout too quickly Thirty five seconds is entirely too short of a period to wait for a server to exit.  Instead, make a valliant effort to make sure it exits, and only give up after a very long period (arbitrarily chosen as 15 minutes). In addition, if we're being asked to restart the server, then don't try to start again if trying to stop the server failed. --- Return zero by default, when the script exits. --- Set return-/exit-value based on whether we successfully dealt with the PID-file. --- Don't wait that long if the program we're waiting on exits.  It should only exit if the server is not going to be started. "	24e3508b0e3d1ca10a5a8e9db102a506371ebb1c
----------------------------
Bug#17332 - changing key_buffer_size on a running server can crash under load Resizing a key cache while it was in heavy use could crash the server. There were several race conditions. I reworked some of the algorithms to fix the race conditions. No test case. Repeating the crashes requires heavy concurrent load on the key cache. A test script is attached to the bug report. More explanations to the changes are contained in a text file attached to the bug report. 	48a596edac4a85d3fd49f6e60c215287a485df40
----------------------------
Bug#23546, Cluster configured without any arbitration 	9755609b7b61644be723d256ccd69a3347b62946
----------------------------
"Import latest version of yaSSL - Replace SawTooth copyright header with MySQL's - Bug#19209 Test 'rpl_openssl' hangs on Windows - Spurious ""2013 Connection to server lost"" errors fixed yaSSL doesn't close socket anymore, that is left to the application "	751d00c47eff2f61e42a43ff55f09d840da1b8bc
----------------------------
branches/zip: Make zlib use InnoDB memory heaps when processing BLOBs. page_zip_set_alloc(): New function, to configure zlib to use a memory heap. btr_store_big_rec_extern_fields(): Reduce memLevel, so that a heap of 256 kilobytes will suffice.  Use page_zip_set_alloc(). btr_copy_externally_stored_field_prefix_low(): Use page_zip_set_alloc(). page_zip_compress(), page_zip_decompress(): Use page_zip_set_alloc(). 	4b07b77f5a0400daf529e051678274b46ee4df21
----------------------------
Bug#25203 Mysql crashes when mysql_kill() is executed in a connection using SSL - It's too early to free the SSL object in 'vio_ssl_close'. There might still be a thread using or reading from it on platforms where we need to close the active connection/socket in order to break the read. - Add new function 'vio_ssl_delete' and install it as the viodelete function for SSL connections. 	1a3cf64fc9018ce3a60523234621afe36a3bbf41
----------------------------
BUG#23527: set global query_cache_size can crash the server under high load MySQL server could crash if two or more threads would initiate query cache resize at the moments very close in time. The problem was introduced with the fix of bug 21051 in 5.0 and 5.1: simultaneous query cache resizes would wait for the first one in progress, but then each thread would try to finish the operation, accessing the data that was already reset (attempt to dereference 'bins' pointer, which may be NULL already). The solution is to check after synchronization if another thread has done the reset already (test 'query_cache_size > 0' again). No test case is provided because the bug is a subject to a race. 	68a3e96333fa5a37db6e8e4b6be9fc5fcc5308d4
----------------------------
"Added a test case for bug #20293 ""group by cuts off value from time_format"" "	6a3c00077e36e57acbc8fd40e1b5cd609792d834
----------------------------
Bug#24607 - MyISAM pointer size determined incorrectly Fixed test. On 32-bit machines which compile without -DBIG_TABLES, MAX_ROWS is truncated to a 32-bit value. Using a value below 4G is portable. 	928d672c46f48444268bad63ba1377c8e2a3bc0d
----------------------------
Bug#24392 (SHOW ENGINE MUTEX STATUS is a synonym for SHOW INNODB STATUS) Before this fix, the command SHOW ENGINE <name> STATUS would: - print a warning if the engine name is unknown, - proceed and implement the same behavior as SHOW ENGINE ALL STATUS, and list the status of all the storage engines registered. In particular, this behavior caused confusion about the command : SHOW ENGINE MUTEX STATUS, which as a side effect would print the status of the innodb engine when that engine is registered. Also, before this fix, every time an unknown engine name was substituted by the default engine (which happen unless SQL_MODE NO_ENGINE_SUBSTITUTION is set), a malformed warning was raised. For example, the command ALTER TABLE T1 ENGINE = X would print : Warnings: Error 1286 Unknown table engine 'X' With this fix: SHOW ENGINE <name> STATUS|LOGS|MUTEX always fails with an error when the engine <name> is unknown. For other commands, warnings about unknown engines are raised as: Warnings: Warning 1286 Unknown table engine 'X' In other words, engine substitution never affect the SHOW ENGINE command, since this would lead to very confusing results. 	2bd3c8fdcc11df7bfd88c780299c067e06cd062d
----------------------------
"Bug #25487  	deleting ndb_cluster_connection object takes long time aim is to: a) if set_connect_timeout called, timeout connect attempt (for retry on next call) after timeout period b) preserve existing blocking behaviour otherwise (for, e.g. mgmapi) Related to customer issue with long time deleting ndb_cluster_connection object. believe we're hanging on the connect(2) call until timeout (when we then realise we should exit the thread). "	4984af30ecbe62ab5d4bbb60a1820bad689a5372
----------------------------
"Fix for configure to detect library correctly. Fix to check library in use during runtime. Fix for Bug#16995, ""idle connections not being killed due to timeout when NPTL is used"". "	ff58749b290dc8f5f8e78ce7b5a73d7efecc610a
----------------------------
Bug#22807 mysql_upgrade fails when called with a basedir-path containing spaces - Corrected compiler warnings and performance problems with new dynstr_append_os_quoted function. 	d3e6cb6b3b529d01779d8304db94fd9f0c983f2f
----------------------------
ndb - bug#25711 fix cpu peak in big clusters during unpack of config 	8aea461461efb510695b1f587800181d54b46aaf
----------------------------
Added configure section to deal with actually versioning symbols. 	3fdf318ef67fc873576d89ca53b595f4fbbe6b79
----------------------------
BUG#21490 - No warning issued for deprecated replication parameters This patch deprecates the replication startup options in the configuration file and on the command line. The options deprecated include: MASTER_HOST, MASTER_USER, MASTER_PASSWORD, MASTER_PORT, MASTER_CONNECT_RETRY, MASTER_SSL, MASTER_SSL_CA, MASTER_SSL_CAPATH, MASTER_SSL_CERT, MASTER_SSL_KEY, and MASTER_SSL_CIPHER The code is designed to print the warning message once. 	fc0adebe0eb34e94eacc7a677a1d55b349131953
----------------------------
BUG#21490 - No warning issued for deprecated replication parameters This patch deprecates the replication startup options in the configuration file and on the command line. The options deprecated include: MASTER_HOST, MASTER_USER, MASTER_PASSWORD, MASTER_PORT, MASTER_CONNECT_RETRY, MASTER_SSL, MASTER_SSL_CA, MASTER_SSL_CAPATH, MASTER_SSL_CERT, MASTER_SSL_KEY, and MASTER_SSL_CIPHER The code is designed to print the warning message once. 	6ace4889205c07d76a4dd0eb34281128a01a132f
----------------------------
Bug#22807 mysql_upgrade fails when called with a basedir-path containing spaces - Create space safe strings for system() calls in mysql_upgrade.exe 	ef5f757ac282528c0abc1a93df888e4c1350c467
----------------------------
"Bug#24822: Patch: uptime_since_flush_status Provide the number of seconds since flush as a new status variable named ""Uptime_since_flush_status"". --- Override the post-flush value, as a second could pass between the two statements. "	205d6a35b3bf13783f4505386aa50c41405dcc64
----------------------------
Fixed bug #25580: incorrect stored representations of views in cases when they contain the '!' operator. Added an implementation for the method Item_func_not::print. The method encloses any NOT expression into extra parentheses to avoid incorrect stored representations of views that use the '!' operators. Without this change when a view was created that contained the expression !0*5  its stored representation contained not this expression but rather the expression not(0)*5 . The operator '!' is of a higher precedence than '*', while NOT is of a lower precedence than '*'. That's why the expression !0*5 is interpreted as not(0)*5, while the expression not(0)*5 is interpreted as not((0)*5) unless sql_mode is set to HIGH_NOT_PRECEDENCE. Now we translate !0*5 into (not(0))*5. 	c1927e9a70f38a92a3164f71f4f7ff4449befcea
----------------------------
"configure.in  :  Fix a dependency problem for ""extra/"" which shows up only in RPM builds. "	25c53269ab1802041413758b6488ebd3967f7dd4
----------------------------
Bug #16567 binlog_format option does not show when doing ./mysqd --help --verbose Implementing this feature connected to wl#3368 mixed binlog_format default. Supplied by my.cnf or explicitly in command line option gets be displayed. When not supplied `(No default value)' is displayed, even though --log-bin might be supplied. The option is different object from @@global.binlog_format variable. The default `mixed' for the latter is dependant on presence of `--log-bin' option, otherwise the value of the var is set to NULL (undefined): var := opt | MIXED  when binlog-in-use var := NULL         otherwise (no binlog, no format) Comments on NDB and mixed format updated, also dependency the option on --log-bin aka binlog-in-use is worded. Making t/rpl_switch_stm_row_mixed.test to interprete DEFAULT for binlog_format as MIXED. Comments on what the test covers are added. todo/fixme: turning @@global.binlog_format to be read-only when it's set to NULL (no binlog). todo/fixme: options dependacy (acyclic) graph, particularly to solve a task of setting defaults values for the leaf nodes only when parents' nodes are set. 	4d815a489368e3df4d46749288bf95a86cc9d2e5
----------------------------
Apply patch from MySQL: ChangeSet@1.2353, 2006-12-19 16:57:51-07:00, tsmith@siva.hindu.god +13 -0 Added innodb_rollback_on_timeout option to restore the 4.1 InnoDB timeout behavior (Bug #24200) 	03b9c45ec35f570c9cd8215df71655edbf1da118
----------------------------
BUG#22645 - LC_TIME_NAMES: Statement not replicated This patch is an additional code change to the get_str_len_and_pointer method in log_events.cc. This change is necessary to correct a problem encountered on 64-bit SUSE where the auto_increment_* variables were being overwritten. The change corrects a cast mismatch which caused the problem. 	183c67598010f177b7fcf6043dd28ff8d709fdf4
----------------------------
BUG#22645 - LC_TIME_NAMES: Statement not replicated This patch is an additional code change to the get_str_len_and_pointer method in log_events.cc. This change is necessary to correct a problem encountered on 64-bit SUSE where the auto_increment_* variables were being overwritten. The change corrects a cast mismatch which caused the problem. 	20036a42b8c8724ae4635b36bc8fc87042e15b45
----------------------------
configure.in: Corrected default for --disable-grant-options 	ba7b6e86f269ed5a634af13f422b92be3294431c
----------------------------
configure.in: Removed line accidently inserted when correcting bug#18526 	1768b21a1482e7737ff2c752d12a2f8049ec8263
----------------------------
WL #3670: Compile-time option to remove GRANT-related startup options - configure --disable-grant-options defines DISABLE_GRANT_OPTIONS - configure.js/cmake also updated - if DISABLE_GRANT_OPTIONS is defined, mysqld no longer recognizes: --bootstrap --init-file --skip-grant-tables Scripts which rely on those three options are modified to check the environment for MYSQLD_BOOTSTRAP; it should be set to the full path of a mysqld which does handle those options. For example: $ export MYSQLD_BOOTSTRAP $ MYSQLD_BOOTSTRAP=/path/to/full/MySQL/bin/mysqld $ mysql_install_db $ make test 	bac65ee90a724278b76b27da12c0728b7427324c
----------------------------
configure.in: raise version to 5.0.33 	754a148a35c20e4a12d1b946bbbd4935e2e3e770
----------------------------
configure.in  :    Fix a wrong comment. 	cca28699c81e6e523cb026b8b653315f75383c37
----------------------------
BUG#24780 workaround for broken installations that depend on using /etc, but were configured differently 	eeb82a8ed5a0415737c12ecc4ec97708461d5081
----------------------------
"Bug#24270 ""mysql_install_db doesn't work properly on 5.1"" force sql_mode to known value within initialization scripts "	c678f8e186e5851c07a4b2b83d606fa75280c87c
----------------------------
mysqld.cc, configure.in: Don't use thread priority by default on Mac OS X (bug#18526) 	344599948d2867ddd13ba6045faaa08a6129386a
----------------------------
"configure.in: Build ""mysqld_error.h"" even if configured --withouth-server (bug#21265) "	fd833d70377d947d59169aa45ff7c2ce637ae6ec
----------------------------
configure.in: Don't build server when configured --without-server (bug#23973) 	473b0c7287b5980e61bf66fe99f900d0a3d1ff47
----------------------------
configure.in  :  Update of the NDB version number was missing, do it. 	51fcec6a2070835b5bda4166be2b9db3a598b0b4
----------------------------
BUG#22864 (Rollback following CREATE... SELECT discards 'CREATE TABLE' from log): When row-based logging is used, the CREATE-SELECT is written as two parts: as a CREATE TABLE statement and as the rows for the table. For both transactional and non-transactional tables, the CREATE TABLE statement was written to the transaction cache, as were the rows, and on statement end, the entire transaction cache was written to the binary log if the table was non-transactional. For transactional tables, the events were kept in the transaction cache until end of transaction (or statement that were not part of a transaction). For the case when AUTOCOMMIT=0 and we are creating a transactional table using a create select, we would then keep the CREATE TABLE statement and the rows for the CREATE-SELECT, while executing the following statements. On a rollback, the transaction cache would then be cleared, which would also remove the CREATE TABLE statement. Hence no table would be created on the slave, while there is an empty table on the master. This relates to BUG#22865 where the table being created exists on the master, but not on the slave during insertion of rows into the newly created table. This occurs since the CREATE TABLE statement were still in the transaction cache until the statement finished executing, and possibly longer if the table was transactional. This patch changes the behaviour of the CREATE-SELECT statement by adding an implicit commit at the end of the statement when creating non-temporary tables. Hence, non-temporary tables will be written to the binary log on completion, and in the even of AUTOCOMMIT=0, a new transaction will be started. Temporary tables do not commit an ongoing transaction: neither as a pre- not a post-commit. The events for both transactional and non-transactional tables are saved in the transaction cache, and written to the binary log at end of the statement. 	be9ffb12da78f157793b4d7445b98ca732aa42da
----------------------------
Added innodb_rollback_on_timeout option to restore the 4.1 InnoDB timeout behavior (Bug #24200) 	0d5dc51438463226da454808a4ef370d194ae65d
----------------------------
remove hard-coded socket paths from some tests 	6b27694ac8b3283904a8ece44ce826415f938f0c
----------------------------
Use a temporary directory for sockets if the socket path becomes too long. 	4a98f36e591a3f6f57974d96a3063ae4d8b3076b
----------------------------
Changed config of mysqlmanager to use my.cnf search path. 	d194a83b970823407f11c414f17ed9c075e51489
----------------------------
WL #3031 Yet another test result that needed to be regenerated due to new error messages. This test only runs via ./mysql-test-run.pl --ps-protocol --mysqld=--binlog-format=row rpl_extraCol_innodb 	2301aff23443a410ddf1b88d6ccfcab29143fee5
----------------------------
Pass --no-defaults to embedded server to avoid that it reads any defaults file 	ba6d2bbf64e68ec7a061cbb96bcd76df81be8d4b
----------------------------
WL#3618 Minor correction to configure script to remove the replication.m4 script. 	19725c0b37bac1abc98000aca0d16ace05b929e0
----------------------------
Bug#22645 LC_TIME_NAMES: Statement not replicated Implementing event based replication of LC_TIME_NAMES for 5.0 (as a replacement of previously made ONE_SHOT replication) 	b66f34bd19bb5a6c32e84bf86f9af56df0f0e99b
----------------------------
"Merging bug#22645 ""LC_TIME_NAMES: Statement not replicated"" from 4.1. "	7c1b675e721ce3775a342dc7e812c0a1a1c06fb2
----------------------------
Bug#22645 LC_TIME_NAMES: Statement not replicated Problem: replication of LC_TIME_NAMES didn't work. Thus, INSERTS or UPDATES using date_format() always worked with en_US on the slave side. Fix: adding ONE_SHOT implementation for LC_TIME_NAMES. 	224660d14acb702c57ff0f31a7722413cdd5a31b
----------------------------
Fix Bug #19044 IM aborts on exit On windows IM aborted on assert once one stoppped it. The reason is that we didn't close the sockets on windows and therefore, the listener thread wasn't able to finish. This happened because we used close() call for it. While on windows one should use closesocket(). On other platfroms we have appropriate defines for closesocket(), so this is the function which should be used. 	2bc1898bc6e0943bde5a2d4211a716b28ff364f4
----------------------------
"support-files/mysql.spec.sh  :  Call ""make install"" using ""benchdir_root=%{_datadir}""  (bug#24182). "	18010331391658f0c26afcdee2775b39e731aa94
----------------------------
"Bug#24158 SET PASSWORD in binary log fails under ANSI_QUOTES Problem: ``SET PASSWORD FOR foo@localhost'' was written into binary log using double quites: ``SET PASSWORD FOR ""foo""@""localhost""...''. If sql_mode was set to ANSI_QUOTES, parser on slave considered ""foo"" and ""localhost"" as identifiers instead of strigns constants, so it failed to parse, generated syntax error and slave then stopped. Fix: changing binary log entries to use single quotes: ``SET PASSWORD FOR 'foo'@'localhost'...'' not to depend on ANSI_QUOTES. "	dcde1be17d1467c582d75d13968e0b8ab4f44611
----------------------------
"Fixed compiler warnings (Mostly VC++): - Removed not used variables - Changed some ulong parameters/variables to ulonglong (possible serious bug) - Added casts to get rid of safe assignment from longlong to long (and similar) - Added casts to function parameters - Fixed signed/unsigned compares - Added some constructores to structures - Removed some not portable constructs Better fix for bug Bug #21428 ""skipped 9 bytes from file: socket (3)"" on ""mysqladmin shutdown"" (Added new parameter to net_clear() to define when we want the communication buffer to be emptied) "	3a35c30027ed27bf6d2f457168fab2e4ef9e198e
----------------------------
"Added back sql-bench directory, so that one can more easily run benchmarks on a server and add new benchmarks for new optimizations Fixed memory leak in _db_set() (Bug#24497 Valgrind warning: get_one_option) Don't call net_clear() on COM_QUIT. This avoids a warning from net_clear() after shutdown: ""skipped ## bytes from file"" BUG#21428: skipped 9 bytes from file: socket (3)"" on ""mysqladmin shutdown"" "	23263db66eb19b6779c6bd8708e1c3b08692eebb
----------------------------
Bug#20327: Marking of a wrong field leads to a wrong result on select with view, prepared statement and subquery. When a field of a view from an outer select is resolved the find_field_in_view function creates an Item_direct_view_ref object that references the corresponding view underlying field. After that the view_ref is marked as a dependent one. While resolving view underlying field it also get marked as a dependent one due to current_select still points to the subselect. Marking the view underlying field is wrong and lead to attaching conditions to a wrong table and thus to the wrong result of the whole statement. Now mark_select_range_as_dependent() function isn't called for fields from a view underlying table. 	e851a9eaea77eb896c14b5d57a7acb6221fea2f9
----------------------------
rpl_init_slave.result: Update test result due to fix for bug 23883. 	2a0e2d1d3860aea8f6b6b4287214b491c87c8cce
----------------------------
Rename function datadir_setup to datadir_list_setup to avoid mixup with the function where vardir's are created 	fc1f9bfedee3ff0c7d674798a5179e562b41cbb5
----------------------------
raise max_connections default to avoid conflicts with apache max_childs settings (Bug #23883) 	37d1d86d9fb3e0c53a2e1e047d7be7dd6c84ec35
----------------------------
Fix for BUG##24415: Instance manager test im_daemon_life_cycle fails randomly. The problem was that the test case used command line tool (mysql) without specifying connect_timeout argument. In some cases, this lead to hanging of the test case. The fix is to specify --connect_timeout=1 when starting mysql. Also, the patch contains polishing and various cleanups to simplify analyzing of the problems further. The patch affects only test suite, no server codebase has been touched. 	ea47e05f3cc5929eb1f56cfdc094cedfce318499
----------------------------
Polishing: - change some return types from int to bool; - add [ERROR] tag to log_error() output; - add [INFO] tag to log_info() output; - change log messages to be more consistent. 	3e042c6d7b91e3725ff21015f3265b9afe8d93af
----------------------------
Update after merge. Use mutex when reading prepared_stmt_count global status variable. Update test case for bug 16365 and bug 23159: add test for prepared_stmt_count being decreased when some connection that had prepared statements is closed. 	f6235bc58caaab9fb76bfd82b5fe9f1f0a1b2606
----------------------------
BUG#23159: prepared_stmt_count should be status variable Make Prepared_stmt_count a global status variable, accessible via SHOW STATUS LIKE 'Prepared_stmt_count';.  Documentation should be updated. 	0d588f8882b122b586378c735fb4058345d80286
----------------------------
Updates for gethostname and gethostbyname_r usage 	0b89340a0b8f5361f59eaf07fcf5b26a262d5b00
----------------------------
Fix printf warnings Improve dbug_print_open_tables so the trace files are readable. 	c268ce60e4d153821811e2f0817e5f0d8fb37217
----------------------------
"Fix for bug #22077 ""DROP TEMPORARY TABLE fails with wrong error if read_only is set"" Do not issue a 'read-only' error in case of DROP TEMPORARY TABLE on a non-existing temporary table. Instead produce the correct ""Unknown table"" error or warning (in cases when the IF EXISTS clause was specified). To a documentor: the part of the manual describing the 'read_only' system variable should be clarified to state the following: ""When the read_only variable is set to ON, all operations which create/update/drop tables are rejected with the exceptions for: 1. Any operation performed by the replication thread on a slave server 2. Any operation performed by a user that have the SUPER privilege 3. Any operation that creates/updates/drops only temporary tables"" "	346033a5dab56766dbe2a5bb060f4235844d6c16
----------------------------
bug#19402 SQL close to the size of the max_allowed_packet fails on the slave mending windows test. 	5235785b2e21c28869d25ddc8d8e3f728a1acd9c
----------------------------
bug#19402 SQL close to the size of the max_allowed_packet fails on the slave ver 5.0 and 5.1 refinement. adding to the MAX_SIZE_LOG_EVENT_STATUS estimation status vars and EXECUTE_LOAD_QUERY_EXTRA_HEADER_LEN 	650a2455681f01e7cf5320b2f8f6076e76d0445f
----------------------------
ndb - fix for BUG#23137, ha_ndbcluster.m4 bug. Because NDB_CXXFLAGS is just used in ndb engine, moved NDB_CXXFLAGS from ha_ndbcluster.m4 to ndb/config/common.mk.am. 	feaf6d1615906c98436c2b1c180aa35c39c83e28
----------------------------
BUG#19808, Online config. Wrong error message if DataMemory less than a data on cluster 	40888f48b9f50c5a72af4310a3c967cc67698dab
----------------------------
configure.in: Raise version number after cloning 5.1.13 	d615edba34ea5d3f0644c23487dee533805e331a
----------------------------
WL#3368 mixed binlog_format default An amendment for parsing argument in case NDB is compiled and active. NDB switches from mixed to row-based and back per each query. The previous patch was not aware of such behaviour and made exceptional assingment to row-based when no command line arg --binlog-format provided. Removing #if HAVE_NDB_BINLOG block alltogether: ndb supports mixed and if server was build without NDB using binlog nothing to care. Test for this piece of code is rather specific. While there is active bug23110 ndb_alter_table and some other should fail if no explict --binlog-format is given: mysql-test-run ndb_alter_table 	2b2529de79dfe4211d0b3d23cc9d8bb49d031687
----------------------------
bug#19402 SQL close to the size of the max_allowed_packet fails on the slave comments are fixed as was suggested in reviews. 	5a20c542013f2dd4be99bcc020d4dbe4523678ff
----------------------------
This ChangeSet must be null-merged to 5.1.  Applied innodb-5.0-ss982, -ss998, -ss1003 Fixes: - Bug #15815: Very poor performance with multiple queries running concurrently - Bug #22868: 'Thread thrashing' with > 50 concurrent conns under an upd-intensive workloadw - Bug #23769: Debug assertion failure with innodb_locks_unsafe_for_binlog - Bug #24089: Race condition in fil_flush_file_spaces() 	f1e0cf9d285269571e96ac4fc058e7494a69c7c7
----------------------------
bug#19402 SQL close to the size of the max_allowed_packet fails on slave fixing a flow of the test 	37c78abf248bc4c7d7e42385e3142cc25dda1754
----------------------------
"Bug#22646 LC_TIME_NAMES: Assignment to non-UTF8 target fails Problem: After introducing of LC_TIME_NAMES variable,  the function date_format() can return international non-ascii characters in month and weekday names. Thus, it cannot return a binary string anymore, because inserting a result of date_format() into a column with non-utf8 character set produces garbage. Fix: date_format() now returns a character string, using ""collation_connection"" to detect character set and collation for the returned value. This allows to insert results of date_format() properly into columns with various character sets. "	413d18658f86d0e94c2ad91fb058ee56bbbdb06f
----------------------------
"Bug#23451 GROUP_CONCAT truncates a multibyte utf8 character Problem: GROUP_CONCAT on a multi-byte column can truncate in the middle of a multibyte character when applying group_concat_max_len limit. It produces an invalid multi-byte character in the result string. The second, easier version - reusing old ""warning_for_row"" flag, instead of introducing of ""result_is_full"" - which was added in the previous commit. "	599b7316602a64094b543a93e6ea992b716d1aa3
----------------------------
"Fix typo, Add ""s"" to format specifier for --stress-init-file "	d94101f796442a63fff7905427b44a18bd7580b7
----------------------------
configure.in: Raise version number to 4.1.23 	27f3bb10654927e50f362eea0364aa77559f63ae
----------------------------
Merge: 3542d83 39d7c5a Merge rolltop.ignatz42.dyndns.org:/mnt/storeage/mtr_vs_config/my41-mtr_vs_config into  rolltop.ignatz42.dyndns.org:/mnt/storeage/mysql-4.1-maint 	c5bfb22fe3bd5a142093656503638e3ffe3ba90e
----------------------------
Merge: cbc3de7 9f329f2 Merge rolltop.ignatz42.dyndns.org:/mnt/storeage/mtr_vs_config/my50-mtr_vs_config into  rolltop.ignatz42.dyndns.org:/mnt/storeage/mysql-5.0-maint 	2704ba36755401f947600b6b3fd7f3ef3423c5bc
----------------------------
Merge: 7b973f3 cf65c15 Merge rolltop.ignatz42.dyndns.org:/mnt/storeage/mtr_vs_config/my51-mtr_vs_config into  rolltop.ignatz42.dyndns.org:/mnt/storeage/mysql-5.1-maint 	deb03b93ece12ee8ac0fe144455912730efcfc26
----------------------------
Merge: 1532622 9f329f2 Merge rolltop.ignatz42.dyndns.org:/mnt/storeage/mtr_vs_config/my50-mtr_vs_config into  rolltop.ignatz42.dyndns.org:/mnt/storeage/mtr_vs_config/my51-mtr_vs_config 	cf65c157eedaad4474db8aa1ffe0c42595a93c5b
----------------------------
Merge: ed95cac 39d7c5a Merge rolltop.ignatz42.dyndns.org:/mnt/storeage/mtr_vs_config/my41-mtr_vs_config into  rolltop.ignatz42.dyndns.org:/mnt/storeage/mtr_vs_config/my50-mtr_vs_config 	9f329f2cf2ab9b95e845f8dbbebc731b6bdf2512
----------------------------
Bug#23865 mysql-test-run.pl on Windows only supports debug and release configurations Visual Studio builds each configuration in a different sub-directory.  Only the sub- directories for release and debug are currently searched. 	39d7c5a6bcb543c70171829b7160959934b59c57
----------------------------
"Better fix for bug#22830 Events: crash with procedure which alters events with function Post-review CS This fix also changes the handling of KILL command combined with subquery. It changes the error message given back to ""not supported"", from parse error. The error for CREATE|ALTER EVENT has also been changed to generate ""not supported yet"" instead of parse error. In case of a SP call, the error is ""not supported yet"". This change cleans the parser from code which should not belong to there. Still LEX::expr_allows_subselect is existant because it simplifies the handling of SQLCOM_HA_READ which forbids subselects. "	c27a88ca2dc3c817a21b2e7b07b8ed81db8cb2f9
----------------------------
Bug#22877 replication character sets get out of sync using replicate-wild-ignore-table Problem: changes in character set variables before an action on an replication-ignored table makes slave to forget new variable values. Fix: initialize one_shot variables only when 4.1 -> 5.x replication is running. 	ac9e3db9a7a08340a57691c7dfd168db7f6dc3d7
----------------------------
Bug#22958 Com_create_user missing within 5.0 - Add Com_create_user to SHOW STATUS command 	1d5abe60ff880feca03ce29de063650b0149bcbd
----------------------------
BUG#21915: Changing limits of table_cache when setting max_connections If the user has specified --max-connections=N or --table-open-cache=M options to the server, a warning could be given that some values were recalculated, and table-open-cache could be assigned greater value. Note that both warning and increase of table-open-cache were totally harmless. This patch fixes recalculation code to ensure that table-open-cache will be never increased automatically and that a warning will be given only if some values had to be decreased due to operating system limits. No test case is provided because we neither can't predict nor control operating system limits for maximal number of open files. 	1bfe00e0da3496937bc2eaef4532e014a6ad9d30
----------------------------
BUG#22584: last_insert_id not updated after inserting a record through a updatable view. When there's a VIEW on a base table that have AUTO_INCREMENT column, and this VIEW doesn't provide an access such column, after INSERT to such VIEW LAST_INSERT_ID() did not return the value just generated. This behaviour is intended and correct, because if the VIEW doesn't list some columns then these columns are effectively hidden from the user, and so any side effects of inserting default values to them. However, there was a bug that such statement inserting into a view would reset LAST_INSERT_ID() instead of leaving it unchanged. This patch restores the original value of LAST_INSERT_ID() instead of resetting it to zero. 	0e0f7a0423a88363ea5263ffeadde1bbb7ba2820
----------------------------
Fix for bug #22158: Errors in init_connect terminate connections silently When executing the init_connect statement, thd->net.vio is set to 0, to forbid sending any results to the client. As a side effect we don't log possible errors, either. Now we write warnings to the error log if an init_connect query fails. 	7b90a4542582f8852ad45cdcd3181e237fee39ee
----------------------------
Update the binlog format parse routine to only be avaliable in 5.1 and allow for any binlog_format to be specified 	de932f2a5f192e050df10429c6874598a6821079
----------------------------
Pass --core-file option to mysqld when bootstrapping 	ac5b37ef00205c48179f7d703e558f71eeaa0c9e
----------------------------
configure.in: Raised version number to 5.0.28 	5f12986d7d36ff3207e8bfa6e5c3539324d4f8cd
----------------------------
"make_win_bin_dist: Copy udf examples and raid.h Create target ""include"" directory before copying files to it CMakeLists.txt: Only compile in bdb if configured configure.in: Raised version number to 5.0.27 "	08d47a3b81424e89e39b26cc70e3d881ba86432b
----------------------------
"make_win_bin_dist: Create target ""include"" directory before copying files to it Copy udf examples and raid.h CMakeLists.txt: Only compile in bdb if configured "	67ec8be645495eadc9c67a1249b615f11c12c3d7
----------------------------
Bug#20028 (Function with select return no data) This patch reverts a change introduced by Bug 6951, which incorrectly set thd->abort_on_warning for stored procedures. As per internal discussions about the SQL_MODE=TRADITIONAL, the correct behavior is to *not* abort on warnings even inside an INSERT/UPDATE trigger. Tests for Stored Procedures, Stored Functions, Triggers involving SQL_MODE have been included or revised, to reflect the intended behavior. (reposting approved patch, to work around source control issues, no review needed) 	ea0998cacafce4e5efca6de8ccfd135b10adc5b3
----------------------------
branches/zip: Remove some more buf_block_align() calls. btr_search_build_page_hash_index(), fsp_parse_init_file_page(), ibuf_parse_bitmap_init(): Replace page_t* with buf_block_t*. buf_read_ibuf_merge_pages(): Add const qualifiers.  Retrieve zip_size. ibuf_merge_or_delete_for_page(): Replace page_t* with buf_block_t*. Add parameter zip_size. 	a3860f71267c864a581d768d3997a2ebdd08215e
----------------------------
BUG#23175 - MYISAM crash/repair failed during repair Repair table could crash a server if there is not sufficient memory (myisam_sort_buffer_size) to operate. Affects not only repair, but also all statements that use create index by sort: repair by sort, parallel repair, bulk insert. Return an error if there is not sufficient memory to store at least one key per BUFFPEK. Also fixed memory leak if thr_find_all_keys returns an error. 	a2e0059f3c1cf647b1feaf80780a917476ae4bba
----------------------------
Bug#20028 (Function with select return no data) This patch reverts a change introduced by Bug 6951, which incorrectly set thd->abort_on_warning for stored procedures. As per internal discussions about the SQL_MODE=TRADITIONAL, the correct behavior is to *not* abort on warnings even inside an INSERT/UPDATE trigger. Tests for Stored Procedures, Stored Functions, Triggers involving SQL_MODE have been included or revised, to reflect the intended behavior. 	1f4edce15b2ba3846d6884c810b303c891d00e40
----------------------------
ha_innobase::store_lock(): When downgrading table locks, do not check thd->in_lock_tables but test if thd->lex->sql_command == SQLCOM_LOCK_TABLES instead.  Otherwise, stored functions will use table locks.  (Bug #18077) This patch is from Heikki. 	14fed4b06e595acbce970cc80972dc739a11967a
----------------------------
BUG#21253 NdbApi.h should not include my_config.h 	975e2f37b90db9c77e51c6daa15a8c4240e660cd
----------------------------
"make_binary_distribution.sh: Split copy of result files to avoid shell limit. Added copy of mysql-test/std_data/ndb_backup5{0,1}. configure.in: Look for dlopen() even if --with-mysqld-ldflags constains ""-static"", as this is not the same as the flag to ""ld"", it just informs ""libtool"" to link static with libraries created part of the build, even if there exists shared versions. "	8692bb53a33bf29415d1d01681bafef4ddb00e5e
----------------------------
"Makefile.am: Configure flags makes ""lex_hash.h"" differ, don't distribute pregenerated file, build it after configure (bug#18888). "	dcfefed95ad9c33b8b712e48071fa2c51c9ec82a
----------------------------
"Fix for Bug #17544 ""Cannot do atomic log rotate"", Bug #21785 ""Server crashes after rename of the log table"" and Bug #21966 ""Strange warnings on create like/repair of the log tables"" According to the patch, from now on, one should use RENAME to perform a log table rotation (this should also be reflected in the manual). Here is a sample: use mysql; CREATE TABLE IF NOT EXISTS general_log2 LIKE general_log; RENAME TABLE general_log TO general_log_backup, general_log2 TO general_log; The rules for Rename of the log tables are following: IF   1. Log tables are enabled AND  2. Rename operates on the log table and nothing is being renamed to the log table. DO   3. Throw an error message. ELSE 4. Perform rename. The very RENAME query will go the the old (backup) table. This is consistent with the behavoiur we have with binlog ROTATE LOGS statement. Other problems, which are solved by the patch are: 1) Now REPAIR of the log table is exclusive operation (as it should be), this also eliminates lock-related warnings. and 2) CREATE LIKE TABLE now usese usual read lock on the source table rather then name lock, which is too restrictive. This way we get rid of another log table-related warning, which occured because of the above fact (as a side-effect, name lock resulted in a warning). "	6846f8d9c4f5f3d3573ed6fe961125f0172c23ae
----------------------------
"Fix for bug #22728 ""Handler_rollback value is growing"". The bug is present only in 4.1, will be null-merged to 5.0 For InnoDB, check value of thd->transaction.all.innodb_active_trans instead of thd->transaction.stmt.innobase_tid to see if we really need to rollback. "	456fe01d7efacdad6a7baf8764cacb943c07b830
----------------------------
branches/zip: Stamp (space_id, page_no) on buffer pool pages early on. buf_flush_init_for_writing(): Remove parameters space, page_no. fsp_init_file_page_low(): Wriet space_id and page_no to the page. fil_create_new_single_table_tablespace(): Write space_id to the page. 	606bd38428679d37006237bb48c32727f697e1b4
----------------------------
Bug#17583: mysql drops connection when stdout is not writable When the client program had its stdout file descriptor closed by the calling shell, after some amount of work (enough to fill a socket buffer) the server would complain about a packet error and then disconnect the client. This is a serious security problem.  If stdout is closed before the mysql is exec()d, then the first socket() call allocates file number 1 to communicate with the server.  Subsequent write()s to that file number (as when printing results that come back from the database) go back to the server instead in the command channel.  So, one should be able to craft data which, upon being selected back from the server to the client, and injected into the command stream become valid MySQL protocol to do something nasty when sent /back/ to the server. The solution is to close explicitly the file descriptor that we *printf() to, so that the libc layer and the OS layer both agree that the file is closed. 	4812d81eabe2c2eeb2818e78e35365a84a44763e
----------------------------
Bug#8283 - OPTIMIZE TABLE causes data loss OPTIMIZE TABLE with myisam_repair_threads > 1 performs a non-quick parallel repair. This means that it does not only rebuild all indexes, but also the data file. Non-quick parallel repair works so that there is one thread per index. The first of the threads rebuilds also the new data file. The problem was that all threads shared the read io cache on the old data file. If there were holes (deleted records) in the table, the first thread skipped them, writing only contiguous, non-deleted records to the new data file. Then it built the new index so that its entries pointed to the correct record positions. But the other threads didn't know the new record positions, but put the positions from the old data file into the index. The new design is so that there is a shared io cache which is filled by the first thread (the data file writer) with the new contiguous records and read by the other threads. Now they know the new record positions. Another problem was that for the parallel repair of compressed tables a common bit_buff and rec_buff was used. I changed it so that thread specific buffers are used for parallel repair. A similar problem existed for checksum calculation. I made this multi-thread safe too. 	5f08a831863c28561b6b99f8f8246a3a24b2f2c2
----------------------------
BUG#21726: Incorrect result with multiple invocations of LAST_INSERT_ID. Note: bug#21726 does not directly apply to 4.1, as it doesn't have stored procedures.  However, 4.1 had some bugs that were fixed in 5.0 by the patch for bug#21726, and this patch is a backport of those fixes. Namely, in 4.1 it fixes: - LAST_INSERT_ID(expr) didn't return value of expr (4.1 specific). - LAST_INSERT_ID() could return the value generated by current statement if the call happens after the generation, like in CREATE TABLE t1 (i INT AUTO_INCREMENT PRIMARY KEY, j INT); INSERT INTO t1 VALUES (NULL, 0), (NULL, LAST_INSERT_ID()); - Redundant binary log LAST_INSERT_ID_EVENTs could be generated. 	ee0cebf9a7fa364df44aeb0579bdaa80d11f0125
----------------------------
"Rename ""snapshot_setup"" to ""datadir_setup"" as that is what is done by it. Move call f dunction into ""initialize_servers"" so it's called also in stress and bench mode "	f638be87cbb74f971d713bfd008eb57a9985f10c
----------------------------
Use same --slave-load-tmpdir in all versions(backport from 5.0) 	ab862ca2dc15eba9f4f08c44c814fefc306701be
----------------------------
5.0 is also using the somewhat larger config for cluster 	1fb0862f3ca2f3be46c94a06bd87e25db1ffaf0c
----------------------------
Fix for bug #22029: str_to_date returning NULL, while date_format works using identical format. The problem appears when we have a space followed by a non-format symbol. Fix: properly skip spaces. 	5df9ec9a59b25e72604cc562368331001d7cc2d3
----------------------------
Set the small configuration a little bit larger for 4.1 	dd2a184f69e3634ccbf2bc48e6f0b445d633f0d2
----------------------------
Fix Bug #22472 IM: --socket option should be removed from Windows version the option is useless on windows. It was removed from listing of mysqlmanager --help on Windows 	2073e4a1cb22bbb9c0246c9222c818377348a81f
----------------------------
Bug #19024- SHOW COUNT(*) WARNINGS not return Errors The server variable warning_count should include the number of warnings, errors and notes according to the manual 	d96be311cbd55b853641ec679fe203eb64490a25
----------------------------
Patch for BUG#15934: im_daemon_life_cycle fails sporadically. The problem was a race condition in a test case. The fix eliminates the race condition by explicit wait on UNIX socket to start accepting connections. The patch affects only test suite (i.e. does not touch server codebase). 	d238bd6755b8c64b4db9da827178de7daf87048f
----------------------------
Fix for the patch for bug#21726: Incorrect result with multiple invocations of LAST_INSERT_ID. Reding of LAST_INSERT_ID inside stored function wasn't noted by caller, and no LAST_INSERT_ID_EVENT was issued for binary log. The solution is to add THD::last_insert_id_used_bin_log, which is much like THD::last_insert_id_used, but is reset only for upper-level statements.  This new variable is used to issue LAST_INSERT_ID_EVENT. 	8798b462b50e6b71c459cc960b24d1d788012f7d
----------------------------
BUG#21726: Incorrect result with multiple invocations of LAST_INSERT_ID Non-upper-level INSERTs (the ones in the body of stored procedure, stored function, or trigger) into a table that have AUTO_INCREMENT column didn't affected the result of LAST_INSERT_ID() on this level. The problem was introduced with the fix of bug 6880, which in turn was introduced with the fix of bug 3117, where current insert_id value was remembered on the first call to LAST_INSERT_ID() (bug 3117) and was returned from that function until it was reset before the next _upper-level_ statement (bug 6880). The fix for bug#21726 brings back the behaviour of version 4.0, and implements the following: remember insert_id value at the beginning of the statement or expression (which at that point equals to the first insert_id value generated by the previous statement), and return that remembered value from LAST_INSERT_ID() or @@LAST_INSERT_ID. Thus, the value returned by LAST_INSERT_ID() is not affected by values generated by current statement, nor by LAST_INSERT_ID(expr) calls in this statement. Version 5.1 does not have this bug (it was fixed by WL 3146). 	5ea8adfae7bbc54eb99aa3f7d4d4bd690d8f69a8
----------------------------
branches/zip: Fix all bugs detected by mysql-test-run.  The exactly same set of tests are failing with trunk -r869, with this revision using uncompressed storage, and with this revision hard-wired to use 1-kilobyte compressed pages and innodb_file_per_table. btr_push_update_extern_fields(): Do not call ut_ulint_sort() if n_pushed == 0. btr_copy_externally_stored_field_prefix_low(): Replace ut_max() with ut_min(). 	a4c9d38ee8761e55b734d98148e59e1eaeb12b4c
----------------------------
WL #3516: MySQL Enterprise: implement Version Display Specification Print version_comment after server version in: mysql.cc:  Welcome message and 'status' command output log.cc: Top of log files 	b7d0ec2422da8f1b5c0385bd962e0217b9a29c12
----------------------------
Bug#20830 - INSERT DELAYED does not honour SET INSERT_ID Bug#20627 - INSERT DELAYED does not honour auto_increment_* variables Merge from 5.0. Changed auto_increment handling to the 5.1 pattern. 	8148bf497a01a9dc43544f22e6e255699e43e318
----------------------------
Bug#22224: Windows build depends on ib_config.h This change has already been made to 5.1. 	e89c10e99c6932a73bdb313b7167c3d40b4835f7
----------------------------
Result of a binlog_statement_insert_delayed was affected by recent fixing of binlog_row_binlog.test failure in team tree. Fixing the result that gets wrong with --binlog-format=mixed (so that skipped on pushbuild currently) 	a8c9d45dfc478259a1fc4286246591cf0144309e
----------------------------
"Bug#22436 Four tests require ""innodb"" to be configured, fail in ""classic"" build - Disable warnings when creating the ""innodb"" tables if it works anyway. - Move test that are really innodb dependent to innodb_mysql "	485772e30854e51b7fb7411c5c53f02e20011b77
----------------------------
"Bug#18969 race condition involving slave and mysqltest. was rpl_insert_id test case fails - As the slaves are restarted for each testcase, take the opportunity to restore their databases to a known state with the help of the snapshot(s) - Count max number of slaves used in testcases - Use copy_install_db to speed up ""Installing db"" phase "	dc02f761e5b1f8669e297664141a81de153fbe36
----------------------------
Fix for bug#22662  Inconsistent values displayed for event_scheduler when set to DISABLED It was a silly ordering number error. 	f7a779acfb296bcb23f59569b862d5323cc294a8
----------------------------
mysql_config.sh: Filter out plain -O and Sun C/C++ style optimization flags, -xO<level> Filter out icc specific options from cflags/libs(_r) 	878416e05497ce366a713ff44b4498da842e7688
----------------------------
Adding proper setup phase for test case rpl_insert_id 	9538acf5dcf4811fb9af07c25fafd0e20b93caf2
----------------------------
Applied innodb snapshot ss792 and ss854. This ChangeSet will be null-merged to mysql-5.1. Bugs fixed: - Bug #21638:  InnoDB: possible segfault in page_copy_rec_list_end_no_locks If prefix_len is specified, write it to the insert buffer instead of type->len - bug #10746:  InnoDB: Error: stored_select_lock_type is 0 inside ::start_stmt()! INSERT ... SELECT uses LOCK_NONE in innodb_locks_unsafe_for_binlog mode, so do not check for LOCK_X or LOCK_S in start_stmt() 	3724c1276b50c311eb65068a8cb960720e354611
----------------------------
Fixed bug #22015: crash with GROUP_CONCAT over a derived table that returns the results of aggregation by GROUP_CONCAT. The crash was due to an overflow happened for the field sortoder->length. The fix prevents this overflow exploiting the fact that the value of sortoder->length cannot be greater than the value of thd->variables.max_sort_length. 	f2225cab27a2cfae4e18190159d95b9f6c5e10c7
----------------------------
Bug#20830 - INSERT DELAYED does not honour SET INSERT_ID Bug#20627 - INSERT DELAYED does not honour auto_increment_* variables INSERT DELAYED ignored an explicitly set INSERT_ID and session specific auto_increment_* variables. The problem was that the inserts are done by a system thread, which does not have access to the session variables of the user thread. On a proposal of Guilhem I fixed it so that the variables are copied to the data structure for every delayed row. The system thread sets its session variables from these values. 	e9e58c668222995580821ef51f28266726d29f00
----------------------------
ha_innobase::start_stmt(): Remove the check for prebuilt->stored_select_lock_type being LOCK_X or LOCK_S. This would cause false alarms with INSERT ... SELECT, which would use LOCK_NONE in innodb_locks_unsafe_for_binlog mode.  (Bug #10746) 	7e894a1b88758d7a9d0b892fb77a82eb8679a146
----------------------------
Don't bother to remove the pid_file in mtr_kill_leftovers as it could potentially remove a the pidfile before the process is killed. The pid file will be removed later when var/ directory is recreated. 	895d9862665c3f6aca0093fec95f28dfa6c4407e
----------------------------
BUG#9678: Client library hangs after network communication failure (back-port to 4.0) Socket timeouts in client library were used only on Windows. Additionally, in 4.0 write operations erroneously set read timeout. The solution is to use socket timeouts in client library on all systems were they are supported, and to differentiate between read and write timeouts. No test case is provided because it is impossible to simulate network failure in current test suite. 	926106649f83984623c21910a2ce3ad982233f3e
----------------------------
"Add character-sets-dir argument to ""mysql"". That avoids a local installed charset dir being used. "	dafb50055f67ed90111d96dd1db4cf4d16bde5af
----------------------------
"Bug#22067  	rpl_rbr_to_sbr and some other fail if NDB is default storage A query SET @@GLOBAL.binlog_format = ... returns an error when NDB is the default storage. This fails some tests invoking the set binlog_format explicitly. because the var turns to be read-only. In the following are files and method to fix if needed. t/ ndb_binlog_basic2.test         # here the failure is benign rpl_rbr_to_sbr.test            # does not check any ndb features => .                              # => not_ndb_default is enough rpl_row_basic_8partition.test  # set binlog_format can be replaced rpl_switch_stm_row_mixed.test  # does not check any ndb features => .                              # => not_ndb_default is enough two more invoking invoke extra/rpl_truncate_helper.test rpl_truncate_2myisam           # to be fixed with not_ndb_default rpl_truncate_3innodb           # same as above .                              # because there is a dedicated to ndb . .                              # rpl_truncate_7ndb* suit. Adapting/testing a new implement --source include/safe_set_to_maybe_ro_var.inc to avoid abort due to the error using binlog_format as application. "	6055e8a9f712d80d63fac064a513e04ed69fd073
----------------------------
Make ndb_config use the same default options as any other ndb tool in the distribution (Bug #22295) 	b9372f7efabb3e4e00b75f342ef2f40daddb109d
----------------------------
mysql_declare_plugin(innobase): Initialize the fields reserved1 (apparently the system variables) and reserved2 (apparently the configuration options). 	e9d8c5e88a4c65e7deedf61e170bb653663d761f
----------------------------
"Correct faulty merge, ""mysql_priv.h"" must be included for the ifdef WITH_INNOBASE_STORAGE_ENGINE to work "	7b7e66763cf1e34c76b8fe8c53d5f07dda909faf
----------------------------
Bug#14862 undefined reference to `isinf' on SOLARIS - strings/strtod.c - Change the configure test looking for 'isinf' so the value returned from isinf is used. That avoids the call to isinf being optimized away. 	df2fbc784d9c634f9b7292da6e843edbc65319ed
----------------------------
BUG#19402 SQL close to the size of the max_allowed_packet fails on the slave A communication packet can also be a binlog event sent from the master to the slave. To be sent by master dump and accepted by slave io thread both have to have the value of max_allowed_packet bigger than one that client connection had. In the patch there is the MAX possible replicatio header size estimation for events in binlog that embedded user query. Only these events of query_log_event type, i.e just plain queries, require attention. 	b4b06d7a67ca31c2d52a5e60fe900be654947948
----------------------------
Bug#20862 truncated result with show variables like 'innodb_data_file_path' The size of 'value' field is increased to FN_REFLEN 	229bb9dcf1e0efb1e37d940f7b1be50b4bbea7df
----------------------------
Need to set symbolic-links=1 for valgrind builds for the partition test 	89af58aa95e087be1dd70e8da07adeeefae1296c
----------------------------
configure.in  :    NDB version and general version must be (kept) in sync - do that. 	b6071f06ce08e6eda33fd2bc96fcada6580dcdeb
----------------------------
"Fix a change to ""configure.in"" that broke building commercial sources. To be pushed to both the cloned 5.0.25 and the general 5.0 tree. "	1fc7b015079658350c95f5b7f6e984c7fab25c52
----------------------------
Bug #21054: myisam_stats_method ignored in my.cnf and cmdline Fix OPT_MYISAM_STATS_METHOD case, where the NULLS_EQUAL and NULLS_NOT_EQUAL methods were mixed up 	b6cd727ed1f722ae37f9302196f6f20121bbbb4d
----------------------------
"New way to fix BUG#19243 ""wrong LAST_INSERT_ID() after ON DUPLICATE KEY UPDATE"". This bug report was two problems: 1) LAST_INSERT_ID() returns a value which does not exist in the table 2) the reporter would want it to return the autoinc id of the updated row. 1) is a real bug, 2) is a feature request. In July I implemented 2) in 5.1 (which automatically fixes 1). This has not yet been documented or released, so is changeable. Precisely, recently Paul and a user found an easy workaround to give 2), which works in 4.1-5.0-5.1. So I can revert my code for 2), because it's not needed, that's what I do here; we forget about 2) (we will document the workaround). But when I revert my code for 2), 1) comes back. We solve 1) by saying that if INSERT ON DUPLICATE KEY UPDATE updates a row, it's like a regular UPDATE: LAST_INSERT_ID() should not be affected (instead of returning a non-existent value). So note: no behaviour change compared to the last released 5.1; just a bugfix for 1). "	04284f8c10b173e9d6871da8e08ef521328d5ab8
----------------------------
"Fix for BUG#11151 ""LOAD DATA INFILE commits transaction in 5.0"". In 5.0 we made LOAD DATA INFILE autocommit in all engines, while only NDB wanted that. Users and trainers complained that it affected InnoDB and was a change compared to 4.1 where only NDB autocommitted. To revert to the behaviour of 4.1, we move the autocommit logic out of mysql_load() into ha_ndbcluster::external_lock(). The result is that LOAD DATA INFILE commits all uncommitted changes of NDB if this is an NDB table, its own changes if this is an NDB table, but does not affect other engines. Note: even though there is no ""commit the full transaction at end"" anymore, LOAD DATA INFILE stays disabled in routines (re-entrency problems per a comment of Pem). Note: ha_ndbcluster::has_transactions() does not give reliable results because it says ""yes"" even if transactions are disabled in this engine... "	e4d3595b18eda1d2327050eb95262c92eed5d8bf
----------------------------
"Bug#21913: DATE_FORMAT() Crashes mysql server if I use it through mysql-connector-j driver. Variable character_set_results can legally be NULL (for ""no conversion."") This could result in a NULL deref that crashed the server.  Fixed. (Although ran some additional precursory tests to see whether I could break anything else, but no breakage so far.) "	13200c3f9616cc10d1d077799f4d9945693350bc
----------------------------
"Merge: 46b3997 41f1932 Merge salvation.intern.azundris.com:/home/tnurnberg/21913/my41-21913 into  salvation.intern.azundris.com:/home/tnurnberg/21913/my50-21913 21913: DATE_FORMAT() Crashes mysql server if I use it through mysql-connector-j driver. Variable character_set_results can legally be NULL (for ""no conversion."") This could result in a NULL deref that crashed the server.  Fixed. (Although ran some additional precursory tests to see whether I could break anything else, but no breakage so far.) "	72c6c14bb20dfe3a92d051f38b235e1eab85318e
----------------------------
"Bug#21913: DATE_FORMAT() Crashes mysql server if I use it through mysql-connector-j driver. Variable character_set_results can legally be NULL (for ""no conversion."") This could result in a NULL deref that crashed the server.  Fixed. (Although ran some additional precursory tests to see whether I could break anything else, but no breakage so far.) "	41f19324886d62935728a033e6135b77b0b21e77
----------------------------
Fix for BUG#12751: Instance Manager: client hangs after start instance; kill mysqlmanager; show ... The problem was that Instance Manager didn't close client sockets (sockets for client connections) on execing mysqld instance. So, mysqld-instance inherits these descriptors. The fix is to set close-on-exec flag for each client socket. 	725bb2e6aff9054678e2aa5872a1fca271146f47
----------------------------
WL#3337 (Event scheduler new architecture) This is a post-review patch. Fixes the typelib implementation, available only in 5.1.11. --event-scheduler cmdline : DISABLED | ON | OFF | 0 | 1 DISABLED - makes the scheduler unavailable during the server run (ON|1)-  When the server is started the scheduler will be started. It can be stopped and restarted by setting appropriate values to GLOBAL event_scheduler (OFF|0)- When the server is started, the scheduler won't be started. It can be started and again stopped by setting appropriate values to GLOBAL event_scheduler. _DEFAULT_ value The GLOBAL variable event_scheduler can have the following values: OFF | ON | 0 | 1 DISABLED is not possible and every attempt will end with an error that it's not a valid value for the variable. OFF | 0 - This is the pre-5.1.11 behavior - The scheduler stops, if not already stopped, and can be started again  by setting the value of the variable to ON|1. ON | 1  - This is the pre-5.1.11 behavior - The scheduler starts, if not already started, and can be stopped again by setting the value of the variable to OFF|0. 	ca39997c0ebcbeb8f84bb5e447161546b65509b1
----------------------------
Fix for BUG#21345, Error in cluster logfile rotation. Fixed the cluster logfile rotation code, let the cluster logfile be renamed correctly when the main logfile exceeds the configured maximum size. 	cb6d518d076aab27180c16d923905c412a16e973
----------------------------
WL#3337 (Event scheduler new architecture) This patch makes the relationship between Event_scheduler and Event_queue unidirectional from the former to the latter. The change is that the conditional on which the scheduler sleeped has been moved to the Event_queue and the latter does not call anymore Event_scheduler::queue_changed(), which in turn has be removed. 	7b5916a26c2bb4f44c9bfc8a68f6b81949a1b293
----------------------------
add 2 placeholder values for config and system variables. 	38a59efbc9828afcead6389f6abab8a5e35eb314
----------------------------
Merge changes from MySQL AB: ChangeSet 2006/08/23 13:59:16-07:00 brian@zim.(none) This patch removes need for a innodb to have its own configure. univ.i: Replace ../ib_config.h with config.h. Makefile.i, Makefile.am: Change directory paths. configure.in: Delete. plug.in: New file, included from the top-level configure.in. setup.sh: Replace configure.in with plug.in. 	71cdd575f7ee10bf1eed1470623cdf92ae592f0d
----------------------------
make DNS based hostname queries work (bug #17582) 	e3d56d2cd32464e565a1daf9d338ad909aa60959
----------------------------
Merge: 44a1f41 6d62914 sql_base.cc, config-netware.h: Auto merged 	cda07adf326c620b7a11bc05924ce5e12ddbcee6
----------------------------
"Changes made according to HLD/LLD. The following is an excerption from the WL. 1. Change so that MIXED is default format 1.1 to change the default for command line --binlog-format 1.2 to alter global_system_variables.binlog_format calculation basing on command line --binlog-format parameter and its default. 2. Change test suite so that more testing is done by MIXED format. 2.1 to check if there are test cases requiring --binlog-foramt=statement via `source include/have_binlog_format_statement.inc' and affected by altering the latter to be ""mixed"". 2.2 to check the content of such vulnerable cases to find if extending to the mixed does not modify results. In that case simply substitute source arguments as explained. 2.3 if a test in mixed mode deals with features triggering row-binlogging then if necessary we can switch explicitly to statement mode or create another test to run with non-recommended STATEMENT mode Particullarily, extracting INSERT DELAYED binlogging subtest for statement mode is performed, and the snippet is moved into a separate test file. Note that since now all three modes verify this use case through 3 different tests. No changes in item 3 of HLD appeared to be needed. "	7be4bc4e55ccdd6bd7b35b1b166b2a0a05276249
----------------------------
Preliminary patch for the following bugs: - BUG#15934: Instance manager fails to work; - BUG#18020: IM connect problem; - BUG#18027: IM: Server_ID differs; - BUG#18033: IM: Server_ID not reported; - BUG#21331: Instance Manager: Connect problems in tests; The only test suite has been changed (server codebase has not been modified). 	1a7cb4153cc5d737d93c53fef9700ac9d5629584
----------------------------
Fix for bug #21345: Error in cluster logfile rotation. Fixed the cluster logfile rotation code, let the cluster log file be renamed correctly when the main log file exceeds the configured maximum size. 	4e7cad0fd4dc57372ddce8d05bc0bf01521221e0
----------------------------
Fix for bug#21795: SP: sp_head::is_not_allowed_in_function() contains erroneous check Problem: Actually there were two problems in the server code. The check for SQLCOM_FLUSH in SF/Triggers were not according to the existing architecture which uses sp_get_flags_for_command() from sp_head.cc . This function was also missing a check for SQLCOM_FLUSH which has a problem combined with prelocking. This changeset fixes both of these deficiencies as well as the erroneous check in sp_head::is_not_allowed_in_function() which was a copy&paste error. 	f115ecf89faddbc4fc8dd149facac214082a2657
----------------------------
Fix for bug#21416 SP: Recursion level higher than zero needed for non-recursive call The following procedure was not possible if max_sp_recursion_depth is 0 create procedure show_proc() show create procedure show_proc; Actually there is no recursive call but the limit is checked. Solved by temporarily increasing the thread's limit just before the fetch from cache and decreasing after that. 	85e6c3bfc1874946a9170753a9ddcc45e1725541
----------------------------
This patch removes need for a innodb to have its own configure. 	212ab97668875a811ad5b7d6f224642bf25176d0
----------------------------
configure.in  :    Set the version for 5.0.24a. 	6d62914044ce04cc4ebf749d110e4963428bb312
----------------------------
"Bug#20411: ""GRANT ... REQUIRE ISSUER nnn AND SUBJECT mmm"" fails to require both when X.509 subject was required for a connect, we tested whether it was the right one, but did not refuse the connexion if not. fixed. (corrected CS now --replace_results socket-path) "	002adef0e184a3dd28ab162a27fce402c66e0f57
----------------------------
ndb - post-merge fix 5.0 to 5.0-ndb: number of frags if --without-big-tables 	9dc6087d4df6c4fe77fc2b9cd36e1f8f446932e4
----------------------------
BUG#21051: RESET QUERY CACHE very slow when query_cache_type=0 There were two problems: RESET QUERY CACHE took a long time to complete and other threads were blocked during this time. The patch does three things: 1 fixes a bug with improper use of test-lock-test_again technique. AKA Double-Checked Locking is applicable here only in few places. 2 Somewhat improves performance of RESET QUERY CACHE. Do my_hash_reset() instead of deleting elements one by one.  Note however that the slowdown also happens when inserting into sorted list of free blocks, should be rewritten using balanced tree. 3 Makes RESET QUERY CACHE non-blocking. The patch adjusts the locking protocol of the query cache in the following way: it introduces a flag flush_in_progress, which is set when Query_cache::flush_cache() is in progress.  This call sets the flag on enter, and then releases the lock.  Every other call is able to acquire the lock, but does nothing if flush_in_progress is set (as if the query cache is disabled). The only exception is the concurrent calls to Query_cache::flush_cache(), that are blocked until the flush is over.  When leaving Query_cache::flush_cache(), the lock is acquired and the flag is reset, and one thread waiting on Query_cache::flush_cache() (if any) is notified that it may proceed. 	0f0ddc398a5b68f3a67794c82e7a40cb44a6e402
----------------------------
Many files: Deleted config/ac-macros/ha_berkeley.m4 Removed more referenses to bdb 	b329f2c3ef142c460333e914062b14f3aa2a3e64
----------------------------
"Fix by Georgi Kodinov: Bug #18744 Test 'join_outer' fails if ""classic"" configuration in 5.0 - moved an InnoDB dependent test to the appropriate file "	e3bdd6c6c20aeda1b3206a9a8b61958e06c50ad3
----------------------------
"Fix for bug#21216 ""Simultaneous DROP TABLE and SHOW OPEN TABLES causes server to crash"". Crash caused by assertion failure happened when one ran SHOW OPEN TABLES while concurrently doing DROP TABLE (or RENAME TABLE, CREATE TABLE LIKE or any other command that takes name-lock) in other connection. For non-debug version of server problem exposed itself as wrong output of SHOW OPEN TABLES statement (it was missing name-locked tables). Finally in 5.1 both debug and non-debug versions simply crashed in this situation due to NULL-pointer dereference. This problem was caused by the fact that table placeholders which were added to table cache in order to obtain name-lock had TABLE_SHARE::table_name set to 0. Therefore they broke assumption that this member is non-0 for all tables in table cache which was checked by assert in list_open_tables() (in 5.1 this function simply relies on it). The fix simply sets this member for such placeholders to appropriate value making this assumption true again. This patch also includes test for similar bug 12212 ""Crash that happens during removing of database name from cache"" reappeared in 5.1 as bug 19403. "	186fa6c2918598d5216ffca21e5044de5f472112
----------------------------
"Fix for bug #21642: ""configure"" with no arguments does not build "	56443ae20122579ae6eeceb98e5bf3bd2a57a3e3
----------------------------
"WL#3432 (Compile the Parser with a --debug --verbose option) Changed the automake build process : - ./configure.in - ./sql/Makefile.am to compile an instrumented parser for debug=yes or debug=full builds Changed the (primary) runtime invocation of the parser : - sql/sql_parse.cc to generate bison traces in stderr when the DBUG ""parser_debug"" flag is set. "	4a22b07ed55381b6e2c70ac07868aabbbcf19d34
----------------------------
ndb - rpl_ndb_basic fix for change of deadlock timeout in config.ini 	40754dd6e3c1944c7a46fbe4f22d25b64664958b
----------------------------
BUG#21670 memory leak in ndb_mgm -e show fix the following valgrind warning when running ndb_mgm -e show (leak only in client) ==20398== 14,596 (11,936 direct, 2,660 indirect) bytes in 4 blocks are definitely lost in loss record 24 of 25 ==20398==    at 0x401C4A1: malloc (vg_replace_malloc.c:149) ==20398==    by 0x80797A3: ConfigValuesFactory::create(unsigned, unsigned) (ConfigValues.cpp:309) ==20398==    by 0x8079F03: ConfigValuesFactory::expand(unsigned, unsigned) (ConfigValues.cpp:325) ==20398==    by 0x8079967: ConfigValuesFactory::put(ConfigValues::Entry const&) (ConfigValues.cpp:414) ==20398==    by 0x807A7B6: ConfigValuesFactory::unpack(void const*, unsigned) (ConfigValues.cpp:701) ==20398==    by 0x806CB9D: ConfigValuesFactory::unpack(UtilBuffer const&) (ConfigValues.hpp:252) ==20398==    by 0x8069160: ndb_mgm_get_configuration (mgmapi.cpp:1941) ==20398==    by 0x8060661: CommandInterpreter::executeShow(char*) (CommandInterpreter.cpp:1242) ==20398==    by 0x8063966: CommandInterpreter::execute_impl(char const*) (CommandInterpreter.cpp:715) ==20398==    by 0x8064040: CommandInterpreter::execute(char const*, int, int*) (CommandInterpreter.cpp:625) ==20398==    by 0x8064189: Ndb_mgmclient::execute(char const*, int, int*) (CommandInterpreter.cpp:203) ==20398==    by 0x805E56C: read_and_execute(int) (main.cpp:124) ==20398==    by 0x805E754: main (main.cpp:162) ==20398== 	76940119d0998d1f996a7e8741f204fc6407535e
----------------------------
Bug#21327 OpenSSL-checking in configure - Change $d to $libs as suggested. - Thanks to Michael Prohm for the patch! 	91c2e68c2b97bd42bc27f596da2011709db8c736
----------------------------
BUG#9678: Client library hangs after network communication failure Socket timeouts in client library were used only on Windows. The solution is to use socket timeouts in client library on all systems were they are supported. No test case is provided because it is impossible to simulate network failure in current test suit. 	c746c08af9287e43b8517307e32be258e0c6f1f1
----------------------------
BUG#18874 - Setting myisam_repair_threads > 1, index cardinality always 1 Fixed by moving update_key_parts() down to be after write_index(). 	d4bdba176f0377c8bff29856e69e7847f0fd3074
----------------------------
innodb.result: Adjust Innodb_rows_inserted and Innodb_rows_updated to reflect the deleted statements in r420, which somehow reappeared in the MySQL tree. 	15330c3263f76c7a4680af8a27da73276e6c155b
----------------------------
Bug#18875: Default value of tmp_table_size is meaningless It makes no sense to have a default tmp_table_size larger than the max_heap_table_size .  In usage, the tmp is ever limited to the max value, so I lowered the default tmp to the default max value. A great idea would be to emit a warning when the tmp_table_size is set to greater than max_heap_table_size . 	6e2c8bac4c339dd7f9c059f0f71d2ab3e2303b01
----------------------------
"mysqld --collation-server=xxx --character-set-server=yyy didn't work as expected: collation_server was set not to xxx, but to the default collation of character set ""yyy"". With different argument order it worked as expected: mysqld --character-set-server=yyy --collation-server=yyy Fix: initializate default_collation_name to 0 when processing --character-set-server only if --collation-server has not been specified in command line. "	4a63a64f1eda1872e9ad0ebcc193be6947271fb3
----------------------------
Bug#7192 Specify --with-collation doesn't work for connections? --with-collation worked only on the server side. Client side ignored this argument, so collation_connection was not properly set (remained latin1_swedish_ci). 	8a4c19d915c1a45d85947a71915f98fc66b694a4
----------------------------
Merge a change from MySQL AB: # ChangeSet #   2006/07/30 05:16:08+04:00 aivanov@mysql.com #   Make innodb_thread_concurrency 0 by default. #    Fixing test result. # # mysql-test/r/innodb.result #   2006/07/30 05:16:05+04:00 aivanov@mysql.com +1 -1 #   Make innodb_thread_concurrency 0 by default. #    Fixing test result. 	03d5255baef8c7407c4c1e7d405c11c4151ddbff
----------------------------
Merge a change from MySQL AB (originally implemented by Marko in the 5.0 tree and now merged to the 5.1 tree): # ChangeSet #   2006/07/29 07:17:33+04:00 aivanov@mysql.com #   Make innodb_flush_log_at_trx_commit a settable global variable. # # sql/ha_innodb.cc #   2006/07/29 07:17:29+04:00 aivanov@mysql.com +1 -3 #   Remove innobase_flush_log_at_trx_commit #   (set srv_flush_log_at_trx_commit directly). # # sql/ha_innodb.h #   2006/07/29 07:17:29+04:00 aivanov@mysql.com +1 -1 #   Remove innobase_flush_log_at_trx_commit. #   Declare srv_flush_log_at_trx_commit. # # storage/innobase/include/srv0srv.h #   2006/07/29 07:17:30+04:00 aivanov@mysql.com +1 -1 #   Change the type of srv_flush_log_at_trx_commit. # # storage/innobase/srv/srv0srv.c #   2006/07/29 07:17:30+04:00 aivanov@mysql.com +1 -1 #   Change the type of srv_flush_log_at_trx_commit. # 	b689519f0b237c628074ffffa05d79ef6246f6e1
----------------------------
Bug#19844: time_format in Union truncates values time_format() claimed %H and %k would return at most two digits (hours 0-23), but this coincided neither with actual behaviour nor with docs.  this is not visible in simple queries; forcing a temp-table is probably the easiest way to see this.  adjusted the return-length appropriately; the alternative would be to adjust the docs to say that behaviour for > 99 hours is undefined. --- Bug#19844: time_format in Union truncates values time_format() claimed %H and %k would return at most two digits (hours 0-23), but this coincided neither with actual behaviour nor with docs.  this is not visible in simple queries; forcing a temp-table is probably the easiest way to see this.  adjusted the return-length appropriately; the alternative would be to adjust the docs to say that behaviour for > 99 hours is undefined. 	170392850d040a2294242a02e1bb092a17ef9ac3
----------------------------
lowercase_fs_off fails on windows because lower_case_file_system is not being set properly.  This patch should fix that. mysqld.cc: Call test_if_case_insensitive in all cases so lower_case_file_system always gets set 	c1786175f2fa58044c6ff121dbc5a5755662fb34
----------------------------
Fix for bug#21416 SP: Recursion level higher than zero needed for non-recursive call The following procedure was not possible if max_sp_recursion_depth is 0 create procedure show_proc() show create procedure show_proc; Actually there is no recursive call but the limit is checked. Solved by temporarily increasing the thread's limit just before the fetch from cache and decreasing after that. 	9c59cfe4d7fd6047212eb4e84aa2d657aea2134c
----------------------------
"Fix Bug #20139 Infinite loop after ""FLUSH"" and ""LOCK tabX, general_log"" Due to incorrect handling of FLUSH TABLES, log tables were marked for flush, but not reopened. Later we started to wait for the log table to be closed (disabled) after the flush. And as nobody disabled logs in concurrent treads, the command lasted forever. After internal consultations it was decided to skip logs during FLUSH TABLES. The reasoning is that logging is done in the ""log device"", whatever it is which is always active and controlled by FLUSH LOGS. So, to flush logs one should use FLUSH LOGS, and not FLUSH TABLES. "	7aec1205493b9093d4b49bd68aa3a9e40728d44a
----------------------------
"Bug#18775 - Temporary table from alter table visible to other threads Continued implementation of WL#1324 (table name to filename encoding) The intermediate (not temporary) files of the new table during ALTER TABLE was visible for SHOW TABLES. These intermediate files are copies of the original table with the changes done by ALTER TABLE. After all the data is copied over from the original table, these files are renamed to the original tables file names. So they are not temporary files. They persist after ALTER TABLE, but just with another name. In 5.0 the intermediate files are invisible for SHOW TABLES because all file names beginning with ""#sql"" were suppressed. This failed since 5.1.6 because even temporary table names were converted when making file names from them. The prefix became converted to ""@0023sql"". Converting the prefix during SHOW TABLES would suppress the listing of user tables that start with ""#sql"". The solution of the problem is to continue the implementation of the table name to file name conversion feature. One requirement is to suppress the conversion for temporary table names. This change is straightforward for real temporary tables as there is a function that creates temporary file names. But the generated path names are located in TMPDIR and have no relation to the internal table name. This cannot be used for ALTER TABLE. Its intermediate files need to be in the same directory as the old table files. And it is necessary to be able to deduce the same path from the same table name repeatedly. Consequently the intermediate table files must be handled like normal tables. Their internal names shall start with tmp_file_prefix (#sql) and they shall not be converted like normal table names. I added a flags parameter to all relevant functions that are called from ALTER TABLE. It is used to suppress the conversion for the intermediate table files. The outcome is that the suppression of #sql in SHOW TABLES works again. It does not suppress user tables as these are converted to @0023sql on file level. This patch does also fix ALTER TABLE ... RENAME, which could not rename a table with non-ASCII characters in its name. It does also fix the problem that a user could create a table like `#sql-xxxx-yyyy`, where xxxx is mysqld's pid and yyyy is the thread ID of some other thread, which prevented this thread from running ALTER TABLE. Some of the above problems are mentioned in Bug 1405, which can be closed with this patch. This patch does also contain some minor fixes for other forgotten conversions. Still known problems are reported as bugs 21370, 21373, and 21387. "	8e4c36ad4afa35b07b15f3ebbcd51007e925125c
----------------------------
innodb.result: Set the default value of innodb_thread_concurrency to 8. This has already been changed in the MySQL source code tree. 	bebced25636d34fe73b4387fc9d88b0325ccd14f
----------------------------
Make innodb_thread_concurrency 0 by default. Fixing test result. 	885192654487cea6d3c1c64bd3e583e0d61e0477
----------------------------
configure.in: Corrected typo 	f2ec5d7128f3b154d22f0acc2199c6a10c0e3173
----------------------------
Add missing semicolon to wait_timeout test 	768a77d3c61c1e45fee57ac7b4df24931642c613
----------------------------
Make innodb_flush_log_at_trx_commit a settable global variable. 	0bd3c297a40b10ea48d97bda3ab71859b1427188
----------------------------
Make innodb_thread_concurrency 0 by default, and extend the usable range to 0..1000 (0 disables the thread throttling). 	7d3a584c03012681e6e15db50be84e04dbbc5ba6
----------------------------
Makefile.am, configure.in: Man page for mysqld command move to section 8 (bug#21220) 	2faea9832477756135da5f9600fbb24032f5a98b
----------------------------
BUG#21206: memory corruption when too many cursors are opened at once Too many cursors (more than 1024) could lead to memory corruption. This affects both, stored routines and C API cursors, and the threshold is per-server, not per-connection.  Similarly, the corruption could happen when the server was under heavy load (executing more than 1024 simultaneous complex queries), and this is the reason why this bug is fixed in 4.1, which doesn't support cursors. The corruption was caused by a bug in the temporary tables code, when an attempt to create a table could lead to a write beyond allocated space.  Note, that only internal tables were affected (the tables created internally by the server to resolve the query), not tables created with CREATE TEMPORARY TABLE.  Another pre-condition for the bug is TRUE value of --temp-pool startup option, which, however, is a default. The cause of a bug was that random memory was overwritten in bitmap_set_next() due to out-of-bound memory access. 	1917a99270248262f7420fc61a6f1f50bf03b9a6
----------------------------
Bug#16576 Patch to compile on GNU/Hurd (ps check in configure) - Thanks to Christian Hammers for the patch 	731d346f14c56f7aad24a215a57cce55eb16df53
----------------------------
BUG#21206: memory corruption when too many cursors are opened at once Too many cursors (more than 1024) could lead to memory corruption. This affects both, stored routines and C API cursors, and the threshold is per-server, not per-connection.  Similarly, the corruption could happen when the server was under heavy load (executing more than 1024 simultaneous complex queries), and this is the reason why this bug is fixed in 4.1, which doesn't support cursors. The corruption was caused by a bug in the temporary tables code, when an attempt to create a table could lead to a write beyond allocated space.  Note, that only internal tables were affected (the tables created internally by the server to resolve the query), not tables created with CREATE TEMPORARY TABLE.  Another pre-condition for the bug is TRUE value of --temp-pool startup option, which, however, is a default. The cause of a bug was that random memory was overwritten in bitmap_set_next() due to out-of-bound memory access. 	4e845cccc484f690556925daa6dd81cd83e5b3a8
----------------------------
Fixed bug #21231: wrong results for a simple query with a a non-correlated single-row subquery over information schema. The function get_all_tables filling all information schema tables reset lex->sql_command to SQLCOM_SHOW_FIELDS. After this the function could evaluate partial conditions related to some columns. If these conditions contained a subquery over information schema it led to a wrong evaluation and a wrong result set. This bug was already fixed in 5.1. This patch follows the way how it was done in 5.1 where the value of lex->sql_command is set to SQLCOM_SHOW_FIELDS in get_all_tables only for the calls of the function open_normal_and_derived_tables and is restored after these calls. 	69856b29b2b9c3c3e0f8adbcf6f130a0f2e1434e
----------------------------
"Bug#15690 mysqlimport tries to set options the server doesn't understand - ""set @@character_set_database"" should be ignored by servers prior to 4.1.1 "	dbb5a408eaf1741823910fb73862a12b58502480
----------------------------
WL#3337 (Event scheduler new architecture) event_scheduler_ng.cc/h is no more 	3f4e1f5c695215cd18222c359fa56eea4ab63664
----------------------------
"Bug#20729: Bad date_format() call makes mysql server crash The problem is that the author used the wrong function to send a warning to the user about truncation of data.  push_warning() takes a constant string and push_warning_printf() takes a format and variable arguments to fill it. Since the string we were complaining about contains percent characters, the printf() code interprets the ""%Y"" et c. that the user sends.  That's wrong, and often causes a crash, especially if the date mentions seconds, ""%s"". A alternate fix would be to use  push_warning_printf(..., ""%s"", warn_buff) . "	22485908ce5eb1ab04869f3636bed0b980613015
----------------------------
WL#3337 (Event scheduler new architecture) More small fixes to the API : use LEX_STRING instead of LEX_STRING* and if error then return bool(true) instead of error code. Merged functions. Reduced usage of sp_name. Fixed a lot of function documentation errors. Added function documentation wherever needed. Removed some unused defines and error codes. Next to come is batch rename of Event_scheduler_ng to Event_scheduler. 	0d517461f0e6b465e0d7f9bc4a5b9241f7cbb657
----------------------------
BUG#14553: NULL in WHERE resets LAST_INSERT_ID To make MySQL compatible with some ODBC applications, you can find the AUTO_INCREMENT value for the last inserted row with the following query: SELECT * FROM tbl_name WHERE auto_col IS NULL. This is done with a special code that replaces 'auto_col IS NULL' with 'auto_col = LAST_INSERT_ID'. However this also resets the LAST_INSERT_ID to 0 as it uses it for a flag so as to ensure that only the first SELECT ... WHERE auto_col IS NULL after an INSERT has this special behaviour. In order to avoid resetting the LAST_INSERT_ID a special flag is introduced in the THD class. This flag is used to restrict the second and subsequent SELECTs instead of LAST_INSERT_ID. 	2c9f5cc7062132fffa342490c18c37054fe6ec33
----------------------------
WL#3337 (Event scheduler new architecture) This patch introduces specialized Event data objects Event_basic as parent. Event_queue_element used for queue storage Event_timed used for SHOW EVENTS/ I_S.EVENTS / SHOW CREATE EVENT Event_job_data using during execution. Methods were moved out of Event_timed to other classes. This patch also introduces Events::LOCK_event_metadata. This patch gives new implementation of Events::dump_internal_status(). Now both the Event_scheduler and Event_queue return information during their ::dump_internal_status(). Shortened a bit the runtime for executing events test cases. 	e3d0524bbd79f85d166e7ec369d6a1f612a8c3d1
----------------------------
"WL#3146 ""less locking in auto_increment"": this is a cleanup patch for our current auto_increment handling: new names for auto_increment variables in THD, new methods to manipulate them (see sql_class.h), some move into handler::, causing less backup/restore work when executing substatements. This makes the logic hopefully clearer, less work is is needed in mysql_insert(). By cleaning up, using different variables for different purposes (instead of one for 3 things...), we fix those bugs, which someone may want to fix in 5.0 too: BUG#20339 ""stored procedure using LAST_INSERT_ID() does not replicate statement-based"" BUG#20341 ""stored function inserting into one auto_increment puts bad data in slave"" BUG#19243 ""wrong LAST_INSERT_ID() after ON DUPLICATE KEY UPDATE"" (now if a row is updated, LAST_INSERT_ID() will return its id) and re-fixes: BUG#6880 ""LAST_INSERT_ID() value changes during multi-row INSERT"" (already fixed differently by Ramil in 4.1) Test of documented behaviour of mysql_insert_id() (there was no test). The behaviour changes introduced are: - LAST_INSERT_ID() now returns ""the first autogenerated auto_increment value successfully inserted"", instead of ""the first autogenerated auto_increment value if any row was successfully inserted"", see auto_increment.test. Same for mysql_insert_id(), see mysql_client_test.c. - LAST_INSERT_ID() returns the id of the updated row if ON DUPLICATE KEY UPDATE, see auto_increment.test. Same for mysql_insert_id(), see mysql_client_test.c. - LAST_INSERT_ID() does not change if no autogenerated value was successfully inserted (it used to then be 0), see auto_increment.test. - if in INSERT SELECT no autogenerated value was successfully inserted, mysql_insert_id() now returns the id of the last inserted row (it already did this for INSERT VALUES), see mysql_client_test.c. - if INSERT SELECT uses LAST_INSERT_ID(X), mysql_insert_id() now returns X (it already did this for INSERT VALUES), see mysql_client_test.c. - NDB now behaves like other engines wrt SET INSERT_ID: with INSERT IGNORE, the id passed in SET INSERT_ID is re-used until a row succeeds; SET INSERT_ID influences not only the first row now. Additionally, when unlocking a table we check that the thread is not keeping a next_insert_id (as the table is unlocked that id is potentially out-of-date); forgetting about this next_insert_id is done in a new handler::ha_release_auto_increment(). Finally we prepare for engines capable of reserving finite-length intervals of auto_increment values: we store such intervals in THD. The next step (to be done by the replication team in 5.1) is to read those intervals from THD and actually store them in the statement-based binary log. NDB will be a good engine to test that. "	0594e1b84b143da5e2f3a339d7092531d00f290b
----------------------------
BUG#19951: Race conditions in test wait_timeout. Fix random failures in test 'wait_timeout' that depend on exact timing. 1. Force a reconnect initially if necessary, as otherwise slow startup might have caused a connection timeout before the test can even start. 2. Explicitly disconnect the first connection to remove confusion about which connection aborts from timeout, causing test failure. 	5ea51287d69e54698246836d9286374187262e29
----------------------------
"Fix for BUG#20188 ""REPLACE or ON DUPLICATE KEY UPDATE in auto_increment breaks binlog"": if slave's table had a higher auto_increment counter than master's (even though all rows of the two tables were identical), then in some cases, REPLACE and INSERT ON DUPLICATE KEY UPDATE failed to replicate statement-based (it inserted different values on slave from on master). write_record() contained a ""thd->next_insert_id=0"" to force an adjustment of thd->next_insert_id after the update or replacement. But it is this assigment introduced indeterminism of the statement on the slave, thus the bug. For ON DUPLICATE, we replace that assignment by a call to handler::adjust_next_insert_id_after_explicit_value() which is deterministic (does not depend on slave table's autoinc counter). For REPLACE, this assignment can simply be removed (as REPLACE can't insert a number larger than thd->next_insert_id). We also move a too early restore_auto_increment() down to when we really know that we can restore the value. "	a43c4b0265ac89b7371b44a3940d37430a87b21a
----------------------------
"A fix and a test case for Bug#17843 ""Certain stored procedures fail to run at startup"" The server returned an error when trying to execute init-file with a stored procedure that could return multiple result sets to the client. A stored procedure can return multiple result sets if it contains PREPARE, SELECT, SHOW and similar statements. The fix is to set client_capabilites|=CLIENT_MULTI_RESULTS in sql_parse.cc:handle_bootstrap(). There is no ""client"" really, so nothing is ever sent. This makes init-file feature behave consistently: the prepared statements that can be called directly in the init-file can be used in a stored procedure too. Re-committed the patch originally submitted by Per-Erik after review. "	b99e11c8bdfd27d8aa6f392205aead12bc7a0561
----------------------------
WL #3337 (Event scheduler new architecture) Cut Nr. 8. All tests pass. Separated Event_scheduler into Event_queue and Event_scheduler. Added new Event_scheduler_ng which is the new scheduler and is used system-wide. Will be moved to the event_scheduler.cc in the future. Using Event_timed in Event_queue as well as cloned during execution. Next step is to have Event_worker_data which will be used during execution and will take ::compile()/::execute() out of Event_timed. 	2bdd872e5f9e2c6777dcaad232b4f0a53cb023eb
----------------------------
client.c: Define 'mysql_get_ssl_cipher' even if no SSL built in, it is referenced in libmysql.def 	caa3fcf673198b4a7649ded6075c55d6c67d3bbe
----------------------------
WL#3337 (Event scheduler new architecture) This is the first cut of separating Event_scheduler in two classes which are more specialized. Inheritance was used to separate methods and member variables. Still Event_scheduler is a child of Event_queue. This dependency will be removed soon. 	6dd9a3bb60f1de2919113f970fecef4e971705eb
----------------------------
Bug#7192 Specify --with-collation doesn't work for connections? --with-collation worked only on the server side. Client side ignored this argument, so collation_connection was not properly set (remained latin1_swedish_ci). 	d1c24548159a65866c8bf12627687fbd976de2ae
----------------------------
WL#3337 (Events new architecture) This cut No 7 should finish the part of fixing the parsing of the events : - Event_timed is no more used during parsing. Less problems because it has a mutex. Event_parse_data class is used during parsing. It is suited only for this purpose. It's pretty lightweight - Late checking of data from parsing is being performed. This should solve the problems of nested events in SP or other events (for the situation of no nested bodies). Before if an ALTER EVENT was in a SP, then when the SP was compiled, and not executed, the actual init_xxx methods of Event_timed were called, which is wrong. - It could be a side effect of using a specialized class, but test events_stress is now 25% quicker. Cut No8 will start splitting Event_scheduler into 2 parts, the QUEUE will be moved to Event_queue. 	3c793e23ee2ad1f35d2c0dc90a109303e65de456
----------------------------
"Added -DHAVE_MUTEX_THREAD_ONLY to fix that bdb doesn't crash with ""unable to initialize mutex"" "	500dd048b9f5159bb56b8c0b62c7ee2ac81d2065
----------------------------
"BUG#20739. In the Windows build files, the ""Max nt"" configuration for some reason had the mysql_client_test project disabled. Enable it. "	10abc3e244f4423af9c38fecb81c93a6ed2c86fe
----------------------------
BUG#20739 Improved definition of mysys configuration for -nt builds. 	e8df7d43a5d0b17a1b0dd951ab759402b2e6c55a
----------------------------
BUG#20739: __NT__ not probably defined for mysys project. Make sure for the mysys project that __NT__ is defined in *nt solution configurations (but not in other configurations). 	529a2d1291f972cb26af0749a09272e40f725d5b
----------------------------
Adding __NT__ to Max Win32 configuration. 	c18a4e36f422856313544af6e3b3f171e25f5228
----------------------------
Bug#16180 Setting SQL_LOG_OFF without SUPER privilege is silently ignored 	2781050afc63cc2ae1fbf4269ca910998aa6ac98
----------------------------
Fix race condition in test case wait_timeout. Sometimes the helper connection (that is watching for the main connection to time out) would itself time out first, causing the test to fail. 	34cf139bd933cc2805d285dc4a243e5275ec3f56
----------------------------
"Bug#15276: MySQL ignores collation-server Problem: mysqld --collation-server=xxx --character-set-server=yyy didn't work as expected: collation_server was set not to xxx, but to the default collation of character set ""yyy"". With different argument order it worked as expected: mysqld --character-set-server=yyy --collation-server=yyy Fix: initializate default_collation_name to 0 when processing --character-set-server only if --collation-server has not been specified in command line. "	ee8fd1e3b5ad0581ef3ce0e1a528b532bd77ddad
----------------------------
Bug#20588: mysqldump.test may fail, depending on system-wide configuration mysqldump.test calls my_print_defaults in a way that includes the systemwide my.cnf, so the results will be beyond our control and depend on whatever the user has in their my.cnf, namely the [mysqldump] section. call my_print_defaults with --config-file rather than --defaults-extra-file to prevent inclusion of system-wide defaults and use our config-file only. 	701a4f18d1de42c426259c085b165a9a435cc72b
----------------------------
BUG#20549: Fix missing memory initialization. Some values were not initialized, causing Valgrind errors (and potential random bugs): - NDB binlog thread thd->variables.pseudo_thread_id. - Table null bits. - Field bytes for columns with NULL values. 	bd5f334bed8d9901fe11a746900491a3dc40381d
----------------------------
Additional test for Bugs#20392: INSERT_ID session variable has weird value sys_var_insert_id returned LAST_INSERT_ID instead of INSERT_ID, as Guilhem suggested. 	75351dc0a5a55acba5fdcb6ec433f0028076c7d5
----------------------------
Bugs#20392: INSERT_ID session variable has weird value sys_var_insert_id returned LAST_INSERT_ID instead of INSERT_ID. 	4bd163b6989bcf14a6402ed7974b630e82621a6c
----------------------------
"Improved fix for bug#18516 (also 19353): 1) Rename the old shell tool ""mysql_upgrade"", to avoid a name collision. 2) Improve the spec file, to explicitly use a temporary socket. "	7d83b7e48a83ad37b18dad3ac1f2cc6e0318fd94
----------------------------
"make_win_src_distribution.sh: Removed reference to missing ""tools"" directory mysql.spec.sh: Changed flag --with-yassl => --with-ssl Reverted accidental removal of the ""make"" call :-) Configure --with-embedded-server Corrected path to ""libtool"" command Corrected path to ""libmysqld.a"" Removed references to ""safe_mysqld"" "	34d82f0bc63de81029a19d538c3e533d7e3b9418
----------------------------
SHOW STATUS does not anymore change local status variables (except com_show_status). Global status variables are still updated. SHOW STATUS are not anymore put in slow query log because of no index usage. Implemntation done by removing orig_sql_command and moving logic of SHOW STATUS to mysql_excute_command() This simplifies code and allows us to remove some if statements all over the code. Upgraded uc_update_queries[] to sql_command_flags and added more bitmaps to better categorize commands. This allowed some overall simplifaction when testing sql_command. Fixes bugs: Bug#10210: running SHOW STATUS increments counters it shouldn't Bug#19764: SHOW commands end up in the slow log as table scans 	be269e56d2a20b5ec70991eb73c87efa20df7dfd
----------------------------
"Bug#19881: slave cores at close_temporary_tables under shutdown The bug was found in rpl_stm_000001 testing. In essence the following happens SLAVE thread receives          what happens start init THD and its temp_table (tt0) stop storing tt0 pointer to rli->save... start restoring temp_tables - new pointer tt1 executing regular binlog event DROP temp_table at the end of which tt1-refered list must be empty (slave_open_temp_tables == 0) but the pointer refers to tt0 location! shutdown end_slave calls cleaning of temp_tables and crashes. The reason of the crash is that tt1 values is not zero upon DROPing the single temp table. This is due to alg of removing links from temp_tables list which ""adapted"" 5.0 code but w/o accounting that thd->temporary_tables in slave thread in prone to freeing. Upon freeing there is no more original '0' value available to denote empty list. temporary_tables must not refer to any ""external"" location, one of which thd->temporary_tables represents (since belong to THD instance). The fix done in sql_base.cc for two functions, look at there for details. "	d30425a148acef2438a8cbb238650b5fac66609a
----------------------------
WL#3015: Logging Improvements - No Restarts(ver N4) Added slow_query_log & general_log global upadatable variables. Added slow-query-log & general-log startup options. Added log_output, general_log_file, slow_query_log_file global updatable variables. 	1d72c66c1be4fad8f49f4254ce6e8ca1f44c7606
----------------------------
configure.in, net_serv.cc, compile-netware-END: Changes for Netware 	392bb51f258605d9337845e49a09633a46c3fd66
----------------------------
"Bug#18775 - Temporary table from alter table visible to other threads The intermediate (not temporary) files of the new table during ALTER TABLE was visible for SHOW TABLES. These intermediate files are copies of the original table with the changes done by ALTER TABLE. After all the data is copied over from the original table, these files are renamed to the original tables file names. So they are not temporary files. They persist after ALTER TABLE, but just with another name. Normal GRANT checking takes place for the intermediate table. Everyone who can see the original table (and hence the final table) can also see the intermediate table. But noone else. In 5.0 the intermediate files are invisible for SHOW TABLES because all file names beginning with ""#sql"" were suppressed. In 5.1 temporary files are created in TMPDIR, so that they don't appear in the database directories. Also in 5.1 a translation between table names and file names is done. The tmp_file_prefix on file level is now ""@0023sql"". The suppression of files starting with tmp_file_prefix is still in place, but still only files beginning with ""#sql"" were suppressed. I do now translate tmp_file_prefix from table name to file name before comparing it with the files in a directory. This suppresses the intermediate files again. No test case. The test case looks so that a reasonable big table is altered while a second thread runs SHOW TABLES. This in itself would be possible to do, but on slow machines it would add too much time to the test suite, while on fast machines the ALTER TABLE might have finished before SHOW TABLES looks at the directory. Even if there might be a good balance for todays machines, one day the test would become void as the intermediate table would not be seen even with the bug in place. I added a test script to the bug report. It can easily be changed so that it uses a table size that is appropriate for the test machine. "	4c52d3ddf162b8aed2c810d4a4e714eaffdc6dae
----------------------------
don't call plugins' configure scripts manually, use AC_CONFIG_SUBDIRS don't add CFLAGS/CXXFLAGS to ./configure command line in config.status but _do_ add them before calling plugins' configure scripts 	3c609f0aa3f84cb4b443466fe1120b2c763264d3
----------------------------
"Bug#20168 ""--default-storage-engine=XXX"" doesn't work typo in the code and forgotten changes "	e6d763befe53486135716cdff440db4249fcce3f
----------------------------
Bug #20195: INSERT DELAYED with auto_increment is assigned wrong values The INSERT DELAYED should not maintain its own private auto-increment counter, because this is assuming that other threads cannot insert into the table while the INSERT DELAYED thread is inserting, which is a wrong assumption. So the start of processing of a batch of INSERT rows in the INSERT DELAYED thread must be treated as a start of a new statement and cached next_insert_id must be cleared. 	8d94b8cacf10eb89f407ff4c2311794431ad39d5
----------------------------
"Merge changes from MySQL AB: innodb_mysql.test, innodb_mysql.result: Bug #16798: Uninitialized row buffer reads in ref-or-null optimizer Bug #12882: min/max inconsistent on empty table Test of behaviour with CREATE ... SELECT Moved from group_min_max.test: Bug #12672: primary key implicitly included in every innodb index Bug #6142: a problem with empty innodb table Bug #9798: group by with rollup ChangeSet@2006/06/01 21:47:15+03:00 bell@sanja.is.com.ua #   interface for transaction log management added to handlerton #   iterators creation interface added to handlerton ha_innodb.cc: Add get_log_status = create_iterator = NULL ChangeSet@2006/06/04 18:52:22+03:00 monty@mysql.com #   This changeset is largely a handler cleanup changeset (WL#3281), #   but includes fixes and cleanups that was found necessary while #   testing the handler changes # sql/ha_innodb.h #   2006/06/04 18:52:09+03:00 monty@mysql.com +6 -13 #   Update to 'newer' table handler interface #   - table_flags are now ulonglong #   - Added reset() method #   - Removed not needed ha_retrieve_all_cols() and ha_retrieve_all_pk() #     columns. #   - Made build_template() a class function to be able to easier access #     class variables # sql/ha_innodb.cc #   2006/06/04 18:52:09+03:00 monty@mysql.com +37 -44 #   Update to 'newer' table handler interface #   - Update innobase_create_handler() to new interface #   - Removed HA_NOT_EXACT_COUNT (not needed) #   - Renamed HA_PRIMARY_KEY_ALLOW_RANDOM_ACCESS #     to HA_PRIMARY_KEY_REQUIRED_FOR_POSITION. #   - Prefixed base status variables with 'stats' #   - Use table column bitmaps instead of ha_get_bit_in_read_set() #   - Added ::reset(), with code from ::extra(HA_EXTRA_RESET) #   - Removed HA_EXTRA_RETRIVE_ALL_COLS and HA_EXTRA_RETRIEVE_PRIMARY_KEY as #     the table->read_set and table->write_set bitmaps now are accurate ChangeSet@2006/06/02 22:21:32+02:00 guilhem@mysql.com #   First push for WL#3146 ""less locking in auto_increment"". It is a #   0-real-change patch. #   New prototype for get_auto_increment() (but new arguments not yet used), #   to be able to reserve a finite interval of auto_increment values from #   cooperating engines. #   A hint on how many values to reserve is found in #   handler::estimation_rows_to_insert, #   filled by ha_start_bulk_insert(), new wrapper around start_bulk_insert(). #   NOTE: this patch changes nothing, for all engines. #   But it makes the API ready for those #   engines which will want to do reservation. #   More csets will come to complete WL#3146. ha_innodb.h, ha_innodb.cc: update to new prototype of get_auto_increment ChangeSet@2006/05/28 14:51:01+02:00 serg@sergbook.mysql.com #   handlerton cleanup: #   duplicate fields removed, st_mysql_storage_engine added to support #   run-time handlerton initialization (no compiler warnings), handler API #   is now tied to MySQL version, handlerton->plugin mapping added #   (slot-based), dummy default_hton removed, plugin-type-specific #   initialization generalized, built-in plugins are now initialized too, #   --default-storage-engine no longer needs a list of storage engines #   in handle_options(). # # sql/ha_innodb.h #   2006/05/28 14:50:53+02:00 serg@sergbook.mysql.com +1 -1 #   handlerton cleanup: remove duplicate fields, add st_mysql_storage_engine, #   initialize handlerton run-time to avoid compiler warnings # # sql/ha_innodb.cc #   2006/05/28 14:50:53+02:00 serg@sergbook.mysql.com +37 -52 #   handlerton cleanup: remove duplicate fields, add st_mysql_storage_engine, #   initialize handlerton run-time to avoid compiler warnings ChangeSet@2006/06/01 23:59:34+02:00 serg@serg.mylan #   second patch for make distcheck ha_innodb.cc: enclose in #ifdef WITH_INNOBASE_STORAGE_ENGINE / #endif "	1ed1ede9ea60681b301fc7c808659a63ee6a0f46
----------------------------
"Bug#20168 ""Change in behavior --default-storage-engine=ndb or ndbcluster"" Reduce use of legacy_db_type, some code cleanup (serg read my mind and implemented desired mysqld.cc changes) "	62729fcdfe5d46b6c6b1af11fb376bb49be022c1
----------------------------
Bug #16206: Superfluous COMMIT event in binlog when updating BDB in autocommit mode This is a modification of serg's and guilhem's suggestion in the bug report, in that it also causes the transaction log to be written to disc. 	7b63337d312480c020a5b54a36b76a5cb8059659
----------------------------
Bug#19517 No simple way to detect wether server was compiled with libdbug - Define DBUG_ON and DBUG_OFF in config.h 	4ca95f911a5e5c74bb3fcb1141d1ddd065aa9ed0
----------------------------
Add comment about when ndbcluster tables are removed from mysqld datadir 	c7bedca12f84008cedc6249d452010d32d1abadc
----------------------------
Bug #13266 Online adding of MySQLD causes cluster to crash - check node type, if configuration has not bee updated, type will be undefined, and conenction will be refused 	5af1d8de07f9e6673fcd40f7298205f952f13e3b
----------------------------
BUG#12982 - LOAD DATA fails without any error for big files with big read buffer Setting read buffer to values greater than SSIZE_MAX results in unexpected behavior. According to read(2) manual: If count is greater than SSIZE_MAX, the result is unspecified. Set upper limit for read_buffer_size and read_rnd_buffer_size to SSIZE_MAX. 	036f947be7caf20a22b52b6d3b8a66f2411f24e9
----------------------------
Fix for bug #6880: LAST_INSERT_ID() within a statement 	0bdae38efbf4696739e116c8fcc1f876b3ecc7fc
----------------------------
"Re-apply missing changeset, orignally pushed by elliot Add define YASSL_PREFIX when compiling yassl Import patch from yaSSL - avoid allocating memory for each call to 'EVP_md5' and 'EVP_des_ede3_cbc' which were not released until server was stopped - Those functions are used from the SQL function 'des_encrypt' and 'des_decrypt'. Add new define YASSL_PREFIX beforee including ssl.h to activate inclusion of prefix_*.h files Bug#20022 mysql-test-run can't be run with secure connections turned on for all testcases - Part 1, fixes rpl- and federated-tests where connection is made to 127.0.0.1 - Include prefix files that renames all public functions in yaSSLs OpenSSL API to ya<function_name>. They will otherwise conflict with OpenSSL functions if loaded by an application that uses OpenSSL as well as libmysqlclient with yaSSL support. Bug#18235: assertion/crash when windows mysqld is ended with ctrl-c Two threads both try a shutdown sequence which creates a race to the de-init/free of certain resources. This exists in similar form in the client as 17926: ""mysql.exe crashes when ctrl-c is pressed in windows."" Update after merge to 5.0 BUG#18669: Session COM_STATISTICS breaks mysqladmin status. Changed COM_STATISTICS to display the global status, instead of thead status, for slow queries and table opens. - In function 'handle_grant_struct' when searching the memory structures for an entry to modify, convert all entries here host.hostname is NULL to """" and compare that with the host passed in argument ""user_from"". - A user created with hostname """" is stored in ""mysql.user"" table as host="""" but when loaded into memory it'll be stored as host.hostname NULL. Specifiying """" as hostname means that ""any host"" can connect. Thus is's correct to turn on allow_all_hosts when such a user is found. - Review and fix other places where host.hostname may be NULL. BUG#19394 OPT_INNODB_THREAD_CONCURRENCY duplicated Removed duplication (not a user-visible change) "	e50412ef38a722271b6d12be14ff517bf3310162
----------------------------
Bug#17661 information_schema.SCHEMATA returns uppercase with lower_case_table_names = 1 fix: return db name for I_S.TABLES(and others) in original letter case. if mysql starts with lower_case_table_names=1 | 2 then original db name is converted to lower case(for I_S tables). It happens when we perform add_table_to_list. to avoid this we make a copy of original db name and use the copy hereafter. 	03d8717ac8d0d2638df76a51228050ad79a17ec8
----------------------------
unittest: rename *.t* to *-t* to be automake-friendly simplify Makefiles test_atomic.c: move to unittest, add GPL comment, fix warnings, convert to tap framework. configure: remove custom tests for available types, use AC_CHECK_TYPE instead x86-gcc.h: fix gcc -ansi errors while maintaining readability ignore: added *-t 	5409997d49a8c228f1a6a2c029572fcf1f221caf
----------------------------
"Applied innodb-5.1-ss594 snapshot. Fixed BUG#19542 ""InnoDB doesn't increase the Handler_read_prev couter"". Fixed BUG#19609 ""Case sensitivity of innodb_data_file_path gives stupid error"". Fixed BUG#19727 ""InnoDB crashed server and crashed tables are ot recoverable"". Also: * Remove remnants of the obsolete concept of memoryfixing tables and indexes. * Remove unused dict_table_LRU_trim(). * Remove unused 'trx' parameter from dict_table_get_on_id_low(), dict_table_get(), dict_table_get_and_increment_handle_count(). * Add a normal linked list implementation. * Add a work queue implementation. * Add 'level' parameter to mutex_create() and rw_lock_create(). Remove mutex_set_level() and rw_lock_set_level(). * Rename SYNC_LEVEL_NONE to SYNC_LEVEL_VARYING. * Add support for bound ids in InnoDB's parser. * Define UNIV_BTR_DEBUG for enabling consistency checks of FIL_PAGE_NEXT and FIL_PAGE_PREV when accessing sibling pages of B-tree indexes. btr_validate_level(): Check the validity of the doubly linked list formed by FIL_PAGE_NEXT and FIL_PAGE_PREV. * Adapt InnoDB to the new tablename to filename encoding in MySQL 5.1. ut_print_name(), ut_print_name1(): Add parameter 'table_id' for distinguishing names of tables from other identifiers. New: innobase_convert_from_table_id(), innobase_convert_from_id(), innobase_convert_from_filename(), innobase_get_charset. dict_accept(), dict_scan_id(), dict_scan_col(), dict_scan_table_name(), dict_skip_word(), dict_create_foreign_constraints_low(): Add parameter 'cs' so that isspace() can be replaced with my_isspace(), whose operation depends on the connection character set. dict_scan_id(): Convert identifier to UTF-8. dict_str_starts_with_keyword(): New extern function, to replace dict_accept() in row_search_for_mysql(). mysql_get_identifier_quote_char(): Replaced with innobase_print_identifier(). ha_innobase::create(): Remove the thd->convert_strin() call. Pass the statement to InnoDB in the connection character set and let InnoDB convert the identifier to UTF-8. * Add max_row_size to dict_table_t. * btr0cur.c btr_copy_externally_stored_field(): Only set the 'offset' variable when needed. * buf0buf.c buf_page_io_complete(): Write to the error log if the page number or the space id o the disk do not match those in memory. Also write to the error log if a page was read from the doublewrite buffer. The doublewrite buffer should be only read by the lower-level function fil_io() at database startup. * dict0dict.c dict_scan_table_name(): Remove fallback to differently encoded name when the table is not found. The encoding is handled at a higher level. * ha_innodb.cc Increment statistic counter in ha_innobase::index_prev() (bug 19542). Add innobase_convert_string wrapper function and a new file ha_prototypes.h. innobase_print_identifier(): Remove TODO comment before calling get_quote_char_for_identifier(). That function apparently assumes the identifier to be encoded in UTF-8. * ibuf0ibuf.c|h ibuf_count_get(), ibuf_counts[], ibuf_count_inited(): Define these only #ifdef UNIV_IBUF_DEBUG. Previously, when compiled without UNIV_IBUF_DEBUG, invoking ibuf_count_get() would crash InnoDB. The function is only being called #ifdef UNIV_IBUF_DEBUG. * innodb.result Adjust the results for changes in the foreign key error messages. * mem0mem.c|h New: mem_heap_dup(), mem_heap_printf(), mem_heap_cat(). * os0file.c Check the page trailers also after writing to disk. This improves chances of diagnosing bug 18886. os_file_check_page_trailers(): New function for checking that the two copies of the LSN stamped on the page match. os_aio_simulated_handle(): Call os_file_check_page_trailers() before and after os_file_write(). * row0mysql.c Move trx_commit_for_mysql(trx) calls before calls to row_mysql_unlock_data_dictionary(trx) (bug 19727). * row0sel.c row_fetch_print(): Handle SQL NULL values without crashing. row_sel_store_mysql_rec(): Remove useless call to rec_get_nth_field when handling an externally stored column. Fetch externally stored fields when using InnoDB's internal SQL parser. Optimize BLOB selects by using prebuilt->blob_heap directly instead of first reading BLOB data to a temporary heap and then copying it to prebuilt->blob_heap. * srv0srv.c srv_master_thread(): Remove unreachable code. * srv0start.c srv_parse_data_file_paths_and_sizes(): Accept lower-case 'm' and 'g' as abbreviations of megabyte and gigabyte (bug 19609). srv_parse_megabytes(): New fuction. * ut0dbg.c|h Implement InnoDB assertions (ut_a and ut_error) with abort() when the code is compiled with GCC 3 or later on other platforms than Windows or Netware. Also disable the variable ut_dbg_stop_threads and the function ut_dbg_stop_thread() i this case, unless UNIV_SYC_DEBUG is defined. This should allow the compiler to generate more compact code for assertions. * ut0list.c|h Add ib_list_create_heap(). "	1d7de700e222fe061b408e3cc6cb9c9f6646df50
----------------------------
Bug#14157: utf8 encoding in binlog without set character_set_client adapting to pushbuild's custom to switch from default pathes. The name for var directory must be set with MYSQLTEST_VARDIR. 	5d8d38ee4c0bb7232fffd1a9dfac08d70788d409
----------------------------
BUG#14157: utf8 encoding in binlog without set character_set_client missed table to drop after merge from 4.1 	e9570047a47e1a4cc87eb1162a470b0328b6e45d
----------------------------
"Bug#12096 ""Add line for non-executable stack in .s files"" Fix so that configure will use ""--noexecstack"" for assembler if gcc supports option and compiled C doesn't need executable stack. "	23e612ae11d8b88e8616871d967d1442c44e188b
----------------------------
"Bug#17204 ""second CALL to procedure crashes Server"" Bug#18282 ""INFORMATION_SCHEMA.TABLES provides inconsistent info about invalid views"" This bug caused crashes or resulted in wrong data being returned when one tried to obtain information from I_S tables about views using stored functions. It was caused by the fact that we were using LEX representing statement which were doing select from I_S tables as active LEX when contents of I_S table were built. So state of this LEX both affected and was affected by open_tables() calls which happened during this process. This resulted in wrong behavior and in violations of some of invariants which caused crashes. This fix tries to solve this problem by properly saving/resetting and restoring part of LEX which affects and is affected by the process of opening tables and views in get_all_tables() routine. To simplify things we separated this part of LEX in a new class and made LEX its descendant. "	ae72df07f28ee476559d7dbf6ebcc60f85ce4faa
----------------------------
BUG#14157: utf8 encoding in binlog without set character_set_client refining the test case to exclude problems with koi8r on some platforms. 	6119b7136e55348ba88ce20ca3db4d3d64115d55
----------------------------
handlerton cleanup: duplicate fields removed, st_mysql_storage_engine added to support run-time handlerton initialization (no compiler warnings), handler API is now tied to MySQL version, handlerton->plugin mapping added (slot-based), dummy default_hton removed, plugin-type-specific initialization generalized, built-in plugins are now initialized too, --default-storage-engine no longer needs a list of storage engines in handle_options(). mysql-test-run.pl bugfixes 	fe97dbb5879cbb143ee288350ca86d618889731f
----------------------------
BUG#15868 InnoDB thread thrashing Restoring default innodb_thread_concurrency to 8 This default now matches 5.0 	9ab5929eba8d320707ed6ece1930f702dabf84ba
----------------------------
configure.in: Update NDB version as well 	7ffc78668691bc9d45f7ca756a82e4ed57f78b42
----------------------------
configure.in: Stepped up to 5.0.23 	22a52ede3f04cc02736996d0c06f76a6b1f3cd69
----------------------------
configure.in: Stepped up to 4.1.22 	eb627531f3eb71b47507418976472859046cc28e
----------------------------
configure.in: Changed version to 5.0.22 	0b10712033b3f9ba607d0e4cb0301214a9bdcb15
----------------------------
Fix events_logs_tests so it won't fail on Windows due to appearance of hostname in query results. 	dd816425947f7fa74acaddd7eed2778f74ffc496
----------------------------
configure.in: Updated release number 4.1.16a 	3be04952990c90654d9ad180f92819dd2e2a98f1
----------------------------
configure.in: Changed version to 5.0.17c 	5095d77f00943b6d401df4c41c21ae965b477b09
----------------------------
event_scheduler.h, event_scheduler.cc: Rename load_event() to load_named_event(), to avoid name clash on HP-UX 	ade3de74d796f6ba7ce0db6aab0a4d39cc69967c
----------------------------
Make wait_timeout test not timing dependent 	9580c05ccc09ec2a15c3e884ad933b5620e056b0
----------------------------
"Bug #18742: Test 'group_min_max' fails if ""classic"" configuration in 5.0 Moved the InnoDB related tests to innodb_mysql "	d81a8437e4c279fb8212b8bbe5300a0e11d877a5
----------------------------
"Bug#16297 In memory grant tables not flushed when users's hostname is """" - In function 'handle_grant_struct' when searching the memory structures for an entry to modify, convert all entries here host.hostname is NULL to """" and compare that with the host passed in argument ""user_from"". - A user created with hostname """" is stored in ""mysql.user"" table as host="""" but when loaded into memory it'll be stored as host.hostname NULL. Specifiying """" as hostname means that ""any host"" can connect. Thus is's correct to turn on allow_all_hosts when such a user is found. - Review and fix other places where host.hostname may be NULL. "	7b2e709fb725e27161f7dec615af3a9205f8631c
----------------------------
Bug#20002 Old --with-openssl and --with-yassl options just silently ignored - Terminate configure with error(and message) if --with-yassl or --with-openssl is used. 	5df9964651f7027178b16a2cd45e6084ffeeb690
----------------------------
fix for bug #17619 Scheduler race conditions - Scheduler is either initialized at server start or never. Starting & stopping is now suspending & resuming. - The scheduler has clear OO interface - Now all calls to the scheduler are synchronous - GLOBAL event_scheduler uses thd::sys_var_tmp (see set_var.cc) - External API is encapsulated into class Events - Includes fixes for all comments of Kostja's review of 19.05.2005 Starting to merge into 5.1-release (5.1.10) and push 	b429d73d62791d05a6448135c78beb8966008888
----------------------------
Bug #20004: log_tables fails on Windows due to output differences This test included hostname information in the output, which varies between platforms. 	a995439b128ddf553f29efc6f11fbded974dd3d7
----------------------------
"Bug#18745: Test case 'func_group' fails if ""classic"" 5.0 configuration Moved the InnoDB related test from func_group.test to innodb_mysql.test "	b357c232fc36356908efe9cdcec62b3ffb28309c
----------------------------
#14157: utf8 encoding in binlog without set character_set_client fixing an issue with the test portability. 	4d512f3854ffeebba246d6b3995cc91e84cb907d
----------------------------
This is an implementation of two WL items: - WL#3158: IM: Instance configuration extensions; - WL#3159: IM: --bootstrap and --start-default-instance modes The following new statements have been added: - CREATE INSTANCE; - DROP INSTANCE; The behaviour of the following statements have been changed: - SET; - UNSET; - FLUSH INSTANCES; - SHOW INSTANCES; - SHOW INSTANCE OPTIONS; 	c1113af15c2d2ebeea50487c94b3078855f48d6b
----------------------------
"Include ""config.h"" (if it exists) in all yaSSL files via their ""runtime.hpp"". Fixes bug#19040 ""yaSSL does not compile on AIX"". "	93d1c2b307e897bf5a092905e9e4293e24ab1ba2
----------------------------
BUG#18818 configure: No longer finds OpenSSL on Mac OS X - Implement new switch --with-ssl to configure used for both bundled yaSSL or OpenSSL 	f4567f9f922ab8eacc6bd849700afacc45ccc0a8
----------------------------
mysql.spec.sh: Removed Berkeley DB configure.in: Adjusted Netware support basic.t.c: Change for Netware Makefile.am: Use thread safe libmysqlclient_r if it was built valgrind.supp: Hide report about strlen/_dl_init_paths ha_tina.cc: Temporarely disable CSV engine on Netware, as the engine depends on mmap() net_serv.cc: Include <sys/select.h> for Netware 	9fca0d766b3a35b9ac930546dc691b5ed9338b7f
----------------------------
BUG#14157: utf8 encoding in binlog without set character_set_client: e.g DROP temporary fixing encoding example because of table names can not be in koi8r on some platforms. 	713d17d5e7a8e496cc4a1596ae22bfe55951d18f
----------------------------
BUG#14157: utf8 encoding in binlog without set character_set_client: e.g DROP temporary specific to 5.0 version of the patch is motivated by the fact that a wrapper over MYSQLLOG::write can not help in 5.0 where query's charset is embedded into event instance in the constructor. 	061ed857eb2a51d6415e8f649f3877858795ccf3
----------------------------
"Applied innodb-5.0-ss547 snapshot. Fix BUG#19542 ""InnoDB doesn't increase the Handler_read_prev counter"". "	f7482324379e40d333bdb4c0f55404f4b36dea5e
----------------------------
"Applied innodb-4.1-ss29 snapshot. Fix BUG#19542 ""InnoDB doesn't increase the Handler_read_prev counter. "	9595317cfa1d7f557dc6d3b3a4718985eb2d2758
----------------------------
BUG#14157: utf8 encoding in binlog without set character_set_client fixing names length. Got an issue when merged to 5.0, decided to fix starting from 4.1 	ab440799e11214db18237e7c9d183c92ef985d60
----------------------------
bug 15430 (init_connect test fails with the embedded server) mysqltest program should be really multithreaded to perform this test with the embedded server. So this test disabled until we redo mysqltest this way 	b457eaba71a737fa49cd819969aadbc1032e306b
----------------------------
bug #15435 (wait_timeout.test fails with the embedded server) this test just can't work in the embedded server 	447e9f019f5fb50c3e3ead3632ce2304e3de58f4
----------------------------
BUG#14157: utf8 encoding in binlog without set character_set_client fixing a path to find charset by $MYSQL client. I believe the fix is done what should be by default. 	27696712ef064206201be0dba59a6871f69ebe77
----------------------------
Bug#18818 configure: No longer finds OpenSSL on Mac OS X - Remove usage of $shrext_cmds variable - Test for libs using all known library file endings 	0472f7eb44cfef144ddabea16f1b615a830ecbcb
----------------------------
Bug#18818 configure: No longer finds OpenSSL on Mac OS X - Remove usage of $shrext_cmds variable - Test for libs using all known library file endings 	302eb27a59751cf3bc1dc68888bb603f65308261
----------------------------
configure.in: Stepped up to 4.0.28 	39516f3886a9eb25c62087a52d3f35c78e3e87d5
----------------------------
Bug #6061 mysql-log-rotate script - error logging doesn't use new file - Fix mysqld_safe so that it always passes correct --log-error argument to mysqld - A few other minor clean-ups to mysqld_safe 	bc89c92c3779948968f058c46ea8ec98117f50d1
----------------------------
"Several ""unittest"" files  :  Ensure that the configure result is used when compiling them. "	e11c7eb0719721a4b436f79fda3aca9da0e62b52
----------------------------
BUG#14157: utf8 encoding in binlog without set character_set_client e.g DROP temporary Binlog lacks encoding info about DROPped temporary table. Idea of the fix is to switch temporary to system_charset_info when a temporary table is DROPped for binlog. Since that is the server, that automatically, but not the client, who generates the query the binlog should be updated on the server's encoding for the coming DROP. The `write_binlog_with_system_charset()' is introduced to replace similar problematic places in the code. 	226d978ae8ff54ec45b5f00dd84cafc1f0c90246
----------------------------
Bug #1039: tmpdir and datadir not available via @@ system variable syntax Bug #19606: ssl variables are not displayed in show variables Bug #19616: log_queries_not_using_indexes  is not listed in show variables Make basedir, datadir, tmpdir, log_queries_not_using_indexes, ssl_ca, ssl_capath, ssl_cert, ssl_cipher, and ssl_key all available both from SHOW VARIABLES and as @@variables. As a side-effect of this change, log_queries_not_using_indexes can be changed at runtime (but only globally, not per-connection). 	ebe38efaa6feaff5dd7f1e5dfb8dbd6cbf253c29
----------------------------
configure.in  :    Now that 5.1.10 has been cloned, bump up the version. 	7ace714142a286a3c2a80909fccbf68f71fa28b7
----------------------------
Bug#19136: Crashing log-bin and uninitialized user variables in a derived table recalculating results 	49bc52e5c9e348a01960a133884ad381a0636c36
----------------------------
auto-set MYSQL_PLUGIN_DIRECTORY for plug.in files 	549fe7c8508c973cc78c1be7b6ec6c507a9862ae
----------------------------
Partial fix for BUG#14106: IM: im_life_cycle and im_utils tests fail on FreeBSD. The patch contains of the following: - make Instance Manager, running in the daemon mode, dump the pid of angel-process in the special file; - default value of angel-pid-file-name is 'mysqlmanager.angel.pid'; - if ordinary (IM) pid-file-name is specified in the configuration, angel-pid-file-name is updated according to the following rule: extension of the basename of pid-file-name is replaced by '.angel.pid. For example: - pid-file-name: /tmp/im.pid => angel-pid-file-name: /tmp/im.angel.pid - pid-file-name: /tmp/im.txt => angel-pid-file-name: /tmp/im.angel.pid - pid-file-name: /tmp/5.0/im => angel-pid-file-name: /tmp/5.0/im.angel.pid - add support for configuration option to customize angel pid file name; - fix test suite to use angel pid to kill Instance Manager by all means if something went wrong. Background ---------- The problem is that on some OSes (FreeBSD for one) Instance Manager does not get SIGTERM, so can not shutdown gracefully. Test suite wasn't able to cope with it, so this leads to the mess in test results. The problem should be split into two: - fix signal handling; - fix test suite. This patch fixes test suite so that it will be able to kill uncooperative Instance Manager. In order to achieve this, test suite needs to know PID of IM Angel process. 	3b74668bfaf7f5a8043a95efb5d43b3a150b74e4
----------------------------
Bug #19492 --binlog-do-db option cuases tables create issues for ndb master - ndb system tables not created because of filter, moved chack of filter 	6a48847b1a1b8beb694ee4bb1321828e6f7d849e
----------------------------
Bug#19136: Crashing log-bin and uninitialized user variables in a derived table The reason of the bug is in that `get_var_with_binlog' performs missed assingment of the variables as side-effect. Doing that it eventually calls `free_underlaid_joins' to pass as an argument `thd->lex->select_lex' of the lex which belongs to the user query, not to one which is emulated i.e SET @var1:=NULL. `get_var_with_binlog' is refined to supply a temporary lex to sql_set_variables's stack. 	8c57924a6a45530b2cdcdb96031c16f3ee5ffc7c
----------------------------
auto-include plug.in, remove the need for plugins to modify configure.in 	376117eb988bf3ac33782c372a3c666b242b7321
----------------------------
cleanup - don't test in configure what belongs to m4 	17b46953cafd4fa730a377bd25f212d5827d6b0f
----------------------------
"Bug#19536 ""NDB replication fails when no explicit--binlog-format given"" fix initialization, storage engine initialization must occur after logging type is configured "	1a5c828cf205066220f21f4fd7d39806dc3d4ad7
----------------------------
"Fixed Bug#11324: TIME_FORMAT using ""%l:%i"" returns 36:00 with 24:00:00 in TIME column "	06d6b7472be3eb2a37719018349829daef672acd
----------------------------
Fixed compiler warnings Move plugin declarations after system functions have been checked (Fixes problem with ndb_config failing becasue SHM is not declared) Fixed some memory leaks 	c10f37673cb4f28778ee6d2298270d704289735c
----------------------------
"Bugs#17647: Trouble with ""create database"" Problem: if a user was granted privileges on database ""d1"", it also was able to act on ""D1"" (i.e. in upper case), even on Unix with case sensitive file system. Fix: Initialize grant hash to use binary comparison if lower_case_file_system is not set (on most unixes), and case insensitive comparison otherwise (Windows, MacOSX). "	51eec5cf9b888a020918440e79cb458eb7cdc2d4
----------------------------
fix legacy configure option handling 	16d8d6bcca2fe667baf7bb8bb249a59e353b504e
----------------------------
sql_parse.cc: buffer overflow and information exposure bugs fixed (reported by Stefano Di Paola) configure.in: Changed version to 5.0.17b 	5236782b4bc0abd300cd7c74bb8ac1a93c4839be
----------------------------
"config-win.h: Fix strange ""double"" define for popen. Avoid warnings about sprintf() etc. being unsafe. Corrected typo ""#endfif"" "	5e717959d0198ed96cfa2d594509629ae0afcedb
----------------------------
configure.in: Changed version to 4.1.20 	a14f1250d6523e71c569c7198ed39cf271b9c7d6
----------------------------
BUG#19394 OPT_INNODB_THREAD_CONCURRENCY duplicated Removed duplication (not a user-visible change) 	f6aad253ab289040c6130172135f521509cf973d
----------------------------
Bug#18818 configure: No longer finds OpenSSL on Mac OS X - Eval shrext_cmds variable before using it - Moved from acinclude.m4 to openssl.m4 and zlib.m4 when merging 4.1 -> 5.0 	50c920ffab6818336c5cb44067462c1a2f855407
----------------------------
sql_mode.test: BUG#14765: Modified test file. sql_mode.result: BUG#14765: Modified result file. 	545f05020b060a5699a78d551fa693a7d05ed65d
----------------------------
configure.in: Recloning, set back to 5.0.21 	97cf31a6a88778ceb000632316dbbd1180fd26dc
----------------------------
Bug #17849: sql_big_selects not shown in SHOW VARIABLES output This patch simply adds sql_big_selects to the list of variables output by SHOW VARIABLES. 	960c5621ebe7bd581a959146e1580158c816309f
----------------------------
The fix for bug#17248 accidentally removed the sync_binlog variable. This patch restores sync_binlog. 	d96fbd738d9108332d376ee80ba38688229687be
----------------------------
Add ndb_config to rpm spec 	a8f407a7ef471a48e110c04acb4419d0ae5ca49a
----------------------------
configure.in: clone-off for 5.0.21 	92825f3ada442195bf2a1645c2f8b177ed98a5c9
----------------------------
BUG#19340 small leak in ndbd small cleanup fixes in kernel/vm/Configuration 	ebbff7ee3f36161ddbccb7cc437c0690fa99e0eb
----------------------------
BUG#19318 valgrind: memory leak in ndb_mgmd now deal with memory correctly during ConfigInfo construction (due to previous changes) 	454cea637783ab2686799ded84d4893025f20159
----------------------------
BUG#19318 valgrind: memory leak in ndb_mgmd clean up after ConfigValuesFactory 	518100f0b2c79b415158202dd9c070dd7f7fc4d6
----------------------------
Bug#17263 temporary tables and replication The fix refines the algorithm of generating DROPs for binlog. Temp tables with common pseudo_thread_id are clustered into one query. Consequently one replication event per pseudo_thread_id is generated. 	b56d36dd3040ed03a47ac6019861ded5111b3b9b
----------------------------
Bug#17263 temporary tables and replication Backporting a changeset made for 5.0. Comments from there: The fix refines the algorithm of generating DROPs for binlog. Temp tables with common pseudo_thread_id are clustered into one query. Consequently one replication event per pseudo_thread_id is generated. 	a4ff3120370f300ff11ce45ec3000cc6b28fbd31
----------------------------
"Applied innodb-5.1-ss475 snapshot. * Fix BUG#15650: ""DELETE with LEFT JOIN crashes server with innodb_locks_unsafe_for binlog"" * Fix BUG#17134: ""Partitions: uncommitted changes are visible"" * Fix BUG#17992: ""Partitions: InnoDB, somehow rotten table after UPDATE"" row0ins.c: MySQL's partitioned table code does not set preduilt->sql_stat_start right if it does an insert in the same statement after doing a search first in the same partition table. We now write trx id always to the buffer, not just when flag sql_stat_start is on. This will waste CPU time very sightly. * Fix BUG#18077: ""InnoDB uses full explicit table locks in stored FUNCTION"" * Fix BUG#18238: ""When locks exhaust the buffer pool, InnoDB does not roll back the trx"" * Fix BUG#18252"" ""Disk space leak in updates of InnoDB BLOB rows in 5.0 and 5.1"" * Fix BUG#18283: ""When InnoDB returns error 'lock table full', MySQL can write to binlog too much"" * Fix BUG#18350: ""Use consistent read in CREATE ... SELECT ... if innodb_locks_unsafe_for_binlog"" * Fix BUG#18384: ""InnoDB memory leak on duplicate key errors in 5.0 if row has many columns"" * Fix BUG#18934: ""InnoDB crashes when table uses column names like DB_ROW_ID"" Refuse tables that use reserved column names. * InnoDB's SQL parser: - Add support for UNSIGNED types, EXIT keyword, quoted identifiers, user-function callbacks for processing results of FETCH statements, bound literals, DATA_VARCHAR for bound literals. - Allow bound literals of type non-INTEGER to be of length 0. - Add make_flex.sh and update lexer/parser generation documentation. - Add comment clarifying the difference between 'alias' and 'indirection' fields in sym_node_t. - Remove never reached duplicate code in pars_set_dfield_type(). - Rewrite pars_info datatypes and APIs, add a few helper functions. - Since the functions definitions in pars_info_t are accessed after pars_sql() returns in the query graph execution stage, we can't free pars_info_t in pars_sql(). Instead, make pars_sql() transfer ownership of pars_info_t to the created query graph, and make que_graph_free() free it if needed. - Allow access to system columns like DB_ROW_ID. * Use bound literals in row_truncate_table_for_mysql, row_drop_table_for_mysql, row_discard_tablespace_for_mysql, and row_rename_table_for_mysql. * Setting an isolation level of the transaction to read committed weakens the locks for this session similarly like the option innodb_locks_unsafe_for binlog. This patch removes alnost all gap locking (used in next-key locking) and makes MySQL to release the row locks on the rows which does not belong to result set. Additionally, nonlocking selects on INSERT INTO SELECT, UPDATE ... (SELECT ...), and CREATE ... SELECT ... use a nonlocking consistent read. If a binlog is used, then binlog format should be set to row based binloging to make the execution of the complex SQL statements. * Disable the statistic variables btr_search_n_hash_fail and n_hash_succ, n_hash_fail, n_patt_succ, and n_searches of btr_search_t in builds without #ifdef UNIV_SEARCH_PERF_STAT. * Make innodb.test faster. Group all consistent read test cases to a one test case and wait their lock timeout after all have been send to the server. Decrease amount of rows inserted in a certain test - this has no effect on the effectiveness of the test and reduces the running time by ~10 sec. Remove temporary work-arounds from innodb.result now that ALTER TABLE DROP FOREIGN KEY works once again. * Make innodb_unsafe_binlog.test faster. Grout all consistent read test cases to a one test case amd wait their lock timeout after all have been sent to the server. Remove unnecessary option --loose_innodb_lock_wait_timeout. * Print dictionary memory size in SHOW INNODB STATUS. * Fix memory leaks in row_create_table_for_mysql() in rare corner cases. * Remove code related to clustered tables. They were never implemented, and the implementation would be challenging with ROW_FORMAT=COMPACT. Remove the table types DICT_TABLE_CLUSTER_MEMBER and DICT_TABLE_CLUSTER and all related tests and functions. dict_table_t: Remove mix_id, mix_len, mix_id_len, mix_id_buf, and cluster_name. plan_t: Remove mixed_index. dict_create_sys_tables_tuple(): Set MIX_ID=0, MIX_LEN=0, CLUSTER_NAME=NULL when inserting into SYS_TABLES. dict_tree_check_search_tuple(): Enclose in #ifdef UNIV_DEBUG. * Move calling of thr_local_free() from trx_free_for_mysql() to innobase_close_connection(). "	780f80be16315871a2600d1f94c92c6a368d3fc4
----------------------------
Backport fix for mysql client not using SSl library directly - Add function mysql_get_ssl_cipher - Use function mysql_get_ssl_cipher from mysql 	29ace143a1cad2ef38d29816b8c3ff17632c298c
----------------------------
"innodb_unsafe_binlog-master.opt: Make InnoDB option ""loose"", as the server might be started with this option just to find out the test is to be skipped in the configuration (bug#17359) "	806564d75440f4f9bb22aae6320822733b21fcd3
----------------------------
Bug#15728: LAST_INSERT_ID function inside a stored function returns 0 Do not reset value of LAST_INSERT_ID() in sub-statement. 	b0c1e49a119654f4701427f8b13e9643f7633f79
----------------------------
Bug #17230 Can't change character-sets-dir for ndbd 	f071779791d2bae55a03a6f2e158907a1f40ae5e
----------------------------
Bug #12792: @@system_time_zone is not SELECTable Bug #15684: @@version_* are not all SELECTable Added the appropriate information as read-only system variables, and also removed some special-case handling of @@version along the way. @@version_bdb was added, but isn't included in the test because it depends on the presence of BDB. 	ec00b92f48b9ed02731ad37f51477d6c8cb1f277
----------------------------
Bug #16195: SHOW VARIABLES doesn't report correctly sql_warnings and sql_notes values SQL_WARNINGS and SQL_NOTES were being displayed with SHOW_BOOL, but they are system variables that need SHOW_SYS to be used. 	4d392fb9f4a2cb50fb72393cb0f1512d515f05f5
----------------------------
Bug#18818 configure: No longer finds OpenSSL on Mac OS X - Eval shrext_cmds variable before using it 	231936a43c325f277169f4ed9d9dd1fad505d7ff
----------------------------
WL 2826: Error handling of ALTER TABLE for partitioning Moved error inject from being flags to compiler to being part of config.h Also error inject only defined if debug is also defined +Small fixes 	22ed19e43434f8d9aaf9e76095f39d370d53be97
----------------------------
Fixed bug #19079. The bug caused a reported index corruption in the cases when key_cache_block_size was not a multiple of myisam_block_size, e.g. when key_cache_block_size=1536 while myisam_block_size=1024. 	950214abfcec209b1683b9f769172e5878be05c4
----------------------------
"Bug#17208 SSL: client does not verify server certificate - Add new function 'ssl_verify_server_cert' which is used if we are connecting to the server with SSL. It will compare the hostname in the server's cert against the hostname that we used when connecting to the server. Will reject the connection if hostname does not match. - Add new option ""OPT_SSL_VERIFY_SERVER_CERT"" to be passed to mysql_options which will turn on checking of servers cert. - Add new argument ""ssl-verify-server-cert"" to all mysql* clients which will activate the above option. - Generate a new server cert with 1024 bits that has ""localhost"" as the server name. "	a51668c74c498e3e5702342fe5ced68afbee0756
----------------------------
configure.in: Stepped up version to 5.0.20a 	8c420e29eb5fc92089c787c245a14407f8e1ca61
----------------------------
"Fixing a merge from a few days ago. Without a flush this test is nondeterministic for ""row"" binlog-format. "	61552172df1c42d02e46e637fac5ad25cd47f6ce
----------------------------
"WL#3201 "" Configure support for server plugins "" "	4e11a4d94199c710b0c7d0bf547157c14c480f19
----------------------------
"Bug#18837 Many build and test failures when configuring without --disable-shared Build ""NOINST"" tools with -static flag to avoid  any ld problems when using them "	f3373899e2e077f7ad5fb2e07a3581eb4a0cf960
----------------------------
Post-merge fixes. Add a new error message for max_prepared_stmt_count limit. 	c49e6f8869c150dfebc3b181cdeb8394ad81db5b
----------------------------
In test for bug#15933 we have to wait for all disconnects to finish to avoid a race between updating and checking Max_used_connections.  This is done in a loop until either disconnect finished or timeout expired.  In a latter case the test will fail. 	4a81c0dfb91cc7f768b15a47ab0b1f9dfdf1a4a1
----------------------------
"Bug#18564  Test failure due to test not checking preconditions - Add variable ""have_dynamic_loading"" and use it to check if the udf test should be run. "	9cdd78078e0434cca3eb20d1d9612a3f1c38abb6
----------------------------
Add 'mysql_get_ssl_cipher' list of functions to export from libmysqld 	c1e9bb8dead0cd3a9394ff93a3c1b5fb3442f515
----------------------------
"Bug#15069 [patch] my_print_defaults does'nt care --sysconfdir - Grab the path from ""configure --sysconfdir=<path>"" and set it as the first place to look for my.cnf files Do this both in Makefiles for libmysql and mysys - Patch provided by Francesco Riosa. Thank you! "	475e1f6a53ca97faf880f6ac861fc390b144ace0
----------------------------
Update implementation of new function 'mysql_get_ssl_cipher' after review 	24a6dd64b557b39116a24f870bb5bffd2c287020
----------------------------
plugin/fulltext/configure.in no sense in building static library version of a plugin plugin/fulltext/plugin_example.c comments clarified. everything local to a plugin was declared static 	c17d3a5148c6744005e83b480d062edbcc4f8fbe
----------------------------
"A fix and a test case for Bug#16365 ""Prepared Statements: DoS with too many open statements"". The patch adds a new global variable @@max_prepared_stmt_count. This variable limits the total number of prepared statements in the server. The default value of @@max_prepared_stmt_count is 16382. 16382 small statements (a select against 3 tables with GROUP, ORDER and LIMIT) consume 100MB of RAM. Once this limit has been reached, the server will refuse to prepare a new statement and return ER_UNKNOWN_ERROR (unfortunately, we can't add new errors to 4.1 without breaking 5.0). The limit is changeable after startup and can accept any value from 0 to 1 million. In case the new value of the limit is less than the current statement count, no new statements can be added, while the old still can be used. Additionally, the current count of prepared statements is now available through a global read-only variable @@prepared_stmt_count. "	518993312cb8f28ba8395e7ca140801c1fb96eca
----------------------------
Bug#17284 erroneous temp table cleanup on slave. Idea of the fix is for master to send FD event with `created' as 0 to reconnecting slave (upon slave_net_timeout, no master crash) to avoid destroying temp tables. In a case of a connect by slave to the master after its crash temp tables have been already cleaned up so that slave can not keep `orphan' temp tables. 	d881fb36b90a0b791dc03f59aaa4f1476e37029d
----------------------------
configure.in: increase version number for clone 	1ec9119308c97933481268ea3593986aa35c5dfc
----------------------------
Bug#15933: max_used_connections is wrong after FLUSH STATUS if connections are cached After FLUSH STATUS max_used_connections was reset to 0, and haven't been updated while cached threads were reused, until the moment a new thread was created. The first suggested fix from original bug report was implemented: a) On flushing the status, set max_used_connections to threads_connected, not to 0. b) Check if it is necessary to increment max_used_connections when taking a thread from the cache as well as when creating new threads 	6222ca41a5066d8dd56d4f4b7aa47d742fd8095e
----------------------------
Add new function mysql_get_ssl_cipher to libmysl and use it from client to avoid dependency on SSL libs from mysql client. 	98904a8caa8a1e0683c8608fb3fb22589c12529f
----------------------------
From MySQL: Add Windows makefile 'cmakelists.txt' (Note that I had to add ut0vec.c to it.) Modify univ.i to not include ib_config.h on Windows. 	d8671ebb7c630a78fe5766d47137ff028dafc9e6
----------------------------
Remove no longer needed generation of dummy ib_config.h 	534a87dda23973854d303a5e81a7bfa679535107
----------------------------
"changes to make plugin_example useful as a template: force pkglibdir to be in ""mysql"" package, template files: AUTHORS, ChangeLog, NEWS, README, configure.in "	6f492397f881e11a3a7de978921b4a87b1fe193b
----------------------------
configure.in: Check for crypt() in libc first (bug#16478) 	2d8f8ac6e1a1c91c247b7546716c44e413aa5729
----------------------------
Make innodb_unsafe_binlog test case faster. Group all consistent read test cases to a one test case and wait their lock timeout after all have been send to the server. Remove unnecessary option --loose_innodb_lock_wait_timeout. 	a98fac7a973dcbe82225ed81647fad56c5a2705c
----------------------------
Applied innodb-5.0-ss398 snapshot. Fixed BUG#15650: DELETE with LEFT JOIN crashes server with innodb_locks_unsafe_for_binlog. Fixed compilation problem with non-C99 compilers in btr0sea.c 	771fb26e586e8403ac398fee6904165f84fbb42e
----------------------------
configure.in: Increased version number because of clone-off 	c1ac02a42465a384231e952fa21ba201f45598bd
----------------------------
Applied innodb-5.0-ss368 snapshot Fixed bugs: #16814: SHOW INNODB STATUS format error in LATEST FOREIGN KEY ERROR section dict_foreign_key_error_report(): Always print a newline after invoking dict_print_info_on_foreign_key_in_create_format(). #16827: Better InnoDB error message if ibdata files omitted from my.cnf. #17126: CHECK TABLE on InnoDB causes a short hang during check of adaptive hash. CHECK TABLE blocking other queries, by releasing the btr_search_latch periodically during the adaptive hash table validation. #17405: Valgrind: conditional jump or move depends on uninitialised valuesw. buf_block_init(): Reset magic_n, buf_fix_count, and io_fix to avoid testing uninitialised variables. #18077: InnoDB uses full explicit table locks in stored FUNCTION. #18238: When locks exhaust the buffer pool, InnoDB does not roll back the trx. Check in pessimistic insert and update if the buffer pool is exhausted by locks. #18252: Disk space leaks in updates of InnoDB BLOB rows. btr_cur_pessimistic_update(): Invoke rec_get_offset() after rec_set_field_extern_bits(). btr_store_big_rec_extern_fields(): Note that offsets will no longer be valid after calling this function. #18283: When InnoDB returns error 'lock table full', MySQL can write to binlog too much. #18384: InnoDB memory leak on duplicate key errors if row has many columns. row_ins_duplicate_error_in_clust(): Call mem_heap_free(heap) at func_exit if needed. #18350: Use consistent read in CREATE ... SELECT .. if innodb_locks_unsafe_for_binlog is used. 	99d178033a195450f32f36662029adc4fd6a26bd
----------------------------
mysql_config.sh: If installed, search built in lib path first, bug#13158 	67f2b0f3bc1a074609ee2f8470bf24dd926e73a7
----------------------------
Clean up CMake configuration following review. 	3f2cc44b3df474dbe6204f79b987f52291c8dad6
----------------------------
removed handlerton-win.cc now using CONFIGURE_FILE and INCLUDE to generate handlerton.cc and to set the definitions based on the storage engines given on the command line 	7f674749b8e29f4914d3809f49d19d439fc3159f
----------------------------
mysql_config.sh: Remove Solaris -xc99=none C option as C++ compiler can't handle it 	04f059c5bfd050ed82c0bf456dc1e4f7d6bc0937
----------------------------
mysql_config.sh: We are not to control what malloc package others are to use, remove -lmtmalloc from --libs(_r), bug#18322 	35ae639477b6ecb0d31aec590b0e405627f25cf5
----------------------------
ndb - autotest Change semantic on DumpStateOrd::CmvmiSetRestartOnErrorInsert() Called wo/ args it resets to value in configuration (previously it set to 1 if called wo/ args) 	a3b51fda9fde905596f679248e202dd785116736
----------------------------
Setting a isolation level of the transaction to read committed weakens the locks for this session similarly like the option innodb_locks_unsafe_for_binlog. This patch removes almost all gap locking (used in next-key locking) and makes MySQL to release the row locks on the rows which does not belong to result set. Additionally, nonlocking selects on INSERT INTO SELECT, UPDATE ... (SELECT ...), and CREATE ... SELECT ... use a nonlocking consistent read. If a binlog is used, then binlog format should be set to row based binloging to make the execution of the complex SQL statements. 	cf06d8d965e339bce40d170260500c262b0d96b0
----------------------------
"configure.in: AC_ARG_WITH inside ""if"" sometimes gives unexpected result, --with-fast-mutexes was not ignored when --with-debug given "	625ab8a064f07f9af94e9c658425b6a6e61cbcca
----------------------------
config-win.h: If CYBOZU defined, set character sets etc 	3c93e6efa5e53df71ad4fb0e1083ca0def251740
----------------------------
"Moved ""tmpdir"" and 2vardor"" to the documented flags and add some documentation "	8091b7b5f11e0594691ed1daecdd81a6ab58affa
----------------------------
Updated CMake stuff to handle the configurations needed for release builds. 	a3ad39cf663013c09b5dead007ee4900e7587a07
----------------------------
ndb - minor update to ndb-autotest.sh and config files 	8b9c724121ceb040d912a0ac7cbe2fedae22cb01
----------------------------
added config parameter InitialNoOfOpenFiles 	c8131d283a88f10d034dc3ca542b242e314c74f6
----------------------------
Merge r357 from branches/5.0: Fix bug #18350 Use consistent read in CREATE ... SELECT... if innodb_locks_unsafe_for_binlog is used. This patch is from Heikki. 	62dcf3fba2ca9da51ac61fb9f0626d20dd62900e
----------------------------
"Bug#11835 CREATE FUNCTION crashes server - Update for 5.1 - Add ""have_dlopen"" - Remove requirement to load udf's only in ""opt_plugin_dir"" "	dc749e9ad7c82ac1cd8283b4fc6710ed0a2255fe
----------------------------
Bug#18280 (RBR: Extreneous maps when writing to general_log and slow_log): Filter out replication general_log and slow_log entirely from binary log. Caching result of table share-specific tests. 	4440b71dda47001421ba2dde12464ef1c2aab158
----------------------------
configure.in: NDB_VERSION_BUILD has to be numeric 	7e48f7b34b944626db08aa80037f9e6cf9d99e42
----------------------------
configure.in: Changed release name to 5.0.19a ha_innodb.cc: InnoDB used table locks (not row locks) within stored functions. (Bug #18077) 	882d9b6e1f93be14b5bb75de0fe937b32239e392
----------------------------
Add (void*) casts when using the %p printf format specifier. When using GCC, use __inline__ instead of inline. Add disabled-by-default logic to configure.in to switch GCC to a strict C89-mode. 	08debc00d88dc9b613f11fd24b032d5282345471
----------------------------
Bug#18195 MySQL on Windows not built with YaSSL correctly - Add HAVE_OPENSSL and HAVE_YASSL to config-win.h 	42a3ff3f99c0e7851697420834edb2dc9e74a3ba
----------------------------
"Applied innodb-5.1-ss269 snapshot. Fixed BUGS: #3300: ""UPDATE statement with no index column in where condition locks all rows"" Implement semi-consistent read to reduce lock conflicts at the cost of breaking serializability. ha_innobase::unlock_row(): reset the ""did semi consistent read"" flag ha_innobase::was_semi_consistent_read(), ha_innobase::try_semi_consistent_read(): new methods row_prebuilt_t, row_create_prebuilt(): add field row_read_type for keeping track of semi-consistent reads row_vers_build_for_semi_consistent_read(), row_sel_build_committed_vers_for_mysql(): new functions row_search_for_mysql(): implement semi-consistent reads #9802: ""Foreign key checks disallow alter table"". Added test cases. #12456: ""Cursor shows incorrect data - DML does not affect, probably caching"" This patch implements a high-granularity read view to be used with cursors. In this high-granularity consistent read view modifications done by the creating transaction after the cursor is created or future transactions are not visible. But those modifications that transaction did before the cursor was created are visible. #12701: ""Support >4GB buffer pool and log files on 64-bit Windows"" Do not call os_file_create_tmpfile() at runtime. Instead, create all tempfiles at startup and guard access to them with mutexes. #13778: ""If FOREIGN_KEY_CHECKS=0, one can create inconsistent FOREIGN KEYs"". When FOREIGN_KEY_CHECKS=0 we still need to check that datatypes between foreign key references are compatible. #14189: ""VARBINARY and BINARY variables: trailing space ignored with InnoDB"" innobase_init(): Assert that DATA_MYSQL_BINARY_CHARSET_COLL == my_charset_bin.number. dtype_get_pad_char(): Do not pad VARBINARY or BINARY columns. row_ins_cascade_calc_update_vec(): Refuse ON UPDATE CASCADE when trying to change the length of a VARBINARY column that refers to or is referenced by a BINARY column. BINARY columns are no longer padded on comparison, and thus they cannot be padded on storage either. #14747: ""Race condition can cause btr_search_drop_page_hash_index() to crash"" Note that buf_block_t::index should be protected by btr_search_latch or an s-latch or x-latch on the index page. btr_search_drop_page_hash_index(): Read block->index while holding btr_search_latch and use the cached value in the loop.  Remove some redundant assertions. #15108: ""mysqld crashes when innodb_log_file_size is set > 4G"" #15308: ""Problem of Order with Enum Column in Primary Key"" #15550: ""mysqld crashes in printing a FOREIGN KEY error in InnoDB"" row_ins_foreign_report_add_err(): When printing the parent record, use the index in the parent table rather than the index in the child table. #15653: ""Slow inserts to InnoDB if many thousands of .ibd files"" Keep track on unflushed modifications to file spaces.  When there are tens of thousands of file spaces, flushing all files in fil_flush_file_spaces() would be very slow. fil_flush_file_spaces(): Only flush unflushed file spaces. fil_space_t, fil_system_t: Add a list of unflushed spaces. #15991: ""innodb-file-per-table + symlink database + rename = cr"" os_file_handle_error(): Map the error codes EXDEV, ENOTDIR, and EISDIR to the new code OS_FILE_PATH_ERROR. Treat this code as OS_FILE_PATH_ERROR. This fixes the crash on RENAME TABLE when the .ibd file is a symbolic link to a different file system. #16157: ""InnoDB crashes when main location settings are empty"" This patch is from Heikki. #16298: ""InnoDB segfaults in INSERTs in upgrade of 4.0 -> 5.0 tables with VARCHAR BINARY"" dict_load_columns(): Set the charset-collation code DATA_MYSQL_BINARY_CHARSET_COLL for those binary string columns that lack a charset-collation code, i.e., the tables were created with an older version of MySQL/InnoDB than 4.1.2. #16229: ""MySQL/InnoDB uses full explicit table locks in trigger processing"" Take a InnoDB table lock only if user has explicitly requested a table lock. Added some additional comments to store_lock() and external_lock(). #16387: ""InnoDB crash when dropping a foreign key <table>_ibfk_0"" Do not mistake TABLENAME_ibfk_0 for auto-generated id. dict_table_get_highest_foreign_id(): Ignore foreign constraint identifiers starting with the pattern TABLENAME_ibfk_0. #16582: ""InnoDB: Error in an adaptive hash index pointer to page"" Account for a race condition when dropping the adaptive hash index for a B-tree page. btr_search_drop_page_hash_index(): Retry the operation if a hash index with different parameters was built meanwhile.  Add diagnostics for the case that hash node pointers to the page remain. btr_search_info_update_hash(), btr_search_info_update_slow(): Document the parameter ""info"" as in/out. #16814: ""SHOW INNODB STATUS format error in LATEST FOREIGN KEY ERROR section"" Add a missing newline to the LAST FOREIGN KEY ERROR section in SHOW INNODB STATUS output. dict_foreign_error_report(): Always print a newline after invoking dict_print_info_on_foreign_key_in_create_format(). #16827: ""Better InnoDB error message if ibdata files omitted from my.cnf"" #17126: ""CHECK TABLE on InnoDB causes a short hang during check of adaptive hash"" CHECK TABLE blocking other queries, by releasing the btr_search_latch periodically during the adaptive hash table validation. #17405: ""Valgrind: conditional jump or move depends on unititialised values"" buf_block_init(): Reset magic_n, buf_fix_count and io_fix to avoid testing uninitialized variables. "	d33b523271d041eb0f77ef19b13846770c21d95b
----------------------------
BUG#15101 SYSDATE() disregards SET TIMESTAMP. After the ChangeSet 1.1892.20.1 2005/08/24 (Bug #12562) SYSDATE() is not an alias of NOW() and is unsafe for replication. `SYSDATE()' backward compatible aliasing clashes with the idea #12562 fix. To make it safe-replicatable we have to either use RBR or to restore the pre-5.0 style. --sysdate-is-now command line flag was introduced to provide backward compatibility. 	d187d410d10a17598f1e4b44fc41212c689264d0
----------------------------
Additional fix for BUG#16777:  Can not create trigger nor view w/o definer if --skip-grant-tables specified. The previous patch does not allow to specify empty host name in DEFINER-clause explicitly. 	3b3cb95eb9076378b26be48bb80a486c17a04845
----------------------------
"Bug#17137 Running ""truncate table"" on temporary table leaves the table open on a slave - Decrease ""slave_open_temp_tables"" during reopen of truncated table. - Add test ""rpl_trunc_temp"" "	8162610a3923f831d2a07fe1d48bcab6571c34b3
----------------------------
configure.in: Change comment for fast-mutex 	8c8d7b809b6f622f50c6160becabc68d59bdf536
----------------------------
configure.in: Change default value --with-fast-mutexes=no 	9ae37a54f2fb8767556254b643198bbd938f94f8
----------------------------
Fixed BUG#17476: Stored procedure not returning data when it is called first time per connection Removed const_string() method from Item_string (it was only used in one place, in a bad way). Defer possible SP variable, and access data directly instead, in date_format item. 	d85e929547e415ccb60841564feea53ee99f2207
----------------------------
configure.in: cloned 	7410560baf175c16caa05a4d002dbe685bdae76a
----------------------------
Fix for BUG#16777: Can not create trigger nor view w/o definer if --skip-grant-tables specified. The problem is that there is a check that prevents creating a definer with empty host name. In --skip-grant-tables mode this check prevents the user from creating a trigger/view without explicitly specifying its definer. This happens, because in --skip-grant-tables mode CURRENT_USER is ''@''. According to Sanja this check was implemented intentionally. However, according to the MySQL manual it is possible to specify empty host name (as well as empty user name). Moreover, the behaviour for stored routines is different in this aspect -- we allow them to be created with implicit definer. Based on this, we believe it is OK to change the behaviour for views to be similar with the behaviour for stored routines. 	302239f388d0bf28ccbb3a234463f7fdd25da717
----------------------------
"Bug#17728  	tests that fails are: ndb_gis rpl_ndb_multi_update2 - Run ndb_gis only if we have binlog_format_row "	ac8a25fb7d48093e28e3fe8866882bee7549fbdf
----------------------------
Bug#2845 client fails to reconnect if using TCP/IP - Change to use non blocking read to empty channel in case of too large sd number - Don't check for too large socket number on Windows. 	3a325cb81e07cfc949396ea05baf199a70268614
----------------------------
Fixes bug #17595. UDFs are not initialized when running mysqld with --skip-grant-tables. However when deleting functions UDFs list was checked regardless of whther UDFs are initialized or not. Additional check is added into free_udf() and find_udf() functions to prevent possible runtime errors. 	78b33e1835b41a90a28d66b1f8cd7adbebf3e994
----------------------------
"WL#2977 and WL#2712 global and session-level variable to set the binlog format (row/statement), and new binlog format called ""mixed"" (which is statement-based except if only row-based is correct, in this cset it means if UDF or UUID is used; more cases could be added in later 5.1 release): SET GLOBAL|SESSION BINLOG_FORMAT=row|statement|mixed|default; the global default is statement unless cluster is enabled (then it's row) as in 5.1-alpha. It's not possible to use SET on this variable if a session is currently in row-based mode and has open temporary tables (because CREATE TEMPORARY TABLE was not binlogged so temp table is not known on slave),  or if NDB is enabled (because NDB does not support such change on-the-fly, though it will later), of if in a stored function (see below). The added tests test the possibility or impossibility to SET, their effects, and the mixed mode, including in prepared statements and in stored procedures and functions. Caveats: a) The mixed mode will not work for stored functions: in mixed mode, a stored function will always be binlogged as one call and in a statement-based way (e.g. INSERT VALUES(myfunc()) or SELECT myfunc()). b) for the same reason, changing the thread's binlog format inside a stored function is refused with an error message. c) the same problems apply to triggers; implementing b) for triggers will be done later (will ask Dmitri). Additionally, as the binlog format is now changeable by each user for his session, I remove the implication which was done at startup, where row-based automatically set log-bin-trust-routine-creators to 1 (not possible anymore as a user can now switch to stmt-based and do nasty things again), and automatically set --innodb-locks-unsafe-for-binlog to 1 (was anyway theoretically incorrect as it disabled phantom protection). Plus fixes for compiler warnings. "	0071749595d83885261278f6a488b019acd63913
----------------------------
config-win.h: Enable row based replication for Windows build replication.m4: Made help text more clear, default is with row based replication enabled 	9571e81f04574d93db581b0605a9e6d88086dcea
----------------------------
Makefile.am: Conditionally link with libmysqlclient.la or libmysqlclient_r.la configure.in: Corrected help text for --with-debug option Changed default to be with thread safe client Added THREAD_SAFE_CLIENT to be used in 'if' in make files 	5484ee58159917c2064711e5483c3e8fbd0881d1
----------------------------
ndb dd - bug#16657 - add new config variable 	4c485eb13b8c03d81b07adec1e471c22a279a3a9
----------------------------
configure.in  (in the new clone): This is a re-clone after tagging, so the version must be set back to 5.1.7-beta. 	89e71e83bf70580b234733cfae94b34b6d3eec1d
----------------------------
fix for bug#16407 (EVENTS: sql_mode) post-review fixes 	0ba2425caf50b19ed81db4802b5868dd8c20237f
----------------------------
fix for bug#16407 (Events: Changes in sql_mode won't be taken into account) WL#1032 sql_mode setting was disregarded during create/alter event and wasn't set during event execution. (post-review small fixes) 	22ba4ca3a3eac727a3f07db6f37d0fbb3c235a02
----------------------------
"Fix for BUG#13897 ""failure to do SET SQL_MODE=N where N is a number > 31"" (the original bug's title isn't the simplest symptom). sys_var::check_set() was wrong. mysqlbinlog makes use of such SET SQL_MODE=N (where N is interpreted like if SQL_MODE was a field of type SET), so this bug affected recovery from binlogs if the server was running with certain SQL_MODE values, for example the default values on Windows (STRICT_TRANS_TABLES); to work around this bug people had to edit mysqlbinlog's output. "	37c1744a036c27692df20476351ec31031fce086
----------------------------
configure.in: Updated version number to 5.1.8 	03ecedcae8d46783965a6a9fa718ee85b6099f58
----------------------------
Bug#11527 - Setting myisam_repair_threads to >1 leads to corruption A wrong cast led to numeric overflow for data files greater than 4GB. The parallel repair assumed end of file after reading the amount of data that the file was bigger than 4GB. It truncated the data file and noted the number of records it found so far in the index file header as the number of rows in the table. Removing the cast fixed the problem. I added some cosmetic changes too. The normal repair worked because it uses a different function to read from the data file. 	718ae789726b57ff4ef4c7b48df831568be58076
----------------------------
"Fix for bug #16593 ""Deadlock or crash in stress test for case where trigger starts trigger"". In short, the deadlock/crash happened when execution of statement, which used stored functions or activated triggers, coincided with alteration of the tables used by these functions or triggers (in highly concurrent environment). Bug was caused by the incorrect handling of tables from prelocked set in open_tables() functions in situations when refresh happened. This fix replaces old smart but not very robust way of handling tables after refresh (which was closing only old tables), with new one which simply closes all tables opened so far and restarts open_tables(). Also fixed handling of temporary tables in close_tables_for_reopen(). No test case present since bug manifests itself only in concurrent environment. "	4a41a00d4b89176143ba33d73af18d91df3950a8
----------------------------
Bug#14057 mysql_ping() handles TCP and UNIX socket connections in different ways - Retry the ping if reconnect is turned on and the error was CR_SERVER_LOST 	56acf0a0c25b45d37b6eb5a43940e75361a9d0ec
----------------------------
"config/ac-macros/ha_ndbcluster.m4  :    Get back the message ""Using NDB Cluster"". "	26ddd4fa45f7f4b3cb2c79f82f40579af19dc71d
----------------------------
Many files: Backporting character_set_filesystem from 5.0 to 5.1. 	cc3623aecf235b2e4ad448f4b69b8aeac3dcbfc5
----------------------------
Polishing: after implementing TRIGGER privilege, mysqld option '--log-bin-trust-function-creators' affects not only replication of the stored functions, but also replication of the triggers. 	c6c33f4832cbba0438d1d947bd117009f4688cce
----------------------------
Revert r148 until MySQL AB has finally merged the code to the 5.1 tree: Port r146 from branches/5.0: Make innodb_flush_log_at_trx_commit a settable global variable. 	f6485936c02a9c1e13169ccdf319e53660307c3f
----------------------------
changed to use temporary heap table on a ndb test corrected multiple --log-bin options in mysql-test-run 	76f6331aed1569de92465209c29463bf3d49032e
----------------------------
Makefile.am: Link with CLIENT_EXTRA_LDFLAGS, enable us to pass on libtool flags '-full-static' and '-static' using '--with-client-ldflags' to configure. mysql.spec.sh: Pass '-static' to libtool, link static with our own libraries, dynamic with system libraries. Link with the bundled zlib. 	9f86a9bdcc22084f0287e21810c4aa6c69cdc272
----------------------------
sql_plugin.cc: Bug#17196, --default-storage-engine option broken configure.in: This is an alpha 	d6be5dcecb96042d4aa94530184be99853856789
----------------------------
ndb - main.cpp: avoid SEGV if fetch_configuration fails before fork 	9b25294bb4412b595099906af7051bbcda5cd3ed
----------------------------
bug#13966 - ndb better error message on invalid config change 	78bd6d93af17c7ea1b3430ef0a03225fc16ae04d
----------------------------
bug#13965 ndb - error while restarting in dict improve error message when changed config leads to failed restart 	155081e4254075d4486533e1e86684752cb89607
----------------------------
Port r165 from branches/5.0: Port a change from MySQL: innodb_cache.test: save and restore query_cache_size 	50de35d083c435d6d460003babc23daa3d7c810a
----------------------------
sql_mode should be after on_completion and before comment partial fix for bug #16407 WL#1034 (Internal CRON) 	64e09bad662913a309cde728b16cbf3d3d0b1738
----------------------------
add the sql_mode to the enum with the fields post-push fix for bug#16407 (sql_mode discarded) WL#1034 (Internal CRON) 	060122de0609a96ec0085c0e907ea9efe77106e3
----------------------------
partial fix for bug#16407 (sql_mode not regarded) add sql_mode to mysql.event WL#1034 (Internal CRON) 	2a60c11fef216414a05b0f445043f7854e676703
----------------------------
"Bug #16919 some tests fail in 5.0 - Use ""../tmp"" as --slave-load-tmpdir. Same as in mysql-test-run.pl "	a71de6bfe2022eb1a0c93c6078b0de9ed48b5c88
----------------------------
Fix mysqlslap.vcproj dependencies also for Release and classic configuration. 	2aea45b8101d5d44c6b301410e970851db8b3e4c
----------------------------
"fix for bug#16642 (Events: No INFORMATION_SCHEMA.EVENTS table) post-review change - use pointer instead of copy on the stack. WL#1034 (Internal CRON) This patch adds INFORMATION_SCHEMA.EVENTS table with the following format: EVENT_CATALOG  - MYSQL_TYPE_STRING  (Always NULL) EVENT_SCHEMA   - MYSQL_TYPE_STRING  (the database) EVENT_NAME     - MYSQL_TYPE_STRING  (the name) DEFINER        - MYSQL_TYPE_STRING  (user@host) EVENT_BODY     - MYSQL_TYPE_STRING  (the body from mysql.event) EVENT_TYPE     - MYSQL_TYPE_STRING  (""ONE TIME"" | ""RECURRING"") EXECUTE_AT     - MYSQL_TYPE_TIMESTAMP (set for ""ONE TIME"" otherwise NULL) INTERVAL_VALUE - MYSQL_TYPE_LONG    (set for RECURRING otherwise NULL) INTERVAL_FIELD - MYSQL_TYPE_STRING  (set for RECURRING otherwise NULL) SQL_MODE       - MYSQL_TYPE_STRING  (for now NULL) STARTS         - MYSQL_TYPE_TIMESTAMP (starts from mysql.event) ENDS           - MYSQL_TYPE_TIMESTAMP (ends from mysql.event) STATUS         - MYSQL_TYPE_STRING  (ENABLED | DISABLED) ON_COMPLETION  - MYSQL_TYPE_STRING  (NOT PRESERVE | PRESERVE) CREATED        - MYSQL_TYPE_TIMESTAMP LAST_ALTERED   - MYSQL_TYPE_TIMESTAMP LAST_EXECUTED  - MYSQL_TYPE_TIMESTAMP EVENT_COMMENT  - MYSQL_TYPE_STRING SQL_MODE is NULL for now, because the value is still not stored in mysql.event . Support will be added as a fix for another bug. This patch also adds SHOW [FULL] EVENTS [FROM db] [LIKE pattern] 1. SHOW EVENTS shows always only the events on the same user, because the PK of mysql.event is (definer, db, name) several users may have event with the same name -> no information disclosure. 2. SHOW FULL EVENTS - shows the events (in the current db as SHOW EVENTS) of all users. The user has to have PROCESS privilege, if not then SHOW FULL EVENTS behave like SHOW EVENTS. 3. If [FROM db] is specified then this db is considered. 4. Event names can be filtered with LIKE pattern. SHOW EVENTS returns table with the following columns, which are subset of the data which is returned by SELECT * FROM I_S.EVENTS Db Name Definer Type Execute at Interval value Interval field Starts Ends Status "	d847ac54caf4853d757c1f96a60b15cd2a338073
----------------------------
BUG# 14768 Added fixes to make last_insert_id() to work. 	15ec4431bcd3bcee7b4f4f0347ef098e7206c18e
----------------------------
configure.in: Cloned off 4.1.18, new release number 4.1.19 	1318e790bcc33d578a307d8a0f372d3e369e55f9
----------------------------
Use one option --log-output[=option[,option...]] instead of current --old-log-format and --both-log-formats options 	a0f4c0ce30e6044b39be7af554e8e0b8359ce007
----------------------------
"configure.in: Generated ""libmysql.ver"" will be in \$(top_builddir) "	4ad32690afa89282ddbdbeeaf6510ca5aea1171c
----------------------------
reserved config numbers in ndb 	1c1b5f1f57fa78c2eea4121841e6de0cb368bfd9
----------------------------
"Test ""ctype_ucs"":  Disable warnings if ""InnoDB"" is not configured (""classic"" build) (bug#16730). "	1fa62bdafc241134838301205b1ca99d18587c04
----------------------------
"Bug#15904  	--tmpdir requires trailing slash '/' - Use same code for creating the temptable filename both from ""mysql_create_table"" and ""mysql_create_like_table"" "	b5188bdc7503a22e66d9776079ecfe66f10cf408
----------------------------
added option for relative pat in ndb config added option for verbose ndb startup 	92c93523dd025a126d5ae447a93e30adeece615a
----------------------------
Port r146 from branches/5.0: Make innodb_flush_log_at_trx_commit a settable global variable. 	c91e3017c04ded082f46d0d40ca752c3416ab354
----------------------------
Port r145 from branches/5.0: Make innodb_thread_concurrency 0 by default, and extend the useable range from 0 to 1000 (0 disables the thread throttling). Remove SRV_CONCURRENCY_THRESHOLD (20).  The magic value to disable the thread throttling is 0 from now on. 	dc8fdd92f3dd858b7f12b6c44074e81ab99d694e
----------------------------
reintroduce --no-defaults to ndb_mgmd 	c079e801228dd5a1d77e262c0a030a810eeda6a4
----------------------------
fix ndb_mgmd --no-defaults option processing 	de7cb5fc995875dd023f2eeba31f90adf8dcbf58
----------------------------
Applied patch recieved from Marko: Make innodb_thread_concurrency 0 by default, and extend the usable range from 0 to 1000 (0 disables the thread throttling). 	5f7279d0d50b406add0bf141df6341114e8e30c9
----------------------------
Applied patch recieved from Marko: Make innodb_flush_log_at_trx_commit a settable global variable. 	af9d6bcf830e0f0fee11aa8bd9f8a447524a008f
----------------------------
Port r139 from branches/5.0: From MySQL: Fix bug #15108 (mysqld crashes when innodb_log_file_size is set > 4GB). 	c2083023c4957de3ee14dabc10cbe42dd6c51901
----------------------------
loaddata.result, loaddata.test: Adding test case. sql_yacc.yy: Adding TEXT_STRING_filesystem, which converts from character_set_client to character_set_conversion. Replacing TEXT_STRING_sys to TEXT_STRING_filesystem in LOAD DATA and SELECT INTO OUTFILE contexts. sql_class.h, sql_class.cc: Adding character_set_filesystem variable, and charset_is_character_set_filesystem flag (to avoid conversion when it's not necessary). set_var.h, set_var.cc: Adding sys_var_character_set_filesystem mysqld.cc: Adding --character-set-filesystem startup option. 	4e4b37a8ef4f69b90cc0e462b9e996f069a187dd
----------------------------
Bug #14634 Running out of diskspace on tmpdir returns an inappropriate error 	c4ddf67710817840e4a70a7b76a37f968586670d
----------------------------
"A fix for Bug#13337 ""ps test fails if configure wo/ usc2"" "	739ba76d646efe19d14e3aee068d92471fcf8f5a
----------------------------
date_formats.test: fix for bug #15828 after review doing val_str now before testing of null value secures the function for null values returned by dynamic functions - the fix before was incomplete andy covered constant null values 	8c69d6abaf9eaf731e7e589b2c3c498543003101
----------------------------
Fixes problem introduced by non-portable thread library definition in client makefile.am. Instead of adding lpthread directly it is added $CLIENT_THREAD_LIBS, which is evaluated during configure. 	c0bf54d568e359778e78917a74befd127852f49f
----------------------------
"Bug #15598 Server crashes in specific case during setting new password - Comparing host string against NULL caused crash. - If host.hostname is NULL treat it as """" "	4bcf14179900eb3ee0b91957c71a303261c1fc93
----------------------------
"Bug #15598 Server crashes in specific case during setting new password - When acl_user->host.hostname is NULL compare it as """" "	2a05a6ba87d0b4d62de6e137b3287d59d583c947
----------------------------
Forward port r115 from branches/5.0: Fix bug #16157, a crash when innodb_log_group_home_dir is set to an empty string. This patch is from Heikki. 	fe27cef26c548d35be7f78234541d611e3f31a0a
----------------------------
Avoid double slash (//) in socket paths, breaks on QNX. 	3524b80092486c450366f60ff5b6b7dcc4c39742
----------------------------
Fix mysqlslap problems when running multiple tests in parallel, by setting the mysqlslap lock directory to value of --tmpdir. 	0d58795f7dd1e2369568eb57130ccd5cd23a8ea6
----------------------------
libarchive.a and storage/archive/Makefile should be specified in MYSQL_STORAGE_ENGINE macro (and nowhere else) 	850391e6c54e1675d350dc424c9ab469558d769e
----------------------------
BUG#16068: Plugin related bugs Fixed that --plugin_dir option doesn't work. Fixed that parser name is not restored correctly from the table. 	c0c5b1ac8499f7b081eaeffbe343ae1a8a049495
----------------------------
Bug#15591 Occasional test suite abort due to port in use If the server is started with --port-open-timeout=# retry to bind the TCP port if it fails with EADDRINUSE. Use the new option in mysql-test-run.sh. 	b1214d232ea13c6bcc51d7686b8a51f306be037d
----------------------------
config-win.h: Backported Windows MAX_INDEXES handling from 5.1 	eaffb7eb73b13f2275fe0fc2af490df2ac521fa8
----------------------------
Fixes bug #15634. Eliminates compiler warning 'all return paths are recursive in Field_date::store function'. Though the Field_date::store function almost unused when protocol_version=10 additional check was added into it to store 4byte dates properly. Effective test routine is not available so far due to protocol_version is not a dynamic property and can not be modified with mysql-test script. 	6d55b423d8ae570e958d4926342af9e9ba34a117
----------------------------
Fix for SQLCOM_BINLOG_BASE64_EVENT related code. 	c4911a404a584a1b9fd9dc9cd28907ac27d4a76f
----------------------------
Fast mutexes implementation (spin-loop inside pthread_mutex_lock). thr_mutex.c: Added spinloop in mutex_lock my_pthread.h: Added definition of my_pthread_fastmutex_t configure.in: Added --with-fast-mutexes switch 	22c930c924fcd6df57b84674cf629f27f750bde3
----------------------------
my_sys.h: Added MAP_NORESERVE set to 0 for Windows config-win.h: If MAX_INDEXES is not set, set it to 64 on Windows 	6e276f03becef7490d8694b0290b419389a449c1
----------------------------
Datadir variable should not be reset, if it was set in this script. 	30692765923964c7a79a511e5bb1c3b6c88ffa0f
----------------------------
Update ndb version in configure.in 	eae7c39a5cac47741ce19f2277145b4b1ac6f72a
----------------------------
"Fix BUG#12071: ""Windows hang: 'Opening tables' or 'Waiting for table' lockup"". Changes from the innodb-4.1-ss11 snapshot. Do not call os_file-create_tmpfile() at runtime. Instead, create a tempfile at startup and guard access to it with a mutex. Also, fix bugs: 10511: ""Wrong padding of UCS2 CHAR columns in ON UPDATE CASCADE""; 13778: ""If FOREIGN_KEY_CHECKS=0, one can create inconsistent FOREIGN KEYs"". When FOREIGN_KEY_CHECKS=0 we still need to check that datatypes between foreign key references are compatible. Also, added test cases (also for bug 9802). "	7ae2d469037f85892aab534bb908fa57682d8ed9
----------------------------
skip_name_resolve.result, skip_name_resolve.test: Ignore columns with unpredictable values. rpl_relayrotate.result: Changed result file to match change in test 	3e23de493ad3487b1fe3f8d8612ff95eb6d77635
----------------------------
Fix value returned by mysql_warning_count() after fetching a prepared statement that generated a warning. (Bug #15510) 	e228b4394610ac63a3224b8eb3490daaf330b2b6
----------------------------
"Fix BUG#14747: ""Race condition can cause btr_search_drop_page_hash_index() to crash"". Changes from snapshot innodb-5.0-ss52. Note that buf_block_t::index should be protected by btr_search_latch or an s-latch or x-latch on the index page. btr_search_drop_page_hash_index(): Read block->index while holding btr_search_latch and use the cached value in the loop. Remove some redundant assertions. Also fix 13778. When FOREIGN_KEY_CHECKS=0 we still need to check that datatypes between foreign key references are compatible. Also added test cases to 9802. "	9eee25472e7ba5a1bce1d44bfd054f8aa0e68f2a
----------------------------
added --server-id option to mysqlbinlog to filter for a certain server id in the binlog only 	45adda8fd1b86b446d6cc9d08f02e7221e024b6b
----------------------------
Set thread_stack after return from end_thread() Fixes core dump when reusing thread when running debug binary 	88eee63d8c02e5a4b3ac39c0ed31794dcf243a29
----------------------------
Bug#10932 - Building server with key limit of 128, makes test cases fail Allow for configuration of the maximum number of indexes per table. Added and used a configure.in macro. Replaced fixed limits by the configurable limit. Limited MyISAM indexes to its hard limit. Fixed a bug in opt_range.cc for many indexes with InnoDB. Tested for 2, 63, 64, 65, 127, 128, 129, 255, 256, and 257 indexes. Testing this part of the bugfix requires rebuilding of the server with different options. This cannot be done with our test suite. Therefore I added the necessary test files to the bug report. If you repeat the tests, please note that the ps_* tests fail for everything but 64 indexes. This is because of differences in the meta data, namely field lengths for index names etc. 	6b18dbef3163f5c99d35852421d909cf3a7651bd
----------------------------
DbdihMain.cpp: management server performs this check on configuration. If we get this far with something incorrect, something is very wrong. 	c9dc609d21425eee9dbc98c6c9b165fcf987e385
----------------------------
"Makefile.am: Distribute ""handlerton-win.cc"" mysqld.cc: Corrected word lenght for some innobase configuration variables Makefile.am: Added Visual Studio 7 project file to EXTRA_DIST ha_partition.cc, sql_partition.cc: Changed include to use ""..."" for Windows handlerton-win.cc: Handle engine include/exclude with defines for Windows new file "	6430a4901e32351b74484a0311879bab586c8438
----------------------------
updated test as result of config change done in cluster startup 	1a95d0a7ea82cbe9e9666ad98456e63862656a78
----------------------------
Fix for bug #15108: mysqld crashes when innodb_log_file_size is set > 4G 	01dbce64d0f4c000f01d4aa9c3dce166e3cd16dc
----------------------------
Added bitmap_buffer_size() Removed valgrind warnings when using not aligned bitmap buffer size Added setting of thread_stack 	1502692322420df00b8a19cbe1287b5df4b0f294
----------------------------
Table definition cache, part 2 The table opening process now works the following way: - Create common TABLE_SHARE object - Read the .frm file and unpack it into the TABLE_SHARE object - Create a TABLE object based on the information in the TABLE_SHARE object and open a handler to the table object Other noteworthy changes: - In TABLE_SHARE the most common strings are now LEX_STRING's - Better error message when table is not found - Variable table_cache is now renamed 'table_open_cache' - New variable 'table_definition_cache' that is the number of table defintions that will be cached - strxnmov() calls are now fixed to avoid overflows - strxnmov() will now always add one end \0 to result - engine objects are now created with a TABLE_SHARE object instead of a TABLE object. - After creating a field object one must call field->init(table) before using it - For a busy system this change will give you: - Less memory usage for table object - Faster opening of tables (if it's has been in use or is in table definition cache) - Allow you to cache many table definitions objects - Faster drop of table 	e42c98096746bc675e0c6d6b45776937d7cfb05b
----------------------------
Always initialize THD::thread_stack: it's used in check_stack_overrun(). 	b1d951d4626cb70375c262de9ba4a67a24d85e57
----------------------------
configure.in: Changed version to 5.1.3 	ffb5a275c3f10de096d01ecd621cc3e2373071a9
----------------------------
fix error handling if thread creation fails in ndbd make sure ndb threads are not started with too small stacksize (which results in default, much too big, stack size to be used) moved initialization of ndbd fs block first to ensure that it gets enough space for allocation of file system thread stacks changed event buffer reporting in ndb to occur not as often corrected the bank application corrected output from run-test make-config.sh 	a5d6d2bb88c47a821fdfe88b1005d2752ea0d219
----------------------------
Check for zlib with a zzlibCompileFlags() function in config/ac-macros/zlib.m4. (Patch provided by serg) 	7b78489e2d0247191aa31d96a06961659bcf408d
----------------------------
Inefficient usage of String::append() fixed. Bad examples of usage of a string with its length fixed. The incorrect length in the trigger file configuration descriptor fixed (BUG#14090). A hook for unknown keys added to the parser to support old .TRG files. 	806f9e24ff1e9409d6b833c4ec1c07d3e45272c3
----------------------------
"configure.in: Corrected ""include/readline"" link for ""make distcheck"" "	133c00beb4f17b96e9e6cf77d870726de61958e4
----------------------------
Forward-port r46 from branches/5.0: Mostly fix bug #13778, when FOREIGN_KEY_CHECKS=0 we still need to check that datatypes between foreign key references are compatible. Add test cases (also for bug #9802). 	50241299e203419be6092cabce417bef2ac4c78d
----------------------------
config-win.h: Disabled yaSSL support for now 	7966c4ddaca791f7b0333d82d1845ad5b97497df
----------------------------
Sync suggestions for bdb_cache_size in my-medium.cnf and my-huge.cnf to be the same as the suggested innodb_buffer_pool_size. 	eeaecbc2bdcc6cc58abfaa33d0fe8beeb87e4a73
----------------------------
"WL#2971 ""change log-bin-trust-routine-creators=0 to apply only to functions"". Indeed now that stored procedures CALL is not binlogged, but instead the invoked substatements are, the restrictions applied by log-bin-trust-routine-creators=0 are superfluous for procedures. They still need to apply to functions where function calls are written to the binlog (for example as ""DO myfunc(3)""). We rename the variable to log-bin-trust-function-creators but allow the old name until some future version (and issue a warning if old name is used). "	ff46e549322d7c83a05a058a88bd7d4bb3ec74ed
----------------------------
"Provide a default ""minimum thread stack size"" PTHREAD_STACK_MIN where it is missing. (Currently, affects only BSD with Linuxthreads) "	74c57a6dc94e054ec1fdc76c4d72c15e9798ee05
----------------------------
"configure.in: Temporary work around to pass --build=... to configure in storage engine sub directory print_file.cpp: HP-UX compiler don't like variable shadowing AsyncFile.cpp: Cast result from strstr() to char* for HP-UX compile trigger_definitions.h: ""MIN"" and ""MAX"" are not used for trigger stuff, move to a more global include ndb_global.h.in: Define ""MIN"" and ""MAX"" globally for all NDB, in case the platform does not have it (like Solaris). Moved here from ""include/kernel/trigger_definitions.h"". Makefile.am: Add missing ha_* files to EXTRA_mysqld_SOURCES "	41b554daa9db270728a443957dc3fd6d3cc7cc87
----------------------------
mysql-test/r/connect.result + mysql-test/t/connect.test Replace the full socket path name, not just a directory component. bug#14720 	024d2b3595410f2479b661b63fc47308b2f181df
----------------------------
"latin1.xml: Fixing latin1 to cp1252, according to recent changes in ctype-latin1.c. Index.xml: Marking latin1_swedish_ci as ""compiled"" to avoid its generating into ctype-extra.c. ctype-extra.c: Bug#12076 --with-extra-charsets has no effect All supported dnamic charsets were generated from sql/share/charsets/*.xml under #ifdefs. Compiling is to be activated from ""configure"" by adding --with-extra-charsets. I'm not including auto-recreating of ctype-extra.c into build process for ease purposes. "	5ffc4c64f9024716aa62a84be18bd2e013d5e1c7
----------------------------
configure.in: Changed back version to 5.1.2-alpha 	31bb67f3c3dda839dd669f8c94da9979b6bb9bdf
----------------------------
"config/ac-macros/zlib.m4 Accept any shared library for ""libz"", not just the static one. Bug#6584 Repetition of the corresponding change, as the 4.1 ""acinclude.m4"" is not used in 5.0. "	bf08909aa44a19723fd8e768758abeb174729487
----------------------------
Fixed failure of NDB config retrieval. 1. Made sure that base64 string is terminated with NUL. 2. Made calculation of needed size for base64 string exact. Added checks in test for the above two fixes. 	c45c24ed3f0d26e7d95e4dbe5409746938346fba
----------------------------
Fixed BUG#14256: definer in view definition is not fully qualified Changed the parser test for wildcards in hostname to checking for empty strings instead (analogous with the test in default_view_definer()), since wildcards do appear in the definer's host-part sometimes. 	d201f2443d910ae34fa56e1bd0da27b5f5e12520
----------------------------
Fix for the patch #13377. Avoids race condition for relay logs close. Code that closes current relay log is moved to purge_relay_logs(). 	77dc2549586cd3fedbedea4046e3287b1a9a37c6
----------------------------
- Removed obsolete and outdated man page files from the man directory - these files are now maintained in the mysqldoc repository and included in the source distribution during the release build. Updated the configure.in script and Makefiles to create the man page file list at build time - Updated the file list in the RPM spec file to include all currently available man pages (this can not be done with wildcards, as the man pages are spread across several subpackages. However, RPM warns about unpackaged files, so newly added man pages can be spotted) 	f793d7b5bf4b8ba314d6588a0764818599e8dc58
----------------------------
1.2048 05/10/20 10:31:16 ingo@mysql.com +1 -0 Bug#12166 - Unable to index very large tables Moved clearing of errors behind the second repair attempt, but will clear only if no error happened. No test case. The error can be repeated with little free space on tmpdir only. I do not know of a way to create this in a portable way with our test suite. I did however attach a shell script to the bug report which can easily be adapted to the situation on the test machine. 	5f51294a3ce2f40483adb23a5140c90ff95c007f
----------------------------
BUG# 12123 Made change to mysqlimport to set character_set_database to binary to make importing various charsets/columns work correctly. 	7243b7bb49d0406604276c4366e2621f569fe194
----------------------------
Fix bug #14016 date_format() 2nd parameter was compared using case insensitive collation By default constant strings in second parameter of date_time() have case insensitive collation. Because of this expressions date_format(f,'%m') and date_format(f,'%M') wrongly becomes equal, which results in choosing wrong column to sort by. Now if second parameter of date_format() is constant then it's collation is changed to case sensitive. 	90cf3e78f00f172bdf409a77d7364cff51bbe52d
----------------------------
fix for bug #12595 (ESCAPE must be exactly 1 character long) ESCAPE has length of 1 if specified and sql_mode is NO_BACKSLASH_ESCAPES or has length of 0 or 1 in every other situation. (approved patch applied on a up-to-date tree re-commit) 	991b6f14400fd48bcd546558a303da0fb7b58183
----------------------------
configure.in: Set the version number to 5.0.16 	977187eb30abd02d8747cc4cde2186edfaf89e26
----------------------------
"Bug #12985  	Do-mysqlclient-test: Can't find -lyassl when linking - Use yassl_includes and yassl_libs instead of openssl_includes and openssl_libs to avoid that mysql_config returns that libyassl and libtaocrypt are needed for linking. "	0684dc1342e0e0bbf20224e159fb4b457b598f0c
----------------------------
"Fix for BUG#4544 ""read_only also affects temporary tables"": the READ_ONLY global variable now allows statements which are to update only temporary tables (note: if a statement, after parse stage, looks like it will update a non-temp table, it will be rejected, even if at execution it would have turned out that 0 rows would be updated; for example UPDATE my_non_tem_table SET a=1 WHERE 1 = 0; will be rejected). "	b386fef15fd1b8e6320fff472dac1dcc5cfb9ef0
----------------------------
mysql-test-run.pl: Put socket files into $opt_tmpdir, to avoid problems with platforms that can't handle long socket paths. 	00b535280da9fdf396b48a19bffed1cddc7528da
----------------------------
mysql.spec.sh: For 5.x, always compile with --with-big-tables Copy the config.log file to location outside the build tree 	4ea2aacb2a45c0e20d2d56f2baab67fd70ffa19f
----------------------------
"mysql.spec.sh: Removed unneeded/obsolte configure options Added archive engine to standard server Removed the embedded server from experimental server Changed suffix ""-Max"" => ""-max"" Changed comment string ""Max"" => ""Experimental"" "	5035abf052af06fc1f55cad00e7e106c74022c62
----------------------------
configure.in: - reverted NDB version number, too 	dcb347bf8b8556069532524c1a345df8136f7148
----------------------------
- revert version number in configure.in to 5.0.15 	921803e40944e0e2b7de1aa90841d83502a06c45
----------------------------
configure.in: New version 5.0.16 	c9d1e83edd1379d8159494777589b61786419c64
----------------------------
configure.in: rc => GA 	c6c4f03282e006d28924dc3f1c2ab2c1abe657e2
----------------------------
Fix typo (thread_cache should be thread_cache_size) in example configuration files. (Bug #13811) 	8f659d05a2d4641b437973be577a6b1427920729
----------------------------
make_binary_distribution.sh: Copy *.cnf files in mysql-test/std_data/ Makefile.am: Added std_data/*.cnf to copy ndb config 	94ea4f188a91d64c7741021e84a10d4f0a6d7121
----------------------------
"Bug #13009  	No gaps allowed in node id number sequence + some small bugfixes in ndb_config + extending ndb_config to print connections and take shm option "	fd0cd556525fed103e845ad20132f2f774aa55ff
----------------------------
Fix wait_timeout (and kill) handling on Mac OS X by cleaning up how signal handlers are set up, the blocking flags for sockets are set, and which thread-related functions are used. (Bug #8731) 	c8a6c2c6143dd8c92704920d455cc57050ce71ad
----------------------------
"To help people avoid BUG#2122 ""changing hostname confuses master or slave"" until it's fixed, we now issue a warning (at slave's server startup only) when a relay log is named using the implicit hostname-relay-bin naming. Like we already do for binlogs. "	554970c058fc7d8c0c4e1f2a4147e3363cc9d3ff
----------------------------
Fix minimum value of query_prealloc_size to be the same as its default. (Bug #13334) 	083c032ec3866697900d504e8e0c0c39da1a59a3
----------------------------
"Bug #13611  	 double [TCP DEFAULT] in config.ini crashes ndb_mgmd - Added error printout and nice exit for duplicate default sections "	e8f291f52b4de9242e776cd4832bcb8e2f5f8553
----------------------------
"Bug #13611  	 double [TCP DEFAULT] in config.ini crashes ndb_mgmd - Added error printout and nice exit for duplicate default sections "	57978f52fce339954d6d3a635939522aa4f6a5b1
----------------------------
my_pthread.h: Let pthread_mutex_init() macro return 0 on Windows mysql_priv.h: Return type is to be 'my_bool' for 'opt_enable_shared_memory' 	3af12c477662114f4e118bba6806af65f64b9793
----------------------------
- to ensure maximum available memory for TUP DataMem moved all array allocation to READ_CONFIG_REQ (except CMVI which was not possible) reorganized READ_CONFIG_REQ call order in ndb cntr to make sure TUP allocates first moved allocations internally in TUP to allocate DataMem first 	4bbc84de10cec73f02cdb74bee30d87ca645929c
----------------------------
"Improved testing of ssl and compression - Added show status variable ""compression"" for checking that compression is turned on. - Updated show status variable ""have_openssl"" to be set to DISABLED if server supports ssl but it's not turned on to accept incoming ssl connections. - Setup server to accept ssl connections from clients ig that is supported by server - New tests - ssl - Run with ssl turned on - ssl_compress - Run with ssl and compression turned on - compress - Run with compression turned in - Updated test - openssl_1, rpl_openssl1 - Changed to run if server supports ssl "	cb96f195c8ec86236b1673adc0db5d32e08bd957
----------------------------
Fix bug#13535 Incorrect result from SELECT statement after SHOW TABLE STATUS After SHOW TABLE STATUS last_insert_id wasn't cleaned, and next select erroneously rewrites WHERE condition and returs a row; 5.0 isn't affected because of different SHOW TABLE STATUS handling. last_insert_id cleanup added to mysqld_extend_show_tables(). 	5a10244d8b024745b65341d4a4f09ba50621635a
----------------------------
ndb - mysql-test-run ndb_config Fix 32/64 bit insecure code 	2930a466eca532b09f50d72536a8871a00c2fd82
----------------------------
"Change ""mf_keycache.c"" so that it can be compiled without thread support (bug#11680): ""configure --without-server""   (without giving ""--enable-thread-safe-client""). "	c90673de8b7c0b236f1d1fa7a77aae3581887ab4
----------------------------
ndb_config Check returnvalue on load/fetch configuration 	bb70442366e7a2d70e663b0e124a3a5ace35bdfd
----------------------------
ndb Add support/test for using my.cnf [cluster_config] 	6cff2db93282e55cd178c72a2e46b305b011106d
----------------------------
ndb - add support for reading config.ini from ndb_config (as alternative to contacting ndb_mgmd) 	a30faa3b3488585e0e83443f8e02a3d54cb74b9f
----------------------------
wl#1882 allow ndb_mgmd to use my.cnf for cluster configuration 	035673c32d5457784e901524afaf3485066d7ff7
----------------------------
"Fix for bug #7977 in sql_mode=ANSI, show create table ignores auto_increment ""CHARACTER SET"", ""COLLATE"", and ""DEFAULT"" are always printed(excepting MODE_MYSQL323 and MODE_MYSQL40) ""AUTO_INCREMENT"", ""ON UPDATE CURRENT_TIMESTAMP"" are printed only if NO_FIELD_OPTIONS is not set. "	f9762c47d084037e99cd631e66b7473dfd7b0669
----------------------------
mysql_config.sh: Added -lz to link using libmysqld 	5b79dbb2eb7caa07eed2cadd370bf5544501f8c8
----------------------------
"BUG #13511 Fixed SETUP.sh to not overwrite prefix_configs, making 'make install' install in ""/"" "	6f693ae65b253d6a3964179f63cad4344b59065b
----------------------------
"Makefile.am, configure.in: Enable ""make distcheck"" to work "	095efe48a5eee7e25d0cbed551c70c3d24bd3855
----------------------------
Makefile.am: Revert to shell test script for test targets mysqltest.c: Windows pclose() returns error code in low byte mysql_config.sh: Remove -Xa -xstrconst from --cflags for Sun C++ 	0cfed79ea5377460ce6035e0f6efc75e279d7bf0
----------------------------
Add files for bdb/build_win64, and tweak the configuration to skip over parts of the library we have omitted. 	dcd8b9a50320cc79bc843a7ae210e63f9eb3f1e5
----------------------------
"Fix for bug #13407 ""Remote connecting crashes server"" and couple of similar problems which were introduced during work on WL#2787 ""Add view definer/owner to the view definition (.frm) to check privileges on used tables and stored routines when using a VIEW."" In some cases it is better to use value from Security_context::host_or_ip instead of value from Security_context::host since the latter can be NULL in certain situations (When we can't resolve hostname or we have not done this yet). "	87dcb3c6f58cc75c5f7326f274caaa0289f924b9
----------------------------
Remove old and usused configuration locking code. Some new code that does this job is being written against 5.1. This code is largely removed from that work. 	dcb3e5975b9f33b2e624f3cafd1751122d07bab8
----------------------------
Bug#10504 Character set does not support traditional mode ctype_utf8.result, ctype_utf8.test: adding test case. password.c, mysql_com.h Changeing octet2hex availability from static to public. item_strfunc.cc: Result string is now checked to be well-formed. Warning/error is generated, depending on sql_mode. 	1d12ac8849c10c77f46ab8b051d881605e1016cf
----------------------------
Fix bug #11416 Server crash if using a view that uses function convert_tz When parser parses function convert_tz it loads available timezone tables in thd->lex->time_zone_tables_used. But view have another lex that main query. Thus time_zone_tables_used of main query left uninitialized. When Item_func_conver_tz is fixed it takes timezone tables from main query and later when it executed it assumes that timezone tables are loaded and failed that assertion. 	ac324506093948f54336e248c34f85c1dbb172bd
----------------------------
Bug#12920 - key_read_requests counter appears to re-set After merge fix. 	6e725adc005ad4ba7e0370610a3fa90424a5dfcd
----------------------------
Post-review fix for BUG#12712: SET AUTOCOMMIT should fail within SP/functions/triggers 	9cf77e404ef3c32dd1c28a6e6ae822f7b6492c86
----------------------------
Bug#12920 - key_read_requests counter appears to re-set Enlarged the counter variables to ulonglong. 	73143077623c792497ee16a094d3aa6cc4d7e6e7
----------------------------
Fixed BUG#12712: SET AUTOCOMMIT should fail within SP/functions/triggers Second version after review. Allow 'set autocommit' in procedures, but not functions or triggers. Can return error in run-time (when a function calls a procedure). 	f31095f3d56c76b035fd9c9d1b499ba293126917
----------------------------
A fix (bug #12917: The --defaults-extra-file option is ignored by the 5.0 client binaries). 	9730b5369a9dc6d4f08524441727ceca72e1d072
----------------------------
configure.in: Flag -DHAVE_DARWIN_THREADS not needed for darwin9 	c364baff71ee6065bd51b7e49686b9e8435895ea
----------------------------
Port to SCO OpenServer 6. May require running ./configure with --build=i686-unknown-sysv5SCO_SV6.0.0 	a540a66b2637202b28d0dbcc82b60f53ba1bacc3
----------------------------
Fix for bug#11775 Variable character_set_system does not exist (sometimes). Variable character_set_system is selectable now More accurate error message results during update of character_set_system and some other read only variables 	01afb3390bacc79931d4db36240ee28d8d13b9b1
----------------------------
Fixed a typo in the configure --help menu. 	e6bb90d6188f192134f9a349e6e0452884d157bb
----------------------------
fix (bug #10303: Misleading Last_query_cost value). 	68acf8fdea1af29bccc01bc251878989540a9aeb
----------------------------
added --core-file option to ndb executables added parseable printout in ndb_restore 	d5d360b180facaaab6f4ae10cfdae21890315c69
----------------------------
- removed the commercial BK license key from BitKeeper/etc/config to be able to push the repository to bkbits.net (License keys should not be put into the repository!) 	ec61094dafa9ce2c800c83c83aa166aeb3272dfb
----------------------------
configure.in: Back port of code to find the right 'ps' settings 	5e5184752d26956a9b42bc6b97269b1d4a019ba2
----------------------------
a fix (bug #10303: Misleading Last_query_cost value). 	c601bb87f856728a6429b9323914df59a6f87479
----------------------------
Bug #12043, do not core on misconfig unless debug compiled 	e0f3c5c0fb936fd0ebeee54c07ae16265e9537b9
----------------------------
bug#9948 changed client-charset behavior in 4.1.x libmysql, which issue BC prob sql_parse.cc: mysqld.cc: Added --skip-client-character-set-handshake. When this option is activated, client side character set (which is sent in handshake) is ignored, and server side default-character-set value is used for character_set_client and character_set_results, thus reprodicing 4.0 behaviour. 	f2ea1ac8b88136feabf103269ae63bc16f68bf37
----------------------------
configure.in: Changed back to 5.0.13-beta 	01f3a901a93661682e762e70c7257c0c32338d07
----------------------------
"Bug#12363 character_set_results is nullable, but value_ptr returns string ""NULL"" set_var.cc: Create Item_null instead of Item_string for NULL values variables.result, variables.test: adding test case "	3ff1acb8dbee3096aa67f4fee1fe56b0c52cd04a
----------------------------
Makefile.am: Make ports configurable from environment for test 	e2954b29a12f071023c2a75190bad8ba9f980298
----------------------------
Fix handling of libexecdir and sbindir in mysql.server, and note that basedir and datadir settings in script may be overwritten by settings in configuration files. (Bug #12550) 	e2643c2942fb07e25d9207c04a0c8dd1bdf845ce
----------------------------
config: updated tomas default checkout 	0c859d6651277c2ee3664cb14bb34a23d048731f
----------------------------
config: changed tomas default checkout 	90778fc8578c7d779546061c4f5af416dad3599e
----------------------------
configure.in: fixed build bug with ndb grep block 	83664a83657e6bf7b7dc677612621849475268c2
----------------------------
removed ndb grep from configure .in 	653e99dea2099a1d47c82ad8142c0ac3cf4c74cd
----------------------------
Use the hostname with which the user authenticated when determining which user to update with 'SET PASSWORD = ...'. (Bug #12302) 	f70beef6c7cb0f57211776854fba8d030f8389c8
----------------------------
ndb rename config.cpp -> ndb_config.cpp for case insesitive filesystems why wasn't this done in 4.1 directly 	523039c832c72d78c6c455bda7b583cbb580dc48
----------------------------
Revert patch for Bug #12595, it causes the sql_mode test to fail. 	15f97778ff5eb63f14ab09eab0f24542f8482a49
----------------------------
BUG#10950 make previous patch portable by abstracting to Ndb_check_socket_hup. Is in portlib rather than mysys due to the socket parameter being NDB_SOCKET_TYPE 	eaf3af22b7d7621344a921c98095690e70d87123
----------------------------
Save and clear run context before executing a stored function or trigger and restore it afterwards. This allows us to use statement replication with functions and triggers The following things are fixed with this patch: - NOW() and automatic timestamps takes the value from the main event for functions and triggers (which allows these to replicate with statement level logging) - No side effects for triggers or functions with auto-increment values(), last_insert_id(), rand() or found_rows() - Triggers can't return result sets Fixes bugs: #12480: NOW() is not constant in a trigger #12481: Using NOW() in a stored function breaks statement based replication #12482: Triggers has side effects with auto_increment values #11587: trigger causes lost connection error 	df32f7d621becb146b759ab12751596e4d199e5c
----------------------------
client/mysql.cc mysql default port cleanup (it's set in libmysql.c, NOT in my_getopt) configure.in autoconf 2.52 is enough to build mysql-5.0 	2870638ef2935fa4d938d46ed9d4373db11a4bec
----------------------------
sql_parse.cc: Don't skip SET command even if --replicate-wild* says to. E.g., SET ONE_SHOT TIME_ZONE = 'XYZ' should be executed (BUG #12542) 	9097bd2f08abb21b302d56d3d954ad45c247bf2a
----------------------------
set_var.cc, mysqld.cc, ha_innodb.h, ha_innodb.cc, srv0srv.c, srv0srv.h: Added innodb_commit_concurrency variable 	fc22a36d782f79d1b94a25db0dd0a7e9bb5bcc3a
----------------------------
Makefile.am: config.cpp => ndb_config.cpp, solves link problems on case insensitive OS ndb_config.cpp: Rename: ndb/tools/config.cpp -> ndb/tools/ndb_config.cpp 	fd4880814c69252f32becbb1e9eef56f10cdd116
----------------------------
"A fix for Bug#11901 ""mysql_stmt_attr_set CURSOR_TYPE_READ_ONLY join in subqry order by server crash"": failing DBUG_ASSERT(curr_join == this) when opening a cursor. Ensure that for top-level join curr_join == join (always), and thus fix the failing assert. curr_join is a hack to ensure that uncacheable subqueries can be re-evaluated safely, and should be never different from main join in case of top-level join. "	f6306a8db10a17d5ad560b8e53b0ec3d425bb977
----------------------------
"A fix and a test case for Bug#11909 ""mysql_stmt_attr_set CURSOR_TYPE_READ_ONLY nested queries corrupt result"" "	043f77ccdf67a9102c59828bed6b76e5e3840c2f
----------------------------
Bug#10473 - Can't set 'key_buffer_size' system variable to ZERO Give the user a warning if he tries to destroy the default key cache. 	1147e0027424acfed7cd833d0edbd6f111208f8a
----------------------------
Fixed ndb_config problems with merge 	db8e0b73066986d94360c73f7eda555fe0d5f449
----------------------------
client_priv.h: Removed ending comma in enum Makefile.am: config.cpp => ndb_config.cpp, solves link problems on case insensitive OS ndb_config.cpp: Rename: ndb/tools/config.cpp -> ndb/tools/ndb_config.cpp 	19ad0933f98894df518dcc3a0b6bec785041da99
----------------------------
Portability fixes: - Moved a few DBUG_ENTER statements after the variable declarations to satisfy some compilers (e.g. gcc-2.95.x, gcc-2.96, IBM xlc_r) in ndb/src/common/portlib/NdbMutex.c and ndb/src/common/portlib/NdbThread.c - portability fix for FreeBSD 4.x and HPUX: replaced atoll() with strtoll() in ndb/tools/config.cpp 	6893e5969a032d679e7ded45ce4986e951df5ba2
----------------------------
Added sql_mode saving to mysql_dump (BUG#5891, part 2) 	36f250a2400a24f2d9594b9ea40df9d0d957d802
----------------------------
fix for bug#12665 macro floatget was missing in config-win.h 	10615d54fbbef551cdf87824bde22ad6c786071a
----------------------------
null_key.test, null_key.result: Modified the test case for patch of the bug #12144 to display status of Handler_read_next before and after the tested query. 	dbec0c6e95458ab063f1aaec577ef2d962355567
----------------------------
store/restore sql_mode which was in force during ctrigger creation (BUG#5891) other sql_mode fixes 	b220fc47efcfe4a534b16c5c806d32f080cb40ec
----------------------------
ndb - mysql-test-run - ndb_partition_key remove length of frm files as this is config dependant 	2cb41714fa398f1ddc06af56eb66274ebe328403
----------------------------
"ndb - only run ndb_config test when using ""default"" config "	c0b4c8f13d83b64b7ee421808acf640e0f1f817f
----------------------------
a fix (bug #11546: Bad error message from inserting out of range values, SQL_MODE='tradition'). 	afb1ad8415ec912eda86c5ea8e1abc98088c89b8
----------------------------
Fix for bug #9110 (Max_join_size error) 	9bab1c09a6435ce3b301abba3fad462a21103af6
----------------------------
ndb - changed config 	1b3139977423a3fad4df9c3e80dab83ac2ca9341
----------------------------
ndb_config test requires ndb 	be8d46028f233aac0119d88b5759cddf8823bbb4
----------------------------
fix (bug #11964: ALTER TABLE gives wrong error message with sql-mode TRADITIONAL (timestamp)). 	efc8404a408158720a321fedf4a103d85404e7f4
----------------------------
ndb - add mysql-test-run test case for ndb_config 	b285050e52cd22202559b8dd9c18f4a3645fa598
----------------------------
Add tool to extract config info from ndb_mgmd 	5490cdfb24695ff23dad57d3b7b0976238800e4b
----------------------------
"Post-review fixes for WL#2713 ""Change IM behaviour so, that it only reads and alters one config file only."" "	9644bc3e2bbbe5c889ca737bfe893de883ceb57a
----------------------------
WL #2713 Change IM behaviour so, that it only reads and alters one config file only. Implemented on brian's request. 	b9fcdfbb0fdf456fd9a083c7fb53aa480f623d9f
----------------------------
printout of cluster config to use same tokens as documentation 	c9abae2ce2b2bea4f3bfc338effda6b5e93f12f3
----------------------------
ConfigInfo.cpp: BUG#12028, cannot use default section for hostname in cluster config made clearer error message 	2f01676b379427320c14c88cde111b17415608b8
----------------------------
BUG#12028, cannot use default value for HostName in cluster config + added switch --print-full-config + removed unused REP configuration 	74438e6683b0b3e42fbe8e72a7b45612a468b206
----------------------------
Bug#10932 - Building server with key limit of 128, makes test cases fail This patch allows to configure MyISAM for 128 indexes per table. The main problem is the key_map, wich is implemented as an ulonglong. To get rid of the limit and keep the efficient and flexible implementation, the highest bit is now used for all upper keys. This means that the lower keys can be disabled and enabled individually as usual and the high keys can only be disabled and enabled as a block. That way the existing test suite is still applicable, while more keys work, though slightly less efficient. To really get more than 64 keys, some defines need to be changed. Another patch will address this. 	ec15dda2bfa246d71a257da2d25c3d398b4d4cc4
----------------------------
Fix default for sql_mode so that proc table is actually created by mysql-test-run.pl. (Bug #11954) 	c5b433c3b38bc7288ada3e372727594b345077aa
----------------------------
"Reimplement use of ""config_readline.h"" to get readline configuration. "	7d7a4626fc627d086391c2e817ae2d479c359301
----------------------------
Fix number to date conversion so it always honors the NO_ZERO_DATE, NO_ZERO_IN_DATE, and INVALID_DATES bits of SQL_MODE. (Bug #5906) 	dd2f631ec45b955af458f8a3b1f9d7d7d0a4fa73
----------------------------
Cleanups during review Changed defaults option --instance to --defaults-group-suffix Changed option handling to allow --defaults-file, --defaults-extra-file and --defaults-group-suffix to be given in any order Changed MYSQL_INSTANCE to MYSQL_GROUP_SUFFIX mysql_print_defaults now understands --defaults-group-suffix Remove usage of my_tempnam() (not safe function) if( -> if ( and while( to while ( 	78c65b5adc2b5a7160820ceed8273b684cc1e8e8
----------------------------
a fix (bug #9881: ALTER TABLE gives wrong error message with sql-mode TRADITIONAL). 	b11d04e50a3bc176499194b869e5ed6d4123e41f
----------------------------
misc (memleak) fixes: added using ndb_end and showing mem allocation stat at exit added init of variable added destruction of LocalConfig to still memleak added delete of theFacade on exit stopSessions(true) on socket server to ensure destuction of threads added destruction of arbit manager thread added true option to stopSessions in transporter facade to ensure destructions of threads 	ec52d680d23ed13a1f1799301f77dc0da2eeae72
----------------------------
"Bug #7403  error ""Forcing close of thread 1 user: 'xxx'"" The problem was that on Windows, the socket was in a blocking state trying to read.  Setting killed=1 is not enough to break the socket out of it's read loop.   You have to cancel the read request or close the socket (which close_connection does). "	adfa1a259603f45da13fca4963b3bd90837b8bcf
----------------------------
Fix for bug#11685 SHOW TABLES; doesn't update Com_show_tables 	9c3349f5c6a5521a7474d5c12f39b9cdae1d552e
----------------------------
Fix crash caused by calling DES_ENCRYPT() without the --des-key-file option having been passed to the server. (Bug #11643) 	de9909faec7ae81b7946f314b97ff2da8be7fe2e
----------------------------
InnoDB: Make the srv_thread_concurrency checks more consistent. 	006bb7bbc902f82af8feb6ac239057ba1f8caad8
----------------------------
- bumped up version number in configure.in to 4.0.26 	c760d27cf1eb14d9b3c3d5ad66e687ede9f5fd20
----------------------------
configure.in: Enable build with CXX=gcc and gcc version 4 	22fd02d157b865b25a3cd2003b2f8b07b2242493
----------------------------
Many files: Fix Bug #3300 : if innodb_locks_unsafe_for_binlog is set, release locks on rows that we do not UPDATE or DELETE 	4fe03b705a38e283c3395a4a4bbae2d3ef1e9a72
----------------------------
"A fix and a test case for Bug#11172 ""mysql_stmt_attr_set CURSOR_TYPE_READ_ONLY date/datetime filter server crash"". The fix adds support for Item_change_list in cursors (proper rollback of the modified item tree). "	0efa6f86be8e7e29be6a85d0935ffbae69df7057
----------------------------
"A fix and a test case for Bug#10736 ""mysql_stmt_attr_set CURSOR_TYPE_READ_ONLY select within select"". The bug was caused by the reset of thd->mem_root to thd->main_mem_root in Item_subselect::exec, which in turn triggered too early free_root() for data which was needed on subsequent fetches from a cursor. This reset also caused a memory leak in stored procedures, as subsequent executions of instructions containing a subselect were allocating memory in thd->main_mem_root, which is not freed until the end of the entire SP, instead of the per-call mem_root, which is freed in the end of execution of the instruction. "	8b0cee88f0da2bbb47a359c29ade03673b97092a
----------------------------
configure.in: Enable build with CXX=gcc and gcc version 4 	7817b69d808dfa4b8ec7ac1915de33584177b9c2
----------------------------
Fix max_connections_per_hour handling when the global max_user_connections is also set. (Bug #9947) 	d4dea98f44c17064a43b582a0371cfae5ad3480a
----------------------------
InnoDB: Optimize the extension of files.  This will greatly speed up CREATE TABLE in innodb_file_per_table=1 mode. 	8064ee217f481d3866dbaab62b237bed6b61864b
----------------------------
If mysql_config is a symlink, resolve it before trying to find the lib and include directories relative to where it is located. (Bug #10986) 	13773acc1b534ab2edb6701f0c54184ae45d82f3
----------------------------
Fix handling of datadir by mysqld_safe to support specifying a different DATADIR via the command line or during ./configure and still starting up mysqld_safe via a relative path. (Bug #7249) 	9f4c796922306965c7dd0e352f65184d3a96b4ac
----------------------------
Restore creation of files for temporary tables in the tmpdir, which was broken by an earlier bug fix. (Bug #11440) 	d11ef13ad990ac3d44e923b7b2ddebcb9e0128c7
----------------------------
"mtr_cases.pl: Bug#11466: Script can now get test case name from test case file path on command line mysql-test-run.pl: Bug#11466: Added --skip-ndbcluster/--skip-ndb option mtr_cases.pl: Don't set --default-time-zone if opt file sets it Restart the server if time zone is given in opt file mysql-test-run.pl: Don't remove symlink to ""var"" directory in cleanup Removed duplicate/unessesary options to mysqld "	9426710c68dc27dade8d189baacc00296dd53e5d
----------------------------
Fix crash when an entry was added to the mysql.tables_priv table with an empty hostname. (Bug #11330) 	4429756e536949a1c769f0a95f093c08ef937b5e
----------------------------
fixed time_format printing (BUG#7521) 	02cac1c5e61c9274fc5eefc3486b41fbefb313fd
----------------------------
mysql-test-run.pl: Added --log-bin-trust-routine-creators to server start Increase and autoextend innodb tables 	9a8cb4406efff697daa6f5990d09a3b75ea028db
----------------------------
config/ac-macros/yassl.m4:     fix --without-yassl configure.in:                  fix --without-darwin-mwcc 	271f9e484dd1f69f4e595697e77b600e9b65abc7
----------------------------
"""configure.in"": Correct equality comparison: In shell 'test', it is single '=' (bug#11007). "	bd0386839c550e7ceaf86778933c4eb5e8b15407
----------------------------
Fix for bug #11174 (can't determine hostname under Windows 64-bit) 	5670a3f31ea8d16cfe25c5e30f27ff4bb9d3fbe7
----------------------------
BUG#11132 Connections stuck in CLOSE_WAIT In 4.1 (it is different in 5.0), we do not use the mgm connection after fetching the configuration (and if we did, we would have to have calls to check the connection and reconnect if needed - in case the mgm server had restarted) so we can disconnect after first use. This means we won't have connections stuck in CLOSE_WAIT when the mgm server shuts down. 	fda3561e169ea64f622a13c472fc0049b463205d
----------------------------
Fixes in function modify_defaults_file(): - Removed unneccessary variables. - Made a function of that part of code, which actually changes the line under modifications. - Fixed memory overrun problem with my_malloc. Too little space was reserved. - Fixed problem in case, when new option was added at the end of the section. Before, it was added as the last line of the section, even if it left empty lines between. - Fixed so that the configuration file is not saved unneccessarily, if no modifications are done. (file timestamp remains) - This should fix (at least partially) problems described in Bug#10806 	9f3daa23712665b73bcf8344b62646015112106a
----------------------------
"A fix and test case for Bug#10729 ""mysql_stmt_attr_set CURSOR_TYPE_READ_ONLY"". The bug was that we (me) don't perform proper cleanups of the prepared statement when done fetching from a cursor. Another patch. "	95e620485cc15b7d15c47776f9b50915065b7759
----------------------------
Fix for bug#10732: Set SQL_MODE to NULL gives garbled error message generate proper error message if we use SET ... = NULL for 'set' variables 	8574ed6fc657048d3ef7c05570d6bf8bf35d7553
----------------------------
ndb - autotest small script fixes - Don't use hostname -s as it's linux specific - Don't remove result unless scp worked 	a5a13ea8c8a00927b15d760f94220c28986b75c1
----------------------------
config-win.h: Enabled yaSSL on Windows Many files: Added yaSSL to Visual Studio 6 project files 	4d0a81aa8bad3d0fefb47b9e619d1a9d0e706772
----------------------------
Fix for BUG#10675 - MySQL fails to build with --openssl on Mac OS X 10.4 BUG#11150 - HP-UX yaSSL/OpenSSL configure/header problem Remove obsolete code. 	cc31c4c7fb0c400490c12f993abb567f20bc305e
----------------------------
BUG#10893 Cluster hangs on initial startup IPCConfig wasn't constructing the connect string properly. 	a65c0b000a611dabd3ff359953895003217f0b14
----------------------------
"Fix for bug #10015 ""Crash in InnoDB if stored routines are used"". We should not allow explicit or implicit transaction commits inside of stored functions or triggers (so in autocommit mode we should not do commits after execution of sub-statement). Also since we don't support nested statement transactions in 5.0, we shouldn't commit or rollback stmt transactions while we are inside stored functions or triggers. This should be fixed in later (>=5.1) releases. "	270b695f59b49aca75fbfc83c6635ee6efd8b8df
----------------------------
sql_select.cc, item_buff.cc, item.h: Fixed bug #11088: a crash for queries with GROUP BY a BLOB column + COUNT(DISTINCT...) due to an attempt to allocate a too large buffer for the BLOB field. Now the size of the buffer is limited by max_sort_length. group_by.test, group_by.result: Added a test case for bug #11088. 	90dd86907ef5f0714b18cc66851b9407a3794ee5
----------------------------
Moved tc_log_page_waits outside HAVE_MMAP, because it's used also outside. 	0d4c57f26267fed86eaa6f8e00daa893ecb34ae1
----------------------------
- include/config-win.h: removed double HAVE_CHARSET_cp932 #define - mysql-test/Makefile.am: added a pattern match for t/*.sql (t/mysql_delimiter.sql was missing from the source distribution) 	852a57300d3891f877ed368dae3f728284b89bce
----------------------------
*don't* mess with kernel defines, boy. and HAVE_ATOMIC_ADD/HAVE_ATOMIC_SUB is tested in configure 	f55a378e9a4724a25966829c0c54acb11b362296
----------------------------
configure.in: merge 	85d09062012cc7f920d42b19a8dcd09b2906c8b6
----------------------------
Fix hashcmp() to handle special case of zero length, which resulted in the hostname cache being ineffective. Based on patch from Jeremy Cole of Yahoo! (Bug #10931) 	24f14c93cf4c10f04994fd28a1aa0ddec03c7edc
----------------------------
Fix '%h', '%I', and '%l' format specifiers in TIME_FORMAT() to handle large time values as documented. (Bug #10590) 	2f0c098ef55c8952e0875df91422da14170e63b8
----------------------------
scripts/mysqld_safe.sh Only add --defaults-extra-file=$DATADIR/my.cnf if $DATADIR/my.cnf is readable. 	8a77c6f7417771efc826bd0595ca414ead94d582
----------------------------
Bug #10181 mysqld.exe crash with an access violation after INSERT INTO mysql.host sql_acl.cc: Make sure host.db is a valid string pointer before we do our lower_case_table_names comparison 	57a2b04007c994de9fd47ea3ce5e5df9633023d1
----------------------------
BUG#9993 2 unexpected warnings when dropping a routine and --skip-grant-tables - Dont perform automatic privilege handling for stored procedures when server is started --skip-grant-tables - Renamed view_skip_grants to skip_grants and added test cases for this 	8401cd5d790c02d7ae67137e3a9df88cf06484fd
----------------------------
Fix table renaming to not lowercase table names for all storage engines when lower_case_table_names == 2, as it did previously for InnoDB and MEMORY. (Bug #9660) 	aac55df4f40e2531b13b35e308c9fe5d00d2acae
----------------------------
Fix timeouts with SSL on Windows, and also sync the fastsend implementation with normal socket behavior. (Bug #8572) 	bd7775866c9ba18b57033dc910dd87cce6eff7fb
----------------------------
ndb - mysqltestrun run ndb_select_all --no-defaults 	66407729fb3330afbf870ee731feefc94f22cea7
----------------------------
configure.in: Increment to next version. 	8091707afe469a8452046c1823ca19c9b57ac7aa
----------------------------
Change Last_query_cost status variable from global to thread-local. 	b6179919f3fbdc82e3bb7eb22ee639f2b7c6053c
----------------------------
sql_yacc.yy: missing semicolon added sql_base.cc: bad merge fixed sp_head.cc, view.test, view.result: Correct restoring view name in SP table locking BUG#9758 configure.in: restore -fno-implicit-templates -fno-exceptions -fno-rtti in configure 	56fa40e558851eed58b87a0a29c09008e8a80595
----------------------------
a fix (bug #10339: Incorrect error is displayed if try to set value of internal ' warning_count '). 	122c72e248ec2efb90ed5a723fab596bc4f537ef
----------------------------
concurrent-insert can now be set to 2 for concurrent inserts when there is holes in the data file myisam_max_extra_sort_file_size is depricated Ensure that myisam_data_pointer_size is honoured when creating new MyISAM files Changed default value of myisam_data_pointer_size from 4 to 6 to get rid of 'table-is-full' errors 	2d25da2a4ba244f4de26581e5b16518230f381df
----------------------------
- don't include sys.h directly in the autogenerated libedit source files - include config.h instead (compile fix for FreeBSD and AIX 4.3/5.2) 	27ab139dfa897513db7ff100d7fec415f6662010
----------------------------
"- added a check for ""u_int32_t""  to configure.in that will define HAVE_U_INT32_T when available (needed to fix a double typedef in libedit) "	f6593cb7d418b72ed60c77c32aa9062b2b2ee0f1
----------------------------
"comment change (post-review of ""replication of triggers""). Btw date_formats segfaults with --ps-protocol - not caused by my changes though; I'll file a bug report. "	b6ca1a1485d03db27367296b9719cc33ed2978a4
----------------------------
Makefile.am, configure.in: Enable creation of embedded lib when --with-darwin-mwcc 	faf8f825b546e33b0ec78f88afe7b02b3606bb98
----------------------------
configure.in: Bumped up version number to indicate 4.1.12 was branched off 	2f9a28b4cca7c4ed1d64f5bb72549a6eea6e07e4
----------------------------
ndb - autotest fix configs and scripts 	749129487e30f9b22f545ab46f605cc1a5cfb938
----------------------------
Add support for slave_compressed_protocol, slave_load_tmpdir, and slave_skip_errors in SHOW VARIABLES. (Bug #7800) 	d398b6eb51ce29c27a8479594dd9cd167f177b0f
----------------------------
"[backport of 4.1, because 4.0 autobuild now hits the same problem; when merging just use ""ul""] In configure.in, don't remove $AVAILABLE_LANGUAGES_ERRORS_RULES at end because config.status may later need this file (if it does not find it it won't incorporate dependencies of errmsg.sys in sql/share/Makefile). In sql/share/Makefile.am using ""all:"" leads to double-""all:"" in Makefile. "	a1948f769c596aeefd57a8ebee9386d261b1897f
----------------------------
ndb - autotest put config files in bk 	df5eedb8aa8c0c54557e759d08f6fd9fe68233c4
----------------------------
ndb - autotest use newly created script for faster handling of several configurations 	df80304435713606b10b2879411ba6c93b2aba99
----------------------------
ndb - autotest update make-config script 	9d0c5428386ddb8fa7c5451f0460e88a40b0ac8e
----------------------------
Bug #9721 net_write_timeout not used on Windows viosocket.c: Use ?: syntax to simplify code for setting both timeouts 	e4523c23193dace1f7e4d398d181f49df631cf8d
----------------------------
A fix (bug #5056: defaults-extra-file throws no error when file is inaccessible). 	6a7306823b9cd57dedea94762c6bf81badf7e088
----------------------------
A fix (bug #7970: CONFIG_NR_CPUS not defined for kernel header percpu.h). 	e1b6b7fe36cc1f116062389c0e8b0d412e922490
----------------------------
Bug#10193 Invalid DataDir in config causes ndbd segfault 	a17bf3f46510c205cb83520e693660a6b7090440
----------------------------
making rpl_sp.test hostname-independent 	688d9ee03c145d4f03c59c2b7aa427a7072c0de7
----------------------------
Bug #9721 net_write_timeout not used on Windows Added an extra parameter to all calls to timeout(). 1 means we want to set the write timeout 0 means we wnat to set the read timeout viossl.c: Add which parameter to ssl timeout routine vio_priv.h: Added which parameter to vio_ignore_timeout and vio_ssl_timeout violite.h: Add which parameter to vio_timeout sigs net_serv.cc: Use proper which code in call to vio_timeout to set the proper timeout viosocket.c: Set the appropriate timeout in vio_timeout 	e7d7c0f23630cd75d6912feb4196a84f82566a57
----------------------------
Fix option handling of ./BUILD/compile-* to not try and pass options to configure. It was already changed not to support additional options, but now it was trying to pass all of the options to ./configure. (Bug #8648) 	bff994f86b319ed8bece36e7dfa13d92560be9a5
----------------------------
terminal.c, sql_bitmap.h, my_sys.h, configure.in, config.h: Initial Metrowerks CodeWarrior compiler support 	c4acdc6e0fcdd74e62eaeadac7c7508f0a4950a8
----------------------------
fix --defaults-file and --defaults-extra-file broken by a wrong merge 	560a90831590b7bb1aec93aacfd1a6e8da36780a
----------------------------
- adjusted the start and stop priority level in the mysql.server init script for chkconfig on Red Hat Linux (BUG#9444) - we now match the levels used by the MySQL as shipped with Red Hat Linux (e.g. RHEL3/RHEL4) 	59930b6e84109a511c4d91e3e3bf1efc9781fbd6
----------------------------
yassl changeset 2: remove FIX_GCC_LINKING_PROBLEM and -DDEFINE_CXA_PURE_VIRTUAL replace echo in configure.in with AC_MSG_WARN/AC_MSG_ERROR don't set -DUSE_MYSYS_NEW for gcc 2.95 set $USE_MYSYS_NEW even if CXX is g++ yassl bugfixes instantiate all yassl templates explicitly 	9c332d8d2a09782ebc773387556f85e63433cd1d
----------------------------
Fix 'CREATE TABLE ... LIKE ...' when lower_case_table_names is set on case-sensitive file systems and the source table was specified in something other than lowercase. (Bug #9761) 	8ef6ae74420b080ddc865a468013b42004cc1d49
----------------------------
Add default configuration files to my_print_defaults usage, and add handling of configuration file in the Windows shared system directory. (Bug #5354) 	2441da8cd96e1d7a8875d01692a08a5ff0a2320c
----------------------------
Fix tiny typo in configure.in 	b31960f71dd4d5809635858d774bdf292a067b3d
----------------------------
dict0dict.c, dict0dict.h, fil0fil.c: Fix a problem in crash recovery of .ibd files on Windows if the user used lower_case_table_names=0 or 2; the directory scan in crash recovery forgot to put all paths to lower case, so that the tablespace name would be consistent with the internal data dictionary of InnoDB; remember that InnoDB puts internally all database names and table names to lower case on Windows, regardless of the value of lower_case_table_names 	bea92e16463d9ada60a975298268fa2c13c4e53f
----------------------------
Merge changes to acinclude.m4 that are now in config/ac-macros/misc.m4 	fcc04b2ffd51ab4fb4799c99054499e61eb42136
----------------------------
Added a check for config-file. 	005c447183651411ead446e463909118f7020298
----------------------------
"Fixed Bug#9834, ""mysqld_multi --config-file parameter requires absolute path"". "	c98b90bbfb168f5d5653380e54cd19eeba3b9fff
----------------------------
"Fixed Bug#6221, ""mysqld_multi doesn't read the init_connect option in my.cnf correctly"" "	d4d0f9c1269cbac0c7accca7d27eb97138eb3a49
----------------------------
Final fix for NPTL configuration (bug#2173, bug#5871, and bug#9497). 	74fdb2663cb97bac5bb60f0aa2431bd9f951b787
----------------------------
Post-merge fix of the fixes for NPTL configuration (bug#2173, bug#5871, and bug#9497). 	1523119091522b364692dcb65e181d7e193d65ee
----------------------------
Merge: b890c05 70ed0ea Automerge / manual check  of the fixes for NPTL configuration (bug#2173, bug#5871, and bug#9497). Post-merge fix will follow. 	49ac2dac3e148b994859ab8b43de40270ed409b5
----------------------------
- fixed NDB_VERSION_BUILD in configure.in to have the correct number (4->5) 	83c289665fa0e94bb5f6e4e29af3abacc3bf17f7
----------------------------
"- bumped up version number in configure.in to 5.0.6 now that engineering branched off for the 5.0.5 builds - tagged ChangeSet 1.1882 as the ""clone-5.0.5-build"" branchoff point "	cd10a69be2afb0f2fcea48446160c0ba2c645b9d
----------------------------
"Step 3 of the switch to support configuration with NPTL: Change ""configure.in"". The branches for Tru64 (ex: OSF/1) and Linux are separated, and for Linux 'getconf GNU_LIBPTHREAD_VERSION' is used to tell between Linuxthreads and NPTL. "	70ed0ea4cb109262fe3ba18705f94f4f70fcf239
----------------------------
- added missing file config_readline.h to the source distribution 	11bb365f689d866976e3eaf8c0465b56c7e34c6d
----------------------------
"Step 2 of the switch to support configuration with NPTL: Define a new CPP symbol that the target OS is Linux, and use it where only the OS matters and not the threads Library. Until now, 'HAVE_LINUXTHREADS' was used to indicate ""Target is Linux"" in many places. When we support configuration with NPTL but no Linuxthreads, this misuse must cease. "	eaa79cb45234f4a675919cb4565adac45601e971
----------------------------
Step 1 of the switch to support configuration with NPTL: Rename 'IS_LINUX' configuration variable to 'TARGET_LINUX'. 	48ba5e495666fd5db051c1a1aa9d4d61a85f07c0
----------------------------
BUG#9568 mysql segfaults from CTRL-R - Segfault because of passing a 64-bit pointer to 32 bit integer. - Add new include  config_readline.h which will calculate some new defines based on what is found in config.h - This file was originally included in readline 4.3 as config.h.in, only the part that makes new defines have been moved to this file. 	4a4c9017add2b693c64526b5f46181c128459d5b
----------------------------
Set bindir, datadir & others if --basedir is given. This ensures that one only has to set basedir in [mysqld] group when moving a binary installation to a not default polace Use for now safe_mysqld by default. (unless use-manager is set in the [mysql.server] option in my.cnf) Search first for defaults files in basedir and then in datadir (like mysqld_safe) 	0c03aea1aa6b94b7b96324dbd597e295e268e85b
----------------------------
Fixed core dump with long timezone names Don't abort on bootstrap if a wrong --default-storage-engine is specified 	8d919770c71178cc430fd515eaed3859e65792da
----------------------------
"Adding --innodb_fast_shutdown=2 which shuts down InnoDB faster than the default ""1"": most InnoDB threads are not terminated properly and the buffer pool is not flushed to disk. Still no committed transaction is lost as we flush the logs to disk. InnoDB does crash recovery at startup after this shutdown. Using this shutdown in testsuite (mysql-test-run --mysqld=--innodb_fast_shutdown=2) saved 3 minutes (13% of total time). "	bc48cda57d4117c2cc0696318e840a514fdcc1e5
----------------------------
Don't allow the server to start up when an invalid user is specified via --user or in configuration. (Bug #9833) 	47ab7c87851fa49495230927d4156ed0259fa5e5
----------------------------
Added test case for BUG#6129: Stored procedure won't display @@sql_mode value. 	6a46d0cd8a28be0d77dcefeb4bc0630b6d8ed8d7
----------------------------
InnoDB: Ignore character set mismatch in ALTER TABLE and RENAME TABLE if foreign_key_checks=0. (Bug #9802) 	d5646eb6c5c7155abc3978734db9d6040c28df72
----------------------------
"In configure.in, don't remove $AVAILABLE_LANGUAGES_ERRORS_RULES at end because config.status may later need this file (if it does not find it it won't incorporate dependencies of errmsg.sys in sql/share/Makefile) (thx Serg). In sql/share/Makefile.am using ""all:"" leads to double-""all:"" in Makefile (thx Konstantin). "	f356fb08d6ba3b4b0259fe34a20cf5c8afd26487
----------------------------
"Manual transfer of the change in ""configure.in"" (4.1) to ""config/ac-macros/character_sets.m4"". "	fc0e6aa274c876fac17705d37b6d802f0e7d02e0
----------------------------
"Merge: 588559e ea39dff Proper handling of ""utf8-general-cs"" clollation: Missing parts in configuration. "	198b6117f9df61dc2b65369bade00015dba1877f
----------------------------
- bumped up the version number in configure.in from 5.0.4 to 5.0.5 to indicate that engineering has branched off from the 4.1 tree to build the 5.0.4 release 	d936a80ceaa813170c94c681cd97fb80b28b901c
----------------------------
remove the rest of isam/merge references fix a race condition in TC_LOG_BINLOG::unlog 	810b2c3d4059d0a03c1fcf48a9823db8a5dd5c6c
----------------------------
Fix handling of max_allowed_packet and net_buffer_length in embedded server when a size suffix (K, M, G) is added. (Bug #9472) 	9e16f121455042848dd5234b46bd9ef076798dfd
----------------------------
As of 5.0.4, all builds will use '--with-big-tables'. Let development builds follow. 	750de61d2357f682f32f540c38681a85d98bcdfb
----------------------------
Do-compile: Added option --with-big-tables 	bb713b13df68e8bd72879990187c021b70f2af9b
----------------------------
"Implement the new '--with-big-tables' flag to ""configure"". Using it comes merged from 4.1. "	c4726b9e2046b6c5f36e0bb472211752271c408c
----------------------------
Merge: 4bd9070 1ad3d33 Propagate the new '--with-big-tables' flag from 4.1 to 5.0. Incomplete, as the macro body must ne in the new file 'config/ac-macros/misc.m4' which will follow in a separate changeset. 	27a0de24435f1d331308037bada0c1d12f49809b
----------------------------
"Introduce ""configure"" support for a new '-with-big-tables' option that can replace the current way of passing '-DBIG_TABLES' to the compilers. This is needed even in 4.0, as 'Do-compile-all' must use this new approach for all ""max"" builds in 4.0, 4.1, and up. "	c90a6c706772208b658e544b0b1732880b713d4f
----------------------------
Remove redundant my_security_attr_free() from handle_connections_shared_memory (double free spotted by Monty). 	2115900460946d2a9faab973d8860ef0124a8694
----------------------------
"""After Monty's review"" changes to the fix for BUG#8325 ""Deadlock in replication thread stops replication"": s/sleep/safe_sleep (thread safe); sleep 0/1/2/3/4/5/5/5 (get slave less late); no message on error log (deadlock is too common sometimes), a global counter instead (SHOW STATUS LIKE 'slave_retried_transactions'). Plus a fix for libmysql/Makefile.shared "	19499229ed912dccdfe8eebe8ab1040804d9dd0d
----------------------------
disabling rpl_timezone.test if --ps-protocol, as binlogging of CONVERT_TZ(,,@@time_zone) fails there; until we find reason (me and possibly Konstantin). 	fc7234cb4a08bd471f103624287b579a257bfd8e
----------------------------
configure.in: 5.0.3 is a beta 	4959ed7618342be80573f6712f5a6a190ac408c0
----------------------------
BUG#9072 'Max_error_count' system variable cannot be set to zero - Chaned min value in mysqld.cc - Added testcase to warnings.test 	a5bb4810ff33e89e160e340e9ab56cbb2fa5c605
----------------------------
Fix for bug #7100: relay_log_space_max missing from SHOW VARIABLES 	4c3e8b078c16b30ff70cdc6c2465630a4435722a
----------------------------
IM setup patch. Enable IM instead of mysqld_safe in start/stop script. Alter RPM to include mysqlmanger binary and config files. 	28bf536411100596694d4380dc2e613653df9369
----------------------------
set_var.cc, mysqld.cc, ha_innodb.cc, sql_class.h: Add a settable session variable innodb_support_xa; setting it to 0 can save up to 10 % of CPU time and 150 bytes of space in each undo log trx0trx.h, trx0undo.c, trx0trx.c, trx0roll.c: Enable XA if innodb_support_xa is not set to 0; make prepare to do log fsync's according to innodb_flush_log_at_trx_commit 	a95f09e228919cdd9e6ded344d925e95225ecf14
----------------------------
bug#9089 ndb - Reenable MAX_OPEN_FILES to enable LCP in some situations 	364b3b7b9ba86e27dd54f72929576b2c76a8fb65
----------------------------
sql/ha_ndbcluster.cc after merge fix sql/sql_parse.cc correct max_connections condition 	e40bf3c40be557687bcd2d318b092ac0ed0275ef
----------------------------
configure.in: bug#5102, bug#6862 define HAVE_VIS_H to libedit only if header and strvis() exists 	73eea6dde9db8f7c64cf82dc649d6cc564960cd4
----------------------------
Add all SQL_MODE settings to proc table. (Bug #8902) 	2b2efa420802b9dd7a6302ace3eb4a174c9b5fc2
----------------------------
configure.in: corrected ndb version 	6a46a75a20452640b9d6d655b92f4111090388cf
----------------------------
This code change has 0 effects as it's about the case where innobase_very_fast_shutdown!=0, which is always false. In a very fast InnoDB shutdown, we just ensure that no more transactions are running, flush InnoDB log, signal InnoDB threads to die, and then return from InnoDB (from innobase_end()) without waiting for those threads to actually die. I have tested on a 4CPU machine that even with --innodb_flush_log_at_trx_commit=0, this optimized InnoDB very fast shutdown loses no committed transactions. Patch pre-approved by Heikki. 	8b625529c971018339638b2c2f18981886dcc963
----------------------------
- bumped up version number in configure.in from 4.0.24 -> 4.0.25 (ChangeSet 1.2073 was already tagged as 4.0.24) 	8948e774f611211f7136ed1493d9d011145dbad5
----------------------------
Fixed crash if max_connections is exceeded. BUG#8996 	24728104897219d92523f3a5c416f2f433476978
----------------------------
Default value of slave_transaction_retries is now 10 (whereas it's 0 in 4.1, for safety as this is new code). 	fa27e11923af273a83aefbecd1c3b9405593c62b
----------------------------
ha_innodb.cc: write_row(): Detect SQLCOM_OPTIMIZE, so that also OPTIMIZE TABLE will commit at every 10,000 copied rows. 	a8aced1e64694debe77b78693f25a417cc0eefa7
----------------------------
Better approach for prelocking of tables for stored routines execution and some SP-related cleanups. - We don't have separate stage for calculation of list of tables to be prelocked and doing implicit LOCK/UNLOCK any more. Instead we calculate this list at open_tables() and do implicit LOCK in lock_tables() (and UNLOCK in close_thread_tables()). Also now we support cases when same table (with same alias) is used several times in the same query in SP. - Cleaned up execution of SP. Moved all common code which handles LEX and does preparations before statement execution or complex expression evaluation to auxilary sp_lex_keeper class. Now all statements in SP (and corresponding instructions) that evaluate expression which can contain subquery have their own LEX. 	5a6c7027f070aaa634051870d88bc185fed70878
----------------------------
Fix for bug #8701: Server crash on 'set @@transaction_alloc_block_size=...' 	a55711b424b483296aa141fefd18d3f429215867
----------------------------
Fix bug in checking of table-specific grats that caused IP/NETMASK hostnames to not be matched correctly. (Bug #3309) 	5d2bedc3919ada3a1891759de24f482b4dec77d3
----------------------------
Create directory for UNIX socket in mysqld_safe if it doesn't already exist. (Bug #8513) 	bb9d7bfc792b8496641ee633875266e65cdc1c58
----------------------------
"Fix for BUG#8325 ""Deadlock in replication thread stops replication"": in slave SQL thread: if a transaction fails because of InnoDB deadlock or innodb_lock_wait_timeout exceeded, optionally retry the transaction a certain number of times (new variable --slave_transaction_retries). "	11a1c83c03285ccf6e28a7849f272323a493424b
----------------------------
Make sure that the filename for temporary tables is built with fn_format() so that extra slashes are handled in tmpdir. (Bug #8497) 	ac69a4a22c7d2753631b81eb5fe7a5d05a272bf2
----------------------------
Fixes from Tomas's review of 'use configuration mgm handle as a transporter'. This should help with the  PURGE STALE SESSIONS problem. 	7fda68612d80e5a9af0305e6056af60189401250
----------------------------
#ifdef innodb specific code, (old_innodb_table_locks) 	a0aac3e3f85eba0bdbdbf0381e603fee6b701415
----------------------------
Don't try to create a symlink if the DATA DIRECTORY specified for a table is the same as the normal datadir for that database. (Bug #8707) 	3ecabaa9f7c0f6cf5d38391c5e38580d798802fa
----------------------------
mysqlbinlog: safety measures (safe setting for completion_type, auto-end-rollback in case crashed binlog) which cannot hurt. 	69fb5af28a11c065a1b0d25b9fb966a75274b255
----------------------------
log_event.cc: cast sql_mode to ulonglong before int8store, otherwise the implementation of int8store based on >> complains that we do 32-bit var >> 32 which is undefined according to C standard. (compiler warning appeared on SGI Irix) 	66daa0d2bd5b8d07abac79c15d7ab12cad1f403a
----------------------------
Fixed a compatibility problem. 1) If my.cnf is found in datadir and basedir, give a warning and use the one in basedir. 2) If my.cnf is found in datadir, use it, but give a warning. 3) No warning if my.cnf is in basedir. 	6e9b26e8b75422959b48c673b5f6abeae7fa69ad
----------------------------
config-win.h: Activate Unicode collations in Windows version. 	99937c2b9194a50a5c175ab6cf50b0056836dd84
----------------------------
Use the mgm connection used for fetching configuration as a transporter. 	e88eba65a7f706c180076f62d7ba46db61921655
----------------------------
Fixed compiler warnings Fixed failing myisam.test and rpl_rotate_logs.test on some configurations 	f55e2002484b822851b5ce26e65eb82c0caed5f5
----------------------------
fix for a bug with my_print_defaults with --defaults-extra-file= option 	7640c63d26e4d2e37cf31ded328df6ac75b35362
----------------------------
made IM to work with --defaults-file smoothly 	dbc0937dd058ccf7861aa62caba32b63328bd4f1
----------------------------
Merge: fe8c9e4 c926e43 Merge: don't add this into configure in as it is already in config/ac-macros/character_sets.m4 	dcb0f52e9a5dffaa5c725b2da914f95c5705fac7
----------------------------
innodb.test, innodb.result: Remove the test show status like InnoDB_rows_read; the value on IA64 was 0.01 percent bigger than on x86; maybe some different optimization 	173e200c65cecbcac4d507053a993112dc2af70e
----------------------------
"added mutex lock for ""get config"" "	7a057433e1cd919b25adcc7db377fef4b70a0ed9
----------------------------
init_db.sql: Make SQL more readable, substitute hostname at runtime mysql-test-run.pl: Run init scripts with /bin/sh, ignore return code 	682a27c1f00b184b5ddf36c008020d4d5041ef7e
----------------------------
bug #8556 corrupt ndb_mgm show printout for certain configurations 	33c297cfb0c8675fe1d6e4ace120d433b8725b1f
----------------------------
removed NdbMgmHandle from TransporterRegistry constructor changed to set NdbMgmHandle from IPPConfig, and use info from configuration, instead of mgm handle from config retrieval 	a3a1d50a724c420d2b399004fa9cff7cc1804ab8
----------------------------
WL2278 - Dynamic port allocation for cluster nodes Re-introduce ability to have [tcp default]PortNumber= 4242 in config.ini to NOT use dynamic ports. Dynamic port numbers are the default though. We still use the mgm port for transporter connections to a mgm server though. This is (slightly) different than before, but since you have to be able to connect to the mgm server anyway, this does not require extra firewall rules or anything. 	e29f14c8437c2548e3c212b78f51d59c01cd905e
----------------------------
Always lowercase database names from 'host' and 'db' grant tables when they are loaded and lower_case_table_names is set, but issue a warning when it is done. (Bug #7989) 	a6afab6a55026bf4d8fce13d5ab44decf92ffe68
----------------------------
InnoDB: Create temporary files in the MySQL tmpdir instead of $TMPDIR. (Bug #5822) 	a1a78bbc4a80322b231f5e68751bbeb10b209af0
----------------------------
Allow hostnames that are IP addresses with a netmask even when running with --skip-name-resolve. (Bug #8471) 	3d7a384d00aa3c1dd42a46d9c871b39802e57ec3
----------------------------
corrected error in checking  get() return value from config iterator 	c9e5baccf5d1bcc569602f6e7164a71454678876
----------------------------
mgmapi to return connected port and interface _only_ if it is actually connected use m_cofigMutex when configuration is accessed use c++ iteration interface everywhere in MgmtSrvr code use NDB_INVALID_SOCKET everywhere in Services.cpp 	05ad345db41cb4091b2fe11bc61bedb7b22a1a72
----------------------------
return NDB_INVALID_SOCKET instead of -1 for Windows compatibility. (Found in review by Tomas Ulin) 	bb65bbe3fc09ac75fa57b4b2e566f6d00a00099a
----------------------------
BUG#6749: If there is no current database, then nothing should be binlogged if binlog-do-db or binlog-ignore-db are in effect.   (In the future 5.1? 5.0? I think each statement should be verified against the filtering criteria based on the database it *uses* and not the *current* one.  But, right now the *current* database is what counts according to the semantics of the manual.) 	bef05eda10d384a22b4ce2151bacea41fe390b54
----------------------------
added more debug trace + removed double check for invalid socket 	eaec8e821a0524536af74997be3f0d6c3e36bc37
----------------------------
Fix bad 4.1->5.0 merge of Bug#6273 (mysql_config --libs when using bundled zlib) 	c55a2de5738fffe6de5dd588399d9aa2575c75d3
----------------------------
Impl5 of WL2278 - dynamic port allocation for cluster nodes Treat the management server specially. It should always be the server in a transporter as we then have a known port to connect to on node restart. allows a mgm connection (i.e. to the management server port, our known port) to be transformed into a transporter connection. Also, clean up the struct TransporterConfiguration (used to be a struct for each transporter type. now there's just one) 	e795feca68cf813d1b3b1b63dca95e6e75d07dac
----------------------------
Fix removal of tables from cache when the database they are contained within is dropped and lower_case_table_names is set. (Bug #8355) 	5ebbc834febff6e37228196424de074c83e80671
----------------------------
Do-solaris-pkg: Deposit the new .pkg.gz into the ~/$hostname/ directory 	1a4702aecebc68cf6d884249269ca74ff11d6228
----------------------------
"A fix for Bug#6273 ""building fails on link"": we should not use CLIENT_LIBS in mysql_config as CLIENT_LIBS point to builddir when we use the bundled zlib. "	e531136c1f359280cf8c757c75304de8205393d9
----------------------------
Bug#8057 Fix crash with LAST_INSERT_ID() in UPDATE, Tests included, 	b8ceaa4a1f8c664558a5212287e7c85950cb4cb8
----------------------------
made an .sh file of ndb-config-2-node.ini instead 	e70445d31842e10eeea4bfd9b651e1b382c06fbe
----------------------------
"WL#1062 ""log charset info into all Query_log_event"": we store 7 bytes (1 + 2*3) in every Query_log_event. In the future if users want binlog optimized for small size and less safe, we could add --binlog-no-charset (and binlog-no-sql-mode etc): charset info is something by design optional (even if for now we don't offer possibility to disable it): it's not a binlog format change. We try to reduce the number of get_charset() calls in the slave SQL thread to a minimum by caching the charset read from the previous event (which will often be equal to the one of the current event). We don't use SET ONE_SHOT for charset-aware repl (we still do for timezones, will be fixed later). No more errors if one changes the global value of charset vars on master or slave (as we log charset info in all Query_log_event). Not fixing Load_log_event as it will be rewritten soon by Dmitri. Testing how mysqlbinlog behaves in rpl_charset.test. mysqlbinlog needs to know where charset file is (to be able to convert a charset number found in binlog (e.g. in User_var_log_event) to a charset name); mysql-test-run needs to pass the correct value for this option to mysqlbinlog. Many result udpates (adding charset info into every event shifts log_pos in SHOW BINLOG EVENTS). Roughly the same job is to be done for timezones :) "	ed1696f6b9d2ed32168ddaba4c2d9cd1529022a1
----------------------------
Use -DUNIV_DEBUG (extra debugging for InnoDB) when configuring with --debug=full 	e7450d9781781666503837d748cf313e3f406f59
----------------------------
configure.in don't define UNIV_DEBUG in CFLAGS/CXXFLAGS anymore sql/mysqld.cc hide from the user options that do nothing sql/sql_update.cc better fix for uninitialized used_index 	33fc4b10b69e06bb4162a3d2650eab00e0b8927c
----------------------------
"backported configure flag from 5.0 workaround for HPUX signal.h error, missing extern ""C"" moved my_thread_end to NdbThreadExit more checks for shared memory transporter signum setup "	653c6fa1adeecaf7136b6537eff8ae2e2d31d841
----------------------------
Merge: c02d97b 2d01238 after merge fix up: we should use REPLACE for $hostaname queries to avoid problems when $hostname=localhost. 	40daecb8b41bb95232e0f0f7368fe9899594cdd9
----------------------------
character_sets.m4: --with-uca configure.in argument. The rest of the changes are pending from 4.1 tree 	c9c8955fc9a8647f69ab9c762150a0e60021d182
----------------------------
"- Bootstrap: Rename already existing build directories to something more useful than *.old.<PID> - use the mtime of configure.in instead. This gives us a time stamp of when this last build directory was created, e.g. ""mysql-4.0.24-build-2005-01-31-16:47"" "	46e0018b96169f228fbd457b5dff17c4843e423c
----------------------------
Use single quotes to set SQL_MODE in mysqldump output in case ANSI_QUOTES was already defined on the server the dump is loaded into. (Bug #8148) 	71670605acdfd6b55a5c62a534c20587e4a1139e
----------------------------
Restore behavior of 4.1 that allowed any one argument to be passed to the server on Windows service startup, and not just --defaults-file=file. This appears to be an unnecessary limitation, but fixing that will require a larger refactoring of the Windows service installation and startup code. (Bug #7856) 	d1a2db170c618befb970cef064d244399f39728c
----------------------------
Bug#8167  signal usage clash between mysql server and ndb shared memory added shared memory config parameter, signum for use in signalling added global variable for holdign signum to be used for shared memory connection only fiddle with signals if it is set simplified common ndb client option handling 	732d1a5e81037407067c345f5f6f33ee95210e6e
----------------------------
Remove unused configure.in name TOOLS_LIBS. 	2b858ae68279885f74ac15ff9b9c6eecb3390d42
----------------------------
query_id and my_xid -> ulonglong fix for binlog+autocommit+tclog comments, style fixes 	3c5060981f6de05473a981df259c1a42e084cc81
----------------------------
configure.in: Add -DDBUG_ON to CXXFLAGS whenever it is added to CFLAGS. Thus, sql/ha_innodb.cc will be compiled with the same setting of UNIV_DEBUG as the rest of InnoDB, i.e., --with-debug enables InnoDB ut_ad() assertions everywhere. 	4a2aef45ce6c834345c433fb13da5cb45af14c07
----------------------------
"Fix for bug #7899 ""CREATE TABLE .. SELECT .. and CONVERT_TZ() function does not work well together"". Now using simplier and more correct implementation of st_lex::unlink_first_table()/link_first_table_back() (It also nicely handles case when global table list is created because of implictly used time zone tables). (2nd attempt) Fix for bug #7705 ""CONVERT_TZ() crashes with subquery/WHERE on index column"". Implemented new approach for caching objects for constant time zone arguments. Now instead of determining whenever these arguments are constants and performing time zone lookup at fix_fields() stage, we do it on first get_date() invocation. Cleanup of global @@time_zone variable handling. "	80282016c230ea6e91d629b1147a40e262487cb0
----------------------------
Makefile.am: updated doxygen Makefile for changed examples directory .del-demos.tar~8e6dfbc510a6e323: Delete: ndb/ndbapi-examples/configurations/demos.tar Many files: mvdir 	cc07a3a146101ae48f48ebe55361f2be0959a6b8
----------------------------
timed_mutexes moved to include/my_sys.h and mysys/my_static.c to avoid linking problems referring to the variable from .c programs. 	c38886b20c8f8e74304f1c5a507dbc4635b53da2
----------------------------
Only enable Innodb extra debugging when using the --debug=full configure option 	f16b456ddc79c48af9070c79cb1593c0e1f6d989
----------------------------
Merge: ee22415 638e2bd InnoDB: Ignore innodb_autoextend_increment patch from 4.0, because it was backported from an earlier implementation in 4.1. 	2f1ce9e6c21eb4d58398acd6336f521188365e48
----------------------------
InnoDB: Backport innodb_autoextend_increment from 4.1 	638e2bd733b753a09e26a9a7bfff692b32a109d3
----------------------------
Test case (bug #7261: Alter table loses temp table with lower_case_table_names=2). 	35b521c9259ccda523c36170de2a3eae1794265a
----------------------------
"A fix for Bug#5787 ""mysql_stmt_prepare is upto 8 times slower"": it's crucial to disable Nagle algorithm on client for no-reply commands (like mysql_stmt_free) to always work fast. Nagle algorithm instructs the sender to buffer (store) data if any unacknowledged data is outstanding and the size of to-send data is less than the network segment. It was exactly the case with COM_STMT_CLOSE after COM_STMT_PREPARE, so the client was waiting for Nagle timer to expire or for ACK from the server, while the server was holding up ACK because of delayed acknowledgement algorithm. The tricky part is that we have been already disabling Nagle algorithm (by setting TCP_NODELAY) almost everywhere except Windows (and maybe Netware). It is the reason why the bug was repeatable only with Windows client. "	4a7fd21f123c47d82fc9a687a89e772f8df6333c
----------------------------
Set lower_case_file_system when it is being tested to check if lower_case_tables_names=2 is sensible. Related to Bug #7887. 	fa1098618e506b09464a0c4b70c08b01a246cc66
----------------------------
A fix (Bug #8015: server refuses to start with long basedir path). 	0bf3ae74b689a378dfed5e415271d75747e62fe5
----------------------------
A fix (bug #7261: Alter table loses temp table with lower_case_table_names=2). 	9c3c566fcbc4f6f1452fc7c5440890d9d2e78efc
----------------------------
moved START_AND_EXIT check so it can actually be used fix as not to overwrite previoulsy set flags in configure 	72dc9ff915e195f6adb297f5a362a2f8763f99ca
----------------------------
"- Improved Do-rpm to perform RPM builds inside of a chrooted build environment (using ""build"" on SUSE Linux) "	32155507358c25178b026af48f72fc8c14fd56db
----------------------------
configure.in: Auto-merge fix: removing this file: error messages are done in a different way in 5.0. .del-errmsg.txt~31abf77f9e7b9211: Delete: sql/share/japanese-sjis/errmsg.txt 	0afb9b244a220e5bc61b271145a74c0823ddb513
----------------------------
configure.in: Add SJIS version of Japanese error messages. Windows version should include this new file, instead of the EUC-JP version. 	d45e9548015a49e2cc89bdc4de00bf59c42da864
----------------------------
"Fix for bug #7637: ""Test failure: 'user_limits' on QNX and 64-bit systems"" Made user_limits.test scheduling independant (this solves failure on QNX). Made sys_var_max_user_conn variable int sized. Changed max_user_connections from ulong to uint to be able to use it in sys_var_max_user_conn::value_ptr() (solves failures on 64-bit platforms). "	348218d21d6f49d526e29557783044b11defaabe
----------------------------
Warn when mysqld starts up with lower_case_table_names=2 but datadir is on a case-sensitive filesystem. (Bug #7887) 	3bdfe4485999445061a3edc6308c0c6eaf6476b7
----------------------------
Fix all BUILD/*max* scripts to use -DBIG_TABLES, like our real Max builds do. (Simpler fix than last commit -- no need to mess with base_cxxflags.) 	effec1490f93640c3323ff4c9763b31c679ad0b0
----------------------------
added configure option to set extra ndb cc-flags 	26d8fc4939d0d77d0e4095e7672c1895c76dccb1
----------------------------
Add ha_federated.cc to libmysqld/Makefile.am so that configuring with both embedded server and federated storage engine compiles. (Bug #7920) 	d5ee0a9e3af2aed965e3cfda19703d51c7566839
----------------------------
"- small improvement for the logrotate config file (patch found in the SUSE source RPM): use ""mysqladmin ping"" instead of grepping the process list for the mysqld binary (should be more portable than relying on the ""ps"" options "	2fbe625ee816c0d425656dbdc1d0a14850fd23de
----------------------------
Fixed memory leak in handle_local_infile() 	c46f527454807e36c417bc5aa075786a65df4559
----------------------------
When we warn that --log-bin alone is dangerous, we give a suggestion. 	1cb5d98d85dd055c7255b7a77f71dd91760cd14b
----------------------------
limit HEAP table size with max_heap_table_size, better estimation for mem_per_row 	367bcf8c40202a884ba6b9dfc8f94b7bcf2a2adc
----------------------------
Output 'MEMORY' as table type for tables using the memory (nee heap) storage engine, except when running with sql_mode & MYSQL323. (Bug #6659) 	3998da80e9aee7ca15d25b5744c3a908af0ec372
----------------------------
Fix mysql_install_db to look for libexecdir relative to basedir when it has been specified. (Bug #7347) 	d7389eedd1f29fe4e66ca09071b190eac4ed816b
----------------------------
"- bumped up the version number in configure.in from 4.1.9 to 4.1.10 - tagged ChangeSet 1.2207 as ""mysql-4.1.9"" "	b531a5e212546406971fa71e93df454ad3e139b1
----------------------------
logging_ok: Logging to logging@openlogging.org accepted innodb.result, innodb.test, set_var.cc, mysqld.cc: change variable innodb_free_tickets_to_enter to innodb_concurrency_tickets 	9f640bbad9d4bab1124019e17d1596e647f6ac76
----------------------------
--defaults-extra-file bug fixed 	c64897dbe819ad5d72b79b02b1f294c6138146f4
----------------------------
added missing Com_update_multi status variable 	b86a512e37ed2aba857b5b531daffb2d79b1dd60
----------------------------
"Impl4 of WL2278 - Dynamic port allocation of cluster nodes When a node restarts it starts over again with fetching the configuration -  It is not sure that it can use the ""old dynamically allocated port number"" again. -  It should however try to reuse the old one, if not possible it should allocate a new one. One has to be able to distinguish between portnumbers specified originally in the config, and ones that has been dynamically added (the latter may be changed if ""busy"", but the first cannot be changed). We use negative portnumbers for ports that are ok to change. "	ac28b470ee712ecfb6c6921592b3e0b0265a773b
----------------------------
Replace ZLIB_LIBS in mysql_config. (Bug #6418) 	39d90b710f787d33d044072bdd92b7b8f49c1813
----------------------------
Encourage user to specify a name for the binlog index file (either by giving an argument to --log-bin, or by using --log-bin-index). This is so that he does not have a replication break when his master's hostname changes. Plus binary logging options consistency checks. 	61a65d42f0c74254e7a5e2ededcce38488a1c082
----------------------------
bug#7761 - ndb does not autocommit during alter table 	c9f7f0ffcf5f117f0f65fc9e375e13f394b0f87b
----------------------------
updated ndb_mgm test removed grep event and added congestion event more docs changed some naming, expecially regarding severities added config param for logevel for congestion 	06216f6a737df6b14b53a9588cf9dac13f8e8cb8
----------------------------
"added example of mgmapi usage moved get_configuration to doxygen internal since the ""iterators"" are not documented "	98c3fa6643b1af909bcdeb62172508efea878b05
----------------------------
ndb - Fix ndb_limit, handle cmpDate of length 3 Remove ucs2 test as it requires one to configure --with-extra-charsets 	7b0748ed9a3dfb7540ab4f85340c8a29ef9f280b
----------------------------
Many files: - Create innodb_thread_concurrency as dynamic variable - Add innodb_thread_sleep_delay variable - Add innodb_free_tickets_to_enter variable 	ad7dad8d038463a4546f3a33a9619c776a790940
----------------------------
"2 small fixes for binlog (sorry for grouping them - I won't do it again): WL#2335 (wait if binlog or binlog index file hits disk full or quota exceeded), fix for BUG#7236 (""--expire_logs_days does not apply if all statements happen in transactions""), and a behaviour change: abort if mysqld can't start binlog at startup (if running with --log-bin of course). "	60f5a69160d1e7a323ad440264c20871aaac6ede
----------------------------
Add comment to make code for option-stripping in mysql_config more clear 	2acb7387842baec2b3171afe7de08e1a52d7e8ce
----------------------------
ha_ndbcluster.m4: fixed ndb configure according to 4.1 	9b122af3e19b28717cf0779cb635fbf8e713d7c9
----------------------------
"Fix ""mysqladmin password"" to use correct password scrambling function when talking to pre-4.1 servers or 4.1 and later servers where the old_passwords option is enabled. ""mysqladmin old-password"" is unchanged. (Bug #7451) "	4d025523e57572901547479942998ad10d11ee87
----------------------------
Allow DEFAULT_THREAD_STACK to be set via -DDEFAULT_THREAD_STACK=...  so our official binary builds for Linux that are built against a static glibc with a 128k thread stack size limit can be compiled with a default that doesn't result in a harmless (but oft-misunderstood) warning message. (Bug #6226) 	c1593ecf6601fa93882af78100e48e42d19fafd7
----------------------------
set_var.cc, mysqld.cc, ha_innodb.h, innodb.test, innodb.result: Create new innodb_sync_spin_loops variable 	bd47d6f36099c3a6b01eca229e0a5c3bf793adca
----------------------------
Protect flags like -Wl,-O2 from being mangled by mysql_config (Bug #6964) (Second commit of this patch -- first included wrong changes.) 	d14f3d76752f311c6fe81ba808cf1131da517e29
----------------------------
Make sure to include ZLIB_LIBS in mysql_config --libs_r (Bug #7021) 	30808e9ab993a98220cd96290ff49a4d6212cd10
----------------------------
Change mysqld_safe search for mysqld relative to the current working directory to only look for the mysqld binary (and english error strings) and assume the datadir from that. Then, if that datadir turns out to not exist, startup will fail. This avoids the behavior where mysqld_safe would go off and run a totally different binary because the data directory had been moved (even when --datadir was specified on the command line). (Bug #7249) 	0ed892f1975a380066b4ac7cc38852021344dbbd
----------------------------
Added checking for my.cnf file from environment variable MYSQL_HOME instead of DATADIR. 	81d99da104a856f27a19059f4f7b548cd6a0d2ff
----------------------------
Impl 3 of WL2278 - Dynamic port allocation of cluster nodes - Change configuration handling so that no default ports are given, but instead 0 is set (port to be dynamic) - TransporterRegistry::start_service now only tries to connect when fetched port number > 0 	1edca0ac8cd237b0e7bd8062e01ffd25789ddf64
----------------------------
Make query_cache_wlock_invalidate visible in SHOW VARIABLES (Bug #7594) 	954d0181ec65595d887bd2953c0b8a4bbd228ef1
----------------------------
Use 'ps xaww' in mysqld_safe (on Linux) so whole command-line is searched for port and/or pid-file parameters. (Bug #5878) 	663396653ab5ebed874d7ec89daf6e8e86472c9e
----------------------------
fix for bug #5920 (embedded-server mysql doesn't handle --defaults-file) 	5eb5fd12be42918f6e93391068d620554c11a08d
----------------------------
configure.in: updated ndb version number 	93f964141294159b783461e818c9f5e4d65c9653
----------------------------
Yet another after merge fix. Now max_user_connections is 36th field in mysql.user table (two new SP-related privileges were added). 	4e17aab2435e348006a5cd53816362888c81aaba
----------------------------
WL#1339. More post-merge fixes. Updated test results after adding max_user_connections column to mysql.user table. 	e35694802ba04138d01a1d7862a6a479ce0fb9df
----------------------------
"WL#1339 ""Add per account max_user_connections limit (maximum number of concurrent connections for the same account)"" Added support of account specific max_user_connections limit. Made all user limits to be counted per account instead of the old behavior, which was per user/host accounting. Added option which enables the old behavior. Added testing of these to the test suite. (After review version). "	ffa7393330359dddf60d0a6952071961daeb5a21
----------------------------
srv0start.c: Print a more descriptive error and refuse to start InnoDB if the size of ibdata files is smaller than what is stored in the tablespace header; innodb_force_recovery will override this 	2aa98f89aaaad9b386c1712a03efa2ec9e9e93b4
----------------------------
Setting doxygen configs to: align class members = no (get rid of crufty HTML tables that don't translate well into PDF) tab = 2 (8 is too wide) show used = no (most of these are suppressed header files, hence not linked, hence not useful) disable index = yes (saves stripping these out in combination script) 	1ca06912a14abbe9bb73bc34c7bb9001b53334a5
----------------------------
"- make sure that MYSQL_VERSION_ID created by ""configure"" does not contain any non-numerical characters (if $VERSION was e.g. ""4.1.8a"", $MYSQL_VERSION_ID resulted in ""40108a"", which broke the build as MYSQL_VERSION_ID must be numerical) "	9682485c1eabd93ee9106831a7c673cbc3699d71
----------------------------
Many files: Fix InnoDB critical bug #7496; we scan the InnoDB data dictionary also at a normal mysqld startup, and create the spaces, so that we know the mapping space id -> .ibd file name; fix an infinite loop if DISCARD TABLESPACE coincides with INSERT or some other table operation; fix a potential crash if DISCARD TABLESPACE coincides with a cascaded FOREIGN KEY operation in the same table; do not allow DISCARD TABLESPACE of a referenced table if FOREIGN_KEY_CHECKS=1 	7ad5e20461d04809a7e3bf1f966fe51c707f5332
----------------------------
logging_ok: Logging to logging@openlogging.org accepted sql_yacc.yy, sql_parse.cc, sql_lex.h, lex.h: Implements the SHOW MUTEX STATUS command set_var.cc, mysqld.cc, mysql_priv.h: Added new GLOBAL variable timed_mutexes ha_innodb.h: New function innodb_mutex_show_status ha_innodb.cc: Added new innodb variables in SHOW STATUS Implements the SHOW MUTEX STATUS command innodb.test, innodb.result: Added new row_lock_waits status variables tests. variables.test, variables.result: test new variable timed_mutexes ut0ut.c: New function ut_usectime. sync0sync.c: Mutex counting. sync0rw.c: New mutex parameters initialization. srv0srv.c: Counting row lock waits row0sel.c, row0mysql.c: Setting row_lock or table_lock state to thd. que0que.c: Added default no_lock_state to thd. univ.i: Added UNIV_SRV_PRINT_LATCH_WAITS debug define sync0sync.ic: Count mutex using. sync0sync.h: Added new parameters to mutex structure for counting. sync0rw.h: Added new parameters to rw_create_func. srv0srv.h: Added new innodb varuables to SHOW STATUS. que0que.h: Added thread lock states. 	78846b292369cbf6175baac768edd77183c0809e
----------------------------
fix indentation add space after comma add space after equal add comments in vio_close_shared_memory() 	4788b152012c3b41f72e08291efc4235913c9b33
----------------------------
ha_innodb.cc: Add a comment that no InnoDB table lock is now acquired in LOCK TABLES if AUTOCOMMIT=1. This helps to avoid deadlocks when porting old MyISAM applications to InnoDB. 	64f36c94d10f11dbbd3777b9d8fac17e463ce2e4
----------------------------
ha_innodb.cc: If AUTOCOMMIT=1, do not acquire an InnoDB table lock in LOCK TABLES; this makes porting of old MyISAM applications to InnoDB easier, since in that mode InnoDB table locks caused deadlocks very easily 	917e8b4da32b612b29e76938362eef70b6420cd0
----------------------------
added configuration hostnames to SHM config struct use configured hostnames for SHM transporter setup 	78ce178559becb8845bfc24dd5c0e7f70a7817b5
----------------------------
Bug#6481 - storage_engine system variable allows nonsensical value Check that the requested storage engine is enabled. 	ecd85b1836ebfbb9a548526a658956ea8ba4cfd5
----------------------------
Changes in config for generation of NDB API docs: don't include header files or class private members; do include class static members. 	4b881691af3ddb462bec4b2ad8ae71d4878a5103
----------------------------
configure.in: Increment from 4.0.23 to 4.0.24 	f3fc9a2dda9142c52ce28655b69e74b018fab7d5
----------------------------
automatically configure with shared memory transporter for ndb if functions are available 	7d5e413f62edf3b186368ad8856bd8efcd8bc984
----------------------------
added config parameter Group on connection moved NdbWaiter, m_ndb_cluster_connection, to impl class moved node selection things to cluster connection moved all private things to impl class added opts for shared memory and node selection changed opts handling somewhat; introduced enum for options and common handling of option variables added checks for transporter support automatic addition of shared mem transporters moved wait_until_ready code to cluster connection added control of usage of new node selection method 	7b47be8990f3770c2960b7776da469442484eda5
----------------------------
my-innodb-heavy-4G.cnf.sh: I fixed the typos in the transaction-isolation comments. I fixed the spelling mistakes in the comment.  It had tripped up a support customer as they couldn't start the server with transaction-isolation= read-commited 	35942c09de6c6a4f18658624f50adabc5295e1a7
----------------------------
"- bumped up version number in configure.in from 4.1.8 to 4.1.9 - tagged ChangeSet 1.2173 as ""mysql-4.1.8"" "	b9c549ae3966882ff8e73c358aaf6eb6a94e9689
----------------------------
Enlarged group item key_length by a varstring length field. Group item fields are implemented as varstrings nowadays. Made init_connect.test robust against existing t1. 	05d5360e7f19d95d32e49b65cd3cab5ea03c46db
----------------------------
correcting --expire_logs_days description in mysqld --help 	de968efaf3c4f99db3b94e102b7962187235f78c
----------------------------
"changed back to just restricting max meta objects in dict to make sure we can ""always"" configure ourselves out of unforseen limits "	095a772f21f4aa6d27f90bc15297a2615b261aaa
----------------------------
A fix (bug #6993: Max myisam_data_pointer_size limited to 7). 	f449ba85e8642db49d76ad4e1ccc5659668c70fa
----------------------------
Fix segmentation fault on incorrect configuration. Starting ndb_mgmd on a host which isn't in the configuration file as the ndb_mgmd (e.g. the ip address is different) would have ndb_mgmd segfault. There was a check in the code, but it was (potentially) trying to dereference null 	ea0949a78a68bbc717f468375f06871397167cf6
----------------------------
A fix (bug #5823: mysql_install_db fails due to incorrect max_allowed_packet). 	bd247e3d56ed2ea8353c617081de5d064b258fab
----------------------------
wixed ndb-debug option for configure 	b44ab7655446b4b278fbddd1e9ed25c0334cfd33
----------------------------
configure.in: latin1_spanish_ci produced unknown collation error. 	86013091ca1d26fa307c444ff604df780765b12b
----------------------------
added configure option to control extra ndb debug options, for release debug build please configure with --without-ndb-debug 	ee3953c5c1c7eee9a9b19957b09d8225fc0aa626
----------------------------
Bug#6391 (binlog-do-db rules ignored) CREATE DATABASE statement used the current database instead of the database created when checking conditions for replication. CREATE/DROP/ALTER DATABASE statements are now replicated based on the manipulated database. 	2bbdf2403dc9b6b8b4d4803c5e81b05958ea2890
----------------------------
mysqld.cc: innodb_autoextend_increment: set a maximum limit of 1000 (Bug #6904) 	89996cd7ad8e96bf4fa4b7d5fc663ddc2522619d
----------------------------
configure.in: Incremented for next version 	d6efb4bbfd319759d7577b1ca3f4e6005eb8aa31
----------------------------
First revision of changes to clean up acinclude and configure.in. Removed all AC_DEFUN out to separate m4 files, removed rule concerning building the website, and updated SANITY rule with the latest from 1.8. 	5d8a33e0ed9c329037ff9b51dd4fda912caa39c1
----------------------------
configure.in: Let MySQL check the existence of readdir_r with 3 arguments; Solaris seems to have just 2 args Check the existence of readdir_r and localtime_r; even though MySQL does check these too, we need our own check for Hot Backup code os0file.c: Use re-entrant readdir_r where available ut0ut.c: Make a function to use thread-safe localtime_r where available; that particular function was not called from anywhere, though 	227ffeb9e097121ac82e65e9dd8b8dd1a73601a8
----------------------------
openssl_1.result, have_openssl_1.require, openssl_1.test: Update SSL Cipher so that 'openssl_1' test passes (BUG#6152) 	2e0d1b3f9cde6fbbb16c9f8eca4eb5e0013d7404
----------------------------
mysqld_safe.sh: Fix calls to my_print_defaults.  Some how, --loose-verbose had been added before --no-defaults/defaults-file, which must be the first option. NOTE: this may make some installations behave differently, if they depend on this broken behavior. 	075a8879955d67377fa6cea95d61217b67551e3c
----------------------------
"aligned backup errorcodes with rest of ndb error codes giving it range from 1300 added new error type ""configuration or application error"" Added check if backup is issued during diskless mode, backup refuse returned added possibility to get error code as a result from management client addded possibility to set connecstring with CONNECT command changed to use strcasecmp instead of strcmp added possibility to run one command on cammand client to ndb_mgm and get an errorcode of command fails made thread safe veriosn of getErrorText in management server aligned backup errorcodes with rest of ndb error codes giving it range from 1300 print error message from regular ndberror struct added new arrer type ""cofiguration or application error"" commented on allocaded ranges for errors "	b11f3feb530d92894909bf763c7ca820ec8fe038
----------------------------
configure.in: A work-around for SCO, disable use of clock_gettime 	77c32ac1739d78e39a51a1f6689858d4d193eb66
----------------------------
Change sql_mode BROKEN_NOT to HIGH_NOT_PRECEDENCE 	f595216869ce96a341f272c10bf9314a09d6ef8b
----------------------------
moved default setting to config.ini to MgmtSrvr only try to connect to other ndb_mgmd if connect_string explicitly given or config_file not given 	106f124eec733ef0cb1e771702bec0710d064b7f
----------------------------
ndb/src/common/logger/LogHandler.cpp changed so that error is returned if format is wrong in logger param parsing ndb/src/common/logger/Logger.cpp some debuf printout added ndb/src/mgmsrv/InitConfigFileParser.cpp rewrote parsing on parseNameValuePair, was buggy 	5a09289bd15049fd6f7f09d2688e48bee9a0b321
----------------------------
configure.in: Fix linking error in 5.0: the build system for Linux/S390 does not have inlining working in the compiler; remove inlining on that system 	bd6ccd46fc88d331cdbf244654a74666a3914a92
----------------------------
added mgmapi/mgmapi_config_parameters.h, mgmapi/mgmapi_config_parameters_debug.h to distribution 	003b28d04fa605c4aff9400452b6c64949ea8389
----------------------------
sql/ha_innodb.cc enabled query cache for ndb modified engine interface somewhat sql/ha_innodb.h enabled query cache for ndb modified engine interface somewhat sql/ha_ndbcluster.cc enabled query cache for ndb modified engine interface somewhat ndb will only allow caching and retrieval if running autocommit - return false, but do not invalidate commit count is used as engine data, i.e. - store commit count before store of cache - allow retrieval if commit count has not changed on a table - invalidate if commit count has changed sql/ha_ndbcluster.h enabled query cache for ndb modified engine interface somewhat sql/handler.cc enabled query cache for ndb modified engine interface somewhat sql/handler.h enabled query cache for ndb modified engine interface somewhat new virtual handler method cached_table_registration called on each table before alowing store in query cache - return TRUE - ok to cache, FALSE - not allowed to cache, invalidate queries if engine_data below has changed - sets ulonglong (engine_data) that is stored in query cache for each table - sets callback to be called for each table before usage of cached query, callback = 0 -> no check later sql/mysql_priv.h enabled query cache for ndb modified engine interface somewhat callcack prototype for callback to engine before query cache retrieval sql/sql_cache.cc enabled query cache for ndb modified engine interface somewhat if callback is set on table in cache, do callback to check if allowed to use cache if not allowed to use cache, check if engine_data has changed, if so, invalidate all queries with that table + changes to store and pass callback and engine_data around sql/sql_cache.h enabled query cache for ndb modified engine interface somewhat changes to store callback and engine_data sql/table.h enabled query cache for ndb modified engine interface somewhat changes to store callback and engine_data 	ae471974ac158133976ce3510afe16db75fda798
----------------------------
use FT_MAX_WORD_LEN_FOR_SORT instead of HA_FT_MAXBYTELEN when calculating preferred key block length for ft index 	48e7c9abc66bcedc6b2d77bebafe1a83b4f1ed98
----------------------------
added --no-defaults to ndb_drop_table in autodiscover test 	a487b87928c03e3914fe49b87b1dfb5f23b44bb3
----------------------------
Fixed a problem with Innodb_buffer_pool_pages_latched status variable. 	7c046c3c983010cdf8ca2b8384b59be6d890c517
----------------------------
Fixed BUG #6747: innodb_locks_unsafe_for_binlog still uses next-key locking. 	d12c3540539b872cef92d03077c1e1f6bb04d847
----------------------------
ndb: do not crash on config mismatch if release compiled 	ad8dad86a845897c2da726b3ca0092ca32d5993f
----------------------------
Added --disable-log-bin option to the mysqlbinlog (WL1787) 	edc868e3977f922eecd05ec3f2caeb399caff360
----------------------------
set sizes array sizes correctly in ndb blocks configuration 	da7c9e26a008586fd961668557104ac50074df0f
----------------------------
changed mysqladmin.c to mysqladmin.cc no need for dvlags to have DEFINE_CXA_PURE_VIRTUAL anymore aligned the parsing of connectstring, retries for connect, allocation of nodeid for all cluster nodes removed all dependencies of LocalConfig, except for mgmapi internals enabled multiple management servrs to fetch data configurations from eachother 	7ec0239162dcd693541ae24a03f977cf371aa063
----------------------------
don't delete ac_available_languages_fragment in configure - it may be needed later 	60e3e821c6d94a03bd9424cbcd9d5c9a4a63e2d9
----------------------------
provided better error printout for mismatch of node types in configuratoin fetch fixed to that mgmt server actually uses the connectsring 	b8713e5e9cf764f75709e08617bb840ec5713f6c
----------------------------
BUG#6353 V2: Replication using replicate-rewrite-db did not work for LOAD DATA INFILE. Now is does.  There was one place in the code that used current database instead of the rewrite database. 	b7cfe5ecad5d224fe9fcc36a1241ea9864533ce6
----------------------------
"moved ndb_restore together with rest of the ndb tools kernel includes needed by ndb_restore changed link order moved LocalConfig to mgmapi Moved NdbConfig to Portlib mgmapi to use LocalConfig for connectstring parsing instead of it's own enable usage of ""NULL"" connectstring for default new ndbmgmclient lib that can be used by e.g. mysqladmin later LocalConfig no longer needed here, now in mgmapi Send connectstring to mgmapi instead added valid connectstring to be with only host without port i.e. valid connectstring =host1,host2,host3 default port will be added "	0d55af3f0e5d4d120766ec629c162c500a9b7d74
----------------------------
wl1744 - ndb windows port move versing handling into ndb_version.h.in (from config.h) 	b6c44a2960268cf2e293af5e06afda644187cf02
----------------------------
added configure switch for ndb port number added new variable for ndb port 1186 changed meaning of ndb_port_base to be default tcp port setting changed to use split between port and port_base for ndbcluster so that ndb_port and ndb_port_base are propagated to startscript for ndbcluster added larger space to pid print moved readAndExecute out of CommandInterpreter to avoid linking lib with readline added c-api to Ndb_mgmclient pass also ndb_port to make 	17b2d671ee15410a8e9faba27d883f4b9aeb5df3
----------------------------
Fixed a typo that caused segmentation fault when using --defaults-extra-file option. 	bfdf57ef31174814cdec5e275d710b4a48dc55c7
----------------------------
"Fix for Bug#6408 ""configure checking for custom zlib fails because code check is wrong"". "	31962735902dfee0c8983af504c024926f7d3824
----------------------------
autocommit and changed name mysql_test_run_new 	ff32313dd5d308f028e5bf0c342cc5d7221be126
----------------------------
autocommit 	26f3926efd94684295933dbc868f91cb0ce77f5e
----------------------------
Merge: d0bb7cc c315ee2 autocommit 	bf2685a6900b35b71bd55ad749ed25b079e82aa6
----------------------------
"field.cc, sql_mode.result, sql_mode.test: ""SHOW CREATE TABLE"" mysql-4.0 and mysql-3.23 compatibiliry mode change: Check that a binary collation adds 'binary' suffix into a char() column definition in mysql40 and mysql2323 modes. This allows not to lose the column's case sensitivity when loading the dump in pre-4.1 servers. "	f979603cf2c292b80fae7cc47f75ea34769f146f
----------------------------
NDB blobs - try to handle insert-update-delete under autocommit=0 	b9ec6803ae39367dad8d3b716c59c1c741b2c91b
----------------------------
Bug# 5303 Windows --log-error option doesn't work correctly 	8b472a76059e7286a1fcf862b9d877bf13e6151b
----------------------------
"configure.in: added flag on sun forte, -instances=static (check is only made for ""non-gcc"", hopefully enough) "	d129fffe572089b3008f694c3cface0f35aff16e
----------------------------
aligned ndb versioning with mysql changed define SNPRINTF_RETURN_ZERO to SNPRINTF_RETURN_TRUNC added define NDB_INIT removed getarg, strlcat, strlcpy aligned ndb version with mysql version cpcd: removed old way of reading config file and replaced with mysql load_defaults changed from using getarg to my_getopts use mysql my_progname moved getarg to test 	41e39c7be32fa27484375762296f900cc21eec17
----------------------------
mysqld.cc: Describe innodb_max_purge_lag Improve description of innodb_table_locks 	a3294186ec089d4b6abf318894e36cbf042f72c6
----------------------------
configure.in: -I/usr/include needed for cxx on Tru64 	0a3d9a43b246cdaf57afa725134344d74e7ff07b
----------------------------
"- bumped up version number from 4.0.22 to 4.0.23 in configure.in - tagged ChangeSet@1.2048.1.2 as ""mysql-4.0.22"" "	35e8670301f854b5b1541cd39deaab2f0c046bbd
----------------------------
Backport innodb_max_purge_lag from 4.1 	b5f49a3abd515faafed24164e4d01c1a6c5dcc42
----------------------------
"- Bumped up version number to 4.1.8 in configure.in - tagged ChangeSet 1.2029 as ""mysql-4.1.7"" "	f60951d2514bff36fde1401de5971ee3d8f9d81f
----------------------------
configure.in: 4.1.7 leaves gamma. 	f5b33f6e6ae065496688f8fd1390c4d6a0826cd2
----------------------------
A fix (bug #5999 Typo in code, wrong config variable naming). 	b7c57329a419bcadfec02d4cbbb0ac9f5244bae6
----------------------------
"Fix for bug #6116 ""SET time_zone := ... requires access to mysql.time_zone* tables"". We are excluding implicitly used time zone tables from privilege checking. "	e6a44b719a75b812008c2d8c795c41259a7887a2
----------------------------
Code cleanups (done during review of new code) Rename innodb_table_locks_old_behavior -> innodb_table_locks Set innodb_table_locks to off by default to get same behaviour as in MySQL 4.0.20 (This means that Innodb ignore table locks by default, which makes it easier to combine MyISAM and InnoDB to simulate a transaction) 	1f8b3d0f22070d450226ef4f6e0e31c8ef8cd401
----------------------------
fix for platforms that have lower_case_table_names == 2 	1ef4979e48e0c66c7b0fe1f469bcd87a432c4450
----------------------------
Optimization: in the replication slave, we can avoid doing one strlen() per event's execution, as we already have db_len in Log_event. Only if rewrite_db() changed the db we need a strlen (so we now do the strlen() in rewrite_db). Plus a test (we had none for --replicate-rewrite-db :( ). 	41b808d224c6ad4c7ef6f785fa8b40dd1b2c42bf
----------------------------
srv0srv.c: If innodb_thread_concurrency would be exceeded, let a thread sleep 10 ms before entering the FIFO queue; previously, the value was 50 ms, which Peter Z considered too long 	f687608e1c2d7fcfc0000b15badd70c6f1f2e501
----------------------------
"remove possibility of connectstring error like ""hostname=..."" + some fixed string length cleanup + fixed a better error printout "	839c45f3130f58e06440b8a3ae34c3ac03b9e6ce
----------------------------
mysqld.cc: BUG #5731 key_buffer_size not properly restricted to 4GB; use UINT_MAX32 for clarity. 	b9509655a52f629802358ac23d5533337a09ba1e
----------------------------
TAG: Tagged ChangeSet 1.2091 as mysql-4.1.6 configure.in: Updated version string to 4.1.7 	60385695b42eb64883299efa286c02f539023785
----------------------------
BUG#5625 - MyISAM Index corruption on ALTER TABLE x ENABLE KEYS due to full tmpdir. Added a try to a normal repair() if repair_by_sort() failed. This was not done with ENABLE KEYS and OPTIMIZE TABLE. Fixed error code handling in mysql_alter_table(). 	150ab94e0adec270d7a106d629e8963f43cf612d
----------------------------
"A fix and test case for Bug#5985 """"prepare stmt from ""select rand(?)"" crashes server."" The fix makes Item_func_rand prepared-statements aware plus it fixes the case when RAND is used in prepared statements and replication is on (as well as several similar issues). Until now we did not reset THD before every execution of a prepared statement, so if some execution had set thd->time_zone_used or thd->rand_used they would not be reset until next mysql_parse. Some of post-review fixes done. "	5abc3de22bbef2e9818a890a61f840fb5daaf1b7
----------------------------
Added startup option and settable session variable innodb_table_locks_old_behavior: do not acquire an InnoDB table lock for LOCK TABLES, as in mysql-4.0.18 and earlier. 	edb93ca441df3257bccc320496a765b93779ce66
----------------------------
Many files: Fix bug #5137: if innodb_file_per_table was specified, CREATE TEMPORARY TABLE ... TYPE=InnoDB said that cannot find path specified, and made mysqld to exit(1) 	89ecfd7fa64ec1079428cb4019ea90e22171d604
----------------------------
sql_updatable_view_key replaced with updatable_views_with_limit now default behaviour do not prevent any updates of view. Also updating VIEWs of queries without LIMIT clause will not be checked at all (there will not be even warning) (changes according to discussion on last dev-conf) 	da5a55e3cdbec87507b996017a0c008ea7ad9e1b
----------------------------
Enabled the writing of a pid file on Windows. mysqld.cc: Added call to create_pid_file to start_signal_handler on windows.  Also removed the #ifndef WINDOWS from two calls that deletes the pid file 	4a01f3030b9c1ef922b02b058f629c7da4d5394e
----------------------------
more and better arbitration warnings for cluster config 	ebb425d9c9fed6cbdfde5f5f202efa7f5d2d2de3
----------------------------
"Bug #5829  	mysqlimport garbles path of the file to be imported Original code was checking ! unix_socket for local_file flag.  This doesn't work and so was removed.  Now to import a local file, you must use the --local command line option. mysqlimport.c: Removed check of unix_socket to set local_file "	b4ee4d358a316b1bba5dbb4faf51e6d0f7ab0e33
----------------------------
"patch fixing after review on patch-fixing of Bug #5492 ""set @@session.read_rnd_buffer_size=33554432"" crashes server on query 1. added warning comments for uint3korr (need one more byte allocated) 2. unsigned long in uint3korr was replaced by unsigned int to avoid problems on 64-bits platforms 3. shorten warning comments in init_rr_cache in sql/records.cc "	91e8afac376aaf557124e0fa12d2cc30371d60b2
----------------------------
mysqld.cc: BUG #5731 Restrict key_buffer_size to 4GB on 64 bit platforms 	634df1c19c5ab526fecd532285dd880b425da9f8
----------------------------
client_test.test: Temporarely disabled client_test test Use MASTER_MYSOCK to get socket path 	3f717d7c004d21eda1a1360180ae9d178262c029
----------------------------
added configuration warnings for arbitration and node groups 	148fc3ca7b2228fd8c116a2a01cdb5c923f1da31
----------------------------
InnoDB: implement innodb_max_purge_lag 	1bd65d7715a0d425be608f738651b995bd23a7bc
----------------------------
Made innodb_autoextend_increment accessible as a global variable. 	9f92688b64b240623f524c6fa5d126a8b297b901
----------------------------
removed init on ConfigRetriever added some debug printouts some changes in ndbcluster_init to make start of mysqld first work 	1379567be193238255245de07f578c80f405771f
----------------------------
local config now outside config retriever 	c329d002f744287981e5cca53eb170a83c56eec2
----------------------------
Fix asked by Ranger. If embedded library gets empty string as a hostname it should use embedded connection 	e79dfd91d06303b8be03095336593a20737d30e6
----------------------------
added printout for where configuration is fetched debug printouts 	b67853d70e9275ca0c114f92c8c24d8fb12cad8e
----------------------------
moved LocalConfig out of config retriver 	8bfc619e1db0a08f2f5dadd03b7c9cbc4246c70f
----------------------------
"Fix for BUG#5705: ""SET CHARATER_SET_SERVERetc will be lost if STOP SLAVE before following query"": we do not increment rli->group_master_log_pos if we are just after a SET ONE_SHOT (it's not a standalone event) "	00d2e803dc9203a23c2bf5280bee68ffce6de360
----------------------------
config parameter changed 	8c617f1369a02df08865eec9b6a9813af3fded36
----------------------------
"When coyright text is changed, autotools must be run after all other actions, as otherwise timestamps of ""config.h.in"" will cause re-run on compilation machine (fatal version problem!). "	87a8e833aeeb8c8bdf89de493279e4a68bb92709
----------------------------
Restored old shared memory buffer implementation (used by SCI and SHM). Improved Default SCI config params Added missing SCI libraries in ndb_mgm and atrt Added max of 1024 signals per receive on transporter (to improve real-time bahaviour and to ensure no job buffer explosion, still some more work left on avoiding job buffer explosion in the general case) 	5d19f4eb741c83e085a3f9814ef3a7d9df1ce742
----------------------------
"made tryBind static using tryBind instead to determine if we're ""config host"" is ""local"" "	f5e6f233435b35e96d917fa175bcbd9d39e7b40b
----------------------------
"Fixed Bug #5492 ""set @@session.read_rnd_buffer_size=33554432"" crashes server on query incremented size of allocated buffer in the init_rr_cache(sql/records.cc) ( We are going to read the last three bytes of the buffer via uint3korr This macro reads actually 4 bytes (for speed) So, we have to allocate one more byte at the end of the buffer to avoid memory assertion fault ) "	e58c9579fe56dc267be056fca4aa75ac8112d955
----------------------------
mysql_install_db should do skip-ndbcluster set a printout in SocketClient only for debug 	5488f207db3433efcbcd29431020ea4dac216e22
----------------------------
Added options --auto-increment-increment and --auto-increment-offset. This allows one to setup a master <-> master replication with non conflicting auto-increment series. Cleaned up binary log code to make it easyer to add new state variables. Added simpler 'upper level' logic for artificial events (events that should not cause cleanups on slave). Simplified binary log handling. Changed how auto_increment works together with to SET INSERT_ID=# to make it more predictable: Now the inserted rows in a multi-row statement are set independent of the existing rows in the table. (Before only InnoDB did this correctly) 	91ff64e107866821efc8591fc6ecf28f3b7ee9a0
----------------------------
logging_ok: Logging to logging@openlogging.org accepted SCI_Transporter.hpp, SCI_Transporter.cpp: Major fix-up of SCI Transporter, fixed so that it works with single card, fixed wrap around, added lots of DBUG statements, merged with new transporter handling TransporterRegistry.cpp: Some fixes for wrap around needed plus DBUG handling TCP_Transporter.hpp, TCP_Transporter.cpp: Added DBUG statements SHM_Transporter.hpp, SHM_Transporter.cpp: Fixed SHM Transporter SHM_Buffer.hpp: Fixed SHM Buffer to handle wrap around properly IPCConfig.cpp: Fixed up config of SCI SocketServer.cpp: Added DBUG support for SocketServer threads ConfigInfo.cpp: Config changes for SCI TransporterDefinitions.hpp, mgmapi_config_parameters.h: SCI fixes Makefile.am, type_ndbapitools.mk.am, type_ndbapitest.mk.am: Added SCI library path to Makefiles configure.in: Fixed small bug with shared mem and sci together in configure acinclude.m4: Added possibility of providing SCI library path in confgure 	72017f8dd243235115394461ca1489b5eb538331
----------------------------
Print the error message if read of local config fails. 	76fd06c704969741fb0cfd894176512e2b102710
----------------------------
mysql.cc: SQL_SELECT_LIMIT=0 protection 	dcfb23f37f283a154964cf2e96c7c209775dbb1b
----------------------------
new method to set size of local table data clearer configure description texts changed Ndb_local_table_info to use create, destroy metods and hidden constructor/destructor move definition if Thd_ndb to .h file and changes seize/release to operate on Thd_ndb instead of Ndb objects moved allocation/deletion of Ndb objects to Thd_ndb 	fc174af248f1bfdb245540b6ec0b1de0e676ae00
----------------------------
A fix (bug #5546: mysqld crash on PURGE MASTER LOGS BEFORE '...' with log-bin off). 	998504d715738711671e25201f7463a28c2baf79
----------------------------
configure.in: bumped up version to 3.5.1 	cf3cb70d30c874f29380053908d411170df5abbc
----------------------------
configure.in: Updated to 4.0.22 	c998fbdb8cc942a47bb24841678b7d0387c0e55a
----------------------------
improved show command fixed some mutex locks for Ndb objects moved TranspoterFacade::stop_instance to cluster connection moved Socket Server::start_server outside the TransporterFacade::start_instance thread 	8178861dd94c8ebda6d2410bbb54565af162d568
----------------------------
better error printouts on cannot alloc node id put ByteOrder config param back as depricated 	976086d36e3e3846a4757a184829b211589ac5e2
----------------------------
removed unnecesary check in ConfigInfo added retries to tryBind 	a34f63cf33f52c88f2aee68345b54cce2f66ab70
----------------------------
dded method to retrieve mysqld, ndbd, and ndb_mgmd aliases for API,MGM and DB added sanity checks for config file changed so that ndb_0 is replaced by ndb_pid#### in ndb files added error_string for to some functions, alloc_node_id(), start() added better error printout for failed alloc node id better error printouts for failures when starting ndb_mgmd 	e4290e4831eae66e5e6a01dc0e42601d86fbfc40
----------------------------
ixed table and db name of fields incase of lower_case_table_names (BUG#5154) 	48a1b10b583bc4defeeb91c46dc47c63a681e3aa
----------------------------
InnoDB: Add configuration option innodb_autoextend_increment 	934a5c0b99fe4063818fd78ee74aad171486b8ca
----------------------------
"WL#1218 ""Triggers"". Some very preliminary version of patch. Mostly needed for Monty for him getting notion what needed for triggers from new .FRM format. Things to be done: - Right placement of trigger's invocations - Right handling of errors in triggers (including transaction rollback) - Support for priviliges - Right handling of DROP/RENAME table (hope that it will be handled automatically with merging of .TRG into .FRM file) - Saving/restoring some information critical for trigger creation and replication with their definitions (e.g. sql_mode, creator, ...) - Replication Already has some known bugs so probably not for general review. "	9ed038dd6f788e18154c299c07ba5c88446fd638
----------------------------
A fix (Bug #5428 small max_sort_length crash server). 	4139e73c37562dc6ad8b6258a431f72091622e7f
----------------------------
added ndb_mgm_destroy_configuration call fixed memory leak in object map fixed uninitialized value blobs_pending 	2192d179d2cd1da37d78e7f34d3a29fb31e7eade
----------------------------
srv0start.c: Fix bug #5414 in 4.1: srv_max_n_threads was always set to only 1000, regardless of the buffer pool size; undelr very high concurrent loads this could cause an assertion failure in sync0arr.c line 384 when we ran out of wait slots for threads; also innodb_thread_concurrency did not work, because the wait queue also there overflowed at 1000 concurrent threads; also remove redundant code trx0undo.c: Add a missing newline to fprints 	b3325a06d1a2bb35f1ae0d75758190b4cfaf8cb3
----------------------------
"define macro ""DEFINE_ALL_CHARACTER_SETS"" in the configure.in completely "	c3cb5980c286eccb00ae088dfd3de4aaa29e239f
----------------------------
1. discarded term.h from the distribution 2. changed key_* to el_ley_* in the libedit key.h (because it's in the conflict with the aix definitions) 3. use libedit_term.h instead of term.h in the cmd-line-utils/libedit/el.h 4. added definition of MIN in the cmd-line-utils/libedit/read.c (if it wasn't defined yet) 5. discarded definition of SUNOS macro from configure.in (now we don't include term.h in the el.h at all) 	0fda2f6b97abba0ff0452edf3e73138d33d6cb15
----------------------------
A fix (bug #5056: defaults-extra-file throws no error when file is inaccessible). 	8a61200b3d7619bb43c19fcafff353876bc66f99
----------------------------
"Correct a typo error: cpp symbol is ""BIG_TABLES"", not ""BIG_FILES"" (backport from 4.1). "	9e2e71816f42fbfe9e04a1433dd8e03ad5411c56
----------------------------
"mysqld_safe.sh: bug #5001, added conditional if to test if port set, then only kill the processes for this port, not all processes (in the case of this bug where multiple servers are killed.) The change to the 'grep' to make sure mysqld_safe isn't killed was per Serg's discovery that mysqld_safe would get killed. In my testing, in killing one of the pids for a running server, the ""if test ! -f $pid_file"" was the case that evaluated as true, so in order to test, I had to comment that block out. "	e27714591161894ee4a2e966ff142cb91a547052
----------------------------
"- bumped up version number in configure.in to ""4.1.5-gamma"" - tagged ChangeSet@1.2013 as ""mysql-4.1.4"" "	87cbc358e97c4d93643b71b8fd28815342c4ed77
----------------------------
Please rewiev. Here added a function to process config. files options. A lot of the default.c module code was refactored. The patch is needed for the IM. 	d14e6c3400b1169eef9ac447ea487a11638e5c60
----------------------------
"Correct a typo error: cpp symbol is ""BIG_TABLES"", not ""BIG_FILES"". "	124f5be3011a6b903655e94a0720078e2eeb5e67
----------------------------
configure.in: Ascii was written twice 	cb9591b7de8a921dd64f7d78f3f962a0a5d57779
----------------------------
"Fix for BUG#4500 ""set character set replicates incorrectly"" We must not reset the charset in slave after each statement, otherwise the SET CHARACTER SET is cancelled immediately. Instead, we write a SET CHARACTER SET DEFAULT to the master's binlog when needed (like we already do for SET FOREIGN_KEY_CHECKS); such writing is not necessary in 4.1 (in 4.1 the bug does not exist, as the SET ONE_SHOT syntax is used). I have written a test and it works, but I'm not pushing the test as it requires building with all charsets. I have noticed differences between what is inserted in the master's table in 4.0 and 4.1, and alerted Bar. "	93101561fd3d49fde9b1408f1d2b9f036fcba658
----------------------------
Code style fixes. Initialize LOG_error_log before get_options to not use an uninitalized mutex in case of an error from handle_options() 	f574cd4e8f7f9794385cf5b9f6ddfc8530245005
----------------------------
new parameter BackupDataDir 	e97e08b212687292a10f00fe9068a7519de5debc
----------------------------
ndb cluster config fixes, se respective files 	50cee6abc87e81dca775a37e6ac5fbe456338f84
----------------------------
"Test case for Bug #4792  	lower_case_table_names does not resolve db.tbl.column in SELECT list lowercase_table.result: New results for modified lowercase_table test lowercase_table.test: Added test case for all uppercase database when running under lower_case_table_names.  This really only failed under Windows.  Bug# 4792 "	1e0e96a0d2484da14175092e60f3ab119946dd2d
----------------------------
"Bug #4792  	lower_case_table_names does not resolve db.tbl.column in SELECT list sql_base.cc: Added code to lowercase database name in insert_fields when lower_case_table_names=1. This fixes bug# 4792 "	358900236ab52a1021df1cb4d95158c7ee40705a
----------------------------
ndb config ability/naming changes, see respective file 	0f8dc7061039d86bce80efc0a6870a5bb32d9f2d
----------------------------
more aliases in ndb config 	1bd774e9cb849c3060ad2c316538290647df4bd0
----------------------------
enables case insensitivity in ndb config file 	57c12e0fd3f083f22b40c921e6c4e199a5f76fc7
----------------------------
added skipped macro for new libedit-2.6.7 in configure.in 	3988677b15088dae4ca1d6225d1647020b40dfc2
----------------------------
added alias MYSQLD for API added choice of : or = in config file set case insensitive section names 	aae0b7ed6502dd97f43cad173fc6f22bae848e11
----------------------------
"Use ""configured"" socklen_t Fix master printout "	1c4cb230cd51eb74f5416f07edf1d1791d6a2037
----------------------------
- make sure to recreate all autoconf/automake-related files after modifying configure.in for the commercial tarballs - added my-innodb-heavy-4G.cnf to the distribution 	89fcb8ee4124a174f68893cc92e847335d49e44c
----------------------------
further simplifications of ndb config and aligned usage of mysql datadir in ndb 	c3f2f7426cc88a1fced52a848f371b43b6653254
----------------------------
1) Default config is 1 frag per node 2) MAX_FRAG_PER_NODE separated from NO_OF_FRAG_PER_NODE and takes into account large fragmentation 3) SUMA use config parameter instead of hard coded limit 	ee16667b0e085d86eee450afa5efc1f526a47484
----------------------------
Fixed: BUG#5135: cannot turn on log_warnings with SET in 4.1 (and 4.0) 	66a3f65d98698895a6fb0b77f3ab279f7032e5fe
----------------------------
Removed 0.5M in unused construct in TRIX Used proper config param for setting trigger pool size in TUP Minimum long signal buffer set to 0.5M instead of 1M 	9f6828fa191ead439443abb28089f5e842b0e131
----------------------------
Long signal buffer size configurable Dbutil decreased memory footprint Suma decreased memory footprint (16M memory removed from default config) 	3aeb3b426dd1a18a28fa05027c011eb6b85aaf49
----------------------------
New config parameters for Log Page Buffers Fixing issue with NO_OF_FRAG_PER_NODE Also removed some OSE code no longer needed when configurable log pages 	852a44e1d8d6b7f9098651567f95747c29def6e4
----------------------------
New config parameters malloc -> NdbMem_Allocate 	7c1eb26402b2863324830aab4c7269679d50b779
----------------------------
bug#5128 - remove need of unique fs-path bug#4761 - more validation of hosts bug#4511 - only non depricated should be saved in config - fix ConfigInfo::BOOL w.r.t deprication 	f02ebd6fccfc55d447ab9afedda21ef5d4b21664
----------------------------
Added configuration parameters for batch size, batch byte size and max scan batch size Removed some debug printouts 	995ac87734d6baacf9f70960da25bffbb6372595
----------------------------
A fix (bug #5055: SQL_SELECT_LIMIT=0 crashes command line client): mysql outwits itself. 	f1ab1b129fa6ea80537dcd1961801052e5d20b88
----------------------------
"Fix for BUG#5064 ""SET GLOBAL SYNC_BINLOG does not work on some platforms"": var->save_result.ulong_value was 0 on Mac OS X probably due to positions of members in the union. sys_var::check() only sets ulonglong_value "	44a599a305b77a4e79fdc06b9a3859eed92b1391
----------------------------
set_var.cc: Make query_cache_wlock_invalidate show up in SHOW VARIABLES. (Sanja agrees that it should show up, has seen the patch, and agrees that it's correct.) 	22550c301be56db2f336eea69b482aa5454ffc4c
----------------------------
"Escaping [] so that darwin[7-8] gets into 'configure' and not darwin7-8 Adding a compilation define so that on recent Darwin mysqld does not react to SIGHUP and SIGQUIT: this fixes a rpl000001 problem on our Powermac G5 machine (popping after an upgrade from 10.3.4 to 10.3.5) and is expected to fix BUG#2030 ""relay bin log on slave resets multiple times a second"" (i.e. under some Mac OS X Panther versions, mysqld receives many SIGHUP and SIGQUIT). So this fix is more a problem-hider than a real understanding of why mysqld receives so many signals. Note that we saw other problems on this OS where mysqld reacts to Ctrl-Z but apparently only once, where using SSL seems to make the problem more frequent... "	c9a46a43d274957f5faed3a9e0ed33e02407bb64
----------------------------
- giving a range does not work for platform detection in configure.in - resorting to having to separate sections for darwin7 and darwin8 	c8f8ca889fca8c5560e48a1b63f1c146db2aee91
----------------------------
bug#4997 - --log-error sometimes generates incorrect default name. Now replacing domain name by 'err'. If host name doesn't have a domain name, '.err' is appended as before. 	68871aee8e3cd1bb9cda1509f54439b683021706
----------------------------
"Fix for bug #4508 ""CONVERT_TZ() function with new time zone as param crashes server"". Instead of trying to open time zone tables during calculation of CONVERT_TZ() function or setting of @@time_zone variable we should open and lock them with the rest of statement's table (so we should add them to global table list) and after that use such pre-opened tables for loading info about time zones. "	f49d4f5350299e31ec4176210e2d457795fb5ed8
----------------------------
bad merge fixed - myisamchk support for --ft_stopword_file restored 	56b423e058c0a791270354e02648239fb5bb590a
----------------------------
Forgott to update testBackuo w.r.t to ConfigRetreiver 	e7d89abf33b2f251304527c350e53d9c6844d311
----------------------------
configure.in: Collation name fixes. 	e4348ee9a5421287d544266512dfd8288bd4ea7d
----------------------------
mysqld.cc: Put --help first, reorder other options so that they are alphabetical. (shouldn't have to use grep to find an option.) Move group_concat_max_len to variable part of list. Rename character_set_server, collation_server, shared_memory_base_name to character-set-server, collation-server, shared-memory-base-name. Make default-collation message refer to collation-server rather than character-set-server. 	651b6893b13d772cfd06c1feda8104ffb8f9b216
----------------------------
Small fix for updated config params 	75b85ebc60826d2c0e44e37a2a18bb273cc1b15b
----------------------------
Remove unused config parameters 	a0a5a6a6fb947336afa70a94557da1b7413782a9
----------------------------
"Initial support for updating configuration ""on the fly"" Only updates values mgmsrv's on main memory to be used in test prg's "	86d2906be536e7bcc19cd6fbc01a948ad133a204
----------------------------
"- bumped up version number in configure.in to 5.0.2-alpha, now that 5.0.1 is out - tagged ChangeSet@1.1698 as ""mysql-5.0.1"" "	c4e9e183232ee2dd5a48ddd7e8842136e5c7fb62
----------------------------
Added --with-ndbcluster config option to compile-pentium-valgrind-max (since it's in the other -max builds already). 	387a01ddc8caf376dd7b87aae3e255344c0b8f94
----------------------------
Fix 64-bit issue in ConfigValues 	bac5d8f9b6992786826c7c0d47a6eea23f8c8e27
----------------------------
"WL#1518 ""make bundled zlib usable for unix builds"", post review fixes: - comment for AC_DEFINE(HAVE_COMPRESS) fixed - build convenience library from zlib: we need to compile it into both libmysqlclient.a and libmysqlclient.so - --with-zlib-dir=bundled configure option "	d68ed3f0f7bc0730c97f4b40fdc9d42d1b5c60ad
----------------------------
avoid functions in configure 	13ecd6946984e5825f771f82f34c862911c5ea53
----------------------------
Added info about new --log-warnings option. 	7c3164577f7d872c3340aba18270fde68a8448d3
----------------------------
All templates inlined into AC_DEFINE/AC_DEFINE_UNQUOTED. Use of acconfig.h is deprecated in modern autotools (a cleaner patch). 	4139c359f8e7f27682be6d2149e726f2b7f5b978
----------------------------
- Use the same compile options for the upcoming darwin8 OS in configure.in (thanks to Al Begley from Apple for the hint) 	a54f6398fe9649e1b84b25235e6c60c0ae8d86ba
----------------------------
Final patch for WL#1600(warn if max_allowed_packet used) 	cbff743b2dd6894f393db204cbd7e0a96e82f973
----------------------------
Added innodb_locks_unsafe_for_binlog option. This option turns off Innodb next-key locking. Using this option the locks InnoDB sets on index records do not affect the ``gap'' before that index record. Thus, this option allows phantom problem. 	0449396a674c88a0f8bee17e21c33d3b80fcc38a
----------------------------
Fixes for min, max and default values of config params Removed all DEPRICATED params Introduced MAX_INT_RNIL as new maximum of Uint32 = RNIL - 1 	844a9387d6dcfe19bd022adf1afc5c5a7c76df41
----------------------------
"patch for task WL 1941 ""NO_C_ESCAPE sql_mode"" "	e9e5b3547e8cc936c81bfb72300306c909df5e9c
----------------------------
mysql_fix_privilege_tables.sh: various fixes (for mysql-test-run at least): * accept --no-defaults * 4.0 compatible password handling (only it no other argumensts, only if doesn't start with --) ps_3innodb.test: only run ps_3innodb.test if innodb is present mysql-test-run.sh: it's --verbose, not --verbose=1 	021242bc6c82d8ccab4386cd7229ec24317faede
----------------------------
HAVE_RTREE_KEYS are enabled on windows too 	df1f83db55c95409345862ff95d0a4a8951333f8
----------------------------
"Windows-specific: Fix for BUG#4375 ""Windows specific directories are copied during replication"": in the Windows version of my_dir(), do not show hidden or system files which Windows sometimes creates in the root directory of drive (like RECYCLER and SYSTEM VOLUME INFORMATION directories) (so this problem showed up only when the datadir was the root dir of a drive). This will make SHOW DATABASES display better, and will do no harm to MySQL. For example, DROP DATABASE will not miss some files, as MySQL creates no hidden or system files. "	912eb811ba138672d6e2baaebd0d5bcd97dd2166
----------------------------
"Bug #4374  	SHOW TABLE STATUS FROM ignores collation_connection "	4df5a14a6f9d1a9ca962c14c1ba8469146f24199
----------------------------
configure.in: armscii8_bin was referenced to as armscii_bin. 	a597b077c62c480c8a3f565a759b3f25932f9a3d
----------------------------
"- tagged ChangeSet 1.2023 as ""mysql-4.1.3"" - bumped up version number in configure.in: 4.1.3-beta -> 4.1.4-beta "	2c6537e2cb1694bd272231c1b50ee8807745f6ff
----------------------------
Added flexibility for connecting and retrieving config from mgmtsrvr 	5e6a1a89ef679a241616d28413fa09808577db11
----------------------------
WL#1600 (Warn if result is truncatet due to max_allowed_packet) 	eb67909bf4a280c14267940d27172f7671aa2716
----------------------------
adopting mysql-test-run to new ndb config + added option to ndb_waiter to wait for NO CONTACT 	37df5deb414591a162496b32ef79d87a1c457ca3
----------------------------
updated mysql-test/ndb to make use of new default config options 	11bd3eedfe83c79c4525bdbc93b191ec5d41f83d
----------------------------
several config fixes for ndb, see respective file 	f0ccb88e0d0df4b1dcbdd32226f3ac953c3ac3c2
----------------------------
memory leak in tz code closed (table opened in my_tz_init, was removed from thd->open_tables in tz_load_from_db w/o being unlocked, so it was stayng in open_cache forever preventing the latter from being free'd in table_cache_free) 	08ac1d1bda78db915acdf5fa47dfc14c91c251f6
----------------------------
BUG#4276 - socket path too long 	e3a713bf34d2a3d12c9ba48478f665a95d2830a1
----------------------------
Fix for 'make dist' 'make distclean' goals work even if ./configure called without NDB enabled. 	172ab0ab8b2c21a7c4075dda1c0ed14f329fed9a
----------------------------
Added missing root user to mysql.user on windows. (Bug #4242) Set default max_allowed_packet to be able to read help tables even if an my.cnf file with this option is present. (Bug #3938) Don't use default arguments for ha_rnd_init() Simple code cleanups since last pull 	f6765146c1b97bbb71f79adbd275dc2b6ca79333
----------------------------
configure.in: --with-charset=binary didn't really work after my previous change. 	6515bb716b662d5b8327830fd96d9e34fdae9568
----------------------------
lower_case_table_names=2 (Keep case for table names) was not honored with ALTER TABLE and CREATE/DROP INDEX. (Bug #3109) Make net_buffer_length visible for mysql clients (Bug #4206) 	ad86016e2ff3af18892d24577e956b886bd150fd
----------------------------
configure.in: ./configure --with-charset=binary is now possible. 	e6fbd809220b4626ca460eb1e2023c544d572888
----------------------------
"Robustness feature. Won't be pushed as is - separate email sent for internal review. WL#1717 ""binlog-innodb consistency"". Now when mysqld starts, if InnoDB does a crash recovery, we use the binlog name and position retrieved from InnoDB (corresponding to the last transaction successfully committed by InnoDB) to cut any rolled back transaction from the binary log. This is triggered by the --innodb-safe-binlog option. Provided you configure mysqld to fsync() InnoDB at every commit (using flush_log_at_trx_commit) and to fsync() the binlog at every write (using --sync-binlog=1), this behaviour guarantees that a master always has consistency between binlog and InnoDB, whenever the crash happens. 6 tests to verify that it works. "	f5d642448777999257f8c23dd25f2e9257912870
----------------------------
Fix for bug in build scripts making everything to be reconfigured at each 'make' invocation (pushing as two devs tested that the patch is ok). 	efba49fd7d36aa30570adc31fd39aac1afd01e3e
----------------------------
configure.in: Fix typo. 	e39ff18e659b3e9d3831b2a6bda8689cf00026ba
----------------------------
configure.in: New collations were added. 	24751bf3325a5dcc487d6872bba75b2165adc815
----------------------------
cannot include my_config.h directly, breaks some makes 	25b8f29f11e2e4babf1f83ac312aa926d8e94c79
----------------------------
removed need for specifying TCP connections in MySQL Cluster configuration 	9c9ac185508260a90fcdc38c6150cb0f3553ca77
----------------------------
fil0fil.c: Remove the use of mem_realloc in fil0fil.c; mem_realloc() was broken and the patch to remove its definition will propagate from the 4.0 tree; crash recovery with innodb_file_per_table has to be tested after this patch, not tested yet 	79fd0c68d3c0007b4ac1443cd24d981c0bd8a7ff
----------------------------
mysql-copyright: Fixed various issues to deal with untarring of gpl tar file, clearing configure.in, changed calls to use system vs. backticks 	c6344b08eaf8b9aa5f618baba334c21d3515345e
----------------------------
Made discless a config parameter instead of a env. variable 	f5e2974cc60c1ced77c14a339a6bb211bb22e892
----------------------------
"WL#1595 ""Optionally fsync() the binlog after every statement"": New option --sync-binlog=x (and global settable variable) which will fsync the binlog after every x-th disk write to it. That is, if in autocommit mode, after every x-th statement written to the binlog; if using transactions, after every x-th transaction written to the binlog. x==0 means no fsync. x==1 is the slowest. There is no test added for this, I have just checked that it works as --sync-binlog=1 dramatically slows down mysqld. Made sync-frm a global settable variable. "	73411a2ed52f2d4c7a7eca19c0f2b4795fae688b
----------------------------
"Fix for BUG#4038 ""rpm postinstall script leaves files as owned by root"": the rpm postinstall script must call mysql_install_db with --user=mysql, and mysql_install_db must then pass this to mysqld. Otherwise, mysqld runs as root, and if you have --log-bin=somewhere_out_of_var_lib_mysql it creates binlog files owned by root in this dir, and this dir is not fixed by the 'chmod mysql', so files remain owned by root, and later mysqld (running as 'mysql') can't read them. I'm hardcoding 'mysql' in the postinstall script, but it's already hardcoded there in many places (see the useradd and chown) so it's ok. "	4bd441850c3350c1d4a95109edcce6d557e8237b
----------------------------
complement to previous fix (which was for SQLCOM_DROP_DB), for COM_DROP_DB. 	9799c5ba33653d5443c913d8fafe8bcef93a1da4
----------------------------
Fixed BUG#2564: SHOW CREATE inconsistent W.R.T ANSI_QUOTES. It's not possible to quote the definition according to the current sql_mode setting, so instead we use the setting stored with the SP (that's how it's parsed anyway), and show this setting in the SHOW CREATE output. 	cc897576fe1c67d42c7be37ec790c0b015f7b1b8
----------------------------
Correction to replication of charsets in 4.1: In mysqlbinlog, there was a problem with how we escaped the content of a string user variable. To be perfect, we should have escaped with character_set_client. But this charset is unknown to mysqlbinlog. So the simplest is to print the string in hex. This is unreadable but 100% safe with any charset (checked with Bar), no more need to bother with character_set_client. 	b514e6a8c5e2d4d5ae729a50b8cd2a025299f5a1
----------------------------
Fix for bug #4036 multiple SELECT DATE_FORMAT, incorrect results 	5725831c73382f55863c59f0912c78ec37824582
----------------------------
"client.c: Bug #3990  	`--with-charset' ./configure's switch doesn'taffect mysql client library. "	acbb3096b2c057c1ccc3d8bdc59a41ffeb851087
----------------------------
moved ndb versioning to configure and fixed ndb docs make 	5a8303a3c17ee421ba23e184c32c2aa6d5b22087
----------------------------
"Implementation of WL#1824 ""Add replication of character set variables in 4.1"", by binlogging some SET ONE_SHOT CHARACTER_SETetc, which will be enough until we have it more compact and more complete in 5.0. With the present patch, replication will work ok between 4.1.3 master and slaves, as long as: - master and slave have the same GLOBAL.COLLATION_SERVER - COLLATION_DATABASE and CHARACTER_SET_DATABASE are not used - application does not use the fact that table is created with charset of the USEd db (BUG#2326). all of which are not too hard to fulfill. ONE_SHOT is reserved for internal use of mysqlbinlog|mysql and works only for charsets, so we give error if used for non-charset vars. Fix for BUG#3875 ""mysqlbinlog produces wrong ouput  if query uses variables containing quotes"" and BUG#3943 ""Queries with non-ASCII literals are not replicated properly after SET NAMES"". Detecting that master and slave have different global charsets or server ids. "	86e8ecc9653ab25cdaedcfd23e982dff26de1071
----------------------------
Makefile.am: local flag in ndbapi to set -O2 since problems occur with -O3 pc.hpp, Emulator.hpp, Emulator.cpp, ErrorReporter.cpp: USE_EMULATED_JAM -> !NO_EMULATED_JAM ErrorReporter.hpp: removed NDEBUG and removed THREAD_ASSERT Dbdict.cpp: NDB_DEBUG -> VM_TRACE configure.in: cleaned up ndb CXX flags and added optional flag possibility 	63fe3c7e73584f0359c7ac6077fbd5d9a4ff864c
----------------------------
Added authentication code that was missed in merge Added new windows configuration 	42c35d45697b529dcb4d69c3c21b7c7772be38db
----------------------------
Changed --log-warnings to be integer instead of boolean. Given --skip-log-warnings will disable warnings, --log-warnings will increment warning level by one, or the level can be given as an optional argument. Default level is 1. Changed aborted connection warning to be logged only if the level is > 1. 	2953c23ab04e89addc0daa8bc2d1d52a39da554c
----------------------------
BUILD/compile-pentium-maintainer should not ever be needed since there is no AM_MAINTAINER_MODE macro in configure.in 	d01c7b18d8b6a903b40790576cbae6801943eadf
----------------------------
AC_MAINTAINER_MODE removed: now MySQL is always configured in maintainer mode and one should expect better dependencies tracking. 	0dde8d4ae777cc6bed5f737fa462b44fc06b306c
----------------------------
Added option --config-extra-env to Do-compile 	cb5c3f6e2edec10e1f5c5bbd95916976eb30d8f6
----------------------------
Always enable HAVE_COMPRESS on netware 	47cc3af0e9b10ef3d6006bf02b403e0229ab7ddb
----------------------------
WL#1163 (Make spatial code separable for other parts) --with-geometry and --with-embedded-privilege-control configure switches added 	15ea09b79d4c3c7e3f175f955130b029a77f231c
----------------------------
configure.in: automake verion problem 	1161f719a82de16a1da016c0f5a7f179fa43e50a
----------------------------
netware files should always be in 'make dist' use opt_net_buffer_length instead of net_buffer_length 	833ec1653e9e0225328736bcaa8b03fec6d14000
----------------------------
configure.in: makefix 	d1abc78ae027cff7de12deba934bdc55d105b89d
----------------------------
WL1371 - Cleanup configuration handling WL1356 - Discless db node WL1357 - sp 1-2 	7037c866894aa236656f0c41f3b39738d2056491
----------------------------
Proposed fix for bug #3818 (libmysqld.dll leads to program's crash) configurations added to build the libraries with USE_TLS flag to be used for libmysqld 	640728a05188bec428349644faca06da5861c448
----------------------------
updated configure for automake in ndb tree 	fff33634be2bc45a7ca559beeaa4985e7e4d2eb4
----------------------------
Fix for sporadically failures of innodb.test on Darwin 7.3 which occured because we were not lowering case of file names for temporary tables altough handler assumes so if lower_case_table_names==2. Now we are lowering case for them. 	a5fab72bc4bb515fd41b06889bdb674437971d9c
----------------------------
Fix for BUG#3871: a slave must always replicate a statement, even if it examines more than 4G rows, so we set SQL_BIG_SELECTS to 1. 	50a2d97102e3fbfef5a59d90c63148fd2b192d39
----------------------------
Fix for bug which caused grant.test fail on darwin7.3. We were converting db and table names to lower case using latin1 instead of utf-8 in sql_acl.cc if lower_case_table_names was on. Also replaced in other such places system_charset_info with files_charset_info for consistency. 	c095ce828e31dfb334a130c9eec0f9b86ae8f84b
----------------------------
Better names for two system variables: - heuristic => optimizer_prune_level - plan_search_depth => optimizer_search_depth 	432b842e23059f866bcfb3ed8b5cb84998f9e115
----------------------------
Moved testing of binlog_cache_use/binlog_cache_disk_use statistical variables from rpl_relayrotate.test to innodb.test since this test requires innodb support. 	067b2e3bb0096cd14e220656decfaca0ea9d61ed
----------------------------
"Fix for BUG#3829 ""Setting server_id on fly doesn't allow replication to start"" (fix by our Harrison Fisk): when one does SET GLOBAL SERVER_ID=x, we must set server_id_supplied to 1. "	319f83ef9b21dc9092efc9882b76707cb9e936e0
----------------------------
"Fix for Bug#3754 ""SET GLOBAL myisam_max_sort_file_size doesn't work as expected"": precision-losing conversion removed from sys_var_thd_ulonglong. "	e13e9288c98f5186fd0f534d0d486084e7df2a0a
----------------------------
mem0pool.c: Fix a memory corruption bug: in 32-bit computers, every 4 billionth malloc outside innodb_additional_mem_pool_size was mistreated when freeing the memory; this could corrupt the InnoDB additional mem pool and could have caused crashes anywhere, also inside MySQL, or even database corruption! the bug exists also in 3.23 and 4.1; workaround: configure innodb_additional_mem_pool_size big enough 	0189d5afe8f5f74d21d2603a7ba8048286ff16e9
----------------------------
a code fix (don't specify default value of argument twice), updating a line of SHOW SLAVE STATUS in tests after the last 4.1->5.0 merge, and: *** The same as ChangeSet@1.1822.1.1, 2004-05-14 23:08:03+02:00, guilhem@mysql.com of MySQL 4.0 *** Replication testsuite: making the master-slave synchronization less likely to fail, by adding sleep-and-retries (max 4 times) if MASTER_POS_WAIT() returns NULL in sync_with_master and sync_slave_with_master. The problem showed up only today, in MySQL 5.0 in rpl_server_id2.test, but may affect 4.x as well, so I fixed 4.x too. Note that I am also fixing 5.0, with the same exact patch, because I don't want to leave 5.0 broken until the next 4.0->4.1->5.0 merge. 	9620715679e21196e087a57f10f42b974c281fe3
----------------------------
Replication testsuite: making the master-slave synchronization less likely to fail, by adding sleep-and-retries (max 4 times) if MASTER_POS_WAIT() returns NULL in sync_with_master and sync_slave_with_master. The problem showed up only today, in MySQL 5.0 in rpl_server_id2.test, but may affect 4.x as well, so fixing it here. Note that I am also fixing 5.0 too, with the same exact patch, because I don't want to leave 5.0 broken until the next 4.0->4.1->5.0 merge. 	a039062ef372c6e0f68fbeb3c579f96fa591f5c8
----------------------------
Post-merge fixes. Note: One sp.test still fails (prime), and rpl_server_id2.test fails (will be fixed by guilhem ASAP). 	ec921065357282c8c850a8286297733675e4bf44
----------------------------
SCRUM add option --local-service when service is installed 	7ed4ed54ef2ef09c86dc79928a6de562a0115d01
----------------------------
Only compile SHM if configured to 	47b7c5612dc5d7e0342cda4a303e9c25fe8e8077
----------------------------
Moved the declaration of status variable Last_query_cost to follow alphabetic order. 	9ca265785ee4220217f797929477c5729106b91f
----------------------------
Add read_rnd_buffer_size in my.cnf example files Remove wrong redefine of vio_reset() (to compile libmysqld on windows) 	4ef7918e1863ac8020c6d28c3a252e9fe69ed06f
----------------------------
Added additional parameter userdata for mysql_set_local_infile_handler to allow binding of userland functions in PHP. 	c745ae9503b8e85de9db6c77b87b3eb789ae2848
----------------------------
Replication: as the I/O thread filters on the server id, we must test replicate_same_server_id in it (on top of in the SQL thread). 	cd18476e340557485c2d091f7422b5b08d60b6b2
----------------------------
caching of queries with isammerge tables forbiden using general way SQL_SELECT_LIMIT as default will be applied only for SELECT statement if there was not explicit LIMIT clause correct table list passed to class constructor of select_update 	c5c35c667ea626be7a0da7621db141e01485632c
----------------------------
"InnoDB: Truncate ""<datadir>/innodb.status.<pid>"" to its actual size (Bug #3596) "	fc7ae6a222e6d27a7e5715629c98196eb0bb8e8e
----------------------------
useless fixes for --report-password and --show-slave-auth-info (almost undocumented options), just for beauty of truth. 	5fcd62a13a1923f7d4b6e7df2645e2f39d6473ac
----------------------------
Fix for a bug involving UNION's and SET SQL_SELECT_LIMIT 	333eadf1b21698779f6a574786986c3b846f2958
----------------------------
"WL#1700 - Properly count key_blocks_used and key_blocks_current. Introduced a new free blocks list. Free blocks are now re-used before new blocks are allocated from the pool. There is a new status variable which can be queried by ""show status like key_blocks_unused"". "	5a78b4c746555d4c1891ce82d4c0b2d23125caff
----------------------------
myisam_data_pointer_size 	7df9f7d621153c20e92e1a275ea82669d10cd8aa
----------------------------
Removed define NDB_MAX_CONNECTIONS 	025b29b8536731a9552ec86b2fd32a34549965b0
----------------------------
Updated default NDB config to work better with sql-bench Updated sql-bench configs to take NDB's limitations into account 	ed6148da75c9f18fbfd5862076374977bbf4e16e
----------------------------
configure.in: added configure options PACKAGE and VERSION for ndb GuessConfig.sh: added options for PACKAGE and VERSION Epilogue.mk: Added target distdir 	818d0bb3c9097a81c8826e8ab63220f7b16c45f5
----------------------------
- added AC_PROG_LIBTOOL to innobase/configure.in to be able to compile MySQL with InnoDB on IBM AIX 5.2 in 64bit mode (which requires a special AR flag) 	7901fca4946546340980bd926d22f40151900d9a
----------------------------
Allow one to send empty strings with mysql_stmt_send_long_data() mysql_stmt_reset() now resets param->long_data_used Abort if --defaults-file=path-name uses a non-existing file (Bug #3413) Fixed problem with symlink test (bug in 4.1.2) 	32d0b695031f281aa4079838785c4c770d7cf30a
----------------------------
"A new option --replicate-same-server-id to force a slave to execute queries originating from itself (WL#794). This can be of interest in some recovery-from-backup scenarios, and also when you have two databases in one mysqld, having a certain similarity and you want one db to be updated when the other is (some sort of trigger). Plus small fix for BUG#3568 ""MySQL server crashes when built --with-debug and CHANGE MASTER +MASTER_POS_WAIT"" "	3fc39188ecc50b6f76d8e10f18596a5c10ef659b
----------------------------
"Fixed http address in some scripts (Bug #3460) Output TIMESTAMP in 4.1 format for 4.1 tables (or for TIMESTAMP(19)) (portability fix) Fixed that INTERVAL can handle big integers. (Bug #3498) Fixed that hostname="""" works identical as hostname=""%"" for table/column grants (Bug #3473) "	f10d098f7dc4c2f2281b8ef49e945114996b91a1
----------------------------
symlink, not hardlink mkdir in Makefile, not in configure chmod a-x 	606073084e5627c03ee2cd148968e09a9c5fccbb
----------------------------
logging_ok: Logging to logging@openlogging.org accepted stop_ndbcluster, ndb_config_2_node.ini, install_ndbcluster: new file 	40de5714b02972e2b1639bbd431a29ac1509b163
----------------------------
"Fix for BUG#3461 ""multi-table DELETE replicated despite replicate-wild-ignore-table"": In tables_ok(), when there is no table having ""updating==TRUE"" in the list, return that we don't replicate this statement (the slave is supposed to replicate *changes* only). In practice, the case can only happen for this statement: DELETE t FROM t,u WHERE ... ; tables_ok(t,u) will now return 0, which (check all_tables_not_ok()) will give a chance to tables_ok(t) to run. "	066382e6e721b24043970e90d1d8757162ccc5b4
----------------------------
make session max_delayed_threads to be settable only to 0 or global value 	0d402d8d1103936bea3f4815c98df9e4f7b5dd2f
----------------------------
- Merged in changes from mysqld_multi 2.6 - Changed reading of config file so that one can use a separate config file for [mysqld_multi] also. In other words --config-file=file will read group [mysqld_multi] from this file, earlier it wouldn't have. 	96cb3ec0e9c3ace612b563e2cbd264c503595f85
----------------------------
"Fix for BUG#3422 ""In 3.23 -> 4.0 replication, slave segfault when replicating LOAD DATA INFILE"": as we transform the 3.23 Load_log_event into a 4.0 Create_file_log_event which is one byte longer, we need to increment event_len. The bug was that we did not increment it, so later in code the end 0 was not seen so there was for example a segfault in strlen(fname) because fname was not 0-terminated. Other problems remain in 3.23->4.0 replication of LOAD DATA INFILE but they are less serious: Exec_master_log_pos and Relay_log_space are incorrect. I'll document them. They are not fixable without significant code changes (if you fix those problems in 4.0, you get assertion failures somewhere else etc), * which are already done in 5.0.0 *. "	c640a3904a9fa90d7402810d380002283bab6c79
----------------------------
new error for unsupported command in PS fixed IN subselect with basic constant left expression SQLCOM_CREATE_TABLE, SQLCOM_UPDATE_MULTI, SQLCOM_REPLACE_SELECT, SQLCOM_INSERT_SELECT, QLCOM_DELETE_MULTI fixed to be compatible with PS (BUG#3398, BUG#3406) fixed multiupdate privelege check (BUG#3408) fixed multiupdate tables check (BUG#3411) unchecked commands now is rejected by PS protocol to avoid serever crash fixed cleunup procedure to be compatible sith DO/SET (BUG#3393) 	5e37c41faee13cdc977842d253e6da0266766baf
----------------------------
correct SET GLOBAL ft_boolean_syntax=DEFAULT behaviour 	7899158736f0b6eb046948f3d3338f4bc702fe76
----------------------------
Fixed previous security patch. mysqld_safe will use the given --log=file, or if not given, it will try to use the one in datadir, if possible, otherwise log file will be disabled. 	0e5cdf319dbcae5904ab0c2a70d7dfa711754901
----------------------------
Fixed a problem with mysqld_multi log file. The default is now datadir/mysqld_multi.log, if doesn't exists or is not writable, then /var/log/mysqld_multi.log, if does not exists or is not writable, then /tmp/mysqld_multi.log, but only in case the file does not yet exists in /tmp. Otherwise log will be disabled, unless user explicitely sets it with an option. 	0f484ebae601f3c4a02c2eca17c9b9f88d4c5f88
----------------------------
InnoDB: Backport fil_path_to_mysql_datadir from MySQL 4.1.x 	f7f8efc2638b35c95b1a26b2bc808aaa92a43c79
----------------------------
Fixed many compiler warnings Fixed bugs in group_concat with ORDER BY and DISTINCT (Bugs #2695, #3381 and #3319) Fixed crash when doing rollback in slave and the io thread catched up with the sql thread Set locked_in_memory properly 	42cf92ce37c7ce9b7356d04273a858a9e42823b5
----------------------------
BUG#3328 I can't see group_concat_max_len in a list of variables 	f3e348bcca1ef0d3adcb57e2262a926d1d1b53c8
----------------------------
"WL#775 ""Add status variable identifying binlog_cache_size shortage"" Added two status variables: binlog_cache_use - counts number of transactions that used somehow transaction temporary binary log. binlog_cache_disk_use - counts number of transactions that required disk I/O for storing info in this this binary log. "	a80f46bfdf6e84d04a9af5d27b6985299e1d225c
----------------------------
null processing for character_set_results (BUG#3296) 	e3a619f0059c6f3a90a21b0e8219b049e5056ee3
----------------------------
"A previous changeset by me today about SQL_LOG_BIN had the problem that it tested the privilege in ::update() whereas it should be in ::check() (see email from Serg, subject ""Re: bk commit - 4.1 tree (guilhem:1.1706)""). So I add instead a check_func function to sys_var_thd_bit. I do the same addition to sys_var_thd_ulong, to unify handling of PSEUDO_THREAD_ID with the one of SQL_LOG_BIN. So class sys_var_pseudo_thread_id is not needed anymore, removing it. "	3826a01ee4752ff987c88f05111bf8268e4e7fde
----------------------------
Changing SET SQL_LOG_BIN so that it explicitely throws an error if user is not SUPER, instead of setting the value but ignoring it silently internally. 	8066c2ce758eb65b09879701e3c5ed540560d40a
----------------------------
To save 32KB memory per thread when --log-bin is not used, we do not init the binlog_cache (THD::transaction.trans_log). I have checked all places where trans_log is used, because as now it may not be inited in some cases, we have to be cautious (will forward this commit mail to Heikki). 	90a5e244bed4d136a292efe72b217a929587e79b
----------------------------
Fixed BUG#3117: LAST_INSERT_ID() works incorrectly inside stored procedure. This turned out to be a problem for prepared statements as well; the id was evaluated once, at parse time. 	6395822932ab4830d80b4d90fbb3faa4b0ee8723
----------------------------
"fixed config parser to recognize correctly strings like following: test=""\""#no comment here""#real comment "	8215fbe957ffbcd3eae76aaa605b05407c5ea479
----------------------------
- reverted use of AC_CONFIG_SUBDIRS for BDB for now (it somehow did not work as expected) - need to investigate (after 4.1.2 is released) 	9ab6567bcd8caa407e31a13711f071114b52dc1f
----------------------------
"- Use AC_CONFIG_SUBDIRS to invoke the InnoDB and BDB configure scripts instead of calling them directly (WL#1521) - this also fixed a compile error with libtool-1.5.2 on FreeBSD (error: tag name ""CXX"" already exists) "	4493a24dc7e00f9a72cb23a34607297a0e5919cf
----------------------------
Don't change server suffix if given to configure Portability fixes 	19d0a60eca2e5444dd4fc9d77300dc974a84a0fc
----------------------------
"roll back change in client/mysqladmin.c for bug #3160 '""mysqladmin password"" doesn't work if --skip-grant-tables' because we can't find out the mysql.user.host properly now mysqladmin just print an advice error-message in this case "	f91acaf9c047cc81a8f0093ecd6d1d5a349b4d1a
----------------------------
"fixed bug #3160 '""mysqladmin password"" doesn't work if --skip-grant-tables' "	28ebb5a680100c8a409a1f482c9e4bf68a725612
----------------------------
Increase max size of number of elements in key. This fixed a bug when using count(DISTINCT) with lot of distinct values and big 'max_heap_table_size' 	dcf5ba1c95e8012c9e4dcead01286973cc925cf8
----------------------------
"WL#1163	(to make spatial parts optional) --without-geometry and --with-embedded-privilege-control switches added to the configure "	6b42f932d6d01d8ed8a67a82da177e3a35dce66e
----------------------------
- added AC_PROG_LIBTOOL to innobase/configure.in to be able to compile MySQL with InnoDB on IBM AIX 5.2 in 64bit mode (which requires a special AR flag) 	7765418e3cf4449eb7c7319e08b587e2be7efb02
----------------------------
"Fix for BUG#2921 ""Replication problem on mutex lock in mySQL-4.0.18"": re-using unused LOCK_active_mi to serialize all administrative commands related to replication: START SLAVE, STOP SLAVE, RESET SLAVE, CHANGE MASTER, init_slave() (replication autostart at server startup), end_slave() (replication autostop at server shutdown), LOAD DATA FROM MASTER. This protects us against a handful of deadlocks (like BUG#2921 when two START SLAVE, but when two STOP SLAVE too). Removing unused variables. "	cf287341cc4e418b5310f8882970ad32a00c728a
----------------------------
Make SHOW VARIABLES output really alphabetic. Note: the patch removes an extra declaration of the read_only variable. It also assumes that '_' sorts before [a-z]. 	ea28e842cdf99f4bafee6738bc9fb5dd0a18e5c7
----------------------------
"Ensure that one can't from the command line set a variable too small. (Bug #2710) Allow one to force lower_case_table_names to 0, even if the file system is case insensitive. This fixes some issues on Mac OS X (Bug #2994) Added variables ""lower_case_file_system"", ""version_compile_os"" and ""license"" "	ef971bb6048db5fc99cddaff1673c8a001705111
----------------------------
Added option chroot to mysqlhotcopy. Useful in case mysqld was started with chroot. 	34a332c086c93cdd8fe11476a42265779e3ca593
----------------------------
invalidation of locking for write tables (BUG#2693) fixed linking query_prealloc_size to query cache presence 	d03034d3062f528266ac4853ab2f2ba17f01dfdb
----------------------------
"""you need MySQL build with"" may take an configure option as an argument not necessarily a define "	f90555e0d5717e6b9e0a5893e0c375aa3b6aa7f5
----------------------------
"Fix for BUG#3017 ""wrong Relay_Log_Pos if Rotate is in the middle of a transaction in relay log"" increment 'pending' instead of 'relay_log_pos'. "	e022ba60634621c698ef0c093085234123eec50e
----------------------------
update max_used_connections *after* thread_count was increased to take into account the current connection 	4d374c7c21942f81db0f23d58f8ab801c8b86efe
----------------------------
--set-character-set and --character-sets-dir in myisamchk now work 	a9d58d3e96fec4c61802a4550b12b74ca5cb220f
----------------------------
configure.in: Removed the unused odbc directory 	568121c6fffa28e0899ac75a44f6a66cc73dcb9a
----------------------------
change that master_server_id is not a restricted word 	fdc4a35c94b2d105f1134c0c962412f689eda1b0
----------------------------
"Fix for BUG#2757 ""--read-only gives weird error on update"". It is not fixable in 4.0 because it requires modifying the sql/share/*/errmsg.txt files. So it is fixed in 4.1 like this: the ER_SKIP_GRANT_TABLES is replaced by a more generic ER_OPTION_PREVENTS_STATEMENT which can be used both for ""can't do this because of --skip-grant-tables"" and ""can't do this because of --read-only"" (for this we don't use ER_CANT_UPDATE_WITH_READLOCK anymore). So now the message for --read-only is: ""The MySQL server is running with the --read-only option so cannot execute this statement"". "	8bfb87ced5c2d1394fa43d8e326ad3d34e5fe8f5
----------------------------
fix for --open-files-limit and broken query_cache_merge.test 	fc16e4ded3531e041ef263c180eac8be58a52d6c
----------------------------
fixed comparation of tables/database names with --lower_case_table_names (BUG#2880) 	0af6983ed08980616977ee065f9b6f35c963fc90
----------------------------
- when removing the readline subdir for the commercial distribution, configure.in needs to be updated and configure needs to be recreated for the build to succed 	1c814b535031ea486d51df404f8c5b2122ef8435
----------------------------
Max open files handling moved to my_set_max_open_files() This ensures that my_file_info takes this the max number of files into account and one can now use --open-files-limit on windows to increase number of used files up to 2048 	e347f63192874ee5d3123f7bf078a05fecc5ef58
----------------------------
ft_boolean_syntax made changeable 	de240a1ce2ffbc62f16e5772f9c78df58edb9092
----------------------------
ha_innodb.cc: Make the drop InnoDB database operation aware of the setting FOREIGN_KEY_CHECKS=0; DROP DATABASE seems to work ok anyway, but that is because MySQL first calls DROP TABLE for each table which has an .frm file 	f5fedf54e4d0501d941cc831a2ace197ae3cde0e
----------------------------
- bumped up version number in configure.in from 4.0.18 -> 4.0.19 - Tagged ChangeSet@1.1733 as mysql-4.0.18 	09b90901add0f125e7f6128c74fa963eabca43ba
----------------------------
"configure.in: FreeBSD ""ps"" detection usually failed, in 90% cases, on FreeBSD-5.1. This change should work fine under 5.x and 4.x, and I believe in 3.x. too. "	dc696d2e5d188e726d12aaff39cbb4c94ab58aec
----------------------------
Follow-up of a discussion on dev-docs@ : Don't show PSEUDO_THREAD_ID in SHOW VARIABLES because: - we don't want people to discover this variable as it could never do good to set it (it was designed for use by mysqlbinlog only, so that a thread can have several temp tables of the same name at the same time) - if we show it in SHOW VARIABLES, Mysql Administrator will display it and this will force us to put a description, so all MySQL Administrator user will be aware of this variable, some may have the idea to set it with a SET command, and then it will cause bad things. The variable is still settable, and still visible with SELECT @@. 	75e77657987ea925cc7cae96b689df12f686cbf9
----------------------------
Export CXX and AR to make it easier to invoke other configure scripts with same options. 	2d2f7f89ff5e1ae8b9ce9df5014d2d8f938ea46e
----------------------------
Ensure that result from date_format() is binary Removed warnings from test suite 	cc78e2d97aa2906bfd162e47c97662b9190ec014
----------------------------
follow-up to bug #2628: attempt to make alter table rename a bit more efficient in case of lower_case_table_names. 	3d039e4986f62753705dd09b05473fe70b8d9883
----------------------------
ha_innodb.cc: If AUTOCOMMIT=1, then we do not need to make a plain SELECT set shared locks even on the SERIALIZABLE isolation level, because we know the transaction is read-only: a read-only transaction can always be performed on the REPEATABLE READ level, and that does not endanger the serializability 	d7b9d5c9e84a383c67f34511fd92255c3c4c7944
----------------------------
- updated config.guess, config.sub and ltmain.sh with versions from libtool 1.5 to fix BUG#202 (update config.guess & co for MIPS architecture) 	650580698f7f473b1ccb5a520a17fc8b269c7c9f
----------------------------
"- renamed mysql-test/t/init_file.sql to mysql-test/std_data/init_file.dat so it gets picked up by ""make dist"" and updated init_file test accordingly. "	e306876fe172ecbd207288573488bf734c92ccb8
----------------------------
Added testing of pthread_key_delete (to fix compile problem on SCO) (Bug #2461) DROP DATABASE now assumes RAID directories are in hex. (Bug #2627) Don't increment 'select_full_range' and similar statistics for EXPLAIN queries. (Bug #2506) Test in configure if pthread_key_delete() exists (to fix compile problem on SCO) (Bug #2461) 	7df839e7572bd6303896a04fbc070150d5ec6af2
----------------------------
"added checking for bootstrap in select_send::send_data (fixed bug #2526 ""--init-file crashes MySQL if contains large select"") Such checking usually works in send_ok, send_eof, but in this case large result causes interim flushing. "	7769e5a6771e6c836de8594e34974b95c64ac788
----------------------------
Ensure that wait_timeout doesn't overflow on windows. (Bug #2400) 	d05f9238625a4c8376720f02ff103afafeecd088
----------------------------
"Proposed (version #2) fix for bug #1948: ""system variable query_prealloc_size can be only global"" "	74a1d68d3b39925e0f852ccfafea8f5f8d4b4f20
----------------------------
a fix (#2185: mysql.server script echo bug) thnx Paul. <monty> can you get the above into configure and make Makefile.am patch mysql.server.sh with the right values for mysql.server ? <monty> or do you think we should just put the above in mysql.server.sh directly <ramil> as you want <monty> the last is kind of hard to do with variables, so lets put the above in mysql.server.sh directly 	d75674a5419bdded9e81e0ee4690639f1542a484
----------------------------
rpl_insert_id.test, rpl_insert_id.result: Change tests so that tables are dropped in an order respecting the FOREIGN KEY constraints 	be760becac0d468a5f031ffac64475f0e9568901
----------------------------
dict0dict.c: Remove redundant code; parse both the database name and the table name in a FOREIGN KEY constraint with quotes in mind row0mysql.c, ha_innodb.cc, sql_table.cc: Return error message Cannot delete or update a parent row... if we try to drop a table which is referenced by a FOREIGN KEY constraint, and the user has not set foreign_key_checks=0 	7533b0cfff98d03b616b9312073ec4f354c7b2b6
----------------------------
"Fix for BUG#2477 ""Slave stop with error after master reboot if use HEAP tables"": when we open the HEAP table for the first time since server restart, in hp_open(), we set a flag to propagate this info to the handler level which then writes a DELETE FROM this_heap_table to the binlog. It is not a perfect solution for the bug, because between the server start and the first open of the table, the slave still had old data in his table so a SELECT on the slave may show wrong content. But if there is a --init-file to populate the HEAP table on master as startup, then this is a safe fix (I'll put a note about init-file in the HEAP section of the manual). "	e71325caf95afbaaacac3581f38b0eafd2116620
----------------------------
"Fix for BUG#2527 ""Multi-Table Delete - Not Replication use replicate-wild-do-table"" (as long as replicate-*-table rules were defined, multi-table DELETE was never replicated by the slave). "	5ce227e78a2bc0530c3cab2cbebdd4672a0c40c1
----------------------------
"Fix for bug#2505: MySQL reports ""out of memory"" when DROP USER if --skip-grant-tables "	fb6338d1a34314ac5041529c8a0029aa0abdc056
----------------------------
patch reverted - USE_RAID is defined in my_config.h 	b68a83a050c60445eb7fce5a34110218c59fa948
----------------------------
Fix deprecation warning - database_engine => storage_engine 	aa31e98c9088c5e69a12c96fbf319b48296ff00f
----------------------------
- fixed early removing of socket file when multiple instances of mysqld are started via mysqld_safe (BUG#2114) Thanks to Rodrigo Marchant for the suggestion 	5693662fc0f12a7099b0714b837f01f2370eeb3b
----------------------------
Some small portability fixes. Added support for lower_case_table_names=2, which is to be used on case insensitive file systems. This tells MySQL to preserve the used case of filenames and database names to make it esier to move files between cases sensitive can case insensitive file systems (like Windows and Linux) 	c1dd070ba73952d0c18c8ca01a9cbf322fcab26e
----------------------------
log0log.c: Do not assert in log0log.c, line 856 if ib_logfiles are too small for innodb_thread_concurrency. Instead, print instructions how to adjust my.cnf and call exit(1). 	b5d9ecad52c2b38644b6812967d389b281ffdf7a
----------------------------
"- bumped up version number in configure.in to 5.0.1 - tagged ChangeSet 1.1644 as ""mysql-5.0.0"" "	f204b080315843bab93e4ac5848d4b2597f1feff
----------------------------
- marked /etc/logrotate.d/mysql as a config file in the RPM spec file (BUG#2156) 	e9b90a7dcc32513d015480530f6506596bf92794
----------------------------
srv0start.c, univ.i, configure.in: Check at compilation time on Unix that InnoDB ulint is the same size as void*, and also check it at runtime 	734870d0ce43d21457939f93358a5a95e395b97c
----------------------------
Merge: 23b2567 d67bbe7 Merge gbichot@bk-internal.mysql.com:/home/bk/mysql-5.0 into mysql.com:/home/mysql_src/mysql-5.0-new-binlog-format 	0fb8aec1afb4aa62046dbabaa6c6dd210463a6d1
----------------------------
Merge: df3b1a5 29e1bdd Merge gbichot@bk-internal.mysql.com:/home/bk/mysql-5.0 into mysql.com:/home/mysql_src/mysql-5.0-new-binlog-format 	1333f636ae47fe4c88b38e9bfdf582336228112e
----------------------------
Fixed that lower_case_table_names is set to 1 for case insensitive file systems. 	aa3f200c031913313d5373032a03709635bf0227
----------------------------
Merge: ecf54df 66a32e8 Merge gbichot@bk-internal.mysql.com:/home/bk/mysql-5.0 into mysql.com:/home/mysql_src/mysql-5.0-new-binlog-format 	2f3c1efaa73824447b81dc5461b747a8cd3fad2a
----------------------------
"This will be pushed only after I fix the testsuite. This is the main commit for Worklog tasks: * A more dynamic binlog format which allows small changes (1064) * Log session variables in Query_log_event (1063) Below 5.0 means 5.0.0. MySQL 5.0 is able to replicate FOREIGN_KEY_CHECKS, UNIQUE_KEY_CHECKS (for speed), SQL_AUTO_IS_NULL, SQL_MODE. Not charsets (WL#1062), not some vars (I can only think of SQL_SELECT_LIMIT, which deserves a special treatment). Note that this works for queries, except LOAD DATA INFILE (for this it would have to wait for Dmitri's push of WL#874, which in turns waits for the present push, so... the deadlock must be broken!). Note that when Dmitri pushes WL#874 in 5.0.1, 5.0.0 won't be able to replicate a LOAD DATA INFILE from 5.0.1. Apart from that, the new binlog format is designed so that it can tolerate a little variation in the events (so that a 5.0.0 slave could replicate a 5.0.1 master, except for LOAD DATA INFILE unfortunately); that is, when I later add replication of charsets it should break nothing. And when I later add a UID to every event, it should break nothing. The main change brought by this patch is a new type of event, Format_description_log_event, which describes some lengthes in other event types. This event is needed for the master/slave/mysqlbinlog to understand a 5.0 log. Thanks to this event, we can later add more bytes to the header of every event without breaking compatibility. Inside Query_log_event, we have some additional dynamic format, as every Query_log_event can have a different number of status variables, stored as pairs (code, value); that's how SQL_MODE and session variables and catalog are stored. Like this, we can later add count of affected rows, charsets... and we can have options --don't-log-count-affected-rows if we want. MySQL 5.0 is able to run on 4.x relay logs, 4.x binlogs. Upgrading a 4.x master to 5.0 is ok (no need to delete binlogs), upgrading a 4.x slave to 5.0 is ok (no need to delete relay logs); so both can be ""hot"" upgrades. Upgrading a 3.23 master to 5.0 requires as much as upgrading it to 4.0. 3.23 and 4.x can't be slaves of 5.0. So downgrading from 5.0 to 4.x may be complicated. Log_event::log_pos is now the position of the end of the event, which is more useful than the position of the beginning. We take care about compatibility with <5.0 (in which log_pos is the beginning). I added a short test for replication of SQL_MODE and some other variables. TODO: - after committing this, merge the latest 5.0 into it - fix all tests - update the manual with upgrade notes. "	66a32e89252fe73093f99ec1f278ae04ec44ef74
----------------------------
WorkLog #1323 (part 2) New Statement: SHOW [STORAGE] ENGINES New System Variable: storage_engine New mysqld Argument: --default-storage-engine= 	2b53eef5f00364464652847065a81a32571cc73f
----------------------------
Extend max_allowed_packet to 2G in mysql and mysqldump (Bug #2105) Don't dump data for MRG_ISAM or MRG_MYISAM tables. (Bug #1846) Ensure that 'lower_case_table_names' is always set on case insensitive file systems. (Bug #1812) One can now configure MySQL as windows service as a normal user. (Bug #1802) Database names is now compared with lower case in ON clause when lower_case_table_names is set. (Bug #1736) IGNORE ... LINES option didn't work when used with fixed length rows. (Bug #1704) Change INSERT DELAYED ... SELECT... to INSERT .... SELECT (Bug #1983) Safety fix for service 'mysql start' (Bug #1815) 	d47deebb58804e2323d3861d0cf4d68f5cfea04f
----------------------------
WL#1364: Store some environmental values with SPs and use at invokation sql_mode is stored and used with SPs. sql_select_limit is always unlimited in SPs. 	7bfbfc308f4c198860964c0aef6765a4b47eb252
----------------------------
Fix for bug# 1142 ./configure - error in file causes failure of compile (SSL option needed) 	194da99215cc7d0214415cb4f484f0f4176e4d5f
----------------------------
"Fix for BUG#2045 ""Sending SIGHUP to mysqld crashes it if running with --log-bin"". The constructor of Rotate_log_event used when we are rotating our binlog or relay log, should not assume that there is a nonzero THD available. For example, when we are reacting to SIGHUP, the THD is 0. In fact we don't need to use the THD in this constructor; we can do like for Stop_log_event, and use the minimal Log_event constructor. If we were allowed to put Unix-specific commands in the testsuite, I'd add a test for this (<sigh>). "	dba12258b9e60ece0917b6907c5e07a2a1b62727
----------------------------
Fixed test for 'init_slave' variable 	38a4780fd13e0b2e3df1bcbdedade6575585ee0f
----------------------------
"Task ID	499:Add a new settable string variable(init_connect, init_slave) to mysqld that is executed for all new connections. (Similar to the client command: mysql_options(... MYSQL_INIT_COMMAND ...). "	b46d75f08b47d46190f038abed67f81fb078bf61
----------------------------
WL#1175: more default_week_formats for iso compatibility New formats added for 'week()' function and 'default_week_format' option(4 - 7). Next formats is supported now: *Value* *Meaning* `0'     Week starts on Sunday; First Sunday of the year starts week 1. Week() returns 0-53. `1'     Week starts on Monday; Weeks numbered according to ISO 8601:1988. Week() returns 0-53. `2'     Week starts on Sunday; First Sunday of the year starts week 1. Week() returns 1-53. `3'     Week starts on Monday; Weeks numbered according to ISO 8601:1988. Week() returns 1-53. `4'     Week starts on Sunday; Weeks numbered according to ISO 8601:1988. Week() returns 0-53. `5'     Week starts on Monday;  First Monday of the year starts week 1. Week() returns 0-53. `6'     Week starts on Sunday; Weeks numbered according to ISO 8601:1988. Week() returns 1-53. `7'     Week starts on Monday;  First Monday of the year starts week 1. Week() returns 1-53. 	48317785878fbb31d444629e08deef7212f53906
----------------------------
"- Bumped up version number in configure.in 4.1.1-alpha -> 4.1.2-alpha - tagged ChangeSet 1.1641 as ""mysql-4.1.1"" "	84acc2054f22cf0835a5cc744cf2343c69433d0e
----------------------------
There is no reason that Intvar_log_event's constructor calls Log_event::Log_event() instead of Log_event::Log_event(THD*, ...) when the event is built in the master to be written in the binlog. Rand_log_event already used the good constructor, so there really is no reason for Intvar_log_event to be an exception. This fixes a test failure of last night (which appeared after I removed a useless e.server_id=thd->server_id in log.cc; in fact this line was not useless because it hid the bad constructor). Replication tests pass, with Valgrind too. 	7eda171f9a9f17183335d53094a6e5f6ce5450cd
----------------------------
Removing unneeded code: the Intvar_log_event constructor calls the Log_event constructor which does e.server_id=thd.server_id. 	612109ffa0ea9cb52f13268d124682f135683edb
----------------------------
Second part of WL #519: Client option secure-auth deployed on all possible layers: - mysql client command-line and config file option - mysql_options option MYSQL_SECURE_AUTH - mysql_real_connect will automatically take into account that option if mysql->options.my_cnf_file/my_cnf_group is set 	2e8cf31abc7bb1bb00eb9dbf93e3b8b253889fed
----------------------------
"Fix for BUG#1960 ""date_format() returns spurious '-' for valid dates"". It was a forgotten ltime->neg=0 (neg was the only forgotten variable). I scanned field.cc for other places where we would forget to set neg, found none. A test for the bug. "	292b0a1892d07b171dd3d77320f1e61c3efc716e
----------------------------
SCRUM WL#1284 (warnings about --skip-name-resolve) Messages corrected 	611096a709bf7e5d7f6a507009c41ea7f4ac32cb
----------------------------
Don't flush cur_log (relay log) on flush_relay_log_info becasue this crashes the server if cur_log is 'hot' and the io_thread has changed log file. Updated project files for windows Made rpl_change_master.test portable Ensure that mutex are not freed if not initilized 	d87494c5acf1b0e03cb3848b3e588c1d0259b44f
----------------------------
os0file.c: Fix the OS error 2 reported by Miguel and Mark in Windows crash recovery: a * had been forgotten from the path in directory scanning ha_innodb.cc: Set default directory in fil0fil.c right if we are running the Embedded Server Library, where the default dir of the process is not necessarily the MySQL datadir 	f8e9f31e933c9fb36fb6be55a5984d7fb23d836f
----------------------------
SCRUM WL#1284 (warnings about --skip-name-resolve) Now MySQL will issue warnings during startup about entries in grant tables with hostnames that require resolve, and after GRANT commands with that kind of hostnames. 	72566c794eab8141b0d63e15b64577ba2725e07a
----------------------------
Official builds are tested with mysql-test-run --sleep=10, and the slave has (in mysql-test-run) a slave-net-timeout=10. So the 'sleep 1' below was converted in 'sleep 10', so slave thought that connection was down, so reconnected, so got an additional (fake) Rotate event, which shifted the positions displayed by SHOW SLAVE STATUS. 	4bd3b096a0db31e64e6a97b03ab44a1ddf91aa50
----------------------------
CLIENT_MULTI_QUERIES -> CLIENT_MULTI_STATEMENTS New multi-key-cache handling. This was needed becasue the old one didn't work reliable with MERGE tables. ALTER TABLE table_name ... CHARACTER SET  ... now changes all char/varchar/text columns to the given character set (One must use ALTER TABLE ... DEFAULT CHARACTER SET ... to change the default character set) Fixed that have_compress is detected properly (fixes problems with func_compress.test on platforms without zlib) New syntax for CACHE INDEX ('keys' is optional if no index name is given and one mentions the key cache name only ones) Removed compiler warnings Added mysql_set_server_option() to allow clients like PHP to easaily set/reset the multi-statement flag. 	cab1dc628c116f042a3fd8dbc505f7ca2df599a3
----------------------------
"fixed bug #1650 ""mysql_config --libmysqd-libs misses libwrap"" "	24413c7d8cf42fca6be3d885a9516585929676d9
----------------------------
"When we delete the slave's temp tables from memory, we reset rli->save_temporary_tables and slave_open_temp_tables (in old 4.0 you could make ""SHOW STATUS LIKE 'slave_open_temp_tables'"" grow indefinitely by doing RESET SLAVE and replicating always the same CREATE TEMPORARY TABLE). It's critical to reset save_temporary_tables to 0 (otherwise you may later read memory which has been freed) so this changeset should go into 4.1. "	fbc54c139d26602f8b2d418413476c49a814c2b3
----------------------------
Simplified 'wrong xxx name' error messages by introducing 'general' ER_WRONG_NAME error Cleaned up (and disabled part of) date/time/datetime format patch. One can't anymore change default read/write date/time/formats. This is becasue the non standard datetime formats can't be compared as strings and MySQL does still a lot of datetime comparisons as strings Changed flag argument to str_to_TIME() and get_date() from bool to uint Removed THD from str_to_xxxx functions and Item class. Fixed core dump when doing --print-defaults Move some common string functions to strfunc.cc Dates as strings are now of type my_charset_bin instead of default_charset() Introduce IDENT_QUOTED to not have to create an extra copy of simple identifiers (all chars < 128) Removed xxx_FORMAT_TYPE enums and replaced them with the old TIMESTAMP_xxx enums Renamed some TIMESTAMP_xxx enums to more appropriate names Use defines instead of integers for date/time/datetime string lengths Added to build system and use the new my_strtoll10() function. 	a444a3449f87ad4c8060fe5769c0bae7a1b64eaf
----------------------------
small fix for max_user_connections. everything else will be pulled from 4.0 	d1bfa5c598ee3af9288ca496c90ca01c15ebfe24
----------------------------
Safety fix for adding service name to search config groups 	a4fff85de574664f54cf2d1be190d65faa5b220a
----------------------------
"Change back service name to MySQL Don't add service name to read config file segments if it's ""MySQL"" Fixed possible memory leak when CHANGE USER failed. "	bc00893d165a8881160011169a25754f10cdb06d
----------------------------
"Fix for BUG#1686 ""If 2 master threads with same-name temp table, slave makes bad binlog"" and (two birds with one stone) for BUG#1240 ""slave of slave breaks when STOP SLAVE was issud on parent slave and temp tables"". Here is the design change: in a slave running with --log-slave-updates, events are now logged with the thread id they had on the master. So no more id conflicts between master threads, but introduces id conflicts between one master thread and one normal client thread connected to the slave. This is solved by storing the server id in the temp table's name. New test which requires mysql-test-run to be run with --manager, otherwise it will be skipped. Undoing a Monty's change (hum, a chill runs down my spine ;) which was ""Cleanup temporary tables when slave ends"" in ChangeSet 1.1572.1.1. "	59d0872aa05e8b02e78db16b1afbe2837af333cf
----------------------------
followup to max_user_connections fix, keep the count more accurate 	1d617f18887c86183027c802945ef27060b71a0a
----------------------------
row0sel.c: If innodb_force_recovery >= 5, do not try to fetch an old version of a clustered index record: this reduces crashes when dumping tables from a corrupt database 	de6cc5f0189d21f624e5d9be4e9a871da183e28c
----------------------------
fixes for max_user_connections (connections are now counted even if max_user_connections is not set - that is no limit - so that when max_user_connections is set (with SET) old connections are also taken into account mutexes are added where appropriate 	75454930dc81d5e872055747eddb491ec6c47baa
----------------------------
sql_parse.cc: Fix yet another race condition in sql_parse.cc: thd->user_connect object could get deleted too soon, before the call of check_for_max_user_connections 	24db4ecf977b4cc72b207795be5d72a72e667ff8
----------------------------
"- bumped up version number in configure.in to to 4.0.17 now that 4.0.16 has been tagged and released - tagged ChangeSet 1.1576.1.5 as ""mysql-4.0.16"" "	f393024fef2965c08ec99a4f0b5810228f4e88df
----------------------------
Changing max_insert_delayed_threads now also changes the size of thread alarm buffer. 	f2884bac40f31a598aa71216bfbca09f540d8c41
----------------------------
"Add new user variables for tuning memory usage: query_alloc_block_size, query_prealloc_size, range_alloc_block_size,transaction_alloc_block_size and transaction_prealloc_size Add more checks for ""out of memory"" detection in range optimization "	c95d142f8f602b717c6c10d13e37b2b3ecf069d4
----------------------------
mysqld.cc: Fix error in --show-slave-auth-info help string. 	54533936b1f0c03ad73a3b47f8c4fa5fb48b4178
----------------------------
fix_max_connections to resize alarm_queue (Bug #1435) 	2667d7f8cc34d7b568ebcfce3e74f25bde6a448e
----------------------------
sql_cache.cc, mysql_priv.h: Query cache now takes in account character_set_results and collation_connection 	67347790de3662cfad987c36e3d9a864e0338a7b
----------------------------
Optimized code for setting user variables with := and fixed some bugs in old code (Bug #1194) Use forced close of socket to make mysqld shutdown faster when used under valgrind 	989ca397b22f5296b71ad02ad8ae39d112b5de73
----------------------------
fixed processing of COM_BINLOG_DUMP to use in mysqlbinlog 	293f27df35a2bddf3226b2854a163db910699275
----------------------------
fix for #1344 handling of init-file option added to embedded library main problem was killing of output (resulting recordsets etc) i added checks for empty output in Protocol:: methods better solution could be special Protocol_nul class to redirect results to nowhere 	9dcce9b0f33619d98b12d9e266bee55518edeabe
----------------------------
typo fixed (bug #1390 - incorrect mysql_config output) 	9e68df23333ecb21ed776fcb983e2f98ca2d1721
----------------------------
make mysqld to respect socket/port options of mysqld_safe command line and [mysqld_safe] section in my.cnf, even if they are also specified in [mysql] section. 	1394684e12b85ed9808115b9fe3a80c4d84c64ef
----------------------------
SCRUM: WL#604 Privileges in embedded library code added to check privileges in embedded library NO_EMBEDDED_ACCESS_CHECKS macros inserted in code so we can exclude access-checking parts. Actually we now can exclude these parts from standalone server as well. Do we need it? Access checks are disabled in embedded server by default. One should edit libmysqld/Makefile manually to get this working. We definitely need the separate configure for embedded server 	ba8fa76fa20f400d8adfe2aa14231a682df9ba79
----------------------------
Block SIGPIPE also for not threaded client programs. Added --include and --libs_r options to mysql_config. Added mysql_get_client_version() to client library Fixed some minor benchmark issues 	f05a1c83940557721a42c758e26f2adace291d0a
----------------------------
"comp_err.c: There are some problems compiling with pure ""configure"" I need to fix it first. "	b201d49631637a3c55f25591a3ae40e8f77d2f71
----------------------------
configure.in: Fix the problem with errmsg compilation 	287d0b64796735b08b55a7ee3929721fab890d59
----------------------------
Bug fix: SET character_set_connection=newcharset; SELECT hex('text'); The above sequence failed in some cases. 	fb4f5e7d4263c7df25635e470de2cdd3d5a60fe1
----------------------------
"- Bumped up version number from 3.23.58 to 3.23.59 in configure.in - Tagged ChangeSet 1.1413 as ""mysql-3.23.58"" "	6da669ef95f82d8d50bc527ffac9181699155e94
----------------------------
"New SQL variables ""collation_server"" and ""collation_database"" "	1d20c09ce94e8897079278aee293c151a6aa5513
----------------------------
"Quick backport of the following bugfix from MySQL 4.0.14. DO NOT COPY THIS CODE TO 4.0. The bugfix is better in 4.0, but here in 3.23 we don't want to add a new error code so we just use ER_EMPTY_QUERY. Bug was: ""If a query was ignored on the slave (because of @code{replicate-ignore-table} and other similar rules), the slave still checked if the query got the same error code (0, no error) as on the master. So if the master had an error on the query (for example, ``Duplicate entry'' in a multiple-row insert), then the slave stopped and warned that the error codes didn't match. (Bug #797)"" "	40a88045cb4e60028f9e548deeb89b1d412adf3c
----------------------------
Fix for the bug #1200: Can't start MySQL if bind-address set to hostname that starts with a number. 	9de77cc983e9456fb2d2fec6a02b77fe3d7e4d14
----------------------------
"- Added option ""--skip-name-resolve"" to mysql_install_db to be able to use the local machine's IP address instead of the host name when building the initial grant tables if ""skip-name-resolve"" has been specified in my.cnf. This can be helpful on FreeBSD to avoid thread-safety problems with the FreeBSD resolver libraries. (Thanks to Jeremy Zawodny for the patch) "	541189e746bd89d56657438bd7c9d14910857c2b
----------------------------
Fix for Bug #1142 './configure - error in file causes failure of compile (SSL option needed)' 	6d271a529676021f3e1a1d60c3bf88818f678568
----------------------------
Added a warning to my_print_defaults if --verbose is given and --defaults-file is a non-existing or non-regular file. Bug#755 	5f8ef50b3561961c436d683c776f2254b7477346
----------------------------
"- Reverted a fix for bug#897, as it broke the installation on some other operating systems - some implementations of ""hostname"" simply set the host name to ""-f"" instead of giving an error about an unkown option "	fea30410ed9e25265991716fd5f9d86e8d504e82
----------------------------
comments about mutexes in replication. Don't start the SQL slave thread with SQL_BIG_SELECTS; it's better to inhibate max_join_size instead. 	cc29458056cdf1b4ef4b0e25f034a707d59586f0
----------------------------
The slave threads MUST not care about max_join_size, we start them with OPTION_BIG_SELECTS. 	cc918272edb3e3d2cfb199ccdff54fc3710b63a1
----------------------------
* Fix for a potential bug: when the SQL thread stops, set rli->inside_transaction to 0. This is needed if the user later restarts replication from a completely different place where there are only autocommit statements. * Detect the case where the master died while flushing the binlog cache to the binlog and stop with error. Cannot add a testcase for this in 4.0 (I tested it manually) as the slave always runs with --skip-innodb. 	10811aba880f9f7db646a700cfc2065fbbfa8d0d
----------------------------
Result updates after Dmitri's and my changes to logging with --log-slave-updates. Since my changes, rpl_log.test, whose result file depends on file_id, became non-repeatable, i.e. file_id on slave in SHOW BINLOG EVENTS changed depending on the order of tests (sometimes 1, sometimes 5). Which is logical: as now the slave does not copy Create_file and Exec_load from the relay log (i.e from the master's binlog) to the slave's binlog, but instead lets mysql_load() do the logging, the file_id is now the one whic was used on the slave. Before it was the one which was used on the master, and by chance the master was always restarted for this test because there's a -master.opt file, so file_id on the master is always 1. But now file_id is from the slave so we need to restart the slave. That's why I add an (empty) -slave.opt file. I could have used 'server_stop/start slave', but this would have required the manager, so most of the time mysql-test-run silently skip the test which makes it useless. And I want this test to be run ! 	ec280a51cac48d8d25a1ad55125faf07c31542f5
----------------------------
"First commit for fixing BUG#1100 ""LOAD DATA INFILE is badly filtered by binlog-*-db rules"". There will probably be a second final one to merge Dmitri's changes to rpl_log.result and mine. 2 new tests: rpl_loaddata_rule_m : test of logging of LOAD DATA INFILE when the master has binlog-*-db rules, rpl_loaddata_rule_s : test of logging of LOAD DATA INFILE when the slave has binlog-*-db rules and --log-slave-updates. "	1dd53ed073715f32f3ef992e59456140ec1ff1e4
----------------------------
Fixed some varnings from valgrind Set min value of max_allowed_packet to 1024 Fixed problem with UNION's without braces and SQL_CALC_FOUND_ROWS, LIMIT #,# and ORDER BY...LIMIT 	359846f052f660af465cffe6480433a400da90de
----------------------------
item_func.h: Fix for a bug with LEAST() in WHERE clause ha_innodb.cc: Fix for a configure bug multi_update.result, multi_update.test: Fix for the update with NULL's in the result set sql_update.cc: Fix for the update with NULL's in the result set Fix for the update with NULL's in the result set Fix for the update with NULL's in the result set 	fb774125e807de66294da40aaabc596d444e1d93
----------------------------
Fix for BUG#1086. Now we don't preserve event's log_pos through log-slave-updates since this causes unexpected values in Exec_master_log_pos in A->B->C replication setup, synchronization problems in master_pos_wait()... Still this brokes some functionality in sql/repl_failsafe.cc (but this file is not used now) 	bb96092202781f33cefe63c7f1290bfad39463e8
----------------------------
Fix mutex handling in SHOW_VARIABLES (key_buffer_size was not properly protected) Changed some non fatal myisamchk error messages to warnings 	d79cbc3b995c22885c24ee0773c6e4e27a5b6ec3
----------------------------
added compile-pentium-maintainer - equivalent of compile-pentium-debug but with --enable-maintainer-mode configure option Maybe it's worth to merge compile-mentium-debug and compile-pentium-maintainer to a single script 	2964e4ab48cfdebc34280a001f9b52236dfa4780
----------------------------
"- try harder to obtain the FQDN with ""hostname -f"", if possible (BUG#897) Unfortunately the returned value of ""hostname"" is inconsistent on various platforms - some return the host name only, others return the FQDN by default. On Linux, one can use option ""-f"" to enable the output of the FQDN. Use it, if available. "	3d5d56cea9961971f7d72d9f7cd6c4ed66ed7bdb
----------------------------
Fix so that SET PASSWORD is not replicated by the slave if running with replicate-*-table rules which exclude 'mysql' tables (e.g. replicate-wild-ignore-table=mysql.%). This was already the behaviour for GRANT/REVOKE, I'm extending it to SET PASSWORD because it seems very logical (the contrary seems illogical). 2 new tests: - one to test if GRANT and SET PASSWORD are replicated - one to test if they are not replicated if replicate-wild-ignore-table=mysql.% The 2nd is also a testcase for BUG#980. 	41865cf3a670ffee10d0cf263c33e12bd7b8c2da
----------------------------
mysqld.cc: innodb_fast_shutdown CAN take an argument though it was not specified so in mysqld.cc 	a5eacc69e6a0571ab9c91dd60f43fce195d72a27
----------------------------
"My changes to test rpl_insert_id in 4.0 about replication of foreign_key_checks have in fact no effect, because in 4.0 the slave always runs with --skip-innodb. In 4.1, mysqld accepts option --innodb which can override --skip-innodb. So I add this option to the test. When the updated test (using InnoDB tables) from 4.0 will be merged into 4.1, with this good .opt file, we'll have a meaningful test in 4.1. Until then, the test in 4.1 will pass but be useless. And in 4.0, it will stay useless forever. (""it"" = the part of the test which tests replication of foreign_key_checks) "	a2b861b2772d46b0f19aafb9ee7cef9c0861dd63
----------------------------
Make rpl_insert_id.test use InnoDB, and added foreign keys to the table, so that it really tests replication of SET FOREIGN_KEY_CHECKS (previously it used MyISAM). 	34352d0c216536e0dea1b3df4ce7de40f61788a6
----------------------------
"Fix for BUG#858 ""CHANGE MASTER forgets to update relay-log.info""; just a flush_relay_log_info() at the end of CHANGE MASTER (there was already flush_master_info()). "	aba7647fd814cf3d9171e7f742d5e72266cc54ec
----------------------------
On Feb 4th, 2003, Monty said he would push my patch to print replicate-do-table and other replicate-*-table options in SHOW SLAVE STATUS. Seems like it had not been done, so I push it now: there's 4 new columns to SHOW SLAVE STATUS. 	9a5ac78f4c7eda40d56e1fa32659ceacefb3b8f7
----------------------------
fixed bug 663 and WL 1052 (sql_mode is safe for mysqldump) 	f32299279d9562485cd7714626d267dae130a7a4
----------------------------
Bug #554: Support for --with-openssl[=DIR] Here is fix for bug 554. Added configure options --with-openssl-includes[=DIR] and --with-openssl-libs[=DIR] 	5603456e4f2467c808b1afc60064acd023732bb3
----------------------------
"- tagged ChangeSet 1.1527.1.3 as ""mysql-4.0.14"" - bumped up version number in configure.in to 4.0.15 "	60c914302d1f9265ba1a0e0ba2f921887b70fa7e
----------------------------
undo one row warning instead use sql_warnings=1 	0440e70a96a774a1c484c49939e1b7ef1ab87df5
----------------------------
Style fixes, comments for 4.1.1 authorization Now special 1-byte packet is used for request of old password Fixed bug with --skip-grant-tables and acl_getroot 	09e53b016967a84126dc50474a54010712893bf1
----------------------------
SCRUM: Task 499 'init_connect, init_slave options' 	333bddb33ffa00989a98fdfa6157f5abff3e7cd6
----------------------------
srv0start.c, srv0srv.h, os0file.h, os0file.c: Allow also O_DIRECT as innodb_flush_method; it only affects writing to data files 	2340cff77aed26fe4ce129bd06dba2df38c53bd4
----------------------------
"Fix for BUG#797 ""If query ignored on slave (replicate-ignore-table) the slave still checks if the returned error (0) is the same as the one on the master, whereas it shouldn't test this. Plus a new test for BUG#797. "	46b0e778b8ab8e7d303545c8fff58be3db74859c
----------------------------
Preliminary support for options --secure-auth, --old-passwords Support for option --old-protocol was removed. Some test performed. Tests for SSL and replication are pending. More strict following to specification for --old-passwords is in the TODO. 	a232225b69cc34f18f87a761e19fc0e3d2790d97
----------------------------
WL#912 (more user control on relay logs): FLUSH LOGS now rotates relay logs, and a new variable max_relay_log_size. Plus a very small bit of code cleaning. 	9c73d91d540f094765e9cdea27f0011e7afca518
----------------------------
reduced using of slow current_thd/current_lex macro initialization of item_thd moved to constructor (in any case we need thd in constructor) initialization of group_concat_max_len to constructor to avoid incorrect length reporting (BUG#757) removed Item_func_group_concat::fix_length_and_dec() because item have its own fix_fields and will not have inherited items 	45e001f465ca2f9ccc659446b50dc20fb640224e
----------------------------
New Sample config file. The changes for actual loads and memory sizes are to be done after text and format are  improved. 	1bd7127208de1a87de55e4fc8824065d35640349
----------------------------
I committed the same changeset in my tree yesterday, but broke the tree since, so I commit again in a fresh tree. Fix for bug#763 (Relay_log_space too big by 4 bytes), plus comments and DBUG_PRINT, and we don't start replication if --bootstrap. 	ace8a06323af77401cc5bcdc8b17043fc6081b66
----------------------------
LAST_INSERT_ID() should not be set if we couldn't generate an auto_increment id. 	6bc7b3a6be246f67b06c1e5e15ea0de97bf637f4
----------------------------
Added thread variable max_seeks_for_key Change optimizer to prefer key lookups before table scan Change table scans to be done after tables with constrains on scanned table 	34919a03c4d0d17e6bb5f11fab53366ee04ea7f9
----------------------------
- reverted change from AC_CONFIG_HEADERS to AM_CONFIG_HEADER in configure.in again - even though the automake docs consider AM_CONFIG_HEADER obsolete, it currently still breaks for too many people to justify this change at the moment. 	dc704a2c20f3050f38a9f9dd214cb1d2b148e277
----------------------------
test for SQL_MODE with PIPES_AS_CONCAT, ANSI and IGNORE_SPACE 	5788c90d07d97714dd23268fcb1cde31a093e418
----------------------------
Changed connect with timeout to use poll() instead if socket() to avoid problems with many open files 	039554f38ba5280f431d79d0c64872019d8bdf2a
----------------------------
Fixed cleanup_load_tmpdir() which deleted nothing. 	9990ce576b666980904ae8202b079bdd8fdd00ba
----------------------------
Warn that --log-slave-updates is used without --log-bin and disabled (WL#998) 	def18de12c49070e7ad52fd515bd0de4d90a0da9
----------------------------
SCRUM Task ID 894: Backport default_week_format variable to 4.0 	289d375f506aab6b46eb605baab8be5283d00c72
----------------------------
LAST_INSERT_ID()}will now return 0 if the last INSERT didn't insert any rows. 	d33cb08eb65b655d28eea13b91cc8f285ed8b25b
----------------------------
- replaced obsolete Macro AM_CONFIG_HEADER with AC_CONFIG_HEADERS - Added missing function name in checking for sem_init in posix4 libs on Solaris 	925f621c644a65f4283cd59c416207a686198172
----------------------------
We now require SUPER privilege for SET PSEUDO_THREAD_ID. 	e04a9e6740812c0580b722aa61e990341b3aa734
----------------------------
- applied patch to mysql_explain_log.sh provided by Dennis Haney to accept --socket option (Bug #592) 	2daa5643d3c9a5218f75a47476fa5624ad477cfe
----------------------------
Fix for bug 254 : we now make a distinction between if the master is < 3.23.57, 3.23 && >=57, and 4.x (before the 2 3.23 were one). This is because in 3.23.57 we have a way to distinguish between a Start_log_event written at server startup and one written at FLUSH LOGS, so we have a way to know if the slave must drop old temp tables or not. Change: mi->old_format was bool, now it's enum (to handle 3 cases). However, functions which had 'bool old_format' as an argument have their prototypes unchanged, because the old old_format == 0 now corresponds to the enum value BINLOG_FORMAT_CURRENT which is equal to 0, so boolean tests are left untouched. The only case were we use mi->old_format as an enum instead of casting it implicitly to a bool, is in Start_log_event::exec_event, where we want to distinguish between the 3 possible enum values. 	60fb005e5e0ed7c15be4132a24f703b321dd41a0
----------------------------
- Updated Default-Stop run levels in the LSB header section to satisfy Red Hat's chkconfig (Bug #272) (The LSB spec is a bit ambigous about what actually needs to be put into this field) 	7947830b2de3f83f674e8341abcaddcad3b9e500
----------------------------
Added SQLSTATE to client/server protocol bmove_allign -> bmove_align Added OLAP function ROLLUP Split mysql_fix_privilege_tables to a script and a .sql data file Added new (MEMROOT*) functions to avoid calling current_thd() when creating some common objects. Added table_alias_charset, for easier --lower-case-table-name handling Better SQL_MODE handling (Setting complex options also sets sub options) New (faster) assembler string functions for x86 	23145cfed72954c29f5a47e82af22898164be4b0
----------------------------
handler.cc: If the autocommit is on, let handler.cc commit or rollback the whole transaction at an updating SQL statement end. This probably fixes bug number 578. The problem was that when explicit LOCK TABLES is used, then the lock count method in autocommit does not work. 	42c80c81f79d5376089a14ede88749a3ae625317
----------------------------
Windows build fixups (Fix for slave_net_timeout) 	99ceb8fd04fd4c1c6316d9c4532d7e4a615092f8
----------------------------
Fix windows build after applyiing the changes from new client.c(sql-common) NOTE: Still the build fails to compile core server on Windows due to slave_net_timeout linker error from client.obj and make sure to have the next changeset, which fixes this. 	45fc8cc25b4500f78cc8304c957ffe052408d166
----------------------------
"One-line fix for bug 576 (DBUG_ASSERT failure when using CHANGE MASTER TO RELAY_LOG_POS=4). Plus a changeset which I had committed but forgot to push (and this changeset is lost on another computer, so I recreate it here). This changeset is ""user-friendly SHOW BINLOG EVENTS and CHANGE MASTER TO when log positions < 4 are used. "	4a80a6c7b9a7f81e239a667145e71e6d4e40212a
----------------------------
mysqlshow and mysqldump now send their vharacter set to server character_set_results is now the same with character_set_client by default 	bb611fa0a26908abf024586294d2f8f1204c5243
----------------------------
SET character_set_results=NULL  is now working 	adb8c7e0406d79213478d73eaa1af42b2e31f4db
----------------------------
set_var.cc, set_var.h: character_set_connection new variable 	0cb3f34806fc8932c92c82bcd6af7c1e7f8abb8b
----------------------------
character_set_server is now updatable character_set_database was added Code optimization: reuse more code for all character sets variables 	81f0fb6e18eb0a3dca8350275d83dce4d0c6c74d
----------------------------
--with-collation argument for configure. Now one can for example use this: ./configure --with-charset=latin1 --with-collation=latin1_danish_ci 	67c6703463dfd7542db7bc96faa379aaf7e4162d
----------------------------
ha_innodb.cc: Remove accidenatlly committed debug printfs when query cache is used sql_update.cc, sql_load.cc, sql_insert.cc, sql_delete.cc: For the transactional query cache algorithm to work we must invalidate the query cache in INSERT/DELETE/UPDATE before writing to the binlog or calling ha_autocommit_... Note that binlog writing may also call commit. The crucial thing is that the transaction which modified data must not be committed BEFORE the query cache is invalidated. 	b8e5b65f887589b5ef676578cbeee91cea3e68fe
----------------------------
Added testing of LOAD DATA ... STARTING BY Added read_only variable 	102c477760e26a927a01db3d47a7fd0c7d875eca
----------------------------
log.cc: If FOREIGN_KEY_CHECKS=0, wrap in binlog SQL statements inside SET FOREIGN_...=0; ... ; SET FOREIGN_...=1 	11ae9595c74f05265ed98ea8d4346869dd65ce92
----------------------------
Fix for #468 [Ver]: SHOW VARIABLES trims innodb_data_file_path (this bug was already fixed in 4.0, I just copied and pasted two lines). 	0b875e908ff703cb42853c22f255368e6ed673ec
----------------------------
"- ISAM storage engine is now disabled by default. To enable it, configure the sources with ""--with-isam"" "	d915b63db0fc2d501eed5c7742768df7a31a6187
----------------------------
Some SHOW VARIABLES have been renamed: collation_client  -> character_set_client collation_results -> character_set_results character_set     -> character_set_server SET NAMES now doesn't start client->server conversion SET CHARACTER SET now starts both client->server and server->client conversion 	8d52377a5c7ac1880fba575056a8fa87feff00d8
----------------------------
"""character_sets"" has been removed from SHOW VARIABLES. Use SHOW CHARACTER SET instead. ""character_set_system"" has been added to display the system character set "	7f771ce2e1c27be53c5573b0e3f67a30d02501df
----------------------------
add check of __NT__  definition for shared_memory for tree 4.1 	93325f7b6c1c01ffdd9497123b53a2da19670b0e
----------------------------
"- Tagged ChangeSet 1.1497 as ""mysql-4.0.13"" - Updated version number in configure.in to 4.0.14 now that 4.0.13 has been tagged "	9556cb171aaad69dd7ac2f099fd3914ccd2c9517
----------------------------
configure.in: ./configure --with-charset=big5  didn't work 	080eb641fa222fe31ce8dd55f45a2aa37b45e921
----------------------------
Fixed a bug with having comments after options in config files. Bug ID: 235 	c9d76b51cf004a8dd559c350dd21c1499dd5dc7a
----------------------------
- Fixed a bug in myisam_max_[extra]_sort_file_size, bug ID 339 and 342 - Fix for QNX: UNIX sockets available since 6.2.1 	c9c5841760ef0c180f2dd04079c3ad2e1d4f3322
----------------------------
"- On Mac OS X, better call mysql_install_db with ""-IN-RPM"" during the installation to make sure the privilege tables are being installed even if the DNS configuration is broken, which seems to be quite common (reverse lookups to ""hostname"" fail). This should resolve the problem many Mac OS users experience (""Fatal error: Can't open privilege tables: Table 'mysql.host' doesn't exist"") when they try to start MySQL after installing the PKG. "	07238bab28f4fc739186259ce3590944fd153f3f
----------------------------
srv0start.c, trx0sys.c: Let InnoDB to skip writing of pages from the doublewrite buffer if innodb_force_recovery=6; normally, if the page is corrupt AND the corresponding page in the doublewrite buffer is also corrupt, InnoDB calls exit(1) 	9ec42178e9755a021ba5ea6509c60e551f409b85
----------------------------
Added innodb_max_dirty_pages_pct parameter to limit amount of dirty pages in the buffer pool (can be changed online) 	afafe36b3e8c56e62315972ffbd3093a3d99dd27
----------------------------
"CURRENT_USER() and ""access denied"" error messages now report hostname exactly as it was specified in the GRANT command (with wildcards, that is) "	d13e4fc5323d39740f4e7084ee7de5550283fef3
----------------------------
Use my.cnf file from datadir even if datadir is different from the default one. 	938933afc9f90a5102dba643be1a3c54e6051ba6
----------------------------
Fix for -fbranch-probabilites (bug 268) Fix for LEFT/RIGHT/MID with multi-byte-character sets (bug 314) Fix for new bison 1.875 max_insert_delayed_threads and delayed_insert_timeout now works as documented (bug 211) Don't show port in SHOW PROCESSLIST for system threads Fix problem with ORDER BY being discarded for some DISTINCT queries (bug 275) Fixed bug with NATURAL LEFT JOIN, NATURAL RIGHT JOIN and RIGHT JOIN when using many joined tables (Bug 212) 	bf6cfd2948f4cbab120a76aaf16d7ca0739cf2f4
----------------------------
ha_innodb.cc: When FLUSH LOGS is called, flush InnoDB logs to disk also in the case innodb_flush_log_at_trx_commit=0 	a4281f59ed78dc9c1c0a725f0d9481e44f681b2f
----------------------------
Replication: new code to not modify in-memory log positions until the COMMIT is executed, even if the transaction spans on >=2 relay logs (bug #53). New variable relay_log_purge =0|1 New test to verify bug #53 	b03ec0d7db3dbdc2a4c02bcdfb0522275b5fe492
----------------------------
func_gconcat.result, ctype_many.result: Added the MAX_LENGTH_FOR_SORT_DATA option ctype_collate.result: Added the MAX_LENGTH_FOR_SORT_DATA option 	4b78926bb372aa3f4a5c2a3575129453c9860c41
----------------------------
Many files: Added the MAX_LENGTH_FOR_SORT_DATA option filesort.cc: Added the MAX_LENGTH_FOR_SORT_DATA option 	80615fade284e14119fc189f136d30fc475f8aec
----------------------------
Fixed bug in SET SQL_BIG_SELECTS 	c6333c5148de47cbde40f5a5ed50424047820032
----------------------------
config-win.h: Enable 'LOAD LOCAL INFILE', for parity with unix binaries. 	44c8a1b012b913060b2d29f7f2df7b34cecef322
----------------------------
Variable names have been renamed: client_collation -> collation_client result_collation -> collation_results connection_collation -> collation_connection 	6d5f527afd41e48499babe648b7c69ef0bef038d
----------------------------
"- added missing dashes to parameter ""open-files-limit"" in mysqld_safe (bug #264) "	7fbc28c0740460ee5ed7bfbe1d82d438f6971b21
----------------------------
"- worked around bug #235 (my-huge.cnf error) by reformatting the comments in the sample configuration files - reworked the replication options and comments a bit - added option ""skip-networking"" (commented out by default) to the sample configuration files (enhancement request from bug report #234) "	c043c6c2347c2c55604e7693ff827bf456b50bc9
----------------------------
Tiny optimisation for a (boolean || boolean) test, as SQL_LOG_BIN is set to 1 by default 	9df615b7b19fb5c242ef10b58f2ff3b821a8d6a7
----------------------------
Deprecated the update log (Sprint task #792). Now --log-update just turns on --log-bin and prints a warning. SQL_LOG_UPDATE is handled in two ways (see mysqld.cc for comments). 	654410a3d3d1d5d2bfe4be60ab8f1fbcfa211d19
----------------------------
Sprint task #856 : make table exclusion rules (in replication) apply to GRANT and REVOKE too. For example if replicate-wild-ignore-table=mysql.%, GRANT and REVOKE will not be replicated on the slave. 	4824d6c66c62e0803df5d0dc00c4d8b9c76cdf02
----------------------------
don't increment LAST_INSERT_ID() when incremented value cannot be stored in auto_increment column (e.g. is too big) 	91d6ec343884e7f900dfbac41130d365999240b9
----------------------------
fixed bug 209 (SQL_SELECT_LIMIT and query cache incompatibility) 	4d87fd034621da8a5ba192d88384c7df12ec378a
----------------------------
mysqld.cc: Make the default value of innodb_flush_log_at_trx_commit 1, not 0 which compromises the Durability of a transaction 	034d02f55bef7b695906765da153a397274a4bf5
----------------------------
sql_string.cc: NATIONAL CHARACTER() has latin1 charset now. Reasons are (by Monty): I think we should keepy having latin1 (default configure option) as the national character set.  The reason for this is simple that: - This is ok for a large part of the world. - It's faster and takes less space than utf8. 	a55138fd9461af89068a63ac982539fee91c80c9
----------------------------
Print right hostname or IP in SHOW PROCESSLIST Use SESSION TABLE_HANDLER as default table handler if given table handler doesn't exists 	68ca84dbd14c92071ca72f7635e169a94cec716e
----------------------------
configure.in: Always compile utf8 	5e57d512eba17d7bcff47fb288007364431f5d30
----------------------------
A fix for the bug with setting of SQL_BIG_SELECTS option. 	f2b5f00563d5e68c0a3a980071b586deb63ac6a0
----------------------------
New variable rli->ignore_log_space_limit to resolve a deadlock between I/O and SQL threads in replication when relay_log_space is too small. This fixes bug #79. 	87e1c552ed7e1e4c1ce65c0c7ba18291f1b3915f
----------------------------
- tagged ChangeSet 1.1358 as mysql-3.23.56 - bumped up version number to 3.23.57 in configure.in 	81db1e7fa2fcedf1ffc3b0e54d106fb598ad7d4d
----------------------------
Merge: 2c9a168 c38125c merge with 3.23 to get: - Better detection of crashed .MYI file - Ignore writeable config files 	7fdf7a410146d9a5fa0c188b448ce005ed9ca7f2
----------------------------
Handling of log-error added in embedded server 	2be2914a82283259427ed3affb7b9b412a956c39
----------------------------
sql_acl.cc, item.h: use of new argument sql_analyse.h: macros from mysql_priv.h. Should be deleted soon. mysql_priv.h: _default_charset_info has been removed item_cmpfunc.h: Use cmp_charset hostname.cc, hash_filo.h: Move charset to constructor argument 	4b5bfe990febcaf0c69a85457f29ffcd1cdeb763
----------------------------
Fix so that INSERT DELAYED cares about SQL_LOG_BIN=0 (bug #104) 	0a8f3e19a54047f8d7d7defcf89e07b99963c52b
----------------------------
A better, but larger fix for server_id bug .. 	9034ed296bca8ed505b547519fbf5ef62dcf8e1e
----------------------------
made variable query_cache_min_res_unit from QUERY_CACHE_MIN_RESULT_DATA_SIZE (SCRUM) 	b2f27a155c5eb1ebf8a74aae5d602ef2308890ac
----------------------------
Replication: simplification of init_relay_log_pos: always initialize, remove variable rli->log_pos_current. 	e66992aef5ada564c0711217fba44b028c39fcc0
----------------------------
"- bumped up version number from 4.0.11-gamma -> 4.0.12-gamma in configure.in - tagged ChangeSet 1.1594 as ""mysql-4.0.11"" "	fb43cce1f6fc651ad0ffab7af98f041c01d273b7
----------------------------
- removed +DD64 compile option from the HPUX11 default CFLAGS in configure.in - there are 32bit installations of HPUX11 out there and compiling for these by manually adding +DAportable to CFLAGS did not work. Better add +DD64 manually, if you need it. 	433742e40c2e19df39a2c7fdfe830ff1c428a6ad
----------------------------
add option default-week-format and variable default_week_format (SCRUM) 	45ada60304906ddcb9c4917261898513836be018
----------------------------
mwldnlm, mwenv, mwccnlm, mwasmnlm, nwconfigure, nwbootstrap: new file 	b080118808d45f0213dd5f09410094c5cc164dd9
----------------------------
Updated configure script to handle 1 digit numbers in MySQL version Fixed a few typos from last patch 	9d000c323a4090979238aec7cc93869921471fcb
----------------------------
Fixed a bug in mysqld_safe, when it earlier could have removed a socket from another, still living MySQL server. 	7b1ed961577e85f1b75757a6090ab8b2f4f60764
----------------------------
Fixed a bug in mysqld_safe, when it earlier could have removed a socket from another, still living MySQL server. 	381ab77b84ab4ccdb55f1a201cf6d9221b726181
----------------------------
(please merge into 4.1 and onwards) - re-added missing pre- and post(un)install scripts to server subpackage - added config file /etc/my.cnf to the file list (just for completeness) - make sure to create the datadir with 755 permissions 	c974f42a6f58c0a52bf8b897db111fffe42cf730
----------------------------
config-win.h, os0proc.h, os0proc.c, srv0start.c: Make AWE compilation depend on __WIN2000__ 	0da42750632be37a7f86a7140fe8fd28dbf8f4d8
----------------------------
Fixed handling of lower_case_table_names in SHOW TABLE STATUS, mysql_list_fields() and mysql_table_dump(). This fixes some Errcode 13 errors on Windows when deleting tables. 	d88eb71f34abc92075da6fca5489fef9cbc5abd7
----------------------------
ha_innodb.cc: Cleanup of the previous bug fix: replace code is either SQLCOM_REPLACE or SQLCOM_REPLACE_SELECT 	d2328365e0a0db890608630aa2e7a56572acedfe
----------------------------
Only write to the error log if --log-error is specified and --console is not specified (On Windows --log-error is enabled by default) 	3d289137408af20fb18a0606ee562ded1bb984d9
----------------------------
Use on Unix hostname.err only when --log-error=path. Asked by Heikki and Peter. 	ce37b7aac434f7f2c17498bec68f2f813cfd46e0
----------------------------
Merge: 689578a 710ffb2 Merge with 3.23.56 (Replace manual with 'empty' document) Fix for bug when using auto_increment column and LAST_INSERT_ID() 	152f0603e7348ef58103ddf0c958a3373dd958bc
----------------------------
Fix when using auto_increment and last_insert_id() in the same insert statement. 	710ffb2d89a05ae723de98170b66a80f2f79beef
----------------------------
My second SCRUM task: Automatically add SQL_BUFFER_RESULT if INSERT is done from SELECT comprising a table to be inserted in. 	c18ab334a6c2ec51b03c5550ff7ff7f94f8a13c1
----------------------------
Added option hostname.err 	826993bba2c8e0ecb12e480b79e7eb952b790bec
----------------------------
"- added a dummy file ""reservedwords.texi"" to the BK tree and the Makefiles, so it's part of the distribution (manual.texi includes this file) It will be replaced with the correct one from the mysqldoc tree before building the distribution - removed generation and inclusion of MIRRORS file, since the mirror list is no longer part of manual.texi anyway - replaced YFLAGS with AM_YFLAGS in sql/Makefile.am to make automake happy - Redirect standard error when checking for dpkg-architecture in ltconfig to avoid error message showing during configuration "	82aca82da0c382ca0cc34549011fd47bd2502412
----------------------------
ft_stopword_file added to 'SHOW VARIABLES' output 	4b61ba5a8918b05903ac4432e254113523054591
----------------------------
Added timeout for wait_for_master_pos Fixed comparision of log-binary name to handle comparison when file name extension wraps from .999 to .1000 Don't replicate CREATE/DROP DATABASE if wild_xxx_table=database.% is used. 	fa7a94ed14f0bdd39b99abfca872444fdb5fff11
----------------------------
"- bump up version number 3.23.55 -> 3.23.56 in configure.in - tagged ChangeSet 1.1315 as ""mysql-3.23.55"" "	500b90f4dfef1b943a7944322f9c9ad4ac79b078
----------------------------
--ft_stopword_file command-line option 	274df581180e62eddaee716e3d1c39eebbb37ee4
----------------------------
"- tagged ChangeSet 1.1509 as ""mysql-4.0.9"" - bumped up version number in configure.in to 4.0.10-gamma "	a6f6f19b51f9d71e23dd6fb3d838dd9a60530e27
----------------------------
changes for readline/libedit configuration 	69b722d7d9bc0bf5a002ab207f45ece7319d0488
----------------------------
lock0lock.c: Fix a bug in the query cache algorithm for the AUTOCOMMIT=0 case 	eb22615ec78db2d3cdd967732b33f351e9976a30
----------------------------
Added support sql_mode, which can be used to produce various outputs of SHOW CREATE TABLE 'name'. Depending on the mode, the output can be compatible with various databases, including earlier versions of MySQL . 	94cc7d751e93874f45f028cbee9f86bd03403404
----------------------------
srv0srv.c: Make SHOW INNODB STATUS aware which trx's are waiting because of innodb_thread_concurrency exceeded 	244b378b4781d3985012aeae0ab45dc7ce73102d
----------------------------
Don't count NULL values in cardinalty for MyISAM tables. Free row buffer cache after each query for MyISAM tables. Added table join option FORCE INDEX Fixed core dump bug when connecting with hostname that could not be resolved. 	3c08da957e58937ead92a7609e67d2234fe76676
----------------------------
Added support for DROP TEMPORARY TABLE Removed mysql_warnings() API function. Post merge fixes. 	6d6f051178c7c3201c77b5fa427252d50bd5fea3
----------------------------
Added support for max_allowed_packet in option files read by mysql_option() Extended max_allowed_packet for clients to 1G Fixed bug in sending compressed rows >= 16M Fix bug in skiping too long packets from clients. Added checking of wrong command number sent by client. 	6d5ad61a11f2ad9d5b184bc9e6c7a7477e33006c
----------------------------
Fixing some bugs in client - server protocol and adding a feature that connection does not close in the case when client sends a buffer larger then max_allowed_packet. 	66208fe9aec944c2e467f8b32c35d100c666505c
----------------------------
Cut hostnames at HOSTNAME_LENGTH to avoid theoretical hostname overruns Changed long packat handling to check for packets of length 0xffffff. This does however break packet handling for older clients. If you are using packets >= 16M then you need to upgrade client and server after this patch. 	3ca695ea0bc5a4cac6feba7aeee9e87fda79afc4
----------------------------
removed chroot() bugfix, now --chroot in 3.23 is broken again :(( 	78e0a8497b58117023e6ce6a67360350f3af7ea5
----------------------------
Changed thd variables max_join_size and select_limit to type ha_rows. This fixed some optimization problems when using -DBIG_TABLES Portabilty fixes for OpenUnix and HPUX Added C and C++ version numbers to mysqlbug 	b5aa9ae0c768c92321e99939f5533bcce8382366
----------------------------
- tagged ChangeSet 1.1477 as MySQL 4.0.6 - bumped up version number in configure.in to 4.0.7-gamma 	3f7afaf876c366dca79f4f21bd289a7ff53b8ea4
----------------------------
crash-me.sh: Wrap long lines, New test - date_format_inresult (returns which date format dbms uses in the result set) New tests: -date_format_ISO -date_format_ISO_with_date (checks if DBMS supports YYYY-MM-DD or DATE 'YYYY-MM-DD' formats) -date_format_EUR -date_format_EUR_with_date (the same but 'DD.MM.YYYY' format) -date_format_USA -date_format_USA_with_date ( the same but 'MM/DD/YYYY' format) -date_format_YYYYMMDD -date_format_YYYYMMDD_with_date 	a141701b08e2675c2c07e014bcc459339b049561
----------------------------
Merge: 9c509fcb 00e005c Merge with 3.23 to get patch for lower_case_table_names for MacOSX 	15b870d6c90c3ed34a6b29b78bc4b8c46d847136
----------------------------
Transactions in AUTOCOMMIT=0 mode didn't rotate binary log Don't enable any bulk insert or record caching code if inserting less than MIN_ROWS_TO_USE_BULK_INSERT rows (100) 	9c509fcb52e9b8d8342374370708912ab6e8b282
----------------------------
Transactions in AUTOCOMMIT=0 mode didn't rotate binary log. 	4886a2340bfd2492f9458aaa83c8db69a5abf126
----------------------------
- tagged ChangeSet 1.1276.3.1 as MySQL 3.23.54 - bumped up version number in configure.in to 3.23.55 	cb2220f1dcb4ade212f76a7244f8f48ff08d0a51
----------------------------
- make sure to replace HOSTNAME in mysql.server when packing up the binary distribution (this will still be broken for 3.23.54) - make sure that mysql.server in the binary distribution is executable, too 	059b0017dc395a430a2103f23278044e9130ecfc
----------------------------
- delete readline/configure from BK tree (will be autogenerated) - Added missing readline header files to distribution 	410bb63143cb730fb7fbf640f51494b0d7059c68
----------------------------
Fixed 'stack direction' check in autoconf Workaround for problem with autconf 2.53 on Solaris (Fixes problem with SOCKET_SIZE_TYPE) 	ad20c29c4e5351fc9a5c156aa7d07c9045182bbe
----------------------------
Fixed --datadir for embedded server 	f1b806cfd192d4fc1494948e956fd7c31fd81c1b
----------------------------
make multi updates statistics visible in SHOW STATUS as Com_update_multi 	409f7af3cf7721d7400fb17f9731f26e2e6a6aa0
----------------------------
s/SQLCOM_MULTI_UPDATE/SQLCOM_UPDATE_MULTI/ to be in line with SQLCOM_DELETE_MULTI 	fcec08584a4c6ef1339f1d8e9ec7ad986c3754f9
----------------------------
"chroot() need chdir(""/"") afterwards to work "	a798185ca1aa229046eed9c55b9cdc297e288812
----------------------------
Fix for shutdown on several instances servers started as standalone 	0bf945896cd547ed463fd6bac75183ebf6c6dc17
----------------------------
Merge: dfb60ca 4575594 merge with 3.23 to get bugfixes for <=> NULL and --bind-address 	a976101661c7afdeda2a314e990b4002296e45d6
----------------------------
"FreeBSD patch by Jeremy Zawodny. His explanation: The socket on which MySQL listens for new connections on a blocking socket most of the time but is set to non-blocking during the accept() of the new connection.  Due to a bug in the kernel, the new socket returned by accept() is a blocking socket but returns the O_NONBLOCK flag when queried via fcntl(F_GETFL).  That is, the file descriptor and the underlying socket don't agree on the blocking mode. Since MySQL determines via fcntl(F_GETFL) that the socket is non-blocking, it expects the first read() in my_real_read to not block, so it doesn't enable the timeout alarm.  However, the read does block, and thus there's no timeout alarm.  The thread kill (which relies on rescheduling the timeout alarm) also does not work as a consequence. The bug shows itself if you build MySQL with LinuxThreads support (needed for SMP on FreeBSD).  Issuing a KILL command in MySQL won't be ""noticed"" by the ""killed"" thread until it runs another query--that makes KILL pretty useless.  And the wait_timeout doesn't work either. "	aa1c10e7eec034d5d27d9e30417bf7f4de79cbba
----------------------------
"configure.in: - actually follow the hints in the comment above and ""Remember that regexps needs to quote [ and ] since this is run through m4""... "	fd79ed87b50856fa7db8f5fafcc326b063b52239
----------------------------
"configure.in: - fix MYSQL_NO_DASH_VERSION if version number ends on one digit only (""comment"" test failed when MySQL version was changed from 4.0.5 to 4.0.5a) "	373904f7991d806d94f1ac2ec592d77bbcf22906
----------------------------
A fix for --bind-address=hostname 	c1fa8f6485450b8f7b1e7cb6083ce7c7f464fca7
----------------------------
"- Tagged ChangeSet 1.1400.1.3 as ""mysql-4.0.5"" - bumped up version number in configure.in - fixed a typo in test-create.sh "	d3a572b830cc05c42743964d9ec58f480e041a37
----------------------------
Portability fix when using -DBIG_TABLES 	7a7033283674b13759d160f9b1cab0d8e5a2ea10
----------------------------
include/myisampack.h - fixed Typo: BIG_TABLE -> BIG_TABLES 	40027b8cffe6025e637ef3b90d460c1e52f88a0c
----------------------------
Extended WEEK() to be able to handle ISO weeks. unlink socket file if mysqld dies on startup Some optimization of AND expressions 	97bb57f76526719e1bf53c1dcb55fa9ba87893df
----------------------------
fixed select_lex & max_join_size parameters with BIG_TABLES 	62e4aca91b9de0e4b7895482cf5c897ec4bccd6a
----------------------------
fix for HEAP rb-tree indexes and BIG_TABLES problem (serg: thanks for discovery) 	206a59c8c30af06d2405fa41ad9c4ad6b9d3587c
----------------------------
ha_innodb.cc: Try to skip over corrupt records in SELECT if innodb_force_recovery > 0; print more page hex dumps in CHECK TABLE 	648b50660b7015a71844a676f143559b121a3ef1
----------------------------
Many files: Try to skip over corrupt records in SELECT if innodb_force_recovery > 0; print more page hex dumps in CHECK TABLE 	60499d54dda362f3921953920147090db38a7b90
----------------------------
Small fix in configure for HPUX11 	38c66734909b8afb261c2ef942f90bd90073463b
----------------------------
"Do-compile: - ""--config-env"" can now be given more than once - don't be smart about version suffixes "	58c008c56e4441d9ef7e00a0ac915c10f246b9f7
----------------------------
Put temporary files in binlog cache when using BEGIN/COMMIT Let MySQL 4.0 read 4.1 .frm files without 4.1 specific extensions New variables @@rand_seed1 and @@rand_seed2 (used by replication) DROP TEMPORARY TABLE 	65badfff1a6dec4de5bf2d29cf143c72b5dd8830
----------------------------
- configure.in: replaced AM_PROG_LIBTOOL with AC_PROG_LIBTOOL, since the old macro name is deprecated (according to the libtool 1.4.2 docs). 	e34e82d156e7b541fe3926f4c9e63a75bff93404
----------------------------
- configure.in: replaced AM_PROG_LIBTOOL with AC_PROG_LIBTOOL, since the old macro name is deprecated (according to the libtool 1.4.2 docs). 	4fecef14643f25de7f76b5be6ac8337645e0375f
----------------------------
Error code for ssl connection Fix bug when server hang(with SSL, with modified libmysql) Add options master-ssl-capath and master-ssl-cipher Add some error checking(SSL) 	7bf903ea1044ad3776a6e688d437a21efaa84e18
----------------------------
configure.in: In Linux do not printb thread id's but process no's in SHOW INNODB STATUS 	392bb5ad504add0257df3510140bbf5b0f929eee
----------------------------
Added --skip-safemalloc to mysqltest Added bug fix from 3.23 for AIX 4.3.3 and gcc 3.x Small change in EXCHANGE output Propagate open-files-limit from mysqld_safe -> mysqld Fixed speed bug in GROUP BY Added quotes around database name in CREATE DATABASE db_name (for binary log) 	5343d4c96993e31a3377be07e9c97aee27784461
----------------------------
Some small accelerations ... I intend to do some more accelerations in mysql_execute_command and in SQLCOM_SELECT part for which I need to fix EXPLAIN with derived tables plus few additional items. If this proves to be much I wil just make it a new SCRUM task 	6561faa10e8dbc24eedb1d8574053f5f23790ca8
----------------------------
"- Tagged ChangeSet 1.1224 as ""mysql-3.23.53"" - bumped up version number to 3.23.54 in configure.in - replaced Docs/LICENSE with Docs/MySQLEULA.txt and modified scripts/make_binary_distribution.sh and Build-tools/mysql-copyright* accordingly. "	d8f843a779f5959a405d6378143804f4f5f4743c
----------------------------
"--tmpdir=dir1:dir2... uses (is_windows ? "";"" : "":"") as a delimiter "	68cd8c47fc861638abb9e599a29f9acbeec44b55
----------------------------
--tmpdir=dir1:dir2:... support in myisamchk 	e65536b14725d52443e30ee2229ee875a05e6e50
----------------------------
Remove wrong clear of mysql_port when using --skip-show-databases 	367e2d4396c88a226bd19a987a61c97c019f347a
----------------------------
support for --tmpdir=dir1:dir2:... 	3217f2cc06fee100e890fbcff2d52e8e20aedbf8
----------------------------
"configure.in	Updated for 5.0 post-commit	Updated for 5.0 post-commit	Removed truncate for commits to internal lists (for complete code reviews) "	18d6d83c0afccd4e75895a552e88f063b951d360
----------------------------
fixed typo: s/ft_max_word_len_sort/ft_max_word_len_for_sort/ 	3858bf1f8120ba1d998db4562e0c7bef0a504dbe
----------------------------
- applied fix from 4.0 configure.in required to build shared libraries with static glibc installed 	cf2fec3c69b83882e057718f996690dcbb881d44
----------------------------
Fixes and code cleanups after merge with 4.0.3 Warning handling and initial prepared statement handling (last not complete yet) Changed a lot of functions that returned 0/1 to my_bool type. GRANT handling now uses read/write locks instead of mutex Change basic net functions to use THD instead of NET (needed for 4.1 protocol) Use my_sprintf instead of sprintf() + strlen() Added alloc_query() to be able to chare query initialization code with prepared statements. Cleanup handling of SHOW COUNT(*) WARNINGS and SELECT LAST_INSERT_ID() Note that the following test fails (will be fixed ASAP): sub_select, union, rpl_rotate_logs and rpl_mystery22 	d69250a969449da43891ef5b2859df77917183a8
----------------------------
- Tagged ChangeSet 1.1321 as mysql-4.0.4 - added some missing changelog entries to the 4.0.5 changelog - applied small fix to configure.in from monty (already applied manually to configure.in of the 4.0.4 release source files - not relevant for normal builds anyway) 	3aa161d240dccbf71fa3ab233bfe88025b8a0859
----------------------------
- Fix checking for $orbit_config_path in acinclude.m4 (gave an error message on STDOUT on AIX and assigned the wrong value) 	3b6f843bb5c09bba6f18f320de01ca4a26c7f8ad
----------------------------
Don't reset Delayed_insert_threads on FLUSH STATUS 	649413f773955b982b8eb963422702a0a8e481db
----------------------------
Compare hostnames case insensitive Accept zero dates without warnings 	12ac759d954fc1129c916929b4d914f52a49cdcf
----------------------------
configure.in: static nss linkingg issue 	140397d42470ac4458b22f5cdd4b65e3c00c9af9
----------------------------
- added missing line from the 4.0 configure.in patch 	bff474e2ac67992f003c47d13c5cd4bea32e2dc5
----------------------------
- Bugfix for static glibc linking in configure.in (taken from 4.0) 	e5ee3122a39b014637e68259944ae985d306515b
----------------------------
"manual.texi	fix capitalization, clarify context for manual.texi	LAST_INSERT_ID() usage. "	12bf4a08a09a27b89aab225f738e23c968475860
----------------------------
- merge some of the 4.0 configure.in modifications (mainly because of the static_nss stuff required for linking against the patched glibc) 	aca781a1e2b0b235547f839f1fdbe9d51e190cf2
----------------------------
Increased max possible max_allowed_packet to 1G Small optimization to not do external locking of temporary MyISAM tables. 	ce4b584a8526fe8470cfc2187cd7b30e2b6a8a54
----------------------------
fixed so that --ssl and --skip-ssl works with the MySQL clients. Fixed core dump bug when sending wrong string to AES_DECRYPT() 	7f55d9263749ec0b0c8dacea1fd1616c0262bd5e
----------------------------
row0mysql.c: Allow CREATE TABLE and DROP TABLE even if innodb_force_recovery is used, the user can drop a problematic table 	69f571db0c4eb0c3018379f9f8faefe7beafbfb0
----------------------------
ha_innobase.cc, ha_innobase.h: innodb_flush_log_at_trx_commit can have values 0, 1, 2 starting from 3.23.52 	44a43fce68b4ad0766b606a4293e7ac05e0c3ccc
----------------------------
srv0srv.c: The option (= default) innodb_fast_shutdown did not always make the shutdown quickly, fix that 	d7bf8c2e6ee6fb3dfd2abb0dbb4fa5460697ad40
----------------------------
Fixed searching after ssl directories. Fixed that GRANT ... REQUIRE options are not forgot when doing new GRANT Changed fn_ext to point at first '.' after directory. FLUSH LOGS removed numerical extension for all future update logs. Fixed the mysqld --help reports right values for --datadir and --bind-address --log-binary=a.b.c now properly strips of .b.c Fix that one can DROP UDF functions that was not loaded at startup Made AND optional in REQUIRE Added REQUIRE NONE 	0281a6b16026299bebebb58af1b88c2d741b57f6
----------------------------
reverted min limit for ft_min_word_len back to 1 	7c4e5bd9a8dfa07a35b898658b6ad22996127486
----------------------------
Merge: 921f7c9 dd53821 Merge with 4.0.3 Some simple optimzations, more comments and indentation changes. Add ` around database in 'use database' in binary log. Moved max_error_count and max_warning_count to variables struct. Removed SHOW_WARNS_COUNT and SHOW_ERRORS_COUNT calls. Changed string functions to use character set of first string argument as default return characterset (Each string function can change the above assumption if needed) 	7134ffec210edde21860a2b2c2654be481de49b4
----------------------------
- updated version number in configure.in to 4.0.4-beta 	d427ecb46098880df4bf8b6a3fec58395aa7996c
----------------------------
"manual.texi	max_bin_log_size -> max_binlog_size "	71f6a378eed025570eaace15151e55ed2fc9cba3
----------------------------
os0file.c: Put 'last millisecond' test to make sure page checksum errors do not result from memory corruption in InnoDB os0thread.c, configure.in: Make sure stack size in InnoDB threads in AIX is at least 32 kB 	42d46eb9eef3170622794a36646e9d1c57ecf6d2
----------------------------
Changed relay_log_space to ulonglong Removed compiler warnings. 	7dac7062fae0e1cc7bc269e8a8575c5d6f5c5d74
----------------------------
Fixed bug in mysqld when using configure --localstatedir 	3ee79d3a5060568977b0179623691d109e10b703
----------------------------
Fixed timing problem with rpl000001 replication test. Fixed configure problems with HPUX and openbsd SHOW SLAVE STATUS returns empty set if slave is not initialized SHOW MASTER STATUS returns empty set if binary logging is not enabled. Fixed shutdown problem on Solaris. 	a5edb200421018ee967045903b2802c2d5c1bd75
----------------------------
- Tagged 3.23.52 release - Added 3.23.53 News section to the manual - Updated version number in configure.in to 3.23.53 	f321098ad24dd485526c8250fff8a5f76d7df509
----------------------------
Changed SQL variable delay_key_write to an enum able delay_key_write as default (as it was in 4.0.2) 	ae1ec6e16a007d2ce542dee8f494b9c30d3a30c6
----------------------------
A small fix for last_insert_id with multi-row inserts 	0005f28b4ec6fdc73c83ea430f53f74103b26239
----------------------------
"server-key.pem	regenerated server-cert.pem	regenerated client-key.pem	regenerated client-cert.pem	regenerated cacert.pem	regenerated sslopt-case.h	changed optarg to argument, decomment --ssl-key "	c32aef4013bcd851d19325b797970b9b7643af06
----------------------------
"sslopt-case.h	changed optarg to argument, decomment ssl-key option "	d52b1cf5f8b0629310f98648188f50bab982ab10
----------------------------
Fix for Intel compiler (ecc) Minor cleanups to other patches. Make --temp-pool default 	a31406e34e238386940c90196eb570a6a4d97616
----------------------------
Lots of code fixes to the replication code (especially the binary logging and index log file handling) Fixed bugs in my last changeset that made MySQL hard to compile. Added mutex around some data that could cause table cache corruptions when using OPTIMIZE TABLE / REPAIR TABLE or automatic repair of MyISAM tables. Added mutex around some data in the slave start/stop code that could cause THD linked list corruptions Extended my_chsize() to allow one to specify a filler character. Extend vio_blocking to return the old state (This made some usage of this function much simpler) Added testing for some functions that they caller have got the required mutexes before calling the function. Use setrlimit() to ensure that we can write core file if one specifies --core-file. Added --slave-compressed-protocol Made 2 the minimum length for ft_min_word_len Added variables foreign_key_checks & unique_checks. Less logging from replication code (if not started with --log-warnings) Changed that SHOW INNODB STATUS requre the SUPER privilege More DBUG statements and a lot of new code comments 	2c4fa340cccbf11dc7b7f944cf7ca30af48edf4f
----------------------------
Fix bug of running the queries with no selected database while running with --lower_case_table_names 	21cb8e76df4020bc5423ac2e3d856942e391962a
----------------------------
fixed bug, that caused suboptimal memory usage during REPAIR when ft_max_word_len was decreased by user 	9621e36238fb0896b4bed391a5a027d9d8404083
----------------------------
my_pthread.h, configure.in: In HP-UX-10.20, but not in HP-UX-11.0, the return value of pthread_mutex_trylock is inverted 	01bed722c7a6e495afb6c0da74db7a18cae84bce
----------------------------
"Changed initialization of RND() to be less predictable. Use MYSQL_CONFIG_NAME instead of ""my"" as the configuration file name. "	274f80626ef9d612c5ad5c570bc163b9a2f65a34
----------------------------
Clarified lower_case_table_names behaviour for 4.0.2 	f582a4637c0137e16cd370e73c951bb1749a3179
----------------------------
"manual.texi	clarify measurement of long_query_time. "	f3dbdca98708d9298a54a214b5b353bc000668d0
----------------------------
Merge of ha_innobase.cc from 4.0; This fixes that MySQL doesn't allocate too big buffers when sorting innobase rows Changed name of variables NO_FOREIGN_KEY_CHECKS -> FOREIGN_KEY_CHECKS RELAXED_UNIQUE_CHECKS -> UNIQUE_CHECKS to avoid confusion with 'not...' variables. Write name of adminstrator command to slow log. Added mysqldumpslow to RPM 	d686ef729fdf8eccfdcf9dd549c461aaa9ed4492
----------------------------
Removed wrong implementation of CUBE/ROLLUP Fixed bugfix of INSERT ... SET db_name.table_name.column_name Changed locking to external-locking Fix client hangup for some invalid SQL queries. 	c702a1f8fda0814db36801b91c601329225f8030
----------------------------
New SET syntax & system variables. Made a some new buffers thread specific and changeable. Resize of key_buffer. AUTO_COMMIT -> AUTOCOMMIT Fixed mutex bug in DROP DATABASE Fixed bug when using auto_increment as second part of a key where first part could include NULL. Split handler->extra() to extra() and extra_opt() to be able to support thread specific buffers. Don't write message to error log when slave reconnects becasue of timeout. Fixed possible update problem when using DELETE/UPDATE on small tables (In some cases we used index even if table scanning would be better) A lot of minior code cleanups 	dddc20d9d1eea5fd526a2082a43801fed304afe4
----------------------------
os0thread.c, configure.in: Make the typecast trick pthread_t -> os_thread_id_t safer, but a full fix needs usage of appropriate Posix functions 	07711a6ead1fd6f6f18986c56894d3c78aeb7032
----------------------------
manual.texi: Added note about new version numbers. configure.in: Updated version number. Sorry, bitkeeper keeps messing up. 	8c7805825d5c71b082c40c19e96e996e704a65bb
----------------------------
"mysqld.cc	? mysqld.cc	h mysqld.cc	small fix for --bind-address "	6377f501dfa61ae6dda03453d2f285f024f8a0ac
----------------------------
Clarified LAST_INSERT_ID() behaviour for multi-row inserts. Shuffled lines for easier reading. Added missing SQL line. 	c883dacd90197dcedd4cf24e09ad8c593a03a97e
----------------------------
manual.texi: Clarify the meaning of innodb_data_home_dir and innodb_data_file_path in the manual 	f6e0c1a49236099df26f7e763f9eb68595df171e
----------------------------
ha_innobase.cc: Clarify the setting of innodb_data_file_path in my.cnf: it is in the [mysqld] section 	17c29de61266c3c846dc8a738e2d74ca89b9e3f0
----------------------------
Update for running gcc 3.x (mainly on HPUX) Portability fixes for HPUX Rename of CHECK_LOCK to IS_FREE_LOCK Apply lower_case_table_names also to databases Cleanup of describe code Don't allow \ in database names 	f87efa928b807a03c83b75a87f0d773e4bc8eb68
----------------------------
"Removed file include/getopt.h and added missing files to include/Makefile.am to resolve broken dependencies in ""make distcheck"" Added -DHAVE_BROKEN_REALPATH to the Mac OS X (darwin) compile options in configure.in "	eb4ac4a154fc39795891b69739a4a70df5596566
----------------------------
sql_yacc.yy, mysql_priv.h, lex.h: Add syntax SET NO_FOREIGN_KEY_CHECKS=1 and SET RELAXED_UNIQUE_CHECKS=1 	3dd3463f921940e63d3dc0338ea81336636c2e1f
----------------------------
mysqld.cc: Add option innodb_flush_log_at_trx_commit=2 which means we always write the log to file at commit, but only do fsync about once per second 	7a2b5b750aa4d04b78555070aeeb3b295006d038
----------------------------
Added -DHAVE_BROKEN_REALPATH to the Mac OS X (darwin) compile options in configure.in 	6504a3933ed2d1ee8ebfe995bca6eb1c22d693e5
----------------------------
Added --single-transaction for mysqldump, updated --lock-tables info. Added SHA1() function, cleaned up MD5() info. Added AES_ENCRYPT()/AES_DECRYPT() functions, cleaned up DES info. Updated 4.0.2 changelog for above additions. Clarified LAST_INSERT_ID(expr) info about sequences. Fixed URL for Perl DBI. 	8bcd1be231f754aec9a1b2e445bc026088741764
----------------------------
Fixed problem with innodb_log_group_home_dir and SHOW VARIABLES 	4d7030606ee8bfbaeaec6968dc1d1a231ea42ece
----------------------------
Bump up version number to 3.23.52 in configure.in since version 3.23.51 has finally been released 	b96e315bcfb668460199c2a7032758af17409b41
----------------------------
configure.in: changed version number 	b62fafaa1507f057988c1d0fa7a2bda81ca71cec
----------------------------
Fixed bug in wait_for_relay_log_space() Added checking of sem_init() in configure. 	cde8c0edb721c196155429f62d51ae3f7137d383
----------------------------
Fixed a problem with --skip-networking. This fix should be merged into 4.0 and 4.1 	a2ec51cec16205154aa2c7f5ecf6ec3c98a978e8
----------------------------
Added more complete master and slave configuration section 	9e9265fdc5e8e3fe7d89e5a65c6a7d141852219c
----------------------------
"manual.texi	DATE_FORMAT() %U, %u, %V, %u specifiers produce two digits. "	9c20630918f295fafa2ce835fcc065876151c599
----------------------------
added --loose to --des-key-file in *.opt for mysql-test not to fail w/o ssl 	859fb3e7c7d53ab0476cf591e5e18dd107cab9ba
----------------------------
Aesthetic cleanups to acinclude.m4 and configure.in. 	5990c1910ad1ef5b45fa61a8271dcf2a23c1a49d
----------------------------
- Added Docs/Manual_style_guidelines.txt on Paul's request - this document is supposed to become the central repository for documentation guidelines - re-fixed wording in configure.in according to Manual style guidelines (thanks to Paul for the hint) 	0629c24b09207c388eb790cff1f83a958e6f7289
----------------------------
"Fixed a typo and the wording of the message that is being displayed after ""configure"" has run "	1c2d9adbea308e2310bb9a27e853d0e1c421b5a1
----------------------------
"Change XML/DocBook output to have version #.## instead of #.##-alpha. Add URL reference to ""Enforcing the GPL"" article. Removed duplicate SQL_BUFFER_RESULT/SQL_SMALL_RESULT texts (reported by Fournier Jocelyn). "	9ce9664faa3d9d57b9d40078a6c2ab26190f1605
----------------------------
Removed some old Makefiles to avoid name conflict on Mac OS X Changed in client library character-set-dir -> character-sets-dir 	e015f631fd88ae724478514f5b323348dd23bd0c
----------------------------
Removed wrong configure line from configure.in 	fadcf27995f945d6960809c27cb98a012ca5bb95
----------------------------
Fix for HAVE_QUERY_CACHE Remove not used flag CLIENT_CHANGE_USER 	2e2b146ba5a825e84bc4efba020d1b25e5cb08cb
----------------------------
relay_log_space_limit DBUG_ macro cleanup buffer boundary cleanup This changeset, although not fully tested, works for me better than anything I've had so far, including what is in the repository. I will push it unless something crashes while I am writing this :-) 	14603a36202f208a83ca89af1cfc98892eb18539
----------------------------
Move test of gcc 3.0 from BUILD to configure 	beedaf26ecf6fa78b1b74b805e8ad24cbd315733
----------------------------
Fixes for --enable-named-pipe 	93948645e75368ef501cfd85921d6048ffa56e13
----------------------------
Move back set_user after chroot 	2ac18e9be997f3d9de2351fbb1630456022f25a1
----------------------------
ha_innodb.cc: Change the default innodb_data_file_path to create a 16M file and define it as auto-extending 	c017f76e730a8c4ed7f109c84a272d0ae0117ace
----------------------------
Configure.in/Makefile.in charset related things are now earier to maintain Fixes in charset related C++ code 	1ebab2be72b48346002ad58b8066b7a448b675db
----------------------------
Do chroot() after changing user. 	1617f24aba3c5fa51555e7242143caa793135bd2
----------------------------
Decrease net_buffer_length to not get problems when running against mysqld with same max_allowed_packet 	63e106f00bb284dd0c4ccf1ccb1fef0d587ddc5c
----------------------------
Fixed bug in DATE_FORMAT when used with GROUP BY 	668d09cc5c4e0c9e7c180f2dfb521244f325cf3f
----------------------------
Charsets related things are prepared by configure in new way. This is to simplify maintaining charsets, especially changing CHARSET_INFO structure. 	a518b9f32606baf363c754e9e5579f8546768203
----------------------------
bugfix for max_user_connections 	b8592ab67beae45fad40fd8a563390b79d77bc64
----------------------------
Added --sql-mode=NO_UNSIGNED_SUBTRACTION 	6a1b08cbd4022bf005be8cf44bedb1f8fb7a6f4e
----------------------------
post-merge fixes, including slave-skip-errors backport fixed too quick timeout in mysql-test-run which caused a race with the new server getting started before the old one completely finished shutdown. This should fix the pid warning we've been getting as well as inconsistent results when running tests with the manager 	8e43ad12c36ba018649e6df757362754a6cb9238
----------------------------
mysqld.cc: Changed default of file_io_threads to 4 and lock_wait_timeout to 50 seconds Added a missing break: if not specified, innodb_fast_shutdown got the same value as ..flush_log_at_trx commit 	3fef3c7e5bdc5012fb0f611abf3932f3879bea56
----------------------------
ha_innobase.cc: Add better instructions on how to specify innodb_data_file_path etc. 	818bdb62f5d701ae3d890a6ca3e4dde224b4e7b5
----------------------------
slave-skip-errors added extra/mysql_install.c - will work on it in 4.0, but it does not hurt to have it sit in 3.23 tree for now since it will eventually be backported to 3.23 anyway 	f7acf09d9c70afeaf36172e993b5c468f8190182
----------------------------
--des-key-file functinality added 	178822672f85270c167ccfd78c702142ead533f2
----------------------------
Small changes to mysql_config.sh 	0f71e337b32c3388070f96160234df86eae964f8
----------------------------
"ft_boolean_search.c	bugfix ""+(aaa bbb) +ccc"" ft_dump.c	-l option - report word length distribution (for ft_max_word_len_for_sort) "	9c6effa6a36b5925e872c04852b0869ea981a2db
----------------------------
get correct paths in mysql_config even if the user moves basedir 	2f91f2360aba9ad0911af22de3a807837973d31c
----------------------------
ft_boolean_syntax variable 	59f3a958345bf5df0a60159711a3ec32c9f8084e
----------------------------
use env vars for socket/port in connect in mysqltest --local-master option in mysql-test-run do not log CREATE TABLE when doing table dump fix replication to slave off 3.23 master 	586e812452402de452b47751ec8b3121cb002e8f
----------------------------
ignore ft_min_word_len and stopword check for truncated words in the query 	16e16e7d07af00003b1c0ded663247f22e645266
----------------------------
manager clean-up ( added pid-file and kill in mysql-test-run when things go wrong) fixes for IO_CACHE need to pull Monty's fixes - this is not final, will not be pushed 	cc95bc5765b3a365ddcbbceca1c8c5e18a5e4a2d
----------------------------
'mysqld --help|grep -A1 safe-user-create' output clarification 	4939bb6dd14233fc081875fd5f4cc963d957ffb5
----------------------------
Adding code for NT service in the install and remove routines for avoid to leave the Service Control Manager in bad state. Print messages for to reduce the current user errors when are trying to install or start the service. Adding the option to install the service for manual start: --install-manual. 	03bf236f4a70bf50158a186ffafd838a88823f1d
----------------------------
Rewrite of Windows binary/source installation/configuration. 	e1f79e3b6629c6582a9e0bbfea9cc05ae994b3c2
----------------------------
Add --without-isam configure switch. Portability fix for mysqlmanager. 	c0cd0f484a696e169c63c14286dbb760fba4feec
----------------------------
One should not only have to include my_net.h to work with sockets. This wrapper noew will include all the necessary, system specific files, which makes all normal source files much easier to write and maintain. Portability fixes. 	d5fe1db868a8786bad901a632631c2d94eadfbe6
----------------------------
Added usage of --master-retry-count to make mysql-test-run safer. 	f5a53594c81c403e3cd13a13b8d2f82165f8f873
----------------------------
Cleaned up SSL documentation Fixes for embedded server Made key_cache more configurable Fixed that one can change key blocksize in MyISAM A lot of optimizations to make MyISAM slightly faster 	880026ccf667bf6e6adbd6cfa0abcf4268d68e4c
----------------------------
"Makefile.am	Add @pstack_libs@ Makefile.am	SUBDIRS = aout configure.in	Output pstack/aout/Makefile Makefile.am	BitKeeper file /home/tim/my/4/pstack/aout/Makefile.am "	ea0523bd719e59205cb0259a0977ae6c07a7ca00
----------------------------
Fix error messages Configure fixes 	0979515609b62c287d2fe8cadb1cbb6cb53630e4
----------------------------
Actually get the CHARSETS_AVAILABLE output before the help messages in configure. 	361d3a65336cdde0e39b1e05f161692729c8abe6
----------------------------
Update of manual with 4.0 changes Create innodb table space if configuring with InnoDB and not using --skip-innodb Fixes for TRUNCATE TABLE and DROP DATABASE. 	279de0c67c3c07d2dafb94763966842d8160c242
----------------------------
Fixed compilation problems when HAVE_OPENSSL is not defined 	102cabfe4acd9c78fe321829bd168342b3fbd68a
----------------------------
configure.in Add #undef inline to all C++ tests. This is needed to work with some C++ compilers.... 	a06dfbd2254f45eefccfa18e436b32938b1d5717
----------------------------
"ha_innobase.cc	Add better error message if innodb_data_file_path is not set ha_innobase.h	Remove HA_NOT_READ_AFTER_KEY from table han ha_innobase.h	dler flags: it prevented the use of an index in MAX() "	b78f8380d570e677ec602217ed575e7ecac9bb36
----------------------------
"ha_innobase.cc	Fix a bug in connection with SET INSERT_ID:caused repliaction to fail "	43c2f83ed0094b88d95b434b82c8cc9b22211461
----------------------------
Fix to be able to configure without --with-tools 	3edbb869f696f2fe955a5464c9a3e64fe68343a7
----------------------------
test case for InnoDB replace/auto_increment bug when insert_id is forced by the user 	2adf2fadc6c2451589e2dd1cf0a9d63e0bd2a700
----------------------------
"Allow myisam-recover="""" and --sql-mode="""" "	65a711f40f8b64246cd4a18745552bc22e621f23
----------------------------
Portability fixes Added record_rnd_buffer Added --safe-user-create Fix for ALTER TABLE RENAME on windows 	e7575da7bba22e74983374a5a5cca71b182bd23c
----------------------------
changed variable display from string to int (bits) for myisam-recover and sql-mode options. 	0b68a21b5d400654d4e9cfbd4e1d8a97d1fabb92
----------------------------
acinclude.m4: Paste the libtool.m4 from libtool version 1.3.4 into aclinclude.m4; this should make our configure work even when the user has libtool version 1.4 installed.  This should be removed, and everyone should upgrade to libtool 1.4; until then, this is a quick hack to make things work. 	934f3acca48e450d2f6cf609b488b8efd02d98c4
----------------------------
Added new optino --sql-mode to mysqld. 	44722151fdacd66e847a5084b5f2d06d3c3e9848
----------------------------
Added CPU automatic detection. It examines /proc/cpuinfo (if exists) and finds out flags for -mcpu and -march. TODO is --with-cpu configure option to force some other processor type. Problem is not big as any Intel 686+ CPU will use -mcpu=pentiumpro anyway. Exceptions are Athlons and 586 processors. 	24bcdaaff382a154a647dc5c3cf1fc4ee1bbbcd7
----------------------------
Code cleanup in safe_mysqld. Fix --core-file-size so that the argument is parsed correctly. 	103d87ce2a8a117c50543a2663e1dfe06714994b
----------------------------
"configure.in	Fix to compile :( "	dc00c80a961c78154abf1efaa9703ccd93ec0a60
----------------------------
Upgrade TL_WRITE_CONCURRENT_INSERT to TL_WRITE_LOW_PRIORITY if --low-priority-updates is used and the file has holes. 	5a8e734b9abb58c5361a84e894d4266a14f22a04
----------------------------
"configure.in	Fix ""$target_os"" = ""freebsd"" test; not a critical fix. "	6539db2b8bf0bb15e2d0be570fb2596259461208
----------------------------
added slave_net_timeout 	14c23716a6b5c2168ec5096baff5029eb14d0abb
----------------------------
support for eval_result and let $var = `query` syntax in mysql-test fixes for rpl_log test to make it config-independent 	ea2e9118926c4980e56d2a43b3de059c835aaa87
----------------------------
"page0cur.ic	Fix a bug in insert buffer and multiversioning manual.texi	Changed innodb_unix_file_flush_method to innodb_flush_method in the manual "	624c57e26e575a5e2c579291d3cf6a7e1c22c173
----------------------------
Removed --use-symbolic-links 	e1d12383fa00c86ae4d3aa901f507ab2d8083cb3
----------------------------
Changed innodb_unix_file_flush_method -> innodb_flush_method Cleaned up error messages. 	b79da88808a4e96cacb6e959f3d1410769035db7
----------------------------
do not show user/pass for slave unless running with show-slave-auth-info cleanup of register_slave_on_master() 	ad0b92f941745cfcca538220310e7e4e5ed546ee
----------------------------
"ut0ut.c 	If localtime_r not available in Unix, use localtime configure.in	If localtime_r not available in Unix, use localtime "	96176f16a3e0e2ad3dc79f72e9cb22e0f81e0d01
----------------------------
Fixed portability bug in my_config.sh Added print of --use-symbolic-links in mysqld 	38c035c09852dd4895177aafe6d73ac8c16919d6
----------------------------
"sync0sync.ic	InnoDB now uses XCHG to implement mutex if GCC and x86 configure.in	InnoDB now uses XCHG to implement mutex if GCC and x86 "	b3675fc5f7c6036791791e3b01a0bb9e1b391fe8
----------------------------
"configure.in	openssl support "	78488e88d42c4d2fbf55e40dcbe4ddddbfe98775
----------------------------
"configure.in	openssl support "	f40b454888bc81f7cf83c16261b3382335c1a965
----------------------------
".del-violite.c~984c09cffe14a11b	Delete: libmysql/violite.c acconfig.h	openssl support acinclude.m4	openssl support "	a5d4dddff539357b25ea5061d2e9cb2cc386afde
----------------------------
".del-vio-global.h~c261412c01b2f4	Delete: vio/vio-global.h .del-viotypes.h~f5a38e7326bd50f3	Delete: vio/viotypes.h .del-violite.h~58d2942a52ea7a83	Delete: vio/violite.h .del-VioSSLFactoriesFd.h~1d63ae149a63f85	Delete: vio/VioSSLFactoriesFd.h .del-VioPipe.cc~12cf83b9a2f48f6c	Delete: vio/VioPipe.cc .del-VioSSLAcceptorFd.cc~4c828f3688ed74ec	Delete: vio/VioSSLAcceptorFd.cc .del-VioSSL.cc~6e85340b11fa42a8	Delete: vio/VioSSL.cc .del-VioSSLFactoriesFd.cc~89f6bf5073937947	Delete: vio/VioSSLFactoriesFd.cc .del-vioelitexx.cc~3eaba70da792a7fc	Delete: vio/vioelitexx.cc .del-version.cc~7237acf12bed4a97	Delete: vio/version.cc .del-VioSocket.cc~71c615783f29b5e1	Delete: vio/VioSocket.cc .del-VioSSL.h~70d367b7ec8cac3e	Delete: vio/VioSSL.h .del-VioPipe.h~21cebbe61a1da546	Delete: vio/VioPipe.h .del-VioFd.h~8294293a88c7b4b8	Delete: vio/VioFd.h .del-VioFd.cc~6e444647affef63b	Delete: vio/VioFd.cc .del-VioConnectorFd.h~58bc11cdc885b951	Delete: vio/VioConnectorFd.h .del-VioAcceptorFd.cc~a5a08947a31f88de	Delete: vio/VioAcceptorFd.cc .del-VioConnectorFd.cc~ddbd7821c43c83a2	Delete: vio/VioConnectorFd.cc .del-VioAcceptorFd.h~7f9c4358477ba9a3	Delete: vio/VioAcceptorFd.h .del-Vio.cc~60737ce02ab2bc25	Delete: vio/Vio.cc .del-Vio.h~f4416b2949647602	Delete: vio/Vio.h .del-VioSocket.h~a26d535bd5a1a6	Delete: vio/VioSocket.h "	32477ab4158c51ac7a8bdc9b071499cc7dc7ed1b
----------------------------
Force close of sockets on HPUX 10.20 Support option lines longer than 256 chars. Close the slow log at shutdown. Always allow debug options to mysqld. Change some DBUG_PRINT tags. 	25a129c96f11b20bb359ea460d3c0d5dc99e214e
----------------------------
Fixed bug when using MERGE on files > 4G Fixed bug in SELECT db1.table.* FROM db1.table,db2.table Fixed bug in INSERT DELAYED when doing shutdown and a table was locked Changed that tmp_table_size =4G-1 means unlimited. 	2ba0846a60ac43e1ef477bdfd95c37901b6c7fe7
----------------------------
"os0file.c	Use O_SYNC if possible, second choice fdatasync, and last choice fsync configure.in	Check if fdatasync exists manual.texi	Updated defragmenting doc manual.texi	Corrected fillfactor contract threashold for a page to 1/2 "	0f24c9fcee654608462f38a423fae4407a539f70
----------------------------
Moved things to configure.in 	3876d83ec1a13fc310dc1839176f9d286a384ded
----------------------------
"os0thread.c	Change pthread_yield to sched_yield univ.i  	Change pthread_yield to sched_yield configure.in	Change pthread_yield to sched_yield "	e593714e6b535d51b4d0ad9c572ea1ca30c3a88c
----------------------------
mysql-test/mysql-test-run.sh added --bench option sql-bench/Makefile.am added bench-count-distinct.sh test sql-bench/bench-init.pl.sh added --socket option 	b8c416ac65355104962587122e247200904dc107
----------------------------
fixed bugs in the new stuff in rpl000001 test start slave thread if master.info is present and server_id is set updates for rpl000015 and rpl000016 to remove master.info to make sure master info struct does not get auto-initialized 	2392c3abd754f0cf8a9b73aca73e84dfa8c1f1e4
----------------------------
"univ.i  	Prevent inlining of functions on HP-UX because GCC is broken there configure.in	Prevent inlining of functions on HP-UX because GCC is broken there trx0trx.h	Fix trx->error_info in MySQL debug version: Innobase and ha_innobase.cc saw a different size for pthread_mutex_t trx0trx.c	Fix trx->error_info in MySQL debug version: Innobase and ha_innobase.cc saw a different size for pthread_mutex_t ha_innobase.cc	Fix trx->error_info in MySQL debug version: Innobase and ha_innobase.cc saw a different size for pthread_mutex_t "	ae05b07fb718a1742e7f62969a7c49df6c000957
----------------------------
untested changes to close socket on slave stop for OS's that do not interrupt I/O after thr_alarm_kill() test case for order by desc coredump 	a2b6410965d149cb94f8e786acdf0ea15b67d7e0
----------------------------
Make configure always generate a dummy bdb/build_unix/db.h file.  Ugh. 	c91715e3e51595522a0ead641a0798b45876294b
----------------------------
Make configure generate a fake bdb/build_unix/db.h file, so that 'make distcheck' will work.  I hope. This is an ugly hack.... 	55217d8cefc1c520d679d30d920c0c896b003af6
----------------------------
Make sure ib_config.h is distributed. Clean up Do-all-build-steps. 	853a2f01604b17b4611778d89bf178ccee3901c3
----------------------------
"configure.in	Add include/Makefile to AC_OUTPUT "	9bbe517965a7d75fd5999934e3566726c6e2812f
----------------------------
Add --just-configure (-c) option to BUILD scripts. 	639a1069d313843288ba6d9cb54b290073a748a7
----------------------------
"ha_innobase.cc	Fix autocommit in ha_innobase.cc "	1af17f8d87b9484212a517c67ea9b4d2734dd680
----------------------------
Added max_user_connections 	70a627a1db87e60e461b5783ca3b1ffffc6be28c
----------------------------
Added max_user_connections Fixes for Innobase Don't reset whole to-buffer in strxnmov 	8e4968d9c727107dfd3621550d5cf2394d40bd57
----------------------------
Portability and bug fixes for Innobase. Add --with-innobase-db to configure. 	1717437382626492eb03575f71e1641af5e7cae6
----------------------------
COM_TABLE_DUMP and COM_BINLOG_DUMP are no longer erroneously logged to the slow query log. 	8c80289adbe2ef8f95793004fbc3de8a0f7068b5
----------------------------
"Added ""--character-sets-dir"" to myisampack "	a8c7affe21a5667b93ca480ade8046d3778ec1d0
----------------------------
Force sockets to be blocking on HPUX 11.0 Changed BITMAP to MY_BITMAP to avoid type conflict on windows 	059ad7f078297881fefeff7df2bc5795298f54fd
----------------------------
Added ChangeLog entry for --temp-pool to manual. 	b64a5bc71532a6c4c2f9cf764eae75318fea069c
----------------------------
Added --temp-pool option to mysqld.  This will cause temporary files created to use a small set of filenames, to try and avoid problems in the Linux kernel. 	31569172ee204a74bbecbd65d35d7b7c56025297
----------------------------
Table_locks_waited Table_locks_immediate 	5f6561ec885e200b7e5c6fd7907d8f3388d348ad
----------------------------
Added last_errno and last_error to show slave status slave will skip the first SQL_SLAVE_SKIP_COUNTER events on start - this is needed to recover from broken replication when the next log event(s) should just be skipped. Rotate binlogs when max_binlog_size is reached 	e8ffda53975f826c4c048dceae86d2076dbd0781
----------------------------
Added new mutex for hostname lookup Added free of io_cache when using ALTER TABLE ... ORDER BY 	877386602a0ca57e794bb95a3dae0c6cd4afabfd
----------------------------
"configure.in	top_srcdir -> top_builddir "	edb04aa7e463bea687c15ad61ed99866c2d9c630
----------------------------
Handle AVAILABLE_LANGUAGES more portably. Fix a typo in BDB configuration. 	5f4a3f51675240ac05daaba50926740e380e5016
----------------------------
Fixed that --open-files-limit works on Linux 	94bc7ce8d7e87f3910b1c17d55eeb04fbeba14ee
----------------------------
".del-ft0000001.a.result~3d17aff15fa5a9f1	Delete: mysql-test/r/ft0000001.a.result .del-ft0000001.b.result~505c4c00a0bddfc4	Delete: mysql-test/r/ft0000001.b.result .del-ft0000001.c.result~1040289a75243a92	Delete: mysql-test/r/ft0000001.c.result .del-ft0000001.d.result~7c549555fbc7663e	Delete: mysql-test/r/ft0000001.d.result .del-ft0000001.e.result~c58d30fd7fe86f4f	Delete: mysql-test/r/ft0000001.e.result .del-ft0000002.a.result~a89b4db1db19f944	Delete: mysql-test/r/ft0000002.a.result .del-ft0000002.b.result~5de41ce15ae1cedb	Delete: mysql-test/r/ft0000002.b.result .del-ft0000002.c.result~cd66b90918a87531	Delete: mysql-test/r/ft0000002.c.result fulltext_cache.result	Change mode to -rw-rw-r-- fulltext_cache.result	BitKeeper file /usr/home/serg/Abk/mysql/mysql-test/r/fulltext_cache.result config  	[serg:]checkout:get added fulltext_cache.test	BitKeeper file /usr/home/serg/Abk/mysql/mysql-test/t/fulltext_cache.test "	e0f5c742948df333800322feeb51eded12cc1ef2
----------------------------
"configure.in	Change PERL test to use perl instead of perl5, if possible. "	677c6887f6335665995881c1f32cabfe1c4d42f5
----------------------------
Fixed gethostname_r tests to be more portable 	e05df20dc5e5791d1725ffe9add9b813b69a67c0
----------------------------
Fixed --no-defaults in mysqltest 	07b1f0dccdf7f58dd79448e293eff85383f450e1
----------------------------
"mysqltest.c	Added --no-defaults to usage(). mysql-test-run.sh	Couple more clean-ups. "	799993352850b685c761a7d4489753c00df0c9a4
----------------------------
Added support for hex strings to mysqlimport A lot of new tests to mysqltest Fixed bug with BDB tables and autocommit 	c0f40d14cc36f56f5b4dba288583acd345429e4e
----------------------------
"configure.in	--without-raid should not #define USE_RAID "	dbb64831118e4e03b718dcbe47fd6e740371fbfa
----------------------------
acconfig.h fix to make ENCRYPT work BUILD/compile-pentium-debug debug has different warnings BUILD/FINISH.sh save symbol table and dissassembled code with symobls available before strip use $do_make for make decision instead of $make to avoid conflict BUILD/SETUP.sh export AM_MAKEFLAGS fast is now -fno-omit-frame-pointer, the opposite is now called reckless configure.in fixes to make CRYPT work again Docs/Makefile.am hack to avoid rebuilding the manual on make clean -why does Makefile depend on $BUILD_SOURCES, and do we even need BUILD_SOURCES? 	3c06a414d348c10d6477c1ac67caca7c4d211517
----------------------------
Pass arguements to the build script on to configure. 	4656daa6e4003bea77a57517a439450c3bd17df5
----------------------------
configure fix to get Linux to work with new large file system detection 	f9dcc70932c729df0d69c978854106ceef23e607
----------------------------
Configure updates Fixed my_print_defaults --no-defaults 	18f7b7b678952512893a14528a9c6b10da4a994f
----------------------------
fixed up leaks found by --exit-info=256 better error diagnostic in SLAVE START 	3cf810222a9ac4be3c433cec68eb0ed8d4bb102c
----------------------------
mysql-test-run  --core-file changed to --exit-info=256 it's yet another mysqld hidden feature --exit-info=256 is like --core-file but prints info at exit. --exit-info itself implies also one-thread (undocumented) 	6b6ce606788d453b16fc5f136e429f2ab6cb5aa2
----------------------------
sql/mysqld.cc fixed auto set of server id sql/sql_repl.cc do not allow slave to replicate if master id was not supplied sql/sql_repl.h fix for server_id 	2cd21162ca4c4b3ead6ea8398ebfd20943dd6b82
----------------------------
Bug fix, max_heap_table_size variable was not used. 	16a833a2a9d6d7d0de865047efbae1744c758b18
----------------------------
Only write full transactions to binary log A lot of new functions for BDB tables Fix for DROP DATABASE on windows Default server_id variables 	87d9388e52a128427481064e21373f8460d6b24f
----------------------------
added loops and other cool stuff to mysqltest fixed slave to preserve temp tables on slave stop; slave start added abort-slave-event-count option to mysqld to test the above added a test case for temp tables with a contantly aborting slave removed warning in sql_parse.cc fixed thimble.cc to compile 	07b36014fc33b21ded761070f6ecda3d575545b2
----------------------------
Added connect_timeout and fix for transactions per statement 	dc5e32ea40b435c13cb2d9c03e465743aff14b51
----------------------------
Fixed temp tables to work with replication. It will not work if you stop the slave while slave thread has temp tables - not hard to fix though, but it is time to go to bed added a new test case for temp table replication and Slave_open_temp_tables status variable. Misc fixes 	dd24015eaca6fc813623f9f87c8478da3701a97b
----------------------------
mysql-test/mysql-test-run cleanup - remove unneeded daeamon restarts sql/log_event.cc fixed bug - do not confuse confused slaves even further if they try to read less than LOG_EVENT_HEADER_LEN before the end of file sql/mysqlbinlog.cc give error if constructor fails sql/mysqld.cc --disconnect-slave-event-count for replication debugging sql/slave.cc --disconnect-slave-event-count cleanup to remove unneeded sleeps when things go wrong - sleep only when we have to sql/slave.h --disconnect-slave-event-count test cases for ALTER TABLE ORDER BY and replication offset off by 22 confusion mystery bug (both pass) 	46400961f77bc82c77b78afbf2cee8183a0b788f
----------------------------
safe_mysqld.sh - set pid_file and err_log relative to DATADIR as specified in the my.cnf file, instead of the default value - do not pass safe_mysqld-specific options to mysqld - minor style changes (remove extra ; at end of line, make spacing more consistent, etc.) manual.ja.texi - Turn off SCCS flag 	80a4d37e12c10a5aaf8e6b0178cf8bb3783cd004
----------------------------
"ha_berkeley.cc	fixed misleading comment sql_parse.cc	typo when checking for autocommit "	c270064c6d228e6376ae7e004ba9d72013d978c7
----------------------------
repl-tests/test-repl-ts/repl-timestamp.master.reject this file needs to be deleted sql/log_event.cc fixed warnings sql/log_event.h fixed () #define bug sql/mysqlbinlog.cc fixed length argument - was supposed to be one less sql/mysqld.cc replicate-do/ignore-table now works, wild does not yet sql/mysql_priv.h updating argument to add_table_to_list() -- needed for replicate-do/ignore table sql/slave.cc changes fore replicate-do/ignore-table close the socket before going to sleep sleeping after error bad event was being freed too early sql/slave.h changes for replicate-do/ignore-table sql/sql_class.cc slave_thread variable to THD sql/sql_class.h added slave_thread to THD, fixed bug in end_time() sql/sql_parse.cc updating argument to add_tables_to_list() sql/sql_table.cc fixed bug in mysql_rm_table() sql/sql_yacc.yy fixed up add_table_to_list() calls to accept updating argument sql/table.h added updating to TABLE_LIST 	f2b9a60ec44261352423c6c38bc0092524c7e772
----------------------------
"configure.in	fixed to properly handle 1 digit branch "	342ad607f21ae1304b86a30f9d6ebca0442008c8
----------------------------
"sql_parse.cc	add send_ok() for BEGIN WORK sql_yacc.yy	SQLCOM_COMMIT => SQLCOM_BEGIN for BEGIN_SYM "	eb680470f169e1716760a0c28a36ae393a10a59e
----------------------------
"Index   	Added latin5 (turkish) character set manual.texi	Added latin5 (turkish) character set configure.in	Added latin5 (turkish) character set latin5.conf	BitKeeper file /usr/local/src/my/work/sql/share/charsets/latin5.conf "	c61dda76566da8376642efc10e8fc1f52e6ff91b
----------------------------
Docs/manual.texi updated docs for SET SQL_LOG_BIN client/mysqltest.c added support for expected error 	7323cf3010e710c3dbacff892064bca36faf8271
----------------------------
SET OPTION SQL_QUOTE_SHOW_CREATE = 0 | 1 It makes SHOW CREATE TABLE to quote table and column names. This is ON by default ! 	0a050cf464021dee9c5df76c050786a73f33c9cf
----------------------------
Docs/manual.texi replication updates sql/opt_range.h fixed compiler warning sql/slave.cc fixed handling of long usernames fixed insert_id + query log event processing atomicity in the case of slave death fix edcharset coversion to not be global to all threads sql/sql_class.h fix to make insert_id event and the subsequent query event be still processed atomically if slave dies in the middle sql/sql_select.cc temp fix to make it compile repl-tests/test-auto-inc/run.test@1.1 New BitKeeper file ``repl-tests/test-auto-inc/run.test'' repl-tests/test-auto-inc/x.master@1.1 New BitKeeper file ``repl-tests/test-auto-inc/x.master'' 	1fbc40219c6846fc21484d2a75c2c06b2367545e
----------------------------
sql/log.cc Added magic number to binlog sql/log_event.cc distinquish bogus data from truncated logs sql/log_event.h added magic number added LOG_READ_TRUNC error sql/mysqlbinlog.cc fixed to handle magic number added O_BINARY to my_fopen sql/mysqld.cc added code for replicate-rewrite-db sql/slave.cc replicate-rewrite-db O_BINARY handle magic sql/sql_class.h added i_string_pair class sql/sql_repl.cc added magic better error messages support-files/magic added magic for binlog Added test case for replication of queries with error 	f452ab6f90c1ec01bf344d2a746ea2a8cb4a44d4
----------------------------
configure.in       Add check for pdftex Docs/Makefile.am   Do not compile manual.pdf if pdftex not present 	c11eb85a6f3f54bf489d00a4f1eea8740a17ad4f
----------------------------
fixed mutex bug ( or lack of it) when reading log entries on COM_BINLOG_DUMP added error_code to query event, and checking to see if we get the expected error on the slave removed obsolete code from slave.cc 	204ae8473262f37d40f27aa35505b0492128cb7d
----------------------------
skip updates with the same server id as self kill zombie COM_BINLOG_DUMP with the same server id on connect 	d7659f6063659cb1bbb0f3093742b097ddd1fb9d
----------------------------
bug fixes in server-id, moved replication functionality to sql_repl.* will push this one, since the replication code now works 	62a6a0fdf1ce8ddd24175098e3aedbab8b36730d
----------------------------
This one will not be pushed, I am committing to be able to pull in Monty's changes added server id, mostly working added --skip-slave-start, working added --replicate-rewrite-db - just in the cmd line parses, currently noop 	ea0f48ffb2515a8ca49b003799523b7e831cca2c
----------------------------
Bigger ranges if set_maximum_open_files fails + fix for release 	0814ea212a9606495a8c0d3865b9feab0a9567d6
----------------------------
"safe_mysqld.sh	remove stray warning message from nohup nice configure.in	the & in 2>&1 gets replaced by sed during AC_SUBST "	d4b54a2139b5d64e612a29924e19ae41ebf43e52
----------------------------
removed misplaced comma in configure.in 	664658866db9862c144a1a0f31a811f396d54916
----------------------------
Made configure's help output nice and pretty. 	f2b360351c2ce5401cbee90d7f7f7ee171897612
----------------------------
configure fix to handle my_config.h 	ac93ec4ae11d59c71547c90a90e85136d03536e8
----------------------------
configure fixes 	25106ec7551d143d4a8b53b78b04da23876497b6
----------------------------
"configure.in	remove some stray warning messages for failed tests safe_mysqld.sh	remove some stray warning messages for failed tests "	0935747126dce759aa32930d1762a9990740dd7c
----------------------------
Fixed --no-defaults in installation 	497007e2bd9cb127d54a4fdb02253301f404ce7f
----------------------------
--core-file ;  To get a core on SIGSEGV when using Linuxthreads 	ce40c2fd83976f7eb6f8ad2ceacc799eb1e0ec28
----------------------------
".del-ac-types.h	Delete: mit-pthreads/include/pthread/ac-types.h .del-config.flags	Delete: mit-pthreads/config.flags "	438e8c7c134e3d67034e969a03a200dc4052ee56
----------------------------
"configure.in	modifications to help libmysql_r work with distcheck Makefile.am	modifications to help libmysql_r work with distcheck "	1d28a6f1fd02de4ee34816a17463e623c5d46dcf
----------------------------
PART I: Keys support for MyMERGE tables myisammrg/             | Makefile.am            | mymrgdef.h             |   support for keys myrg_open.c            |          & myrg_queue.c           |   bugfixes myrg_rfirst.c          | myrg_rkey.c            | myrg_rlast.c           | myrg_rnext.c           | myrg_rprev.c           | myrg_rrnd.c            | include/myisammrg.h    | rkey/rnext/etc prototyped sql/                   | ha_myisammrg.cc        | support for keys ha_myisammrg.h         | myisam/                | mi_rkey.c              | buf==NULL extension, _mi_rkey() mi_rnext.c             | mi_rprev.c             | include/queues.h       | reinit_queue() - same as init_queue, but w/o malloc mysys/queues.c         | PART II: Miscellaneous myisam/common_words    | deleted (looks like I checked it in by mistake) some files (like acconfig.h, Makefile.am, COPYING.LIB, etc) | Change mode to -rw-r--r-- (by `chmod a-x ') 	5886090182881b29143091c9bb4d7e7b406ea5df
----------------------------
Use @HOSTNAME@ instead of hardcoded /bin/hostname. 	621c7db2f7162bf6a7ba8ef92010c652524654b9
----------------------------
fixed coredump in UDF added Monty's patch for alter table and LAST_INSERT_ID() added a test case for replication of ALTER TABLE on a table with auto_increment 	37316bea5a83ccb7477ccd41b459a1c89305d180
----------------------------
Make BerkeleyDB configuration work. 	e2483f5923b9991f944e34b30ebbf2945f608167
