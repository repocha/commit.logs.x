commit d5111948f8d493c7cdd8c16a3be5dce9476e02ea
Author: Christophe Jaillet <jailletc36@apache.org>
Date:   Sat Nov 21 21:53:25 2015 +0000

    Remove some useless 'return' statements.
    Add a blank line between functions.
    
    git-svn-id: https://svn.apache.org/repos/asf/httpd/httpd/trunk@1715582 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/modules/aaa/mod_authn_socache.c b/modules/aaa/mod_authn_socache.c
index 01a69e6..15b1dd5 100644
--- a/modules/aaa/mod_authn_socache.c
+++ b/modules/aaa/mod_authn_socache.c
@@ -56,6 +56,7 @@ static apr_status_t remove_lock(void *data)
     }
     return APR_SUCCESS;
 }
+
 static apr_status_t destroy_cache(void *data)
 {
     if (socache_instance) {
@@ -65,7 +66,6 @@ static apr_status_t destroy_cache(void *data)
     return APR_SUCCESS;
 }
 
-
 static int authn_cache_precfg(apr_pool_t *pconf, apr_pool_t *plog, apr_pool_t *ptmp)
 {
     apr_status_t rv = ap_mutex_register(pconf, authn_cache_id,
@@ -81,6 +81,7 @@ static int authn_cache_precfg(apr_pool_t *pconf, apr_pool_t *plog, apr_pool_t *p
     configured = 0;
     return OK;
 }
+
 static int authn_cache_post_config(apr_pool_t *pconf, apr_pool_t *plog,
                                    apr_pool_t *ptmp, server_rec *s)
 {
@@ -132,6 +133,7 @@ static int authn_cache_post_config(apr_pool_t *pconf, apr_pool_t *plog,
     apr_pool_cleanup_register(pconf, (void*)s, destroy_cache, apr_pool_cleanup_null);
     return OK;
 }
+
 static void authn_cache_child_init(apr_pool_t *p, server_rec *s)
 {
     const char *lock;
@@ -201,6 +203,7 @@ static void* authn_cache_dircfg_create(apr_pool_t *pool, char *s)
     ret->context = directory;
     return ret;
 }
+
 /* not sure we want this.  Might be safer to document use-all-or-none */
 static void* authn_cache_dircfg_merge(apr_pool_t *pool, void *BASE, void *ADD)
 {
@@ -285,6 +288,7 @@ static const char *construct_key(request_rec *r, const char *context,
         return apr_pstrcat(r->pool, context, ":", user, ":", realm, NULL);
     }
 }
+
 static void ap_authn_cache_store(request_rec *r, const char *module,
                                  const char *user, const char *realm,
                                  const char* data)
@@ -351,14 +355,12 @@ static void ap_authn_cache_store(request_rec *r, const char *module,
     if (rv != APR_SUCCESS) {
         ap_log_rerror(APLOG_MARK, APLOG_ERR, rv, r, APLOGNO(01683) "Failed to release mutex!");
     }
-    return;
 }
 
 #define MAX_VAL_LEN 100
 static authn_status check_password(request_rec *r, const char *user,
                                    const char *password)
 {
-
     /* construct key
      * look it up
      * if found, test password
@@ -456,6 +458,7 @@ static const authn_provider authn_cache_provider =
     &check_password,
     &get_realm_hash,
 };
+
 static void register_hooks(apr_pool_t *p)
 {
     ap_register_auth_provider(p, AUTHN_PROVIDER_GROUP, "socache",
