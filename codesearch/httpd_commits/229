commit 91f2fb423ebf2e8df9cf05656fcd62c89d61cbaf
Author: William A. Rowe Jr <wrowe@apache.org>
Date:   Sun Feb 25 00:51:32 2001 +0000

      Clean up namespace badness with s/configfile_t/ap_configfile_t/
    
    
    git-svn-id: https://svn.apache.org/repos/asf/httpd/httpd/trunk@88312 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/include/http_config.h b/include/http_config.h
index 929ac44..0948bb2 100644
--- a/include/http_config.h
+++ b/include/http_config.h
@@ -254,9 +254,9 @@ struct command_struct {
  */
 #define DECLINE_CMD "\a\b"
 
-typedef struct configfile_t configfile_t;
+typedef struct ap_configfile_t ap_configfile_t;
 /** Common structure for reading of config files / passwd files etc. */
-struct configfile_t {
+struct ap_configfile_t {
     /** a getc()-like function
      *  @deffunc int getch(void *param) */
     int (*getch) (void *param);	
@@ -290,7 +290,7 @@ struct cmd_parms_struct {
     ap_method_list_t *xlimited;
 
     /** Config file structure. */
-    configfile_t *config_file;
+    ap_configfile_t *config_file;
     /** the directive specifying this command */
     ap_directive_t *directive;
 
@@ -593,55 +593,47 @@ AP_DECLARE(const char *) ap_find_module_name(module *m);
 AP_DECLARE(module *) ap_find_linked_module(const char *name);
 
 /**
- * Open a configfile_t as apr_file_t
- * @param ret_cfg open configfile_t struct pointer
+ * Open a ap_configfile_t as apr_file_t
+ * @param ret_cfg open ap_configfile_t struct pointer
  * @param p The pool to allocate the structure out of
  * @param name the name of the file to open
- * @deffunc apr_status_t ap_pcfg_openfile(configfile_t **ret_cfg, apr_pool_t *p, const char *name)
+ * @deffunc apr_status_t ap_pcfg_openfile(ap_configfile_t **ret_cfg, apr_pool_t *p, const char *name)
  */
-AP_DECLARE(apr_status_t) ap_pcfg_openfile(configfile_t **ret_cfg, apr_pool_t *p, const char *name);
+AP_DECLARE(apr_status_t) ap_pcfg_openfile(ap_configfile_t **ret_cfg, apr_pool_t *p, const char *name);
 
 /**
- * Allocate a configfile_t handle with user defined functions and params 
+ * Allocate a ap_configfile_t handle with user defined functions and params 
  * @param p The pool to allocate out of
  * @param descr The name of the file
  * @param param The argument passed to getch/getstr/close
  * @param getc_func The getch function
  * @param gets_func The getstr function
  * @param close_func The close function
- * @deffunc configfile_t *ap_pcfg_open_custom(apr_pool_t *p, const char *descr, void *param, int(*getc_func)(void*), void *(*gets_func) (void *buf, size_t bufsiz, void *param), int(*close_func)(void *param))
+ * @deffunc ap_configfile_t *ap_pcfg_open_custom(apr_pool_t *p, const char *descr, void *param, int(*getc_func)(void*), void *(*gets_func) (void *buf, size_t bufsiz, void *param), int(*close_func)(void *param))
  */
-AP_DECLARE(configfile_t *) ap_pcfg_open_custom(apr_pool_t *p, const char *descr,
+AP_DECLARE(ap_configfile_t *) ap_pcfg_open_custom(apr_pool_t *p, const char *descr,
     void *param,
     int(*getc_func)(void*),
     void *(*gets_func) (void *buf, size_t bufsiz, void *param),
     int(*close_func)(void *param));
 
 /**
- * Read one line from open configfile_t, strip LF, increase line number
+ * Read one line from open ap_configfile_t, strip LF, increase line number
  * @param buf place to store the line read
  * @param bufsize size of the buffer
  * @param cfp File to read from
  * @return 1 on success, 0 on failure
- * @deffunc int ap_cfg_getline(char *buf, size_t bufsize, configfile_t *cfp)
+ * @deffunc int ap_cfg_getline(char *buf, size_t bufsize, ap_configfile_t *cfp)
  */
-AP_DECLARE(int) ap_cfg_getline(char *buf, size_t bufsize, configfile_t *cfp);
+AP_DECLARE(int) ap_cfg_getline(char *buf, size_t bufsize, ap_configfile_t *cfp);
 
 /**
- * Read one char from open configfile_t, increase line number upon LF 
- * @param cfp The file to read from
- * @return the character read
- * @deffunc int ap_cfg_getc(configfile_t *cfp)
- */
-AP_DECLARE(int) ap_cfg_getc(configfile_t *cfp);
-
-/**
- * Detach from open configfile_t, calling the close handler
+ * Detach from open ap_configfile_t, calling the close handler
  * @param cfp The file to close
  * @return 1 on sucess, 0 on failure
- * @deffunc int ap_cfg_closefile(configfile_t *cfp)
+ * @deffunc int ap_cfg_closefile(ap_configfile_t *cfp)
  */
-AP_DECLARE(int) ap_cfg_closefile(configfile_t *cfp);
+AP_DECLARE(int) ap_cfg_closefile(ap_configfile_t *cfp);
 
 /**
  * Read all data between the current <foo> and the matching </foo>.  All
diff --git a/modules/aaa/mod_auth.c b/modules/aaa/mod_auth.c
index d96d2f2..c3768a4 100644
--- a/modules/aaa/mod_auth.c
+++ b/modules/aaa/mod_auth.c
@@ -127,7 +127,7 @@ module AP_MODULE_DECLARE_DATA auth_module;
 
 static char *get_pw(request_rec *r, char *user, char *auth_pwfile)
 {
-    configfile_t *f;
+    ap_configfile_t *f;
     char l[MAX_STRING_LEN];
     const char *rpw, *w;
     apr_status_t status;
@@ -154,7 +154,7 @@ static char *get_pw(request_rec *r, char *user, char *auth_pwfile)
 
 static apr_table_t *groups_for_user(apr_pool_t *p, char *user, char *grpfile)
 {
-    configfile_t *f;
+    ap_configfile_t *f;
     apr_table_t *grps = apr_table_make(p, 15);
     apr_pool_t *sp;
     char l[MAX_STRING_LEN];
diff --git a/modules/aaa/mod_auth_digest.c b/modules/aaa/mod_auth_digest.c
index 7263b6a..f5b3009 100644
--- a/modules/aaa/mod_auth_digest.c
+++ b/modules/aaa/mod_auth_digest.c
@@ -1340,7 +1340,7 @@ static void note_digest_auth_failure(request_rec *r,
 static const char *get_hash(request_rec *r, const char *user,
 			    const char *realm, const char *auth_pwfile)
 {
-    configfile_t *f;
+    ap_configfile_t *f;
     char l[MAX_STRING_LEN];
     const char *rpw;
     char *w, *x;
@@ -1775,7 +1775,7 @@ static int authenticate_digest_user(request_rec *r)
 static apr_table_t *groups_for_user(request_rec *r, const char *user,
 			      const char *grpfile)
 {
-    configfile_t *f;
+    ap_configfile_t *f;
     apr_table_t *grps = apr_table_make(r->pool, 15);
     apr_pool_t *sp;
     char l[MAX_STRING_LEN];
diff --git a/modules/http/mod_mime.c b/modules/http/mod_mime.c
index d72d8ef..e11bde8 100644
--- a/modules/http/mod_mime.c
+++ b/modules/http/mod_mime.c
@@ -373,7 +373,7 @@ static apr_table_t *hash_buckets[MIME_HASHSIZE];
 
 static void mime_post_config(apr_pool_t *p, apr_pool_t *plog, apr_pool_t *ptemp, server_rec *s)
 {
-    configfile_t *f;
+    ap_configfile_t *f;
     char l[MAX_STRING_LEN];
     int x;
     const char *types_confname = ap_get_module_config(s->module_config, &mime_module);
diff --git a/modules/mappers/mod_imap.c b/modules/mappers/mod_imap.c
index 51ae6b6..b6540e5 100644
--- a/modules/mappers/mod_imap.c
+++ b/modules/mappers/mod_imap.c
@@ -634,7 +634,7 @@ static int imap_handler(request_rec *r)
     char *imap_default;
     char *imap_base;
 
-    configfile_t *imap; 
+    ap_configfile_t *imap; 
 
     if (r->method_number != M_GET || (strcmp(r->handler,IMAP_MAGIC_TYPE)
 				      && strcmp(r->handler, "imap-file")))
diff --git a/server/config.c b/server/config.c
index 2f562a7..c5a2bd2 100644
--- a/server/config.c
+++ b/server/config.c
@@ -1257,7 +1257,7 @@ void ap_process_resource_config(server_rec *s, const char *fname,
     cmd_parms parms;
     apr_finfo_t finfo;
     const char *errmsg;
-    configfile_t *cfp;
+    ap_configfile_t *cfp;
 
     fname = ap_server_root_relative(p, fname);
 
@@ -1384,7 +1384,7 @@ AP_DECLARE(void) ap_process_config_tree(server_rec *s,
 int ap_parse_htaccess(ap_conf_vector_t **result, request_rec *r, int override,
 		      const char *d, const char *access_name)
 {
-    configfile_t *f = NULL;
+    ap_configfile_t *f = NULL;
     cmd_parms parms;
     char *filename = NULL;
     const struct htaccess_result *cache;
diff --git a/server/util.c b/server/util.c
index a3a0be2..398dfcd 100644
--- a/server/util.c
+++ b/server/util.c
@@ -817,7 +817,7 @@ AP_DECLARE(const char *) ap_resolve_env(apr_pool_t *p, const char * word)
 
        return apr_pstrdup(p,tmp);
 }
-AP_DECLARE(int) ap_cfg_closefile(configfile_t *cfp)
+AP_DECLARE(int) ap_cfg_closefile(ap_configfile_t *cfp)
 {
 #ifdef DEBUG
     ap_log_error(APLOG_MARK, APLOG_DEBUG|APLOG_NOERRNO, 0, NULL, 
@@ -851,10 +851,10 @@ static void *cfg_getstr(void *buf, size_t bufsiz, void *param)
     return NULL;
 }
 
-/* Open a configfile_t as FILE, return open configfile_t struct pointer */
-AP_DECLARE(apr_status_t) ap_pcfg_openfile(configfile_t **ret_cfg, apr_pool_t *p, const char *name)
+/* Open a ap_configfile_t as FILE, return open ap_configfile_t struct pointer */
+AP_DECLARE(apr_status_t) ap_pcfg_openfile(ap_configfile_t **ret_cfg, apr_pool_t *p, const char *name)
 {
-    configfile_t *new_cfg;
+    ap_configfile_t *new_cfg;
     apr_file_t *file = NULL;
     apr_finfo_t finfo;
     apr_status_t status;
@@ -916,14 +916,14 @@ AP_DECLARE(apr_status_t) ap_pcfg_openfile(configfile_t **ret_cfg, apr_pool_t *p,
 }
 
 
-/* Allocate a configfile_t handle with user defined functions and params */
-AP_DECLARE(configfile_t *) ap_pcfg_open_custom(apr_pool_t *p, const char *descr,
+/* Allocate a ap_configfile_t handle with user defined functions and params */
+AP_DECLARE(ap_configfile_t *) ap_pcfg_open_custom(apr_pool_t *p, const char *descr,
     void *param,
     int(*getch)(void *param),
     void *(*getstr) (void *buf, size_t bufsiz, void *param),
     int(*close_func)(void *param))
 {
-    configfile_t *new_cfg = apr_palloc(p, sizeof(*new_cfg));
+    ap_configfile_t *new_cfg = apr_palloc(p, sizeof(*new_cfg));
 #ifdef DEBUG
     ap_log_error(APLOG_MARK, APLOG_DEBUG | APLOG_NOERRNO, 0, NULL, "Opening config handler %s", descr);
 #endif
@@ -937,19 +937,9 @@ AP_DECLARE(configfile_t *) ap_pcfg_open_custom(apr_pool_t *p, const char *descr,
 }
 
 
-/* Read one character from a configfile_t */
-AP_DECLARE(int) ap_cfg_getc(configfile_t *cfp)
-{
-    register int ch = cfp->getch(cfp->param);
-    if (ch == LF) 
-	++cfp->line_number;
-    return ch;
-}
-
-
-/* Read one line from open configfile_t, strip LF, increase line number */
+/* Read one line from open ap_configfile_t, strip LF, increase line number */
 /* If custom handler does not define a getstr() function, read char by char */
-AP_DECLARE(int) ap_cfg_getline(char *buf, size_t bufsize, configfile_t *cfp)
+AP_DECLARE(int) ap_cfg_getline(char *buf, size_t bufsize, ap_configfile_t *cfp)
 {
     /* If a "get string" function is defined, use it */
     if (cfp->getstr != NULL) {
