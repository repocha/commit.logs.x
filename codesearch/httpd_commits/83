commit 7cf5169280a88850829089b4e2599c28d534e0c6
Author: Stefan Fritsch <sf@apache.org>
Date:   Fri Sep 23 18:08:42 2011 +0000

    More cleanup: Expand tabs and some more indentation fixes
    No functional change
    
    
    git-svn-id: https://svn.apache.org/repos/asf/httpd/httpd/trunk@1174929 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/include/ap_hooks.h b/include/ap_hooks.h
index acac9e4..43d38e7 100644
--- a/include/ap_hooks.h
+++ b/include/ap_hooks.h
@@ -72,11 +72,11 @@
  * @param args The arguments the hook function takes, in brackets.
  */
 #define AP_DECLARE_HOOK(ret,name,args) \
-	APR_DECLARE_EXTERNAL_HOOK(ap,AP,ret,name,args)
+        APR_DECLARE_EXTERNAL_HOOK(ap,AP,ret,name,args)
 
 /** @internal */
 #define AP_IMPLEMENT_HOOK_BASE(name) \
-	APR_IMPLEMENT_EXTERNAL_HOOK_BASE(ap,AP,name)
+        APR_IMPLEMENT_EXTERNAL_HOOK_BASE(ap,AP,name)
 
 /**
  * Implement an Apache core hook that has no return code, and
@@ -92,7 +92,7 @@
  * (e.g. within a dso) see APR_IMPLEMENT_EXTERNAL_HOOK_VOID.
  */
 #define AP_IMPLEMENT_HOOK_VOID(name,args_decl,args_use) \
-	APR_IMPLEMENT_EXTERNAL_HOOK_VOID(ap,AP,name,args_decl,args_use)
+        APR_IMPLEMENT_EXTERNAL_HOOK_VOID(ap,AP,name,args_decl,args_use)
 
 /**
  * Implement an Apache core hook that runs until one of the functions
@@ -115,7 +115,7 @@
  * (e.g. within a dso) see APR_IMPLEMENT_EXTERNAL_HOOK_RUN_ALL.
  */
 #define AP_IMPLEMENT_HOOK_RUN_ALL(ret,name,args_decl,args_use,ok,decline) \
-	APR_IMPLEMENT_EXTERNAL_HOOK_RUN_ALL(ap,AP,ret,name,args_decl, \
+        APR_IMPLEMENT_EXTERNAL_HOOK_RUN_ALL(ap,AP,ret,name,args_decl, \
                                             args_use,ok,decline)
 
 /**
@@ -135,7 +135,7 @@
  * (e.g. within a dso) see APR_IMPLEMENT_EXTERNAL_HOOK_RUN_FIRST.
  */
 #define AP_IMPLEMENT_HOOK_RUN_FIRST(ret,name,args_decl,args_use,decline) \
-	APR_IMPLEMENT_EXTERNAL_HOOK_RUN_FIRST(ap,AP,ret,name,args_decl, \
+        APR_IMPLEMENT_EXTERNAL_HOOK_RUN_FIRST(ap,AP,ret,name,args_decl, \
                                               args_use,decline)
 
 /* Note that the other optional hook implementations are straightforward but
@@ -148,8 +148,8 @@
  * @see AP_IMPLEMENT_HOOK_RUN_ALL
  */
 #define AP_IMPLEMENT_OPTIONAL_HOOK_RUN_ALL(ret,name,args_decl,args_use,ok, \
-					   decline) \
-	APR_IMPLEMENT_OPTIONAL_HOOK_RUN_ALL(ap,AP,ret,name,args_decl, \
+                                           decline) \
+        APR_IMPLEMENT_OPTIONAL_HOOK_RUN_ALL(ap,AP,ret,name,args_decl, \
                                             args_use,ok,decline)
 
 /**
diff --git a/include/ap_listen.h b/include/ap_listen.h
index 4182576..21101cd 100644
--- a/include/ap_listen.h
+++ b/include/ap_listen.h
@@ -112,12 +112,12 @@ AP_DECLARE_NONSTD(const char *) ap_set_listenbacklog(cmd_parms *cmd, void *dummy
 AP_DECLARE_NONSTD(const char *) ap_set_listener(cmd_parms *cmd, void *dummy,
                                                 int argc, char *const argv[]);
 AP_DECLARE_NONSTD(const char *) ap_set_send_buffer_size(cmd_parms *cmd, void *dummy,
-				    const char *arg);
+                                                        const char *arg);
 AP_DECLARE_NONSTD(const char *) ap_set_receive_buffer_size(cmd_parms *cmd,
                                                            void *dummy,
                                                            const char *arg);
 
-#define LISTEN_COMMANDS	\
+#define LISTEN_COMMANDS \
 AP_INIT_TAKE1("ListenBacklog", ap_set_listenbacklog, NULL, RSRC_CONF, \
   "Maximum length of the queue of pending connections, as used by listen(2)"), \
 AP_INIT_TAKE_ARGV("Listen", ap_set_listener, NULL, RSRC_CONF, \
diff --git a/include/ap_mpm.h b/include/ap_mpm.h
index 085e0d8..b061c0a 100644
--- a/include/ap_mpm.h
+++ b/include/ap_mpm.h
@@ -72,11 +72,11 @@ extern "C" {
 
     unix/posix notes:
     - The MPM does not set a SIGALRM handler, user code may use SIGALRM.
-	But the preferred method of handling timeouts is to use the
-	timeouts provided by the BUFF abstraction.
+        But the preferred method of handling timeouts is to use the
+        timeouts provided by the BUFF abstraction.
     - The proper setting for SIGPIPE is SIG_IGN, if user code changes it
         for any of their own processing, it must be restored to SIG_IGN
-	prior to executing or returning to any apache code.
+        prior to executing or returning to any apache code.
     TODO: add SIGPIPE debugging check somewhere to make sure it's SIG_IGN
 */
 
diff --git a/include/apache_noprobes.h b/include/apache_noprobes.h
index 8492e09..cb98b97 100644
--- a/include/apache_noprobes.h
+++ b/include/apache_noprobes.h
@@ -17,328 +17,328 @@
 #ifndef _APACHE_NOPROBES_H_
 #define _APACHE_NOPROBES_H_
 
-#define	AP_ACCESS_CHECKER_DISPATCH_COMPLETE(arg0, arg1)
-#define	AP_ACCESS_CHECKER_DISPATCH_COMPLETE_ENABLED() (0)
-#define	AP_ACCESS_CHECKER_DISPATCH_INVOKE(arg0)
-#define	AP_ACCESS_CHECKER_DISPATCH_INVOKE_ENABLED() (0)
-#define	AP_ACCESS_CHECKER_ENTRY()
-#define	AP_ACCESS_CHECKER_ENTRY_ENABLED() (0)
-#define	AP_ACCESS_CHECKER_RETURN(arg0)
-#define	AP_ACCESS_CHECKER_RETURN_ENABLED() (0)
-#define	AP_AUTH_CHECKER_DISPATCH_COMPLETE(arg0, arg1)
-#define	AP_AUTH_CHECKER_DISPATCH_COMPLETE_ENABLED() (0)
-#define	AP_AUTH_CHECKER_DISPATCH_INVOKE(arg0)
-#define	AP_AUTH_CHECKER_DISPATCH_INVOKE_ENABLED() (0)
-#define	AP_AUTH_CHECKER_ENTRY()
-#define	AP_AUTH_CHECKER_ENTRY_ENABLED() (0)
-#define	AP_AUTH_CHECKER_RETURN(arg0)
-#define	AP_AUTH_CHECKER_RETURN_ENABLED() (0)
-#define	AP_CANON_HANDLER_DISPATCH_COMPLETE(arg0, arg1)
-#define	AP_CANON_HANDLER_DISPATCH_COMPLETE_ENABLED() (0)
-#define	AP_CANON_HANDLER_DISPATCH_INVOKE(arg0)
-#define	AP_CANON_HANDLER_DISPATCH_INVOKE_ENABLED() (0)
-#define	AP_CANON_HANDLER_ENTRY()
-#define	AP_CANON_HANDLER_ENTRY_ENABLED() (0)
-#define	AP_CANON_HANDLER_RETURN(arg0)
-#define	AP_CANON_HANDLER_RETURN_ENABLED() (0)
-#define	AP_CHECK_USER_ID_DISPATCH_COMPLETE(arg0, arg1)
-#define	AP_CHECK_USER_ID_DISPATCH_COMPLETE_ENABLED() (0)
-#define	AP_CHECK_USER_ID_DISPATCH_INVOKE(arg0)
-#define	AP_CHECK_USER_ID_DISPATCH_INVOKE_ENABLED() (0)
-#define	AP_CHECK_USER_ID_ENTRY()
-#define	AP_CHECK_USER_ID_ENTRY_ENABLED() (0)
-#define	AP_CHECK_USER_ID_RETURN(arg0)
-#define	AP_CHECK_USER_ID_RETURN_ENABLED() (0)
-#define	AP_CHILD_INIT_DISPATCH_COMPLETE(arg0, arg1)
-#define	AP_CHILD_INIT_DISPATCH_COMPLETE_ENABLED() (0)
-#define	AP_CHILD_INIT_DISPATCH_INVOKE(arg0)
-#define	AP_CHILD_INIT_DISPATCH_INVOKE_ENABLED() (0)
-#define	AP_CHILD_INIT_ENTRY()
-#define	AP_CHILD_INIT_ENTRY_ENABLED() (0)
-#define	AP_CHILD_INIT_RETURN(arg0)
-#define	AP_CHILD_INIT_RETURN_ENABLED() (0)
-#define	AP_CREATE_CONNECTION_DISPATCH_COMPLETE(arg0, arg1)
-#define	AP_CREATE_CONNECTION_DISPATCH_COMPLETE_ENABLED() (0)
-#define	AP_CREATE_CONNECTION_DISPATCH_INVOKE(arg0)
-#define	AP_CREATE_CONNECTION_DISPATCH_INVOKE_ENABLED() (0)
-#define	AP_CREATE_CONNECTION_ENTRY()
-#define	AP_CREATE_CONNECTION_ENTRY_ENABLED() (0)
-#define	AP_CREATE_CONNECTION_RETURN(arg0)
-#define	AP_CREATE_CONNECTION_RETURN_ENABLED() (0)
-#define	AP_CREATE_REQUEST_DISPATCH_COMPLETE(arg0, arg1)
-#define	AP_CREATE_REQUEST_DISPATCH_COMPLETE_ENABLED() (0)
-#define	AP_CREATE_REQUEST_DISPATCH_INVOKE(arg0)
-#define	AP_CREATE_REQUEST_DISPATCH_INVOKE_ENABLED() (0)
-#define	AP_CREATE_REQUEST_ENTRY()
-#define	AP_CREATE_REQUEST_ENTRY_ENABLED() (0)
-#define	AP_CREATE_REQUEST_RETURN(arg0)
-#define	AP_CREATE_REQUEST_RETURN_ENABLED() (0)
-#define	AP_DEFAULT_PORT_DISPATCH_COMPLETE(arg0, arg1)
-#define	AP_DEFAULT_PORT_DISPATCH_COMPLETE_ENABLED() (0)
-#define	AP_DEFAULT_PORT_DISPATCH_INVOKE(arg0)
-#define	AP_DEFAULT_PORT_DISPATCH_INVOKE_ENABLED() (0)
-#define	AP_DEFAULT_PORT_ENTRY()
-#define	AP_DEFAULT_PORT_ENTRY_ENABLED() (0)
-#define	AP_DEFAULT_PORT_RETURN(arg0)
-#define	AP_DEFAULT_PORT_RETURN_ENABLED() (0)
-#define	AP_ERROR_LOG_DISPATCH_COMPLETE(arg0, arg1)
-#define	AP_ERROR_LOG_DISPATCH_COMPLETE_ENABLED() (0)
-#define	AP_ERROR_LOG_DISPATCH_INVOKE(arg0)
-#define	AP_ERROR_LOG_DISPATCH_INVOKE_ENABLED() (0)
-#define	AP_ERROR_LOG_ENTRY()
-#define	AP_ERROR_LOG_ENTRY_ENABLED() (0)
-#define	AP_ERROR_LOG_RETURN(arg0)
-#define	AP_ERROR_LOG_RETURN_ENABLED() (0)
-#define	AP_FIND_LIVEPROP_DISPATCH_COMPLETE(arg0, arg1)
-#define	AP_FIND_LIVEPROP_DISPATCH_COMPLETE_ENABLED() (0)
-#define	AP_FIND_LIVEPROP_DISPATCH_INVOKE(arg0)
-#define	AP_FIND_LIVEPROP_DISPATCH_INVOKE_ENABLED() (0)
-#define	AP_FIND_LIVEPROP_ENTRY()
-#define	AP_FIND_LIVEPROP_ENTRY_ENABLED() (0)
-#define	AP_FIND_LIVEPROP_RETURN(arg0)
-#define	AP_FIND_LIVEPROP_RETURN_ENABLED() (0)
-#define	AP_FIXUPS_DISPATCH_COMPLETE(arg0, arg1)
-#define	AP_FIXUPS_DISPATCH_COMPLETE_ENABLED() (0)
-#define	AP_FIXUPS_DISPATCH_INVOKE(arg0)
-#define	AP_FIXUPS_DISPATCH_INVOKE_ENABLED() (0)
-#define	AP_FIXUPS_ENTRY()
-#define	AP_FIXUPS_ENTRY_ENABLED() (0)
-#define	AP_FIXUPS_RETURN(arg0)
-#define	AP_FIXUPS_RETURN_ENABLED() (0)
-#define	AP_GATHER_PROPSETS_DISPATCH_COMPLETE(arg0, arg1)
-#define	AP_GATHER_PROPSETS_DISPATCH_COMPLETE_ENABLED() (0)
-#define	AP_GATHER_PROPSETS_DISPATCH_INVOKE(arg0)
-#define	AP_GATHER_PROPSETS_DISPATCH_INVOKE_ENABLED() (0)
-#define	AP_GATHER_PROPSETS_ENTRY()
-#define	AP_GATHER_PROPSETS_ENTRY_ENABLED() (0)
-#define	AP_GATHER_PROPSETS_RETURN(arg0)
-#define	AP_GATHER_PROPSETS_RETURN_ENABLED() (0)
-#define	AP_GET_MGMT_ITEMS_DISPATCH_COMPLETE(arg0, arg1)
-#define	AP_GET_MGMT_ITEMS_DISPATCH_COMPLETE_ENABLED() (0)
-#define	AP_GET_MGMT_ITEMS_DISPATCH_INVOKE(arg0)
-#define	AP_GET_MGMT_ITEMS_DISPATCH_INVOKE_ENABLED() (0)
-#define	AP_GET_MGMT_ITEMS_ENTRY()
-#define	AP_GET_MGMT_ITEMS_ENTRY_ENABLED() (0)
-#define	AP_GET_MGMT_ITEMS_RETURN(arg0)
-#define	AP_GET_MGMT_ITEMS_RETURN_ENABLED() (0)
-#define	AP_GET_SUEXEC_IDENTITY_DISPATCH_COMPLETE(arg0, arg1)
-#define	AP_GET_SUEXEC_IDENTITY_DISPATCH_COMPLETE_ENABLED() (0)
-#define	AP_GET_SUEXEC_IDENTITY_DISPATCH_INVOKE(arg0)
-#define	AP_GET_SUEXEC_IDENTITY_DISPATCH_INVOKE_ENABLED() (0)
-#define	AP_GET_SUEXEC_IDENTITY_ENTRY()
-#define	AP_GET_SUEXEC_IDENTITY_ENTRY_ENABLED() (0)
-#define	AP_GET_SUEXEC_IDENTITY_RETURN(arg0)
-#define	AP_GET_SUEXEC_IDENTITY_RETURN_ENABLED() (0)
-#define	AP_HANDLER_DISPATCH_COMPLETE(arg0, arg1)
-#define	AP_HANDLER_DISPATCH_COMPLETE_ENABLED() (0)
-#define	AP_HANDLER_DISPATCH_INVOKE(arg0)
-#define	AP_HANDLER_DISPATCH_INVOKE_ENABLED() (0)
-#define	AP_HANDLER_ENTRY()
-#define	AP_HANDLER_ENTRY_ENABLED() (0)
-#define	AP_HANDLER_RETURN(arg0)
-#define	AP_HANDLER_RETURN_ENABLED() (0)
-#define	AP_HEADER_PARSER_DISPATCH_COMPLETE(arg0, arg1)
-#define	AP_HEADER_PARSER_DISPATCH_COMPLETE_ENABLED() (0)
-#define	AP_HEADER_PARSER_DISPATCH_INVOKE(arg0)
-#define	AP_HEADER_PARSER_DISPATCH_INVOKE_ENABLED() (0)
-#define	AP_HEADER_PARSER_ENTRY()
-#define	AP_HEADER_PARSER_ENTRY_ENABLED() (0)
-#define	AP_HEADER_PARSER_RETURN(arg0)
-#define	AP_HEADER_PARSER_RETURN_ENABLED() (0)
-#define	AP_HTTP_SCHEME_DISPATCH_COMPLETE(arg0, arg1)
-#define	AP_HTTP_SCHEME_DISPATCH_COMPLETE_ENABLED() (0)
-#define	AP_HTTP_SCHEME_DISPATCH_INVOKE(arg0)
-#define	AP_HTTP_SCHEME_DISPATCH_INVOKE_ENABLED() (0)
-#define	AP_HTTP_SCHEME_ENTRY()
-#define	AP_HTTP_SCHEME_ENTRY_ENABLED() (0)
-#define	AP_HTTP_SCHEME_RETURN(arg0)
-#define	AP_HTTP_SCHEME_RETURN_ENABLED() (0)
-#define	AP_INSERT_ALL_LIVEPROPS_DISPATCH_COMPLETE(arg0, arg1)
-#define	AP_INSERT_ALL_LIVEPROPS_DISPATCH_COMPLETE_ENABLED() (0)
-#define	AP_INSERT_ALL_LIVEPROPS_DISPATCH_INVOKE(arg0)
-#define	AP_INSERT_ALL_LIVEPROPS_DISPATCH_INVOKE_ENABLED() (0)
-#define	AP_INSERT_ALL_LIVEPROPS_ENTRY()
-#define	AP_INSERT_ALL_LIVEPROPS_ENTRY_ENABLED() (0)
-#define	AP_INSERT_ALL_LIVEPROPS_RETURN(arg0)
-#define	AP_INSERT_ALL_LIVEPROPS_RETURN_ENABLED() (0)
-#define	AP_INSERT_ERROR_FILTER_DISPATCH_COMPLETE(arg0, arg1)
-#define	AP_INSERT_ERROR_FILTER_DISPATCH_COMPLETE_ENABLED() (0)
-#define	AP_INSERT_ERROR_FILTER_DISPATCH_INVOKE(arg0)
-#define	AP_INSERT_ERROR_FILTER_DISPATCH_INVOKE_ENABLED() (0)
-#define	AP_INSERT_ERROR_FILTER_ENTRY()
-#define	AP_INSERT_ERROR_FILTER_ENTRY_ENABLED() (0)
-#define	AP_INSERT_ERROR_FILTER_RETURN(arg0)
-#define	AP_INSERT_ERROR_FILTER_RETURN_ENABLED() (0)
-#define	AP_INSERT_FILTER_DISPATCH_COMPLETE(arg0, arg1)
-#define	AP_INSERT_FILTER_DISPATCH_COMPLETE_ENABLED() (0)
-#define	AP_INSERT_FILTER_DISPATCH_INVOKE(arg0)
-#define	AP_INSERT_FILTER_DISPATCH_INVOKE_ENABLED() (0)
-#define	AP_INSERT_FILTER_ENTRY()
-#define	AP_INSERT_FILTER_ENTRY_ENABLED() (0)
-#define	AP_INSERT_FILTER_RETURN(arg0)
-#define	AP_INSERT_FILTER_RETURN_ENABLED() (0)
-#define	AP_INTERNAL_REDIRECT(arg0, arg1)
-#define	AP_INTERNAL_REDIRECT_ENABLED() (0)
-#define	AP_LOG_TRANSACTION_DISPATCH_COMPLETE(arg0, arg1)
-#define	AP_LOG_TRANSACTION_DISPATCH_COMPLETE_ENABLED() (0)
-#define	AP_LOG_TRANSACTION_DISPATCH_INVOKE(arg0)
-#define	AP_LOG_TRANSACTION_DISPATCH_INVOKE_ENABLED() (0)
-#define	AP_LOG_TRANSACTION_ENTRY()
-#define	AP_LOG_TRANSACTION_ENTRY_ENABLED() (0)
-#define	AP_LOG_TRANSACTION_RETURN(arg0)
-#define	AP_LOG_TRANSACTION_RETURN_ENABLED() (0)
-#define	AP_MAP_TO_STORAGE_DISPATCH_COMPLETE(arg0, arg1)
-#define	AP_MAP_TO_STORAGE_DISPATCH_COMPLETE_ENABLED() (0)
-#define	AP_MAP_TO_STORAGE_DISPATCH_INVOKE(arg0)
-#define	AP_MAP_TO_STORAGE_DISPATCH_INVOKE_ENABLED() (0)
-#define	AP_MAP_TO_STORAGE_ENTRY()
-#define	AP_MAP_TO_STORAGE_ENTRY_ENABLED() (0)
-#define	AP_MAP_TO_STORAGE_RETURN(arg0)
-#define	AP_MAP_TO_STORAGE_RETURN_ENABLED() (0)
-#define	AP_MONITOR_DISPATCH_COMPLETE(arg0, arg1)
-#define	AP_MONITOR_DISPATCH_COMPLETE_ENABLED() (0)
-#define	AP_MONITOR_DISPATCH_INVOKE(arg0)
-#define	AP_MONITOR_DISPATCH_INVOKE_ENABLED() (0)
-#define	AP_MONITOR_ENTRY()
-#define	AP_MONITOR_ENTRY_ENABLED() (0)
-#define	AP_MONITOR_RETURN(arg0)
-#define	AP_MONITOR_RETURN_ENABLED() (0)
-#define	AP_OPEN_LOGS_DISPATCH_COMPLETE(arg0, arg1)
-#define	AP_OPEN_LOGS_DISPATCH_COMPLETE_ENABLED() (0)
-#define	AP_OPEN_LOGS_DISPATCH_INVOKE(arg0)
-#define	AP_OPEN_LOGS_DISPATCH_INVOKE_ENABLED() (0)
-#define	AP_OPEN_LOGS_ENTRY()
-#define	AP_OPEN_LOGS_ENTRY_ENABLED() (0)
-#define	AP_OPEN_LOGS_RETURN(arg0)
-#define	AP_OPEN_LOGS_RETURN_ENABLED() (0)
-#define	AP_OPTIONAL_FN_RETRIEVE_DISPATCH_COMPLETE(arg0, arg1)
-#define	AP_OPTIONAL_FN_RETRIEVE_DISPATCH_COMPLETE_ENABLED() (0)
-#define	AP_OPTIONAL_FN_RETRIEVE_DISPATCH_INVOKE(arg0)
-#define	AP_OPTIONAL_FN_RETRIEVE_DISPATCH_INVOKE_ENABLED() (0)
-#define	AP_OPTIONAL_FN_RETRIEVE_ENTRY()
-#define	AP_OPTIONAL_FN_RETRIEVE_ENTRY_ENABLED() (0)
-#define	AP_OPTIONAL_FN_RETRIEVE_RETURN(arg0)
-#define	AP_OPTIONAL_FN_RETRIEVE_RETURN_ENABLED() (0)
-#define	AP_POST_CONFIG_DISPATCH_COMPLETE(arg0, arg1)
-#define	AP_POST_CONFIG_DISPATCH_COMPLETE_ENABLED() (0)
-#define	AP_POST_CONFIG_DISPATCH_INVOKE(arg0)
-#define	AP_POST_CONFIG_DISPATCH_INVOKE_ENABLED() (0)
-#define	AP_POST_CONFIG_ENTRY()
-#define	AP_POST_CONFIG_ENTRY_ENABLED() (0)
-#define	AP_POST_CONFIG_RETURN(arg0)
-#define	AP_POST_CONFIG_RETURN_ENABLED() (0)
-#define	AP_POST_READ_REQUEST_DISPATCH_COMPLETE(arg0, arg1)
-#define	AP_POST_READ_REQUEST_DISPATCH_COMPLETE_ENABLED() (0)
-#define	AP_POST_READ_REQUEST_DISPATCH_INVOKE(arg0)
-#define	AP_POST_READ_REQUEST_DISPATCH_INVOKE_ENABLED() (0)
-#define	AP_POST_READ_REQUEST_ENTRY()
-#define	AP_POST_READ_REQUEST_ENTRY_ENABLED() (0)
-#define	AP_POST_READ_REQUEST_RETURN(arg0)
-#define	AP_POST_READ_REQUEST_RETURN_ENABLED() (0)
-#define	AP_POST_REQUEST_DISPATCH_COMPLETE(arg0, arg1)
-#define	AP_POST_REQUEST_DISPATCH_COMPLETE_ENABLED() (0)
-#define	AP_POST_REQUEST_DISPATCH_INVOKE(arg0)
-#define	AP_POST_REQUEST_DISPATCH_INVOKE_ENABLED() (0)
-#define	AP_POST_REQUEST_ENTRY()
-#define	AP_POST_REQUEST_ENTRY_ENABLED() (0)
-#define	AP_POST_REQUEST_RETURN(arg0)
-#define	AP_POST_REQUEST_RETURN_ENABLED() (0)
-#define	AP_PRE_CONFIG_DISPATCH_COMPLETE(arg0, arg1)
-#define	AP_PRE_CONFIG_DISPATCH_COMPLETE_ENABLED() (0)
-#define	AP_PRE_CONFIG_DISPATCH_INVOKE(arg0)
-#define	AP_PRE_CONFIG_DISPATCH_INVOKE_ENABLED() (0)
-#define	AP_PRE_CONFIG_ENTRY()
-#define	AP_PRE_CONFIG_ENTRY_ENABLED() (0)
-#define	AP_PRE_CONFIG_RETURN(arg0)
-#define	AP_PRE_CONFIG_RETURN_ENABLED() (0)
-#define	AP_PRE_CONNECTION_DISPATCH_COMPLETE(arg0, arg1)
-#define	AP_PRE_CONNECTION_DISPATCH_COMPLETE_ENABLED() (0)
-#define	AP_PRE_CONNECTION_DISPATCH_INVOKE(arg0)
-#define	AP_PRE_CONNECTION_DISPATCH_INVOKE_ENABLED() (0)
-#define	AP_PRE_CONNECTION_ENTRY()
-#define	AP_PRE_CONNECTION_ENTRY_ENABLED() (0)
-#define	AP_PRE_CONNECTION_RETURN(arg0)
-#define	AP_PRE_CONNECTION_RETURN_ENABLED() (0)
-#define	AP_PRE_MPM_DISPATCH_COMPLETE(arg0, arg1)
-#define	AP_PRE_MPM_DISPATCH_COMPLETE_ENABLED() (0)
-#define	AP_PRE_MPM_DISPATCH_INVOKE(arg0)
-#define	AP_PRE_MPM_DISPATCH_INVOKE_ENABLED() (0)
-#define	AP_PRE_MPM_ENTRY()
-#define	AP_PRE_MPM_ENTRY_ENABLED() (0)
-#define	AP_PRE_MPM_RETURN(arg0)
-#define	AP_PRE_MPM_RETURN_ENABLED() (0)
-#define	AP_PRE_REQUEST_DISPATCH_COMPLETE(arg0, arg1)
-#define	AP_PRE_REQUEST_DISPATCH_COMPLETE_ENABLED() (0)
-#define	AP_PRE_REQUEST_DISPATCH_INVOKE(arg0)
-#define	AP_PRE_REQUEST_DISPATCH_INVOKE_ENABLED() (0)
-#define	AP_PRE_REQUEST_ENTRY()
-#define	AP_PRE_REQUEST_ENTRY_ENABLED() (0)
-#define	AP_PRE_REQUEST_RETURN(arg0)
-#define	AP_PRE_REQUEST_RETURN_ENABLED() (0)
-#define	AP_PROCESS_REQUEST_ENTRY(arg0, arg1)
-#define	AP_PROCESS_REQUEST_ENTRY_ENABLED() (0)
-#define	AP_PROCESS_REQUEST_RETURN(arg0, arg1, arg2)
-#define	AP_PROCESS_REQUEST_RETURN_ENABLED() (0)
-#define	AP_PROCESS_CONNECTION_DISPATCH_COMPLETE(arg0, arg1)
-#define	AP_PROCESS_CONNECTION_DISPATCH_COMPLETE_ENABLED() (0)
-#define	AP_PROCESS_CONNECTION_DISPATCH_INVOKE(arg0)
-#define	AP_PROCESS_CONNECTION_DISPATCH_INVOKE_ENABLED() (0)
-#define	AP_PROCESS_CONNECTION_ENTRY()
-#define	AP_PROCESS_CONNECTION_ENTRY_ENABLED() (0)
-#define	AP_PROCESS_CONNECTION_RETURN(arg0)
-#define	AP_PROCESS_CONNECTION_RETURN_ENABLED() (0)
-#define	AP_PROXY_RUN(arg0, arg1, arg2, arg3, arg4)
-#define	AP_PROXY_RUN_ENABLED() (0)
-#define	AP_PROXY_RUN_FINISHED(arg0, arg1, arg2)
-#define	AP_PROXY_RUN_FINISHED_ENABLED() (0)
-#define	AP_QUICK_HANDLER_DISPATCH_COMPLETE(arg0, arg1)
-#define	AP_QUICK_HANDLER_DISPATCH_COMPLETE_ENABLED() (0)
-#define	AP_QUICK_HANDLER_DISPATCH_INVOKE(arg0)
-#define	AP_QUICK_HANDLER_DISPATCH_INVOKE_ENABLED() (0)
-#define	AP_QUICK_HANDLER_ENTRY()
-#define	AP_QUICK_HANDLER_ENTRY_ENABLED() (0)
-#define	AP_QUICK_HANDLER_RETURN(arg0)
-#define	AP_QUICK_HANDLER_RETURN_ENABLED() (0)
-#define	AP_READ_REQUEST_ENTRY(arg0, arg1)
-#define	AP_READ_REQUEST_ENTRY_ENABLED() (0)
-#define	AP_READ_REQUEST_FAILURE(arg0)
-#define	AP_READ_REQUEST_FAILURE_ENABLED() (0)
-#define	AP_READ_REQUEST_SUCCESS(arg0, arg1, arg2, arg3, arg4)
-#define	AP_READ_REQUEST_SUCCESS_ENABLED() (0)
-#define	AP_REWRITE_LOG(arg0, arg1, arg2, arg3, arg4)
-#define	AP_REWRITE_LOG_ENABLED() (0)
-#define	AP_SCHEME_HANDLER_DISPATCH_COMPLETE(arg0, arg1)
-#define	AP_SCHEME_HANDLER_DISPATCH_COMPLETE_ENABLED() (0)
-#define	AP_SCHEME_HANDLER_DISPATCH_INVOKE(arg0)
-#define	AP_SCHEME_HANDLER_DISPATCH_INVOKE_ENABLED() (0)
-#define	AP_SCHEME_HANDLER_ENTRY()
-#define	AP_SCHEME_HANDLER_ENTRY_ENABLED() (0)
-#define	AP_SCHEME_HANDLER_RETURN(arg0)
-#define	AP_SCHEME_HANDLER_RETURN_ENABLED() (0)
-#define	AP_TEST_CONFIG_DISPATCH_COMPLETE(arg0, arg1)
-#define	AP_TEST_CONFIG_DISPATCH_COMPLETE_ENABLED() (0)
-#define	AP_TEST_CONFIG_DISPATCH_INVOKE(arg0)
-#define	AP_TEST_CONFIG_DISPATCH_INVOKE_ENABLED() (0)
-#define	AP_TEST_CONFIG_ENTRY()
-#define	AP_TEST_CONFIG_ENTRY_ENABLED() (0)
-#define	AP_TEST_CONFIG_RETURN(arg0)
-#define	AP_TEST_CONFIG_RETURN_ENABLED() (0)
-#define	AP_TRANSLATE_NAME_DISPATCH_COMPLETE(arg0, arg1)
-#define	AP_TRANSLATE_NAME_DISPATCH_COMPLETE_ENABLED() (0)
-#define	AP_TRANSLATE_NAME_DISPATCH_INVOKE(arg0)
-#define	AP_TRANSLATE_NAME_DISPATCH_INVOKE_ENABLED() (0)
-#define	AP_TRANSLATE_NAME_ENTRY()
-#define	AP_TRANSLATE_NAME_ENTRY_ENABLED() (0)
-#define	AP_TRANSLATE_NAME_RETURN(arg0)
-#define	AP_TRANSLATE_NAME_RETURN_ENABLED() (0)
-#define	AP_TYPE_CHECKER_DISPATCH_COMPLETE(arg0, arg1)
-#define	AP_TYPE_CHECKER_DISPATCH_COMPLETE_ENABLED() (0)
-#define	AP_TYPE_CHECKER_DISPATCH_INVOKE(arg0)
-#define	AP_TYPE_CHECKER_DISPATCH_INVOKE_ENABLED() (0)
-#define	AP_TYPE_CHECKER_ENTRY()
-#define	AP_TYPE_CHECKER_ENTRY_ENABLED() (0)
-#define	AP_TYPE_CHECKER_RETURN(arg0)
-#define	AP_TYPE_CHECKER_RETURN_ENABLED() (0)
+#define AP_ACCESS_CHECKER_DISPATCH_COMPLETE(arg0, arg1)
+#define AP_ACCESS_CHECKER_DISPATCH_COMPLETE_ENABLED() (0)
+#define AP_ACCESS_CHECKER_DISPATCH_INVOKE(arg0)
+#define AP_ACCESS_CHECKER_DISPATCH_INVOKE_ENABLED() (0)
+#define AP_ACCESS_CHECKER_ENTRY()
+#define AP_ACCESS_CHECKER_ENTRY_ENABLED() (0)
+#define AP_ACCESS_CHECKER_RETURN(arg0)
+#define AP_ACCESS_CHECKER_RETURN_ENABLED() (0)
+#define AP_AUTH_CHECKER_DISPATCH_COMPLETE(arg0, arg1)
+#define AP_AUTH_CHECKER_DISPATCH_COMPLETE_ENABLED() (0)
+#define AP_AUTH_CHECKER_DISPATCH_INVOKE(arg0)
+#define AP_AUTH_CHECKER_DISPATCH_INVOKE_ENABLED() (0)
+#define AP_AUTH_CHECKER_ENTRY()
+#define AP_AUTH_CHECKER_ENTRY_ENABLED() (0)
+#define AP_AUTH_CHECKER_RETURN(arg0)
+#define AP_AUTH_CHECKER_RETURN_ENABLED() (0)
+#define AP_CANON_HANDLER_DISPATCH_COMPLETE(arg0, arg1)
+#define AP_CANON_HANDLER_DISPATCH_COMPLETE_ENABLED() (0)
+#define AP_CANON_HANDLER_DISPATCH_INVOKE(arg0)
+#define AP_CANON_HANDLER_DISPATCH_INVOKE_ENABLED() (0)
+#define AP_CANON_HANDLER_ENTRY()
+#define AP_CANON_HANDLER_ENTRY_ENABLED() (0)
+#define AP_CANON_HANDLER_RETURN(arg0)
+#define AP_CANON_HANDLER_RETURN_ENABLED() (0)
+#define AP_CHECK_USER_ID_DISPATCH_COMPLETE(arg0, arg1)
+#define AP_CHECK_USER_ID_DISPATCH_COMPLETE_ENABLED() (0)
+#define AP_CHECK_USER_ID_DISPATCH_INVOKE(arg0)
+#define AP_CHECK_USER_ID_DISPATCH_INVOKE_ENABLED() (0)
+#define AP_CHECK_USER_ID_ENTRY()
+#define AP_CHECK_USER_ID_ENTRY_ENABLED() (0)
+#define AP_CHECK_USER_ID_RETURN(arg0)
+#define AP_CHECK_USER_ID_RETURN_ENABLED() (0)
+#define AP_CHILD_INIT_DISPATCH_COMPLETE(arg0, arg1)
+#define AP_CHILD_INIT_DISPATCH_COMPLETE_ENABLED() (0)
+#define AP_CHILD_INIT_DISPATCH_INVOKE(arg0)
+#define AP_CHILD_INIT_DISPATCH_INVOKE_ENABLED() (0)
+#define AP_CHILD_INIT_ENTRY()
+#define AP_CHILD_INIT_ENTRY_ENABLED() (0)
+#define AP_CHILD_INIT_RETURN(arg0)
+#define AP_CHILD_INIT_RETURN_ENABLED() (0)
+#define AP_CREATE_CONNECTION_DISPATCH_COMPLETE(arg0, arg1)
+#define AP_CREATE_CONNECTION_DISPATCH_COMPLETE_ENABLED() (0)
+#define AP_CREATE_CONNECTION_DISPATCH_INVOKE(arg0)
+#define AP_CREATE_CONNECTION_DISPATCH_INVOKE_ENABLED() (0)
+#define AP_CREATE_CONNECTION_ENTRY()
+#define AP_CREATE_CONNECTION_ENTRY_ENABLED() (0)
+#define AP_CREATE_CONNECTION_RETURN(arg0)
+#define AP_CREATE_CONNECTION_RETURN_ENABLED() (0)
+#define AP_CREATE_REQUEST_DISPATCH_COMPLETE(arg0, arg1)
+#define AP_CREATE_REQUEST_DISPATCH_COMPLETE_ENABLED() (0)
+#define AP_CREATE_REQUEST_DISPATCH_INVOKE(arg0)
+#define AP_CREATE_REQUEST_DISPATCH_INVOKE_ENABLED() (0)
+#define AP_CREATE_REQUEST_ENTRY()
+#define AP_CREATE_REQUEST_ENTRY_ENABLED() (0)
+#define AP_CREATE_REQUEST_RETURN(arg0)
+#define AP_CREATE_REQUEST_RETURN_ENABLED() (0)
+#define AP_DEFAULT_PORT_DISPATCH_COMPLETE(arg0, arg1)
+#define AP_DEFAULT_PORT_DISPATCH_COMPLETE_ENABLED() (0)
+#define AP_DEFAULT_PORT_DISPATCH_INVOKE(arg0)
+#define AP_DEFAULT_PORT_DISPATCH_INVOKE_ENABLED() (0)
+#define AP_DEFAULT_PORT_ENTRY()
+#define AP_DEFAULT_PORT_ENTRY_ENABLED() (0)
+#define AP_DEFAULT_PORT_RETURN(arg0)
+#define AP_DEFAULT_PORT_RETURN_ENABLED() (0)
+#define AP_ERROR_LOG_DISPATCH_COMPLETE(arg0, arg1)
+#define AP_ERROR_LOG_DISPATCH_COMPLETE_ENABLED() (0)
+#define AP_ERROR_LOG_DISPATCH_INVOKE(arg0)
+#define AP_ERROR_LOG_DISPATCH_INVOKE_ENABLED() (0)
+#define AP_ERROR_LOG_ENTRY()
+#define AP_ERROR_LOG_ENTRY_ENABLED() (0)
+#define AP_ERROR_LOG_RETURN(arg0)
+#define AP_ERROR_LOG_RETURN_ENABLED() (0)
+#define AP_FIND_LIVEPROP_DISPATCH_COMPLETE(arg0, arg1)
+#define AP_FIND_LIVEPROP_DISPATCH_COMPLETE_ENABLED() (0)
+#define AP_FIND_LIVEPROP_DISPATCH_INVOKE(arg0)
+#define AP_FIND_LIVEPROP_DISPATCH_INVOKE_ENABLED() (0)
+#define AP_FIND_LIVEPROP_ENTRY()
+#define AP_FIND_LIVEPROP_ENTRY_ENABLED() (0)
+#define AP_FIND_LIVEPROP_RETURN(arg0)
+#define AP_FIND_LIVEPROP_RETURN_ENABLED() (0)
+#define AP_FIXUPS_DISPATCH_COMPLETE(arg0, arg1)
+#define AP_FIXUPS_DISPATCH_COMPLETE_ENABLED() (0)
+#define AP_FIXUPS_DISPATCH_INVOKE(arg0)
+#define AP_FIXUPS_DISPATCH_INVOKE_ENABLED() (0)
+#define AP_FIXUPS_ENTRY()
+#define AP_FIXUPS_ENTRY_ENABLED() (0)
+#define AP_FIXUPS_RETURN(arg0)
+#define AP_FIXUPS_RETURN_ENABLED() (0)
+#define AP_GATHER_PROPSETS_DISPATCH_COMPLETE(arg0, arg1)
+#define AP_GATHER_PROPSETS_DISPATCH_COMPLETE_ENABLED() (0)
+#define AP_GATHER_PROPSETS_DISPATCH_INVOKE(arg0)
+#define AP_GATHER_PROPSETS_DISPATCH_INVOKE_ENABLED() (0)
+#define AP_GATHER_PROPSETS_ENTRY()
+#define AP_GATHER_PROPSETS_ENTRY_ENABLED() (0)
+#define AP_GATHER_PROPSETS_RETURN(arg0)
+#define AP_GATHER_PROPSETS_RETURN_ENABLED() (0)
+#define AP_GET_MGMT_ITEMS_DISPATCH_COMPLETE(arg0, arg1)
+#define AP_GET_MGMT_ITEMS_DISPATCH_COMPLETE_ENABLED() (0)
+#define AP_GET_MGMT_ITEMS_DISPATCH_INVOKE(arg0)
+#define AP_GET_MGMT_ITEMS_DISPATCH_INVOKE_ENABLED() (0)
+#define AP_GET_MGMT_ITEMS_ENTRY()
+#define AP_GET_MGMT_ITEMS_ENTRY_ENABLED() (0)
+#define AP_GET_MGMT_ITEMS_RETURN(arg0)
+#define AP_GET_MGMT_ITEMS_RETURN_ENABLED() (0)
+#define AP_GET_SUEXEC_IDENTITY_DISPATCH_COMPLETE(arg0, arg1)
+#define AP_GET_SUEXEC_IDENTITY_DISPATCH_COMPLETE_ENABLED() (0)
+#define AP_GET_SUEXEC_IDENTITY_DISPATCH_INVOKE(arg0)
+#define AP_GET_SUEXEC_IDENTITY_DISPATCH_INVOKE_ENABLED() (0)
+#define AP_GET_SUEXEC_IDENTITY_ENTRY()
+#define AP_GET_SUEXEC_IDENTITY_ENTRY_ENABLED() (0)
+#define AP_GET_SUEXEC_IDENTITY_RETURN(arg0)
+#define AP_GET_SUEXEC_IDENTITY_RETURN_ENABLED() (0)
+#define AP_HANDLER_DISPATCH_COMPLETE(arg0, arg1)
+#define AP_HANDLER_DISPATCH_COMPLETE_ENABLED() (0)
+#define AP_HANDLER_DISPATCH_INVOKE(arg0)
+#define AP_HANDLER_DISPATCH_INVOKE_ENABLED() (0)
+#define AP_HANDLER_ENTRY()
+#define AP_HANDLER_ENTRY_ENABLED() (0)
+#define AP_HANDLER_RETURN(arg0)
+#define AP_HANDLER_RETURN_ENABLED() (0)
+#define AP_HEADER_PARSER_DISPATCH_COMPLETE(arg0, arg1)
+#define AP_HEADER_PARSER_DISPATCH_COMPLETE_ENABLED() (0)
+#define AP_HEADER_PARSER_DISPATCH_INVOKE(arg0)
+#define AP_HEADER_PARSER_DISPATCH_INVOKE_ENABLED() (0)
+#define AP_HEADER_PARSER_ENTRY()
+#define AP_HEADER_PARSER_ENTRY_ENABLED() (0)
+#define AP_HEADER_PARSER_RETURN(arg0)
+#define AP_HEADER_PARSER_RETURN_ENABLED() (0)
+#define AP_HTTP_SCHEME_DISPATCH_COMPLETE(arg0, arg1)
+#define AP_HTTP_SCHEME_DISPATCH_COMPLETE_ENABLED() (0)
+#define AP_HTTP_SCHEME_DISPATCH_INVOKE(arg0)
+#define AP_HTTP_SCHEME_DISPATCH_INVOKE_ENABLED() (0)
+#define AP_HTTP_SCHEME_ENTRY()
+#define AP_HTTP_SCHEME_ENTRY_ENABLED() (0)
+#define AP_HTTP_SCHEME_RETURN(arg0)
+#define AP_HTTP_SCHEME_RETURN_ENABLED() (0)
+#define AP_INSERT_ALL_LIVEPROPS_DISPATCH_COMPLETE(arg0, arg1)
+#define AP_INSERT_ALL_LIVEPROPS_DISPATCH_COMPLETE_ENABLED() (0)
+#define AP_INSERT_ALL_LIVEPROPS_DISPATCH_INVOKE(arg0)
+#define AP_INSERT_ALL_LIVEPROPS_DISPATCH_INVOKE_ENABLED() (0)
+#define AP_INSERT_ALL_LIVEPROPS_ENTRY()
+#define AP_INSERT_ALL_LIVEPROPS_ENTRY_ENABLED() (0)
+#define AP_INSERT_ALL_LIVEPROPS_RETURN(arg0)
+#define AP_INSERT_ALL_LIVEPROPS_RETURN_ENABLED() (0)
+#define AP_INSERT_ERROR_FILTER_DISPATCH_COMPLETE(arg0, arg1)
+#define AP_INSERT_ERROR_FILTER_DISPATCH_COMPLETE_ENABLED() (0)
+#define AP_INSERT_ERROR_FILTER_DISPATCH_INVOKE(arg0)
+#define AP_INSERT_ERROR_FILTER_DISPATCH_INVOKE_ENABLED() (0)
+#define AP_INSERT_ERROR_FILTER_ENTRY()
+#define AP_INSERT_ERROR_FILTER_ENTRY_ENABLED() (0)
+#define AP_INSERT_ERROR_FILTER_RETURN(arg0)
+#define AP_INSERT_ERROR_FILTER_RETURN_ENABLED() (0)
+#define AP_INSERT_FILTER_DISPATCH_COMPLETE(arg0, arg1)
+#define AP_INSERT_FILTER_DISPATCH_COMPLETE_ENABLED() (0)
+#define AP_INSERT_FILTER_DISPATCH_INVOKE(arg0)
+#define AP_INSERT_FILTER_DISPATCH_INVOKE_ENABLED() (0)
+#define AP_INSERT_FILTER_ENTRY()
+#define AP_INSERT_FILTER_ENTRY_ENABLED() (0)
+#define AP_INSERT_FILTER_RETURN(arg0)
+#define AP_INSERT_FILTER_RETURN_ENABLED() (0)
+#define AP_INTERNAL_REDIRECT(arg0, arg1)
+#define AP_INTERNAL_REDIRECT_ENABLED() (0)
+#define AP_LOG_TRANSACTION_DISPATCH_COMPLETE(arg0, arg1)
+#define AP_LOG_TRANSACTION_DISPATCH_COMPLETE_ENABLED() (0)
+#define AP_LOG_TRANSACTION_DISPATCH_INVOKE(arg0)
+#define AP_LOG_TRANSACTION_DISPATCH_INVOKE_ENABLED() (0)
+#define AP_LOG_TRANSACTION_ENTRY()
+#define AP_LOG_TRANSACTION_ENTRY_ENABLED() (0)
+#define AP_LOG_TRANSACTION_RETURN(arg0)
+#define AP_LOG_TRANSACTION_RETURN_ENABLED() (0)
+#define AP_MAP_TO_STORAGE_DISPATCH_COMPLETE(arg0, arg1)
+#define AP_MAP_TO_STORAGE_DISPATCH_COMPLETE_ENABLED() (0)
+#define AP_MAP_TO_STORAGE_DISPATCH_INVOKE(arg0)
+#define AP_MAP_TO_STORAGE_DISPATCH_INVOKE_ENABLED() (0)
+#define AP_MAP_TO_STORAGE_ENTRY()
+#define AP_MAP_TO_STORAGE_ENTRY_ENABLED() (0)
+#define AP_MAP_TO_STORAGE_RETURN(arg0)
+#define AP_MAP_TO_STORAGE_RETURN_ENABLED() (0)
+#define AP_MONITOR_DISPATCH_COMPLETE(arg0, arg1)
+#define AP_MONITOR_DISPATCH_COMPLETE_ENABLED() (0)
+#define AP_MONITOR_DISPATCH_INVOKE(arg0)
+#define AP_MONITOR_DISPATCH_INVOKE_ENABLED() (0)
+#define AP_MONITOR_ENTRY()
+#define AP_MONITOR_ENTRY_ENABLED() (0)
+#define AP_MONITOR_RETURN(arg0)
+#define AP_MONITOR_RETURN_ENABLED() (0)
+#define AP_OPEN_LOGS_DISPATCH_COMPLETE(arg0, arg1)
+#define AP_OPEN_LOGS_DISPATCH_COMPLETE_ENABLED() (0)
+#define AP_OPEN_LOGS_DISPATCH_INVOKE(arg0)
+#define AP_OPEN_LOGS_DISPATCH_INVOKE_ENABLED() (0)
+#define AP_OPEN_LOGS_ENTRY()
+#define AP_OPEN_LOGS_ENTRY_ENABLED() (0)
+#define AP_OPEN_LOGS_RETURN(arg0)
+#define AP_OPEN_LOGS_RETURN_ENABLED() (0)
+#define AP_OPTIONAL_FN_RETRIEVE_DISPATCH_COMPLETE(arg0, arg1)
+#define AP_OPTIONAL_FN_RETRIEVE_DISPATCH_COMPLETE_ENABLED() (0)
+#define AP_OPTIONAL_FN_RETRIEVE_DISPATCH_INVOKE(arg0)
+#define AP_OPTIONAL_FN_RETRIEVE_DISPATCH_INVOKE_ENABLED() (0)
+#define AP_OPTIONAL_FN_RETRIEVE_ENTRY()
+#define AP_OPTIONAL_FN_RETRIEVE_ENTRY_ENABLED() (0)
+#define AP_OPTIONAL_FN_RETRIEVE_RETURN(arg0)
+#define AP_OPTIONAL_FN_RETRIEVE_RETURN_ENABLED() (0)
+#define AP_POST_CONFIG_DISPATCH_COMPLETE(arg0, arg1)
+#define AP_POST_CONFIG_DISPATCH_COMPLETE_ENABLED() (0)
+#define AP_POST_CONFIG_DISPATCH_INVOKE(arg0)
+#define AP_POST_CONFIG_DISPATCH_INVOKE_ENABLED() (0)
+#define AP_POST_CONFIG_ENTRY()
+#define AP_POST_CONFIG_ENTRY_ENABLED() (0)
+#define AP_POST_CONFIG_RETURN(arg0)
+#define AP_POST_CONFIG_RETURN_ENABLED() (0)
+#define AP_POST_READ_REQUEST_DISPATCH_COMPLETE(arg0, arg1)
+#define AP_POST_READ_REQUEST_DISPATCH_COMPLETE_ENABLED() (0)
+#define AP_POST_READ_REQUEST_DISPATCH_INVOKE(arg0)
+#define AP_POST_READ_REQUEST_DISPATCH_INVOKE_ENABLED() (0)
+#define AP_POST_READ_REQUEST_ENTRY()
+#define AP_POST_READ_REQUEST_ENTRY_ENABLED() (0)
+#define AP_POST_READ_REQUEST_RETURN(arg0)
+#define AP_POST_READ_REQUEST_RETURN_ENABLED() (0)
+#define AP_POST_REQUEST_DISPATCH_COMPLETE(arg0, arg1)
+#define AP_POST_REQUEST_DISPATCH_COMPLETE_ENABLED() (0)
+#define AP_POST_REQUEST_DISPATCH_INVOKE(arg0)
+#define AP_POST_REQUEST_DISPATCH_INVOKE_ENABLED() (0)
+#define AP_POST_REQUEST_ENTRY()
+#define AP_POST_REQUEST_ENTRY_ENABLED() (0)
+#define AP_POST_REQUEST_RETURN(arg0)
+#define AP_POST_REQUEST_RETURN_ENABLED() (0)
+#define AP_PRE_CONFIG_DISPATCH_COMPLETE(arg0, arg1)
+#define AP_PRE_CONFIG_DISPATCH_COMPLETE_ENABLED() (0)
+#define AP_PRE_CONFIG_DISPATCH_INVOKE(arg0)
+#define AP_PRE_CONFIG_DISPATCH_INVOKE_ENABLED() (0)
+#define AP_PRE_CONFIG_ENTRY()
+#define AP_PRE_CONFIG_ENTRY_ENABLED() (0)
+#define AP_PRE_CONFIG_RETURN(arg0)
+#define AP_PRE_CONFIG_RETURN_ENABLED() (0)
+#define AP_PRE_CONNECTION_DISPATCH_COMPLETE(arg0, arg1)
+#define AP_PRE_CONNECTION_DISPATCH_COMPLETE_ENABLED() (0)
+#define AP_PRE_CONNECTION_DISPATCH_INVOKE(arg0)
+#define AP_PRE_CONNECTION_DISPATCH_INVOKE_ENABLED() (0)
+#define AP_PRE_CONNECTION_ENTRY()
+#define AP_PRE_CONNECTION_ENTRY_ENABLED() (0)
+#define AP_PRE_CONNECTION_RETURN(arg0)
+#define AP_PRE_CONNECTION_RETURN_ENABLED() (0)
+#define AP_PRE_MPM_DISPATCH_COMPLETE(arg0, arg1)
+#define AP_PRE_MPM_DISPATCH_COMPLETE_ENABLED() (0)
+#define AP_PRE_MPM_DISPATCH_INVOKE(arg0)
+#define AP_PRE_MPM_DISPATCH_INVOKE_ENABLED() (0)
+#define AP_PRE_MPM_ENTRY()
+#define AP_PRE_MPM_ENTRY_ENABLED() (0)
+#define AP_PRE_MPM_RETURN(arg0)
+#define AP_PRE_MPM_RETURN_ENABLED() (0)
+#define AP_PRE_REQUEST_DISPATCH_COMPLETE(arg0, arg1)
+#define AP_PRE_REQUEST_DISPATCH_COMPLETE_ENABLED() (0)
+#define AP_PRE_REQUEST_DISPATCH_INVOKE(arg0)
+#define AP_PRE_REQUEST_DISPATCH_INVOKE_ENABLED() (0)
+#define AP_PRE_REQUEST_ENTRY()
+#define AP_PRE_REQUEST_ENTRY_ENABLED() (0)
+#define AP_PRE_REQUEST_RETURN(arg0)
+#define AP_PRE_REQUEST_RETURN_ENABLED() (0)
+#define AP_PROCESS_REQUEST_ENTRY(arg0, arg1)
+#define AP_PROCESS_REQUEST_ENTRY_ENABLED() (0)
+#define AP_PROCESS_REQUEST_RETURN(arg0, arg1, arg2)
+#define AP_PROCESS_REQUEST_RETURN_ENABLED() (0)
+#define AP_PROCESS_CONNECTION_DISPATCH_COMPLETE(arg0, arg1)
+#define AP_PROCESS_CONNECTION_DISPATCH_COMPLETE_ENABLED() (0)
+#define AP_PROCESS_CONNECTION_DISPATCH_INVOKE(arg0)
+#define AP_PROCESS_CONNECTION_DISPATCH_INVOKE_ENABLED() (0)
+#define AP_PROCESS_CONNECTION_ENTRY()
+#define AP_PROCESS_CONNECTION_ENTRY_ENABLED() (0)
+#define AP_PROCESS_CONNECTION_RETURN(arg0)
+#define AP_PROCESS_CONNECTION_RETURN_ENABLED() (0)
+#define AP_PROXY_RUN(arg0, arg1, arg2, arg3, arg4)
+#define AP_PROXY_RUN_ENABLED() (0)
+#define AP_PROXY_RUN_FINISHED(arg0, arg1, arg2)
+#define AP_PROXY_RUN_FINISHED_ENABLED() (0)
+#define AP_QUICK_HANDLER_DISPATCH_COMPLETE(arg0, arg1)
+#define AP_QUICK_HANDLER_DISPATCH_COMPLETE_ENABLED() (0)
+#define AP_QUICK_HANDLER_DISPATCH_INVOKE(arg0)
+#define AP_QUICK_HANDLER_DISPATCH_INVOKE_ENABLED() (0)
+#define AP_QUICK_HANDLER_ENTRY()
+#define AP_QUICK_HANDLER_ENTRY_ENABLED() (0)
+#define AP_QUICK_HANDLER_RETURN(arg0)
+#define AP_QUICK_HANDLER_RETURN_ENABLED() (0)
+#define AP_READ_REQUEST_ENTRY(arg0, arg1)
+#define AP_READ_REQUEST_ENTRY_ENABLED() (0)
+#define AP_READ_REQUEST_FAILURE(arg0)
+#define AP_READ_REQUEST_FAILURE_ENABLED() (0)
+#define AP_READ_REQUEST_SUCCESS(arg0, arg1, arg2, arg3, arg4)
+#define AP_READ_REQUEST_SUCCESS_ENABLED() (0)
+#define AP_REWRITE_LOG(arg0, arg1, arg2, arg3, arg4)
+#define AP_REWRITE_LOG_ENABLED() (0)
+#define AP_SCHEME_HANDLER_DISPATCH_COMPLETE(arg0, arg1)
+#define AP_SCHEME_HANDLER_DISPATCH_COMPLETE_ENABLED() (0)
+#define AP_SCHEME_HANDLER_DISPATCH_INVOKE(arg0)
+#define AP_SCHEME_HANDLER_DISPATCH_INVOKE_ENABLED() (0)
+#define AP_SCHEME_HANDLER_ENTRY()
+#define AP_SCHEME_HANDLER_ENTRY_ENABLED() (0)
+#define AP_SCHEME_HANDLER_RETURN(arg0)
+#define AP_SCHEME_HANDLER_RETURN_ENABLED() (0)
+#define AP_TEST_CONFIG_DISPATCH_COMPLETE(arg0, arg1)
+#define AP_TEST_CONFIG_DISPATCH_COMPLETE_ENABLED() (0)
+#define AP_TEST_CONFIG_DISPATCH_INVOKE(arg0)
+#define AP_TEST_CONFIG_DISPATCH_INVOKE_ENABLED() (0)
+#define AP_TEST_CONFIG_ENTRY()
+#define AP_TEST_CONFIG_ENTRY_ENABLED() (0)
+#define AP_TEST_CONFIG_RETURN(arg0)
+#define AP_TEST_CONFIG_RETURN_ENABLED() (0)
+#define AP_TRANSLATE_NAME_DISPATCH_COMPLETE(arg0, arg1)
+#define AP_TRANSLATE_NAME_DISPATCH_COMPLETE_ENABLED() (0)
+#define AP_TRANSLATE_NAME_DISPATCH_INVOKE(arg0)
+#define AP_TRANSLATE_NAME_DISPATCH_INVOKE_ENABLED() (0)
+#define AP_TRANSLATE_NAME_ENTRY()
+#define AP_TRANSLATE_NAME_ENTRY_ENABLED() (0)
+#define AP_TRANSLATE_NAME_RETURN(arg0)
+#define AP_TRANSLATE_NAME_RETURN_ENABLED() (0)
+#define AP_TYPE_CHECKER_DISPATCH_COMPLETE(arg0, arg1)
+#define AP_TYPE_CHECKER_DISPATCH_COMPLETE_ENABLED() (0)
+#define AP_TYPE_CHECKER_DISPATCH_INVOKE(arg0)
+#define AP_TYPE_CHECKER_DISPATCH_INVOKE_ENABLED() (0)
+#define AP_TYPE_CHECKER_ENTRY()
+#define AP_TYPE_CHECKER_ENTRY_ENABLED() (0)
+#define AP_TYPE_CHECKER_RETURN(arg0)
+#define AP_TYPE_CHECKER_RETURN_ENABLED() (0)
 
 #endif
 
diff --git a/include/http_connection.h b/include/http_connection.h
index c6eac58..2192507 100644
--- a/include/http_connection.h
+++ b/include/http_connection.h
@@ -145,5 +145,5 @@ AP_DECLARE(apr_bucket *) ap_bucket_eoc_create(apr_bucket_alloc_t *list);
 }
 #endif
 
-#endif	/* !APACHE_HTTP_REQUEST_H */
+#endif  /* !APACHE_HTTP_REQUEST_H */
 /** @} */
diff --git a/include/http_core.h b/include/http_core.h
index 493f9bd..fa214af 100644
--- a/include/http_core.h
+++ b/include/http_core.h
@@ -506,10 +506,10 @@ typedef struct {
                                    * ap_custom_response() */
 
     /* Hostname resolution etc */
-#define HOSTNAME_LOOKUP_OFF	0
-#define HOSTNAME_LOOKUP_ON	1
-#define HOSTNAME_LOOKUP_DOUBLE	2
-#define HOSTNAME_LOOKUP_UNSET	3
+#define HOSTNAME_LOOKUP_OFF     0
+#define HOSTNAME_LOOKUP_ON      1
+#define HOSTNAME_LOOKUP_DOUBLE  2
+#define HOSTNAME_LOOKUP_UNSET   3
     unsigned int hostname_lookups : 4;
 
     unsigned int content_md5 : 2;  /* calculate Content-MD5? */
@@ -924,5 +924,5 @@ AP_DECLARE(int) ap_state_query(int query_code);
 }
 #endif
 
-#endif	/* !APACHE_HTTP_CORE_H */
+#endif  /* !APACHE_HTTP_CORE_H */
 /** @} */
diff --git a/include/http_log.h b/include/http_log.h
index 248c8d0..6a1717b 100644
--- a/include/http_log.h
+++ b/include/http_log.h
@@ -85,7 +85,7 @@ extern "C" {
 /* APLOG_NOERRNO is ignored and should not be used.  It will be
  * removed in a future release of Apache.
  */
-#define APLOG_NOERRNO		(APLOG_LEVELMASK + 1)
+#define APLOG_NOERRNO           (APLOG_LEVELMASK + 1)
 
 /** Use APLOG_TOCLIENT on ap_log_rerror() to give content
  * handlers the option of including the error text in the
@@ -105,7 +105,7 @@ extern "C" {
 #define APLOG_STARTUP           ((APLOG_LEVELMASK + 1) * 4)
 
 #ifndef DEFAULT_LOGLEVEL
-#define DEFAULT_LOGLEVEL	APLOG_WARNING
+#define DEFAULT_LOGLEVEL        APLOG_WARNING
 #endif
 
 /**
@@ -659,5 +659,5 @@ AP_DECLARE_HOOK(int, generate_log_id,
 }
 #endif
 
-#endif	/* !APACHE_HTTP_LOG_H */
+#endif  /* !APACHE_HTTP_LOG_H */
 /** @} */
diff --git a/include/http_main.h b/include/http_main.h
index 68ecf27..22192db 100644
--- a/include/http_main.h
+++ b/include/http_main.h
@@ -79,5 +79,5 @@ APR_DECLARE_OPTIONAL_FN(int, ap_signal_server, (int *status, apr_pool_t *pool));
 }
 #endif
 
-#endif	/* !APACHE_HTTP_MAIN_H */
+#endif  /* !APACHE_HTTP_MAIN_H */
 /** @} */
diff --git a/include/http_protocol.h b/include/http_protocol.h
index 60fd578..77493de 100644
--- a/include/http_protocol.h
+++ b/include/http_protocol.h
@@ -257,7 +257,7 @@ AP_DECLARE(ap_method_list_t *) ap_make_method_list(apr_pool_t *p, int nelts);
  * @param   src  List to copy from
  */
 AP_DECLARE(void) ap_copy_method_list(ap_method_list_t *dest,
-				     ap_method_list_t *src);
+                                     ap_method_list_t *src);
 
 /**
  * Search for an HTTP method name in an ap_method_list_t structure, and
@@ -287,7 +287,7 @@ AP_DECLARE(void) ap_method_list_add(ap_method_list_t *l, const char *method);
  * @return  None.
  */
 AP_DECLARE(void) ap_method_list_remove(ap_method_list_t *l,
-				       const char *method);
+                                       const char *method);
 
 /**
  * Reset a method list to be completely empty.
@@ -372,7 +372,7 @@ AP_DECLARE(int) ap_vrprintf(request_rec *r, const char *fmt, va_list vlist);
  * @return The number of bytes sent
  */
 AP_DECLARE_NONSTD(int) ap_rprintf(request_rec *r, const char *fmt,...)
-				__attribute__((format(printf,2,3)));
+                                __attribute__((format(printf,2,3)));
 
 /**
  * Flush all of the data for the current request to the client
@@ -700,5 +700,5 @@ AP_DECLARE(void) ap_send_interim_response(request_rec *r, int send_headers);
 }
 #endif
 
-#endif	/* !APACHE_HTTP_PROTOCOL_H */
+#endif  /* !APACHE_HTTP_PROTOCOL_H */
 /** @} */
diff --git a/include/http_request.h b/include/http_request.h
index fd2dea0..e2e4e6e 100644
--- a/include/http_request.h
+++ b/include/http_request.h
@@ -567,5 +567,5 @@ AP_DECLARE(apr_bucket *) ap_bucket_eor_create(apr_bucket_alloc_t *list,
 }
 #endif
 
-#endif	/* !APACHE_HTTP_REQUEST_H */
+#endif  /* !APACHE_HTTP_REQUEST_H */
 /** @} */
diff --git a/include/http_vhost.h b/include/http_vhost.h
index f6fe93e..473c9c7 100644
--- a/include/http_vhost.h
+++ b/include/http_vhost.h
@@ -115,5 +115,5 @@ AP_DECLARE(int) ap_matches_request_vhost(request_rec *r, const char *host,
 }
 #endif
 
-#endif	/* !APACHE_HTTP_VHOST_H */
+#endif  /* !APACHE_HTTP_VHOST_H */
 /** @} */
diff --git a/include/httpd.h b/include/httpd.h
index 70885c0..f3fde28 100644
--- a/include/httpd.h
+++ b/include/httpd.h
@@ -269,26 +269,26 @@ extern "C" {
 /* -------------- Port number for server running standalone --------------- */
 
 /** default HTTP Port */
-#define DEFAULT_HTTP_PORT	80
+#define DEFAULT_HTTP_PORT       80
 /** default HTTPS Port */
-#define DEFAULT_HTTPS_PORT	443
+#define DEFAULT_HTTPS_PORT      443
 /**
  * Check whether @a port is the default port for the request @a r.
  * @param port The port number
  * @param r The request
  * @see #ap_default_port
  */
-#define ap_is_default_port(port,r)	((port) == ap_default_port(r))
+#define ap_is_default_port(port,r)      ((port) == ap_default_port(r))
 /**
  * Get the default port for a request (which depends on the scheme).
  * @param r The request
  */
-#define ap_default_port(r)	ap_run_default_port(r)
+#define ap_default_port(r)      ap_run_default_port(r)
 /**
  * Get the scheme for a request.
  * @param r The request
  */
-#define ap_http_scheme(r)	ap_run_http_scheme(r)
+#define ap_http_scheme(r)       ap_run_http_scheme(r)
 
 /** The default string length */
 #define MAX_STRING_LEN HUGE_STRING_LEN
@@ -316,11 +316,11 @@ extern "C" {
  *
  */
 /** a normal exit */
-#define APEXIT_OK		0x0
+#define APEXIT_OK               0x0
 /** A fatal error arising during the server's init sequence */
-#define APEXIT_INIT		0x2
+#define APEXIT_INIT             0x2
 /**  The child died during its init sequence */
-#define APEXIT_CHILDINIT	0x3
+#define APEXIT_CHILDINIT        0x3
 /**
  *   The child exited due to a resource shortage.
  *   The parent should limit the rate of forking until
@@ -332,7 +332,7 @@ extern "C" {
  *     If a child exits with this error, the parent process
  *     considers this a server-wide fatal error and aborts.
  */
-#define APEXIT_CHILDFATAL	0xf
+#define APEXIT_CHILDFATAL       0xf
 
 #ifndef AP_DECLARE
 /**
@@ -372,7 +372,7 @@ extern "C" {
  * modules should not use functions marked AP_CORE_DECLARE
  */
 #ifndef AP_CORE_DECLARE
-# define AP_CORE_DECLARE	AP_DECLARE
+# define AP_CORE_DECLARE        AP_DECLARE
 #endif
 
 /**
@@ -381,7 +381,7 @@ extern "C" {
  */
 
 #ifndef AP_CORE_DECLARE_NONSTD
-# define AP_CORE_DECLARE_NONSTD	AP_DECLARE_NONSTD
+# define AP_CORE_DECLARE_NONSTD AP_DECLARE_NONSTD
 #endif
 
 /**
@@ -435,11 +435,11 @@ AP_DECLARE(const char *) ap_get_server_built(void);
 
 /* non-HTTP status codes returned by hooks */
 
-#define OK 0			/**< Module has handled this stage. */
-#define DECLINED -1		/**< Module declines to handle */
-#define DONE -2			/**< Module has served the response completely
-				 *  - it's safe to die() with no more output
-				 */
+#define OK 0                    /**< Module has handled this stage. */
+#define DECLINED -1             /**< Module declines to handle */
+#define DONE -2                 /**< Module has served the response completely
+                                 *  - it's safe to die() with no more output
+                                 */
 #define SUSPENDED -3 /**< Module will handle the remainder of the request.
                       * The core will never invoke the request again, */
 
@@ -539,7 +539,7 @@ AP_DECLARE(const char *) ap_get_server_built(void);
                                     ((x) == HTTP_REQUEST_URI_TOO_LARGE) || \
                                     ((x) == HTTP_INTERNAL_SERVER_ERROR) || \
                                     ((x) == HTTP_SERVICE_UNAVAILABLE) || \
-				    ((x) == HTTP_NOT_IMPLEMENTED))
+                                    ((x) == HTTP_NOT_IMPLEMENTED))
 /** @} */
 
 /**
@@ -901,9 +901,9 @@ struct request_rec {
      * they should not be modified in place.
      */
     /** The content-type for the current request */
-    const char *content_type;	/* Break these out --- we dispatch on 'em */
+    const char *content_type;   /* Break these out --- we dispatch on 'em */
     /** The handler string that we use to call a handler function */
-    const char *handler;	/* What we *really* dispatch on */
+    const char *handler;        /* What we *really* dispatch on */
 
     /** How to encode the data */
     const char *content_encoding;
@@ -1015,10 +1015,10 @@ struct request_rec {
  * @{
  */
 
-#define PROXYREQ_NONE 0		/**< No proxy */
-#define PROXYREQ_PROXY 1	/**< Standard proxy */
-#define PROXYREQ_REVERSE 2	/**< Reverse proxy */
-#define PROXYREQ_RESPONSE 3 /**< Origin response */
+#define PROXYREQ_NONE     0     /**< No proxy */
+#define PROXYREQ_PROXY    1     /**< Standard proxy */
+#define PROXYREQ_REVERSE  2     /**< Reverse proxy */
+#define PROXYREQ_RESPONSE 3     /**< Origin response */
 
 /* @} */
 
@@ -1405,7 +1405,7 @@ AP_DECLARE(char *) ap_getword_white_nc(apr_pool_t *p, char **line);
  *         character
  */
 AP_DECLARE(char *) ap_getword_nulls(apr_pool_t *p, const char **line,
-				    char stop);
+                                    char stop);
 
 /**
  * Get all characters from the first occurance of @a stop to the first "\0"
@@ -1624,7 +1624,7 @@ AP_DECLARE(apr_size_t) ap_escape_errorlog_item(char *dest, const char *source,
  * @return The server's hostname
  */
 AP_DECLARE(char *) ap_construct_server(apr_pool_t *p, const char *hostname,
-				    apr_port_t port, const request_rec *r);
+                                    apr_port_t port, const request_rec *r);
 
 /**
  * Escape a shell command
@@ -1813,7 +1813,7 @@ AP_DECLARE(void) ap_str_toupper(char *s);
  * @param c The character to search for
  * @return The index of the first occurrence of c in str
  */
-AP_DECLARE(int) ap_ind(const char *str, char c);	/* Sigh... */
+AP_DECLARE(int) ap_ind(const char *str, char c);        /* Sigh... */
 
 /**
  * Search a string from right to left for the first occurrence of a
@@ -1924,7 +1924,7 @@ typedef struct {
  * @return OK or HTTP error
  */
 AP_DECLARE(int) ap_parse_form_data(request_rec *r, struct ap_filter_t *f,
-				   apr_array_header_t **ptr,
+                                   apr_array_header_t **ptr,
                                    apr_size_t num, apr_size_t size);
 
 /* Misc system hackery */
@@ -1962,7 +1962,7 @@ char *ap_get_local_host(apr_pool_t *p);
  * @param nLine The line the assertion is defined on
  */
 AP_DECLARE(void) ap_log_assert(const char *szExp, const char *szFile, int nLine)
-			    __attribute__((noreturn));
+                            __attribute__((noreturn));
 
 /**
  * @internal Internal Assert function
@@ -1991,21 +1991,21 @@ AP_DECLARE(void) ap_log_assert(const char *szExp, const char *szFile, int nLine)
  * debugging isn't possible.
  */
 /** stop on a Detach */
-#define SIGSTOP_DETACH			1
+#define SIGSTOP_DETACH                  1
 /** stop making a child process */
-#define SIGSTOP_MAKE_CHILD		2
+#define SIGSTOP_MAKE_CHILD              2
 /** stop spawning a child process */
-#define SIGSTOP_SPAWN_CHILD		4
+#define SIGSTOP_SPAWN_CHILD             4
 /** stop spawning a child process with a piped log */
-#define SIGSTOP_PIPED_LOG_SPAWN		8
+#define SIGSTOP_PIPED_LOG_SPAWN         8
 /** stop spawning a CGI child process */
-#define SIGSTOP_CGI_CHILD		16
+#define SIGSTOP_CGI_CHILD               16
 
 /** Macro to get GDB started */
 #ifdef DEBUG_SIGSTOP
 extern int raise_sigstop_flags;
-#define RAISE_SIGSTOP(x)	do { \
-	if (raise_sigstop_flags & SIGSTOP_##x) raise(SIGSTOP);\
+#define RAISE_SIGSTOP(x)        do { \
+        if (raise_sigstop_flags & SIGSTOP_##x) raise(SIGSTOP);\
     } while (0)
 #else
 #define RAISE_SIGSTOP(x)
@@ -2125,7 +2125,7 @@ AP_DECLARE(void *) ap_realloc(void *ptr, size_t size)
 }
 #endif
 
-#endif	/* !APACHE_HTTPD_H */
+#endif  /* !APACHE_HTTPD_H */
 
 /** @} //APACHE Daemon      */
 /** @} //APACHE Core        */
diff --git a/include/mod_core.h b/include/mod_core.h
index fd38394..58f3c93 100644
--- a/include/mod_core.h
+++ b/include/mod_core.h
@@ -94,5 +94,5 @@ extern AP_DECLARE_DATA const char *ap_multipart_boundary;
 }
 #endif
 
-#endif	/* !MOD_CORE_H */
+#endif  /* !MOD_CORE_H */
 /** @} */
diff --git a/include/scoreboard.h b/include/scoreboard.h
index 8d73a7f..8165d57 100644
--- a/include/scoreboard.h
+++ b/include/scoreboard.h
@@ -54,17 +54,17 @@ extern "C" {
  */
 
 #define SERVER_DEAD 0
-#define SERVER_STARTING 1	/* Server Starting up */
-#define SERVER_READY 2		/* Waiting for connection (or accept() lock) */
-#define SERVER_BUSY_READ 3	/* Reading a client request */
-#define SERVER_BUSY_WRITE 4	/* Processing a client request */
-#define SERVER_BUSY_KEEPALIVE 5	/* Waiting for more requests via keepalive */
-#define SERVER_BUSY_LOG 6	/* Logging the request */
-#define SERVER_BUSY_DNS 7	/* Looking up a hostname */
-#define SERVER_CLOSING 8	/* Closing the connection */
-#define SERVER_GRACEFUL 9	/* server is gracefully finishing request */
+#define SERVER_STARTING 1       /* Server Starting up */
+#define SERVER_READY 2          /* Waiting for connection (or accept() lock) */
+#define SERVER_BUSY_READ 3      /* Reading a client request */
+#define SERVER_BUSY_WRITE 4     /* Processing a client request */
+#define SERVER_BUSY_KEEPALIVE 5 /* Waiting for more requests via keepalive */
+#define SERVER_BUSY_LOG 6       /* Logging the request */
+#define SERVER_BUSY_DNS 7       /* Looking up a hostname */
+#define SERVER_CLOSING 8        /* Closing the connection */
+#define SERVER_GRACEFUL 9       /* server is gracefully finishing request */
 #define SERVER_IDLE_KILL 10     /* Server is cleaning up idle children. */
-#define SERVER_NUM_STATUS 11	/* number of status settings */
+#define SERVER_NUM_STATUS 11    /* number of status settings */
 
 /* Type used for generation indicies.  Startup and every restart cause a
  * new generation of children to be spawned.  Children within the same
@@ -112,9 +112,9 @@ struct worker_score {
 #ifdef HAVE_TIMES
     struct tms times;
 #endif
-    char client[32];		/* Keep 'em small... */
-    char request[64];		/* We just want an idea... */
-    char vhost[32];	        /* What virtual host is being accessed? */
+    char client[32];            /* Keep 'em small... */
+    char request[64];           /* We just want an idea... */
+    char vhost[32];             /* What virtual host is being accessed? */
 };
 
 typedef struct {
@@ -131,7 +131,7 @@ typedef struct {
 typedef struct process_score process_score;
 struct process_score {
     pid_t pid;
-    ap_generation_t generation;	/* generation of this child */
+    ap_generation_t generation; /* generation of this child */
     char quiescing;         /* the process whose pid is stored above is
                              * going down gracefully
                              */
@@ -212,4 +212,4 @@ AP_DECLARE_HOOK(int, pre_mpm, (apr_pool_t *p, ap_scoreboard_e sb_type))
 }
 #endif
 
-#endif	/* !APACHE_SCOREBOARD_H */
+#endif  /* !APACHE_SCOREBOARD_H */
diff --git a/include/util_md5.h b/include/util_md5.h
index 614f540..4b5edd6 100644
--- a/include/util_md5.h
+++ b/include/util_md5.h
@@ -72,5 +72,5 @@ AP_DECLARE(char *) ap_md5digest(apr_pool_t *p, apr_file_t *infile);
 }
 #endif
 
-#endif	/* !APACHE_UTIL_MD5_H */
+#endif  /* !APACHE_UTIL_MD5_H */
 /** @} */
diff --git a/include/util_script.h b/include/util_script.h
index 86f8c84..9643657 100644
--- a/include/util_script.h
+++ b/include/util_script.h
@@ -194,8 +194,8 @@ AP_DECLARE_NONSTD(int) ap_scan_script_header_err_strs_ex(request_rec *r,
  * @return HTTP_OK on success, HTTP_INTERNAL_SERVER_ERROR otherwise
  */
 AP_DECLARE(int) ap_scan_script_header_err_core(request_rec *r, char *buffer,
-				       int (*getsfunc) (char *, int, void *),
-				       void *getsfunc_data);
+                                               int (*getsfunc) (char *, int, void *),
+                                               void *getsfunc_data);
 
 /**
  * Read headers output from a script, ensuring that the output is valid.  If
@@ -229,5 +229,5 @@ AP_DECLARE(void) ap_args_to_table(request_rec *r, apr_table_t **table);
 }
 #endif
 
-#endif	/* !APACHE_UTIL_SCRIPT_H */
+#endif  /* !APACHE_UTIL_SCRIPT_H */
 /** @} */
diff --git a/modules/aaa/mod_authz_core.c b/modules/aaa/mod_authz_core.c
index 906510a..6503971 100644
--- a/modules/aaa/mod_authz_core.c
+++ b/modules/aaa/mod_authz_core.c
@@ -120,8 +120,8 @@ static void *merge_authz_core_dir_config(apr_pool_t *p,
     authz_core_dir_conf *conf;
 
     if (new->op == AUTHZ_LOGIC_UNSET && !new->section && base->section ) {
-	/* Only authz_forbidden_on_fail has been set in new. Don't treat
-	 * it as a new auth config w.r.t. AuthMerging */
+        /* Only authz_forbidden_on_fail has been set in new. Don't treat
+         * it as a new auth config w.r.t. AuthMerging */
         conf = apr_pmemdup(p, base, sizeof(*base));
     }
     else if (new->op == AUTHZ_LOGIC_OFF || new->op == AUTHZ_LOGIC_UNSET ||
@@ -1024,7 +1024,7 @@ static authz_status expr_check_authorization(request_rec *r,
     int rc = ap_expr_exec(r, expr, &err);
 
     if (rc <= 0)
-	    /* XXX: real error handling? */
+        /* XXX: real error handling? */
         return AUTHZ_DENIED;
     else
         return AUTHZ_GRANTED;
diff --git a/modules/arch/win32/mod_isapi.h b/modules/arch/win32/mod_isapi.h
index 7aa2b55..9f8bc93 100644
--- a/modules/arch/win32/mod_isapi.h
+++ b/modules/arch/win32/mod_isapi.h
@@ -266,6 +266,6 @@ typedef int (APR_THREAD_FUNC *PFN_TERMINATEEXTENSION)(apr_uint32_t flags);
 }
 #endif
 
-#endif	/* !MOD_ISAPI_H */
+#endif  /* !MOD_ISAPI_H */
 /** @} */
 
diff --git a/modules/cache/cache_hash.h b/modules/cache/cache_hash.h
index 46f3a76..3ae9861 100644
--- a/modules/cache/cache_hash.h
+++ b/modules/cache/cache_hash.h
@@ -104,13 +104,13 @@ void* cache_hash_get(cache_hash_t *ht, const void *key,
  *     int sum_values(cache_hash_t *ht)
  *     {
  *         cache_hash_index_t *hi;
- * 	   void *val;
- * 	   int sum = 0;
- * 	   for (hi = cache_hash_first(ht); hi; hi = cache_hash_next(hi)) {
- * 	       cache_hash_this(hi, NULL, NULL, &val);
- * 	       sum += *(int *)val;
- * 	   }
- * 	   return sum;
+ *         void *val;
+ *         int sum = 0;
+ *         for (hi = cache_hash_first(ht); hi; hi = cache_hash_next(hi)) {
+ *             cache_hash_this(hi, NULL, NULL, &val);
+ *             sum += *(int *)val;
+ *         }
+ *         return sum;
  *     }
  * @endcode
  *
@@ -154,4 +154,4 @@ int cache_hash_count(cache_hash_t *ht);
 }
 #endif
 
-#endif	/* !CACHE_HASH_H */
+#endif  /* !CACHE_HASH_H */
diff --git a/modules/dav/main/mod_dav.c b/modules/dav/main/mod_dav.c
index 7e0ae21..bc170bd 100644
--- a/modules/dav/main/mod_dav.c
+++ b/modules/dav/main/mod_dav.c
@@ -1624,16 +1624,16 @@ static int dav_method_options(request_rec *r)
     entry = (ap_list_provider_names_t *)extensions->elts;
 
     for (i = 0; i < extensions->nelts; i++, entry++) {
-	const dav_options_provider *options =
-	    dav_get_options_providers(entry->provider_name);
+        const dav_options_provider *options =
+            dav_get_options_providers(entry->provider_name);
 
-	if (options && options->dav_header) {
-	    apr_text_header hoptions = { 0 };
+        if (options && options->dav_header) {
+            apr_text_header hoptions = { 0 };
 
-	    options->dav_header(r, resource, &hoptions);
-	    for (t = hoptions.first; t && t->text; t = t->next)
-		dav_level = apr_pstrcat(r->pool, dav_level, ",", t->text, NULL);
-	}
+            options->dav_header(r, resource, &hoptions);
+            for (t = hoptions.first; t && t->text; t = t->next)
+                dav_level = apr_pstrcat(r->pool, dav_level, ",", t->text, NULL);
+        }
     }
 
     /* ###
@@ -1784,16 +1784,16 @@ static int dav_method_options(request_rec *r)
     entry = (ap_list_provider_names_t *)extensions->elts;
 
     for (i = 0; i < extensions->nelts; i++, entry++) {
-	const dav_options_provider *options =
-	    dav_get_options_providers(entry->provider_name);
+        const dav_options_provider *options =
+            dav_get_options_providers(entry->provider_name);
 
-	if (options && options->dav_method) {
-	    apr_text_header hoptions = { 0 };
+        if (options && options->dav_method) {
+            apr_text_header hoptions = { 0 };
 
-	    options->dav_method(r, resource, &hoptions);
-	    for (t = hoptions.first; t && t->text; t = t->next)
-		apr_table_addn(methods, t->text, "");
-	}
+            options->dav_method(r, resource, &hoptions);
+            for (t = hoptions.first; t && t->text; t = t->next)
+                apr_table_addn(methods, t->text, "");
+        }
     }
 
     /* Generate the Allow header */
diff --git a/modules/filters/libsed.h b/modules/filters/libsed.h
index ece1191..a889d50 100644
--- a/modules/filters/libsed.h
+++ b/modules/filters/libsed.h
@@ -2,8 +2,8 @@
  * Copyright (c) 2005, 2008 Sun Microsystems, Inc. All Rights Reserved.
  * Use is subject to license terms.
  *
- *	Copyright (c) 1984 AT&T
- *	  All Rights Reserved
+ *      Copyright (c) 1984 AT&T
+ *        All Rights Reserved
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
diff --git a/modules/filters/mod_reqtimeout.c b/modules/filters/mod_reqtimeout.c
index 471c66f..de19536 100644
--- a/modules/filters/mod_reqtimeout.c
+++ b/modules/filters/mod_reqtimeout.c
@@ -92,9 +92,9 @@ static apr_status_t have_lf_or_eos(apr_bucket_brigade *bb)
     apr_bucket *b = APR_BRIGADE_LAST(bb);
 
     for ( ; b != APR_BRIGADE_SENTINEL(bb) ; b = APR_BUCKET_PREV(b) ) {
-    	const char *str;
-    	apr_size_t len;
-    	apr_status_t rv;
+        const char *str;
+        apr_size_t len;
+        apr_status_t rv;
 
         if (APR_BUCKET_IS_EOS(b))
             return APR_SUCCESS;
@@ -430,7 +430,7 @@ static void *reqtimeout_merge_srv_config(apr_pool_t *p, void *base_, void *add_)
     cfg->header_rate_factor = (cfg->header_min_rate == -1) ? base->header_rate_factor :
                               add->header_rate_factor;
     cfg->body_rate_factor = (cfg->body_min_rate == -1) ? base->body_rate_factor :
-    			     add->body_rate_factor;
+                             add->body_rate_factor;
 
     return cfg;
 }
diff --git a/modules/filters/regexp.c b/modules/filters/regexp.c
index 6c5e13e..ba118a6 100644
--- a/modules/filters/regexp.c
+++ b/modules/filters/regexp.c
@@ -2,8 +2,8 @@
  * Copyright (c) 2005, 2008 Sun Microsystems, Inc. All Rights Reserved.
  * Use is subject to license terms.
  *
- *	Copyright (c) 1984, 1986, 1987, 1988, 1989 AT&T
- *	  All Rights Reserved
+ *      Copyright (c) 1984, 1986, 1987, 1988, 1989 AT&T
+ *        All Rights Reserved
  *
  * University Copyright- Copyright (c) 1982, 1986, 1988
  * The Regents of the University of California
diff --git a/modules/filters/regexp.h b/modules/filters/regexp.h
index 4926165..1e5a626 100644
--- a/modules/filters/regexp.h
+++ b/modules/filters/regexp.h
@@ -2,8 +2,8 @@
  * Copyright (c) 2005, 2008 Sun Microsystems, Inc. All Rights Reserved.
  * Use is subject to license terms.
  *
- *	Copyright (c) 1984, 1986, 1987, 1988, 1989 AT&T
- *	  All Rights Reserved
+ *      Copyright (c) 1984, 1986, 1987, 1988, 1989 AT&T
+ *        All Rights Reserved
  *
  * University Copyright- Copyright (c) 1982, 1986, 1988
  * The Regents of the University of California
diff --git a/modules/filters/sed.h b/modules/filters/sed.h
index 9178ddc..cc3c03e 100644
--- a/modules/filters/sed.h
+++ b/modules/filters/sed.h
@@ -2,8 +2,8 @@
  * Copyright (c) 2005, 2008 Sun Microsystems, Inc. All Rights Reserved.
  * Use is subject to license terms.
  *
- *	Copyright (c) 1984 AT&T
- *	  All Rights Reserved
+ *      Copyright (c) 1984 AT&T
+ *        All Rights Reserved
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
diff --git a/modules/filters/sed0.c b/modules/filters/sed0.c
index 7fb4296..da47122 100644
--- a/modules/filters/sed0.c
+++ b/modules/filters/sed0.c
@@ -2,8 +2,8 @@
  * Copyright (c) 2005, 2008 Sun Microsystems, Inc. All Rights Reserved.
  * Use is subject to license terms.
  *
- *	Copyright (c) 1984 AT&T
- *	  All Rights Reserved
+ *      Copyright (c) 1984 AT&T
+ *        All Rights Reserved
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
diff --git a/modules/filters/sed1.c b/modules/filters/sed1.c
index d17b70d..ddca3bd 100644
--- a/modules/filters/sed1.c
+++ b/modules/filters/sed1.c
@@ -2,8 +2,8 @@
  * Copyright (c) 2005, 2008 Sun Microsystems, Inc. All Rights Reserved.
  * Use is subject to license terms.
  *
- *	Copyright (c) 1984 AT&T
- *	  All Rights Reserved
+ *      Copyright (c) 1984 AT&T
+ *        All Rights Reserved
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
diff --git a/modules/generators/mod_autoindex.c b/modules/generators/mod_autoindex.c
index f6d1176..b688867 100644
--- a/modules/generators/mod_autoindex.c
+++ b/modules/generators/mod_autoindex.c
@@ -1106,11 +1106,11 @@ static void emit_head(request_rec *r, char *header_fname, int suppress_amble,
 
     if (emit_H1) {
         if (d->style_sheet != NULL) {
-    	    /* Insert style id if stylesheet used */
-    	    ap_rvputs(r, "  <h1 id=\"indextitle\">Index of ", title, "</h1>\n", NULL);
-    	} else {
-        ap_rvputs(r, "<h1>Index of ", title, "</h1>\n", NULL);
-    }
+            /* Insert style id if stylesheet used */
+            ap_rvputs(r, "  <h1 id=\"indextitle\">Index of ", title, "</h1>\n", NULL);
+        } else {
+            ap_rvputs(r, "<h1>Index of ", title, "</h1>\n", NULL);
+        }
     }
     if (rr != NULL) {
         ap_destroy_sub_req(rr);
@@ -1286,8 +1286,8 @@ static struct ent *make_parent_entry(apr_int32_t autoindex_opts,
         }
         if (!(p->alt = find_default_alt(d, testpath))) {
             if (!(p->alt = find_default_alt(d, "^^DIRECTORY^^"))) {
-            	/* Special alt text for parent dir to distinguish it from other directories
-            	   this is essential when trying to style this dir entry via AddAltClass */
+                /* Special alt text for parent dir to distinguish it from other directories
+                   this is essential when trying to style this dir entry via AddAltClass */
                 p->alt = "PARENTDIR";
             }
         }
diff --git a/modules/generators/mod_cgi.c b/modules/generators/mod_cgi.c
index 32895a6..ac85515 100644
--- a/modules/generators/mod_cgi.c
+++ b/modules/generators/mod_cgi.c
@@ -930,7 +930,7 @@ static int cgi_handler(request_rec *r)
 
     b = cgi_bucket_create(r, script_in, script_err, c->bucket_alloc);
     if (b == NULL)
-	return HTTP_INTERNAL_SERVER_ERROR;
+        return HTTP_INTERNAL_SERVER_ERROR;
 #else
     b = apr_bucket_pipe_create(script_in, c->bucket_alloc);
 #endif
@@ -945,8 +945,8 @@ static int cgi_handler(request_rec *r)
         int ret;
 
         if ((ret = ap_scan_script_header_err_brigade_ex(r, bb, sbuf,
-					                APLOG_MODULE_INDEX)))
-	{
+                                                        APLOG_MODULE_INDEX)))
+        {
             ret = log_script(r, conf, ret, dbuf, sbuf, bb, script_err);
 
             /*
diff --git a/modules/generators/mod_info.c b/modules/generators/mod_info.c
index 6991ed0..db1072f 100644
--- a/modules/generators/mod_info.c
+++ b/modules/generators/mod_info.c
@@ -160,7 +160,7 @@ static void mod_info_indent(request_rec * r, int nest,
         ap_rputs(":&nbsp;", r);
     }
     else if (linenum > 0) {
-    	for (i = 1; i <= nest; ++i)
+        for (i = 1; i <= nest; ++i)
             printf("  ");
         putchar('#');
         put_int_flush_right(r, linenum, 4);
diff --git a/modules/http/http_filters.c b/modules/http/http_filters.c
index 8723c57..eda0e5d 100644
--- a/modules/http/http_filters.c
+++ b/modules/http/http_filters.c
@@ -959,8 +959,8 @@ static void basic_http_header(request_rec *r, apr_bucket_brigade *bb,
     if (APLOGrtrace3(r)) {
         ap_log_rerror(APLOG_MARK, APLOG_TRACE3, 0, r,
                       "Response sent with status %d%s",
-		      r->status,
-		      APLOGrtrace4(r) ? ", headers:" : "");
+                      r->status,
+                      APLOGrtrace4(r) ? ", headers:" : "");
 
         /*
          * Date and Server are less interesting, use TRACE5 for them while
diff --git a/modules/ldap/util_ldap_cache.h b/modules/ldap/util_ldap_cache.h
index 234a6ea..8cfae32 100644
--- a/modules/ldap/util_ldap_cache.h
+++ b/modules/ldap/util_ldap_cache.h
@@ -33,15 +33,15 @@
 #include "util_ldap.h"
 
 typedef struct util_cache_node_t {
-    void *payload;		/* Pointer to the payload */
-    apr_time_t add_time;	/* Time node was added to cache */
+    void *payload;              /* Pointer to the payload */
+    apr_time_t add_time;        /* Time node was added to cache */
     struct util_cache_node_t *next;
 } util_cache_node_t;
 
 typedef struct util_ald_cache util_ald_cache_t;
 
 struct util_ald_cache {
-    unsigned long size;	                /* Size of cache array */
+    unsigned long size;                 /* Size of cache array */
     unsigned long maxentries;           /* Maximum number of cache entries */
     unsigned long numentries;           /* Current number of cache entries */
     unsigned long fullmark;             /* Used to keep track of when cache becomes 3/4 full */
@@ -110,12 +110,12 @@ typedef struct util_compare_subgroup_t {
  * password used to bind.
  */
 typedef struct util_search_node_t {
-    const char *username;		/* Cache key */
-    const char *dn;			/* DN returned from search */
-    const char *bindpw;			/* The most recently used bind password;
-					   NULL if the bind failed */
-    apr_time_t lastbind;		/* Time of last successful bind */
-    const char **vals;			/* Values of queried attributes */
+    const char *username;               /* Cache key */
+    const char *dn;                     /* DN returned from search */
+    const char *bindpw;                 /* The most recently used bind password;
+                                           NULL if the bind failed */
+    apr_time_t lastbind;                /* Time of last successful bind */
+    const char **vals;                  /* Values of queried attributes */
     int        numvals;         /* Number of queried attributes */
 } util_search_node_t;
 
@@ -124,7 +124,7 @@ typedef struct util_search_node_t {
  * value as the key.
  */
 typedef struct util_compare_node_t {
-    const char *dn;			/* DN, attrib and value combine to be the key */
+    const char *dn;                     /* DN, attrib and value combine to be the key */
     const char *attrib;
     const char *value;
     apr_time_t lastcompare;
@@ -138,8 +138,8 @@ typedef struct util_compare_node_t {
  * statement and the dn fetched based on the client-provided username.
  */
 typedef struct util_dn_compare_node_t {
-    const char *reqdn;		/* The DN in the require dn statement */
-    const char *dn;			/* The DN found in the search */
+    const char *reqdn;          /* The DN in the require dn statement */
+    const char *dn;                     /* The DN found in the search */
 } util_dn_compare_node_t;
 
 
diff --git a/modules/lua/lua_apr.c b/modules/lua/lua_apr.c
index 26e91f1..ad396e6 100644
--- a/modules/lua/lua_apr.c
+++ b/modules/lua/lua_apr.c
@@ -26,7 +26,7 @@
  */
 #ifndef lua_boxpointer
 #define lua_boxpointer(L,u) (*(void **)(lua_newuserdata(L, sizeof(void *))) = (u))
-#define lua_unboxpointer(L,i)	(*(void **)(lua_touserdata(L, i)))
+#define lua_unboxpointer(L,i)   (*(void **)(lua_touserdata(L, i)))
 #endif
 
 
diff --git a/modules/lua/lua_vmprep.h b/modules/lua/lua_vmprep.h
index 3e1b68f..c2ca8d2 100644
--- a/modules/lua/lua_vmprep.h
+++ b/modules/lua/lua_vmprep.h
@@ -78,11 +78,11 @@ typedef struct
 
     /* APL_SCOPE_ONCE | APL_SCOPE_REQUEST | APL_SCOPE_CONN | APL_SCOPE_SERVER */
     int scope;
-	unsigned int vm_server_pool_min;
-	unsigned int vm_server_pool_max;
+        unsigned int vm_server_pool_min;
+        unsigned int vm_server_pool_max;
 
-	ap_lua_state_open_callback cb;
-	void* cb_arg;
+        ap_lua_state_open_callback cb;
+        void* cb_arg;
     /* pool to use for lifecycle if APL_SCOPE_ONCE is set, otherwise unused */
     apr_pool_t *pool;
 
diff --git a/modules/lua/mod_lua.c b/modules/lua/mod_lua.c
index 8de595b..bf74c39 100644
--- a/modules/lua/mod_lua.c
+++ b/modules/lua/mod_lua.c
@@ -121,15 +121,15 @@ static int lua_handler(request_rec *r)
             d = apr_palloc(r->pool, sizeof(mapped_request_details));
             spec = apr_pcalloc(r->pool, sizeof(ap_lua_vm_spec));
             spec->scope = dcfg->vm_scope;
-			spec->pool = spec->scope==APL_SCOPE_SERVER ? cfg->pool : r->pool;
+            spec->pool = spec->scope==APL_SCOPE_SERVER ? cfg->pool : r->pool;
             spec->file = r->filename;
             spec->code_cache_style = dcfg->code_cache_style;
-			spec->package_paths = cfg->package_paths;
-			spec->package_cpaths = cfg->package_cpaths;
-			spec->vm_server_pool_min = cfg->vm_server_pool_min;
-			spec->vm_server_pool_max = cfg->vm_server_pool_max;
-			spec->cb = &lua_open_callback;
-			spec->cb_arg = NULL;
+            spec->package_paths = cfg->package_paths;
+            spec->package_cpaths = cfg->package_cpaths;
+            spec->vm_server_pool_min = cfg->vm_server_pool_min;
+            spec->vm_server_pool_max = cfg->vm_server_pool_max;
+            spec->cb = &lua_open_callback;
+            spec->cb_arg = NULL;
             d->spec = spec;
             d->function_name = "handle";
         }
@@ -249,15 +249,15 @@ static int lua_request_rec_hook_harness(request_rec *r, const char *name)
             spec->file = hook_spec->file_name;
             spec->code_cache_style = hook_spec->code_cache_style;
             spec->scope = hook_spec->scope;
-			spec->vm_server_pool_min = cfg->vm_server_pool_min;
-			spec->vm_server_pool_max = cfg->vm_server_pool_max;
+            spec->vm_server_pool_min = cfg->vm_server_pool_min;
+            spec->vm_server_pool_max = cfg->vm_server_pool_max;
             spec->bytecode = hook_spec->bytecode;
             spec->bytecode_len = hook_spec->bytecode_len;
             spec->pool = spec->scope==APL_SCOPE_SERVER ? cfg->pool : r->pool;
-			spec->package_paths = cfg->package_paths;
-			spec->package_cpaths = cfg->package_cpaths;
-			spec->cb = &lua_open_callback;
-			spec->cb_arg = NULL;
+            spec->package_paths = cfg->package_paths;
+            spec->package_cpaths = cfg->package_cpaths;
+            spec->cb = &lua_open_callback;
+            spec->cb_arg = NULL;
 
             apr_filepath_merge(&spec->file, server_cfg->root_path,
                                spec->file, APR_FILEPATH_NOTRELATIVE, r->pool);
diff --git a/modules/lua/mod_lua.h b/modules/lua/mod_lua.h
index 32a766f..395d204 100644
--- a/modules/lua/mod_lua.h
+++ b/modules/lua/mod_lua.h
@@ -76,7 +76,7 @@
  */
 #ifndef lua_boxpointer
 #define lua_boxpointer(L,u) (*(void **)(lua_newuserdata(L, sizeof(void *))) = (u))
-#define lua_unboxpointer(L,i)	(*(void **)(lua_touserdata(L, i)))
+#define lua_unboxpointer(L,i)   (*(void **)(lua_touserdata(L, i)))
 #endif
 
 void ap_lua_rstack_dump(lua_State *L, request_rec *r, const char *msg);
diff --git a/modules/mappers/mod_rewrite.c b/modules/mappers/mod_rewrite.c
index dd10e53..9c297e0 100644
--- a/modules/mappers/mod_rewrite.c
+++ b/modules/mappers/mod_rewrite.c
@@ -3290,7 +3290,7 @@ static const char *cmd_rewritecond(cmd_parms *cmd, void *in_dconf,
         ap_log_error(APLOG_MARK, APLOG_WARNING, 0, cmd->server,
                      "RewriteCond: NoCase option for non-regex pattern '%s' "
                      "is not supported and will be ignored. (%s:%d)", a2,
-		     cmd->directive->filename, cmd->directive->line_num);
+                     cmd->directive->filename, cmd->directive->line_num);
         newcond->flags &= ~CONDFLAG_NOCASE;
     }
 
diff --git a/modules/proxy/mod_proxy_fcgi.c b/modules/proxy/mod_proxy_fcgi.c
index 154c07a..13c5382 100644
--- a/modules/proxy/mod_proxy_fcgi.c
+++ b/modules/proxy/mod_proxy_fcgi.c
@@ -331,7 +331,7 @@ static apr_status_t send_environment(proxy_conn_rec *conn, request_rec *r,
 
         envlen += vallen;
 
-	/* The cast of bodylen is safe since FCGI_MAX_ENV_SIZE is for sure an int */
+        /* The cast of bodylen is safe since FCGI_MAX_ENV_SIZE is for sure an int */
         if (envlen > FCGI_MAX_ENV_SIZE) {
             ap_log_rerror(APLOG_MARK, APLOG_DEBUG, 0, r,
                           "proxy: FCGI: truncating environment to %d bytes and %d elements",
diff --git a/modules/proxy/mod_proxy_scgi.c b/modules/proxy/mod_proxy_scgi.c
index 0a56e57..bd9c53e 100644
--- a/modules/proxy/mod_proxy_scgi.c
+++ b/modules/proxy/mod_proxy_scgi.c
@@ -370,7 +370,7 @@ static int pass_response(request_rec *r, proxy_conn_rec *conn)
     APR_BRIGADE_INSERT_TAIL(bb, b);
 
     status = ap_scan_script_header_err_brigade_ex(r, bb, NULL,
-		                                  APLOG_MODULE_INDEX);
+                                                  APLOG_MODULE_INDEX);
     if (status != OK) {
         ap_log_rerror(APLOG_MARK, APLOG_ERR, 0, r,
                       "proxy: " PROXY_FUNCTION ": error reading response "
diff --git a/modules/proxy/proxy_util.c b/modules/proxy/proxy_util.c
index 8f92839..9c3f5d2 100644
--- a/modules/proxy/proxy_util.c
+++ b/modules/proxy/proxy_util.c
@@ -2953,7 +2953,7 @@ PROXY_DECLARE(apr_status_t) ap_proxy_sync_balancer(proxy_balancer *b, server_rec
     /* balancer sync */
     lbmethod = ap_lookup_provider(PROXY_LBMETHOD, b->s->lbpname, "0");
     if (lbmethod) {
-	b->lbmethod = lbmethod;
+        b->lbmethod = lbmethod;
     }
     /* worker sync */
 
diff --git a/modules/ssl/mod_ssl.c b/modules/ssl/mod_ssl.c
index dbd98ae..4171762 100644
--- a/modules/ssl/mod_ssl.c
+++ b/modules/ssl/mod_ssl.c
@@ -231,10 +231,10 @@ static const command_rec ssl_config_cmds[] = {
                 "SSL stapling option for normal OCSP Response Cache Lifetime")
     SSL_CMD_SRV(StaplingReturnResponderErrors, FLAG,
                 "SSL stapling switch to return Status Errors Back to Client"
-		"(`on', `off')")
+                "(`on', `off')")
     SSL_CMD_SRV(StaplingFakeTryLater, FLAG,
                 "SSL stapling switch to send tryLater response to client on error "
-		"(`on', `off')")
+                "(`on', `off')")
     SSL_CMD_SRV(StaplingErrorCacheTimeout, TAKE1,
                 "SSL stapling option for OCSP Response Error Cache Lifetime")
     SSL_CMD_SRV(StaplingForceURL, TAKE1,
diff --git a/modules/ssl/ssl_engine_config.c b/modules/ssl/ssl_engine_config.c
index 8897387..6ceabd4 100644
--- a/modules/ssl/ssl_engine_config.c
+++ b/modules/ssl/ssl_engine_config.c
@@ -135,15 +135,15 @@ static void modssl_ctx_init(modssl_ctx_t *mctx)
     mctx->ocsp_responder_timeout = UNSET;
 
 #ifdef HAVE_OCSP_STAPLING
-    mctx->stapling_enabled                   = UNSET;
-    mctx->stapling_resptime_skew      = UNSET;
-    mctx->stapling_resp_maxage        = UNSET;
-    mctx->stapling_cache_timeout  = UNSET;
-    mctx->stapling_return_errors = UNSET;
-    mctx->stapling_fake_trylater          = UNSET;
-    mctx->stapling_errcache_timeout     = UNSET;
-    mctx->stapling_responder_timeout      = UNSET;
-    mctx->stapling_force_url   		= NULL;
+    mctx->stapling_enabled           = UNSET;
+    mctx->stapling_resptime_skew     = UNSET;
+    mctx->stapling_resp_maxage       = UNSET;
+    mctx->stapling_cache_timeout     = UNSET;
+    mctx->stapling_return_errors     = UNSET;
+    mctx->stapling_fake_trylater     = UNSET;
+    mctx->stapling_errcache_timeout  = UNSET;
+    mctx->stapling_responder_timeout = UNSET;
+    mctx->stapling_force_url         = NULL;
 #endif
 }
 
diff --git a/modules/ssl/ssl_engine_ocsp.c b/modules/ssl/ssl_engine_ocsp.c
index 2396a35..b6920bf 100644
--- a/modules/ssl/ssl_engine_ocsp.c
+++ b/modules/ssl/ssl_engine_ocsp.c
@@ -5,7 +5,7 @@
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
  *
- *	http://www.apache.org/licenses/LICENSE-2.0
+ *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
diff --git a/modules/ssl/ssl_engine_vars.c b/modules/ssl/ssl_engine_vars.c
index f94c706..c0e933d 100644
--- a/modules/ssl/ssl_engine_vars.c
+++ b/modules/ssl/ssl_engine_vars.c
@@ -96,7 +96,7 @@ static int ssl_expr_lookup(ap_expr_lookup_parms *parms)
             *parms->data = "PeerExtList";
             return OK;
         }
-	break;
+        break;
     }
     return DECLINED;
 }
diff --git a/os/unix/os.h b/os/unix/os.h
index 5c7fbdf..1494edd 100644
--- a/os/unix/os.h
+++ b/os/unix/os.h
@@ -48,5 +48,5 @@
 pid_t os_fork(const char *user);
 #endif
 
-#endif	/* !APACHE_OS_H */
+#endif  /* !APACHE_OS_H */
 /** @} */
diff --git a/os/unix/unixd.h b/os/unix/unixd.h
index 3d8e8d2..721250f 100644
--- a/os/unix/unixd.h
+++ b/os/unix/unixd.h
@@ -101,10 +101,10 @@ AP_DECLARE(apr_status_t) ap_unixd_set_global_mutex_perms(apr_global_mutex_t *gmu
 AP_DECLARE(apr_status_t) ap_unixd_accept(void **accepted, ap_listen_rec *lr, apr_pool_t *ptrans);
 
 #ifdef HAVE_KILLPG
-#define ap_unixd_killpg(x, y)	(killpg ((x), (y)))
+#define ap_unixd_killpg(x, y)   (killpg ((x), (y)))
 #define ap_os_killpg(x, y)      (killpg ((x), (y)))
 #else /* HAVE_KILLPG */
-#define ap_unixd_killpg(x, y)	(kill (-(x), (y)))
+#define ap_unixd_killpg(x, y)   (kill (-(x), (y)))
 #define ap_os_killpg(x, y)      (kill (-(x), (y)))
 #endif /* HAVE_KILLPG */
 
diff --git a/server/core.c b/server/core.c
index 6ca2033..8dfb1bb 100644
--- a/server/core.c
+++ b/server/core.c
@@ -3733,12 +3733,12 @@ static apr_array_header_t *parse_errorlog_string(apr_pool_t *p,
             *err = "The '+' flag cannot be used in the main error log format";
             return NULL;
         }
-	if (!is_main_fmt && item->min_loglevel) {
+        if (!is_main_fmt && item->min_loglevel) {
             *err = "The loglevel cannot be used as a condition in "
-		   "once-per-request or once-per-connection formats";
+                   "once-per-request or once-per-connection formats";
             return NULL;
         }
-	if (item->min_loglevel > APLOG_TRACE8) {
+        if (item->min_loglevel > APLOG_TRACE8) {
             *err = "The specified loglevel modifier is out of range";
             return NULL;
         }
diff --git a/server/request.c b/server/request.c
index b575c28..f8f0605 100644
--- a/server/request.c
+++ b/server/request.c
@@ -1475,8 +1475,8 @@ AP_DECLARE(int) ap_file_walk(request_rec *r)
     int cached;
 
     if (dconf->sec_file) {
-    	sec_ent = (ap_conf_vector_t **)dconf->sec_file->elts;
-    	num_sec = dconf->sec_file->nelts;
+        sec_ent = (ap_conf_vector_t **)dconf->sec_file->elts;
+        num_sec = dconf->sec_file->nelts;
     }
 
     /* To allow broken modules to proceed, we allow missing filenames to pass.
@@ -1640,8 +1640,8 @@ AP_DECLARE(int) ap_if_walk(request_rec *r)
     walk_walked_t *last_walk;
 
     if (dconf->sec_if) {
-    	sec_ent = (ap_conf_vector_t **)dconf->sec_if->elts;
-    	num_sec = dconf->sec_if->nelts;
+        sec_ent = (ap_conf_vector_t **)dconf->sec_if->elts;
+        num_sec = dconf->sec_if->nelts;
     }
 
     /* No tricks here, there are just no <If > to parse in this context.
diff --git a/server/scoreboard.c b/server/scoreboard.c
index 4d2e5a3..56246e4 100644
--- a/server/scoreboard.c
+++ b/server/scoreboard.c
@@ -486,7 +486,7 @@ static int update_child_status_internal(int child_num,
                         REMOTE_NOLOOKUP, NULL), sizeof(ws->client));
             copy_request(ws->request, sizeof(ws->request), r);
             if (r->server) {
-            	apr_cpystrn(ws->vhost, r->server->server_hostname,
+                apr_cpystrn(ws->vhost, r->server->server_hostname,
                             sizeof(ws->vhost));
             }
         }
diff --git a/server/util_expr_eval.c b/server/util_expr_eval.c
index 4064787..0530463 100644
--- a/server/util_expr_eval.c
+++ b/server/util_expr_eval.c
@@ -719,7 +719,7 @@ AP_DECLARE(int) ap_expr_exec_ctx(ap_expr_eval_ctx_t *ctx)
                           ctx->info->filename, ctx->info->line_number,
                           *ctx->result_string);
             return 1;
-	}
+        }
     }
     else {
         rc = ap_expr_eval(ctx, ctx->info->root_node);
@@ -980,9 +980,9 @@ static const char *unescape_func(ap_expr_eval_ctx_t *ctx, const void *data,
     if (ret == OK)
         return result;
     ap_log_rerror(LOG_MARK(ctx->info), APLOG_DEBUG, 0, ctx->r,
-                      "%s %% escape in unescape('%s') at %s:%d",
-		      ret == HTTP_BAD_REQUEST ? "Bad" : "Forbidden", arg,
-		      ctx->info->filename, ctx->info->line_number);
+                  "%s %% escape in unescape('%s') at %s:%d",
+                  ret == HTTP_BAD_REQUEST ? "Bad" : "Forbidden", arg,
+                  ctx->info->filename, ctx->info->line_number);
     return "";
 }
 
@@ -1055,7 +1055,7 @@ static int op_url_subr(ap_expr_eval_ctx_t *ctx, const void *data, const char *ar
     ap_log_rerror(LOG_MARK(ctx->info), APLOG_TRACE5, 0, r,
                   "Subrequest for -U %s at %s:%d gave status: %d",
                   arg, ctx->info->filename, ctx->info->line_number,
-		  rsub->status);
+                  rsub->status);
     ap_destroy_sub_req(rsub);
     return rc;
 }
@@ -1076,7 +1076,7 @@ static int op_file_subr(ap_expr_eval_ctx_t *ctx, const void *data, const char *a
     ap_log_rerror(LOG_MARK(ctx->info), APLOG_TRACE5, 0, r,
                   "Subrequest for -F %s at %s:%d gave status: %d",
                   arg, ctx->info->filename, ctx->info->line_number,
-		  rsub->status);
+                  rsub->status);
     ap_destroy_sub_req(rsub);
     return rc;
 }
diff --git a/support/ab.c b/support/ab.c
index 48caf8f2..61cfab1 100644
--- a/support/ab.c
+++ b/support/ab.c
@@ -1592,7 +1592,7 @@ static void test(void)
      */
     stats = calloc(requests, sizeof(struct data));
     if (stats == NULL || con == NULL) {
-    	err("Cannot allocate memory for result statistics");
+        err("Cannot allocate memory for result statistics");
     }
 
     if ((status = apr_pollset_create(&readbits, concurrency, cntxt,
