commit 2561cf806145b8a3a9c27b0a955565579be50dbe
Author: Chris Darroch <chrisd@apache.org>
Date:   Sun Nov 2 04:21:48 2008 +0000

    Remove mod_authn_default and mod_authz_default.
    
    Note: I've attempted to work through the Windows and Netware build files,
    but if those with such systems could repair any damage, that would be
    appreciated.
    
    
    git-svn-id: https://svn.apache.org/repos/asf/httpd/httpd/trunk@709839 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/Apache.dsw b/Apache.dsw
index 6061a42..9475b68 100644
--- a/Apache.dsw
+++ b/Apache.dsw
@@ -138,9 +138,6 @@ Package=<4>
     Project_Dep_Name mod_authn_dbm
     End Project Dependency
     Begin Project Dependency
-    Project_Dep_Name mod_authn_default
-    End Project Dependency
-    Begin Project Dependency
     Project_Dep_Name mod_authn_file
     End Project Dependency
     Begin Project Dependency
@@ -156,9 +153,6 @@ Package=<4>
     Project_Dep_Name mod_authz_dbm
     End Project Dependency
     Begin Project Dependency
-    Project_Dep_Name mod_authz_default
-    End Project Dependency
-    Begin Project Dependency
     Project_Dep_Name mod_authz_groupfile
     End Project Dependency
     Begin Project Dependency
@@ -1102,30 +1096,6 @@ Package=<4>
 
 ###############################################################################
 
-Project: "mod_authn_default"=.\modules\aaa\mod_authn_default.dsp - Package Owner=<4>
-
-Package=<5>
-{{{
-}}}
-
-Package=<4>
-{{{
-    Begin Project Dependency
-    Project_Dep_Name libapr
-    End Project Dependency
-    Begin Project Dependency
-    Project_Dep_Name libaprutil
-    End Project Dependency
-    Begin Project Dependency
-    Project_Dep_Name libhttpd
-    End Project Dependency
-    Begin Project Dependency
-    Project_Dep_Name mod_auth_basic
-    End Project Dependency
-}}}
-
-###############################################################################
-
 Project: "mod_authn_file"=.\modules\aaa\mod_authn_file.dsp - Package Owner=<4>
 
 Package=<5>
@@ -1249,30 +1219,6 @@ Package=<4>
 
 ###############################################################################
 
-Project: "mod_authz_default"=.\modules\aaa\mod_authz_default.dsp - Package Owner=<4>
-
-Package=<5>
-{{{
-}}}
-
-Package=<4>
-{{{
-    Begin Project Dependency
-    Project_Dep_Name libapr
-    End Project Dependency
-    Begin Project Dependency
-    Project_Dep_Name libaprutil
-    End Project Dependency
-    Begin Project Dependency
-    Project_Dep_Name libhttpd
-    End Project Dependency
-    Begin Project Dependency
-    Project_Dep_Name mod_auth_basic
-    End Project Dependency
-}}}
-
-###############################################################################
-
 Project: "mod_authz_groupfile"=.\modules\aaa\mod_authz_groupfile.dsp - Package Owner=<4>
 
 Package=<5>
diff --git a/CHANGES b/CHANGES
index a20a9ac..184c7b5 100644
--- a/CHANGES
+++ b/CHANGES
@@ -2,6 +2,9 @@
 Changes with Apache 2.3.0
 [ When backported to 2.2.x, remove entry from this file ]
 
+  *) authn/z: Remove mod_authn_default and mod_authz_default.
+     [Chris Darroch]
+
   *) authz: Fix handling of authz configurations, make default authz
      logic replicate 2.2.x authz logic, and replace <Satisfy*>, Reject,
      and AuthzMergeRules directives with Match, <Match*>, and AuthzMerge
diff --git a/Makefile.win b/Makefile.win
index 142af71..c831506 100644
--- a/Makefile.win
+++ b/Makefile.win
@@ -286,13 +286,11 @@ _build:
 	 $(MAKE) $(MAKEOPT) -f mod_authn_core.mak  CFG="mod_authn_core - Win32 $(LONG)" RECURSE=0 $(CTARGET)
 	 $(MAKE) $(MAKEOPT) -f mod_authn_dbd.mak   CFG="mod_authn_dbd - Win32 $(LONG)" RECURSE=0 $(CTARGET)
 	 $(MAKE) $(MAKEOPT) -f mod_authn_dbm.mak   CFG="mod_authn_dbm - Win32 $(LONG)" RECURSE=0 $(CTARGET)
-	 $(MAKE) $(MAKEOPT) -f mod_authn_default.mak CFG="mod_authn_default - Win32 $(LONG)" RECURSE=0 $(CTARGET)
 	 $(MAKE) $(MAKEOPT) -f mod_authn_file.mak  CFG="mod_authn_file - Win32 $(LONG)" RECURSE=0 $(CTARGET)
 	 $(MAKE) $(MAKEOPT) -f mod_authnz_ldap.mak CFG="mod_authnz_ldap - Win32 $(LONG)" RECURSE=0 $(CTARGET)
 	 $(MAKE) $(MAKEOPT) -f mod_authz_core.mak  CFG="mod_authz_core - Win32 $(LONG)" RECURSE=0 $(CTARGET)
 	 $(MAKE) $(MAKEOPT) -f mod_authz_dbd.mak   CFG="mod_authz_dbd - Win32 $(LONG)" RECURSE=0 $(CTARGET)
 	 $(MAKE) $(MAKEOPT) -f mod_authz_dbm.mak   CFG="mod_authz_dbm - Win32 $(LONG)" RECURSE=0 $(CTARGET)
-	 $(MAKE) $(MAKEOPT) -f mod_authz_default.mak CFG="mod_authz_default - Win32 $(LONG)" RECURSE=0 $(CTARGET)
 	 $(MAKE) $(MAKEOPT) -f mod_authz_groupfile.mak CFG="mod_authz_groupfile - Win32 $(LONG)" RECURSE=0 $(CTARGET)
 	 $(MAKE) $(MAKEOPT) -f mod_authz_host.mak  CFG="mod_authz_host - Win32 $(LONG)" RECURSE=0 $(CTARGET)
 	 $(MAKE) $(MAKEOPT) -f mod_authz_owner.mak CFG="mod_authz_owner - Win32 $(LONG)" RECURSE=0 $(CTARGET)
@@ -513,14 +511,12 @@ _copybin:
 	copy modules\aaa\$(LONG)\mod_authn_core.$(src_so) 	"$(inst_so)" <.y
 	copy modules\aaa\$(LONG)\mod_authn_dbd.$(src_so) 	"$(inst_so)" <.y
 	copy modules\aaa\$(LONG)\mod_authn_dbm.$(src_so) 	"$(inst_so)" <.y
-	copy modules\aaa\$(LONG)\mod_authn_default.$(src_so) 	"$(inst_so)" <.y
 	copy modules\aaa\$(LONG)\mod_authn_file.$(src_so) 	"$(inst_so)" <.y
 	copy modules\aaa\$(LONG)\mod_authnz_ldap.$(src_so)	"$(inst_so)" <.y
 	copy modules\aaa\$(LONG)\mod_authz_core.$(src_so) 	"$(inst_so)" <.y
 	copy modules\aaa\$(LONG)\mod_authz_dbd.$(src_so) 	"$(inst_so)" <.y
 	copy modules\aaa\$(LONG)\mod_authz_dbm.$(src_so) 	"$(inst_so)" <.y
 	copy modules\aaa\$(LONG)\mod_authz_core.$(src_so) 	"$(inst_so)" <.y
-	copy modules\aaa\$(LONG)\mod_authz_default.$(src_so) 	"$(inst_so)" <.y
 	copy modules\aaa\$(LONG)\mod_authz_groupfile.$(src_so) 	"$(inst_so)" <.y
 	copy modules\aaa\$(LONG)\mod_authz_host.$(src_so) 	"$(inst_so)" <.y
 	copy modules\aaa\$(LONG)\mod_authz_owner.$(src_so) 	"$(inst_so)" <.y
diff --git a/NWGNUmakefile b/NWGNUmakefile
index e87c7b1..bdc9a6c 100644
--- a/NWGNUmakefile
+++ b/NWGNUmakefile
@@ -211,9 +211,7 @@ FILES_nlm_objs = \
 	$(OBJDIR)/log.o \
 	$(OBJDIR)/main.o \
 	$(OBJDIR)/mod_authn_core.o \
-	$(OBJDIR)/mod_authn_default.o \
 	$(OBJDIR)/mod_authz_core.o \
-	$(OBJDIR)/mod_authz_default.o \
 	$(OBJDIR)/mod_authz_host.o \
 	$(OBJDIR)/mod_alias.o \
 	$(OBJDIR)/mod_dir.o \
diff --git a/build/installwinconf.awk b/build/installwinconf.awk
index 1b62db0..b5d8777 100644
--- a/build/installwinconf.awk
+++ b/build/installwinconf.awk
@@ -101,13 +101,11 @@ BEGIN {
 	  print "LoadModule authn_core_module modules/mod_authn_core.so" > dstfl;
 	  print "#LoadModule authn_dbd_module modules/mod_authn_dbd.so" > dstfl;
 	  print "#LoadModule authn_dbm_module modules/mod_authn_dbm.so" > dstfl;
-	  print "LoadModule authn_default_module modules/mod_authn_default.so" > dstfl;
 	  print "LoadModule authn_file_module modules/mod_authn_file.so" > dstfl;
 	  print "#LoadModule authnz_ldap_module modules/mod_authnz_ldap.so" > dstfl;
 	  print "LoadModule authz_core_module modules/mod_authz_core.so" > dstfl;
 	  print "#LoadModule authz_dbd_module modules/mod_authz_dbd.so" > dstfl;
 	  print "#LoadModule authz_dbm_module modules/mod_authz_dbm.so" > dstfl;
-	  print "LoadModule authz_default_module modules/mod_authz_default.so" > dstfl;
 	  print "LoadModule authz_groupfile_module modules/mod_authz_groupfile.so" > dstfl;
 	  print "LoadModule authz_host_module modules/mod_authz_host.so" > dstfl;
 	  print "#LoadModule authz_owner_module modules/mod_authz_owner.so" > dstfl;
diff --git a/build/mkconfNW.awk b/build/mkconfNW.awk
index f3926a8..b441cfa 100644
--- a/build/mkconfNW.awk
+++ b/build/mkconfNW.awk
@@ -49,11 +49,9 @@ BEGIN {
     print "#LoadModule authn_anon_module modules/authnano.nlm"
     print "#LoadModule authn_dbd_module modules/authndbd.nlm"
     print "#LoadModule authn_dbm_module modules/authndbm.nlm"
-    print "#LoadModule authn_default_module modules/authndef.nlm"
     print "#LoadModule authn_file_module modules/authnfil.nlm"
     print "#LoadModule authz_dbd_module modules/authzdbd.nlm"
     print "#LoadModule authz_dbm_module modules/authzdbm.nlm"
-    print "#LoadModule authz_default_module modules/authzdef.nlm"
     print "#LoadModule authz_groupfile_module modules/authzgrp.nlm"
     print "#LoadModule authz_user_module modules/authzusr.nlm"
     print "#LoadModule authnz_ldap_module modules/authnzldap.nlm"
diff --git a/modules/aaa/config.m4 b/modules/aaa/config.m4
index 857977e..414c012 100644
--- a/modules/aaa/config.m4
+++ b/modules/aaa/config.m4
@@ -14,10 +14,6 @@ APACHE_MODULE(authn_dbm, DBM-based authentication control, , , most)
 APACHE_MODULE(authn_anon, anonymous user authentication control, , , most)
 APACHE_MODULE(authn_dbd, SQL-based authentication control, , , most)
 
-dnl - and just in case all of the above punt; a default handler to
-dnl keep the bad guys out.
-APACHE_MODULE(authn_default, authentication backstopper, , , yes)
-
 dnl General Authentication modules; module which implements the 
 dnl non-authn module specific directives.
 dnl
@@ -47,10 +43,6 @@ APACHE_MODULE(authnz_ldap, LDAP based authentication, , , no, [
   AC_SUBST(MOD_AUTHNZ_LDAP_LDADD)
 ])
 
-dnl - and just in case all of the above punt; a default handler to
-dnl keep the bad guys out.
-APACHE_MODULE(authz_default, authorization control backstopper, , , yes)
-
 dnl - host access control compatibility modules. Implements Order, Allow,
 dnl Deny, Satisfy for backward compatibility.  These directives have been
 dnl deprecated in 2.4.
diff --git a/modules/aaa/mod_authn_default.c b/modules/aaa/mod_authn_default.c
deleted file mode 100644
index 0155c6e..0000000
--- a/modules/aaa/mod_authn_default.c
+++ /dev/null
@@ -1,106 +0,0 @@
-/* Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-#include "apr_strings.h"
-#define APR_WANT_STRFUNC
-#include "apr_want.h"
-
-#include "ap_config.h"
-#include "httpd.h"
-#include "http_config.h"
-#include "http_core.h"
-#include "http_log.h"
-#include "http_protocol.h"
-#include "http_request.h"
-
-typedef struct {
-    int authoritative;
-} authn_default_config_rec;
-
-static void *create_authn_default_dir_config(apr_pool_t *p, char *d)
-{
-    authn_default_config_rec *conf = apr_palloc(p, sizeof(*conf));
-
-    conf->authoritative = 1; /* keep the fortress secure by default */
-    return conf;
-}
-
-static const command_rec authn_default_cmds[] =
-{
-    AP_INIT_FLAG("AuthDefaultAuthoritative", ap_set_flag_slot,
-                 (void *)APR_OFFSETOF(authn_default_config_rec,
-                                      authoritative),
-                 OR_AUTHCFG,
-                 "Set to 'Off' to allow access control to be passed along to "
-                 "lower modules if the UserID is not known to this module. "
-                         "(default is On)."),
-    {NULL}
-};
-
-module AP_MODULE_DECLARE_DATA authn_default_module;
-
-static int authenticate_no_user(request_rec *r)
-{
-    authn_default_config_rec *conf = ap_get_module_config(r->per_dir_config,
-                                                      &authn_default_module);
-
-    const char *type;
-
-    /* if there isn't an auth_type, then assume that no authentication
-        is require so return OK */
-    if (!(type = ap_auth_type(r))) {
-        return OK;
-    }
-
-    /* fill in the r->user field */
-    if (!strcasecmp(type, "Basic")) {
-        const char *sent_pw;
-        int res;
-
-        if ((res = ap_get_basic_auth_pw(r, &sent_pw)) != OK) {
-            return res;
-        }
-    }
-
-    if (conf->authoritative == 0) {
-        return DECLINED;
-    }
-
-    ap_log_rerror(APLOG_MARK, APLOG_ERR, 0, r,
-                  "access to %s failed, reason: verification of user id '%s' "
-                  "not configured",
-                  r->uri, r->user ? r->user : "<null>");
-
-    ap_note_auth_failure(r);
-    return HTTP_UNAUTHORIZED;
-}
-
-static void register_hooks(apr_pool_t *p)
-{
-    ap_hook_check_authn(authenticate_no_user, NULL, NULL, APR_HOOK_LAST,
-                        AP_AUTH_INTERNAL_PER_CONF);
-}
-
-module AP_MODULE_DECLARE_DATA authn_default_module =
-{
-    STANDARD20_MODULE_STUFF,
-    create_authn_default_dir_config,/* dir config creater */
-    NULL,                           /* dir merger --- default is to override */
-    NULL,                           /* server config */
-    NULL,                           /* merge server config */
-    authn_default_cmds,             /* command apr_table_t */
-    register_hooks                  /* register hooks */
-};
diff --git a/modules/aaa/mod_authn_default.dsp b/modules/aaa/mod_authn_default.dsp
deleted file mode 100644
index 89d55b0..0000000
--- a/modules/aaa/mod_authn_default.dsp
+++ /dev/null
@@ -1,111 +0,0 @@
-# Microsoft Developer Studio Project File - Name="mod_authn_default" - Package Owner=<4>
-# Microsoft Developer Studio Generated Build File, Format Version 6.00
-# ** DO NOT EDIT **
-
-# TARGTYPE "Win32 (x86) Dynamic-Link Library" 0x0102
-
-CFG=mod_authn_default - Win32 Debug
-!MESSAGE This is not a valid makefile. To build this project using NMAKE,
-!MESSAGE use the Export Makefile command and run
-!MESSAGE 
-!MESSAGE NMAKE /f "mod_authn_default.mak".
-!MESSAGE 
-!MESSAGE You can specify a configuration when running NMAKE
-!MESSAGE by defining the macro CFG on the command line. For example:
-!MESSAGE 
-!MESSAGE NMAKE /f "mod_authn_default.mak" CFG="mod_authn_default - Win32 Debug"
-!MESSAGE 
-!MESSAGE Possible choices for configuration are:
-!MESSAGE 
-!MESSAGE "mod_authn_default - Win32 Release" (based on "Win32 (x86) Dynamic-Link Library")
-!MESSAGE "mod_authn_default - Win32 Debug" (based on "Win32 (x86) Dynamic-Link Library")
-!MESSAGE 
-
-# Begin Project
-# PROP AllowPerConfigDependencies 0
-# PROP Scc_ProjName ""
-# PROP Scc_LocalPath ""
-CPP=cl.exe
-MTL=midl.exe
-RSC=rc.exe
-
-!IF  "$(CFG)" == "mod_authn_default - Win32 Release"
-
-# PROP BASE Use_MFC 0
-# PROP BASE Use_Debug_Libraries 0
-# PROP BASE Output_Dir "Release"
-# PROP BASE Intermediate_Dir "Release"
-# PROP BASE Target_Dir ""
-# PROP Use_MFC 0
-# PROP Use_Debug_Libraries 0
-# PROP Output_Dir "Release"
-# PROP Intermediate_Dir "Release"
-# PROP Ignore_Export_Lib 0
-# PROP Target_Dir ""
-# ADD BASE CPP /nologo /MD /W3 /O2 /D "WIN32" /D "NDEBUG" /D "_WINDOWS" /FD /c
-# ADD CPP /nologo /MD /W3 /O2 /Oy- /Zi /I "../../include" /I "../../srclib/apr/include" /I "../../srclib/apr-util/include" /D "NDEBUG" /D "WIN32" /D "_WINDOWS" /Fd"Release\mod_authn_default_src" /FD /c
-# ADD BASE MTL /nologo /D "NDEBUG" /mktyplib203 /o /win32 "NUL"
-# ADD MTL /nologo /D "NDEBUG" /mktyplib203 /o /win32 "NUL"
-# ADD BASE RSC /l 0x409 /d "NDEBUG"
-# ADD RSC /l 0x409 /fo"Release/mod_authn_default.res" /i "../../include" /i "../../srclib/apr/include" /d "NDEBUG" /d BIN_NAME="mod_authn_default.so" /d LONG_NAME="authn_default_module for Apache"
-BSC32=bscmake.exe
-# ADD BASE BSC32 /nologo
-# ADD BSC32 /nologo
-LINK32=link.exe
-# ADD BASE LINK32 kernel32.lib /nologo /subsystem:windows /dll /out:".\Release\mod_authn_default.so" /base:@..\..\os\win32\BaseAddr.ref,mod_authn_default.so
-# ADD LINK32 kernel32.lib /nologo /subsystem:windows /dll /incremental:no /debug /out:".\Release\mod_authn_default.so" /base:@..\..\os\win32\BaseAddr.ref,mod_authn_default.so /opt:ref
-# Begin Special Build Tool
-TargetPath=.\Release\mod_authn_default.so
-SOURCE="$(InputPath)"
-PostBuild_Desc=Embed .manifest
-PostBuild_Cmds=if exist $(TargetPath).manifest mt.exe -manifest $(TargetPath).manifest -outputresource:$(TargetPath);2
-# End Special Build Tool
-
-!ELSEIF  "$(CFG)" == "mod_authn_default - Win32 Debug"
-
-# PROP BASE Use_MFC 0
-# PROP BASE Use_Debug_Libraries 1
-# PROP BASE Output_Dir "Debug"
-# PROP BASE Intermediate_Dir "Debug"
-# PROP BASE Target_Dir ""
-# PROP Use_MFC 0
-# PROP Use_Debug_Libraries 1
-# PROP Output_Dir "Debug"
-# PROP Intermediate_Dir "Debug"
-# PROP Ignore_Export_Lib 0
-# PROP Target_Dir ""
-# ADD BASE CPP /nologo /MDd /W3 /EHsc /Zi /Od /D "WIN32" /D "_DEBUG" /D "_WINDOWS" /FD /c
-# ADD CPP /nologo /MDd /W3 /EHsc /Zi /Od /I "../../include" /I "../../srclib/apr/include" /I "../../srclib/apr-util/include" /D "_DEBUG" /D "WIN32" /D "_WINDOWS" /Fd"Debug\mod_authn_default_src" /FD /c
-# ADD BASE MTL /nologo /D "_DEBUG" /mktyplib203 /o /win32 "NUL"
-# ADD MTL /nologo /D "_DEBUG" /mktyplib203 /o /win32 "NUL"
-# ADD BASE RSC /l 0x409 /d "_DEBUG"
-# ADD RSC /l 0x409 /fo"Debug/mod_authn_default.res" /i "../../include" /i "../../srclib/apr/include" /d "_DEBUG" /d BIN_NAME="mod_authn_default.so" /d LONG_NAME="authn_default_module for Apache"
-BSC32=bscmake.exe
-# ADD BASE BSC32 /nologo
-# ADD BSC32 /nologo
-LINK32=link.exe
-# ADD BASE LINK32 kernel32.lib /nologo /subsystem:windows /dll /incremental:no /debug /out:".\Debug\mod_authn_default.so" /base:@..\..\os\win32\BaseAddr.ref,mod_authn_default.so
-# ADD LINK32 kernel32.lib /nologo /subsystem:windows /dll /incremental:no /debug /out:".\Debug\mod_authn_default.so" /base:@..\..\os\win32\BaseAddr.ref,mod_authn_default.so
-# Begin Special Build Tool
-TargetPath=.\Debug\mod_authn_default.so
-SOURCE="$(InputPath)"
-PostBuild_Desc=Embed .manifest
-PostBuild_Cmds=if exist $(TargetPath).manifest mt.exe -manifest $(TargetPath).manifest -outputresource:$(TargetPath);2
-# End Special Build Tool
-
-!ENDIF 
-
-# Begin Target
-
-# Name "mod_authn_default - Win32 Release"
-# Name "mod_authn_default - Win32 Debug"
-# Begin Source File
-
-SOURCE=.\mod_authn_default.c
-# End Source File
-# Begin Source File
-
-SOURCE=..\..\build\win32\httpd.rc
-# End Source File
-# End Target
-# End Project
diff --git a/modules/aaa/mod_authz_default.c b/modules/aaa/mod_authz_default.c
deleted file mode 100644
index 357db21..0000000
--- a/modules/aaa/mod_authz_default.c
+++ /dev/null
@@ -1,99 +0,0 @@
-/* Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-#include "apr_strings.h"
-#include "apr_md5.h"            /* for apr_password_validate */
-
-#include "ap_config.h"
-#include "httpd.h"
-#include "http_config.h"
-#include "http_core.h"
-#include "http_log.h"
-#include "http_protocol.h"
-#include "http_request.h"
-
-#include "mod_auth.h"
-
-
-typedef struct {
-    int authoritative;
-} authz_default_config_rec;
-
-static void *create_authz_default_dir_config(apr_pool_t *p, char *d)
-{
-    authz_default_config_rec *conf = apr_palloc(p, sizeof(*conf));
-
-    conf->authoritative = 1; /* keep the fortress secure by default */
-    return conf;
-}
-
-static const command_rec authz_default_cmds[] =
-{
-    AP_INIT_FLAG("AuthzDefaultAuthoritative", ap_set_flag_slot,
-                 (void *)APR_OFFSETOF(authz_default_config_rec, authoritative),
-                 OR_AUTHCFG,
-                 "Set to 'Off' to allow access control to be passed along to "
-                 "lower modules. (default is On.)"),
-    {NULL}
-};
-
-module AP_MODULE_DECLARE_DATA authz_default_module;
-
-static int check_user_access(request_rec *r)
-{
-    authz_default_config_rec *conf = ap_get_module_config(r->per_dir_config,
-                                                 &authz_default_module);
-
-    /* If we got here and there isn't any authz required, assume access is OK */
-    if (!ap_some_auth_required(r)) {
-        return OK;
-    }
-
-    if (!(conf->authoritative)) {
-        return DECLINED;
-    }
-
-    /* if we aren't authoritative, any require directive could be
-     * considered valid even if noone groked it.  However, if we are
-     * authoritative, we can warn the user they did something wrong.
-     *
-     * That something could be a missing "AuthAuthoritative off", but
-     * more likely is a typo in the require directive.
-     */
-    ap_log_rerror(APLOG_MARK, APLOG_ERR, 0, r,
-                          "access to %s failed, reason: require directives "
-                          "present and no Authoritative handler.", r->uri);
-
-    ap_note_auth_failure(r);
-    return HTTP_UNAUTHORIZED;
-}
-
-static void register_hooks(apr_pool_t *p)
-{
-    ap_hook_check_authz(check_user_access, NULL, NULL, APR_HOOK_LAST,
-                        AP_AUTH_INTERNAL_PER_CONF);
-}
-
-module AP_MODULE_DECLARE_DATA authz_default_module =
-{
-    STANDARD20_MODULE_STUFF,
-    create_authz_default_dir_config, /* dir config creater */
-    NULL,                            /* dir merger --- default is to override */
-    NULL,                            /* server config */
-    NULL,                            /* merge server config */
-    authz_default_cmds,              /* command apr_table_t */
-    register_hooks                   /* register hooks */
-};
diff --git a/modules/aaa/mod_authz_default.dsp b/modules/aaa/mod_authz_default.dsp
deleted file mode 100644
index b02dca4..0000000
--- a/modules/aaa/mod_authz_default.dsp
+++ /dev/null
@@ -1,111 +0,0 @@
-# Microsoft Developer Studio Project File - Name="mod_authz_default" - Package Owner=<4>
-# Microsoft Developer Studio Generated Build File, Format Version 6.00
-# ** DO NOT EDIT **
-
-# TARGTYPE "Win32 (x86) Dynamic-Link Library" 0x0102
-
-CFG=mod_authz_default - Win32 Debug
-!MESSAGE This is not a valid makefile. To build this project using NMAKE,
-!MESSAGE use the Export Makefile command and run
-!MESSAGE 
-!MESSAGE NMAKE /f "mod_authz_default.mak".
-!MESSAGE 
-!MESSAGE You can specify a configuration when running NMAKE
-!MESSAGE by defining the macro CFG on the command line. For example:
-!MESSAGE 
-!MESSAGE NMAKE /f "mod_authz_default.mak" CFG="mod_authz_default - Win32 Debug"
-!MESSAGE 
-!MESSAGE Possible choices for configuration are:
-!MESSAGE 
-!MESSAGE "mod_authz_default - Win32 Release" (based on "Win32 (x86) Dynamic-Link Library")
-!MESSAGE "mod_authz_default - Win32 Debug" (based on "Win32 (x86) Dynamic-Link Library")
-!MESSAGE 
-
-# Begin Project
-# PROP AllowPerConfigDependencies 0
-# PROP Scc_ProjName ""
-# PROP Scc_LocalPath ""
-CPP=cl.exe
-MTL=midl.exe
-RSC=rc.exe
-
-!IF  "$(CFG)" == "mod_authz_default - Win32 Release"
-
-# PROP BASE Use_MFC 0
-# PROP BASE Use_Debug_Libraries 0
-# PROP BASE Output_Dir "Release"
-# PROP BASE Intermediate_Dir "Release"
-# PROP BASE Target_Dir ""
-# PROP Use_MFC 0
-# PROP Use_Debug_Libraries 0
-# PROP Output_Dir "Release"
-# PROP Intermediate_Dir "Release"
-# PROP Ignore_Export_Lib 0
-# PROP Target_Dir ""
-# ADD BASE CPP /nologo /MD /W3 /O2 /D "WIN32" /D "NDEBUG" /D "_WINDOWS" /FD /c
-# ADD CPP /nologo /MD /W3 /O2 /Oy- /Zi /I "../../include" /I "../../srclib/apr/include" /I "../../srclib/apr-util/include" /D "NDEBUG" /D "WIN32" /D "_WINDOWS" /Fd"Release\mod_authz_default_src" /FD /c
-# ADD BASE MTL /nologo /D "NDEBUG" /mktyplib203 /o /win32 "NUL"
-# ADD MTL /nologo /D "NDEBUG" /mktyplib203 /o /win32 "NUL"
-# ADD BASE RSC /l 0x409 /d "NDEBUG"
-# ADD RSC /l 0x409 /fo"Release/mod_authz_default.res" /i "../../include" /i "../../srclib/apr/include" /d "NDEBUG" /d BIN_NAME="mod_authz_default.so" /d LONG_NAME="authz_default_module for Apache"
-BSC32=bscmake.exe
-# ADD BASE BSC32 /nologo
-# ADD BSC32 /nologo
-LINK32=link.exe
-# ADD BASE LINK32 kernel32.lib /nologo /subsystem:windows /dll /out:".\Release\mod_authz_default.so" /base:@..\..\os\win32\BaseAddr.ref,mod_authz_default.so
-# ADD LINK32 kernel32.lib /nologo /subsystem:windows /dll /incremental:no /debug /out:".\Release\mod_authz_default.so" /base:@..\..\os\win32\BaseAddr.ref,mod_authz_default.so /opt:ref
-# Begin Special Build Tool
-TargetPath=.\Release\mod_authz_default.so
-SOURCE="$(InputPath)"
-PostBuild_Desc=Embed .manifest
-PostBuild_Cmds=if exist $(TargetPath).manifest mt.exe -manifest $(TargetPath).manifest -outputresource:$(TargetPath);2
-# End Special Build Tool
-
-!ELSEIF  "$(CFG)" == "mod_authz_default - Win32 Debug"
-
-# PROP BASE Use_MFC 0
-# PROP BASE Use_Debug_Libraries 1
-# PROP BASE Output_Dir "Debug"
-# PROP BASE Intermediate_Dir "Debug"
-# PROP BASE Target_Dir ""
-# PROP Use_MFC 0
-# PROP Use_Debug_Libraries 1
-# PROP Output_Dir "Debug"
-# PROP Intermediate_Dir "Debug"
-# PROP Ignore_Export_Lib 0
-# PROP Target_Dir ""
-# ADD BASE CPP /nologo /MDd /W3 /EHsc /Zi /Od /D "WIN32" /D "_DEBUG" /D "_WINDOWS" /FD /c
-# ADD CPP /nologo /MDd /W3 /EHsc /Zi /Od /I "../../include" /I "../../srclib/apr/include" /I "../../srclib/apr-util/include" /D "_DEBUG" /D "WIN32" /D "_WINDOWS" /Fd"Debug\mod_authz_default_src" /FD /c
-# ADD BASE MTL /nologo /D "_DEBUG" /mktyplib203 /o /win32 "NUL"
-# ADD MTL /nologo /D "_DEBUG" /mktyplib203 /o /win32 "NUL"
-# ADD BASE RSC /l 0x409 /d "_DEBUG"
-# ADD RSC /l 0x409 /fo"Debug/mod_authz_default.res" /i "../../include" /i "../../srclib/apr/include" /d "_DEBUG" /d BIN_NAME="mod_authz_default.so" /d LONG_NAME="authz_default_module for Apache"
-BSC32=bscmake.exe
-# ADD BASE BSC32 /nologo
-# ADD BSC32 /nologo
-LINK32=link.exe
-# ADD BASE LINK32 kernel32.lib /nologo /subsystem:windows /dll /incremental:no /debug /out:".\Debug\mod_authz_default.so" /base:@..\..\os\win32\BaseAddr.ref,mod_authz_default.so
-# ADD LINK32 kernel32.lib /nologo /subsystem:windows /dll /incremental:no /debug /out:".\Debug\mod_authz_default.so" /base:@..\..\os\win32\BaseAddr.ref,mod_authz_default.so
-# Begin Special Build Tool
-TargetPath=.\Debug\mod_authz_default.so
-SOURCE="$(InputPath)"
-PostBuild_Desc=Embed .manifest
-PostBuild_Cmds=if exist $(TargetPath).manifest mt.exe -manifest $(TargetPath).manifest -outputresource:$(TargetPath);2
-# End Special Build Tool
-
-!ENDIF 
-
-# Begin Target
-
-# Name "mod_authz_default - Win32 Release"
-# Name "mod_authz_default - Win32 Debug"
-# Begin Source File
-
-SOURCE=.\mod_authz_default.c
-# End Source File
-# Begin Source File
-
-SOURCE=..\..\build\win32\httpd.rc
-# End Source File
-# End Target
-# End Project
diff --git a/modules/arch/netware/mod_authn_default.def b/modules/arch/netware/mod_authn_default.def
deleted file mode 100644
index fb94aa3..0000000
--- a/modules/arch/netware/mod_authn_default.def
+++ /dev/null
@@ -1 +0,0 @@
-EXPORT  authn_default_module
diff --git a/modules/arch/netware/mod_authz_default.def b/modules/arch/netware/mod_authz_default.def
deleted file mode 100644
index 164564f..0000000
--- a/modules/arch/netware/mod_authz_default.def
+++ /dev/null
@@ -1 +0,0 @@
-EXPORT  authz_default_module
diff --git a/os/netware/modules.c b/os/netware/modules.c
index 4ef2fe8..261daeb 100644
--- a/os/netware/modules.c
+++ b/os/netware/modules.c
@@ -29,9 +29,7 @@ extern module http_module;
 extern module so_module;
 extern module mime_module;
 extern module authn_core_module;
-extern module authn_default_module;
 extern module authz_core_module;
-extern module authz_default_module;
 extern module authz_host_module;
 extern module negotiation_module;
 extern module include_module;
@@ -52,9 +50,7 @@ module *ap_prelinked_modules[] = {
   &so_module,
   &mime_module,
   &authn_core_module,
-  &authn_default_module,
   &authz_core_module,
-  &authz_default_module,
   &authz_host_module,
   &negotiation_module,
   &include_module,
@@ -77,9 +73,7 @@ ap_module_symbol_t ap_prelinked_module_symbols[] = {
   {"so_module", &so_module},
   {"mime_module", &mime_module},
   {"authn_core_module", &authn_core_module},
-  {"authn_default_module", &authn_default_module},
   {"authz_core_module", &authz_core_module},
-  {"authz_default_module", &authz_default_module},
   {"authz_host_module", &authz_host_module},
   {"negotiation_module", &negotiation_module},
   {"include_module", &include_module},
@@ -102,9 +96,7 @@ module *ap_preloaded_modules[] = {
   &so_module,
   &mime_module,
   &authn_core_module,
-  &authn_default_module,
   &authz_core_module,
-  &authz_default_module,
   &authz_host_module,
   &negotiation_module,
   &include_module,
diff --git a/os/win32/BaseAddr.ref b/os/win32/BaseAddr.ref
index 02bcb34..323eb1c 100644
--- a/os/win32/BaseAddr.ref
+++ b/os/win32/BaseAddr.ref
@@ -52,10 +52,8 @@ mod_ext_filter.so       0x6FB90000    0x00010000
 mod_charset_lite.so     0x6FB80000    0x00010000
 mod_authn_anon.so       0x6FB70000    0x00010000
 mod_authn_dbm.so        0x6FB60000    0x00010000
-mod_authn_default.so    0x6FB50000    0x00010000
 mod_authn_file.so       0x6FB40000    0x00010000
 mod_authz_dbm.so        0x6FB30000    0x00010000
-mod_authz_default.so    0x6FB20000    0x00010000
 mod_authz_groupfile.so  0x6FB10000    0x00010000
 mod_authz_host.so       0x6FB00000    0x00010000
 mod_authz_user.so       0x6FAF0000    0x00010000
